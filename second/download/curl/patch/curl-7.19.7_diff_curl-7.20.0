diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/acinclude.m4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/acinclude.m4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/acinclude.m4	2009-09-03 05:05:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/acinclude.m4	2010-01-15 06:21:48.000000000 +0800
@@ -15,13 +15,13 @@
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: acinclude.m4,v 1.239 2009-09-02 17:48:26 bagder Exp $
+# $Id: acinclude.m4,v 1.240 2010-01-14 01:37:55 kdudka Exp $
 #***************************************************************************
 
 
 dnl CURL_CHECK_DEF (SYMBOL, [INCLUDES], [SILENT])
 dnl -------------------------------------------------
 dnl Use the C preprocessor to find out if the given object-style symbol
@@ -3187,20 +3187,37 @@
     *)
       AC_MSG_RESULT([no])
       ;;
   esac
 ])
 
-dnl CURL_CHECK_PKGCONFIG ($module)
+dnl CURL_EXPORT_PCDIR ($pcdir)
+dnl ------------------------
+dnl if $pcdir is not empty, set PKG_CONFIG_LIBDIR to $pcdir and export
+dnl
+dnl we need this macro since pkg-config distinguishes among empty and unset
+dnl variable while checking PKG_CONFIG_LIBDIR
+dnl
+
+AC_DEFUN([CURL_EXPORT_PCDIR], [
+    if test -n "$1"; then
+      PKG_CONFIG_LIBDIR="$1"
+      export PKG_CONFIG_LIBDIR
+    fi
+])
+
+dnl CURL_CHECK_PKGCONFIG ($module, [$pcdir])
 dnl ------------------------
 dnl search for the pkg-config tool (if not cross-compiling). Set the PKGCONFIG
 dnl variable to hold the path to it, or 'no' if not found/present.
 dnl
 dnl If pkg-config is present, check that it has info about the $module or
 dnl return "no" anyway!
 dnl
+dnl Optionally PKG_CONFIG_LIBDIR may be given as $pcdir.
+dnl
 
 AC_DEFUN([CURL_CHECK_PKGCONFIG], [
 
     PKGCONFIG="no"
 
     if test x$cross_compiling = xyes; then
@@ -3213,14 +3230,16 @@
       AC_PATH_PROG( PKGCONFIG, pkg-config, no, $PATH:/usr/bin:/usr/local/bin)
     fi
 
     if test x$PKGCONFIG != xno; then
       AC_MSG_CHECKING([for $1 options with pkg-config])
       dnl ask pkg-config about $1
-      $PKGCONFIG --exists $1
-      if test "$?" -ne "0"; then
+      itexists=`CURL_EXPORT_PCDIR([$2]) dnl
+        $PKGCONFIG --exists $1 >/dev/null 2>&1 && echo 1`
+
+      if test -z "$itexists"; then
         dnl pkg-config does not have info about the given module! set the
         dnl variable to 'no'
         PKGCONFIG="no"
         AC_MSG_RESULT([no])
       else
         AC_MSG_RESULT([found])
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/buildconf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/buildconf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/buildconf	2009-07-23 04:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/buildconf	2009-11-18 00:43:31.000000000 +0800
@@ -16,13 +16,13 @@
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: buildconf,v 1.81 2009-07-14 13:25:14 gknauf Exp $
+# $Id: buildconf,v 1.82 2009-11-15 03:46:14 yangtse Exp $
 ###########################################################################
 
 die(){
 	echo "$@"
 	exit
 }
@@ -264,12 +264,14 @@
     *.o \
     Makefile \
     Makefile.in \
     aclocal.m4 \
     aclocal.m4.bak \
     ares_build.h \
+    ares_config.h \
+    ares_config.h.in \
     autom4te.cache \
     compile \
     config.guess \
     curl_config.h \
     curl_config.h.in \
     config.log \
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7: ChangeLog
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/CHANGES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/CHANGES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/CHANGES	2009-11-04 20:20:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/CHANGES	2010-02-09 17:43:48.000000000 +0800
@@ -3,12 +3,437 @@
                              / __| | | | |_) | |
                             | (__| |_| |  _ <| |___
                              \___|\___/|_| \_\_____|
 
                                   Changelog
 
+Version 7.20.0 (9 February 2010)
+
+Daniel Stenberg (9 Feb 2010)
+- When downloading compressed content over HTTP and the app asked libcurl to
+  automatically uncompress it with the CURLOPT_ENCODING option, libcurl could
+  wrongly provide the callback with more data than the maximum documented
+  amount. An application could thus get tricked into badness if the maximum
+  limit was trusted to be enforced by libcurl itself (as it is documented).
+
+  This is further detailed and explained in the libcurl security advisory
+  20100209 at
+
+    http://curl.haxx.se/docs/adv_20100209.html
+
+Daniel Fandrich (3 Feb 2010)
+- Changed the Watcom makefiles to make them easier to keep in sync with
+  Makefile.inc since that can't be included directly.
+
+Yang Tse (2 Feb 2010)
+- Symbol CURL_FORMAT_OFF_T now obsoleted, will be removed in a future release,
+  symbol will not be available when building with CURL_NO_OLDIES defined. Use
+  of CURL_FORMAT_CURL_OFF_T is preferred since 7.19.0
+
+Daniel Stenberg (1 Feb 2010)
+- Using the multi_socket API, it turns out at times it seemed to "forget"
+  connections (which caused a hang). It turned out to be an existing (7.19.7)
+  bug in libcurl (that's been around for a long time) and it happened like
+  this:
+
+  The app calls curl_multi_add_handle() to add a new easy handle, libcurl will
+  then set it to timeout in 1 millisecond so libcurl will tell the app about
+  it.
+
+  The app's timeout fires off that there's a timeout, the app calls libcurl as
+  we so often document it:
+
+  do {
+   res = curl_multi_socket_action(... TIMEOUT ...);
+  } while(CURLM_CALL_MULTI_PERFORM == res);
+
+  And this is the problem number one:
+
+  When curl_multi_socket_action() is called with no specific handle, but only
+  a timeout-action, it will *only* perform actions within libcurl that are
+  marked to run at this time. In this case, the request would go from INIT to
+  CONNECT and return CURLM_CALL_MULTI_PERFORM. When the app then calls libcurl
+  again, there's no timer set for this handle so it remains in the CONNECT
+  state. The CONNECT state is a transitional state in libcurl so it reports no
+  sockets there, and thus libcurl never tells the app anything more about that
+  easy handle/connection.
+
+  libcurl _does_ set a 1ms timeout for the handle at the end of
+  multi_runsingle() if it returns CURLM_CALL_MULTI_PERFORM, but since the loop
+  is instant the new job is not ready to run at that point (and there's no
+  code that makes libcurl call the app to update the timout for this new
+  timeout). It will simply rely on that some other timeout will trigger later
+  on or that something else will update the timeout callback. This makes the
+  bug fairly hard to repeat.
+
+  The fix made to adress this issue:
+
+  We introduce a loop in lib/multi.c around all calls to multi_runsingle() and
+  simply check for CURLM_CALL_MULTI_PERFORM internally. This has the added
+  benefit that this goes in line with my long-term wishes to get rid of the
+  CURLM_CALL_MULTI_PERFORM all together from the public API.
+
+  The downside of this fix, is that the counter we return in 'running_handles'
+  in several of our public functions then gets a slightly new and possibly
+  confusing behavior during times:
+
+  If an app adds a handle that fails to connect (very quickly) it may just
+  as well never appear as a 'running_handle' with this fix. Previously it
+  would first bump the counter only to get it decreased again at next call.
+  Even I have used that change in handle counter to signal "end of a
+  transfer". The only *good* way to find the end of a individual transfer
+  is calling curl_multi_info_read() to see if it returns one.
+
+  Of course, if the app previously did the looping before it checked the
+  counter, it really shouldn't be any new effect.
+
+Yang Tse (26 Jan 2010)
+- Constantine Sapuntzakis' and Joshua Kwan's work done in the last four months
+  relative to the asynchronous DNS lookups, along with with some integration
+  adjustments I have done are finally committed to CVS.
+
+  Currently these enhancements will benefit builds done using c-ares on any
+  platform as well as Windows builds using the default threaded resolver.
+
+  This release does not make generally available POSIX threaded DNS lookups
+  yet. There is no configure option to enable this feature yet. It is possible
+  to experimantally try this feature running configure with compiler flags that
+  make simultaneous definition of preprocessor symbols USE_THREADS_POSIX and
+  HAVE_PTHREAD_H, as well as whatever reentrancy compiler flags and linker ones
+  are required to link and properly use pthread_* functions on each platform.
+
+Daniel Stenberg (26 Jan 2010)
+- Mike Crowe made libcurl return CURLE_COULDNT_RESOLVE_PROXY when it is the
+  proxy that cannot be resolved when using c-ares. This matches the behaviour
+  when not using c-ares.
+
+Björn Stenberg (23 Jan 2010)
+- Added a new flag: -J/--remote-header-name. This option tells the
+  -O/--remote-name option to use the server-specified Content-Disposition
+  filename instead of extracting a filename from the URL.
+
+Daniel Stenberg (21 Jan 2010)
+- Chris Conroy brought support for RTSP transfers, and with it comes 8(!) new
+  libcurl options for controlling what to get and how to receive posssibly
+  interleaved RTP data.
+
+Daniel Stenberg (20 Jan 2010)
+- As was pointed out on the http-state mailing list, the order of cookies in a
+  HTTP Cookie: header _needs_ to be sorted on the path length in the cases
+  where two cookies using the same name are set more than once using
+  (overlapping) paths. Realizing this, identically named cookies must be
+  sorted correctly. But detecting only identically named cookies and take care
+  of them individually is harder than just to blindly and unconditionally sort
+  all cookies based on their path lengths. All major browsers also already do
+  this, so this makes our behavior one step closer to them in the cookie area.
+
+  Test case 8 was the only one that broke due to this change and I updated it
+  accordingly.
+
+Daniel Stenberg (19 Jan 2010)
+- David McCreedy brought a fix and a new test case (129) to make libcurl work
+  again when downloading files over FTP using ASCII and it turns out that the
+  final size of the file is not the same as the initial size the server
+  reported. This is very common since servers don't take the newline
+  conversions into account.
+
+Kamil Dudka (14 Jan 2010)
+- Suppressed side effect of OpenSSL configure checks, which prevented NSS from
+  being properly detected under certain circumstances. It had been caused by
+  strange behavior of pkg-config when handling PKG_CONFIG_LIBDIR. pkg-config
+  distinguishes among empty and non-existent environment variable in that case.
+
+Daniel Stenberg (12 Jan 2010)
+- Gil Weber reported a peculiar flaw with the multi interface when doing SFTP
+  transfers: curl_multi_fdset() would return -1 and not set and file
+  descriptors several times during a transfer of a single file. It turned out
+  to be due to two different flaws now fixed. Gil's excellent recipe helped me
+  nail this.
+
+Daniel Stenberg (11 Jan 2010)
+- Made sure that the progress callback is repeatedly called at a regular
+  interval even during very slow connects.
+
+- The tests/runtests.pl script now checks to see if the test case that runs is
+  present in the tests/data/Makefile.am and outputs a notice message on the
+  screen if not. Each test file has to be included in that Makefile.am to get
+  included in release archives and forgetting to add files there is a common
+  mistake. This is an attempt to make it harder to forget.
+
+Daniel Stenberg (9 Jan 2010)
+- Johan van Selst found and fixed a OpenSSL session ref count leak:
+
+  ossl_connect_step3() increments an SSL session handle reference counter on
+  each call. When sessions are re-used this reference counter may be
+  incremented many times, but it will be decremented only once when done (by
+  Curl_ossl_session_free()); and the internal OpenSSL data will not be freed
+  if this reference count remains positive. When a session is re-used the
+  reference counter should be corrected by explicitly calling
+  SSL_SESSION_free() after each consecutive SSL_get1_session() to avoid
+  introducing a memory leak.
+
+  (http://curl.haxx.se/bug/view.cgi?id=2926284)
+
+Daniel Stenberg (7 Jan 2010)
+- Make sure the progress callback is called repeatedly even during very slow
+  name resolves when c-ares is used for resolving.
+
+Claes Jakobsson (6 Jan 2010)
+- Julien Chaffraix fixed so that the fragment part in an URL is not sent
+  to the server anymore.
+
+Kamil Dudka (3 Jan 2010)
+- Julien Chaffraix eliminated a duplicated initialization in singlesocket().
+
+Daniel Stenberg (2 Jan 2010)
+- Make curl support --ssl and --ssl-reqd instead of the previous FTP-specific
+  versions --ftp-ssl and --ftp-ssl-reqd as these options are now used to
+  control SSL/TLS for IMAP, POP3 and SMTP as well in addition to FTP. The old
+  option names are still working but the new ones are the ones listed and
+  documented.
+
+Daniel Stenberg (1 Jan 2010)
+- Ingmar Runge enhanced libcurl's FTP engine to support the PRET command. This
+  command is a special "hack" used by the drftpd server, but even though it is
+  a custom extension I've deemed it fine to add to libcurl since this server
+  seems to survive and people keep using it and want libcurl to support
+  it. The new libcurl option is named CURLOPT_FTP_USE_PRET, and it is also
+  usable from the curl tool with --ftp-pret. Using this option on a server
+  that doesn't support this command will make libcurl fail.
+
+  I added test cases 1107 and 1108 to verify the functionality.
+
+  The PRET command is documented at
+  http://www.drftpd.org/index.php/Distributed_PASV
+
+Yang Tse (30 Dec 2009)
+- Steven M. Schweda improved VMS build system, and Craig A. Berry helped
+  with the patch and testing.
+
+Daniel Stenberg (26 Dec 2009)
+- Renato Botelho and Peter Pentchev brought a patch that makes the libcurl
+  headers work correctly even on FreeBSD systems before v8.
+
+  (http://curl.haxx.se/bug/view.cgi?id=2916915)
+
+Daniel Stenberg (17 Dec 2009)
+- David Byron fixed Curl_ossl_cleanup to actually call ENGINE_cleanup when
+  available.
+  
+- Follow-up fix for the proxy fix I did for Jon Nelson's bug. It turned out I
+  was a bit too quick and broke test case 1101 with that change. The order of
+  some of the setups is sensitive. I now changed it slightly again to make
+  sure we do them in this order:
+
+  1 - parse URL and figure out what protocol is used in the URL
+  2 - prepend protocol:// to URL if missing
+  3 - parse name+password off URL, which needs to know what protocol is used
+      (since only some allows for name+password in the URL)
+  4 - figure out if a proxy should be used set by an option
+  5 - if no proxy option, check proxy environment variables
+  6 - run the protocol-specific setup function, which needs to have the proxy
+      already set
+
+Daniel Stenberg (15 Dec 2009)
+- Jon Nelson found a regression that turned out to be a flaw in how libcurl
+  detects and uses proxies based on the environment variables. If the proxy
+  was given as an explicit option it worked, but due to the setup order
+  mistake proxies would not be used fine for a few protocols when picked up
+  from '[protocol]_proxy'. Obviously this broke after 7.19.4. I now also added
+  test case 1106 that verifies this functionality.
+
+  (http://curl.haxx.se/bug/view.cgi?id=2913886)
+
+Daniel Stenberg (12 Dec 2009)
+- IMAP, POP3 and SMTP support and their TLS versions (including IMAPS, POP3S
+  and SMTPS) are now supported. The current state may not yet be solid, but
+  the foundation is in place and the test suite has some initial support for
+  these protocols. Work will now persue to make them nice libcurl citizens
+  until release.
+
+  The work with supporting these new protocols was sponsored by
+  networking4all.com - thanks!
+
+Daniel Stenberg (10 Dec 2009)
+- Siegfried Gyuricsko found out that the curl manual said --retry would retry
+  on FTP errors in the transient 5xx range. Transient FTP errors are in the
+  4xx range. The code itself only tried on 5xx errors that occured _at login_.
+  Now the retry code retries on all FTP transfer failures that ended with a
+  4xx response.
+
+  (http://curl.haxx.se/bug/view.cgi?id=2911279)
+
+- Constantine Sapuntzakis figured out a case which would lead to libcurl
+  accessing alredy freed memory and thus crash when using HTTPS (with
+  OpenSSL), multi interface and the CURLOPT_DEBUGFUNCTION and a certain order
+  of cleaning things up. I fixed it.
+
+  (http://curl.haxx.se/bug/view.cgi?id=2905220)
+
+Daniel Stenberg (7 Dec 2009)
+- Martin Storsjo made libcurl use the Expect: 100-continue header for posts
+  with unknown size. Previously it was only used for posts with a known size
+  larger than 1024 bytes.
+
+Daniel Stenberg (1 Dec 2009)
+- If the Expect: 100-continue header has been set by the application through
+  curl_easy_setopt with CURLOPT_HTTPHEADER, the library should set
+  data->state.expect100header accordingly - the current code (in 7.19.7 at
+  least) doesn't handle this properly. Martin Storsjo provided the fix!
+
+Yang Tse (28 Nov 2009)
+- Added Diffie-Hellman parameters to several test harness certificate files in
+  PEM format. Required by several stunnel versions used by our test harness.
+
+Daniel Stenberg (28 Nov 2009)
+- Markus Koetter provided a polished and updated version of Chad Monroe's TFTP
+  rework patch that now integrates TFTP properly into libcurl so that it can
+  be used non-blocking with the multi interface and more. BLKSIZE also works.
+
+  The --tftp-blksize option was added to allow setting the TFTP BLKSIZE from
+  the command line.
+
+Daniel Stenberg (26 Nov 2009)
+- Extended and fixed the change I did on Dec 11 for the the progress
+  meter/callback during FTP command/response sequences. It turned out it was
+  really lame before and now the progress meter SHOULD get called at least
+  once per second.
+
+Daniel Stenberg (23 Nov 2009)
+- Bjorn Augustsson reported a bug which made curl not report any problems even
+  though it failed to write a very small download to disk (done in a single
+  fwrite call). It turned out to be because fwrite() returned success, but
+  there was insufficient error-checking for the fclose() call which tricked
+  curl to believe things were fine.
+
+Yang Tse (23 Nov 2009)
+- David Byron modified Makefile.dist vc8 and vc9 targets in order to allow
+  finer granularity control when generating src and lib makefiles.
+
+Yang Tse (22 Nov 2009)
+- I modified configure to force removal of the curlbuild.h file included in
+  distribution tarballs for use by non-configure systems. As intended, this
+  would get overwriten when doing in-tree builds. But VPATH builds would end
+  having two curlbuild.h files, one in the source tree and another in the
+  build tree. With the modification I introduced 5 Nov 2009 this could become
+  an issue when running libcurl's test suite.
+
+Daniel Stenberg (20 Nov 2009)
+- Constantine Sapuntzakis identified a write after close, as the sockets were
+  closed by libcurl before the SSL lib were shutdown and they may write to its
+  socket. Detected to at least happen with OpenSSL builds.
+
+- Jad Chamcham pointed out a bug with connection re-use. If a connection had
+  CURLOPT_HTTPPROXYTUNNEL enabled over a proxy, a subsequent request using the
+  same proxy with the tunnel option disabled would still wrongly re-use that
+  previous connection and the outcome would only be badness.
+
+Yang Tse (18 Nov 2009)
+- I modified the memory tracking system to make it intolerant with zero sized
+  malloc(), calloc() and realloc() function calls.
+
+Daniel Stenberg (17 Nov 2009)
+- Constantine Sapuntzakis provided another fix for the DNS cache that could
+  end up with entries that wouldn't time-out:
+
+  1. Set up a first web server that redirects (307) to a http://server:port
+     that's down
+  2. Have curl connect to the first web server using curl multi
+
+  After the curl_easy_cleanup call, there will be curl dns entries hanging
+  around with in_use != 0.
+
+  (http://curl.haxx.se/bug/view.cgi?id=2891591)
+
+- Marc Kleine-Budde fixed: curl saved the LDFLAGS set during configure into
+  its pkg-config file.  So -Wl stuff ended up in the .pc file, which is really
+  bad, and breaks if there are multiple -Wl in our LDFLAGS (which are in
+  PTXdist). bug #2893592 (http://curl.haxx.se/bug/view.cgi?id=2893592)
+
+Kamil Dudka (15 Nov 2009)
+- David Byron improved the configure script to use pkg-config to find OpenSSL
+  (and in particular the list of required libraries) even if a path is given
+  as argument to --with-ssl
+
+Yang Tse (15 Nov 2009)
+- I removed enable-thread / disable-thread configure option. These were only
+  placebo options. The library is always built as thread safe as possible on
+  every system.
+
+Claes Jakobsson (14 Nov 2009)
+- curl-config now accepts '--configure' to see what arguments was
+  passed to the configure script when building curl.
+
+Daniel Stenberg (14 Nov 2009)
+- Claes Jakobsson restored the configure functionality to detect NSS when
+  --with-nss is set but not "yes".
+
+  I think we can still improve that to check for pkg-config in that path etc,
+  but at least this patch brings back the same functionality we had before.
+
+- Camille Moncelier added support for the file type SSL_FILETYPE_ENGINE for
+  the client certificate. It also disable the key name test as some engines
+  can select a private key/cert automatically (When there is only one key
+  and/or certificate on the hardware device used by the engine)
+
+Yang Tse (14 Nov 2009)
+- Constantine Sapuntzakis provided the fix that ensures that an SSL connection
+  won't be reused unless protection level for peer and host verification match.
+
+  I refactored how preprocessor symbol _THREAD_SAFE definition is done.
+
+Kamil Dudka (12 Nov 2009)
+- Kevin Baughman provided a fix preventing libcurl-NSS from crash on doubly
+  closed NSPR descriptor. The issue was hard to find, reported several times
+  before and always closed unresolved. More info at the RH bug:
+  https://bugzilla.redhat.com/534176
+
+- libcurl-NSS now tries to reconnect with TLS disabled in case it detects
+  a broken TLS server. However it does not happen if SSL version is selected
+  manually. The approach was originally taken from PSM. Kaspar Brand helped me
+  to complete the patch. Original bug reports:
+  https://bugzilla.redhat.com/525496
+  https://bugzilla.redhat.com/527771
+
+Yang Tse (12 Nov 2009)
+- I modified configure script to make the getaddrinfo function check also
+  verify if the function is thread safe.
+
+Yang Tse (11 Nov 2009)
+- Marco Maggi reported that compilation failed when configured --with-gssapi
+  and GNU GSS installed due to a missing mutual exclusion of header files in
+  the Kerberos 5 code path. He also verified that my patch worked for him.
+
+Daniel Stenberg (11 Nov 2009)
+- Constantine Sapuntzakis posted bug #2891595
+  (http://curl.haxx.se/bug/view.cgi?id=2891595) which identified how an entry
+  in the DNS cache would linger too long if the request that added it was in
+  use that long. He also provided the patch that now makes libcurl capable of
+  still doing a request while the DNS hash entry may get timed out.
+  
+- Christian Schmitz noticed that the progress meter/callback was not properly
+  used during the FTP connection phase (after the actual TCP connect), while
+  it of course should be. I also made the speed check get called correctly so
+  that really slow servers will trigger that properly too.
+
+Kamil Dudka (5 Nov 2009)
+- Dropped misleading timeouts in libcurl-NSS and made sure the SSL socket works
+  in non-blocking mode.
+
+Yang Tse (5 Nov 2009)
+- I removed leading 'curl' path on the 'curlbuild.h' include statement in
+  curl.h, adjusting auto-makefiles include path, to enhance portability to
+  OS's without an orthogonal directory tree structure such as OS/400.
+
+Daniel Stenberg (4 Nov 2009)
+- I fixed several problems with the transfer progress meter. It showed the
+  wrong percentage for small files, most notable for <1000 bytes and could
+  easily end up showing more than 100% at the end. It also didn't show any
+  percentage, transfer size or estimated transfer times when transferring
+  less than 100 bytes.
+
 Version 7.19.7 (4 November 2009)
 
 Daniel Stenberg (2 Nov 2009)
 - As reported independent by both Stan van de Burgt and Didier Brisebourg,
   CURLINFO_SIZE_DOWNLOAD (the -w variable size_download) didn't work when
   getting data from ldap!
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/configure	2009-11-04 20:26:02.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/configure	2010-02-05 05:42:19.000000000 +0800
@@ -1,15 +1,17 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for curl -.
+# Generated by GNU Autoconf 2.65 for curl -.
 #
 # Report bugs to <a suitable curl mailing list => http://curl.haxx.se/mail/>.
 #
+#
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
-# 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
-# Foundation, Inc.
+# 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software Foundation,
+# Inc.
+#
 #
 # This configure script is free software; the Free Software Foundation
 # gives unlimited permission to copy, distribute and modify it.
 #
 # Copyright (c) 1998 - 2009 Daniel Stenberg, <daniel@haxx.se>
 # This configure script may be copied, distributed and modified under the
@@ -707,13 +709,14 @@
    lt_ECHO="$CONFIG_SHELL \\\$\$0 --fallback-echo"
 fi
 
 
 
 
-exec 7<&0 </dev/null 6>&1
+test -n "$DJDIR" || exec 7<&0 </dev/null
+exec 6>&1
 
 # Name of the host.
 # hostname on some systems (SVR3.2, Linux) returns a bogus exit status,
 # so uname gets run too.
 ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`
 
@@ -786,14 +789,14 @@
 LIBCURL_LIBS
 SONAME_BUMP_FALSE
 SONAME_BUMP_TRUE
 USE_WINDOWS_SSPI
 USE_EMBEDDED_ARES_FALSE
 USE_EMBEDDED_ARES_TRUE
+USE_ARES
 subdirs
-HAVE_ARES
 USE_MANUAL_FALSE
 USE_MANUAL_TRUE
 MANOPT
 NROFF
 PERL
 IPV6_ENABLED
@@ -808,20 +811,24 @@
 HAVE_LIBZ_FALSE
 HAVE_LIBZ_TRUE
 HAVE_LIBZ
 USE_SSLEAY
 PKGCONFIG
 KRB4_ENABLED
+CURL_DISABLE_SMTP
+CURL_DISABLE_IMAP
+CURL_DISABLE_POP3
 CURL_DISABLE_TFTP
 CURL_DISABLE_TELNET
 CURL_DISABLE_DICT
 CURL_DISABLE_PROXY
 CURL_DISABLE_LDAPS
 CURL_DISABLE_LDAP
 CURL_DISABLE_FILE
 CURL_DISABLE_FTP
+CURL_DISABLE_RTSP
 CURL_DISABLE_HTTP
 CURLDEBUG_FALSE
 CURLDEBUG_TRUE
 NO_UNDEFINED_FALSE
 NO_UNDEFINED_TRUE
 REQUIRE_LIB_DEPS
@@ -898,12 +905,13 @@
 INSTALL_PROGRAM
 libext
 AR
 EGREP
 GREP
 SED
+CONFIGURE_OPTIONS
 MAINT
 MAINTAINER_MODE_FALSE
 MAINTAINER_MODE_TRUE
 target_alias
 host_alias
 build_alias
@@ -948,12 +956,13 @@
 enable_option_checking
 enable_maintainer_mode
 enable_debug
 enable_optimize
 enable_warnings
 enable_curldebug
+enable_ares
 enable_dependency_tracking
 enable_largefile
 enable_shared
 enable_static
 with_pic
 enable_fast_install
@@ -961,16 +970,20 @@
 enable_libtool_lock
 enable_http
 enable_ftp
 enable_file
 enable_ldap
 enable_ldaps
+enable_rtsp
 enable_proxy
 enable_dict
 enable_telnet
 enable_tftp
+enable_pop3
+enable_imap
+enable_smtp
 enable_manual
 enable_libgcc
 with_ldap_lib
 with_lber_lib
 enable_ipv6
 with_krb4_includes
@@ -987,15 +1000,13 @@
 with_gnutls
 with_nss
 with_ca_bundle
 with_ca_path
 with_libssh2
 with_libidn
-enable_thread
 enable_nonblocking
-enable_ares
 enable_verbose
 enable_sspi
 enable_crypto_auth
 enable_cookies
 enable_hidden_symbols
 enable_soname_bump
@@ -1635,12 +1646,14 @@
   --enable-optimize       Enable compiler optimizations
   --disable-optimize      Disable compiler optimizations
   --enable-warnings       Enable strict compiler warnings
   --disable-warnings      Disable strict compiler warnings
   --enable-curldebug      Enable curl debug memory tracking
   --disable-curldebug     Disable curl debug memory tracking
+  --enable-ares[=PATH]    Enable c-ares for DNS lookups
+  --disable-ares          Disable c-ares for DNS lookups
   --disable-dependency-tracking  speeds up one-time build
   --enable-dependency-tracking   do not reject slow dependency extractors
   --disable-largefile     omit support for large files
   --enable-shared[=PKGS]  build shared libraries [default=yes]
   --enable-static[=PKGS]  build static libraries [default=yes]
   --enable-fast-install[=PKGS]
@@ -1653,31 +1666,35 @@
   --enable-file           Enable FILE support
   --disable-file          Disable FILE support
   --enable-ldap           Enable LDAP support
   --disable-ldap          Disable LDAP support
   --enable-ldaps          Enable LDAPS support
   --disable-ldaps         Disable LDAPS support
+  --enable-rtsp           Enable RTSP support
+  --disable-rtsp          Disable RTSP support
   --enable-proxy          Enable proxy support
   --disable-proxy         Disable proxy support
   --enable-dict           Enable DICT support
   --disable-dict          Disable DICT support
   --enable-telnet         Enable TELNET support
   --disable-telnet        Disable TELNET support
   --enable-tftp           Enable TFTP support
   --disable-tftp          Disable TFTP support
+  --enable-pop3           Enable POP3 support
+  --disable-pop3          Disable POP3 support
+  --enable-imap           Enable IMAP support
+  --disable-imap          Disable IMAP support
+  --enable-smtp           Enable SMTP support
+  --disable-smtp          Disable SMTP support
   --enable-manual         Enable built-in manual
   --disable-manual        Disable built-in manual
   --enable-libgcc         use libgcc when linking
   --enable-ipv6           Enable ipv6 (with ipv4) support
   --disable-ipv6          Disable ipv6 support
-  --disable-thread        don't look for thread-safe functions
-  --enable-thread         look for thread-safe functions
   --enable-nonblocking    Enable non-blocking communications
   --disable-nonblocking   Disable non-blocking communications
-  --enable-ares=PATH      Enable c-ares for name lookups
-  --disable-ares          Disable c-ares for name lookups
   --enable-verbose        Enable verbose strings
   --disable-verbose       Disable verbose strings
   --enable-sspi           Enable SSPI
   --disable-sspi          Disable SSPI
   --enable-crypto-auth    Enable cryptographic authentication
   --disable-crypto-auth   Disable cryptographic authentication
@@ -1737,13 +1754,13 @@
 Some influential environment variables:
   CC          C compiler command
   CFLAGS      C compiler flags
   LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
               nonstandard directory <lib dir>
   LIBS        libraries to pass to the linker, e.g. -l<library>
-  CPPFLAGS    C/C++/Objective C preprocessor flags, e.g. -I<include dir> if
+  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
               you have headers in a nonstandard directory <include dir>
   CPP         C preprocessor
 
 Use these variables to override the choices made by `configure' or to help
 it to find libraries and programs with nonstandard names/locations.
 
@@ -1808,13 +1825,13 @@
 fi
 
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
 curl configure -
-generated by GNU Autoconf 2.64
+generated by GNU Autoconf 2.65
 
 Copyright (C) 2009 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
 
 Copyright (c) 1998 - 2009 Daniel Stenberg, <daniel@haxx.se>
@@ -1859,13 +1876,13 @@
   $as_echo "$as_me: failed program was:" >&5
 sed 's/^/| /' conftest.$ac_ext >&5
 
 	ac_retval=1
 fi
   eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
-  return $ac_retval
+  as_fn_set_status $ac_retval
 
 } # ac_fn_c_try_compile
 
 # ac_fn_c_check_header_compile LINENO HEADER VAR INCLUDES
 # -------------------------------------------------------
 # Tests whether HEADER exists and can be compiled using the include files in
@@ -1932,13 +1949,13 @@
 sed 's/^/| /' conftest.$ac_ext >&5
 
        ac_retval=$ac_status
 fi
   rm -rf conftest.dSYM conftest_ipa8_conftest.oo
   eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
-  return $ac_retval
+  as_fn_set_status $ac_retval
 
 } # ac_fn_c_try_run
 
 # ac_fn_c_compute_int LINENO EXPR VAR INCLUDES
 # --------------------------------------------
 # Tries to find the compile-time value of EXPR in a program that includes
@@ -2104,13 +2121,13 @@
 rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
   conftest.$ac_objext conftest.beam conftest.$ac_ext
 rm -f conftest.val
 
   fi
   eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
-  return $ac_retval
+  as_fn_set_status $ac_retval
 
 } # ac_fn_c_compute_int
 
 # ac_fn_c_try_cpp LINENO
 # ----------------------
 # Try to preprocess conftest.$ac_ext, and return whether this succeeded.
@@ -2141,13 +2158,13 @@
   $as_echo "$as_me: failed program was:" >&5
 sed 's/^/| /' conftest.$ac_ext >&5
 
     ac_retval=1
 fi
   eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
-  return $ac_retval
+  as_fn_set_status $ac_retval
 
 } # ac_fn_c_try_cpp
 
 # ac_fn_c_try_link LINENO
 # -----------------------
 # Try to link conftest.$ac_ext, and return whether this succeeded.
@@ -2187,13 +2204,13 @@
   # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information
   # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would
   # interfere with the next link command; also delete a directory that is
   # left behind by Apple's compiler.  We do this before executing the actions.
   rm -rf conftest.dSYM conftest_ipa8_conftest.oo
   eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
-  return $ac_retval
+  as_fn_set_status $ac_retval
 
 } # ac_fn_c_try_link
 
 # ac_fn_c_check_func LINENO FUNC VAR
 # ----------------------------------
 # Tests whether FUNC exists, setting the cache variable VAR accordingly
@@ -2391,13 +2408,13 @@
 } # ac_fn_c_check_type
 cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
 It was created by curl $as_me -, which was
-generated by GNU Autoconf 2.64.  Invocation command line was
+generated by GNU Autoconf 2.65.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 exec 5>>config.log
 {
@@ -2644,24 +2661,24 @@
   ac_site_file1=$ac_default_prefix/share/config.site
   ac_site_file2=$ac_default_prefix/etc/config.site
 fi
 for ac_site_file in "$ac_site_file1" "$ac_site_file2"
 do
   test "x$ac_site_file" = xNONE && continue
-  if test -r "$ac_site_file"; then
+  if test /dev/null != "$ac_site_file" && test -r "$ac_site_file"; then
     { $as_echo "$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file" >&5
 $as_echo "$as_me: loading site script $ac_site_file" >&6;}
     sed 's/^/| /' "$ac_site_file" >&5
     . "$ac_site_file"
   fi
 done
 
 if test -r "$cache_file"; then
-  # Some versions of bash will fail to source /dev/null (special
-  # files actually), so we avoid doing that.
-  if test -f "$cache_file"; then
+  # Some versions of bash will fail to source /dev/null (special files
+  # actually), so we avoid doing that.  DJGPP emulates it as a regular file.
+  if test /dev/null != "$cache_file" && test -f "$cache_file"; then
     { $as_echo "$as_me:${as_lineno-$LINENO}: loading cache $cache_file" >&5
 $as_echo "$as_me: loading cache $cache_file" >&6;}
     case $cache_file in
       [\\/]* | ?:[\\/]* ) . "$cache_file";;
       *)                      . "./$cache_file";;
     esac
@@ -2814,18 +2831,18 @@
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
       ;;
     default)
                                                                         if test "$want_debug" = "yes"; then
         want_optimize="assume_no"
-        { $as_echo "$as_me:${as_lineno-$LINENO}: result: not specified (assuming no)" >&5
-$as_echo "not specified (assuming no)" >&6; }
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: (assumed) no" >&5
+$as_echo "(assumed) no" >&6; }
       else
         want_optimize="assume_yes"
-        { $as_echo "$as_me:${as_lineno-$LINENO}: result: not specified (assuming yes)" >&5
-$as_echo "not specified (assuming yes)" >&6; }
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: (assumed) yes" >&5
+$as_echo "(assumed) yes" >&6; }
       fi
       ;;
     *)
                               want_optimize="yes"
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
@@ -2869,14 +2886,14 @@
             want_curldebug="no"
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
       ;;
     default)
                                           if test "$want_debug" = "yes"; then
-        { $as_echo "$as_me:${as_lineno-$LINENO}: result: not specified (assuming yes)" >&5
-$as_echo "not specified (assuming yes)" >&6; }
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: (assumed) yes" >&5
+$as_echo "(assumed) yes" >&6; }
       else
         { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
       fi
       want_curldebug_assumed="yes"
       want_curldebug="$want_debug"
@@ -2886,15 +2903,47 @@
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
       ;;
   esac
 
 
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to enable c-ares for DNS lookups" >&5
+$as_echo_n "checking whether to enable c-ares for DNS lookups... " >&6; }
+  OPT_ARES="default"
+  # Check whether --enable-ares was given.
+if test "${enable_ares+set}" = set; then :
+  enableval=$enable_ares; OPT_ARES=$enableval
+fi
+
+  case "$OPT_ARES" in
+    no)
+            want_ares="no"
+      ;;
+    default)
+            want_ares="no"
+      ;;
+    *)
+            want_ares="yes"
+      if test -n "$enableval" && test "$enableval" != "yes"; then
+        want_ares_path="$enableval"
+      fi
+      ;;
+  esac
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $want_ares" >&5
+$as_echo "$want_ares" >&6; }
+
+
 
 
 
+#
+# save the configure arguments
+#
+CONFIGURE_OPTIONS="\"$ac_configure_args\""
+
+
 # Extract the first word of "sed", so it can be a program name with args.
 set dummy sed; ac_word=$2
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
 $as_echo_n "checking for $ac_word... " >&6; }
 if test "${ac_cv_path_SED+set}" = set; then :
   $as_echo_n "(cached) " >&6
@@ -3145,12 +3194,16 @@
   as_fn_error "ar not found in PATH. Cannot continue without ar." "$LINENO" 5
 fi
 
 
 
 
+if test -f ${srcdir}/include/curl/curlbuild.h; then
+  rm -f ${srcdir}/include/curl/curlbuild.h
+fi
+
 VERSION=`$SED -ne 's/^#define LIBCURL_VERSION "\(.*\)"/\1/p' ${srcdir}/include/curl/curlver.h`
 am__api_version="1.9"
 ac_aux_dir=
 for ac_dir in "$srcdir" "$srcdir/.." "$srcdir/../.."; do
   for ac_t in install-sh install.sh shtool; do
     if test -f "$ac_dir/$ac_t"; then
@@ -3629,12 +3682,13 @@
     curl_idn_msg="no      (--with-libidn)"
  curl_manual_msg="no      (--enable-manual)"
 curl_verbose_msg="enabled (--disable-verbose)"
    curl_sspi_msg="no      (--enable-sspi)"
    curl_ldap_msg="no      (--enable-ldap / --with-ldap-lib / --with-lber-lib)"
   curl_ldaps_msg="no      (--enable-ldaps)"
+   curl_rtsp_msg="no      (--enable-rtsp)"
 
 ALL_LIBS=$LIBS
 
 
 # Make sure we can run config.sub.
 $SHELL "$ac_aux_dir/config.sub" sun4 >/dev/null 2>&1 ||
@@ -4100,37 +4154,35 @@
   ac_status=$?
   if test -s conftest.err; then
     sed '10a\
 ... rest of stderr output deleted ...
          10q' conftest.err >conftest.er1
     cat conftest.er1 >&5
-    rm -f conftest.er1 conftest.err
   fi
+  rm -f conftest.er1 conftest.err
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }
 done
 
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+
 int main (void)
 {
-FILE *f = fopen ("conftest.out", "w");
- return ferror (f) || fclose (f) != 0;
 
  ;
  return 0;
 }
 _ACEOF
 ac_clean_files_save=$ac_clean_files
-ac_clean_files="$ac_clean_files a.out a.out.dSYM a.exe b.out conftest.out"
+ac_clean_files="$ac_clean_files a.out a.out.dSYM a.exe b.out"
 # Try to create an executable without -o first, disregard a.out.
 # It will help us diagnose broken compilers, and finding out an intuition
 # of exeext.
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name" >&5
-$as_echo_n "checking for C compiler default output file name... " >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler works" >&5
+$as_echo_n "checking whether the C compiler works... " >&6; }
 ac_link_default=`$as_echo "$ac_link" | sed 's/ -o *conftest[^ ]*//'`
 
 # The possible output files:
 ac_files="a.out conftest.exe conftest a.exe a_out.exe b.out conftest.*"
 
 ac_rmfiles=
@@ -4186,68 +4238,35 @@
 done
 test "$ac_cv_exeext" = no && ac_cv_exeext=
 
 else
   ac_file=''
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_file" >&5
-$as_echo "$ac_file" >&6; }
 if test -z "$ac_file"; then :
-  $as_echo "$as_me: failed program was:" >&5
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+$as_echo "$as_me: failed program was:" >&5
 sed 's/^/| /' conftest.$ac_ext >&5
 
 { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
 $as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
 { as_fn_set_status 77
 as_fn_error "C compiler cannot create executables
 See \`config.log' for more details." "$LINENO" 5; }; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
 fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name" >&5
+$as_echo_n "checking for C compiler default output file name... " >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_file" >&5
+$as_echo "$ac_file" >&6; }
 ac_exeext=$ac_cv_exeext
 
-# Check that the compiler produces executables we can run.  If not, either
-# the compiler is broken, or we cross compile.
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler works" >&5
-$as_echo_n "checking whether the C compiler works... " >&6; }
-# If not cross compiling, check that we can run a simple program.
-if test "$cross_compiling" != yes; then
-  if { ac_try='./$ac_file'
-  { { case "(($ac_try" in
-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
-  *) ac_try_echo=$ac_try;;
-esac
-eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
-$as_echo "$ac_try_echo"; } >&5
-  (eval "$ac_try") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; }; }; then
-    cross_compiling=no
-  else
-    if test "$cross_compiling" = maybe; then
-	cross_compiling=yes
-    else
-	{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
-as_fn_error "cannot run C compiled programs.
-If you meant to cross compile, use \`--host'.
-See \`config.log' for more details." "$LINENO" 5; }
-    fi
-  fi
-fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-
-rm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out conftest.out
+rm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out
 ac_clean_files=$ac_clean_files_save
-# Check that the compiler produces executables we can run.  If not, either
-# the compiler is broken, or we cross compile.
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling" >&5
-$as_echo_n "checking whether we are cross compiling... " >&6; }
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $cross_compiling" >&5
-$as_echo "$cross_compiling" >&6; }
-
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for suffix of executables" >&5
 $as_echo_n "checking for suffix of executables... " >&6; }
 if { { ac_try="$ac_link"
 case "(($ac_try" in
   *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
   *) ac_try_echo=$ac_try;;
@@ -4274,19 +4293,77 @@
 else
   { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
 $as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
 as_fn_error "cannot compute suffix of executables: cannot compile and link
 See \`config.log' for more details." "$LINENO" 5; }
 fi
-rm -f conftest$ac_cv_exeext
+rm -f conftest conftest$ac_cv_exeext
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_exeext" >&5
 $as_echo "$ac_cv_exeext" >&6; }
 
 rm -f conftest.$ac_ext
 EXEEXT=$ac_cv_exeext
 ac_exeext=$EXEEXT
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdio.h>
+int main (void)
+{
+FILE *f = fopen ("conftest.out", "w");
+ return ferror (f) || fclose (f) != 0;
+
+ ;
+ return 0;
+}
+_ACEOF
+ac_clean_files="$ac_clean_files conftest.out"
+# Check that the compiler produces executables we can run.  If not, either
+# the compiler is broken, or we cross compile.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling" >&5
+$as_echo_n "checking whether we are cross compiling... " >&6; }
+if test "$cross_compiling" != yes; then
+  { { ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }
+  if { ac_try='./conftest$ac_cv_exeext'
+  { { case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; }; then
+    cross_compiling=no
+  else
+    if test "$cross_compiling" = maybe; then
+	cross_compiling=yes
+    else
+	{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "cannot run C compiled programs.
+If you meant to cross compile, use \`--host'.
+See \`config.log' for more details." "$LINENO" 5; }
+    fi
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $cross_compiling" >&5
+$as_echo "$cross_compiling" >&6; }
+
+rm -f conftest.$ac_ext conftest$ac_cv_exeext conftest.out
+ac_clean_files=$ac_clean_files_save
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for suffix of object files" >&5
 $as_echo_n "checking for suffix of object files... " >&6; }
 if test "${ac_cv_objext+set}" = set; then :
   $as_echo_n "(cached) " >&6
 else
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
@@ -4665,12 +4742,17 @@
 # include <stdint.h>
 #endif
 #ifdef HAVE_INTTYPES_H
 # include <inttypes.h>
 #endif
 /* includes end */"
+  case $host_os in
+    irix*)
+      ac_cv_header_stdint_h="no"
+      ;;
+  esac
   for ac_header in sys/types.h stdint.h inttypes.h
 do :
   as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
 ac_fn_c_check_header_compile "$LINENO" "$ac_header" "$as_ac_Header" "$curl_includes_inttypes
 "
 eval as_val=\$$as_ac_Header
@@ -5771,12 +5853,97 @@
 rm -f conftest*
 
 
 
 
     #
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if _THREAD_SAFE is already defined" >&5
+$as_echo_n "checking if _THREAD_SAFE is already defined... " >&6; }
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+
+int main (void)
+{
+
+#ifdef _THREAD_SAFE
+      int dummy=1;
+#else
+      force compilation error
+#endif
+
+ ;
+ return 0;
+}
+
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+    tmp_thread_safe_initially_defined="yes"
+
+else
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    tmp_thread_safe_initially_defined="no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  #
+  if test "$tmp_thread_safe_initially_defined" = "no"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if _THREAD_SAFE is actually needed" >&5
+$as_echo_n "checking if _THREAD_SAFE is actually needed... " >&6; }
+
+  case $host_os in
+    aix[123].* | aix4.[012].*)
+            tmp_need_thread_safe="no"
+      ;;
+    aix*)
+            tmp_need_thread_safe="yes"
+      ;;
+    *)
+      tmp_need_thread_safe="no"
+      ;;
+  esac
+
+    if test "$tmp_need_thread_safe" = "yes"; then
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  fi
+  #
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if _THREAD_SAFE is onwards defined" >&5
+$as_echo_n "checking if _THREAD_SAFE is onwards defined... " >&6; }
+  if test "$tmp_thread_safe_initially_defined" = "yes" ||
+    test "$tmp_need_thread_safe" = "yes"; then
+
+
+$as_echo "#define NEED_THREAD_SAFE 1" >>confdefs.h
+
+cat >>confdefs.h <<_EOF
+#ifndef _THREAD_SAFE
+#  define _THREAD_SAFE
+#endif
+_EOF
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+  else
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+  fi
+  #
+
+
+    #
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking if _REENTRANT is already defined" >&5
 $as_echo_n "checking if _REENTRANT is already defined... " >&6; }
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
 
@@ -5811,14 +5978,14 @@
 rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
   #
   if test "$tmp_reentrant_initially_defined" = "no"; then
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking if _REENTRANT is actually needed" >&5
 $as_echo_n "checking if _REENTRANT is actually needed... " >&6; }
 
-  case $host in
-    *-*-solaris*)
+  case $host_os in
+    solaris*)
       tmp_need_reentrant="yes"
       ;;
     *)
       tmp_need_reentrant="no"
       ;;
   esac
@@ -7173,22 +7340,36 @@
   *)
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
     ;;
 esac
 
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if compiler is icc (to build with PIC)" >&5
+$as_echo_n "checking if compiler is icc (to build with PIC)... " >&6; }
+case $CC in
+  icc | */icc)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+    with_pic=yes
+    ;;
+  *)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    ;;
+esac
+
 case `pwd` in
   *\ * | *\	*)
     { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Libtool does not cope well with whitespace in \`pwd\`" >&5
 $as_echo "$as_me: WARNING: Libtool does not cope well with whitespace in \`pwd\`" >&2;} ;;
 esac
 
 
 
-macro_version='2.2.6'
-macro_revision='1.3012'
+macro_version='2.2.6b'
+macro_revision='1.3017'
 
 
 
 
 
 
@@ -7652,19 +7833,19 @@
 $as_echo_n "checking the name lister ($NM) interface... " >&6; }
 if test "${lt_cv_nm_interface+set}" = set; then :
   $as_echo_n "(cached) " >&6
 else
   lt_cv_nm_interface="BSD nm"
   echo "int some_variable = 0;" > conftest.$ac_ext
-  (eval echo "\"\$as_me:7658: $ac_compile\"" >&5)
+  (eval echo "\"\$as_me:7839: $ac_compile\"" >&5)
   (eval "$ac_compile" 2>conftest.err)
   cat conftest.err >&5
-  (eval echo "\"\$as_me:7661: $NM \\\"conftest.$ac_objext\\\"\"" >&5)
+  (eval echo "\"\$as_me:7842: $NM \\\"conftest.$ac_objext\\\"\"" >&5)
   (eval "$NM \"conftest.$ac_objext\"" 2>conftest.err > conftest.out)
   cat conftest.err >&5
-  (eval echo "\"\$as_me:7664: output\"" >&5)
+  (eval echo "\"\$as_me:7845: output\"" >&5)
   cat conftest.out >&5
   if $GREP 'External.*some_variable' conftest.out > /dev/null; then
     lt_cv_nm_interface="MS dumpbin"
   fi
   rm -f conftest*
 fi
@@ -8121,17 +8302,17 @@
   *) libmagic=never-match;;
   esac
   lt_cv_deplibs_check_method=pass_all
   ;;
 
 # This must be Linux ELF.
-linux* | k*bsd*-gnu)
+linux* | k*bsd*-gnu | kopensolaris*-gnu)
   lt_cv_deplibs_check_method=pass_all
   ;;
 
-netbsd*)
+netbsd* | netbsdelf*-gnu)
   if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
     lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|_pic\.a)$'
   else
     lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so|_pic\.a)$'
   fi
   ;;
@@ -8860,13 +9041,13 @@
     esac
   fi
   rm -rf conftest*
   ;;
 *-*-irix6*)
   # Find out which ABI we are using.
-  echo '#line 8866 "configure"' > conftest.$ac_ext
+  echo '#line 9047 "configure"' > conftest.$ac_ext
   if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
   (eval $ac_compile) 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
     if test "$lt_cv_prog_gnu_ld" = yes; then
@@ -10118,17 +10299,17 @@
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    # The option is referenced via a variable to avoid confusing sed.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:10124: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:10305: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:10128: \$? = $ac_status" >&5
+   echo "$as_me:10309: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
      $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
      $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
      if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
@@ -10287,13 +10468,13 @@
     irix5* | irix6* | nonstopux*)
       lt_prog_compiler_wl='-Wl,'
       # PIC (with -KPIC) is the default.
       lt_prog_compiler_static='-non_shared'
       ;;
 
-    linux* | k*bsd*-gnu)
+    linux* | k*bsd*-gnu | kopensolaris*-gnu)
       case $cc_basename in
       # old Intel for x86_64 which still supported -KPIC.
       ecc*)
 	lt_prog_compiler_wl='-Wl,'
 	lt_prog_compiler_pic='-KPIC'
 	lt_prog_compiler_static='-static'
@@ -10457,17 +10638,17 @@
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    # The option is referenced via a variable to avoid confusing sed.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:10463: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:10644: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:10467: \$? = $ac_status" >&5
+   echo "$as_me:10648: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
      $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
      $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
      if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
@@ -10562,17 +10743,17 @@
    # Note that $ac_compile itself does not contain backslashes and begins
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:10568: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:10749: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:10572: \$? = $ac_status" >&5
+   echo "$as_me:10753: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
      $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
      $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
@@ -10617,17 +10798,17 @@
    # Note that $ac_compile itself does not contain backslashes and begins
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:10623: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:10804: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:10627: \$? = $ac_status" >&5
+   echo "$as_me:10808: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
      $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
      $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
@@ -10736,12 +10917,15 @@
     # we just hope/assume this is gcc and not c89 (= MSVC++)
     with_gnu_ld=yes
     ;;
   openbsd*)
     with_gnu_ld=no
     ;;
+  linux* | k*bsd*-gnu)
+    link_all_deplibs=no
+    ;;
   esac
 
   ld_shlibs=yes
   if test "$with_gnu_ld" = yes; then
     # If archive_cmds runs LD, not CC, wlarc should be empty
     wlarc='${wl}'
@@ -10757,12 +10941,13 @@
       whole_archive_flag_spec="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
     else
       whole_archive_flag_spec=
     fi
     supports_anon_versioning=no
     case `$LD -v 2>&1` in
+      *GNU\ gold*) supports_anon_versioning=yes ;;
       *\ [01].* | *\ 2.[0-9].* | *\ 2.10.*) ;; # catch versions < 2.11
       *\ 2.11.93.0.2\ *) supports_anon_versioning=yes ;; # RH7.3 ...
       *\ 2.11.92.0.12\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...
       *\ 2.11.*) ;; # other 2.11 versions
       *) supports_anon_versioning=yes ;;
     esac
@@ -10848,13 +11033,13 @@
       # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
       # time.  Moving up from 0x10000000 also allows more sbrk(2) space.
       archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
       archive_expsym_cmds='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
       ;;
 
-    gnu* | linux* | tpf* | k*bsd*-gnu)
+    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)
       tmp_diet=no
       if test "$host_os" = linux-dietlibc; then
 	case $cc_basename in
 	  diet\ *) tmp_diet=yes;;	# linux-dietlibc with static linking (!diet-dyn)
 	esac
       fi
@@ -10918,13 +11103,13 @@
 	esac
       else
         ld_shlibs=no
       fi
       ;;
 
-    netbsd*)
+    netbsd* | netbsdelf*-gnu)
       if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
 	archive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
 	wlarc=
       else
 	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
 	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
@@ -11093,12 +11278,13 @@
 	  ;;
 	esac
 	shared_flag='-shared'
 	if test "$aix_use_runtimelinking" = yes; then
 	  shared_flag="$shared_flag "'${wl}-G'
 	fi
+	link_all_deplibs=no
       else
 	# not using gcc
 	if test "$host_cpu" = ia64; then
 	# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
 	# chokes on -Wl,-G. The following line is correct:
 	  shared_flag='-G'
@@ -11417,13 +11603,13 @@
       hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
       hardcode_libdir_separator=:
       inherit_rpath=yes
       link_all_deplibs=yes
       ;;
 
-    netbsd*)
+    netbsd* | netbsdelf*-gnu)
       if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
 	archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
       else
 	archive_cmds='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
       fi
       hardcode_libdir_flag_spec='-R$libdir'
@@ -12307,13 +12493,13 @@
 # No shared lib support for Linux oldld, aout, or coff.
 linux*oldld* | linux*aout* | linux*coff*)
   dynamic_linker=no
   ;;
 
 # This must be Linux ELF.
-linux* | k*bsd*-gnu)
+linux* | k*bsd*-gnu | kopensolaris*-gnu)
   version_type=linux
   need_lib_prefix=no
   need_version=no
   library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
   soname_spec='${libname}${release}${shared_ext}$major'
   finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
@@ -12361,12 +12547,24 @@
   # most powerpc-linux boxes support dynamic linking these days and
   # people can always --disable-shared, the test was removed, and we
   # assume the GNU/Linux dynamic linker is in use.
   dynamic_linker='GNU/Linux ld.so'
   ;;
 
+netbsdelf*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  dynamic_linker='NetBSD ld.elf_so'
+  ;;
+
 netbsd*)
   version_type=sunos
   need_lib_prefix=no
   need_version=no
   if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
     library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
@@ -12966,13 +13164,13 @@
   	  if test "$cross_compiling" = yes; then :
   lt_cv_dlopen_self=cross
 else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<_LT_EOF
-#line 12972 "configure"
+#line 13170 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
 #include <dlfcn.h>
 #endif
 
@@ -13062,13 +13260,13 @@
   	  if test "$cross_compiling" = yes; then :
   lt_cv_dlopen_self_static=cross
 else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<_LT_EOF
-#line 13068 "configure"
+#line 13266 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
 #include <dlfcn.h>
 #endif
 
@@ -15443,31 +15641,21 @@
 
     fi
     #
   fi
 
 
-case $host in
+if test "$compiler_id" = "INTEL_UNIX_C"; then
   #
-  x86_64*linux*|amd64*freebsd*|ia64*freebsd*)
-    #
-    if test "$compiler_id" = "INTEL_UNIX_C"; then
-      #
-      if test "$compiler_num" -ge "900" &&
-        test "$compiler_num" -lt "1000"; then
-                CFLAGS="$CFLAGS -i-dynamic"
-      fi
-      #
-      if test "$compiler_num" -ge "1000"; then
-                CFLAGS="$CFLAGS -shared-intel"
-      fi
-      #
-    fi
-    ;;
+  if test "$compiler_num" -ge "1000"; then
+        CFLAGS="$CFLAGS -shared-intel"
+  elif test "$compiler_num" -ge "900"; then
+        CFLAGS="$CFLAGS -i-dynamic"
+  fi
   #
-esac
+fi
 
 
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking if compiler halts on compilation errors" >&5
 $as_echo_n "checking if compiler halts on compilation errors... " >&6; }
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
@@ -16131,16 +16319,21 @@
   no)
        { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
 
 $as_echo "#define CURL_DISABLE_HTTP 1" >>confdefs.h
 
-       { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: disable HTTP disables FTP over proxy" >&5
-$as_echo "$as_me: WARNING: disable HTTP disables FTP over proxy" >&2;}
+       { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: disable HTTP disables FTP over proxy and RTSP" >&5
+$as_echo "$as_me: WARNING: disable HTTP disables FTP over proxy and RTSP" >&2;}
        CURL_DISABLE_HTTP=1
 
+
+$as_echo "#define CURL_DISABLE_RTSP 1" >>confdefs.h
+
+       CURL_DISABLE_RTSP=1
+
        ;;
   *)   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
        ;;
   esac
 else
@@ -16290,12 +16483,48 @@
        CURL_DISABLE_LDAPS=1
 
 
 fi
 
 
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to support rtsp" >&5
+$as_echo_n "checking whether to support rtsp... " >&6; }
+# Check whether --enable-rtsp was given.
+if test "${enable_rtsp+set}" = set; then :
+  enableval=$enable_rtsp;  case "$enableval" in
+  no)
+       { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+
+$as_echo "#define CURL_DISABLE_RTSP 1" >>confdefs.h
+
+       CURL_DISABLE_RTSP=1
+
+       ;;
+  *)   if test x$CURL_DISABLE_HTTP = x1 ; then
+          as_fn_error "HTTP support needs to be enabled in order to enable RTSP support!" "$LINENO" 5
+       else
+          { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+          curl_rtsp_msg="enabled"
+       fi
+       ;;
+  esac
+else
+  if test "x$CURL_DISABLE_HTTP" != "x1"; then
+          { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+          curl_rtsp_msg="enabled"
+       else
+          { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+       fi
+
+fi
+
+
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to support proxies" >&5
 $as_echo_n "checking whether to support proxies... " >&6; }
 # Check whether --enable-proxy was given.
 if test "${enable_proxy+set}" = set; then :
   enableval=$enable_proxy;  case "$enableval" in
   no)
@@ -16388,12 +16617,90 @@
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 
 fi
 
 
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to support pop3" >&5
+$as_echo_n "checking whether to support pop3... " >&6; }
+# Check whether --enable-pop3 was given.
+if test "${enable_pop3+set}" = set; then :
+  enableval=$enable_pop3;  case "$enableval" in
+  no)
+       { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+
+$as_echo "#define CURL_DISABLE_POP3 1" >>confdefs.h
+
+       CURL_DISABLE_POP3=1
+
+       ;;
+  *)   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+       ;;
+  esac
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+
+fi
+
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to support imap" >&5
+$as_echo_n "checking whether to support imap... " >&6; }
+# Check whether --enable-imap was given.
+if test "${enable_imap+set}" = set; then :
+  enableval=$enable_imap;  case "$enableval" in
+  no)
+       { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+
+$as_echo "#define CURL_DISABLE_IMAP 1" >>confdefs.h
+
+       CURL_DISABLE_IMAP=1
+
+       ;;
+  *)   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+       ;;
+  esac
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+
+fi
+
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to support smtp" >&5
+$as_echo_n "checking whether to support smtp... " >&6; }
+# Check whether --enable-smtp was given.
+if test "${enable_smtp+set}" = set; then :
+  enableval=$enable_smtp;  case "$enableval" in
+  no)
+       { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+
+$as_echo "#define CURL_DISABLE_SMTP 1" >>confdefs.h
+
+       CURL_DISABLE_SMTP=1
+
+       ;;
+  *)   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+       ;;
+  esac
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+
+fi
+
+
+
 
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to provide built-in manual" >&5
 $as_echo_n "checking whether to provide built-in manual... " >&6; }
 # Check whether --enable-manual was given.
 if test "${enable_manual+set}" = set; then :
   enableval=$enable_manual;  case "$enableval" in
@@ -18702,18 +19009,26 @@
     fi
     PREFIX_OPENSSL=
     ;;
   *)
         PKGTEST="no"
     PREFIX_OPENSSL=$OPT_SSL
-    LIB_OPENSSL="$PREFIX_OPENSSL/lib$libsuff"
+
+                OPENSSL_PCDIR="$OPT_SSL/lib/pkgconfig"
+    { $as_echo "$as_me:${as_lineno-$LINENO}: PKG_CONFIG_LIBDIR will be set to \"$OPENSSL_PCDIR\"" >&5
+$as_echo "$as_me: PKG_CONFIG_LIBDIR will be set to \"$OPENSSL_PCDIR\"" >&6;}
+    if test -e "$OPENSSL_PCDIR/openssl.pc"; then
+      PKGTEST="yes"
+    fi
+
+            LIB_OPENSSL="$PREFIX_OPENSSL/lib$libsuff"
     if test "$PREFIX_OPENSSL" != "/usr" ; then
-      LDFLAGS="$LDFLAGS -L$LIB_OPENSSL"
-      CPPFLAGS="$CPPFLAGS -I$PREFIX_OPENSSL/include"
+      SSL_LDFLAGS="-L$LIB_OPENSSL"
+      SSL_CPPFLAGS="-I$PREFIX_OPENSSL/include"
     fi
-    CPPFLAGS="$CPPFLAGS -I$PREFIX_OPENSSL/include/openssl"
+    SSL_CPPFLAGS="$SSL_CPPFLAGS -I$PREFIX_OPENSSL/include/openssl"
     ;;
   esac
 
   if test "$PKGTEST" = "yes"; then
 
 
@@ -18810,37 +19125,68 @@
 
     fi
 
     if test x$PKGCONFIG != xno; then
       { $as_echo "$as_me:${as_lineno-$LINENO}: checking for openssl options with pkg-config" >&5
 $as_echo_n "checking for openssl options with pkg-config... " >&6; }
-            $PKGCONFIG --exists openssl
-      if test "$?" -ne "0"; then
+            itexists=`
+    if test -n "$OPENSSL_PCDIR"; then
+      PKG_CONFIG_LIBDIR="$OPENSSL_PCDIR"
+      export PKG_CONFIG_LIBDIR
+    fi
+         $PKGCONFIG --exists openssl >/dev/null 2>&1 && echo 1`
+
+      if test -z "$itexists"; then
                         PKGCONFIG="no"
         { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
       else
         { $as_echo "$as_me:${as_lineno-$LINENO}: result: found" >&5
 $as_echo "found" >&6; }
       fi
     fi
 
 
     if test "$PKGCONFIG" != "no" ; then
-      SSL_LIBS=`$PKGCONFIG --libs-only-l openssl 2>/dev/null`
-      SSL_LDFLAGS=`$PKGCONFIG --libs-only-L openssl 2>/dev/null`
-      SSL_CPPFLAGS=`$PKGCONFIG --cflags-only-I openssl 2>/dev/null`
+      SSL_LIBS=`
+    if test -n "$OPENSSL_PCDIR"; then
+      PKG_CONFIG_LIBDIR="$OPENSSL_PCDIR"
+      export PKG_CONFIG_LIBDIR
+    fi
+         $PKGCONFIG --libs-only-l openssl 2>/dev/null`
+
+      SSL_LDFLAGS=`
+    if test -n "$OPENSSL_PCDIR"; then
+      PKG_CONFIG_LIBDIR="$OPENSSL_PCDIR"
+      export PKG_CONFIG_LIBDIR
+    fi
+         $PKGCONFIG --libs-only-L openssl 2>/dev/null`
+
+      SSL_CPPFLAGS=`
+    if test -n "$OPENSSL_PCDIR"; then
+      PKG_CONFIG_LIBDIR="$OPENSSL_PCDIR"
+      export PKG_CONFIG_LIBDIR
+    fi
+         $PKGCONFIG --cflags-only-I openssl 2>/dev/null`
+
+      { $as_echo "$as_me:${as_lineno-$LINENO}: pkg-config: SSL_LIBS: \"$SSL_LIBS\"" >&5
+$as_echo "$as_me: pkg-config: SSL_LIBS: \"$SSL_LIBS\"" >&6;}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: pkg-config: SSL_LDFLAGS: \"$SSL_LDFLAGS\"" >&5
+$as_echo "$as_me: pkg-config: SSL_LDFLAGS: \"$SSL_LDFLAGS\"" >&6;}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: pkg-config: SSL_CPPFLAGS: \"$SSL_CPPFLAGS\"" >&5
+$as_echo "$as_me: pkg-config: SSL_CPPFLAGS: \"$SSL_CPPFLAGS\"" >&6;}
 
       LIB_OPENSSL=`echo $SSL_LDFLAGS | sed -e 's/-L//g'`
 
-            LIBS="$LIBS $SSL_LIBS"
-      CPPFLAGS="$CPPFLAGS $SSL_CPPFLAGS"
-      LDFLAGS="$LDFLAGS $SSL_LDFLAGS"
+                                          LIBS="$LIBS $SSL_LIBS"
     fi
   fi
 
+    CPPFLAGS="$CPPFLAGS $SSL_CPPFLAGS"
+  LDFLAGS="$LDFLAGS $SSL_LDFLAGS"
+
     case $host in
     *-*-msys* | *-*-mingw*)
       { $as_echo "$as_me:${as_lineno-$LINENO}: checking for gdi32" >&5
 $as_echo_n "checking for gdi32... " >&6; }
       my_ac_save_LIBS=$LIBS
       LIBS="-lgdi32 $LIBS"
@@ -19172,12 +19518,13 @@
 
 
 
     for ac_func in RAND_status \
                     RAND_screen \
                     RAND_egd \
+                    ENGINE_cleanup \
                     CRYPTO_cleanup_all_ex_data \
                     SSL_get_shutdown
 do :
   as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
 ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
 eval as_val=\$$as_ac_var
@@ -19577,14 +19924,20 @@
 
     fi
 
     if test x$PKGCONFIG != xno; then
       { $as_echo "$as_me:${as_lineno-$LINENO}: checking for gnutls options with pkg-config" >&5
 $as_echo_n "checking for gnutls options with pkg-config... " >&6; }
-            $PKGCONFIG --exists gnutls
-      if test "$?" -ne "0"; then
+            itexists=`
+    if test -n ""; then
+      PKG_CONFIG_LIBDIR=""
+      export PKG_CONFIG_LIBDIR
+    fi
+         $PKGCONFIG --exists gnutls >/dev/null 2>&1 && echo 1`
+
+      if test -z "$itexists"; then
                         PKGCONFIG="no"
         { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
       else
         { $as_echo "$as_me:${as_lineno-$LINENO}: result: found" >&5
 $as_echo "found" >&6; }
@@ -19818,14 +20171,20 @@
 
     fi
 
     if test x$PKGCONFIG != xno; then
       { $as_echo "$as_me:${as_lineno-$LINENO}: checking for nss options with pkg-config" >&5
 $as_echo_n "checking for nss options with pkg-config... " >&6; }
-            $PKGCONFIG --exists nss
-      if test "$?" -ne "0"; then
+            itexists=`
+    if test -n ""; then
+      PKG_CONFIG_LIBDIR=""
+      export PKG_CONFIG_LIBDIR
+    fi
+         $PKGCONFIG --exists nss >/dev/null 2>&1 && echo 1`
+
+      if test -z "$itexists"; then
                         PKGCONFIG="no"
         { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
       else
         { $as_echo "$as_me:${as_lineno-$LINENO}: result: found" >&5
 $as_echo "found" >&6; }
@@ -19849,12 +20208,18 @@
         else
           addlib="-lnss3"
           addcflags=""
           version="unknown"
         fi
       fi
+    else
+        # Without pkg-config, we'll kludge in some defaults
+        addlib="-L$OPT_NSS/lib -lssl3 -lsmime3 -lnss3 -lplds4 -lplc4 -lnspr4 -lpthread -ldl"
+        addcflags="-I$OPT_NSS/include"
+        version="unknown"
+        nssprefix=$OPT_NSS
     fi
 
             { $as_echo "$as_me:${as_lineno-$LINENO}: checking for PK11_CreateGenericObject in -lnss3" >&5
 $as_echo_n "checking for PK11_CreateGenericObject in -lnss3... " >&6; }
 if test "${ac_cv_lib_nss3_PK11_CreateGenericObject+set}" = set; then :
   $as_echo_n "(cached) " >&6
@@ -20200,14 +20565,20 @@
 
     fi
 
     if test x$PKGCONFIG != xno; then
       { $as_echo "$as_me:${as_lineno-$LINENO}: checking for libssh2 options with pkg-config" >&5
 $as_echo_n "checking for libssh2 options with pkg-config... " >&6; }
-            $PKGCONFIG --exists libssh2
-      if test "$?" -ne "0"; then
+            itexists=`
+    if test -n ""; then
+      PKG_CONFIG_LIBDIR=""
+      export PKG_CONFIG_LIBDIR
+    fi
+         $PKGCONFIG --exists libssh2 >/dev/null 2>&1 && echo 1`
+
+      if test -z "$itexists"; then
                         PKGCONFIG="no"
         { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
       else
         { $as_echo "$as_me:${as_lineno-$LINENO}: result: found" >&5
 $as_echo "found" >&6; }
@@ -20494,80 +20865,13 @@
 
        fi
 
        ;;
 esac
 
-OPT_THREAD=on
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking AIX 4.3 or later" >&5
-$as_echo_n "checking AIX 4.3 or later... " >&6; }
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-#if defined(_AIX) && defined(_AIX43)
-printf("just fine");
-#else
-#error "this is not AIX 4.3 or later"
-#endif
-
-_ACEOF
-if ac_fn_c_try_cpp "$LINENO"; then :
-   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-   RECENTAIX=yes
-   OPT_THREAD=off
-else
-   { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-
-fi
-rm -f conftest.err conftest.$ac_ext
-
-# Check whether --enable-thread was given.
-if test "${enable_thread+set}" = set; then :
-  enableval=$enable_thread;  case "$enableval" in
-  no)
-    OPT_THREAD=off
-    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: libcurl will not get built using thread-safe functions" >&5
-$as_echo "$as_me: WARNING: libcurl will not get built using thread-safe functions" >&2;}
-    ;;
-  *)
-    ;;
-  esac
-
-
-fi
-
-
-if test X"$OPT_THREAD" = Xoff
-then
-
-$as_echo "#define DISABLED_THREADSAFE 1" >>confdefs.h
-
-else
-
-
-
-
-
-  checkfor_gmtime_r="yes"
-fi
-
-
-
-if test "x$RECENTAIX" = "xyes"; then
-
-
-$as_echo "#define _THREAD_SAFE 1" >>confdefs.h
-
-
-
-
-  checkfor_gmtime_r="yes"
-fi
 
 
 
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ANSI C header files" >&5
 $as_echo_n "checking for ANSI C header files... " >&6; }
 if test "${ac_cv_header_stdc+set}" = set; then :
@@ -21329,12 +21633,46 @@
 
 
 # The cast to long int works around a bug in the HP C Compiler
 # version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
 # declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
 # This bug is HP SR number 8606223364.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking size of long" >&5
+$as_echo_n "checking size of long... " >&6; }
+if test "${ac_cv_sizeof_long+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (long))" "ac_cv_sizeof_long"        "$ac_includes_default"; then :
+
+else
+  if test "$ac_cv_type_long" = yes; then
+     { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+{ as_fn_set_status 77
+as_fn_error "cannot compute sizeof (long)
+See \`config.log' for more details." "$LINENO" 5; }; }
+   else
+     ac_cv_sizeof_long=0
+   fi
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_long" >&5
+$as_echo "$ac_cv_sizeof_long" >&6; }
+
+
+
+cat >>confdefs.h <<_ACEOF
+#define SIZEOF_LONG $ac_cv_sizeof_long
+_ACEOF
+
+
+# The cast to long int works around a bug in the HP C Compiler
+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
+# This bug is HP SR number 8606223364.
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking size of int" >&5
 $as_echo_n "checking size of int... " >&6; }
 if test "${ac_cv_sizeof_int+set}" = set; then :
   $as_echo_n "(cached) " >&6
 else
   if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (int))" "ac_cv_sizeof_int"        "$ac_includes_default"; then :
@@ -21363,39 +21701,39 @@
 
 
 # The cast to long int works around a bug in the HP C Compiler
 # version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
 # declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
 # This bug is HP SR number 8606223364.
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking size of long" >&5
-$as_echo_n "checking size of long... " >&6; }
-if test "${ac_cv_sizeof_long+set}" = set; then :
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking size of short" >&5
+$as_echo_n "checking size of short... " >&6; }
+if test "${ac_cv_sizeof_short+set}" = set; then :
   $as_echo_n "(cached) " >&6
 else
-  if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (long))" "ac_cv_sizeof_long"        "$ac_includes_default"; then :
+  if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (short))" "ac_cv_sizeof_short"        "$ac_includes_default"; then :
 
 else
-  if test "$ac_cv_type_long" = yes; then
+  if test "$ac_cv_type_short" = yes; then
      { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
 $as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
 { as_fn_set_status 77
-as_fn_error "cannot compute sizeof (long)
+as_fn_error "cannot compute sizeof (short)
 See \`config.log' for more details." "$LINENO" 5; }; }
    else
-     ac_cv_sizeof_long=0
+     ac_cv_sizeof_short=0
    fi
 fi
 
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_long" >&5
-$as_echo "$ac_cv_sizeof_long" >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_short" >&5
+$as_echo "$ac_cv_sizeof_short" >&6; }
 
 
 
 cat >>confdefs.h <<_ACEOF
-#define SIZEOF_LONG $ac_cv_sizeof_long
+#define SIZEOF_SHORT $ac_cv_sizeof_short
 _ACEOF
 
 
 
   if test -z "$ac_cv_sizeof_long" ||
     test "$ac_cv_sizeof_long" -eq "0"; then
@@ -25027,12 +25365,13 @@
             #
   tst_links_getaddrinfo="unknown"
   tst_proto_getaddrinfo="unknown"
   tst_compi_getaddrinfo="unknown"
   tst_works_getaddrinfo="unknown"
   tst_allow_getaddrinfo="unknown"
+  tst_tsafe_getaddrinfo="unknown"
   #
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking if getaddrinfo can be linked" >&5
 $as_echo_n "checking if getaddrinfo can be linked... " >&6; }
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -25227,12 +25566,115 @@
 
     ac_cv_func_getaddrinfo="yes"
   else
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
     ac_cv_func_getaddrinfo="no"
+    ac_cv_func_getaddrinfo_threadsafe="no"
+  fi
+  #
+  if test "$ac_cv_func_getaddrinfo" = "yes"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if getaddrinfo is threadsafe" >&5
+$as_echo_n "checking if getaddrinfo is threadsafe... " >&6; }
+    case $host_os in
+      aix[1234].* | aix5.[01].*)
+                tst_tsafe_getaddrinfo="no"
+        ;;
+      aix*)
+                tst_tsafe_getaddrinfo="yes"
+        ;;
+      darwin[12345].*)
+                tst_tsafe_getaddrinfo="no"
+        ;;
+      darwin*)
+                tst_tsafe_getaddrinfo="yes"
+        ;;
+      freebsd[1234].* | freebsd5.[1234]*)
+                tst_tsafe_getaddrinfo="no"
+        ;;
+      freebsd*)
+                tst_tsafe_getaddrinfo="yes"
+        ;;
+      hpux[123456789].* | hpux10.* | hpux11.0* | hpux11.10*)
+                tst_tsafe_getaddrinfo="no"
+        ;;
+      hpux*)
+                tst_tsafe_getaddrinfo="yes"
+        ;;
+      netbsd[123].*)
+                tst_tsafe_getaddrinfo="no"
+        ;;
+      netbsd*)
+                tst_tsafe_getaddrinfo="yes"
+        ;;
+      *bsd*)
+                tst_tsafe_getaddrinfo="no"
+        ;;
+      solaris2*)
+                tst_tsafe_getaddrinfo="yes"
+        ;;
+    esac
+    if test "$tst_tsafe_getaddrinfo" = "unknown"; then
+
+
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+        $curl_includes_ws2tcpip
+        $curl_includes_sys_socket
+        $curl_includes_netdb
+
+int main (void)
+{
+#ifdef h_errno
+  return 0;
+#else
+  force compilation error
+#endif
+}
+
+
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+
+    tst_symbol_defined="yes"
+
+else
+
+    tst_symbol_defined="no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  if test "$tst_symbol_defined" = "yes"; then
+    curl_cv_have_def_h_errno=yes
+
+  else
+    curl_cv_have_def_h_errno=no
+
+  fi
+
+      if test "$curl_cv_have_def_h_errno" = "no"; then
+        tst_tsafe_getaddrinfo="no"
+      fi
+    fi
+    if test "$tst_tsafe_getaddrinfo" = "unknown"; then
+      tst_tsafe_getaddrinfo="yes"
+    fi
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $tst_tsafe_getaddrinfo" >&5
+$as_echo "$tst_tsafe_getaddrinfo" >&6; }
+    if test "$tst_tsafe_getaddrinfo" = "yes"; then
+
+cat >>confdefs.h <<_ACEOF
+#define HAVE_GETADDRINFO_THREADSAFE 1
+_ACEOF
+
+      ac_cv_func_getaddrinfo_threadsafe="yes"
+    else
+      ac_cv_func_getaddrinfo_threadsafe="no"
+    fi
   fi
 
 
       #
   tst_links_gethostbyaddr="unknown"
   tst_proto_gethostbyaddr="unknown"
@@ -33151,109 +33593,106 @@
 else
   USE_MANUAL_TRUE='#'
   USE_MANUAL_FALSE=
 fi
 
 
-aresembedded="unknown"
-configure_rundir=`pwd`
-embedded_ares_builddir="$configure_rundir/ares"
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to enable c-ares" >&5
-$as_echo_n "checking whether to enable c-ares... " >&6; }
-
-
-# Check whether --enable-ares was given.
-if test "${enable_ares+set}" = set; then :
-  enableval=$enable_ares;  case "$enableval" in
-  no)
-       { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-       ;;
-  *)   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-
-       if test "x$IPV6_ENABLED" = "x1"; then
-         { $as_echo "$as_me:${as_lineno-$LINENO}: c-ares may not work properly with ipv6" >&5
-$as_echo "$as_me: c-ares may not work properly with ipv6" >&6;}
-       fi
-
-
-$as_echo "#define USE_ARES 1" >>confdefs.h
 
-              HAVE_ARES="1"
 
-       curl_ares_msg="enabled"
 
-       LIBS="-lcares $LIBS"
-
-                                   if test "x$enableval" = "xyes" ; then
-         if test -d "$srcdir/ares"; then
-            aresembedded="yes"
-            subdirs="$subdirs ares"
-
-                                    LDFLAGS="$LDFLAGS -L$embedded_ares_builddir"
-         fi
-       else
-         CPPFLAGS="$CPPFLAGS -I$enableval/include"
-         LDFLAGS="$LDFLAGS -L$enableval/lib"
-       fi
-
-       if test -z "$aresembedded"; then
-                                    { $as_echo "$as_me:${as_lineno-$LINENO}: checking that c-ares is good and recent enough" >&5
+  #
+  if test "$want_ares" = "yes"; then
+        clean_CPPFLAGS="$CPPFLAGS"
+    clean_LDFLAGS="$LDFLAGS"
+    clean_LIBS="$LIBS"
+    embedded_ares="unknown"
+    configure_runpath=`pwd`
+    embedded_ares_builddir="$configure_runpath/ares"
+    if test -n "$want_ares_path"; then
+            ares_CPPFLAGS="-I$want_ares_path/include"
+      ares_LDFLAGS="-L$want_ares_path/lib"
+      ares_LIBS="-lcares"
+    else
+            if test -d "$srcdir/ares"; then
+                embedded_ares="yes"
+        subdirs="$subdirs ares"
+
+                        ares_CPPFLAGS=""
+        ares_LDFLAGS="-L$embedded_ares_builddir"
+        ares_LIBS="-lcares"
+      else
+                ares_CPPFLAGS=""
+        ares_LDFLAGS=""
+        ares_LIBS="-lcares"
+      fi
+    fi
+    #
+    CPPFLAGS="$ares_CPPFLAGS $clean_CPPFLAGS"
+    LDFLAGS="$ares_LDFLAGS $clean_LDFLAGS"
+    LIBS="$ares_LIBS $clean_LIBS"
+    #
+    if test "$embedded_ares" != "yes"; then
+                  { $as_echo "$as_me:${as_lineno-$LINENO}: checking that c-ares is good and recent enough" >&5
 $as_echo_n "checking that c-ares is good and recent enough... " >&6; }
-         cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
 
 #include <ares.h>
-             /* set of dummy functions in case c-ares was built with debug */
-             void curl_dofree() { }
-             void curl_sclose() { }
-             void curl_domalloc() { }
-             void curl_docalloc() { }
-             void curl_socket() { }
+          /* set of dummy functions in case c-ares was built with debug */
+          void curl_dofree() { }
+          void curl_sclose() { }
+          void curl_domalloc() { }
+          void curl_docalloc() { }
+          void curl_socket() { }
 
 int main (void)
 {
 
-             ares_channel channel;
-             ares_cancel(channel); /* added in 1.2.0 */
-             ares_process_fd(channel, 0, 0); /* added in 1.4.0 */
+          ares_channel channel;
+          ares_cancel(channel); /* added in 1.2.0 */
+          ares_process_fd(channel, 0, 0); /* added in 1.4.0 */
 
  ;
  return 0;
 }
 
 _ACEOF
 if ac_fn_c_try_link "$LINENO"; then :
 
-           { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 
 else
 
-           { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
-           as_fn_error "c-ares library defective or too old" "$LINENO" 5
+        as_fn_error "c-ares library defective or too old" "$LINENO" 5
+                CPPFLAGS="$clean_CPPFLAGS"
+        LDFLAGS="$clean_LDFLAGS"
+        LIBS="$clean_LIBS"
+        # prevent usage
+        want_ares="no"
 
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
-       fi
-       ;;
-  esac
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
+    fi
+    if test "$want_ares" = "yes"; then
 
-fi
+$as_echo "#define USE_ARES 1" >>confdefs.h
+
+      USE_ARES=1
 
+      curl_ares_msg="enabled"
+    fi
+  fi
 
 
 
-if test x$aresembedded = xyes; then
+if test x$embedded_ares = xyes; then
   USE_EMBEDDED_ARES_TRUE=
   USE_EMBEDDED_ARES_FALSE='#'
 else
   USE_EMBEDDED_ARES_TRUE='#'
   USE_EMBEDDED_ARES_FALSE=
 fi
@@ -33294,13 +33733,13 @@
 $as_echo "yes" >&6; }
 
 $as_echo "#define USE_WINDOWS_SSPI 1" >>confdefs.h
 
          USE_WINDOWS_SSPI=1
 
-         curl_sspi_msg="yes"
+         curl_sspi_msg="enabled"
        else
          { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: --enable-sspi Ignored. Only supported on native Windows builds." >&5
 $as_echo "$as_me: WARNING: --enable-sspi Ignored. Only supported on native Windows builds." >&2;}
        fi
@@ -33486,13 +33925,13 @@
 if test "x$IPV6_ENABLED" = "x1"; then
   SUPPORT_FEATURES="$SUPPORT_FEATURES IPv6"
 fi
 if test "x$HAVE_LIBZ" = "x1"; then
   SUPPORT_FEATURES="$SUPPORT_FEATURES libz"
 fi
-if test "x$HAVE_ARES" = "x1"; then
+if test "x$USE_ARES" = "x1"; then
   SUPPORT_FEATURES="$SUPPORT_FEATURES AsynchDNS"
 fi
 if test "x$IDN_ENABLED" = "x1"; then
   SUPPORT_FEATURES="$SUPPORT_FEATURES IDN"
 fi
 if test "x$USE_WINDOWS_SSPI" = "x1"; then
@@ -33531,16 +33970,39 @@
 if test "x$CURL_DISABLE_DICT" != "x1"; then
   SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS DICT"
 fi
 if test "x$CURL_DISABLE_TFTP" != "x1"; then
   SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS TFTP"
 fi
+if test "x$CURL_DISABLE_POP3" != "x1"; then
+  SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS POP3"
+  if test "x$SSL_ENABLED" = "x1"; then
+    SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS POP3S"
+  fi
+fi
+if test "x$CURL_DISABLE_IMAP" != "x1"; then
+  SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS IMAP"
+  if test "x$SSL_ENABLED" = "x1"; then
+    SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS IMAPS"
+  fi
+fi
+if test "x$CURL_DISABLE_SMTP" != "x1"; then
+  SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS SMTP"
+  if test "x$SSL_ENABLED" = "x1"; then
+    SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS SMTPS"
+  fi
+fi
 if test "x$USE_LIBSSH2" = "x1"; then
   SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS SCP"
   SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS SFTP"
 fi
+if test "x$CURL_DISABLE_RTSP" != "x1"; then
+  SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS RTSP"
+fi
+
+SUPPORT_PROTOCOLS=`echo $SUPPORT_PROTOCOLS | tr ' ' '\012' | sort | tr '\012' ' '`
 
 
 
 
 squeeze CFLAGS
 squeeze CPPFLAGS
@@ -33549,14 +34011,17 @@
 squeeze LIBS
 
 squeeze CURL_LIBS
 squeeze LIBCURL_LIBS
 squeeze TEST_SERVER_LIBS
 
+squeeze SUPPORT_FEATURES
+squeeze SUPPORT_PROTOCOLS
+
 if test "x$want_curldebug_assumed" = "xyes" &&
-  test "x$want_curldebug" = "xyes" && test "x$HAVE_ARES" = "x1"; then
+  test "x$want_curldebug" = "xyes" && test "x$USE_ARES" = "x1"; then
   ac_configure_args="$ac_configure_args --enable-curldebug"
 fi
 
 ac_config_files="$ac_config_files Makefile docs/Makefile docs/examples/Makefile docs/libcurl/Makefile include/Makefile include/curl/Makefile src/Makefile lib/Makefile tests/Makefile tests/data/Makefile tests/server/Makefile tests/libtest/Makefile packages/Makefile packages/Win32/Makefile packages/Win32/cygwin/Makefile packages/Linux/Makefile packages/Linux/RPM/Makefile packages/Linux/RPM/curl.spec packages/Linux/RPM/curl-ssl.spec packages/Solaris/Makefile packages/EPM/curl.list packages/EPM/Makefile packages/vms/Makefile packages/AIX/Makefile packages/AIX/RPM/Makefile packages/AIX/RPM/curl.spec curl-config libcurl.pc"
 
 cat >confcache <<\_ACEOF
@@ -34106,13 +34571,13 @@
 cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # Save the log message, to keep $0 and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
 This file was extended by curl $as_me -, which was
-generated by GNU Autoconf 2.64.  Invocation command line was
+generated by GNU Autoconf 2.65.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
   $ $0 $@
@@ -34146,12 +34611,13 @@
 and actions are specified as TAGs, all are instantiated by default.
 
 Usage: $0 [OPTION]... [TAG]...
 
   -h, --help       print this help, then exit
   -V, --version    print version number and configuration settings, then exit
+      --config     print configuration, then exit
   -q, --quiet, --silent
                    do not print progress messages
   -d, --debug      don't remove temporary files
       --recheck    update $as_me by reconfiguring in the same conditions
       --file=FILE[:TEMPLATE]
                    instantiate the configuration file FILE
@@ -34168,16 +34634,17 @@
 $config_commands
 
 Report bugs to <a suitable curl mailing list => http://curl.haxx.se/mail/>."
 
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
 curl config.status -
-configured by $0, generated by GNU Autoconf 2.64,
-  with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
+configured by $0, generated by GNU Autoconf 2.65,
+  with options \\"\$ac_cs_config\\"
 
 Copyright (C) 2009 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
 
 ac_pwd='$ac_pwd'
@@ -34208,12 +34675,14 @@
   case $ac_option in
   # Handling of the options.
   -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
     ac_cs_recheck=: ;;
   --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
     $as_echo "$ac_cs_version"; exit ;;
+  --config | --confi | --conf | --con | --co | --c )
+    $as_echo "$ac_cs_config"; exit ;;
   --debug | --debu | --deb | --de | --d | -d )
     debug=: ;;
   --file | --fil | --fi | --f )
     $ac_shift
     case $ac_optarg in
     *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
@@ -34681,13 +35150,13 @@
 :repl
 t repl
 s/'"$ac_delim"'$//
 t delim
 :nl
 h
-s/\(.\{148\}\).*/\1/
+s/\(.\{148\}\)..*/\1/
 t more1
 s/["\\]/\\&/g; s/^/"/; s/$/\\n"\\/
 p
 n
 b repl
 :more1
@@ -34695,13 +35164,13 @@
 p
 g
 s/.\{148\}//
 t nl
 :delim
 h
-s/\(.\{148\}\).*/\1/
+s/\(.\{148\}\)..*/\1/
 t more2
 s/["\\]/\\&/g; s/^/"/; s/$/"/
 p
 b
 :more2
 s/["\\]/\\&/g; s/^/"/; s/$/"\\/
@@ -36086,12 +36555,14 @@
   Verbose errors:  ${curl_verbose_msg}
   SSPI support:    ${curl_sspi_msg}
   ca cert bundle:  ${ca}
   ca cert path:    ${capath}
   LDAP support:    ${curl_ldap_msg}
   LDAPS support:   ${curl_ldaps_msg}
+  RTSP support:    ${curl_rtsp_msg}
+  Protocols:       ${SUPPORT_PROTOCOLS}
 " >&5
 $as_echo "$as_me: Configured to build curl/libcurl:
 
   curl version:    ${VERSION}
   Host setup:      ${host}
   Install prefix:  ${prefix}
@@ -36110,12 +36581,14 @@
   Verbose errors:  ${curl_verbose_msg}
   SSPI support:    ${curl_sspi_msg}
   ca cert bundle:  ${ca}
   ca cert path:    ${capath}
   LDAP support:    ${curl_ldap_msg}
   LDAPS support:   ${curl_ldaps_msg}
+  RTSP support:    ${curl_rtsp_msg}
+  Protocols:       ${SUPPORT_PROTOCOLS}
 " >&6;}
 
 if test "x$soname_bump" = "xyes"; then
 
 cat <<EOM
   SONAME bump:     yes - WARNING: this library will be built with the SONAME
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/configure.ac	2009-10-29 04:21:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/configure.ac	2010-02-05 05:41:46.000000000 +0800
@@ -2,26 +2,26 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: configure.ac,v 1.434 2009-10-28 00:33:28 yangtse Exp $
+# $Id: configure.ac,v 1.452 2010-02-04 14:40:11 yangtse Exp $
 #***************************************************************************
 dnl Process this file with autoconf to produce a configure script.
 
 AC_PREREQ(2.57)
 
 dnl We don't know the version number "statically" so we use a dash here
@@ -39,15 +39,22 @@
 AM_MAINTAINER_MODE
 
 CURL_CHECK_OPTION_DEBUG
 CURL_CHECK_OPTION_OPTIMIZE
 CURL_CHECK_OPTION_WARNINGS
 CURL_CHECK_OPTION_CURLDEBUG
+CURL_CHECK_OPTION_ARES
 
 CURL_CHECK_PATH_SEPARATOR_REQUIRED
 
+#
+# save the configure arguments
+#
+CONFIGURE_OPTIONS="\"$ac_configure_args\""
+AC_SUBST(CONFIGURE_OPTIONS)
+
 dnl SED is mandatory for configure process and libtool.
 dnl Set it now, allowing it to be changed later.
 AC_PATH_PROG([SED], [sed], [not_found],
   [$PATH:/usr/bin:/usr/local/bin])
 if test -z "$SED" || test "$SED" = "not_found"; then
   AC_MSG_ERROR([sed not found in PATH. Cannot continue without sed.])
@@ -86,12 +93,17 @@
   AC_MSG_ERROR([ar not found in PATH. Cannot continue without ar.])
 fi
 AC_SUBST([AR])
 
 AC_SUBST(libext)
 
+dnl Remove non-configure distributed curlbuild.h
+if test -f ${srcdir}/include/curl/curlbuild.h; then
+  rm -f ${srcdir}/include/curl/curlbuild.h
+fi
+
 dnl figure out the libcurl version
 VERSION=`$SED -ne 's/^#define LIBCURL_VERSION "\(.*\)"/\1/p' ${srcdir}/include/curl/curlver.h`
 AM_INIT_AUTOMAKE(curl,$VERSION)
 AC_MSG_CHECKING([curl version])
 AC_MSG_RESULT($VERSION)
 
@@ -121,12 +133,13 @@
     curl_idn_msg="no      (--with-libidn)"
  curl_manual_msg="no      (--enable-manual)"
 curl_verbose_msg="enabled (--disable-verbose)"
    curl_sspi_msg="no      (--enable-sspi)"
    curl_ldap_msg="no      (--enable-ldap / --with-ldap-lib / --with-lber-lib)"
   curl_ldaps_msg="no      (--enable-ldaps)"
+   curl_rtsp_msg="no      (--enable-rtsp)"
 
 dnl
 dnl Save anything in $LIBS for later
 dnl
 ALL_LIBS=$LIBS
 
@@ -145,12 +158,13 @@
 CURL_CONFIGURE_CURL_OFF_T
 
 dnl This defines _ALL_SOURCE for AIX
 CURL_CHECK_AIX_ALL_SOURCE
 
 dnl Our configure and build reentrant settings
+CURL_CONFIGURE_THREAD_SAFE
 CURL_CONFIGURE_REENTRANT
 
 dnl check for how to do large files
 AC_SYS_LARGEFILE
 
 dnl support building of Windows DLLs
@@ -165,12 +179,23 @@
     ;;
   *)
     AC_MSG_RESULT([no])
     ;;
 esac
 
+AC_MSG_CHECKING([if compiler is icc (to build with PIC)])
+case $CC in
+  icc | */icc)
+    AC_MSG_RESULT([yes])
+    with_pic=yes
+    ;;
+  *)
+    AC_MSG_RESULT([no])
+    ;;
+esac
+
 dnl libtool setup
 AC_PROG_LIBTOOL
 
 AC_MSG_CHECKING([if we need -mimpure-text])
 mimpure=no
 case $host in
@@ -229,33 +254,23 @@
 CURL_CHECK_COMPILER
 CURL_SET_COMPILER_BASIC_OPTS
 CURL_SET_COMPILER_DEBUG_OPTS
 CURL_SET_COMPILER_OPTIMIZE_OPTS
 CURL_SET_COMPILER_WARNING_OPTS
 
-case $host in
+if test "$compiler_id" = "INTEL_UNIX_C"; then
   #
-  x86_64*linux*|amd64*freebsd*|ia64*freebsd*)
-    #
-    if test "$compiler_id" = "INTEL_UNIX_C"; then
-      #
-      if test "$compiler_num" -ge "900" &&
-        test "$compiler_num" -lt "1000"; then
-        dnl icc 9.X specific
-        CFLAGS="$CFLAGS -i-dynamic"
-      fi
-      #
-      if test "$compiler_num" -ge "1000"; then
-        dnl icc 10.X or later
-        CFLAGS="$CFLAGS -shared-intel"
-      fi
-      #
-    fi
-    ;;
+  if test "$compiler_num" -ge "1000"; then
+    dnl icc 10.X or later
+    CFLAGS="$CFLAGS -shared-intel"
+  elif test "$compiler_num" -ge "900"; then
+    dnl icc 9.X specific
+    CFLAGS="$CFLAGS -i-dynamic"
+  fi
   #
-esac
+fi
 
 CURL_CHECK_COMPILER_HALT_ON_ERROR
 CURL_CHECK_COMPILER_ARRAY_SIZE_NEGATIVE
 
 CURL_CHECK_NO_UNDEFINED
 AM_CONDITIONAL(NO_UNDEFINED, test x$need_no_undefined = xyes)
@@ -302,14 +317,16 @@
 AC_HELP_STRING([--enable-http],[Enable HTTP support])
 AC_HELP_STRING([--disable-http],[Disable HTTP support]),
 [ case "$enableval" in
   no)
        AC_MSG_RESULT(no)
        AC_DEFINE(CURL_DISABLE_HTTP, 1, [to disable HTTP])
-       AC_MSG_WARN([disable HTTP disables FTP over proxy])
+       AC_MSG_WARN([disable HTTP disables FTP over proxy and RTSP])
        AC_SUBST(CURL_DISABLE_HTTP, [1])
+       AC_DEFINE(CURL_DISABLE_RTSP, 1, [to disable RTSP])
+       AC_SUBST(CURL_DISABLE_RTSP, [1])
        ;;
   *)   AC_MSG_RESULT(yes)
        ;;
   esac ],
        AC_MSG_RESULT(yes)
 )
@@ -400,12 +417,38 @@
   esac ],
        AC_MSG_RESULT(no)
        AC_DEFINE(CURL_DISABLE_LDAPS, 1, [to disable LDAPS])
        AC_SUBST(CURL_DISABLE_LDAPS, [1])
 )
 
+AC_MSG_CHECKING([whether to support rtsp])
+AC_ARG_ENABLE(rtsp,
+AC_HELP_STRING([--enable-rtsp],[Enable RTSP support])
+AC_HELP_STRING([--disable-rtsp],[Disable RTSP support]),
+[ case "$enableval" in
+  no)
+       AC_MSG_RESULT(no)
+       AC_DEFINE(CURL_DISABLE_RTSP, 1, [to disable RTSP])
+       AC_SUBST(CURL_DISABLE_RTSP, [1])
+       ;;
+  *)   if test x$CURL_DISABLE_HTTP = x1 ; then
+          AC_MSG_ERROR(HTTP support needs to be enabled in order to enable RTSP support!)
+       else
+          AC_MSG_RESULT(yes)
+          curl_rtsp_msg="enabled"
+       fi
+       ;;
+  esac ],
+       if test "x$CURL_DISABLE_HTTP" != "x1"; then
+          AC_MSG_RESULT(yes)
+          curl_rtsp_msg="enabled"
+       else
+          AC_MSG_RESULT(no)
+       fi
+)
+
 AC_MSG_CHECKING([whether to support proxies])
 AC_ARG_ENABLE(proxy,
 AC_HELP_STRING([--enable-proxy],[Enable proxy support])
 AC_HELP_STRING([--disable-proxy],[Disable proxy support]),
 [ case "$enableval" in
   no)
@@ -462,12 +505,63 @@
   *)   AC_MSG_RESULT(yes)
        ;;
   esac ],
        AC_MSG_RESULT(yes)
 )
 
+AC_MSG_CHECKING([whether to support pop3])
+AC_ARG_ENABLE(pop3,
+AC_HELP_STRING([--enable-pop3],[Enable POP3 support])
+AC_HELP_STRING([--disable-pop3],[Disable POP3 support]),
+[ case "$enableval" in
+  no)
+       AC_MSG_RESULT(no)
+       AC_DEFINE(CURL_DISABLE_POP3, 1, [to disable POP3])
+       AC_SUBST(CURL_DISABLE_POP3, [1])
+       ;;
+  *)   AC_MSG_RESULT(yes)
+       ;;
+  esac ],
+       AC_MSG_RESULT(yes)
+)
+
+
+AC_MSG_CHECKING([whether to support imap])
+AC_ARG_ENABLE(imap,
+AC_HELP_STRING([--enable-imap],[Enable IMAP support])
+AC_HELP_STRING([--disable-imap],[Disable IMAP support]),
+[ case "$enableval" in
+  no)
+       AC_MSG_RESULT(no)
+       AC_DEFINE(CURL_DISABLE_IMAP, 1, [to disable IMAP])
+       AC_SUBST(CURL_DISABLE_IMAP, [1])
+       ;;
+  *)   AC_MSG_RESULT(yes)
+       ;;
+  esac ],
+       AC_MSG_RESULT(yes)
+)
+
+
+AC_MSG_CHECKING([whether to support smtp])
+AC_ARG_ENABLE(smtp,
+AC_HELP_STRING([--enable-smtp],[Enable SMTP support])
+AC_HELP_STRING([--disable-smtp],[Disable SMTP support]),
+[ case "$enableval" in
+  no)
+       AC_MSG_RESULT(no)
+       AC_DEFINE(CURL_DISABLE_SMTP, 1, [to disable SMTP])
+       AC_SUBST(CURL_DISABLE_SMTP, [1])
+       ;;
+  *)   AC_MSG_RESULT(yes)
+       ;;
+  esac ],
+       AC_MSG_RESULT(yes)
+)
+
+
 dnl **********************************************************************
 dnl Check for built-in manual
 dnl **********************************************************************
 
 AC_MSG_CHECKING([whether to provide built-in manual])
 AC_ARG_ENABLE(manual,
@@ -1161,39 +1255,67 @@
     PREFIX_OPENSSL=
     ;;
   *)
     dnl check the given --with-ssl spot
     PKGTEST="no"
     PREFIX_OPENSSL=$OPT_SSL
+
+    dnl Try pkg-config even when cross-compiling.  Since we
+    dnl specify PKG_CONFIG_LIBDIR we're only looking where
+    dnl the user told us to look
+    OPENSSL_PCDIR="$OPT_SSL/lib/pkgconfig"
+    AC_MSG_NOTICE([PKG_CONFIG_LIBDIR will be set to "$OPENSSL_PCDIR"])
+    if test -e "$OPENSSL_PCDIR/openssl.pc"; then
+      PKGTEST="yes"
+    fi
+
+    dnl in case pkg-config comes up empty, use what we got
+    dnl via --with-ssl
     LIB_OPENSSL="$PREFIX_OPENSSL/lib$libsuff"
     if test "$PREFIX_OPENSSL" != "/usr" ; then
-      LDFLAGS="$LDFLAGS -L$LIB_OPENSSL"
-      CPPFLAGS="$CPPFLAGS -I$PREFIX_OPENSSL/include"
+      SSL_LDFLAGS="-L$LIB_OPENSSL"
+      SSL_CPPFLAGS="-I$PREFIX_OPENSSL/include"
     fi
-    CPPFLAGS="$CPPFLAGS -I$PREFIX_OPENSSL/include/openssl"
+    SSL_CPPFLAGS="$SSL_CPPFLAGS -I$PREFIX_OPENSSL/include/openssl"
     ;;
   esac
 
   if test "$PKGTEST" = "yes"; then
 
-    CURL_CHECK_PKGCONFIG(openssl)
+    CURL_CHECK_PKGCONFIG(openssl, [$OPENSSL_PCDIR])
 
     if test "$PKGCONFIG" != "no" ; then
-      SSL_LIBS=`$PKGCONFIG --libs-only-l openssl 2>/dev/null`
-      SSL_LDFLAGS=`$PKGCONFIG --libs-only-L openssl 2>/dev/null`
-      SSL_CPPFLAGS=`$PKGCONFIG --cflags-only-I openssl 2>/dev/null`
+      SSL_LIBS=`CURL_EXPORT_PCDIR([$OPENSSL_PCDIR]) dnl
+        $PKGCONFIG --libs-only-l openssl 2>/dev/null`
+
+      SSL_LDFLAGS=`CURL_EXPORT_PCDIR([$OPENSSL_PCDIR]) dnl
+        $PKGCONFIG --libs-only-L openssl 2>/dev/null`
+
+      SSL_CPPFLAGS=`CURL_EXPORT_PCDIR([$OPENSSL_PCDIR]) dnl
+        $PKGCONFIG --cflags-only-I openssl 2>/dev/null`
+
+      AC_MSG_NOTICE([pkg-config: SSL_LIBS: "$SSL_LIBS"])
+      AC_MSG_NOTICE([pkg-config: SSL_LDFLAGS: "$SSL_LDFLAGS"])
+      AC_MSG_NOTICE([pkg-config: SSL_CPPFLAGS: "$SSL_CPPFLAGS"])
 
       LIB_OPENSSL=`echo $SSL_LDFLAGS | sed -e 's/-L//g'`
 
-      dnl use the values pkg-config reported
+      dnl use the values pkg-config reported.  This is here
+      dnl instead of below with CPPFLAGS and LDFLAGS because we only
+      dnl learn about this via pkg-config.  If we only have
+      dnl the argument to --with-ssl we don't know what
+      dnl additional libs may be necessary.  Hope that we
+      dnl don't need any.
       LIBS="$LIBS $SSL_LIBS"
-      CPPFLAGS="$CPPFLAGS $SSL_CPPFLAGS"
-      LDFLAGS="$LDFLAGS $SSL_LDFLAGS"
     fi
   fi
 
+  dnl finally, set flags to use SSL
+  CPPFLAGS="$CPPFLAGS $SSL_CPPFLAGS"
+  LDFLAGS="$LDFLAGS $SSL_LDFLAGS"
+
   dnl This is for Msys/Mingw
   case $host in
     *-*-msys* | *-*-mingw*)
       AC_MSG_CHECKING([for gdi32])
       my_ac_save_LIBS=$LIBS
       LIBS="-lgdi32 $LIBS"
@@ -1301,12 +1423,13 @@
     dnl these can only exist if openssl exists
     dnl yassl doesn't have SSL_get_shutdown
 
     AC_CHECK_FUNCS( RAND_status \
                     RAND_screen \
                     RAND_egd \
+                    ENGINE_cleanup \
                     CRYPTO_cleanup_all_ex_data \
                     SSL_get_shutdown )
 
     dnl Make an attempt to detect if this is actually yassl's headers and
     dnl OpenSSL emulation layer. We still leave everything else believing
     dnl and acting like OpenSSL.
@@ -1609,12 +1732,18 @@
         else
           addlib="-lnss3"
           addcflags=""
           version="unknown"
         fi
       fi
+    else
+        # Without pkg-config, we'll kludge in some defaults
+        addlib="-L$OPT_NSS/lib -lssl3 -lsmime3 -lnss3 -lplds4 -lplc4 -lnspr4 -lpthread -ldl"
+        addcflags="-I$OPT_NSS/include"
+        version="unknown"
+        nssprefix=$OPT_NSS
     fi
 
     dnl Check for functionPK11_CreateGenericObject
     dnl this is needed for using the PEM PKCS#11 module
     AC_CHECK_LIB(nss3, PK11_CreateGenericObject,
      [
@@ -1704,13 +1833,13 @@
       LIB_SSH2=`$PKGCONFIG --libs-only-l libssh2`
       LD_SSH2=`$PKGCONFIG --libs-only-L libssh2`
       CPP_SSH2=`$PKGCONFIG --cflags-only-I libssh2`
       version=`$PKGCONFIG --modversion libssh2`
       DIR_SSH2=`echo $LD_SSH2 | $SED -e 's/-L//'`
     fi
-    
+
     ;;
   off)
     dnl no --with-libssh2 option given, just check default places
     ;;
   *)
     dnl use the given --with-libssh2 spot
@@ -1811,91 +1940,17 @@
          AC_CHECK_HEADERS( idn-free.h tld.h )
        fi
 
        ;;
 esac
 
-dnl Default is to try the thread-safe versions of a few functions
-OPT_THREAD=on
-
-dnl detect AIX 4.3 or later
-dnl see full docs on this reasoning in the lib/hostip.c source file
-AC_MSG_CHECKING([AIX 4.3 or later])
-AC_PREPROC_IFELSE([
-#if defined(_AIX) && defined(_AIX43)
-printf("just fine");
-#else
-#error "this is not AIX 4.3 or later"
-#endif
-],
- [ AC_MSG_RESULT([yes])
-   RECENTAIX=yes
-   OPT_THREAD=off ],
- [ AC_MSG_RESULT([no]) ]
-)
-
-AC_ARG_ENABLE(thread,dnl
-AC_HELP_STRING([--disable-thread],[don't look for thread-safe functions])
-AC_HELP_STRING([--enable-thread],[look for thread-safe functions]),
-[ case "$enableval" in
-  no)
-    OPT_THREAD=off
-    AC_MSG_WARN(libcurl will not get built using thread-safe functions)
-    ;;
-  *)
-    ;;
-  esac
-]
-)
-
-if test X"$OPT_THREAD" = Xoff
-then
-  AC_DEFINE(DISABLED_THREADSAFE, 1,
-    [Set to explicitly specify we don't want to use thread-safe functions])
-else
-  dnl if test "$ipv6" != "yes"; then
-    dnl dig around for gethostbyname_r()
-    dnl the old gethostbyname_r check was done here
-
-    dnl dig around for gethostbyaddr_r()
-    dnl the old gethostbyaddr_r check was here BUT COMMENTED OUT
-  dnl fi
-
-  dnl poke around for inet_ntoa_r()
-  dnl the old inet_ntoa_r check was done here
-
-  dnl is there a localtime_r()
-  dnl the old localtime_r check was done here
-
-  dnl is there a strerror_r()
-  dnl the old strerror_r check was done here
-
-  checkfor_gmtime_r="yes"
-fi
-
-dnl for recent AIX versions, we skip all the thread-safe checks above since
-dnl they claim a thread-safe libc using the standard API. But there are
-dnl some functions still not thread-safe. Check for these!
 
 dnl Let's hope this split URL remains working:
 dnl http://publibn.boulder.ibm.com/doc_link/en_US/a_doc_lib/aixprggd/ \
 dnl genprogc/thread_quick_ref.htm
 
-if test "x$RECENTAIX" = "xyes"; then
-
-  AC_DEFINE(_THREAD_SAFE, 1, [define this if you need it to compile thread-safe code])
-
-  dnl is there a localtime_r()
-  dnl the old localtime_r check was done here
-
-  dnl is there a strerror_r()
-  dnl the old strerror_r check was done here
-
-  checkfor_gmtime_r="yes"
-fi
-
 
 dnl **********************************************************************
 dnl Back to "normal" configuring
 dnl **********************************************************************
 
 dnl Checks for header files.
@@ -1980,14 +2035,15 @@
 AC_TYPE_SIZE_T
 AC_HEADER_TIME
 CURL_CHECK_STRUCT_TIMEVAL
 CURL_VERIFY_RUNTIMELIBS
 
 AC_CHECK_SIZEOF(size_t)
-AC_CHECK_SIZEOF(int)
 AC_CHECK_SIZEOF(long)
+AC_CHECK_SIZEOF(int)
+AC_CHECK_SIZEOF(short)
 CURL_CONFIGURE_LONG
 AC_CHECK_SIZEOF(time_t)
 AC_CHECK_SIZEOF(off_t)
 
 soname_bump=no
 if test x"$ac_cv_native_windows" != "xyes" &&
@@ -2217,87 +2273,14 @@
   curl_manual_msg="enabled"
 fi
 
 dnl set variable for use in automakefile(s)
 AM_CONDITIONAL(USE_MANUAL, test x"$USE_MANUAL" = x1)
 
-aresembedded="unknown"
-configure_rundir=`pwd`
-embedded_ares_builddir="$configure_rundir/ares"
-AC_MSG_CHECKING([whether to enable c-ares])
-AC_ARG_ENABLE(ares,
-AC_HELP_STRING([--enable-ares=PATH],[Enable c-ares for name lookups])
-AC_HELP_STRING([--disable-ares],[Disable c-ares for name lookups]),
-[ case "$enableval" in
-  no)
-       AC_MSG_RESULT(no)
-       ;;
-  *)   AC_MSG_RESULT(yes)
-
-       if test "x$IPV6_ENABLED" = "x1"; then
-         AC_MSG_NOTICE([c-ares may not work properly with ipv6])
-       fi
-
-       AC_DEFINE(USE_ARES, 1, [Define if you want to enable c-ares support])
-       dnl substitute HAVE_ARES for curl-config and similar
-       HAVE_ARES="1"
-       AC_SUBST(HAVE_ARES)
-       curl_ares_msg="enabled"
-
-       LIBS="-lcares $LIBS"
-
-       dnl For backwards compatibility default to includes/lib in srcdir/ares
-       dnl If a value is specified it is assumed that the libs are in $val/lib
-       dnl and the includes are in $val/include. This is the default setup for
-       dnl ares so it should not be a problem.
-       if test "x$enableval" = "xyes" ; then
-         if test -d "$srcdir/ares"; then
-            aresembedded="yes"
-            AC_CONFIG_SUBDIRS(ares)
-            dnl Since c-ares has installable configured header files, path
-            dnl inclusion is fully done in makefiles for in-tree builds.
-            LDFLAGS="$LDFLAGS -L$embedded_ares_builddir"
-         fi
-       else
-         CPPFLAGS="$CPPFLAGS -I$enableval/include"
-         LDFLAGS="$LDFLAGS -L$enableval/lib"
-       fi
-
-       if test -z "$aresembedded"; then
-         dnl verify that a sufficient c-ares is here if we have pointed one
-         dnl out and don't use the "embedded" ares dir (in which case we don't
-         dnl check it because it might not have been built yet)
-         AC_MSG_CHECKING([that c-ares is good and recent enough])
-         AC_LINK_IFELSE([
-           AC_LANG_PROGRAM([[
-#include <ares.h>
-             /* set of dummy functions in case c-ares was built with debug */
-             void curl_dofree() { }
-             void curl_sclose() { }
-             void curl_domalloc() { }
-             void curl_docalloc() { }
-             void curl_socket() { }
-           ]],[[
-             ares_channel channel;
-             ares_cancel(channel); /* added in 1.2.0 */
-             ares_process_fd(channel, 0, 0); /* added in 1.4.0 */
-           ]])
-         ],[
-           AC_MSG_RESULT([yes])
-         ],[
-           AC_MSG_RESULT([no])
-           AC_MSG_ERROR([c-ares library defective or too old])
-         ])
-       fi
-       ;;
-  esac ],
-       AC_MSG_RESULT(no)
-)
-
-dnl set variable for use in automakefile(s)
-AM_CONDITIONAL(USE_EMBEDDED_ARES, test x$aresembedded = xyes)
+CURL_CHECK_LIB_ARES
+AM_CONDITIONAL(USE_EMBEDDED_ARES, test x$embedded_ares = xyes)
 
 dnl ************************************************************
 dnl disable verbose text strings
 dnl
 AC_MSG_CHECKING([whether to enable verbose strings])
 AC_ARG_ENABLE(verbose,
@@ -2325,13 +2308,13 @@
 [ case "$enableval" in
   yes)
        if test "$ac_cv_native_windows" = "yes"; then
          AC_MSG_RESULT(yes)
          AC_DEFINE(USE_WINDOWS_SSPI, 1, [to enable SSPI support])
          AC_SUBST(USE_WINDOWS_SSPI, [1])
-         curl_sspi_msg="yes"
+         curl_sspi_msg="enabled"
        else
          AC_MSG_RESULT(no)
          AC_MSG_WARN([--enable-sspi Ignored. Only supported on native Windows builds.])
        fi
        ;;
   *)
@@ -2483,13 +2466,13 @@
 if test "x$IPV6_ENABLED" = "x1"; then
   SUPPORT_FEATURES="$SUPPORT_FEATURES IPv6"
 fi
 if test "x$HAVE_LIBZ" = "x1"; then
   SUPPORT_FEATURES="$SUPPORT_FEATURES libz"
 fi
-if test "x$HAVE_ARES" = "x1"; then
+if test "x$USE_ARES" = "x1"; then
   SUPPORT_FEATURES="$SUPPORT_FEATURES AsynchDNS"
 fi
 if test "x$IDN_ENABLED" = "x1"; then
   SUPPORT_FEATURES="$SUPPORT_FEATURES IDN"
 fi
 if test "x$USE_WINDOWS_SSPI" = "x1"; then
@@ -2529,16 +2512,42 @@
 if test "x$CURL_DISABLE_DICT" != "x1"; then
   SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS DICT"
 fi
 if test "x$CURL_DISABLE_TFTP" != "x1"; then
   SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS TFTP"
 fi
+if test "x$CURL_DISABLE_POP3" != "x1"; then
+  SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS POP3"
+  if test "x$SSL_ENABLED" = "x1"; then
+    SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS POP3S"
+  fi
+fi
+if test "x$CURL_DISABLE_IMAP" != "x1"; then
+  SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS IMAP"
+  if test "x$SSL_ENABLED" = "x1"; then
+    SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS IMAPS"
+  fi
+fi
+if test "x$CURL_DISABLE_SMTP" != "x1"; then
+  SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS SMTP"
+  if test "x$SSL_ENABLED" = "x1"; then
+    SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS SMTPS"
+  fi
+fi
 if test "x$USE_LIBSSH2" = "x1"; then
   SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS SCP"
   SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS SFTP"
 fi
+if test "x$CURL_DISABLE_RTSP" != "x1"; then
+  SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS RTSP"
+fi
+
+dnl replace spaces with newlines
+dnl sort the lines
+dnl replace the newlines back to spaces
+SUPPORT_PROTOCOLS=`echo $SUPPORT_PROTOCOLS | tr ' ' '\012' | sort | tr '\012' ' '`
 
 AC_SUBST(SUPPORT_PROTOCOLS)
 
 dnl squeeze whitespace out of some variables
 
 squeeze CFLAGS
@@ -2548,14 +2557,17 @@
 squeeze LIBS
 
 squeeze CURL_LIBS
 squeeze LIBCURL_LIBS
 squeeze TEST_SERVER_LIBS
 
+squeeze SUPPORT_FEATURES
+squeeze SUPPORT_PROTOCOLS
+
 if test "x$want_curldebug_assumed" = "xyes" &&
-  test "x$want_curldebug" = "xyes" && test "x$HAVE_ARES" = "x1"; then
+  test "x$want_curldebug" = "xyes" && test "x$USE_ARES" = "x1"; then
   ac_configure_args="$ac_configure_args --enable-curldebug"
 fi
 
 AC_CONFIG_FILES([Makefile \
            docs/Makefile \
            docs/examples/Makefile \
@@ -2607,12 +2619,14 @@
   Verbose errors:  ${curl_verbose_msg}
   SSPI support:    ${curl_sspi_msg}
   ca cert bundle:  ${ca}
   ca cert path:    ${capath}
   LDAP support:    ${curl_ldap_msg}
   LDAPS support:   ${curl_ldaps_msg}
+  RTSP support:    ${curl_rtsp_msg}
+  Protocols:       ${SUPPORT_PROTOCOLS}
 ])
 
 if test "x$soname_bump" = "xyes"; then
 
 cat <<EOM
   SONAME bump:     yes - WARNING: this library will be built with the SONAME
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/curl-config.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/curl-config.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/curl-config.in	2009-03-20 20:42:29.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/curl-config.in	2009-11-18 00:43:31.000000000 +0800
@@ -16,13 +16,13 @@
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: curl-config.in,v 1.36 2009-03-20 12:42:29 bagder Exp $
+# $Id: curl-config.in,v 1.37 2009-11-14 19:23:26 claesjac Exp $
 ###########################################################################
 
 prefix=@prefix@
 exec_prefix=@exec_prefix@
 includedir=@includedir@
 
@@ -34,12 +34,13 @@
 Available values for OPTION include:
 
   --ca        ca bundle install path
   --cc        compiler
   --cflags    pre-processor and compiler flags
   --checkfor [version] check for (lib)curl of the specified version
+  --configure the arguments given to configure when building curl
   --features  newline separated list of enabled features
   --help      display this help and exit
   --libs      library linking information
   --prefix    curl install prefix
   --protocols newline separated list of enabled protocols
   --static-libs static libcurl library linking information
@@ -143,12 +144,16 @@
 	;;
 
     --static-libs)
 	echo @libdir@/libcurl.@libext@ @LDFLAGS@ @LIBCURL_LIBS@ @LIBS@
 	;;
 
+    --configure)
+      echo @CONFIGURE_OPTIONS@
+    ;;
+
     *)
         echo "unknown option: $1"
 	usage 1
 	;;
     esac
     shift
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/BINDINGS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/BINDINGS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/BINDINGS	2009-03-02 17:02:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/BINDINGS	2009-11-30 03:11:27.000000000 +0800
@@ -60,12 +60,16 @@
 
 Euphoria
 
   Written by Ray Smith
   http://rays-web.com/eulibcurl.htm
 
+Falcon
+
+  http://www.falconpl.org/index.ftd?page_id=prjs&prj_id=curl
+
 Ferite
 
   Written by Paul Querna
   http://www.ferite.org/
 
 Gambas
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/curl.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/curl.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/curl.1	2009-10-29 04:21:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/curl.1	2010-02-02 20:40:53.000000000 +0800
@@ -2,29 +2,29 @@
 .\" *                                  _   _ ____  _
 .\" *  Project                     ___| | | |  _ \| |
 .\" *                             / __| | | | |_) | |
 .\" *                            | (__| |_| |  _ <| |___
 .\" *                             \___|\___/|_| \_\_____|
 .\" *
-.\" * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+.\" * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
 .\" *
 .\" * This software is licensed as described in the file COPYING, which
 .\" * you should have received as part of this distribution. The terms
 .\" * are also available at http://curl.haxx.se/docs/copyright.html.
 .\" *
 .\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
 .\" * copies of the Software, and permit persons to whom the Software is
 .\" * furnished to do so, under the terms of the COPYING file.
 .\" *
 .\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 .\" * KIND, either express or implied.
 .\" *
-.\" * $Id: curl.1,v 1.280 2009-10-26 08:54:23 bagder Exp $
+.\" * $Id: curl.1,v 1.287 2010-02-02 12:27:12 kdudka Exp $
 .\" **************************************************************************
 .\"
-.TH curl 1 "10 July 2008" "Curl 7.19.0" "Curl Manual"
+.TH curl 1 "28 November 2009" "Curl 7.20.0" "Curl Manual"
 .SH NAME
 curl \- transfer a URL
 .SH SYNOPSIS
 .B curl [options]
 .I [URL...]
 .SH DESCRIPTION
@@ -458,25 +458,35 @@
 (FTP) Tell curl to not use the IP address the server suggests in its response
 to curl's PASV command when curl connects the data connection. Instead curl
 will re-use the same IP address it already uses for the control
 connection. (Added in 7.14.2)
 
 This option has no effect if PORT, EPRT or EPSV is used instead of PASV.
-.IP "--ftp-ssl"
-(FTP) Try to use SSL/TLS for the FTP connection.  Reverts to a non-secure
-connection if the server doesn't support SSL/TLS.  See also
-\fI--ftp-ssl-control\fP and \fI--ftp-ssl-reqd\fP for different levels of
-encryption required. (Added in 7.11.0)
+.IP "--ftp-pret"
+(FTP) Tell curl to send a PRET command before PASV (and EPSV). Certain
+FTP servers, mainly drftpd, require this non-standard command for
+directory listings as well as up and downloads in PASV mode.
+(Added in 7.20.x)
+.IP "--ssl"
+(FTP, POP3, IMAP, SMTP) Try to use SSL/TLS for the connection.  Reverts to a
+non-secure connection if the server doesn't support SSL/TLS.  See also
+\fI--ftp-ssl-control\fP and \fI--ssl-reqd\fP for different levels of
+encryption required. (Added in 7.20.0)
+
+This option was formerly known as \fI--ftp-ssl\fP (Added in 7.11.0) and that
+can still be used but will be removed in a future version.
 .IP "--ftp-ssl-control"
 (FTP) Require SSL/TLS for the FTP login, clear for transfer.  Allows secure
 authentication, but non-encrypted data transfers for efficiency.  Fails the
 transfer if the server doesn't support SSL/TLS.  (Added in 7.16.0)
-.IP "--ftp-ssl-reqd"
-(FTP) Require SSL/TLS for the FTP connection.
-Terminates the connection if the server doesn't support SSL/TLS.
-(Added in 7.15.5)
+.IP "--ssl-reqd"
+(FTP, POP3, IMAP, SMTP) Require SSL/TLS for the connection.  Terminates the
+connection if the server doesn't support SSL/TLS. (Added in 7.20.0)
+
+This option was formerly known as \fI--ftp-ssl-reqd\fP (added in 7.15.5) and
+that can still be used but will be removed in a future version.
 .IP "--ftp-ssl-ccc"
 (FTP) Use CCC (Clear Command Channel)
 Shuts down the SSL/TLS layer after authenticating. The rest of the
 control channel communication will be unencrypted. This allows
 NAT routers to follow the FTP transaction. The default mode is
 passive. See --ftp-ssl-ccc-mode for other modes.
@@ -595,12 +605,15 @@
 time only.
 .IP "-j/--junk-session-cookies"
 (HTTP) When curl is told to read cookies from a given file, this option will
 make it discard all "session cookies". This will basically have the same effect
 as if a new session is started. Typical browsers always discard session
 cookies when they're closed down.
+.IP "-J/--remote-header-name"
+(HTTP) This option tells the -O/--remote-name option to use the server-specified
+Content-Disposition filename instead of extracting a filename from the URL.
 .IP "-k/--insecure"
 (SSL) This option explicitly allows curl to perform "insecure" SSL connections
 and transfers. All SSL connections are attempted to be made secure by using
 the CA certificate bundle installed by default. This makes all connections
 considered "insecure" fail unless \fI-k/--insecure\fP is used.
 
@@ -753,13 +766,21 @@
 .IP "--location-trusted"
 (HTTP/HTTPS) Like \fI-L/--location\fP, but will allow sending the name +
 password to all hosts that the site may redirect to. This may or may not
 introduce a security breach if the site redirects you to a site to which
 you'll send your authentication info (which is plaintext in the case of HTTP
 Basic authentication).
+.IP "--mail-rcpt <address>"
+(SMTP) Specify a single address that the given mail should get sent to. This
+option can be used multiple times to specify many recipients.
+
+(Added in 7.20.0)
+.IP "--mail-from <address>"
+(SMTP) Specify a single address that the given mail should get sent from.
 
+(Added in 7.20.0)
 .IP "--max-filesize <bytes>"
 Specify the maximum size (in bytes) of a file to download. If the file
 requested is larger than this value, the transfer will not start and curl will
 return with exit code 63.
 
 \fBNOTE:\fP The file size is not always known prior to download, and for such files
@@ -1076,13 +1097,13 @@
 remote file, and if that is available make the local file get that same
 timestamp.
 .IP "--retry <num>"
 If a transient error is returned when curl tries to perform a transfer, it
 will retry this number of times before giving up. Setting the number to 0
 makes curl do no retries (which is the default). Transient error means either:
-a timeout, an FTP 5xx response code or an HTTP 5xx response code.
+a timeout, an FTP 4xx response code or an HTTP 5xx response code.
 
 When curl is about to retry a transfer, it will first wait one second and then
 for all forthcoming retries it will double the waiting time until it reaches
 10 minutes which then will be the delay between the rest of the retries.  By
 using \fI--retry-delay\fP you disable this exponential backoff algorithm. See
 also \fI--retry-max-time\fP to limit the total time allowed for
@@ -1146,12 +1167,14 @@
 This option overrides any previous use of \fI-x/--proxy\fP, as they are
 mutually exclusive.
 
 If this option is used several times, the last one will be used. (This option
 was previously wrongly documented and used as --socks without the number
 appended.)
+
+This option (as well as \fI--socks4\fP) does not work with IPV6, FTPS or LDAP.
 .IP "--socks5-gssapi-service <servicename>"
 The default service name for a socks server is rcmd/server-fqdn. This option
 allows you to change it.
 
 Examples:
  --socks5 proxy-name \fI--socks5-gssapi-service\fP sockd   would use
@@ -1178,12 +1201,20 @@
 
 TTYPE=<term> Sets the terminal type.
 
 XDISPLOC=<X display> Sets the X display location.
 
 NEW_ENV=<var,val> Sets an environment variable.
+.IP "--tftp-blksize <value>"
+(TFTP) Set TFTP BLKSIZE option (must be >512). This is the block size that
+curl will try to use when tranferring data to or from a TFTP server. By
+default 512 bytes will be used.
+
+If this option is used several times, the last one will be used.
+
+(Added in 7.20.0)
 .IP "-T/--upload-file <file>"
 This transfers the specified local file to the remote URL. If there is no file
 part in the specified URL, Curl will append the local file name. NOTE that you
 must use a trailing / on the last directory to really prove to Curl that there
 is no file name or curl will think that your last directory name is the remote
 file name to use. That will most likely cause the upload operation to fail. If
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/curl-config.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/curl-config.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/curl-config.1	2008-12-22 21:07:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/curl-config.1	2009-11-18 00:43:31.000000000 +0800
@@ -15,13 +15,13 @@
 .\" * copies of the Software, and permit persons to whom the Software is
 .\" * furnished to do so, under the terms of the COPYING file.
 .\" *
 .\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 .\" * KIND, either express or implied.
 .\" *
-.\" * $Id: curl-config.1,v 1.17 2008-12-22 13:07:14 bagder Exp $
+.\" * $Id: curl-config.1,v 1.18 2009-11-14 19:23:26 claesjac Exp $
 .\" **************************************************************************
 .\"
 .TH curl-config 1 "25 Oct 2007" "Curl 7.17.1" "curl-config manual"
 .SH NAME
 curl-config \- Get information about a libcurl installation
 .SH SYNOPSIS
@@ -39,12 +39,14 @@
 libcurl. Currently that is only the include path to the curl include files.
 .IP "--checkfor [version]"
 Specify the oldest possible libcurl version string you want, and this 
 script will return 0 if the current installation is new enough or it 
 returns 1 and outputs a text saying that the current version is not new 
 enough. (Added in 7.15.4)
+.IP "--configure"
+Displays the arguments given to configure when building curl.
 .IP "--feature"
 Lists what particular main features the installed libcurl was built with. At
 the time of writing, this list may include SSL, KRB4 or IPv6. Do not assume
 any particular order. The keywords will be separated by newlines. There may be
 none, one, or several keywords in the list.
 .IP "--help"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/curl-config.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/curl-config.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/curl-config.html	2009-11-04 20:29:18.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/curl-config.html	2010-02-09 18:07:34.000000000 +0800
@@ -53,12 +53,14 @@
 <p class="level0"><a name="--cc"></a><span class="nroffip">--cc</span> 
 <p class="level1">Displays the compiler used to build libcurl. 
 <p class="level0"><a name="--cflags"></a><span class="nroffip">--cflags</span> 
 <p class="level1">Set of compiler options (CFLAGS) to use when compiling files that use libcurl. Currently that is only the include path to the curl include files. 
 <p class="level0"><a name="--checkfor"></a><span class="nroffip">--checkfor [version]</span> 
 <p class="level1">Specify the oldest possible libcurl version string you want, and this  script will return 0 if the current installation is new enough or it  returns 1 and outputs a text saying that the current version is not new  enough. (Added in 7.15.4) 
+<p class="level0"><a name="--configure"></a><span class="nroffip">--configure</span> 
+<p class="level1">Displays the arguments given to configure when building curl. 
 <p class="level0"><a name="--feature"></a><span class="nroffip">--feature</span> 
 <p class="level1">Lists what particular main features the installed libcurl was built with. At the time of writing, this list may include SSL, KRB4 or IPv6. Do not assume any particular order. The keywords will be separated by newlines. There may be none, one, or several keywords in the list. 
 <p class="level0"><a name="--help"></a><span class="nroffip">--help</span> 
 <p class="level1">Displays the available options. 
 <p class="level0"><a name="--libs"></a><span class="nroffip">--libs</span> 
 <p class="level1">Shows the complete set of libs and other linker options you will need in order to link your application with libcurl. 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/curl-config.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/curl-config.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/curl.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/curl.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/curl.html	2009-11-04 20:29:18.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/curl.html	2010-02-09 18:07:34.000000000 +0800
@@ -200,18 +200,22 @@
 <p class="level1">Passive mode means that curl will try the EPSV command first and then PASV, unless <a class="emphasis" href="#--disable-epsv">--disable-epsv</a> is used. 
 <p class="level0"><a name="--ftp-alternative-to-user"></a><span class="nroffip">--ftp-alternative-to-user &lt;command&gt;</span> 
 <p class="level1">(FTP) If authenticating with the USER and PASS commands fails, send this command.  When connecting to Tumbleweed's Secure Transport server over FTPS using a client certificate, using "SITE AUTH" will tell the server to retrieve the username from the certificate. (Added in 7.15.5) 
 <p class="level0"><a name="--ftp-skip-pasv-ip"></a><span class="nroffip">--ftp-skip-pasv-ip</span> 
 <p class="level1">(FTP) Tell curl to not use the IP address the server suggests in its response to curl's PASV command when curl connects the data connection. Instead curl will re-use the same IP address it already uses for the control connection. (Added in 7.14.2) 
 <p class="level1">This option has no effect if PORT, EPRT or EPSV is used instead of PASV. 
-<p class="level0"><a name="--ftp-ssl"></a><span class="nroffip">--ftp-ssl</span> 
-<p class="level1">(FTP) Try to use SSL/TLS for the FTP connection.  Reverts to a non-secure connection if the server doesn't support SSL/TLS.  See also <a class="emphasis" href="#--ftp-ssl-control">--ftp-ssl-control</a> and <a class="emphasis" href="#--ftp-ssl-reqd">--ftp-ssl-reqd</a> for different levels of encryption required. (Added in 7.11.0) 
+<p class="level0"><a name="--ftp-pret"></a><span class="nroffip">--ftp-pret</span> 
+<p class="level1">(FTP) Tell curl to send a PRET command before PASV (and EPSV). Certain FTP servers, mainly drftpd, require this non-standard command for directory listings as well as up and downloads in PASV mode. (Added in 7.20.x) 
+<p class="level0"><a name="--ssl"></a><span class="nroffip">--ssl</span> 
+<p class="level1">(FTP, POP3, IMAP, SMTP) Try to use SSL/TLS for the connection.  Reverts to a non-secure connection if the server doesn't support SSL/TLS.  See also <a class="emphasis" href="#--ftp-ssl-control">--ftp-ssl-control</a> and <a class="emphasis" href="#--ssl-reqd">--ssl-reqd</a> for different levels of encryption required. (Added in 7.20.0) 
+<p class="level1">This option was formerly known as <span Class="emphasis">--ftp-ssl</span> (Added in 7.11.0) and that can still be used but will be removed in a future version. 
 <p class="level0"><a name="--ftp-ssl-control"></a><span class="nroffip">--ftp-ssl-control</span> 
 <p class="level1">(FTP) Require SSL/TLS for the FTP login, clear for transfer.  Allows secure authentication, but non-encrypted data transfers for efficiency.  Fails the transfer if the server doesn't support SSL/TLS.  (Added in 7.16.0) 
-<p class="level0"><a name="--ftp-ssl-reqd"></a><span class="nroffip">--ftp-ssl-reqd</span> 
-<p class="level1">(FTP) Require SSL/TLS for the FTP connection. Terminates the connection if the server doesn't support SSL/TLS. (Added in 7.15.5) 
+<p class="level0"><a name="--ssl-reqd"></a><span class="nroffip">--ssl-reqd</span> 
+<p class="level1">(FTP, POP3, IMAP, SMTP) Require SSL/TLS for the connection.  Terminates the connection if the server doesn't support SSL/TLS. (Added in 7.20.0) 
+<p class="level1">This option was formerly known as <span Class="emphasis">--ftp-ssl-reqd</span> (added in 7.15.5) and that can still be used but will be removed in a future version. 
 <p class="level0"><a name="--ftp-ssl-ccc"></a><span class="nroffip">--ftp-ssl-ccc</span> 
 <p class="level1">(FTP) Use CCC (Clear Command Channel) Shuts down the SSL/TLS layer after authenticating. The rest of the control channel communication will be unencrypted. This allows NAT routers to follow the FTP transaction. The default mode is passive. See --ftp-ssl-ccc-mode for other modes. (Added in 7.16.1) 
 <p class="level0"><a name="--ftp-ssl-ccc-mode"></a><span class="nroffip">--ftp-ssl-ccc-mode [active/passive]</span> 
 <p class="level1">(FTP) Use CCC (Clear Command Channel) Sets the CCC mode. The passive mode will not initiate the shutdown, but instead wait for the server to do it, and will not reply to the shutdown from the server. The active mode initiates the shutdown and waits for a reply from the server. (Added in 7.16.2) 
 <p class="level0"><a name="-F--form"></a><span class="nroffip">-F/--form &lt;name=content&gt;</span> 
 <p class="level1">(HTTP) This lets curl emulate a filled-in form in which a user has pressed the submit button. This causes curl to POST data using the Content-Type multipart/form-data according to RFC2388. This enables uploading of binary files etc. To force the 'content' part to be a file, prefix the file name with an @ sign. To just get the content part from a file, prefix the file name with the symbol &lt;. The difference between @ and &lt; is then that @ makes a file get attached in the post as a file upload, while the &lt; makes a text field and just get the contents for that text field from a file. 
@@ -252,12 +256,14 @@
 <p class="level1">&nbsp;curl --interface eth0:1 <a href="http://www.netscape.com/">http://www.netscape.com/</a> 
 <p class="level1">If this option is used several times, the last one will be used. 
 <p class="level0"><a name="-I--head"></a><span class="nroffip">-I/--head</span> 
 <p class="level1">(HTTP/FTP/FILE) Fetch the HTTP-header only! HTTP-servers feature the command HEAD which this uses to get nothing but the header of a document. When used on a FTP or FILE file, curl displays the file size and last modification time only. 
 <p class="level0"><a name="-j--junk-session-cookies"></a><span class="nroffip">-j/--junk-session-cookies</span> 
 <p class="level1">(HTTP) When curl is told to read cookies from a given file, this option will make it discard all "session cookies". This will basically have the same effect as if a new session is started. Typical browsers always discard session cookies when they're closed down. 
+<p class="level0"><a name="-J--remote-header-name"></a><span class="nroffip">-J/--remote-header-name</span> 
+<p class="level1">(HTTP) This option tells the -O/--remote-name option to use the server-specified Content-Disposition filename instead of extracting a filename from the URL. 
 <p class="level0"><a name="-k--insecure"></a><span class="nroffip">-k/--insecure</span> 
 <p class="level1">(SSL) This option explicitly allows curl to perform "insecure" SSL connections and transfers. All SSL connections are attempted to be made secure by using the CA certificate bundle installed by default. This makes all connections considered "insecure" fail unless <a class="emphasis" href="#-k--insecure">-k/--insecure</a> is used. 
 <p class="level1">See this online resource for further details: <span Class="bold"><a href="http://curl.haxx.se/docs/sslcerts.html">http://curl.haxx.se/docs/sslcerts.html</a></span> 
 <p class="level0"><a name="--keepalive-time"></a><span class="nroffip">--keepalive-time &lt;seconds&gt;</span> 
 <p class="level1">This option sets the time a connection needs to remain idle before sending keepalive probes and the time between individual keepalive probes. It is currently effective on operating systems offering the TCP_KEEPIDLE and TCP_KEEPINTVL socket options (meaning Linux, recent AIX, HP-UX and more). This option has no effect if <a class="emphasis" href="#--no-keepalive">--no-keepalive</a> is used. (Added in 7.18.0) 
 <p class="level1">If this option is used multiple times, the last occurrence sets the amount. 
@@ -313,13 +319,18 @@
 <p class="level1">Set a preferred number or range of local port numbers to use for the connection(s).  Note that port numbers by nature are a scarce resource that will be busy at times so setting this range to something too narrow might cause unnecessary connection setup failures. (Added in 7.15.2) 
 <p class="level0"><a name="-L--location"></a><span class="nroffip">-L/--location</span> 
 <p class="level1">(HTTP/HTTPS) If the server reports that the requested page has moved to a different location (indicated with a Location: header and a 3XX response code), this option will make curl redo the request on the new place. If used together with <a class="emphasis" href="#-i--include">-i/--include</a> or <a class="emphasis" href="#-I--head">-I/--head</a>, headers from all requested pages will be shown. When authentication is used, curl only sends its credentials to the initial host. If a redirect takes curl to a different host, it won't be able to intercept the user+password. See also <a class="emphasis" href="#--location-trusted">--location-trusted</a> on how to change this. You can limit the amount of redirects to follow by using the <a class="emphasis" href="#--max-redirs">--max-redirs</a> option. 
 <p class="level1">When curl follows a redirect and the request is not a plain GET (for example POST or PUT), it will do the following request with a GET if the HTTP response was 301, 302, or 303. If the response code was any other 3xx code, curl will re-send the following request using the same unmodified method. 
 <p class="level0"><a name="--location-trusted"></a><span class="nroffip">--location-trusted</span> 
 <p class="level1">(HTTP/HTTPS) Like <a class="emphasis" href="#-L--location">-L/--location</a>, but will allow sending the name + password to all hosts that the site may redirect to. This may or may not introduce a security breach if the site redirects you to a site to which you'll send your authentication info (which is plaintext in the case of HTTP Basic authentication). 
-<p class="level1">
+<p class="level0"><a name="--mail-rcpt"></a><span class="nroffip">--mail-rcpt &lt;address&gt;</span> 
+<p class="level1">(SMTP) Specify a single address that the given mail should get sent to. This option can be used multiple times to specify many recipients. 
+<p class="level1">(Added in 7.20.0) 
+<p class="level0"><a name="--mail-from"></a><span class="nroffip">--mail-from &lt;address&gt;</span> 
+<p class="level1">(SMTP) Specify a single address that the given mail should get sent from. 
+<p class="level1">(Added in 7.20.0) 
 <p class="level0"><a name="--max-filesize"></a><span class="nroffip">--max-filesize &lt;bytes&gt;</span> 
 <p class="level1">Specify the maximum size (in bytes) of a file to download. If the file requested is larger than this value, the transfer will not start and curl will return with exit code 63. 
 <p class="level1"><span Class="bold">NOTE:</span> The file size is not always known prior to download, and for such files this option has no effect even if the file transfer ends up being larger than this given limit. This concerns both FTP and HTTP transfers. 
 <p class="level0"><a name="-m--max-time"></a><span class="nroffip">-m/--max-time &lt;seconds&gt;</span> 
 <p class="level1">Maximum time in seconds that you allow the whole operation to take.  This is useful for preventing your batch jobs from hanging for hours due to slow networks or links going down.  See also the <a class="emphasis" href="#--connect-timeout">--connect-timeout</a> option. 
 <p class="level1">If this option is used several times, the last one will be used. 
@@ -452,13 +463,13 @@
 <p class="level1">If this option is used several times, the last one will be used. 
 <p class="level0"><a name="--raw"></a><span class="nroffip">--raw</span> 
 <p class="level1">When used, it disables all internal HTTP decoding of content or transfer encodings and instead makes them passed on unaltered, raw. (Added in 7.16.2) 
 <p class="level0"><a name="-R--remote-time"></a><span class="nroffip">-R/--remote-time</span> 
 <p class="level1">When used, this will make libcurl attempt to figure out the timestamp of the remote file, and if that is available make the local file get that same timestamp. 
 <p class="level0"><a name="--retry"></a><span class="nroffip">--retry &lt;num&gt;</span> 
-<p class="level1">If a transient error is returned when curl tries to perform a transfer, it will retry this number of times before giving up. Setting the number to 0 makes curl do no retries (which is the default). Transient error means either: a timeout, an FTP 5xx response code or an HTTP 5xx response code. 
+<p class="level1">If a transient error is returned when curl tries to perform a transfer, it will retry this number of times before giving up. Setting the number to 0 makes curl do no retries (which is the default). Transient error means either: a timeout, an FTP 4xx response code or an HTTP 5xx response code. 
 <p class="level1">When curl is about to retry a transfer, it will first wait one second and then for all forthcoming retries it will double the waiting time until it reaches 10 minutes which then will be the delay between the rest of the retries.  By using <a class="emphasis" href="#--retry-delay">--retry-delay</a> you disable this exponential backoff algorithm. See also <a class="emphasis" href="#--retry-max-time">--retry-max-time</a> to limit the total time allowed for retries. (Added in 7.12.3) 
 <p class="level1">If this option is used multiple times, the last occurrence decide the amount. 
 <p class="level0"><a name="--retry-delay"></a><span class="nroffip">--retry-delay &lt;seconds&gt;</span> 
 <p class="level1">Make curl sleep this amount of time before each retry when a transfer has failed with a transient error (it changes the default backoff time algorithm between retries). This option is only interesting if <a class="emphasis" href="#--retry">--retry</a> is also used. Setting this delay to zero will make curl use the default backoff time. (Added in 7.12.3) 
 <p class="level1">If this option is used multiple times, the last occurrence determines the amount. 
 <p class="level0"><a name="--retry-max-time"></a><span class="nroffip">--retry-max-time &lt;seconds&gt;</span> 
@@ -481,12 +492,13 @@
 <p class="level1">This option overrides any previous use of <a class="emphasis" href="#-x--proxy">-x/--proxy</a>, as they are mutually exclusive. 
 <p class="level1">If this option is used several times, the last one will be used. (This option was previously wrongly documented and used as --socks without the number appended.) 
 <p class="level0"><a name="--socks5"></a><span class="nroffip">--socks5 &lt;host[:port]&gt;</span> 
 <p class="level1">Use the specified SOCKS5 proxy - but resolve the host name locally. If the port number is not specified, it is assumed at port 1080. 
 <p class="level1">This option overrides any previous use of <a class="emphasis" href="#-x--proxy">-x/--proxy</a>, as they are mutually exclusive. 
 <p class="level1">If this option is used several times, the last one will be used. (This option was previously wrongly documented and used as --socks without the number appended.) 
+<p class="level1">This option (as well as <a class="emphasis" href="#--socks4">--socks4</a>) does not work with IPV6, FTPS or LDAP. 
 <p class="level0"><a name="--socks5-gssapi-service"></a><span class="nroffip">--socks5-gssapi-service &lt;servicename&gt;</span> 
 <p class="level1">The default service name for a socks server is rcmd/server-fqdn. This option allows you to change it. 
 <p class="level1">Examples: &nbsp;--socks5 proxy-name <a class="emphasis" href="#--socks5-gssapi-service">--socks5-gssapi-service</a> sockd   would use sockd/proxy-name &nbsp;--socks5 proxy-name <a class="emphasis" href="#--socks5-gssapi-service">--socks5-gssapi-service</a> sockd/real-name   would use sockd/real-name for cases where the proxy-name does not match the princpal name. &nbsp;(Added in 7.19.4). 
 <p class="level0"><a name="--socks5-gssapi-nec"></a><span class="nroffip">--socks5-gssapi-nec</span> 
 <p class="level1">As part of the gssapi negotiation a protection mode is negotiated. The rfc1961 says in section 4.3/4.4 it should be protected, but the NEC reference implementation does not.  The option <a class="emphasis" href="#--socks5-gssapi-nec">--socks5-gssapi-nec</a> allows the unprotected exchange of the protection mode negotiation. (Added in 7.19.4). 
 <p class="level0"><a name="--stderr"></a><span class="nroffip">--stderr &lt;file&gt;</span> 
@@ -496,12 +508,16 @@
 <p class="level1">Turn on the TCP_NODELAY option. See the <span Class="emphasis">curl_easy_setopt(3)</span> man page for details about this option. (Added in 7.11.2) 
 <p class="level0"><a name="-t--telnet-option"></a><span class="nroffip">-t/--telnet-option &lt;OPT=val&gt;</span> 
 <p class="level1">Pass options to the telnet protocol. Supported options are: 
 <p class="level1">TTYPE=&lt;term&gt; Sets the terminal type. 
 <p class="level1">XDISPLOC=&lt;X display&gt; Sets the X display location. 
 <p class="level1">NEW_ENV=&lt;var,val&gt; Sets an environment variable. 
+<p class="level0"><a name="--tftp-blksize"></a><span class="nroffip">--tftp-blksize &lt;value&gt;</span> 
+<p class="level1">(TFTP) Set TFTP BLKSIZE option (must be &gt;512). This is the block size that curl will try to use when tranferring data to or from a TFTP server. By default 512 bytes will be used. 
+<p class="level1">If this option is used several times, the last one will be used. 
+<p class="level1">(Added in 7.20.0) 
 <p class="level0"><a name="-T--upload-file"></a><span class="nroffip">-T/--upload-file &lt;file&gt;</span> 
 <p class="level1">This transfers the specified local file to the remote URL. If there is no file part in the specified URL, Curl will append the local file name. NOTE that you must use a trailing / on the last directory to really prove to Curl that there is no file name or curl will think that your last directory name is the remote file name to use. That will most likely cause the upload operation to fail. If this is used on a HTTP(S) server, the PUT command will be used. 
 <p class="level1">Use the file name "-" (a single dash) to use stdin instead of a given file. Alternately, the file name "." (a single period) may be specified instead of "-" to use stdin in non-blocking mode to allow reading server output while stdin is being uploaded. 
 <p class="level1">You can specify one -T for each URL on the command line. Each -T + URL pair specifies what to upload and to where. curl also supports "globbing" of the -T argument, meaning that you can upload multiple files to a single URL by using the same URL globbing style supported in the URL, like this: 
 <p class="level1">curl -T "{file1,file2}" <a href="http://www.uploadtothissite.com">http://www.uploadtothissite.com</a> 
 <p class="level1">or even 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/curl.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/curl.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/examples/curlx.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/examples/curlx.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/examples/curlx.c	2008-09-08 05:26:18.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/examples/curlx.c	2010-01-05 02:42:39.000000000 +0800
@@ -450,13 +450,13 @@
   if (p.verbose)
     BIO_printf(p.errorbio, "Service URL: <%s>\n", serverurl);
 
   {
     FILE *outfp;
     BIO_get_fp(out,&outfp);
-    curl_easy_setopt(p.curl, CURLOPT_FILE,outfp);
+    curl_easy_setopt(p.curl, CURLOPT_WRITEDATA, outfp);
   }
 
   res = curl_easy_setopt(p.curl, CURLOPT_SSL_CTX_FUNCTION, sslctxfun)  ;
 
   if (res != CURLE_OK)
     BIO_printf(p.errorbio,"%d %s=%d %d\n", __LINE__, "CURLOPT_SSL_CTX_FUNCTION",CURLOPT_SSL_CTX_FUNCTION,res);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/examples/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/examples/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/examples/Makefile.am	2008-08-07 18:55:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/examples/Makefile.am	2009-11-06 03:12:20.000000000 +0800
@@ -1,24 +1,26 @@
 #
-# $Id: Makefile.am,v 1.52 2008-08-07 00:29:08 yangtse Exp $
+# $Id: Makefile.am,v 1.53 2009-11-05 15:04:04 yangtse Exp $
 #
 
 AUTOMAKE_OPTIONS = foreign nostdinc
 
 EXTRA_DIST = README Makefile.example Makefile.inc Makefile.m32 \
 	makefile.dj $(COMPLICATED_EXAMPLES)
 
 # Specify our include paths here, and do it relative to $(top_srcdir) and
 # $(top_builddir), to ensure that these paths which belong to the library
 # being currently built and tested are searched before the library which
 # might possibly already be installed in the system.
 #
-# $(top_builddir)/include is for libcurl's generated curl/curlbuild.h file
+# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h
+# $(top_builddir)/include for generated curlbuild.h included from lib/setup.h
 # $(top_srcdir)/include is for libcurl's external include files
 
-INCLUDES = -I$(top_builddir)/include \
+INCLUDES = -I$(top_builddir)/include/curl \
+           -I$(top_builddir)/include      \
            -I$(top_srcdir)/include
 
 LIBDIR = $(top_builddir)/lib
 
 if STATICLIB
 # we need this define when building with a static lib on Windows
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/examples/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/examples/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/examples/Makefile.in	2009-11-04 20:26:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/examples/Makefile.in	2010-02-05 05:42:19.000000000 +0800
@@ -12,13 +12,13 @@
 # even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 # PARTICULAR PURPOSE.
 
 @SET_MAKE@
 
 #
-# $Id: Makefile.am,v 1.52 2008-08-07 00:29:08 yangtse Exp $
+# $Id: Makefile.am,v 1.53 2009-11-05 15:04:04 yangtse Exp $
 #
 srcdir = @srcdir@
 top_srcdir = @top_srcdir@
 VPATH = @srcdir@
 pkgdatadir = $(datadir)/@PACKAGE@
 pkglibdir = $(libdir)/@PACKAGE@
@@ -233,26 +233,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = -DCURL_NO_OLDIES $(STATICCPPFLAGS)
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -263,13 +268,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -329,12 +333,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -397,15 +402,17 @@
 
 # Specify our include paths here, and do it relative to $(top_srcdir) and
 # $(top_builddir), to ensure that these paths which belong to the library
 # being currently built and tested are searched before the library which
 # might possibly already be installed in the system.
 #
-# $(top_builddir)/include is for libcurl's generated curl/curlbuild.h file
+# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h
+# $(top_builddir)/include for generated curlbuild.h included from lib/setup.h
 # $(top_srcdir)/include is for libcurl's external include files
-INCLUDES = -I$(top_builddir)/include \
+INCLUDES = -I$(top_builddir)/include/curl \
+           -I$(top_builddir)/include      \
            -I$(top_srcdir)/include
 
 LIBDIR = $(top_builddir)/lib
 
 # we need this define when building with a static lib on Windows
 @STATICLIB_TRUE@STATICCPPFLAGS = -DCURL_STATICLIB
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/examples/multi-app.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/examples/multi-app.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/examples/multi-app.c	2008-05-23 17:05:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/examples/multi-app.c	2010-01-21 21:57:50.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: multi-app.c,v 1.9 2008-05-22 21:20:09 danf Exp $
+ * $Id: multi-app.c,v 1.10 2010-01-21 09:53:30 bagder Exp $
  *
  * This is an example application source code using the multi interface.
  */
 
 #include <stdio.h>
 #include <string.h>
@@ -102,26 +102,29 @@
     }
   }
 
   /* See how the transfers went */
   while ((msg = curl_multi_info_read(multi_handle, &msgs_left))) {
     if (msg->msg == CURLMSG_DONE) {
+      int idx, found = 0;
 
-       int idx, found = 0;
-
-       /* Find out which handle this message is about */
-       for (idx=0; (!found && (idx<HANDLECOUNT)); idx++) found = (msg->easy_handle == handles[idx]);
-
-       switch (idx) {
-         case HTTP_HANDLE:
-           printf("HTTP transfer completed with status %d\n", msg->data.result);
-           break;
-         case FTP_HANDLE:
-           printf("FTP transfer completed with status %d\n", msg->data.result);
-           break;
-       }
+      /* Find out which handle this message is about */
+      for (idx=0; idx<HANDLECOUNT; idx++) {
+        found = (msg->easy_handle == handles[idx]);
+        if(found)
+          break;
+      }
+
+      switch (idx) {
+      case HTTP_HANDLE:
+        printf("HTTP transfer completed with status %d\n", msg->data.result);
+        break;
+      case FTP_HANDLE:
+        printf("FTP transfer completed with status %d\n", msg->data.result);
+        break;
+      }
     }
   }
 
   curl_multi_cleanup(multi_handle);
 
   /* Free the CURL handles */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/FAQ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/FAQ
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/FAQ	2009-11-04 06:04:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/FAQ	2009-11-09 06:20:24.000000000 +0800
@@ -1,7 +1,7 @@
-Updated: Nov 3, 2009 (http://curl.haxx.se/docs/faq.html)
+Updated: Nov 7, 2009 (http://curl.haxx.se/docs/faq.html)
                                   _   _ ____  _
                               ___| | | |  _ \| |
                              / __| | | | |_) | |
                             | (__| |_| |  _ <| |___
                              \___|\___/|_| \_\_____|
 
@@ -70,12 +70,13 @@
   4.12 Why do I get "certificate verify failed" ?
   4.13 Why is curl -R on Windows one hour off?
   4.14 Redirects work in browser but not with curl!
   4.15 FTPS doesn't work
   4.16 My HTTP POST or PUT requests are slow!
   4.17 Non-functional connect timeouts on Windows
+  4.18 file:// URLs containing drive letters (Windows, NetWare)
 
  5. libcurl Issues
   5.1 Is libcurl thread-safe?
   5.2 How can I receive all data into a large memory chunk?
   5.3 How do I fetch multiple files with libcurl?
   5.4 Does libcurl do Winsock initing on win32 systems?
@@ -912,12 +913,39 @@
 
   Also, even on non-Windows systems there may run a firewall or anti-virus
   software or similar that accepts the connection but does not actually do
   anything else. This will make (lib)curl to consider the connection connected
   and thus the connect timeout won't trigger.
 
+  4.18 file:// URLs containing drive letters (Windows, NetWare)
+
+  When using cURL to try to download a local file, one might use a URL
+  in this format:
+
+  file://D:/blah.txt
+
+  You'll find that even if D:\blah.txt does exist, cURL returns a 'file
+  not found' error.
+
+  According to RFC 1738 (http://www.faqs.org/rfcs/rfc1738.html),
+  file:// URLs must contain a host component, but it is ignored by
+  most implementations. In the above example, 'D:' is treated as the
+  host component, and is taken away. Thus, cURL tries to open '/blah.txt'.
+  If your system is installed to drive C:, that will resolve to 'C:\blah.txt',
+  and if that doesn't exist you will get the not found error.
+
+  To fix this problem, use file:// URLs with *three* leading slashes:
+
+  file:///D:/blah.txt
+
+  Alternatively, if it makes more sense, specify 'localhost' as the host
+  component:
+
+  file://localhost/D:/blah.txt
+
+  In either case, cURL should now be looking for the correct file.
 
 5. libcurl Issues
 
   5.1 Is libcurl thread-safe?
 
   Yes.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/INSTALL /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/INSTALL
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/INSTALL	2009-10-26 01:57:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/INSTALL	2010-01-27 01:06:01.000000000 +0800
@@ -871,15 +871,15 @@
    compiling using 'strip' (or the appropriate variant if cross-compiling).
    If space is really tight, you may be able to remove some unneeded
    sections of the shared library using the -R option to objcopy (e.g. the
    .comment section).
 
    Using these techniques it is possible to create a basic HTTP-only shared
-   libcurl library for i386 Linux platforms that is only 94 KiB in size, and
-   an FTP-only library that is 87 KiB in size (as of libcurl version 7.19.1,
-   using gcc 4.2.2).
+   libcurl library for i386 Linux platforms that is only 98 KiB in size, and
+   an FTP-only library that is 94 KiB in size (as of libcurl version 7.20.0,
+   using gcc 4.3.3).
 
    You may find that statically linking libcurl to your application will
    result in a lower total size than dynamically linking.
 
    Note that the curl test harness can detect the use of some, but not all, of
    the --disable statements suggested above. Use will cause tests relying on
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/KNOWN_BUGS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/KNOWN_BUGS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/KNOWN_BUGS	2009-10-22 01:49:41.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/KNOWN_BUGS	2010-01-30 22:30:27.000000000 +0800
@@ -1,27 +1,27 @@
 These are problems known to exist at the time of this release. Feel free to
 join in and help us correct one or more of these! Also be sure to check the
 changelog of the current development status, as one or more of these problems
 may have been fixed since this was written!
 
+74. The HTTP spec allows headers to be merged and become comma-separated
+  instead of being repeated several times. This also include Authenticate: and
+  Proxy-Authenticate: headers and while this hardly every happens in real life
+  it will confuse libcurl which does not properly support it for all headers -
+  like those Authenticate headers.
+
 73. if a connection is made to a FTP server but the server then just never
   sends the 220 response or otherwise is dead slow, libcurl will not
   acknowledge the connection timeout during that phase but only the "real"
   timeout - which may surprise users as it is probably considered to be the
   connect phase to most people. Brought up (and is being misunderstood) in:
   http://curl.haxx.se/bug/view.cgi?id=2844077
 
 72. "Pausing pipeline problems."
   http://curl.haxx.se/mail/lib-2009-07/0214.html
 
-71. TFTP block size / better integration in transfer
-  http://curl.haxx.se/mail/lib-2009-08/0028.html
-
-  Related problems with TFTP is also that currently (7.19.6) upload file sizes
-  are limited to 32MB (http://curl.haxx.se/bug/view.cgi?id=2848436)
-
 70. Problem re-using easy handle after call to curl_multi_remove_handle
   http://curl.haxx.se/mail/lib-2009-07/0249.html
     
 68. "More questions about ares behavior".
   http://curl.haxx.se/mail/lib-2009-08/0012.html
 
@@ -37,17 +37,12 @@
 65. When doing FTP over a socks proxy or CONNECT through HTTP proxy and the
   multi interface is used, libcurl will fail if the (passive) TCP connection
   for the data transfer isn't more or less instant as the code does not
   properly wait for the connect to be confirmed. See test case 564 for a first
   shot at a test case.
 
-64. The threaded resolver used in libcurl on Windows has some kind of race
-  problem when multiple simultanoes resolves are done, like with the multi
-  interface transferring many files in parallell:
-  http://curl.haxx.se/mail/lib-2009-04/0028.html
-
 63. When CURLOPT_CONNECT_ONLY is used, the handle cannot reliably be re-used
   for any further requests or transfers. The work-around is then to close that
   handle with curl_easy_cleanup() and create a new. Some more details:
   http://curl.haxx.se/mail/lib-2009-04/0300.html
 
 62. CURLOPT_TIMEOUT does not work properly with the regular multi and
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_cleanup.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_duphandle.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_duphandle.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_escape.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_escape.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_getinfo.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_getinfo.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_getinfo.3	2009-07-23 04:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_getinfo.3	2010-01-22 20:13:21.000000000 +0800
@@ -15,13 +15,13 @@
 .\" * copies of the Software, and permit persons to whom the Software is
 .\" * furnished to do so, under the terms of the COPYING file.
 .\" *
 .\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 .\" * KIND, either express or implied.
 .\" *
-.\" * $Id: curl_easy_getinfo.3,v 1.43 2009-07-15 11:49:13 mmarek Exp $
+.\" * $Id: curl_easy_getinfo.3,v 1.44 2010-01-21 13:58:30 bagder Exp $
 .\" **************************************************************************
 .\"
 .TH curl_easy_getinfo 3 "11 Feb 2009" "libcurl 7.19.4" "libcurl Manual"
 .SH NAME
 curl_easy_getinfo - extract information from a curl handle
 .SH SYNOPSIS
@@ -206,12 +206,34 @@
 .IP CURLINFO_CONDITION_UNMET
 Pass a pointer to a long to receive the number 1 if the condition provided in
 the previous request didn't match (see \fICURLOPT_TIMECONDITION\fP). Alas, if
 this returns a 1 you know that the reason you didn't get data in return is
 because it didn't fulfill the condition. The long ths argument points to will
 get a zero stored if the condition instead was met. (Added in 7.19.4)
+.IP CURLINFO_RTSP_SESSION_ID
+Pass a pointer to a char pointer to receive a pointer to a string holding the
+most recent RTSP Session ID.
+
+Applications wishing to resume an RTSP session on another connection should
+retreive this info before closing the active connection.
+.IP CURLINFO_RTSP_CLIENT_CSEQ
+Pass a pointer to a long to receive the next CSeq that will be used by the
+application. 
+.IP CURLINFO_RTSP_SERVER_CSEQ
+Pass a pointer to a long to receive the next server CSeq that will be expected
+by the application. 
+
+\fI(NOTE: listening for server initiated requests is currently
+unimplemented).\fP
+
+Applications wishing to resume an RTSP session on another connection should
+retreive this info before closing the active connection.
+.IP CURLINFO_RTSP_CSEQ_RECV
+Pass a pointer to a long to receive the most recently received CSeq from the
+server. If your application encounters a \fICURLE_RTSP_CSEQ_ERROR\fP then you
+may wish to troubleshoot and/or fix the CSeq mismatch by peeking at this value.
 .SH TIMES
 .nf
 An overview of the six time values available from curl_easy_getinfo()
 
 curl_easy_perform()
     |
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_getinfo.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_getinfo.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_getinfo.html	2009-11-04 20:29:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_getinfo.html	2010-02-09 18:07:34.000000000 +0800
@@ -117,13 +117,24 @@
 <p class="level1">Pass a pointer to a long to receive the last socket used by this curl session. If the socket is no longer valid, -1 is returned. When you finish working with the socket, you must call curl_easy_cleanup() as usual and let libcurl close the socket and cleanup other resources associated with the handle. This is typically used in combination with <span Class="emphasis">CURLOPT_CONNECT_ONLY</span>. (Added in 7.15.2) 
 <p class="level0"><a name="CURLINFOFTPENTRYPATH"></a><span class="nroffip">CURLINFO_FTP_ENTRY_PATH</span> 
 <p class="level1">Pass a pointer to a char pointer to receive a pointer to a string holding the path of the entry path. That is the initial path libcurl ended up in when logging on to the remote FTP server. This stores a NULL as pointer if something is wrong. (Added in 7.15.4) 
 <p class="level0"><a name="CURLINFOCERTINFO"></a><span class="nroffip">CURLINFO_CERTINFO</span> 
 <p class="level1">Pass a pointer to a 'struct curl_certinfo *' and you'll get it set to point to struct that holds a number of linked lists with info about the certificate chain, assuming you had CURLOPT_CERTINFO enabled when the previous request was done. The struct reports how many certs it found and then you can extract info for each of those certs by following the linked lists. The info chain is provided in a series of data in the format "name:content" where the content is for the specific named data. See also the certinfo.c example. NOTE: this option is only available in libcurl built with OpenSSL support. (Added in 7.19.1) 
 <p class="level0"><a name="CURLINFOCONDITIONUNMET"></a><span class="nroffip">CURLINFO_CONDITION_UNMET</span> 
-<p class="level1">Pass a pointer to a long to receive the number 1 if the condition provided in the previous request didn't match (see <span Class="emphasis">CURLOPT_TIMECONDITION</span>). Alas, if this returns a 1 you know that the reason you didn't get data in return is because it didn't fulfill the condition. The long ths argument points to will get a zero stored if the condition instead was met. (Added in 7.19.4) <a name="TIMES"></a><h2 class="nroffsh">TIMES</h2>
+<p class="level1">Pass a pointer to a long to receive the number 1 if the condition provided in the previous request didn't match (see <span Class="emphasis">CURLOPT_TIMECONDITION</span>). Alas, if this returns a 1 you know that the reason you didn't get data in return is because it didn't fulfill the condition. The long ths argument points to will get a zero stored if the condition instead was met. (Added in 7.19.4) 
+<p class="level0"><a name="CURLINFORTSPSESSIONID"></a><span class="nroffip">CURLINFO_RTSP_SESSION_ID</span> 
+<p class="level1">Pass a pointer to a char pointer to receive a pointer to a string holding the most recent RTSP Session ID. 
+<p class="level1">Applications wishing to resume an RTSP session on another connection should retreive this info before closing the active connection. 
+<p class="level0"><a name="CURLINFORTSPCLIENTCSEQ"></a><span class="nroffip">CURLINFO_RTSP_CLIENT_CSEQ</span> 
+<p class="level1">Pass a pointer to a long to receive the next CSeq that will be used by the application.  
+<p class="level0"><a name="CURLINFORTSPSERVERCSEQ"></a><span class="nroffip">CURLINFO_RTSP_SERVER_CSEQ</span> 
+<p class="level1">Pass a pointer to a long to receive the next server CSeq that will be expected by the application.  
+<p class="level1"><span class="emphasis">(NOTE: listening for server initiated requests is currently unimplemented).</span> 
+<p class="level1">Applications wishing to resume an RTSP session on another connection should retreive this info before closing the active connection. 
+<p class="level0"><a name="CURLINFORTSPCSEQRECV"></a><span class="nroffip">CURLINFO_RTSP_CSEQ_RECV</span> 
+<p class="level1">Pass a pointer to a long to receive the most recently received CSeq from the server. If your application encounters a <span Class="emphasis">CURLE_RTSP_CSEQ_ERROR</span> then you may wish to troubleshoot and/or fix the CSeq mismatch by peeking at this value. <a name="TIMES"></a><h2 class="nroffsh">TIMES</h2>
 <p class="level0"><pre>
 <p class="level0">An overview of the six time values available from curl_easy_getinfo()
  <p class="level0">curl_easy_perform()
  &nbsp;   |
  &nbsp;   |--NAMELOOKUP
  &nbsp;   |--|--CONNECT
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_getinfo.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_getinfo.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_init.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_pause.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_pause.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_perform.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_perform.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_recv.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_recv.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_reset.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_reset.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_send.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_send.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_setopt.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_setopt.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_setopt.3	2009-08-04 20:02:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_setopt.3	2010-01-30 22:30:27.000000000 +0800
@@ -2,29 +2,29 @@
 .\" *                                  _   _ ____  _
 .\" *  Project                     ___| | | |  _ \| |
 .\" *                             / __| | | | |_) | |
 .\" *                            | (__| |_| |  _ <| |___
 .\" *                             \___|\___/|_| \_\_____|
 .\" *
-.\" * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+.\" * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
 .\" *
 .\" * This software is licensed as described in the file COPYING, which
 .\" * you should have received as part of this distribution. The terms
 .\" * are also available at http://curl.haxx.se/docs/copyright.html.
 .\" *
 .\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
 .\" * copies of the Software, and permit persons to whom the Software is
 .\" * furnished to do so, under the terms of the COPYING file.
 .\" *
 .\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 .\" * KIND, either express or implied.
 .\" *
-.\" * $Id: curl_easy_setopt.3,v 1.266 2009-08-04 12:02:27 bagder Exp $
+.\" * $Id: curl_easy_setopt.3,v 1.275 2010-01-28 01:39:16 yangtse Exp $
 .\" **************************************************************************
 .\"
-.TH curl_easy_setopt 3 "11 Dec 2008" "libcurl 7.19.3" "libcurl Manual"
+.TH curl_easy_setopt 3 "1 Jan 2010" "libcurl 7.20.0" "libcurl Manual"
 .SH NAME
 curl_easy_setopt \- set options for a curl easy handle
 .SH SYNOPSIS
 #include <curl/curl.h>
 
 CURLcode curl_easy_setopt(CURL *handle, CURLoption option, parameter);
@@ -46,14 +46,14 @@
 
 Strings passed to libcurl as 'char *' arguments, are copied by the library;
 thus the string storage associated to the pointer argument may be overwritten
 after curl_easy_setopt() returns. Exceptions to this rule are described in
 the option details below.
 
-NOTE: before 7.17.0 strings were not copied. Instead the user was forced keep
-them available until libcurl no longer needed them.
+Before version 7.17.0, strings were not copied. Instead the user was forced
+keep them available until libcurl no longer needed them.
 
 The \fIhandle\fP is the return code from a \fIcurl_easy_init(3)\fP or
 \fIcurl_easy_duphandle(3)\fP call.
 .SH BEHAVIOR OPTIONS
 .IP CURLOPT_VERBOSE
 Set the parameter to 1 to get the library to display a lot of verbose
@@ -344,15 +344,15 @@
 option was introduced in 7.11.0.
 
 This function will get called on all new connections made to a server, during
 the SSL negotiation. The SSL_CTX pointer will be a new one every time.
 
 To use this properly, a non-trivial amount of knowledge of the openssl
-libraries is necessary. For example, using this function allows you to use openssl
-callbacks to add additional validation code for certificates, and even to
-change the actual URI of an HTTPS request (example used in the lib509 test
+libraries is necessary. For example, using this function allows you to use
+openssl callbacks to add additional validation code for certificates, and even
+to change the actual URI of an HTTPS request (example used in the lib509 test
 case).  See also the example section for a replacement of the key, certificate
 and trust file settings.
 .IP CURLOPT_SSL_CTX_DATA
 Data pointer to pass to the ssl context callback set by the option
 \fICURLOPT_SSL_CTX_FUNCTION\fP, this is the pointer you'll get as third
 parameter, otherwise \fBNULL\fP. (Added in 7.11.0)
@@ -398,12 +398,36 @@
  \&#define CURL_ICONV_CODESET_OF_NETWORK "ISO8859-1"
 
  \&#define CURL_ICONV_CODESET_FOR_UTF8   "UTF-8"
 
 You will need to override these definitions if they are different on your
 system.
+.IP CURLOPT_INTERLEAVEFUNCTION
+Function pointer that should match the following prototype: \fIsize_t
+function( void *ptr, size_t size, size_t nmemb, void *stream)\fP. This
+function gets called by libcurl as soon as it has received interleaved RTP
+data. This function gets called for each $ block and therefore contains
+exactly one upper-layer protocol unit (e.g.  one RTP packet). Curl writes the
+interleaved header as well as the included data for each call. The first byte
+is always an ASCII dollar sign. The dollar sign is followed by a one byte
+channel identifier and then a 2 byte integer length in network byte order. See
+\fIRFC 2326 Section 10.12\fP for more information on how RTP interleaving
+behaves. If unset or set to NULL, curl will use the default write function.
+
+Interleaved RTP poses some challeneges for the client application. Since the
+stream data is sharing the RTSP control connection, it is critical to service
+the RTP in a timely fashion. If the RTP data is not handled quickly,
+subsequent response processing may become unreasonably delayed and the
+connection may close. The application may use \fICURL_RTSPREQ_RECEIVE\fP to
+service RTP data when no requests are desired. If the application makes a
+request, (e.g.  \fICURL_RTSPREQ_PAUSE\fP) then the response handler will
+process any pending RTP data before marking the request as finished.  (Added
+in 7.20.0)
+.IP CURLOPT_INTERLEAVEDATA
+This is the stream that will be passed to \fICURLOPT_INTERLEAVEFUNCTION\fP when
+interleaved RTP data is received. (Added in 7.20.0)
 .SH ERROR OPTIONS
 .IP CURLOPT_ERRORBUFFER
 Pass a char * to a buffer that the libcurl may store human readable error
 messages in. This may be more helpful than just the return code from
 \fIcurl_easy_perform\fP. The buffer must be at least CURL_ERROR_SIZE big.
 Although this argument is a 'char *', it does not describe an input string.
@@ -446,12 +470,15 @@
 \fIcurl_multi_perform(3)\fP. Use \fIcurl_version_info(3)\fP for detailed info
 on which protocols are supported.
 
 The string given to CURLOPT_URL must be url-encoded and follow RFC 2396
 (http://curl.haxx.se/rfc/rfc2396.txt).
 
+Starting with version 7.20.0, the fragment part of the URI will not be send as
+part of the path, which was the case previously.
+
 \fICURLOPT_URL\fP is the only option that \fBmust\fP be set before
 \fIcurl_easy_perform(3)\fP is called.
 
 \fICURLOPT_PROTOCOLS\fP can be used to limit what protocols libcurl will use
 for this transfer, independent of what libcurl has been compiled to
 support. That may be useful if you accept the URL from an external source and
@@ -534,29 +561,29 @@
 network interface. The name can be an interface name, an IP address, or a host
 name.
 .IP CURLOPT_LOCALPORT
 Pass a long. This sets the local port number of the socket used for
 connection. This can be used in combination with \fICURLOPT_INTERFACE\fP and
 you are recommended to use \fICURLOPT_LOCALPORTRANGE\fP as well when this is
-set. Note that the only valid port numbers are 1 - 65535. (Added in 7.15.2)
+set. Valid port numbers are 1 - 65535. (Added in 7.15.2)
 .IP CURLOPT_LOCALPORTRANGE
 Pass a long. This is the number of attempts libcurl should make to find a
 working local port number. It starts with the given \fICURLOPT_LOCALPORT\fP
 and adds one to the number for each retry. Setting this to 1 or below will
-make libcurl do only one try for the exact port number. Note that port numbers
-by nature are scarce resources that will be busy at times so setting this
-value to something too low might cause unnecessary connection setup
-failures. (Added in 7.15.2)
+make libcurl do only one try for the exact port number. Port numbers by nature
+are scarce resources that will be busy at times so setting this value to
+something too low might cause unnecessary connection setup failures. (Added in
+7.15.2)
 .IP CURLOPT_DNS_CACHE_TIMEOUT
 Pass a long, this sets the timeout in seconds. Name resolves will be kept in
 memory for this number of seconds. Set to zero to completely disable
 caching, or set to -1 to make the cached entries remain forever. By default,
 libcurl caches this info for 60 seconds.
 
-NOTE: the name resolve functions of various libc implementations don't re-read
-name server information unless explicitly told so (for example, by calling
+The name resolve functions of various libc implementations don't re-read name
+server information unless explicitly told so (for example, by calling
 \fIres_init(3)\fP). This may cause libcurl to keep using the older server even
 if DHCP has updated the server info, and this may look like a DNS cache issue
 to the casual libcurl-app user.
 .IP CURLOPT_DNS_USE_GLOBAL_CACHE
 Pass a long. If the value is 1, it tells curl to use a global DNS cache
 that will survive between easy handle creations and deletions. This is not
@@ -671,18 +698,18 @@
 the \fICURLOPT_USERNAME\fP option. (Added in 7.19.1)
 .IP CURLOPT_PROXYUSERNAME
 Pass a char * as parameter, which should be pointing to the zero terminated
 user name to use for the transfer while connecting to Proxy.
 
 The CURLOPT_PROXYUSERNAME option should be used in same way as the
-\fICURLOPT_PROXYUSERPWD\fP is used.  In comparison to \fICURLOPT_PROXYUSERPWD\fP
-the CURLOPT_PROXYUSERNAME allows the username to contain a colon,
-like in the following example: "sip:user@example.com".
-Note the CURLOPT_PROXYUSERNAME option is an alternative way to set the user name
-while connecting to Proxy.  There is no meaning to use it together
-with the \fICURLOPT_PROXYUSERPWD\fP option.
+\fICURLOPT_PROXYUSERPWD\fP is used.  In comparison to
+\fICURLOPT_PROXYUSERPWD\fP the CURLOPT_PROXYUSERNAME allows the username to
+contain a colon, like in the following example: "sip:user@example.com". The
+CURLOPT_PROXYUSERNAME option is an alternative way to set the user name while
+connecting to Proxy.  There is no meaning to use it together with the
+\fICURLOPT_PROXYUSERPWD\fP option.
 
 In order to specify the password to be used in conjunction with the user name
 use the \fICURLOPT_PROXYPASSWORD\fP option.  (Added in 7.19.1)
 .IP CURLOPT_PROXYPASSWORD
 Pass a char * as parameter, which should be pointing to the zero terminated
 password to use for the transfer while connecting to Proxy.
@@ -733,14 +760,14 @@
 .IP CURLAUTH_ANY
 This is a convenience macro that sets all bits and thus makes libcurl pick any
 it finds suitable. libcurl will automatically select the one it finds most
 secure.
 .IP CURLAUTH_ANYSAFE
 This is a convenience macro that sets all bits except Basic and thus makes
-libcurl pick any it finds suitable. libcurl will automatically select the one it
-finds most secure.
+libcurl pick any it finds suitable. libcurl will automatically select the one
+it finds most secure.
 .RE
 .IP CURLOPT_PROXYAUTH
 Pass a long as parameter, which is set to a bitmask, to tell libcurl which
 authentication method(s) you want it to use for your proxy authentication.  If
 more than one bit is set, libcurl will first query the site to see what
 authentication methods it supports and then pick the best one you allow it to
@@ -772,13 +799,13 @@
 
 This means that the library will re-send the same request on the new location
 and follow new Location: headers all the way until no more such headers are
 returned. \fICURLOPT_MAXREDIRS\fP can be used to limit the number of redirects
 libcurl will follow.
 
-NOTE: since 7.19.4, libcurl can limit to what protocols it will automatically
+Since 7.19.4, libcurl can limit what protocols it will automatically
 follow. The accepted protocols are set with \fICURLOPT_REDIR_PROTOCOLS\fP and
 it excludes the FILE protocol by default.
 .IP CURLOPT_UNRESTRICTED_AUTH
 A parameter set to 1 tells the library it can continue to send authentication
 (user+password) when following locations, even when hostname changed. This
 option is meaningful only when setting \fICURLOPT_FOLLOWLOCATION\fP.
@@ -848,13 +875,13 @@
 re-used handle, you must explicitly set the new request type using
 \fICURLOPT_NOBODY\fP or \fICURLOPT_HTTPGET\fP or similar.
 .IP CURLOPT_POSTFIELDS
 Pass a void * as parameter, which should be the full data to post in an HTTP
 POST operation. You must make sure that the data is formatted the way you want
 the server to receive it. libcurl will not convert or encode it for you. Most
-web servers will assume this data to be url-encoded. Take note.
+web servers will assume this data to be url-encoded.
 
 The pointed data are NOT copied by the library: as a consequence, they must
 be preserved by the calling application until the transfer finishes.
 
 This POST is a normal application/x-www-form-urlencoded kind (and libcurl will
 set that Content-Type by default when this option is used), which is the most
@@ -967,15 +994,15 @@
 
 If you need to set multiple cookies, you need to set them all using a single
 option and thus you need to concatenate them all in one single string. Set
 multiple cookies in one string like this: "name1=content1; name2=content2;"
 etc.
 
-Note that this option sets the cookie header explictly in the outgoing
-request(s). If multiple requests are done due to authentication, followed
-redirections or similar, they will all get this cookie passed on.
+This option sets the cookie header explictly in the outgoing request(s). If
+multiple requests are done due to authentication, followed redirections or
+similar, they will all get this cookie passed on.
 
 Using this option multiple times will only make the latest string override the
 previous ones.
 .IP CURLOPT_COOKIEFILE
 Pass a pointer to a zero terminated string as parameter. It should contain the
 name of your file holding cookie data to read. The cookie data may be in
@@ -1042,22 +1069,35 @@
 servers) which will report incorrect content length for files over 2
 gigabytes. If this option is used, curl will not be able to accurately report
 progress, and will simply stop the download when the server ends the
 connection. (added in 7.14.1)
 .IP CURLOPT_HTTP_CONTENT_DECODING
 Pass a long to tell libcurl how to act on content decoding. If set to zero,
-content decoding will be disabled. If set to 1 it is enabled. Note however
-that libcurl has no default content decoding but requires you to use
-\fICURLOPT_ENCODING\fP for that. (added in 7.16.2)
+content decoding will be disabled. If set to 1 it is enabled. Libcurl has no
+default content decoding but requires you to use \fICURLOPT_ENCODING\fP for
+that. (added in 7.16.2)
 .IP CURLOPT_HTTP_TRANSFER_DECODING
 Pass a long to tell libcurl how to act on transfer decoding. If set to zero,
 transfer decoding will be disabled, if set to 1 it is enabled
 (default). libcurl does chunked transfer decoding by default unless this
 option is set to zero. (added in 7.16.2)
+.SH SMTP OPTIONS
+.IP CURLOPT_MAIL_FROM
+Pass a pointer to a zero terminated string as parameter. It will be used to
+specify the sender address in a mail when sending an SMTP mail with libcurl.
+
+(Added in 7.20.0)
+.IP CURLOPT_MAIL_RCPT
+Pass a pointer to a linked list of recipients to pass to the server in your
+SMTP mail request.  The linked list should be a fully valid list of \fBstruct
+curl_slist\fP structs properly filled in. Use \fIcurl_slist_append(3)\fP to
+create the list and \fIcurl_slist_free_all(3)\fP to clean up an entire list.
+
+(Added in 7.20.0)
 .SH TFTP OPTIONS
-.IP CURLOPT_TFTPBLKSIZE
+.IP CURLOPT_TFTP_BLKSIZE
 Specify block size to use for TFTP data transmission. Valid range as per RFC
 2348 is 8-65464 bytes. The default of 512 bytes will be used if this option is
 not specified. The specified block size will only be used pending support by
 the remote server. If the server does not return an option acknowledgement or
 returns an option acknowledgement with no blksize, the default of 512 bytes
 will be used. (added in 7.19.4)
@@ -1144,12 +1184,17 @@
 Pass a long. If the value is 1, it tells curl to use the EPSV command
 when doing passive FTP downloads (which it always does by default). Using EPSV
 means that it will first attempt to use EPSV before using PASV, but if you
 pass zero to this option, it will not try using EPSV, only plain PASV.
 
 If the server is an IPv6 host, this option will have no effect as of 7.12.3.
+.IP CURLOPT_FTP_USE_PRET
+Pass a long. If the value is 1, it tells curl to send a PRET command before
+PASV (and EPSV). Certain FTP servers, mainly drftpd, require this non-standard
+command for directory listings as well as up and downloads in PASV mode. Has
+no effect when using the active FTP transfers mode.  (Added in 7.20.0)
 .IP CURLOPT_FTP_CREATE_MISSING_DIRS
 Pass a long. If the value is 1, curl will attempt to create any remote
 directory that it fails to CWD into. CWD is the command that changes working
 directory. (Added in 7.10.7)
 
 This setting also applies to SFTP-connections. curl will attempt to create
@@ -1251,12 +1296,113 @@
 .IP CURLFTPMETHOD_SINGLECWD
 libcurl does one CWD with the full target directory and then operates on the
 file \&"normally" (like in the multicwd case). This is somewhat more standards
 compliant than 'nocwd' but without the full penalty of 'multicwd'.
 .RE
 (Added in 7.15.1)
+.SH RTSP OPTIONS
+.IP CURLOPT_RTSP_REQUEST
+Tell libcurl what kind of RTSP request to make. Pass one of the following RTSP
+enum values. Unless noted otherwise, commands require the Session ID to be
+initialized. (Added in 7.20.0)
+.RS
+.IP CURL_RTSPREQ_OPTIONS
+Used to retrieve the available methods of the server. The application is
+responsbile for parsing and obeying the response. \fB(The session ID is not
+needed for this method.)\fP  (Added in 7.20.0)
+.IP CURL_RTSPREQ_DESCRIBE
+Used to get the low level description of a stream. The application should note
+what formats it understands in the \fI'Accept:'\fP header. Unless set
+manually, libcurl will automatically fill in \fI'Accept:
+application/sdp'\fP. Time-condition headers will be added to Describe requests
+if the \fICURLOPT_TIMECONDITION\fP option is active. \fB(The session ID is not
+needed for this method)\fP  (Added in 7.20.0)
+.IP CURL_RTSPREQ_ANNOUNCE
+When sent by a client, this method changes the description of the session. For
+example, if a client is using the server to record a meeting, the client can
+use Announce to inform the server of all the meta-information about the
+session.  ANNOUNCE acts like an HTTP PUT or POST just like
+\fICURL_RTSPREQ_SET_PARAMETER\fP (Added in 7.20.0)
+.IP CURL_RTSPREQ_SETUP
+Setup is used to initialize the transport layer for the session. The
+application must set the desired Transport options for a session by using the
+\fICURLOPT_RTSP_TRANSPORT\fP option prior to calling setup. If no session ID
+is currently set with \fICURLOPT_RTSP_SESSION_ID\fP, libcurl will extract and
+use the session ID in the response to this request. \fB(The session ID is not
+needed for this method).\fP  (Added in 7.20.0)
+.IP CURL_RTSPREQ_PLAY
+Send a Play command to the server. Use the \fICURLOPT_RANGE\fP option to
+modify the playback time (e.g. 'npt=10-15').  (Added in 7.20.0)
+.IP CURL_RTSPREQ_PAUSE
+Send a Pause command to the server. Use the \fICURLOPT_RANGE\fP option with a
+single value to indicate when the stream should be halted. (e.g. npt='25')
+(Added in 7.20.0)
+.IP CURL_RTSPREQ_TEARDOWN
+This command terminates an RTSP session. Simply closing a connection does not
+terminate the RTSP session since it is valid to control an RTSP session over
+different connections.  (Added in 7.20.0)
+.IP CURL_RTSPREQ_GET_PARAMETER
+Retrieve a parameter from the server. By default, libcurl will automatically
+include an \fIAccept: text/parameters\fP header unless a custom one is set.
+Applications wishing to send a heartbeat message (e.g. in the presence of a
+server-specified timeout) should send use an empty GET_PARAMETER request.
+(Added in 7.20.0)
+.IP CURL_RTSPREQ_SET_PARAMETER
+Set a parameter on the server. By default, libcurl will automatically include
+a \fIContent-Type: text/parameters\fP header unless a custom one is set. The
+interaction with SET_PARAMTER is much like an HTTP PUT or POST. An application
+may either use \fICURLOPT_UPLOAD\fP with \fICURLOPT_READDATA\fP like an HTTP
+PUT, or it may use \fICURLOPT_POSTFIELDS\fP like an HTTP POST. No chunked
+transfers are allowed, so the application must set the
+\fICURLOPT_INFILESIZE\fP in the former and \fICURLOPT_POSTFIELDSIZE\fP in the
+latter. Also, there is no use of multi-part POSTs within RTSP. (Added in
+7.20.0)
+.IP CURL_RTSPREQ_RECORD
+Used to tell the server to record a session. Use the \fICURLOPT_RANGE\fP
+option to modify the record time. (Added in 7.20.0)
+.IP CURL_RTSPREQ_RECEIVE
+This is a special request because it does not send any data to the server. The
+application may call this function in order to receive interleaved RTP
+data. It will return after processing one read buffer of data in order to give
+the application a chance to run. (Added in 7.20.0)
+.RE
+.IP CURLOPT_RTSP_SESSION_ID
+Pass a char * as a parameter to set the value of the current RTSP Session ID
+for the handle. Useful for resuming an in-progress session. Once this value is
+set to any non-NULL value, libcurl will return \fICURLE_RTSP_SESSION_ERROR\fP
+if ID received from the server does not match. If unset (or set to NULL),
+libcurl will automatically set the ID the first time the server sets it in a
+response. (Added in 7.20.0)
+.IP CURLOPT_RTSP_STREAM_URI
+Set the stream URI to operate on by passing a char * . For example, a single
+session may be controlling \fIrtsp://foo/twister/audio\fP and
+\fIrtsp://foo/twister/video\fP and the application can switch to the
+appropriate stream using this option. If unset, libcurl will default to
+operating on generic server options by passing '*' in the place of the RTSP
+Stream URI. This option is distinct from \fICURLOPT_URL\fP. When working with
+RTSP, the \fICURLOPT_STREAM_URI\fP indicates what URL to send to the server in
+the request header while the \fICURLOPT_URL\fP indicates where to make the
+connection to.  (e.g. the \fICURLOPT_URL\fP for the above examples might be
+set to \fIrtsp://foo/twister\fP (Added in 7.20.0)
+.IP CURLOPT_RTSP_TRANSPORT
+Pass a char * to tell libcurl what to pass for the Transport: header for this
+RTSP session. This is mainly a convenience method to avoid needing to set a
+custom Transport: header for every SETUP request. The application must set a
+Transport: header before issuing a SETUP request. (Added in 7.20.0)
+.IP CURLOPT_RTSP_HEADER
+This option is simply an alias for \fICURLOPT_HTTP_HEADER\fP. Use this to
+replace the standard headers that RTSP and HTTP share. It is also valid to use
+the shortcuts such as \fICURLOPT_USERAGENT\fP. (Added in 7.20.0)
+.IP CURLOPT_RTSP_CLIENT_CSEQ
+Manually set the the CSEQ number to issue for the next RTSP request. Useful if
+the application is resuming a previously broken connection. The CSEQ will
+increment from this new number henceforth. (Added in 7.20.0)
+.IP CURLOPT_RTSP_SERVER_CSEQ
+Manually set the CSEQ number to expect for the next RTSP Server->Client
+request.  At the moment, this feature (listening for Server requests) is
+unimplemented. (Added in 7.20.0)
 .SH PROTOCOL OPTIONS
 .IP CURLOPT_TRANSFERTEXT
 A parameter set to 1 tells the library to use ASCII mode for FTP transfers,
 instead of the default binary transfer. For win32 systems it does not set the
 stdout to binary mode. This option can be usable when transferring text data
 between systems with different views on certain characters, such as newlines
@@ -1277,15 +1423,20 @@
 .IP CURLOPT_RANGE
 Pass a char * as parameter, which should contain the specified range you
 want. It should be in the format "X-Y", where X or Y may be left out. HTTP
 transfers also support several intervals, separated with commas as in
 \fI"X-Y,N-M"\fP. Using this kind of multiple intervals will cause the HTTP
 server to send the response document in pieces (using standard MIME separation
-techniques). Pass a NULL to this option to disable the use of ranges.
+techniques). For RTSP, the formatting of a range should follow RFC 2326
+Section 12.29. For RTSP, byte ranges are \fBnot\fP permitted. Instead, ranges
+should be given in npt, utc, or smpte formats.
 
-Ranges work on HTTP, FTP and FILE (since 7.18.0) transfers only.
+Pass a NULL to this option to disable the use of ranges.
+
+Ranges work on HTTP, FTP, FILE (since 7.18.0), and RTSP (since 7.20.0)
+transfers only.
 .IP CURLOPT_RESUME_FROM
 Pass a long as parameter. It contains the offset in number of bytes that you
 want the transfer to start from. Set this option to 0 to make the transfer
 start from the beginning (effectively disabling resume). For FTP, set this
 option to -1 to make the transfer start from the end of the target file
 (useful to continue an interrupted upload).
@@ -1338,23 +1489,23 @@
 libcurl what the expected size of the infile is. This value should be passed
 as a long. See also \fICURLOPT_INFILESIZE_LARGE\fP.
 
 For uploading using SCP, this option or \fICURLOPT_INFILESIZE_LARGE\fP is
 mandatory.
 
-Note that this option does not limit how much data libcurl will actually send,
-as that is controlled entirely by what the read callback returns.
+This option does not limit how much data libcurl will actually send, as that
+is controlled entirely by what the read callback returns.
 .IP CURLOPT_INFILESIZE_LARGE
 When uploading a file to a remote site, this option should be used to tell
 libcurl what the expected size of the infile is.  This value should be passed
 as a curl_off_t. (Added in 7.11.0)
 
 For uploading using SCP, this option or \fICURLOPT_INFILESIZE\fP is mandatory.
 
-Note that this option does not limit how much data libcurl will actually send,
-as that is controlled entirely by what the read callback returns.
+This option does not limit how much data libcurl will actually send, as that
+is controlled entirely by what the read callback returns.
 .IP CURLOPT_UPLOAD
 A parameter set to 1 tells the library to prepare for an upload. The
 \fICURLOPT_READDATA\fP and \fICURLOPT_INFILESIZE\fP or
 \fICURLOPT_INFILESIZE_LARGE\fP options are also interesting for uploads. If
 the protocol is HTTP, uploading means using the PUT request unless you tell
 libcurl otherwise.
@@ -1384,13 +1535,14 @@
 The file size is not always known prior to download, and for such files this
 option has no effect even if the file transfer ends up being larger than this
 given limit. This concerns both FTP and HTTP transfers.
 .IP CURLOPT_TIMECONDITION
 Pass a long as parameter. This defines how the \fICURLOPT_TIMEVALUE\fP time
 value is treated. You can set this parameter to \fICURL_TIMECOND_IFMODSINCE\fP
-or \fICURL_TIMECOND_IFUNMODSINCE\fP. This feature applies to HTTP and FTP.
+or \fICURL_TIMECOND_IFUNMODSINCE\fP. This feature applies to HTTP, FTP, and
+RTSP.
 
 The last modification time of a file is not always known and in such instances
 this feature will have no effect even if the given time condition would not
 have been met. \fIcurl_easy_getinfo(3)\fP with the
 \fICURLINFO_CONDITION_UNMET\fP option can be used after a transfer to learn if
 a zero-byte successful "transfer" was due to this condition not matching.
@@ -1444,15 +1596,15 @@
 prevent increasing the number of open connections.
 
 If you already have performed transfers with this curl handle, setting a
 smaller MAXCONNECTS than before may cause open connections to get closed
 unnecessarily.
 
-Note that if you add this easy handle to a multi handle, this setting is not
-acknowledged, and you must instead use \fIcurl_multi_setopt(3)\fP and
-the \fICURLMOPT_MAXCONNECTS\fP option.
+If you add this easy handle to a multi handle, this setting is not
+acknowledged, and you must instead use \fIcurl_multi_setopt(3)\fP and the
+\fICURLMOPT_MAXCONNECTS\fP option.
 .IP CURLOPT_CLOSEPOLICY
 (Obsolete) This option does nothing.
 .IP CURLOPT_FRESH_CONNECT
 Pass a long. Set to 1 to make the next transfer use a new (fresh) connection
 by force. If the connection cache is full before this connection, one of the
 existing connections will be closed as according to the selected or default
@@ -1546,16 +1698,15 @@
 Sets the actual crypto engine as the default for (asymmetric) crypto
 operations.
 
 If the crypto device cannot be set, \fICURLE_SSL_ENGINE_SETFAILED\fP is
 returned.
 
-Note that even though this option doesn't need any parameter, in some
-configurations \fIcurl_easy_setopt\fP might be defined as a macro taking
-exactly three arguments. Therefore, it's recommended to pass 1 as parameter to
-this option.
+Even though this option doesn't need any parameter, in some configurations
+\fIcurl_easy_setopt\fP might be defined as a macro taking exactly three
+arguments. Therefore, it's recommended to pass 1 as parameter to this option.
 .IP CURLOPT_SSLVERSION
 Pass a long as parameter to control what version of SSL/TLS to attempt to use.
 The available options are:
 .RS
 .IP CURL_SSLVERSION_DEFAULT
 The default action. This will attempt to figure out the remote SSL protocol
@@ -1595,24 +1746,24 @@
 Pass a char * to a zero terminated string naming a file holding one or more
 certificates to verify the peer with.  This makes sense only when used in
 combination with the \fICURLOPT_SSL_VERIFYPEER\fP option.  If
 \fICURLOPT_SSL_VERIFYPEER\fP is zero, \fICURLOPT_CAINFO\fP need not
 even indicate an accessible file.
 
-Note that option is by default set to the system path where libcurl's cacert
-bundle is assumed to be stored, as established at build time.
+This option is by default set to the system path where libcurl's cacert bundle
+is assumed to be stored, as established at build time.
 
 When built against NSS, this is the directory that the NSS certificate
 database resides in.
 .IP CURLOPT_ISSUERCERT
 Pass a char * to a zero terminated string naming a file holding a CA
 certificate in PEM format. If the option is set, an additional check against
 the peer certificate is performed to verify the issuer is indeed the one
 associated with the certificate provided by the option. This additional check
-is useful in multi-level PKI where one needs to enforce that the peer certificate is
-from a specific branch of the tree.
+is useful in multi-level PKI where one needs to enforce that the peer
+certificate is from a specific branch of the tree.
 
 This option makes sense only when used in combination with the
 \fICURLOPT_SSL_VERIFYPEER\fP option. Otherwise, the result of the check is not
 considered as failure.
 
 A specific error code (CURLE_SSL_ISSUER_ERROR) is defined with the option,
@@ -1641,14 +1792,14 @@
 
 This option makes sense only when used in combination with the
 \fICURLOPT_SSL_VERIFYPEER\fP option.
 
 A specific error code (CURLE_SSL_CRL_BADFILE) is defined with the option. It
 is returned when the SSL exchange fails because the CRL file cannot be loaded.
-Note that a failure in certificate verification due to a revocation information
-found in the CRL does not trigger this specific error. (Added in 7.19.0)
+A failure in certificate verification due to a revocation information found in
+the CRL does not trigger this specific error. (Added in 7.19.0)
 .IP CURLOPT_CERTINFO
 Pass a long set to 1 to enable libcurl's certificate chain info gatherer. With
 this enabled, libcurl (if built with OpenSSL) will extract lots of information
 and data about the certificates in the certificate chain used in the SSL
 connection. This data is then possible to extract after a transfer using
 \fIcurl_easy_getinfo(3)\fP and its option \fICURLINFO_CERTINFO\fP. (Added in
@@ -1709,13 +1860,13 @@
 You'll find more details about the NSS cipher lists on this URL:
 \fIhttp://directory.fedora.redhat.com/docs/mod_nss.html#Directives\fP
 
 .IP CURLOPT_SSL_SESSIONID_CACHE
 Pass a long set to 0 to disable libcurl's use of SSL session-ID caching. Set
 this to 1 to enable it. By default all transfers are done using the
-cache. Note that while nothing ever should get hurt by attempting to reuse SSL
+cache. While nothing ever should get hurt by attempting to reuse SSL
 session-IDs, there seem to be broken SSL implementations in the wild that may
 require you to disable this in order for you to succeed. (Added in 7.16.0)
 .IP CURLOPT_KRBLEVEL
 Pass a char * as parameter. Set the kerberos security level for FTP; this also
 enables kerberos awareness.  This is a string, \&'clear', \&'safe',
 \&'confidential' or \&'private'.  If the string is set but doesn't match one
@@ -1737,15 +1888,15 @@
 .IP CURLOPT_SSH_PUBLIC_KEYFILE
 Pass a char * pointing to a file name for your public key. If not used,
 libcurl defaults to using \fB~/.ssh/id_dsa.pub\fP.
 (Added in 7.16.1)
 .IP CURLOPT_SSH_PRIVATE_KEYFILE
 Pass a char * pointing to a file name for your private key. If not used,
-libcurl defaults to using \fB~/.ssh/id_dsa\fP.
-If the file is password-protected, set the password with \fICURLOPT_KEYPASSWD\fP.
-(Added in 7.16.1)
+libcurl defaults to using \fB~/.ssh/id_dsa\fP.  If the file is
+password-protected, set the password with \fICURLOPT_KEYPASSWD\fP. (Added in
+7.16.1)
 .IP CURLOPT_SSH_KNOWNHOSTS
 Pass a pointer to a zero terminated string holding the file name of the
 known_host file to use.  The known_hosts file should use the OpenSSH file
 format as supported by libssh2. If this file is specified, libcurl will only
 accept connections with hosts that are known and present in that file, with a
 matching public key. Use \fICURLOPT_SSH_KEYFUNCTION\fP to alter the default
@@ -1758,15 +1909,15 @@
 matching status and a custom pointer (set with \fICURLOPT_SSH_KEYDATA\fP). It
 MUST return one of the following return codes to tell libcurl how to act:
 .RS
 .IP CURLKHSTAT_FINE_ADD_TO_FILE
 The host+key is accepted and libcurl will append it to the known_hosts file
 before continuing with the connection. This will also add the host+key combo
-to the known_host pool kept in memory if it wasn't already present there. Note
-that the adding of data to the file is done by completely replacing the file
-with a new copy, so the permissions of the file must allow this.
+to the known_host pool kept in memory if it wasn't already present there. The
+adding of data to the file is done by completely replacing the file with a new
+copy, so the permissions of the file must allow this.
 .IP CURLKHSTAT_FINE
 The host+key is accepted libcurl will continue with the connection. This will
 also add the host+key combo to the known_host pool kept in memory if it wasn't
 already present there.
 .IP CURLKHSTAT_REJECT
 The host+key is rejected. libcurl will deny the connection to continue and it
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_setopt.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_setopt.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_setopt.html	2009-11-04 20:29:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_setopt.html	2010-02-09 18:07:34.000000000 +0800
@@ -47,13 +47,13 @@
 <p class="level0">curl_easy_setopt - set options for a curl easy handle <a name="SYNOPSIS"></a><h2 class="nroffsh">SYNOPSIS</h2>
 <p class="level0">#include &lt;curl/curl.h&gt; 
 <p class="level0">CURLcode curl_easy_setopt(CURL *handle, CURLoption option, parameter); <a name="DESCRIPTION"></a><h2 class="nroffsh">DESCRIPTION</h2>
 <p class="level0">curl_easy_setopt() is used to tell libcurl how to behave. By using the appropriate options to <span Class="emphasis">curl_easy_setopt</span>, you can change libcurl's behavior.  All options are set with the <span Class="emphasis">option</span> followed by a <span Class="emphasis">parameter</span>. That parameter can be a <span Class="bold">long</span>, a <span Class="bold">function pointer</span>, an <span Class="bold">object pointer</span> or a <span Class="bold">curl_off_t</span>, depending on what the specific option expects. Read this manual carefully as bad input values may cause libcurl to behave badly!  You can only set one option in each function call. A typical application uses many curl_easy_setopt() calls in the setup phase. 
 <p class="level0">Options set with this function call are valid for all forthcoming transfers performed using this <span Class="emphasis">handle</span>.  The options are not in any way reset between transfers, so if you want subsequent transfers with different options, you must change them between the transfers. You can optionally reset all options back to internal default with <a class="emphasis" href="./curl_easy_reset.html">curl_easy_reset(3)</a>. 
 <p class="level0">Strings passed to libcurl as 'char *' arguments, are copied by the library; thus the string storage associated to the pointer argument may be overwritten after curl_easy_setopt() returns. Exceptions to this rule are described in the option details below. 
-<p class="level0">NOTE: before 7.17.0 strings were not copied. Instead the user was forced keep them available until libcurl no longer needed them. 
+<p class="level0">Before version 7.17.0, strings were not copied. Instead the user was forced keep them available until libcurl no longer needed them. 
 <p class="level0">The <span Class="emphasis">handle</span> is the return code from a <a class="emphasis" href="./curl_easy_init.html">curl_easy_init(3)</a> or <a class="emphasis" href="./curl_easy_duphandle.html">curl_easy_duphandle(3)</a> call. <a name="BEHAVIOR"></a><h2 class="nroffsh">BEHAVIOR OPTIONS</h2>
 <p class="level0">
 <p class="level0"><a name="CURLOPTVERBOSE"></a><span class="nroffip">CURLOPT_VERBOSE</span> 
 <p class="level1">Set the parameter to 1 to get the library to display a lot of verbose information about its operations. Very useful for libcurl and/or protocol debugging and understanding. The verbose information will be sent to stderr, or the stream set with <a class="emphasis" href="#CURLOPTSTDERR">CURLOPT_STDERR</a>. 
 <p class="level1">You hardly ever want this set in production use, you will almost always want this when you debug/report problems. Another neat option for debugging is the <a class="emphasis" href="#CURLOPTDEBUGFUNCTION">CURLOPT_DEBUGFUNCTION</a>. 
 <p class="level0"><a name="CURLOPTHEADER"></a><span class="nroffip">CURLOPT_HEADER</span> 
@@ -160,13 +160,18 @@
 <p class="level1">If you set a callback pointer to NULL, or don't set it at all, the built-in libcurl iconv functions will be used.  If HAVE_ICONV was not defined when libcurl was built, and no callback has been established, conversion will return the CURLE_CONV_REQD error code. 
 <p class="level1">If HAVE_ICONV is defined, CURL_ICONV_CODESET_OF_HOST must also be defined. For example: 
 <p class="level1">&nbsp;#define CURL_ICONV_CODESET_OF_HOST "IBM-1047" 
 <p class="level1">The iconv code in libcurl will default the network and UTF8 codeset names as follows: 
 <p class="level1">&nbsp;#define CURL_ICONV_CODESET_OF_NETWORK "ISO8859-1" 
 <p class="level1">&nbsp;#define CURL_ICONV_CODESET_FOR_UTF8   "UTF-8" 
-<p class="level1">You will need to override these definitions if they are different on your system. <a name="ERROR"></a><h2 class="nroffsh">ERROR OPTIONS</h2>
+<p class="level1">You will need to override these definitions if they are different on your system. 
+<p class="level0"><a name="CURLOPTINTERLEAVEFUNCTION"></a><span class="nroffip">CURLOPT_INTERLEAVEFUNCTION</span> 
+<p class="level1">Function pointer that should match the following prototype: <span class="emphasis">size_t function( void *ptr, size_t size, size_t nmemb, void *stream)</span>. This function gets called by libcurl as soon as it has received interleaved RTP data. This function gets called for each $ block and therefore contains exactly one upper-layer protocol unit (e.g.  one RTP packet). Curl writes the interleaved header as well as the included data for each call. The first byte is always an ASCII dollar sign. The dollar sign is followed by a one byte channel identifier and then a 2 byte integer length in network byte order. See <span Class="emphasis">RFC 2326 Section 10.12</span> for more information on how RTP interleaving behaves. If unset or set to NULL, curl will use the default write function. 
+<p class="level1">Interleaved RTP poses some challeneges for the client application. Since the stream data is sharing the RTSP control connection, it is critical to service the RTP in a timely fashion. If the RTP data is not handled quickly, subsequent response processing may become unreasonably delayed and the connection may close. The application may use <a class="emphasis" href="#CURLRTSPREQRECEIVE">CURL_RTSPREQ_RECEIVE</a> to service RTP data when no requests are desired. If the application makes a request, (e.g.  <a class="emphasis" href="#CURLRTSPREQPAUSE">CURL_RTSPREQ_PAUSE</a>) then the response handler will process any pending RTP data before marking the request as finished.  (Added in 7.20.0) 
+<p class="level0"><a name="CURLOPTINTERLEAVEDATA"></a><span class="nroffip">CURLOPT_INTERLEAVEDATA</span> 
+<p class="level1">This is the stream that will be passed to <a class="emphasis" href="#CURLOPTINTERLEAVEFUNCTION">CURLOPT_INTERLEAVEFUNCTION</a> when interleaved RTP data is received. (Added in 7.20.0) <a name="ERROR"></a><h2 class="nroffsh">ERROR OPTIONS</h2>
 <p class="level0">
 <p class="level0"><a name="CURLOPTERRORBUFFER"></a><span class="nroffip">CURLOPT_ERRORBUFFER</span> 
 <p class="level1">Pass a char * to a buffer that the libcurl may store human readable error messages in. This may be more helpful than just the return code from <span Class="emphasis">curl_easy_perform</span>. The buffer must be at least CURL_ERROR_SIZE big. Although this argument is a 'char *', it does not describe an input string. Therefore the (probably undefined) contents of the buffer is NOT copied by the library. You should keep the associated storage available until libcurl no longer needs it. Failing to do so will cause very odd behavior or even crashes. libcurl will need it until you call <a class="emphasis" href="./curl_easy_cleanup.html">curl_easy_cleanup(3)</a> or you set the same option again to use a different pointer.  
 <p class="level1">Use <a class="emphasis" href="#CURLOPTVERBOSE">CURLOPT_VERBOSE</a> and <a class="emphasis" href="#CURLOPTDEBUGFUNCTION">CURLOPT_DEBUGFUNCTION</a> to better debug/trace why errors happen. 
 <p class="level1">If the library does not return an error, the buffer may not have been touched. Do not rely on the contents in those cases. 
 <p class="level1">
@@ -178,12 +183,13 @@
 <p class="level1">You might get some amounts of headers transferred before this situation is detected, like when a "100-continue" is received as a response to a POST/PUT and a 401 or 407 is received immediately afterwards. <a name="NETWORK"></a><h2 class="nroffsh">NETWORK OPTIONS</h2>
 <p class="level0">
 <p class="level0"><a name="CURLOPTURL"></a><span class="nroffip">CURLOPT_URL</span> 
 <p class="level1">The actual URL to deal with. The parameter should be a char * to a zero terminated string. 
 <p class="level1">If the given URL lacks the protocol part ("http://" or "ftp://" etc), it will attempt to guess which protocol to use based on the given host name. If the given protocol of the set URL is not supported, libcurl will return on error (<span Class="emphasis">CURLE_UNSUPPORTED_PROTOCOL</span>) when you call <a class="emphasis" href="./curl_easy_perform.html">curl_easy_perform(3)</a> or <a class="emphasis" href="./curl_multi_perform.html">curl_multi_perform(3)</a>. Use <a class="emphasis" href="./curl_version_info.html">curl_version_info(3)</a> for detailed info on which protocols are supported. 
 <p class="level1">The string given to CURLOPT_URL must be url-encoded and follow RFC 2396 (<a href="http://curl.haxx.se/rfc/rfc2396.txt">http://curl.haxx.se/rfc/rfc2396.txt</a>). 
+<p class="level1">Starting with version 7.20.0, the fragment part of the URI will not be send as part of the path, which was the case previously. 
 <p class="level1"><a class="emphasis" href="#CURLOPTURL">CURLOPT_URL</a> is the only option that <span Class="bold">must</span> be set before <a class="emphasis" href="./curl_easy_perform.html">curl_easy_perform(3)</a> is called. 
 <p class="level1"><a class="emphasis" href="#CURLOPTPROTOCOLS">CURLOPT_PROTOCOLS</a> can be used to limit what protocols libcurl will use for this transfer, independent of what libcurl has been compiled to support. That may be useful if you accept the URL from an external source and want to limit the accessibility. 
 <p class="level0"><a name="CURLOPTPROTOCOLS"></a><span class="nroffip">CURLOPT_PROTOCOLS</span> 
 <p class="level1">Pass a long that holds a bitmask of CURLPROTO_* defines. If used, this bitmask limits what protocols libcurl may use in the transfer. This allows you to have a libcurl built to support a wide range of protocols but still limit specific transfers to only be allowed to use a subset of them. By default libcurl will accept all protocols it supports. See also <a class="emphasis" href="#CURLOPTREDIRPROTOCOLS">CURLOPT_REDIR_PROTOCOLS</a>. (Added in 7.19.4) 
 <p class="level0"><a name="CURLOPTREDIRPROTOCOLS"></a><span class="nroffip">CURLOPT_REDIR_PROTOCOLS</span> 
 <p class="level1">Pass a long that holds a bitmask of CURLPROTO_* defines. If used, this bitmask limits what protocols libcurl may use in a transfer that it follows to in a redirect when <a class="emphasis" href="#CURLOPTFOLLOWLOCATION">CURLOPT_FOLLOWLOCATION</a> is enabled. This allows you to limit specific transfers to only be allowed to use a subset of protocols in redirections. By default libcurl will allow all protocols except for FILE and SCP. This is a difference compared to pre-7.19.4 versions which unconditionally would follow to all protocols supported. (Added in 7.19.4) 
@@ -205,18 +211,18 @@
 <p class="level1">Pass a char * as parameter to a string holding the name of the service. The default service name for a SOCKS5 server is rcmd/server-fqdn. This option allows you to change it. (Added in 7.19.4) 
 <p class="level0"><a name="CURLOPTSOCKS5GSSAPINEC"></a><span class="nroffip">CURLOPT_SOCKS5_GSSAPI_NEC</span> 
 <p class="level1">Pass a long set to 1 to enable or 0 to disable. As part of the gssapi negotiation a protection mode is negotiated. The rfc1961 says in section 4.3/4.4 it should be protected, but the NEC reference implementation does not. If enabled, this option allows the unprotected exchange of the protection mode negotiation. (Added in 7.19.4). 
 <p class="level0"><a name="CURLOPTINTERFACE"></a><span class="nroffip">CURLOPT_INTERFACE</span> 
 <p class="level1">Pass a char * as parameter. This sets the interface name to use as outgoing network interface. The name can be an interface name, an IP address, or a host name. 
 <p class="level0"><a name="CURLOPTLOCALPORT"></a><span class="nroffip">CURLOPT_LOCALPORT</span> 
-<p class="level1">Pass a long. This sets the local port number of the socket used for connection. This can be used in combination with <a class="emphasis" href="#CURLOPTINTERFACE">CURLOPT_INTERFACE</a> and you are recommended to use <a class="emphasis" href="#CURLOPTLOCALPORTRANGE">CURLOPT_LOCALPORTRANGE</a> as well when this is set. Note that the only valid port numbers are 1 - 65535. (Added in 7.15.2) 
+<p class="level1">Pass a long. This sets the local port number of the socket used for connection. This can be used in combination with <a class="emphasis" href="#CURLOPTINTERFACE">CURLOPT_INTERFACE</a> and you are recommended to use <a class="emphasis" href="#CURLOPTLOCALPORTRANGE">CURLOPT_LOCALPORTRANGE</a> as well when this is set. Valid port numbers are 1 - 65535. (Added in 7.15.2) 
 <p class="level0"><a name="CURLOPTLOCALPORTRANGE"></a><span class="nroffip">CURLOPT_LOCALPORTRANGE</span> 
-<p class="level1">Pass a long. This is the number of attempts libcurl should make to find a working local port number. It starts with the given <a class="emphasis" href="#CURLOPTLOCALPORT">CURLOPT_LOCALPORT</a> and adds one to the number for each retry. Setting this to 1 or below will make libcurl do only one try for the exact port number. Note that port numbers by nature are scarce resources that will be busy at times so setting this value to something too low might cause unnecessary connection setup failures. (Added in 7.15.2) 
+<p class="level1">Pass a long. This is the number of attempts libcurl should make to find a working local port number. It starts with the given <a class="emphasis" href="#CURLOPTLOCALPORT">CURLOPT_LOCALPORT</a> and adds one to the number for each retry. Setting this to 1 or below will make libcurl do only one try for the exact port number. Port numbers by nature are scarce resources that will be busy at times so setting this value to something too low might cause unnecessary connection setup failures. (Added in 7.15.2) 
 <p class="level0"><a name="CURLOPTDNSCACHETIMEOUT"></a><span class="nroffip">CURLOPT_DNS_CACHE_TIMEOUT</span> 
 <p class="level1">Pass a long, this sets the timeout in seconds. Name resolves will be kept in memory for this number of seconds. Set to zero to completely disable caching, or set to -1 to make the cached entries remain forever. By default, libcurl caches this info for 60 seconds. 
-<p class="level1">NOTE: the name resolve functions of various libc implementations don't re-read name server information unless explicitly told so (for example, by calling <span Class="emphasis">res_init(3)</span>). This may cause libcurl to keep using the older server even if DHCP has updated the server info, and this may look like a DNS cache issue to the casual libcurl-app user. 
+<p class="level1">The name resolve functions of various libc implementations don't re-read name server information unless explicitly told so (for example, by calling <span Class="emphasis">res_init(3)</span>). This may cause libcurl to keep using the older server even if DHCP has updated the server info, and this may look like a DNS cache issue to the casual libcurl-app user. 
 <p class="level0"><a name="CURLOPTDNSUSEGLOBALCACHE"></a><span class="nroffip">CURLOPT_DNS_USE_GLOBAL_CACHE</span> 
 <p class="level1">Pass a long. If the value is 1, it tells curl to use a global DNS cache that will survive between easy handle creations and deletions. This is not thread-safe and this will use a global variable. 
 <p class="level1"><span Class="bold">WARNING:</span> this option is considered obsolete. Stop using it. Switch over to using the share interface instead! See <a class="emphasis" href="#CURLOPTSHARE">CURLOPT_SHARE</a> and <a class="emphasis" href="./curl_share_init.html">curl_share_init(3)</a>. 
 <p class="level0"><a name="CURLOPTBUFFERSIZE"></a><span class="nroffip">CURLOPT_BUFFERSIZE</span> 
 <p class="level1">Pass a long specifying your preferred size (in bytes) for the receive buffer in libcurl.  The main point of this would be that the write callback gets called more often and with smaller chunks. This is just treated as a request, not an order. You cannot be guaranteed to actually get the given size. (Added in 7.10) 
 <p class="level1">This size is by default set as big as possible (CURL_MAX_WRITE_SIZE), so it only makes sense to use this option if you want it smaller. 
@@ -258,13 +264,13 @@
 <p class="level1">In order to specify the password to be used in conjunction with the user name use the <a class="emphasis" href="#CURLOPTPASSWORD">CURLOPT_PASSWORD</a> option.  (Added in 7.19.1) 
 <p class="level0"><a name="CURLOPTPASSWORD"></a><span class="nroffip">CURLOPT_PASSWORD</span> 
 <p class="level1">Pass a char * as parameter, which should be pointing to the zero terminated password to use for the transfer. 
 <p class="level1">The CURLOPT_PASSWORD option should be used in conjunction with the <a class="emphasis" href="#CURLOPTUSERNAME">CURLOPT_USERNAME</a> option. (Added in 7.19.1) 
 <p class="level0"><a name="CURLOPTPROXYUSERNAME"></a><span class="nroffip">CURLOPT_PROXYUSERNAME</span> 
 <p class="level1">Pass a char * as parameter, which should be pointing to the zero terminated user name to use for the transfer while connecting to Proxy. 
-<p class="level1">The CURLOPT_PROXYUSERNAME option should be used in same way as the <a class="emphasis" href="#CURLOPTPROXYUSERPWD">CURLOPT_PROXYUSERPWD</a> is used.  In comparison to <a class="emphasis" href="#CURLOPTPROXYUSERPWD">CURLOPT_PROXYUSERPWD</a> the CURLOPT_PROXYUSERNAME allows the username to contain a colon, like in the following example: "sip:user@example.com". Note the CURLOPT_PROXYUSERNAME option is an alternative way to set the user name while connecting to Proxy.  There is no meaning to use it together with the <a class="emphasis" href="#CURLOPTPROXYUSERPWD">CURLOPT_PROXYUSERPWD</a> option. 
+<p class="level1">The CURLOPT_PROXYUSERNAME option should be used in same way as the <a class="emphasis" href="#CURLOPTPROXYUSERPWD">CURLOPT_PROXYUSERPWD</a> is used.  In comparison to <a class="emphasis" href="#CURLOPTPROXYUSERPWD">CURLOPT_PROXYUSERPWD</a> the CURLOPT_PROXYUSERNAME allows the username to contain a colon, like in the following example: "sip:user@example.com". The CURLOPT_PROXYUSERNAME option is an alternative way to set the user name while connecting to Proxy.  There is no meaning to use it together with the <a class="emphasis" href="#CURLOPTPROXYUSERPWD">CURLOPT_PROXYUSERPWD</a> option. 
 <p class="level1">In order to specify the password to be used in conjunction with the user name use the <a class="emphasis" href="#CURLOPTPROXYPASSWORD">CURLOPT_PROXYPASSWORD</a> option.  (Added in 7.19.1) 
 <p class="level0"><a name="CURLOPTPROXYPASSWORD"></a><span class="nroffip">CURLOPT_PROXYPASSWORD</span> 
 <p class="level1">Pass a char * as parameter, which should be pointing to the zero terminated password to use for the transfer while connecting to Proxy. 
 <p class="level1">The CURLOPT_PROXYPASSWORD option should be used in conjunction with the <a class="emphasis" href="#CURLOPTPROXYUSERNAME">CURLOPT_PROXYUSERNAME</a> option. (Added in 7.19.1) 
 <p class="level0"><a name="CURLOPTHTTPAUTH"></a><span class="nroffip">CURLOPT_HTTPAUTH</span> 
 <p class="level1">Pass a long as parameter, which is set to a bitmask, to tell libcurl which authentication method(s) you want it to use. The available bits are listed below. If more than one bit is set, libcurl will first query the site to see which authentication methods it supports and then pick the best one you allow it to use. For some methods, this will induce an extra network round-trip. Set the actual name and password with the <a class="emphasis" href="#CURLOPTUSERPWD">CURLOPT_USERPWD</a> option or with the <a class="emphasis" href="#CURLOPTUSERNAME">CURLOPT_USERNAME</a> and the <span Class="emphasis">CURLOPT_USERPASSWORD</span> options. (Added in 7.10.6) 
@@ -294,13 +300,13 @@
 <p class="level0"><a name="CURLOPTENCODING"></a><span class="nroffip">CURLOPT_ENCODING</span> 
 <p class="level1">Sets the contents of the Accept-Encoding: header sent in an HTTP request, and enables decoding of a response when a Content-Encoding: header is received. Three encodings are supported: <span Class="emphasis">identity</span>, which does nothing, <span Class="emphasis">deflate</span> which requests the server to compress its response using the zlib algorithm, and <span Class="emphasis">gzip</span> which requests the gzip algorithm.  If a zero-length string is set, then an Accept-Encoding: header containing all supported encodings is sent. 
 <p class="level1">This is a request, not an order; the server may or may not do it.  This option must be set (to any non-NULL value) or else any unsolicited encoding done by the server is ignored. See the special file lib/README.encoding for details. 
 <p class="level0"><a name="CURLOPTFOLLOWLOCATION"></a><span class="nroffip">CURLOPT_FOLLOWLOCATION</span> 
 <p class="level1">A parameter set to 1 tells the library to follow any Location: header that the server sends as part of an HTTP header. 
 <p class="level1">This means that the library will re-send the same request on the new location and follow new Location: headers all the way until no more such headers are returned. <a class="emphasis" href="#CURLOPTMAXREDIRS">CURLOPT_MAXREDIRS</a> can be used to limit the number of redirects libcurl will follow. 
-<p class="level1">NOTE: since 7.19.4, libcurl can limit to what protocols it will automatically follow. The accepted protocols are set with <a class="emphasis" href="#CURLOPTREDIRPROTOCOLS">CURLOPT_REDIR_PROTOCOLS</a> and it excludes the FILE protocol by default. 
+<p class="level1">Since 7.19.4, libcurl can limit what protocols it will automatically follow. The accepted protocols are set with <a class="emphasis" href="#CURLOPTREDIRPROTOCOLS">CURLOPT_REDIR_PROTOCOLS</a> and it excludes the FILE protocol by default. 
 <p class="level0"><a name="CURLOPTUNRESTRICTEDAUTH"></a><span class="nroffip">CURLOPT_UNRESTRICTED_AUTH</span> 
 <p class="level1">A parameter set to 1 tells the library it can continue to send authentication (user+password) when following locations, even when hostname changed. This option is meaningful only when setting <a class="emphasis" href="#CURLOPTFOLLOWLOCATION">CURLOPT_FOLLOWLOCATION</a>. 
 <p class="level0"><a name="CURLOPTMAXREDIRS"></a><span class="nroffip">CURLOPT_MAXREDIRS</span> 
 <p class="level1">Pass a long. The set number will be the redirection limit. If that many redirections have been followed, the next redirect will cause an error (<span Class="emphasis">CURLE_TOO_MANY_REDIRECTS</span>). This option only makes sense if the <a class="emphasis" href="#CURLOPTFOLLOWLOCATION">CURLOPT_FOLLOWLOCATION</a> is used at the same time. Added in 7.15.1: Setting the limit to 0 will make libcurl refuse any redirect. Set it to -1 for an infinite number of redirects (which is the default) 
 <p class="level0"><a name="CURLOPTPOSTREDIR"></a><span class="nroffip">CURLOPT_POSTREDIR</span> 
 <p class="level1">Pass a bitmask to control how libcurl acts on redirects after POSTs that get a 301 or 302 response back.  A parameter with bit 0 set (value <span Class="bold">CURL_REDIR_POST_301</span>) tells the library to respect RFC 2616/10.3.2 and not convert POST requests into GET requests when following a 301 redirection. Setting bit 1 (value CURL_REDIR_POST_302) makes libcurl maintain the request method after a 302 redirect. CURL_REDIR_POST_ALL is a convenience define that sets both bits. 
@@ -315,13 +321,13 @@
 <p class="level1">You can override the default POST Content-Type: header by setting your own with <a class="emphasis" href="#CURLOPTHTTPHEADER">CURLOPT_HTTPHEADER</a>. 
 <p class="level1">Using POST with HTTP 1.1 implies the use of a "Expect: 100-continue" header. You can disable this header with <a class="emphasis" href="#CURLOPTHTTPHEADER">CURLOPT_HTTPHEADER</a> as usual. 
 <p class="level1">If you use POST to a HTTP 1.1 server, you can send data without knowing the size before starting the POST if you use chunked encoding. You enable this by adding a header like "Transfer-Encoding: chunked" with <a class="emphasis" href="#CURLOPTHTTPHEADER">CURLOPT_HTTPHEADER</a>. With HTTP 1.0 or without chunked transfer, you must specify the size in the request. 
 <p class="level1">When setting <a class="emphasis" href="#CURLOPTPOST">CURLOPT_POST</a> to 1, it will automatically set <a class="emphasis" href="#CURLOPTNOBODY">CURLOPT_NOBODY</a> to 0 (since 7.14.1). 
 <p class="level1">If you issue a POST request and then want to make a HEAD or GET using the same re-used handle, you must explicitly set the new request type using <a class="emphasis" href="#CURLOPTNOBODY">CURLOPT_NOBODY</a> or <a class="emphasis" href="#CURLOPTHTTPGET">CURLOPT_HTTPGET</a> or similar. 
 <p class="level0"><a name="CURLOPTPOSTFIELDS"></a><span class="nroffip">CURLOPT_POSTFIELDS</span> 
-<p class="level1">Pass a void * as parameter, which should be the full data to post in an HTTP POST operation. You must make sure that the data is formatted the way you want the server to receive it. libcurl will not convert or encode it for you. Most web servers will assume this data to be url-encoded. Take note. 
+<p class="level1">Pass a void * as parameter, which should be the full data to post in an HTTP POST operation. You must make sure that the data is formatted the way you want the server to receive it. libcurl will not convert or encode it for you. Most web servers will assume this data to be url-encoded. 
 <p class="level1">The pointed data are NOT copied by the library: as a consequence, they must be preserved by the calling application until the transfer finishes. 
 <p class="level1">This POST is a normal application/x-www-form-urlencoded kind (and libcurl will set that Content-Type by default when this option is used), which is the most commonly used one by HTML forms. See also the <a class="emphasis" href="#CURLOPTPOST">CURLOPT_POST</a>. Using <a class="emphasis" href="#CURLOPTPOSTFIELDS">CURLOPT_POSTFIELDS</a> implies <a class="emphasis" href="#CURLOPTPOST">CURLOPT_POST</a>. 
 <p class="level1">If you want to do a zero-byte POST, you need to set <a class="emphasis" href="#CURLOPTPOSTFIELDSIZE">CURLOPT_POSTFIELDSIZE</a> explicitly to zero, as simply setting <a class="emphasis" href="#CURLOPTPOSTFIELDS">CURLOPT_POSTFIELDS</a> to NULL or "" just effectively disables the sending of the specified string. libcurl will instead assume that you'll send the POST data using the read callback! 
 <p class="level1">Using POST with HTTP 1.1 implies the use of a "Expect: 100-continue" header. You can disable this header with <a class="emphasis" href="#CURLOPTHTTPHEADER">CURLOPT_HTTPHEADER</a> as usual. 
 <p class="level1">To make multipart/formdata posts (aka RFC2388-posts), check out the <a class="emphasis" href="#CURLOPTHTTPPOST">CURLOPT_HTTPPOST</a> option. 
 <p class="level0"><a name="CURLOPTPOSTFIELDSIZE"></a><span class="nroffip">CURLOPT_POSTFIELDSIZE</span> 
@@ -348,13 +354,13 @@
 <p class="level1">Pass a pointer to a linked list of aliases to be treated as valid HTTP 200 responses.  Some servers respond with a custom header response line.  For example, IceCast servers respond with "ICY 200 OK".  By including this string in your list of aliases, the response will be treated as a valid HTTP header line such as "HTTP/1.0 200 OK". (Added in 7.10.3) 
 <p class="level1">The linked list should be a fully valid list of struct curl_slist structs, and be properly filled in.  Use <a class="emphasis" href="./curl_slist_append.html">curl_slist_append(3)</a> to create the list and <a class="emphasis" href="./curl_slist_free_all.html">curl_slist_free_all(3)</a> to clean up an entire list. 
 <p class="level1">The alias itself is not parsed for any version strings. Before libcurl 7.16.3, Libcurl used the value set by option <a class="emphasis" href="#CURLOPTHTTPVERSION">CURLOPT_HTTP_VERSION</a>, but starting with 7.16.3 the protocol is assumed to match HTTP 1.0 when an alias matched. 
 <p class="level0"><a name="CURLOPTCOOKIE"></a><span class="nroffip">CURLOPT_COOKIE</span> 
 <p class="level1">Pass a pointer to a zero terminated string as parameter. It will be used to set a cookie in the http request. The format of the string should be NAME=CONTENTS, where NAME is the cookie name and CONTENTS is what the cookie should contain. 
 <p class="level1">If you need to set multiple cookies, you need to set them all using a single option and thus you need to concatenate them all in one single string. Set multiple cookies in one string like this: "name1=content1; name2=content2;" etc. 
-<p class="level1">Note that this option sets the cookie header explictly in the outgoing request(s). If multiple requests are done due to authentication, followed redirections or similar, they will all get this cookie passed on. 
+<p class="level1">This option sets the cookie header explictly in the outgoing request(s). If multiple requests are done due to authentication, followed redirections or similar, they will all get this cookie passed on. 
 <p class="level1">Using this option multiple times will only make the latest string override the previous ones. 
 <p class="level0"><a name="CURLOPTCOOKIEFILE"></a><span class="nroffip">CURLOPT_COOKIEFILE</span> 
 <p class="level1">Pass a pointer to a zero terminated string as parameter. It should contain the name of your file holding cookie data to read. The cookie data may be in Netscape / Mozilla cookie data format or just regular HTTP-style headers dumped to a file. 
 <p class="level1">Given an empty or non-existing file or by passing the empty string (""), this option will enable cookies for this curl handle, making it understand and parse received cookies and then use matching cookies in future requests. 
 <p class="level1">If you use this option multiple times, you just add more files to read. Subsequent files will add more cookies. 
 <p class="level0"><a name="CURLOPTCOOKIEJAR"></a><span class="nroffip">CURLOPT_COOKIEJAR</span> 
@@ -377,17 +383,24 @@
 <p class="level1"><a name="CURLHTTPVERSION11"></a><span class="nroffip">CURL_HTTP_VERSION_1_1</span> 
 <p class="level2">Enforce HTTP 1.1 requests. 
 <p class="level1">
 <p class="level0"><a name="CURLOPTIGNORECONTENTLENGTH"></a><span class="nroffip">CURLOPT_IGNORE_CONTENT_LENGTH</span> 
 <p class="level1">Ignore the Content-Length header. This is useful for Apache 1.x (and similar servers) which will report incorrect content length for files over 2 gigabytes. If this option is used, curl will not be able to accurately report progress, and will simply stop the download when the server ends the connection. (added in 7.14.1) 
 <p class="level0"><a name="CURLOPTHTTPCONTENTDECODING"></a><span class="nroffip">CURLOPT_HTTP_CONTENT_DECODING</span> 
-<p class="level1">Pass a long to tell libcurl how to act on content decoding. If set to zero, content decoding will be disabled. If set to 1 it is enabled. Note however that libcurl has no default content decoding but requires you to use <a class="emphasis" href="#CURLOPTENCODING">CURLOPT_ENCODING</a> for that. (added in 7.16.2) 
+<p class="level1">Pass a long to tell libcurl how to act on content decoding. If set to zero, content decoding will be disabled. If set to 1 it is enabled. Libcurl has no default content decoding but requires you to use <a class="emphasis" href="#CURLOPTENCODING">CURLOPT_ENCODING</a> for that. (added in 7.16.2) 
 <p class="level0"><a name="CURLOPTHTTPTRANSFERDECODING"></a><span class="nroffip">CURLOPT_HTTP_TRANSFER_DECODING</span> 
-<p class="level1">Pass a long to tell libcurl how to act on transfer decoding. If set to zero, transfer decoding will be disabled, if set to 1 it is enabled (default). libcurl does chunked transfer decoding by default unless this option is set to zero. (added in 7.16.2) <a name="TFTP"></a><h2 class="nroffsh">TFTP OPTIONS</h2>
+<p class="level1">Pass a long to tell libcurl how to act on transfer decoding. If set to zero, transfer decoding will be disabled, if set to 1 it is enabled (default). libcurl does chunked transfer decoding by default unless this option is set to zero. (added in 7.16.2) <a name="SMTP"></a><h2 class="nroffsh">SMTP OPTIONS</h2>
 <p class="level0">
-<p class="level0"><a name="CURLOPTTFTPBLKSIZE"></a><span class="nroffip">CURLOPT_TFTPBLKSIZE</span> 
+<p class="level0"><a name="CURLOPTMAILFROM"></a><span class="nroffip">CURLOPT_MAIL_FROM</span> 
+<p class="level1">Pass a pointer to a zero terminated string as parameter. It will be used to specify the sender address in a mail when sending an SMTP mail with libcurl. 
+<p class="level1">(Added in 7.20.0) 
+<p class="level0"><a name="CURLOPTMAILRCPT"></a><span class="nroffip">CURLOPT_MAIL_RCPT</span> 
+<p class="level1">Pass a pointer to a linked list of recipients to pass to the server in your SMTP mail request.  The linked list should be a fully valid list of <span class="bold">struct curl_slist</span> structs properly filled in. Use <a class="emphasis" href="./curl_slist_append.html">curl_slist_append(3)</a> to create the list and <a class="emphasis" href="./curl_slist_free_all.html">curl_slist_free_all(3)</a> to clean up an entire list. 
+<p class="level1">(Added in 7.20.0) <a name="TFTP"></a><h2 class="nroffsh">TFTP OPTIONS</h2>
+<p class="level0">
+<p class="level0"><a name="CURLOPTTFTPBLKSIZE"></a><span class="nroffip">CURLOPT_TFTP_BLKSIZE</span> 
 <p class="level1">Specify block size to use for TFTP data transmission. Valid range as per RFC 2348 is 8-65464 bytes. The default of 512 bytes will be used if this option is not specified. The specified block size will only be used pending support by the remote server. If the server does not return an option acknowledgement or returns an option acknowledgement with no blksize, the default of 512 bytes will be used. (added in 7.19.4) <a name="FTP"></a><h2 class="nroffsh">FTP OPTIONS</h2>
 <p class="level0">
 <p class="level0"><a name="CURLOPTFTPPORT"></a><span class="nroffip">CURLOPT_FTPPORT</span> 
 <p class="level1">Pass a pointer to a zero terminated string as parameter. It will be used to get the IP address to use for the FTP PORT instruction. The PORT instruction tells the remote server to connect to our specified IP address. The string may be a plain IP address, a host name, a network interface name (under Unix) or just a '-' symbol to let the library use your system's default IP address. Default FTP operations are passive, and thus won't use PORT. 
 <p class="level1">The address can be followed by a ':' to specify a port, optionally followed by a '-' to specify a port range.  If the port specified is 0, the operating system will pick a free port.  If a range is provided and all ports in the range are not available, libcurl will report CURLE_FTP_PORT_FAILED for the handle.  Invalid port/range settings are ignored.  IPv6 addresses followed by a port or portrange have to be in brackets.  IPv6 addresses without port/range specifier can be in brackets.  (added in 7.19.5) 
 <p class="level1">Examples with specified ports: 
@@ -416,12 +429,14 @@
 <p class="level0"><a name="CURLOPTFTPUSEEPRT"></a><span class="nroffip">CURLOPT_FTP_USE_EPRT</span> 
 <p class="level1">Pass a long. If the value is 1, it tells curl to use the EPRT (and LPRT) command when doing active FTP downloads (which is enabled by <a class="emphasis" href="#CURLOPTFTPPORT">CURLOPT_FTPPORT</a>). Using EPRT means that it will first attempt to use EPRT and then LPRT before using PORT, but if you pass zero to this option, it will not try using EPRT or LPRT, only plain PORT. (Added in 7.10.5) 
 <p class="level1">If the server is an IPv6 host, this option will have no effect as of 7.12.3. 
 <p class="level0"><a name="CURLOPTFTPUSEEPSV"></a><span class="nroffip">CURLOPT_FTP_USE_EPSV</span> 
 <p class="level1">Pass a long. If the value is 1, it tells curl to use the EPSV command when doing passive FTP downloads (which it always does by default). Using EPSV means that it will first attempt to use EPSV before using PASV, but if you pass zero to this option, it will not try using EPSV, only plain PASV. 
 <p class="level1">If the server is an IPv6 host, this option will have no effect as of 7.12.3. 
+<p class="level0"><a name="CURLOPTFTPUSEPRET"></a><span class="nroffip">CURLOPT_FTP_USE_PRET</span> 
+<p class="level1">Pass a long. If the value is 1, it tells curl to send a PRET command before PASV (and EPSV). Certain FTP servers, mainly drftpd, require this non-standard command for directory listings as well as up and downloads in PASV mode. Has no effect when using the active FTP transfers mode.  (Added in 7.20.0) 
 <p class="level0"><a name="CURLOPTFTPCREATEMISSINGDIRS"></a><span class="nroffip">CURLOPT_FTP_CREATE_MISSING_DIRS</span> 
 <p class="level1">Pass a long. If the value is 1, curl will attempt to create any remote directory that it fails to CWD into. CWD is the command that changes working directory. (Added in 7.10.7) 
 <p class="level1">This setting also applies to SFTP-connections. curl will attempt to create the remote directory if it can't obtain a handle to the target-location. The creation will fail if a file of the same name as the directory to create already exists or lack of permissions prevents creation. (Added in 7.16.3) 
 <p class="level1">Starting with 7.19.4, you can also set this value to 2, which will make libcurl retry the CWD command again if the subsequent MKD command fails. This is especially useful if you're doing many simultanoes connections against the same server and they all have this option enabled, as then CWD may first fail but then another connection does MKD before this connection and thus MKD fails but trying CWD works! 7.19.4 also introduced the <span Class="emphasis">CURLFTP_CREATE_DIR</span> and <span Class="emphasis">CURLFTP_CREATE_DIR_RETRY</span> enum names for these arguments. 
 <p class="level1">Before version 7.19.4, libcurl will simply ignore arguments set to 2 and act as if 1 was selected. 
 <p class="level0"><a name="CURLOPTFTPRESPONSETIMEOUT"></a><span class="nroffip">CURLOPT_FTP_RESPONSE_TIMEOUT</span> 
@@ -472,24 +487,64 @@
 <p class="level1"><a name="CURLFTPMETHODMULTICWD"></a><span class="nroffip">CURLFTPMETHOD_MULTICWD</span> 
 <p class="level2">libcurl does a single CWD operation for each path part in the given URL. For deep hierarchies this means many commands. This is how RFC1738 says it should be done. This is the default but the slowest behavior. 
 <p class="level1"><a name="CURLFTPMETHODNOCWD"></a><span class="nroffip">CURLFTPMETHOD_NOCWD</span> 
 <p class="level2">libcurl does no CWD at all. libcurl will do SIZE, RETR, STOR etc and give a full path to the server for all these commands. This is the fastest behavior. 
 <p class="level1"><a name="CURLFTPMETHODSINGLECWD"></a><span class="nroffip">CURLFTPMETHOD_SINGLECWD</span> 
 <p class="level2">libcurl does one CWD with the full target directory and then operates on the file "normally" (like in the multicwd case). This is somewhat more standards compliant than 'nocwd' but without the full penalty of 'multicwd'. 
-<p class="level1">(Added in 7.15.1) <a name="PROTOCOL"></a><h2 class="nroffsh">PROTOCOL OPTIONS</h2>
+<p class="level1">(Added in 7.15.1) <a name="RTSP"></a><h2 class="nroffsh">RTSP OPTIONS</h2>
+<p class="level0">
+<p class="level0"><a name="CURLOPTRTSPREQUEST"></a><span class="nroffip">CURLOPT_RTSP_REQUEST</span> 
+<p class="level1">Tell libcurl what kind of RTSP request to make. Pass one of the following RTSP enum values. Unless noted otherwise, commands require the Session ID to be initialized. (Added in 7.20.0) 
+<p class="level2">
+<p class="level1"><a name="CURLRTSPREQOPTIONS"></a><span class="nroffip">CURL_RTSPREQ_OPTIONS</span> 
+<p class="level2">Used to retrieve the available methods of the server. The application is responsbile for parsing and obeying the response. <span class="bold">(The session ID is not needed for this method.)</span>  (Added in 7.20.0) 
+<p class="level1"><a name="CURLRTSPREQDESCRIBE"></a><span class="nroffip">CURL_RTSPREQ_DESCRIBE</span> 
+<p class="level2">Used to get the low level description of a stream. The application should note what formats it understands in the <span Class="emphasis">'Accept:'</span> header. Unless set manually, libcurl will automatically fill in <span class="emphasis">'Accept: application/sdp'</span>. Time-condition headers will be added to Describe requests if the <a class="emphasis" href="#CURLOPTTIMECONDITION">CURLOPT_TIMECONDITION</a> option is active. <span class="bold">(The session ID is not needed for this method)</span>  (Added in 7.20.0) 
+<p class="level1"><a name="CURLRTSPREQANNOUNCE"></a><span class="nroffip">CURL_RTSPREQ_ANNOUNCE</span> 
+<p class="level2">When sent by a client, this method changes the description of the session. For example, if a client is using the server to record a meeting, the client can use Announce to inform the server of all the meta-information about the session.  ANNOUNCE acts like an HTTP PUT or POST just like <a class="emphasis" href="#CURLRTSPREQSETPARAMETER">CURL_RTSPREQ_SET_PARAMETER</a> (Added in 7.20.0) 
+<p class="level1"><a name="CURLRTSPREQSETUP"></a><span class="nroffip">CURL_RTSPREQ_SETUP</span> 
+<p class="level2">Setup is used to initialize the transport layer for the session. The application must set the desired Transport options for a session by using the <a class="emphasis" href="#CURLOPTRTSPTRANSPORT">CURLOPT_RTSP_TRANSPORT</a> option prior to calling setup. If no session ID is currently set with <a class="emphasis" href="#CURLOPTRTSPSESSIONID">CURLOPT_RTSP_SESSION_ID</a>, libcurl will extract and use the session ID in the response to this request. <span class="bold">(The session ID is not needed for this method).</span>  (Added in 7.20.0) 
+<p class="level1"><a name="CURLRTSPREQPLAY"></a><span class="nroffip">CURL_RTSPREQ_PLAY</span> 
+<p class="level2">Send a Play command to the server. Use the <a class="emphasis" href="#CURLOPTRANGE">CURLOPT_RANGE</a> option to modify the playback time (e.g. 'npt=10-15').  (Added in 7.20.0) 
+<p class="level1"><a name="CURLRTSPREQPAUSE"></a><span class="nroffip">CURL_RTSPREQ_PAUSE</span> 
+<p class="level2">Send a Pause command to the server. Use the <a class="emphasis" href="#CURLOPTRANGE">CURLOPT_RANGE</a> option with a single value to indicate when the stream should be halted. (e.g. npt='25') (Added in 7.20.0) 
+<p class="level1"><a name="CURLRTSPREQTEARDOWN"></a><span class="nroffip">CURL_RTSPREQ_TEARDOWN</span> 
+<p class="level2">This command terminates an RTSP session. Simply closing a connection does not terminate the RTSP session since it is valid to control an RTSP session over different connections.  (Added in 7.20.0) 
+<p class="level1"><a name="CURLRTSPREQGETPARAMETER"></a><span class="nroffip">CURL_RTSPREQ_GET_PARAMETER</span> 
+<p class="level2">Retrieve a parameter from the server. By default, libcurl will automatically include an <span Class="emphasis">Accept: text/parameters</span> header unless a custom one is set. Applications wishing to send a heartbeat message (e.g. in the presence of a server-specified timeout) should send use an empty GET_PARAMETER request. (Added in 7.20.0) 
+<p class="level1"><a name="CURLRTSPREQSETPARAMETER"></a><span class="nroffip">CURL_RTSPREQ_SET_PARAMETER</span> 
+<p class="level2">Set a parameter on the server. By default, libcurl will automatically include a <span Class="emphasis">Content-Type: text/parameters</span> header unless a custom one is set. The interaction with SET_PARAMTER is much like an HTTP PUT or POST. An application may either use <a class="emphasis" href="#CURLOPTUPLOAD">CURLOPT_UPLOAD</a> with <a class="emphasis" href="#CURLOPTREADDATA">CURLOPT_READDATA</a> like an HTTP PUT, or it may use <a class="emphasis" href="#CURLOPTPOSTFIELDS">CURLOPT_POSTFIELDS</a> like an HTTP POST. No chunked transfers are allowed, so the application must set the <a class="emphasis" href="#CURLOPTINFILESIZE">CURLOPT_INFILESIZE</a> in the former and <a class="emphasis" href="#CURLOPTPOSTFIELDSIZE">CURLOPT_POSTFIELDSIZE</a> in the latter. Also, there is no use of multi-part POSTs within RTSP. (Added in 7.20.0) 
+<p class="level1"><a name="CURLRTSPREQRECORD"></a><span class="nroffip">CURL_RTSPREQ_RECORD</span> 
+<p class="level2">Used to tell the server to record a session. Use the <a class="emphasis" href="#CURLOPTRANGE">CURLOPT_RANGE</a> option to modify the record time. (Added in 7.20.0) 
+<p class="level1"><a name="CURLRTSPREQRECEIVE"></a><span class="nroffip">CURL_RTSPREQ_RECEIVE</span> 
+<p class="level2">This is a special request because it does not send any data to the server. The application may call this function in order to receive interleaved RTP data. It will return after processing one read buffer of data in order to give the application a chance to run. (Added in 7.20.0) 
+<p class="level1">
+<p class="level0"><a name="CURLOPTRTSPSESSIONID"></a><span class="nroffip">CURLOPT_RTSP_SESSION_ID</span> 
+<p class="level1">Pass a char * as a parameter to set the value of the current RTSP Session ID for the handle. Useful for resuming an in-progress session. Once this value is set to any non-NULL value, libcurl will return <span Class="emphasis">CURLE_RTSP_SESSION_ERROR</span> if ID received from the server does not match. If unset (or set to NULL), libcurl will automatically set the ID the first time the server sets it in a response. (Added in 7.20.0) 
+<p class="level0"><a name="CURLOPTRTSPSTREAMURI"></a><span class="nroffip">CURLOPT_RTSP_STREAM_URI</span> 
+<p class="level1">Set the stream URI to operate on by passing a char * . For example, a single session may be controlling <span Class="emphasis">rtsp://foo/twister/audio</span> and <span Class="emphasis">rtsp://foo/twister/video</span> and the application can switch to the appropriate stream using this option. If unset, libcurl will default to operating on generic server options by passing '*' in the place of the RTSP Stream URI. This option is distinct from <a class="emphasis" href="#CURLOPTURL">CURLOPT_URL</a>. When working with RTSP, the <span Class="emphasis">CURLOPT_STREAM_URI</span> indicates what URL to send to the server in the request header while the <a class="emphasis" href="#CURLOPTURL">CURLOPT_URL</a> indicates where to make the connection to.  (e.g. the <a class="emphasis" href="#CURLOPTURL">CURLOPT_URL</a> for the above examples might be set to <span Class="emphasis">rtsp://foo/twister</span> (Added in 7.20.0) 
+<p class="level0"><a name="CURLOPTRTSPTRANSPORT"></a><span class="nroffip">CURLOPT_RTSP_TRANSPORT</span> 
+<p class="level1">Pass a char * to tell libcurl what to pass for the Transport: header for this RTSP session. This is mainly a convenience method to avoid needing to set a custom Transport: header for every SETUP request. The application must set a Transport: header before issuing a SETUP request. (Added in 7.20.0) 
+<p class="level0"><a name="CURLOPTRTSPHEADER"></a><span class="nroffip">CURLOPT_RTSP_HEADER</span> 
+<p class="level1">This option is simply an alias for <a class="emphasis" href="#CURLOPTHTTPHEADER">CURLOPT_HTTP_HEADER</a>. Use this to replace the standard headers that RTSP and HTTP share. It is also valid to use the shortcuts such as <a class="emphasis" href="#CURLOPTUSERAGENT">CURLOPT_USERAGENT</a>. (Added in 7.20.0) 
+<p class="level0"><a name="CURLOPTRTSPCLIENTCSEQ"></a><span class="nroffip">CURLOPT_RTSP_CLIENT_CSEQ</span> 
+<p class="level1">Manually set the the CSEQ number to issue for the next RTSP request. Useful if the application is resuming a previously broken connection. The CSEQ will increment from this new number henceforth. (Added in 7.20.0) 
+<p class="level0"><a name="CURLOPTRTSPSERVERCSEQ"></a><span class="nroffip">CURLOPT_RTSP_SERVER_CSEQ</span> 
+<p class="level1">Manually set the CSEQ number to expect for the next RTSP Server-&gt;Client request.  At the moment, this feature (listening for Server requests) is unimplemented. (Added in 7.20.0) <a name="PROTOCOL"></a><h2 class="nroffsh">PROTOCOL OPTIONS</h2>
 <p class="level0">
 <p class="level0"><a name="CURLOPTTRANSFERTEXT"></a><span class="nroffip">CURLOPT_TRANSFERTEXT</span> 
 <p class="level1">A parameter set to 1 tells the library to use ASCII mode for FTP transfers, instead of the default binary transfer. For win32 systems it does not set the stdout to binary mode. This option can be usable when transferring text data between systems with different views on certain characters, such as newlines or similar. 
 <p class="level1">libcurl does not do a complete ASCII conversion when doing ASCII transfers over FTP. This is a known limitation/flaw that nobody has rectified. libcurl simply sets the mode to ASCII and performs a standard transfer. 
 <p class="level0"><a name="CURLOPTPROXYTRANSFERMODE"></a><span class="nroffip">CURLOPT_PROXY_TRANSFER_MODE</span> 
 <p class="level1">Pass a long. If the value is set to 1 (one), it tells libcurl to set the transfer mode (binary or ASCII) for FTP transfers done via an HTTP proxy, by appending ;type=a or ;type=i to the URL. Without this setting, or it being set to 0 (zero, the default), <a class="emphasis" href="#CURLOPTTRANSFERTEXT">CURLOPT_TRANSFERTEXT</a> has no effect when doing FTP via a proxy. Beware that not all proxies support this feature.  (Added in 7.18.0) 
 <p class="level0"><a name="CURLOPTCRLF"></a><span class="nroffip">CURLOPT_CRLF</span> 
 <p class="level1">Convert Unix newlines to CRLF newlines on transfers. 
 <p class="level0"><a name="CURLOPTRANGE"></a><span class="nroffip">CURLOPT_RANGE</span> 
-<p class="level1">Pass a char * as parameter, which should contain the specified range you want. It should be in the format "X-Y", where X or Y may be left out. HTTP transfers also support several intervals, separated with commas as in <span Class="emphasis">"X-Y,N-M"</span>. Using this kind of multiple intervals will cause the HTTP server to send the response document in pieces (using standard MIME separation techniques). Pass a NULL to this option to disable the use of ranges. 
-<p class="level1">Ranges work on HTTP, FTP and FILE (since 7.18.0) transfers only. 
+<p class="level1">Pass a char * as parameter, which should contain the specified range you want. It should be in the format "X-Y", where X or Y may be left out. HTTP transfers also support several intervals, separated with commas as in <span Class="emphasis">"X-Y,N-M"</span>. Using this kind of multiple intervals will cause the HTTP server to send the response document in pieces (using standard MIME separation techniques). For RTSP, the formatting of a range should follow RFC 2326 Section 12.29. For RTSP, byte ranges are <span Class="bold">not</span> permitted. Instead, ranges should be given in npt, utc, or smpte formats. 
+<p class="level1">Pass a NULL to this option to disable the use of ranges. 
+<p class="level1">Ranges work on HTTP, FTP, FILE (since 7.18.0), and RTSP (since 7.20.0) transfers only. 
 <p class="level0"><a name="CURLOPTRESUMEFROM"></a><span class="nroffip">CURLOPT_RESUME_FROM</span> 
 <p class="level1">Pass a long as parameter. It contains the offset in number of bytes that you want the transfer to start from. Set this option to 0 to make the transfer start from the beginning (effectively disabling resume). For FTP, set this option to -1 to make the transfer start from the end of the target file (useful to continue an interrupted upload). 
 <p class="level0"><a name="CURLOPTRESUMEFROMLARGE"></a><span class="nroffip">CURLOPT_RESUME_FROM_LARGE</span> 
 <p class="level1">Pass a curl_off_t as parameter. It contains the offset in number of bytes that you want the transfer to start from. (Added in 7.11.0) 
 <p class="level0"><a name="CURLOPTCUSTOMREQUEST"></a><span class="nroffip">CURLOPT_CUSTOMREQUEST</span> 
 <p class="level1">Pass a pointer to a zero terminated string as parameter. It will be used instead of GET or HEAD when doing an HTTP request, or instead of LIST or NLST when doing a FTP directory listing. This is useful for doing DELETE or other more or less obscure HTTP requests. Don't do this at will, make sure your server supports the command first. 
@@ -503,29 +558,29 @@
 <p class="level0"><a name="CURLOPTNOBODY"></a><span class="nroffip">CURLOPT_NOBODY</span> 
 <p class="level1">A parameter set to 1 tells the library to not include the body-part in the output. This is only relevant for protocols that have separate header and body parts. On HTTP(S) servers, this will make libcurl do a HEAD request. 
 <p class="level1">To change request to GET, you should use <a class="emphasis" href="#CURLOPTHTTPGET">CURLOPT_HTTPGET</a>. Change request to POST with <a class="emphasis" href="#CURLOPTPOST">CURLOPT_POST</a> etc. 
 <p class="level0"><a name="CURLOPTINFILESIZE"></a><span class="nroffip">CURLOPT_INFILESIZE</span> 
 <p class="level1">When uploading a file to a remote site, this option should be used to tell libcurl what the expected size of the infile is. This value should be passed as a long. See also <a class="emphasis" href="#CURLOPTINFILESIZELARGE">CURLOPT_INFILESIZE_LARGE</a>. 
 <p class="level1">For uploading using SCP, this option or <a class="emphasis" href="#CURLOPTINFILESIZELARGE">CURLOPT_INFILESIZE_LARGE</a> is mandatory. 
-<p class="level1">Note that this option does not limit how much data libcurl will actually send, as that is controlled entirely by what the read callback returns. 
+<p class="level1">This option does not limit how much data libcurl will actually send, as that is controlled entirely by what the read callback returns. 
 <p class="level0"><a name="CURLOPTINFILESIZELARGE"></a><span class="nroffip">CURLOPT_INFILESIZE_LARGE</span> 
 <p class="level1">When uploading a file to a remote site, this option should be used to tell libcurl what the expected size of the infile is.  This value should be passed as a curl_off_t. (Added in 7.11.0) 
 <p class="level1">For uploading using SCP, this option or <a class="emphasis" href="#CURLOPTINFILESIZE">CURLOPT_INFILESIZE</a> is mandatory. 
-<p class="level1">Note that this option does not limit how much data libcurl will actually send, as that is controlled entirely by what the read callback returns. 
+<p class="level1">This option does not limit how much data libcurl will actually send, as that is controlled entirely by what the read callback returns. 
 <p class="level0"><a name="CURLOPTUPLOAD"></a><span class="nroffip">CURLOPT_UPLOAD</span> 
 <p class="level1">A parameter set to 1 tells the library to prepare for an upload. The <a class="emphasis" href="#CURLOPTREADDATA">CURLOPT_READDATA</a> and <a class="emphasis" href="#CURLOPTINFILESIZE">CURLOPT_INFILESIZE</a> or <a class="emphasis" href="#CURLOPTINFILESIZELARGE">CURLOPT_INFILESIZE_LARGE</a> options are also interesting for uploads. If the protocol is HTTP, uploading means using the PUT request unless you tell libcurl otherwise. 
 <p class="level1">Using PUT with HTTP 1.1 implies the use of a "Expect: 100-continue" header. You can disable this header with <a class="emphasis" href="#CURLOPTHTTPHEADER">CURLOPT_HTTPHEADER</a> as usual. 
 <p class="level1">If you use PUT to a HTTP 1.1 server, you can upload data without knowing the size before starting the transfer if you use chunked encoding. You enable this by adding a header like "Transfer-Encoding: chunked" with <a class="emphasis" href="#CURLOPTHTTPHEADER">CURLOPT_HTTPHEADER</a>. With HTTP 1.0 or without chunked transfer, you must specify the size. 
 <p class="level0"><a name="CURLOPTMAXFILESIZE"></a><span class="nroffip">CURLOPT_MAXFILESIZE</span> 
 <p class="level1">Pass a long as parameter. This allows you to specify the maximum size (in bytes) of a file to download. If the file requested is larger than this value, the transfer will not start and CURLE_FILESIZE_EXCEEDED will be returned. 
 <p class="level1">The file size is not always known prior to download, and for such files this option has no effect even if the file transfer ends up being larger than this given limit. This concerns both FTP and HTTP transfers. 
 <p class="level0"><a name="CURLOPTMAXFILESIZELARGE"></a><span class="nroffip">CURLOPT_MAXFILESIZE_LARGE</span> 
 <p class="level1">Pass a curl_off_t as parameter. This allows you to specify the maximum size (in bytes) of a file to download. If the file requested is larger than this value, the transfer will not start and <span Class="emphasis">CURLE_FILESIZE_EXCEEDED</span> will be returned. (Added in 7.11.0) 
 <p class="level1">The file size is not always known prior to download, and for such files this option has no effect even if the file transfer ends up being larger than this given limit. This concerns both FTP and HTTP transfers. 
 <p class="level0"><a name="CURLOPTTIMECONDITION"></a><span class="nroffip">CURLOPT_TIMECONDITION</span> 
-<p class="level1">Pass a long as parameter. This defines how the <a class="emphasis" href="#CURLOPTTIMEVALUE">CURLOPT_TIMEVALUE</a> time value is treated. You can set this parameter to <span Class="emphasis">CURL_TIMECOND_IFMODSINCE</span> or <span Class="emphasis">CURL_TIMECOND_IFUNMODSINCE</span>. This feature applies to HTTP and FTP. 
+<p class="level1">Pass a long as parameter. This defines how the <a class="emphasis" href="#CURLOPTTIMEVALUE">CURLOPT_TIMEVALUE</a> time value is treated. You can set this parameter to <span Class="emphasis">CURL_TIMECOND_IFMODSINCE</span> or <span Class="emphasis">CURL_TIMECOND_IFUNMODSINCE</span>. This feature applies to HTTP, FTP, and RTSP. 
 <p class="level1">The last modification time of a file is not always known and in such instances this feature will have no effect even if the given time condition would not have been met. <a class="emphasis" href="./curl_easy_getinfo.html">curl_easy_getinfo(3)</a> with the <span Class="emphasis">CURLINFO_CONDITION_UNMET</span> option can be used after a transfer to learn if a zero-byte successful "transfer" was due to this condition not matching. 
 <p class="level0"><a name="CURLOPTTIMEVALUE"></a><span class="nroffip">CURLOPT_TIMEVALUE</span> 
 <p class="level1">Pass a long as parameter. This should be the time in seconds since 1 Jan 1970, and the time will be used in a condition as specified with <a class="emphasis" href="#CURLOPTTIMECONDITION">CURLOPT_TIMECONDITION</a>. <a name="CONNECTION"></a><h2 class="nroffsh">CONNECTION OPTIONS</h2>
 <p class="level0">
 <p class="level0"><a name="CURLOPTTIMEOUT"></a><span class="nroffip">CURLOPT_TIMEOUT</span> 
 <p class="level1">Pass a long as parameter containing the maximum time in seconds that you allow the libcurl transfer operation to take. Normally, name lookups can take a considerable time and limiting operations to less than a few minutes risk aborting perfectly normal operations. This option will cause curl to use the SIGALRM to enable time-outing system calls. 
@@ -541,13 +596,13 @@
 <p class="level0"><a name="CURLOPTMAXRECVSPEEDLARGE"></a><span class="nroffip">CURLOPT_MAX_RECV_SPEED_LARGE</span> 
 <p class="level1">Pass a curl_off_t as parameter.  If a download exceeds this speed (counted in bytes per second) on cumulative average during the transfer, the transfer will pause to keep the average rate less than or equal to the parameter value. Defaults to unlimited speed. (Added in 7.15.5) 
 <p class="level0"><a name="CURLOPTMAXCONNECTS"></a><span class="nroffip">CURLOPT_MAXCONNECTS</span> 
 <p class="level1">Pass a long. The set number will be the persistent connection cache size. The set amount will be the maximum amount of simultaneously open connections that libcurl may cache in this easy handle. Default is 5, and there isn't much point in changing this value unless you are perfectly aware of how this works and changes libcurl's behaviour. This concerns connections using any of the protocols that support persistent connections. 
 <p class="level1">When reaching the maximum limit, curl closes the oldest one in the cache to prevent increasing the number of open connections. 
 <p class="level1">If you already have performed transfers with this curl handle, setting a smaller MAXCONNECTS than before may cause open connections to get closed unnecessarily. 
-<p class="level1">Note that if you add this easy handle to a multi handle, this setting is not acknowledged, and you must instead use <a class="emphasis" href="./curl_multi_setopt.html">curl_multi_setopt(3)</a> and the <span Class="emphasis">CURLMOPT_MAXCONNECTS</span> option. 
+<p class="level1">If you add this easy handle to a multi handle, this setting is not acknowledged, and you must instead use <a class="emphasis" href="./curl_multi_setopt.html">curl_multi_setopt(3)</a> and the <span Class="emphasis">CURLMOPT_MAXCONNECTS</span> option. 
 <p class="level0"><a name="CURLOPTCLOSEPOLICY"></a><span class="nroffip">CURLOPT_CLOSEPOLICY</span> 
 <p class="level1">(Obsolete) This option does nothing. 
 <p class="level0"><a name="CURLOPTFRESHCONNECT"></a><span class="nroffip">CURLOPT_FRESH_CONNECT</span> 
 <p class="level1">Pass a long. Set to 1 to make the next transfer use a new (fresh) connection by force. If the connection cache is full before this connection, one of the existing connections will be closed as according to the selected or default policy. This option should be used with caution and only if you understand what it does. Set this to 0 to have libcurl attempt re-using an existing connection (default behavior). 
 <p class="level0"><a name="CURLOPTFORBIDREUSE"></a><span class="nroffip">CURLOPT_FORBID_REUSE</span> 
 <p class="level1">Pass a long. Set to 1 to make the next transfer explicitly close the connection when done. Normally, libcurl keeps all connections alive when done with one transfer in case a succeeding one follows that can re-use them. This option should be used with caution and only if you understand what it does. Set to 0 to have libcurl keep the connection open for possible later re-use (default behavior). 
@@ -586,13 +641,13 @@
 <p class="level0"><a name="CURLOPTSSLENGINE"></a><span class="nroffip">CURLOPT_SSLENGINE</span> 
 <p class="level1">Pass a pointer to a zero terminated string as parameter. It will be used as the identifier for the crypto engine you want to use for your private key. 
 <p class="level1">If the crypto device cannot be loaded, <span Class="emphasis">CURLE_SSL_ENGINE_NOTFOUND</span> is returned. 
 <p class="level0"><a name="CURLOPTSSLENGINEDEFAULT"></a><span class="nroffip">CURLOPT_SSLENGINE_DEFAULT</span> 
 <p class="level1">Sets the actual crypto engine as the default for (asymmetric) crypto operations. 
 <p class="level1">If the crypto device cannot be set, <span Class="emphasis">CURLE_SSL_ENGINE_SETFAILED</span> is returned. 
-<p class="level1">Note that even though this option doesn't need any parameter, in some configurations <span Class="emphasis">curl_easy_setopt</span> might be defined as a macro taking exactly three arguments. Therefore, it's recommended to pass 1 as parameter to this option. 
+<p class="level1">Even though this option doesn't need any parameter, in some configurations <span Class="emphasis">curl_easy_setopt</span> might be defined as a macro taking exactly three arguments. Therefore, it's recommended to pass 1 as parameter to this option. 
 <p class="level0"><a name="CURLOPTSSLVERSION"></a><span class="nroffip">CURLOPT_SSLVERSION</span> 
 <p class="level1">Pass a long as parameter to control what version of SSL/TLS to attempt to use. The available options are: 
 <p class="level2">
 <p class="level1"><a name="CURLSSLVERSIONDEFAULT"></a><span class="nroffip">CURL_SSLVERSION_DEFAULT</span> 
 <p class="level2">The default action. This will attempt to figure out the remote SSL protocol version, i.e. either SSLv3 or TLSv1 (but not SSLv2, which became disabled by default with 7.18.1). 
 <p class="level1"><a name="CURLSSLVERSIONTLSv1"></a><span class="nroffip">CURL_SSLVERSION_TLSv1</span> 
@@ -607,25 +662,25 @@
 <p class="level1">This option determines whether curl verifies the authenticity of the peer's certificate. A value of 1 means curl verifies; zero means it doesn't.  The default is nonzero, but before 7.10, it was zero. 
 <p class="level1">When negotiating an SSL connection, the server sends a certificate indicating its identity.  Curl verifies whether the certificate is authentic, i.e. that you can trust that the server is who the certificate says it is.  This trust is based on a chain of digital signatures, rooted in certification authority (CA) certificates you supply.  As of 7.10, curl installs a default bundle of CA certificates and you can specify alternate certificates with the <a class="emphasis" href="#CURLOPTCAINFO">CURLOPT_CAINFO</a> option or the <a class="emphasis" href="#CURLOPTCAPATH">CURLOPT_CAPATH</a> option. 
 <p class="level1">When <a class="emphasis" href="#CURLOPTSSLVERIFYPEER">CURLOPT_SSL_VERIFYPEER</a> is nonzero, and the verification fails to prove that the certificate is authentic, the connection fails.  When the option is zero, the connection succeeds regardless. 
 <p class="level1">Authenticating the certificate is not by itself very useful.  You typically want to ensure that the server, as authentically identified by its certificate, is the server you mean to be talking to.  Use <a class="emphasis" href="#CURLOPTSSLVERIFYHOST">CURLOPT_SSL_VERIFYHOST</a> to control that. 
 <p class="level0"><a name="CURLOPTCAINFO"></a><span class="nroffip">CURLOPT_CAINFO</span> 
 <p class="level1">Pass a char * to a zero terminated string naming a file holding one or more certificates to verify the peer with.  This makes sense only when used in combination with the <a class="emphasis" href="#CURLOPTSSLVERIFYPEER">CURLOPT_SSL_VERIFYPEER</a> option.  If <a class="emphasis" href="#CURLOPTSSLVERIFYPEER">CURLOPT_SSL_VERIFYPEER</a> is zero, <a class="emphasis" href="#CURLOPTCAINFO">CURLOPT_CAINFO</a> need not even indicate an accessible file. 
-<p class="level1">Note that option is by default set to the system path where libcurl's cacert bundle is assumed to be stored, as established at build time. 
+<p class="level1">This option is by default set to the system path where libcurl's cacert bundle is assumed to be stored, as established at build time. 
 <p class="level1">When built against NSS, this is the directory that the NSS certificate database resides in. 
 <p class="level0"><a name="CURLOPTISSUERCERT"></a><span class="nroffip">CURLOPT_ISSUERCERT</span> 
 <p class="level1">Pass a char * to a zero terminated string naming a file holding a CA certificate in PEM format. If the option is set, an additional check against the peer certificate is performed to verify the issuer is indeed the one associated with the certificate provided by the option. This additional check is useful in multi-level PKI where one needs to enforce that the peer certificate is from a specific branch of the tree. 
 <p class="level1">This option makes sense only when used in combination with the <a class="emphasis" href="#CURLOPTSSLVERIFYPEER">CURLOPT_SSL_VERIFYPEER</a> option. Otherwise, the result of the check is not considered as failure. 
 <p class="level1">A specific error code (CURLE_SSL_ISSUER_ERROR) is defined with the option, which is returned if the setup of the SSL/TLS session has failed due to a mismatch with the issuer of peer certificate (<a class="emphasis" href="#CURLOPTSSLVERIFYPEER">CURLOPT_SSL_VERIFYPEER</a> has to be set too for the check to fail). (Added in 7.19.0) 
 <p class="level0"><a name="CURLOPTCAPATH"></a><span class="nroffip">CURLOPT_CAPATH</span> 
 <p class="level1">Pass a char * to a zero terminated string naming a directory holding multiple CA certificates to verify the peer with. The certificate directory must be prepared using the openssl c_rehash utility. This makes sense only when used in combination with the <a class="emphasis" href="#CURLOPTSSLVERIFYPEER">CURLOPT_SSL_VERIFYPEER</a> option.  If <a class="emphasis" href="#CURLOPTSSLVERIFYPEER">CURLOPT_SSL_VERIFYPEER</a> is zero, <a class="emphasis" href="#CURLOPTCAPATH">CURLOPT_CAPATH</a> need not even indicate an accessible path.  The <a class="emphasis" href="#CURLOPTCAPATH">CURLOPT_CAPATH</a> function apparently does not work in Windows due to some limitation in openssl. This option is OpenSSL-specific and does nothing if libcurl is built to use GnuTLS. 
 <p class="level0"><a name="CURLOPTCRLFILE"></a><span class="nroffip">CURLOPT_CRLFILE</span> 
 <p class="level1">Pass a char * to a zero terminated string naming a file with the concatenation of CRL (in PEM format) to use in the certificate validation that occurs during the SSL exchange. 
 <p class="level1">When curl is built to use NSS or GnuTLS, there is no way to influence the use of CRL passed to help in the verification process. When libcurl is built with OpenSSL support, X509_V_FLAG_CRL_CHECK and X509_V_FLAG_CRL_CHECK_ALL are both set, requiring CRL check against all the elements of the certificate chain if a CRL file is passed. 
 <p class="level1">This option makes sense only when used in combination with the <a class="emphasis" href="#CURLOPTSSLVERIFYPEER">CURLOPT_SSL_VERIFYPEER</a> option. 
-<p class="level1">A specific error code (CURLE_SSL_CRL_BADFILE) is defined with the option. It is returned when the SSL exchange fails because the CRL file cannot be loaded. Note that a failure in certificate verification due to a revocation information found in the CRL does not trigger this specific error. (Added in 7.19.0) 
+<p class="level1">A specific error code (CURLE_SSL_CRL_BADFILE) is defined with the option. It is returned when the SSL exchange fails because the CRL file cannot be loaded. A failure in certificate verification due to a revocation information found in the CRL does not trigger this specific error. (Added in 7.19.0) 
 <p class="level0"><a name="CURLOPTCERTINFO"></a><span class="nroffip">CURLOPT_CERTINFO</span> 
 <p class="level1">Pass a long set to 1 to enable libcurl's certificate chain info gatherer. With this enabled, libcurl (if built with OpenSSL) will extract lots of information and data about the certificates in the certificate chain used in the SSL connection. This data is then possible to extract after a transfer using <a class="emphasis" href="./curl_easy_getinfo.html">curl_easy_getinfo(3)</a> and its option <span Class="emphasis">CURLINFO_CERTINFO</span>. (Added in 7.19.1) 
 <p class="level0"><a name="CURLOPTRANDOMFILE"></a><span class="nroffip">CURLOPT_RANDOM_FILE</span> 
 <p class="level1">Pass a char * to a zero terminated file name. The file will be used to read from to seed the random engine for SSL. The more random the specified file is, the more secure the SSL connection will become. 
 <p class="level0"><a name="CURLOPTEGDSOCKET"></a><span class="nroffip">CURLOPT_EGDSOCKET</span> 
 <p class="level1">Pass a char * to the zero terminated path name to the Entropy Gathering Daemon socket. It will be used to seed the random engine for SSL. 
@@ -644,32 +699,32 @@
 <p class="level1">For OpenSSL and GnuTLS valid examples of cipher lists include 'RC4-SHA', &acute;SHA1+DES&acute;, 'TLSv1' and 'DEFAULT'. The default list is normally set when you compile OpenSSL. 
 <p class="level1">You'll find more details about cipher lists on this URL: <span Class="emphasis"><a href="http://www.openssl.org/docs/apps/ciphers.html">http://www.openssl.org/docs/apps/ciphers.html</a></span> 
 <p class="level1">For NSS, valid examples of cipher lists include 'rsa_rc4_128_md5', &acute;rsa_aes_128_sha&acute;, etc. With NSS you don't add/remove ciphers. If one uses this option then all known ciphers are disabled and only those passed in are enabled. 
 <p class="level1">You'll find more details about the NSS cipher lists on this URL: <span Class="emphasis"><a href="http://directory.fedora.redhat.com/docs/mod_nss.html">http://directory.fedora.redhat.com/docs/mod_nss.html</a>#Directives</span> 
 <p class="level1">
 <p class="level0"><a name="CURLOPTSSLSESSIONIDCACHE"></a><span class="nroffip">CURLOPT_SSL_SESSIONID_CACHE</span> 
-<p class="level1">Pass a long set to 0 to disable libcurl's use of SSL session-ID caching. Set this to 1 to enable it. By default all transfers are done using the cache. Note that while nothing ever should get hurt by attempting to reuse SSL session-IDs, there seem to be broken SSL implementations in the wild that may require you to disable this in order for you to succeed. (Added in 7.16.0) 
+<p class="level1">Pass a long set to 0 to disable libcurl's use of SSL session-ID caching. Set this to 1 to enable it. By default all transfers are done using the cache. While nothing ever should get hurt by attempting to reuse SSL session-IDs, there seem to be broken SSL implementations in the wild that may require you to disable this in order for you to succeed. (Added in 7.16.0) 
 <p class="level0"><a name="CURLOPTKRBLEVEL"></a><span class="nroffip">CURLOPT_KRBLEVEL</span> 
 <p class="level1">Pass a char * as parameter. Set the kerberos security level for FTP; this also enables kerberos awareness.  This is a string, 'clear', 'safe', 'confidential' or 'private'.  If the string is set but doesn't match one of these, 'private' will be used. Set the string to NULL to disable kerberos support for FTP. 
 <p class="level1">(This option was known as CURLOPT_KRB4LEVEL up to 7.16.3) <a name="SSH"></a><h2 class="nroffsh">SSH OPTIONS</h2>
 <p class="level0">
 <p class="level0"><a name="CURLOPTSSHAUTHTYPES"></a><span class="nroffip">CURLOPT_SSH_AUTH_TYPES</span> 
 <p class="level1">Pass a long set to a bitmask consisting of one or more of CURLSSH_AUTH_PUBLICKEY, CURLSSH_AUTH_PASSWORD, CURLSSH_AUTH_HOST, CURLSSH_AUTH_KEYBOARD. Set CURLSSH_AUTH_ANY to let libcurl pick one. (Added in 7.16.1) 
 <p class="level0"><a name="CURLOPTSSHHOSTPUBLICKEYMD5"></a><span class="nroffip">CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</span> 
 <p class="level1">Pass a char * pointing to a string containing 32 hexadecimal digits. The string should be the 128 bit MD5 checksum of the remote host's public key, and libcurl will reject the connection to the host unless the md5sums match. This option is only for SCP and SFTP transfers. (Added in 7.17.1) 
 <p class="level0"><a name="CURLOPTSSHPUBLICKEYFILE"></a><span class="nroffip">CURLOPT_SSH_PUBLIC_KEYFILE</span> 
 <p class="level1">Pass a char * pointing to a file name for your public key. If not used, libcurl defaults to using <span Class="bold">~/.ssh/id_dsa.pub</span>. (Added in 7.16.1) 
 <p class="level0"><a name="CURLOPTSSHPRIVATEKEYFILE"></a><span class="nroffip">CURLOPT_SSH_PRIVATE_KEYFILE</span> 
-<p class="level1">Pass a char * pointing to a file name for your private key. If not used, libcurl defaults to using <span Class="bold">~/.ssh/id_dsa</span>. If the file is password-protected, set the password with <a class="emphasis" href="#CURLOPTKEYPASSWD">CURLOPT_KEYPASSWD</a>. (Added in 7.16.1) 
+<p class="level1">Pass a char * pointing to a file name for your private key. If not used, libcurl defaults to using <span Class="bold">~/.ssh/id_dsa</span>.  If the file is password-protected, set the password with <a class="emphasis" href="#CURLOPTKEYPASSWD">CURLOPT_KEYPASSWD</a>. (Added in 7.16.1) 
 <p class="level0"><a name="CURLOPTSSHKNOWNHOSTS"></a><span class="nroffip">CURLOPT_SSH_KNOWNHOSTS</span> 
 <p class="level1">Pass a pointer to a zero terminated string holding the file name of the known_host file to use.  The known_hosts file should use the OpenSSH file format as supported by libssh2. If this file is specified, libcurl will only accept connections with hosts that are known and present in that file, with a matching public key. Use <a class="emphasis" href="#CURLOPTSSHKEYFUNCTION">CURLOPT_SSH_KEYFUNCTION</a> to alter the default behavior on host and key (mis)matching. (Added in 7.19.6) 
 <p class="level0"><a name="CURLOPTSSHKEYFUNCTION"></a><span class="nroffip">CURLOPT_SSH_KEYFUNCTION</span> 
 <p class="level1">Pass a pointer to a curl_sshkeycallback function. It gets called when the known_host matching has been done, to allow the application to act and decide for libcurl how to proceed. It gets passed the CURL handle, the key from the known_hosts file, the key from the remote site, info from libcurl on the matching status and a custom pointer (set with <a class="emphasis" href="#CURLOPTSSHKEYDATA">CURLOPT_SSH_KEYDATA</a>). It MUST return one of the following return codes to tell libcurl how to act: 
 <p class="level2">
 <p class="level1"><a name="CURLKHSTATFINEADDTOFILE"></a><span class="nroffip">CURLKHSTAT_FINE_ADD_TO_FILE</span> 
-<p class="level2">The host+key is accepted and libcurl will append it to the known_hosts file before continuing with the connection. This will also add the host+key combo to the known_host pool kept in memory if it wasn't already present there. Note that the adding of data to the file is done by completely replacing the file with a new copy, so the permissions of the file must allow this. 
+<p class="level2">The host+key is accepted and libcurl will append it to the known_hosts file before continuing with the connection. This will also add the host+key combo to the known_host pool kept in memory if it wasn't already present there. The adding of data to the file is done by completely replacing the file with a new copy, so the permissions of the file must allow this. 
 <p class="level1"><a name="CURLKHSTATFINE"></a><span class="nroffip">CURLKHSTAT_FINE</span> 
 <p class="level2">The host+key is accepted libcurl will continue with the connection. This will also add the host+key combo to the known_host pool kept in memory if it wasn't already present there. 
 <p class="level1"><a name="CURLKHSTATREJECT"></a><span class="nroffip">CURLKHSTAT_REJECT</span> 
 <p class="level2">The host+key is rejected. libcurl will deny the connection to continue and it will be closed. 
 <p class="level1"><a name="CURLKHSTATDEFER"></a><span class="nroffip">CURLKHSTAT_DEFER</span> 
 <p class="level2">The host+key is rejected, but the SSH connection is asked to be kept alive. This feature could be used when the app wants to somehow return back and act on the host+key situation and then retry without needing the overhead of setting it up from scratch again. 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_setopt.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_setopt.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_strerror.pdf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_strerror.pdf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_strerror.pdf	2009-11-04 20:29:29.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_strerror.pdf	2010-02-09 18:07:47.000000000 +0800
@@ -62,29 +62,29 @@
 <</Type/Metadata
 /Subtype/XML/Length 1321>>stream
 <?xpacket begin='ï»¿' id='W5M0MpCehiHzreSzNTczkc9d'?>
 <?adobe-xap-filters esc="CRLF"?>
 <x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
 <rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
-<rdf:Description rdf:about='3eec3541-015a-11ea-0000-1db77fb63b0c' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 8.70'/>
-<rdf:Description rdf:about='3eec3541-015a-11ea-0000-1db77fb63b0c' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2009-11-04T13:29:29+01:00</xmp:ModifyDate>
-<xmp:CreateDate>2009-11-04T13:29:29+01:00</xmp:CreateDate>
+<rdf:Description rdf:about='8568fd4c-4d7f-11ea-0000-1db77fb63b0c' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 8.70'/>
+<rdf:Description rdf:about='8568fd4c-4d7f-11ea-0000-1db77fb63b0c' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2010-02-09T11:07:47+01:00</xmp:ModifyDate>
+<xmp:CreateDate>2010-02-09T11:07:47+01:00</xmp:CreateDate>
 <xmp:CreatorTool>groff version 1.20.1</xmp:CreatorTool></rdf:Description>
-<rdf:Description rdf:about='3eec3541-015a-11ea-0000-1db77fb63b0c' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='3eec3541-015a-11ea-0000-1db77fb63b0c'/>
-<rdf:Description rdf:about='3eec3541-015a-11ea-0000-1db77fb63b0c' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
+<rdf:Description rdf:about='8568fd4c-4d7f-11ea-0000-1db77fb63b0c' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='8568fd4c-4d7f-11ea-0000-1db77fb63b0c'/>
+<rdf:Description rdf:about='8568fd4c-4d7f-11ea-0000-1db77fb63b0c' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
 </rdf:RDF>
 </x:xmpmeta>
                                                                         
                                                                         
 <?xpacket end='w'?>
 endstream
 endobj
 2 0 obj
 <</Producer(GPL Ghostscript 8.70)
-/CreationDate(D:20091104132929+01'00')
-/ModDate(D:20091104132929+01'00')
+/CreationDate(D:20100209110747+01'00')
+/ModDate(D:20100209110747+01'00')
 /Creator(groff version 1.20.1)>>endobj
 xref
 0 14
 0000000000 65535 f 
 0000001044 00000 n 
 0000002827 00000 n 
@@ -98,11 +98,11 @@
 0000001296 00000 n 
 0000001150 00000 n 
 0000001180 00000 n 
 0000001429 00000 n 
 trailer
 << /Size 14 /Root 1 0 R /Info 2 0 R
-/ID [<FC0DE2BABC0C83D23F6EBBA0A9D4B819><FC0DE2BABC0C83D23F6EBBA0A9D4B819>]
+/ID [<A6136D1AB8A16E02705F34A6A40C5357><A6136D1AB8A16E02705F34A6A40C5357>]
 >>
 startxref
 2981
 %%EOF
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_easy_unescape.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_easy_unescape.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_escape.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_escape.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_formadd.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_formadd.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_formfree.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_formfree.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_formget.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_formget.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_free.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_free.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_getdate.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_getdate.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_getenv.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_getenv.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_global_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_global_cleanup.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_global_init_mem.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_global_init_mem.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_global_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_global_init.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_mprintf.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_mprintf.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_add_handle.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_add_handle.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_assign.pdf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_assign.pdf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_assign.pdf	2009-11-04 20:29:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_assign.pdf	2010-02-09 18:07:50.000000000 +0800
@@ -70,29 +70,29 @@
 <</Type/Metadata
 /Subtype/XML/Length 1321>>stream
 <?xpacket begin='ï»¿' id='W5M0MpCehiHzreSzNTczkc9d'?>
 <?adobe-xap-filters esc="CRLF"?>
 <x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
 <rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
-<rdf:Description rdf:about='40b5f8c1-015a-11ea-0000-cb573b64c622' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 8.70'/>
-<rdf:Description rdf:about='40b5f8c1-015a-11ea-0000-cb573b64c622' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2009-11-04T13:29:32+01:00</xmp:ModifyDate>
-<xmp:CreateDate>2009-11-04T13:29:32+01:00</xmp:CreateDate>
+<rdf:Description rdf:about='8732c0cc-4d7f-11ea-0000-cb573b64c622' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 8.70'/>
+<rdf:Description rdf:about='8732c0cc-4d7f-11ea-0000-cb573b64c622' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2010-02-09T11:07:50+01:00</xmp:ModifyDate>
+<xmp:CreateDate>2010-02-09T11:07:50+01:00</xmp:CreateDate>
 <xmp:CreatorTool>groff version 1.20.1</xmp:CreatorTool></rdf:Description>
-<rdf:Description rdf:about='40b5f8c1-015a-11ea-0000-cb573b64c622' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='40b5f8c1-015a-11ea-0000-cb573b64c622'/>
-<rdf:Description rdf:about='40b5f8c1-015a-11ea-0000-cb573b64c622' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
+<rdf:Description rdf:about='8732c0cc-4d7f-11ea-0000-cb573b64c622' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='8732c0cc-4d7f-11ea-0000-cb573b64c622'/>
+<rdf:Description rdf:about='8732c0cc-4d7f-11ea-0000-cb573b64c622' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
 </rdf:RDF>
 </x:xmpmeta>
                                                                         
                                                                         
 <?xpacket end='w'?>
 endstream
 endobj
 2 0 obj
 <</Producer(GPL Ghostscript 8.70)
-/CreationDate(D:20091104132932+01'00')
-/ModDate(D:20091104132932+01'00')
+/CreationDate(D:20100209110750+01'00')
+/ModDate(D:20100209110750+01'00')
 /Creator(groff version 1.20.1)>>endobj
 xref
 0 15
 0000000000 65535 f 
 0000002098 00000 n 
 0000003963 00000 n 
@@ -107,11 +107,11 @@
 0000002204 00000 n 
 0000002234 00000 n 
 0000002366 00000 n 
 0000002565 00000 n 
 trailer
 << /Size 15 /Root 1 0 R /Info 2 0 R
-/ID [<0B8D0E0795ED9E33D9682DBE95C3216A><0B8D0E0795ED9E33D9682DBE95C3216A>]
+/ID [<DE123119643F4E7F0592165E7A7CA2BC><DE123119643F4E7F0592165E7A7CA2BC>]
 >>
 startxref
 4117
 %%EOF
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_cleanup.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_fdset.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_fdset.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_fdset.3	2008-12-30 05:13:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_fdset.3	2010-01-27 07:02:13.000000000 +0800
@@ -1,7 +1,7 @@
-.\" $Id: curl_multi_fdset.3,v 1.13 2008-12-28 21:56:56 bagder Exp $
+.\" $Id: curl_multi_fdset.3,v 1.15 2010-01-26 23:02:13 bagder Exp $
 .\"
 .TH curl_multi_fdset 3 "2 Jan 2006" "libcurl 7.16.0" "libcurl Manual"
 .SH NAME
 curl_multi_fdset - extracts file descriptor information from a multi handle
 .SH SYNOPSIS
 .nf
@@ -18,24 +18,25 @@
 libcurl returns its fd_set sets. The application can use these to select() on,
 but be sure to FD_ZERO them before calling this function as
 \fIcurl_multi_fdset(3)\fP only adds its own descriptors, it doesn't zero or
 otherwise remove any others. The \fIcurl_multi_perform(3)\fP function should be
 called as soon as one of them is ready to be read from or written to.
 
+To be sure to have up-to-date results, you should call
+\fIcurl_multi_perform\fP until it does not return CURLM_CALL_MULTI_PERFORM
+prior to calling \fIcurl_multi_fdset\fP.  This will make sure that libcurl has
+updated the handles' socket states.
+
 If no file descriptors are set by libcurl, \fImax_fd\fP will contain -1 when
 this function returns. Otherwise it will contain the higher descriptor number
 libcurl set.
 
-You should also be aware that when doing select(), you should consider using a
-rather small (single-digit number of seconds) timeout and call
-\fIcurl_multi_perform\fP regularly - even if no activity has been seen on the
-fd_sets - as otherwise libcurl-internal retries and timeouts may not work as
-you'd think and want.
-
-Starting with libcurl 7.16.0, you should use \fBcurl_multi_timeout\fP to
-figure out how long to wait for action.
+When doing select(), you should use \fBcurl_multi_timeout\fP to figure out how
+long to wait for action. Call \fIcurl_multi_perform\fP even if no activity has
+been seen on the fd_sets after the timeout expires as otherwise internal
+retries and timeouts may not work as you'd think and want.
 .SH RETURN VALUE
 CURLMcode type, general libcurl multi interface error code. See
 \fIlibcurl-errors(3)\fP
 .SH "SEE ALSO"
-.BR curl_multi_cleanup "(3)," curl_multi_init "(3), "
-.BR curl_multi_timeout "(3) "
+.BR curl_multi_cleanup "(3), " curl_multi_init "(3), "
+.BR curl_multi_timeout "(3), " curl_multi_perform "(3) "
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_fdset.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_fdset.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_fdset.html	2009-11-04 20:29:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_fdset.html	2010-02-09 18:07:34.000000000 +0800
@@ -52,13 +52,13 @@
  &nbsp;                          fd_set *write_fd_set,
  &nbsp;                          fd_set *exc_fd_set,
  &nbsp;                          int *max_fd);
  <p class="level0"></pre>
 <a name="DESCRIPTION"></a><h2 class="nroffsh">DESCRIPTION</h2>
 <p class="level0">This function extracts file descriptor information from a given multi_handle. libcurl returns its fd_set sets. The application can use these to select() on, but be sure to FD_ZERO them before calling this function as <a class="emphasis" href="./curl_multi_fdset.html">curl_multi_fdset(3)</a> only adds its own descriptors, it doesn't zero or otherwise remove any others. The <a class="emphasis" href="./curl_multi_perform.html">curl_multi_perform(3)</a> function should be called as soon as one of them is ready to be read from or written to. 
+<p class="level0">To be sure to have up-to-date results, you should call <span Class="emphasis">curl_multi_perform</span> until it does not return CURLM_CALL_MULTI_PERFORM prior to calling <span Class="emphasis">curl_multi_fdset</span>.  This will make sure that libcurl has updated the handles' socket states. 
 <p class="level0">If no file descriptors are set by libcurl, <span Class="emphasis">max_fd</span> will contain -1 when this function returns. Otherwise it will contain the higher descriptor number libcurl set. 
-<p class="level0">You should also be aware that when doing select(), you should consider using a rather small (single-digit number of seconds) timeout and call <span Class="emphasis">curl_multi_perform</span> regularly - even if no activity has been seen on the fd_sets - as otherwise libcurl-internal retries and timeouts may not work as you'd think and want. 
-<p class="level0">Starting with libcurl 7.16.0, you should use <span Class="bold">curl_multi_timeout</span> to figure out how long to wait for action. <a name="RETURN"></a><h2 class="nroffsh">RETURN VALUE</h2>
+<p class="level0">When doing select(), you should use <span Class="bold">curl_multi_timeout</span> to figure out how long to wait for action. Call <span Class="emphasis">curl_multi_perform</span> even if no activity has been seen on the fd_sets after the timeout expires as otherwise internal retries and timeouts may not work as you'd think and want. <a name="RETURN"></a><h2 class="nroffsh">RETURN VALUE</h2>
 <p class="level0">CURLMcode type, general libcurl multi interface error code. See <span Class="emphasis">libcurl-errors(3)</span> <a name="SEE"></a><h2 class="nroffsh">SEE ALSO</h2>
-<p class="level0"><a class="manpage" href="./curl_multi_cleanup.html">curl_multi_cleanup (3)</a> <a class="manpage" href="./curl_multi_init.html"> curl_multi_init (3)</a> <span Class="manpage"> </span> <a class="manpage" href="./curl_multi_timeout.html">curl_multi_timeout (3) </a> <p class="roffit">
+<p class="level0"><a class="manpage" href="./curl_multi_cleanup.html">curl_multi_cleanup (3)</a> <a class="manpage" href="./curl_multi_init.html">  curl_multi_init (3)</a> <span Class="manpage"> </span> <a class="manpage" href="./curl_multi_timeout.html">curl_multi_timeout (3)</a> <a class="manpage" href="./curl_multi_perform.html">  curl_multi_perform (3) </a> <p class="roffit">
  This HTML page was made with <a href="http://daniel.haxx.se/projects/roffit/">roffit</a>.
 </body></html>
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_fdset.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_fdset.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_info_read.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_info_read.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_init.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_perform.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_perform.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_perform.3	2009-09-03 05:05:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_perform.3	2010-02-02 05:42:44.000000000 +0800
@@ -1,7 +1,7 @@
-.\" $Id: curl_multi_perform.3,v 1.10 2009-09-02 14:57:05 bagder Exp $
+.\" $Id: curl_multi_perform.3,v 1.11 2010-02-01 21:42:44 bagder Exp $
 .\"
 .TH curl_multi_perform 3 "1 March 2002" "libcurl 7.9.5" "libcurl Manual"
 .SH NAME
 curl_multi_perform - reads/writes available data from each easy handle
 .SH SYNOPSIS
 #include <curl/curl.h>
@@ -19,31 +19,32 @@
 
 When you call curl_multi_perform() and the amount of \fIrunning_handles\fP is
 changed from the previous call (or is less than the amount of easy handles
 you've added to the multi handle), you know that there is one or more
 transfers less "running". You can then call \fIcurl_multi_info_read(3)\fP to
 get information about each individual completed transfer, and that returned
-info includes CURLcode and more.
+info includes CURLcode and more. If an added handle fails very quickly, it may
+never be counted as a running_handle.
 
 When \fIrunning_handles\fP is set to zero (0) on the return of this function,
 there is no longer any transfers in progress.
 .SH "RETURN VALUE"
 CURLMcode type, general libcurl multi interface error code.
 
-If you receive \fICURLM_CALL_MULTI_PERFORM\fP, this basically means that you
-should call \fIcurl_multi_perform\fP again, before you select() on more
-actions. You don't have to do it immediately, but the return code means that
-libcurl may have more data available to return or that there may be more data
-to send off before it is "satisfied". Do note that \fIcurl_multi_perform(3)\fP
-will return \fICURLM_CALL_MULTI_PERFORM\fP only when it wants to be called
-again \fBimmediately\fP. When things are fine and there is nothing immediate
-it wants done, it'll return \fICURLM_OK\fP and you need to wait for \&"action"
-and then call this function again.
+Before version 7.20.0: If you receive \fICURLM_CALL_MULTI_PERFORM\fP, this
+basically means that you should call \fIcurl_multi_perform\fP again, before
+you select() on more actions. You don't have to do it immediately, but the
+return code means that libcurl may have more data available to return or that
+there may be more data to send off before it is "satisfied". Do note that
+\fIcurl_multi_perform(3)\fP will return \fICURLM_CALL_MULTI_PERFORM\fP only
+when it wants to be called again \fBimmediately\fP. When things are fine and
+there is nothing immediate it wants done, it'll return \fICURLM_OK\fP and you
+need to wait for \&"action" and then call this function again.
 
-NOTE that this only returns errors etc regarding the whole multi stack. Problems
-still might have occurred on individual transfers even when this
+This function only returns errors etc regarding the whole multi stack.
+Problems still might have occurred on individual transfers even when this
 function returns \fICURLM_OK\fP.
 .SH "TYPICAL USAGE"
 Most applications will use \fIcurl_multi_fdset(3)\fP to get the multi_handle's
 file descriptors, then it'll wait for action on them using \fBselect(3)\fP and
 as soon as one or more of them are ready, \fIcurl_multi_perform(3)\fP gets
 called.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_perform.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_perform.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_perform.html	2009-11-04 20:29:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_perform.html	2010-02-09 18:07:34.000000000 +0800
@@ -46,15 +46,15 @@
 <p class="level0"><a name="NAME"></a><h2 class="nroffsh">NAME</h2>
 <p class="level0">curl_multi_perform - reads/writes available data from each easy handle <a name="SYNOPSIS"></a><h2 class="nroffsh">SYNOPSIS</h2>
 <p class="level0">#include &lt;curl/curl.h&gt; 
 <p class="level0">CURLMcode curl_multi_perform(CURLM *multi_handle, int *running_handles); 
 <p class="level0"><a name="DESCRIPTION"></a><h2 class="nroffsh">DESCRIPTION</h2>
 <p class="level0">When the app thinks there's data available for the multi_handle, it should call this function to read/write whatever there is to read or write right now. curl_multi_perform() returns as soon as the reads/writes are done. This function does not require that there actually is any data available for reading or that data can be written, it can be called just in case. It will write the number of handles that still transfer data in the second argument's integer-pointer. 
-<p class="level0">When you call curl_multi_perform() and the amount of <span Class="emphasis">running_handles</span> is changed from the previous call (or is less than the amount of easy handles you've added to the multi handle), you know that there is one or more transfers less "running". You can then call <a class="emphasis" href="./curl_multi_info_read.html">curl_multi_info_read(3)</a> to get information about each individual completed transfer, and that returned info includes CURLcode and more. 
+<p class="level0">When you call curl_multi_perform() and the amount of <span Class="emphasis">running_handles</span> is changed from the previous call (or is less than the amount of easy handles you've added to the multi handle), you know that there is one or more transfers less "running". You can then call <a class="emphasis" href="./curl_multi_info_read.html">curl_multi_info_read(3)</a> to get information about each individual completed transfer, and that returned info includes CURLcode and more. If an added handle fails very quickly, it may never be counted as a running_handle. 
 <p class="level0">When <span Class="emphasis">running_handles</span> is set to zero (0) on the return of this function, there is no longer any transfers in progress. <a name="RETURN"></a><h2 class="nroffsh">RETURN VALUE</h2>
 <p class="level0">CURLMcode type, general libcurl multi interface error code. 
-<p class="level0">If you receive <span Class="emphasis">CURLM_CALL_MULTI_PERFORM</span>, this basically means that you should call <span Class="emphasis">curl_multi_perform</span> again, before you select() on more actions. You don't have to do it immediately, but the return code means that libcurl may have more data available to return or that there may be more data to send off before it is "satisfied". Do note that <a class="emphasis" href="./curl_multi_perform.html">curl_multi_perform(3)</a> will return <span Class="emphasis">CURLM_CALL_MULTI_PERFORM</span> only when it wants to be called again <span Class="bold">immediately</span>. When things are fine and there is nothing immediate it wants done, it'll return <span Class="emphasis">CURLM_OK</span> and you need to wait for "action" and then call this function again. 
-<p class="level0">NOTE that this only returns errors etc regarding the whole multi stack. Problems still might have occurred on individual transfers even when this function returns <span Class="emphasis">CURLM_OK</span>. <a name="TYPICAL"></a><h2 class="nroffsh">TYPICAL USAGE</h2>
+<p class="level0">Before version 7.20.0: If you receive <span Class="emphasis">CURLM_CALL_MULTI_PERFORM</span>, this basically means that you should call <span Class="emphasis">curl_multi_perform</span> again, before you select() on more actions. You don't have to do it immediately, but the return code means that libcurl may have more data available to return or that there may be more data to send off before it is "satisfied". Do note that <a class="emphasis" href="./curl_multi_perform.html">curl_multi_perform(3)</a> will return <span Class="emphasis">CURLM_CALL_MULTI_PERFORM</span> only when it wants to be called again <span Class="bold">immediately</span>. When things are fine and there is nothing immediate it wants done, it'll return <span Class="emphasis">CURLM_OK</span> and you need to wait for "action" and then call this function again. 
+<p class="level0">This function only returns errors etc regarding the whole multi stack. Problems still might have occurred on individual transfers even when this function returns <span Class="emphasis">CURLM_OK</span>. <a name="TYPICAL"></a><h2 class="nroffsh">TYPICAL USAGE</h2>
 <p class="level0">Most applications will use <a class="emphasis" href="./curl_multi_fdset.html">curl_multi_fdset(3)</a> to get the multi_handle's file descriptors, then it'll wait for action on them using <span Class="bold">select(3)</span> and as soon as one or more of them are ready, <a class="emphasis" href="./curl_multi_perform.html">curl_multi_perform(3)</a> gets called. <a name="SEE"></a><h2 class="nroffsh">SEE ALSO</h2>
 <p class="level0"><a class="manpage" href="./curl_multi_cleanup.html">curl_multi_cleanup (3)</a> <a class="manpage" href="./curl_multi_init.html">  curl_multi_init (3)</a> <span Class="manpage"> </span> <a class="manpage" href="./curl_multi_fdset.html">curl_multi_fdset (3)</a> <a class="manpage" href="./curl_multi_info_read.html">  curl_multi_info_read (3)</a> <span Class="manpage"> </span> <span Class="manpage">libcurl-errors (3)</span> <p class="roffit">
  This HTML page was made with <a href="http://daniel.haxx.se/projects/roffit/">roffit</a>.
 </body></html>
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_perform.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_perform.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_remove_handle.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_remove_handle.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_setopt.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_setopt.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_socket_action.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_socket_action.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_socket_action.3	2009-05-12 04:32:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_socket_action.3	2010-02-02 05:42:44.000000000 +0800
@@ -1,7 +1,7 @@
-.\" $Id: curl_multi_socket_action.3,v 1.1 2009-05-11 20:32:51 bagder Exp $
+.\" $Id: curl_multi_socket_action.3,v 1.3 2010-02-01 21:42:44 bagder Exp $
 .\"
 .TH curl_multi_socket_action 3 "9 Jul 2006" "libcurl 7.16.0" "libcurl Manual"
 .SH NAME
 curl_multi_socket_action \- reads/writes available data given an action
 .SH SYNOPSIS
 .nf
@@ -19,14 +19,14 @@
 \fBev_bitmask\fP to 0, and then adding using bitwise OR (|) any combination of
 events to be chosen from CURL_CSELECT_IN, CURL_CSELECT_OUT or
 CURL_CSELECT_ERR. When the events on a socket are unknown, pass 0 instead, and
 libcurl will test the descriptor internally.
 
 At return, the integer \fBrunning_handles\fP points to will contain the number
-of still running easy handles within the multi handle. When this number
-reaches zero, all transfers are complete/done. Note that when you call
+of running easy handles within the multi handle. When this number reaches
+zero, all transfers are complete/done. When you call
 \fIcurl_multi_socket_action(3)\fP on a specific socket and the counter
 decreases by one, it DOES NOT necessarily mean that this exact socket/transfer
 is the one that completed. Use \fIcurl_multi_info_read(3)\fP to figure out
 which easy handle that completed.
 
 The \fBcurl_multi_socket_action(3)\fP functions inform the application about
@@ -86,25 +86,22 @@
 
 The \fIuserp\fP argument is a private pointer you have previously set with
 \fIcurl_multi_setopt(3)\fP and the CURLMOPT_SOCKETDATA option.
 .SH "RETURN VALUE"
 CURLMcode type, general libcurl multi interface error code.
 
-Legacy: If you receive \fICURLM_CALL_MULTI_PERFORM\fP, this basically means
-that you should call \fIcurl_multi_socket_action(3)\fP again, before you wait
-for more actions on libcurl's sockets. You don't have to do it immediately,
-but the return code means that libcurl may have more data available to return
-or that there may be more data to send off before it is "satisfied".
-
-In modern libcurls, \fICURLM_CALL_MULTI_PERFORM\fP or
-\fICURLM_CALL_MULTI_SOKCET\fP should not be returned and no application needs
-to care about them.
-
-NOTE that the return code is for the whole multi stack. Problems still might have
-occurred on individual transfers even when one of these functions
-return OK.
+Before version 7.20.0: If you receive \fICURLM_CALL_MULTI_PERFORM\fP, this
+basically means that you should call \fIcurl_multi_socket_action(3)\fP again
+before you wait for more actions on libcurl's sockets. You don't have to do it
+immediately, but the return code means that libcurl may have more data
+available to return or that there may be more data to send off before it is
+"satisfied".
+
+The return code from this function is for the whole multi stack.  Problems
+still might have occurred on individual transfers even when one of these
+functions return OK.
 .SH "TYPICAL USAGE"
 1. Create a multi handle
 
 2. Set the socket callback with CURLMOPT_SOCKETFUNCTION
 
 3. Set the timeout callback with CURLMOPT_TIMERFUNCTION, to get to know what
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_socket_action.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_socket_action.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_socket_action.html	2009-11-04 20:29:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_socket_action.html	2010-02-09 18:07:35.000000000 +0800
@@ -51,13 +51,13 @@
  &nbsp;                                  curl_socket_t sockfd, int ev_bitmask,
  &nbsp;                                  int *running_handles);
  </pre>
 
 <p class="level0"><a name="DESCRIPTION"></a><h2 class="nroffsh">DESCRIPTION</h2>
 <p class="level0">When the application has detected action on a socket handled by libcurl, it should call <a class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> with the <span Class="bold">sockfd</span> argument set to the socket with the action. When the events on a socket are known, they can be passed as an events bitmask <span Class="bold">ev_bitmask</span> by first setting <span Class="bold">ev_bitmask</span> to 0, and then adding using bitwise OR (|) any combination of events to be chosen from CURL_CSELECT_IN, CURL_CSELECT_OUT or CURL_CSELECT_ERR. When the events on a socket are unknown, pass 0 instead, and libcurl will test the descriptor internally. 
-<p class="level0">At return, the integer <span Class="bold">running_handles</span> points to will contain the number of still running easy handles within the multi handle. When this number reaches zero, all transfers are complete/done. Note that when you call <a class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> on a specific socket and the counter decreases by one, it DOES NOT necessarily mean that this exact socket/transfer is the one that completed. Use <a class="emphasis" href="./curl_multi_info_read.html">curl_multi_info_read(3)</a> to figure out which easy handle that completed. 
+<p class="level0">At return, the integer <span Class="bold">running_handles</span> points to will contain the number of running easy handles within the multi handle. When this number reaches zero, all transfers are complete/done. When you call <a class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> on a specific socket and the counter decreases by one, it DOES NOT necessarily mean that this exact socket/transfer is the one that completed. Use <a class="emphasis" href="./curl_multi_info_read.html">curl_multi_info_read(3)</a> to figure out which easy handle that completed. 
 <p class="level0">The <a class="bold" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> functions inform the application about updates in the socket (file descriptor) status by doing none, one, or multiple calls to the socket callback function set with the CURLMOPT_SOCKETFUNCTION option to <a class="emphasis" href="./curl_multi_setopt.html">curl_multi_setopt(3)</a>. They update the status with changes since the previous time the callback was called. 
 <p class="level0">Get the timeout time by setting the <span Class="emphasis">CURLMOPT_TIMERFUNCTION</span> option with <a class="emphasis" href="./curl_multi_setopt.html">curl_multi_setopt(3)</a>. Your application will then get called with information on how long to wait for socket actions at most before doing the timeout action: call the <a class="bold" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> function with the <span Class="bold">sockfd</span> argument set to CURL_SOCKET_TIMEOUT. You can also use the <a class="emphasis" href="./curl_multi_timeout.html">curl_multi_timeout(3)</a> function to poll the value at any given time, but for an event-based system using the callback is far better than relying on polling the timeout value. <a name="CALLBACK"></a><h2 class="nroffsh">CALLBACK DETAILS</h2>
 <p class="level0">
 <p class="level0">The socket <span Class="bold">callback</span> function uses a prototype like this <pre>
 <p class="level0"><p class="level0">&nbsp; int curl_socket_callback(CURL *easy,      /* easy handle */
  &nbsp;                          curl_socket_t s, /* socket */
@@ -82,15 +82,14 @@
 <p class="level0"><a name="CURLPOLLREMOVE"></a><span class="nroffip">CURL_POLL_REMOVE (4)</span> 
 <p class="level1">unregister 
 <p class="level0">
 <p class="level0">The <span Class="emphasis">socketp</span> argument is a private pointer you have previously set with <a class="emphasis" href="./curl_multi_assign.html">curl_multi_assign(3)</a> to be associated with the <span Class="emphasis">s</span> socket. If no pointer has been set, socketp will be NULL. This argument is of course a service to applications that want to keep certain data or structs that are strictly associated to the given socket. 
 <p class="level0">The <span Class="emphasis">userp</span> argument is a private pointer you have previously set with <a class="emphasis" href="./curl_multi_setopt.html">curl_multi_setopt(3)</a> and the CURLMOPT_SOCKETDATA option. <a name="RETURN"></a><h2 class="nroffsh">RETURN VALUE</h2>
 <p class="level0">CURLMcode type, general libcurl multi interface error code. 
-<p class="level0">Legacy: If you receive <span Class="emphasis">CURLM_CALL_MULTI_PERFORM</span>, this basically means that you should call <a class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> again, before you wait for more actions on libcurl's sockets. You don't have to do it immediately, but the return code means that libcurl may have more data available to return or that there may be more data to send off before it is "satisfied". 
-<p class="level0">In modern libcurls, <span Class="emphasis">CURLM_CALL_MULTI_PERFORM</span> or <span Class="emphasis">CURLM_CALL_MULTI_SOKCET</span> should not be returned and no application needs to care about them. 
-<p class="level0">NOTE that the return code is for the whole multi stack. Problems still might have occurred on individual transfers even when one of these functions return OK. <a name="TYPICAL"></a><h2 class="nroffsh">TYPICAL USAGE</h2>
+<p class="level0">Before version 7.20.0: If you receive <span Class="emphasis">CURLM_CALL_MULTI_PERFORM</span>, this basically means that you should call <a class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> again before you wait for more actions on libcurl's sockets. You don't have to do it immediately, but the return code means that libcurl may have more data available to return or that there may be more data to send off before it is "satisfied". 
+<p class="level0">The return code from this function is for the whole multi stack.  Problems still might have occurred on individual transfers even when one of these functions return OK. <a name="TYPICAL"></a><h2 class="nroffsh">TYPICAL USAGE</h2>
 <p class="level0">1. Create a multi handle 
 <p class="level0">2. Set the socket callback with CURLMOPT_SOCKETFUNCTION 
 <p class="level0">3. Set the timeout callback with CURLMOPT_TIMERFUNCTION, to get to know what timeout value to use when waiting for socket activities. 
 <p class="level0">4. Add easy handles with curl_multi_add_handle() 
 <p class="level0">5. Provide some means to manage the sockets libcurl is using, so you can check them for activity. This can be done through your application code, or by way of an external library such as libevent or glib. 
 <p class="level0">6. Wait for activity on any of libcurl's sockets, use the timeout value your callback has been told 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_socket_action.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_socket_action.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_socket.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_socket.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_strerror.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_strerror.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_multi_timeout.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_multi_timeout.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_share_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_share_cleanup.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_share_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_share_init.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_share_setopt.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_share_setopt.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_share_strerror.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_share_strerror.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_slist_append.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_slist_append.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_slist_free_all.pdf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_slist_free_all.pdf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_slist_free_all.pdf	2009-11-04 20:29:23.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_slist_free_all.pdf	2010-02-09 18:07:41.000000000 +0800
@@ -61,29 +61,29 @@
 <</Type/Metadata
 /Subtype/XML/Length 1321>>stream
 <?xpacket begin='ï»¿' id='W5M0MpCehiHzreSzNTczkc9d'?>
 <?adobe-xap-filters esc="CRLF"?>
 <x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
 <rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
-<rdf:Description rdf:about='3b58ae41-015a-11ea-0000-0d90648fa894' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 8.70'/>
-<rdf:Description rdf:about='3b58ae41-015a-11ea-0000-0d90648fa894' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2009-11-04T13:29:23+01:00</xmp:ModifyDate>
-<xmp:CreateDate>2009-11-04T13:29:23+01:00</xmp:CreateDate>
+<rdf:Description rdf:about='81d5764c-4d7f-11ea-0000-0d90648fa894' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 8.70'/>
+<rdf:Description rdf:about='81d5764c-4d7f-11ea-0000-0d90648fa894' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2010-02-09T11:07:41+01:00</xmp:ModifyDate>
+<xmp:CreateDate>2010-02-09T11:07:41+01:00</xmp:CreateDate>
 <xmp:CreatorTool>groff version 1.20.1</xmp:CreatorTool></rdf:Description>
-<rdf:Description rdf:about='3b58ae41-015a-11ea-0000-0d90648fa894' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='3b58ae41-015a-11ea-0000-0d90648fa894'/>
-<rdf:Description rdf:about='3b58ae41-015a-11ea-0000-0d90648fa894' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
+<rdf:Description rdf:about='81d5764c-4d7f-11ea-0000-0d90648fa894' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='81d5764c-4d7f-11ea-0000-0d90648fa894'/>
+<rdf:Description rdf:about='81d5764c-4d7f-11ea-0000-0d90648fa894' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
 </rdf:RDF>
 </x:xmpmeta>
                                                                         
                                                                         
 <?xpacket end='w'?>
 endstream
 endobj
 2 0 obj
 <</Producer(GPL Ghostscript 8.70)
-/CreationDate(D:20091104132923+01'00')
-/ModDate(D:20091104132923+01'00')
+/CreationDate(D:20100209110741+01'00')
+/ModDate(D:20100209110741+01'00')
 /Creator(groff version 1.20.1)>>endobj
 xref
 0 14
 0000000000 65535 f 
 0000000870 00000 n 
 0000002653 00000 n 
@@ -97,11 +97,11 @@
 0000001122 00000 n 
 0000000976 00000 n 
 0000001006 00000 n 
 0000001255 00000 n 
 trailer
 << /Size 14 /Root 1 0 R /Info 2 0 R
-/ID [<48C8889A8CA213EF12C04D0F3B29B600><48C8889A8CA213EF12C04D0F3B29B600>]
+/ID [<CC65A72B756C870AD8DBCD48EA64EC62><CC65A72B756C870AD8DBCD48EA64EC62>]
 >>
 startxref
 2807
 %%EOF
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_strequal.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_strequal.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_unescape.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_unescape.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_version_info.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_version_info.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/curl_version.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/curl_version.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl-easy.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl-easy.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl-errors.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl-errors.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl-errors.3	2008-12-30 05:13:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl-errors.3	2010-01-23 04:33:05.000000000 +0800
@@ -2,29 +2,29 @@
 .\" *                                  _   _ ____  _
 .\" *  Project                     ___| | | |  _ \| |
 .\" *                             / __| | | | |_) | |
 .\" *                            | (__| |_| |  _ <| |___
 .\" *                             \___|\___/|_| \_\_____|
 .\" *
-.\" * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.
+.\" * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
 .\" *
 .\" * This software is licensed as described in the file COPYING, which
 .\" * you should have received as part of this distribution. The terms
 .\" * are also available at http://curl.haxx.se/docs/copyright.html.
 .\" *
 .\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
 .\" * copies of the Software, and permit persons to whom the Software is
 .\" * furnished to do so, under the terms of the COPYING file.
 .\" *
 .\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 .\" * KIND, either express or implied.
 .\" *
-.\" * $Id: libcurl-errors.3,v 1.35 2008-12-28 21:56:56 bagder Exp $
+.\" * $Id: libcurl-errors.3,v 1.38 2010-01-22 13:14:51 bagder Exp $
 .\" **************************************************************************
 .\"
-.TH libcurl-errors 3 "8 Jun 2008" "libcurl 7.19.0" "libcurl errors"
+.TH libcurl-errors 3 "1 Jan 2010" "libcurl 7.20.0" "libcurl errors"
 .SH NAME
 libcurl-errors \- error codes in libcurl
 .SH DESCRIPTION
 This man page includes most, if not all, available error codes in libcurl.
 Why they occur and possibly what you can do to fix the problem are also included.
 .SH "CURLcode"
@@ -67,12 +67,17 @@
 .IP "CURLE_FTP_WEIRD_PASV_REPLY (13)"
 libcurl failed to get a sensible result back from the server as a response to
 either a PASV or a EPSV command. The server is flawed.
 .IP "CURLE_FTP_WEIRD_227_FORMAT (14)"
 FTP servers return a 227-line as a response to a PASV command. If libcurl
 fails to parse that line, this return code is passed back.
+.IP "CURLE_FTP_PRET_FAILED (84)"
+The FTP server does not understand the PRET command at all or does not support
+the given argument. Be careful when using \fICURLOPT_CUSTOMREQUEST\fP, a
+custom LIST command will be sent with PRET CMD before PASV as well. (Added in
+7.20.0)
 .IP "CURLE_FTP_CANT_GET_HOST (15)"
 An internal failure to lookup the host used for the new connection.
 .IP "CURLE_FTP_COULDNT_SET_TYPE (17)"
 Received an error when trying to set the transfer mode to binary or ASCII.
 .IP "CURLE_PARTIAL_FILE (18)"
 A file transfer was shorter or larger than expected. This happens when the
@@ -84,21 +89,19 @@
 .IP "CURLE_QUOTE_ERROR (21)"
 When sending custom "QUOTE" commands to the remote server, one of the commands
 returned an error code that was 400 or higher (for FTP) or otherwise
 indicated unsuccessful completion of the command.
 .IP "CURLE_HTTP_RETURNED_ERROR (22)"
 This is returned if CURLOPT_FAILONERROR is set TRUE and the HTTP server
-returns an error code that is >= 400. (This error code was formerly known as
-CURLE_HTTP_NOT_FOUND.)
+returns an error code that is >= 400.
 .IP "CURLE_WRITE_ERROR (23)"
 An error occurred when writing received data to a local file, or an error was
 returned to libcurl from a write callback.
 .IP "CURLE_UPLOAD_FAILED (25)"
 Failed starting the upload. For FTP, the server typically denied the STOR
 command. The error buffer usually contains the server's explanation for this.
-(This error code was formerly known as CURLE_FTP_COULDNT_STOR_FILE.)
 .IP "CURLE_READ_ERROR (26)"
 There was a problem reading a local file or an error returned by the read
 callback.
 .IP "CURLE_OUT_OF_MEMORY (27)"
 A memory allocation request failed. This is serious badness and
 things are severely screwed up if this ever occurs.
@@ -117,14 +120,15 @@
 This is an odd error that mainly occurs due to internal confusion.
 .IP "CURLE_SSL_CONNECT_ERROR (35)"
 A problem occurred somewhere in the SSL/TLS handshake. You really want the
 error buffer and read the message there as it pinpoints the problem slightly
 more. Could be certificates (file formats, paths, permissions), passwords, and
 others.
-.IP "CURLE_FTP_BAD_DOWNLOAD_RESUME (36)"
-Attempting FTP resume beyond file size.
+.IP "CURLE_BAD_DOWNLOAD_RESUME (36)"
+The download could not be resumed because the specified offset was out of the
+file boundary.
 .IP "CURLE_FILE_COULDNT_READ_FILE (37)"
 A file given with FILE:// couldn't be opened. Most likely because the file
 path doesn't identify an existing file. Did you check file permissions?
 .IP "CURLE_LDAP_CANNOT_BIND (38)"
 LDAP cannot bind. LDAP bind operation failed.
 .IP "CURLE_LDAP_SEARCH_FAILED (39)"
@@ -135,14 +139,13 @@
 Aborted by callback. A callback returned "abort" to libcurl.
 .IP "CURLE_BAD_FUNCTION_ARGUMENT (43)"
 Internal error. A function was called with a bad parameter.
 .IP "CURLE_INTERFACE_FAILED (45)"
 Interface error. A specified outgoing interface could not be used. Set which
 interface to use for outgoing connections' source IP address with
-CURLOPT_INTERFACE. (This error code was formerly known as
-CURLE_HTTP_PORT_FAILED.)
+CURLOPT_INTERFACE.
 .IP "CURLE_TOO_MANY_REDIRECTS (47)"
 Too many redirects. When following redirects, libcurl hit the maximum amount.
 Set your limit with CURLOPT_MAXREDIRS.
 .IP "CURLE_UNKNOWN_TELNET_OPTION (48)"
 An option set with CURLOPT_TELNETOPTIONS was not recognized/known. Refer to
 the appropriate documentation.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl-errors.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl-errors.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl-errors.html	2009-11-04 20:29:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl-errors.html	2010-02-09 18:07:35.000000000 +0800
@@ -69,28 +69,30 @@
 <p class="level0"><a name="CURLEFTPWEIRDPASSREPLY"></a><span class="nroffip">CURLE_FTP_WEIRD_PASS_REPLY (11)</span> 
 <p class="level1">After having sent the FTP password to the server, libcurl expects a proper reply. This error code indicates that an unexpected code was returned. 
 <p class="level0"><a name="CURLEFTPWEIRDPASVREPLY"></a><span class="nroffip">CURLE_FTP_WEIRD_PASV_REPLY (13)</span> 
 <p class="level1">libcurl failed to get a sensible result back from the server as a response to either a PASV or a EPSV command. The server is flawed. 
 <p class="level0"><a name="CURLEFTPWEIRD227FORMAT"></a><span class="nroffip">CURLE_FTP_WEIRD_227_FORMAT (14)</span> 
 <p class="level1">FTP servers return a 227-line as a response to a PASV command. If libcurl fails to parse that line, this return code is passed back. 
+<p class="level0"><a name="CURLEFTPPRETFAILED"></a><span class="nroffip">CURLE_FTP_PRET_FAILED (84)</span> 
+<p class="level1">The FTP server does not understand the PRET command at all or does not support the given argument. Be careful when using <span Class="emphasis">CURLOPT_CUSTOMREQUEST</span>, a custom LIST command will be sent with PRET CMD before PASV as well. (Added in 7.20.0) 
 <p class="level0"><a name="CURLEFTPCANTGETHOST"></a><span class="nroffip">CURLE_FTP_CANT_GET_HOST (15)</span> 
 <p class="level1">An internal failure to lookup the host used for the new connection. 
 <p class="level0"><a name="CURLEFTPCOULDNTSETTYPE"></a><span class="nroffip">CURLE_FTP_COULDNT_SET_TYPE (17)</span> 
 <p class="level1">Received an error when trying to set the transfer mode to binary or ASCII. 
 <p class="level0"><a name="CURLEPARTIALFILE"></a><span class="nroffip">CURLE_PARTIAL_FILE (18)</span> 
 <p class="level1">A file transfer was shorter or larger than expected. This happens when the server first reports an expected transfer size, and then delivers data that doesn't match the previously given size. 
 <p class="level0"><a name="CURLEFTPCOULDNTRETRFILE"></a><span class="nroffip">CURLE_FTP_COULDNT_RETR_FILE (19)</span> 
 <p class="level1">This was either a weird reply to a 'RETR' command or a zero byte transfer complete. 
 <p class="level0"><a name="CURLEQUOTEERROR"></a><span class="nroffip">CURLE_QUOTE_ERROR (21)</span> 
 <p class="level1">When sending custom "QUOTE" commands to the remote server, one of the commands returned an error code that was 400 or higher (for FTP) or otherwise indicated unsuccessful completion of the command. 
 <p class="level0"><a name="CURLEHTTPRETURNEDERROR"></a><span class="nroffip">CURLE_HTTP_RETURNED_ERROR (22)</span> 
-<p class="level1">This is returned if CURLOPT_FAILONERROR is set TRUE and the HTTP server returns an error code that is &gt;= 400. (This error code was formerly known as CURLE_HTTP_NOT_FOUND.) 
+<p class="level1">This is returned if CURLOPT_FAILONERROR is set TRUE and the HTTP server returns an error code that is &gt;= 400. 
 <p class="level0"><a name="CURLEWRITEERROR"></a><span class="nroffip">CURLE_WRITE_ERROR (23)</span> 
 <p class="level1">An error occurred when writing received data to a local file, or an error was returned to libcurl from a write callback. 
 <p class="level0"><a name="CURLEUPLOADFAILED"></a><span class="nroffip">CURLE_UPLOAD_FAILED (25)</span> 
-<p class="level1">Failed starting the upload. For FTP, the server typically denied the STOR command. The error buffer usually contains the server's explanation for this. (This error code was formerly known as CURLE_FTP_COULDNT_STOR_FILE.) 
+<p class="level1">Failed starting the upload. For FTP, the server typically denied the STOR command. The error buffer usually contains the server's explanation for this. 
 <p class="level0"><a name="CURLEREADERROR"></a><span class="nroffip">CURLE_READ_ERROR (26)</span> 
 <p class="level1">There was a problem reading a local file or an error returned by the read callback. 
 <p class="level0"><a name="CURLEOUTOFMEMORY"></a><span class="nroffip">CURLE_OUT_OF_MEMORY (27)</span> 
 <p class="level1">A memory allocation request failed. This is serious badness and things are severely screwed up if this ever occurs. 
 <p class="level0"><a name="CURLEOPERATIONTIMEDOUT"></a><span class="nroffip">CURLE_OPERATION_TIMEDOUT (28)</span> 
 <p class="level1">Operation timeout. The specified time-out period was reached according to the conditions. 
@@ -101,14 +103,14 @@
 <p class="level0"><a name="CURLERANGEERROR"></a><span class="nroffip">CURLE_RANGE_ERROR (33)</span> 
 <p class="level1">The server does not support or accept range requests. 
 <p class="level0"><a name="CURLEHTTPPOSTERROR"></a><span class="nroffip">CURLE_HTTP_POST_ERROR (34)</span> 
 <p class="level1">This is an odd error that mainly occurs due to internal confusion. 
 <p class="level0"><a name="CURLESSLCONNECTERROR"></a><span class="nroffip">CURLE_SSL_CONNECT_ERROR (35)</span> 
 <p class="level1">A problem occurred somewhere in the SSL/TLS handshake. You really want the error buffer and read the message there as it pinpoints the problem slightly more. Could be certificates (file formats, paths, permissions), passwords, and others. 
-<p class="level0"><a name="CURLEFTPBADDOWNLOADRESUME"></a><span class="nroffip">CURLE_FTP_BAD_DOWNLOAD_RESUME (36)</span> 
-<p class="level1">Attempting FTP resume beyond file size. 
+<p class="level0"><a name="CURLEBADDOWNLOADRESUME"></a><span class="nroffip">CURLE_BAD_DOWNLOAD_RESUME (36)</span> 
+<p class="level1">The download could not be resumed because the specified offset was out of the file boundary. 
 <p class="level0"><a name="CURLEFILECOULDNTREADFILE"></a><span class="nroffip">CURLE_FILE_COULDNT_READ_FILE (37)</span> 
 <p class="level1">A file given with FILE:// couldn't be opened. Most likely because the file path doesn't identify an existing file. Did you check file permissions? 
 <p class="level0"><a name="CURLELDAPCANNOTBIND"></a><span class="nroffip">CURLE_LDAP_CANNOT_BIND (38)</span> 
 <p class="level1">LDAP cannot bind. LDAP bind operation failed. 
 <p class="level0"><a name="CURLELDAPSEARCHFAILED"></a><span class="nroffip">CURLE_LDAP_SEARCH_FAILED (39)</span> 
 <p class="level1">LDAP search failed. 
@@ -116,13 +118,13 @@
 <p class="level1">Function not found. A required zlib function was not found. 
 <p class="level0"><a name="CURLEABORTEDBYCALLBACK"></a><span class="nroffip">CURLE_ABORTED_BY_CALLBACK (42)</span> 
 <p class="level1">Aborted by callback. A callback returned "abort" to libcurl. 
 <p class="level0"><a name="CURLEBADFUNCTIONARGUMENT"></a><span class="nroffip">CURLE_BAD_FUNCTION_ARGUMENT (43)</span> 
 <p class="level1">Internal error. A function was called with a bad parameter. 
 <p class="level0"><a name="CURLEINTERFACEFAILED"></a><span class="nroffip">CURLE_INTERFACE_FAILED (45)</span> 
-<p class="level1">Interface error. A specified outgoing interface could not be used. Set which interface to use for outgoing connections' source IP address with CURLOPT_INTERFACE. (This error code was formerly known as CURLE_HTTP_PORT_FAILED.) 
+<p class="level1">Interface error. A specified outgoing interface could not be used. Set which interface to use for outgoing connections' source IP address with CURLOPT_INTERFACE. 
 <p class="level0"><a name="CURLETOOMANYREDIRECTS"></a><span class="nroffip">CURLE_TOO_MANY_REDIRECTS (47)</span> 
 <p class="level1">Too many redirects. When following redirects, libcurl hit the maximum amount. Set your limit with CURLOPT_MAXREDIRS. 
 <p class="level0"><a name="CURLEUNKNOWNTELNETOPTION"></a><span class="nroffip">CURLE_UNKNOWN_TELNET_OPTION (48)</span> 
 <p class="level1">An option set with CURLOPT_TELNETOPTIONS was not recognized/known. Refer to the appropriate documentation. 
 <p class="level0"><a name="CURLETELNETOPTIONSYNTAX"></a><span class="nroffip">CURLE_TELNET_OPTION_SYNTAX (49)</span> 
 <p class="level1">A telnet option string was Illegally formatted. 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl-errors.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl-errors.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl.m4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl.m4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl.m4	2007-02-19 20:34:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl.m4	2010-01-22 20:26:53.000000000 +0800
@@ -52,12 +52,16 @@
   AH_TEMPLATE([LIBCURL_PROTOCOL_FTPS],[Defined if libcurl supports FTPS])
   AH_TEMPLATE([LIBCURL_PROTOCOL_FILE],[Defined if libcurl supports FILE])
   AH_TEMPLATE([LIBCURL_PROTOCOL_TELNET],[Defined if libcurl supports TELNET])
   AH_TEMPLATE([LIBCURL_PROTOCOL_LDAP],[Defined if libcurl supports LDAP])
   AH_TEMPLATE([LIBCURL_PROTOCOL_DICT],[Defined if libcurl supports DICT])
   AH_TEMPLATE([LIBCURL_PROTOCOL_TFTP],[Defined if libcurl supports TFTP])
+  AH_TEMPLATE([LIBCURL_PROTOCOL_RTSP],[Defined if libcurl supports RTSP])
+  AH_TEMPLATE([LIBCURL_PROTOCOL_POP3],[Defined if libcurl supports POP3])
+  AH_TEMPLATE([LIBCURL_PROTOCOL_IMAP],[Defined if libcurl supports IMAP])
+  AH_TEMPLATE([LIBCURL_PROTOCOL_SMTP],[Defined if libcurl supports SMTP])
 
   AC_ARG_WITH(libcurl,
      AC_HELP_STRING([--with-libcurl=DIR],[look for the curl library in DIR]),
      [_libcurl_with=$withval],[_libcurl_with=ifelse([$1],,[yes],[$1])])
 
   if test "$_libcurl_with" != "no" ; then
@@ -191,23 +195,29 @@
            done
 
 	   if test "x$_libcurl_protocols" = "x" ; then
 
 	      # We don't have --protocols, so just assume that all
 	      # protocols are available
-	      _libcurl_protocols="HTTP FTP FILE TELNET LDAP DICT"
+	      _libcurl_protocols="HTTP FTP FILE TELNET LDAP DICT TFTP
 
 	      if test x$libcurl_feature_SSL = xyes ; then
 	         _libcurl_protocols="$_libcurl_protocols HTTPS"
 
 		 # FTPS wasn't standards-compliant until version
-		 # 7.11.0
+		 # 7.11.0 (0x070b00 == 461568)
 		 if test $_libcurl_version -ge 461568; then
 		    _libcurl_protocols="$_libcurl_protocols FTPS"
 		 fi
 	      fi
+
+	      # RTSP, IMAP, POP3 and SMTP were added in
+              # 7.20.0 (0x071400 == 463872)
+	      if test $_libcurl_version -ge 463872; then
+		  _libcurl_protocols="$_libcurl_protocols RTSP IMAP POP3 SMTP"
+	      fi
 	   fi
 
 	   for _libcurl_protocol in $_libcurl_protocols ; do
 	      AC_DEFINE_UNQUOTED(AS_TR_CPP(libcurl_protocol_$_libcurl_protocol),[1])
 	      eval AS_TR_SH(libcurl_protocol_$_libcurl_protocol)=yes
            done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl-multi.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl-multi.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl-multi.3	2009-06-16 04:49:23.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl-multi.3	2010-01-22 20:13:21.000000000 +0800
@@ -15,13 +15,13 @@
 .\" * copies of the Software, and permit persons to whom the Software is
 .\" * furnished to do so, under the terms of the COPYING file.
 .\" *
 .\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 .\" * KIND, either express or implied.
 .\" *
-.\" * $Id: libcurl-multi.3,v 1.23 2009-06-15 20:49:23 bagder Exp $
+.\" * $Id: libcurl-multi.3,v 1.24 2009-11-11 14:54:45 bagder Exp $
 .\" **************************************************************************
 .\"
 .TH libcurl-multi 3 "3 Feb 2007" "libcurl 7.16.0" "libcurl multi interface"
 .SH NAME
 libcurl-multi \- how to use the multi interface
 .SH DESCRIPTION
@@ -131,12 +131,13 @@
 multi interface. While we certainly want and intend for these to get fixed in
 the future, you should be aware of the following current restrictions:
 
 .nf
  - Name resolves on non-windows unless c-ares is used
  - GnuTLS SSL connections
+ - NSS SSL connections
  - Active FTP connections
  - HTTP proxy CONNECT operations
  - SOCKS proxy handshakes
  - TFTP transfers
  - file:// transfers
  - TELNET transfers
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl-multi.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl-multi.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl-multi.html	2009-11-04 20:29:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl-multi.html	2010-02-09 18:07:34.000000000 +0800
@@ -66,12 +66,13 @@
 <p class="level0">Since 7.16.0, the <a class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> function offers a way for applications to not only avoid being forced to use select(), but it also offers a much more high-performance API that will make a significant difference for applications using large numbers of simultaneous connections. 
 <p class="level0"><a class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> is then used instead of <a class="emphasis" href="./curl_multi_perform.html">curl_multi_perform(3)</a>. <a name="BLOCKING"></a><h2 class="nroffsh">BLOCKING</h2>
 <p class="level0">A few areas in the code are still using blocking code, even when used from the multi interface. While we certainly want and intend for these to get fixed in the future, you should be aware of the following current restrictions: 
 <p class="level0"><pre>
 <p class="level0">&nbsp;- Name resolves on non-windows unless c-ares is used
  &nbsp;- GnuTLS SSL connections
+ &nbsp;- NSS SSL connections
  &nbsp;- Active FTP connections
  &nbsp;- HTTP proxy CONNECT operations
  &nbsp;- SOCKS proxy handshakes
  &nbsp;- TFTP transfers
  &nbsp;- file:// transfers
  &nbsp;- TELNET transfers
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl-multi.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl-multi.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl-share.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl-share.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/libcurl-tutorial.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/libcurl-tutorial.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/Makefile.in	2009-11-04 20:26:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/Makefile.in	2010-02-05 05:42:19.000000000 +0800
@@ -76,26 +76,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -106,13 +111,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -172,12 +176,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/symbols-in-versions /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/symbols-in-versions
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/libcurl/symbols-in-versions	2009-06-11 02:04:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/libcurl/symbols-in-versions	2010-02-02 20:57:54.000000000 +0800
@@ -34,23 +34,25 @@
 CURLE_COULDNT_RESOLVE_HOST      7.1
 CURLE_COULDNT_RESOLVE_PROXY     7.1
 CURLE_FAILED_INIT               7.1
 CURLE_FILESIZE_EXCEEDED         7.10.8
 CURLE_FILE_COULDNT_READ_FILE    7.1
 CURLE_FTP_ACCESS_DENIED         7.1
-CURLE_FTP_BAD_DOWNLOAD_RESUME   7.1
+CURLE_FTP_BAD_DOWNLOAD_RESUME   7.1           7.1
 CURLE_FTP_CANT_GET_HOST         7.1
 CURLE_FTP_CANT_RECONNECT        7.1           7.17.0
 CURLE_FTP_COULDNT_GET_SIZE      7.1           7.17.0
 CURLE_FTP_COULDNT_RETR_FILE     7.1
 CURLE_FTP_COULDNT_SET_ASCII     7.1           7.17.0
 CURLE_FTP_COULDNT_SET_BINARY    7.1           7.17.0
 CURLE_FTP_COULDNT_SET_TYPE      7.17.0
 CURLE_FTP_COULDNT_STOR_FILE     7.1
 CURLE_FTP_COULDNT_USE_REST      7.1
+CURLE_FTP_PARTIAL_FILE          7.1           7.1
 CURLE_FTP_PORT_FAILED           7.1
+CURLE_FTP_PRET_FAILED           7.20.0
 CURLE_FTP_QUOTE_ERROR           7.1           7.17.0
 CURLE_FTP_SSL_FAILED            -             7.17.0
 CURLE_FTP_USER_PASSWORD_INCORRECT 7.1         7.17.0
 CURLE_FTP_WEIRD_227_FORMAT      7.1
 CURLE_FTP_WEIRD_PASS_REPLY      7.1
 CURLE_FTP_WEIRD_PASV_REPLY      7.1
@@ -71,32 +73,34 @@
 CURLE_MALFORMAT_USER            7.1           7.17.0
 CURLE_OK                        7.1
 CURLE_OPERATION_TIMEDOUT        7.17.0
 CURLE_OPERATION_TIMEOUTED       7.1           7.17.0
 CURLE_OUT_OF_MEMORY             7.1
 CURLE_PARTIAL_FILE              7.1
-CURLE_PEER_FAILED_VERIFICATION  -             7.17.1
+CURLE_PEER_FAILED_VERIFICATION  7.17.1
 CURLE_QUOTE_ERROR               7.17.0
 CURLE_RANGE_ERROR               7.17.0
 CURLE_READ_ERROR                7.1
 CURLE_RECV_ERROR                7.13.0
 CURLE_REMOTE_ACCESS_DENIED      7.17.0
 CURLE_REMOTE_DISK_FULL          7.17.0
+CURLE_RTSP_CSEQ_ERROR           7.20.0
+CURLE_RTSP_SESSION_ERROR        7.20.0
 CURLE_SEND_ERROR                7.13.0
 CURLE_SHARE_IN_USE              -             7.17.0
 CURLE_SSH                       7.16.1
 CURLE_SSL_CACERT                7.10
 CURLE_SSL_CERTPROBLEM           7.10
 CURLE_SSL_CIPHER                7.10
 CURLE_SSL_CONNECT_ERROR         7.1
 CURLE_SSL_CRL_BADFILE           7.19.0
 CURLE_SSL_ENGINE_INITFAILED     7.13.0
 CURLE_SSL_ENGINE_NOTFOUND       7.9.3
 CURLE_SSL_ENGINE_SETFAILED      7.9.3
 CURLE_SSL_ISSUER_ERROR          7.19.0
-CURLE_SSL_PEER_CERTIFICATE      7.17.1
+CURLE_SSL_PEER_CERTIFICATE      -             7.17.1
 CURLE_SSL_SHUTDOWN_FAILED       7.16.1
 CURLE_TELNET_OPTION_SYNTAX      7.7
 CURLE_TFTP_DISKFULL             7.15.0        7.17.0
 CURLE_TFTP_EXISTS               7.15.0        7.17.0
 CURLE_TFTP_ILLEGAL              7.15.0
 CURLE_TFTP_NOSUCHUSER           7.15.0
@@ -228,13 +232,23 @@
 CURLOPT_FTP_RESPONSE_TIMEOUT    7.10.8
 CURLOPT_FTP_SKIP_PASV_IP        7.15.0
 CURLOPT_FTP_SSL                 7.11.0        7.16.4
 CURLOPT_FTP_SSL_CCC             7.16.1
 CURLOPT_FTP_USE_EPRT            7.10.5
 CURLOPT_FTP_USE_EPSV            7.9.2
+CURLOPT_FTP_USE_PRET            7.20.0
+CURLOPT_RTSP_REQUEST            7.20.0
+CURLOPT_RTSP_SESSION_ID         7.20.0
+CURLOPT_RTSP_STREAM_URI         7.20.0
+CURLOPT_RTSP_TRANSPORT          7.20.0
+CURLOPT_RTSP_CLIENT_CSEQ        7.20.0
+CURLOPT_RTSP_SERVER_CSEQ        7.20.0
+CURLOPT_INTERLEAVEDATA          7.20.0
+CURLOPT_INTERLEAVEFUNCTION      7.20.0
 CURLOPT_HEADER                  7.1
+CURLOPT_HEADERDATA              7.10
 CURLOPT_HEADERFUNCTION          7.7.2
 CURLOPT_HTTP200ALIASES          7.10.3
 CURLOPT_HTTPAUTH                7.10.6
 CURLOPT_HTTPGET                 7.8.1
 CURLOPT_HTTPHEADER              7.1
 CURLOPT_HTTPPOST                7.1
@@ -256,12 +270,14 @@
 CURLOPT_KRB4LEVEL               7.3           7.17.0
 CURLOPT_KRBLEVEL                7.17.0
 CURLOPT_LOCALPORT               7.15.2
 CURLOPT_LOCALPORTRANGE          7.15.2
 CURLOPT_LOW_SPEED_LIMIT         7.1
 CURLOPT_LOW_SPEED_TIME          7.1
+CURLOPT_MAIL_FROM               7.20.0
+CURLOPT_MAIL_RCPT               7.20.0
 CURLOPT_MAXCONNECTS             7.7
 CURLOPT_MAXFILESIZE             7.10.8
 CURLOPT_MAXFILESIZE_LARGE       7.11.0
 CURLOPT_MAXREDIRS               7.5
 CURLOPT_MAX_RECV_SPEED_LARGE    7.15.5
 CURLOPT_MAX_SEND_SPEED_LARGE    7.15.5
@@ -371,16 +387,23 @@
 CURLPROTO_DICT                  7.19.4
 CURLPROTO_FILE                  7.19.4
 CURLPROTO_FTP                   7.19.4
 CURLPROTO_FTPS                  7.19.4
 CURLPROTO_HTTP                  7.19.4
 CURLPROTO_HTTPS                 7.19.4
+CURLPROTO_IMAP                  7.20.0
+CURLPROTO_IMAPS                 7.20.0
 CURLPROTO_LDAP                  7.19.4
 CURLPROTO_LDAPS                 7.19.4
+CURLPROTO_POP3                  7.20.0
+CURLPROTO_POP3S                 7.20.0
+CURLPROTO_RTSP                  7.20.0
 CURLPROTO_SCP                   7.19.4
 CURLPROTO_SFTP                  7.19.4
+CURLPROTO_SMTP                  7.20.0
+CURLPROTO_SMTPS                 7.20.0
 CURLPROTO_TELNET                7.19.4
 CURLPROTO_TFTP                  7.19.4
 CURLPROXY_HTTP                  7.10
 CURLPROXY_HTTP_1_0              7.19.4
 CURLPROXY_SOCKS4                7.10
 CURLPROXY_SOCKS4A               7.18.0
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/Makefile.in	2009-11-04 20:26:10.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/Makefile.in	2010-02-05 05:42:19.000000000 +0800
@@ -86,26 +86,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -116,13 +121,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -182,12 +186,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/THANKS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/THANKS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/THANKS	2009-08-12 19:21:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/THANKS	2010-01-04 02:04:09.000000000 +0800
@@ -103,12 +103,13 @@
 Chris "Bob Bob"
 Chris Combes
 Chris Deidun
 Chris Flerackers
 Chris Gaukroger
 Chris Maltby
+Chris Mumford
 Christian Krause
 Christian Kurz
 Christian Robottom Reis
 Christian Vogt
 Christophe Demory
 Christophe Legry
@@ -173,12 +174,13 @@
 David Tarendash
 David Thiel
 David Wright
 David Yan
 Dengminwen
 Detlef Schmier
+Didier Brisebourg
 Diego Casorran
 Dima Barsky
 Dimitris Sarris
 Dinar
 Dirk Eddelbuettel
 Dirk Manske
@@ -238,12 +240,13 @@
 Frank McGeough
 Frank Ticheler
 Fred Machado
 Fred New
 Fred Noz
 Frederic Lepied
+Gabriel Kuri
 Gary Maxwell
 Gautam Kachroo
 Gautam Mani
 Gavrie Philipson
 Gaz Iqbal
 Georg Horn
@@ -267,17 +270,17 @@
 Greg Hewgill
 Greg Morse
 Greg Onufer
 Greg Zavertnik
 Grigory Entin
 Guenole Bescon
+Guenter Knauf
 Guillaume Arluison
 Gustaf Hui
 Gwenole Beauchesne
 Götz Babin-Ebell
-Günter Knauf
 Hamish Mackenzie
 Hang Kin Lau
 Hanno Kranzhoff
 Hans Steegers
 Hans-Jurgen May
 Hardeep Singh
@@ -347,18 +350,20 @@
 Joel Chen
 Jofell Gallardo
 Johan Anderson
 Johan Nilsson
 Johan van Selst
 John Crow
+John Dennis
 John E. Malmberg
 John Janssen
 John Kelly
 John Lask
 John Lightsey
 John McGowan
+John P. McCaskey
 John Wilkinson
 Johnny Luong
 Jon Grubbs
 Jon Travis
 Jon Turner
 Jonas Forsman
@@ -371,12 +376,13 @@
 Juan F. Codagnone
 Juan Ignacio Hervás
 Judson Bishop
 Juergen Wilke
 Jukka Pihl
 Julian Noble
+Julien Chaffraix
 Jun-ichiro itojun Hagino
 Jurij Smakov
 Justin Fletcher
 Jörg Mueller-Tolk
 Jörn Hartroth
 Kai Sommerfeld
@@ -392,23 +398,25 @@
 Keith McGuigan
 Keith Mok
 Ken Hirsch
 Ken Rastatter
 Kent Boortz
 Keshav Krity
+Kevin Baughman
 Kevin Fisk
 Kevin Lussier
 Kevin Reed
 Kevin Roth
 Kim Rinnewitz
 Kimmo Kinnunen
 Kjell Ericson
 Kjetil Jacobsen
 Klevtsov Vadim
 Kris Kennaway
 Krishnendu Majumdar
+Krister Johansen
 Kristian Gunstone
 Kristian Köhntopp
 Kyle Sallee
 Lachlan O'Dea
 Larry Campbell
 Larry Fahnoe
@@ -425,12 +433,13 @@
 Lenny Rachitsky
 Liam Healy
 Linas Vepstas
 Ling Thio
 Linus Nielsen Feltzing
 Lisa Xu
+Liza Alenchery
 Loic Dachary
 Loren Kirkby
 Luca Altea
 Luca Alteas
 Lucas Adamski
 Lukasz Czekierda
@@ -483,12 +492,13 @@
 Michael Curtis
 Michael Goffioul
 Michael Jahn
 Michael Jerris
 Michael Mealling
 Michael Smith
+Michael Stillwell
 Michael Wallner
 Michal Bonino
 Michal Marek
 Michele Bini
 Mihai Ionescu
 Mikael Sennerholm
@@ -584,12 +594,13 @@
 Ralf S. Engelschall
 Ralph Beckmann
 Ralph Mitchell
 Ramana Mokkapati
 Randy McMurchy
 Ravi Pratap
+Ray Dassen
 Ray Pekowski
 Reinout van Schouwen
 Renaud Chaillat
 Renaud Duhaut
 Rene Bernhardt
 Rene Rebe
@@ -658,12 +669,13 @@
 Simon Liu
 Song Ma
 Sonia Subramanian
 Spacen Jasset
 Spiridonoff A.V
 Stadler Stephan
+Stan van de Burgt
 Stefan Esser
 Stefan Krause
 Stefan Teleman
 Stefan Ulrich
 Stephan Bergmann
 Stephen Collyer
@@ -676,12 +688,13 @@
 Steve Marx
 Steve Oliphant
 Steve Roskowski
 Steven Bazyl
 Steven G. Johnson
 Stoned Elipot
+Sven Anders
 Sven Neuhaus
 Sven Wegener
 Sébastien Willemijns
 T. Bharath
 T. Yamada
 Tanguy Fautre
@@ -701,12 +714,13 @@
 Todd Kulesza
 Todd Vierling
 Tom Benoist
 Tom Lee
 Tom Mattison
 Tom Moers
+Tom Mueller
 Tom Regner
 Tom Zerucha
 Tomas Pospisek
 Tomas Szepe
 Tomasz Lacki
 Tommy Tam
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/TODO /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/TODO
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/docs/TODO	2009-10-18 03:31:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/docs/TODO	2010-01-25 06:42:54.000000000 +0800
@@ -34,14 +34,13 @@
  4.5 FTP proxy support
  4.6 ASCII support
 
  5. HTTP
  5.1 Better persistency for HTTP 1.0
  5.2 support FF3 sqlite cookie files
- 5.3 Sort outgoing cookies
- 5.4 Rearrange request header order
+ 5.3 Rearrange request header order
 
  6. TELNET
  6.1 ditch stdin
  6.2 ditch telnet-specific select
  6.3 feature negotiation debug data
  6.4 send data in chunks
@@ -102,12 +101,13 @@
  15.1 cleanup return codes
  15.2 remove obsolete defines
  15.3 size_t
  15.4 remove several functions
  15.5 remove CURLOPT_FAILONERROR
  15.6 remove CURLOPT_DNS_USE_GLOBAL_CACHE
+ 15.7 remove progress meter from libcurl
 
 ==============================================================================
 
 1. libcurl
 
 1.1 Zero-copy interface
@@ -234,20 +234,13 @@
 5.2 support FF3 sqlite cookie files
 
  Firefox 3 is changing from its former format to a a sqlite database instead.
  We should consider how (lib)curl can/should support this.
  http://curl.haxx.se/bug/feature.cgi?id=1871388
 
-5.3 Sort outgoing cookies
-
- All the major browsers sort the cookies sent in the Cookie: header based on
- the length of the path for which the cookie is set with. This could lead to
- a small fraction of servers to not play well with curl:
- http://www.ietf.org/mail-archive/web/http-state/current/msg00150.html
-
-5.4 Rearrange request header order
+5.3 Rearrange request header order
 
  Server implementors often make an effort to detect browser and to reject
  clients it can detect to not match. One of the last details we cannot yet
  control in libcurl's HTTP requests, which also can be exploited to detect
  that libcurl is in fact used even when it tries to impersonate a browser, is
  the order of the request headers. I propose that we introduce a new option in
@@ -582,6 +575,16 @@
 
 15.6 remove CURLOPT_DNS_USE_GLOBAL_CACHE
 
  Remove support for a global DNS cache. Anything global is silly, and we
  already offer the share interface for the same functionality but done
  "right".
+
+15.7 remove progress meter from libcurl
+
+ The internally provided progress meter output doesn't belong in the library.
+ Basically no application wants it (apart from curl) but instead applications
+ can and should do their own progress meters using the progress callback.
+
+ The progress callback should then be bumped as well to get proper 64bit
+ variable types passed to it instead of doubles so that big files work
+ correctly.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/include/curl/curlbuild.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/include/curl/curlbuild.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/include/curl/curlbuild.h	2009-11-04 20:35:39.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/include/curl/curlbuild.h	2010-02-09 18:08:03.000000000 +0800
@@ -17,13 +17,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: curlbuild.h.dist,v 1.29 2009-10-27 16:56:20 yangtse Exp $
+ * $Id: curlbuild.h.dist,v 1.30 2009-12-30 17:59:56 yangtse Exp $
  ***************************************************************************/
 
 /* ================================================================ */
 /*               NOTES FOR CONFIGURE CAPABLE SYSTEMS                */
 /* ================================================================ */
 
@@ -367,30 +367,30 @@
 #  define CURL_SUFFIX_CURL_OFF_T     LL
 #  define CURL_SUFFIX_CURL_OFF_TU    ULL
 #  define CURL_TYPEOF_CURL_SOCKLEN_T int
 #  define CURL_SIZEOF_CURL_SOCKLEN_T 4
 
 #elif defined(__VMS)
-#  if defined(__alpha) || defined(__ia64)
-#    define CURL_SIZEOF_LONG           4
-#    define CURL_TYPEOF_CURL_OFF_T     long long
-#    define CURL_FORMAT_CURL_OFF_T     "lld"
-#    define CURL_FORMAT_CURL_OFF_TU    "llu"
-#    define CURL_FORMAT_OFF_T          "%lld"
-#    define CURL_SIZEOF_CURL_OFF_T     8
-#    define CURL_SUFFIX_CURL_OFF_T     LL
-#    define CURL_SUFFIX_CURL_OFF_TU    ULL
-#  else
+#  if defined(__VAX)
 #    define CURL_SIZEOF_LONG           4
 #    define CURL_TYPEOF_CURL_OFF_T     long
 #    define CURL_FORMAT_CURL_OFF_T     "ld"
 #    define CURL_FORMAT_CURL_OFF_TU    "lu"
 #    define CURL_FORMAT_OFF_T          "%ld"
 #    define CURL_SIZEOF_CURL_OFF_T     4
 #    define CURL_SUFFIX_CURL_OFF_T     L
 #    define CURL_SUFFIX_CURL_OFF_TU    UL
+#  else
+#    define CURL_SIZEOF_LONG           4
+#    define CURL_TYPEOF_CURL_OFF_T     long long
+#    define CURL_FORMAT_CURL_OFF_T     "lld"
+#    define CURL_FORMAT_CURL_OFF_TU    "llu"
+#    define CURL_FORMAT_OFF_T          "%lld"
+#    define CURL_SIZEOF_CURL_OFF_T     8
+#    define CURL_SUFFIX_CURL_OFF_T     LL
+#    define CURL_SUFFIX_CURL_OFF_TU    ULL
 #  endif
 #  define CURL_TYPEOF_CURL_SOCKLEN_T unsigned int
 #  define CURL_SIZEOF_CURL_SOCKLEN_T 4
 
 #elif defined(__OS400__)
 #  if defined(__ILEC400__)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/include/curl/curl.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/include/curl/curl.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/include/curl/curl.h	2009-10-18 02:31:50.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/include/curl/curl.h	2010-01-22 20:17:03.000000000 +0800
@@ -4,46 +4,38 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: curl.h,v 1.396 2009-10-16 13:30:31 yangtse Exp $
+ * $Id: curl.h,v 1.406 2010-01-22 12:17:03 bagder Exp $
  ***************************************************************************/
 
 /*
  * If you have libcurl problems, all docs and details are found here:
  *   http://curl.haxx.se/libcurl/
  *
  * curl-library mailing list subscription and unsubscription web interface:
  *   http://cool.haxx.se/mailman/listinfo/curl-library/
  */
 
-/*
- * Leading 'curl' path on the 'curlbuild.h' include statement is
- * required to properly allow building outside of the source tree,
- * due to the fact that in this case 'curlbuild.h' is generated in
- * a subdirectory of the build tree while 'curl.h actually remains
- * in a subdirectory of the source tree.
- */
-
 #include "curlver.h"         /* libcurl version defines   */
-#include "curl/curlbuild.h"  /* libcurl build definitions */
+#include "curlbuild.h"       /* libcurl build definitions */
 #include "curlrules.h"       /* libcurl rules enforcement */
 
 /*
  * Define WIN32 when build target is Win32 API
  */
 
@@ -52,12 +44,17 @@
 #define WIN32
 #endif
 
 #include <stdio.h>
 #include <limits.h>
 
+#if defined(__FreeBSD__) && (__FreeBSD__ >= 2)
+/* Needed for __FreeBSD_version symbol definition */
+#include <osreldate.h>
+#endif
+
 /* The include stuff here below is mainly for time_t! */
 #include <sys/types.h>
 #include <time.h>
 
 #if defined(WIN32) && !defined(_WIN32_WCE) && !defined(__GNUC__) && \
   !defined(__CYGWIN__) || defined(__MINGW32__)
@@ -71,13 +68,14 @@
 
 /* HP-UX systems version 9, 10 and 11 lack sys/select.h and so does oldish
    libc5-based Linux systems. Only include it on system that are known to
    require it! */
 #if defined(_AIX) || defined(__NOVELL_LIBC__) || defined(__NetBSD__) || \
     defined(__minix) || defined(__SYMBIAN32__) || defined(__INTEGRITY) || \
-    defined(ANDROID)
+    defined(ANDROID) || \
+   (defined(__FreeBSD_version) && (__FreeBSD_version < 800000))
 #include <sys/select.h>
 #endif
 
 #ifndef _WIN32_WCE
 #include <sys/socket.h>
 #endif
@@ -241,20 +239,12 @@
 
 typedef curl_socket_t
 (*curl_opensocket_callback)(void *clientp,
                             curlsocktype purpose,
                             struct curl_sockaddr *address);
 
-#ifndef CURL_NO_OLDIES
-  /* not used since 7.10.8, will be removed in a future release */
-typedef int (*curl_passwd_callback)(void *clientp,
-                                    const char *prompt,
-                                    char *buffer,
-                                    int buflen);
-#endif
-
 typedef enum {
   CURLIOE_OK,            /* I/O operation successful */
   CURLIOE_UNKNOWNCMD,    /* command was unknown to callback */
   CURLIOE_FAILRESTART,   /* failed to restart the read */
   CURLIOE_LAST           /* never use */
 } curlioerr;
@@ -412,12 +402,16 @@
                                     wait till it's ready and try again (Added
                                     in 7.18.2) */
   CURLE_SSL_CRL_BADFILE,         /* 82 - could not load CRL file, missing or
                                     wrong format (Added in 7.19.0) */
   CURLE_SSL_ISSUER_ERROR,        /* 83 - Issuer check failed.  (Added in
                                     7.19.0) */
+  CURLE_FTP_PRET_FAILED,         /* 84 - a PRET command failed */
+  CURLE_RTSP_CSEQ_ERROR,         /* 85 - mismatch of RTSP CSeq numbers */
+  CURLE_RTSP_SESSION_ERROR,      /* 86 - mismatch of RTSP Session Identifiers */
+
   CURL_LAST /* never use! */
 } CURLcode;
 
 #ifndef CURL_NO_OLDIES /* define this to test if your app builds with all
                           the obsolete stuff removed! */
 
@@ -618,12 +612,19 @@
 #define CURLPROTO_TELNET (1<<6)
 #define CURLPROTO_LDAP   (1<<7)
 #define CURLPROTO_LDAPS  (1<<8)
 #define CURLPROTO_DICT   (1<<9)
 #define CURLPROTO_FILE   (1<<10)
 #define CURLPROTO_TFTP   (1<<11)
+#define CURLPROTO_IMAP   (1<<12)
+#define CURLPROTO_IMAPS  (1<<13)
+#define CURLPROTO_POP3   (1<<14)
+#define CURLPROTO_POP3S  (1<<15)
+#define CURLPROTO_SMTP   (1<<16)
+#define CURLPROTO_SMTPS  (1<<17)
+#define CURLPROTO_RTSP   (1<<18)
 #define CURLPROTO_ALL    (~0) /* enable everything */
 
 /* long may be 32 or 64 bits, but we should never depend on anything else
    but 32 */
 #define CURLOPTTYPE_LONG          0
 #define CURLOPTTYPE_OBJECTPOINT   10000
@@ -1033,12 +1034,13 @@
 
   /* FTP option that changes the timeout, in seconds, associated with
      getting a response.  This is different from transfer timeout time and
      essentially places a demand on the FTP server to acknowledge commands
      in a timely manner. */
   CINIT(FTP_RESPONSE_TIMEOUT, LONG, 112),
+#define CURLOPT_SERVER_RESPONSE_TIMEOUT CURLOPT_FTP_RESPONSE_TIMEOUT
 
   /* Set this option to one of the CURL_IPRESOLVE_* defines (see below) to
      tell libcurl to resolve names to those IP versions only. This only has
      affect on systems with support for more than one, i.e IPv4 _and_ IPv6. */
   CINIT(IPRESOLVE, LONG, 113),
 
@@ -1277,12 +1279,45 @@
      function */
   CINIT(SSH_KEYFUNCTION, FUNCTIONPOINT, 184),
 
   /* set the SSH host key callback custom pointer */
   CINIT(SSH_KEYDATA, OBJECTPOINT, 185),
 
+  /* set the SMTP mail originator */
+  CINIT(MAIL_FROM, OBJECTPOINT, 186),
+
+  /* set the SMTP mail receiver(s) */
+  CINIT(MAIL_RCPT, OBJECTPOINT, 187),
+
+  /* FTP: send PRET before PASV */
+  CINIT(FTP_USE_PRET, LONG, 188),
+
+  /* RTSP request method (OPTIONS, SETUP, PLAY, etc...) */
+  CINIT(RTSP_REQUEST, LONG, 189),
+
+  /* The RTSP session identifier */
+  CINIT(RTSP_SESSION_ID, OBJECTPOINT, 190),
+
+  /* The RTSP stream URI */
+  CINIT(RTSP_STREAM_URI, OBJECTPOINT, 191),
+
+  /* The Transport: header to use in RTSP requests */
+  CINIT(RTSP_TRANSPORT, OBJECTPOINT, 192),
+
+  /* Manually initialize the client RTSP CSeq for this handle */
+  CINIT(RTSP_CLIENT_CSEQ, LONG, 193),
+
+  /* Manually initialize the server RTSP CSeq for this handle */
+  CINIT(RTSP_SERVER_CSEQ, LONG, 194),
+
+  /* The stream to pass to INTERLEAVEFUNCTION. */
+  CINIT(INTERLEAVEDATA, OBJECTPOINT, 195),
+
+  /* Let the application define a custom write method for RTP data */
+  CINIT(INTERLEAVEFUNCTION, FUNCTIONPOINT, 196),
+
   CURLOPT_LASTENTRY /* the last unused */
 } CURLoption;
 
 #ifndef CURL_NO_OLDIES /* define this to test if your app builds with all
                           the obsolete stuff removed! */
 
@@ -1320,24 +1355,44 @@
 #define CURL_IPRESOLVE_V6       2 /* resolve to ipv6 addresses */
 
   /* three convenient "aliases" that follow the name scheme better */
 #define CURLOPT_WRITEDATA CURLOPT_FILE
 #define CURLOPT_READDATA  CURLOPT_INFILE
 #define CURLOPT_HEADERDATA CURLOPT_WRITEHEADER
+#define CURLOPT_RTSPHEADER CURLOPT_HTTPHEADER
 
   /* These enums are for use with the CURLOPT_HTTP_VERSION option. */
 enum {
   CURL_HTTP_VERSION_NONE, /* setting this means we don't care, and that we'd
                              like the library to choose the best possible
                              for us! */
   CURL_HTTP_VERSION_1_0,  /* please use HTTP 1.0 in the request */
   CURL_HTTP_VERSION_1_1,  /* please use HTTP 1.1 in the request */
 
   CURL_HTTP_VERSION_LAST /* *ILLEGAL* http version */
 };
 
+/*
+ * Public API enums for RTSP requests
+ */
+enum {
+    CURL_RTSPREQ_NONE, /* first in list */
+    CURL_RTSPREQ_OPTIONS,
+    CURL_RTSPREQ_DESCRIBE,
+    CURL_RTSPREQ_ANNOUNCE,
+    CURL_RTSPREQ_SETUP,
+    CURL_RTSPREQ_PLAY,
+    CURL_RTSPREQ_PAUSE,
+    CURL_RTSPREQ_TEARDOWN,
+    CURL_RTSPREQ_GET_PARAMETER,
+    CURL_RTSPREQ_SET_PARAMETER,
+    CURL_RTSPREQ_RECORD,
+    CURL_RTSPREQ_RECEIVE,
+    CURL_RTSPREQ_LAST /* last in list */
+};
+
   /* These enums are for use with the CURLOPT_NETRC option. */
 enum CURL_NETRC_OPTION {
   CURL_NETRC_IGNORED,     /* The .netrc will never be read.
                            * This is the default. */
   CURL_NETRC_OPTIONAL,    /* A user:password in the URL will be preferred
                            * to one in the .netrc. */
@@ -1701,15 +1756,19 @@
   CURLINFO_FTP_ENTRY_PATH   = CURLINFO_STRING + 30,
   CURLINFO_REDIRECT_URL     = CURLINFO_STRING + 31,
   CURLINFO_PRIMARY_IP       = CURLINFO_STRING + 32,
   CURLINFO_APPCONNECT_TIME  = CURLINFO_DOUBLE + 33,
   CURLINFO_CERTINFO         = CURLINFO_SLIST  + 34,
   CURLINFO_CONDITION_UNMET  = CURLINFO_LONG   + 35,
+  CURLINFO_RTSP_SESSION_ID  = CURLINFO_STRING + 36,
+  CURLINFO_RTSP_CLIENT_CSEQ = CURLINFO_LONG   + 37,
+  CURLINFO_RTSP_SERVER_CSEQ = CURLINFO_LONG   + 38,
+  CURLINFO_RTSP_CSEQ_RECV   = CURLINFO_LONG   + 39,
   /* Fill in new entries below here! */
 
-  CURLINFO_LASTONE          = 35
+  CURLINFO_LASTONE          = 39
 } CURLINFO;
 
 /* CURLINFO_RESPONSE_CODE is the new name for the option previously known as
    CURLINFO_HTTP_CODE */
 #define CURLINFO_HTTP_CODE CURLINFO_RESPONSE_CODE
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/include/curl/curlrules.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/include/curl/curlrules.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/include/curl/curlrules.h	2009-10-29 04:21:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/include/curl/curlrules.h	2010-02-04 02:16:48.000000000 +0800
@@ -4,26 +4,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: curlrules.h,v 1.7 2009-10-27 16:56:20 yangtse Exp $
+ * $Id: curlrules.h,v 1.8 2010-02-02 12:58:50 yangtse Exp $
  ***************************************************************************/
 
 /* ================================================================ */
 /*                    COMPILE TIME SANITY CHECKS                    */
 /* ================================================================ */
 
@@ -243,7 +243,11 @@
 #undef CURL_PULL_STDINT_H
 #undef CURL_PULL_INTTYPES_H
 
 #undef CURL_TYPEOF_CURL_SOCKLEN_T
 #undef CURL_TYPEOF_CURL_OFF_T
 
+#ifdef CURL_NO_OLDIES
+#undef CURL_FORMAT_OFF_T /* not required since 7.19.0 - obsoleted in 7.20.0 */
+#endif
+
 #endif /* __CURL_CURLRULES_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/include/curl/curlver.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/include/curl/curlver.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/include/curl/curlver.h	2009-11-04 20:35:39.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/include/curl/curlver.h	2010-02-09 18:08:03.000000000 +0800
@@ -17,30 +17,30 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: curlver.h,v 1.48 2009-08-12 11:24:52 bagder Exp $
+ * $Id: curlver.h,v 1.50 2009-11-27 23:53:50 bagder Exp $
  ***************************************************************************/
 
 /* This header file contains nothing but libcurl version info, generated by
    a script at release-time. This was made its own header file in 7.11.2 */
 
 /* This is the global package copyright */
 #define LIBCURL_COPYRIGHT "1996 - 2009 Daniel Stenberg, <daniel@haxx.se>."
 
 /* This is the version number of the libcurl package from which this header
    file origins: */
-#define LIBCURL_VERSION "7.19.7"
+#define LIBCURL_VERSION "7.20.0"
 
 /* The numeric version number is also available "in parts" by using these
    defines: */
 #define LIBCURL_VERSION_MAJOR 7
-#define LIBCURL_VERSION_MINOR 19
-#define LIBCURL_VERSION_PATCH 7
+#define LIBCURL_VERSION_MINOR 20
+#define LIBCURL_VERSION_PATCH 0
 
 /* This is the numeric version of the libcurl version number, meant for easier
    parsing and comparions by programs. The LIBCURL_VERSION_NUM define will
    always follow this syntax:
 
          0xXXYYZZ
@@ -51,20 +51,20 @@
    appears as "0x090b07".
 
    This 6-digit (24 bits) hexadecimal number does not show pre-release number,
    and it is always a greater number in a more recent release. It makes
    comparisons with greater than and less than work.
 */
-#define LIBCURL_VERSION_NUM 0x071307
+#define LIBCURL_VERSION_NUM 0x071400
 
 /*
  * This is the date and time when the full source package was created. The
  * timestamp is not stored in CVS, as the timestamp is properly set in the
  * tarballs by the maketgz script.
  *
  * The format of the date should follow this template:
  *
  * "Mon Feb 12 11:35:33 UTC 2007"
  */
-#define LIBCURL_TIMESTAMP "Wed Nov  4 12:34:59 UTC 2009"
+#define LIBCURL_TIMESTAMP "Tue Feb  9 10:06:56 UTC 2010"
 
 #endif /* __CURL_CURLVER_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/include/curl/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/include/curl/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/include/curl/Makefile.in	2009-11-04 20:26:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/include/curl/Makefile.in	2010-02-05 05:42:19.000000000 +0800
@@ -79,26 +79,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -109,13 +114,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -175,12 +179,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -267,15 +272,15 @@
 	    *$$dep*) \
 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
 		&& exit 0; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  include/curl/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  include/curl/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  include/curl/Makefile
+	  $(AUTOMAKE) --foreign  include/curl/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/include/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/include/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/include/Makefile.in	2009-11-04 20:26:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/include/Makefile.in	2010-02-05 05:42:19.000000000 +0800
@@ -78,26 +78,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -108,13 +113,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -174,12 +178,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/config-os400.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/config-os400.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/config-os400.h	2009-05-04 05:49:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/config-os400.h	2009-11-18 00:43:31.000000000 +0800
@@ -51,15 +51,12 @@
 /* Define this as a suitable file to read random data from */
 #undef RANDOM_FILE
 
 /* Define this to your Entropy Gathering Daemon socket pathname */
 #undef EGD_SOCKET
 
-/* Set to explicitly specify we don't want to use thread-safe functions */
-#undef DISABLED_THREADSAFE
-
 /* Define to 1 if you have the alarm function. */
 #define HAVE_ALARM 1
 
 /* Define if you have the <alloca.h> header file. */
 #undef HAVE_ALLOCA_H
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/config-riscos.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/config-riscos.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/config-riscos.h	2009-07-23 04:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/config-riscos.h	2009-11-18 00:43:31.000000000 +0800
@@ -47,15 +47,12 @@
 /* Define this as a suitable file to read random data from */
 #undef RANDOM_FILE
 
 /* Define this to your Entropy Gathering Daemon socket pathname */
 #undef EGD_SOCKET
 
-/* Set to explicitly specify we don't want to use thread-safe functions */
-#define DISABLED_THREADSAFE
-
 /* Define if you want to enable IPv6 support */
 #undef ENABLE_IPV6
 
 /* Define to 1 if you have the alarm function. */
 #define HAVE_ALARM 1
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/config-symbian.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/config-symbian.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/config-symbian.h	2009-10-19 01:16:41.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/config-symbian.h	2009-11-18 00:43:31.000000000 +0800
@@ -54,15 +54,12 @@
 /* Use W$ LDAP implementation */
 /* #undef CURL_LDAP_WIN */
 
 /* when not building a shared library */
 /* #undef CURL_STATICLIB */
 
-/* Set to explicitly specify we don't want to use thread-safe functions */
-/* #undef DISABLED_THREADSAFE */
-
 /* your Entropy Gathering Daemon socket pathname */
 /* #undef EGD_SOCKET */
 
 /* Define if you want to enable IPv6 support */
 #define ENABLE_IPV6 1
 
@@ -637,15 +634,18 @@
 /* Define to 1 if you need the lber.h header file even with ldap.h */
 /* #undef NEED_LBER_H */
 
 /* Define to 1 if you need the malloc.h header file even with stdlib.h */
 /* #undef NEED_MALLOC_H */
 
-/* need REENTRANT defined */
+/* Define to 1 if _REENTRANT preprocessor symbol must be defined. */
 /* #undef NEED_REENTRANT */
 
+/* Define to 1 if _THREAD_SAFE preprocessor symbol must be defined. */
+/* #undef NEED_THREAD_SAFE */
+
 /* cpu-machine-OS */
 #ifdef __WINS__
 #define OS "i386-pc-epoc32"
 #elif __MARM__
 #define OS "arm-unknown-epoc32"
 #else
@@ -764,15 +764,12 @@
 /* Number of bits in a file offset, on hosts where this is settable. */
 #define _FILE_OFFSET_BITS 64
 
 /* Define for large files, on AIX-style hosts. */
 /* #undef _LARGE_FILES */
 
-/* define this if you need it to compile thread-safe code */
-/* #undef _THREAD_SAFE */
-
 /* Define to empty if `const' does not conform to ANSI C. */
 /* #undef const */
 
 /* type to use in place of in_addr_t if not defined */
 /* #undef in_addr_t */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/config-tpf.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/config-tpf.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/config-tpf.h	2009-10-19 01:16:41.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/config-tpf.h	2009-11-18 00:43:31.000000000 +0800
@@ -44,15 +44,12 @@
 /* to disable verbose strings */
 /* #undef CURL_DISABLE_VERBOSE_STRINGS */
 
 /* when not building a shared library */
 /* #undef CURL_STATICLIB */
 
-/* Set to explicitly specify we don't want to use thread-safe functions */
-/* #undef DISABLED_THREADSAFE */
-
 /* lber dynamic library file */
 /* #undef DL_LBER_FILE */
 
 /* ldap dynamic library file */
 /* #undef DL_LDAP_FILE */
 
@@ -556,15 +553,18 @@
 /* Define to 1 if you have the <x509.h> header file. */
 /* #undef HAVE_X509_H */
 
 /* if you have the zlib.h header file */
 /* #undef HAVE_ZLIB_H */
 
-/* need REENTRANT defined */
+/* Define to 1 if _REENTRANT preprocessor symbol must be defined. */
 /* #undef NEED_REENTRANT */
 
+/* Define to 1 if _THREAD_SAFE preprocessor symbol must be defined. */
+/* #undef NEED_THREAD_SAFE */
+
 /* cpu-machine-OS */
 #define OS "s390x-ibm-tpf"
 
 /* Name of package */
 #define PACKAGE "curl"
 
@@ -650,15 +650,12 @@
 /* Number of bits in a file offset, on hosts where this is settable. */
 /* #undef _FILE_OFFSET_BITS */
 
 /* Define for large files, on AIX-style hosts. */
 /* #undef _LARGE_FILES */
 
-/* define this if you need it to compile thread-safe code */
-/* #undef _THREAD_SAFE */
-
 /* Define to empty if `const' does not conform to ANSI C. */
 /* #undef const */
 
 /* type to use in place of in_addr_t if not defined */
 /* #undef in_addr_t */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/config-vxworks.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/config-vxworks.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/config-vxworks.h	2009-10-19 01:16:41.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/config-vxworks.h	2009-11-18 00:43:31.000000000 +0800
@@ -65,15 +65,12 @@
 /* Use W$ LDAP implementation */
 /* #undef CURL_LDAP_WIN */
 
 /* when not building a shared library */
 /* #undef CURL_STATICLIB */
 
-/* Set to explicitly specify we don't want to use thread-safe functions */
-/* #undef DISABLED_THREADSAFE */
-
 /* your Entropy Gathering Daemon socket pathname */
 /* #undef EGD_SOCKET */
 
 /* Define if you want to enable IPv6 support */
 #define ENABLE_IPV6 1
 
@@ -742,12 +739,15 @@
 /* Define to 1 if you need the memory.h header file even with stdlib.h */
 /* #undef NEED_MEMORY_H */
 
 /* Define to 1 if _REENTRANT preprocessor symbol must be defined. */
 /* #undef NEED_REENTRANT */
 
+/* Define to 1 if _THREAD_SAFE preprocessor symbol must be defined. */
+/* #undef NEED_THREAD_SAFE */
+
 /* Define to 1 if the open function requires three arguments. */
 #define OPEN_NEEDS_ARG3 1
 
 /* cpu-machine-OS */
 #define OS "unknown-unknown-vxworks"
 
@@ -910,15 +910,12 @@
 /* Number of bits in a file offset, on hosts where this is settable. */
 /* #undef _FILE_OFFSET_BITS */
 
 /* Define for large files, on AIX-style hosts. */
 /* #undef _LARGE_FILES */
 
-/* define this if you need it to compile thread-safe code */
-/* #undef _THREAD_SAFE */
-
 /* Define to empty if `const' does not conform to ANSI C. */
 /* #undef const */
 
 /* Type to use in place of in_addr_t when system does not provide it. */
 /* #undef in_addr_t */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/config-win32.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/config-win32.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/config-win32.h	2009-10-29 04:21:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/config-win32.h	2010-01-27 01:06:01.000000000 +0800
@@ -453,23 +453,26 @@
 #endif
 
 /* Availability of freeaddrinfo, getaddrinfo and getnameinfo functions is
    quite convoluted, compiler dependent and even build target dependent. */
 #if defined(HAVE_WS2TCPIP_H)
 #  if defined(__POCC__)
-#    define HAVE_FREEADDRINFO 1
-#    define HAVE_GETADDRINFO  1
-#    define HAVE_GETNAMEINFO  1
+#    define HAVE_FREEADDRINFO           1
+#    define HAVE_GETADDRINFO            1
+#    define HAVE_GETADDRINFO_THREADSAFE 1
+#    define HAVE_GETNAMEINFO            1
 #  elif defined(_WIN32_WINNT) && (_WIN32_WINNT >= 0x0501)
-#    define HAVE_FREEADDRINFO 1
-#    define HAVE_GETADDRINFO  1
-#    define HAVE_GETNAMEINFO  1
+#    define HAVE_FREEADDRINFO           1
+#    define HAVE_GETADDRINFO            1
+#    define HAVE_GETADDRINFO_THREADSAFE 1
+#    define HAVE_GETNAMEINFO            1
 #  elif defined(_MSC_VER) && (_MSC_VER >= 1200)
-#    define HAVE_FREEADDRINFO 1
-#    define HAVE_GETADDRINFO  1
-#    define HAVE_GETNAMEINFO  1
+#    define HAVE_FREEADDRINFO           1
+#    define HAVE_GETADDRINFO            1
+#    define HAVE_GETADDRINFO_THREADSAFE 1
+#    define HAVE_GETNAMEINFO            1
 #  endif
 #endif
 
 #if defined(__POCC__)
 #  ifndef _MSC_VER
 #    error Microsoft extensions /Ze compiler option is required
@@ -501,12 +504,30 @@
 
 #if !defined(USE_WIN32_LARGE_FILES) && !defined(USE_WIN32_SMALL_FILES)
 #  define USE_WIN32_SMALL_FILES
 #endif
 
 /* ---------------------------------------------------------------- */
+/*                       DNS RESOLVER SPECIALTY                     */
+/* ---------------------------------------------------------------- */
+
+/*
+ * Undefine both USE_ARES and USE_THREADS_WIN32 for synchronous DNS
+ */
+
+/* Define USE_ARES to enable c-ares asynchronous DNS lookups */
+/* #define USE_ARES 1 */
+
+/* Define USE_THREADS_WIN32 to enable threaded asynchronous DNS lookups */
+#define USE_THREADS_WIN32 1
+
+#if defined(USE_ARES) && defined(USE_THREADS_WIN32)
+#  error "Only one DNS lookup specialty may be defined at most"
+#endif
+
+/* ---------------------------------------------------------------- */
 /*                           LDAP SUPPORT                           */
 /* ---------------------------------------------------------------- */
 
 #if defined(CURL_HAS_NOVELL_LDAPSDK) || defined(CURL_HAS_MOZILLA_LDAPSDK)
 #undef CURL_LDAP_HYBRID
 #undef CURL_LDAP_WIN
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/connect.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/connect.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/connect.c	2009-10-02 05:17:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/connect.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: connect.c,v 1.223 2009-10-01 07:59:45 bagder Exp $
+ * $Id: connect.c,v 1.229 2010-02-04 19:44:31 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifdef HAVE_SYS_TIME_H
 #include <sys/time.h>
@@ -61,13 +61,13 @@
 #include <sys/filio.h>
 #endif
 #ifdef NETWARE
 #undef in_addr_t
 #define in_addr_t unsigned long
 #endif
-#ifdef VMS
+#ifdef __VMS
 #include <in.h>
 #include <inet.h>
 #endif
 
 #include <stdio.h>
 #include <errno.h>
@@ -86,12 +86,13 @@
 #include "url.h" /* for Curl_safefree() */
 #include "multiif.h"
 #include "sockaddr.h" /* required for Curl_sockaddr_storage */
 #include "inet_ntop.h"
 #include "inet_pton.h"
 #include "sslgen.h" /* for Curl_ssl_check_cxn() */
+#include "progress.h"
 
 /* The last #include file should be: */
 #include "memdebug.h"
 
 #ifdef __SYMBIAN32__
 /* This isn't actually supported under Symbian OS */
@@ -189,38 +190,52 @@
 #define WAITCONN_CONNECTED     0
 #define WAITCONN_SELECT_ERROR -1
 #define WAITCONN_TIMEOUT       1
 #define WAITCONN_FDSET_ERROR   2
 
 static
-int waitconnect(curl_socket_t sockfd, /* socket */
+int waitconnect(struct connectdata *conn,
+                curl_socket_t sockfd, /* socket */
                 long timeout_msec)
 {
   int rc;
 #ifdef mpeix
   /* Call this function once now, and ignore the results. We do this to
      "clear" the error state on the socket so that we can later read it
      reliably. This is reported necessary on the MPE/iX operating system. */
   (void)verifyconnect(sockfd, NULL);
 #endif
 
-  /* now select() until we get connect or timeout */
-  rc = Curl_socket_ready(CURL_SOCKET_BAD, sockfd, (int)timeout_msec);
-  if(-1 == rc)
-    /* error, no connect here, try next */
-    return WAITCONN_SELECT_ERROR;
-
-  else if(0 == rc)
-    /* timeout, no connect today */
-    return WAITCONN_TIMEOUT;
-
-  if(rc & CURL_CSELECT_ERR)
-    /* error condition caught */
-    return WAITCONN_FDSET_ERROR;
+  for(;;) {
 
-  /* we have a connect! */
+    /* now select() until we get connect or timeout */
+    rc = Curl_socket_ready(CURL_SOCKET_BAD, sockfd, (int)(timeout_msec>1000?
+                                                          1000:timeout_msec));
+
+    if(Curl_pgrsUpdate(conn))
+      return CURLE_ABORTED_BY_CALLBACK;
+
+    if(-1 == rc)
+      /* error, no connect here, try next */
+      return WAITCONN_SELECT_ERROR;
+
+    else if(0 == rc) {
+      /* timeout */
+      timeout_msec -= 1000;
+      if(timeout_msec <= 0)
+        return WAITCONN_TIMEOUT;
+
+      continue;
+    }
+
+    if(rc & CURL_CSELECT_ERR)
+      /* error condition caught */
+      return WAITCONN_FDSET_ERROR;
+
+    break;
+  }
   return WAITCONN_CONNECTED;
 }
 
 static CURLcode bindlocal(struct connectdata *conn,
                           curl_socket_t sockfd, int af)
 {
@@ -367,43 +382,43 @@
       si4->sin_family = AF_INET;
       si4->sin_port = htons(port);
       sizeof_sa = sizeof(struct sockaddr_in);
     }
   }
 
-  do {
+  for(;;) {
     if( bind(sockfd, sock, sizeof_sa) >= 0) {
     /* we succeeded to bind */
       struct Curl_sockaddr_storage add;
       curl_socklen_t size = sizeof(add);
       memset(&add, 0, sizeof(struct Curl_sockaddr_storage));
       if(getsockname(sockfd, (struct sockaddr *) &add, &size) < 0) {
         data->state.os_errno = error = SOCKERRNO;
         failf(data, "getsockname() failed with errno %d: %s",
               error, Curl_strerror(conn, error));
         return CURLE_INTERFACE_FAILED;
       }
-      infof(data, "Local port: %d\n", port);
+      infof(data, "Local port: %hu\n", port);
       conn->bits.bound = TRUE;
       return CURLE_OK;
     }
 
     if(--portnum > 0) {
-      infof(data, "Bind to local port %d failed, trying next\n", port);
+      infof(data, "Bind to local port %hu failed, trying next\n", port);
       port++; /* try next port */
       /* We re-use/clobber the port variable here below */
       if(sock->sa_family == AF_INET)
         si4->sin_port = ntohs(port);
 #ifdef ENABLE_IPV6
       else
         si6->sin6_port = ntohs(port);
 #endif
     }
     else
       break;
-  } while(1);
+  }
 
   data->state.os_errno = error = SOCKERRNO;
   failf(data, "bind failed with errno %d: %s",
         error, Curl_strerror(conn, error));
 
   return CURLE_INTERFACE_FAILED;
@@ -550,26 +565,26 @@
     return CURLE_OPERATION_TIMEDOUT;
   }
 
   Curl_expire(data, allow);
 
   /* check for connect without timeout as we want to return immediately */
-  rc = waitconnect(sockfd, 0);
+  rc = waitconnect(conn, sockfd, 0);
 
   if(WAITCONN_CONNECTED == rc) {
     int error;
     if(verifyconnect(sockfd, &error)) {
       /* we are connected, awesome! */
       *connected = TRUE;
       return CURLE_OK;
     }
     /* nope, not connected for real */
     data->state.os_errno = error;
     infof(data, "Connection failed\n");
     if(trynextip(conn, sockindex, connected)) {
-      failf(data, "Failed connect to %s:%d; %s",
+      failf(data, "Failed connect to %s:%ld; %s",
             conn->host.name, conn->port, Curl_strerror(conn, error));
       code = CURLE_COULDNT_CONNECT;
     }
   }
   else if(WAITCONN_TIMEOUT != rc) {
     int error = 0;
@@ -583,13 +598,13 @@
     else
       infof(data, "Connection failed\n");
 
     if(trynextip(conn, sockindex, connected)) {
       error = SOCKERRNO;
       data->state.os_errno = error;
-      failf(data, "Failed connect to %s:%d; %s",
+      failf(data, "Failed connect to %s:%ld; %s",
             conn->host.name, conn->port, Curl_strerror(conn, error));
       code = CURLE_COULDNT_CONNECT;
     }
   }
   /*
    * If the connection failed here, we should attempt to connect to the "next
@@ -716,18 +731,19 @@
   memcpy(&addr.sa_addr, ai->ai_addr, addr.addrlen);
 
   *connected = FALSE; /* default is not connected */
 
   if(data->set.fopensocket)
    /*
-    * If the opensocket callback is set, all the destination address information
-    * is passed to the callback. Depending on this information the callback may
-    * opt to abort the connection, this is indicated returning CURL_SOCKET_BAD;
-    * otherwise it will return a not-connected socket. When the callback returns
-    * a valid socket the destination address information might have been changed
-    * and this 'new' address will actually be used here to connect.
+    * If the opensocket callback is set, all the destination address
+    * information is passed to the callback. Depending on this information the
+    * callback may opt to abort the connection, this is indicated returning
+    * CURL_SOCKET_BAD; otherwise it will return a not-connected socket. When
+    * the callback returns a valid socket the destination address information
+    * might have been changed and this 'new' address will actually be used
+    * here to connect.
     */
     sockfd = data->set.fopensocket(data->set.opensocket_client,
                                    CURLSOCKTYPE_IPCXN,
                                    (struct curl_sockaddr *)&addr);
   else
     /* opensocket callback not set, so simply create the socket now */
@@ -820,13 +836,13 @@
        * same value, and on others they are different, hence
        * the odd #if
        */
     case EAGAIN:
 #endif
 #endif
-      rc = waitconnect(sockfd, timeout_ms);
+      rc = waitconnect(conn, sockfd, timeout_ms);
       break;
     default:
       /* unknown error, fallthrough and try another address! */
       failf(data, "Failed to connect to %s: %s",
             addr_buf, Curl_strerror(conn,error));
       data->state.os_errno = error;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/content_encoding.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/content_encoding.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/content_encoding.c	2009-08-30 19:28:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/content_encoding.c	2010-02-09 17:35:48.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: content_encoding.c,v 1.34 2009-08-29 03:42:13 gknauf Exp $
+ * $Id: content_encoding.c,v 1.36 2010-02-09 09:35:48 bagder Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifdef HAVE_LIBZ
 
@@ -37,13 +37,13 @@
 #include "memdebug.h"
 
 /* Comment this out if zlib is always going to be at least ver. 1.2.0.4
    (doing so will reduce code size slightly). */
 #define OLD_ZLIB_SUPPORT 1
 
-#define DSIZ 0x10000             /* buffer size for decompressed data */
+#define DSIZ CURL_MAX_WRITE_SIZE /* buffer size for decompressed data */
 
 #define GZIP_MAGIC_0 0x1f
 #define GZIP_MAGIC_1 0x8b
 
 /* gzip flag byte */
 #define ASCII_FLAG   0x01 /* bit 0 set: file probably ascii text */
@@ -277,33 +277,33 @@
     z->zfree = (free_func)Z_NULL;
     z->opaque = 0;
     z->next_in = NULL;
     z->avail_in = 0;
 
     if(strcmp(zlibVersion(), "1.2.0.4") >= 0) {
-        /* zlib ver. >= 1.2.0.4 supports transparent gzip decompressing */
-        if(inflateInit2(z, MAX_WBITS+32) != Z_OK) {
-          return process_zlib_error(conn, z);
-        }
-        k->zlib_init = ZLIB_INIT_GZIP; /* Transparent gzip decompress state */
-
-    } else {
-        /* we must parse the gzip header ourselves */
-        if(inflateInit2(z, -MAX_WBITS) != Z_OK) {
-          return process_zlib_error(conn, z);
-        }
-        k->zlib_init = ZLIB_INIT;   /* Initial call state */
+      /* zlib ver. >= 1.2.0.4 supports transparent gzip decompressing */
+      if(inflateInit2(z, MAX_WBITS+32) != Z_OK) {
+        return process_zlib_error(conn, z);
+      }
+      k->zlib_init = ZLIB_INIT_GZIP; /* Transparent gzip decompress state */
+    }
+    else {
+      /* we must parse the gzip header ourselves */
+      if(inflateInit2(z, -MAX_WBITS) != Z_OK) {
+        return process_zlib_error(conn, z);
+      }
+      k->zlib_init = ZLIB_INIT;   /* Initial call state */
     }
   }
 
   if(k->zlib_init == ZLIB_INIT_GZIP) {
-     /* Let zlib handle the gzip decompression entirely */
-     z->next_in = (Bytef *)k->str;
-     z->avail_in = (uInt)nread;
-     /* Now uncompress the data */
-     return inflate_stream(conn, k);
+    /* Let zlib handle the gzip decompression entirely */
+    z->next_in = (Bytef *)k->str;
+    z->avail_in = (uInt)nread;
+    /* Now uncompress the data */
+    return inflate_stream(conn, k);
   }
 
 #ifndef OLD_ZLIB_SUPPORT
   /* Support for old zlib versions is compiled away and we are running with
      an old version, so return an error. */
   return exit_zlib(z, &k->zlib_init, CURLE_FUNCTION_NOT_FOUND);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/cookie.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/cookie.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/cookie.c	2009-10-26 02:15:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/cookie.c	2010-01-30 22:30:27.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: cookie.c,v 1.111 2009-10-25 18:15:14 bagder Exp $
+ * $Id: cookie.c,v 1.116 2010-01-28 15:34:18 yangtse Exp $
  ***************************************************************************/
 
 /***
 
 
 RECEIVING COOKIE INFORMATION
@@ -201,13 +201,13 @@
 
 #ifdef CURL_DISABLE_VERBOSE_STRINGS
   (void)data;
 #endif
 
   /* First, alloc and init a new struct for it */
-  co = calloc(sizeof(struct Cookie), 1);
+  co = calloc(1, sizeof(struct Cookie));
   if(!co)
     return NULL; /* bail out if we're this low on memory */
 
   if(httpheader) {
     /* This line was read off a HTTP-header */
     const char *ptr;
@@ -678,13 +678,14 @@
     lastc = clist;
     clist = clist->next;
   }
 
   if(c->running)
     /* Only show this when NOT reading the cookies from a file */
-    infof(data, "%s cookie %s=\"%s\" for domain %s, path %s, expire %d\n",
+    infof(data, "%s cookie %s=\"%s\" for domain %s, path %s, "
+          "expire %" FORMAT_OFF_T "\n",
           replace_old?"Replaced":"Added", co->name, co->value,
           co->domain, co->path, co->expires);
 
   if(!replace_old) {
     /* then make the last item point on this new one */
     if(lastc)
@@ -771,12 +772,24 @@
 
   c->running = TRUE;          /* now, we're running */
 
   return c;
 }
 
+/* sort this so that the longest path gets before the shorter path */
+static int cookie_sort(const void *p1, const void *p2)
+{
+  struct Cookie *c1 = *(struct Cookie **)p1;
+  struct Cookie *c2 = *(struct Cookie **)p2;
+
+  size_t l1 = c1->path?strlen(c1->path):0;
+  size_t l2 = c2->path?strlen(c2->path):0;
+
+  return (int)(l2 - l1);
+}
+
 /*****************************************************************************
  *
  * Curl_cookie_getlist()
  *
  * For a given host and path, return a linked list of cookies that the
  * client should send to the server if used now. The secure boolean informs
@@ -791,12 +804,13 @@
                                    bool secure)
 {
   struct Cookie *newco;
   struct Cookie *co;
   time_t now = time(NULL);
   struct Cookie *mainco=NULL;
+  size_t matches = 0;
 
   if(!c || !c->cookies)
     return NULL; /* no cookie struct or no cookies in the struct */
 
   co = c->cookies;
 
@@ -831,14 +845,17 @@
 
             /* then modify our next */
             newco->next = mainco;
 
             /* point the main to us */
             mainco = newco;
+
+            matches++;
           }
           else {
+            fail:
             /* failure, clear up the allocated chain and return NULL */
             while(mainco) {
               co = mainco->next;
               free(mainco);
               mainco = co;
             }
@@ -848,12 +865,42 @@
         }
       }
     }
     co = co->next;
   }
 
+  if(matches) {
+    /* Now we need to make sure that if there is a name appearing more than
+       once, the longest specified path version comes first. To make this
+       the swiftest way, we just sort them all based on path length. */
+    struct Cookie **array;
+    size_t i;
+
+    /* alloc an array and store all cookie pointers */
+    array = (struct Cookie **)malloc(sizeof(struct Cookie *) * matches);
+    if(!array)
+      goto fail;
+
+    co = mainco;
+
+    for(i=0; co; co = co->next)
+      array[i++] = co;
+
+    /* now sort the cookie pointers in path lenth order */
+    qsort(array, matches, sizeof(struct Cookie *), cookie_sort);
+
+    /* remake the linked list order according to the new order */
+
+    mainco = array[0]; /* start here */
+    for(i=0; i<matches-1; i++)
+      array[i]->next = array[i+1];
+    array[matches-1]->next = NULL; /* terminate the list */
+
+    free(array); /* remove the temporary data again */
+  }
+
   return mainco; /* return the new list */
 }
 
 /*****************************************************************************
  *
  * Curl_cookie_clearall()
@@ -906,13 +953,13 @@
  *
  ****************************************************************************/
 void Curl_cookie_clearsess(struct CookieInfo *cookies)
 {
   struct Cookie *first, *curr, *next, *prev = NULL;
 
-  if(!cookies->cookies || !cookies->cookies)
+  if(!cookies || !cookies->cookies)
     return;
 
   first = curr = prev = cookies->cookies;
 
   for(; curr; curr = next) {
     next = curr->next;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/curl_addrinfo.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/curl_addrinfo.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/curl_addrinfo.c	2009-05-11 05:18:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/curl_addrinfo.c	2010-01-22 20:14:35.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: curl_addrinfo.c,v 1.17 2009-05-10 10:24:53 yangtse Exp $
+ * $Id: curl_addrinfo.c,v 1.19 2010-01-18 20:22:04 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <curl/curl.h>
 
@@ -35,13 +35,13 @@
 #  include <netdb.h>
 #endif
 #ifdef HAVE_ARPA_INET_H
 #  include <arpa/inet.h>
 #endif
 
-#ifdef  VMS
+#ifdef __VMS
 #  include <in.h>
 #  include <inet.h>
 #  include <stdlib.h>
 #endif
 
 #if defined(NETWARE) && defined(__NOVELL_LIBC__)
@@ -362,13 +362,13 @@
 
 Curl_addrinfo *
 Curl_ip2addr(int af, const void *inaddr, const char *hostname, int port)
 {
   Curl_addrinfo *ai;
 
-#if defined(VMS) && \
+#if defined(__VMS) && \
     defined(__INITIAL_POINTER_SIZE) && (__INITIAL_POINTER_SIZE == 64)
 #pragma pointer_size save
 #pragma pointer_size short
 #pragma message disable PTRMISMATCH
 #endif
 
@@ -415,13 +415,13 @@
   h->h_addrtype = (short)af;
   h->h_length = (short)addrsize;
   h->h_addr_list = &buf->h_addr_list[0];
   h->h_addr_list[0] = addrentry;
   h->h_addr_list[1] = NULL; /* terminate list of entries */
 
-#if defined(VMS) && \
+#if defined(__VMS) && \
     defined(__INITIAL_POINTER_SIZE) && (__INITIAL_POINTER_SIZE == 64)
 #pragma pointer_size restore
 #pragma message enable PTRMISMATCH
 #endif
 
   ai = Curl_he2ai(h, port);
@@ -444,15 +444,14 @@
 
 void
 curl_dofreeaddrinfo(struct addrinfo *freethis,
                     int line, const char *source)
 {
   (freeaddrinfo)(freethis);
-  if(logfile)
-    fprintf(logfile, "ADDR %s:%d freeaddrinfo(%p)\n",
-            source, line, (void *)freethis);
+  curl_memlog("ADDR %s:%d freeaddrinfo(%p)\n",
+              source, line, (void *)freethis);
 }
 #endif /* defined(CURLDEBUG) && defined(HAVE_FREEADDRINFO) */
 
 
 #if defined(CURLDEBUG) && defined(HAVE_GETADDRINFO)
 /*
@@ -468,21 +467,17 @@
                    const char *service,
                    const struct addrinfo *hints,
                    struct addrinfo **result,
                    int line, const char *source)
 {
   int res=(getaddrinfo)(hostname, service, hints, result);
-  if(0 == res) {
+  if(0 == res)
     /* success */
-    if(logfile)
-      fprintf(logfile, "ADDR %s:%d getaddrinfo() = %p\n",
-              source, line, (void *)*result);
-  }
-  else {
-    if(logfile)
-      fprintf(logfile, "ADDR %s:%d getaddrinfo() failed\n",
-              source, line);
-  }
+    curl_memlog("ADDR %s:%d getaddrinfo() = %p\n",
+                source, line, (void *)*result);
+  else
+    curl_memlog("ADDR %s:%d getaddrinfo() failed\n",
+                source, line);
   return res;
 }
 #endif /* defined(CURLDEBUG) && defined(HAVE_GETADDRINFO) */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/curl_addrinfo.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/curl_addrinfo.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/curl_addrinfo.h	2009-05-04 05:49:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/curl_addrinfo.h	2010-01-01 22:17:52.000000000 +0800
@@ -17,13 +17,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: curl_addrinfo.h,v 1.4 2009-05-02 02:37:34 yangtse Exp $
+ * $Id: curl_addrinfo.h,v 1.5 2009-12-30 17:59:56 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifdef HAVE_SYS_SOCKET_H
 #  include <sys/socket.h>
@@ -35,13 +35,13 @@
 #  include <netdb.h>
 #endif
 #ifdef HAVE_ARPA_INET_H
 #  include <arpa/inet.h>
 #endif
 
-#ifdef  VMS
+#ifdef __VMS
 #  include <in.h>
 #  include <inet.h>
 #  include <stdlib.h>
 #endif
 
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/curl_config.h.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/curl_config.h.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/curl_config.h.in	2009-11-04 20:26:01.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/curl_config.h.in	2010-02-05 05:42:58.000000000 +0800
@@ -24,21 +24,33 @@
 /* to disable FTP */
 #undef CURL_DISABLE_FTP
 
 /* to disable HTTP */
 #undef CURL_DISABLE_HTTP
 
+/* to disable IMAP */
+#undef CURL_DISABLE_IMAP
+
 /* to disable LDAP */
 #undef CURL_DISABLE_LDAP
 
 /* to disable LDAPS */
 #undef CURL_DISABLE_LDAPS
 
+/* to disable POP3 */
+#undef CURL_DISABLE_POP3
+
 /* to disable proxies */
 #undef CURL_DISABLE_PROXY
 
+/* to disable RTSP */
+#undef CURL_DISABLE_RTSP
+
+/* to disable SMTP */
+#undef CURL_DISABLE_SMTP
+
 /* to disable TELNET */
 #undef CURL_DISABLE_TELNET
 
 /* to disable TFTP */
 #undef CURL_DISABLE_TFTP
 
@@ -57,15 +69,12 @@
 /* Use W$ LDAP implementation */
 #undef CURL_LDAP_WIN
 
 /* when not building a shared library */
 #undef CURL_STATICLIB
 
-/* Set to explicitly specify we don't want to use thread-safe functions */
-#undef DISABLED_THREADSAFE
-
 /* your Entropy Gathering Daemon socket pathname */
 #undef EGD_SOCKET
 
 /* Define if you want to enable IPv6 support */
 #undef ENABLE_IPV6
 
@@ -132,12 +141,15 @@
 /* Define to 1 if you have the <des.h> header file. */
 #undef HAVE_DES_H
 
 /* Define to 1 if you have the <dlfcn.h> header file. */
 #undef HAVE_DLFCN_H
 
+/* Define to 1 if you have the `ENGINE_cleanup' function. */
+#undef HAVE_ENGINE_CLEANUP
+
 /* Define to 1 if you have the `ENGINE_load_builtin_engines' function. */
 #undef HAVE_ENGINE_LOAD_BUILTIN_ENGINES
 
 /* Define to 1 if you have the <errno.h> header file. */
 #undef HAVE_ERRNO_H
 
@@ -168,12 +180,15 @@
 /* Define to 1 if you have the ftruncate function. */
 #undef HAVE_FTRUNCATE
 
 /* Define to 1 if you have a working getaddrinfo function. */
 #undef HAVE_GETADDRINFO
 
+/* Define to 1 if the getaddrinfo function is threadsafe. */
+#undef HAVE_GETADDRINFO_THREADSAFE
+
 /* Define to 1 if you have the `geteuid' function. */
 #undef HAVE_GETEUID
 
 /* Define to 1 if you have the gethostbyaddr function. */
 #undef HAVE_GETHOSTBYADDR
 
@@ -744,12 +759,15 @@
 /* Define to 1 if you need the memory.h header file even with stdlib.h */
 #undef NEED_MEMORY_H
 
 /* Define to 1 if _REENTRANT preprocessor symbol must be defined. */
 #undef NEED_REENTRANT
 
+/* Define to 1 if _THREAD_SAFE preprocessor symbol must be defined. */
+#undef NEED_THREAD_SAFE
+
 /* cpu-machine-OS */
 #undef OS
 
 /* Name of package */
 #undef PACKAGE
 
@@ -861,12 +879,15 @@
 /* The size of `long', as computed by sizeof. */
 #undef SIZEOF_LONG
 
 /* The size of `off_t', as computed by sizeof. */
 #undef SIZEOF_OFF_T
 
+/* The size of `short', as computed by sizeof. */
+#undef SIZEOF_SHORT
+
 /* The size of `size_t', as computed by sizeof. */
 #undef SIZEOF_SIZE_T
 
 /* The size of `time_t', as computed by sizeof. */
 #undef SIZEOF_TIME_T
 
@@ -879,13 +900,13 @@
 /* Define to the type of arg 3 for strerror_r. */
 #undef STRERROR_R_TYPE_ARG3
 
 /* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
 #undef TIME_WITH_SYS_TIME
 
-/* Define if you want to enable c-ares support */
+/* Define to enable c-ares support */
 #undef USE_ARES
 
 /* Define to disable non-blocking sockets. */
 #undef USE_BLOCKING_SOCKETS
 
 /* if GnuTLS is enabled */
@@ -930,15 +951,12 @@
 /* Number of bits in a file offset, on hosts where this is settable. */
 #undef _FILE_OFFSET_BITS
 
 /* Define for large files, on AIX-style hosts. */
 #undef _LARGE_FILES
 
-/* define this if you need it to compile thread-safe code */
-#undef _THREAD_SAFE
-
 /* Define to empty if `const' does not conform to ANSI C. */
 #undef const
 
 /* Type to use in place of in_addr_t when system does not provide it. */
 #undef in_addr_t
 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib: curl_threads.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib: curl_threads.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/easy.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/easy.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/easy.c	2009-10-29 04:21:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/easy.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: easy.c,v 1.145 2009-10-27 16:38:42 yangtse Exp $
+ * $Id: easy.c,v 1.148 2010-02-04 19:44:31 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 /* -- WIN32 approved -- */
 #include <stdio.h>
@@ -616,13 +616,13 @@
  */
 CURL *curl_easy_duphandle(CURL *incurl)
 {
   bool fail = TRUE;
   struct SessionHandle *data=(struct SessionHandle *)incurl;
 
-  struct SessionHandle *outcurl = calloc(sizeof(struct SessionHandle), 1);
+  struct SessionHandle *outcurl = calloc(1, sizeof(struct SessionHandle));
 
   if(NULL == outcurl)
     return NULL; /* failure */
 
   do {
 
@@ -879,17 +879,18 @@
 
   if(data->set.convtonetwork) {
     /* use translation callback */
     rc = data->set.convtonetwork(buffer, length);
     if(rc != CURLE_OK) {
       failf(data,
-            "CURLOPT_CONV_TO_NETWORK_FUNCTION callback returned %i: %s",
-            rc, curl_easy_strerror(rc));
+            "CURLOPT_CONV_TO_NETWORK_FUNCTION callback returned %d: %s",
+            (int)rc, curl_easy_strerror(rc));
     }
     return(rc);
-  } else {
+  }
+  else {
 #ifdef HAVE_ICONV
     /* do the translation ourselves */
     char *input_ptr, *output_ptr;
     size_t in_bytes, out_bytes, rc;
     int error;
 
@@ -939,14 +940,14 @@
 
   if(data->set.convfromnetwork) {
     /* use translation callback */
     rc = data->set.convfromnetwork(buffer, length);
     if(rc != CURLE_OK) {
       failf(data,
-            "CURLOPT_CONV_FROM_NETWORK_FUNCTION callback returned %i: %s",
-            rc, curl_easy_strerror(rc));
+            "CURLOPT_CONV_FROM_NETWORK_FUNCTION callback returned %d: %s",
+            (int)rc, curl_easy_strerror(rc));
     }
     return(rc);
   }
   else {
 #ifdef HAVE_ICONV
     /* do the translation ourselves */
@@ -1000,17 +1001,18 @@
 
   if(data->set.convfromutf8) {
     /* use translation callback */
     rc = data->set.convfromutf8(buffer, length);
     if(rc != CURLE_OK) {
       failf(data,
-            "CURLOPT_CONV_FROM_UTF8_FUNCTION callback returned %i: %s",
-            rc, curl_easy_strerror(rc));
+            "CURLOPT_CONV_FROM_UTF8_FUNCTION callback returned %d: %s",
+            (int)rc, curl_easy_strerror(rc));
     }
     return(rc);
-  } else {
+  }
+  else {
 #ifdef HAVE_ICONV
     /* do the translation ourselves */
     const char *input_ptr;
     char *output_ptr;
     size_t in_bytes, out_bytes, rc;
     int error;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/escape.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/escape.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/escape.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/escape.c	2010-01-23 07:21:39.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: escape.c,v 1.45 2009-04-21 11:46:16 yangtse Exp $
+ * $Id: escape.c,v 1.46 2010-01-22 23:21:39 bagder Exp $
  ***************************************************************************/
 
 /* Escape and unescape URL encoding in strings. The functions return a new
  * allocated string or NULL if an error occurred.  */
 
 #include "setup.h"
@@ -100,13 +100,14 @@
   while(length--) {
     in = *string;
 
     if (Curl_isalnum(in)) {
       /* just copy this */
       ns[strindex++]=in;
-    } else {
+    }
+    else {
       /* encode it */
       newlen += 2; /* the size grows with two, since this'll become a %XX */
       if(newlen > alloc) {
         alloc *= 2;
         testing_ptr = realloc(ns, alloc);
         if(!testing_ptr) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/file.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/file.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/file.c	2009-06-05 14:17:23.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/file.c	2010-01-22 20:14:35.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: file.c,v 1.121 2009-06-04 19:11:11 yangtse Exp $
+ * $Id: file.c,v 1.122 2009-11-18 10:33:54 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifndef CURL_DISABLE_FILE
 /* -- WIN32 approved -- */
@@ -207,13 +207,13 @@
 
   /* If there already is a protocol-specific struct allocated for this
      sessionhandle, deal with it */
   Curl_reset_reqproto(conn);
 
   if(!data->state.proto.file) {
-    file = calloc(sizeof(struct FILEPROTO), 1);
+    file = calloc(1, sizeof(struct FILEPROTO));
     if(!file) {
       free(real_path);
       return CURLE_OUT_OF_MEMORY;
     }
     data->state.proto.file = file;
   }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/file.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/file.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/file.h	2007-10-31 18:11:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/file.h	2009-12-13 06:17:51.000000000 +0800
@@ -5,25 +5,37 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2007, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: file.h,v 1.17 2007-10-30 23:00:40 danf Exp $
+ * $Id: file.h,v 1.18 2009-12-12 22:17:51 bagder Exp $
  ***************************************************************************/
+
+
+/****************************************************************************
+ * FILE unique setup
+ ***************************************************************************/
+struct FILEPROTO {
+  char *path; /* the path we operate on */
+  char *freepath; /* pointer to the allocated block we must free, this might
+                     differ from the 'path' pointer */
+  int fd;     /* open file descriptor to read from! */
+};
+
 #ifndef CURL_DISABLE_FILE
 extern const struct Curl_handler Curl_handler_file;
 #endif
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/formdata.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/formdata.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/formdata.c	2009-10-19 01:16:41.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/formdata.c	2010-01-23 07:21:39.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: formdata.c,v 1.122 2009-10-18 03:37:39 yangtse Exp $
+ * $Id: formdata.c,v 1.124 2010-01-22 23:21:39 bagder Exp $
  ***************************************************************************/
 
 /*
   Debug the form generator stand-alone by compiling this source file with:
 
   gcc -DHAVE_CONFIG_H -I../ -g -D_FORM_DEBUG -DCURLDEBUG -o formdata \
@@ -169,13 +169,13 @@
             char *showfilename, char *userp,
             struct curl_httppost *parent_post,
             struct curl_httppost **httppost,
             struct curl_httppost **last_post)
 {
   struct curl_httppost *post;
-  post = calloc(sizeof(struct curl_httppost), 1);
+  post = calloc(1, sizeof(struct curl_httppost));
   if(post) {
     post->name = name;
     post->namelength = (long)(name?(namelength?namelength:strlen(name)):0);
     post->contents = value;
     post->contentslength = (long)contentslength;
     post->buffer = buffer;
@@ -220,13 +220,13 @@
  ***************************************************************************/
 static FormInfo * AddFormInfo(char *value,
                               char *contenttype,
                               FormInfo *parent_form_info)
 {
   FormInfo *form_info;
-  form_info = calloc(sizeof(FormInfo), 1);
+  form_info = calloc(1, sizeof(struct FormInfo));
   if(form_info) {
     if(value)
       form_info->value = value;
     if(contenttype)
       form_info->contenttype = contenttype;
     form_info->flags = HTTPPOST_FILENAME;
@@ -408,13 +408,13 @@
      va_list arguments. */
   bool array_state = FALSE;
 
   /*
    * We need to allocate the first struct to fill in.
    */
-  first_form = calloc(sizeof(struct FormInfo), 1);
+  first_form = calloc(1, sizeof(struct FormInfo));
   if(!first_form)
     return CURL_FORMADD_MEMORY;
 
   current_form = first_form;
 
   /*
@@ -995,13 +995,14 @@
             fclose(temp.fp);
           }
           Curl_formclean(&data);
           return -1;
         }
       } while(nread == sizeof(buffer));
-    } else {
+    }
+    else {
       if(ptr->length != append(arg, ptr->line, ptr->length)) {
         Curl_formclean(&data);
         return -1;
       }
     }
   }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/ftp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/ftp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/ftp.c	2009-09-20 19:52:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/ftp.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: ftp.c,v 1.529 2009-09-17 16:11:54 yangtse Exp $
+ * $Id: ftp.c,v 1.546 2010-02-05 09:32:11 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifndef CURL_DISABLE_FTP
 #include <stdio.h>
@@ -46,13 +46,13 @@
 #ifdef HAVE_UTSNAME_H
 #include <sys/utsname.h>
 #endif
 #ifdef HAVE_NETDB_H
 #include <netdb.h>
 #endif
-#ifdef  VMS
+#ifdef __VMS
 #include <in.h>
 #include <inet.h>
 #endif
 
 #if (defined(NETWARE) && defined(__NOVELL_LIBC__))
 #undef in_addr_t
@@ -87,12 +87,13 @@
 #include "select.h"
 #include "parsedate.h" /* for the week day and month names */
 #include "sockaddr.h" /* required for Curl_sockaddr_storage */
 #include "multiif.h"
 #include "url.h"
 #include "rawstr.h"
+#include "speedcheck.h"
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
 #include "curl_memory.h"
 /* The last #include file should be: */
@@ -102,20 +103,12 @@
 #define NI_MAXHOST 1025
 #endif
 #ifndef INET_ADDRSTRLEN
 #define INET_ADDRSTRLEN 16
 #endif
 
-#ifdef __SYMBIAN32__
-/* Symbian OS panics when given a timeout much greater than 1/2 hour */
-#define RESP_TIMEOUT (1800*1000)
-#else
-/* Default response timeout in milliseconds */
-#define RESP_TIMEOUT (3600*1000)
-#endif
-
 #ifdef CURL_DISABLE_VERBOSE_STRINGS
 #define ftp_pasv_verbose(a,b,c,d)  do { } while(0)
 #endif
 
 /* Local API functions */
 static CURLcode ftp_sendquote(struct connectdata *conn,
@@ -136,37 +129,37 @@
 static CURLcode ftp_nb_type(struct connectdata *conn,
                             bool ascii, ftpstate newstate);
 static int ftp_need_type(struct connectdata *conn,
                          bool ascii);
 static CURLcode ftp_do(struct connectdata *conn, bool *done);
 static CURLcode ftp_done(struct connectdata *conn,
-                              CURLcode, bool premature);
+                         CURLcode, bool premature);
 static CURLcode ftp_connect(struct connectdata *conn, bool *done);
 static CURLcode ftp_disconnect(struct connectdata *conn);
 static CURLcode ftp_nextconnect(struct connectdata *conn);
 static CURLcode ftp_multi_statemach(struct connectdata *conn, bool *done);
 static int ftp_getsock(struct connectdata *conn,
-                            curl_socket_t *socks,
-                            int numsocks);
+                       curl_socket_t *socks,
+                       int numsocks);
 static CURLcode ftp_doing(struct connectdata *conn,
-                               bool *dophase_done);
+                          bool *dophase_done);
 static CURLcode ftp_setup_connection(struct connectdata * conn);
 
 /* easy-to-use macro: */
 #define FTPSENDF(x,y,z)    if((result = Curl_ftpsendf(x,y,z)) != CURLE_OK) \
                               return result
-#define NBFTPSENDF(x,y,z)  if((result = Curl_nbftpsendf(x,y,z)) != CURLE_OK) \
+#define PPSENDF(x,y,z)  if((result = Curl_pp_sendf(x,y,z)) != CURLE_OK) \
                               return result
 
 
 /*
  * FTP protocol handler.
  */
 
 const struct Curl_handler Curl_handler_ftp = {
-  "FTP",                                /* scheme */
+  "FTP",                           /* scheme */
   ftp_setup_connection,            /* setup_connection */
   ftp_do,                          /* do_it */
   ftp_done,                        /* done */
   ftp_nextconnect,                 /* do_more */
   ftp_connect,                     /* connect_it */
   ftp_multi_statemach,             /* connecting */
@@ -183,13 +176,13 @@
 #ifdef USE_SSL
 /*
  * FTPS protocol handler.
  */
 
 const struct Curl_handler Curl_handler_ftps = {
-  "FTPS",                               /* scheme */
+  "FTPS",                          /* scheme */
   ftp_setup_connection,            /* setup_connection */
   ftp_do,                          /* do_it */
   ftp_done,                        /* done */
   ftp_nextconnect,                 /* do_more */
   ftp_connect,                     /* connect_it */
   ftp_multi_statemach,             /* connecting */
@@ -205,13 +198,13 @@
 
 #ifndef CURL_DISABLE_HTTP
 /*
  * HTTP-proxyed FTP protocol handler.
  */
 
-const struct Curl_handler Curl_handler_ftp_proxy = {
+static const struct Curl_handler Curl_handler_ftp_proxy = {
   "FTP",                                /* scheme */
   ZERO_NULL,                            /* setup_connection */
   Curl_http,                            /* do_it */
   Curl_http_done,                       /* done */
   ZERO_NULL,                            /* do_more */
   ZERO_NULL,                            /* connect_it */
@@ -228,13 +221,13 @@
 
 #ifdef USE_SSL
 /*
  * HTTP-proxyed FTPS protocol handler.
  */
 
-const struct Curl_handler Curl_handler_ftps_proxy = {
+static const struct Curl_handler Curl_handler_ftps_proxy = {
   "FTPS",                               /* scheme */
   ZERO_NULL,                            /* setup_connection */
   Curl_http,                            /* do_it */
   Curl_http_done,                       /* done */
   ZERO_NULL,                            /* do_more */
   ZERO_NULL,                            /* connect_it */
@@ -305,274 +298,100 @@
  *
  */
 static CURLcode AllowServerConnect(struct connectdata *conn)
 {
   struct SessionHandle *data = conn->data;
   curl_socket_t sock = conn->sock[SECONDARYSOCKET];
-  long timeout_ms = Curl_timeleft(conn, NULL, TRUE);
-
-  if(timeout_ms < 0) {
-    /* if a timeout was already reached, bail out */
-    failf(data, "Timed out before server could connect to us");
-    return CURLE_OPERATION_TIMEDOUT;
-  }
-
-  switch (Curl_socket_ready(sock, CURL_SOCKET_BAD, (int)timeout_ms)) {
-  case -1: /* error */
-    /* let's die here */
-    failf(data, "Error while waiting for server connect");
-    return CURLE_FTP_PORT_FAILED;
-  case 0:  /* timeout */
-    /* let's die here */
-    failf(data, "Timeout while waiting for server connect");
-    return CURLE_FTP_PORT_FAILED;
-  default:
-    /* we have received data here */
-    {
-      curl_socket_t s = CURL_SOCKET_BAD;
+  long timeout_ms;
+  long interval_ms;
+  curl_socket_t s = CURL_SOCKET_BAD;
 #ifdef ENABLE_IPV6
-      struct Curl_sockaddr_storage add;
+  struct Curl_sockaddr_storage add;
 #else
-      struct sockaddr_in add;
+  struct sockaddr_in add;
 #endif
-      curl_socklen_t size = (curl_socklen_t) sizeof(add);
+  curl_socklen_t size = (curl_socklen_t) sizeof(add);
+
+  for(;;) {
+    timeout_ms = Curl_timeleft(conn, NULL, TRUE);
 
+    if(timeout_ms <= 0) {
+      /* if a timeout was already reached, bail out */
+      failf(data, "Timeout while waiting for server connect");
+      return CURLE_OPERATION_TIMEDOUT;
+    }
+
+    interval_ms = 1000;  /* use 1 second timeout intervals */
+    if(timeout_ms < interval_ms)
+      interval_ms = timeout_ms;
+
+    switch (Curl_socket_ready(sock, CURL_SOCKET_BAD, (int)interval_ms)) {
+    case -1: /* error */
+      /* let's die here */
+      failf(data, "Error while waiting for server connect");
+      return CURLE_FTP_PORT_FAILED;
+    case 0:  /* timeout */
+      break; /* loop */
+    default:
+      /* we have received data here */
       if(0 == getsockname(sock, (struct sockaddr *) &add, &size)) {
         size = sizeof(add);
 
         s=accept(sock, (struct sockaddr *) &add, &size);
       }
       sclose(sock); /* close the first socket */
 
       if(CURL_SOCKET_BAD == s) {
-        /* DIE! */
         failf(data, "Error accept()ing server connect");
         return CURLE_FTP_PORT_FAILED;
       }
       infof(data, "Connection accepted from server\n");
 
       conn->sock[SECONDARYSOCKET] = s;
       curlx_nonblock(s, TRUE); /* enable non-blocking */
-    }
-    break;
+      return CURLE_OK;
+    } /* switch() */
   }
-
-  return CURLE_OK;
-}
-
-/* initialize stuff to prepare for reading a fresh new response */
-static void ftp_respinit(struct connectdata *conn)
-{
-  struct ftp_conn *ftpc = &conn->proto.ftpc;
-  ftpc->nread_resp = 0;
-  ftpc->linestart_resp = conn->data->state.buffer;
-  ftpc->pending_resp = TRUE;
+  /* never reaches this point */
 }
 
 /* macro to check for a three-digit ftp status code at the start of the
    given string */
-#define STATUSCODE(line) (ISDIGIT(line[0]) && ISDIGIT(line[1]) && \
-                        ISDIGIT(line[2]))
+#define STATUSCODE(line) (ISDIGIT(line[0]) && ISDIGIT(line[1]) &&       \
+                          ISDIGIT(line[2]))
 
 /* macro to check for the last line in an FTP server response */
 #define LASTLINE(line) (STATUSCODE(line) && (' ' == line[3]))
 
+static int ftp_endofresp(struct pingpong *pp,
+                         int *code)
+{
+  char *line = pp->linestart_resp;
+  size_t len = pp->nread_resp;
+
+  if((len > 3) && LASTLINE(line)) {
+    *code = atoi(line);
+    return 1;
+  }
+  return 0;
+}
+
 static CURLcode ftp_readresp(curl_socket_t sockfd,
-                             struct connectdata *conn,
+                             struct pingpong *pp,
                              int *ftpcode, /* return the ftp-code if done */
                              size_t *size) /* size of the response */
 {
-  ssize_t perline; /* count bytes per line */
-  bool keepon=TRUE;
-  ssize_t gotbytes;
-  char *ptr;
+  struct connectdata *conn = pp->conn;
+#if defined(HAVE_KRB4) || defined(HAVE_GSSAPI)
   struct SessionHandle *data = conn->data;
   char * const buf = data->state.buffer;
-  CURLcode result = CURLE_OK;
-  struct ftp_conn *ftpc = &conn->proto.ftpc;
-  int code = 0;
-
-  *ftpcode = 0; /* 0 for errors or not done */
-  *size = 0;
-
-  ptr=buf + ftpc->nread_resp;
-
-  /* number of bytes in the current line, so far */
-  perline = (ssize_t)(ptr-ftpc->linestart_resp);
-
-  keepon=TRUE;
-
-  while((ftpc->nread_resp<BUFSIZE) && (keepon && !result)) {
-
-    if(ftpc->cache) {
-      /* we had data in the "cache", copy that instead of doing an actual
-       * read
-       *
-       * ftp->cache_size is cast to int here.  This should be safe,
-       * because it would have been populated with something of size
-       * int to begin with, even though its datatype may be larger
-       * than an int.
-       */
-      DEBUGASSERT((ptr+ftpc->cache_size) <= (buf+BUFSIZE+1));
-      memcpy(ptr, ftpc->cache, (int)ftpc->cache_size);
-      gotbytes = (int)ftpc->cache_size;
-      free(ftpc->cache);    /* free the cache */
-      ftpc->cache = NULL;   /* clear the pointer */
-      ftpc->cache_size = 0; /* zero the size just in case */
-    }
-    else {
-      int res;
-#if defined(HAVE_KRB4) || defined(HAVE_GSSAPI)
-      enum protection_level prot = conn->data_prot;
-
-      conn->data_prot = 0;
-#endif
-      DEBUGASSERT((ptr+BUFSIZE-ftpc->nread_resp) <= (buf+BUFSIZE+1));
-      res = Curl_read(conn, sockfd, ptr, BUFSIZE-ftpc->nread_resp,
-                      &gotbytes);
-#if defined(HAVE_KRB4) || defined(HAVE_GSSAPI)
-      conn->data_prot = prot;
 #endif
-      if(res < 0)
-        /* EWOULDBLOCK */
-        return CURLE_OK; /* return */
-
-#ifdef CURL_DOES_CONVERSIONS
-      if((res == CURLE_OK) && (gotbytes > 0)) {
-        /* convert from the network encoding */
-        res = Curl_convert_from_network(data, ptr, gotbytes);
-        /* Curl_convert_from_network calls failf if unsuccessful */
-      }
-#endif /* CURL_DOES_CONVERSIONS */
-
-      if(CURLE_OK != res) {
-        result = (CURLcode)res; /* Set outer result variable to this error. */
-        keepon = FALSE;
-      }
-    }
-
-    if(!keepon)
-      ;
-    else if(gotbytes <= 0) {
-      keepon = FALSE;
-      result = CURLE_RECV_ERROR;
-      failf(data, "FTP response reading failed");
-    }
-    else {
-      /* we got a whole chunk of data, which can be anything from one
-       * byte to a set of lines and possible just a piece of the last
-       * line */
-      ssize_t i;
-      ssize_t clipamount = 0;
-      bool restart = FALSE;
-
-      data->req.headerbytecount += gotbytes;
-
-      ftpc->nread_resp += gotbytes;
-      for(i = 0; i < gotbytes; ptr++, i++) {
-        perline++;
-        if(*ptr=='\n') {
-          /* a newline is CRLF in ftp-talk, so the CR is ignored as
-             the line isn't really terminated until the LF comes */
-
-          /* output debug output if that is requested */
-#if defined(HAVE_KRB4) || defined(HAVE_GSSAPI)
-          if(!conn->sec_complete)
-#endif
-          if(data->set.verbose)
-            Curl_debug(data, CURLINFO_HEADER_IN,
-                       ftpc->linestart_resp, (size_t)perline, conn);
-
-          /*
-           * We pass all response-lines to the callback function registered
-           * for "headers". The response lines can be seen as a kind of
-           * headers.
-           */
-          result = Curl_client_write(conn, CLIENTWRITE_HEADER,
-                                     ftpc->linestart_resp, perline);
-          if(result)
-            return result;
-
-          if(perline>3 && LASTLINE(ftpc->linestart_resp)) {
-            /* This is the end of the last line, copy the last line to the
-               start of the buffer and zero terminate, for old times sake (and
-               krb4)! */
-            char *meow;
-            int n;
-            for(meow=ftpc->linestart_resp, n=0; meow<ptr; meow++, n++)
-              buf[n] = *meow;
-            *meow=0; /* zero terminate */
-            keepon=FALSE;
-            ftpc->linestart_resp = ptr+1; /* advance pointer */
-            i++; /* skip this before getting out */
-
-            *size = ftpc->nread_resp; /* size of the response */
-            ftpc->nread_resp = 0; /* restart */
-            break;
-          }
-          perline=0; /* line starts over here */
-          ftpc->linestart_resp = ptr+1;
-        }
-      }
-
-      if(!keepon && (i != gotbytes)) {
-        /* We found the end of the response lines, but we didn't parse the
-           full chunk of data we have read from the server. We therefore need
-           to store the rest of the data to be checked on the next invoke as
-           it may actually contain another end of response already! */
-        clipamount = gotbytes - i;
-        restart = TRUE;
-      }
-      else if(keepon) {
-
-        if((perline == gotbytes) && (gotbytes > BUFSIZE/2)) {
-          /* We got an excessive line without newlines and we need to deal
-             with it. First, check if it seems to start with a valid status
-             code and then we keep just that in the line cache. Then throw
-             away the rest. */
-          infof(data, "Excessive FTP response line length received, %zd bytes."
-                " Stripping\n", gotbytes);
-          restart = TRUE;
-          if(STATUSCODE(ftpc->linestart_resp))
-            /* we copy 4 bytes since after the three-digit number there is a
-               dash or a space and it is significant */
-            clipamount = 4;
-        }
-        else if(ftpc->nread_resp > BUFSIZE/2) {
-          /* We got a large chunk of data and there's potentially still trailing
-             data to take care of, so we put any such part in the "cache", clear
-             the buffer to make space and restart. */
-          clipamount = perline;
-          restart = TRUE;
-        }
-      }
-      else if(i == gotbytes)
-        restart = TRUE;
-
-      if(clipamount) {
-        ftpc->cache_size = clipamount;
-        ftpc->cache = malloc((int)ftpc->cache_size);
-        if(ftpc->cache)
-          memcpy(ftpc->cache, ftpc->linestart_resp, (int)ftpc->cache_size);
-        else
-          return CURLE_OUT_OF_MEMORY;
-      }
-      if(restart) {
-        /* now reset a few variables to start over nicely from the start of
-           the big buffer */
-        ftpc->nread_resp = 0; /* start over from scratch in the buffer */
-        ptr = ftpc->linestart_resp = buf;
-        perline = 0;
-      }
-
-    } /* there was data */
-
-  } /* while there's buffer left and loop is requested */
+  CURLcode result = CURLE_OK;
+  int code;
 
-  if(!result)
-    code = atoi(buf);
+  result = Curl_pp_readresp(sockfd, pp, &code, size);
 
 #if defined(HAVE_KRB4) || defined(HAVE_GSSAPI)
   /* handle the security-oriented responses 6xx ***/
   /* FIXME: some errorchecking perhaps... ***/
   switch(code) {
   case 631:
@@ -587,18 +406,17 @@
   default:
     /* normal ftp stuff we pass through! */
     break;
   }
 #endif
 
-  *ftpcode=code; /* return the initial number like this */
-
   /* store the latest code for later retrieval */
   conn->data->info.httpcode=code;
 
-  ftpc->pending_resp = FALSE;
+  if(ftpcode)
+    *ftpcode = code;
 
   return result;
 }
 
 /* --- parse FTP server responses --- */
 
@@ -622,13 +440,13 @@
   curl_socket_t sockfd = conn->sock[FIRSTSOCKET];
   long timeout;              /* timeout in milliseconds */
   long interval_ms;
   struct SessionHandle *data = conn->data;
   CURLcode result = CURLE_OK;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
-  struct timeval now = Curl_tvnow();
+  struct pingpong *pp = &ftpc->pp;
   size_t nread;
   int cache_skip=0;
   int value_to_be_ignored=0;
 
   if(ftpcode)
     *ftpcode = 0; /* 0 for errors */
@@ -637,36 +455,20 @@
     ftpcode = &value_to_be_ignored;
 
   *nreadp=0;
 
   while(!*ftpcode && !result) {
     /* check and reset timeout value every lap */
-    if(data->set.ftp_response_timeout )
-      /* if CURLOPT_FTP_RESPONSE_TIMEOUT is set, use that to determine
-         remaining time.  Also, use "now" as opposed to "conn->now"
-         because ftp_response_timeout is only supposed to govern
-         the response for any given ftp response, not for the time
-         from connect to the given ftp response. */
-      timeout = data->set.ftp_response_timeout - /* timeout time */
-        Curl_tvdiff(Curl_tvnow(), now); /* spent time */
-    else if(data->set.timeout)
-      /* if timeout is requested, find out how much remaining time we have */
-      timeout = data->set.timeout - /* timeout time */
-        Curl_tvdiff(Curl_tvnow(), conn->now); /* spent time */
-    else
-      /* Even without a requested timeout, we only wait response_time
-         seconds for the full response to arrive before we bail out */
-      timeout = ftpc->response_time -
-        Curl_tvdiff(Curl_tvnow(), now); /* spent time */
+    timeout = Curl_pp_state_timeout(pp);
 
     if(timeout <=0 ) {
       failf(data, "FTP response timeout");
       return CURLE_OPERATION_TIMEDOUT; /* already too little time */
     }
 
-    interval_ms = 1 * 1000;  /* use 1 second timeout intervals */
+    interval_ms = 1000;  /* use 1 second timeout intervals */
     if(timeout < interval_ms)
       interval_ms = timeout;
 
     /*
      * Since this function is blocking, we need to wait here for input on the
      * connection and only then we call the response reading function. We do
@@ -678,13 +480,13 @@
      * that cache. But also, if the cache is there, we call ftp_readresp() and
      * the cache wasn't good enough to continue we must not just busy-loop
      * around this function.
      *
      */
 
-    if(ftpc->cache && (cache_skip < 2)) {
+    if(pp->cache && (cache_skip < 2)) {
       /*
        * There's a cache left since before. We then skipping the wait for
        * socket action, unless this is the same cache like the previous round
        * as then the cache was deemed not enough to act on and we then need to
        * wait for more data anyway.
        */
@@ -702,30 +504,30 @@
         continue; /* just continue in our loop for the timeout duration */
 
       default: /* for clarity */
         break;
       }
     }
-    result = ftp_readresp(sockfd, conn, ftpcode, &nread);
+    result = ftp_readresp(sockfd, pp, ftpcode, &nread);
     if(result)
       break;
 
-    if(!nread && ftpc->cache)
+    if(!nread && pp->cache)
       /* bump cache skip counter as on repeated skips we must wait for more
          data */
       cache_skip++;
     else
       /* when we got data or there is no cache left, we reset the cache skip
          counter */
       cache_skip=0;
 
     *nreadp += nread;
 
   } /* while there's buffer left and loop is requested */
 
-  ftpc->pending_resp = FALSE;
+  pp->pending_resp = FALSE;
 
   return result;
 }
 
 /* This is the ONLY way to change FTP state! */
 static void state(struct connectdata *conn,
@@ -760,12 +562,13 @@
     "SIZE",
     "RETR_SIZE",
     "STOR_SIZE",
     "REST",
     "RETR_REST",
     "PORT",
+    "PRET",
     "PASV",
     "LIST",
     "RETR",
     "STOR",
     "QUIT"
   };
@@ -781,50 +584,37 @@
 
 static CURLcode ftp_state_user(struct connectdata *conn)
 {
   CURLcode result;
   struct FTP *ftp = conn->data->state.proto.ftp;
   /* send USER */
-  NBFTPSENDF(conn, "USER %s", ftp->user?ftp->user:"");
+  PPSENDF(&conn->proto.ftpc.pp, "USER %s", ftp->user?ftp->user:"");
 
   state(conn, FTP_USER);
   conn->data->state.ftp_trying_alternative = FALSE;
 
   return CURLE_OK;
 }
 
 static CURLcode ftp_state_pwd(struct connectdata *conn)
 {
   CURLcode result;
 
   /* send PWD to discover our entry point */
-  NBFTPSENDF(conn, "PWD", NULL);
+  PPSENDF(&conn->proto.ftpc.pp, "PWD", NULL);
   state(conn, FTP_PWD);
 
   return CURLE_OK;
 }
 
 /* For the FTP "protocol connect" and "doing" phases only */
 static int ftp_getsock(struct connectdata *conn,
-                            curl_socket_t *socks,
-                            int numsocks)
+                       curl_socket_t *socks,
+                       int numsocks)
 {
-  struct ftp_conn *ftpc = &conn->proto.ftpc;
-
-  if(!numsocks)
-    return GETSOCK_BLANK;
-
-  socks[0] = conn->sock[FIRSTSOCKET];
-
-  if(ftpc->sendleft) {
-    /* write mode */
-    return GETSOCK_WRITESOCK(0);
-  }
-
-  /* read mode */
-  return GETSOCK_READSOCK(0);
+  return Curl_pp_getsock(&conn->proto.ftpc.pp, socks, numsocks);
 }
 
 /* This is called after the FTP_QUOTE state is passed.
 
    ftp_state_cwd() sends the range of CWD commands to the server to change to
    the correct directory. It may also need to send MKD commands to create
@@ -849,21 +639,21 @@
     if(conn->bits.reuse && ftpc->entrypath) {
       /* This is a re-used connection. Since we change directory to where the
          transfer is taking place, we must first get back to the original dir
          where we ended up after login: */
       ftpc->count1 = 0; /* we count this as the first path, then we add one
                           for all upcoming ones in the ftp->dirs[] array */
-      NBFTPSENDF(conn, "CWD %s", ftpc->entrypath);
+      PPSENDF(&conn->proto.ftpc.pp, "CWD %s", ftpc->entrypath);
       state(conn, FTP_CWD);
     }
     else {
       if(ftpc->dirdepth) {
         ftpc->count1 = 1;
         /* issue the first CWD, the rest is sent when the CWD responses are
            received... */
-        NBFTPSENDF(conn, "CWD %s", ftpc->dirs[ftpc->count1 -1]);
+        PPSENDF(&conn->proto.ftpc.pp, "CWD %s", ftpc->dirs[ftpc->count1 -1]);
         state(conn, FTP_CWD);
       }
       else {
         /* No CWD necessary */
         result = ftp_state_post_cwd(conn);
       }
@@ -937,19 +727,20 @@
 #ifdef ENABLE_IPV6
     if(*string_ftpport == '[') {
       /* [ipv6]:port(-range) */
       ip_start = string_ftpport + 1;
       if((ip_end = strchr(string_ftpport, ']')) != NULL )
         strncpy(addr, ip_start, ip_end - ip_start);
-    } else
+    }
+    else
 #endif
       if( *string_ftpport == ':') {
         /* :port */
         ip_end = string_ftpport;
-    } else
-      if( (ip_end = strchr(string_ftpport, ':')) != NULL) {
+    }
+    else if( (ip_end = strchr(string_ftpport, ':')) != NULL) {
         /* either ipv6 or (ipv4|domain|interface):port(-range) */
 #ifdef ENABLE_IPV6
       if(Curl_inet_pton(AF_INET6, string_ftpport, sa6) == 1) {
         /* ipv6 */
         port_min = port_max = 0;
         strcpy(addr, string_ftpport);
@@ -957,16 +748,16 @@
       } else
 #endif
       {
         /* (ipv4|domain|interface):port(-range) */
         strncpy(addr, string_ftpport, ip_end - ip_start );
       }
-    } else {
+    }
+    else
       /* ipv4|interface */
       strcpy(addr, string_ftpport);
-    }
 
     /* parse the port */
     if( ip_end != NULL ) {
       if((port_start = strchr(ip_end, ':')) != NULL) {
         port_min = (unsigned short)strtol(port_start+1, NULL, 10);
         if((port_sep = strchr(port_start, '-')) != NULL) {
@@ -1082,39 +873,39 @@
     else
       sa6->sin6_port = htons(port);
 #endif
     /* Try binding the given address. */
     if(bind(portsock, sa, sslen) ) {
       /* It failed. */
-      if(errno == EADDRNOTAVAIL) {
+      error = SOCKERRNO;
+      if(error == EADDRNOTAVAIL) {
 
-        /* The requested bind address is not local
-         * use the address used forthe control connection instead
-         * restart the port loop
+        /* The requested bind address is not local.  Use the address used for
+         * the control connection instead and restart the port loop
          */
-        failf(data, "bind(port=%i) failed: %s", port,
-              Curl_strerror(conn, SOCKERRNO) );
+        failf(data, "bind(port=%hu) failed: %s", port,
+              Curl_strerror(conn, error) );
 
         sslen = sizeof(ss);
         if(getsockname(conn->sock[FIRSTSOCKET], sa, &sslen)) {
           failf(data, "getsockname() failed: %s",
                 Curl_strerror(conn, SOCKERRNO) );
           sclose(portsock);
           return CURLE_FTP_PORT_FAILED;
         }
         port = port_min;
         continue;
-      }else
-      if(errno != EADDRINUSE && errno != EACCES) {
-        failf(data, "bind(port=%i) failed: %s", port,
-              Curl_strerror(conn, SOCKERRNO) );
+      }
+      else if(error != EADDRINUSE && error != EACCES) {
+        failf(data, "bind(port=%hu) failed: %s", port,
+              Curl_strerror(conn, error) );
         sclose(portsock);
         return CURLE_FTP_PORT_FAILED;
       }
-
-    } else
+    }
+    else
       break;
 
     port++;
   }
 
   /* maybe all ports were in use already*/
@@ -1184,15 +975,15 @@
        *
        * EPRT |1|132.235.1.2|6275|
        *
        * EPRT |2|1080::8:800:200C:417A|5282|
        */
 
-      result = Curl_nbftpsendf(conn, "%s |%d|%s|%d|", mode[fcmd],
-                               sa->sa_family == AF_INET?1:2,
-                               myhost, port);
+      result = Curl_pp_sendf(&ftpc->pp, "%s |%d|%s|%hu|", mode[fcmd],
+                             sa->sa_family == AF_INET?1:2,
+                             myhost, port);
       if(result)
         return result;
       break;
     }
     else if(PORT == fcmd) {
       char *source = myhost;
@@ -1205,15 +996,15 @@
         else
           *dest = *source;
         dest++;
         source++;
       }
       *dest = 0;
-      snprintf(dest, 20, ",%d,%d", port>>8, port&0xff);
+      snprintf(dest, 20, ",%d,%d", (int)(port>>8), (int)(port&0xff));
 
-      result = Curl_nbftpsendf(conn, "%s %s", mode[fcmd], tmp);
+      result = Curl_pp_sendf(&ftpc->pp, "%s %s", mode[fcmd], tmp);
       if(result)
         return result;
       break;
     }
   }
 
@@ -1267,15 +1058,13 @@
        request and enable EPSV again! */
     conn->bits.ftp_use_epsv = TRUE;
 #endif
 
   modeoff = conn->bits.ftp_use_epsv?0:1;
 
-  result = Curl_nbftpsendf(conn, "%s", mode[modeoff]);
-  if(result)
-    return result;
+  PPSENDF(&ftpc->pp, "%s", mode[modeoff]);
 
   ftpc->count1 = modeoff;
   state(conn, FTP_PASV);
   infof(conn->data, "Connect data stream passively\n");
 
   return result;
@@ -1300,13 +1089,32 @@
   else if(data->set.ftp_use_port) {
     /* We have chosen to use the PORT (or similar) command */
     result = ftp_state_use_port(conn, EPRT);
   }
   else {
     /* We have chosen (this is default) to use the PASV (or similar) command */
-    result = ftp_state_use_pasv(conn);
+    if(data->set.ftp_use_pret) {
+      /* The user has requested that we send a PRET command
+         to prepare the server for the upcoming PASV */
+      if(!conn->proto.ftpc.file) {
+        PPSENDF(&conn->proto.ftpc.pp, "PRET %s",
+                data->set.str[STRING_CUSTOMREQUEST]?
+                data->set.str[STRING_CUSTOMREQUEST]:
+                (data->set.ftp_list_only?"NLST":"LIST"));
+      }
+      else if(data->set.upload) {
+        PPSENDF(&conn->proto.ftpc.pp, "PRET STOR %s", conn->proto.ftpc.file);
+      }
+      else {
+        PPSENDF(&conn->proto.ftpc.pp, "PRET RETR %s", conn->proto.ftpc.file);
+      }
+      state(conn, FTP_PRET);
+    }
+    else {
+      result = ftp_state_use_pasv(conn);
+    }
   }
   return result;
 }
 
 static CURLcode ftp_state_post_size(struct connectdata *conn)
 {
@@ -1316,13 +1124,13 @@
 
   if((ftp->transfer != FTPTRANSFER_BODY) && ftpc->file) {
     /* if a "head"-like request is being made (on a file) */
 
     /* Determine if server can respond to REST command and therefore
        whether it supports range */
-    NBFTPSENDF(conn, "REST %d", 0);
+    PPSENDF(&conn->proto.ftpc.pp, "REST %d", 0);
 
     state(conn, FTP_REST);
   }
   else
     result = ftp_state_post_rest(conn);
 
@@ -1336,13 +1144,13 @@
   struct ftp_conn *ftpc = &conn->proto.ftpc;
 
   if((ftp->transfer == FTPTRANSFER_INFO) && ftpc->file) {
     /* if a "head"-like request is being made (on a file) */
 
     /* we know ftpc->file is a valid pointer to a file name */
-    NBFTPSENDF(conn, "SIZE %s", ftpc->file);
+    PPSENDF(&ftpc->pp, "SIZE %s", ftpc->file);
 
     state(conn, FTP_SIZE);
   }
   else
     result = ftp_state_post_size(conn);
 
@@ -1400,13 +1208,13 @@
   if(!cmd) {
     if(lstArg)
       free(lstArg);
     return CURLE_OUT_OF_MEMORY;
   }
 
-  NBFTPSENDF(conn, "%s",cmd);
+  PPSENDF(&conn->proto.ftpc.pp, "%s",cmd);
 
   if(lstArg)
     free(lstArg);
 
   free(cmd);
 
@@ -1478,13 +1286,13 @@
 
   /* Requested time of file or time-depended transfer? */
   if((data->set.get_filetime || data->set.timecondition) && ftpc->file) {
 
     /* we have requested to get the modified-time of the file, this is a white
        spot as the MDTM is not mentioned in RFC959 */
-    NBFTPSENDF(conn, "MDTM %s", ftpc->file);
+    PPSENDF(&ftpc->pp, "MDTM %s", ftpc->file);
 
     state(conn, FTP_MDTM);
   }
   else
     result = ftp_state_post_mdtm(conn);
 
@@ -1516,13 +1324,13 @@
     /* 3. pass file-size number of bytes in the source file */
     /* 4. lower the infilesize counter */
     /* => transfer as usual */
 
     if(data->state.resume_from < 0 ) {
       /* Got no given size to start from, figure it out */
-      NBFTPSENDF(conn, "SIZE %s", ftpc->file);
+      PPSENDF(&ftpc->pp, "SIZE %s", ftpc->file);
       state(conn, FTP_STOR_SIZE);
       return result;
     }
 
     /* enable append */
     data->set.ftp_append = TRUE;
@@ -1580,14 +1388,14 @@
         return CURLE_OK;
       }
     }
     /* we've passed, proceed as normal */
   } /* resume_from */
 
-  NBFTPSENDF(conn, data->set.ftp_append?"APPE %s":"STOR %s",
-             ftpc->file);
+  PPSENDF(&ftpc->pp, data->set.ftp_append?"APPE %s":"STOR %s",
+          ftpc->file);
 
   state(conn, FTP_STOR);
 
   return result;
 }
 
@@ -1627,13 +1435,13 @@
     /* Skip count1 items in the linked list */
     while((i< ftpc->count1) && item) {
       item = item->next;
       i++;
     }
     if(item) {
-      NBFTPSENDF(conn, "%s", item->data);
+      PPSENDF(&ftpc->pp, "%s", item->data);
       state(conn, instate);
       quote = TRUE;
     }
   }
 
   if(!quote) {
@@ -1644,13 +1452,13 @@
       result = ftp_state_cwd(conn);
       break;
     case FTP_RETR_PREQUOTE:
       if(ftp->transfer != FTPTRANSFER_BODY)
         state(conn, FTP_STOP);
       else {
-        NBFTPSENDF(conn, "SIZE %s", ftpc->file);
+        PPSENDF(&ftpc->pp, "SIZE %s", ftpc->file);
         state(conn, FTP_RETR_SIZE);
       }
       break;
     case FTP_STOR_PREQUOTE:
       result = ftp_state_ul_setup(conn, FALSE);
       break;
@@ -1785,13 +1593,13 @@
     /* EPSV failed, move on to PASV */
 
     /* disable it for next transfer */
     conn->bits.ftp_use_epsv = FALSE;
     infof(data, "disabling EPSV usage\n");
 
-    NBFTPSENDF(conn, "PASV", NULL);
+    PPSENDF(&ftpc->pp, "PASV", NULL);
     ftpc->count1++;
     /* remain in the FTP_PASV state */
     return result;
   }
   else {
     failf(data, "Bad PASV/EPSV response: %03d", ftpcode);
@@ -1812,13 +1620,13 @@
       rc = Curl_wait_for_resolv(conn, &addr);
 
     connectport =
       (unsigned short)conn->port; /* we connect to the proxy's port */
 
     if(!addr) {
-      failf(data, "Can't resolve proxy host %s:%d",
+      failf(data, "Can't resolve proxy host %s:%hu",
             conn->proxy.name, connectport);
       return CURLE_FTP_CANT_GET_HOST;
     }
   }
   else {
     /* normal, direct, ftp connection */
@@ -1827,13 +1635,13 @@
       /* BLOCKING */
       rc = Curl_wait_for_resolv(conn, &addr);
 
     connectport = newport; /* we connect to the remote port */
 
     if(!addr) {
-      failf(data, "Can't resolve new host %s:%d", newhost, connectport);
+      failf(data, "Can't resolve new host %s:%hu", newhost, connectport);
       return CURLE_FTP_CANT_GET_HOST;
     }
   }
 
   result = Curl_connecthost(conn,
                             addr,
@@ -1846,13 +1654,13 @@
   if(result && ftpc->count1 == 0 && ftpcode == 229) {
     infof(data, "got positive EPSV response, but can't connect. "
           "Disabling EPSV\n");
     /* disable it for next transfer */
     conn->bits.ftp_use_epsv = FALSE;
     data->state.errorbuf = FALSE; /* allow error message to get rewritten */
-    NBFTPSENDF(conn, "PASV", NULL);
+    PPSENDF(&ftpc->pp, "PASV", NULL);
     ftpc->count1++;
     /* remain in the FTP_PASV state */
     return result;
  }
 
   if(result)
@@ -2036,22 +1844,22 @@
     if((data->info.filetime > 0) && (data->set.timevalue > 0)) {
       switch(data->set.timecondition) {
       case CURL_TIMECOND_IFMODSINCE:
       default:
         if(data->info.filetime <= data->set.timevalue) {
           infof(data, "The requested document is not new enough\n");
-          ftp->transfer = FTPTRANSFER_NONE; /* mark this to not transfer data */
+          ftp->transfer = FTPTRANSFER_NONE; /* mark to not transfer data */
           data->info.timecond = TRUE;
           state(conn, FTP_STOP);
           return CURLE_OK;
         }
         break;
       case CURL_TIMECOND_IFUNMODSINCE:
         if(data->info.filetime > data->set.timevalue) {
           infof(data, "The requested document is not old enough\n");
-          ftp->transfer = FTPTRANSFER_NONE; /* mark this to not transfer data */
+          ftp->transfer = FTPTRANSFER_NONE; /* mark to not transfer data */
           data->info.timecond = TRUE;
           state(conn, FTP_STOP);
           return CURLE_OK;
         }
         break;
       } /* switch */
@@ -2162,20 +1970,20 @@
     }
 
     /* Set resume file transfer offset */
     infof(data, "Instructs server to resume from offset %" FORMAT_OFF_T
           "\n", data->state.resume_from);
 
-    NBFTPSENDF(conn, "REST %" FORMAT_OFF_T, data->state.resume_from);
+    PPSENDF(&ftpc->pp, "REST %" FORMAT_OFF_T, data->state.resume_from);
 
     state(conn, FTP_RETR_REST);
 
   }
   else {
     /* no resume */
-    NBFTPSENDF(conn, "RETR %s", ftpc->file);
+    PPSENDF(&ftpc->pp, "RETR %s", ftpc->file);
     state(conn, FTP_RETR);
   }
 
   return result;
 }
 
@@ -2240,13 +2048,13 @@
   case FTP_RETR_REST:
     if(ftpcode != 350) {
       failf(conn->data, "Couldn't use REST");
       result = CURLE_FTP_COULDNT_USE_REST;
     }
     else {
-      NBFTPSENDF(conn, "RETR %s", ftpc->file);
+      PPSENDF(&ftpc->pp, "RETR %s", ftpc->file);
       state(conn, FTP_RETR);
     }
     break;
   }
 
   return result;
@@ -2294,13 +2102,13 @@
   Curl_sndbufset(conn->sock[SECONDARYSOCKET]);
 
   result = Curl_setup_transfer(conn, -1, -1, FALSE, NULL, /* no download */
                                SECONDARYSOCKET, ftp->bytecountp);
   state(conn, FTP_STOP);
 
-  conn->proto.ftpc.pending_resp = TRUE; /* we expect a server response more */
+  conn->proto.ftpc.pp.pending_resp = TRUE; /* expect a server response */
 
   return result;
 }
 
 /* for LIST and RETR responses */
 static CURLcode ftp_state_get_resp(struct connectdata *conn,
@@ -2395,12 +2203,14 @@
       if(result)
         return result;
     }
 
     if(size > data->req.maxdownload && data->req.maxdownload > 0)
       size = data->req.size = data->req.maxdownload;
+    else if((instate != FTP_LIST) && (data->set.prefer_ascii))
+      size = -1; /* kludge for servers that understate ASCII mode file size */
 
     infof(data, "Maxdownload = %" FORMAT_OFF_T "\n", data->req.maxdownload);
 
     if(instate != FTP_LIST)
       infof(data, "Getting file with size: %" FORMAT_OFF_T "\n", size);
 
@@ -2408,25 +2218,26 @@
     result=Curl_setup_transfer(conn, SECONDARYSOCKET, size, FALSE,
                                ftp->bytecountp,
                                -1, NULL); /* no upload here */
     if(result)
       return result;
 
-    conn->proto.ftpc.pending_resp = TRUE; /* we expect a server response more */
+    conn->proto.ftpc.pp.pending_resp = TRUE; /* expect server response */
     state(conn, FTP_STOP);
   }
   else {
     if((instate == FTP_LIST) && (ftpcode == 450)) {
       /* simply no matching files in the dir listing */
       ftp->transfer = FTPTRANSFER_NONE; /* don't download anything */
       state(conn, FTP_STOP); /* this phase is over */
     }
     else {
       failf(data, "RETR response: %03d", ftpcode);
-      return instate == FTP_RETR && ftpcode == 550? CURLE_REMOTE_FILE_NOT_FOUND:
-                                                    CURLE_FTP_COULDNT_RETR_FILE;
+      return instate == FTP_RETR && ftpcode == 550?
+        CURLE_REMOTE_FILE_NOT_FOUND:
+        CURLE_FTP_COULDNT_RETR_FILE;
     }
   }
 
   return result;
 }
 
@@ -2460,13 +2271,13 @@
     ... (and on page 8):
 
     Thus the PBSZ command must still be issued, but must have a
     parameter of '0' to indicate that no buffering is taking place
     and the data connection should not be encapsulated.
     */
-    NBFTPSENDF(conn, "PBSZ %d", 0);
+    PPSENDF(&conn->proto.ftpc.pp, "PBSZ %d", 0);
     state(conn, FTP_PBSZ);
   }
   else {
     result = ftp_state_pwd(conn);
   }
   return result;
@@ -2484,23 +2295,23 @@
   (void)instate; /* no use for this yet */
 
   /* some need password anyway, and others just return 2xx ignored */
   if((ftpcode == 331) && (ftpc->state == FTP_USER)) {
     /* 331 Password required for ...
        (the server requires to send the user's password too) */
-    NBFTPSENDF(conn, "PASS %s", ftp->passwd?ftp->passwd:"");
+    PPSENDF(&ftpc->pp, "PASS %s", ftp->passwd?ftp->passwd:"");
     state(conn, FTP_PASS);
   }
   else if(ftpcode/100 == 2) {
     /* 230 User ... logged in.
        (the user logged in with or without password) */
     result = ftp_state_loggedin(conn);
   }
   else if(ftpcode == 332) {
     if(data->set.str[STRING_FTP_ACCOUNT]) {
-      NBFTPSENDF(conn, "ACCT %s", data->set.str[STRING_FTP_ACCOUNT]);
+      PPSENDF(&ftpc->pp, "ACCT %s", data->set.str[STRING_FTP_ACCOUNT]);
       state(conn, FTP_ACCT);
     }
     else {
       failf(data, "ACCT requested but none available");
       result = CURLE_LOGIN_DENIED;
     }
@@ -2511,14 +2322,14 @@
     530 User ... access denied
     (the server denies to log the specified user) */
 
     if(conn->data->set.str[STRING_FTP_ALTERNATIVE_TO_USER] &&
         !conn->data->state.ftp_trying_alternative) {
       /* Ok, USER failed.  Let's try the supplied command. */
-      NBFTPSENDF(conn, "%s",
-                 conn->data->set.str[STRING_FTP_ALTERNATIVE_TO_USER]);
+      PPSENDF(&conn->proto.ftpc.pp, "%s",
+              conn->data->set.str[STRING_FTP_ALTERNATIVE_TO_USER]);
       conn->data->state.ftp_trying_alternative = TRUE;
       state(conn, FTP_USER);
       result = CURLE_OK;
     }
     else {
       failf(data, "Access denied: %03d", ftpcode);
@@ -2549,38 +2360,21 @@
 {
   CURLcode result;
   curl_socket_t sock = conn->sock[FIRSTSOCKET];
   struct SessionHandle *data=conn->data;
   int ftpcode;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
+  struct pingpong *pp = &ftpc->pp;
   static const char ftpauth[][4]  = { "SSL", "TLS" };
   size_t nread = 0;
 
-  if(ftpc->sendleft) {
-    /* we have a piece of a command still left to send */
-    ssize_t written;
-    result = Curl_write(conn, sock, ftpc->sendthis + ftpc->sendsize -
-                        ftpc->sendleft, ftpc->sendleft, &written);
-    if(result)
-      return result;
-
-    if(written != (ssize_t)ftpc->sendleft) {
-      /* only a fraction was sent */
-      ftpc->sendleft -= written;
-    }
-    else {
-      free(ftpc->sendthis);
-      ftpc->sendthis=NULL;
-      ftpc->sendleft = ftpc->sendsize = 0;
-      ftpc->response = Curl_tvnow();
-    }
-    return CURLE_OK;
-  }
+  if(pp->sendleft)
+    return Curl_pp_flushsend(pp);
 
   /* we read a piece of response */
-  result = ftp_readresp(sock, conn, &ftpcode, &nread);
+  result = ftp_readresp(sock, pp, &ftpcode, &nread);
   if(result)
     return result;
 
   if(ftpcode) {
     /* we have now received a full FTP server response */
     switch(ftpc->state) {
@@ -2623,16 +2417,16 @@
         case CURLFTPAUTH_TLS:
           ftpc->count2 = -1; /* subtract one to get next */
           ftpc->count1 = 1;
           break;
         default:
           failf(data, "unsupported parameter to CURLOPT_FTPSSLAUTH: %d",
-                data->set.ftpsslauth);
+                (int)data->set.ftpsslauth);
           return CURLE_FAILED_INIT; /* we don't know what to do */
         }
-        NBFTPSENDF(conn, "AUTH %s", ftpauth[ftpc->count1]);
+        PPSENDF(&ftpc->pp, "AUTH %s", ftpauth[ftpc->count1]);
         state(conn, FTP_AUTH);
       }
       else {
         result = ftp_state_user(conn);
         if(result)
           return result;
@@ -2659,13 +2453,13 @@
           result = ftp_state_user(conn);
         }
       }
       else if(ftpc->count3 < 1) {
         ftpc->count3++;
         ftpc->count1 += ftpc->count2; /* get next attempt */
-        result = Curl_nbftpsendf(conn, "AUTH %s", ftpauth[ftpc->count1]);
+        result = Curl_pp_sendf(&ftpc->pp, "AUTH %s", ftpauth[ftpc->count1]);
         /* remain in this same state */
       }
       else {
         if(data->set.ftp_ssl > CURLUSESSL_TRY)
           /* we failed and CURLUSESSL_CONTROL or CURLUSESSL_ALL is set */
           result = CURLE_USE_SSL_FAILED;
@@ -2685,14 +2479,14 @@
 
     case FTP_ACCT:
       result = ftp_state_acct_resp(conn, ftpcode);
       break;
 
     case FTP_PBSZ:
-      NBFTPSENDF(conn, "PROT %c",
-                 data->set.ftp_ssl == CURLUSESSL_CONTROL ? 'C' : 'P');
+      PPSENDF(&ftpc->pp, "PROT %c",
+              data->set.ftp_ssl == CURLUSESSL_CONTROL ? 'C' : 'P');
       state(conn, FTP_PROT);
 
       break;
 
     case FTP_PROT:
       if(ftpcode/100 == 2)
@@ -2705,13 +2499,13 @@
         /* we failed and bails out */
         return CURLE_USE_SSL_FAILED;
 
       if(data->set.ftp_ccc) {
         /* CCC - Clear Command Channel
          */
-        NBFTPSENDF(conn, "CCC", NULL);
+        PPSENDF(&ftpc->pp, "CCC", NULL);
         state(conn, FTP_CCC);
       }
       else {
         result = ftp_state_pwd(conn);
         if(result)
           return result;
@@ -2791,13 +2585,13 @@
              having an entrypath in the wrong syntax when later used in CWD.
                The method used here is to check the server OS: we do it only
              if the path name looks strange to minimize overhead on other
              systems. */
 
           if(!ftpc->server_os && ftpc->entrypath[0] != '/') {
-            NBFTPSENDF(conn, "SYST", NULL);
+            PPSENDF(&ftpc->pp, "SYST", NULL);
             state(conn, FTP_SYST);
             break;
           }
         }
         else {
           /* couldn't get the path */
@@ -2830,13 +2624,13 @@
         ftpc->server_os = os;
 
         /* Check for special servers here. */
 
         if(strequal(ftpc->server_os, "OS/400")) {
           /* Force OS400 name format 1. */
-          NBFTPSENDF(conn, "SITE NAMEFMT 1", NULL);
+          PPSENDF(&ftpc->pp, "SITE NAMEFMT 1", NULL);
           state(conn, FTP_NAMEFMT);
           break;
         }
       else {
         /* Nothing special for the target server. */
        }
@@ -2878,13 +2672,13 @@
       if(ftpcode/100 != 2) {
         /* failure to CWD there */
         if(conn->data->set.ftp_create_missing_dirs &&
            ftpc->count1 && !ftpc->count2) {
           /* try making it */
           ftpc->count2++; /* counter to prevent CWD-MKD loops */
-          NBFTPSENDF(conn, "MKD %s", ftpc->dirs[ftpc->count1 - 1]);
+          PPSENDF(&ftpc->pp, "MKD %s", ftpc->dirs[ftpc->count1 - 1]);
           state(conn, FTP_MKD);
         }
         else {
           /* return failure */
           failf(data, "Server denied you to change to the given directory");
           ftpc->cwdfail = TRUE; /* don't remember this path as we failed
@@ -2894,13 +2688,13 @@
       }
       else {
         /* success */
         ftpc->count2=0;
         if(++ftpc->count1 <= ftpc->dirdepth) {
           /* send next CWD */
-          NBFTPSENDF(conn, "CWD %s", ftpc->dirs[ftpc->count1 - 1]);
+          PPSENDF(&ftpc->pp, "CWD %s", ftpc->dirs[ftpc->count1 - 1]);
         }
         else {
           result = ftp_state_post_cwd(conn);
           if(result)
             return result;
         }
@@ -2912,13 +2706,13 @@
         /* failure to MKD the dir */
         failf(data, "Failed to MKD dir: %03d", ftpcode);
         return CURLE_REMOTE_ACCESS_DENIED;
       }
       state(conn, FTP_CWD);
       /* send CWD */
-      NBFTPSENDF(conn, "CWD %s", ftpc->dirs[ftpc->count1 - 1]);
+      PPSENDF(&ftpc->pp, "CWD %s", ftpc->dirs[ftpc->count1 - 1]);
       break;
 
     case FTP_MDTM:
       result = ftp_state_mdtm_resp(conn, ftpcode);
       break;
 
@@ -2937,12 +2731,21 @@
 
     case FTP_REST:
     case FTP_RETR_REST:
       result = ftp_state_rest_resp(conn, ftpcode, ftpc->state);
       break;
 
+    case FTP_PRET:
+      if(ftpcode != 200) {
+       /* there only is this one standard OK return code. */
+        failf(data, "PRET command not accepted: %03d", ftpcode);
+        return CURLE_FTP_PRET_FAILED;
+      }
+      result = ftp_state_use_pasv(conn);
+      break;
+
     case FTP_PASV:
       result = ftp_state_pasv_resp(conn, ftpcode);
       break;
 
     case FTP_PORT:
       result = ftp_state_port_resp(conn, ftpcode);
@@ -2966,134 +2769,72 @@
     }
   } /* if(ftpcode) */
 
   return result;
 }
 
-/* Returns timeout in ms. 0 or negative number means the timeout has already
-   triggered */
-static long ftp_state_timeout(struct connectdata *conn)
-{
-  struct SessionHandle *data=conn->data;
-  struct ftp_conn *ftpc = &conn->proto.ftpc;
-  long timeout_ms=360000; /* in milliseconds */
-
-  if(data->set.ftp_response_timeout )
-    /* if CURLOPT_FTP_RESPONSE_TIMEOUT is set, use that to determine remaining
-       time.  Also, use ftp->response because FTP_RESPONSE_TIMEOUT is supposed
-       to govern the response for any given ftp response, not for the time
-       from connect to the given ftp response. */
-    timeout_ms = data->set.ftp_response_timeout - /* timeout time */
-      Curl_tvdiff(Curl_tvnow(), ftpc->response); /* spent time */
-  else if(data->set.timeout)
-    /* if timeout is requested, find out how much remaining time we have */
-    timeout_ms = data->set.timeout - /* timeout time */
-      Curl_tvdiff(Curl_tvnow(), conn->now); /* spent time */
-  else
-    /* Without a requested timeout, we only wait 'response_time' seconds for
-       the full response to arrive before we bail out */
-    timeout_ms = ftpc->response_time -
-      Curl_tvdiff(Curl_tvnow(), ftpc->response); /* spent time */
-
-  return timeout_ms;
-}
-
 
 /* called repeatedly until done from multi.c */
 static CURLcode ftp_multi_statemach(struct connectdata *conn,
-                                         bool *done)
+                                    bool *done)
 {
-  curl_socket_t sock = conn->sock[FIRSTSOCKET];
-  int rc;
-  struct SessionHandle *data=conn->data;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
-  CURLcode result = CURLE_OK;
-  long timeout_ms = ftp_state_timeout(conn);
-
-  *done = FALSE; /* default to not done yet */
-
-  if(timeout_ms <= 0) {
-    failf(data, "FTP response timeout");
-    return CURLE_OPERATION_TIMEDOUT;
-  }
-
-  rc = Curl_socket_ready(ftpc->sendleft?CURL_SOCKET_BAD:sock, /* reading */
-                         ftpc->sendleft?sock:CURL_SOCKET_BAD, /* writing */
-                         0);
-
-  if(rc == -1) {
-    failf(data, "select/poll error");
-    return CURLE_OUT_OF_MEMORY;
-  }
-  else if(rc != 0) {
-    result = ftp_statemach_act(conn);
-  }
-  /* if rc == 0, then select() timed out */
+  CURLcode result = Curl_pp_multi_statemach(&ftpc->pp);
 
   /* Check for the state outside of the Curl_socket_ready() return code checks
      since at times we are in fact already in this state when this function
      gets called. */
   *done = (bool)(ftpc->state == FTP_STOP);
 
   return result;
 }
 
 static CURLcode ftp_easy_statemach(struct connectdata *conn)
 {
-  curl_socket_t sock = conn->sock[FIRSTSOCKET];
-  int rc;
-  struct SessionHandle *data=conn->data;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
+  struct pingpong *pp = &ftpc->pp;
   CURLcode result = CURLE_OK;
 
   while(ftpc->state != FTP_STOP) {
-    long timeout_ms = ftp_state_timeout(conn);
-
-    if(timeout_ms <=0 ) {
-      failf(data, "FTP response timeout");
-      return CURLE_OPERATION_TIMEDOUT; /* already too little time */
-    }
-
-    rc = Curl_socket_ready(ftpc->sendleft?CURL_SOCKET_BAD:sock, /* reading */
-                           ftpc->sendleft?sock:CURL_SOCKET_BAD, /* writing */
-                           (int)timeout_ms);
-
-    if(rc == -1) {
-      failf(data, "select/poll error");
-      return CURLE_OUT_OF_MEMORY;
-    }
-    else if(rc == 0) {
-      result = CURLE_OPERATION_TIMEDOUT;
+    result = Curl_pp_easy_statemach(pp);
+    if(result)
       break;
-    }
-    else {
-      result = ftp_statemach_act(conn);
-      if(result)
-        break;
-    }
   }
 
   return result;
 }
 
 /*
  * Allocate and initialize the struct FTP for the current SessionHandle.  If
  * need be.
  */
+
+#if defined(__INTEL_COMPILER) && (__INTEL_COMPILER == 910) && \
+    defined(__OPTIMIZE__) && defined(__unix__) && defined(__i386__)
+  /* workaround icc 9.1 optimizer issue */
+# define vqualifier volatile
+#else
+# define vqualifier
+#endif
+
 static CURLcode ftp_init(struct connectdata *conn)
 {
-  struct SessionHandle *data = conn->data;
-  struct FTP *ftp = data->state.proto.ftp;
-  if(!ftp) {
-    ftp = data->state.proto.ftp = calloc(sizeof(struct FTP), 1);
-    if(!ftp)
+  struct FTP *vqualifier ftp;
+
+  if(NULL == conn->data->state.proto.ftp) {
+    conn->data->state.proto.ftp = malloc(sizeof(struct FTP));
+    if(NULL == conn->data->state.proto.ftp)
       return CURLE_OUT_OF_MEMORY;
   }
 
+  ftp = conn->data->state.proto.ftp;
+
   /* get some initial data into the ftp struct */
-  ftp->bytecountp = &data->req.bytecount;
+  ftp->bytecountp = &conn->data->req.bytecount;
+  ftp->transfer = FTPTRANSFER_BODY;
+  ftp->downloadsize = 0;
 
   /* No need to duplicate user+password, the connectdata struct won't change
      during a session, but we re-init them here since on subsequent inits
      since the conn struct may have changed or been replaced.
   */
   ftp->user = conn->user;
@@ -3117,12 +2858,13 @@
 static CURLcode ftp_connect(struct connectdata *conn,
                                  bool *done) /* see description above */
 {
   CURLcode result;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   struct SessionHandle *data=conn->data;
+  struct pingpong *pp = &ftpc->pp;
 
   *done = FALSE; /* default to not done yet */
 
   /* If there already is a protocol-specific struct allocated for this
      sessionhandle, deal with it */
   Curl_reset_reqproto(conn);
@@ -3131,13 +2873,16 @@
   if(CURLE_OK != result)
     return result;
 
   /* We always support persistant connections on ftp */
   conn->bits.close = FALSE;
 
-  ftpc->response_time = RESP_TIMEOUT; /* set default response time-out */
+  pp->response_time = RESP_TIMEOUT; /* set default response time-out */
+  pp->statemach_act = ftp_statemach_act;
+  pp->endofresp = ftp_endofresp;
+  pp->conn = conn;
 
 #if !defined(CURL_DISABLE_HTTP) && !defined(CURL_DISABLE_PROXY)
   if(conn->bits.tunnel_proxy && conn->bits.httpproxy) {
     /* for FTP over HTTP proxy */
     struct HTTP http_proxy;
     struct FTP *ftp_save;
@@ -3171,17 +2916,17 @@
     /* now, perform the SSL initialization for this socket */
     result = Curl_ssl_connect(conn, FIRSTSOCKET);
     if(result)
       return result;
   }
 
+  Curl_pp_init(pp); /* init the generic pingpong data */
+
   /* When we connect, we start in the state where we await the 220
      response */
-  ftp_respinit(conn); /* init the response reader stuff */
   state(conn, FTP_WAIT220);
-  ftpc->response = Curl_tvnow(); /* start response time-out now! */
 
   if(data->state.used_interface == Curl_if_multi)
     result = ftp_multi_statemach(conn, done);
   else {
     result = ftp_easy_statemach(conn);
     if(!result)
@@ -3203,12 +2948,13 @@
 static CURLcode ftp_done(struct connectdata *conn, CURLcode status,
                               bool premature)
 {
   struct SessionHandle *data = conn->data;
   struct FTP *ftp = data->state.proto.ftp;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
+  struct pingpong *pp = &ftpc->pp;
   ssize_t nread;
   int ftpcode;
   CURLcode result=CURLE_OK;
   bool was_ctl_valid = ftpc->ctl_valid;
   char *path;
   const char *path_to_use = data->state.path;
@@ -3258,14 +3004,14 @@
   /* get the "raw" path */
   path = curl_easy_unescape(data, path_to_use, 0, NULL);
   if(!path) {
     /* out of memory, but we can limp along anyway (and should try to
      * since we're in the out of memory cleanup path) */
     ftpc->prevpath = NULL; /* no path */
-
-  } else {
+  }
+  else {
     size_t flen = ftpc->file?strlen(ftpc->file):0; /* file is "raw" already */
     size_t dlen = strlen(path)-flen;
     if(!ftpc->cwdfail) {
       if(dlen && (data->set.ftp_filemethod != FTPFILE_NOCWD)) {
         ftpc->prevpath = path;
         if(flen)
@@ -3297,40 +3043,40 @@
 #ifdef _WIN32_WCE
   shutdown(conn->sock[SECONDARYSOCKET],2);  /* SD_BOTH */
 #endif
 
   if(conn->sock[SECONDARYSOCKET] != CURL_SOCKET_BAD) {
     if(conn->ssl[SECONDARYSOCKET].use) {
-      /* The secondary socket is using SSL so we must close down that part first
-         before we close the socket for real */
+      /* The secondary socket is using SSL so we must close down that part
+         first before we close the socket for real */
       Curl_ssl_close(conn, SECONDARYSOCKET);
 
       /* Note that we keep "use" set to TRUE since that (next) connection is
          still requested to use SSL */
     }
     if(CURL_SOCKET_BAD != conn->sock[SECONDARYSOCKET]) {
       sclose(conn->sock[SECONDARYSOCKET]);
       conn->sock[SECONDARYSOCKET] = CURL_SOCKET_BAD;
     }
   }
 
   if((ftp->transfer == FTPTRANSFER_BODY) && ftpc->ctl_valid &&
-     ftpc->pending_resp && !premature) {
+     pp->pending_resp && !premature) {
     /*
      * Let's see what the server says about the transfer we just performed,
      * but lower the timeout as sometimes this connection has died while the
      * data has been transfered. This happens when doing through NATs etc that
      * abandon old silent connections.
      */
-    long old_time = ftpc->response_time;
+    long old_time = pp->response_time;
 
-    ftpc->response_time = 60*1000; /* give it only a minute for now */
+    pp->response_time = 60*1000; /* give it only a minute for now */
 
     result = Curl_GetFTPResponse(&nread, conn, &ftpcode);
 
-    ftpc->response_time = old_time; /* set this back to previous value */
+    pp->response_time = old_time; /* set this back to previous value */
 
     if(!nread && (CURLE_OPERATION_TIMEDOUT == result)) {
       failf(data, "control connection looks dead");
       ftpc->ctl_valid = FALSE; /* mark control connection as bad */
       conn->bits.close = TRUE; /* mark for closure */
     }
@@ -3478,13 +3224,13 @@
 
   if(ftpc->transfertype == want) {
     state(conn, newstate);
     return ftp_state_type_resp(conn, 200, newstate);
   }
 
-  NBFTPSENDF(conn, "TYPE %c", want);
+  PPSENDF(&ftpc->pp, "TYPE %c", want);
   state(conn, newstate);
 
   /* keep track of our current transfer type */
   ftpc->transfertype = want;
   return CURLE_OK;
 }
@@ -3627,13 +3373,13 @@
   if((result == CURLE_OK) && (ftp->transfer != FTPTRANSFER_BODY))
     /* no data to transfer. FIX: it feels like a kludge to have this here
        too! */
     result = Curl_setup_transfer(conn, -1, -1, FALSE, NULL, -1, NULL);
 
   /* end of transfer */
-  DEBUGF(infof(data, "DO-MORE phase ends with %d\n", result));
+  DEBUGF(infof(data, "DO-MORE phase ends with %d\n", (int)result));
 
   return result;
 }
 
 
 
@@ -3716,99 +3462,18 @@
 
   retcode = ftp_regular_transfer(conn, done);
 
   return retcode;
 }
 
-/***********************************************************************
- *
- * Curl_(nb)ftpsendf()
- *
- * Sends the formated string as a ftp command to a ftp server
- *
- * NOTE: we build the command in a fixed-length buffer, which sets length
- * restrictions on the command!
- *
- * The "nb" version is made to Never Block.
- */
-CURLcode Curl_nbftpsendf(struct connectdata *conn,
-                       const char *fmt, ...)
-{
-  ssize_t bytes_written;
-/* may still not be big enough for some krb5 tokens */
-#define SBUF_SIZE 1024
-  char s[SBUF_SIZE];
-  size_t write_len;
-  char *sptr=s;
-  CURLcode res = CURLE_OK;
-  struct SessionHandle *data = conn->data;
-  struct ftp_conn *ftpc = &conn->proto.ftpc;
-#if defined(HAVE_KRB4) || defined(HAVE_GSSAPI)
-  enum protection_level data_sec = conn->data_prot;
-#endif
-
-  va_list ap;
-  va_start(ap, fmt);
-  vsnprintf(s, SBUF_SIZE-3, fmt, ap);
-  va_end(ap);
-
-  strcat(s, "\r\n"); /* append a trailing CRLF */
-
-  bytes_written=0;
-  write_len = strlen(s);
-
-  ftp_respinit(conn);
-
-#ifdef CURL_DOES_CONVERSIONS
-  res = Curl_convert_to_network(data, s, write_len);
-  /* Curl_convert_to_network calls failf if unsuccessful */
-  if(res != CURLE_OK) {
-    return res;
-  }
-#endif /* CURL_DOES_CONVERSIONS */
-
-#if defined(HAVE_KRB4) || defined(HAVE_GSSAPI)
-  conn->data_prot = prot_cmd;
-#endif
-  res = Curl_write(conn, conn->sock[FIRSTSOCKET], sptr, write_len,
-                   &bytes_written);
-#if defined(HAVE_KRB4) || defined(HAVE_GSSAPI)
-  conn->data_prot = data_sec;
-#endif
-
-  if(CURLE_OK != res)
-    return res;
-
-  if(conn->data->set.verbose)
-    Curl_debug(conn->data, CURLINFO_HEADER_OUT,
-               sptr, (size_t)bytes_written, conn);
-
-  if(bytes_written != (ssize_t)write_len) {
-    /* the whole chunk was not sent, store the rest of the data */
-    write_len -= bytes_written;
-    sptr += bytes_written;
-    ftpc->sendthis = malloc(write_len);
-    if(ftpc->sendthis) {
-      memcpy(ftpc->sendthis, sptr, write_len);
-      ftpc->sendsize = ftpc->sendleft = write_len;
-    }
-    else {
-      failf(data, "out of memory");
-      res = CURLE_OUT_OF_MEMORY;
-    }
-  }
-  else
-    ftpc->response = Curl_tvnow();
-
-  return res;
-}
 
 CURLcode Curl_ftpsendf(struct connectdata *conn,
                        const char *fmt, ...)
 {
   ssize_t bytes_written;
+#define SBUF_SIZE 1024
   char s[SBUF_SIZE];
   size_t write_len;
   char *sptr=s;
   CURLcode res = CURLE_OK;
 #if defined(HAVE_KRB4) || defined(HAVE_GSSAPI)
   enum protection_level data_sec = conn->data_prot;
@@ -3829,13 +3494,13 @@
   /* Curl_convert_to_network calls failf if unsuccessful */
   if(res != CURLE_OK) {
     return(res);
   }
 #endif /* CURL_DOES_CONVERSIONS */
 
-  while(1) {
+  for(;;) {
 #if defined(HAVE_KRB4) || defined(HAVE_GSSAPI)
     conn->data_prot = prot_cmd;
 #endif
     res = Curl_write(conn, conn->sock[FIRSTSOCKET], sptr, write_len,
                      &bytes_written);
 #if defined(HAVE_KRB4) || defined(HAVE_GSSAPI)
@@ -3872,13 +3537,13 @@
  */
 static CURLcode ftp_quit(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
 
   if(conn->proto.ftpc.ctl_valid) {
-    NBFTPSENDF(conn, "QUIT", NULL);
+    PPSENDF(&conn->proto.ftpc.pp, "QUIT", NULL);
     state(conn, FTP_QUIT);
 
     result = ftp_easy_statemach(conn);
   }
 
   return result;
@@ -3891,12 +3556,13 @@
  * Disconnect from an FTP server. Cleanup protocol-specific per-connection
  * resources. BLOCKING.
  */
 static CURLcode ftp_disconnect(struct connectdata *conn)
 {
   struct ftp_conn *ftpc= &conn->proto.ftpc;
+  struct pingpong *pp = &ftpc->pp;
 
   /* We cannot send quit unconditionally. If this connection is stale or
      bad in any way, sending quit and waiting around here will make the
      disconnect wait in vain and cause more problems than we need to.
 
      ftp_quit() will check the state of ftp->ctl_valid. If it's ok it
@@ -3911,26 +3577,25 @@
     if(data->state.most_recent_ftp_entrypath == ftpc->entrypath) {
       data->state.most_recent_ftp_entrypath = NULL;
     }
     free(ftpc->entrypath);
     ftpc->entrypath = NULL;
   }
-  if(ftpc->cache) {
-    free(ftpc->cache);
-    ftpc->cache = NULL;
-  }
+
   freedirs(ftpc);
   if(ftpc->prevpath) {
     free(ftpc->prevpath);
     ftpc->prevpath = NULL;
   }
   if(ftpc->server_os) {
     free(ftpc->server_os);
     ftpc->server_os = NULL;
   }
 
+  Curl_pp_disconnect(pp);
+
   return CURLE_OK;
 }
 
 /***********************************************************************
  *
  * ftp_parse_url_path()
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/ftp.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/ftp.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/ftp.h	2007-10-13 04:49:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/ftp.h	2010-01-27 01:06:01.000000000 +0800
@@ -1,46 +1,141 @@
-#ifndef __FTP_H
-#define __FTP_H
+#ifndef HEADER_CURL_FTP_H
+#define HEADER_CURL_FTP_H
 /***************************************************************************
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2007, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: ftp.h,v 1.26 2007-10-12 13:36:38 patrickm Exp $
+ * $Id: ftp.h,v 1.30 2010-01-25 23:41:02 yangtse Exp $
  ***************************************************************************/
 
+#include "pingpong.h"
+
 #ifndef CURL_DISABLE_FTP
 extern const struct Curl_handler Curl_handler_ftp;
 
 #ifdef USE_SSL
 extern const struct Curl_handler Curl_handler_ftps;
 #endif
 
-#ifndef CURL_DISABLE_HTTP
-extern const struct Curl_handler Curl_handler_ftp_proxy;
-
-# ifdef USE_SSL
-extern const struct Curl_handler Curl_handler_ftps_proxy;
-# endif
-#endif
-
 CURLcode Curl_ftpsendf(struct connectdata *, const char *fmt, ...);
-CURLcode Curl_nbftpsendf(struct connectdata *, const char *fmt, ...);
 CURLcode Curl_GetFTPResponse(ssize_t *nread, struct connectdata *conn,
                              int *ftpcode);
 #endif /* CURL_DISABLE_FTP */
-#endif /* __FTP_H */
+
+/****************************************************************************
+ * FTP unique setup
+ ***************************************************************************/
+typedef enum {
+  FTP_STOP,    /* do nothing state, stops the state machine */
+  FTP_WAIT220, /* waiting for the initial 220 response immediately after
+                  a connect */
+  FTP_AUTH,
+  FTP_USER,
+  FTP_PASS,
+  FTP_ACCT,
+  FTP_PBSZ,
+  FTP_PROT,
+  FTP_CCC,
+  FTP_PWD,
+  FTP_SYST,
+  FTP_NAMEFMT,
+  FTP_QUOTE, /* waiting for a response to a command sent in a quote list */
+  FTP_RETR_PREQUOTE,
+  FTP_STOR_PREQUOTE,
+  FTP_POSTQUOTE,
+  FTP_CWD,  /* change dir */
+  FTP_MKD,  /* if the dir didn't exist */
+  FTP_MDTM, /* to figure out the datestamp */
+  FTP_TYPE, /* to set type when doing a head-like request */
+  FTP_LIST_TYPE, /* set type when about to do a dir list */
+  FTP_RETR_TYPE, /* set type when about to RETR a file */
+  FTP_STOR_TYPE, /* set type when about to STOR a file */
+  FTP_SIZE, /* get the remote file's size for head-like request */
+  FTP_RETR_SIZE, /* get the remote file's size for RETR */
+  FTP_STOR_SIZE, /* get the size for (resumed) STOR */
+  FTP_REST, /* when used to check if the server supports it in head-like */
+  FTP_RETR_REST, /* when asking for "resume" in for RETR */
+  FTP_PORT, /* generic state for PORT, LPRT and EPRT, check count1 */
+  FTP_PRET, /* generic state for PRET RETR, PRET STOR and PRET LIST/NLST */
+  FTP_PASV, /* generic state for PASV and EPSV, check count1 */
+  FTP_LIST, /* generic state for LIST, NLST or a custom list command */
+  FTP_RETR,
+  FTP_STOR, /* generic state for STOR and APPE */
+  FTP_QUIT,
+  FTP_LAST  /* never used */
+} ftpstate;
+
+typedef enum {
+  FTPFILE_MULTICWD  = 1, /* as defined by RFC1738 */
+  FTPFILE_NOCWD     = 2, /* use SIZE / RETR / STOR on the full path */
+  FTPFILE_SINGLECWD = 3  /* make one CWD, then SIZE / RETR / STOR on the file */
+} curl_ftpfile;
+
+typedef enum {
+  FTPTRANSFER_BODY, /* yes do transfer a body */
+  FTPTRANSFER_INFO, /* do still go through to get info/headers */
+  FTPTRANSFER_NONE, /* don't get anything and don't get info */
+  FTPTRANSFER_LAST  /* end of list marker, never used */
+} curl_ftptransfer;
+
+/* This FTP struct is used in the SessionHandle. All FTP data that is
+   connection-oriented must be in FTP_conn to properly deal with the fact that
+   perhaps the SessionHandle is changed between the times the connection is
+   used. */
+struct FTP {
+  curl_off_t *bytecountp;
+  char *user;    /* user name string */
+  char *passwd;  /* password string */
+
+  /* transfer a file/body or not, done as a typedefed enum just to make
+     debuggers display the full symbol and not just the numerical value */
+  curl_ftptransfer transfer;
+  curl_off_t downloadsize;
+};
+
+
+/* ftp_conn is used for struct connection-oriented data in the connectdata
+   struct */
+struct ftp_conn {
+  struct pingpong pp;
+  char *entrypath; /* the PWD reply when we logged on */
+  char **dirs;   /* realloc()ed array for path components */
+  int dirdepth;  /* number of entries used in the 'dirs' array */
+  int diralloc;  /* number of entries allocated for the 'dirs' array */
+  char *file;    /* decoded file */
+  bool dont_check;  /* Set to TRUE to prevent the final (post-transfer)
+                       file size and 226/250 status check. It should still
+                       read the line, just ignore the result. */
+  bool ctl_valid;   /* Tells Curl_ftp_quit() whether or not to do anything. If
+                       the connection has timed out or been closed, this
+                       should be FALSE when it gets to Curl_ftp_quit() */
+  bool cwddone;     /* if it has been determined that the proper CWD combo
+                       already has been done */
+  bool cwdfail;     /* set TRUE if a CWD command fails, as then we must prevent
+                       caching the current directory */
+  char *prevpath;   /* conn->path from the previous transfer */
+  char transfertype; /* set by ftp_transfertype for use by Curl_client_write()a
+                        and others (A/I or zero) */
+  int count1; /* general purpose counter for the state machine */
+  int count2; /* general purpose counter for the state machine */
+  int count3; /* general purpose counter for the state machine */
+  ftpstate state; /* always use ftp.c:state() to change state! */
+  char * server_os;     /* The target server operating system. */
+};
+
+#endif /* HEADER_CURL_FTP_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/getenv.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/getenv.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/getenv.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/getenv.c	2010-01-22 20:14:35.000000000 +0800
@@ -15,22 +15,22 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: getenv.c,v 1.33 2009-04-21 11:46:16 yangtse Exp $
+ * $Id: getenv.c,v 1.34 2009-12-30 17:59:56 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
 
-#ifdef VMS
+#ifdef __VMS
 #include <unixlib.h>
 #endif
 
 #include <curl/curl.h>
 #include "curl_memory.h"
 
@@ -48,13 +48,13 @@
   env[0] = '\0';
   if(temp != NULL)
     ExpandEnvironmentStrings(temp, env, sizeof(env));
   return (env[0] != '\0')?strdup(env):NULL;
 #else
   char *env = getenv(variable);
-#ifdef VMS
+#ifdef __VMS
   if(env && strcmp("HOME",variable) == 0)
     env = decc_translate_vms(env);
 #endif
   return (env && env[0])?strdup(env):NULL;
 #endif
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/getinfo.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/getinfo.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/getinfo.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/getinfo.c	2010-01-22 20:14:35.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: getinfo.c,v 1.68 2009-04-21 11:46:16 yangtse Exp $
+ * $Id: getinfo.c,v 1.69 2010-01-21 13:58:30 bagder Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <curl/curl.h>
 
@@ -232,11 +232,24 @@
     *param_slistp = ptr.to_slist;
     break;
   case CURLINFO_CONDITION_UNMET:
     /* return if the condition prevented the document to get transfered */
     *param_longp = data->info.timecond;
     break;
+  case CURLINFO_RTSP_SESSION_ID:
+    *param_charp = data->set.str[STRING_RTSP_SESSION_ID];
+    break;
+  case CURLINFO_RTSP_CLIENT_CSEQ:
+    *param_longp = data->state.rtsp_next_client_CSeq;
+    break;
+  case CURLINFO_RTSP_SERVER_CSEQ:
+    *param_longp = data->state.rtsp_next_server_CSeq;
+    break;
+  case CURLINFO_RTSP_CSEQ_RECV:
+    *param_longp = data->state.rtsp_CSeq_recv;
+    break;
+
   default:
     return CURLE_BAD_FUNCTION_ARGUMENT;
   }
   return CURLE_OK;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hash.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hash.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hash.c	2009-11-04 20:21:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hash.c	2010-01-22 20:14:35.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: hash.c,v 1.41 2009-06-10 02:49:43 yangtse Exp $
+ * $Id: hash.c,v 1.42 2009-11-11 09:31:37 bagder Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <string.h>
 #include <stdlib.h>
@@ -137,26 +137,27 @@
   }
   return he;
 }
 
 #define FETCH_LIST(x,y,z) x->table[x->hash_func(y, z, x->slots)]
 
-/* Return the data in the hash. If there already was a match in the hash,
-   that data is returned. */
+/* Insert the data in the hash. If there already was a match in the hash,
+   that data is replaced. */
 void *
 Curl_hash_add(struct curl_hash *h, void *key, size_t key_len, void *p)
 {
   struct curl_hash_element  *he;
   struct curl_llist_element *le;
   struct curl_llist *l = FETCH_LIST (h, key, key_len);
 
   for (le = l->head; le; le = le->next) {
     he = (struct curl_hash_element *) le->ptr;
     if(h->comp_func(he->key, he->key_len, key, key_len)) {
-      h->dtor(p);     /* remove the NEW entry */
-      return he->ptr; /* return the EXISTING entry */
+      Curl_llist_remove(l, le, (void *)h);
+      --h->size;
+      break;
     }
   }
 
   he = mk_hash_element(key, key_len, p);
   if(he) {
     if(Curl_llist_insert_next(l, l->tail, he)) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostares.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostares.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostares.c	2009-09-17 04:37:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostares.c	2010-01-27 06:59:43.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: hostares.c,v 1.52 2009-09-15 00:07:25 yangtse Exp $
+ * $Id: hostares.c,v 1.57 2010-01-26 22:59:43 bagder Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <string.h>
 
@@ -43,13 +43,13 @@
 #ifdef HAVE_STDLIB_H
 #include <stdlib.h>     /* required for free() prototypes */
 #endif
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>     /* for the close() proto */
 #endif
-#ifdef  VMS
+#ifdef __VMS
 #include <in.h>
 #include <inet.h>
 #include <stdlib.h>
 #endif
 
 #ifdef HAVE_PROCESS_H
@@ -69,12 +69,13 @@
 #include "strerror.h"
 #include "url.h"
 #include "multiif.h"
 #include "inet_pton.h"
 #include "connect.h"
 #include "select.h"
+#include "progress.h"
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
 #include "curl_memory.h"
 /* The last #include file should be: */
@@ -116,22 +117,22 @@
               (timeout->tv_sec * 1000) + (timeout->tv_usec/1000));
 
   return max;
 }
 
 /*
- * ares_waitperform()
+ * waitperform()
  *
  * 1) Ask ares what sockets it currently plays with, then
  * 2) wait for the timeout period to check for action on ares' sockets.
  * 3) tell ares to act on all the sockets marked as "with action"
  *
  * return number of sockets it worked on
  */
 
-static int ares_waitperform(struct connectdata *conn, int timeout_ms)
+static int waitperform(struct connectdata *conn, int timeout_ms)
 {
   struct SessionHandle *data = conn->data;
   int nfds;
   int bitmask;
   int socks[ARES_GETSOCK_MAXNUM];
   struct pollfd pfd[ARES_GETSOCK_MAXNUM];
@@ -189,13 +190,13 @@
                           struct Curl_dns_entry **dns)
 {
   struct SessionHandle *data = conn->data;
 
   *dns = NULL;
 
-  ares_waitperform(conn, 0);
+  waitperform(conn, 0);
 
   if(conn->async.done) {
     /* we're done, kill the ares handle */
     if(!conn->async.dns) {
       failf(data, "Could not resolve host: %s (%s)", conn->host.dispname,
             ares_strerror(conn->async.status));
@@ -235,28 +236,42 @@
 
   /* Wait for the name resolve query to complete. */
   while(1) {
     struct timeval *tvp, tv, store;
     long timediff;
     int itimeout;
+    int timeout_ms;
 
     itimeout = (timeout > (long)INT_MAX) ? INT_MAX : (int)timeout;
 
     store.tv_sec = itimeout/1000;
     store.tv_usec = (itimeout%1000)*1000;
 
     tvp = ares_timeout(data->state.areschannel, &store, &tv);
 
-    /* use the timeout period ares returned to us above */
-    ares_waitperform(conn, (int)(tvp->tv_sec * 1000 + tvp->tv_usec/1000));
+    /* use the timeout period ares returned to us above if less than one
+       second is left, otherwise just use 1000ms to make sure the progress
+       callback gets called frequent enough */
+    if(!tvp->tv_sec)
+      timeout_ms = tvp->tv_usec/1000;
+    else
+      timeout_ms = 1000;
+
+    waitperform(conn, timeout_ms);
 
     if(conn->async.done)
       break;
 
-    timediff = Curl_tvdiff(Curl_tvnow(), now); /* spent time */
-    timeout -= timediff?timediff:1; /* always deduct at least 1 */
+    if(Curl_pgrsUpdate(conn)) {
+      rc = CURLE_ABORTED_BY_CALLBACK;
+      timeout = -1; /* trigger the cancel below */
+    }
+    else {
+      timediff = Curl_tvdiff(Curl_tvnow(), now); /* spent time */
+      timeout -= timediff?timediff:1; /* always deduct at least 1 */
+    }
     if(timeout < 0) {
       /* our timeout, so we cancel the ares operation */
       ares_cancel(data->state.areschannel);
       break;
     }
   }
@@ -267,31 +282,69 @@
   if(entry)
     *entry = conn->async.dns;
 
   if(!conn->async.dns) {
     /* a name was not resolved */
     if((timeout < 0) || (conn->async.status == ARES_ETIMEOUT)) {
-      failf(data, "Resolving host timed out: %s", conn->host.dispname);
-      rc = CURLE_COULDNT_RESOLVE_HOST;
+      if (conn->bits.httpproxy) {
+        failf(data, "Resolving proxy timed out: %s", conn->proxy.dispname);
+        rc = CURLE_COULDNT_RESOLVE_PROXY;
+      }
+      else {
+        failf(data, "Resolving host timed out: %s", conn->host.dispname);
+        rc = CURLE_COULDNT_RESOLVE_HOST;
+      }
     }
     else if(conn->async.done) {
-      failf(data, "Could not resolve host: %s (%s)", conn->host.dispname,
-            ares_strerror(conn->async.status));
-      rc = CURLE_COULDNT_RESOLVE_HOST;
+      if (conn->bits.httpproxy) {
+        failf(data, "Could not resolve proxy: %s (%s)", conn->proxy.dispname,
+              ares_strerror(conn->async.status));
+        rc = CURLE_COULDNT_RESOLVE_PROXY;
+      }
+      else {
+        failf(data, "Could not resolve host: %s (%s)", conn->host.dispname,
+              ares_strerror(conn->async.status));
+        rc = CURLE_COULDNT_RESOLVE_HOST;
+      }
     }
     else
       rc = CURLE_OPERATION_TIMEDOUT;
 
     /* close the connection, since we can't return failure here without
        cleaning up this connection properly */
     conn->bits.close = TRUE;
   }
 
   return rc;
 }
 
+/*
+ * ares_query_completed_cb() is the callback that ares will call when
+ * the host query initiated by ares_gethostbyname() from Curl_getaddrinfo(),
+ * when using ares, is completed either successfully or with failure.
+ */
+static void ares_query_completed_cb(void *arg,  /* (struct connectdata *) */
+                                    int status,
+#ifdef HAVE_CARES_CALLBACK_TIMEOUTS
+                                    int timeouts,
+#endif
+                                    struct hostent *hostent)
+{
+  struct connectdata *conn = (struct connectdata *)arg;
+  struct Curl_addrinfo * ai = NULL;
+
+#ifdef HAVE_CARES_CALLBACK_TIMEOUTS
+  (void)timeouts; /* ignored */
+#endif
+
+  if (status == CURL_ASYNC_SUCCESS) {
+    ai = Curl_he2ai(hostent, conn->async.port);
+  }
+
+  (void)Curl_addrinfo_callback(arg, status, ai);
+}
 
 /*
  * Curl_getaddrinfo() - when using ares
  *
  * Returns name information about the given hostname and port number. If
  * successful, the 'hostent' is returned and the forth argument will point to
@@ -307,13 +360,14 @@
   struct SessionHandle *data = conn->data;
   struct in_addr in;
   int family = PF_INET;
 #ifdef ENABLE_IPV6 /* CURLRES_IPV6 */
   struct in6_addr in6;
 #endif /* CURLRES_IPV6 */
-  *waitp = FALSE;
+
+  *waitp = 0; /* default to synchronous response */
 
   /* First check if this is an IPv4 address string */
   if(Curl_inet_pton(AF_INET, hostname, &in) > 0) {
     /* This is a dotted IP address 123.123.123.123-style */
     return Curl_ip2addr(AF_INET, &in, hostname, port);
   }
@@ -351,13 +405,13 @@
     conn->async.done = FALSE; /* not done */
     conn->async.status = 0;   /* clear */
     conn->async.dns = NULL;   /* clear */
 
     /* areschannel is already setup in the Curl_open() function */
     ares_gethostbyname(data->state.areschannel, hostname, family,
-                       (ares_host_callback)Curl_addrinfo4_callback, conn);
+                       (ares_host_callback)ares_query_completed_cb, conn);
 
-    *waitp = TRUE; /* please wait for the response */
+    *waitp = 1; /* expect asynchronous response */
   }
   return NULL; /* no struct yet */
 }
 #endif /* CURLRES_ARES */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostasyn.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostasyn.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostasyn.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostasyn.c	2010-01-22 20:14:35.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: hostasyn.c,v 1.24 2009-04-21 11:46:16 yangtse Exp $
+ * $Id: hostasyn.c,v 1.26 2010-01-22 06:36:52 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <string.h>
 
@@ -40,13 +40,13 @@
 #ifdef HAVE_STDLIB_H
 #include <stdlib.h>     /* required for free() prototypes */
 #endif
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>     /* for the close() proto */
 #endif
-#ifdef  VMS
+#ifdef __VMS
 #include <in.h>
 #include <inet.h>
 #include <stdlib.h>
 #endif
 
 #ifdef HAVE_PROCESS_H
@@ -69,44 +69,33 @@
 #include "memdebug.h"
 
 /***********************************************************************
  * Only for builds using asynchronous name resolves
  **********************************************************************/
 #ifdef CURLRES_ASYNCH
+
 /*
- * addrinfo_callback() gets called by ares, gethostbyname_thread() or
- * getaddrinfo_thread() when we got the name resolved (or not!).
- *
- * If the status argument is CURL_ASYNC_SUCCESS, we might need to copy the
- * address field since it might be freed when this function returns. This
- * operation stores the resolved data in the DNS cache.
+ * Curl_addrinfo_callback() gets called by ares, gethostbyname_thread()
+ * or getaddrinfo_thread() when we got the name resolved (or not!).
  *
- * NOTE: for IPv6 operations, Curl_addrinfo_copy() returns the same
- * pointer it is given as argument!
+ * If the status argument is CURL_ASYNC_SUCCESS, this function takes
+ * ownership of the Curl_addrinfo passed, storing the resolved data
+ * in the DNS cache.
  *
  * The storage operation locks and unlocks the DNS cache.
  */
-static CURLcode addrinfo_callback(void *arg, /* "struct connectdata *" */
-                                  int status,
-                                  void *addr)
+CURLcode Curl_addrinfo_callback(struct connectdata * conn,
+                                int status,
+                                struct Curl_addrinfo *ai)
 {
-  struct connectdata *conn = (struct connectdata *)arg;
   struct Curl_dns_entry *dns = NULL;
   CURLcode rc = CURLE_OK;
 
   conn->async.status = status;
 
   if(CURL_ASYNC_SUCCESS == status) {
-
-    /*
-     * IPv4/ares: Curl_addrinfo_copy() copies the address and returns an
-     * allocated version.
-     *
-     * IPv6: Curl_addrinfo_copy() returns the input pointer!
-     */
-    Curl_addrinfo *ai = Curl_addrinfo_copy(addr, conn->async.port);
     if(ai) {
       struct SessionHandle *data = conn->data;
 
       if(data->share)
         Curl_share_lock(data, CURL_LOCK_DATA_DNS, CURL_LOCK_ACCESS_SINGLE);
 
@@ -135,38 +124,7 @@
 
   /* ipv4: The input hostent struct will be freed by ares when we return from
      this function */
   return rc;
 }
 
-CURLcode Curl_addrinfo4_callback(void *arg, /* "struct connectdata *" */
-                                 int status,
-#ifdef HAVE_CARES_CALLBACK_TIMEOUTS
-                                 int timeouts,
-#endif
-                                 struct hostent *hostent)
-{
-#ifdef HAVE_CARES_CALLBACK_TIMEOUTS
-  (void)timeouts; /* ignored */
-#endif
-  return addrinfo_callback(arg, status, hostent);
-}
-
-#ifdef CURLRES_IPV6
-CURLcode Curl_addrinfo6_callback(void *arg, /* "struct connectdata *" */
-                                 int status,
-#ifdef HAVE_CARES_CALLBACK_TIMEOUTS
-                                 int timeouts,
-#endif
-                                 Curl_addrinfo *ai)
-{
- /* NOTE: for CURLRES_ARES, the 'ai' argument is really a
-  * 'struct hostent' pointer.
-  */
-#ifdef HAVE_CARES_CALLBACK_TIMEOUTS
-  (void)timeouts; /* ignored */
-#endif
-  return addrinfo_callback(arg, status, ai);
-}
-#endif
-
-#endif /* CURLRES_ASYNC */
+#endif /* CURLRES_ASYNCH */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostip4.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostip4.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostip4.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostip4.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: hostip4.c,v 1.49 2009-04-21 11:46:16 yangtse Exp $
+ * $Id: hostip4.c,v 1.54 2010-02-04 10:08:39 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <string.h>
 #include <errno.h>
@@ -41,13 +41,13 @@
 #ifdef HAVE_STDLIB_H
 #include <stdlib.h>     /* required for free() prototypes */
 #endif
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>     /* for the close() proto */
 #endif
-#ifdef  VMS
+#ifdef __VMS
 #include <in.h>
 #include <inet.h>
 #include <stdlib.h>
 #endif
 
 #ifdef HAVE_PROCESS_H
@@ -84,14 +84,13 @@
     /* an ipv6 address was requested and we can't get/use one */
     return FALSE;
 
   return TRUE; /* OK, proceed */
 }
 
-#ifdef CURLRES_SYNCH /* the functions below are for synchronous resolves */
-
+#ifdef CURLRES_SYNCH
 /*
  * Curl_getaddrinfo() - the ipv4 synchronous version.
  *
  * The original code to this function was from the Dancer source code, written
  * by Bjorn Reese, it has since been patched and modified considerably.
  *
@@ -107,49 +106,86 @@
  */
 Curl_addrinfo *Curl_getaddrinfo(struct connectdata *conn,
                                 const char *hostname,
                                 int port,
                                 int *waitp)
 {
-#if defined(HAVE_GETHOSTBYNAME_R_3)
-  int res;
-#endif
   Curl_addrinfo *ai = NULL;
-  struct hostent *h = NULL;
-  struct in_addr in;
-  struct hostent *buf = NULL;
 
 #ifdef CURL_DISABLE_VERBOSE_STRINGS
   (void)conn;
 #endif
 
-  *waitp = 0; /* don't wait, we act synchronously */
+  *waitp = 0; /* synchronous response only */
+
+  ai = Curl_ipv4_resolve_r(hostname, port);
+  if(!ai)
+    infof(conn->data, "Curl_ipv4_resolve_r failed for %s\n", hostname);
+
+  return ai;  
+}
+#endif /* CURLRES_SYNCH */
+#endif /* CURLRES_IPV4 */
+
+/*
+ * Curl_ipv4_resolve_r() - ipv4 threadsafe resolver function.
+ *
+ * This is used for both synchronous and asynchronous resolver builds,
+ * implying that only threadsafe code and function calls may be used.
+ *
+ */
+Curl_addrinfo *Curl_ipv4_resolve_r(const char *hostname,
+                                   int port)
+{
+#if !defined(HAVE_GETADDRINFO_THREADSAFE) && defined(HAVE_GETHOSTBYNAME_R_3)
+  int res;
+#endif
+  Curl_addrinfo *ai = NULL;
+  struct hostent *h = NULL;
+  struct in_addr in;
+  struct hostent *buf = NULL;
 
   if(Curl_inet_pton(AF_INET, hostname, &in) > 0)
     /* This is a dotted IP address 123.123.123.123-style */
     return Curl_ip2addr(AF_INET, &in, hostname, port);
 
-#if defined(HAVE_GETHOSTBYNAME_R)
+#if defined(HAVE_GETADDRINFO_THREADSAFE)
+  else { 
+    struct addrinfo hints;
+    char sbuf[NI_MAXSERV];
+    char *sbufptr = NULL;
+
+    memset(&hints, 0, sizeof(hints));
+    hints.ai_family = PF_INET;
+    hints.ai_socktype = SOCK_STREAM;
+    if(port) {
+      snprintf(sbuf, sizeof(sbuf), "%d", port);
+      sbufptr = sbuf;
+    }
+    hints.ai_flags = AI_CANONNAME;
+    (void)Curl_getaddrinfo_ex(hostname, sbufptr, &hints, &ai);
+
+#elif defined(HAVE_GETHOSTBYNAME_R)
   /*
    * gethostbyname_r() is the preferred resolve function for many platforms.
    * Since there are three different versions of it, the following code is
    * somewhat #ifdef-ridden.
    */
   else {
     int h_errnop;
 
-    buf = calloc(CURL_HOSTENT_SIZE, 1);
+    buf = calloc(1, CURL_HOSTENT_SIZE);
     if(!buf)
       return NULL; /* major failure */
     /*
      * The clearing of the buffer is a workaround for a gethostbyname_r bug in
      * qnx nto and it is also _required_ for some of these functions on some
      * platforms.
      */
 
-#ifdef HAVE_GETHOSTBYNAME_R_5
+#if defined(HAVE_GETHOSTBYNAME_R_5)
     /* Solaris, IRIX and more */
     h = gethostbyname_r(hostname,
                         (struct hostent *)buf,
                         (char *)buf + sizeof(struct hostent),
                         CURL_HOSTENT_SIZE - sizeof(struct hostent),
                         &h_errnop);
@@ -161,14 +197,13 @@
      */
 
     if(h) {
       ;
     }
     else
-#endif /* HAVE_GETHOSTBYNAME_R_5 */
-#ifdef HAVE_GETHOSTBYNAME_R_6
+#elif defined(HAVE_GETHOSTBYNAME_R_6)
     /* Linux */
 
     (void)gethostbyname_r(hostname,
                         (struct hostent *)buf,
                         (char *)buf + sizeof(struct hostent),
                         CURL_HOSTENT_SIZE - sizeof(struct hostent),
@@ -203,14 +238,13 @@
      * In this "buggy" version, the return code is -1 on error and 'errno'
      * is set to the ERANGE or EAGAIN code. Note that 'errno' is not a
      * thread-safe variable.
      */
 
     if(!h) /* failure */
-#endif/* HAVE_GETHOSTBYNAME_R_6 */
-#ifdef HAVE_GETHOSTBYNAME_R_3
+#elif defined(HAVE_GETHOSTBYNAME_R_3)
     /* AIX, Digital Unix/Tru64, HPUX 10, more? */
 
     /* For AIX 4.3 or later, we don't use gethostbyname_r() at all, because of
      * the plain fact that it does not return unique full buffers on each
      * call, but instead several of the pointers in the hostent structs will
      * point to the same actual data! This have the unfortunate down-side that
@@ -256,41 +290,31 @@
        * name lookup. Fixing this would require an extra malloc() and then
        * calling Curl_addrinfo_copy() that subsequent realloc()s down the new
        * memory area to the actually used amount.
        */
     }
     else
-#endif /* HAVE_GETHOSTBYNAME_R_3 */
-      {
-      infof(conn->data, "gethostbyname_r(2) failed for %s\n", hostname);
+#endif /* HAVE_...BYNAME_R_5 || HAVE_...BYNAME_R_6 || HAVE_...BYNAME_R_3 */
+    {
       h = NULL; /* set return code to NULL */
       free(buf);
     }
-#else /* HAVE_GETHOSTBYNAME_R */
+#else /* HAVE_GETADDRINFO_THREADSAFE || HAVE_GETHOSTBYNAME_R */
     /*
-     * Here is code for platforms that don't have gethostbyname_r() or for
-     * which the gethostbyname() is the preferred() function.
+     * Here is code for platforms that don't have a thread safe
+     * getaddrinfo() nor gethostbyname_r() function or for which
+     * gethostbyname() is the preferred one.
      */
   else {
-#if (defined(NETWARE) && !defined(__NOVELL_LIBC__))
-    h = gethostbyname((char*)hostname);
-#else
-    h = gethostbyname(hostname);
-#endif
-    if(!h)
-      infof(conn->data, "gethostbyname(2) failed for %s\n", hostname);
-#endif /*HAVE_GETHOSTBYNAME_R */
+    h = gethostbyname((void*)hostname);
+#endif /* HAVE_GETADDRINFO_THREADSAFE || HAVE_GETHOSTBYNAME_R */
   }
 
   if(h) {
     ai = Curl_he2ai(h, port);
 
     if(buf) /* used a *_r() function */
       free(buf);
   }
 
   return ai;
 }
-
-#endif /* CURLRES_SYNCH */
-#endif /* CURLRES_IPV4 */
-
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostip6.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostip6.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostip6.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostip6.c	2010-01-27 01:06:01.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: hostip6.c,v 1.49 2009-04-21 11:46:16 yangtse Exp $
+ * $Id: hostip6.c,v 1.53 2010-01-25 23:50:13 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <string.h>
 
@@ -40,13 +40,13 @@
 #ifdef HAVE_STDLIB_H
 #include <stdlib.h>     /* required for free() prototypes */
 #endif
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>     /* for the close() proto */
 #endif
-#ifdef  VMS
+#ifdef __VMS
 #include <in.h>
 #include <inet.h>
 #include <stdlib.h>
 #endif
 
 #ifdef HAVE_PROCESS_H
@@ -72,26 +72,12 @@
 
 /***********************************************************************
  * Only for ipv6-enabled builds
  **********************************************************************/
 #ifdef CURLRES_IPV6
 
-#ifndef CURLRES_ARES
-#ifdef CURLRES_ASYNCH
-/*
- * Curl_addrinfo_copy() is used by the asynch callback to copy a given
- * address. But this is an ipv6 build and then we don't copy the address, we
- * just return the same pointer!
- */
-Curl_addrinfo *Curl_addrinfo_copy(const void *orig, int port)
-{
-  (void) port;
-  return (Curl_addrinfo*)orig;
-}
-#endif  /* CURLRES_ASYNCH */
-#endif  /* CURLRES_ARES */
 
 #if defined(CURLDEBUG) && defined(HAVE_GETNAMEINFO)
 /* These are strictly for memory tracing and are using the same style as the
  * family otherwise present in memdebug.c. I put these ones here since they
  * require a bunch of structs I didn't wanna include in memdebug.c
  */
@@ -109,23 +95,19 @@
                        int line, const char *source)
 {
   int res = (getnameinfo)(sa, salen,
                           host, hostlen,
                           serv, servlen,
                           flags);
-  if(0 == res) {
+  if(0 == res)
     /* success */
-    if(logfile)
-      fprintf(logfile, "GETNAME %s:%d getnameinfo()\n",
-              source, line);
-  }
-  else {
-    if(logfile)
-      fprintf(logfile, "GETNAME %s:%d getnameinfo() failed = %d\n",
-              source, line, res);
-  }
+    curl_memlog("GETNAME %s:%d getnameinfo()\n",
+                source, line);
+  else
+    curl_memlog("GETNAME %s:%d getnameinfo() failed = %d\n",
+                source, line, res);
   return res;
 }
 #endif /* defined(CURLDEBUG) && defined(HAVE_GETNAMEINFO) */
 
 /*
  * Curl_ipvalid() checks what CURL_IPRESOLVE_* requirements that might've
@@ -141,13 +123,13 @@
       return FALSE;
     sclose(s);
   }
   return TRUE;
 }
 
-#if !defined(USE_THREADING_GETADDRINFO) && !defined(CURLRES_ARES)
+#if defined(CURLRES_SYNCH)
 
 #ifdef DEBUG_ADDRINFO
 static void dump_addrinfo(struct connectdata *conn, const Curl_addrinfo *ai)
 {
   printf("dump_addrinfo:\n");
   for ( ; ai; ai = ai->ai_next) {
@@ -185,13 +167,13 @@
   char sbuf[NI_MAXSERV];
   char *sbufptr = NULL;
   char addrbuf[128];
   int pf;
   struct SessionHandle *data = conn->data;
 
-  *waitp=0; /* don't wait, we have the response now */
+  *waitp = 0; /* synchronous response only */
 
   /*
    * Check if a limited name resolve has been requested.
    */
   switch(data->set.ip_version) {
   case CURL_IPRESOLVE_V4:
@@ -249,9 +231,9 @@
   }
 
   dump_addrinfo(conn, res);
 
   return res;
 }
-#endif /* !USE_THREADING_GETADDRINFO && !CURLRES_ARES */
-#endif /* ipv6 */
+#endif /* CURLRES_SYNCH */
+#endif /* CURLRES_IPV6 */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostip.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostip.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostip.c	2009-11-04 20:21:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostip.c	2010-01-25 06:42:54.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: hostip.c,v 1.217 2009-09-01 14:27:01 bagder Exp $
+ * $Id: hostip.c,v 1.225 2010-01-23 13:53:33 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <string.h>
 
@@ -40,13 +40,13 @@
 #ifdef HAVE_STDLIB_H
 #include <stdlib.h>     /* required for free() prototypes */
 #endif
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>     /* for the close() proto */
 #endif
-#ifdef  VMS
+#ifdef __VMS
 #include <in.h>
 #include <inet.h>
 #include <stdlib.h>
 #endif
 
 #ifdef HAVE_SETJMP_H
@@ -73,14 +73,14 @@
 #include <curl/mprintf.h>
 
 #include "curl_memory.h"
 /* The last #include file should be: */
 #include "memdebug.h"
 
-#if defined(HAVE_ALARM) && defined(SIGALRM) && defined(HAVE_SIGSETJMP) \
-    && !defined(USE_ARES)
+#if defined(CURLRES_SYNCH) && \
+    defined(HAVE_ALARM) && defined(SIGALRM) && defined(HAVE_SIGSETJMP)
 /* alarm-based timeouts can only be used with all the dependencies satisfied */
 #define USE_ALARM_TIMEOUT
 #endif
 
 /*
  * hostip.c explained
@@ -186,18 +186,20 @@
 #endif
 
   switch (ai->ai_family) {
     case AF_INET:
       sa4 = (const void *)ai->ai_addr;
       ipaddr4 = &sa4->sin_addr;
-      return Curl_inet_ntop(ai->ai_family, (const void *)ipaddr4, buf, bufsize);
+      return Curl_inet_ntop(ai->ai_family, (const void *)ipaddr4, buf,
+                            bufsize);
 #ifdef ENABLE_IPV6
     case AF_INET6:
       sa6 = (const void *)ai->ai_addr;
       ipaddr6 = &sa6->sin6_addr;
-      return Curl_inet_ntop(ai->ai_family, (const void *)ipaddr6, buf, bufsize);
+      return Curl_inet_ntop(ai->ai_family, (const void *)ipaddr6, buf,
+                            bufsize);
 #endif
     default:
       break;
   }
   return NULL;
 }
@@ -229,20 +231,13 @@
 hostcache_timestamp_remove(void *datap, void *hc)
 {
   struct hostcache_prune_data *data =
     (struct hostcache_prune_data *) datap;
   struct Curl_dns_entry *c = (struct Curl_dns_entry *) hc;
 
-  if((data->now - c->timestamp < data->cache_timeout) ||
-      c->inuse) {
-    /* please don't remove */
-    return 0;
-  }
-
-  /* fine, remove */
-  return 1;
+  return (data->now - c->timestamp >= data->cache_timeout);
 }
 
 /*
  * Prune the DNS cache. This assumes that a lock has already been taken.
  */
 static void
@@ -336,46 +331,43 @@
                 int port)
 {
   char *entry_id;
   size_t entry_len;
   struct Curl_dns_entry *dns;
   struct Curl_dns_entry *dns2;
-  time_t now;
 
   /* Create an entry id, based upon the hostname and port */
   entry_id = create_hostcache_id(hostname, port);
   /* If we can't create the entry id, fail */
   if(!entry_id)
     return NULL;
   entry_len = strlen(entry_id);
 
   /* Create a new cache entry */
-  dns = calloc(sizeof(struct Curl_dns_entry), 1);
+  dns = calloc(1, sizeof(struct Curl_dns_entry));
   if(!dns) {
     free(entry_id);
     return NULL;
   }
 
   dns->inuse = 0;   /* init to not used */
   dns->addr = addr; /* this is the address(es) */
+  time(&dns->timestamp);
+  if(dns->timestamp == 0)
+    dns->timestamp = 1;   /* zero indicates that entry isn't in hash table */
 
-  /* Store the resolved data in our DNS cache. This function may return a
-     pointer to an existing struct already present in the hash, and it may
-     return the same argument we pass in. Make no assumptions. */
+  /* Store the resolved data in our DNS cache. */
   dns2 = Curl_hash_add(data->dns.hostcache, entry_id, entry_len+1,
                        (void *)dns);
   if(!dns2) {
-    /* Major badness, run away. */
     free(dns);
     free(entry_id);
     return NULL;
   }
-  time(&now);
-  dns = dns2;
 
-  dns->timestamp = now; /* used now */
+  dns = dns2;
   dns->inuse++;         /* mark entry as in-use */
 
   /* free the allocated entry_id again */
   free(entry_id);
 
   return dns;
@@ -685,25 +677,33 @@
   DEBUGASSERT(dns && (dns->inuse>0));
 
   if(data->share)
     Curl_share_lock(data, CURL_LOCK_DATA_DNS, CURL_LOCK_ACCESS_SINGLE);
 
   dns->inuse--;
+  /* only free if nobody is using AND it is not in hostcache (timestamp ==
+     0) */
+  if (dns->inuse == 0 && dns->timestamp == 0) {
+    Curl_freeaddrinfo(dns->addr);
+    free(dns);
+  }
 
   if(data->share)
     Curl_share_unlock(data, CURL_LOCK_DATA_DNS);
 }
 
 /*
  * File-internal: free a cache dns entry.
  */
 static void freednsentry(void *freethis)
 {
   struct Curl_dns_entry *p = (struct Curl_dns_entry *) freethis;
 
-  if(p) {
+  /* mark the entry as not in hostcache */
+  p->timestamp = 0;
+  if (p->inuse == 0) {
     Curl_freeaddrinfo(p->addr);
     free(p);
   }
 }
 
 /*
@@ -711,23 +711,7 @@
  */
 struct curl_hash *Curl_mk_dnscache(void)
 {
   return Curl_hash_alloc(7, Curl_hash_str, Curl_str_key_compare, freednsentry);
 }
 
-#ifdef CURLRES_ADDRINFO_COPY
-
-/* align on even 64bit boundaries */
-#define MEMALIGN(x) ((x)+(8-(((unsigned long)(x))&0x7)))
-
-/*
- * Curl_addrinfo_copy() performs a "deep" copy of a hostent into a buffer and
- * returns a pointer to the malloc()ed copy. You need to call free() on the
- * returned buffer when you're done with it.
- */
-Curl_addrinfo *Curl_addrinfo_copy(const void *org, int port)
-{
-  const struct hostent *orig = org;
 
-  return Curl_he2ai(orig, port);
-}
-#endif /* CURLRES_ADDRINFO_COPY */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostip.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostip.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostip.h	2008-11-07 05:30:18.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostip.h	2010-01-27 01:06:01.000000000 +0800
@@ -1,29 +1,29 @@
-#ifndef __HOSTIP_H
-#define __HOSTIP_H
+#ifndef HEADER_CURL_HOSTIP_H
+#define HEADER_CURL_HOSTIP_H
 /***************************************************************************
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: hostip.h,v 1.69 2008-11-06 17:19:57 yangtse Exp $
+ * $Id: hostip.h,v 1.73 2010-01-25 23:50:13 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 #include "hash.h"
 #include "curl_addrinfo.h"
 
@@ -34,57 +34,19 @@
 #ifdef NETWARE
 #undef in_addr_t
 #define in_addr_t unsigned long
 #endif
 
 /*
- * Setup comfortable CURLRES_* defines to use in the host*.c sources.
+ * Comfortable CURLRES_* definitions are included from setup.h
  */
 
 #ifdef USE_ARES
 #include <ares_version.h>
 #endif
 
-#ifdef USE_ARES
-#define CURLRES_ASYNCH
-#define CURLRES_ARES
-#endif
-
-#ifdef USE_THREADING_GETHOSTBYNAME
-#define CURLRES_ASYNCH
-#define CURLRES_THREADED
-#endif
-
-#ifdef USE_THREADING_GETADDRINFO
-#define CURLRES_ASYNCH
-#define CURLRES_THREADED
-#endif
-
-#ifdef ENABLE_IPV6
-#define CURLRES_IPV6
-#else
-#define CURLRES_IPV4
-#endif
-
-#if defined(CURLRES_IPV4) || defined(CURLRES_ARES)
-#if !defined(HAVE_GETHOSTBYNAME_R) || defined(CURLRES_ASYNCH)
-/* If built for ipv4 and missing gethostbyname_r(), or if using async name
-   resolve, we need the Curl_addrinfo_copy() function (which itself needs the
-   Curl_he2ai() function)) */
-#define CURLRES_ADDRINFO_COPY
-#endif
-#endif /* IPv4/ares-only */
-
-#ifndef CURLRES_ASYNCH
-#define CURLRES_SYNCH
-#endif
-
-#ifndef USE_LIBIDN
-#define CURLRES_IDN
-#endif
-
 /* Allocate enough memory to hold the full name information structs and
  * everything. OSF1 is known to require at least 8872 bytes. The buffer
  * required for storing all possible aliases and IP numbers is according to
  * Stevens' Unix Network Programming 2nd edition, p. 304: 8192 bytes!
  */
 #define CURL_HOSTENT_SIZE 9000
@@ -118,12 +80,14 @@
  */
 struct curl_hash *Curl_global_host_cache_init(void);
 void Curl_global_host_cache_dtor(void);
 
 struct Curl_dns_entry {
   Curl_addrinfo *addr;
+  /* timestamp == 0 -- entry not in hostcache
+     timestamp != 0 -- entry is in hostcache */
   time_t timestamp;
   long inuse;      /* use-counter, make very sure you decrease this
                       when you're done using the address you received */
 };
 
 /*
@@ -198,32 +162,24 @@
                        char *host, GETNAMEINFO_TYPE_ARG46 hostlen,
                        char *serv, GETNAMEINFO_TYPE_ARG46 servlen,
                        GETNAMEINFO_TYPE_ARG7 flags,
                        int line, const char *source);
 #endif
 
-/* This is the callback function that is used when we build with asynch
-   resolve, ipv4 */
-CURLcode Curl_addrinfo4_callback(void *arg,
-                                 int status,
-#ifdef HAVE_CARES_CALLBACK_TIMEOUTS
-                                 int timeouts,
-#endif
-                                 struct hostent *hostent);
-/* This is the callback function that is used when we build with asynch
-   resolve, ipv6 */
-CURLcode Curl_addrinfo6_callback(void *arg,
-                                 int status,
-#ifdef HAVE_CARES_CALLBACK_TIMEOUTS
-                                 int timeouts,
-#endif
-                                 Curl_addrinfo *ai);
-
+/* IPv4 threadsafe resolve function used for synch and asynch builds */
+Curl_addrinfo *Curl_ipv4_resolve_r(const char * hostname, int port);
 
-/* Clone a Curl_addrinfo struct, works protocol independently */
-Curl_addrinfo *Curl_addrinfo_copy(const void *orig, int port);
+/*
+ * Curl_addrinfo_callback() is used when we build with any asynch specialty.
+ * Handles end of async request processing. Inserts ai into hostcache when
+ * status is CURL_ASYNC_SUCCESS. Twiddles fields in conn to indicate async
+ * request completed wether successfull or failed.
+ */
+CURLcode Curl_addrinfo_callback(struct connectdata *conn,
+                                int status,
+                                Curl_addrinfo *ai);
 
 /*
  * Curl_printable_address() returns a printable version of the 1st address
  * given in the 'ip' argument. The result will be stored in the buf that is
  * bufsize bytes big.
  */
@@ -258,7 +214,7 @@
  * address that we can jump back to from inside a signal handler.
  * This is not thread-safe stuff.
  */
 extern sigjmp_buf curl_jmpenv;
 #endif
 
-#endif
+#endif /* HEADER_CURL_HOSTIP_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostsyn.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostsyn.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostsyn.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostsyn.c	2010-01-22 20:14:35.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: hostsyn.c,v 1.16 2009-04-21 11:46:16 yangtse Exp $
+ * $Id: hostsyn.c,v 1.17 2009-12-30 17:59:56 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <string.h>
 
@@ -40,13 +40,13 @@
 #ifdef HAVE_STDLIB_H
 #include <stdlib.h>     /* required for free() prototypes */
 #endif
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>     /* for the close() proto */
 #endif
-#ifdef  VMS
+#ifdef __VMS
 #include <in.h>
 #include <inet.h>
 #include <stdlib.h>
 #endif
 
 #ifdef HAVE_PROCESS_H
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostthre.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostthre.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/hostthre.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/hostthre.c	2010-02-04 02:16:48.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: hostthre.c,v 1.59 2009-04-21 11:46:16 yangtse Exp $
+ * $Id: hostthre.c,v 1.65 2010-02-02 16:23:42 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <string.h>
 #include <errno.h>
@@ -41,20 +41,26 @@
 #ifdef HAVE_STDLIB_H
 #include <stdlib.h>     /* required for free() prototypes */
 #endif
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>     /* for the close() proto */
 #endif
-#ifdef  VMS
+#ifdef __VMS
 #include <in.h>
 #include <inet.h>
 #include <stdlib.h>
 #endif
 
-#ifdef HAVE_PROCESS_H
-#include <process.h>
+#if defined(USE_THREADS_POSIX)
+#  ifdef HAVE_PTHREAD_H
+#    include <pthread.h>
+#  endif
+#elif defined(USE_THREADS_WIN32)
+#  ifdef HAVE_PROCESS_H
+#    include <process.h>
+#  endif
 #endif
 
 #if (defined(NETWARE) && defined(__NOVELL_LIBC__))
 #undef in_addr_t
 #define in_addr_t unsigned long
 #endif
@@ -65,324 +71,209 @@
 #include "hash.h"
 #include "share.h"
 #include "strerror.h"
 #include "url.h"
 #include "multiif.h"
 #include "inet_pton.h"
+#include "inet_ntop.h"
+#include "curl_threads.h"
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
-#include "inet_ntop.h"
-
 #include "curl_memory.h"
 /* The last #include file should be: */
 #include "memdebug.h"
 
-#if defined(_MSC_VER) && defined(CURL_NO__BEGINTHREADEX)
-#pragma message ("No _beginthreadex() available in this RTL")
-#endif
-
 /***********************************************************************
- * Only for Windows threaded name resolves builds
+ * Only for threaded name resolves builds
  **********************************************************************/
 #ifdef CURLRES_THREADED
 
 /* This function is used to init a threaded resolve */
 static bool init_resolve_thread(struct connectdata *conn,
                                 const char *hostname, int port,
                                 const struct addrinfo *hints);
 
-#ifdef CURLRES_IPV4
-  #define THREAD_FUNC  gethostbyname_thread
-  #define THREAD_NAME "gethostbyname_thread"
-#else
-  #define THREAD_FUNC  getaddrinfo_thread
-  #define THREAD_NAME "getaddrinfo_thread"
-#endif
-
-struct thread_data {
-  HANDLE thread_hnd;
-  unsigned thread_id;
-  DWORD  thread_status;
-  curl_socket_t dummy_sock;   /* dummy for Curl_resolv_fdset() */
-  HANDLE mutex_waiting;  /* marks that we are still waiting for a resolve */
-  HANDLE event_resolved; /* marks that the thread obtained the information */
-  HANDLE event_thread_started; /* marks that the thread has initialized and
-                                  started */
-  HANDLE mutex_terminate; /* serializes access to flag_terminate */
-  HANDLE event_terminate; /* flag for thread to terminate instead of calling
-                             callbacks */
-#ifdef CURLRES_IPV6
-  struct addrinfo hints;
-#endif
-};
 
 /* Data for synchronization between resolver thread and its parent */
 struct thread_sync_data {
-  HANDLE mutex_waiting;   /* thread_data.mutex_waiting duplicate */
-  HANDLE mutex_terminate; /* thread_data.mutex_terminate duplicate */
-  HANDLE event_terminate; /* thread_data.event_terminate duplicate */
+  curl_mutex_t * mtx;
+  int done;
+
   char * hostname;        /* hostname to resolve, Curl_async.hostname
                              duplicate */
+  int port;
+  int sock_error;
+  Curl_addrinfo *res;
+#ifdef HAVE_GETADDRINFO
+  struct addrinfo hints;
+#endif
+};
+
+struct thread_data {
+  curl_thread_t thread_hnd;
+  curl_socket_t dummy_sock;
+  unsigned int poll_interval;
+  int interval_end;
+  struct thread_sync_data tsd;
 };
 
+static struct thread_sync_data * conn_thread_sync_data(struct connectdata *conn)
+{
+  return &(((struct thread_data *)conn->async.os_specific)->tsd);
+}
+
+#define CONN_THREAD_SYNC_DATA(conn) &(((conn)->async.os_specific)->tsd);
+
 /* Destroy resolver thread synchronization data */
 static
 void destroy_thread_sync_data(struct thread_sync_data * tsd)
 {
+  if (tsd->mtx) {
+    Curl_mutex_destroy(tsd->mtx);
+    free(tsd->mtx);
+  }
+
   if(tsd->hostname)
     free(tsd->hostname);
-  if(tsd->event_terminate)
-    CloseHandle(tsd->event_terminate);
-  if(tsd->mutex_terminate)
-    CloseHandle(tsd->mutex_terminate);
-  if(tsd->mutex_waiting)
-    CloseHandle(tsd->mutex_waiting);
+  
+  if (tsd->res)
+    Curl_freeaddrinfo(tsd->res);
+
   memset(tsd,0,sizeof(*tsd));
 }
 
 /* Initialize resolver thread synchronization data */
 static
-BOOL init_thread_sync_data(struct thread_data * td,
+int init_thread_sync_data(struct thread_sync_data * tsd,
                            const char * hostname,
-                           struct thread_sync_data * tsd)
+			   int port,
+			   const struct addrinfo *hints)
 {
-  HANDLE curr_proc = GetCurrentProcess();
-
   memset(tsd, 0, sizeof(*tsd));
-  if(!DuplicateHandle(curr_proc, td->mutex_waiting,
-                       curr_proc, &tsd->mutex_waiting, 0, FALSE,
-                       DUPLICATE_SAME_ACCESS)) {
-    /* failed to duplicate the mutex, no point in continuing */
-    destroy_thread_sync_data(tsd);
-    return FALSE;
-  }
-  if(!DuplicateHandle(curr_proc, td->mutex_terminate,
-                       curr_proc, &tsd->mutex_terminate, 0, FALSE,
-                       DUPLICATE_SAME_ACCESS)) {
-    /* failed to duplicate the mutex, no point in continuing */
-    destroy_thread_sync_data(tsd);
-    return FALSE;
-  }
-  if(!DuplicateHandle(curr_proc, td->event_terminate,
-                       curr_proc, &tsd->event_terminate, 0, FALSE,
-                       DUPLICATE_SAME_ACCESS)) {
-    /* failed to duplicate the event, no point in continuing */
-    destroy_thread_sync_data(tsd);
-    return FALSE;
-  }
+
+  tsd->port = port;
+#ifdef CURLRES_IPV6
+  DEBUGASSERT(hints);
+  tsd->hints = *hints;
+#else
+  (void) hints;
+#endif
+
+  tsd->mtx = malloc(sizeof(curl_mutex_t));
+  if (tsd->mtx == NULL) goto err_exit;
+
+  Curl_mutex_init(tsd->mtx);
+
+  tsd->sock_error = CURL_ASYNC_SUCCESS;
+
   /* Copying hostname string because original can be destroyed by parent
    * thread during gethostbyname execution.
    */
   tsd->hostname = strdup(hostname);
-  if(!tsd->hostname) {
-    /* Memory allocation failed */
-    destroy_thread_sync_data(tsd);
-    return FALSE;
-  }
-  return TRUE;
-}
+  if (!tsd->hostname) goto err_exit;
 
-/* acquire resolver thread synchronization */
-static
-BOOL acquire_thread_sync(struct thread_sync_data * tsd)
-{
-  /* is the thread initiator still waiting for us ? */
-  if(WaitForSingleObject(tsd->mutex_waiting, 0) == WAIT_TIMEOUT) {
-    /* yes, it is */
-
-    /* Waiting access to event_terminate */
-    if(WaitForSingleObject(tsd->mutex_terminate, INFINITE) != WAIT_OBJECT_0) {
-      /* Something went wrong - now just ignoring */
-    }
-    else {
-      if(WaitForSingleObject(tsd->event_terminate, 0) != WAIT_TIMEOUT) {
-        /* Parent thread signaled us to terminate.
-         * This means that all data in conn->async is now destroyed
-         * and we cannot use it.
-         */
-      }
-      else {
-        return TRUE;
-      }
-    }
-  }
-  return FALSE;
-}
+  return 1;
 
-/* release resolver thread synchronization */
-static
-void release_thread_sync(struct thread_sync_data * tsd)
-{
-  ReleaseMutex(tsd->mutex_terminate);
+ err_exit:
+  /* Memory allocation failed */
+  destroy_thread_sync_data(tsd);
+  return 0;
 }
 
-#if defined(CURLRES_IPV4)
 /*
- * gethostbyname_thread() resolves a name, calls the Curl_addrinfo4_callback
- * and then exits.
- *
- * For builds without ARES/ENABLE_IPV6, create a resolver thread and wait on
- * it.
+ * gethostbyname_thread() resolves a name and then exits.
  */
-static unsigned __stdcall gethostbyname_thread (void *arg)
+static unsigned int CURL_STDCALL gethostbyname_thread (void *arg)
 {
-  struct connectdata *conn = (struct connectdata*) arg;
-  struct thread_data *td = (struct thread_data*) conn->async.os_specific;
-  struct hostent *he;
-  int    rc = 0;
-
-  /* Duplicate the passed mutex and event handles.
-   * This allows us to use it even after the container gets destroyed
-   * due to a resolver timeout.
-   */
-  struct thread_sync_data tsd = { 0,0,0,NULL };
+  struct thread_sync_data *tsd = (struct thread_sync_data *)arg;
 
-  if(!init_thread_sync_data(td, conn->async.hostname, &tsd)) {
-    /* thread synchronization data initialization failed */
-    return (unsigned)-1;
-  }
+  tsd->res = Curl_ipv4_resolve_r(tsd->hostname, tsd->port);
 
-  conn->async.status = NO_DATA;  /* pending status */
-  SET_SOCKERRNO(conn->async.status);
+  if (!tsd->res) {
+    tsd->sock_error = SOCKERRNO;
+    if (tsd->sock_error == 0)
+      tsd->sock_error = ENOMEM;
+  } 
 
-  /* Signaling that we have initialized all copies of data and handles we
-     need */
-  SetEvent(td->event_thread_started);
+  Curl_mutex_acquire(tsd->mtx);
+  tsd->done = 1;
+  Curl_mutex_release(tsd->mtx);
 
-  he = gethostbyname (tsd.hostname);
+  return 0;
+}
 
-  /* is parent thread waiting for us and are we able to access conn members? */
-  if(acquire_thread_sync(&tsd)) {
-    /* Mark that we have obtained the information, and that we are calling
-     * back with it. */
-    SetEvent(td->event_resolved);
-    if(he) {
-      rc = Curl_addrinfo4_callback(conn, CURL_ASYNC_SUCCESS, he);
-    }
-    else {
-      rc = Curl_addrinfo4_callback(conn, SOCKERRNO, NULL);
-    }
-    release_thread_sync(&tsd);
-  }
+static int getaddrinfo_complete(struct connectdata *conn)
+{
+  struct thread_sync_data *tsd = conn_thread_sync_data(conn);
+  int rc;
 
-  /* clean up */
-  destroy_thread_sync_data(&tsd);
+  rc = Curl_addrinfo_callback(conn, tsd->sock_error, tsd->res); 
+  /* The tsd->res structure has been copied to async.dns and perhaps the DNS cache.
+     Set our copy to NULL so destroy_thread_sync_data doesn't free it.
+   */
+  tsd->res = NULL;
 
-  return (rc);
-  /* An implicit _endthreadex() here */
+  return rc;
 }
 
-#elif defined(CURLRES_IPV6)
+
+#if defined(HAVE_GETADDRINFO)
 
 /*
- * getaddrinfo_thread() resolves a name, calls Curl_addrinfo6_callback and then
- * exits.
+ * getaddrinfo_thread() resolves a name and then exits.
  *
  * For builds without ARES, but with ENABLE_IPV6, create a resolver thread
  * and wait on it.
  */
-static unsigned __stdcall getaddrinfo_thread (void *arg)
+static unsigned int CURL_STDCALL getaddrinfo_thread (void *arg)
 {
-  struct connectdata *conn = (struct connectdata*) arg;
-  struct thread_data *td   = (struct thread_data*) conn->async.os_specific;
-  Curl_addrinfo      *res;
+  struct thread_sync_data *tsd = (struct thread_sync_data*)arg;
   char   service [NI_MAXSERV];
-  int    rc;
-  struct addrinfo hints = td->hints;
-
-  /* Duplicate the passed mutex handle.
-   * This allows us to use it even after the container gets destroyed
-   * due to a resolver timeout.
-   */
-  struct thread_sync_data tsd = { 0,0,0,NULL };
-
-  if(!init_thread_sync_data(td, conn->async.hostname, &tsd)) {
-    /* thread synchronization data initialization failed */
-    return -1;
-  }
+  int rc;
 
-  itoa(conn->async.port, service, 10);
+  snprintf(service, sizeof(service), "%d", tsd->port);
 
-  conn->async.status = NO_DATA;  /* pending status */
-  SET_SOCKERRNO(conn->async.status);
+  rc = Curl_getaddrinfo_ex(tsd->hostname, service, &tsd->hints, &tsd->res);
 
-  /* Signaling that we have initialized all copies of data and handles we
-     need */
-  SetEvent(td->event_thread_started);
-
-  rc = Curl_getaddrinfo_ex(tsd.hostname, service, &hints, &res);
-
-  /* is parent thread waiting for us and are we able to access conn members? */
-  if(acquire_thread_sync(&tsd)) {
-    /* Mark that we have obtained the information, and that we are calling
-       back with it. */
-    SetEvent(td->event_resolved);
-
-    if(rc == 0) {
-      rc = Curl_addrinfo6_callback(conn, CURL_ASYNC_SUCCESS, res);
-    }
-    else {
-      rc = Curl_addrinfo6_callback(conn, SOCKERRNO, NULL);
-    }
-    release_thread_sync(&tsd);
+  if (rc != 0) {
+    tsd->sock_error = SOCKERRNO;
+    if (tsd->sock_error == 0)
+      tsd->sock_error = ENOMEM;
   }
 
-  /* clean up */
-  destroy_thread_sync_data(&tsd);
+  Curl_mutex_acquire(tsd->mtx);
+  tsd->done = 1;
+  Curl_mutex_release(tsd->mtx);
 
-  return (rc);
-  /* An implicit _endthreadex() here */
+  return 0;
 }
-#endif
+
+#endif /* HAVE_GETADDRINFO */
 
 /*
  * Curl_destroy_thread_data() cleans up async resolver data and thread handle.
  * Complementary of ares_destroy.
  */
 void Curl_destroy_thread_data (struct Curl_async *async)
 {
   if(async->hostname)
     free(async->hostname);
 
   if(async->os_specific) {
     struct thread_data *td = (struct thread_data*) async->os_specific;
-    curl_socket_t sock = td->dummy_sock;
 
-    if(td->mutex_terminate && td->event_terminate) {
-      /* Signaling resolver thread to terminate */
-      if(WaitForSingleObject(td->mutex_terminate, INFINITE) == WAIT_OBJECT_0) {
-        SetEvent(td->event_terminate);
-        ReleaseMutex(td->mutex_terminate);
-      }
-      else {
-        /* Something went wrong - just ignoring it */
-      }
-    }
-
-    if(td->mutex_terminate)
-      CloseHandle(td->mutex_terminate);
-    if(td->event_terminate)
-      CloseHandle(td->event_terminate);
-    if(td->event_thread_started)
-      CloseHandle(td->event_thread_started);
-
-    if(sock != CURL_SOCKET_BAD)
-      sclose(sock);
-
-    /* destroy the synchronization objects */
-    if(td->mutex_waiting)
-      CloseHandle(td->mutex_waiting);
-    td->mutex_waiting = NULL;
-    if(td->event_resolved)
-      CloseHandle(td->event_resolved);
-
-    if(td->thread_hnd)
-      CloseHandle(td->thread_hnd);
+    if (td->dummy_sock != CURL_SOCKET_BAD)
+      sclose(td->dummy_sock);
 
+    if (td->thread_hnd != curl_thread_t_null)
+      Curl_thread_join(&td->thread_hnd);
+ 
+    destroy_thread_sync_data(&td->tsd);
+    
     free(async->os_specific);
   }
   async->hostname = NULL;
   async->os_specific = NULL;
 }
 
@@ -393,121 +284,65 @@
  * Returns FALSE in case of failure, otherwise TRUE.
  */
 static bool init_resolve_thread (struct connectdata *conn,
                                  const char *hostname, int port,
                                  const struct addrinfo *hints)
 {
-  struct thread_data *td = calloc(sizeof(*td), 1);
-  HANDLE thread_and_event[2] = {0};
-
-  if(!td) {
-    SET_ERRNO(ENOMEM);
-    return FALSE;
-  }
+  struct thread_data *td = calloc(1, sizeof(struct thread_data));
+  int err = ENOMEM;
 
-  Curl_safefree(conn->async.hostname);
-  conn->async.hostname = strdup(hostname);
-  if(!conn->async.hostname) {
-    free(td);
-    SET_ERRNO(ENOMEM);
-    return FALSE;
-  }
+  conn->async.os_specific = (void*) td;
+  if(!td) 
+    goto err_exit;
 
   conn->async.port = port;
   conn->async.done = FALSE;
   conn->async.status = 0;
   conn->async.dns = NULL;
-  conn->async.os_specific = (void*) td;
   td->dummy_sock = CURL_SOCKET_BAD;
+  td->thread_hnd = curl_thread_t_null;
 
-  /* Create the mutex used to inform the resolver thread that we're
-   * still waiting, and take initial ownership.
-   */
-  td->mutex_waiting = CreateMutex(NULL, TRUE, NULL);
-  if(td->mutex_waiting == NULL) {
-    Curl_destroy_thread_data(&conn->async);
-    SET_ERRNO(EAGAIN);
-    return FALSE;
-  }
+  if (!init_thread_sync_data(&td->tsd, hostname, port, hints)) 
+    goto err_exit;
 
-  /* Create the event that the thread uses to inform us that it's
-   * done resolving. Do not signal it.
-   */
-  td->event_resolved = CreateEvent(NULL, TRUE, FALSE, NULL);
-  if(td->event_resolved == NULL) {
-    Curl_destroy_thread_data(&conn->async);
-    SET_ERRNO(EAGAIN);
-    return FALSE;
-  }
-  /* Create the mutex used to serialize access to event_terminated
-   * between us and resolver thread.
-   */
-  td->mutex_terminate = CreateMutex(NULL, FALSE, NULL);
-  if(td->mutex_terminate == NULL) {
-    Curl_destroy_thread_data(&conn->async);
-    SET_ERRNO(EAGAIN);
-    return FALSE;
-  }
-  /* Create the event used to signal thread that it should terminate.
-   */
-  td->event_terminate = CreateEvent(NULL, TRUE, FALSE, NULL);
-  if(td->event_terminate == NULL) {
-    Curl_destroy_thread_data(&conn->async);
-    SET_ERRNO(EAGAIN);
-    return FALSE;
-  }
-  /* Create the event used by thread to inform it has initialized its own data.
-   */
-  td->event_thread_started = CreateEvent(NULL, TRUE, FALSE, NULL);
-  if(td->event_thread_started == NULL) {
-    Curl_destroy_thread_data(&conn->async);
-    SET_ERRNO(EAGAIN);
-    return FALSE;
-  }
+  Curl_safefree(conn->async.hostname);
+  conn->async.hostname = strdup(hostname);
+  if(!conn->async.hostname)
+    goto err_exit;
 
-#ifdef _WIN32_WCE
-  td->thread_hnd = (HANDLE) CreateThread(NULL, 0,
-                                         (LPTHREAD_START_ROUTINE) THREAD_FUNC,
-                                         conn, 0, &td->thread_id);
-#else
-  td->thread_hnd = (HANDLE) _beginthreadex(NULL, 0, THREAD_FUNC,
-                                           conn, 0, &td->thread_id);
+#ifdef WIN32
+  /* This socket is only to keep Curl_resolv_fdset() and select() happy;
+   * should never become signalled for read since it's unbound but
+   * Windows needs at least 1 socket in select().
+   */
+  td->dummy_sock = socket(AF_INET, SOCK_DGRAM, 0);
+  if (td->dummy_sock == CURL_SOCKET_BAD)
+    goto err_exit;
 #endif
 
-#ifdef CURLRES_IPV6
-  DEBUGASSERT(hints);
-  td->hints = *hints;
+#ifdef HAVE_GETADDRINFO
+  td->thread_hnd = Curl_thread_create(getaddrinfo_thread, &td->tsd);
 #else
-  (void) hints;
+  td->thread_hnd = Curl_thread_create(gethostbyname_thread, &td->tsd);
 #endif
 
   if(!td->thread_hnd) {
 #ifndef _WIN32_WCE
-     SET_ERRNO(errno);
+    err = errno;
 #endif
-     Curl_destroy_thread_data(&conn->async);
-     return FALSE;
-  }
-  /* Waiting until the thread will initialize its data or it will exit due errors.
-   */
-  thread_and_event[0] = td->thread_hnd;
-  thread_and_event[1] = td->event_thread_started;
-  if(WaitForMultipleObjects(sizeof(thread_and_event) /
-                             sizeof(thread_and_event[0]),
-                             (const HANDLE*)thread_and_event, FALSE,
-                             INFINITE) == WAIT_FAILED) {
-    /* The resolver thread has been created,
-     * most probably it works now - ignoring this "minor" error
-     */
+    goto err_exit;
   }
-  /* This socket is only to keep Curl_resolv_fdset() and select() happy;
-   * should never become signalled for read/write since it's unbound but
-   * Windows needs atleast 1 socket in select().
-   */
-  td->dummy_sock = socket(AF_INET, SOCK_DGRAM, 0);
+
   return TRUE;
+
+ err_exit:
+  Curl_destroy_thread_data(&conn->async);
+
+  SET_ERRNO(err);
+
+  return FALSE;
 }
 
 
 /*
  * Curl_wait_for_resolv() waits for a resolve to finish. This function should
  * be avoided since using this risk getting the multi interface to "hang".
@@ -518,90 +353,39 @@
  */
 CURLcode Curl_wait_for_resolv(struct connectdata *conn,
                               struct Curl_dns_entry **entry)
 {
   struct thread_data   *td = (struct thread_data*) conn->async.os_specific;
   struct SessionHandle *data = conn->data;
-  long   timeout;
-  DWORD  status;
-  CURLcode rc;
+  CURLcode rc = CURLE_OK;
 
   DEBUGASSERT(conn && td);
 
-  /* now, see if there's a connect timeout or a regular timeout to
-     use instead of the default one */
-  timeout =
-    conn->data->set.connecttimeout ? conn->data->set.connecttimeout :
-    conn->data->set.timeout ? conn->data->set.timeout :
-    CURL_TIMEOUT_RESOLVE * 1000; /* default name resolve timeout */
-
   /* wait for the thread to resolve the name */
-  status = WaitForSingleObject(td->event_resolved, timeout);
-
-  /* mark that we are now done waiting */
-  ReleaseMutex(td->mutex_waiting);
-
-  /* close our handle to the mutex, no point in hanging on to it */
-  CloseHandle(td->mutex_waiting);
-  td->mutex_waiting = NULL;
-
-  /* close the event handle, it's useless now */
-  CloseHandle(td->event_resolved);
-  td->event_resolved = NULL;
-
-  /* has the resolver thread succeeded in resolving our query ? */
-  if(status == WAIT_OBJECT_0) {
-    /* wait for the thread to exit, it's in the callback sequence */
-    if(WaitForSingleObject(td->thread_hnd, 5000) == WAIT_TIMEOUT) {
-      TerminateThread(td->thread_hnd, 0);
-      conn->async.done = TRUE;
-      td->thread_status = (DWORD)-1;
-    }
-    else {
-      /* Thread finished before timeout; propagate Winsock error to this
-       * thread.  'conn->async.done = TRUE' is set in
-       * Curl_addrinfo4/6_callback().
-       */
-      SET_SOCKERRNO(conn->async.status);
-      GetExitCodeThread(td->thread_hnd, &td->thread_status);
-    }
-  }
-  else {
-    conn->async.done = TRUE;
-    td->thread_status = (DWORD)-1;
+  if (Curl_thread_join(&td->thread_hnd)) {
+    rc = getaddrinfo_complete(conn);
+  } else {
+    DEBUGASSERT(0);    
   }
 
+  conn->async.done = TRUE;
+    
   if(entry)
     *entry = conn->async.dns;
 
-  rc = CURLE_OK;
-
   if(!conn->async.dns) {
     /* a name was not resolved */
-    if(td->thread_status == CURLE_OUT_OF_MEMORY) {
-      rc = CURLE_OUT_OF_MEMORY;
-      failf(data, "Could not resolve host: %s", curl_easy_strerror(rc));
-    }
-    else if(conn->async.done) {
-      if(conn->bits.httpproxy) {
-        failf(data, "Could not resolve proxy: %s; %s",
-              conn->proxy.dispname, Curl_strerror(conn, conn->async.status));
-        rc = CURLE_COULDNT_RESOLVE_PROXY;
-      }
-      else {
-        failf(data, "Could not resolve host: %s; %s",
-              conn->host.name, Curl_strerror(conn, conn->async.status));
-        rc = CURLE_COULDNT_RESOLVE_HOST;
-      }
-    }
-    else if(td->thread_status == (DWORD)-1 || conn->async.status == NO_DATA) {
-      failf(data, "Resolving host timed out: %s", conn->host.name);
-      rc = CURLE_OPERATION_TIMEDOUT;
+    if (conn->bits.httpproxy) {
+      failf(data, "Could not resolve proxy: %s; %s",
+            conn->async.hostname, Curl_strerror(conn, conn->async.status));
+      rc = CURLE_COULDNT_RESOLVE_PROXY;
+    } else {
+      failf(data, "Could not resolve host: %s; %s",
+            conn->async.hostname, Curl_strerror(conn, conn->async.status));
+      rc = CURLE_COULDNT_RESOLVE_HOST;
     }
-    else
-      rc = CURLE_OPERATION_TIMEDOUT;
   }
 
   Curl_destroy_thread_data(&conn->async);
 
   if(!conn->async.dns)
     conn->bits.close = TRUE;
@@ -615,18 +399,32 @@
  * operation seems to take too long.
  */
 CURLcode Curl_is_resolved(struct connectdata *conn,
                           struct Curl_dns_entry **entry)
 {
   struct SessionHandle *data = conn->data;
-
+  struct thread_data   *td = (struct thread_data*) conn->async.os_specific;
+  int done = 0;
+ 
   *entry = NULL;
 
-  if(conn->async.done) {
-    /* we're done */
+  if (!td) {
+    DEBUGASSERT(td);
+    return CURLE_COULDNT_RESOLVE_HOST;
+  }
+
+  Curl_mutex_acquire(td->tsd.mtx);
+  done = td->tsd.done;
+  Curl_mutex_release(td->tsd.mtx);
+
+  if (done) { 
+    getaddrinfo_complete(conn);
+    if (td->poll_interval != 0)
+        Curl_expire(conn->data, 0);
     Curl_destroy_thread_data(&conn->async);
+
     if(!conn->async.dns) {
       failf(data, "Could not resolve host: %s; %s",
             conn->host.name, Curl_strerror(conn, conn->async.status));
       return CURLE_COULDNT_RESOLVE_HOST;
     }
     *entry = conn->async.dns;
@@ -627,13 +425,37 @@
     if(!conn->async.dns) {
       failf(data, "Could not resolve host: %s; %s",
             conn->host.name, Curl_strerror(conn, conn->async.status));
       return CURLE_COULDNT_RESOLVE_HOST;
     }
     *entry = conn->async.dns;
+  } else {
+    /* poll for name lookup done with exponential backoff up to 250ms */
+    int elapsed;
+
+    elapsed = Curl_tvdiff(Curl_tvnow(), data->progress.t_startsingle);
+    if (elapsed < 0) {
+      elapsed = 0;
+    }
+
+    if (td->poll_interval == 0) {
+      /* Start at 1ms poll interval */
+      td->poll_interval = 1;
+    } else if (elapsed >= td->interval_end) {
+      /* Back-off exponentially if last interval expired  */
+      td->poll_interval *= 2;
+    }
+
+    if (td->poll_interval > 250)
+      td->poll_interval = 250;
+
+    td->interval_end = elapsed + td->poll_interval;
+
+    Curl_expire(conn->data, td->poll_interval);
   }
+
   return CURLE_OK;
 }
 
 int Curl_resolv_getsock(struct connectdata *conn,
                         curl_socket_t *socks,
                         int numsocks)
@@ -640,78 +462,70 @@
 {
   const struct thread_data *td =
     (const struct thread_data *) conn->async.os_specific;
 
   if(td && td->dummy_sock != CURL_SOCKET_BAD) {
     if(numsocks) {
-      /* return one socket waiting for writable, even though this is just
+      /* return one socket waiting for readable, even though this is just
          a dummy */
       socks[0] = td->dummy_sock;
-      return GETSOCK_WRITESOCK(0);
+      return GETSOCK_READSOCK(0);
     }
   }
   return 0;
 }
 
-#ifdef CURLRES_IPV4
+#if !defined(HAVE_GETADDRINFO)
 /*
- * Curl_getaddrinfo() - for Windows threading without ENABLE_IPV6.
+ * Curl_getaddrinfo() - for platforms without getaddrinfo
  */
 Curl_addrinfo *Curl_getaddrinfo(struct connectdata *conn,
                                 const char *hostname,
                                 int port,
                                 int *waitp)
 {
   struct hostent *h = NULL;
   struct SessionHandle *data = conn->data;
   struct in_addr in;
 
-  *waitp = 0; /* don't wait, we act synchronously */
+  *waitp = 0; /* default to synchronous response */
 
   if(Curl_inet_pton(AF_INET, hostname, &in) > 0)
     /* This is a dotted IP address 123.123.123.123-style */
     return Curl_ip2addr(AF_INET, &in, hostname, port);
 
   /* fire up a new resolver thread! */
   if(init_resolve_thread(conn, hostname, port, NULL)) {
-    *waitp = TRUE;  /* please wait for the response */
+    *waitp = 1; /* expect asynchronous response */
     return NULL;
   }
 
   /* fall-back to blocking version */
-  infof(data, "init_resolve_thread() failed for %s; %s\n",
-        hostname, Curl_strerror(conn, ERRNO));
-
-  h = gethostbyname(hostname);
-  if(!h) {
-    infof(data, "gethostbyname(2) failed for %s:%d; %s\n",
-          hostname, port, Curl_strerror(conn, SOCKERRNO));
-    return NULL;
-  }
-  return Curl_he2ai(h, port);
+  return Curl_ipv4_resolve_r(hostname, port);
 }
-#endif /* CURLRES_IPV4 */
 
-#ifdef CURLRES_IPV6
+#else /* HAVE_GETADDRINFO */
+
 /*
- * Curl_getaddrinfo() - for Windows threading IPv6 enabled
+ * Curl_getaddrinfo() - for getaddrinfo
  */
 Curl_addrinfo *Curl_getaddrinfo(struct connectdata *conn,
                                 const char *hostname,
                                 int port,
                                 int *waitp)
 {
   struct addrinfo hints;
   Curl_addrinfo *res;
   int error;
   char sbuf[NI_MAXSERV];
-  int pf;
+  int pf = PF_INET;
   struct SessionHandle *data = conn->data;
 
-  *waitp = FALSE; /* default to synch response */
+  *waitp = 0; /* default to synchronous response */
 
+#if !defined(CURLRES_IPV4)
   /*
    * Check if a limited name resolve has been requested.
    */
   switch(data->set.ip_version) {
   case CURL_IPRESOLVE_V4:
     pf = PF_INET;
@@ -738,24 +552,25 @@
       /* This seems to be an IPv6-capable stack, use PF_UNSPEC for the widest
        * possible checks. And close the socket again.
        */
       sclose(s);
     }
   }
+#endif /* !CURLRES_IPV4 */
 
   memset(&hints, 0, sizeof(hints));
   hints.ai_family = pf;
   hints.ai_socktype = conn->socktype;
 #if 0 /* removed nov 8 2005 before 7.15.1 */
   hints.ai_flags = AI_CANONNAME;
 #endif
-  itoa(port, sbuf, 10);
+  snprintf(sbuf, sizeof(sbuf), "%d", port);
 
   /* fire up a new resolver thread! */
   if(init_resolve_thread(conn, hostname, port, &hints)) {
-    *waitp = TRUE;  /* please wait for the response */
+    *waitp = 1; /* expect asynchronous response */
     return NULL;
   }
 
   /* fall-back to blocking version */
   infof(data, "init_resolve_thread() failed for %s; %s\n",
         hostname, Curl_strerror(conn, ERRNO));
@@ -765,8 +580,10 @@
     infof(data, "getaddrinfo() failed for %s:%d; %s\n",
           hostname, port, Curl_strerror(conn, SOCKERRNO));
     return NULL;
   }
   return res;
 }
-#endif /* CURLRES_IPV6 */
+
+#endif /* HAVE_GETADDRINFO */
+
 #endif /* CURLRES_THREADED */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/http.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/http.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/http.c	2009-10-31 06:24:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/http.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: http.c,v 1.427 2009-10-30 22:24:48 bagder Exp $
+ * $Id: http.c,v 1.437 2010-02-04 19:44:31 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifndef CURL_DISABLE_HTTP
 /* -- WIN32 approved -- */
@@ -95,12 +95,13 @@
 #include "select.h"
 #include "parsedate.h" /* for the week day and month names */
 #include "strtoofft.h"
 #include "multiif.h"
 #include "rawstr.h"
 #include "content_encoding.h"
+#include "rtsp.h"
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
 /* The last #include file should be: */
 #include "memdebug.h"
@@ -170,13 +171,13 @@
 /*
  * checkheaders() checks the linked list of custom HTTP headers for a
  * particular header (prefix).
  *
  * Returns a pointer to the first matching header or NULL if none matched.
  */
-static char *checkheaders(struct SessionHandle *data, const char *thisheader)
+char *Curl_checkheaders(struct SessionHandle *data, const char *thisheader)
 {
   struct curl_slist *head;
   size_t thislen = strlen(thisheader);
 
   for(head = data->set.headers; head; head=head->next) {
     if(Curl_raw_nequal(head->data, thisheader, thislen))
@@ -562,15 +563,15 @@
   }
   else
 #endif
   if(authstatus->picked == CURLAUTH_BASIC) {
     /* Basic */
     if((proxy && conn->bits.proxy_user_passwd &&
-       !checkheaders(data, "Proxy-authorization:")) ||
+       !Curl_checkheaders(data, "Proxy-authorization:")) ||
        (!proxy && conn->bits.user_passwd &&
-       !checkheaders(data, "Authorization:"))) {
+       !Curl_checkheaders(data, "Authorization:"))) {
       auth="Basic";
       result = http_output_basic(conn, proxy);
       if(result)
         return result;
     }
     /* NOTE: this function should set 'done' TRUE, as the other auth
@@ -957,47 +958,29 @@
   http->postsize -= fullsize;
 
   return fullsize;
 }
 
 /* ------------------------------------------------------------------------- */
-/*
- * The add_buffer series of functions are used to build one large memory chunk
- * from repeated function invokes. Used so that the entire HTTP request can
- * be sent in one go.
- */
-
-struct send_buffer {
-  char *buffer;
-  size_t size_max;
-  size_t size_used;
-};
-typedef struct send_buffer send_buffer;
-
-static CURLcode add_custom_headers(struct connectdata *conn,
-                                   send_buffer *req_buffer);
-static CURLcode
- add_buffer(send_buffer *in, const void *inptr, size_t size);
+/* add_buffer functions */
 
 /*
- * add_buffer_init() sets up and returns a fine buffer struct
+ * Curl_add_buffer_init() sets up and returns a fine buffer struct
  */
-static
-send_buffer *add_buffer_init(void)
+Curl_send_buffer *Curl_add_buffer_init(void)
 {
-  return calloc(sizeof(send_buffer), 1);
+  return calloc(1, sizeof(Curl_send_buffer));
 }
 
 /*
- * add_buffer_send() sends a header buffer and frees all associated memory.
- * Body data may be appended to the header data if desired.
+ * Curl_add_buffer_send() sends a header buffer and frees all associated
+ * memory.  Body data may be appended to the header data if desired.
  *
  * Returns CURLcode
  */
-static
-CURLcode add_buffer_send(send_buffer *in,
+CURLcode Curl_add_buffer_send(Curl_send_buffer *in,
                          struct connectdata *conn,
                          long *bytes_written, /* add the number of sent bytes
                                                  to this counter */
                          size_t included_body_bytes, /* how much of the buffer
                                                         contains body data */
                          int socketindex)
@@ -1141,23 +1124,22 @@
 }
 
 
 /*
  * add_bufferf() add the formatted input to the buffer.
  */
-static
-CURLcode add_bufferf(send_buffer *in, const char *fmt, ...)
+CURLcode Curl_add_bufferf(Curl_send_buffer *in, const char *fmt, ...)
 {
   char *s;
   va_list ap;
   va_start(ap, fmt);
   s = vaprintf(fmt, ap); /* this allocs a new string to append */
   va_end(ap);
 
   if(s) {
-    CURLcode result = add_buffer(in, s, strlen(s));
+    CURLcode result = Curl_add_buffer(in, s, strlen(s));
     free(s);
     return result;
   }
   /* If we failed, we cleanup the whole buffer and return error */
   if(in->buffer)
     free(in->buffer);
@@ -1165,14 +1147,13 @@
   return CURLE_OUT_OF_MEMORY;
 }
 
 /*
  * add_buffer() appends a memory chunk to the existing buffer
  */
-static
-CURLcode add_buffer(send_buffer *in, const void *inptr, size_t size)
+CURLcode Curl_add_buffer(Curl_send_buffer *in, const void *inptr, size_t size)
 {
   char *new_rb;
   size_t new_size;
 
   if(~size < in->size_used) {
     /* If resulting used size of send buffer would wrap size_t, cleanup
@@ -1317,32 +1300,32 @@
 
   conn->bits.proxy_connect_closed = FALSE;
 
   do {
     if(!conn->bits.tunnel_connecting) { /* BEGIN CONNECT PHASE */
       char *host_port;
-      send_buffer *req_buffer;
+      Curl_send_buffer *req_buffer;
 
-      infof(data, "Establish HTTP proxy tunnel to %s:%d\n",
+      infof(data, "Establish HTTP proxy tunnel to %s:%hu\n",
             hostname, remote_port);
 
       if(data->req.newurl) {
         /* This only happens if we've looped here due to authentication
            reasons, and we don't really use the newly cloned URL here
            then. Just free() it. */
         free(data->req.newurl);
         data->req.newurl = NULL;
       }
 
       /* initialize a dynamic send-buffer */
-      req_buffer = add_buffer_init();
+      req_buffer = Curl_add_buffer_init();
 
       if(!req_buffer)
         return CURLE_OUT_OF_MEMORY;
 
-      host_port = aprintf("%s:%d", hostname, remote_port);
+      host_port = aprintf("%s:%hu", hostname, remote_port);
       if(!host_port) {
         free(req_buffer);
         return CURLE_OUT_OF_MEMORY;
       }
 
       /* Setup the proxy-authorization header, if any */
@@ -1352,32 +1335,32 @@
         char *host=(char *)"";
         const char *proxyconn="";
         const char *useragent="";
         const char *http = (conn->proxytype == CURLPROXY_HTTP_1_0) ?
           "1.0" : "1.1";
 
-        if(!checkheaders(data, "Host:")) {
+        if(!Curl_checkheaders(data, "Host:")) {
           host = aprintf("Host: %s\r\n", host_port);
           if(!host) {
             free(req_buffer);
             free(host_port);
             return CURLE_OUT_OF_MEMORY;
           }
         }
-        if(!checkheaders(data, "Proxy-Connection:"))
+        if(!Curl_checkheaders(data, "Proxy-Connection:"))
           proxyconn = "Proxy-Connection: Keep-Alive\r\n";
 
-        if(!checkheaders(data, "User-Agent:") &&
+        if(!Curl_checkheaders(data, "User-Agent:") &&
            data->set.str[STRING_USERAGENT])
           useragent = conn->allocptr.uagent;
 
         /* Send the connect request to the proxy */
         /* BLOCKING */
         result =
-          add_bufferf(req_buffer,
-                      "CONNECT %s:%d HTTP/%s\r\n"
+          Curl_add_bufferf(req_buffer,
+                      "CONNECT %s:%hu HTTP/%s\r\n"
                       "%s"  /* Host: */
                       "%s"  /* Proxy-Authorization */
                       "%s"  /* User-Agent */
                       "%s", /* Proxy-Connection */
                       hostname, remote_port, http,
                       host,
@@ -1387,21 +1370,21 @@
                       proxyconn);
 
         if(host && *host)
           free(host);
 
         if(CURLE_OK == result)
-          result = add_custom_headers(conn, req_buffer);
+          result = Curl_add_custom_headers(conn, req_buffer);
 
         if(CURLE_OK == result)
           /* CRLF terminate the request */
-          result = add_bufferf(req_buffer, "\r\n");
+          result = Curl_add_bufferf(req_buffer, "\r\n");
 
         if(CURLE_OK == result) {
           /* Now send off the request */
-          result = add_buffer_send(req_buffer, conn,
+          result = Curl_add_buffer_send(req_buffer, conn,
                                    &data->info.request_size, 0, sockindex);
         }
         req_buffer = NULL;
         if(result)
           failf(data, "Failed sending CONNECT to proxy");
       }
@@ -1434,13 +1417,13 @@
         DEBUGF(infof(data,
                      "Multi mode finished polling for response from "
                      "proxy CONNECT."));
       }
     }
     else {
-      DEBUGF(infof(data, "Easy mode waiting for response from proxy CONNECT."));
+      DEBUGF(infof(data, "Easy mode waiting response from proxy CONNECT."));
     }
 
     /* at this point, either:
        1) we're in easy-mode and so it's okay to block waiting for a CONNECT
        response
        2) we're in multi-mode and we didn't block - it's either an error or we
@@ -1539,26 +1522,27 @@
                 if(r == CHUNKE_STOP) {
                   /* we're done reading chunks! */
                   infof(data, "chunk reading DONE\n");
                   keepon = FALSE;
                 }
                 else
-                  infof(data, "Read %d bytes of chunk, continue\n",
+                  infof(data, "Read %zd bytes of chunk, continue\n",
                         tookcareof);
               }
             }
             else
               for(i = 0; i < gotbytes; ptr++, i++) {
                 perline++; /* amount of bytes in this line so far */
                 if(*ptr == 0x0a) {
                   char letter;
                   int writetype;
 
 #ifdef CURL_DOES_CONVERSIONS
                   /* convert from the network encoding */
-                  result = Curl_convert_from_network(data, line_start, perline);
+                  result = Curl_convert_from_network(data, line_start,
+                                                     perline);
                   /* Curl_convert_from_network calls failf if unsuccessful */
                   if(result)
                     return result;
 #endif /* CURL_DOES_CONVERSIONS */
 
                   /* output debug if that is requested */
@@ -1609,13 +1593,13 @@
                         CHUNKcode r;
                         /* We set ignorebody true here since the chunked
                            decoder function will acknowledge that. Pay
                            attention so that this is cleared again when this
                            function returns! */
                         k->ignorebody = TRUE;
-                        infof(data, "%d bytes of chunk left\n", gotbytes-i);
+                        infof(data, "%zd bytes of chunk left\n", gotbytes-i);
 
                         if(line_start[1] == '\n') {
                           /* this can only be a LF if the letter at index 0
                              was a CR */
                           line_start++;
                           i++;
@@ -1628,13 +1612,13 @@
                         if(r == CHUNKE_STOP) {
                           /* we're done reading chunks! */
                           infof(data, "chunk reading DONE\n");
                           keepon = FALSE;
                         }
                         else
-                          infof(data, "Read %d bytes of chunk, continue\n",
+                          infof(data, "Read %zd bytes of chunk, continue\n",
                                 gotbytes);
                       }
                       else {
                         /* without content-length or chunked encoding, we
                            can't keep the connection alive since the close is
                            the end signal so we bail out at once instead */
@@ -1656,20 +1640,21 @@
                     result = Curl_http_input_auth(conn, k->httpcode,
                                                   line_start);
                     if(result)
                       return result;
                   }
                   else if(checkprefix("Content-Length:", line_start)) {
-                    cl = curlx_strtoofft(line_start + strlen("Content-Length:"),
-                                         NULL, 10);
+                    cl = curlx_strtoofft(line_start +
+                                         strlen("Content-Length:"), NULL, 10);
                   }
                   else if(Curl_compareheader(line_start,
                                              "Connection:", "close"))
                     closeConnection = TRUE;
                   else if(Curl_compareheader(line_start,
-                                             "Transfer-Encoding:", "chunked")) {
+                                             "Transfer-Encoding:",
+                                             "chunked")) {
                     infof(data, "CONNECT responded chunked\n");
                     chunked_encoding = TRUE;
                     /* init our chunky engine */
                     Curl_httpchunk_init(conn);
                   }
                   else if(Curl_compareheader(line_start,
@@ -1918,13 +1903,13 @@
   conn->seek_client = data->set.seek_client; /* restore */
 
   if(http == NULL)
     return CURLE_OK;
 
   if(http->send_buffer) {
-    send_buffer *buff = http->send_buffer;
+    Curl_send_buffer *buff = http->send_buffer;
 
     free(buff->buffer);
     free(buff);
     http->send_buffer = NULL; /* clear the pointer */
   }
 
@@ -1959,15 +1944,15 @@
 
   return CURLE_OK;
 }
 
 
 /* Determine if we should use HTTP 1.1 for this request. Reasons to avoid it
-are if the user specifically requested HTTP 1.0, if the server we are
-connected to only supports 1.0, or if any server previously contacted to
-handle this request only supports 1.0. */
+   are if the user specifically requested HTTP 1.0, if the server we are
+   connected to only supports 1.0, or if any server previously contacted to
+   handle this request only supports 1.0. */
 static bool use_http_1_1(const struct SessionHandle *data,
                          const struct connectdata *conn)
 {
   return (bool)((data->set.httpversion == CURL_HTTP_VERSION_1_1) ||
          ((data->set.httpversion != CURL_HTTP_VERSION_1_0) &&
           ((conn->httpversion == 11) ||
@@ -1975,32 +1960,39 @@
             (data->state.httpversion != 10)))));
 }
 
 /* check and possibly add an Expect: header */
 static CURLcode expect100(struct SessionHandle *data,
                           struct connectdata *conn,
-                          send_buffer *req_buffer)
+                          Curl_send_buffer *req_buffer)
 {
   CURLcode result = CURLE_OK;
+  const char *ptr;
   data->state.expect100header = FALSE; /* default to false unless it is set
                                           to TRUE below */
-  if(use_http_1_1(data, conn) && !checkheaders(data, "Expect:")) {
+  if(use_http_1_1(data, conn)) {
     /* if not doing HTTP 1.0 or disabled explicitly, we add a Expect:
-       100-continue to the headers which actually speeds up post
-       operations (as there is one packet coming back from the web
-       server) */
-    result = add_bufferf(req_buffer,
+       100-continue to the headers which actually speeds up post operations
+       (as there is one packet coming back from the web server) */
+    ptr = Curl_checkheaders(data, "Expect:");
+    if (ptr) {
+      data->state.expect100header =
+        Curl_compareheader(ptr, "Expect:", "100-continue");
+    }
+    else {
+      result = Curl_add_bufferf(req_buffer,
                          "Expect: 100-continue\r\n");
-    if(result == CURLE_OK)
-      data->state.expect100header = TRUE;
+      if(result == CURLE_OK)
+        data->state.expect100header = TRUE;
+    }
   }
   return result;
 }
 
-static CURLcode add_custom_headers(struct connectdata *conn,
-                                   send_buffer *req_buffer)
+CURLcode Curl_add_custom_headers(struct connectdata *conn,
+                                   Curl_send_buffer *req_buffer)
 {
   char *ptr;
   struct curl_slist *headers=conn->data->set.headers;
 
   while(headers) {
     ptr = strchr(headers->data, ':');
@@ -2026,32 +2018,84 @@
         else if(conn->bits.authneg &&
                 /* while doing auth neg, don't allow the custom length since
                    we will force length zero then */
                 checkprefix("Content-Length", headers->data))
           ;
         else {
-          CURLcode result = add_bufferf(req_buffer, "%s\r\n", headers->data);
+          CURLcode result = Curl_add_bufferf(req_buffer, "%s\r\n",
+                                             headers->data);
           if(result)
             return result;
         }
       }
     }
     headers = headers->next;
   }
   return CURLE_OK;
 }
 
+CURLcode Curl_add_timecondition(struct SessionHandle *data,
+                                Curl_send_buffer *req_buffer)
+{
+  struct tm *tm;
+  char *buf = data->state.buffer;
+  CURLcode result = CURLE_OK;
+
+  /* The If-Modified-Since header family should have their times set in
+   * GMT as RFC2616 defines: "All HTTP date/time stamps MUST be
+   * represented in Greenwich Mean Time (GMT), without exception. For the
+   * purposes of HTTP, GMT is exactly equal to UTC (Coordinated Universal
+   * Time)." (see page 20 of RFC2616).
+   */
+
+#ifdef HAVE_GMTIME_R
+  /* thread-safe version */
+  struct tm keeptime;
+  tm = (struct tm *)gmtime_r(&data->set.timevalue, &keeptime);
+#else
+  tm = gmtime(&data->set.timevalue);
+#endif
+
+  /* format: "Tue, 15 Nov 1994 12:45:26 GMT" */
+  snprintf(buf, BUFSIZE-1,
+           "%s, %02d %s %4d %02d:%02d:%02d GMT",
+           Curl_wkday[tm->tm_wday?tm->tm_wday-1:6],
+           tm->tm_mday,
+           Curl_month[tm->tm_mon],
+           tm->tm_year + 1900,
+           tm->tm_hour,
+           tm->tm_min,
+           tm->tm_sec);
+
+  switch(data->set.timecondition) {
+  case CURL_TIMECOND_IFMODSINCE:
+  default:
+    result = Curl_add_bufferf(req_buffer,
+                              "If-Modified-Since: %s\r\n", buf);
+    break;
+  case CURL_TIMECOND_IFUNMODSINCE:
+    result = Curl_add_bufferf(req_buffer,
+                              "If-Unmodified-Since: %s\r\n", buf);
+    break;
+  case CURL_TIMECOND_LASTMOD:
+    result = Curl_add_bufferf(req_buffer,
+                              "Last-Modified: %s\r\n", buf);
+    break;
+  }
+
+  return result;
+}
+
 /*
  * Curl_http() gets called from the generic Curl_do() function when a HTTP
  * request is to be performed. This creates and sends a properly constructed
  * HTTP request.
  */
 CURLcode Curl_http(struct connectdata *conn, bool *done)
 {
   struct SessionHandle *data=conn->data;
-  char *buf = data->state.buffer; /* this is a short cut to the buffer */
   CURLcode result=CURLE_OK;
   struct HTTP *http;
   const char *ppath = data->state.path;
   bool paste_ftp_userpwd = FALSE;
   char ftp_typecode[sizeof("/;type=?")] = "";
   const char *host = conn->host.name;
@@ -2059,13 +2103,13 @@
   const char *ptr;
   const char *request;
   Curl_HttpReq httpreq = data->set.httpreq;
   char *addcookies = NULL;
   curl_off_t included_body = 0;
   const char *httpstring;
-  send_buffer *req_buffer;
+  Curl_send_buffer *req_buffer;
   curl_off_t postsize; /* off_t type to be able to hold a large file size */
   int seekerr = CURL_SEEKFUNC_OK;
 
   /* Always consider the DO phase done after this function call, even if there
      may be parts of the request that is not yet sent, since we can deal with
      the rest of the request in the PERFORM phase. */
@@ -2075,13 +2119,13 @@
      sessionhandle, deal with it */
   Curl_reset_reqproto(conn);
 
   if(!data->state.proto.http) {
     /* Only allocate this struct if we don't already have it! */
 
-    http = calloc(sizeof(struct HTTP), 1);
+    http = calloc(1, sizeof(struct HTTP));
     if(!http)
       return CURLE_OUT_OF_MEMORY;
     data->state.proto.http = http;
   }
   else
     http = data->state.proto.http;
@@ -2130,13 +2174,13 @@
   }
 
   /* The User-Agent string might have been allocated in url.c already, because
      it might have been used in the proxy connect, but if we have got a header
      with the user-agent string specified, we erase the previously made string
      here. */
-  if(checkheaders(data, "User-Agent:") && conn->allocptr.uagent) {
+  if(Curl_checkheaders(data, "User-Agent:") && conn->allocptr.uagent) {
     free(conn->allocptr.uagent);
     conn->allocptr.uagent=NULL;
   }
 
   /* setup the authentication headers */
   result = http_output_auth(conn, request, ppath, FALSE);
@@ -2151,43 +2195,44 @@
     conn->bits.authneg = TRUE;
   }
   else
     conn->bits.authneg = FALSE;
 
   Curl_safefree(conn->allocptr.ref);
-  if(data->change.referer && !checkheaders(data, "Referer:"))
+  if(data->change.referer && !Curl_checkheaders(data, "Referer:"))
     conn->allocptr.ref = aprintf("Referer: %s\r\n", data->change.referer);
   else
     conn->allocptr.ref = NULL;
 
-  if(data->set.str[STRING_COOKIE] && !checkheaders(data, "Cookie:"))
+  if(data->set.str[STRING_COOKIE] && !Curl_checkheaders(data, "Cookie:"))
     addcookies = data->set.str[STRING_COOKIE];
 
-  if(!checkheaders(data, "Accept-Encoding:") &&
+  if(!Curl_checkheaders(data, "Accept-Encoding:") &&
      data->set.str[STRING_ENCODING]) {
     Curl_safefree(conn->allocptr.accept_encoding);
     conn->allocptr.accept_encoding =
       aprintf("Accept-Encoding: %s\r\n", data->set.str[STRING_ENCODING]);
     if(!conn->allocptr.accept_encoding)
       return CURLE_OUT_OF_MEMORY;
   }
 
-  ptr = checkheaders(data, "Transfer-Encoding:");
+  ptr = Curl_checkheaders(data, "Transfer-Encoding:");
   if(ptr) {
     /* Some kind of TE is requested, check if 'chunked' is chosen */
     data->req.upload_chunky =
       Curl_compareheader(ptr, "Transfer-Encoding:", "chunked");
   }
   else {
     if((conn->protocol&PROT_HTTP) &&
         data->set.upload &&
         (data->set.infilesize == -1)) {
       if (use_http_1_1(data, conn)) {
         /* HTTP, upload, unknown file size and not HTTP 1.0 */
         data->req.upload_chunky = TRUE;
-      } else {
+      }
+      else {
         failf(data, "Chunky upload is not supported by HTTP 1.0");
         return CURLE_UPLOAD_FAILED;
       }
     }
     else {
       /* else, no chunky upload */
@@ -2197,13 +2242,13 @@
     if(data->req.upload_chunky)
       te = "Transfer-Encoding: chunked\r\n";
   }
 
   Curl_safefree(conn->allocptr.host);
 
-  ptr = checkheaders(data, "Host:");
+  ptr = Curl_checkheaders(data, "Host:");
   if(ptr && (!data->state.this_is_a_follow ||
              Curl_raw_equal(data->state.first_host, conn->host.name))) {
 #if !defined(CURL_DISABLE_COOKIES)
     /* If we have a given custom Host: header, we extract the host name in
        order to possibly use it for cookie reasons later on. We only allow the
        custom Host: header if this is NOT a redirect, as setting Host: in the
@@ -2236,13 +2281,13 @@
          the port number in the host string */
       conn->allocptr.host = aprintf("Host: %s%s%s\r\n",
                                     conn->bits.ipv6_ip?"[":"",
                                     host,
                                     conn->bits.ipv6_ip?"]":"");
     else
-      conn->allocptr.host = aprintf("Host: %s%s%s:%d\r\n",
+      conn->allocptr.host = aprintf("Host: %s%s%s:%hu\r\n",
                                     conn->bits.ipv6_ip?"[":"",
                                     host,
                                     conn->bits.ipv6_ip?"]":"",
                                     conn->remote_port);
 
     if(!conn->allocptr.host)
@@ -2324,23 +2369,23 @@
 #endif /* CURL_DISABLE_PROXY */
 
   if(HTTPREQ_POST_FORM == httpreq) {
     /* we must build the whole darned post sequence first, so that we have
        a size of the whole shebang before we start to send it */
      result = Curl_getFormData(&http->sendit, data->set.httppost,
-                               checkheaders(data, "Content-Type:"),
+                               Curl_checkheaders(data, "Content-Type:"),
                                &http->postsize);
      if(CURLE_OK != result) {
        /* Curl_getFormData() doesn't use failf() */
        failf(data, "failed creating formpost data");
        return result;
      }
   }
 
 
-  http->p_accept = checkheaders(data, "Accept:")?NULL:"Accept: */*\r\n";
+  http->p_accept = Curl_checkheaders(data, "Accept:")?NULL:"Accept: */*\r\n";
 
   if(( (HTTPREQ_POST == httpreq) ||
        (HTTPREQ_POST_FORM == httpreq) ||
        (HTTPREQ_PUT == httpreq) ) &&
      data->state.resume_from) {
     /**********************************************************************
@@ -2417,21 +2462,21 @@
     /*
      * A range is selected. We use different headers whether we're downloading
      * or uploading and we always let customized headers override our internal
      * ones if any such are specified.
      */
     if(((httpreq == HTTPREQ_GET) || (httpreq == HTTPREQ_HEAD)) &&
-       !checkheaders(data, "Range:")) {
+       !Curl_checkheaders(data, "Range:")) {
       /* if a line like this was already allocated, free the previous one */
       if(conn->allocptr.rangeline)
         free(conn->allocptr.rangeline);
       conn->allocptr.rangeline = aprintf("Range: bytes=%s\r\n",
                                          data->state.range);
     }
     else if((httpreq != HTTPREQ_GET) &&
-            !checkheaders(data, "Content-Range:")) {
+            !Curl_checkheaders(data, "Content-Range:")) {
 
       /* if a line like this was already allocated, free the previous one */
       if(conn->allocptr.rangeline)
         free(conn->allocptr.rangeline);
 
       if(data->set.set_resume_from < 0) {
@@ -2468,33 +2513,33 @@
 
   /* Use 1.1 unless the user specifically asked for 1.0 or the server only
      supports 1.0 */
   httpstring= use_http_1_1(data, conn)?"1.1":"1.0";
 
   /* initialize a dynamic send-buffer */
-  req_buffer = add_buffer_init();
+  req_buffer = Curl_add_buffer_init();
 
   if(!req_buffer)
     return CURLE_OUT_OF_MEMORY;
 
   /* add the main request stuff */
   /* GET/HEAD/POST/PUT */
-  result = add_bufferf(req_buffer, "%s ", request);
+  result = Curl_add_bufferf(req_buffer, "%s ", request);
   if (result)
     return result;
 
   /* url */
   if (paste_ftp_userpwd)
-    result = add_bufferf(req_buffer, "ftp://%s:%s@%s",
+    result = Curl_add_bufferf(req_buffer, "ftp://%s:%s@%s",
         conn->user, conn->passwd, ppath + sizeof("ftp://") - 1);
   else
-    result = add_buffer(req_buffer, ppath, strlen(ppath));
+    result = Curl_add_buffer(req_buffer, ppath, strlen(ppath));
   if (result)
     return result;
 
-  result = add_bufferf(req_buffer,
+  result = Curl_add_bufferf(req_buffer,
                 "%s" /* ftp typecode (;type=x) */
                 " HTTP/%s\r\n" /* HTTP version */
                 "%s" /* proxyuserpwd */
                 "%s" /* userpwd */
                 "%s" /* range */
                 "%s" /* user agent */
@@ -2522,13 +2567,13 @@
                  conn->allocptr.accept_encoding)?
                 conn->allocptr.accept_encoding:"",
                 (data->change.referer && conn->allocptr.ref)?
                 conn->allocptr.ref:"" /* Referer: <data> */,
                 (conn->bits.httpproxy &&
                  !conn->bits.tunnel_proxy &&
-                 !checkheaders(data, "Proxy-Connection:"))?
+                 !Curl_checkheaders(data, "Proxy-Connection:"))?
                 "Proxy-Connection: Keep-Alive\r\n":"",
                 te
       );
 
   /*
    * Free userpwd now --- cannot reuse this for Negotiate and possibly NTLM
@@ -2558,94 +2603,52 @@
     if(co) {
       struct Cookie *store=co;
       /* now loop through all cookies that matched */
       while(co) {
         if(co->value) {
           if(0 == count) {
-            result = add_bufferf(req_buffer, "Cookie: ");
+            result = Curl_add_bufferf(req_buffer, "Cookie: ");
             if(result)
               break;
           }
-          result = add_bufferf(req_buffer,
+          result = Curl_add_bufferf(req_buffer,
                                "%s%s=%s", count?"; ":"",
                                co->name, co->value);
           if(result)
             break;
           count++;
         }
         co = co->next; /* next cookie please */
       }
       Curl_cookie_freelist(store, FALSE); /* free the cookie list */
     }
     if(addcookies && (CURLE_OK == result)) {
       if(!count)
-        result = add_bufferf(req_buffer, "Cookie: ");
+        result = Curl_add_bufferf(req_buffer, "Cookie: ");
       if(CURLE_OK == result) {
-        result = add_bufferf(req_buffer, "%s%s",
+        result = Curl_add_bufferf(req_buffer, "%s%s",
                              count?"; ":"",
                              addcookies);
         count++;
       }
     }
     if(count && (CURLE_OK == result))
-      result = add_buffer(req_buffer, "\r\n", 2);
+      result = Curl_add_buffer(req_buffer, "\r\n", 2);
 
     if(result)
       return result;
   }
 #endif
 
   if(data->set.timecondition) {
-    struct tm *tm;
-
-    /* The If-Modified-Since header family should have their times set in
-     * GMT as RFC2616 defines: "All HTTP date/time stamps MUST be
-     * represented in Greenwich Mean Time (GMT), without exception. For the
-     * purposes of HTTP, GMT is exactly equal to UTC (Coordinated Universal
-     * Time)." (see page 20 of RFC2616).
-     */
-
-#ifdef HAVE_GMTIME_R
-    /* thread-safe version */
-    struct tm keeptime;
-    tm = (struct tm *)gmtime_r(&data->set.timevalue, &keeptime);
-#else
-    tm = gmtime(&data->set.timevalue);
-#endif
-
-    /* format: "Tue, 15 Nov 1994 12:45:26 GMT" */
-    snprintf(buf, BUFSIZE-1,
-             "%s, %02d %s %4d %02d:%02d:%02d GMT",
-             Curl_wkday[tm->tm_wday?tm->tm_wday-1:6],
-             tm->tm_mday,
-             Curl_month[tm->tm_mon],
-             tm->tm_year + 1900,
-             tm->tm_hour,
-             tm->tm_min,
-             tm->tm_sec);
-
-    switch(data->set.timecondition) {
-    case CURL_TIMECOND_IFMODSINCE:
-    default:
-      result = add_bufferf(req_buffer,
-                           "If-Modified-Since: %s\r\n", buf);
-      break;
-    case CURL_TIMECOND_IFUNMODSINCE:
-      result = add_bufferf(req_buffer,
-                           "If-Unmodified-Since: %s\r\n", buf);
-      break;
-    case CURL_TIMECOND_LASTMOD:
-      result = add_bufferf(req_buffer,
-                           "Last-Modified: %s\r\n", buf);
-      break;
-    }
+      result = Curl_add_timecondition(data, req_buffer);
     if(result)
       return result;
   }
 
-  result = add_custom_headers(conn, req_buffer);
+  result = Curl_add_custom_headers(conn, req_buffer);
   if(result)
     return result;
 
   http->postdata = NULL;  /* nothing to post at this point */
   Curl_pgrsSetUploadSize(data, 0); /* upload size is 0 atm */
 
@@ -2655,17 +2658,17 @@
 
   switch(httpreq) {
 
   case HTTPREQ_POST_FORM:
     if(!http->sendit || conn->bits.authneg) {
       /* nothing to post! */
-      result = add_bufferf(req_buffer, "Content-Length: 0\r\n\r\n");
+      result = Curl_add_bufferf(req_buffer, "Content-Length: 0\r\n\r\n");
       if(result)
         return result;
 
-      result = add_buffer_send(req_buffer, conn,
+      result = Curl_add_buffer_send(req_buffer, conn,
                                &data->info.request_size, 0, FIRSTSOCKET);
       if(result)
         failf(data, "Failed sending POST request");
       else
         /* setup variables for the upcoming transfer */
         result = Curl_setup_transfer(conn, FIRSTSOCKET, -1, TRUE,
@@ -2691,13 +2694,13 @@
     conn->fread_in = &http->form;
 
     http->sending = HTTPSEND_BODY;
 
     if(!data->req.upload_chunky) {
       /* only add Content-Length if not uploading chunked */
-      result = add_bufferf(req_buffer,
+      result = Curl_add_bufferf(req_buffer,
                            "Content-Length: %" FORMAT_OFF_T "\r\n",
                            http->postsize);
       if(result)
         return result;
     }
 
@@ -2715,27 +2718,27 @@
                                         &linelength);
       if(!contentType) {
         failf(data, "Could not get Content-Type header line!");
         return CURLE_HTTP_POST_ERROR;
       }
 
-      result = add_buffer(req_buffer, contentType, linelength);
+      result = Curl_add_buffer(req_buffer, contentType, linelength);
       if(result)
         return result;
     }
 
     /* make the request end in a true CRLF */
-    result = add_buffer(req_buffer, "\r\n", 2);
+    result = Curl_add_buffer(req_buffer, "\r\n", 2);
     if(result)
       return result;
 
     /* set upload size to the progress meter */
     Curl_pgrsSetUploadSize(data, http->postsize);
 
     /* fire away the whole request to the server */
-    result = add_buffer_send(req_buffer, conn,
+    result = Curl_add_buffer_send(req_buffer, conn,
                              &data->info.request_size, 0, FIRSTSOCKET);
     if(result)
       failf(data, "Failed sending POST request");
     else
       /* setup variables for the upcoming transfer */
       result = Curl_setup_transfer(conn, FIRSTSOCKET, -1, TRUE,
@@ -2763,32 +2766,32 @@
       postsize = 0;
     else
       postsize = data->set.infilesize;
 
     if((postsize != -1) && !data->req.upload_chunky) {
       /* only add Content-Length if not uploading chunked */
-      result = add_bufferf(req_buffer,
+      result = Curl_add_bufferf(req_buffer,
                            "Content-Length: %" FORMAT_OFF_T "\r\n",
                            postsize );
       if(result)
         return result;
     }
 
     result = expect100(data, conn, req_buffer);
     if(result)
       return result;
 
-    result = add_buffer(req_buffer, "\r\n", 2); /* end of headers */
+    result = Curl_add_buffer(req_buffer, "\r\n", 2); /* end of headers */
     if(result)
       return result;
 
     /* set the upload size to the progress meter */
     Curl_pgrsSetUploadSize(data, postsize);
 
     /* this sends the buffer and frees all the buffer resources */
-    result = add_buffer_send(req_buffer, conn,
+    result = Curl_add_buffer_send(req_buffer, conn,
                              &data->info.request_size, 0, FIRSTSOCKET);
     if(result)
       failf(data, "Failed sending PUT request");
     else
       /* prepare for transfer */
       result = Curl_setup_transfer(conn, FIRSTSOCKET, -1, TRUE,
@@ -2805,42 +2808,48 @@
     if(conn->bits.authneg)
       postsize = 0;
     else {
       /* figure out the size of the postfields */
       postsize = (data->set.postfieldsize != -1)?
         data->set.postfieldsize:
-        (data->set.postfields? (curl_off_t)strlen(data->set.postfields):0);
+        (data->set.postfields? (curl_off_t)strlen(data->set.postfields):-1);
     }
     if(!data->req.upload_chunky) {
       /* We only set Content-Length and allow a custom Content-Length if
          we don't upload data chunked, as RFC2616 forbids us to set both
          kinds of headers (Transfer-Encoding: chunked and Content-Length) */
 
-      if(conn->bits.authneg || !checkheaders(data, "Content-Length:")) {
+      if(conn->bits.authneg || !Curl_checkheaders(data, "Content-Length:")) {
         /* we allow replacing this header if not during auth negotiation,
            although it isn't very wise to actually set your own */
-        result = add_bufferf(req_buffer,
+        result = Curl_add_bufferf(req_buffer,
                              "Content-Length: %" FORMAT_OFF_T"\r\n",
                              postsize);
         if(result)
           return result;
       }
     }
 
-    if(!checkheaders(data, "Content-Type:")) {
-      result = add_bufferf(req_buffer,
-                           "Content-Type: application/x-www-form-urlencoded\r\n");
+    if(!Curl_checkheaders(data, "Content-Type:")) {
+      result = Curl_add_bufferf(req_buffer,
+                                "Content-Type: application/"
+                                "x-www-form-urlencoded\r\n");
       if(result)
         return result;
     }
 
     /* For really small posts we don't use Expect: headers at all, and for
        the somewhat bigger ones we allow the app to disable it. Just make
        sure that the expect100header is always set to the preferred value
        here. */
-    if(postsize > TINY_INITIAL_POST_SIZE) {
+    ptr = Curl_checkheaders(data, "Expect:");
+    if(ptr) {
+      data->state.expect100header =
+        Curl_compareheader(ptr, "Expect:", "100-continue");
+    }
+    else if(postsize > TINY_INITIAL_POST_SIZE || postsize < 0) {
       result = expect100(data, conn, req_buffer);
       if(result)
         return result;
     }
     else
       data->state.expect100header = FALSE;
@@ -2853,31 +2862,31 @@
            postsize is less than MAX_INITIAL_POST_SIZE
 
            then append the post data to the HTTP request header. This limit
            is no magic limit but only set to prevent really huge POSTs to
            get the data duplicated with malloc() and family. */
 
-        result = add_buffer(req_buffer, "\r\n", 2); /* end of headers! */
+        result = Curl_add_buffer(req_buffer, "\r\n", 2); /* end of headers! */
         if(result)
           return result;
 
         if(!data->req.upload_chunky) {
           /* We're not sending it 'chunked', append it to the request
              already now to reduce the number if send() calls */
-          result = add_buffer(req_buffer, data->set.postfields,
+          result = Curl_add_buffer(req_buffer, data->set.postfields,
                               (size_t)postsize);
           included_body = postsize;
         }
         else {
           /* Append the POST data chunky-style */
-          result = add_bufferf(req_buffer, "%x\r\n", (int)postsize);
+          result = Curl_add_bufferf(req_buffer, "%x\r\n", (int)postsize);
           if(CURLE_OK == result)
-            result = add_buffer(req_buffer, data->set.postfields,
+            result = Curl_add_buffer(req_buffer, data->set.postfields,
                                 (size_t)postsize);
           if(CURLE_OK == result)
-            result = add_buffer(req_buffer,
+            result = Curl_add_buffer(req_buffer,
                                 "\x0d\x0a\x30\x0d\x0a\x0d\x0a", 7);
           /* CR  LF   0  CR  LF  CR  LF */
           included_body = postsize + 7;
         }
         if(result)
           return result;
@@ -2892,26 +2901,26 @@
         conn->fread_func = (curl_read_callback)readmoredata;
         conn->fread_in = (void *)conn;
 
         /* set the upload size to the progress meter */
         Curl_pgrsSetUploadSize(data, http->postsize);
 
-        result = add_buffer(req_buffer, "\r\n", 2); /* end of headers! */
+        result = Curl_add_buffer(req_buffer, "\r\n", 2); /* end of headers! */
         if(result)
           return result;
       }
     }
     else {
-      result = add_buffer(req_buffer, "\r\n", 2); /* end of headers! */
+      result = Curl_add_buffer(req_buffer, "\r\n", 2); /* end of headers! */
       if(result)
         return result;
 
       if(data->req.upload_chunky && conn->bits.authneg) {
         /* Chunky upload is selected and we're negotiating auth still, send
            end-of-data only */
-        result = add_buffer(req_buffer,
+        result = Curl_add_buffer(req_buffer,
                             "\x0d\x0a\x30\x0d\x0a\x0d\x0a", 7);
         /* CR  LF   0  CR  LF  CR  LF */
         if(result)
           return result;
       }
 
@@ -2926,13 +2935,13 @@
           http->postdata = (char *)&http->postdata;
           http->postsize = postsize;
         }
       }
     }
     /* issue the request */
-    result = add_buffer_send(req_buffer, conn, &data->info.request_size,
+    result = Curl_add_buffer_send(req_buffer, conn, &data->info.request_size,
                              (size_t)included_body, FIRSTSOCKET);
 
     if(result)
       failf(data, "Failed sending HTTP POST request");
     else
       result =
@@ -2940,18 +2949,18 @@
                             &http->readbytecount,
                             http->postdata?FIRSTSOCKET:-1,
                             http->postdata?&http->writebytecount:NULL);
     break;
 
   default:
-    result = add_buffer(req_buffer, "\r\n", 2);
+    result = Curl_add_buffer(req_buffer, "\r\n", 2);
     if(result)
       return result;
 
     /* issue the request */
-    result = add_buffer_send(req_buffer, conn,
+    result = Curl_add_buffer_send(req_buffer, conn,
                              &data->info.request_size, 0, FIRSTSOCKET);
 
     if(result)
       failf(data, "Failed sending HTTP request");
     else
       /* HTTP GET/HEAD download: */
@@ -2970,7 +2979,829 @@
     if(Curl_pgrsUpdate(conn))
       result = CURLE_ABORTED_BY_CALLBACK;
   }
 
   return result;
 }
+
+/*
+ * checkhttpprefix()
+ *
+ * Returns TRUE if member of the list matches prefix of string
+ */
+static bool
+checkhttpprefix(struct SessionHandle *data,
+                const char *s)
+{
+  struct curl_slist *head = data->set.http200aliases;
+  bool rc = FALSE;
+#ifdef CURL_DOES_CONVERSIONS
+  /* convert from the network encoding using a scratch area */
+  char *scratch = strdup(s);
+  if(NULL == scratch) {
+     failf (data, "Failed to allocate memory for conversion!");
+     return FALSE; /* can't return CURLE_OUT_OF_MEMORY so return FALSE */
+  }
+  if(CURLE_OK != Curl_convert_from_network(data, scratch, strlen(s)+1)) {
+    /* Curl_convert_from_network calls failf if unsuccessful */
+     free(scratch);
+     return FALSE; /* can't return CURLE_foobar so return FALSE */
+  }
+  s = scratch;
+#endif /* CURL_DOES_CONVERSIONS */
+
+  while(head) {
+    if(checkprefix(head->data, s)) {
+      rc = TRUE;
+      break;
+    }
+    head = head->next;
+  }
+
+  if((rc != TRUE) && (checkprefix("HTTP/", s))) {
+    rc = TRUE;
+  }
+
+#ifdef CURL_DOES_CONVERSIONS
+  free(scratch);
+#endif /* CURL_DOES_CONVERSIONS */
+  return rc;
+}
+
+#ifndef CURL_DISABLE_RTSP
+static bool
+checkrtspprefix(struct SessionHandle *data,
+                const char *s)
+{
+
+#ifdef CURL_DOES_CONVERSIONS
+  /* convert from the network encoding using a scratch area */
+  char *scratch = strdup(s);
+  if(NULL == scratch) {
+    failf (data, "Failed to allocate memory for conversion!");
+    return FALSE; /* can't return CURLE_OUT_OF_MEMORY so return FALSE */
+  }
+  if(CURLE_OK != Curl_convert_from_network(data, scratch, strlen(s)+1)) {
+    /* Curl_convert_from_network calls failf if unsuccessful */
+    free(scratch);
+    return FALSE; /* can't return CURLE_foobar so return FALSE */
+  }
+  s = scratch;
+#else
+  (void)data; /* unused */
+#endif /* CURL_DOES_CONVERSIONS */
+  if(checkprefix("RTSP/", s))
+    return TRUE;
+  else
+    return FALSE;
+}
+#endif /* CURL_DISABLE_RTSP */
+
+static bool
+checkprotoprefix(struct SessionHandle *data, struct connectdata *conn,
+                 const char *s)
+{
+#ifndef CURL_DISABLE_RTSP
+  if(conn->protocol & PROT_RTSP)
+    return checkrtspprefix(data, s);
+#endif /* CURL_DISABLE_RTSP */
+
+  return checkhttpprefix(data, s);
+}
+
+/*
+ * header_append() copies a chunk of data to the end of the already received
+ * header. We make sure that the full string fit in the allocated header
+ * buffer, or else we enlarge it.
+ */
+static CURLcode header_append(struct SessionHandle *data,
+                              struct SingleRequest *k,
+                              size_t length)
+{
+  if(k->hbuflen + length >= data->state.headersize) {
+    /* We enlarge the header buffer as it is too small */
+    char *newbuff;
+    size_t hbufp_index;
+    size_t newsize;
+
+    if(k->hbuflen + length > CURL_MAX_HTTP_HEADER) {
+      /* The reason to have a max limit for this is to avoid the risk of a bad
+         server feeding libcurl with a never-ending header that will cause
+         reallocs infinitely */
+      failf (data, "Avoided giant realloc for header (max is %d)!",
+             CURL_MAX_HTTP_HEADER);
+      return CURLE_OUT_OF_MEMORY;
+    }
+
+    newsize=CURLMAX((k->hbuflen+ length)*3/2, data->state.headersize*2);
+    hbufp_index = k->hbufp - data->state.headerbuff;
+    newbuff = realloc(data->state.headerbuff, newsize);
+    if(!newbuff) {
+      failf (data, "Failed to alloc memory for big header!");
+      return CURLE_OUT_OF_MEMORY;
+    }
+    data->state.headersize=newsize;
+    data->state.headerbuff = newbuff;
+    k->hbufp = data->state.headerbuff + hbufp_index;
+  }
+  memcpy(k->hbufp, k->str_start, length);
+  k->hbufp += length;
+  k->hbuflen += length;
+  *k->hbufp = 0;
+
+  return CURLE_OK;
+}
+
+
+/*
+ * Read any HTTP header lines from the server and pass them to the client app.
+ */
+CURLcode Curl_http_readwrite_headers(struct SessionHandle *data,
+                                       struct connectdata *conn,
+                                       ssize_t *nread,
+                                       bool *stop_reading)
+{
+  CURLcode result;
+  struct SingleRequest *k = &data->req;
+
+  /* header line within buffer loop */
+  do {
+    size_t rest_length;
+    size_t full_length;
+    int writetype;
+
+    /* str_start is start of line within buf */
+    k->str_start = k->str;
+
+    /* data is in network encoding so use 0x0a instead of '\n' */
+    k->end_ptr = memchr(k->str_start, 0x0a, *nread);
+
+    if(!k->end_ptr) {
+      /* Not a complete header line within buffer, append the data to
+         the end of the headerbuff. */
+      result = header_append(data, k, *nread);
+      if(result)
+        return result;
+
+      if(!k->headerline && (k->hbuflen>5)) {
+        /* make a first check that this looks like a protocol header */
+        if(!checkprotoprefix(data, conn, data->state.headerbuff)) {
+          /* this is not the beginning of a protocol first header line */
+          k->header = FALSE;
+          k->badheader = HEADER_ALLBAD;
+          break;
+        }
+      }
+
+      break; /* read more and try again */
+    }
+
+    /* decrease the size of the remaining (supposed) header line */
+    rest_length = (k->end_ptr - k->str)+1;
+    *nread -= (ssize_t)rest_length;
+
+    k->str = k->end_ptr + 1; /* move past new line */
+
+    full_length = k->str - k->str_start;
+
+    result = header_append(data, k, full_length);
+    if(result)
+      return result;
+
+    k->end_ptr = k->hbufp;
+    k->p = data->state.headerbuff;
+
+    /****
+     * We now have a FULL header line that p points to
+     *****/
+
+    if(!k->headerline) {
+      /* the first read header */
+      if((k->hbuflen>5) &&
+         !checkprotoprefix(data, conn, data->state.headerbuff)) {
+        /* this is not the beginning of a protocol first header line */
+        k->header = FALSE;
+        if(*nread)
+          /* since there's more, this is a partial bad header */
+          k->badheader = HEADER_PARTHEADER;
+        else {
+          /* this was all we read so it's all a bad header */
+          k->badheader = HEADER_ALLBAD;
+          *nread = (ssize_t)rest_length;
+        }
+        break;
+      }
+    }
+
+    /* headers are in network encoding so
+       use 0x0a and 0x0d instead of '\n' and '\r' */
+    if((0x0a == *k->p) || (0x0d == *k->p)) {
+      size_t headerlen;
+      /* Zero-length header line means end of headers! */
+
+#ifdef CURL_DOES_CONVERSIONS
+      if(0x0d == *k->p) {
+        *k->p = '\r'; /* replace with CR in host encoding */
+        k->p++;       /* pass the CR byte */
+      }
+      if(0x0a == *k->p) {
+        *k->p = '\n'; /* replace with LF in host encoding */
+        k->p++;       /* pass the LF byte */
+      }
+#else
+      if('\r' == *k->p)
+        k->p++; /* pass the \r byte */
+      if('\n' == *k->p)
+        k->p++; /* pass the \n byte */
+#endif /* CURL_DOES_CONVERSIONS */
+
+      if(100 <= k->httpcode && 199 >= k->httpcode) {
+        /*
+         * We have made a HTTP PUT or POST and this is 1.1-lingo
+         * that tells us that the server is OK with this and ready
+         * to receive the data.
+         * However, we'll get more headers now so we must get
+         * back into the header-parsing state!
+         */
+        k->header = TRUE;
+        k->headerline = 0; /* restart the header line counter */
+
+        /* if we did wait for this do enable write now! */
+        if(k->exp100) {
+          k->exp100 = EXP100_SEND_DATA;
+          k->keepon |= KEEP_SEND;
+        }
+      }
+      else {
+        k->header = FALSE; /* no more header to parse! */
+
+        if((k->size == -1) && !k->chunk && !conn->bits.close &&
+           (conn->httpversion >= 11) && !(conn->protocol & PROT_RTSP)) {
+          /* On HTTP 1.1, when connection is not to get closed, but no
+             Content-Length nor Content-Encoding chunked have been
+             received, according to RFC2616 section 4.4 point 5, we
+             assume that the server will close the connection to
+             signal the end of the document. */
+          infof(data, "no chunk, no close, no size. Assume close to "
+                "signal end\n");
+          conn->bits.close = TRUE;
+        }
+      }
+
+      if(417 == k->httpcode) {
+        /*
+         * we got: "417 Expectation Failed" this means:
+         * we have made a HTTP call and our Expect Header
+         * seems to cause a problem => abort the write operations
+         * (or prevent them from starting).
+         */
+        k->exp100 = EXP100_FAILED;
+        k->keepon &= ~KEEP_SEND;
+      }
+
+      /*
+       * When all the headers have been parsed, see if we should give
+       * up and return an error.
+       */
+      if(Curl_http_should_fail(conn)) {
+        failf (data, "The requested URL returned error: %d",
+               k->httpcode);
+        return CURLE_HTTP_RETURNED_ERROR;
+      }
+
+      /* now, only output this if the header AND body are requested:
+       */
+      writetype = CLIENTWRITE_HEADER;
+      if(data->set.include_header)
+        writetype |= CLIENTWRITE_BODY;
+
+      headerlen = k->p - data->state.headerbuff;
+
+      result = Curl_client_write(conn, writetype,
+                                 data->state.headerbuff,
+                                 headerlen);
+      if(result)
+        return result;
+
+      data->info.header_size += (long)headerlen;
+      data->req.headerbytecount += (long)headerlen;
+
+      data->req.deductheadercount =
+        (100 <= k->httpcode && 199 >= k->httpcode)?data->req.headerbytecount:0;
+
+      if(data->state.resume_from &&
+         (data->set.httpreq==HTTPREQ_GET) &&
+         (k->httpcode == 416)) {
+        /* "Requested Range Not Satisfiable" */
+        *stop_reading = TRUE;
+      }
+
+      if(!*stop_reading) {
+        /* Curl_http_auth_act() checks what authentication methods
+         * that are available and decides which one (if any) to
+         * use. It will set 'newurl' if an auth method was picked. */
+        result = Curl_http_auth_act(conn);
+
+        if(result)
+          return result;
+
+        if(conn->bits.rewindaftersend) {
+          /* We rewind after a complete send, so thus we continue
+             sending now */
+          infof(data, "Keep sending data to get tossed away!\n");
+          k->keepon |= KEEP_SEND;
+        }
+      }
+
+      if(!k->header) {
+        /*
+         * really end-of-headers.
+         *
+         * If we requested a "no body", this is a good time to get
+         * out and return home.
+         */
+        if(data->set.opt_no_body)
+          *stop_reading = TRUE;
+        else {
+          /* If we know the expected size of this document, we set the
+             maximum download size to the size of the expected
+             document or else, we won't know when to stop reading!
+
+             Note that we set the download maximum even if we read a
+             "Connection: close" header, to make sure that
+             "Content-Length: 0" still prevents us from attempting to
+             read the (missing) response-body.
+          */
+          /* According to RFC2616 section 4.4, we MUST ignore
+             Content-Length: headers if we are now receiving data
+             using chunked Transfer-Encoding.
+          */
+          if(k->chunk)
+            k->size=-1;
+
+        }
+        if(-1 != k->size) {
+          /* We do this operation even if no_body is true, since this
+             data might be retrieved later with curl_easy_getinfo()
+             and its CURLINFO_CONTENT_LENGTH_DOWNLOAD option. */
+
+          Curl_pgrsSetDownloadSize(data, k->size);
+          k->maxdownload = k->size;
+        }
+
+        /* If max download size is *zero* (nothing) we already
+           have nothing and can safely return ok now! */
+        if(0 == k->maxdownload)
+          *stop_reading = TRUE;
+
+        if(*stop_reading) {
+          /* we make sure that this socket isn't read more now */
+          k->keepon &= ~KEEP_RECV;
+        }
+
+        if(data->set.verbose)
+          Curl_debug(data, CURLINFO_HEADER_IN,
+                     k->str_start, headerlen, conn);
+        break;          /* exit header line loop */
+      }
+
+      /* We continue reading headers, so reset the line-based
+         header parsing variables hbufp && hbuflen */
+      k->hbufp = data->state.headerbuff;
+      k->hbuflen = 0;
+      continue;
+    }
+
+    /*
+     * Checks for special headers coming up.
+     */
+
+    if(!k->headerline++) {
+      /* This is the first header, it MUST be the error code line
+         or else we consider this to be the body right away! */
+      int httpversion_major;
+      int rtspversion_major;
+      int nc = 0;
+#ifdef CURL_DOES_CONVERSIONS
+#define HEADER1 scratch
+#define SCRATCHSIZE 21
+      CURLcode res;
+      char scratch[SCRATCHSIZE+1]; /* "HTTP/major.minor 123" */
+      /* We can't really convert this yet because we
+         don't know if it's the 1st header line or the body.
+         So we do a partial conversion into a scratch area,
+         leaving the data at k->p as-is.
+      */
+      strncpy(&scratch[0], k->p, SCRATCHSIZE);
+      scratch[SCRATCHSIZE] = 0; /* null terminate */
+      res = Curl_convert_from_network(data,
+                                      &scratch[0],
+                                      SCRATCHSIZE);
+      if(CURLE_OK != res) {
+        /* Curl_convert_from_network calls failf if unsuccessful */
+        return res;
+      }
+#else
+#define HEADER1 k->p /* no conversion needed, just use k->p */
+#endif /* CURL_DOES_CONVERSIONS */
+
+      if(conn->protocol & PROT_HTTP) {
+        nc = sscanf(HEADER1,
+            " HTTP/%d.%d %3d",
+            &httpversion_major,
+            &conn->httpversion,
+            &k->httpcode);
+        if(nc==3) {
+          conn->httpversion += 10 * httpversion_major;
+        }
+        else {
+          /* this is the real world, not a Nirvana
+             NCSA 1.5.x returns this crap when asked for HTTP/1.1
+             */
+          nc=sscanf(HEADER1, " HTTP %3d", &k->httpcode);
+          conn->httpversion = 10;
+
+          /* If user has set option HTTP200ALIASES,
+             compare header line against list of aliases
+             */
+          if(!nc) {
+            if(checkhttpprefix(data, k->p)) {
+              nc = 1;
+              k->httpcode = 200;
+              conn->httpversion = 10;
+            }
+          }
+        }
+      }
+      else if(conn->protocol & PROT_RTSP) {
+        nc = sscanf(HEADER1,
+                    " RTSP/%d.%d %3d",
+                    &rtspversion_major,
+                    &conn->rtspversion,
+                    &k->httpcode);
+        if(nc==3) {
+          conn->rtspversion += 10 * rtspversion_major;
+          conn->httpversion = 11; /* For us, RTSP acts like HTTP 1.1 */
+        }
+        else {
+          /* TODO: do we care about the other cases here? */
+          nc = 0;
+        }
+      }
+
+      if(nc) {
+        data->info.httpcode = k->httpcode;
+
+        data->info.httpversion = conn->httpversion;
+        if (!data->state.httpversion ||
+            data->state.httpversion > conn->httpversion)
+          /* store the lowest server version we encounter */
+          data->state.httpversion = conn->httpversion;
+
+        /*
+         * This code executes as part of processing the header.  As a
+         * result, it's not totally clear how to interpret the
+         * response code yet as that depends on what other headers may
+         * be present.  401 and 407 may be errors, but may be OK
+         * depending on how authentication is working.  Other codes
+         * are definitely errors, so give up here.
+         */
+        if(data->set.http_fail_on_error && (k->httpcode >= 400) &&
+           ((k->httpcode != 401) || !conn->bits.user_passwd) &&
+           ((k->httpcode != 407) || !conn->bits.proxy_user_passwd) ) {
+
+          if(data->state.resume_from &&
+             (data->set.httpreq==HTTPREQ_GET) &&
+             (k->httpcode == 416)) {
+            /* "Requested Range Not Satisfiable", just proceed and
+               pretend this is no error */
+          }
+          else {
+            /* serious error, go home! */
+            failf (data, "The requested URL returned error: %d",
+                   k->httpcode);
+            return CURLE_HTTP_RETURNED_ERROR;
+          }
+        }
+
+        if(conn->httpversion == 10) {
+          /* Default action for HTTP/1.0 must be to close, unless
+             we get one of those fancy headers that tell us the
+             server keeps it open for us! */
+          infof(data, "HTTP 1.0, assume close after body\n");
+          conn->bits.close = TRUE;
+        }
+        else if(conn->httpversion >= 11 &&
+                !conn->bits.close) {
+          /* If HTTP version is >= 1.1 and connection is persistent
+             server supports pipelining. */
+          DEBUGF(infof(data,
+                       "HTTP 1.1 or later with persistent connection, "
+                       "pipelining supported\n"));
+          conn->server_supports_pipelining = TRUE;
+        }
+
+        switch(k->httpcode) {
+        case 204:
+          /* (quote from RFC2616, section 10.2.5): The server has
+           * fulfilled the request but does not need to return an
+           * entity-body ... The 204 response MUST NOT include a
+           * message-body, and thus is always terminated by the first
+           * empty line after the header fields. */
+          /* FALLTHROUGH */
+        case 416: /* Requested Range Not Satisfiable, it has the
+                     Content-Length: set as the "real" document but no
+                     actual response is sent. */
+        case 304:
+          /* (quote from RFC2616, section 10.3.5): The 304 response
+           * MUST NOT contain a message-body, and thus is always
+           * terminated by the first empty line after the header
+           * fields.  */
+          if(data->set.timecondition)
+            data->info.timecond = TRUE;
+          k->size=0;
+          k->maxdownload=0;
+          k->ignorecl = TRUE; /* ignore Content-Length headers */
+          break;
+        default:
+          /* nothing */
+          break;
+        }
+      }
+      else {
+        k->header = FALSE;   /* this is not a header line */
+        break;
+      }
+    }
+
+#ifdef CURL_DOES_CONVERSIONS
+    /* convert from the network encoding */
+    result = Curl_convert_from_network(data, k->p, strlen(k->p));
+    if(CURLE_OK != result) {
+      return(result);
+    }
+    /* Curl_convert_from_network calls failf if unsuccessful */
+#endif /* CURL_DOES_CONVERSIONS */
+
+    /* Check for Content-Length: header lines to get size. Ignore
+       the header completely if we get a 416 response as then we're
+       resuming a document that we don't get, and this header contains
+       info about the true size of the document we didn't get now. */
+    if(!k->ignorecl && !data->set.ignorecl &&
+       checkprefix("Content-Length:", k->p)) {
+      curl_off_t contentlength = curlx_strtoofft(k->p+15, NULL, 10);
+      if(data->set.max_filesize &&
+         contentlength > data->set.max_filesize) {
+        failf(data, "Maximum file size exceeded");
+        return CURLE_FILESIZE_EXCEEDED;
+      }
+      if(contentlength >= 0) {
+        k->size = contentlength;
+        k->maxdownload = k->size;
+        /* we set the progress download size already at this point
+           just to make it easier for apps/callbacks to extract this
+           info as soon as possible */
+        Curl_pgrsSetDownloadSize(data, k->size);
+      }
+      else {
+        /* Negative Content-Length is really odd, and we know it
+           happens for example when older Apache servers send large
+           files */
+        conn->bits.close = TRUE;
+        infof(data, "Negative content-length: %" FORMAT_OFF_T
+              ", closing after transfer\n", contentlength);
+      }
+    }
+    /* check for Content-Type: header lines to get the MIME-type */
+    else if(checkprefix("Content-Type:", k->p)) {
+      char *contenttype = Curl_copy_header_value(k->p);
+      if (!contenttype)
+        return CURLE_OUT_OF_MEMORY;
+      if (!*contenttype)
+        /* ignore empty data */
+        free(contenttype);
+      else {
+        Curl_safefree(data->info.contenttype);
+        data->info.contenttype = contenttype;
+      }
+    }
+    else if((conn->httpversion == 10) &&
+            conn->bits.httpproxy &&
+            Curl_compareheader(k->p,
+                               "Proxy-Connection:", "keep-alive")) {
+      /*
+       * When a HTTP/1.0 reply comes when using a proxy, the
+       * 'Proxy-Connection: keep-alive' line tells us the
+       * connection will be kept alive for our pleasure.
+       * Default action for 1.0 is to close.
+       */
+      conn->bits.close = FALSE; /* don't close when done */
+      infof(data, "HTTP/1.0 proxy connection set to keep alive!\n");
+    }
+    else if((conn->httpversion == 11) &&
+            conn->bits.httpproxy &&
+            Curl_compareheader(k->p,
+                               "Proxy-Connection:", "close")) {
+      /*
+       * We get a HTTP/1.1 response from a proxy and it says it'll
+       * close down after this transfer.
+       */
+      conn->bits.close = TRUE; /* close when done */
+      infof(data, "HTTP/1.1 proxy connection set close!\n");
+    }
+    else if((conn->httpversion == 10) &&
+            Curl_compareheader(k->p, "Connection:", "keep-alive")) {
+      /*
+       * A HTTP/1.0 reply with the 'Connection: keep-alive' line
+       * tells us the connection will be kept alive for our
+       * pleasure.  Default action for 1.0 is to close.
+       *
+       * [RFC2068, section 19.7.1] */
+      conn->bits.close = FALSE; /* don't close when done */
+      infof(data, "HTTP/1.0 connection set to keep alive!\n");
+    }
+    else if(Curl_compareheader(k->p, "Connection:", "close")) {
+      /*
+       * [RFC 2616, section 8.1.2.1]
+       * "Connection: close" is HTTP/1.1 language and means that
+       * the connection will close when this request has been
+       * served.
+       */
+      conn->bits.close = TRUE; /* close when done */
+    }
+    else if(Curl_compareheader(k->p, "Transfer-Encoding:", "chunked") &&
+            !(conn->protocol & PROT_RTSP)) {
+      /*
+       * [RFC 2616, section 3.6.1] A 'chunked' transfer encoding
+       * means that the server will send a series of "chunks". Each
+       * chunk starts with line with info (including size of the
+       * coming block) (terminated with CRLF), then a block of data
+       * with the previously mentioned size. There can be any amount
+       * of chunks, and a chunk-data set to zero signals the
+       * end-of-chunks. */
+      k->chunk = TRUE; /* chunks coming our way */
+
+      /* init our chunky engine */
+      Curl_httpchunk_init(conn);
+    }
+
+    else if(checkprefix("Trailer:", k->p) ||
+            checkprefix("Trailers:", k->p)) {
+      /*
+       * This test helps Curl_httpchunk_read() to determine to look
+       * for well formed trailers after the zero chunksize record. In
+       * this case a CRLF is required after the zero chunksize record
+       * when no trailers are sent, or after the last trailer record.
+       *
+       * It seems both Trailer: and Trailers: occur in the wild.
+       */
+      k->trailerhdrpresent = TRUE;
+    }
+
+    else if(checkprefix("Content-Encoding:", k->p) &&
+            data->set.str[STRING_ENCODING]) {
+      /*
+       * Process Content-Encoding. Look for the values: identity,
+       * gzip, deflate, compress, x-gzip and x-compress. x-gzip and
+       * x-compress are the same as gzip and compress. (Sec 3.5 RFC
+       * 2616). zlib cannot handle compress.  However, errors are
+       * handled further down when the response body is processed
+       */
+      char *start;
+
+      /* Find the first non-space letter */
+      start = k->p + 17;
+      while(*start && ISSPACE(*start))
+        start++;
+
+      /* Record the content-encoding for later use */
+      if(checkprefix("identity", start))
+        k->content_encoding = IDENTITY;
+      else if(checkprefix("deflate", start))
+        k->content_encoding = DEFLATE;
+      else if(checkprefix("gzip", start)
+              || checkprefix("x-gzip", start))
+        k->content_encoding = GZIP;
+      else if(checkprefix("compress", start)
+              || checkprefix("x-compress", start))
+        k->content_encoding = COMPRESS;
+    }
+    else if(checkprefix("Content-Range:", k->p)) {
+      /* Content-Range: bytes [num]-
+         Content-Range: bytes: [num]-
+         Content-Range: [num]-
+
+         The second format was added since Sun's webserver
+         JavaWebServer/1.1.1 obviously sends the header this way!
+         The third added since some servers use that!
+      */
+
+      char *ptr = k->p + 14;
+
+      /* Move forward until first digit */
+      while(*ptr && !ISDIGIT(*ptr))
+        ptr++;
+
+      k->offset = curlx_strtoofft(ptr, NULL, 10);
+
+      if(data->state.resume_from == k->offset)
+        /* we asked for a resume and we got it */
+        k->content_range = TRUE;
+    }
+#if !defined(CURL_DISABLE_COOKIES)
+    else if(data->cookies &&
+            checkprefix("Set-Cookie:", k->p)) {
+      Curl_share_lock(data, CURL_LOCK_DATA_COOKIE,
+                      CURL_LOCK_ACCESS_SINGLE);
+      Curl_cookie_add(data,
+                      data->cookies, TRUE, k->p+11,
+                      /* If there is a custom-set Host: name, use it
+                         here, or else use real peer host name. */
+                      conn->allocptr.cookiehost?
+                      conn->allocptr.cookiehost:conn->host.name,
+                      data->state.path);
+      Curl_share_unlock(data, CURL_LOCK_DATA_COOKIE);
+    }
 #endif
+    else if(checkprefix("Last-Modified:", k->p) &&
+            (data->set.timecondition || data->set.get_filetime) ) {
+      time_t secs=time(NULL);
+      k->timeofdoc = curl_getdate(k->p+strlen("Last-Modified:"),
+                                  &secs);
+      if(data->set.get_filetime)
+        data->info.filetime = (long)k->timeofdoc;
+    }
+    else if((checkprefix("WWW-Authenticate:", k->p) &&
+             (401 == k->httpcode)) ||
+            (checkprefix("Proxy-authenticate:", k->p) &&
+             (407 == k->httpcode))) {
+      result = Curl_http_input_auth(conn, k->httpcode, k->p);
+      if(result)
+        return result;
+    }
+    else if((k->httpcode >= 300 && k->httpcode < 400) &&
+            checkprefix("Location:", k->p)) {
+      /* this is the URL that the server advises us to use instead */
+      char *location = Curl_copy_header_value(k->p);
+      if (!location)
+        return CURLE_OUT_OF_MEMORY;
+      if (!*location)
+        /* ignore empty data */
+        free(location);
+      else {
+        DEBUGASSERT(!data->req.location);
+        data->req.location = location;
+
+        if(data->set.http_follow_location) {
+          DEBUGASSERT(!data->req.newurl);
+          data->req.newurl = strdup(data->req.location); /* clone */
+          if(!data->req.newurl)
+            return CURLE_OUT_OF_MEMORY;
+
+          /* some cases of POST and PUT etc needs to rewind the data
+             stream at this point */
+          result = Curl_http_perhapsrewind(conn);
+          if(result)
+            return result;
+        }
+      }
+    }
+#ifndef CURL_DISABLE_RTSP
+    else if(conn->protocol & PROT_RTSP) {
+      result = Curl_rtsp_parseheader(conn, k->p);
+      if(result)
+        return result;
+    }
+#endif
+    /*
+     * End of header-checks. Write them to the client.
+     */
+
+    writetype = CLIENTWRITE_HEADER;
+    if(data->set.include_header)
+      writetype |= CLIENTWRITE_BODY;
+
+    if(data->set.verbose)
+      Curl_debug(data, CURLINFO_HEADER_IN,
+                 k->p, (size_t)k->hbuflen, conn);
+
+    result = Curl_client_write(conn, writetype, k->p, k->hbuflen);
+    if(result)
+      return result;
+
+    data->info.header_size += (long)k->hbuflen;
+    data->req.headerbytecount += (long)k->hbuflen;
+
+    /* reset hbufp pointer && hbuflen */
+    k->hbufp = data->state.headerbuff;
+    k->hbuflen = 0;
+  }
+  while(!*stop_reading && *k->str); /* header line within buffer */
+
+  /* We might have reached the end of the header part here, but
+     there might be a non-header part left in the end of the read
+     buffer. */
+
+  return CURLE_OK;
+}
+
+#endif /* CURL_DISABLE_HTTP */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/http.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/http.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/http.h	2008-08-05 06:00:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/http.h	2010-01-21 21:58:30.000000000 +0800
@@ -5,26 +5,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: http.h,v 1.38 2008-08-04 22:00:22 bagder Exp $
+ * $Id: http.h,v 1.43 2010-01-21 13:58:30 bagder Exp $
  ***************************************************************************/
 #ifndef CURL_DISABLE_HTTP
 
 extern const struct Curl_handler Curl_handler_http;
 
 #ifdef USE_SSL
@@ -32,14 +32,46 @@
 #endif
 
 bool Curl_compareheader(const char *headerline,  /* line to check */
                         const char *header,   /* header keyword _with_ colon */
                         const char *content); /* content string to find */
 
+char *Curl_checkheaders(struct SessionHandle *data, const char *thisheader);
+
 char *Curl_copy_header_value(const char *h);
 
+
+/* ------------------------------------------------------------------------- */
+/*
+ * The add_buffer series of functions are used to build one large memory chunk
+ * from repeated function invokes. Used so that the entire HTTP request can
+ * be sent in one go.
+ */
+struct Curl_send_buffer {
+  char *buffer;
+  size_t size_max;
+  size_t size_used;
+};
+typedef struct Curl_send_buffer Curl_send_buffer;
+
+Curl_send_buffer *Curl_add_buffer_init(void);
+CURLcode Curl_add_bufferf(Curl_send_buffer *in, const char *fmt, ...);
+CURLcode Curl_add_buffer(Curl_send_buffer *in, const void *inptr, size_t size);
+CURLcode Curl_add_buffer_send(Curl_send_buffer *in,
+                         struct connectdata *conn,
+                         long *bytes_written,
+                         size_t included_body_bytes,
+                         int socketindex);
+
+
+CURLcode Curl_add_timecondition(struct SessionHandle *data,
+                                Curl_send_buffer *buf);
+CURLcode Curl_add_custom_headers(struct connectdata *conn,
+                                   Curl_send_buffer *req_buffer);
+
+
 /* ftp can use this as well */
 CURLcode Curl_proxyCONNECT(struct connectdata *conn,
                            int tunnelsocket,
                            const char *hostname, unsigned short remote_port);
 
 /* protocol-specific functions set up to be called by the main engine */
@@ -84,8 +116,48 @@
 #endif
 
 #ifndef TINY_INITIAL_POST_SIZE
 #define TINY_INITIAL_POST_SIZE 1024
 #endif
 
-#endif
+#endif /* CURL_DISABLE_HTTP */
+
+/****************************************************************************
+ * HTTP unique setup
+ ***************************************************************************/
+struct HTTP {
+  struct FormData *sendit;
+  curl_off_t postsize; /* off_t to handle large file sizes */
+  const char *postdata;
+
+  const char *p_pragma;      /* Pragma: string */
+  const char *p_accept;      /* Accept: string */
+  curl_off_t readbytecount;
+  curl_off_t writebytecount;
+
+  /* For FORM posting */
+  struct Form form;
+
+  struct back {
+    curl_read_callback fread_func; /* backup storage for fread pointer */
+    void *fread_in;           /* backup storage for fread_in pointer */
+    const char *postdata;
+    curl_off_t postsize;
+  } backup;
+
+  enum {
+    HTTPSEND_NADA,    /* init */
+    HTTPSEND_REQUEST, /* sending a request */
+    HTTPSEND_BODY,    /* sending body */
+    HTTPSEND_LAST     /* never use this */
+  } sending;
+
+  void *send_buffer; /* used if the request couldn't be sent in one chunk,
+                        points to an allocated send_buffer struct */
+};
+
+CURLcode Curl_http_readwrite_headers(struct SessionHandle *data,
+                                     struct connectdata *conn,
+                                     ssize_t *nread,
+                                     bool *stop_reading);
+
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/http_ntlm.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/http_ntlm.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/http_ntlm.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/http_ntlm.c	2010-01-25 06:44:10.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: http_ntlm.c,v 1.81 2009-04-21 11:46:17 yangtse Exp $
+ * $Id: http_ntlm.c,v 1.82 2010-01-24 22:44:10 bagder Exp $
  ***************************************************************************/
 #include "setup.h"
 
 /* NTLM details:
 
    http://davenport.sourceforge.net/ntlm.html
@@ -383,13 +383,13 @@
   DES_ecb_encrypt((DES_cblock*) plaintext, (DES_cblock*) (results+8),
                   DESKEY(ks), DES_ENCRYPT);
 
   setup_des_key(keys+14, DESKEY(ks));
   DES_ecb_encrypt((DES_cblock*) plaintext, (DES_cblock*) (results+16),
                   DESKEY(ks), DES_ENCRYPT);
-#elif USE_GNUTLS
+#elif defined(USE_GNUTLS)
   gcry_cipher_hd_t des;
 
   gcry_cipher_open(&des, GCRY_CIPHER_DES, GCRY_CIPHER_MODE_ECB, 0);
   setup_des_key(keys, &des);
   gcry_cipher_encrypt(des, results, 8, plaintext, 8);
   gcry_cipher_close(des);
@@ -444,13 +444,13 @@
     DES_ecb_encrypt((DES_cblock *)magic, (DES_cblock *)lmbuffer,
                     DESKEY(ks), DES_ENCRYPT);
 
     setup_des_key(pw+7, DESKEY(ks));
     DES_ecb_encrypt((DES_cblock *)magic, (DES_cblock *)(lmbuffer+8),
                     DESKEY(ks), DES_ENCRYPT);
-#elif USE_GNUTLS
+#elif defined(USE_GNUTLS)
     gcry_cipher_hd_t des;
 
     gcry_cipher_open(&des, GCRY_CIPHER_DES, GCRY_CIPHER_MODE_ECB, 0);
     setup_des_key(pw, &des);
     gcry_cipher_encrypt(des, lmbuffer, 8, magic, 8);
     gcry_cipher_close(des);
@@ -505,13 +505,13 @@
     /* Create NT hashed password. */
 #ifdef USE_SSLEAY
     MD4_CTX MD4pw;
     MD4_Init(&MD4pw);
     MD4_Update(&MD4pw, pw, 2*len);
     MD4_Final(ntbuffer, &MD4pw);
-#elif USE_GNUTLS
+#elif defined(USE_GNUTLS)
     gcry_md_hd_t MD4pw;
     gcry_md_open(&MD4pw, GCRY_MD_MD4, 0);
     gcry_md_write(MD4pw, pw, 2*len);
     memcpy (ntbuffer, gcry_md_read (MD4pw, 0), MD4_DIGEST_LENGTH);
     gcry_md_close(MD4pw);
 #endif
@@ -908,13 +908,13 @@
 
       /* Need to create 8 bytes random data */
 #ifdef USE_SSLEAY
       MD5_CTX MD5pw;
       Curl_ossl_seed(conn->data); /* Initiate the seed if not already done */
       RAND_bytes(entropy,8);
-#elif USE_GNUTLS
+#elif defined(USE_GNUTLS)
       gcry_md_hd_t MD5pw;
       Curl_gtls_seed(conn->data); /* Initiate the seed if not already done */
       gcry_randomize(entropy, 8, GCRY_STRONG_RANDOM);
 #endif
 
       /* 8 bytes random data as challenge in lmresp */
@@ -927,13 +927,13 @@
       memcpy(tmp+8,entropy,8);
 
 #ifdef USE_SSLEAY
       MD5_Init(&MD5pw);
       MD5_Update(&MD5pw, tmp, 16);
       MD5_Final(md5sum, &MD5pw);
-#elif USE_GNUTLS
+#elif defined(USE_GNUTLS)
       gcry_md_open(&MD5pw, GCRY_MD_MD5, 0);
       gcry_md_write(MD5pw, tmp, MD5_DIGEST_LENGTH);
       memcpy(md5sum, gcry_md_read (MD5pw, 0), MD5_DIGEST_LENGTH);
       gcry_md_close(MD5pw);
 #endif
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/if2ip.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/if2ip.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/if2ip.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/if2ip.c	2010-01-22 20:14:35.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: if2ip.c,v 1.65 2009-04-21 11:46:17 yangtse Exp $
+ * $Id: if2ip.c,v 1.66 2009-12-30 17:59:56 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifdef HAVE_UNISTD_H
 #  include <unistd.h>
@@ -50,13 +50,13 @@
 #ifdef HAVE_IFADDRS_H
 #  include <ifaddrs.h>
 #endif
 #ifdef HAVE_STROPTS_H
 #  include <stropts.h>
 #endif
-#ifdef VMS
+#ifdef __VMS
 #  include <inet.h>
 #endif
 
 #include "inet_ntop.h"
 #include "strequal.h"
 #include "if2ip.h"
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib: imap.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib: imap.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/krb5.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/krb5.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/krb5.c	2009-05-04 05:49:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/krb5.c	2010-01-22 20:14:35.000000000 +0800
@@ -43,20 +43,23 @@
 
 #include <stdlib.h>
 #ifdef HAVE_NETDB_H
 #include <netdb.h>
 #endif
 #include <string.h>
-#ifdef HAVE_GSSMIT
-/* MIT style */
-#include <gssapi/gssapi.h>
-#include <gssapi/gssapi_generic.h>
-#include <gssapi/gssapi_krb5.h>
+
+#ifdef HAVE_GSSGNU
+#  include <gss.h>
+#elif defined HAVE_GSSMIT
+   /* MIT style */
+#  include <gssapi/gssapi.h>
+#  include <gssapi/gssapi_generic.h>
+#  include <gssapi/gssapi_krb5.h>
 #else
-/* Heimdal-style */
-#include <gssapi.h>
+   /* Heimdal-style */
+#  include <gssapi.h>
 #endif
 
 #include "urldata.h"
 #include "curl_base64.h"
 #include "ftp.h"
 #include "sendf.h"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/ldap.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/ldap.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/ldap.c	2009-11-04 02:41:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/ldap.c	2010-02-05 05:41:46.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: ldap.c,v 1.101 2009-11-02 20:04:18 yangtse Exp $
+ * $Id: ldap.c,v 1.107 2010-02-04 19:44:31 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifndef CURL_DISABLE_LDAP
 /* -- WIN32 approved -- */
@@ -197,13 +197,13 @@
     failf(data, "LDAP local: %s", ldap_err2string(rc));
     status = CURLE_LDAP_INVALID_URL;
     goto quit;
   }
 
   /* Get the URL scheme ( either ldap or ldaps ) */
-  if(Curl_raw_equal(conn->protostr, "LDAPS"))
+  if(conn->protocol & PROT_SSL)
     ldap_ssl = 1;
   infof(data, "LDAP local: trying to establish %s connection\n",
           ldap_ssl ? "encrypted" : "cleartext");
 
 #ifdef LDAP_OPT_NETWORK_TIMEOUT
   ldap_set_option(NULL, LDAP_OPT_NETWORK_TIMEOUT, &ldap_timeout);
@@ -259,13 +259,13 @@
               ldap_err2string(rc));
       status = CURLE_SSL_CERTPROBLEM;
       goto quit;
     }
     server = ldapssl_init(conn->host.name, (int)conn->port, 1);
     if(server == NULL) {
-      failf(data, "LDAP local: Cannot connect to %s:%d",
+      failf(data, "LDAP local: Cannot connect to %s:%hu",
               conn->host.name, conn->port);
       status = CURLE_COULDNT_CONNECT;
       goto quit;
     }
 #elif defined(LDAP_OPT_X_TLS)
     if(data->set.ssl.verifypeer) {
@@ -299,13 +299,13 @@
               ldap_err2string(rc));
       status = CURLE_SSL_CERTPROBLEM;
       goto quit;
     }
     server = ldap_init(conn->host.name, (int)conn->port);
     if(server == NULL) {
-      failf(data, "LDAP local: Cannot connect to %s:%d",
+      failf(data, "LDAP local: Cannot connect to %s:%hu",
               conn->host.name, conn->port);
       status = CURLE_COULDNT_CONNECT;
       goto quit;
     }
     ldap_option = LDAP_OPT_X_TLS_HARD;
     rc = ldap_set_option(server, LDAP_OPT_X_TLS, &ldap_option);
@@ -334,13 +334,13 @@
 #endif
 #endif
 #endif /* CURL_LDAP_USE_SSL */
   } else {
     server = ldap_init(conn->host.name, (int)conn->port);
     if(server == NULL) {
-      failf(data, "LDAP local: Cannot connect to %s:%d",
+      failf(data, "LDAP local: Cannot connect to %s:%hu",
               conn->host.name, conn->port);
       status = CURLE_COULDNT_CONNECT;
       goto quit;
     }
   }
 #ifdef CURL_LDAP_WIN
@@ -485,21 +485,21 @@
 
 /*
  * Return scope-value for a scope-string.
  */
 static int str2scope (const char *p)
 {
-  if(!stricmp(p, "one"))
+  if(strequal(p, "one"))
      return LDAP_SCOPE_ONELEVEL;
-  if(!stricmp(p, "onetree"))
+  if(strequal(p, "onetree"))
      return LDAP_SCOPE_ONELEVEL;
-  if(!stricmp(p, "base"))
+  if(strequal(p, "base"))
      return LDAP_SCOPE_BASE;
-  if(!stricmp(p, "sub"))
+  if(strequal(p, "sub"))
      return LDAP_SCOPE_SUBTREE;
-  if(!stricmp( p, "subtree"))
+  if(strequal( p, "subtree"))
      return LDAP_SCOPE_SUBTREE;
   return (-1);
 }
 
 /*
  * Split 'str' into strings separated by commas.
@@ -579,13 +579,13 @@
   char *p, *q;
   int i;
 
   if(!conn->data ||
       !conn->data->state.path ||
       conn->data->state.path[0] != '/' ||
-      !checkprefix(conn->protostr, conn->data->change.url))
+      !checkprefix("LDAP", conn->data->change.url))
     return LDAP_INVALID_SYNTAX;
 
   ludp->lud_scope = LDAP_SCOPE_BASE;
   ludp->lud_port  = conn->remote_port;
   ludp->lud_host  = conn->host.name;
 
@@ -670,13 +670,13 @@
   return LDAP_SUCCESS;
 }
 
 static int _ldap_url_parse (const struct connectdata *conn,
                             LDAPURLDesc **ludpp)
 {
-  LDAPURLDesc *ludp = calloc(sizeof(*ludp), 1);
+  LDAPURLDesc *ludp = calloc(1, sizeof(*ludp));
   int rc;
 
   *ludpp = NULL;
   if(!ludp)
      return LDAP_NO_MEMORY;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/libcurl.plist /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/libcurl.plist
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/libcurl.plist	2009-11-04 20:35:39.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/libcurl.plist	2010-02-09 18:08:03.000000000 +0800
@@ -12,24 +12,24 @@
 	<string>curl</string>
 	
 	<key>CFBundleIdentifier</key>
 	<string>com.libcurl.libcurl</string>
 	
 	<key>CFBundleVersion</key>
-	<string>7.19.7</string>
+	<string>7.20.0</string>
 
 	<key>CFBundleName</key>
 	<string>libcurl</string>
 
 	<key>CFBundlePackageType</key>
 	<string>FMWK</string>	
 	 
 	<key>CFBundleSignature</key>
 	<string>????</string>	
 	
 	<key>CFBundleShortVersionString</key>
-	<string>libcurl 7.19.7</string>
+	<string>libcurl 7.20.0</string>
 	
 	<key>CFBundleGetInfoString</key>
-	<string>libcurl.plist 7.19.7</string>
+	<string>libcurl.plist 7.20.0</string>
 </dict>
 </plist>
\ No newline at end of file
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/libcurl.vcproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/libcurl.vcproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/libcurl.vcproj	2009-11-04 20:29:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/libcurl.vcproj	2010-02-09 18:07:53.000000000 +0800
@@ -108,12 +108,13 @@
 <File RelativePath="content_encoding.c"></File>
 <File RelativePath="cookie.c"></File>
 <File RelativePath="curl_addrinfo.c"></File>
 <File RelativePath="curl_memrchr.c"></File>
 <File RelativePath="curl_rand.c"></File>
 <File RelativePath="curl_sspi.c"></File>
+<File RelativePath="curl_threads.c"></File>
 <File RelativePath="dict.c"></File>
 <File RelativePath="easy.c"></File>
 <File RelativePath="escape.c"></File>
 <File RelativePath="file.c"></File>
 <File RelativePath="formdata.c"></File>
 <File RelativePath="ftp.c"></File>
@@ -131,12 +132,13 @@
 <File RelativePath="http.c"></File>
 <File RelativePath="http_chunks.c"></File>
 <File RelativePath="http_digest.c"></File>
 <File RelativePath="http_negotiate.c"></File>
 <File RelativePath="http_ntlm.c"></File>
 <File RelativePath="if2ip.c"></File>
+<File RelativePath="imap.c"></File>
 <File RelativePath="inet_ntop.c"></File>
 <File RelativePath="inet_pton.c"></File>
 <File RelativePath="krb4.c"></File>
 <File RelativePath="krb5.c"></File>
 <File RelativePath="ldap.c"></File>
 <File RelativePath="llist.c"></File>
@@ -145,20 +147,24 @@
 <File RelativePath="mprintf.c"></File>
 <File RelativePath="multi.c"></File>
 <File RelativePath="netrc.c"></File>
 <File RelativePath="nonblock.c"></File>
 <File RelativePath="nss.c"></File>
 <File RelativePath="parsedate.c"></File>
+<File RelativePath="pingpong.c"></File>
+<File RelativePath="pop3.c"></File>
 <File RelativePath="progress.c"></File>
 <File RelativePath="qssl.c"></File>
 <File RelativePath="rawstr.c"></File>
+<File RelativePath="rtsp.c"></File>
 <File RelativePath="security.c"></File>
 <File RelativePath="select.c"></File>
 <File RelativePath="sendf.c"></File>
 <File RelativePath="share.c"></File>
 <File RelativePath="slist.c"></File>
+<File RelativePath="smtp.c"></File>
 <File RelativePath="socks.c"></File>
 <File RelativePath="socks_gssapi.c"></File>
 <File RelativePath="socks_sspi.c"></File>
 <File RelativePath="speedcheck.c"></File>
 <File RelativePath="splay.c"></File>
 <File RelativePath="ssh.c"></File>
@@ -186,12 +192,13 @@
 <File RelativePath="curl_ldap.h"></File>
 <File RelativePath="curl_md5.h"></File>
 <File RelativePath="curl_memory.h"></File>
 <File RelativePath="curl_memrchr.h"></File>
 <File RelativePath="curl_rand.h"></File>
 <File RelativePath="curl_sspi.h"></File>
+<File RelativePath="curl_threads.h"></File>
 <File RelativePath="curlx.h"></File>
 <File RelativePath="dict.h"></File>
 <File RelativePath="easyif.h"></File>
 <File RelativePath="escape.h"></File>
 <File RelativePath="file.h"></File>
 <File RelativePath="formdata.h"></File>
@@ -203,31 +210,36 @@
 <File RelativePath="http_chunks.h"></File>
 <File RelativePath="http_digest.h"></File>
 <File RelativePath="http.h"></File>
 <File RelativePath="http_negotiate.h"></File>
 <File RelativePath="http_ntlm.h"></File>
 <File RelativePath="if2ip.h"></File>
+<File RelativePath="imap.h"></File>
 <File RelativePath="inet_ntop.h"></File>
 <File RelativePath="inet_pton.h"></File>
 <File RelativePath="krb4.h"></File>
 <File RelativePath="llist.h"></File>
 <File RelativePath="memdebug.h"></File>
 <File RelativePath="multiif.h"></File>
 <File RelativePath="netrc.h"></File>
 <File RelativePath="nonblock.h"></File>
 <File RelativePath="nssg.h"></File>
 <File RelativePath="parsedate.h"></File>
+<File RelativePath="pingpong.h"></File>
+<File RelativePath="pop3.h"></File>
 <File RelativePath="progress.h"></File>
 <File RelativePath="qssl.h"></File>
 <File RelativePath="rawstr.h"></File>
+<File RelativePath="rtsp.h"></File>
 <File RelativePath="select.h"></File>
 <File RelativePath="sendf.h"></File>
 <File RelativePath="setup.h"></File>
 <File RelativePath="setup_once.h"></File>
 <File RelativePath="share.h"></File>
 <File RelativePath="slist.h"></File>
+<File RelativePath="smtp.h"></File>
 <File RelativePath="sockaddr.h"></File>
 <File RelativePath="socks.h"></File>
 <File RelativePath="speedcheck.h"></File>
 <File RelativePath="splay.h"></File>
 <File RelativePath="ssh.h"></File>
 <File RelativePath="sslgen.h"></File>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.am	2009-11-03 02:45:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.am	2010-02-09 17:35:07.000000000 +0800
@@ -2,35 +2,35 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: Makefile.am,v 1.153 2009-11-02 16:24:11 bagder Exp $
+# $Id: Makefile.am,v 1.156 2010-02-09 09:35:07 bagder Exp $
 ###########################################################################
 AUTOMAKE_OPTIONS = foreign nostdinc
 
 DSP = vc6libcurl.dsp
 VCPROJ = libcurl.vcproj
 
 DOCS = README.encoding README.memoryleak README.ares README.curlx	\
  README.hostip README.multi_socket README.httpauth README.pipelining    \
- README.curl_off_t README.cmake
+ README.curl_off_t README.cmake README.pingpong
 
 CMAKE_DIST = CMakeLists.txt curl_config.h.cmake
 
 EXTRA_DIST = Makefile.b32 Makefile.m32 Makefile.vc6 Makefile.riscos $(DSP) \
  vc6libcurl.dsw config-win32.h config-win32ce.h config-riscos.h            \
  config-mac.h curl_config.h.in makefile.dj config.dos libcurl.plist        \
@@ -47,30 +47,33 @@
 
 # Specify our include paths here, and do it relative to $(top_srcdir) and
 # $(top_builddir), to ensure that these paths which belong to the library
 # being currently built and tested are searched before the library which
 # might possibly already be installed in the system.
 #
-# $(top_builddir)/include is for libcurl's generated curl/curlbuild.h file
+# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h
+# $(top_builddir)/include for generated curlbuild.h included from lib/setup.h
 # $(top_srcdir)/include is for libcurl's external include files
 # $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file
 # $(top_srcdir)/lib is for libcurl's lib/setup.h and other "private" files
 # $(top_builddir)/ares is for in-tree c-ares's generated ares_build.h file
 # $(top_srcdir)/ares is for in-tree c-ares's external include files
 
 if USE_EMBEDDED_ARES
-INCLUDES = -I$(top_builddir)/include \
-           -I$(top_srcdir)/include   \
-           -I$(top_builddir)/lib     \
-           -I$(top_srcdir)/lib       \
-           -I$(top_builddir)/ares    \
+INCLUDES = -I$(top_builddir)/include/curl \
+           -I$(top_builddir)/include      \
+           -I$(top_srcdir)/include        \
+           -I$(top_builddir)/lib          \
+           -I$(top_srcdir)/lib            \
+           -I$(top_builddir)/ares         \
            -I$(top_srcdir)/ares
 else
-INCLUDES = -I$(top_builddir)/include \
-           -I$(top_srcdir)/include   \
-           -I$(top_builddir)/lib     \
+INCLUDES = -I$(top_builddir)/include/curl \
+           -I$(top_builddir)/include      \
+           -I$(top_srcdir)/include        \
+           -I$(top_builddir)/lib          \
            -I$(top_srcdir)/lib
 endif
 
 if SONAME_BUMP
 #
 # Bumping of SONAME conditionally may seem like a weird thing to do, and yeah
@@ -78,15 +81,15 @@
 # yet it is still necessary for a few rare situations. The configure script will
 # attempt to figure out these situations, and it can be forced to consider this
 # to be such a case! See README.curl_off_t for further details.
 #
 # This conditional soname bump SHOULD be removed at next "proper" bump.
 #
-VERSIONINFO=-version-info 6:1:1
+VERSIONINFO=-version-info 7:0:2
 else
-VERSIONINFO=-version-info 5:1:1
+VERSIONINFO=-version-info 6:0:2
 endif
 
 # This flag accepts an argument of the form current[:revision[:age]]. So,
 # passing -version-info 3:12:1 sets current to 3, revision to 12, and age to
 # 1.
 #
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/makefile.amiga /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/makefile.amiga
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/makefile.amiga	2009-10-02 05:17:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/makefile.amiga	2010-01-27 01:06:01.000000000 +0800
@@ -7,23 +7,25 @@
 ATCPSDKI=	/GG/netinclude
 
 
 CC	=	m68k-amigaos-gcc
 CFLAGS	=	-I$(ATCPSDKI) -m68020-60 -O2 -msoft-float -noixemul -g -I. -I../include -W -Wall
 
-OBJS = amigaos.c base64.c connect.c content_encoding.c cookie.c dict.c easy.c \
-	escape.c file.c formdata.c ftp.c getenv.c getinfo.c hash.c hostip.c   \
-	hostip4.c hostsyn.c http.c http_chunks.c http_digest.c		      \
-	http_negotiate.c http_ntlm.c if2ip.c inet_ntop.c inet_pton.c krb4.c   \
-	ldap.c llist.c md5.c memdebug.c mprintf.c multi.c netrc.c parsedate.c \
-	progress.c security.c select.c sendf.c share.c speedcheck.c ssluse.c  \
-	strequal.c strtok.c telnet.c timeval.c transfer.c url.c version.c     \
-	sslgen.c gtls.c strerror.c rawstr.c curl_addrinfo.c curl_rand.c	      \
-	socks_gssapi.c socks_sspi.c curl_sspi.c slist.c nonblock.c            \
-	curl_memrchr.c
-
+OBJS = amigaos.c \
+  file.c timeval.c base64.c hostip.c progress.c formdata.c	\
+  cookie.c http.c sendf.c ftp.c url.c dict.c if2ip.c speedcheck.c	\
+  ldap.c ssluse.c version.c getenv.c escape.c mprintf.c telnet.c	\
+  netrc.c getinfo.c transfer.c strequal.c easy.c security.c krb4.c	\
+  krb5.c memdebug.c http_chunks.c strtok.c connect.c llist.c hash.c	\
+  multi.c content_encoding.c share.c http_digest.c md5.c curl_rand.c	\
+  http_negotiate.c http_ntlm.c inet_pton.c strtoofft.c strerror.c	\
+  hostares.c hostasyn.c hostip4.c hostip6.c hostsyn.c hostthre.c	\
+  inet_ntop.c parsedate.c select.c gtls.c sslgen.c tftp.c splay.c	\
+  strdup.c socks.c ssh.c nss.c qssl.c rawstr.c curl_addrinfo.c          \
+  socks_gssapi.c socks_sspi.c curl_sspi.c slist.c nonblock.c		\
+  curl_memrchr.c imap.c pop3.c smtp.c pingpong.c rtsp.c curl_threads.c
 
 all:	$(OBJS:.c=.o)
 	ar cru libcurl.a $(OBJS:.c=.o)
 	ranlib libcurl.a
 
 install:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.in	2009-11-04 20:26:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.in	2010-02-09 17:35:12.000000000 +0800
@@ -77,13 +77,14 @@
 	curl_rand.lo http_negotiate.lo http_ntlm.lo inet_pton.lo \
 	strtoofft.lo strerror.lo hostares.lo hostasyn.lo hostip4.lo \
 	hostip6.lo hostsyn.lo hostthre.lo inet_ntop.lo parsedate.lo \
 	select.lo gtls.lo sslgen.lo tftp.lo splay.lo strdup.lo \
 	socks.lo ssh.lo nss.lo qssl.lo rawstr.lo curl_addrinfo.lo \
 	socks_gssapi.lo socks_sspi.lo curl_sspi.lo slist.lo \
-	nonblock.lo curl_memrchr.lo
+	nonblock.lo curl_memrchr.lo imap.lo pop3.lo smtp.lo \
+	pingpong.lo rtsp.lo curl_threads.lo
 am__objects_2 =
 am_libcurl_la_OBJECTS = $(am__objects_1) $(am__objects_2)
 libcurl_la_OBJECTS = $(am_libcurl_la_OBJECTS)
 DEFAULT_INCLUDES = 
 depcomp = $(SHELL) $(top_srcdir)/depcomp
 am__depfiles_maybe = depfiles
@@ -110,26 +111,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -140,13 +146,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -206,12 +211,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -272,33 +278,33 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: Makefile.am,v 1.153 2009-11-02 16:24:11 bagder Exp $
+# $Id: Makefile.am,v 1.156 2010-02-09 09:35:07 bagder Exp $
 ###########################################################################
 AUTOMAKE_OPTIONS = foreign nostdinc
 DSP = vc6libcurl.dsp
 VCPROJ = libcurl.vcproj
 DOCS = README.encoding README.memoryleak README.ares README.curlx	\
  README.hostip README.multi_socket README.httpauth README.pipelining    \
- README.curl_off_t README.cmake
+ README.curl_off_t README.cmake README.pingpong
 
 CMAKE_DIST = CMakeLists.txt curl_config.h.cmake
 EXTRA_DIST = Makefile.b32 Makefile.m32 Makefile.vc6 Makefile.riscos $(DSP) \
  vc6libcurl.dsw config-win32.h config-win32ce.h config-riscos.h            \
  config-mac.h curl_config.h.in makefile.dj config.dos libcurl.plist        \
  libcurl.rc config-amigaos.h amigaos.c amigaos.h makefile.amiga		   \
@@ -306,48 +312,51 @@
  config-win32ce.h config-os400.h setup-os400.h config-symbian.h		   \
  Makefile.Watcom config-tpf.h $(DOCS) $(VCPROJ) mk-ca-bundle.pl		   \
  firefox-db2pem.sh $(CMAKE_DIST) config-vxworks.h Makefile.vxworks
 
 CLEANFILES = $(DSP) $(VCPROJ)
 lib_LTLIBRARIES = libcurl.la
-@USE_EMBEDDED_ARES_FALSE@INCLUDES = -I$(top_builddir)/include \
-@USE_EMBEDDED_ARES_FALSE@           -I$(top_srcdir)/include   \
-@USE_EMBEDDED_ARES_FALSE@           -I$(top_builddir)/lib     \
+@USE_EMBEDDED_ARES_FALSE@INCLUDES = -I$(top_builddir)/include/curl \
+@USE_EMBEDDED_ARES_FALSE@           -I$(top_builddir)/include      \
+@USE_EMBEDDED_ARES_FALSE@           -I$(top_srcdir)/include        \
+@USE_EMBEDDED_ARES_FALSE@           -I$(top_builddir)/lib          \
 @USE_EMBEDDED_ARES_FALSE@           -I$(top_srcdir)/lib
 
 
 # Specify our include paths here, and do it relative to $(top_srcdir) and
 # $(top_builddir), to ensure that these paths which belong to the library
 # being currently built and tested are searched before the library which
 # might possibly already be installed in the system.
 #
-# $(top_builddir)/include is for libcurl's generated curl/curlbuild.h file
+# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h
+# $(top_builddir)/include for generated curlbuild.h included from lib/setup.h
 # $(top_srcdir)/include is for libcurl's external include files
 # $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file
 # $(top_srcdir)/lib is for libcurl's lib/setup.h and other "private" files
 # $(top_builddir)/ares is for in-tree c-ares's generated ares_build.h file
 # $(top_srcdir)/ares is for in-tree c-ares's external include files
-@USE_EMBEDDED_ARES_TRUE@INCLUDES = -I$(top_builddir)/include \
-@USE_EMBEDDED_ARES_TRUE@           -I$(top_srcdir)/include   \
-@USE_EMBEDDED_ARES_TRUE@           -I$(top_builddir)/lib     \
-@USE_EMBEDDED_ARES_TRUE@           -I$(top_srcdir)/lib       \
-@USE_EMBEDDED_ARES_TRUE@           -I$(top_builddir)/ares    \
+@USE_EMBEDDED_ARES_TRUE@INCLUDES = -I$(top_builddir)/include/curl \
+@USE_EMBEDDED_ARES_TRUE@           -I$(top_builddir)/include      \
+@USE_EMBEDDED_ARES_TRUE@           -I$(top_srcdir)/include        \
+@USE_EMBEDDED_ARES_TRUE@           -I$(top_builddir)/lib          \
+@USE_EMBEDDED_ARES_TRUE@           -I$(top_srcdir)/lib            \
+@USE_EMBEDDED_ARES_TRUE@           -I$(top_builddir)/ares         \
 @USE_EMBEDDED_ARES_TRUE@           -I$(top_srcdir)/ares
 
-@SONAME_BUMP_FALSE@VERSIONINFO = -version-info 5:1:1
+@SONAME_BUMP_FALSE@VERSIONINFO = -version-info 6:0:2
 
 #
 # Bumping of SONAME conditionally may seem like a weird thing to do, and yeah
 # it is. The problem is that we try to avoid the bump as hard as possible, but
 # yet it is still necessary for a few rare situations. The configure script will
 # attempt to figure out these situations, and it can be forced to consider this
 # to be such a case! See README.curl_off_t for further details.
 #
 # This conditional soname bump SHOULD be removed at next "proper" bump.
 #
-@SONAME_BUMP_TRUE@VERSIONINFO = -version-info 6:1:1
+@SONAME_BUMP_TRUE@VERSIONINFO = -version-info 7:0:2
 
 # This flag accepts an argument of the form current[:revision[:age]]. So,
 # passing -version-info 3:12:1 sets current to 3, revision to 12, and age to
 # 1.
 #
 # Here's the simplified rule guide on how to change -version-info:
@@ -374,25 +383,25 @@
   multi.c content_encoding.c share.c http_digest.c md5.c curl_rand.c	\
   http_negotiate.c http_ntlm.c inet_pton.c strtoofft.c strerror.c	\
   hostares.c hostasyn.c hostip4.c hostip6.c hostsyn.c hostthre.c	\
   inet_ntop.c parsedate.c select.c gtls.c sslgen.c tftp.c splay.c	\
   strdup.c socks.c ssh.c nss.c qssl.c rawstr.c curl_addrinfo.c          \
   socks_gssapi.c socks_sspi.c curl_sspi.c slist.c nonblock.c		\
-  curl_memrchr.c
+  curl_memrchr.c imap.c pop3.c smtp.c pingpong.c rtsp.c curl_threads.c
 
 HHEADERS = arpa_telnet.h netrc.h file.h timeval.h qssl.h hostip.h	\
   progress.h formdata.h cookie.h http.h sendf.h ftp.h url.h dict.h	\
   if2ip.h speedcheck.h urldata.h curl_ldap.h ssluse.h escape.h telnet.h	\
   getinfo.h strequal.h krb4.h memdebug.h http_chunks.h curl_rand.h	\
   strtok.h connect.h llist.h hash.h content_encoding.h share.h		\
   curl_md5.h http_digest.h http_negotiate.h http_ntlm.h inet_pton.h	\
   strtoofft.h strerror.h inet_ntop.h curlx.h curl_memory.h setup.h	\
   transfer.h select.h easyif.h multiif.h parsedate.h sslgen.h gtls.h	\
   tftp.h sockaddr.h splay.h strdup.h setup_once.h socks.h ssh.h nssg.h	\
   curl_base64.h rawstr.h curl_addrinfo.h curl_sspi.h slist.h nonblock.h	\
-  curl_memrchr.h
+  curl_memrchr.h imap.h pop3.h smtp.h pingpong.h rtsp.h curl_threads.h
 
 
 # Makefile.inc provides the CSOURCES and HHEADERS defines
 libcurl_la_SOURCES = $(CSOURCES) $(HHEADERS)
 WIN32SOURCES = $(CSOURCES)
 WIN32HEADERS = $(HHEADERS) config-win32.h
@@ -490,12 +499,13 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/content_encoding.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cookie.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/curl_addrinfo.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/curl_memrchr.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/curl_rand.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/curl_sspi.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/curl_threads.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dict.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/easy.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/escape.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/formdata.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ftp.Plo@am__quote@
@@ -513,12 +523,13 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/http.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/http_chunks.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/http_digest.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/http_negotiate.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/http_ntlm.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/if2ip.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/imap.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inet_ntop.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inet_pton.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/krb4.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/krb5.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldap.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/llist.Plo@am__quote@
@@ -527,20 +538,24 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mprintf.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/netrc.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nonblock.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nss.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parsedate.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pingpong.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pop3.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/progress.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qssl.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rawstr.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rtsp.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/security.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/select.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sendf.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/share.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slist.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/smtp.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socks.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socks_gssapi.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socks_sspi.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/speedcheck.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/splay.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ssh.Plo@am__quote@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.inc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.inc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.inc	2009-10-02 05:17:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.inc	2010-01-27 01:06:01.000000000 +0800
@@ -8,20 +8,19 @@
   multi.c content_encoding.c share.c http_digest.c md5.c curl_rand.c	\
   http_negotiate.c http_ntlm.c inet_pton.c strtoofft.c strerror.c	\
   hostares.c hostasyn.c hostip4.c hostip6.c hostsyn.c hostthre.c	\
   inet_ntop.c parsedate.c select.c gtls.c sslgen.c tftp.c splay.c	\
   strdup.c socks.c ssh.c nss.c qssl.c rawstr.c curl_addrinfo.c          \
   socks_gssapi.c socks_sspi.c curl_sspi.c slist.c nonblock.c		\
-  curl_memrchr.c
+  curl_memrchr.c imap.c pop3.c smtp.c pingpong.c rtsp.c curl_threads.c
 
 HHEADERS = arpa_telnet.h netrc.h file.h timeval.h qssl.h hostip.h	\
   progress.h formdata.h cookie.h http.h sendf.h ftp.h url.h dict.h	\
   if2ip.h speedcheck.h urldata.h curl_ldap.h ssluse.h escape.h telnet.h	\
   getinfo.h strequal.h krb4.h memdebug.h http_chunks.h curl_rand.h	\
   strtok.h connect.h llist.h hash.h content_encoding.h share.h		\
   curl_md5.h http_digest.h http_negotiate.h http_ntlm.h inet_pton.h	\
   strtoofft.h strerror.h inet_ntop.h curlx.h curl_memory.h setup.h	\
   transfer.h select.h easyif.h multiif.h parsedate.h sslgen.h gtls.h	\
   tftp.h sockaddr.h splay.h strdup.h setup_once.h socks.h ssh.h nssg.h	\
   curl_base64.h rawstr.h curl_addrinfo.h curl_sspi.h slist.h nonblock.h	\
-  curl_memrchr.h
-
+  curl_memrchr.h imap.h pop3.h smtp.h pingpong.h rtsp.h curl_threads.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.riscos /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.riscos
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.riscos	2009-10-02 05:17:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.riscos	2010-01-27 01:06:01.000000000 +0800
@@ -11,13 +11,14 @@
 	o.http_chunks o.inet_ntop o.inet_pton o.if2ip o.krb4 o.ldap \
 	o.memdebug o.mprintf o.netrc o.parsedate o.progress \
 	o.security o.select o.sendf o.speedcheck o.ssluse \
 	o.strequal o.strtok o.telnet o.timeval \
 	o.transfer o.url o.version o.strtoofft o.sslgen o.gtls \
 	o.rawstr o.curl_addrinfo o.slist o.nonblock o.curl_rand \
-	o.curl_memrchr
+	o.curl_memrchr o.imap o.pop3 o.smtp o.pingpong o.rtsp \
+	o.curl_threads
 
 
 # Compile options:
 linkopts	= -o libcurl
 compileropts	= -mpoke-function-name -IUtilLib: -mthrowback 
 
@@ -41,12 +42,15 @@
 o.curl_memrchr:	c.curl_memrchr
 		gcc $(compileropts) -c -o curl_memrchr.o c.curl_memrchr
 
 o.curl_rand:	c.curl_rand
 		gcc $(compileropts) -c -o curl_rand.o c.curl_rand
 
+o.curl_threads:	c.curl_threads
+		gcc $(compileropts) -c -o curl_threads.o c.curl_threads
+
 o.dict:	c.dict
 		gcc $(compileropts) -c -o dict.o c.dict
 
 o.dllinit:	c.dllinit
 		gcc $(compileropts) -c -o dllinit.o c.dllinit
 
@@ -89,12 +93,15 @@
 o.http_chunks:	c.http_chunks
 		gcc $(compileropts) -c -o http_chunks.o c.http_chunks
 
 o.if2ip:	c.if2ip
 		gcc $(compileropts) -c -o if2ip.o c.if2ip
 
+o.imap:		c.imap
+		gcc $(compileropts) -c -o imap.o c.imap
+
 o.inet_ntop:	c.inet_ntop
 		gcc $(compileropts) -c -o inet_ntop.o c.inet_ntop
 
 o.inet_pton:	c.inet_pton
 		gcc $(compileropts) -c -o inet_pton.o c.inet_pton
 
@@ -113,27 +120,39 @@
 o.netrc:	c.netrc
 		gcc $(compileropts) -c -o netrc.o c.netrc
 
 o.parsedate:	c.parsedate
 		gcc $(compileropts) -c -o parsedate.o c.parsedate
 
+o.pingpong:	c.pingpong
+		gcc $(compileropts) -c -o pingpong.o c.pingpong
+
+o.pop3:		c.pop3
+		gcc $(compileropts) -c -o pop3.o c.pop3
+
 o.progress:	c.progress
 		gcc $(compileropts) -c -o progress.o c.progress
 
+o.rtsp:		c.rtsp
+		gcc $(compileropts) -c -o rtsp.o c.rtsp
+
 o.security:	c.security
 		gcc $(compileropts) -c -o security.o c.security
 
 o.select:	c.select
 		gcc $(compileropts) -c -o select.o c.select
 
 o.sendf:	c.sendf
 		gcc $(compileropts) -c -o sendf.o c.sendf
 
 o.slist:	c.slist
 		gcc $(compileropts) -c -o slist.o c.slist
 
+o.smtp:		c.smtp
+		gcc $(compileropts) -c -o smtp.o c.smtp
+
 o.speedcheck:	c.speedcheck
 		gcc $(compileropts) -c -o speedcheck.o c.speedcheck
 
 o.gtls:	c.gtls
 		gcc $(compileropts) -c -o gtls.o c.gtls
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.vc6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.vc6
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.vc6	2009-10-02 05:17:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.vc6	2010-01-27 01:06:01.000000000 +0800
@@ -450,12 +450,13 @@
 	$(DIROBJ)\content_encoding.obj \
 	$(DIROBJ)\cookie.obj \
 	$(DIROBJ)\curl_addrinfo.obj \
 	$(DIROBJ)\curl_memrchr.obj \
 	$(DIROBJ)\curl_rand.obj \
 	$(DIROBJ)\curl_sspi.obj \
+	$(DIROBJ)\curl_threads.obj \
 	$(DIROBJ)\dict.obj \
 	$(DIROBJ)\easy.obj \
 	$(DIROBJ)\escape.obj \
 	$(DIROBJ)\file.obj \
 	$(DIROBJ)\formdata.obj \
 	$(DIROBJ)\ftp.obj \
@@ -473,29 +474,34 @@
 	$(DIROBJ)\http.obj \
 	$(DIROBJ)\http_chunks.obj \
 	$(DIROBJ)\http_digest.obj \
 	$(DIROBJ)\http_negotiate.obj \
 	$(DIROBJ)\http_ntlm.obj \
 	$(DIROBJ)\if2ip.obj \
+	$(DIROBJ)\imap.obj \
 	$(DIROBJ)\inet_ntop.obj \
 	$(DIROBJ)\inet_pton.obj \
 	$(DIROBJ)\ldap.obj \
 	$(DIROBJ)\llist.obj \
 	$(DIROBJ)\md5.obj \
 	$(DIROBJ)\memdebug.obj \
 	$(DIROBJ)\mprintf.obj \
 	$(DIROBJ)\multi.obj \
 	$(DIROBJ)\netrc.obj \
         $(DIROBJ)\nonblock.obj \
 	$(DIROBJ)\parsedate.obj \
+	$(DIROBJ)\pingpong.obj \
+	$(DIROBJ)\pop3.obj \
 	$(DIROBJ)\progress.obj \
 	$(DIROBJ)\rawstr.obj \
+	$(DIROBJ)\rtsp.obj \
 	$(DIROBJ)\select.obj \
 	$(DIROBJ)\sendf.obj \
 	$(DIROBJ)\share.obj \
 	$(DIROBJ)\slist.obj \
+	$(DIROBJ)\smtp.obj \
 	$(DIROBJ)\socks.obj \
 	$(DIROBJ)\socks_gssapi.obj \
 	$(DIROBJ)\socks_sspi.obj \
 	$(DIROBJ)\speedcheck.obj \
 	$(DIROBJ)\splay.obj \
 	$(DIROBJ)\ssh.obj \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.vc8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.vc8
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.vc8	2009-11-04 20:35:39.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.vc8	2010-02-09 18:08:03.000000000 +0800
@@ -450,12 +450,13 @@
 	$(DIROBJ)\content_encoding.obj \
 	$(DIROBJ)\cookie.obj \
 	$(DIROBJ)\curl_addrinfo.obj \
 	$(DIROBJ)\curl_memrchr.obj \
 	$(DIROBJ)\curl_rand.obj \
 	$(DIROBJ)\curl_sspi.obj \
+	$(DIROBJ)\curl_threads.obj \
 	$(DIROBJ)\dict.obj \
 	$(DIROBJ)\easy.obj \
 	$(DIROBJ)\escape.obj \
 	$(DIROBJ)\file.obj \
 	$(DIROBJ)\formdata.obj \
 	$(DIROBJ)\ftp.obj \
@@ -473,29 +474,34 @@
 	$(DIROBJ)\http.obj \
 	$(DIROBJ)\http_chunks.obj \
 	$(DIROBJ)\http_digest.obj \
 	$(DIROBJ)\http_negotiate.obj \
 	$(DIROBJ)\http_ntlm.obj \
 	$(DIROBJ)\if2ip.obj \
+	$(DIROBJ)\imap.obj \
 	$(DIROBJ)\inet_ntop.obj \
 	$(DIROBJ)\inet_pton.obj \
 	$(DIROBJ)\ldap.obj \
 	$(DIROBJ)\llist.obj \
 	$(DIROBJ)\md5.obj \
 	$(DIROBJ)\memdebug.obj \
 	$(DIROBJ)\mprintf.obj \
 	$(DIROBJ)\multi.obj \
 	$(DIROBJ)\netrc.obj \
         $(DIROBJ)\nonblock.obj \
 	$(DIROBJ)\parsedate.obj \
+	$(DIROBJ)\pingpong.obj \
+	$(DIROBJ)\pop3.obj \
 	$(DIROBJ)\progress.obj \
 	$(DIROBJ)\rawstr.obj \
+	$(DIROBJ)\rtsp.obj \
 	$(DIROBJ)\select.obj \
 	$(DIROBJ)\sendf.obj \
 	$(DIROBJ)\share.obj \
 	$(DIROBJ)\slist.obj \
+	$(DIROBJ)\smtp.obj \
 	$(DIROBJ)\socks.obj \
 	$(DIROBJ)\socks_gssapi.obj \
 	$(DIROBJ)\socks_sspi.obj \
 	$(DIROBJ)\speedcheck.obj \
 	$(DIROBJ)\splay.obj \
 	$(DIROBJ)\ssh.obj \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.vc9 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.vc9
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.vc9	2009-11-04 20:35:39.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.vc9	2010-02-09 18:08:03.000000000 +0800
@@ -450,12 +450,13 @@
 	$(DIROBJ)\content_encoding.obj \
 	$(DIROBJ)\cookie.obj \
 	$(DIROBJ)\curl_addrinfo.obj \
 	$(DIROBJ)\curl_memrchr.obj \
 	$(DIROBJ)\curl_rand.obj \
 	$(DIROBJ)\curl_sspi.obj \
+	$(DIROBJ)\curl_threads.obj \
 	$(DIROBJ)\dict.obj \
 	$(DIROBJ)\easy.obj \
 	$(DIROBJ)\escape.obj \
 	$(DIROBJ)\file.obj \
 	$(DIROBJ)\formdata.obj \
 	$(DIROBJ)\ftp.obj \
@@ -473,29 +474,34 @@
 	$(DIROBJ)\http.obj \
 	$(DIROBJ)\http_chunks.obj \
 	$(DIROBJ)\http_digest.obj \
 	$(DIROBJ)\http_negotiate.obj \
 	$(DIROBJ)\http_ntlm.obj \
 	$(DIROBJ)\if2ip.obj \
+	$(DIROBJ)\imap.obj \
 	$(DIROBJ)\inet_ntop.obj \
 	$(DIROBJ)\inet_pton.obj \
 	$(DIROBJ)\ldap.obj \
 	$(DIROBJ)\llist.obj \
 	$(DIROBJ)\md5.obj \
 	$(DIROBJ)\memdebug.obj \
 	$(DIROBJ)\mprintf.obj \
 	$(DIROBJ)\multi.obj \
 	$(DIROBJ)\netrc.obj \
         $(DIROBJ)\nonblock.obj \
 	$(DIROBJ)\parsedate.obj \
+	$(DIROBJ)\pingpong.obj \
+	$(DIROBJ)\pop3.obj \
 	$(DIROBJ)\progress.obj \
 	$(DIROBJ)\rawstr.obj \
+	$(DIROBJ)\rtsp.obj \
 	$(DIROBJ)\select.obj \
 	$(DIROBJ)\sendf.obj \
 	$(DIROBJ)\share.obj \
 	$(DIROBJ)\slist.obj \
+	$(DIROBJ)\smtp.obj \
 	$(DIROBJ)\socks.obj \
 	$(DIROBJ)\socks_gssapi.obj \
 	$(DIROBJ)\socks_sspi.obj \
 	$(DIROBJ)\speedcheck.obj \
 	$(DIROBJ)\splay.obj \
 	$(DIROBJ)\ssh.obj \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.Watcom /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.Watcom
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/Makefile.Watcom	2009-10-02 05:17:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/Makefile.Watcom	2010-02-05 05:41:46.000000000 +0800
@@ -1,11 +1,11 @@
 #
 #  Watcom / OpenWatcom / Win32 makefile for libcurl.
 #  G. Vanem <gvanem@broadpark.no>
 #
-# $Id: Makefile.Watcom,v 1.34 2009-09-28 16:05:20 yangtse Exp $
+# $Id: Makefile.Watcom,v 1.38 2010-02-03 23:07:11 danf Exp $
 
 TARGETS = libcurl_wc.dll libcurl_wc_imp.lib libcurl_wc.lib
 
 CC = wcc386
 
 CFLAGS = -3s -mf -d3 -hc -zff -zgf -zq -zm -zc -s -fr=con -w2 -fpi -oilrtfm -bt=nt &
@@ -36,44 +36,29 @@
 
 OBJ_BASE = WC_Win32.obj
 C_ARG    = $(OBJ_BASE)\wcc386.arg
 LINK_ARG = $(OBJ_BASE)\dyn\wlink.arg
 LIB_ARG  = $(OBJ_BASE)\stat\wlib.arg
 
-OBJS = $(OBJ_DIR)\base64.obj           $(OBJ_DIR)\connect.obj        &
-       $(OBJ_DIR)\content_encoding.obj $(OBJ_DIR)\cookie.obj         &
-       $(OBJ_DIR)\curl_addrinfo.obj    $(OBJ_DIR)\dict.obj           &
-       $(OBJ_DIR)\easy.obj             $(OBJ_DIR)\escape.obj         &
-       $(OBJ_DIR)\file.obj             $(OBJ_DIR)\formdata.obj       &
-       $(OBJ_DIR)\ftp.obj              $(OBJ_DIR)\getenv.obj         &
-       $(OBJ_DIR)\getinfo.obj          $(OBJ_DIR)\gtls.obj           &
-       $(OBJ_DIR)\hash.obj             $(OBJ_DIR)\hostares.obj       &
-       $(OBJ_DIR)\hostasyn.obj         $(OBJ_DIR)\hostip.obj         &
-       $(OBJ_DIR)\hostip4.obj          $(OBJ_DIR)\hostip6.obj        &
-       $(OBJ_DIR)\hostsyn.obj          $(OBJ_DIR)\hostthre.obj       &
-       $(OBJ_DIR)\http.obj             $(OBJ_DIR)\http_chunks.obj    &
-       $(OBJ_DIR)\http_digest.obj      $(OBJ_DIR)\http_negotiate.obj &
-       $(OBJ_DIR)\http_ntlm.obj        $(OBJ_DIR)\if2ip.obj          &
-       $(OBJ_DIR)\inet_ntop.obj        $(OBJ_DIR)\inet_pton.obj      &
-       $(OBJ_DIR)\krb4.obj             $(OBJ_DIR)\ldap.obj           &
-       $(OBJ_DIR)\llist.obj            $(OBJ_DIR)\md5.obj            &
-       $(OBJ_DIR)\memdebug.obj         $(OBJ_DIR)\mprintf.obj        &
-       $(OBJ_DIR)\multi.obj            $(OBJ_DIR)\netrc.obj          &
-       $(OBJ_DIR)\parsedate.obj        $(OBJ_DIR)\progress.obj       &
-       $(OBJ_DIR)\security.obj         $(OBJ_DIR)\rawstr.obj         &
-       $(OBJ_DIR)\select.obj           $(OBJ_DIR)\sendf.obj          &
-       $(OBJ_DIR)\share.obj            $(OBJ_DIR)\socks.obj          &
-       $(OBJ_DIR)\speedcheck.obj       $(OBJ_DIR)\splay.obj          &
-       $(OBJ_DIR)\sslgen.obj           $(OBJ_DIR)\ssluse.obj         &
-       $(OBJ_DIR)\strequal.obj         $(OBJ_DIR)\strerror.obj       &
-       $(OBJ_DIR)\strtok.obj           $(OBJ_DIR)\strtoofft.obj      &
-       $(OBJ_DIR)\telnet.obj           $(OBJ_DIR)\tftp.obj           &
-       $(OBJ_DIR)\timeval.obj          $(OBJ_DIR)\transfer.obj       &
-       $(OBJ_DIR)\url.obj              $(OBJ_DIR)\version.obj        &
-       $(OBJ_DIR)\slist.obj            $(OBJ_DIR)\nonblock.obj       &
-       $(OBJ_DIR)\curl_rand.obj        $(OBJ_DIR)\curl_memrchr.obj
+# Unfortunately, we can't include Makefile.inc here because wmake doesn't
+# use backslash as the line continuation character by default
+CSOURCES = file.c timeval.c base64.c hostip.c progress.c formdata.c	&
+  cookie.c http.c sendf.c ftp.c url.c dict.c if2ip.c speedcheck.c	&
+  ldap.c ssluse.c version.c getenv.c escape.c mprintf.c telnet.c	&
+  netrc.c getinfo.c transfer.c strequal.c easy.c security.c krb4.c	&
+  krb5.c memdebug.c http_chunks.c strtok.c connect.c llist.c hash.c	&
+  multi.c content_encoding.c share.c http_digest.c md5.c curl_rand.c	&
+  http_negotiate.c http_ntlm.c inet_pton.c strtoofft.c strerror.c	&
+  hostares.c hostasyn.c hostip4.c hostip6.c hostsyn.c hostthre.c	&
+  inet_ntop.c parsedate.c select.c gtls.c sslgen.c tftp.c splay.c	&
+  strdup.c socks.c ssh.c nss.c qssl.c rawstr.c curl_addrinfo.c          &
+  socks_gssapi.c socks_sspi.c curl_sspi.c slist.c nonblock.c		&
+  curl_memrchr.c imap.c pop3.c smtp.c pingpong.c rtsp.c curl_threads.c
+
+OBJS = $(CSOURCES:.c=.obj)
+OBJS = $OBJ_DIR\$(OBJS: = $OBJ_DIR\)
 
 #
 # Use $(OBJS) as a template to generate $(OBJS_STAT) and $(OBJS_DYN).
 #
 OBJ_DIR   = $(OBJ_BASE)\stat
 OBJS_STAT = $+ $(OBJS) $-
@@ -551,6 +536,30 @@
 $(OBJ_DIR)\curl_memrchr.obj: curl_memrchr.c setup.h config-win32.h &
   ..\include\curl\curlbuild.h ..\include\curl\curlrules.h setup_once.h &
   ..\include\curl\curl.h ..\include\curl\curlver.h &
   ..\include\curl\curlrules.h ..\include\curl\easy.h &
   ..\include\curl\multi.h ..\include\curl\curl.h curl_memrchr.h &
   ..\include\curl\mprintf.h curl_memory.h memdebug.h
+$(OBJ_DIR)\imap.obj: imap.c setup.h config-win32.h &
+  ..\include\curl\curlbuild.h ..\include\curl\curlrules.h setup_once.h &
+  ..\include\curl\curl.h ..\include\curl\curlver.h &
+  ..\include\curl\curlrules.h ..\include\curl\easy.h &
+  ..\include\curl\multi.h ..\include\curl\curl.h imap.h &
+  ..\include\curl\mprintf.h curl_memory.h memdebug.h
+$(OBJ_DIR)\pop3.obj: pop3.c setup.h config-win32.h &
+  ..\include\curl\curlbuild.h ..\include\curl\curlrules.h setup_once.h &
+  ..\include\curl\curl.h ..\include\curl\curlver.h &
+  ..\include\curl\curlrules.h ..\include\curl\easy.h &
+  ..\include\curl\multi.h ..\include\curl\curl.h pop3.h &
+  ..\include\curl\mprintf.h curl_memory.h memdebug.h
+$(OBJ_DIR)\smtp.obj: smtp.c setup.h config-win32.h &
+  ..\include\curl\curlbuild.h ..\include\curl\curlrules.h setup_once.h &
+  ..\include\curl\curl.h ..\include\curl\curlver.h &
+  ..\include\curl\curlrules.h ..\include\curl\easy.h &
+  ..\include\curl\multi.h ..\include\curl\curl.h smtp.h &
+  ..\include\curl\mprintf.h curl_memory.h memdebug.h
+$(OBJ_DIR)\pingpong.obj: pingpong.c setup.h config-win32.h &
+  ..\include\curl\curlbuild.h ..\include\curl\curlrules.h setup_once.h &
+  ..\include\curl\curl.h ..\include\curl\curlver.h &
+  ..\include\curl\curlrules.h ..\include\curl\easy.h &
+  ..\include\curl\multi.h ..\include\curl\curl.h pingpong.h &
+  ..\include\curl\mprintf.h curl_memory.h memdebug.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/memdebug.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/memdebug.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/memdebug.c	2009-10-30 05:26:30.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/memdebug.c	2010-01-22 20:14:35.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: memdebug.c,v 1.65 2009-10-29 04:02:21 yangtse Exp $
+ * $Id: memdebug.c,v 1.68 2010-01-18 20:22:04 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifdef CURLDEBUG
 #include <curl/curl.h>
@@ -33,21 +33,26 @@
 #define _MPRINTF_REPLACE
 #include <curl/mprintf.h>
 #include "urldata.h"
 #include <stdio.h>
 #include <string.h>
 #include <stdlib.h>
+#include <stdarg.h>
 
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
 
 #define MEMDEBUG_NODEFINES /* don't redefine the standard functions */
 #include "curl_memory.h"
 #include "memdebug.h"
 
+#ifndef HAVE_ASSERT_H
+#  define assert(x) do { } while (0)
+#endif
+
 struct memdebug {
   size_t size;
   union {
     double d;
     void * p;
   } mem[1];
@@ -97,39 +102,43 @@
 static bool countcheck(const char *func, int line, const char *source)
 {
   /* if source is NULL, then the call is made internally and this check
      should not be made */
   if(memlimit && source) {
     if(!memsize) {
-      if(logfile && source)
-        fprintf(logfile, "LIMIT %s:%d %s reached memlimit\n",
-                source, line, func);
-      if(source)
+      if(source) {
+        /* log to file */
+        curl_memlog("LIMIT %s:%d %s reached memlimit\n",
+                    source, line, func);
+        /* log to stderr also */
         fprintf(stderr, "LIMIT %s:%d %s reached memlimit\n",
                 source, line, func);
+      }
       SET_ERRNO(ENOMEM);
       return TRUE; /* RETURN ERROR! */
     }
     else
       memsize--; /* countdown */
 
     /* log the countdown */
-    if(logfile && source)
-      fprintf(logfile, "LIMIT %s:%d %ld ALLOCS left\n",
-              source, line, memsize);
+    if(source)
+      curl_memlog("LIMIT %s:%d %ld ALLOCS left\n",
+                  source, line, memsize);
 
   }
 
   return FALSE; /* allow this */
 }
 
 void *curl_domalloc(size_t wantedsize, int line, const char *source)
 {
   struct memdebug *mem;
   size_t size;
 
+  assert(wantedsize != 0);
+
   if(countcheck("malloc", line, source))
     return NULL;
 
   /* alloc at least 64 bytes */
   size = sizeof(struct memdebug)+wantedsize;
 
@@ -137,24 +146,27 @@
   if(mem) {
     /* fill memory with junk */
     memset(mem->mem, 0xA5, wantedsize);
     mem->size = wantedsize;
   }
 
-  if(logfile && source)
-    fprintf(logfile, "MEM %s:%d malloc(%zd) = %p\n",
-            source, line, wantedsize, mem ? mem->mem : 0);
+  if(source)
+    curl_memlog("MEM %s:%d malloc(%zd) = %p\n",
+                source, line, wantedsize, mem ? mem->mem : 0);
   return (mem ? mem->mem : NULL);
 }
 
 void *curl_docalloc(size_t wanted_elements, size_t wanted_size,
                     int line, const char *source)
 {
   struct memdebug *mem;
   size_t size, user_size;
 
+  assert(wanted_elements != 0);
+  assert(wanted_size != 0);
+
   if(countcheck("calloc", line, source))
     return NULL;
 
   /* alloc at least 64 bytes */
   user_size = wanted_size * wanted_elements;
   size = sizeof(struct memdebug) + user_size;
@@ -163,37 +175,37 @@
   if(mem) {
     /* fill memory with zeroes */
     memset(mem->mem, 0, user_size);
     mem->size = user_size;
   }
 
-  if(logfile && source)
-    fprintf(logfile, "MEM %s:%d calloc(%zu,%zu) = %p\n",
-            source, line, wanted_elements, wanted_size, mem ? mem->mem : 0);
+  if(source)
+    curl_memlog("MEM %s:%d calloc(%zu,%zu) = %p\n",
+                source, line, wanted_elements, wanted_size, mem?mem->mem:0);
   return (mem ? mem->mem : NULL);
 }
 
 char *curl_dostrdup(const char *str, int line, const char *source)
 {
   char *mem;
   size_t len;
 
-  DEBUGASSERT(str != NULL);
+  assert(str != NULL);
 
   if(countcheck("strdup", line, source))
     return NULL;
 
   len=strlen(str)+1;
 
   mem=curl_domalloc(len, 0, NULL); /* NULL prevents logging */
   if(mem)
     memcpy(mem, str, len);
 
-  if(logfile)
-    fprintf(logfile, "MEM %s:%d strdup(%p) (%zu) = %p\n",
-            source, line, str, len, mem);
+  if(source)
+    curl_memlog("MEM %s:%d strdup(%p) (%zu) = %p\n",
+                source, line, str, len, mem);
 
   return mem;
 }
 
 /* We provide a realloc() that accepts a NULL as pointer, which then
    performs a malloc(). In order to work with ares. */
@@ -201,22 +213,24 @@
                      int line, const char *source)
 {
   struct memdebug *mem=NULL;
 
   size_t size = sizeof(struct memdebug)+wantedsize;
 
+  assert(wantedsize != 0);
+
   if(countcheck("realloc", line, source))
     return NULL;
 
   if(ptr)
     mem = (struct memdebug *)((char *)ptr - offsetof(struct memdebug, mem));
 
   mem = (Curl_crealloc)(mem, size);
-  if(logfile)
-    fprintf(logfile, "MEM %s:%d realloc(%p, %zu) = %p\n",
-            source, line, ptr, wantedsize, mem?mem->mem:NULL);
+  if(source)
+    curl_memlog("MEM %s:%d realloc(%p, %zu) = %p\n",
+                source, line, ptr, wantedsize, mem?mem->mem:NULL);
 
   if(mem) {
     mem->size = wantedsize;
     return mem->mem;
   }
 
@@ -224,54 +238,54 @@
 }
 
 void curl_dofree(void *ptr, int line, const char *source)
 {
   struct memdebug *mem;
 
-  DEBUGASSERT(ptr != NULL);
+  assert(ptr != NULL);
 
   mem = (struct memdebug *)((char *)ptr - offsetof(struct memdebug, mem));
 
   /* destroy  */
   memset(mem->mem, 0x13, mem->size);
 
   /* free for real */
   (Curl_cfree)(mem);
 
-  if(logfile)
-    fprintf(logfile, "MEM %s:%d free(%p)\n", source, line, ptr);
+  if(source)
+    curl_memlog("MEM %s:%d free(%p)\n", source, line, ptr);
 }
 
 int curl_socket(int domain, int type, int protocol, int line,
                 const char *source)
 {
   int sockfd=socket(domain, type, protocol);
-  if(logfile && (sockfd!=-1))
-    fprintf(logfile, "FD %s:%d socket() = %d\n",
-            source, line, sockfd);
+  if(source && (sockfd!=-1))
+    curl_memlog("FD %s:%d socket() = %d\n",
+                source, line, sockfd);
   return sockfd;
 }
 
 int curl_accept(int s, void *saddr, void *saddrlen,
                 int line, const char *source)
 {
   struct sockaddr *addr = (struct sockaddr *)saddr;
   curl_socklen_t *addrlen = (curl_socklen_t *)saddrlen;
   int sockfd=accept(s, addr, addrlen);
-  if(logfile)
-    fprintf(logfile, "FD %s:%d accept() = %d\n",
-            source, line, sockfd);
+  if(source)
+    curl_memlog("FD %s:%d accept() = %d\n",
+                source, line, sockfd);
   return sockfd;
 }
 
 /* separate function to allow libcurl to mark a "faked" close */
 void curl_mark_sclose(int sockfd, int line, const char *source)
 {
-  if(logfile)
-    fprintf(logfile, "FD %s:%d sclose(%d)\n",
-            source, line, sockfd);
+  if(source)
+    curl_memlog("FD %s:%d sclose(%d)\n",
+                source, line, sockfd);
 }
 
 /* this is our own defined way to close sockets on *ALL* platforms */
 int curl_sclose(int sockfd, int line, const char *source)
 {
   int res=sclose(sockfd);
@@ -280,37 +294,67 @@
 }
 
 FILE *curl_fopen(const char *file, const char *mode,
                  int line, const char *source)
 {
   FILE *res=fopen(file, mode);
-  if(logfile)
-    fprintf(logfile, "FILE %s:%d fopen(\"%s\",\"%s\") = %p\n",
-            source, line, file, mode, res);
+  if(source)
+    curl_memlog("FILE %s:%d fopen(\"%s\",\"%s\") = %p\n",
+                source, line, file, mode, res);
   return res;
 }
 
 #ifdef HAVE_FDOPEN
 FILE *curl_fdopen(int filedes, const char *mode,
                   int line, const char *source)
 {
   FILE *res=fdopen(filedes, mode);
-  if(logfile)
-    fprintf(logfile, "FILE %s:%d fdopen(\"%d\",\"%s\") = %p\n",
-            source, line, filedes, mode, res);
+  if(source)
+    curl_memlog("FILE %s:%d fdopen(\"%d\",\"%s\") = %p\n",
+                source, line, filedes, mode, res);
   return res;
 }
 #endif
 
 int curl_fclose(FILE *file, int line, const char *source)
 {
   int res;
 
-  DEBUGASSERT(file != NULL);
+  assert(file != NULL);
 
   res=fclose(file);
-  if(logfile)
-    fprintf(logfile, "FILE %s:%d fclose(%p)\n",
-            source, line, file);
+  if(source)
+    curl_memlog("FILE %s:%d fclose(%p)\n",
+                source, line, file);
   return res;
 }
+
+#define LOGLINE_BUFSIZE  1024
+
+/* this does the writting to the memory tracking log file */
+void curl_memlog(const char *format, ...)
+{
+  char *buf;
+  int nchars;
+  va_list ap;
+
+  if(!logfile)
+    return;
+
+  buf = (Curl_cmalloc)(LOGLINE_BUFSIZE);
+  if(!buf)
+    return;
+
+  va_start(ap, format);
+  nchars = vsnprintf(buf, LOGLINE_BUFSIZE, format, ap);
+  va_end(ap);
+
+  if(nchars > LOGLINE_BUFSIZE - 1)
+    nchars = LOGLINE_BUFSIZE - 1;
+
+  if(nchars > 0)
+    fwrite(buf, 1, nchars, logfile);
+
+  (Curl_cfree)(buf);
+}
+
 #endif /* CURLDEBUG */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/memdebug.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/memdebug.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/memdebug.h	2009-10-30 05:26:30.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/memdebug.h	2010-01-19 19:38:11.000000000 +0800
@@ -5,26 +5,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: memdebug.h,v 1.41 2009-10-29 04:02:21 yangtse Exp $
+ * $Id: memdebug.h,v 1.43 2010-01-19 01:30:07 yangtse Exp $
  ***************************************************************************/
 
 /*
  * CAUTION: this header is designed to work when included by the app-side
  * as well as the library. Do not mix with library internals!
  */
@@ -51,12 +51,13 @@
 CURL_EXTERN void *curl_docalloc(size_t elements, size_t size, int line, const char *source);
 CURL_EXTERN void *curl_dorealloc(void *ptr, size_t size, int line, const char *source);
 CURL_EXTERN void curl_dofree(void *ptr, int line, const char *source);
 CURL_EXTERN char *curl_dostrdup(const char *str, int line, const char *source);
 CURL_EXTERN void curl_memdebug(const char *logname);
 CURL_EXTERN void curl_memlimit(long limit);
+CURL_EXTERN void curl_memlog(const char *format, ...);
 
 /* file descriptor manipulators */
 CURL_EXTERN int curl_socket(int domain, int type, int protocol, int line , const char *);
 CURL_EXTERN void curl_mark_sclose(int sockfd, int, const char *source);
 CURL_EXTERN int curl_sclose(int sockfd, int, const char *source);
 CURL_EXTERN int curl_accept(int s, void *addr, void *addrlen,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/mprintf.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/mprintf.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/mprintf.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/mprintf.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1999 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1999 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: mprintf.c,v 1.81 2009-04-21 11:46:17 yangtse Exp $
+ * $Id: mprintf.c,v 1.82 2010-02-04 19:44:31 yangtse Exp $
  *
  * Purpose:
  *  A merge of Bjorn Reese's format() function and Daniel's dsprintf()
  *  1.0. A full blooded printf() clone with full support for <num>$
  *  everywhere (parameters, widths and precisions) including variabled
  *  sized parameters (like doubles, long longs, long doubles and even
@@ -1216,13 +1216,13 @@
   LONG_LONG_TYPE test = 0x1000000000LL;
   curl_mprintf("%lld %lld %lld\n", one, two, test);
 #endif
 
   curl_mprintf("%3d %5d\n", 10, 1998);
 
-  ptr=curl_maprintf("test this then baby %s%s%s%s%s%s %d %d %d loser baby get a hit in yer face now!", "", "pretty long string pretty long string pretty long string pretty long string pretty long string", "/", "/", "/", "pretty long string", 1998, 1999, 2001);
+  ptr=curl_maprintf("test this then baby %s%s%s%s%s%s %d %d %d loser baby get a kiss in yer face now!", "", "pretty long string pretty long string pretty long string pretty long string pretty long string", "/", "/", "/", "pretty long string", 1998, 1999, 2001);
 
   puts(ptr);
 
   memset(ptr, 55, strlen(ptr)+1);
 
   free(ptr);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/msvcproj.foot /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/msvcproj.foot
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/msvcproj.foot	2008-08-28 13:49:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/msvcproj.foot	2010-01-16 23:44:56.000000000 +0800
@@ -1,11 +1,11 @@
-
-# Begin Group "Resource Files"
-
-# PROP Default_Filter ""
-# Begin Source File
-
-SOURCE=.\libcurl.rc
-# End Source File
-# End Group
-# End Target
-# End Project
+
+# Begin Group "Resource Files"
+
+# PROP Default_Filter ""
+# Begin Source File
+
+SOURCE=.\libcurl.rc
+# End Source File
+# End Group
+# End Target
+# End Project
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/multi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/multi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/multi.c	2009-08-24 19:56:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/multi.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: multi.c,v 1.204 2009-08-24 08:41:17 bagder Exp $
+ * $Id: multi.c,v 1.213 2010-02-04 19:44:31 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifdef HAVE_SYS_SOCKET_H
 #include <sys/socket.h>
@@ -178,14 +178,14 @@
   curl_multi_timer_callback timer_cb;
   void *timer_userp;
   struct timeval timer_lastcall; /* the fixed time for the timeout for the
                                     previous callback */
 };
 
-static bool multi_conn_using(struct Curl_multi *multi,
-                             struct SessionHandle *data);
+static struct connectdata *conn_using(struct Curl_multi *multi,
+                                      struct SessionHandle *data);
 static void singlesocket(struct Curl_multi *multi,
                          struct Curl_one_easy *easy);
 static void add_closure(struct Curl_multi *multi,
                         struct SessionHandle *data);
 static int update_timer(struct Curl_multi *multi);
 
@@ -255,13 +255,12 @@
  * We add one of these structs to the sockhash for a particular socket
  */
 
 struct Curl_sh_entry {
   struct SessionHandle *easy;
   time_t timestamp;
-  long inuse;
   int action;  /* what action READ/WRITE this socket waits for */
   curl_socket_t socket; /* mainly to ease debugging */
   void *socketp; /* settable by users with curl_multi_assign() */
 };
 /* bits for 'action' having no bits means this socket is not expecting any
    action */
@@ -279,13 +278,13 @@
 
   if(there)
     /* it is present, return fine */
     return there;
 
   /* not present, add it */
-  check = calloc(sizeof(struct Curl_sh_entry), 1);
+  check = calloc(1, sizeof(struct Curl_sh_entry));
   if(!check)
     return NULL; /* major failure */
   check->easy = data;
   check->socket = s;
 
   /* make/add new hash entry */
@@ -361,13 +360,13 @@
   return Curl_hash_alloc(CURL_SOCKET_HASH_TABLE_SIZE, hash_fd, fd_key_compare,
                          sh_freeentry);
 }
 
 CURLM *curl_multi_init(void)
 {
-  struct Curl_multi *multi = calloc(sizeof(struct Curl_multi), 1);
+  struct Curl_multi *multi = calloc(1, sizeof(struct Curl_multi));
 
   if(!multi)
     return NULL;
 
   multi->type = CURL_MULTI_HANDLE;
 
@@ -422,13 +421,13 @@
   /* Prevent users to add the same handle more than once! */
   if(((struct SessionHandle *)easy_handle)->multi)
     /* possibly we should create a new unique error code for this condition */
     return CURLM_BAD_EASY_HANDLE;
 
   /* Now, time to add an easy handle to the multi stack */
-  easy = calloc(sizeof(struct Curl_one_easy), 1);
+  easy = calloc(1, sizeof(struct Curl_one_easy));
   if(!easy)
     return CURLM_OUT_OF_MEMORY;
 
   cl = multi->closure;
   while(cl) {
     struct closure *next = cl->next;
@@ -565,21 +564,22 @@
  */
 static void debug_print_sock_hash(void *p)
 {
   struct Curl_sh_entry *sh = (struct Curl_sh_entry *)p;
 
   fprintf(stderr, " [easy %p/magic %x/socket %d]",
-          (void *)sh->easy, sh->easy->magic, sh->socket);
+          (void *)sh->easy, sh->easy->magic, (int)sh->socket);
 }
 #endif
 
 CURLMcode curl_multi_remove_handle(CURLM *multi_handle,
                                    CURL *curl_handle)
 {
   struct Curl_multi *multi=(struct Curl_multi *)multi_handle;
   struct Curl_one_easy *easy;
+  struct connectdata *conn;
 
   /* First, make some basic checks that the CURLM handle is a good handle */
   if(!GOOD_MULTI_HANDLE(multi))
     return CURLM_BAD_HANDLE;
 
   /* Verify that we got a somewhat good easy handle too */
@@ -646,12 +646,15 @@
       }
       else
         /* Clear connection pipelines, if Curl_done above was not called */
         Curl_getoff_all_pipelines(easy->easy_handle, easy->easy_conn);
     }
 
+    /* figure out if the easy handle is used by a connection in the cache */
+    conn = conn_using(multi, easy->easy_handle);
+
     /* If this easy_handle was the last one in charge for one or more
        connections in the shared connection cache, we might need to keep this
        handle around until either A) the connection is closed and killed
        properly, or B) another easy_handle uses the connection.
 
        The reason why we need to have a easy_handle associated with a live
@@ -662,22 +665,28 @@
 
        Thus, we need to check for all connections in the shared cache that
        points to this handle and are using PROT_CLOSEACTION. If there's any,
        we need to add this handle to the list of "easy handles kept around for
        nice connection closures".
     */
-    if(multi_conn_using(multi, easy->easy_handle)) {
-      /* There's at least one connection using this handle so we must keep
-         this handle around. We also keep the connection cache pointer
-         pointing to the shared one since that will be used on close as
-         well. */
-      easy->easy_handle->state.shared_conn = multi;
-
-      /* this handle is still being used by a shared connection cache and
-         thus we leave it around for now */
-      add_closure(multi, easy->easy_handle);
+    if(conn) {
+      if(conn->protocol & PROT_CLOSEACTION) {
+        /* There's at least one CLOSEACTION connection using this handle so we
+           must keep this handle around. We also keep the connection cache
+           pointer pointing to the shared one since that will be used on close
+           as well. */
+        easy->easy_handle->state.shared_conn = multi;
+
+        /* this handle is still being used by a shared connection cache and
+           thus we leave it around for now */
+        add_closure(multi, easy->easy_handle);
+      }
+      else
+        /* disconect the easy handle from the connection since the connection
+           will now remain but this easy handle is going */
+        conn->data = NULL;
     }
 
     if(easy->easy_handle->state.connc->type == CONNCACHE_MULTI) {
       /* if this was using the shared connection cache we clear the pointer
          to that since we're not part of that handle anymore */
       easy->easy_handle->state.connc = NULL;
@@ -911,13 +920,13 @@
        of it */
     bool disconnect_conn = FALSE;
 
     /* Handle the case when the pipe breaks, i.e., the connection
        we're using gets cleaned up and we're left with nothing. */
     if(easy->easy_handle->state.pipe_broke) {
-      infof(easy->easy_handle, "Pipe broke: handle 0x%x, url = %s\n",
+      infof(easy->easy_handle, "Pipe broke: handle 0x%p, url = %s\n",
             easy, easy->easy_handle->state.path);
 
       if(easy->state != CURLM_STATE_COMPLETED) {
         /* Head back to the CONNECT state */
         multistate(easy, CURLM_STATE_CONNECT);
         result = CURLM_CALL_MULTI_PERFORM;
@@ -1087,20 +1096,20 @@
 #ifndef CURL_DISABLE_HTTP
           if(easy->easy_conn->bits.tunnel_connecting)
             multistate(easy, CURLM_STATE_WAITPROXYCONNECT);
           else
 #endif
             multistate(easy, CURLM_STATE_PROTOCONNECT);
+
         }
-        else {
+        else
           /* after the connect has completed, go WAITDO or DO */
           multistate(easy, multi->pipelining_enabled?
                      CURLM_STATE_WAITDO:CURLM_STATE_DO);
 
-          result = CURLM_CALL_MULTI_PERFORM;
-        }
+        result = CURLM_CALL_MULTI_PERFORM;
       }
       break;
 
     case CURLM_STATE_PROTOCONNECT:
       /* protocol-specific connect phase */
       easy->result = Curl_protocol_connecting(easy->easy_conn,
@@ -1119,18 +1128,18 @@
       }
       break;
 
     case CURLM_STATE_WAITDO:
       /* Wait for our turn to DO when we're pipelining requests */
 #ifdef DEBUGBUILD
-      infof(easy->easy_handle, "Conn %d send pipe %d inuse %d athead %d\n",
+      infof(easy->easy_handle, "Conn %ld send pipe %zu inuse %d athead %d\n",
             easy->easy_conn->connectindex,
             easy->easy_conn->send_pipe->size,
-            easy->easy_conn->writechannel_inuse,
+            easy->easy_conn->writechannel_inuse?1:0,
             isHandleAtHead(easy->easy_handle,
-                           easy->easy_conn->send_pipe));
+                           easy->easy_conn->send_pipe)?1:0);
 #endif
       if(!easy->easy_conn->writechannel_inuse &&
          isHandleAtHead(easy->easy_handle,
                         easy->easy_conn->send_pipe)) {
         /* Grab the channel */
         easy->easy_conn->writechannel_inuse = TRUE;
@@ -1189,13 +1198,13 @@
           if(drc) {
             /* a failure here pretty much implies an out of memory */
             easy->result = drc;
             disconnect_conn = TRUE;
           }
           else
-            retry = newurl?TRUE:FALSE;
+            retry = (bool)(newurl?TRUE:FALSE);
 
           Curl_posttransfer(easy->easy_handle);
           drc = Curl_done(&easy->easy_conn, easy->result, FALSE);
 
           /* When set to retry the connection, we must to go back to
            * the CONNECT state */
@@ -1307,18 +1316,18 @@
         easy->easy_conn->readchannel_inuse = TRUE;
         multistate(easy, CURLM_STATE_PERFORM);
         result = CURLM_CALL_MULTI_PERFORM;
       }
 #ifdef DEBUGBUILD
       else {
-        infof(easy->easy_handle, "Conn %d recv pipe %d inuse %d athead %d\n",
+        infof(easy->easy_handle, "Conn %ld recv pipe %zu inuse %d athead %d\n",
               easy->easy_conn->connectindex,
               easy->easy_conn->recv_pipe->size,
-              easy->easy_conn->readchannel_inuse,
+              easy->easy_conn->readchannel_inuse?1:0,
               isHandleAtHead(easy->easy_handle,
-                             easy->easy_conn->recv_pipe));
+                             easy->easy_conn->recv_pipe)?1:0);
       }
 #endif
       break;
 
     case CURLM_STATE_TOOFAST: /* limit-rate exceeded in either direction */
       /* if both rates are within spec, resume transfer */
@@ -1381,13 +1390,13 @@
         char *newurl = NULL;
         bool retry = FALSE;
         followtype follow=FOLLOW_NONE;
 
         easy->result = Curl_retry_request(easy->easy_conn, &newurl);
         if(!easy->result)
-          retry = newurl?TRUE:FALSE;
+          retry = (bool)(newurl?TRUE:FALSE);
 
         /* call this even if the readwrite function returned error */
         Curl_posttransfer(easy->easy_handle);
 
         /* we're no longer receving */
         moveHandleFromRecvToDonePipeline(easy->easy_handle,
@@ -1556,23 +1565,12 @@
     easy->msg = msg;
     easy->msg_num = 1; /* there is one unread message here */
 
     multi->num_msgs++; /* increase message counter */
   }
 
-  if(CURLM_CALL_MULTI_PERFORM == result)
-    /* Set the timeout for this handle to expire really soon so that it will
-       be taken care of even when this handle is added in the midst of
-       operation when only the curl_multi_socket() API is used. During that
-       flow, only sockets that time-out or have actions will be dealt
-       with. Since this handle has no action yet, we make sure it times out to
-       get things to happen. Also, this makes it less important for callers of
-       the curl_multi_* functions to bother about the CURLM_CALL_MULTI_PERFORM
-       return code, as long as they deal with the timeouts properly. */
-    Curl_expire(easy->easy_handle, 1);
-
   return result;
 }
 
 
 CURLMcode curl_multi_perform(CURLM *multi_handle, int *running_handles)
 {
@@ -1585,13 +1583,16 @@
     return CURLM_BAD_HANDLE;
 
   easy=multi->easy.next;
   while(easy != &multi->easy) {
     CURLMcode result;
 
-    result = multi_runsingle(multi, easy);
+    do
+      result = multi_runsingle(multi, easy);
+    while (CURLM_CALL_MULTI_PERFORM == result);
+
     if(result)
       returncode = result;
 
     easy = easy->next; /* operate on next handle */
   }
 
@@ -1747,13 +1748,12 @@
   curl_socket_t s;
   int num;
   unsigned int curraction;
   struct Curl_one_easy *easy_by_hash;
   bool remove_sock_from_hash;
 
-  memset(&socks, 0, sizeof(socks));
   for(i=0; i< MAX_SOCKSPEREASYHANDLE; i++)
     socks[i] = CURL_SOCKET_BAD;
 
   /* Fill in the 'current' struct with the state as it is now: what sockets to
      supervise and for what actions */
   curraction = multi_getsock(easy, socks, MAX_SOCKSPEREASYHANDLE);
@@ -1945,13 +1945,15 @@
           data = data->set.one_easy->easy_conn->recv_pipe->head->ptr;
       }
 
       if(data->set.one_easy->easy_conn)  /* set socket event bitmask */
         data->set.one_easy->easy_conn->cselect_bits = ev_bitmask;
 
-      result = multi_runsingle(multi, data->set.one_easy);
+      do
+        result = multi_runsingle(multi, data->set.one_easy);
+      while (CURLM_CALL_MULTI_PERFORM == result);
 
       if(data->set.one_easy->easy_conn)
         data->set.one_easy->easy_conn->cselect_bits = 0;
 
       if(CURLM_OK >= result)
         /* get the socket(s) and check if the state has been changed since
@@ -1974,13 +1976,15 @@
    */
   do {
     struct timeval now;
 
     /* the first loop lap 'data' can be NULL */
     if(data) {
-      result = multi_runsingle(multi, data->set.one_easy);
+      do
+        result = multi_runsingle(multi, data->set.one_easy);
+      while (CURLM_CALL_MULTI_PERFORM == result);
 
       if(CURLM_OK >= result)
         /* get the socket(s) and check if the state has been changed since
            last */
         singlesocket(multi, data->set.one_easy);
     }
@@ -2366,37 +2370,36 @@
 
   there->socketp = hashp;
 
   return CURLM_OK;
 }
 
-static bool multi_conn_using(struct Curl_multi *multi,
-                             struct SessionHandle *data)
+static struct connectdata *conn_using(struct Curl_multi *multi,
+                                      struct SessionHandle *data)
 {
-  /* any live CLOSEACTION-connections pointing to the give 'data' ? */
+  /* a connection in the connection cache pointing to the given 'data' ? */
   int i;
 
   for(i=0; i< multi->connc->num; i++) {
     if(multi->connc->connects[i] &&
-       (multi->connc->connects[i]->data == data) &&
-       multi->connc->connects[i]->protocol & PROT_CLOSEACTION)
-      return TRUE;
+       (multi->connc->connects[i]->data == data))
+      return multi->connc->connects[i];
   }
 
-  return FALSE;
+  return NULL;
 }
 
 /* Add the given data pointer to the list of 'closure handles' that are kept
    around only to be able to close some connections nicely - just make sure
    that this handle isn't already added, like for the cases when an easy
    handle is removed, added and removed again... */
 static void add_closure(struct Curl_multi *multi,
                         struct SessionHandle *data)
 {
   int i;
-  struct closure *cl = calloc(sizeof(struct closure), 1);
+  struct closure *cl = calloc(1, sizeof(struct closure));
   struct closure *p=NULL;
   struct closure *n;
   if(cl) {
     cl->easy_handle = data;
     cl->next = multi->closure;
     multi->closure = cl;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/netrc.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/netrc.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/netrc.c	2009-06-11 02:04:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/netrc.c	2010-01-22 20:14:35.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: netrc.c,v 1.46 2009-06-10 02:49:43 yangtse Exp $
+ * $Id: netrc.c,v 1.47 2009-12-30 17:59:56 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <stdio.h>
 #include <stdlib.h>
@@ -30,13 +30,13 @@
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
 #ifdef HAVE_PWD_H
 #include <pwd.h>
 #endif
-#ifdef VMS
+#ifdef __VMS
 #include <unixlib.h>
 #endif
 
 #include <curl/curl.h>
 #include "netrc.h"
 
@@ -114,13 +114,13 @@
 #if defined(HAVE_GETPWUID) && defined(HAVE_GETEUID)
     }
     else {
       struct passwd *pw;
       pw= getpwuid(geteuid());
       if(pw) {
-#ifdef  VMS
+#ifdef __VMS
         home = decc_translate_vms(pw->pw_dir);
 #else
         home = pw->pw_dir;
 #endif
       }
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/nonblock.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/nonblock.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/nonblock.c	2009-07-10 05:55:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/nonblock.c	2010-01-22 20:14:35.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: nonblock.c,v 1.1 2009-07-09 21:55:26 bagder Exp $
+ * $Id: nonblock.c,v 1.2 2009-12-30 17:59:56 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifdef HAVE_SYS_SOCKET_H
 #include <sys/socket.h>
@@ -39,13 +39,13 @@
 #include <stdlib.h>
 #endif
 
 #if (defined(HAVE_IOCTL_FIONBIO) && defined(NETWARE))
 #include <sys/filio.h>
 #endif
-#ifdef VMS
+#ifdef __VMS
 #include <in.h>
 #include <inet.h>
 #endif
 
 #include "nonblock.h"
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/nss.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/nss.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/nss.c	2009-10-29 04:30:24.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/nss.c	2010-01-22 20:14:35.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: nss.c,v 1.62 2009-10-28 20:30:24 bagder Exp $
+ * $Id: nss.c,v 1.66 2009-12-02 17:24:38 kdudka Exp $
  ***************************************************************************/
 
 /*
  * Source file for all NSS-specific code for the TLS/SSL layer. No code
  * but sslgen.c should ever call or use these functions.
  */
@@ -80,14 +80,12 @@
 PRFileDesc *PR_ImportTCPSocket(PRInt32 osfd);
 
 PRLock * nss_initlock = NULL;
 
 volatile int initialized = 0;
 
-#define HANDSHAKE_TIMEOUT 30
-
 typedef struct {
   const char *name;
   int num;
   PRInt32 version; /* protocol version valid for this cipher */
 } cipher_s;
 
@@ -843,12 +841,42 @@
 
   infof(data, "NSS: using client certificate: %s\n", nickname);
   display_cert_info(data, *pRetCert);
   return SECSuccess;
 }
 
+/* This function is supposed to decide, which error codes should be used
+ * to conclude server is TLS intolerant.
+ *
+ * taken from xulrunner - nsNSSIOLayer.cpp
+ */
+static PRBool
+isTLSIntoleranceError(PRInt32 err)
+{
+  switch (err) {
+  case SSL_ERROR_BAD_MAC_ALERT:
+  case SSL_ERROR_BAD_MAC_READ:
+  case SSL_ERROR_HANDSHAKE_FAILURE_ALERT:
+  case SSL_ERROR_HANDSHAKE_UNEXPECTED_ALERT:
+  case SSL_ERROR_CLIENT_KEY_EXCHANGE_FAILURE:
+  case SSL_ERROR_ILLEGAL_PARAMETER_ALERT:
+  case SSL_ERROR_NO_CYPHER_OVERLAP:
+  case SSL_ERROR_BAD_SERVER:
+  case SSL_ERROR_BAD_BLOCK_PADDING:
+  case SSL_ERROR_UNSUPPORTED_VERSION:
+  case SSL_ERROR_PROTOCOL_VERSION_ALERT:
+  case SSL_ERROR_RX_MALFORMED_FINISHED:
+  case SSL_ERROR_BAD_HANDSHAKE_HASH_VALUE:
+  case SSL_ERROR_DECODE_ERROR_ALERT:
+  case SSL_ERROR_RX_UNKNOWN_ALERT:
+    return PR_TRUE;
+  default:
+    return PR_FALSE;
+  }
+}
+
 /**
  * Global SSL init
  *
  * @retval 0 error initializing SSL
  * @retval 1 SSL initialized successfully
  */
@@ -959,20 +987,24 @@
 }
 
 CURLcode Curl_nss_connect(struct connectdata *conn, int sockindex)
 {
   PRInt32 err;
   PRFileDesc *model = NULL;
-  PRBool ssl2, ssl3, tlsv1;
+  PRBool ssl2 = PR_FALSE;
+  PRBool ssl3 = PR_FALSE;
+  PRBool tlsv1 = PR_FALSE;
   struct SessionHandle *data = conn->data;
   curl_socket_t sockfd = conn->sock[sockindex];
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   SECStatus rv;
   char *certDir = NULL;
   int curlerr;
   const int *cipher_to_enable;
+  PRSocketOptionData sock_opt;
+  PRUint32 timeout;
 
   curlerr = CURLE_SSL_CONNECT_ERROR;
 
   if (connssl->state == ssl_connection_complete)
     return CURLE_OK;
 
@@ -1060,25 +1092,33 @@
 
   model = PR_NewTCPSocket();
   if(!model)
     goto error;
   model = SSL_ImportFD(NULL, model);
 
+  /* make the socket nonblocking */
+  sock_opt.option = PR_SockOpt_Nonblocking;
+  sock_opt.value.non_blocking = PR_TRUE;
+  if(PR_SetSocketOption(model, &sock_opt) != SECSuccess)
+    goto error;
+
   if(SSL_OptionSet(model, SSL_SECURITY, PR_TRUE) != SECSuccess)
     goto error;
   if(SSL_OptionSet(model, SSL_HANDSHAKE_AS_SERVER, PR_FALSE) != SECSuccess)
     goto error;
   if(SSL_OptionSet(model, SSL_HANDSHAKE_AS_CLIENT, PR_TRUE) != SECSuccess)
     goto error;
 
-  ssl2 = ssl3 = tlsv1 = PR_FALSE;
-
   switch (data->set.ssl.version) {
   default:
   case CURL_SSLVERSION_DEFAULT:
-    ssl3 = tlsv1 = PR_TRUE;
+    ssl3 = PR_TRUE;
+    if (data->state.ssl_connect_retry)
+      infof(data, "TLS disabled due to previous handshake failure\n");
+    else
+      tlsv1 = PR_TRUE;
     break;
   case CURL_SSLVERSION_TLSv1:
     tlsv1 = PR_TRUE;
     break;
   case CURL_SSLVERSION_SSLv2:
     ssl2 = PR_TRUE;
@@ -1095,12 +1135,15 @@
   if(SSL_OptionSet(model, SSL_ENABLE_TLS, tlsv1) != SECSuccess)
     goto error;
 
   if(SSL_OptionSet(model, SSL_V2_COMPATIBLE_HELLO, ssl2) != SECSuccess)
     goto error;
 
+  /* reset the flag to avoid an infinite loop */
+  data->state.ssl_connect_retry = FALSE;
+
   /* enable all ciphers from enable_ciphers_by_default */
   cipher_to_enable = enable_ciphers_by_default;
   while (SSL_NULL_WITH_NULL_NULL != *cipher_to_enable) {
     if (SSL_CipherPrefSet(model, *cipher_to_enable, PR_TRUE) != SECSuccess) {
       curlerr = CURLE_SSL_CIPHER;
       goto error;
@@ -1218,28 +1261,29 @@
 
   /* Import our model socket  onto the existing file descriptor */
   connssl->handle = PR_ImportTCPSocket(sockfd);
   connssl->handle = SSL_ImportFD(model, connssl->handle);
   if(!connssl->handle)
     goto error;
+
   PR_Close(model); /* We don't need this any more */
+  model = NULL;
 
   /* This is the password associated with the cert that we're using */
   if (data->set.str[STRING_KEY_PASSWD]) {
       SSL_SetPKCS11PinArg(connssl->handle, data->set.str[STRING_KEY_PASSWD]);
   }
 
   /* Force handshake on next I/O */
   SSL_ResetHandshake(connssl->handle, /* asServer */ PR_FALSE);
 
   SSL_SetURL(connssl->handle, conn->host.name);
 
   /* Force the handshake now */
-  if(SSL_ForceHandshakeWithTimeout(connssl->handle,
-                                    PR_SecondsToInterval(HANDSHAKE_TIMEOUT))
-      != SECSuccess) {
+  timeout = PR_MillisecondsToInterval(Curl_timeleft(conn, NULL, TRUE));
+  if(SSL_ForceHandshakeWithTimeout(connssl->handle, timeout) != SECSuccess) {
     if(conn->data->set.ssl.certverifyresult == SSL_ERROR_BAD_CERT_DOMAIN)
       curlerr = CURLE_PEER_FAILED_VERIFICATION;
     else if(conn->data->set.ssl.certverifyresult!=0)
       curlerr = CURLE_SSL_CACERT;
     goto error;
   }
@@ -1272,46 +1316,42 @@
     }
   }
 
   return CURLE_OK;
 
 error:
+  /* reset the flag to avoid an infinite loop */
+  data->state.ssl_connect_retry = FALSE;
+
   err = PR_GetError();
   infof(data, "NSS error %d\n", err);
   if(model)
     PR_Close(model);
+
+  if (ssl3 && tlsv1 && isTLSIntoleranceError(err)) {
+    /* schedule reconnect through Curl_retry_request() */
+    data->state.ssl_connect_retry = TRUE;
+    infof(data, "Error in TLS handshake, trying SSLv3...\n");
+    return CURLE_OK;
+  }
+
   return curlerr;
 }
 
 /* return number of sent (non-SSL) bytes */
 int Curl_nss_send(struct connectdata *conn,  /* connection data */
                   int sockindex,             /* socketindex */
                   const void *mem,           /* send this data */
                   size_t len)                /* amount to write */
 {
-  PRInt32 err;
-  struct SessionHandle *data = conn->data;
-  PRInt32 timeout;
   int rc;
 
-  if(data->set.timeout)
-    timeout = PR_MillisecondsToInterval((PRUint32)data->set.timeout);
-  else
-    timeout = PR_MillisecondsToInterval(DEFAULT_CONNECT_TIMEOUT);
-
-  rc = PR_Send(conn->ssl[sockindex].handle, mem, (int)len, 0, timeout);
+  rc = PR_Send(conn->ssl[sockindex].handle, mem, (int)len, 0, -1);
 
   if(rc < 0) {
-    err = PR_GetError();
-
-    if(err == PR_IO_TIMEOUT_ERROR) {
-      failf(data, "SSL connection timeout");
-      return CURLE_OPERATION_TIMEDOUT;
-    }
-
-    failf(conn->data, "SSL write: error %d", err);
+    failf(conn->data, "SSL write: error %d", PR_GetError());
     return -1;
   }
   return rc; /* number of bytes */
 }
 
 /*
@@ -1323,34 +1363,23 @@
                       int num,                   /* socketindex */
                       char *buf,                 /* store read data here */
                       size_t buffersize,         /* max amount to read */
                       bool * wouldblock)
 {
   ssize_t nread;
-  struct SessionHandle *data = conn->data;
-  PRInt32 timeout;
 
-  if(data->set.timeout)
-    timeout = PR_SecondsToInterval((PRUint32)data->set.timeout);
-  else
-    timeout = PR_MillisecondsToInterval(DEFAULT_CONNECT_TIMEOUT);
-
-  nread = PR_Recv(conn->ssl[num].handle, buf, (int)buffersize, 0, timeout);
+  nread = PR_Recv(conn->ssl[num].handle, buf, (int)buffersize, 0, -1);
   *wouldblock = FALSE;
   if(nread < 0) {
     /* failed SSL read */
     PRInt32 err = PR_GetError();
 
     if(err == PR_WOULD_BLOCK_ERROR) {
       *wouldblock = TRUE;
       return -1; /* basically EWOULDBLOCK */
     }
-    if(err == PR_IO_TIMEOUT_ERROR) {
-      failf(data, "SSL connection timeout");
-      return CURLE_OPERATION_TIMEDOUT;
-    }
     failf(conn->data, "SSL read: errno %d", err);
     return -1;
   }
   return nread;
 }
 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib: pingpong.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib: pingpong.h
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib: pop3.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib: pop3.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/progress.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/progress.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/progress.c	2009-11-01 02:51:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/progress.c	2010-01-22 20:14:35.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: progress.c,v 1.93 2009-10-31 18:51:51 bagder Exp $
+ * $Id: progress.c,v 1.95 2009-11-05 15:00:28 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include "urldata.h"
 #include "sendf.h"
@@ -368,26 +368,34 @@
               "                                 Dload  Upload   Total   Spent    Left  Speed\n");
       data->progress.flags |= PGRS_HEADERS_OUT; /* headers are shown */
     }
 
     /* Figure out the estimated time of arrival for the upload */
     if((data->progress.flags & PGRS_UL_SIZE_KNOWN) &&
-       (data->progress.ulspeed > CURL_OFF_T_C(0)) &&
-       (data->progress.size_ul > CURL_OFF_T_C(100)) ) {
+       (data->progress.ulspeed > CURL_OFF_T_C(0))) {
       ulestimate = data->progress.size_ul / data->progress.ulspeed;
-      ulpercen = data->progress.uploaded /
-                (data->progress.size_ul/CURL_OFF_T_C(100));
+
+      if(data->progress.size_ul > CURL_OFF_T_C(10000))
+        ulpercen = data->progress.uploaded /
+          (data->progress.size_ul/CURL_OFF_T_C(100));
+      else if(data->progress.size_ul > CURL_OFF_T_C(0))
+        ulpercen = (data->progress.uploaded*100) /
+          data->progress.size_ul;
     }
 
     /* ... and the download */
     if((data->progress.flags & PGRS_DL_SIZE_KNOWN) &&
-       (data->progress.dlspeed > CURL_OFF_T_C(0)) &&
-       (data->progress.size_dl > CURL_OFF_T_C(100))) {
+       (data->progress.dlspeed > CURL_OFF_T_C(0))) {
       dlestimate = data->progress.size_dl / data->progress.dlspeed;
-      dlpercen = data->progress.downloaded /
-                (data->progress.size_dl/CURL_OFF_T_C(100));
+
+      if(data->progress.size_dl > CURL_OFF_T_C(10000))
+        dlpercen = data->progress.downloaded /
+          (data->progress.size_dl/CURL_OFF_T_C(100));
+      else if(data->progress.size_dl > CURL_OFF_T_C(0))
+        dlpercen = (data->progress.downloaded*100) /
+          data->progress.size_dl;
     }
 
     /* Now figure out which of them is slower and use that one for the
        total estimate! */
     total_estimate = ulestimate>dlestimate?ulestimate:dlestimate;
 
@@ -404,15 +412,17 @@
        data->progress.size_dl:data->progress.downloaded);
 
     /* We have transfered this much so far */
     total_transfer = data->progress.downloaded + data->progress.uploaded;
 
     /* Get the percentage of data transfered so far */
-    if(total_expected_transfer > CURL_OFF_T_C(100))
+    if(total_expected_transfer > CURL_OFF_T_C(10000))
       total_percen = total_transfer /
-                    (total_expected_transfer/CURL_OFF_T_C(100));
+        (total_expected_transfer/CURL_OFF_T_C(100));
+    else if(total_expected_transfer > CURL_OFF_T_C(0))
+      total_percen = (total_transfer*100) / total_expected_transfer;
 
     fprintf(data->set.err,
             "\r"
             "%3" FORMAT_OFF_T " %s  "
             "%3" FORMAT_OFF_T " %s  "
             "%3" FORMAT_OFF_T " %s  %s  %s %s %s %s %s",
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/qssl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/qssl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/qssl.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/qssl.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: qssl.c,v 1.17 2009-04-21 11:46:17 yangtse Exp $
+ * $Id: qssl.c,v 1.18 2010-02-04 19:44:31 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifdef USE_QSOSSL
 #include <qsossl.h>
@@ -286,13 +286,13 @@
     if(rc == SSL_ERROR_IO) {
       failf(data, "SSL_Destroy() I/O error: %s", strerror(errno));
       return -1;
     }
 
     /* An SSL error. */
-    failf(data, "SSL_Destroy() returned error %d", SSL_Strerror(rc, NULL));
+    failf(data, "SSL_Destroy() returned error %s", SSL_Strerror(rc, NULL));
     return -1;
   }
 
   conn->handle = NULL;
   return 0;
 }
@@ -403,13 +403,13 @@
 
       failf(conn->data, "SSL_Write() I/O error: %s", strerror(errno));
       return -1;
     }
 
     /* An SSL error. */
-    failf(conn->data, "SSL_Write() returned error %d",
+    failf(conn->data, "SSL_Write() returned error %s",
           SSL_Strerror(rc, NULL));
     return -1;
   }
 
   return (ssize_t) rc; /* number of bytes */
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/README.multi_socket /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/README.multi_socket
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/README.multi_socket	2006-10-29 17:18:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/README.multi_socket	2009-11-26 23:50:33.000000000 +0800
@@ -9,20 +9,20 @@
    2 - When the application discovers action on a single socket, it calls
        libcurl and informs that there was action on this particular socket and
        libcurl can then act on that socket/transfer only and not care about
        any other transfers. (The previous API always had to scan through all
        the existing transfers.)
 
-  The idea is that curl_multi_socket() calls a given callback with information
-  about what socket to wait for what action on, and the callback only gets
-  called if the status of that socket has changed.
+  The idea is that curl_multi_socket_action() calls a given callback with
+  information about what socket to wait for what action on, and the callback
+  only gets called if the status of that socket has changed.
 
   In the API draft from before, we have a timeout argument on a per socket
-  basis and we also allowed curl_multi_socket() to pass in an 'easy handle'
-  instead of socket to allow libcurl to shortcut a lookup and work on the
-  affected easy handle right away. Both these turned out to be bad ideas.
+  basis and we also allowed curl_multi_socket_action() to pass in an 'easy
+  handle' instead of socket to allow libcurl to shortcut a lookup and work on
+  the affected easy handle right away. Both these turned out to be bad ideas.
 
   The timeout argument was removed from the socket callback since after much
   thinking I came to the conclusion that we really don't want to handle
   timeouts on a per socket basis. We need it on a per transfer (easy handle)
   basis and thus we can't provide it in the callbacks in a nice way. Instead,
   we have to offer a curl_multi_timeout() that returns the largest amount of
@@ -51,23 +51,16 @@
   function that can return plain sockets, as that library too returned only
   fd_sets and that is no longer good enough. The changes done to c-ares have
   been committed and are available in the c-ares CVS repository destined to be
   included in the c-ares 1.3.1 release.
 
   We have done a test runs with up to 9000 connections (with a single active
-  one). The curl_multi_socket() invoke then takes less than 10 microseconds in
-  average (using the read-only-1-byte-at-a-time hack).  We are now below the
-  60 microseconds "per socket action" goal (the extra 50 is the time libevent
-  needs).
+  one). The curl_multi_socket_action() invoke then takes less than 10
+  microseconds in average (using the read-only-1-byte-at-a-time hack).  We are
+  now below the 60 microseconds "per socket action" goal (the extra 50 is the
+  time libevent needs).
 
-Status Right Now
+Documentation
 
-  The curl_multi_socket() API is implemented according to how it is
-  documented. We deem it ready to use.
-
-    http://curl.haxx.se/libcurl/c/curl_multi_socket.html
+    http://curl.haxx.se/libcurl/c/curl_multi_socket_action.html
     http://curl.haxx.se/libcurl/c/curl_multi_timeout.html
     http://curl.haxx.se/libcurl/c/curl_multi_setopt.html
-
-What is Left for the curl_multi_socket API
-
-  Real world usage!
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib: README.pingpong
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib: rtsp.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib: rtsp.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/sendf.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/sendf.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/sendf.c	2009-06-11 05:26:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/sendf.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: sendf.c,v 1.159 2009-06-10 21:26:11 bagder Exp $
+ * $Id: sendf.c,v 1.163 2010-02-04 19:44:31 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <stdio.h>
 #include <stdarg.h>
@@ -40,12 +40,13 @@
 #include "urldata.h"
 #include "sendf.h"
 #include "connect.h"
 #include "sslgen.h"
 #include "ssh.h"
 #include "multiif.h"
+#include "rtsp.h"
 
 #define _MPRINTF_REPLACE /* use the internal *printf() functions */
 #include <curl/mprintf.h>
 
 /* the krb4 functions only exists for FTP and if krb4 or gssapi is defined */
 #if !defined(CURL_DISABLE_FTP) && (defined(HAVE_KRB4) || defined(HAVE_GSSAPI))
@@ -206,13 +207,13 @@
     return CURLE_OUT_OF_MEMORY; /* failure */
 
   bytes_written=0;
   write_len = strlen(s);
   sptr = s;
 
-  while(1) {
+  for(;;) {
     /* Write the buffer to the socket */
     res = Curl_write(conn, sockfd, sptr, write_len, &bytes_written);
 
     if(CURLE_OK != res)
       break;
 
@@ -339,14 +340,14 @@
   data->state.tempwritesize = len;
   data->state.tempwritetype = type;
 
   /* mark the connection as RECV paused */
   k->keepon |= KEEP_RECV_PAUSE;
 
-  DEBUGF(infof(data, "Pausing with %d bytes in buffer for type %02x\n",
-               (int)len, type));
+  DEBUGF(infof(data, "Pausing with %zu bytes in buffer for type %02x\n",
+               len, type));
 
   return CURLE_OK;
 }
 
 
 /* Curl_client_write() sends data to the write callback(s)
@@ -422,13 +423,13 @@
     }
 
     if(CURL_WRITEFUNC_PAUSE == wrote)
       return pausewrite(data, type, ptr, len);
 
     if(wrote != len) {
-      failf(data, "Failed writing body (%d != %d)", (int)wrote, (int)len);
+      failf(data, "Failed writing body (%zu != %zu)", wrote, len);
       return CURLE_WRITE_ERROR;
     }
   }
 
   if((type & CLIENTWRITE_HEADER) &&
      (data->set.fwrite_header || data->set.writeheader) ) {
@@ -507,13 +508,14 @@
   int num = (sockfd == conn->sock[SECONDARYSOCKET]);
 
   *n=0; /* reset amount to zero */
 
   /* If session can pipeline, check connection buffer  */
   if(pipelining) {
-    size_t bytestocopy = CURLMIN(conn->buf_len - conn->read_pos, sizerequested);
+    size_t bytestocopy = CURLMIN(conn->buf_len - conn->read_pos,
+                                 sizerequested);
 
     /* Copy from our master buffer first if we have some unread data there*/
     if(bytestocopy > 0) {
       memcpy(buf, conn->master_buffer + conn->read_pos, bytestocopy);
       conn->read_pos += bytestocopy;
       conn->bits.stream_was_rewound = FALSE;
@@ -524,14 +526,15 @@
     /* If we come here, it means that there is no data to read from the buffer,
      * so we read from the socket */
     bytesfromsocket = CURLMIN(sizerequested, BUFSIZE * sizeof (char));
     buffertofill = conn->master_buffer;
   }
   else {
-    bytesfromsocket = CURLMIN((long)sizerequested, conn->data->set.buffer_size ?
-                          conn->data->set.buffer_size : BUFSIZE);
+    bytesfromsocket = CURLMIN((long)sizerequested,
+                              conn->data->set.buffer_size ?
+                              conn->data->set.buffer_size : BUFSIZE);
     buffertofill = buf;
   }
 
   if(conn->ssl[num].state == ssl_connection_complete) {
     nread = Curl_ssl_recv(conn, num, buffertofill, bytesfromsocket);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/sendf.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/sendf.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/sendf.h	2008-09-29 19:13:37.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/sendf.h	2010-01-26 02:54:08.000000000 +0800
@@ -1,29 +1,29 @@
-#ifndef __SENDF_H
-#define __SENDF_H
+#ifndef HEADER_CURL_SENDF_H
+#define HEADER_CURL_SENDF_H
 /***************************************************************************
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: sendf.h,v 1.46 2008-09-29 11:13:37 bagder Exp $
+ * $Id: sendf.h,v 1.49 2010-01-25 04:36:13 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 CURLcode Curl_sendf(curl_socket_t sockfd, struct connectdata *,
                     const char *fmt, ...);
@@ -45,22 +45,19 @@
 #define infof Curl_infof
 
 #endif /* CURL_DISABLE_VERBOSE_STRINGS */
 
 #define failf Curl_failf
 
-#define CLIENTWRITE_BODY   1
-#define CLIENTWRITE_HEADER 2
+#define CLIENTWRITE_BODY   (1<<0)
+#define CLIENTWRITE_HEADER (1<<1)
 #define CLIENTWRITE_BOTH   (CLIENTWRITE_BODY|CLIENTWRITE_HEADER)
 
 CURLcode Curl_client_write(struct connectdata *conn, int type, char *ptr,
                            size_t len);
 
-void Curl_read_rewind(struct connectdata *conn,
-                      size_t extraBytesRead);
-
 /* internal read-function, does plain socket only */
 int Curl_read_plain(curl_socket_t sockfd,
                     char *buf,
                     size_t bytesfromsocket,
                     ssize_t *n);
 
@@ -83,7 +80,7 @@
 /* the function used to output verbose information */
 int Curl_debug(struct SessionHandle *handle, curl_infotype type,
                char *data, size_t size,
                struct connectdata *conn);
 
 
-#endif /* __SENDF_H */
+#endif /* HEADER_CURL_SENDF_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/setup.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/setup.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/setup.h	2009-10-29 04:21:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/setup.h	2010-01-27 01:06:01.000000000 +0800
@@ -4,26 +4,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: setup.h,v 1.171 2009-10-27 16:38:42 yangtse Exp $
+ * $Id: setup.h,v 1.178 2010-01-26 08:43:21 yangtse Exp $
  ***************************************************************************/
 
 /*
  * Define WIN32 when build target is Win32 API
  */
 
@@ -83,12 +83,23 @@
 /* also possible to have them defined in the config file included   */
 /* before this point. As a result of all this we frown inclusion of */
 /* system header files in our config files, avoid this at any cost. */
 /* ================================================================ */
 
 /*
+ * AIX 4.3 and newer needs _THREAD_SAFE defined to build
+ * proper reentrant code. Others may also need it.
+ */
+
+#ifdef NEED_THREAD_SAFE
+#  ifndef _THREAD_SAFE
+#    define _THREAD_SAFE
+#  endif
+#endif
+
+/*
  * Tru64 needs _REENTRANT set for a few function prototypes and
  * things to appear in the system header files. Unixware needs it
  * to build proper reentrant code. Others may also need it.
  */
 
 #ifdef NEED_REENTRANT
@@ -155,12 +166,21 @@
 #  define CURL_DISABLE_TFTP
 #  define CURL_DISABLE_FTP
 #  define CURL_DISABLE_LDAP
 #  define CURL_DISABLE_TELNET
 #  define CURL_DISABLE_DICT
 #  define CURL_DISABLE_FILE
+#  define CURL_DISABLE_RTSP
+#endif
+
+/*
+ * When http is disabled rtsp is not supported.
+ */
+
+#if defined(CURL_DISABLE_HTTP) && !defined(CURL_DISABLE_RTSP)
+#  define CURL_DISABLE_RTSP
 #endif
 
 /* ================================================================ */
 /* No system header file shall be included in this file before this */
 /* point. The only allowed ones are those included from curlbuild.h */
 /* ================================================================ */
@@ -312,13 +332,13 @@
 
 /*
  * Default sizeof(off_t) in case it hasn't been defined in config file.
  */
 
 #ifndef SIZEOF_OFF_T
-#  if defined(__VMS) && (defined(__alpha) || defined(__ia64))
+#  if defined(__VMS) && !defined(__VAX)
 #    if defined(_LARGEFILE)
 #      define SIZEOF_OFF_T 8
 #    endif
 #  elif defined(__OS400__) && defined(__ILEC400__)
 #    if defined(_LARGE_FILES)
 #      define SIZEOF_OFF_T 8
@@ -384,29 +404,74 @@
 #  ifndef fileno /* sunos 4 have this as a macro! */
      int fileno( FILE *stream);
 #  endif
 
 #endif /* WIN32 */
 
-#if defined(WIN32) && !defined(__CYGWIN__) && !defined(USE_ARES) && \
-    !defined(__LCC__)  /* lcc-win32 doesn't have _beginthreadex() */
-#ifdef ENABLE_IPV6
-#define USE_THREADING_GETADDRINFO
-#else
-#define USE_THREADING_GETHOSTBYNAME  /* Cygwin uses alarm() function */
+/*
+ * msvc 6.0 requires PSDK in order to have INET6_ADDRSTRLEN
+ * defined in ws2tcpip.h as well as to provide IPv6 support.
+ */
+
+#if defined(_MSC_VER) && !defined(__POCC__)
+#  if !defined(HAVE_WS2TCPIP_H) || \
+     ((_MSC_VER < 1300) && !defined(INET6_ADDRSTRLEN))
+#    undef HAVE_GETADDRINFO_THREADSAFE
+#    undef HAVE_FREEADDRINFO
+#    undef HAVE_GETADDRINFO
+#    undef HAVE_GETNAMEINFO
+#    undef ENABLE_IPV6
+#  endif
+#endif
+
+/* ---------------------------------------------------------------- */
+/*             resolver specialty compile-time defines              */
+/*         CURLRES_* defines to use in the host*.c sources          */
+/* ---------------------------------------------------------------- */
+
+/*
+ * lcc-win32 doesn't have _beginthreadex(), lacks threads support.
+ */
+
+#if defined(__LCC__) && defined(WIN32)
+#  undef USE_THREADS_POSIX
+#  undef USE_THREADS_WIN32
+#endif
+
+/*
+ * MSVC threads support requires a multi-threaded runtime library.
+ * _beginthreadex() is not available in single-threaded ones.
+ */
+
+#if defined(_MSC_VER) && !defined(__POCC__) && !defined(_MT)
+#  undef USE_THREADS_POSIX
+#  undef USE_THREADS_WIN32
 #endif
+
+/*
+ * Mutually exclusive CURLRES_* definitions.
+ */
+
+#ifdef USE_ARES
+#  define CURLRES_ASYNCH
+#  define CURLRES_ARES
+#elif defined(USE_THREADS_POSIX) || defined(USE_THREADS_WIN32)
+#  define CURLRES_ASYNCH
+#  define CURLRES_THREADED
+#else
+#  define CURLRES_SYNCH
 #endif
 
-/* "cl -ML" or "cl -MLd" implies a single-threaded runtime library where
-   _beginthreadex() is not available */
-#if (defined(_MSC_VER) && !defined(__POCC__)) && !defined(_MT) && !defined(USE_ARES)
-#undef USE_THREADING_GETADDRINFO
-#undef USE_THREADING_GETHOSTBYNAME
-#define CURL_NO__BEGINTHREADEX
+#ifdef ENABLE_IPV6
+#  define CURLRES_IPV6
+#else
+#  define CURLRES_IPV4
 #endif
 
+/* ---------------------------------------------------------------- */
+
 /*
  * When using WINSOCK, TELNET protocol requires WINSOCK2 API.
  */
 
 #if defined(USE_WINSOCK) && (USE_WINSOCK != 2)
 #  define CURL_DISABLE_TELNET 1
@@ -422,26 +487,12 @@
 #  if !defined(HAVE_WINSOCK2_H) || ((_MSC_VER < 1300) && !defined(IPPROTO_ESP))
 #    undef HAVE_STRUCT_SOCKADDR_STORAGE
 #  endif
 #endif
 
 /*
- * msvc 6.0 requires PSDK in order to have INET6_ADDRSTRLEN
- * defined in ws2tcpip.h as well as to provide IPv6 support.
- */
-
-#if defined(_MSC_VER) && !defined(__POCC__)
-#  if !defined(HAVE_WS2TCPIP_H) || ((_MSC_VER < 1300) && !defined(INET6_ADDRSTRLEN))
-#    undef HAVE_FREEADDRINFO
-#    undef HAVE_GETADDRINFO
-#    undef HAVE_GETNAMEINFO
-#    undef ENABLE_IPV6
-#  endif
-#endif
-
-/*
  * Intentionally fail to build when using msvc 6.0 without PSDK installed.
  * The brave of heart can circumvent this, defining ALLOW_MSVC6_WITHOUT_PSDK
  * in lib/config-win32.h although absolutely discouraged and unsupported.
  */
 
 #if defined(_MSC_VER) && !defined(__POCC__)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/setup_once.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/setup_once.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/setup_once.h	2009-06-24 01:57:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/setup_once.h	2010-01-01 22:17:52.000000000 +0800
@@ -17,13 +17,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: setup_once.h,v 1.39 2009-06-19 00:41:04 yangtse Exp $
+ * $Id: setup_once.h,v 1.40 2009-12-30 17:59:56 yangtse Exp $
  ***************************************************************************/
 
 
 /********************************************************************
  *                              NOTICE                              *
  *                             ========                             *
@@ -419,23 +419,23 @@
 
 
 /*
  *  Actually use __32_getpwuid() on 64-bit VMS builds for getpwuid()
  */
 
-#if defined(VMS) && \
+#if defined(__VMS) && \
     defined(__INITIAL_POINTER_SIZE) && (__INITIAL_POINTER_SIZE == 64)
 #define getpwuid __32_getpwuid
 #endif
 
 
 /*
  * Macro argv_item_t hides platform details to code using it.
  */
 
-#ifdef VMS
+#ifdef __VMS
 #define argv_item_t  __char_ptr32
 #else
 #define argv_item_t  char *
 #endif
 
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/share.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/share.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/share.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/share.c	2010-01-22 20:14:35.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: share.c,v 1.28 2009-04-21 11:46:17 yangtse Exp $
+ * $Id: share.c,v 1.29 2009-11-18 10:33:55 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 #include <stdarg.h>
 #include <stdlib.h>
 #include <string.h>
@@ -33,13 +33,13 @@
 /* The last #include file should be: */
 #include "memdebug.h"
 
 CURLSH *
 curl_share_init(void)
 {
-  struct Curl_share *share = calloc(sizeof(struct Curl_share), 1);
+  struct Curl_share *share = calloc(1, sizeof(struct Curl_share));
   if(share)
     share->specifier |= (1<<CURL_LOCK_DATA_SHARE);
 
   return share;
 }
 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib: smtp.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib: smtp.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/socks.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/socks.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/socks.c	2009-08-30 19:28:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/socks.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: socks.c,v 1.33 2009-08-29 03:57:28 gknauf Exp $
+ * $Id: socks.c,v 1.35 2010-02-04 19:44:31 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #if !defined(CURL_DISABLE_PROXY) || defined(USE_WINDOWS_SSPI)
 #include <string.h>
@@ -69,13 +69,13 @@
   ssize_t nread;
   ssize_t allread = 0;
   int result;
   struct timeval tvnow;
   long conntime;
   *n = 0;
-  do {
+  for(;;) {
     tvnow = Curl_tvnow();
     /* calculating how long connection is establishing */
     conntime = Curl_tvdiff(tvnow, conn->created);
     if(conntime > conn_timeout) {
       /* we already got the timeout */
       result = ~CURLE_OK;
@@ -101,13 +101,13 @@
       break;
     }
 
     buffersize -= nread;
     buf += nread;
     allread += nread;
-  } while(1);
+  }
   return result;
 }
 
 /*
 * This function logs in to a SOCKS4 proxy and sends the specifics to the final
 * destination server.
@@ -390,13 +390,13 @@
   ssize_t packetsize = 0;
 
   /* RFC1928 chapter 5 specifies max 255 chars for domain name in packet */
   if(!socks5_resolve_local && hostname_len > 255)
   {
     infof(conn->data,"SOCKS5: server resolving disabled for hostnames of "
-          "length > 255 [actual len=%d]\n", hostname_len);
+          "length > 255 [actual len=%zu]\n", hostname_len);
     socks5_resolve_local = TRUE;
   }
 
   /* get timeout */
   timeout = Curl_timeleft(conn, NULL, TRUE);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/socks_gssapi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/socks_gssapi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/socks_gssapi.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/socks_gssapi.c	2010-01-25 06:42:54.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: socks_gssapi.c,v 1.3 2009-04-21 10:26:59 yangtse Exp $
+ * $Id: socks_gssapi.c,v 1.4 2010-01-23 17:31:54 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifndef CURL_DISABLE_PROXY
 
@@ -46,12 +46,13 @@
 
 static gss_ctx_id_t     gss_context = GSS_C_NO_CONTEXT;
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
+#include "curl_memory.h"
 /* The last #include file should be: */
 #include "memdebug.h"
 
 /*
  * Helper gssapi error functions.
  */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/socks_sspi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/socks_sspi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/socks_sspi.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/socks_sspi.c	2010-01-25 06:42:54.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: socks_sspi.c,v 1.7 2009-04-21 10:26:59 yangtse Exp $
+ * $Id: socks_sspi.c,v 1.8 2010-01-23 17:31:54 yangtse Exp $
  ***************************************************************************/
 
 
 #include "setup.h"
 
 #ifdef USE_WINDOWS_SSPI
@@ -39,12 +39,13 @@
 #include "socks.h"
 #include "curl_sspi.h"
 
 #define _MPRINTF_REPLACE /* use the internal *printf() functions */
 #include <curl/mprintf.h>
 
+#include "curl_memory.h"
 /* The last #include file should be: */
 #include "memdebug.h"
 
 /*
  * Definitions required from ntsecapi.h are directly provided below this point
  * to avoid including ntsecapi.h due to a conflict with OpenSSL's safestack.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/speedcheck.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/speedcheck.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/speedcheck.c	2007-09-03 05:53:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/speedcheck.c	2010-01-30 22:30:27.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2006, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: speedcheck.c,v 1.23 2007-08-30 20:34:57 danf Exp $
+ * $Id: speedcheck.c,v 1.24 2010-01-28 15:34:18 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <stdio.h>
 #include <string.h>
@@ -51,13 +51,13 @@
        to abort the download. */
 
     if( (howlong/1000) > data->set.low_speed_time) {
       /* we have been this slow for long enough, now die */
       failf(data,
             "Operation too slow. "
-            "Less than %d bytes/sec transfered the last %d seconds",
+            "Less than %ld bytes/sec transfered the last %ld seconds",
             data->set.low_speed_limit,
             data->set.low_speed_time);
       return CURLE_OPERATION_TIMEDOUT;
     }
     Curl_expire(data, howlong);
   }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/ssh.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/ssh.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/ssh.c	2009-10-31 06:28:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/ssh.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: ssh.c,v 1.141 2009-10-30 22:28:56 bagder Exp $
+ * $Id: ssh.c,v 1.146 2010-02-04 19:44:31 yangtse Exp $
  ***************************************************************************/
 
 /* #define CURL_LIBSSH2_DEBUG */
 
 #include "setup.h"
 
@@ -63,13 +63,13 @@
 #ifdef HAVE_UTSNAME_H
 #include <sys/utsname.h>
 #endif
 #ifdef HAVE_NETDB_H
 #include <netdb.h>
 #endif
-#ifdef  VMS
+#ifdef __VMS
 #include <in.h>
 #include <inet.h>
 #endif
 #endif /* !WIN32 */
 
 #if (defined(NETWARE) && defined(__NOVELL_LIBC__))
@@ -261,14 +261,42 @@
 
   return CURLE_SSH;
 }
 
 static CURLcode libssh2_session_error_to_CURLE(int err)
 {
-  if(err == LIBSSH2_ERROR_ALLOC)
-    return CURLE_OUT_OF_MEMORY;
+  switch (err) {
+    /* Ordered by order of appearance in libssh2.h */
+    case LIBSSH2_ERROR_NONE:
+      return CURLE_OK;
+
+    case LIBSSH2_ERROR_SOCKET_NONE:
+      return CURLE_COULDNT_CONNECT;
+
+    case LIBSSH2_ERROR_ALLOC:
+      return CURLE_OUT_OF_MEMORY;
+
+    case LIBSSH2_ERROR_SOCKET_SEND:
+      return CURLE_SEND_ERROR;
+
+    case LIBSSH2_ERROR_HOSTKEY_INIT:
+    case LIBSSH2_ERROR_HOSTKEY_SIGN:
+    case LIBSSH2_ERROR_PUBLICKEY_UNRECOGNIZED:
+    case LIBSSH2_ERROR_PUBLICKEY_UNVERIFIED:
+      return CURLE_PEER_FAILED_VERIFICATION;
+
+    case LIBSSH2_ERROR_PASSWORD_EXPIRED:
+      return CURLE_LOGIN_DENIED;
+
+    case LIBSSH2_ERROR_SOCKET_TIMEOUT:
+    case LIBSSH2_ERROR_TIMEOUT:
+      return CURLE_OPERATION_TIMEDOUT;
+
+    case LIBSSH2_ERROR_EAGAIN:
+      return CURLE_AGAIN;
+  }
 
   /* TODO: map some more of the libssh2 errors to the more appropriate CURLcode
      error code, and possibly add a few new SSH-related one. We must however
      not return or even depend on libssh2 errors in the public libcurl API */
 
   return CURLE_SSH;
@@ -456,16 +484,16 @@
 #define SFTP_SEEK(x,y) libssh2_sftp_seek64(x, (libssh2_uint64_t)y)
 #else
 #define SFTP_SEEK(x,y) libssh2_sftp_seek(x, (size_t)y)
 #endif
 
 /*
- * ssh_statemach_act() runs the SSH statemachine "one round" and returns.  The
- * data the pointer 'block' points to will be set to TRUE if the libssh2
- * function returns LIBSSH2_ERROR_EAGAIN meaning it wants to be called again
- * when the socket is ready
+ * ssh_statemach_act() runs the SSH state machine as far as it can without
+ * blocking and without reaching the end.  The data the pointer 'block' points
+ * to will be set to TRUE if the libssh2 function returns LIBSSH2_ERROR_EAGAIN
+ * meaning it wants to be called again when the socket is ready
  */
 
 static CURLcode ssh_statemach_act(struct connectdata *conn, bool *block)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
@@ -478,1766 +506,1772 @@
   const char *host_public_key_md5;
   int rc = LIBSSH2_ERROR_NONE, i;
   int err;
   int seekerr = CURL_SEEKFUNC_OK;
   *block = 0; /* we're not blocking by default */
 
-  switch(sshc->state) {
-  case SSH_S_STARTUP:
-    sshc->secondCreateDirs = 0;
-    sshc->nextstate = SSH_NO_STATE;
-    sshc->actualcode = CURLE_OK;
+  do {
 
-    rc = libssh2_session_startup(sshc->ssh_session, sock);
-    if(rc == LIBSSH2_ERROR_EAGAIN) {
-      break;
-    }
-    else if(rc) {
-      failf(data, "Failure establishing ssh session");
-      state(conn, SSH_SESSION_FREE);
-      sshc->actualcode = CURLE_FAILED_INIT;
-      break;
-    }
+    switch(sshc->state) {
+    case SSH_S_STARTUP:
+      sshc->secondCreateDirs = 0;
+      sshc->nextstate = SSH_NO_STATE;
+      sshc->actualcode = CURLE_OK;
+
+      rc = libssh2_session_startup(sshc->ssh_session, sock);
+      if(rc == LIBSSH2_ERROR_EAGAIN) {
+        break;
+      }
+      else if(rc) {
+        failf(data, "Failure establishing ssh session");
+        state(conn, SSH_SESSION_FREE);
+        sshc->actualcode = CURLE_FAILED_INIT;
+        break;
+      }
 
-    /* Set libssh2 to non-blocking, since everything internally is
-       non-blocking */
-    libssh2_session_set_blocking(sshc->ssh_session, 0);
+      /* Set libssh2 to non-blocking, since everything internally is
+         non-blocking */
+      libssh2_session_set_blocking(sshc->ssh_session, 0);
 
-    state(conn, SSH_HOSTKEY);
+      state(conn, SSH_HOSTKEY);
 
-    /* fall-through */
-  case SSH_HOSTKEY:
+      /* fall-through */
+    case SSH_HOSTKEY:
 
 #ifdef CURL_LIBSSH2_DEBUG
-    /*
-     * Before we authenticate we should check the hostkey's fingerprint
-     * against our known hosts. How that is handled (reading from file,
-     * whatever) is up to us. As for know not much is implemented, besides
-     * showing how to get the fingerprint.
-     */
-    fingerprint = libssh2_hostkey_hash(sshc->ssh_session,
-                                       LIBSSH2_HOSTKEY_HASH_MD5);
-
-    /* The fingerprint points to static storage (!), don't free() it. */
-    infof(data, "Fingerprint: ");
-    for (rc = 0; rc < 16; rc++) {
-      infof(data, "%02X ", (unsigned char) fingerprint[rc]);
-    }
-    infof(data, "\n");
+      /*
+       * Before we authenticate we should check the hostkey's fingerprint
+       * against our known hosts. How that is handled (reading from file,
+       * whatever) is up to us. As for know not much is implemented, besides
+       * showing how to get the fingerprint.
+       */
+      fingerprint = libssh2_hostkey_hash(sshc->ssh_session,
+                                         LIBSSH2_HOSTKEY_HASH_MD5);
+
+      /* The fingerprint points to static storage (!), don't free() it. */
+      infof(data, "Fingerprint: ");
+      for (rc = 0; rc < 16; rc++) {
+        infof(data, "%02X ", (unsigned char) fingerprint[rc]);
+      }
+      infof(data, "\n");
 #endif /* CURL_LIBSSH2_DEBUG */
 
-    /* Before we authenticate we check the hostkey's MD5 fingerprint
-     * against a known fingerprint, if available.  This implementation pulls
-     * it from the curl option.
-     */
-    if(data->set.str[STRING_SSH_HOST_PUBLIC_KEY_MD5] &&
-       strlen(data->set.str[STRING_SSH_HOST_PUBLIC_KEY_MD5]) == 32) {
-      char buf[33];
-      host_public_key_md5 = libssh2_hostkey_hash(sshc->ssh_session,
-                                                 LIBSSH2_HOSTKEY_HASH_MD5);
-      for (i = 0; i < 16; i++)
-        snprintf(&buf[i*2], 3, "%02x",
-                 (unsigned char) host_public_key_md5[i]);
-      if(!strequal(buf, data->set.str[STRING_SSH_HOST_PUBLIC_KEY_MD5])) {
-        failf(data,
-              "Denied establishing ssh session: mismatch md5 fingerprint. "
-              "Remote %s is not equal to %s",
-              buf, data->set.str[STRING_SSH_HOST_PUBLIC_KEY_MD5]);
-        state(conn, SSH_SESSION_FREE);
-        sshc->actualcode = CURLE_PEER_FAILED_VERIFICATION;
-        break;
+      /* Before we authenticate we check the hostkey's MD5 fingerprint
+       * against a known fingerprint, if available.  This implementation pulls
+       * it from the curl option.
+       */
+      if(data->set.str[STRING_SSH_HOST_PUBLIC_KEY_MD5] &&
+         strlen(data->set.str[STRING_SSH_HOST_PUBLIC_KEY_MD5]) == 32) {
+        char buf[33];
+        host_public_key_md5 = libssh2_hostkey_hash(sshc->ssh_session,
+                                                   LIBSSH2_HOSTKEY_HASH_MD5);
+        for (i = 0; i < 16; i++)
+          snprintf(&buf[i*2], 3, "%02x",
+                   (unsigned char) host_public_key_md5[i]);
+        if(!strequal(buf, data->set.str[STRING_SSH_HOST_PUBLIC_KEY_MD5])) {
+          failf(data,
+                "Denied establishing ssh session: mismatch md5 fingerprint. "
+                "Remote %s is not equal to %s",
+                buf, data->set.str[STRING_SSH_HOST_PUBLIC_KEY_MD5]);
+          state(conn, SSH_SESSION_FREE);
+          sshc->actualcode = CURLE_PEER_FAILED_VERIFICATION;
+          break;
+        }
       }
-    }
 
 #ifdef HAVE_LIBSSH2_KNOWNHOST_API
-    if(data->set.str[STRING_SSH_KNOWNHOSTS]) {
-      /* we're asked to verify the host against a file */
-      int keytype;
-      size_t keylen;
-      const char *remotekey = libssh2_session_hostkey(sshc->ssh_session,
-                                                      &keylen, &keytype);
-      int keycheck;
-      int keybit;
+      if(data->set.str[STRING_SSH_KNOWNHOSTS]) {
+        /* we're asked to verify the host against a file */
+        int keytype;
+        size_t keylen;
+        const char *remotekey = libssh2_session_hostkey(sshc->ssh_session,
+                                                        &keylen, &keytype);
+        int keycheck;
+        int keybit;
+
+        if(remotekey) {
+          /*
+           * A subject to figure out is what host name we need to pass in here.
+           * What host name does OpenSSH store in its file if an IDN name is
+           * used?
+           */
+          struct libssh2_knownhost *host;
+          enum curl_khmatch keymatch;
+          curl_sshkeycallback func =
+            data->set.ssh_keyfunc?data->set.ssh_keyfunc:sshkeycallback;
+          struct curl_khkey knownkey;
+          struct curl_khkey *knownkeyp = NULL;
+          struct curl_khkey foundkey;
+
+          keybit = (keytype == LIBSSH2_HOSTKEY_TYPE_RSA)?
+            LIBSSH2_KNOWNHOST_KEY_SSHRSA:LIBSSH2_KNOWNHOST_KEY_SSHDSS;
+
+          keycheck = libssh2_knownhost_check(sshc->kh,
+                                             conn->host.name,
+                                             remotekey, keylen,
+                                             LIBSSH2_KNOWNHOST_TYPE_PLAIN|
+                                             LIBSSH2_KNOWNHOST_KEYENC_RAW|
+                                             keybit,
+                                             &host);
+
+          infof(data, "SSH host check: %d, key: %s\n", keycheck,
+                (keycheck <= LIBSSH2_KNOWNHOST_CHECK_MISMATCH)?
+                host->key:"<none>");
+
+          /* setup 'knownkey' */
+          if(keycheck <= LIBSSH2_KNOWNHOST_CHECK_MISMATCH) {
+            knownkey.key = host->key;
+            knownkey.len = 0;
+            knownkey.keytype = (keytype == LIBSSH2_HOSTKEY_TYPE_RSA)?
+              CURLKHTYPE_RSA : CURLKHTYPE_DSS;
+            knownkeyp = &knownkey;
+          }
 
-      if(remotekey) {
-        /*
-         * A subject to figure out is what host name we need to pass in here.
-         * What host name does OpenSSH store in its file if an IDN name is
-         * used?
-         */
-        struct libssh2_knownhost *host;
-        enum curl_khmatch keymatch;
-        curl_sshkeycallback func =
-          data->set.ssh_keyfunc?data->set.ssh_keyfunc:sshkeycallback;
-        struct curl_khkey knownkey;
-        struct curl_khkey *knownkeyp = NULL;
-        struct curl_khkey foundkey;
-
-        keybit = (keytype == LIBSSH2_HOSTKEY_TYPE_RSA)?
-          LIBSSH2_KNOWNHOST_KEY_SSHRSA:LIBSSH2_KNOWNHOST_KEY_SSHDSS;
-
-        keycheck = libssh2_knownhost_check(sshc->kh,
-                                           conn->host.name,
-                                           remotekey, keylen,
-                                           LIBSSH2_KNOWNHOST_TYPE_PLAIN|
-                                           LIBSSH2_KNOWNHOST_KEYENC_RAW|
-                                           keybit,
-                                           &host);
-
-        infof(data, "SSH host check: %d, key: %s\n", keycheck,
-              (keycheck <= LIBSSH2_KNOWNHOST_CHECK_MISMATCH)?
-              host->key:"<none>");
-
-        /* setup 'knownkey' */
-        if(keycheck <= LIBSSH2_KNOWNHOST_CHECK_MISMATCH) {
-          knownkey.key = host->key;
-          knownkey.len = 0;
-          knownkey.keytype = (keytype == LIBSSH2_HOSTKEY_TYPE_RSA)?
+          /* setup 'foundkey' */
+          foundkey.key = remotekey;
+          foundkey.len = keylen;
+          foundkey.keytype = (keytype == LIBSSH2_HOSTKEY_TYPE_RSA)?
             CURLKHTYPE_RSA : CURLKHTYPE_DSS;
-          knownkeyp = &knownkey;
-        }
-
-        /* setup 'foundkey' */
-        foundkey.key = remotekey;
-        foundkey.len = keylen;
-        foundkey.keytype = (keytype == LIBSSH2_HOSTKEY_TYPE_RSA)?
-          CURLKHTYPE_RSA : CURLKHTYPE_DSS;
 
-        /*
-         * if any of the LIBSSH2_KNOWNHOST_CHECK_* defines and the
-         * curl_khmatch enum are ever modified, we need to introduce a
-         * translation table here!
-         */
-        keymatch = (enum curl_khmatch)keycheck;
-
-        /* Ask the callback how to behave */
-        rc = func(data, knownkeyp, /* from the knownhosts file */
-                  &foundkey, /* from the remote host */
-                  keymatch, data->set.ssh_keyfunc_userp);
-      }
-      else
-        /* no remotekey means failure! */
-        rc = CURLKHSTAT_REJECT;
+          /*
+           * if any of the LIBSSH2_KNOWNHOST_CHECK_* defines and the
+           * curl_khmatch enum are ever modified, we need to introduce a
+           * translation table here!
+           */
+          keymatch = (enum curl_khmatch)keycheck;
+
+          /* Ask the callback how to behave */
+          rc = func(data, knownkeyp, /* from the knownhosts file */
+                    &foundkey, /* from the remote host */
+                    keymatch, data->set.ssh_keyfunc_userp);
+        }
+        else
+          /* no remotekey means failure! */
+          rc = CURLKHSTAT_REJECT;
 
-      switch(rc) {
-      default: /* unknown return codes will equal reject */
-      case CURLKHSTAT_REJECT:
-        state(conn, SSH_SESSION_FREE);
-      case CURLKHSTAT_DEFER:
-        /* DEFER means bail out but keep the SSH_HOSTKEY state */
-        result = sshc->actualcode = CURLE_PEER_FAILED_VERIFICATION;
-        break;
-      case CURLKHSTAT_FINE:
-      case CURLKHSTAT_FINE_ADD_TO_FILE:
-        /* proceed */
-        if(keycheck != LIBSSH2_KNOWNHOST_CHECK_MATCH) {
-          /* the found host+key didn't match but has been told to be fine
-             anyway so we add it in memory */
-          int addrc = libssh2_knownhost_add(sshc->kh,
-                                            conn->host.name, NULL,
-                                            remotekey, keylen,
-                                            LIBSSH2_KNOWNHOST_TYPE_PLAIN|
-                                            LIBSSH2_KNOWNHOST_KEYENC_RAW|
-                                            keybit, NULL);
-          if(addrc)
-            infof(data, "Warning adding the known host %s failed!\n",
-                  conn->host.name);
-          else if(rc == CURLKHSTAT_FINE_ADD_TO_FILE) {
-            /* now we write the entire in-memory list of known hosts to the
-               known_hosts file */
-            int wrc =
-              libssh2_knownhost_writefile(sshc->kh,
-                                          data->set.str[STRING_SSH_KNOWNHOSTS],
-                                          LIBSSH2_KNOWNHOST_FILE_OPENSSH);
-            if(wrc) {
-              infof(data, "Warning, writing %s failed!\n",
-                    data->set.str[STRING_SSH_KNOWNHOSTS]);
+        switch(rc) {
+        default: /* unknown return codes will equal reject */
+        case CURLKHSTAT_REJECT:
+          state(conn, SSH_SESSION_FREE);
+        case CURLKHSTAT_DEFER:
+          /* DEFER means bail out but keep the SSH_HOSTKEY state */
+          result = sshc->actualcode = CURLE_PEER_FAILED_VERIFICATION;
+          break;
+        case CURLKHSTAT_FINE:
+        case CURLKHSTAT_FINE_ADD_TO_FILE:
+          /* proceed */
+          if(keycheck != LIBSSH2_KNOWNHOST_CHECK_MATCH) {
+            /* the found host+key didn't match but has been told to be fine
+               anyway so we add it in memory */
+            int addrc = libssh2_knownhost_add(sshc->kh,
+                                              conn->host.name, NULL,
+                                              remotekey, keylen,
+                                              LIBSSH2_KNOWNHOST_TYPE_PLAIN|
+                                              LIBSSH2_KNOWNHOST_KEYENC_RAW|
+                                              keybit, NULL);
+            if(addrc)
+              infof(data, "Warning adding the known host %s failed!\n",
+                    conn->host.name);
+            else if(rc == CURLKHSTAT_FINE_ADD_TO_FILE) {
+              /* now we write the entire in-memory list of known hosts to the
+                 known_hosts file */
+              int wrc =
+                libssh2_knownhost_writefile(sshc->kh,
+                                            data->set.str[STRING_SSH_KNOWNHOSTS],
+                                            LIBSSH2_KNOWNHOST_FILE_OPENSSH);
+              if(wrc) {
+                infof(data, "Warning, writing %s failed!\n",
+                      data->set.str[STRING_SSH_KNOWNHOSTS]);
+              }
             }
           }
+          break;
         }
-        break;
       }
-    }
 #endif /* HAVE_LIBSSH2_KNOWNHOST_API */
 
-    state(conn, SSH_AUTHLIST);
-    break;
-
-  case SSH_AUTHLIST:
-    /*
-     * Figure out authentication methods
-     * NB: As soon as we have provided a username to an openssh server we
-     * must never change it later. Thus, always specify the correct username
-     * here, even though the libssh2 docs kind of indicate that it should be
-     * possible to get a 'generic' list (not user-specific) of authentication
-     * methods, presumably with a blank username. That won't work in my
-     * experience.
-     * So always specify it here.
-     */
-    sshc->authlist = libssh2_userauth_list(sshc->ssh_session,
-                                           conn->user,
-                                           strlen(conn->user));
-
-    if(!sshc->authlist) {
-      if((err = libssh2_session_last_errno(sshc->ssh_session)) ==
-         LIBSSH2_ERROR_EAGAIN) {
-        rc = LIBSSH2_ERROR_EAGAIN;
-        break;
-      }
-      else {
-        state(conn, SSH_SESSION_FREE);
-        sshc->actualcode = libssh2_session_error_to_CURLE(err);
-        break;
-      }
-    }
-    infof(data, "SSH authentication methods available: %s\n", sshc->authlist);
-
-    state(conn, SSH_AUTH_PKEY_INIT);
-    break;
-
-  case SSH_AUTH_PKEY_INIT:
-    /*
-     * Check the supported auth types in the order I feel is most secure
-     * with the requested type of authentication
-     */
-    sshc->authed = FALSE;
-
-    if((data->set.ssh_auth_types & CURLSSH_AUTH_PUBLICKEY) &&
-       (strstr(sshc->authlist, "publickey") != NULL)) {
-      char *home;
-
-      sshc->rsa_pub = sshc->rsa = NULL;
-
-      /* To ponder about: should really the lib be messing about with the
-         HOME environment variable etc? */
-      home = curl_getenv("HOME");
-
-      if(data->set.str[STRING_SSH_PUBLIC_KEY])
-        sshc->rsa_pub = aprintf("%s", data->set.str[STRING_SSH_PUBLIC_KEY]);
-      else if(home)
-        sshc->rsa_pub = aprintf("%s/.ssh/id_dsa.pub", home);
-      else
-        /* as a final resort, try current dir! */
-        sshc->rsa_pub = strdup("id_dsa.pub");
-
-      if(sshc->rsa_pub == NULL) {
-        Curl_safefree(home);
-        home = NULL;
-        state(conn, SSH_SESSION_FREE);
-        sshc->actualcode = CURLE_OUT_OF_MEMORY;
-        break;
-      }
-
-      if(data->set.str[STRING_SSH_PRIVATE_KEY])
-        sshc->rsa = aprintf("%s", data->set.str[STRING_SSH_PRIVATE_KEY]);
-      else if(home)
-        sshc->rsa = aprintf("%s/.ssh/id_dsa", home);
-      else
-        /* as a final resort, try current dir! */
-        sshc->rsa = strdup("id_dsa");
-
-      if(sshc->rsa == NULL) {
-        Curl_safefree(home);
-        home = NULL;
-        Curl_safefree(sshc->rsa_pub);
-        sshc->rsa_pub = NULL;
-        state(conn, SSH_SESSION_FREE);
-        sshc->actualcode = CURLE_OUT_OF_MEMORY;
-        break;
-      }
-
-      sshc->passphrase = data->set.str[STRING_KEY_PASSWD];
-      if(!sshc->passphrase)
-        sshc->passphrase = "";
-
-      Curl_safefree(home);
-      home = NULL;
-
-      infof(data, "Using ssh public key file %s\n", sshc->rsa_pub);
-      infof(data, "Using ssh private key file %s\n", sshc->rsa);
-
-      state(conn, SSH_AUTH_PKEY);
-    }
-    else {
-      state(conn, SSH_AUTH_PASS_INIT);
-    }
-    break;
-
-  case SSH_AUTH_PKEY:
-    /* The function below checks if the files exists, no need to stat() here.
-     */
-    rc = libssh2_userauth_publickey_fromfile(sshc->ssh_session,
-                                             conn->user, sshc->rsa_pub,
-                                             sshc->rsa, sshc->passphrase);
-    if(rc == LIBSSH2_ERROR_EAGAIN) {
+      state(conn, SSH_AUTHLIST);
       break;
-    }
-
-    Curl_safefree(sshc->rsa_pub);
-    sshc->rsa_pub = NULL;
-    Curl_safefree(sshc->rsa);
-    sshc->rsa = NULL;
-
-    if(rc == 0) {
-      sshc->authed = TRUE;
-      infof(data, "Initialized SSH public key authentication\n");
-      state(conn, SSH_AUTH_DONE);
-    }
-    else {
-      char *err_msg;
-      (void)libssh2_session_last_error(sshc->ssh_session,
-                                       &err_msg, NULL, 0);
-      infof(data, "SSH public key authentication failed: %s\n", err_msg);
-      state(conn, SSH_AUTH_PASS_INIT);
-    }
-    break;
 
-  case SSH_AUTH_PASS_INIT:
-    if((data->set.ssh_auth_types & CURLSSH_AUTH_PASSWORD) &&
-       (strstr(sshc->authlist, "password") != NULL)) {
-      state(conn, SSH_AUTH_PASS);
-    }
-    else {
-      state(conn, SSH_AUTH_HOST_INIT);
-    }
-    break;
+    case SSH_AUTHLIST:
+      /*
+       * Figure out authentication methods
+       * NB: As soon as we have provided a username to an openssh server we
+       * must never change it later. Thus, always specify the correct username
+       * here, even though the libssh2 docs kind of indicate that it should be
+       * possible to get a 'generic' list (not user-specific) of authentication
+       * methods, presumably with a blank username. That won't work in my
+       * experience.
+       * So always specify it here.
+       */
+      sshc->authlist = libssh2_userauth_list(sshc->ssh_session,
+                                             conn->user,
+                                             strlen(conn->user));
+
+      if(!sshc->authlist) {
+        if((err = libssh2_session_last_errno(sshc->ssh_session)) ==
+           LIBSSH2_ERROR_EAGAIN) {
+          rc = LIBSSH2_ERROR_EAGAIN;
+          break;
+        }
+        else {
+          state(conn, SSH_SESSION_FREE);
+          sshc->actualcode = libssh2_session_error_to_CURLE(err);
+          break;
+        }
+      }
+      infof(data, "SSH authentication methods available: %s\n", sshc->authlist);
 
-  case SSH_AUTH_PASS:
-    rc = libssh2_userauth_password(sshc->ssh_session, conn->user,
-                                   conn->passwd);
-    if(rc == LIBSSH2_ERROR_EAGAIN) {
+      state(conn, SSH_AUTH_PKEY_INIT);
       break;
-    }
-    else if(rc == 0) {
-      sshc->authed = TRUE;
-      infof(data, "Initialized password authentication\n");
-      state(conn, SSH_AUTH_DONE);
-    }
-    else {
-      state(conn, SSH_AUTH_HOST_INIT);
-    }
-    break;
 
-  case SSH_AUTH_HOST_INIT:
-    if((data->set.ssh_auth_types & CURLSSH_AUTH_HOST) &&
-       (strstr(sshc->authlist, "hostbased") != NULL)) {
-      state(conn, SSH_AUTH_HOST);
-    }
-    else {
-      state(conn, SSH_AUTH_KEY_INIT);
-    }
-    break;
+    case SSH_AUTH_PKEY_INIT:
+      /*
+       * Check the supported auth types in the order I feel is most secure
+       * with the requested type of authentication
+       */
+      sshc->authed = FALSE;
 
-  case SSH_AUTH_HOST:
-    state(conn, SSH_AUTH_KEY_INIT);
-    break;
+      if((data->set.ssh_auth_types & CURLSSH_AUTH_PUBLICKEY) &&
+         (strstr(sshc->authlist, "publickey") != NULL)) {
+        char *home;
+
+        sshc->rsa_pub = sshc->rsa = NULL;
+
+        /* To ponder about: should really the lib be messing about with the
+           HOME environment variable etc? */
+        home = curl_getenv("HOME");
+
+        if(data->set.str[STRING_SSH_PUBLIC_KEY])
+          sshc->rsa_pub = aprintf("%s", data->set.str[STRING_SSH_PUBLIC_KEY]);
+        else if(home)
+          sshc->rsa_pub = aprintf("%s/.ssh/id_dsa.pub", home);
+        else
+          /* as a final resort, try current dir! */
+          sshc->rsa_pub = strdup("id_dsa.pub");
 
-  case SSH_AUTH_KEY_INIT:
-    if((data->set.ssh_auth_types & CURLSSH_AUTH_KEYBOARD)
-       && (strstr(sshc->authlist, "keyboard-interactive") != NULL)) {
-      state(conn, SSH_AUTH_KEY);
-    }
-    else {
-      state(conn, SSH_AUTH_DONE);
-    }
-    break;
+        if(sshc->rsa_pub == NULL) {
+          Curl_safefree(home);
+          home = NULL;
+          state(conn, SSH_SESSION_FREE);
+          sshc->actualcode = CURLE_OUT_OF_MEMORY;
+          break;
+        }
 
-  case SSH_AUTH_KEY:
-    /* Authentication failed. Continue with keyboard-interactive now. */
-    rc = libssh2_userauth_keyboard_interactive_ex(sshc->ssh_session,
-                                                  conn->user,
-                                                  strlen(conn->user),
-                                                  &kbd_callback);
-    if(rc == LIBSSH2_ERROR_EAGAIN) {
-      break;
-    }
-    else if(rc == 0) {
-      sshc->authed = TRUE;
-      infof(data, "Initialized keyboard interactive authentication\n");
-    }
-    state(conn, SSH_AUTH_DONE);
-    break;
+        if(data->set.str[STRING_SSH_PRIVATE_KEY])
+          sshc->rsa = aprintf("%s", data->set.str[STRING_SSH_PRIVATE_KEY]);
+        else if(home)
+          sshc->rsa = aprintf("%s/.ssh/id_dsa", home);
+        else
+          /* as a final resort, try current dir! */
+          sshc->rsa = strdup("id_dsa");
 
-  case SSH_AUTH_DONE:
-    if(!sshc->authed) {
-      failf(data, "Authentication failure");
-      state(conn, SSH_SESSION_FREE);
-      sshc->actualcode = CURLE_LOGIN_DENIED;
-      break;
-    }
+        if(sshc->rsa == NULL) {
+          Curl_safefree(home);
+          home = NULL;
+          Curl_safefree(sshc->rsa_pub);
+          sshc->rsa_pub = NULL;
+          state(conn, SSH_SESSION_FREE);
+          sshc->actualcode = CURLE_OUT_OF_MEMORY;
+          break;
+        }
 
-    /*
-     * At this point we have an authenticated ssh session.
-     */
-    infof(data, "Authentication complete\n");
+        sshc->passphrase = data->set.str[STRING_KEY_PASSWD];
+        if(!sshc->passphrase)
+          sshc->passphrase = "";
 
-    Curl_pgrsTime(conn->data, TIMER_APPCONNECT); /* SSH is connected */
+        Curl_safefree(home);
+        home = NULL;
 
-    conn->sockfd = sock;
-    conn->writesockfd = CURL_SOCKET_BAD;
+        infof(data, "Using ssh public key file %s\n", sshc->rsa_pub);
+        infof(data, "Using ssh private key file %s\n", sshc->rsa);
 
-    if(conn->protocol == PROT_SFTP) {
-      state(conn, SSH_SFTP_INIT);
+        state(conn, SSH_AUTH_PKEY);
+      }
+      else {
+        state(conn, SSH_AUTH_PASS_INIT);
+      }
       break;
-    }
-    infof(data, "SSH CONNECT phase done\n");
-    state(conn, SSH_STOP);
-    break;
 
-  case SSH_SFTP_INIT:
-    /*
-     * Start the libssh2 sftp session
-     */
-    sshc->sftp_session = libssh2_sftp_init(sshc->ssh_session);
-    if(!sshc->sftp_session) {
-      if(libssh2_session_last_errno(sshc->ssh_session) ==
-         LIBSSH2_ERROR_EAGAIN) {
-        rc = LIBSSH2_ERROR_EAGAIN;
+    case SSH_AUTH_PKEY:
+      /* The function below checks if the files exists, no need to stat() here.
+       */
+      rc = libssh2_userauth_publickey_fromfile(sshc->ssh_session,
+                                               conn->user, sshc->rsa_pub,
+                                               sshc->rsa, sshc->passphrase);
+      if(rc == LIBSSH2_ERROR_EAGAIN) {
         break;
       }
+
+      Curl_safefree(sshc->rsa_pub);
+      sshc->rsa_pub = NULL;
+      Curl_safefree(sshc->rsa);
+      sshc->rsa = NULL;
+
+      if(rc == 0) {
+        sshc->authed = TRUE;
+        infof(data, "Initialized SSH public key authentication\n");
+        state(conn, SSH_AUTH_DONE);
+      }
       else {
         char *err_msg;
-
         (void)libssh2_session_last_error(sshc->ssh_session,
                                          &err_msg, NULL, 0);
-        failf(data, "Failure initializing sftp session: %s", err_msg);
-        state(conn, SSH_SESSION_FREE);
-        sshc->actualcode = CURLE_FAILED_INIT;
-        break;
+        infof(data, "SSH public key authentication failed: %s\n", err_msg);
+        state(conn, SSH_AUTH_PASS_INIT);
       }
-    }
-    state(conn, SSH_SFTP_REALPATH);
-    break;
+      break;
 
-  case SSH_SFTP_REALPATH:
-  {
-    char tempHome[PATH_MAX];
-
-    /*
-     * Get the "home" directory
-     */
-    rc = libssh2_sftp_realpath(sshc->sftp_session, ".",
-                               tempHome, PATH_MAX-1);
-    if(rc == LIBSSH2_ERROR_EAGAIN) {
+    case SSH_AUTH_PASS_INIT:
+      if((data->set.ssh_auth_types & CURLSSH_AUTH_PASSWORD) &&
+         (strstr(sshc->authlist, "password") != NULL)) {
+        state(conn, SSH_AUTH_PASS);
+      }
+      else {
+        state(conn, SSH_AUTH_HOST_INIT);
+      }
       break;
-    }
-    else if(rc > 0) {
-      /* It seems that this string is not always NULL terminated */
-      tempHome[rc] = '\0';
-      sshc->homedir = strdup(tempHome);
-      if(!sshc->homedir) {
-        state(conn, SSH_SFTP_CLOSE);
-        sshc->actualcode = CURLE_OUT_OF_MEMORY;
+
+    case SSH_AUTH_PASS:
+      rc = libssh2_userauth_password(sshc->ssh_session, conn->user,
+                                     conn->passwd);
+      if(rc == LIBSSH2_ERROR_EAGAIN) {
         break;
       }
-    }
-    else {
-      /* Return the error type */
-      err = libssh2_sftp_last_error(sshc->sftp_session);
-      result = sftp_libssh2_error_to_CURLE(err);
-      sshc->actualcode = result?result:CURLE_SSH;
-      DEBUGF(infof(data, "error = %d makes libcurl = %d\n", err, result));
-      state(conn, SSH_STOP);
+      else if(rc == 0) {
+        sshc->authed = TRUE;
+        infof(data, "Initialized password authentication\n");
+        state(conn, SSH_AUTH_DONE);
+      }
+      else {
+        state(conn, SSH_AUTH_HOST_INIT);
+      }
       break;
-    }
-  }
-  /* This is the last step in the SFTP connect phase. Do note that while
-     we get the homedir here, we get the "workingpath" in the DO action
-     since the homedir will remain the same between request but the
-     working path will not. */
-  DEBUGF(infof(data, "SSH CONNECT phase done\n"));
-  state(conn, SSH_STOP);
-  break;
-
-  case SSH_SFTP_QUOTE_INIT:
 
-    result = ssh_getworkingpath(conn, sshc->homedir, &sftp_scp->path);
-    if(result) {
-      sshc->actualcode = result;
-      state(conn, SSH_STOP);
+    case SSH_AUTH_HOST_INIT:
+      if((data->set.ssh_auth_types & CURLSSH_AUTH_HOST) &&
+         (strstr(sshc->authlist, "hostbased") != NULL)) {
+        state(conn, SSH_AUTH_HOST);
+      }
+      else {
+        state(conn, SSH_AUTH_KEY_INIT);
+      }
       break;
-    }
 
-    if(data->set.quote) {
-      infof(data, "Sending quote commands\n");
-      sshc->quote_item = data->set.quote;
-      state(conn, SSH_SFTP_QUOTE);
-    }
-    else {
-      state(conn, SSH_SFTP_TRANS_INIT);
-    }
-    break;
+    case SSH_AUTH_HOST:
+      state(conn, SSH_AUTH_KEY_INIT);
+      break;
 
-  case SSH_SFTP_POSTQUOTE_INIT:
-    if(data->set.postquote) {
-      infof(data, "Sending quote commands\n");
-      sshc->quote_item = data->set.postquote;
-      state(conn, SSH_SFTP_QUOTE);
-    }
-    else {
-      state(conn, SSH_STOP);
-    }
-    break;
+    case SSH_AUTH_KEY_INIT:
+      if((data->set.ssh_auth_types & CURLSSH_AUTH_KEYBOARD)
+         && (strstr(sshc->authlist, "keyboard-interactive") != NULL)) {
+        state(conn, SSH_AUTH_KEY);
+      }
+      else {
+        state(conn, SSH_AUTH_DONE);
+      }
+      break;
 
-  case SSH_SFTP_QUOTE:
-    /* Send any quote commands */
-  {
-    const char *cp;
-
-    /*
-     * Support some of the "FTP" commands
-     */
-    if(curl_strequal("pwd", sshc->quote_item->data)) {
-      /* output debug output if that is requested */
-      if(data->set.verbose) {
-        char tmp[PATH_MAX+1];
-
-        Curl_debug(data, CURLINFO_HEADER_OUT, (char *)"PWD\n", 4, conn);
-        snprintf(tmp, PATH_MAX, "257 \"%s\" is current directory.\n",
-                 sftp_scp->path);
-        Curl_debug(data, CURLINFO_HEADER_IN, tmp, strlen(tmp), conn);
+    case SSH_AUTH_KEY:
+      /* Authentication failed. Continue with keyboard-interactive now. */
+      rc = libssh2_userauth_keyboard_interactive_ex(sshc->ssh_session,
+                                                    conn->user,
+                                                    strlen(conn->user),
+                                                    &kbd_callback);
+      if(rc == LIBSSH2_ERROR_EAGAIN) {
+        break;
       }
-      state(conn, SSH_SFTP_NEXT_QUOTE);
+      else if(rc == 0) {
+        sshc->authed = TRUE;
+        infof(data, "Initialized keyboard interactive authentication\n");
+      }
+      state(conn, SSH_AUTH_DONE);
       break;
-    }
-    else if(sshc->quote_item->data) {
-      /*
-       * the arguments following the command must be separated from the
-       * command with a space so we can check for it unconditionally
-       */
-      cp = strchr(sshc->quote_item->data, ' ');
-      if(cp == NULL) {
-        failf(data, "Syntax error in SFTP command. Supply parameter(s)!");
-        state(conn, SSH_SFTP_CLOSE);
-        sshc->actualcode = CURLE_QUOTE_ERROR;
+
+    case SSH_AUTH_DONE:
+      if(!sshc->authed) {
+        failf(data, "Authentication failure");
+        state(conn, SSH_SESSION_FREE);
+        sshc->actualcode = CURLE_LOGIN_DENIED;
         break;
       }
 
       /*
-       * also, every command takes at least one argument so we get that
-       * first argument right now
+       * At this point we have an authenticated ssh session.
        */
-      result = get_pathname(&cp, &sshc->quote_path1);
-      if(result) {
-        if(result == CURLE_OUT_OF_MEMORY)
-          failf(data, "Out of memory");
-        else
-          failf(data, "Syntax error: Bad first parameter");
-        state(conn, SSH_SFTP_CLOSE);
-        sshc->actualcode = result;
+      infof(data, "Authentication complete\n");
+
+      Curl_pgrsTime(conn->data, TIMER_APPCONNECT); /* SSH is connected */
+
+      conn->sockfd = sock;
+      conn->writesockfd = CURL_SOCKET_BAD;
+
+      if(conn->protocol == PROT_SFTP) {
+        state(conn, SSH_SFTP_INIT);
         break;
       }
+      infof(data, "SSH CONNECT phase done\n");
+      state(conn, SSH_STOP);
+      break;
 
+    case SSH_SFTP_INIT:
       /*
-       * SFTP is a binary protocol, so we don't send text commands to
-       * the server. Instead, we scan for commands for commands used by
-       * OpenSSH's sftp program and call the appropriate libssh2
-       * functions.
+       * Start the libssh2 sftp session
        */
-      if(curl_strnequal(sshc->quote_item->data, "chgrp ", 6) ||
-         curl_strnequal(sshc->quote_item->data, "chmod ", 6) ||
-         curl_strnequal(sshc->quote_item->data, "chown ", 6) ) {
-        /* attribute change */
-
-        /* sshc->quote_path1 contains the mode to set */
-        /* get the destination */
-        result = get_pathname(&cp, &sshc->quote_path2);
-        if(result) {
-          if(result == CURLE_OUT_OF_MEMORY)
-            failf(data, "Out of memory");
-          else
-            failf(data, "Syntax error in chgrp/chmod/chown: "
-                  "Bad second parameter");
-          Curl_safefree(sshc->quote_path1);
-          sshc->quote_path1 = NULL;
-          state(conn, SSH_SFTP_CLOSE);
-          sshc->actualcode = result;
+      sshc->sftp_session = libssh2_sftp_init(sshc->ssh_session);
+      if(!sshc->sftp_session) {
+        if(libssh2_session_last_errno(sshc->ssh_session) ==
+           LIBSSH2_ERROR_EAGAIN) {
+          rc = LIBSSH2_ERROR_EAGAIN;
+          break;
+        }
+        else {
+          char *err_msg;
+
+          (void)libssh2_session_last_error(sshc->ssh_session,
+                                           &err_msg, NULL, 0);
+          failf(data, "Failure initializing sftp session: %s", err_msg);
+          state(conn, SSH_SESSION_FREE);
+          sshc->actualcode = CURLE_FAILED_INIT;
           break;
         }
-        memset(&sshc->quote_attrs, 0, sizeof(LIBSSH2_SFTP_ATTRIBUTES));
-        state(conn, SSH_SFTP_QUOTE_STAT);
+      }
+      state(conn, SSH_SFTP_REALPATH);
+      break;
+
+    case SSH_SFTP_REALPATH:
+    {
+      char tempHome[PATH_MAX];
+
+      /*
+       * Get the "home" directory
+       */
+      rc = libssh2_sftp_realpath(sshc->sftp_session, ".",
+                                 tempHome, PATH_MAX-1);
+      if(rc == LIBSSH2_ERROR_EAGAIN) {
         break;
       }
-      else if(curl_strnequal(sshc->quote_item->data, "ln ", 3) ||
-              curl_strnequal(sshc->quote_item->data, "symlink ", 8)) {
-        /* symbolic linking */
-        /* sshc->quote_path1 is the source */
-        /* get the destination */
-        result = get_pathname(&cp, &sshc->quote_path2);
-        if(result) {
-          if(result == CURLE_OUT_OF_MEMORY)
-            failf(data, "Out of memory");
-          else
-            failf(data,
-                  "Syntax error in ln/symlink: Bad second parameter");
-          Curl_safefree(sshc->quote_path1);
-          sshc->quote_path1 = NULL;
+      else if(rc > 0) {
+        /* It seems that this string is not always NULL terminated */
+        tempHome[rc] = '\0';
+        sshc->homedir = strdup(tempHome);
+        if(!sshc->homedir) {
           state(conn, SSH_SFTP_CLOSE);
-          sshc->actualcode = result;
+          sshc->actualcode = CURLE_OUT_OF_MEMORY;
           break;
         }
-        state(conn, SSH_SFTP_QUOTE_SYMLINK);
-        break;
       }
-      else if(curl_strnequal(sshc->quote_item->data, "mkdir ", 6)) {
-        /* create dir */
-        state(conn, SSH_SFTP_QUOTE_MKDIR);
+      else {
+        /* Return the error type */
+        err = libssh2_sftp_last_error(sshc->sftp_session);
+        result = sftp_libssh2_error_to_CURLE(err);
+        sshc->actualcode = result?result:CURLE_SSH;
+        DEBUGF(infof(data, "error = %d makes libcurl = %d\n",
+                     err, (int)result));
+        state(conn, SSH_STOP);
+        break;
+      }
+    }
+    /* This is the last step in the SFTP connect phase. Do note that while
+       we get the homedir here, we get the "workingpath" in the DO action
+       since the homedir will remain the same between request but the
+       working path will not. */
+    DEBUGF(infof(data, "SSH CONNECT phase done\n"));
+    state(conn, SSH_STOP);
+    break;
+
+    case SSH_SFTP_QUOTE_INIT:
+
+      result = ssh_getworkingpath(conn, sshc->homedir, &sftp_scp->path);
+      if(result) {
+        sshc->actualcode = result;
+        state(conn, SSH_STOP);
+        break;
+      }
+
+      if(data->set.quote) {
+        infof(data, "Sending quote commands\n");
+        sshc->quote_item = data->set.quote;
+        state(conn, SSH_SFTP_QUOTE);
+      }
+      else {
+        state(conn, SSH_SFTP_TRANS_INIT);
+      }
+      break;
+
+    case SSH_SFTP_POSTQUOTE_INIT:
+      if(data->set.postquote) {
+        infof(data, "Sending quote commands\n");
+        sshc->quote_item = data->set.postquote;
+        state(conn, SSH_SFTP_QUOTE);
+      }
+      else {
+        state(conn, SSH_STOP);
+      }
+      break;
+
+    case SSH_SFTP_QUOTE:
+      /* Send any quote commands */
+    {
+      const char *cp;
+
+      /*
+       * Support some of the "FTP" commands
+       */
+      if(curl_strequal("pwd", sshc->quote_item->data)) {
+        /* output debug output if that is requested */
+        if(data->set.verbose) {
+          char tmp[PATH_MAX+1];
+
+          Curl_debug(data, CURLINFO_HEADER_OUT, (char *)"PWD\n", 4, conn);
+          snprintf(tmp, PATH_MAX, "257 \"%s\" is current directory.\n",
+                   sftp_scp->path);
+          Curl_debug(data, CURLINFO_HEADER_IN, tmp, strlen(tmp), conn);
+        }
+        state(conn, SSH_SFTP_NEXT_QUOTE);
         break;
       }
-      else if(curl_strnequal(sshc->quote_item->data, "rename ", 7)) {
-        /* rename file */
-        /* first param is the source path */
-        /* second param is the dest. path */
-        result = get_pathname(&cp, &sshc->quote_path2);
+      else if(sshc->quote_item->data) {
+        /*
+         * the arguments following the command must be separated from the
+         * command with a space so we can check for it unconditionally
+         */
+        cp = strchr(sshc->quote_item->data, ' ');
+        if(cp == NULL) {
+          failf(data, "Syntax error in SFTP command. Supply parameter(s)!");
+          state(conn, SSH_SFTP_CLOSE);
+          sshc->actualcode = CURLE_QUOTE_ERROR;
+          break;
+        }
+
+        /*
+         * also, every command takes at least one argument so we get that
+         * first argument right now
+         */
+        result = get_pathname(&cp, &sshc->quote_path1);
         if(result) {
           if(result == CURLE_OUT_OF_MEMORY)
             failf(data, "Out of memory");
           else
-            failf(data, "Syntax error in rename: Bad second parameter");
-          Curl_safefree(sshc->quote_path1);
-          sshc->quote_path1 = NULL;
+            failf(data, "Syntax error: Bad first parameter");
           state(conn, SSH_SFTP_CLOSE);
           sshc->actualcode = result;
           break;
         }
-        state(conn, SSH_SFTP_QUOTE_RENAME);
+
+        /*
+         * SFTP is a binary protocol, so we don't send text commands to
+         * the server. Instead, we scan for commands for commands used by
+         * OpenSSH's sftp program and call the appropriate libssh2
+         * functions.
+         */
+        if(curl_strnequal(sshc->quote_item->data, "chgrp ", 6) ||
+           curl_strnequal(sshc->quote_item->data, "chmod ", 6) ||
+           curl_strnequal(sshc->quote_item->data, "chown ", 6) ) {
+          /* attribute change */
+
+          /* sshc->quote_path1 contains the mode to set */
+          /* get the destination */
+          result = get_pathname(&cp, &sshc->quote_path2);
+          if(result) {
+            if(result == CURLE_OUT_OF_MEMORY)
+              failf(data, "Out of memory");
+            else
+              failf(data, "Syntax error in chgrp/chmod/chown: "
+                    "Bad second parameter");
+            Curl_safefree(sshc->quote_path1);
+            sshc->quote_path1 = NULL;
+            state(conn, SSH_SFTP_CLOSE);
+            sshc->actualcode = result;
+            break;
+          }
+          memset(&sshc->quote_attrs, 0, sizeof(LIBSSH2_SFTP_ATTRIBUTES));
+          state(conn, SSH_SFTP_QUOTE_STAT);
+          break;
+        }
+        else if(curl_strnequal(sshc->quote_item->data, "ln ", 3) ||
+                curl_strnequal(sshc->quote_item->data, "symlink ", 8)) {
+          /* symbolic linking */
+          /* sshc->quote_path1 is the source */
+          /* get the destination */
+          result = get_pathname(&cp, &sshc->quote_path2);
+          if(result) {
+            if(result == CURLE_OUT_OF_MEMORY)
+              failf(data, "Out of memory");
+            else
+              failf(data,
+                    "Syntax error in ln/symlink: Bad second parameter");
+            Curl_safefree(sshc->quote_path1);
+            sshc->quote_path1 = NULL;
+            state(conn, SSH_SFTP_CLOSE);
+            sshc->actualcode = result;
+            break;
+          }
+          state(conn, SSH_SFTP_QUOTE_SYMLINK);
+          break;
+        }
+        else if(curl_strnequal(sshc->quote_item->data, "mkdir ", 6)) {
+          /* create dir */
+          state(conn, SSH_SFTP_QUOTE_MKDIR);
+          break;
+        }
+        else if(curl_strnequal(sshc->quote_item->data, "rename ", 7)) {
+          /* rename file */
+          /* first param is the source path */
+          /* second param is the dest. path */
+          result = get_pathname(&cp, &sshc->quote_path2);
+          if(result) {
+            if(result == CURLE_OUT_OF_MEMORY)
+              failf(data, "Out of memory");
+            else
+              failf(data, "Syntax error in rename: Bad second parameter");
+            Curl_safefree(sshc->quote_path1);
+            sshc->quote_path1 = NULL;
+            state(conn, SSH_SFTP_CLOSE);
+            sshc->actualcode = result;
+            break;
+          }
+          state(conn, SSH_SFTP_QUOTE_RENAME);
+          break;
+        }
+        else if(curl_strnequal(sshc->quote_item->data, "rmdir ", 6)) {
+          /* delete dir */
+          state(conn, SSH_SFTP_QUOTE_RMDIR);
+          break;
+        }
+        else if(curl_strnequal(sshc->quote_item->data, "rm ", 3)) {
+          state(conn, SSH_SFTP_QUOTE_UNLINK);
+          break;
+        }
+
+        failf(data, "Unknown SFTP command");
+        Curl_safefree(sshc->quote_path1);
+        sshc->quote_path1 = NULL;
+        Curl_safefree(sshc->quote_path2);
+        sshc->quote_path2 = NULL;
+        state(conn, SSH_SFTP_CLOSE);
+        sshc->actualcode = CURLE_QUOTE_ERROR;
         break;
       }
-      else if(curl_strnequal(sshc->quote_item->data, "rmdir ", 6)) {
-        /* delete dir */
-        state(conn, SSH_SFTP_QUOTE_RMDIR);
-        break;
+    }
+    if(!sshc->quote_item) {
+      state(conn, SSH_SFTP_TRANS_INIT);
+    }
+    break;
+
+    case SSH_SFTP_NEXT_QUOTE:
+      if(sshc->quote_path1) {
+        Curl_safefree(sshc->quote_path1);
+        sshc->quote_path1 = NULL;
       }
-      else if(curl_strnequal(sshc->quote_item->data, "rm ", 3)) {
-        state(conn, SSH_SFTP_QUOTE_UNLINK);
-        break;
+      if(sshc->quote_path2) {
+        Curl_safefree(sshc->quote_path2);
+        sshc->quote_path2 = NULL;
       }
 
-      failf(data, "Unknown SFTP command");
-      Curl_safefree(sshc->quote_path1);
-      sshc->quote_path1 = NULL;
-      Curl_safefree(sshc->quote_path2);
-      sshc->quote_path2 = NULL;
-      state(conn, SSH_SFTP_CLOSE);
-      sshc->actualcode = CURLE_QUOTE_ERROR;
-      break;
-    }
-  }
-  if(!sshc->quote_item) {
-    state(conn, SSH_SFTP_TRANS_INIT);
-  }
-  break;
+      sshc->quote_item = sshc->quote_item->next;
 
-  case SSH_SFTP_NEXT_QUOTE:
-    if(sshc->quote_path1) {
-      Curl_safefree(sshc->quote_path1);
-      sshc->quote_path1 = NULL;
-    }
-    if(sshc->quote_path2) {
-      Curl_safefree(sshc->quote_path2);
-      sshc->quote_path2 = NULL;
-    }
+      if(sshc->quote_item) {
+        state(conn, SSH_SFTP_QUOTE);
+      }
+      else {
+        if(sshc->nextstate != SSH_NO_STATE) {
+          state(conn, sshc->nextstate);
+          sshc->nextstate = SSH_NO_STATE;
+        }
+        else {
+          state(conn, SSH_SFTP_TRANS_INIT);
+        }
+      }
+      break;
 
-    sshc->quote_item = sshc->quote_item->next;
+    case SSH_SFTP_QUOTE_STAT:
+      if(!curl_strnequal(sshc->quote_item->data, "chmod", 5)) {
+        /* Since chown and chgrp only set owner OR group but libssh2 wants to
+         * set them both at once, we need to obtain the current ownership first.
+         * This takes an extra protocol round trip.
+         */
+        rc = libssh2_sftp_stat(sshc->sftp_session, sshc->quote_path2,
+                               &sshc->quote_attrs);
+        if(rc == LIBSSH2_ERROR_EAGAIN) {
+          break;
+        }
+        else if(rc != 0) { /* get those attributes */
+          err = libssh2_sftp_last_error(sshc->sftp_session);
+          Curl_safefree(sshc->quote_path1);
+          sshc->quote_path1 = NULL;
+          Curl_safefree(sshc->quote_path2);
+          sshc->quote_path2 = NULL;
+          failf(data, "Attempt to get SFTP stats failed: %s",
+                sftp_libssh2_strerror(err));
+          state(conn, SSH_SFTP_CLOSE);
+          sshc->actualcode = CURLE_QUOTE_ERROR;
+          break;
+        }
+      }
 
-    if(sshc->quote_item) {
-      state(conn, SSH_SFTP_QUOTE);
-    }
-    else {
-      if(sshc->nextstate != SSH_NO_STATE) {
-        state(conn, sshc->nextstate);
-        sshc->nextstate = SSH_NO_STATE;
+      /* Now set the new attributes... */
+      if(curl_strnequal(sshc->quote_item->data, "chgrp", 5)) {
+        sshc->quote_attrs.gid = strtol(sshc->quote_path1, NULL, 10);
+        sshc->quote_attrs.flags = LIBSSH2_SFTP_ATTR_UIDGID;
+        if(sshc->quote_attrs.gid == 0 && !ISDIGIT(sshc->quote_path1[0])) {
+          Curl_safefree(sshc->quote_path1);
+          sshc->quote_path1 = NULL;
+          Curl_safefree(sshc->quote_path2);
+          sshc->quote_path2 = NULL;
+          failf(data, "Syntax error: chgrp gid not a number");
+          state(conn, SSH_SFTP_CLOSE);
+          sshc->actualcode = CURLE_QUOTE_ERROR;
+          break;
+        }
       }
-      else {
-        state(conn, SSH_SFTP_TRANS_INIT);
+      else if(curl_strnequal(sshc->quote_item->data, "chmod", 5)) {
+        sshc->quote_attrs.permissions = strtol(sshc->quote_path1, NULL, 8);
+        sshc->quote_attrs.flags = LIBSSH2_SFTP_ATTR_PERMISSIONS;
+        /* permissions are octal */
+        if(sshc->quote_attrs.permissions == 0 &&
+           !ISDIGIT(sshc->quote_path1[0])) {
+          Curl_safefree(sshc->quote_path1);
+          sshc->quote_path1 = NULL;
+          Curl_safefree(sshc->quote_path2);
+          sshc->quote_path2 = NULL;
+          failf(data, "Syntax error: chmod permissions not a number");
+          state(conn, SSH_SFTP_CLOSE);
+          sshc->actualcode = CURLE_QUOTE_ERROR;
+          break;
+        }
+      }
+      else if(curl_strnequal(sshc->quote_item->data, "chown", 5)) {
+        sshc->quote_attrs.uid = strtol(sshc->quote_path1, NULL, 10);
+        sshc->quote_attrs.flags = LIBSSH2_SFTP_ATTR_UIDGID;
+        if(sshc->quote_attrs.uid == 0 && !ISDIGIT(sshc->quote_path1[0])) {
+          Curl_safefree(sshc->quote_path1);
+          sshc->quote_path1 = NULL;
+          Curl_safefree(sshc->quote_path2);
+          sshc->quote_path2 = NULL;
+          failf(data, "Syntax error: chown uid not a number");
+          state(conn, SSH_SFTP_CLOSE);
+          sshc->actualcode = CURLE_QUOTE_ERROR;
+          break;
+        }
       }
-    }
-    break;
 
-  case SSH_SFTP_QUOTE_STAT:
-    if(!curl_strnequal(sshc->quote_item->data, "chmod", 5)) {
-      /* Since chown and chgrp only set owner OR group but libssh2 wants to
-       * set them both at once, we need to obtain the current ownership first.
-       * This takes an extra protocol round trip.
-       */
-      rc = libssh2_sftp_stat(sshc->sftp_session, sshc->quote_path2,
-                             &sshc->quote_attrs);
+      /* Now send the completed structure... */
+      state(conn, SSH_SFTP_QUOTE_SETSTAT);
+      break;
+
+    case SSH_SFTP_QUOTE_SETSTAT:
+      rc = libssh2_sftp_setstat(sshc->sftp_session, sshc->quote_path2,
+                                &sshc->quote_attrs);
       if(rc == LIBSSH2_ERROR_EAGAIN) {
         break;
       }
-      else if(rc != 0) { /* get those attributes */
+      else if(rc != 0) {
         err = libssh2_sftp_last_error(sshc->sftp_session);
         Curl_safefree(sshc->quote_path1);
         sshc->quote_path1 = NULL;
         Curl_safefree(sshc->quote_path2);
         sshc->quote_path2 = NULL;
-        failf(data, "Attempt to get SFTP stats failed: %s",
+        failf(data, "Attempt to set SFTP stats failed: %s",
               sftp_libssh2_strerror(err));
         state(conn, SSH_SFTP_CLOSE);
         sshc->actualcode = CURLE_QUOTE_ERROR;
         break;
       }
-    }
+      state(conn, SSH_SFTP_NEXT_QUOTE);
+      break;
 
-    /* Now set the new attributes... */
-    if(curl_strnequal(sshc->quote_item->data, "chgrp", 5)) {
-      sshc->quote_attrs.gid = strtol(sshc->quote_path1, NULL, 10);
-      sshc->quote_attrs.flags = LIBSSH2_SFTP_ATTR_UIDGID;
-      if(sshc->quote_attrs.gid == 0 && !ISDIGIT(sshc->quote_path1[0])) {
+    case SSH_SFTP_QUOTE_SYMLINK:
+      rc = libssh2_sftp_symlink(sshc->sftp_session, sshc->quote_path1,
+                                sshc->quote_path2);
+      if(rc == LIBSSH2_ERROR_EAGAIN) {
+        break;
+      }
+      else if(rc != 0) {
+        err = libssh2_sftp_last_error(sshc->sftp_session);
         Curl_safefree(sshc->quote_path1);
         sshc->quote_path1 = NULL;
         Curl_safefree(sshc->quote_path2);
         sshc->quote_path2 = NULL;
-        failf(data, "Syntax error: chgrp gid not a number");
+        failf(data, "symlink command failed: %s",
+              sftp_libssh2_strerror(err));
         state(conn, SSH_SFTP_CLOSE);
         sshc->actualcode = CURLE_QUOTE_ERROR;
         break;
       }
-    }
-    else if(curl_strnequal(sshc->quote_item->data, "chmod", 5)) {
-      sshc->quote_attrs.permissions = strtol(sshc->quote_path1, NULL, 8);
-      sshc->quote_attrs.flags = LIBSSH2_SFTP_ATTR_PERMISSIONS;
-      /* permissions are octal */
-      if(sshc->quote_attrs.permissions == 0 &&
-         !ISDIGIT(sshc->quote_path1[0])) {
+      state(conn, SSH_SFTP_NEXT_QUOTE);
+      break;
+
+    case SSH_SFTP_QUOTE_MKDIR:
+      rc = libssh2_sftp_mkdir(sshc->sftp_session, sshc->quote_path1, 0755);
+      if(rc == LIBSSH2_ERROR_EAGAIN) {
+        break;
+      }
+      else if(rc != 0) {
+        err = libssh2_sftp_last_error(sshc->sftp_session);
         Curl_safefree(sshc->quote_path1);
         sshc->quote_path1 = NULL;
-        Curl_safefree(sshc->quote_path2);
-        sshc->quote_path2 = NULL;
-        failf(data, "Syntax error: chmod permissions not a number");
+        failf(data, "mkdir command failed: %s", sftp_libssh2_strerror(err));
         state(conn, SSH_SFTP_CLOSE);
         sshc->actualcode = CURLE_QUOTE_ERROR;
         break;
       }
-    }
-    else if(curl_strnequal(sshc->quote_item->data, "chown", 5)) {
-      sshc->quote_attrs.uid = strtol(sshc->quote_path1, NULL, 10);
-      sshc->quote_attrs.flags = LIBSSH2_SFTP_ATTR_UIDGID;
-      if(sshc->quote_attrs.uid == 0 && !ISDIGIT(sshc->quote_path1[0])) {
+      state(conn, SSH_SFTP_NEXT_QUOTE);
+      break;
+
+    case SSH_SFTP_QUOTE_RENAME:
+      rc = libssh2_sftp_rename(sshc->sftp_session, sshc->quote_path1,
+                               sshc->quote_path2);
+      if(rc == LIBSSH2_ERROR_EAGAIN) {
+        break;
+      }
+      else if(rc != 0) {
+        err = libssh2_sftp_last_error(sshc->sftp_session);
         Curl_safefree(sshc->quote_path1);
         sshc->quote_path1 = NULL;
         Curl_safefree(sshc->quote_path2);
         sshc->quote_path2 = NULL;
-        failf(data, "Syntax error: chown uid not a number");
+        failf(data, "rename command failed: %s", sftp_libssh2_strerror(err));
         state(conn, SSH_SFTP_CLOSE);
         sshc->actualcode = CURLE_QUOTE_ERROR;
         break;
       }
-    }
-
-    /* Now send the completed structure... */
-    state(conn, SSH_SFTP_QUOTE_SETSTAT);
-    break;
-
-  case SSH_SFTP_QUOTE_SETSTAT:
-    rc = libssh2_sftp_setstat(sshc->sftp_session, sshc->quote_path2,
-                              &sshc->quote_attrs);
-    if(rc == LIBSSH2_ERROR_EAGAIN) {
-      break;
-    }
-    else if(rc != 0) {
-      err = libssh2_sftp_last_error(sshc->sftp_session);
-      Curl_safefree(sshc->quote_path1);
-      sshc->quote_path1 = NULL;
-      Curl_safefree(sshc->quote_path2);
-      sshc->quote_path2 = NULL;
-      failf(data, "Attempt to set SFTP stats failed: %s",
-            sftp_libssh2_strerror(err));
-      state(conn, SSH_SFTP_CLOSE);
-      sshc->actualcode = CURLE_QUOTE_ERROR;
-      break;
-    }
-    state(conn, SSH_SFTP_NEXT_QUOTE);
-    break;
-
-  case SSH_SFTP_QUOTE_SYMLINK:
-    rc = libssh2_sftp_symlink(sshc->sftp_session, sshc->quote_path1,
-                              sshc->quote_path2);
-    if(rc == LIBSSH2_ERROR_EAGAIN) {
-      break;
-    }
-    else if(rc != 0) {
-      err = libssh2_sftp_last_error(sshc->sftp_session);
-      Curl_safefree(sshc->quote_path1);
-      sshc->quote_path1 = NULL;
-      Curl_safefree(sshc->quote_path2);
-      sshc->quote_path2 = NULL;
-      failf(data, "symlink command failed: %s",
-            sftp_libssh2_strerror(err));
-      state(conn, SSH_SFTP_CLOSE);
-      sshc->actualcode = CURLE_QUOTE_ERROR;
-      break;
-    }
-    state(conn, SSH_SFTP_NEXT_QUOTE);
-    break;
-
-  case SSH_SFTP_QUOTE_MKDIR:
-    rc = libssh2_sftp_mkdir(sshc->sftp_session, sshc->quote_path1, 0755);
-    if(rc == LIBSSH2_ERROR_EAGAIN) {
-      break;
-    }
-    else if(rc != 0) {
-      err = libssh2_sftp_last_error(sshc->sftp_session);
-      Curl_safefree(sshc->quote_path1);
-      sshc->quote_path1 = NULL;
-      failf(data, "mkdir command failed: %s", sftp_libssh2_strerror(err));
-      state(conn, SSH_SFTP_CLOSE);
-      sshc->actualcode = CURLE_QUOTE_ERROR;
+      state(conn, SSH_SFTP_NEXT_QUOTE);
       break;
-    }
-    state(conn, SSH_SFTP_NEXT_QUOTE);
-    break;
 
-  case SSH_SFTP_QUOTE_RENAME:
-    rc = libssh2_sftp_rename(sshc->sftp_session, sshc->quote_path1,
-                             sshc->quote_path2);
-    if(rc == LIBSSH2_ERROR_EAGAIN) {
-      break;
-    }
-    else if(rc != 0) {
-      err = libssh2_sftp_last_error(sshc->sftp_session);
-      Curl_safefree(sshc->quote_path1);
-      sshc->quote_path1 = NULL;
-      Curl_safefree(sshc->quote_path2);
-      sshc->quote_path2 = NULL;
-      failf(data, "rename command failed: %s", sftp_libssh2_strerror(err));
-      state(conn, SSH_SFTP_CLOSE);
-      sshc->actualcode = CURLE_QUOTE_ERROR;
+    case SSH_SFTP_QUOTE_RMDIR:
+      rc = libssh2_sftp_rmdir(sshc->sftp_session, sshc->quote_path1);
+      if(rc == LIBSSH2_ERROR_EAGAIN) {
+        break;
+      }
+      else if(rc != 0) {
+        err = libssh2_sftp_last_error(sshc->sftp_session);
+        Curl_safefree(sshc->quote_path1);
+        sshc->quote_path1 = NULL;
+        failf(data, "rmdir command failed: %s", sftp_libssh2_strerror(err));
+        state(conn, SSH_SFTP_CLOSE);
+        sshc->actualcode = CURLE_QUOTE_ERROR;
+        break;
+      }
+      state(conn, SSH_SFTP_NEXT_QUOTE);
       break;
-    }
-    state(conn, SSH_SFTP_NEXT_QUOTE);
-    break;
 
-  case SSH_SFTP_QUOTE_RMDIR:
-    rc = libssh2_sftp_rmdir(sshc->sftp_session, sshc->quote_path1);
-    if(rc == LIBSSH2_ERROR_EAGAIN) {
-      break;
-    }
-    else if(rc != 0) {
-      err = libssh2_sftp_last_error(sshc->sftp_session);
-      Curl_safefree(sshc->quote_path1);
-      sshc->quote_path1 = NULL;
-      failf(data, "rmdir command failed: %s", sftp_libssh2_strerror(err));
-      state(conn, SSH_SFTP_CLOSE);
-      sshc->actualcode = CURLE_QUOTE_ERROR;
+    case SSH_SFTP_QUOTE_UNLINK:
+      rc = libssh2_sftp_unlink(sshc->sftp_session, sshc->quote_path1);
+      if(rc == LIBSSH2_ERROR_EAGAIN) {
+        break;
+      }
+      else if(rc != 0) {
+        err = libssh2_sftp_last_error(sshc->sftp_session);
+        Curl_safefree(sshc->quote_path1);
+        sshc->quote_path1 = NULL;
+        failf(data, "rm command failed: %s", sftp_libssh2_strerror(err));
+        state(conn, SSH_SFTP_CLOSE);
+        sshc->actualcode = CURLE_QUOTE_ERROR;
+        break;
+      }
+      state(conn, SSH_SFTP_NEXT_QUOTE);
       break;
-    }
-    state(conn, SSH_SFTP_NEXT_QUOTE);
-    break;
 
-  case SSH_SFTP_QUOTE_UNLINK:
-    rc = libssh2_sftp_unlink(sshc->sftp_session, sshc->quote_path1);
-    if(rc == LIBSSH2_ERROR_EAGAIN) {
-      break;
-    }
-    else if(rc != 0) {
-      err = libssh2_sftp_last_error(sshc->sftp_session);
-      Curl_safefree(sshc->quote_path1);
-      sshc->quote_path1 = NULL;
-      failf(data, "rm command failed: %s", sftp_libssh2_strerror(err));
-      state(conn, SSH_SFTP_CLOSE);
-      sshc->actualcode = CURLE_QUOTE_ERROR;
+    case SSH_SFTP_TRANS_INIT:
+      if(data->set.upload)
+        state(conn, SSH_SFTP_UPLOAD_INIT);
+      else {
+        if(data->set.opt_no_body)
+          state(conn, SSH_STOP);
+        else if(sftp_scp->path[strlen(sftp_scp->path)-1] == '/')
+          state(conn, SSH_SFTP_READDIR_INIT);
+        else
+          state(conn, SSH_SFTP_DOWNLOAD_INIT);
+      }
       break;
-    }
-    state(conn, SSH_SFTP_NEXT_QUOTE);
-    break;
-
-  case SSH_SFTP_TRANS_INIT:
-    if(data->set.upload)
-      state(conn, SSH_SFTP_UPLOAD_INIT);
-    else {
-      if(data->set.opt_no_body)
-        state(conn, SSH_STOP);
-      else if(sftp_scp->path[strlen(sftp_scp->path)-1] == '/')
-        state(conn, SSH_SFTP_READDIR_INIT);
-      else
-        state(conn, SSH_SFTP_DOWNLOAD_INIT);
-    }
-    break;
 
-  case SSH_SFTP_UPLOAD_INIT:
-  {
-    unsigned long flags;
-    /*
-     * NOTE!!!  libssh2 requires that the destination path is a full path
-     *          that includes the destination file and name OR ends in a "/"
-     *          If this is not done the destination file will be named the
-     *          same name as the last directory in the path.
-     */
+    case SSH_SFTP_UPLOAD_INIT:
+    {
+      unsigned long flags;
+      /*
+       * NOTE!!!  libssh2 requires that the destination path is a full path
+       *          that includes the destination file and name OR ends in a "/"
+       *          If this is not done the destination file will be named the
+       *          same name as the last directory in the path.
+       */
 
-    if(data->state.resume_from != 0) {
-      LIBSSH2_SFTP_ATTRIBUTES attrs;
-      if(data->state.resume_from< 0) {
-        rc = libssh2_sftp_stat(sshc->sftp_session, sftp_scp->path, &attrs);
-        if(rc == LIBSSH2_ERROR_EAGAIN) {
-          break;
-        }
-        else if(rc) {
-          data->state.resume_from = 0;
-        }
-        else {
-          data->state.resume_from = attrs.filesize;
+      if(data->state.resume_from != 0) {
+        LIBSSH2_SFTP_ATTRIBUTES attrs;
+        if(data->state.resume_from< 0) {
+          rc = libssh2_sftp_stat(sshc->sftp_session, sftp_scp->path, &attrs);
+          if(rc == LIBSSH2_ERROR_EAGAIN) {
+            break;
+          }
+          else if(rc) {
+            data->state.resume_from = 0;
+          }
+          else {
+            data->state.resume_from = attrs.filesize;
+          }
         }
       }
-    }
 
-    if(data->set.ftp_append)
-      /* Try to open for append, but create if nonexisting */
-      flags = LIBSSH2_FXF_WRITE|LIBSSH2_FXF_CREAT|LIBSSH2_FXF_APPEND;
-    else if (data->state.resume_from > 0)
-      /* If we have restart position then open for append */
-      flags = LIBSSH2_FXF_WRITE|LIBSSH2_FXF_APPEND;
-    else
-      /* Clear file before writing (normal behaviour) */
-      flags = LIBSSH2_FXF_WRITE|LIBSSH2_FXF_CREAT|LIBSSH2_FXF_TRUNC;
+      if(data->set.ftp_append)
+        /* Try to open for append, but create if nonexisting */
+        flags = LIBSSH2_FXF_WRITE|LIBSSH2_FXF_CREAT|LIBSSH2_FXF_APPEND;
+      else if (data->state.resume_from > 0)
+        /* If we have restart position then open for append */
+        flags = LIBSSH2_FXF_WRITE|LIBSSH2_FXF_APPEND;
+      else
+        /* Clear file before writing (normal behaviour) */
+        flags = LIBSSH2_FXF_WRITE|LIBSSH2_FXF_CREAT|LIBSSH2_FXF_TRUNC;
 
-    sshc->sftp_handle =
-      libssh2_sftp_open(sshc->sftp_session, sftp_scp->path,
-                        flags, data->set.new_file_perms);
+      sshc->sftp_handle =
+        libssh2_sftp_open(sshc->sftp_session, sftp_scp->path,
+                          flags, data->set.new_file_perms);
 
-    if(!sshc->sftp_handle) {
-      rc = libssh2_session_last_errno(sshc->ssh_session);
+      if(!sshc->sftp_handle) {
+        rc = libssh2_session_last_errno(sshc->ssh_session);
 
-      if(LIBSSH2_ERROR_EAGAIN == rc)
-        break;
-      else {
-        if(LIBSSH2_ERROR_SFTP_PROTOCOL == rc)
-          /* only when there was an SFTP protocol error can we extract
-             the sftp error! */
-          err = libssh2_sftp_last_error(sshc->sftp_session);
-        else
-          err = -1; /* not an sftp error at all */
+        if(LIBSSH2_ERROR_EAGAIN == rc)
+          break;
+        else {
+          if(LIBSSH2_ERROR_SFTP_PROTOCOL == rc)
+            /* only when there was an SFTP protocol error can we extract
+               the sftp error! */
+            err = libssh2_sftp_last_error(sshc->sftp_session);
+          else
+            err = -1; /* not an sftp error at all */
 
-        if(sshc->secondCreateDirs) {
+          if(sshc->secondCreateDirs) {
+            state(conn, SSH_SFTP_CLOSE);
+            sshc->actualcode = err>= LIBSSH2_FX_OK?
+              sftp_libssh2_error_to_CURLE(err):CURLE_SSH;
+            failf(data, "Creating the dir/file failed: %s",
+                  sftp_libssh2_strerror(err));
+            break;
+          }
+          else if(((err == LIBSSH2_FX_NO_SUCH_FILE) ||
+                   (err == LIBSSH2_FX_FAILURE) ||
+                   (err == LIBSSH2_FX_NO_SUCH_PATH)) &&
+                  (data->set.ftp_create_missing_dirs &&
+                   (strlen(sftp_scp->path) > 1))) {
+            /* try to create the path remotely */
+            sshc->secondCreateDirs = 1;
+            state(conn, SSH_SFTP_CREATE_DIRS_INIT);
+            break;
+          }
           state(conn, SSH_SFTP_CLOSE);
           sshc->actualcode = err>= LIBSSH2_FX_OK?
             sftp_libssh2_error_to_CURLE(err):CURLE_SSH;
-          failf(data, "Creating the dir/file failed: %s",
-                sftp_libssh2_strerror(err));
-          break;
-        }
-        else if(((err == LIBSSH2_FX_NO_SUCH_FILE) ||
-                 (err == LIBSSH2_FX_FAILURE) ||
-                 (err == LIBSSH2_FX_NO_SUCH_PATH)) &&
-                (data->set.ftp_create_missing_dirs &&
-                 (strlen(sftp_scp->path) > 1))) {
-          /* try to create the path remotely */
-          sshc->secondCreateDirs = 1;
-          state(conn, SSH_SFTP_CREATE_DIRS_INIT);
+          if(!sshc->actualcode) {
+            /* Sometimes, for some reason libssh2_sftp_last_error() returns
+               zero even though libssh2_sftp_open() failed previously! We need
+               to work around that! */
+            sshc->actualcode = CURLE_SSH;
+            err=-1;
+          }
+          failf(data, "Upload failed: %s (%d/%d)",
+                err>= LIBSSH2_FX_OK?sftp_libssh2_strerror(err):"ssh error",
+                err, rc);
           break;
         }
-        state(conn, SSH_SFTP_CLOSE);
-        sshc->actualcode = err>= LIBSSH2_FX_OK?
-          sftp_libssh2_error_to_CURLE(err):CURLE_SSH;
-        if(!sshc->actualcode) {
-          /* Sometimes, for some reason libssh2_sftp_last_error() returns zero
-             even though libssh2_sftp_open() failed previously! We need to
-             work around that! */
-          sshc->actualcode = CURLE_SSH;
-          err=-1;
-        }
-        failf(data, "Upload failed: %s (%d/%d)",
-              err>= LIBSSH2_FX_OK?sftp_libssh2_strerror(err):"ssh error",
-              err, rc);
-        break;
-      }
-    }
-
-    /* If we have restart point then we need to seek to the correct position. */
-    if(data->state.resume_from > 0) {
-      /* Let's read off the proper amount of bytes from the input. */
-      if(conn->seek_func) {
-        seekerr = conn->seek_func(conn->seek_client, data->state.resume_from,
-                                  SEEK_SET);
       }
 
-      if(seekerr != CURL_SEEKFUNC_OK){
+      /* If we have restart point then we need to seek to the correct
+         position. */
+      if(data->state.resume_from > 0) {
+        /* Let's read off the proper amount of bytes from the input. */
+        if(conn->seek_func) {
+          seekerr = conn->seek_func(conn->seek_client, data->state.resume_from,
+                                    SEEK_SET);
+        }
 
-        if(seekerr != CURL_SEEKFUNC_CANTSEEK) {
-          failf(data, "Could not seek stream");
-          return CURLE_FTP_COULDNT_USE_REST;
+        if(seekerr != CURL_SEEKFUNC_OK){
+
+          if(seekerr != CURL_SEEKFUNC_CANTSEEK) {
+            failf(data, "Could not seek stream");
+            return CURLE_FTP_COULDNT_USE_REST;
+          }
+          /* seekerr == CURL_SEEKFUNC_CANTSEEK (can't seek to offset) */
+          else {
+            curl_off_t passed=0;
+            curl_off_t readthisamountnow;
+            curl_off_t actuallyread;
+            do {
+              readthisamountnow = (data->state.resume_from - passed);
+
+              if(readthisamountnow > BUFSIZE)
+                readthisamountnow = BUFSIZE;
+
+              actuallyread =
+                (curl_off_t) conn->fread_func(data->state.buffer, 1,
+                                              (size_t)readthisamountnow,
+                                              conn->fread_in);
+
+              passed += actuallyread;
+              if((actuallyread <= 0) || (actuallyread > readthisamountnow)) {
+                /* this checks for greater-than only to make sure that the
+                   CURL_READFUNC_ABORT return code still aborts */
+                failf(data, "Failed to read data");
+                return CURLE_FTP_COULDNT_USE_REST;
+              }
+            } while(passed < data->state.resume_from);
+          }
         }
-        /* seekerr == CURL_SEEKFUNC_CANTSEEK (can't seek to offset) */
-        else {
-          curl_off_t passed=0;
-          curl_off_t readthisamountnow;
-          curl_off_t actuallyread;
-          do {
-            readthisamountnow = (data->state.resume_from - passed);
-
-            if(readthisamountnow > BUFSIZE)
-              readthisamountnow = BUFSIZE;
-
-            actuallyread =
-              (curl_off_t) conn->fread_func(data->state.buffer, 1,
-                                            (size_t)readthisamountnow,
-                                            conn->fread_in);
-
-            passed += actuallyread;
-            if((actuallyread <= 0) || (actuallyread > readthisamountnow)) {
-              /* this checks for greater-than only to make sure that the
-                 CURL_READFUNC_ABORT return code still aborts */
-              failf(data, "Failed to read data");
-              return CURLE_FTP_COULDNT_USE_REST;
-            }
-          } while(passed < data->state.resume_from);
+
+        /* now, decrease the size of the read */
+        if(data->set.infilesize>0) {
+          data->set.infilesize -= data->state.resume_from;
+          data->req.size = data->set.infilesize;
+          Curl_pgrsSetUploadSize(data, data->set.infilesize);
         }
-      }
 
-      /* now, decrease the size of the read */
+        SFTP_SEEK(sshc->sftp_handle, data->state.resume_from);
+      }
       if(data->set.infilesize>0) {
-        data->set.infilesize -= data->state.resume_from;
         data->req.size = data->set.infilesize;
         Curl_pgrsSetUploadSize(data, data->set.infilesize);
       }
+      /* upload data */
+      result = Curl_setup_transfer(conn, -1, -1, FALSE, NULL,
+                                   FIRSTSOCKET, NULL);
 
-      SFTP_SEEK(sshc->sftp_handle, data->state.resume_from);
-    }
-    if(data->set.infilesize>0) {
-      data->req.size = data->set.infilesize;
-      Curl_pgrsSetUploadSize(data, data->set.infilesize);
-    }
-    /* upload data */
-    result = Curl_setup_transfer(conn, -1, -1, FALSE, NULL,
-                                 FIRSTSOCKET, NULL);
+      /* not set by Curl_setup_transfer to preserve keepon bits */
+      conn->sockfd = conn->writesockfd;
 
-    /* not set by Curl_setup_transfer to preserve keepon bits */
-    conn->sockfd = conn->writesockfd;
-
-    if(result) {
-      state(conn, SSH_SFTP_CLOSE);
-      sshc->actualcode = result;
-    }
-    else {
-      /* store this original bitmask setup to use later on if we can't figure
-         out a "real" bitmask */
-      sshc->orig_waitfor = data->req.keepon;
-
-      state(conn, SSH_STOP);
-    }
-    break;
-  }
-
-  case SSH_SFTP_CREATE_DIRS_INIT:
-    if(strlen(sftp_scp->path) > 1) {
-      sshc->slash_pos = sftp_scp->path + 1; /* ignore the leading '/' */
-      state(conn, SSH_SFTP_CREATE_DIRS);
-    }
-    else {
-      state(conn, SSH_SFTP_UPLOAD_INIT);
-    }
-    break;
-
-  case SSH_SFTP_CREATE_DIRS:
-    if((sshc->slash_pos = strchr(sshc->slash_pos, '/')) != NULL) {
-      *sshc->slash_pos = 0;
+      if(result) {
+        state(conn, SSH_SFTP_CLOSE);
+        sshc->actualcode = result;
+      }
+      else {
+        /* store this original bitmask setup to use later on if we can't
+           figure out a "real" bitmask */
+        sshc->orig_waitfor = data->req.keepon;
 
-      infof(data, "Creating directory '%s'\n", sftp_scp->path);
-      state(conn, SSH_SFTP_CREATE_DIRS_MKDIR);
+        state(conn, SSH_STOP);
+      }
       break;
     }
-    else {
-      state(conn, SSH_SFTP_UPLOAD_INIT);
-    }
-    break;
 
-  case SSH_SFTP_CREATE_DIRS_MKDIR:
-    /* 'mode' - parameter is preliminary - default to 0644 */
-    rc = libssh2_sftp_mkdir(sshc->sftp_session, sftp_scp->path,
-                            data->set.new_directory_perms);
-    if(rc == LIBSSH2_ERROR_EAGAIN) {
-      break;
-    }
-    *sshc->slash_pos = '/';
-    ++sshc->slash_pos;
-    if(rc == -1) {
-      unsigned int sftp_err = 0;
-      /*
-       * abort if failure wasn't that the dir already exists or the
-       * permission was denied (creation might succeed further
-       * down the path) - retry on unspecific FAILURE also
-       */
-      sftp_err = libssh2_sftp_last_error(sshc->sftp_session);
-      if((sftp_err != LIBSSH2_FX_FILE_ALREADY_EXISTS) &&
-         (sftp_err != LIBSSH2_FX_FAILURE) &&
-         (sftp_err != LIBSSH2_FX_PERMISSION_DENIED)) {
-        result = sftp_libssh2_error_to_CURLE(sftp_err);
-        state(conn, SSH_SFTP_CLOSE);
-        sshc->actualcode = result?result:CURLE_SSH;
-        break;
+    case SSH_SFTP_CREATE_DIRS_INIT:
+      if(strlen(sftp_scp->path) > 1) {
+        sshc->slash_pos = sftp_scp->path + 1; /* ignore the leading '/' */
+        state(conn, SSH_SFTP_CREATE_DIRS);
       }
-    }
-    state(conn, SSH_SFTP_CREATE_DIRS);
-    break;
+      else {
+        state(conn, SSH_SFTP_UPLOAD_INIT);
+      }
+      break;
 
-  case SSH_SFTP_READDIR_INIT:
-    /*
-     * This is a directory that we are trying to get, so produce a
-     * directory listing
-     */
-    sshc->sftp_handle = libssh2_sftp_opendir(sshc->sftp_session,
-                                             sftp_scp->path);
-    if(!sshc->sftp_handle) {
-      if(libssh2_session_last_errno(sshc->ssh_session) ==
-         LIBSSH2_ERROR_EAGAIN) {
-        rc = LIBSSH2_ERROR_EAGAIN;
+    case SSH_SFTP_CREATE_DIRS:
+      if((sshc->slash_pos = strchr(sshc->slash_pos, '/')) != NULL) {
+        *sshc->slash_pos = 0;
+
+        infof(data, "Creating directory '%s'\n", sftp_scp->path);
+        state(conn, SSH_SFTP_CREATE_DIRS_MKDIR);
         break;
       }
       else {
-        err = libssh2_sftp_last_error(sshc->sftp_session);
-        failf(data, "Could not open directory for reading: %s",
-              sftp_libssh2_strerror(err));
-        state(conn, SSH_SFTP_CLOSE);
-        result = sftp_libssh2_error_to_CURLE(err);
-        sshc->actualcode = result?result:CURLE_SSH;
-        break;
+        state(conn, SSH_SFTP_UPLOAD_INIT);
       }
-    }
-    if((sshc->readdir_filename = malloc(PATH_MAX+1)) == NULL) {
-      state(conn, SSH_SFTP_CLOSE);
-      sshc->actualcode = CURLE_OUT_OF_MEMORY;
       break;
-    }
-    if((sshc->readdir_longentry = malloc(PATH_MAX+1)) == NULL) {
-      Curl_safefree(sshc->readdir_filename);
-      sshc->readdir_filename = NULL;
-      state(conn, SSH_SFTP_CLOSE);
-      sshc->actualcode = CURLE_OUT_OF_MEMORY;
-      break;
-    }
-    state(conn, SSH_SFTP_READDIR);
-    break;
 
-  case SSH_SFTP_READDIR:
-    sshc->readdir_len = libssh2_sftp_readdir_ex(sshc->sftp_handle,
-                                                sshc->readdir_filename,
-                                                PATH_MAX,
-                                                sshc->readdir_longentry,
-                                                PATH_MAX,
-                                                &sshc->readdir_attrs);
-    if(sshc->readdir_len == LIBSSH2_ERROR_EAGAIN) {
-      rc = LIBSSH2_ERROR_EAGAIN;
-      break;
-    }
-    if(sshc->readdir_len > 0) {
-      sshc->readdir_filename[sshc->readdir_len] = '\0';
-
-      if(data->set.ftp_list_only) {
-        char *tmpLine;
-
-        tmpLine = aprintf("%s\n", sshc->readdir_filename);
-        if(tmpLine == NULL) {
+    case SSH_SFTP_CREATE_DIRS_MKDIR:
+      /* 'mode' - parameter is preliminary - default to 0644 */
+      rc = libssh2_sftp_mkdir(sshc->sftp_session, sftp_scp->path,
+                              data->set.new_directory_perms);
+      if(rc == LIBSSH2_ERROR_EAGAIN) {
+        break;
+      }
+      *sshc->slash_pos = '/';
+      ++sshc->slash_pos;
+      if(rc == -1) {
+        unsigned int sftp_err = 0;
+        /*
+         * Abort if failure wasn't that the dir already exists or the
+         * permission was denied (creation might succeed further down the
+         * path) - retry on unspecific FAILURE also
+         */
+        sftp_err = libssh2_sftp_last_error(sshc->sftp_session);
+        if((sftp_err != LIBSSH2_FX_FILE_ALREADY_EXISTS) &&
+           (sftp_err != LIBSSH2_FX_FAILURE) &&
+           (sftp_err != LIBSSH2_FX_PERMISSION_DENIED)) {
+          result = sftp_libssh2_error_to_CURLE(sftp_err);
           state(conn, SSH_SFTP_CLOSE);
-          sshc->actualcode = CURLE_OUT_OF_MEMORY;
+          sshc->actualcode = result?result:CURLE_SSH;
           break;
         }
-        result = Curl_client_write(conn, CLIENTWRITE_BODY,
-                                   tmpLine, sshc->readdir_len+1);
-        Curl_safefree(tmpLine);
+      }
+      state(conn, SSH_SFTP_CREATE_DIRS);
+      break;
 
-        if(result) {
-          state(conn, SSH_STOP);
+    case SSH_SFTP_READDIR_INIT:
+      /*
+       * This is a directory that we are trying to get, so produce a directory
+       * listing
+       */
+      sshc->sftp_handle = libssh2_sftp_opendir(sshc->sftp_session,
+                                               sftp_scp->path);
+      if(!sshc->sftp_handle) {
+        if(libssh2_session_last_errno(sshc->ssh_session) ==
+           LIBSSH2_ERROR_EAGAIN) {
+          rc = LIBSSH2_ERROR_EAGAIN;
           break;
         }
-        /* since this counts what we send to the client, we include the newline
-           in this counter */
-        data->req.bytecount += sshc->readdir_len+1;
-
-        /* output debug output if that is requested */
-        if(data->set.verbose) {
-          Curl_debug(data, CURLINFO_DATA_OUT, sshc->readdir_filename,
-                     sshc->readdir_len, conn);
-        }
-      }
-      else {
-        sshc->readdir_currLen = strlen(sshc->readdir_longentry);
-        sshc->readdir_totalLen = 80 + sshc->readdir_currLen;
-        sshc->readdir_line = calloc(sshc->readdir_totalLen, 1);
-        if(!sshc->readdir_line) {
-          Curl_safefree(sshc->readdir_filename);
-          sshc->readdir_filename = NULL;
-          Curl_safefree(sshc->readdir_longentry);
-          sshc->readdir_longentry = NULL;
+        else {
+          err = libssh2_sftp_last_error(sshc->sftp_session);
+          failf(data, "Could not open directory for reading: %s",
+                sftp_libssh2_strerror(err));
           state(conn, SSH_SFTP_CLOSE);
-          sshc->actualcode = CURLE_OUT_OF_MEMORY;
+          result = sftp_libssh2_error_to_CURLE(err);
+          sshc->actualcode = result?result:CURLE_SSH;
           break;
         }
+      }
+      if((sshc->readdir_filename = malloc(PATH_MAX+1)) == NULL) {
+        state(conn, SSH_SFTP_CLOSE);
+        sshc->actualcode = CURLE_OUT_OF_MEMORY;
+        break;
+      }
+      if((sshc->readdir_longentry = malloc(PATH_MAX+1)) == NULL) {
+        Curl_safefree(sshc->readdir_filename);
+        sshc->readdir_filename = NULL;
+        state(conn, SSH_SFTP_CLOSE);
+        sshc->actualcode = CURLE_OUT_OF_MEMORY;
+        break;
+      }
+      state(conn, SSH_SFTP_READDIR);
+      break;
+
+    case SSH_SFTP_READDIR:
+      sshc->readdir_len = libssh2_sftp_readdir_ex(sshc->sftp_handle,
+                                                  sshc->readdir_filename,
+                                                  PATH_MAX,
+                                                  sshc->readdir_longentry,
+                                                  PATH_MAX,
+                                                  &sshc->readdir_attrs);
+      if(sshc->readdir_len == LIBSSH2_ERROR_EAGAIN) {
+        rc = LIBSSH2_ERROR_EAGAIN;
+        break;
+      }
+      if(sshc->readdir_len > 0) {
+        sshc->readdir_filename[sshc->readdir_len] = '\0';
+
+        if(data->set.ftp_list_only) {
+          char *tmpLine;
 
-        memcpy(sshc->readdir_line, sshc->readdir_longentry,
-               sshc->readdir_currLen);
-        if((sshc->readdir_attrs.flags & LIBSSH2_SFTP_ATTR_PERMISSIONS) &&
-           ((sshc->readdir_attrs.permissions & LIBSSH2_SFTP_S_IFMT) ==
-            LIBSSH2_SFTP_S_IFLNK)) {
-          sshc->readdir_linkPath = malloc(PATH_MAX + 1);
-          if(sshc->readdir_linkPath == NULL) {
+          tmpLine = aprintf("%s\n", sshc->readdir_filename);
+          if(tmpLine == NULL) {
+            state(conn, SSH_SFTP_CLOSE);
+            sshc->actualcode = CURLE_OUT_OF_MEMORY;
+            break;
+          }
+          result = Curl_client_write(conn, CLIENTWRITE_BODY,
+                                     tmpLine, sshc->readdir_len+1);
+          Curl_safefree(tmpLine);
+
+          if(result) {
+            state(conn, SSH_STOP);
+            break;
+          }
+          /* since this counts what we send to the client, we include the
+             newline in this counter */
+          data->req.bytecount += sshc->readdir_len+1;
+
+          /* output debug output if that is requested */
+          if(data->set.verbose) {
+            Curl_debug(data, CURLINFO_DATA_OUT, sshc->readdir_filename,
+                       sshc->readdir_len, conn);
+          }
+        }
+        else {
+          sshc->readdir_currLen = strlen(sshc->readdir_longentry);
+          sshc->readdir_totalLen = 80 + sshc->readdir_currLen;
+          sshc->readdir_line = calloc(sshc->readdir_totalLen, 1);
+          if(!sshc->readdir_line) {
             Curl_safefree(sshc->readdir_filename);
             sshc->readdir_filename = NULL;
             Curl_safefree(sshc->readdir_longentry);
             sshc->readdir_longentry = NULL;
             state(conn, SSH_SFTP_CLOSE);
             sshc->actualcode = CURLE_OUT_OF_MEMORY;
             break;
           }
 
-          snprintf(sshc->readdir_linkPath, PATH_MAX, "%s%s", sftp_scp->path,
-                   sshc->readdir_filename);
-          state(conn, SSH_SFTP_READDIR_LINK);
+          memcpy(sshc->readdir_line, sshc->readdir_longentry,
+                 sshc->readdir_currLen);
+          if((sshc->readdir_attrs.flags & LIBSSH2_SFTP_ATTR_PERMISSIONS) &&
+             ((sshc->readdir_attrs.permissions & LIBSSH2_SFTP_S_IFMT) ==
+              LIBSSH2_SFTP_S_IFLNK)) {
+            sshc->readdir_linkPath = malloc(PATH_MAX + 1);
+            if(sshc->readdir_linkPath == NULL) {
+              Curl_safefree(sshc->readdir_filename);
+              sshc->readdir_filename = NULL;
+              Curl_safefree(sshc->readdir_longentry);
+              sshc->readdir_longentry = NULL;
+              state(conn, SSH_SFTP_CLOSE);
+              sshc->actualcode = CURLE_OUT_OF_MEMORY;
+              break;
+            }
+
+            snprintf(sshc->readdir_linkPath, PATH_MAX, "%s%s", sftp_scp->path,
+                     sshc->readdir_filename);
+            state(conn, SSH_SFTP_READDIR_LINK);
+            break;
+          }
+          state(conn, SSH_SFTP_READDIR_BOTTOM);
           break;
         }
-        state(conn, SSH_SFTP_READDIR_BOTTOM);
+      }
+      else if(sshc->readdir_len == 0) {
+        Curl_safefree(sshc->readdir_filename);
+        sshc->readdir_filename = NULL;
+        Curl_safefree(sshc->readdir_longentry);
+        sshc->readdir_longentry = NULL;
+        state(conn, SSH_SFTP_READDIR_DONE);
+        break;
+      }
+      else if(sshc->readdir_len <= 0) {
+        err = libssh2_sftp_last_error(sshc->sftp_session);
+        result = sftp_libssh2_error_to_CURLE(err);
+        sshc->actualcode = result?result:CURLE_SSH;
+        failf(data, "Could not open remote file for reading: %s :: %d",
+              sftp_libssh2_strerror(err),
+              libssh2_session_last_errno(sshc->ssh_session));
+        Curl_safefree(sshc->readdir_filename);
+        sshc->readdir_filename = NULL;
+        Curl_safefree(sshc->readdir_longentry);
+        sshc->readdir_longentry = NULL;
+        state(conn, SSH_SFTP_CLOSE);
         break;
       }
-    }
-    else if(sshc->readdir_len == 0) {
-      Curl_safefree(sshc->readdir_filename);
-      sshc->readdir_filename = NULL;
-      Curl_safefree(sshc->readdir_longentry);
-      sshc->readdir_longentry = NULL;
-      state(conn, SSH_SFTP_READDIR_DONE);
-      break;
-    }
-    else if(sshc->readdir_len <= 0) {
-      err = libssh2_sftp_last_error(sshc->sftp_session);
-      result = sftp_libssh2_error_to_CURLE(err);
-      sshc->actualcode = result?result:CURLE_SSH;
-      failf(data, "Could not open remote file for reading: %s :: %d",
-            sftp_libssh2_strerror(err),
-            libssh2_session_last_errno(sshc->ssh_session));
-      Curl_safefree(sshc->readdir_filename);
-      sshc->readdir_filename = NULL;
-      Curl_safefree(sshc->readdir_longentry);
-      sshc->readdir_longentry = NULL;
-      state(conn, SSH_SFTP_CLOSE);
       break;
-    }
-    break;
 
-  case SSH_SFTP_READDIR_LINK:
-    sshc->readdir_len = libssh2_sftp_readlink(sshc->sftp_session,
-                                              sshc->readdir_linkPath,
-                                              sshc->readdir_filename,
-                                              PATH_MAX);
-    if(sshc->readdir_len == LIBSSH2_ERROR_EAGAIN) {
-      rc = LIBSSH2_ERROR_EAGAIN;
-      break;
-    }
-    Curl_safefree(sshc->readdir_linkPath);
-    sshc->readdir_linkPath = NULL;
-    sshc->readdir_line = realloc(sshc->readdir_line,
-                                 sshc->readdir_totalLen + 4 +
-                                 sshc->readdir_len);
-    if(!sshc->readdir_line) {
-      Curl_safefree(sshc->readdir_filename);
-      sshc->readdir_filename = NULL;
-      Curl_safefree(sshc->readdir_longentry);
-      sshc->readdir_longentry = NULL;
-      state(conn, SSH_SFTP_CLOSE);
-      sshc->actualcode = CURLE_OUT_OF_MEMORY;
-      break;
-    }
+    case SSH_SFTP_READDIR_LINK:
+      sshc->readdir_len = libssh2_sftp_readlink(sshc->sftp_session,
+                                                sshc->readdir_linkPath,
+                                                sshc->readdir_filename,
+                                                PATH_MAX);
+      if(sshc->readdir_len == LIBSSH2_ERROR_EAGAIN) {
+        rc = LIBSSH2_ERROR_EAGAIN;
+        break;
+      }
+      Curl_safefree(sshc->readdir_linkPath);
+      sshc->readdir_linkPath = NULL;
+      sshc->readdir_line = realloc(sshc->readdir_line,
+                                   sshc->readdir_totalLen + 4 +
+                                   sshc->readdir_len);
+      if(!sshc->readdir_line) {
+        Curl_safefree(sshc->readdir_filename);
+        sshc->readdir_filename = NULL;
+        Curl_safefree(sshc->readdir_longentry);
+        sshc->readdir_longentry = NULL;
+        state(conn, SSH_SFTP_CLOSE);
+        sshc->actualcode = CURLE_OUT_OF_MEMORY;
+        break;
+      }
 
-    sshc->readdir_currLen += snprintf(sshc->readdir_line +
-                                      sshc->readdir_currLen,
-                                      sshc->readdir_totalLen -
-                                      sshc->readdir_currLen,
-                                      " -> %s",
-                                      sshc->readdir_filename);
+      sshc->readdir_currLen += snprintf(sshc->readdir_line +
+                                        sshc->readdir_currLen,
+                                        sshc->readdir_totalLen -
+                                        sshc->readdir_currLen,
+                                        " -> %s",
+                                        sshc->readdir_filename);
+
+      state(conn, SSH_SFTP_READDIR_BOTTOM);
+      break;
+
+    case SSH_SFTP_READDIR_BOTTOM:
+      sshc->readdir_currLen += snprintf(sshc->readdir_line +
+                                        sshc->readdir_currLen,
+                                        sshc->readdir_totalLen -
+                                        sshc->readdir_currLen, "\n");
+      result = Curl_client_write(conn, CLIENTWRITE_BODY,
+                                 sshc->readdir_line,
+                                 sshc->readdir_currLen);
 
-    state(conn, SSH_SFTP_READDIR_BOTTOM);
-    break;
+      if(result == CURLE_OK) {
 
-  case SSH_SFTP_READDIR_BOTTOM:
-    sshc->readdir_currLen += snprintf(sshc->readdir_line +
-                                      sshc->readdir_currLen,
-                                      sshc->readdir_totalLen -
-                                      sshc->readdir_currLen, "\n");
-    result = Curl_client_write(conn, CLIENTWRITE_BODY,
-                               sshc->readdir_line,
-                               sshc->readdir_currLen);
-
-    if(result == CURLE_OK) {
-
-      /* output debug output if that is requested */
-      if(data->set.verbose) {
-        Curl_debug(data, CURLINFO_DATA_OUT, sshc->readdir_line,
-                   sshc->readdir_currLen, conn);
+        /* output debug output if that is requested */
+        if(data->set.verbose) {
+          Curl_debug(data, CURLINFO_DATA_OUT, sshc->readdir_line,
+                     sshc->readdir_currLen, conn);
+        }
+        data->req.bytecount += sshc->readdir_currLen;
       }
-      data->req.bytecount += sshc->readdir_currLen;
-    }
-    Curl_safefree(sshc->readdir_line);
-    sshc->readdir_line = NULL;
-    if(result) {
-      state(conn, SSH_STOP);
-    }
-    else
-      state(conn, SSH_SFTP_READDIR);
-    break;
-
-  case SSH_SFTP_READDIR_DONE:
-    if(libssh2_sftp_closedir(sshc->sftp_handle) ==
-       LIBSSH2_ERROR_EAGAIN) {
-      rc = LIBSSH2_ERROR_EAGAIN;
+      Curl_safefree(sshc->readdir_line);
+      sshc->readdir_line = NULL;
+      if(result) {
+        state(conn, SSH_STOP);
+      }
+      else
+        state(conn, SSH_SFTP_READDIR);
       break;
-    }
-    sshc->sftp_handle = NULL;
-    Curl_safefree(sshc->readdir_filename);
-    sshc->readdir_filename = NULL;
-    Curl_safefree(sshc->readdir_longentry);
-    sshc->readdir_longentry = NULL;
 
-    /* no data to transfer */
-    result = Curl_setup_transfer(conn, -1, -1, FALSE, NULL, -1, NULL);
-    state(conn, SSH_STOP);
-    break;
-
-  case SSH_SFTP_DOWNLOAD_INIT:
-    /*
-     * Work on getting the specified file
-     */
-    sshc->sftp_handle =
-      libssh2_sftp_open(sshc->sftp_session, sftp_scp->path,
-                        LIBSSH2_FXF_READ, data->set.new_file_perms);
-    if(!sshc->sftp_handle) {
-      if(libssh2_session_last_errno(sshc->ssh_session) ==
+    case SSH_SFTP_READDIR_DONE:
+      if(libssh2_sftp_closedir(sshc->sftp_handle) ==
          LIBSSH2_ERROR_EAGAIN) {
         rc = LIBSSH2_ERROR_EAGAIN;
         break;
       }
-      else {
-        err = libssh2_sftp_last_error(sshc->sftp_session);
-        failf(data, "Could not open remote file for reading: %s",
-              sftp_libssh2_strerror(err));
-        state(conn, SSH_SFTP_CLOSE);
-        result = sftp_libssh2_error_to_CURLE(err);
-        sshc->actualcode = result?result:CURLE_SSH;
-        break;
-      }
-    }
-    state(conn, SSH_SFTP_DOWNLOAD_STAT);
-    break;
-
-  case SSH_SFTP_DOWNLOAD_STAT:
-  {
-    LIBSSH2_SFTP_ATTRIBUTES attrs;
+      sshc->sftp_handle = NULL;
+      Curl_safefree(sshc->readdir_filename);
+      sshc->readdir_filename = NULL;
+      Curl_safefree(sshc->readdir_longentry);
+      sshc->readdir_longentry = NULL;
 
-    rc = libssh2_sftp_stat(sshc->sftp_session, sftp_scp->path, &attrs);
-    if(rc == LIBSSH2_ERROR_EAGAIN) {
+      /* no data to transfer */
+      result = Curl_setup_transfer(conn, -1, -1, FALSE, NULL, -1, NULL);
+      state(conn, SSH_STOP);
       break;
-    }
-    else if(rc) {
+
+    case SSH_SFTP_DOWNLOAD_INIT:
       /*
-       * libssh2_sftp_open() didn't return an error, so maybe the server
-       * just doesn't support stat()
+       * Work on getting the specified file
        */
-      data->req.size = -1;
-      data->req.maxdownload = -1;
-    }
-    else {
-      curl_off_t size;
-
-      size = attrs.filesize;
-      if(conn->data->state.use_range) {
-        curl_off_t from, to;
-        char *ptr;
-        char *ptr2;
-
-        from=curlx_strtoofft(conn->data->state.range, &ptr, 0);
-        while(ptr && *ptr && (isspace((int)*ptr) || (*ptr=='-')))
-          ptr++;
-        to=curlx_strtoofft(ptr, &ptr2, 0);
-        if((ptr == ptr2) /* no "to" value given */
-            || (to >= size)) {
-          to = size - 1;
-        }
-        if(from < 0) {
-          /* from is relative to end of file */
-          from += size;
-        }
-        if(from >= size) {
-          failf(data, "Offset (%"
-                FORMAT_OFF_T ") was beyond file size (%" FORMAT_OFF_T ")",
-                from, attrs.filesize);
-          return CURLE_BAD_DOWNLOAD_RESUME;
-        }
-        if(from > to) {
-          from = to;
-          size = 0;
+      sshc->sftp_handle =
+        libssh2_sftp_open(sshc->sftp_session, sftp_scp->path,
+                          LIBSSH2_FXF_READ, data->set.new_file_perms);
+      if(!sshc->sftp_handle) {
+        if(libssh2_session_last_errno(sshc->ssh_session) ==
+           LIBSSH2_ERROR_EAGAIN) {
+          rc = LIBSSH2_ERROR_EAGAIN;
+          break;
         }
         else {
-          size = to - from + 1;
+          err = libssh2_sftp_last_error(sshc->sftp_session);
+          failf(data, "Could not open remote file for reading: %s",
+                sftp_libssh2_strerror(err));
+          state(conn, SSH_SFTP_CLOSE);
+          result = sftp_libssh2_error_to_CURLE(err);
+          sshc->actualcode = result?result:CURLE_SSH;
+          break;
         }
-
-        SFTP_SEEK(conn->proto.sshc.sftp_handle, from);
       }
-      data->req.size = size;
-      data->req.maxdownload = size;
-      Curl_pgrsSetDownloadSize(data, size);
-    }
+      state(conn, SSH_SFTP_DOWNLOAD_STAT);
+      break;
 
-    /* We can resume if we can seek to the resume position */
-    if(data->state.resume_from) {
-      if(data->state.resume_from< 0) {
-        /* We're supposed to download the last abs(from) bytes */
-        if((curl_off_t)attrs.filesize < -data->state.resume_from) {
-          failf(data, "Offset (%"
-                FORMAT_OFF_T ") was beyond file size (%" FORMAT_OFF_T ")",
-                data->state.resume_from, attrs.filesize);
-          return CURLE_BAD_DOWNLOAD_RESUME;
-        }
-        /* download from where? */
-        data->state.resume_from = attrs.filesize - data->state.resume_from;
+    case SSH_SFTP_DOWNLOAD_STAT:
+    {
+      LIBSSH2_SFTP_ATTRIBUTES attrs;
+
+      rc = libssh2_sftp_stat(sshc->sftp_session, sftp_scp->path, &attrs);
+      if(rc == LIBSSH2_ERROR_EAGAIN) {
+        break;
+      }
+      else if(rc) {
+        /*
+         * libssh2_sftp_open() didn't return an error, so maybe the server
+         * just doesn't support stat()
+         */
+        data->req.size = -1;
+        data->req.maxdownload = -1;
       }
       else {
-        if((curl_off_t)attrs.filesize < data->state.resume_from) {
-          failf(data, "Offset (%" FORMAT_OFF_T
-                ") was beyond file size (%" FORMAT_OFF_T ")",
-                data->state.resume_from, attrs.filesize);
-          return CURLE_BAD_DOWNLOAD_RESUME;
+        curl_off_t size;
+
+        size = attrs.filesize;
+        if(conn->data->state.use_range) {
+          curl_off_t from, to;
+          char *ptr;
+          char *ptr2;
+
+          from=curlx_strtoofft(conn->data->state.range, &ptr, 0);
+          while(ptr && *ptr && (isspace((int)*ptr) || (*ptr=='-')))
+            ptr++;
+          to=curlx_strtoofft(ptr, &ptr2, 0);
+          if((ptr == ptr2) /* no "to" value given */
+             || (to >= size)) {
+            to = size - 1;
+          }
+          if(from < 0) {
+            /* from is relative to end of file */
+            from += size;
+          }
+          if(from >= size) {
+            failf(data, "Offset (%"
+                  FORMAT_OFF_T ") was beyond file size (%" FORMAT_OFF_T ")",
+                  from, attrs.filesize);
+            return CURLE_BAD_DOWNLOAD_RESUME;
+          }
+          if(from > to) {
+            from = to;
+            size = 0;
+          }
+          else {
+            size = to - from + 1;
+          }
+
+          SFTP_SEEK(conn->proto.sshc.sftp_handle, from);
+        }
+        data->req.size = size;
+        data->req.maxdownload = size;
+        Curl_pgrsSetDownloadSize(data, size);
+      }
+
+      /* We can resume if we can seek to the resume position */
+      if(data->state.resume_from) {
+        if(data->state.resume_from< 0) {
+          /* We're supposed to download the last abs(from) bytes */
+          if((curl_off_t)attrs.filesize < -data->state.resume_from) {
+            failf(data, "Offset (%"
+                  FORMAT_OFF_T ") was beyond file size (%" FORMAT_OFF_T ")",
+                  data->state.resume_from, attrs.filesize);
+            return CURLE_BAD_DOWNLOAD_RESUME;
+          }
+          /* download from where? */
+          data->state.resume_from = attrs.filesize - data->state.resume_from;
         }
+        else {
+          if((curl_off_t)attrs.filesize < data->state.resume_from) {
+            failf(data, "Offset (%" FORMAT_OFF_T
+                  ") was beyond file size (%" FORMAT_OFF_T ")",
+                  data->state.resume_from, attrs.filesize);
+            return CURLE_BAD_DOWNLOAD_RESUME;
+          }
+        }
+        /* Does a completed file need to be seeked and started or closed ? */
+        /* Now store the number of bytes we are expected to download */
+        data->req.size = attrs.filesize - data->state.resume_from;
+        data->req.maxdownload = attrs.filesize - data->state.resume_from;
+        Curl_pgrsSetDownloadSize(data,
+                                 attrs.filesize - data->state.resume_from);
+        SFTP_SEEK(sshc->sftp_handle, data->state.resume_from);
       }
-      /* Does a completed file need to be seeked and started or closed ? */
-      /* Now store the number of bytes we are expected to download */
-      data->req.size = attrs.filesize - data->state.resume_from;
-      data->req.maxdownload = attrs.filesize - data->state.resume_from;
-      Curl_pgrsSetDownloadSize(data,
-                               attrs.filesize - data->state.resume_from);
-      SFTP_SEEK(sshc->sftp_handle, data->state.resume_from);
     }
-  }
-  /* Setup the actual download */
-  if(data->req.size == 0) {
-    /* no data to transfer */
-    result = Curl_setup_transfer(conn, -1, -1, FALSE, NULL, -1, NULL);
-    infof(data, "File already completely downloaded\n");
-    state(conn, SSH_STOP);
-    break;
-  }
-  else {
-    result = Curl_setup_transfer(conn, FIRSTSOCKET, data->req.size,
-                                 FALSE, NULL, -1, NULL);
+    /* Setup the actual download */
+    if(data->req.size == 0) {
+      /* no data to transfer */
+      result = Curl_setup_transfer(conn, -1, -1, FALSE, NULL, -1, NULL);
+      infof(data, "File already completely downloaded\n");
+      state(conn, SSH_STOP);
+      break;
+    }
+    else {
+      result = Curl_setup_transfer(conn, FIRSTSOCKET, data->req.size,
+                                   FALSE, NULL, -1, NULL);
 
-    /* not set by Curl_setup_transfer to preserve keepon bits */
-    conn->writesockfd = conn->sockfd;
+      /* not set by Curl_setup_transfer to preserve keepon bits */
+      conn->writesockfd = conn->sockfd;
 
-    /* FIXME: here should be explained why we need it to start the download */
-    conn->cselect_bits = CURL_CSELECT_IN;
-  }
-  if(result) {
-    state(conn, SSH_SFTP_CLOSE);
-    sshc->actualcode = result;
-  }
-  else {
-    state(conn, SSH_STOP);
-  }
-  break;
+      /* FIXME: here should be explained why we need it to start the download */
+      conn->cselect_bits = CURL_CSELECT_IN;
+    }
+    if(result) {
+      state(conn, SSH_SFTP_CLOSE);
+      sshc->actualcode = result;
+    }
+    else {
+      state(conn, SSH_STOP);
+    }
+    break;
 
-  case SSH_SFTP_CLOSE:
-    if(sshc->sftp_handle) {
-      rc = libssh2_sftp_close(sshc->sftp_handle);
-      if(rc == LIBSSH2_ERROR_EAGAIN) {
-        break;
-      }
-      else if(rc < 0) {
-        infof(data, "Failed to close libssh2 file\n");
+    case SSH_SFTP_CLOSE:
+      if(sshc->sftp_handle) {
+        rc = libssh2_sftp_close(sshc->sftp_handle);
+        if(rc == LIBSSH2_ERROR_EAGAIN) {
+          break;
+        }
+        else if(rc < 0) {
+          infof(data, "Failed to close libssh2 file\n");
+        }
+        sshc->sftp_handle = NULL;
       }
-      sshc->sftp_handle = NULL;
-    }
-    Curl_safefree(sftp_scp->path);
-    sftp_scp->path = NULL;
+      Curl_safefree(sftp_scp->path);
+      sftp_scp->path = NULL;
 
-    DEBUGF(infof(data, "SFTP DONE done\n"));
+      DEBUGF(infof(data, "SFTP DONE done\n"));
 #if 0 /* PREV */
-    state(conn, SSH_SFTP_SHUTDOWN);
+      state(conn, SSH_SFTP_SHUTDOWN);
 #endif
-    state(conn, SSH_STOP);
-    result = sshc->actualcode;
-    break;
+      state(conn, SSH_STOP);
+      result = sshc->actualcode;
+      break;
 
-  case SSH_SFTP_SHUTDOWN:
-    /* during times we get here due to a broken transfer and then the
-       sftp_handle might not have been taken down so make sure that is done
-       before we proceed */
+    case SSH_SFTP_SHUTDOWN:
+      /* during times we get here due to a broken transfer and then the
+         sftp_handle might not have been taken down so make sure that is done
+         before we proceed */
 
-    if(sshc->sftp_handle) {
-      rc = libssh2_sftp_close(sshc->sftp_handle);
-      if(rc == LIBSSH2_ERROR_EAGAIN) {
-        break;
-      }
-      else if(rc < 0) {
-        infof(data, "Failed to close libssh2 file\n");
-      }
-      sshc->sftp_handle = NULL;
-    }
-    if(sshc->sftp_session) {
-      rc = libssh2_sftp_shutdown(sshc->sftp_session);
-      if(rc == LIBSSH2_ERROR_EAGAIN) {
-        break;
+      if(sshc->sftp_handle) {
+        rc = libssh2_sftp_close(sshc->sftp_handle);
+        if(rc == LIBSSH2_ERROR_EAGAIN) {
+          break;
+        }
+        else if(rc < 0) {
+          infof(data, "Failed to close libssh2 file\n");
+        }
+        sshc->sftp_handle = NULL;
       }
-      else if(rc < 0) {
-        infof(data, "Failed to stop libssh2 sftp subsystem\n");
+      if(sshc->sftp_session) {
+        rc = libssh2_sftp_shutdown(sshc->sftp_session);
+        if(rc == LIBSSH2_ERROR_EAGAIN) {
+          break;
+        }
+        else if(rc < 0) {
+          infof(data, "Failed to stop libssh2 sftp subsystem\n");
+        }
+        sshc->sftp_session = NULL;
       }
-      sshc->sftp_session = NULL;
-    }
 
-    Curl_safefree(sshc->homedir);
-    sshc->homedir = NULL;
-
-    state(conn, SSH_SESSION_DISCONNECT);
-    break;
+      Curl_safefree(sshc->homedir);
+      sshc->homedir = NULL;
 
-  case SSH_SCP_TRANS_INIT:
-    result = ssh_getworkingpath(conn, sshc->homedir, &sftp_scp->path);
-    if(result) {
-      sshc->actualcode = result;
-      state(conn, SSH_STOP);
+      state(conn, SSH_SESSION_DISCONNECT);
       break;
-    }
 
-    if(data->set.upload) {
-      if(data->set.infilesize < 0) {
-        failf(data, "SCP requires a known file size for upload");
-        sshc->actualcode = CURLE_UPLOAD_FAILED;
-        state(conn, SSH_SCP_CHANNEL_FREE);
+    case SSH_SCP_TRANS_INIT:
+      result = ssh_getworkingpath(conn, sshc->homedir, &sftp_scp->path);
+      if(result) {
+        sshc->actualcode = result;
+        state(conn, SSH_STOP);
         break;
       }
-      state(conn, SSH_SCP_UPLOAD_INIT);
-    }
-    else {
-      state(conn, SSH_SCP_DOWNLOAD_INIT);
-    }
-    break;
 
-  case SSH_SCP_UPLOAD_INIT:
-    /*
-     * libssh2 requires that the destination path is a full path that
-     * includes the destination file and name OR ends in a "/" .  If this is
-     * not done the destination file will be named the same name as the last
-     * directory in the path.
-     */
-    sshc->ssh_channel =
-      libssh2_scp_send_ex(sshc->ssh_session, sftp_scp->path,
-                          data->set.new_file_perms,
-                          (size_t)data->set.infilesize, 0, 0);
-    if(!sshc->ssh_channel) {
-      if(libssh2_session_last_errno(sshc->ssh_session) ==
-         LIBSSH2_ERROR_EAGAIN) {
-        rc = LIBSSH2_ERROR_EAGAIN;
-        break;
+      if(data->set.upload) {
+        if(data->set.infilesize < 0) {
+          failf(data, "SCP requires a known file size for upload");
+          sshc->actualcode = CURLE_UPLOAD_FAILED;
+          state(conn, SSH_SCP_CHANNEL_FREE);
+          break;
+        }
+        state(conn, SSH_SCP_UPLOAD_INIT);
       }
       else {
-        int ssh_err;
-        char *err_msg;
-
-        ssh_err = libssh2_session_last_error(sshc->ssh_session,
-                                             &err_msg, NULL, 0);
-        failf(conn->data, "%s", err_msg);
-        state(conn, SSH_SCP_CHANNEL_FREE);
-        sshc->actualcode = libssh2_session_error_to_CURLE(ssh_err);
-        break;
+        state(conn, SSH_SCP_DOWNLOAD_INIT);
       }
-    }
+      break;
 
-    /* upload data */
-    result = Curl_setup_transfer(conn, -1, data->req.size, FALSE, NULL,
-                                 FIRSTSOCKET, NULL);
+    case SSH_SCP_UPLOAD_INIT:
+      /*
+       * libssh2 requires that the destination path is a full path that
+       * includes the destination file and name OR ends in a "/" .  If this is
+       * not done the destination file will be named the same name as the last
+       * directory in the path.
+       */
+      sshc->ssh_channel =
+        libssh2_scp_send_ex(sshc->ssh_session, sftp_scp->path,
+                            data->set.new_file_perms,
+                            (size_t)data->set.infilesize, 0, 0);
+      if(!sshc->ssh_channel) {
+        if(libssh2_session_last_errno(sshc->ssh_session) ==
+           LIBSSH2_ERROR_EAGAIN) {
+          rc = LIBSSH2_ERROR_EAGAIN;
+          break;
+        }
+        else {
+          int ssh_err;
+          char *err_msg;
 
-    /* not set by Curl_setup_transfer to preserve keepon bits */
-    conn->sockfd = conn->writesockfd;
+          ssh_err = libssh2_session_last_error(sshc->ssh_session,
+                                               &err_msg, NULL, 0);
+          failf(conn->data, "%s", err_msg);
+          state(conn, SSH_SCP_CHANNEL_FREE);
+          sshc->actualcode = libssh2_session_error_to_CURLE(ssh_err);
+          break;
+        }
+      }
 
-    if(result) {
-      state(conn, SSH_SCP_CHANNEL_FREE);
-      sshc->actualcode = result;
-    }
-    else {
-      state(conn, SSH_STOP);
-    }
-    break;
+      /* upload data */
+      result = Curl_setup_transfer(conn, -1, data->req.size, FALSE, NULL,
+                                   FIRSTSOCKET, NULL);
 
-  case SSH_SCP_DOWNLOAD_INIT:
-  {
-    /*
-     * We must check the remote file; if it is a directory no values will
-     * be set in sb
-     */
-    struct stat sb;
-    curl_off_t bytecount;
-
-    /* clear the struct scp recv will fill in */
-    memset(&sb, 0, sizeof(struct stat));
-
-    /* get a fresh new channel from the ssh layer */
-    sshc->ssh_channel = libssh2_scp_recv(sshc->ssh_session,
-                                         sftp_scp->path, &sb);
-    if(!sshc->ssh_channel) {
-      if(libssh2_session_last_errno(sshc->ssh_session) ==
-         LIBSSH2_ERROR_EAGAIN) {
-        rc = LIBSSH2_ERROR_EAGAIN;
-        break;
-      }
-      else {
-        int ssh_err;
-        char *err_msg;
+      /* not set by Curl_setup_transfer to preserve keepon bits */
+      conn->sockfd = conn->writesockfd;
 
-        ssh_err = libssh2_session_last_error(sshc->ssh_session,
-                                             &err_msg, NULL, 0);
-        failf(conn->data, "%s", err_msg);
+      if(result) {
         state(conn, SSH_SCP_CHANNEL_FREE);
-        sshc->actualcode = libssh2_session_error_to_CURLE(ssh_err);
-        break;
+        sshc->actualcode = result;
       }
-    }
+      else {
+        state(conn, SSH_STOP);
+      }
+      break;
 
-    /* download data */
-    bytecount = (curl_off_t)sb.st_size;
-    data->req.maxdownload =  (curl_off_t)sb.st_size;
-    result = Curl_setup_transfer(conn, FIRSTSOCKET,
-                                 bytecount, FALSE, NULL, -1, NULL);
+    case SSH_SCP_DOWNLOAD_INIT:
+    {
+      /*
+       * We must check the remote file; if it is a directory no values will
+       * be set in sb
+       */
+      struct stat sb;
+      curl_off_t bytecount;
 
-    /* not set by Curl_setup_transfer to preserve keepon bits */
-    conn->writesockfd = conn->sockfd;
+      /* clear the struct scp recv will fill in */
+      memset(&sb, 0, sizeof(struct stat));
 
-    /* FIXME: here should be explained why we need it to start the download */
-    conn->cselect_bits = CURL_CSELECT_IN;
+      /* get a fresh new channel from the ssh layer */
+      sshc->ssh_channel = libssh2_scp_recv(sshc->ssh_session,
+                                           sftp_scp->path, &sb);
+      if(!sshc->ssh_channel) {
+        if(libssh2_session_last_errno(sshc->ssh_session) ==
+           LIBSSH2_ERROR_EAGAIN) {
+          rc = LIBSSH2_ERROR_EAGAIN;
+          break;
+        }
+        else {
+          int ssh_err;
+          char *err_msg;
 
-    if(result) {
-      state(conn, SSH_SCP_CHANNEL_FREE);
-      sshc->actualcode = result;
-    }
-    else
-      state(conn, SSH_STOP);
-  }
-  break;
+          ssh_err = libssh2_session_last_error(sshc->ssh_session,
+                                               &err_msg, NULL, 0);
+          failf(conn->data, "%s", err_msg);
+          state(conn, SSH_SCP_CHANNEL_FREE);
+          sshc->actualcode = libssh2_session_error_to_CURLE(ssh_err);
+          break;
+        }
+      }
 
-  case SSH_SCP_DONE:
-    if(data->set.upload)
-      state(conn, SSH_SCP_SEND_EOF);
-    else
-      state(conn, SSH_SCP_CHANNEL_FREE);
-    break;
+      /* download data */
+      bytecount = (curl_off_t)sb.st_size;
+      data->req.maxdownload =  (curl_off_t)sb.st_size;
+      result = Curl_setup_transfer(conn, FIRSTSOCKET,
+                                   bytecount, FALSE, NULL, -1, NULL);
 
-  case SSH_SCP_SEND_EOF:
-    if(sshc->ssh_channel) {
-      rc = libssh2_channel_send_eof(sshc->ssh_channel);
-      if(rc == LIBSSH2_ERROR_EAGAIN) {
-        break;
-      }
-      else if(rc) {
-        infof(data, "Failed to send libssh2 channel EOF\n");
-      }
-    }
-    state(conn, SSH_SCP_WAIT_EOF);
-    break;
+      /* not set by Curl_setup_transfer to preserve keepon bits */
+      conn->writesockfd = conn->sockfd;
 
-  case SSH_SCP_WAIT_EOF:
-    if(sshc->ssh_channel) {
-      rc = libssh2_channel_wait_eof(sshc->ssh_channel);
-      if(rc == LIBSSH2_ERROR_EAGAIN) {
-        break;
-      }
-      else if(rc) {
-        infof(data, "Failed to get channel EOF: %d\n", rc);
+      /* FIXME: here should be explained why we need it to start the download */
+      conn->cselect_bits = CURL_CSELECT_IN;
+
+      if(result) {
+        state(conn, SSH_SCP_CHANNEL_FREE);
+        sshc->actualcode = result;
       }
+      else
+        state(conn, SSH_STOP);
     }
-    state(conn, SSH_SCP_WAIT_CLOSE);
     break;
 
-  case SSH_SCP_WAIT_CLOSE:
-    if(sshc->ssh_channel) {
-      rc = libssh2_channel_wait_closed(sshc->ssh_channel);
-      if(rc == LIBSSH2_ERROR_EAGAIN) {
-        break;
+    case SSH_SCP_DONE:
+      if(data->set.upload)
+        state(conn, SSH_SCP_SEND_EOF);
+      else
+        state(conn, SSH_SCP_CHANNEL_FREE);
+      break;
+
+    case SSH_SCP_SEND_EOF:
+      if(sshc->ssh_channel) {
+        rc = libssh2_channel_send_eof(sshc->ssh_channel);
+        if(rc == LIBSSH2_ERROR_EAGAIN) {
+          break;
+        }
+        else if(rc) {
+          infof(data, "Failed to send libssh2 channel EOF\n");
+        }
       }
-      else if(rc) {
-        infof(data, "Channel failed to close: %d\n", rc);
+      state(conn, SSH_SCP_WAIT_EOF);
+      break;
+
+    case SSH_SCP_WAIT_EOF:
+      if(sshc->ssh_channel) {
+        rc = libssh2_channel_wait_eof(sshc->ssh_channel);
+        if(rc == LIBSSH2_ERROR_EAGAIN) {
+          break;
+        }
+        else if(rc) {
+          infof(data, "Failed to get channel EOF: %d\n", rc);
+        }
       }
-    }
-    state(conn, SSH_SCP_CHANNEL_FREE);
-    break;
+      state(conn, SSH_SCP_WAIT_CLOSE);
+      break;
 
-  case SSH_SCP_CHANNEL_FREE:
-    if(sshc->ssh_channel) {
-      rc = libssh2_channel_free(sshc->ssh_channel);
-      if(rc == LIBSSH2_ERROR_EAGAIN) {
-        break;
+    case SSH_SCP_WAIT_CLOSE:
+      if(sshc->ssh_channel) {
+        rc = libssh2_channel_wait_closed(sshc->ssh_channel);
+        if(rc == LIBSSH2_ERROR_EAGAIN) {
+          break;
+        }
+        else if(rc) {
+          infof(data, "Channel failed to close: %d\n", rc);
+        }
       }
-      else if(rc < 0) {
-        infof(data, "Failed to free libssh2 scp subsystem\n");
+      state(conn, SSH_SCP_CHANNEL_FREE);
+      break;
+
+    case SSH_SCP_CHANNEL_FREE:
+      if(sshc->ssh_channel) {
+        rc = libssh2_channel_free(sshc->ssh_channel);
+        if(rc == LIBSSH2_ERROR_EAGAIN) {
+          break;
+        }
+        else if(rc < 0) {
+          infof(data, "Failed to free libssh2 scp subsystem\n");
+        }
+        sshc->ssh_channel = NULL;
       }
-      sshc->ssh_channel = NULL;
-    }
-    DEBUGF(infof(data, "SCP DONE phase complete\n"));
+      DEBUGF(infof(data, "SCP DONE phase complete\n"));
 #if 0 /* PREV */
-    state(conn, SSH_SESSION_DISCONNECT);
+      state(conn, SSH_SESSION_DISCONNECT);
 #endif
-    state(conn, SSH_STOP);
-    result = sshc->actualcode;
-    break;
+      state(conn, SSH_STOP);
+      result = sshc->actualcode;
+      break;
 
-  case SSH_SESSION_DISCONNECT:
-    /* during weird times when we've been prematurely aborted, the channel
-       is still alive when we reach this state and we MUST kill the channel
-       properly first */
-    if(sshc->ssh_channel) {
-      rc = libssh2_channel_free(sshc->ssh_channel);
-      if(rc == LIBSSH2_ERROR_EAGAIN) {
-        break;
-      }
-      else if(rc < 0) {
-        infof(data, "Failed to free libssh2 scp subsystem\n");
+    case SSH_SESSION_DISCONNECT:
+      /* during weird times when we've been prematurely aborted, the channel
+         is still alive when we reach this state and we MUST kill the channel
+         properly first */
+      if(sshc->ssh_channel) {
+        rc = libssh2_channel_free(sshc->ssh_channel);
+        if(rc == LIBSSH2_ERROR_EAGAIN) {
+          break;
+        }
+        else if(rc < 0) {
+          infof(data, "Failed to free libssh2 scp subsystem\n");
+        }
+        sshc->ssh_channel = NULL;
       }
-      sshc->ssh_channel = NULL;
-    }
 
-    if(sshc->ssh_session) {
-      rc = libssh2_session_disconnect(sshc->ssh_session, "Shutdown");
-      if(rc == LIBSSH2_ERROR_EAGAIN) {
-        break;
-      }
-      else if(rc < 0) {
-        infof(data, "Failed to disconnect libssh2 session\n");
+      if(sshc->ssh_session) {
+        rc = libssh2_session_disconnect(sshc->ssh_session, "Shutdown");
+        if(rc == LIBSSH2_ERROR_EAGAIN) {
+          break;
+        }
+        else if(rc < 0) {
+          infof(data, "Failed to disconnect libssh2 session\n");
+        }
       }
-    }
 
-    Curl_safefree(sshc->homedir);
-    sshc->homedir = NULL;
+      Curl_safefree(sshc->homedir);
+      sshc->homedir = NULL;
 
-    state(conn, SSH_SESSION_FREE);
-    break;
+      state(conn, SSH_SESSION_FREE);
+      break;
 
-  case SSH_SESSION_FREE:
+    case SSH_SESSION_FREE:
 #ifdef HAVE_LIBSSH2_KNOWNHOST_API
-    if(sshc->kh) {
-      libssh2_knownhost_free(sshc->kh);
-      sshc->kh = NULL;
-    }
+      if(sshc->kh) {
+        libssh2_knownhost_free(sshc->kh);
+        sshc->kh = NULL;
+      }
 #endif
 
-    if(sshc->ssh_session) {
-      rc = libssh2_session_free(sshc->ssh_session);
-      if(rc == LIBSSH2_ERROR_EAGAIN) {
-        break;
-      }
-      else if(rc < 0) {
-        infof(data, "Failed to free libssh2 session\n");
+      if(sshc->ssh_session) {
+        rc = libssh2_session_free(sshc->ssh_session);
+        if(rc == LIBSSH2_ERROR_EAGAIN) {
+          break;
+        }
+        else if(rc < 0) {
+          infof(data, "Failed to free libssh2 session\n");
+        }
+        sshc->ssh_session = NULL;
       }
-      sshc->ssh_session = NULL;
+      conn->bits.close = TRUE;
+      sshc->nextstate = SSH_NO_STATE;
+      state(conn, SSH_STOP);
+      result = sshc->actualcode;
+      break;
+
+    case SSH_QUIT:
+      /* fallthrough, just stop! */
+    default:
+      /* internal error */
+      sshc->nextstate = SSH_NO_STATE;
+      state(conn, SSH_STOP);
+      break;
     }
-    conn->bits.close = TRUE;
-    sshc->nextstate = SSH_NO_STATE;
-    state(conn, SSH_STOP);
-    result = sshc->actualcode;
-    break;
 
-  case SSH_QUIT:
-    /* fallthrough, just stop! */
-  default:
-    /* internal error */
-    sshc->nextstate = SSH_NO_STATE;
-    state(conn, SSH_STOP);
-    break;
-  }
+  } while(!rc && (sshc->state != SSH_STOP));
 
   if(rc == LIBSSH2_ERROR_EAGAIN) {
     /* we would block, we need to wait for the socket to be ready (in the
        right direction too)! */
     *block = TRUE;
   }
@@ -2380,13 +2414,13 @@
   sshc->actualcode = CURLE_OK; /* reset error code */
   sshc->secondCreateDirs =0;   /* reset the create dir attempt state variable */
 
   if(data->state.proto.ssh)
     return CURLE_OK;
 
-  ssh = calloc(sizeof(struct SSHPROTO), 1);
+  ssh = calloc(1, sizeof(struct SSHPROTO));
   if(!ssh)
     return CURLE_OUT_OF_MEMORY;
 
   data->state.proto.ssh = ssh;
 
   return CURLE_OK;
@@ -2455,13 +2489,13 @@
     }
   }
 #endif /* HAVE_LIBSSH2_KNOWNHOST_API */
 
 #ifdef CURL_LIBSSH2_DEBUG
   libssh2_trace(ssh->ssh_session, ~0);
-  infof(data, "SSH socket: %d\n", sock);
+  infof(data, "SSH socket: %d\n", (int)sock);
 #endif /* CURL_LIBSSH2_DEBUG */
 
   state(conn, SSH_S_STARTUP);
 
   if(data->state.used_interface == Curl_if_multi)
     result = ssh_multi_statemach(conn, done);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/ssh.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/ssh.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/ssh.h	2009-05-20 15:17:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/ssh.h	2009-12-13 06:17:51.000000000 +0800
@@ -17,15 +17,137 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: ssh.h,v 1.19 2009-05-19 23:21:25 gknauf Exp $
+ * $Id: ssh.h,v 1.20 2009-12-12 22:17:51 bagder Exp $
  ***************************************************************************/
 
+#include "setup.h"
+
+#ifdef HAVE_LIBSSH2_H
+#include <libssh2.h>
+#include <libssh2_sftp.h>
+#endif /* HAVE_LIBSSH2_H */
+
+/****************************************************************************
+ * SSH unique setup
+ ***************************************************************************/
+typedef enum {
+  SSH_NO_STATE = -1,  /* Used for "nextState" so say there is none */
+  SSH_STOP = 0,       /* do nothing state, stops the state machine */
+
+  SSH_S_STARTUP,      /* Session startup, First state in SSH-CONNECT */
+  SSH_HOSTKEY,        /* verify hostkey */
+  SSH_AUTHLIST,
+  SSH_AUTH_PKEY_INIT,
+  SSH_AUTH_PKEY,
+  SSH_AUTH_PASS_INIT,
+  SSH_AUTH_PASS,
+  SSH_AUTH_HOST_INIT,
+  SSH_AUTH_HOST,
+  SSH_AUTH_KEY_INIT,
+  SSH_AUTH_KEY,
+  SSH_AUTH_DONE,
+  SSH_SFTP_INIT,
+  SSH_SFTP_REALPATH,   /* Last state in SSH-CONNECT */
+
+  SSH_SFTP_QUOTE_INIT, /* First state in SFTP-DO */
+  SSH_SFTP_POSTQUOTE_INIT, /* (Possibly) First state in SFTP-DONE */
+  SSH_SFTP_QUOTE,
+  SSH_SFTP_NEXT_QUOTE,
+  SSH_SFTP_QUOTE_STAT,
+  SSH_SFTP_QUOTE_SETSTAT,
+  SSH_SFTP_QUOTE_SYMLINK,
+  SSH_SFTP_QUOTE_MKDIR,
+  SSH_SFTP_QUOTE_RENAME,
+  SSH_SFTP_QUOTE_RMDIR,
+  SSH_SFTP_QUOTE_UNLINK,
+  SSH_SFTP_TRANS_INIT,
+  SSH_SFTP_UPLOAD_INIT,
+  SSH_SFTP_CREATE_DIRS_INIT,
+  SSH_SFTP_CREATE_DIRS,
+  SSH_SFTP_CREATE_DIRS_MKDIR,
+  SSH_SFTP_READDIR_INIT,
+  SSH_SFTP_READDIR,
+  SSH_SFTP_READDIR_LINK,
+  SSH_SFTP_READDIR_BOTTOM,
+  SSH_SFTP_READDIR_DONE,
+  SSH_SFTP_DOWNLOAD_INIT,
+  SSH_SFTP_DOWNLOAD_STAT, /* Last state in SFTP-DO */
+  SSH_SFTP_CLOSE,    /* Last state in SFTP-DONE */
+  SSH_SFTP_SHUTDOWN, /* First state in SFTP-DISCONNECT */
+  SSH_SCP_TRANS_INIT, /* First state in SCP-DO */
+  SSH_SCP_UPLOAD_INIT,
+  SSH_SCP_DOWNLOAD_INIT,
+  SSH_SCP_DONE,
+  SSH_SCP_SEND_EOF,
+  SSH_SCP_WAIT_EOF,
+  SSH_SCP_WAIT_CLOSE,
+  SSH_SCP_CHANNEL_FREE,   /* Last state in SCP-DONE */
+  SSH_SESSION_DISCONNECT, /* First state in SCP-DISCONNECT */
+  SSH_SESSION_FREE,       /* Last state in SCP/SFTP-DISCONNECT */
+  SSH_QUIT,
+  SSH_LAST  /* never used */
+} sshstate;
+
+/* this struct is used in the HandleData struct which is part of the
+   SessionHandle, which means this is used on a per-easy handle basis.
+   Everything that is strictly related to a connection is banned from this
+   struct. */
+struct SSHPROTO {
+  char *path;                  /* the path we operate on */
+};
+
+/* ssh_conn is used for struct connection-oriented data in the connectdata
+   struct */
+struct ssh_conn {
+  const char *authlist;       /* List of auth. methods, managed by libssh2 */
+#ifdef USE_LIBSSH2
+  const char *passphrase;     /* pass-phrase to use */
+  char *rsa_pub;              /* path name */
+  char *rsa;                  /* path name */
+  bool authed;                /* the connection has been authenticated fine */
+  sshstate state;             /* always use ssh.c:state() to change state! */
+  sshstate nextstate;         /* the state to goto after stopping */
+  CURLcode actualcode;        /* the actual error code */
+  struct curl_slist *quote_item; /* for the quote option */
+  char *quote_path1;          /* two generic pointers for the QUOTE stuff */
+  char *quote_path2;
+  LIBSSH2_SFTP_ATTRIBUTES quote_attrs; /* used by the SFTP_QUOTE state */
+  char *homedir;              /* when doing SFTP we figure out home dir in the
+                                 connect phase */
+
+  /* Here's a set of struct members used by the SFTP_READDIR state */
+  LIBSSH2_SFTP_ATTRIBUTES readdir_attrs;
+  char *readdir_filename;
+  char *readdir_longentry;
+  int readdir_len, readdir_totalLen, readdir_currLen;
+  char *readdir_line;
+  char *readdir_linkPath;
+  /* end of READDIR stuff */
+
+  int secondCreateDirs;         /* counter use by the code to see if the
+                                   second attempt has been made to change
+                                   to/create a directory */
+  char *slash_pos;              /* used by the SFTP_CREATE_DIRS state */
+  LIBSSH2_SESSION *ssh_session; /* Secure Shell session */
+  LIBSSH2_CHANNEL *ssh_channel; /* Secure Shell channel handle */
+  LIBSSH2_SFTP *sftp_session;   /* SFTP handle */
+  LIBSSH2_SFTP_HANDLE *sftp_handle;
+  int orig_waitfor;             /* default READ/WRITE bits wait for */
+
+  /* note that HAVE_LIBSSH2_KNOWNHOST_API is a define set in the libssh2.h
+     header */
+#ifdef HAVE_LIBSSH2_KNOWNHOST_API
+  LIBSSH2_KNOWNHOSTS *kh;
+#endif
+#endif /* USE_LIBSSH2 */
+};
+
 #ifdef USE_LIBSSH2
 
 #if !defined(LIBSSH2_VERSION_NUM) || (LIBSSH2_VERSION_NUM < 0x001000)
 #  error "SCP/SFTP protocols require libssh2 0.16 or later"
 #endif
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/sslgen.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/sslgen.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/sslgen.c	2009-05-05 05:57:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/sslgen.c	2010-01-22 20:14:35.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: sslgen.c,v 1.48 2009-05-04 21:57:14 bagder Exp $
+ * $Id: sslgen.c,v 1.49 2009-11-18 10:33:55 yangtse Exp $
  ***************************************************************************/
 
 /* This file is for implementing all "generic" SSL functions that all libcurl
    internals should use. It is then responsible for calling the proper
    "backend" function.
 
@@ -443,13 +443,13 @@
   struct curl_ssl_session *session;
 
   if(data->state.session)
     /* this is just a precaution to prevent multiple inits */
     return CURLE_OK;
 
-  session = calloc(sizeof(struct curl_ssl_session), amount);
+  session = calloc(amount, sizeof(struct curl_ssl_session));
   if(!session)
     return CURLE_OUT_OF_MEMORY;
 
   /* store the info in the SSL section */
   data->set.ssl.numsessions = amount;
   data->state.session = session;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/ssluse.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/ssluse.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/ssluse.c	2009-10-18 02:31:50.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/ssluse.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: ssluse.c,v 1.243 2009-10-14 02:32:27 gknauf Exp $
+ * $Id: ssluse.c,v 1.252 2010-02-05 09:33:36 yangtse Exp $
  ***************************************************************************/
 
 /*
  * Source file for all OpenSSL-specific code for the TLS/SSL layer. No code
  * but sslgen.c should ever call or use these functions.
  */
@@ -307,15 +307,16 @@
                char *cert_file,
                const char *cert_type,
                char *key_file,
                const char *key_type)
 {
   struct SessionHandle *data = conn->data;
-  int file_type;
 
-  if(cert_file != NULL) {
+  int file_type = do_file_type(cert_type);
+
+  if(cert_file != NULL || file_type == SSL_FILETYPE_ENGINE) {
     SSL *ssl;
     X509 *x509;
     int cert_done = 0;
 
     if(data->set.str[STRING_KEY_PASSWD]) {
 #ifndef HAVE_USERDATA_IN_PWD_CALLBACK
@@ -334,13 +335,12 @@
                                              data->set.str[STRING_KEY_PASSWD]);
 #endif
       /* Set passwd callback: */
       SSL_CTX_set_default_passwd_cb(ctx, passwd_callback);
     }
 
-    file_type = do_file_type(cert_type);
 
 #define SSL_CLIENT_CERT_ERR \
     "unable to use client certificate (no key found or wrong pass phrase?)"
 
     switch(file_type) {
     case SSL_FILETYPE_PEM:
@@ -361,14 +361,63 @@
                                       file_type) != 1) {
         failf(data, SSL_CLIENT_CERT_ERR);
         return 0;
       }
       break;
     case SSL_FILETYPE_ENGINE:
+#if defined(HAVE_OPENSSL_ENGINE_H) && defined(ENGINE_CTRL_GET_CMD_FROM_NAME)
+      {
+        if(data->state.engine) {
+          const char *cmd_name = "LOAD_CERT_CTRL";
+          struct {
+            const char *cert_id;
+            X509 *cert;
+          } params;
+
+          params.cert_id = cert_file;
+          params.cert = NULL;
+
+          /* Does the engine supports LOAD_CERT_CTRL ? */
+          if (!ENGINE_ctrl(data->state.engine, ENGINE_CTRL_GET_CMD_FROM_NAME,
+                           0, (void *)cmd_name, NULL)) {
+            failf(data, "ssl engine does not support loading certificates");
+            return 0;
+          }
+
+          /* Load the certificate from the engine */
+          if (!ENGINE_ctrl_cmd(data->state.engine, cmd_name,
+                               0, &params, NULL, 1)) {
+            failf(data, "ssl engine cannot load client cert with id"
+                  " '%s' [%s]", cert_file,
+                  ERR_error_string(ERR_get_error(), NULL));
+            return 0;
+          }
+
+          if (!params.cert) {
+            failf(data, "ssl engine didn't initialized the certificate "
+                  "properly.");
+            return 0;
+          }
+
+          if(SSL_CTX_use_certificate(ctx, params.cert) != 1) {
+            failf(data, "unable to set client certificate");
+            X509_free(params.cert);
+            return 0;
+          }
+          X509_free(params.cert); /* we don't need the handle any more... */
+        }
+        else {
+          failf(data, "crypto engine not set, can't load certificate");
+          return 0;
+        }
+      }
+      break;
+#else
       failf(data, "file type ENG for certificate not implemented");
       return 0;
+#endif
 
     case SSL_FILETYPE_PKCS12:
     {
 #ifdef HAVE_PKCS12_SUPPORT
       FILE *f;
       PKCS12 *p12;
@@ -431,14 +480,13 @@
             failf(data, "cannot add certificate to certificate chain");
             EVP_PKEY_free(pri);
             X509_free(x509);
             return 0;
           }
           if (!SSL_CTX_add_client_CA(ctx, sk_X509_value(ca, i))) {
-            failf(data, "cannot add certificate to client CA list",
-                  cert_file);
+            failf(data, "cannot add certificate to client CA list");
             EVP_PKEY_free(pri);
             X509_free(x509);
             return 0;
           }
         }
       }
@@ -478,16 +526,12 @@
       {                         /* XXXX still needs some work */
         EVP_PKEY *priv_key = NULL;
         if(data->state.engine) {
 #ifdef HAVE_ENGINE_LOAD_FOUR_ARGS
           UI_METHOD *ui_method = UI_OpenSSL();
 #endif
-          if(!key_file || !key_file[0]) {
-            failf(data, "no key set to load from crypto engine");
-            return 0;
-          }
           /* the typecast below was added to please mingw32 */
           priv_key = (EVP_PKEY *)
             ENGINE_load_private_key(data->state.engine,key_file,
 #ifdef HAVE_ENGINE_LOAD_FOUR_ARGS
                                     ui_method,
 #endif
@@ -547,20 +591,20 @@
 
 
     /* Now we know that a key and cert have been set against
      * the SSL context */
     if(!SSL_CTX_check_private_key(ctx)) {
       failf(data, "Private key does not match the certificate public key");
-      return(0);
+      return 0;
     }
 #ifndef HAVE_USERDATA_IN_PWD_CALLBACK
     /* erase it now */
     memset(global_passwd, 0, sizeof(global_passwd));
 #endif
   }
-  return(1);
+  return 1;
 }
 
 /* returns non-zero on failure */
 static int x509_name_oneline(X509_NAME *a, char *buf, size_t size)
 {
 #if 0
@@ -611,13 +655,13 @@
      third argument */
   ERR_error_string_n(error, buf, size);
 #else
   (void) size;
   ERR_error_string(error, buf);
 #endif
-  return (buf);
+  return buf;
 }
 
 #endif /* USE_SSLEAY */
 
 #ifdef USE_SSLEAY
 /**
@@ -661,13 +705,13 @@
   /* Free the SSL error strings */
   ERR_free_strings();
 
   /* EVP_cleanup() removes all ciphers and digests from the table. */
   EVP_cleanup();
 
-#ifdef HAVE_ENGINE_cleanup
+#ifdef HAVE_ENGINE_CLEANUP
   ENGINE_cleanup();
 #endif
 
 #ifdef HAVE_CRYPTO_CLEANUP_ALL_EX_DATA
   /* this function was not present in 0.9.6b, but was added sometimes
      later */
@@ -700,17 +744,28 @@
 
 /* Selects an OpenSSL crypto engine
  */
 CURLcode Curl_ossl_set_engine(struct SessionHandle *data, const char *engine)
 {
 #if defined(USE_SSLEAY) && defined(HAVE_OPENSSL_ENGINE_H)
-  ENGINE *e = ENGINE_by_id(engine);
+  ENGINE *e;
+
+#if OPENSSL_VERSION_NUMBER >= 0x00909000L
+  e = ENGINE_by_id(engine);
+#else
+  /* avoid memory leak */
+  for(e = ENGINE_get_first(); e; e = ENGINE_get_next(e)) {
+    const char *e_id = ENGINE_get_id(e);
+    if(!strcmp(engine, e_id))
+      break;
+  }
+#endif
 
   if(!e) {
     failf(data, "SSL Engine '%s' not found", engine);
-    return (CURLE_SSL_ENGINE_NOTFOUND);
+    return CURLE_SSL_ENGINE_NOTFOUND;
   }
 
   if(data->state.engine) {
     ENGINE_finish(data->state.engine);
     ENGINE_free(data->state.engine);
     data->state.engine = NULL;
@@ -718,20 +773,20 @@
   if(!ENGINE_init(e)) {
     char buf[256];
 
     ENGINE_free(e);
     failf(data, "Failed to initialise SSL Engine '%s':\n%s",
           engine, SSL_strerror(ERR_get_error(), buf, sizeof(buf)));
-    return (CURLE_SSL_ENGINE_INITFAILED);
+    return CURLE_SSL_ENGINE_INITFAILED;
   }
   data->state.engine = e;
-  return (CURLE_OK);
+  return CURLE_OK;
 #else
   (void)engine;
   failf(data, "SSL Engine not supported");
-  return (CURLE_SSL_ENGINE_NOTFOUND);
+  return CURLE_SSL_ENGINE_NOTFOUND;
 #endif
 }
 
 /* Sets engine as default for all SSL operations
  */
 CURLcode Curl_ossl_set_engine_default(struct SessionHandle *data)
@@ -770,13 +825,13 @@
     else if(beg == NULL) {
       beg = list;
     }
   }
 #endif
   (void) data;
-  return (list);
+  return list;
 }
 
 
 /*
  * This function is called when an SSL connection is closed.
  */
@@ -1317,13 +1372,13 @@
   struct SessionHandle *data;
   const char *msg_name, *tls_rt_name;
   char ssl_buf[1024];
   int  ver, msg_type, txt_len;
 
   if(!conn || !conn->data || !conn->data->set.fdebug ||
-      (direction != 0 && direction != 1))
+     (direction != 0 && direction != 1))
     return;
 
   data = conn->data;
   ssl_ver >>= 8;
   ver = (ssl_ver == SSL2_VERSION_MAJOR ? '2' :
          ssl_ver == SSL3_VERSION_MAJOR ? '3' : '?');
@@ -1422,13 +1477,13 @@
        inform about failures of setting it */
     if(!SSL_CTX_callback_ctrl(connssl->ctx, SSL_CTRL_SET_MSG_CALLBACK,
                                (void (*)(void))ssl_tls_trace)) {
       infof(data, "SSL: couldn't set callback!\n");
     }
     else if(!SSL_CTX_ctrl(connssl->ctx, SSL_CTRL_SET_MSG_CALLBACK_ARG, 0,
-                           conn)) {
+                          conn)) {
       infof(data, "SSL: couldn't set callback argument!\n");
     }
   }
 #endif
 
   /* OpenSSL contains code to work-around lots of bugs and flaws in various
@@ -1472,13 +1527,13 @@
    * SSL_ERROR_WANT_x.
    */
   if(data->state.used_interface == Curl_if_multi)
     SSL_CTX_ctrl(connssl->ctx, BIO_C_SET_NBIO, 1, NULL);
 #endif
 
-  if(data->set.str[STRING_CERT]) {
+  if(data->set.str[STRING_CERT] || data->set.str[STRING_CERT_TYPE]) {
     if(!cert_stuff(conn,
                    connssl->ctx,
                    data->set.str[STRING_CERT],
                    data->set.str[STRING_CERT_TYPE],
                    data->set.str[STRING_KEY],
                    data->set.str[STRING_KEY_TYPE])) {
@@ -1687,13 +1742,13 @@
 
       /* If we e.g. use SSLv2 request-method and the server doesn't like us
        * (RST connection etc.), OpenSSL gives no explanation whatsoever and
        * the SO_ERROR is also lost.
        */
       if(CURLE_SSL_CONNECT_ERROR == rc && errdetail == 0) {
-        failf(data, "Unknown SSL protocol error in connection to %s:%d ",
+        failf(data, "Unknown SSL protocol error in connection to %s:%ld ",
               conn->host.name, conn->port);
         return rc;
       }
       /* Could be a CERT problem */
 
       SSL_strerror(errdetail, error_buffer, sizeof(error_buffer));
@@ -1918,13 +1973,13 @@
   struct curl_certinfo *ci = &data->info.certs;
   struct curl_slist **table;
 
   Curl_ssl_free_certinfo(data);
 
   ci->num_of_certs = num;
-  table = calloc(sizeof(struct curl_slist *) * num, 1);
+  table = calloc((size_t)num, sizeof(struct curl_slist *));
   if(!table)
     return 1;
 
   ci->certinfo = table;
   return 0;
 }
@@ -2267,13 +2322,21 @@
                                     0 /* unknown size */);
     if(retcode) {
       failf(data, "failed to store ssl session");
       return retcode;
     }
   }
-
+#ifdef HAVE_SSL_GET1_SESSION
+  else {
+    /* Session was incache, so refcount already incremented earlier.
+     * Avoid further increments with each SSL_get1_session() call.
+     * This does not free the session as refcount remains > 0
+     */
+    SSL_SESSION_free(our_ssl_sessionid);
+  }
+#endif
 
   /*
    * We check certificates to authenticate the server; otherwise we risk
    * man-in-the-middle attack; NEVERTHELESS, if we're told explicitly not to
    * verify the peer ignore faults and failures from the server cert
    * operations.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/strerror.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/strerror.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/strerror.c	2009-07-23 06:49:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/strerror.c	2010-01-22 20:14:35.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 2004 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 2004 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: strerror.c,v 1.56 2009-07-22 22:49:02 bagder Exp $
+ * $Id: strerror.c,v 1.59 2010-01-21 13:58:31 bagder Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifdef HAVE_STRERROR_R
 #  if (!defined(HAVE_POSIX_STRERROR_R) && \
@@ -78,12 +78,15 @@
   case CURLE_FTP_WEIRD_SERVER_REPLY:
     return "FTP: weird server reply";
 
   case CURLE_REMOTE_ACCESS_DENIED:
     return "Access denied to remote resource";
 
+  case CURLE_FTP_PRET_FAILED:
+    return "FTP: The server did not accept the PRET command.";
+
   case CURLE_FTP_WEIRD_PASS_REPLY:
     return "FTP: unknown PASS reply";
 
   case CURLE_FTP_WEIRD_PASV_REPLY:
     return "FTP: unknown PASV reply";
 
@@ -264,12 +267,18 @@
   case CURLE_SSH:
     return "Error in the SSH layer";
 
   case CURLE_AGAIN:
     return "Socket not ready for send/recv";
 
+  case CURLE_RTSP_CSEQ_ERROR:
+    return "RTSP CSeq mismatch or invalid CSeq";
+
+  case CURLE_RTSP_SESSION_ERROR:
+    return "RTSP session error";
+
     /* error codes not used by current libcurl */
   case CURLE_OBSOLETE4:
   case CURLE_OBSOLETE10:
   case CURLE_OBSOLETE12:
   case CURLE_OBSOLETE16:
   case CURLE_OBSOLETE20:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/telnet.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/telnet.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/telnet.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/telnet.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: telnet.c,v 1.114 2009-04-21 11:46:17 yangtse Exp $
+ * $Id: telnet.c,v 1.116 2010-02-04 19:44:31 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifndef CURL_DISABLE_TELNET
 /* -- WIN32 approved -- */
@@ -726,13 +726,13 @@
           infof(data, "(terminated by ");
           if(CURL_TELOPT_OK(i))
             infof(data, "%s ", CURL_TELOPT(i));
           else if(CURL_TELCMD_OK(i))
             infof(data, "%s ", CURL_TELCMD(i));
           else
-            infof(data, "%d ", i);
+            infof(data, "%u ", i);
           if(CURL_TELOPT_OK(j))
             infof(data, "%s", CURL_TELOPT(j));
           else if(CURL_TELCMD_OK(j))
             infof(data, "%s", CURL_TELCMD(j));
           else
             infof(data, "%d", j);
@@ -1322,13 +1322,13 @@
   /* Keep on listening and act on events */
   while(keepon) {
     waitret = WaitForMultipleObjects(obj_count, objs, FALSE, wait_timeout);
     switch(waitret) {
     case WAIT_TIMEOUT:
     {
-      while(1) {
+      for(;;) {
         if(!PeekNamedPipe(stdin_handle, NULL, 0, NULL, &readfile_read, NULL)) {
           keepon = FALSE;
           code = CURLE_READ_ERROR;
           break;
         }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/tftp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/tftp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/tftp.c	2009-08-12 16:19:39.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/tftp.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: tftp.c,v 1.93 2009-08-12 08:19:39 bagder Exp $
+ * $Id: tftp.c,v 1.100 2010-02-04 19:44:31 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifndef CURL_DISABLE_TFTP
 /* -- WIN32 approved -- */
@@ -67,12 +67,13 @@
 #include "sendf.h"
 #include "tftp.h"
 #include "progress.h"
 #include "connect.h"
 #include "strerror.h"
 #include "sockaddr.h" /* required for Curl_sockaddr_storage */
+#include "multiif.h"
 #include "url.h"
 #include "rawstr.h"
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
@@ -100,13 +101,14 @@
   TFTP_STATE_RX,
   TFTP_STATE_TX,
   TFTP_STATE_FIN
 } tftp_state_t;
 
 typedef enum {
-  TFTP_EVENT_INIT=0,
+  TFTP_EVENT_NONE = -1,
+  TFTP_EVENT_INIT = 0,
   TFTP_EVENT_RRQ = 1,
   TFTP_EVENT_WRQ = 2,
   TFTP_EVENT_DATA = 3,
   TFTP_EVENT_ACK = 4,
   TFTP_EVENT_ERROR = 5,
   TFTP_EVENT_OACK = 6,
@@ -134,26 +136,28 @@
 } tftp_packet_t;
 
 typedef struct tftp_state_data {
   tftp_state_t    state;
   tftp_mode_t     mode;
   tftp_error_t    error;
+  tftp_event_t    event;
   struct connectdata      *conn;
   curl_socket_t   sockfd;
   int             retries;
-  time_t          retry_time;
-  time_t          retry_max;
+  int             retry_time;
+  int             retry_max;
   time_t          start_time;
   time_t          max_time;
+  time_t          rx_time;
   unsigned short  block;
   struct Curl_sockaddr_storage   local_addr;
   struct Curl_sockaddr_storage   remote_addr;
   curl_socklen_t  remote_addrlen;
-  ssize_t         rbytes;
-  size_t          sbytes;
-  size_t          blksize;
+  int             rbytes;
+  int             sbytes;
+  int             blksize;
   int             requested_blksize;
   tftp_packet_t   rpacket;
   tftp_packet_t   spacket;
 } tftp_state_data_t;
 
 
@@ -163,12 +167,17 @@
 static CURLcode tftp_connect(struct connectdata *conn, bool *done);
 static CURLcode tftp_disconnect(struct connectdata *conn);
 static CURLcode tftp_do(struct connectdata *conn, bool *done);
 static CURLcode tftp_done(struct connectdata *conn,
                                CURLcode, bool premature);
 static CURLcode tftp_setup_connection(struct connectdata * conn);
+static CURLcode tftp_multi_statemach(struct connectdata *conn, bool *done);
+static CURLcode tftp_doing(struct connectdata *conn, bool *dophase_done);
+static int tftp_getsock(struct connectdata *conn, curl_socket_t *socks,
+                        int numsocks);
+static CURLcode tftp_translate_code(tftp_error_t error);
 
 
 /*
  * TFTP protocol handler.
  */
 
@@ -176,16 +185,16 @@
   "TFTP",                               /* scheme */
   tftp_setup_connection,                /* setup_connection */
   tftp_do,                              /* do_it */
   tftp_done,                            /* done */
   ZERO_NULL,                            /* do_more */
   tftp_connect,                         /* connect_it */
-  ZERO_NULL,                            /* connecting */
-  ZERO_NULL,                            /* doing */
-  ZERO_NULL,                            /* proto_getsock */
-  ZERO_NULL,                            /* doing_getsock */
+  tftp_multi_statemach,                 /* connecting */
+  tftp_doing,                           /* doing */
+  tftp_getsock,                         /* proto_getsock */
+  tftp_getsock,                         /* doing_getsock */
   ZERO_NULL,                            /* perform_getsock */
   tftp_disconnect,                      /* disconnect */
   PORT_TFTP,                            /* defport */
   PROT_TFTP                             /* protocol */
 };
 
@@ -223,20 +231,20 @@
     state->max_time = state->start_time+maxtime;
 
     /* Set per-block timeout to total */
     timeout = maxtime ;
 
     /* Average restart after 5 seconds */
-    state->retry_max = timeout/5;
+    state->retry_max = (int)timeout/5;
 
     if(state->retry_max < 1)
       /* avoid division by zero below */
       state->retry_max = 1;
 
     /* Compute the re-start interval to suit the timeout */
-    state->retry_time = timeout/state->retry_max;
+    state->retry_time = (int)timeout/state->retry_max;
     if(state->retry_time<1)
       state->retry_time=1;
 
   }
   else {
     if(timeout_ms > 0)
@@ -247,31 +255,34 @@
     state->max_time = state->start_time+maxtime;
 
     /* Set per-block timeout to 10% of total */
     timeout = maxtime/10 ;
 
     /* Average reposting an ACK after 15 seconds */
-    state->retry_max = timeout/15;
+    state->retry_max = (int)timeout/15;
   }
-  /* But bound the total number  */
+  /* But bound the total number */
   if(state->retry_max<3)
     state->retry_max=3;
 
   if(state->retry_max>50)
     state->retry_max=50;
 
   /* Compute the re-ACK interval to suit the timeout */
   state->retry_time = timeout/state->retry_max;
   if(state->retry_time<1)
     state->retry_time=1;
 
   infof(state->conn->data,
-        "set timeouts for state %d; Total %d, retry %d maxtry %d\n",
-        state->state, (state->max_time-state->start_time),
+        "set timeouts for state %d; Total %ld, retry %d maxtry %d\n",
+        (int)state->state, (long)(state->max_time-state->start_time),
         state->retry_time, state->retry_max);
 
+  /* init RX time */
+  time(&state->rx_time);
+
   return CURLE_OK;
 }
 
 /**********************************************************
  *
  * tftp_set_send_first
@@ -349,15 +360,15 @@
       return CURLE_TFTP_ILLEGAL;
     }
 
     infof(data, "got option=(%s) value=(%s)\n", option, value);
 
     if(checkprefix(option, TFTP_OPTION_BLKSIZE)) {
-      int blksize;
+      long blksize;
 
-      blksize = (int)strtol( value, NULL, 10 );
+      blksize = strtol( value, NULL, 10 );
 
       if(!blksize) {
         failf(data, "invalid blocksize value in OACK packet");
         return CURLE_TFTP_ILLEGAL;
       }
       else if(blksize > TFTP_BLKSIZE_MAX) {
@@ -371,47 +382,48 @@
         return CURLE_TFTP_ILLEGAL;
       }
       else if (blksize > state->requested_blksize) {
         /* could realloc pkt buffers here, but the spec doesn't call out
          * support for the server requesting a bigger blksize than the client
          * requests */
-        failf(data, "%s (%d)",
+        failf(data, "%s (%ld)",
                 "server requested blksize larger than allocated", blksize);
         return CURLE_TFTP_ILLEGAL;
       }
 
-      state->blksize = blksize;
+      state->blksize = (int)blksize;
       infof(data, "%s (%d) %s (%d)\n", "blksize parsed from OACK",
         state->blksize, "requested", state->requested_blksize);
     }
     else if(checkprefix(option, TFTP_OPTION_TSIZE)) {
       long tsize = 0;
 
       tsize = strtol( value, NULL, 10 );
       if(!tsize) {
         failf(data, "invalid tsize value in OACK packet");
         return CURLE_TFTP_ILLEGAL;
       }
       Curl_pgrsSetDownloadSize(data, tsize);
-      infof(data, "%s (%d)\n", "tsize parsed from OACK", tsize);
+      infof(data, "%s (%ld)\n", "tsize parsed from OACK", tsize);
     }
   }
 
   return CURLE_OK;
 }
 
 static size_t tftp_option_add(tftp_state_data_t *state, size_t csize,
                               char *buf, const char *option)
 {
-  if( ( strlen(option) + csize + 1U ) > state->blksize )
-        return 0;
+  if( ( strlen(option) + csize + 1 ) > (size_t)state->blksize )
+    return 0;
   strcpy(buf, option);
   return( strlen(option) + 1 );
 }
 
-static CURLcode tftp_connect_for_tx(tftp_state_data_t *state, tftp_event_t event)
+static CURLcode tftp_connect_for_tx(tftp_state_data_t *state,
+                                    tftp_event_t event)
 {
   CURLcode res;
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
   struct SessionHandle *data = state->conn->data;
 
   infof(data, "%s\n", "Connected for transmit");
@@ -420,13 +432,14 @@
   res = tftp_set_timeouts(state);
   if(res != CURLE_OK)
     return(res);
   return tftp_tx(state, event);
 }
 
-static CURLcode tftp_connect_for_rx(tftp_state_data_t *state, tftp_event_t event)
+static CURLcode tftp_connect_for_rx(tftp_state_data_t *state,
+                                    tftp_event_t event)
 {
   CURLcode res;
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
   struct SessionHandle *data = state->conn->data;
 
   infof(data, "%s\n", "Connected for receive");
@@ -438,12 +451,13 @@
   return tftp_rx(state, event);
 }
 
 static CURLcode tftp_send_first(tftp_state_data_t *state, tftp_event_t event)
 {
   size_t sbytes;
+  ssize_t senddata;
   const char *mode = "octet";
   char *filename;
   char buf[64];
   struct SessionHandle *data = state->conn->data;
   CURLcode res = CURLE_OK;
 
@@ -503,24 +517,25 @@
     snprintf( buf, sizeof(buf), "%d", state->requested_blksize );
     sbytes += tftp_option_add(state, sbytes,
                               (char *)state->spacket.data+sbytes,
                               TFTP_OPTION_BLKSIZE);
     sbytes += tftp_option_add(state, sbytes,
                               (char *)state->spacket.data+sbytes, buf );
-    /* add timeout option */
-    snprintf( buf, sizeof(buf), "%d", state->retry_time );
+    /* add timeout option, this is the max time the session may live */
+    snprintf( buf, sizeof(buf), "%d", state->retry_time*state->retry_max );
     sbytes += tftp_option_add(state, sbytes,
                               (char *)state->spacket.data+sbytes,
                               TFTP_OPTION_INTERVAL);
     sbytes += tftp_option_add(state, sbytes,
                               (char *)state->spacket.data+sbytes, buf );
 
-    if (sendto(state->sockfd, (void *)state->spacket.data,
-               sbytes, 0,
-               state->conn->ip_addr->ai_addr,
-               state->conn->ip_addr->ai_addrlen) < 0) {
+    senddata = sendto(state->sockfd, (void *)state->spacket.data,
+                    sbytes, 0,
+                    state->conn->ip_addr->ai_addr,
+                    state->conn->ip_addr->ai_addrlen);
+    if(senddata != (ssize_t)sbytes) {
       failf(data, "%s", Curl_strerror(state->conn, SOCKERRNO));
     }
     Curl_safefree(filename);
     break;
 
   case TFTP_EVENT_OACK:
@@ -557,12 +572,13 @@
  *
  * Event handler for the RX state
  *
  **********************************************************/
 static CURLcode tftp_rx(tftp_state_data_t *state, tftp_event_t event)
 {
+  ssize_t sbytes;
   int rblock;
   struct SessionHandle *data = state->conn->data;
 
   switch(event) {
 
   case TFTP_EVENT_DATA:
@@ -581,69 +597,84 @@
     }
     /* This is the expected block.  Reset counters and ACK it. */
     state->block = (unsigned short)rblock;
     state->retries = 0;
     setpacketevent(&state->spacket, TFTP_EVENT_ACK);
     setpacketblock(&state->spacket, state->block);
-    if(sendto(state->sockfd, (void *)state->spacket.data,
-              4, SEND_4TH_ARG,
-              (struct sockaddr *)&state->remote_addr,
-              state->remote_addrlen) < 0) {
+    sbytes = sendto(state->sockfd, (void *)state->spacket.data,
+                    4, SEND_4TH_ARG,
+                    (struct sockaddr *)&state->remote_addr,
+                    state->remote_addrlen);
+    if(sbytes < 0) {
       failf(data, "%s", Curl_strerror(state->conn, SOCKERRNO));
       return CURLE_SEND_ERROR;
     }
 
     /* Check if completed (That is, a less than full packet is received) */
     if(state->rbytes < (ssize_t)state->blksize+4){
       state->state = TFTP_STATE_FIN;
     }
     else {
       state->state = TFTP_STATE_RX;
     }
+    time(&state->rx_time);
     break;
 
   case TFTP_EVENT_OACK:
     /* ACK option acknowledgement so we can move on to data */
     state->block = 0;
     state->retries = 0;
     setpacketevent(&state->spacket, TFTP_EVENT_ACK);
     setpacketblock(&state->spacket, state->block);
-    if(sendto(state->sockfd, (void *)state->spacket.data,
-              4, SEND_4TH_ARG,
-              (struct sockaddr *)&state->remote_addr,
-              state->remote_addrlen) < 0) {
+    sbytes = sendto(state->sockfd, (void *)state->spacket.data,
+                    4, SEND_4TH_ARG,
+                    (struct sockaddr *)&state->remote_addr,
+                    state->remote_addrlen);
+    if(sbytes < 0) {
       failf(data, "%s", Curl_strerror(state->conn, SOCKERRNO));
       return CURLE_SEND_ERROR;
     }
 
     /* we're ready to RX data */
     state->state = TFTP_STATE_RX;
+    time(&state->rx_time);
     break;
 
   case TFTP_EVENT_TIMEOUT:
     /* Increment the retry count and fail if over the limit */
     state->retries++;
     infof(data,
-          "Timeout waiting for block %d ACK.  Retries = %d\n", state->retries);
+          "Timeout waiting for block %d ACK.  Retries = %d\n",
+          state->block+1, state->retries);
     if(state->retries > state->retry_max) {
       state->error = TFTP_ERR_TIMEOUT;
       state->state = TFTP_STATE_FIN;
     }
     else {
-      /* Resend the previous ACK and check all sbytes were sent */
-      if(sendto(state->sockfd, (void *)state->spacket.data,
-                4, SEND_4TH_ARG,
-                (struct sockaddr *)&state->remote_addr,
-                state->remote_addrlen) < 0) {
+      /* Resend the previous ACK */
+      sbytes = sendto(state->sockfd, (void *)state->spacket.data,
+                      4, SEND_4TH_ARG,
+                      (struct sockaddr *)&state->remote_addr,
+                      state->remote_addrlen);
+      /* Check all sbytes were sent */
+      if(sbytes<0) {
         failf(data, "%s", Curl_strerror(state->conn, SOCKERRNO));
         return CURLE_SEND_ERROR;
       }
     }
     break;
 
   case TFTP_EVENT_ERROR:
+    setpacketevent(&state->spacket, TFTP_EVENT_ERROR);
+    setpacketblock(&state->spacket, state->block);
+    sbytes = sendto(state->sockfd, (void *)state->spacket.data,
+                    4, SEND_4TH_ARG,
+                    (struct sockaddr *)&state->remote_addr,
+                    state->remote_addrlen);
+    /* don't bother with the return code, but if the socket is still up we
+     * should be a good TFTP client and let the server know we're done */
     state->state = TFTP_STATE_FIN;
     break;
 
   default:
     failf(data, "%s", "tftp_rx: internal error");
     return CURLE_TFTP_ILLEGAL; /* not really the perfect return code for
@@ -659,14 +690,14 @@
  * Event handler for the TX state
  *
  **********************************************************/
 static CURLcode tftp_tx(tftp_state_data_t *state, tftp_event_t event)
 {
   struct SessionHandle *data = state->conn->data;
+  ssize_t sbytes;
   int rblock;
-  int readcount;
   CURLcode res = CURLE_OK;
   struct SingleRequest *k = &data->req;
 
   switch(event) {
 
   case TFTP_EVENT_ACK:
@@ -682,90 +713,156 @@
       if(state->retries>state->retry_max) {
         failf(data, "tftp_tx: giving up waiting for block %d ack",
               state->block);
         res = CURLE_SEND_ERROR;
       }
       else {
-        /* Re-send the data packet and check all sbytes were sent */
-        if(sendto(state->sockfd, (void *)&state->spacket,
-                  4+state->sbytes, SEND_4TH_ARG,
-                  (struct sockaddr *)&state->remote_addr,
-                  state->remote_addrlen) < 0) {
+        /* Re-send the data packet */
+        sbytes = sendto(state->sockfd, (void *)&state->spacket,
+                        4+state->sbytes, SEND_4TH_ARG,
+                        (struct sockaddr *)&state->remote_addr,
+                        state->remote_addrlen);
+        /* Check all sbytes were sent */
+        if(sbytes<0) {
           failf(data, "%s", Curl_strerror(state->conn, SOCKERRNO));
           res = CURLE_SEND_ERROR;
         }
       }
       return res;
     }
-    /* fall-through */
-  case TFTP_EVENT_OACK:
     /* This is the expected packet.  Reset the counters and send the next
        block */
+    time(&state->rx_time);
     state->block++;
     state->retries = 0;
     setpacketevent(&state->spacket, TFTP_EVENT_DATA);
     setpacketblock(&state->spacket, state->block);
-    if(state->block > 1 && state->sbytes < state->blksize) {
+    if(state->block > 1 && state->sbytes < (int)state->blksize) {
       state->state = TFTP_STATE_FIN;
       return CURLE_OK;
     }
-    res = Curl_fillreadbuffer(state->conn, (int)state->blksize, &readcount);
-    state->sbytes = readcount;
+    res = Curl_fillreadbuffer(state->conn, (size_t)state->blksize,
+                              &state->sbytes);
     if(res)
       return res;
-    /* Send the data packet and check all sbytes were sent */
-    if(sendto(state->sockfd, (void *)state->spacket.data,
-              4+state->sbytes, SEND_4TH_ARG,
-              (struct sockaddr *)&state->remote_addr,
-              state->remote_addrlen) < 0) {
+    sbytes = sendto(state->sockfd, (void *)state->spacket.data,
+                    4+state->sbytes, SEND_4TH_ARG,
+                    (struct sockaddr *)&state->remote_addr,
+                    state->remote_addrlen);
+    /* Check all sbytes were sent */
+    if(sbytes<0) {
       failf(data, "%s", Curl_strerror(state->conn, SOCKERRNO));
       return CURLE_SEND_ERROR;
     }
     /* Update the progress meter */
     k->writebytecount += state->sbytes;
     Curl_pgrsSetUploadCounter(data, k->writebytecount);
     break;
 
   case TFTP_EVENT_TIMEOUT:
     /* Increment the retry counter and log the timeout */
     state->retries++;
     infof(data, "Timeout waiting for block %d ACK. "
-          " Retries = %d\n", state->retries);
+          " Retries = %d\n", state->block+1, state->retries);
     /* Decide if we've had enough */
     if(state->retries > state->retry_max) {
       state->error = TFTP_ERR_TIMEOUT;
       state->state = TFTP_STATE_FIN;
     }
     else {
-      /* Re-send the data packet and check all sbytes were sent */
-      if(sendto(state->sockfd, (void *)state->spacket.data,
-                4+state->sbytes, SEND_4TH_ARG,
-                (struct sockaddr *)&state->remote_addr,
-                state->remote_addrlen) < 0) {
+      /* Re-send the data packet */
+      sbytes = sendto(state->sockfd, (void *)state->spacket.data,
+                      4+state->sbytes, SEND_4TH_ARG,
+                      (struct sockaddr *)&state->remote_addr,
+                      state->remote_addrlen);
+      /* Check all sbytes were sent */
+      if(sbytes<0) {
         failf(data, "%s", Curl_strerror(state->conn, SOCKERRNO));
         return CURLE_SEND_ERROR;
       }
       /* since this was a re-send, we remain at the still byte position */
       Curl_pgrsSetUploadCounter(data, k->writebytecount);
     }
     break;
 
   case TFTP_EVENT_ERROR:
     state->state = TFTP_STATE_FIN;
+    setpacketevent(&state->spacket, TFTP_EVENT_ERROR);
+    setpacketblock(&state->spacket, state->block);
+    sbytes = sendto(state->sockfd, (void *)state->spacket.data,
+                    4, SEND_4TH_ARG,
+                    (struct sockaddr *)&state->remote_addr,
+                    state->remote_addrlen);
+    /* don't bother with the return code, but if the socket is still up we
+     * should be a good TFTP client and let the server know we're done */
+    state->state = TFTP_STATE_FIN;
     break;
 
   default:
     failf(data, "%s", "tftp_tx: internal error");
     break;
   }
 
   return res;
 }
 
 /**********************************************************
  *
+ * tftp_translate_code
+ *
+ * Translate internal error codes to CURL error codes
+ *
+ **********************************************************/
+static CURLcode tftp_translate_code(tftp_error_t error)
+{
+  CURLcode code = CURLE_OK;
+
+  if(error != TFTP_ERR_NONE) {
+    switch(error) {
+    case TFTP_ERR_NOTFOUND:
+      code = CURLE_TFTP_NOTFOUND;
+      break;
+    case TFTP_ERR_PERM:
+      code = CURLE_TFTP_PERM;
+      break;
+    case TFTP_ERR_DISKFULL:
+      code = CURLE_REMOTE_DISK_FULL;
+      break;
+    case TFTP_ERR_UNDEF:
+    case TFTP_ERR_ILLEGAL:
+      code = CURLE_TFTP_ILLEGAL;
+      break;
+    case TFTP_ERR_UNKNOWNID:
+      code = CURLE_TFTP_UNKNOWNID;
+      break;
+    case TFTP_ERR_EXISTS:
+      code = CURLE_REMOTE_FILE_EXISTS;
+      break;
+    case TFTP_ERR_NOSUCHUSER:
+      code = CURLE_TFTP_NOSUCHUSER;
+      break;
+    case TFTP_ERR_TIMEOUT:
+      code = CURLE_OPERATION_TIMEDOUT;
+      break;
+    case TFTP_ERR_NORESPONSE:
+      code = CURLE_COULDNT_CONNECT;
+      break;
+    default:
+      code= CURLE_ABORTED_BY_CALLBACK;
+      break;
+    }
+  }
+  else {
+    code = CURLE_OK;
+  }
+
+  return(code);
+}
+
+/**********************************************************
+ *
  * tftp_state_machine
  *
  * The tftp state machine event dispatcher
  *
  **********************************************************/
 static CURLcode tftp_state_machine(tftp_state_data_t *state,
@@ -835,13 +932,13 @@
   blksize = TFTP_BLKSIZE_DEFAULT;
 
   /* If there already is a protocol-specific struct allocated for this
      sessionhandle, deal with it */
   Curl_reset_reqproto(conn);
 
-  state = conn->proto.tftpc = calloc(sizeof(tftp_state_data_t), 1);
+  state = conn->proto.tftpc = calloc(1, sizeof(tftp_state_data_t));
   if(!state)
     return CURLE_OUT_OF_MEMORY;
 
   /* alloc pkt buffers based on specified blksize */
   if(conn->data->set.tftp_blksize) {
     blksize = (int)conn->data->set.tftp_blksize;
@@ -880,17 +977,17 @@
   tftp_set_timeouts(state);
 
   if(!conn->bits.bound) {
     /* If not already bound, bind to any interface, random UDP port. If it is
      * reused or a custom local port was desired, this has already been done!
      *
-     * We once used the size of the local_addr struct as the third argument for
-     * bind() to better work with IPv6 or whatever size the struct could have,
-     * but we learned that at least Tru64, AIX and IRIX *requires* the size of
-     * that argument to match the exact size of a 'sockaddr_in' struct when
-     * running IPv4-only.
+     * We once used the size of the local_addr struct as the third argument
+     * for bind() to better work with IPv6 or whatever size the struct could
+     * have, but we learned that at least Tru64, AIX and IRIX *requires* the
+     * size of that argument to match the exact size of a 'sockaddr_in' struct
+     * when running IPv4-only.
      *
      * Therefore we use the size from the address we connected to, which we
      * assume uses the same IP version and thus hopefully this works for both
      * IPv4 and IPv6...
      */
     rc = bind(state->sockfd, (struct sockaddr *)&state->local_addr,
@@ -917,210 +1014,368 @@
  * The done callback
  *
  **********************************************************/
 static CURLcode tftp_done(struct connectdata *conn, CURLcode status,
                                bool premature)
 {
+  CURLcode code = CURLE_OK;
+  tftp_state_data_t *state = (tftp_state_data_t *)conn->proto.tftpc;
+
   (void)status; /* unused */
   (void)premature; /* not used */
 
   Curl_pgrsDone(conn);
 
-  return CURLE_OK;
-}
+  /* If we have encountered an error */
+  code = tftp_translate_code(state->error);
 
+  return code;
+}
 
 /**********************************************************
  *
- * tftp
- *
- * The do callback
+ * tftp_getsock
  *
- * This callback handles the entire TFTP transfer
+ * The getsock callback
  *
  **********************************************************/
+static int tftp_getsock(struct connectdata *conn, curl_socket_t *socks,
+                       int numsocks)
+{
+  if(!numsocks)
+    return GETSOCK_BLANK;
 
-static CURLcode tftp_do(struct connectdata *conn, bool *done)
+  socks[0] = conn->sock[FIRSTSOCKET];
+
+  return GETSOCK_READSOCK(0);
+}
+
+/**********************************************************
+ *
+ * tftp_receive_packet
+ *
+ * Called once select fires and data is ready on the socket
+ *
+ **********************************************************/
+static CURLcode tftp_receive_packet(struct connectdata *conn)
 {
-  struct SessionHandle  *data = conn->data;
-  tftp_state_data_t     *state;
-  tftp_event_t          event;
-  CURLcode              code;
-  int                   rc;
   struct Curl_sockaddr_storage fromaddr;
   curl_socklen_t        fromlen;
-  int                   check_time = 0;
-  struct SingleRequest *k = &data->req;
+  CURLcode              result = CURLE_OK;
+  struct SessionHandle  *data = conn->data;
+  tftp_state_data_t     *state = (tftp_state_data_t *)conn->proto.tftpc;
+  struct SingleRequest  *k = &data->req;
 
-  *done = TRUE;
+  /* Receive the packet */
+  fromlen = sizeof(fromaddr);
+  state->rbytes = (int)recvfrom(state->sockfd,
+                                   (void *)state->rpacket.data,
+                                   state->blksize+4,
+                                   0,
+                                   (struct sockaddr *)&fromaddr,
+                                   &fromlen);
+  if(state->remote_addrlen==0) {
+    memcpy(&state->remote_addr, &fromaddr, fromlen);
+    state->remote_addrlen = fromlen;
+  }
 
-  /*
-    Since connections can be re-used between SessionHandles, this might be a
-    connection already existing but on a fresh SessionHandle struct so we must
-    make sure we have a good 'struct TFTP' to play with. For new connections,
-    the struct TFTP is allocated and setup in the tftp_connect() function.
-  */
-  Curl_reset_reqproto(conn);
+  /* Sanity check packet length */
+  if(state->rbytes < 4) {
+    failf(data, "Received too short packet");
+    /* Not a timeout, but how best to handle it? */
+    state->event = TFTP_EVENT_TIMEOUT;
+  }
+  else {
+    /* The event is given by the TFTP packet time */
+    state->event = (tftp_event_t)getrpacketevent(&state->rpacket);
 
-  if(!conn->proto.tftpc) {
-    code = tftp_connect(conn, done);
-    if(code)
-      return code;
+    switch(state->event) {
+    case TFTP_EVENT_DATA:
+      /* Don't pass to the client empty or retransmitted packets */
+      if(state->rbytes > 4 &&
+          ((state->block+1) == getrpacketblock(&state->rpacket))) {
+        result = Curl_client_write(conn, CLIENTWRITE_BODY,
+                                 (char *)state->rpacket.data+4,
+                                 state->rbytes-4);
+        if(result) {
+          tftp_state_machine(state, TFTP_EVENT_ERROR);
+          return result;
+        }
+        k->bytecount += state->rbytes-4;
+        Curl_pgrsSetDownloadCounter(data, (curl_off_t) k->bytecount);
+      }
+      break;
+    case TFTP_EVENT_ERROR:
+      state->error = (tftp_error_t)getrpacketblock(&state->rpacket);
+      infof(data, "%s\n", (const char *)state->rpacket.data+4);
+      break;
+    case TFTP_EVENT_ACK:
+      break;
+    case TFTP_EVENT_OACK:
+      result = tftp_parse_option_ack(state,
+                                   (const char *)state->rpacket.data+2,
+                                   state->rbytes-2);
+      if(result)
+        return result;
+      break;
+    case TFTP_EVENT_RRQ:
+    case TFTP_EVENT_WRQ:
+    default:
+      failf(data, "%s", "Internal error: Unexpected packet");
+      break;
+    }
+
+    /* Update the progress meter */
+    if(Curl_pgrsUpdate(conn)) {
+      tftp_state_machine(state, TFTP_EVENT_ERROR);
+      return CURLE_ABORTED_BY_CALLBACK;
+    }
   }
-  state = (tftp_state_data_t *)conn->proto.tftpc;
+  return result;
+}
+
+/**********************************************************
+ *
+ * tftp_state_timeout
+ *
+ * Check if timeouts have been reached
+ *
+ **********************************************************/
+static long tftp_state_timeout(struct connectdata *conn, tftp_event_t *event)
+{
+  time_t                current;
+  tftp_state_data_t     *state = (tftp_state_data_t *)conn->proto.tftpc;
+
+  if (event)
+    *event = TFTP_EVENT_NONE;
+
+  time(&current);
+  if(current > state->max_time) {
+    DEBUGF(infof(conn->data, "timeout: %ld > %ld\n",
+                 (long)current, (long)state->max_time));
+    state->error = TFTP_ERR_TIMEOUT;
+    state->state = TFTP_STATE_FIN;
+    return(0);
+  }
+  else if (current > state->rx_time+state->retry_time) {
+    if (event)
+      *event = TFTP_EVENT_TIMEOUT;
+    time(&state->rx_time); /* update even though we received nothing */
+    return(state->max_time-current);
+  }
+  else {
+    return(state->max_time-current);
+  }
+}
+
+/**********************************************************
+ *
+ * tftp_easy_statemach
+ *
+ * Handle easy request until completion
+ *
+ **********************************************************/
+static CURLcode tftp_easy_statemach(struct connectdata *conn)
+{
+  int                   rc;
+  int                   check_time = 0;
+  CURLcode              result = CURLE_OK;
+  struct SessionHandle  *data = conn->data;
+  tftp_state_data_t     *state = (tftp_state_data_t *)conn->proto.tftpc;
 
   /* Run the TFTP State Machine */
-  for(code=tftp_state_machine(state, TFTP_EVENT_INIT);
-      (state->state != TFTP_STATE_FIN) && (code == CURLE_OK);
-      code=tftp_state_machine(state, event) ) {
+  for(;
+      (state->state != TFTP_STATE_FIN) && (result == CURLE_OK);
+      result=tftp_state_machine(state, state->event) ) {
 
     /* Wait until ready to read or timeout occurs */
     rc=Curl_socket_ready(state->sockfd, CURL_SOCKET_BAD,
-                         (int)(state->retry_time * 1000));
+                         state->retry_time * 1000);
 
     if(rc == -1) {
       /* bail out */
       int error = SOCKERRNO;
       failf(data, "%s", Curl_strerror(conn, error));
-      event = TFTP_EVENT_ERROR;
+      state->event = TFTP_EVENT_ERROR;
     }
     else if(rc==0) {
       /* A timeout occured */
-      event = TFTP_EVENT_TIMEOUT;
+      state->event = TFTP_EVENT_TIMEOUT;
 
       /* Force a look at transfer timeouts */
       check_time = 0;
 
     }
     else {
-
-      /* Receive the packet */
-      fromlen = sizeof(fromaddr);
-      state->rbytes = (ssize_t)recvfrom(state->sockfd,
-                                        (void *)state->rpacket.data,
-                                        state->blksize+4,
-                                        0,
-                                        (struct sockaddr *)&fromaddr,
-                                        &fromlen);
-      if(state->remote_addrlen==0) {
-        memcpy(&state->remote_addr, &fromaddr, fromlen);
-        state->remote_addrlen = fromlen;
-      }
-
-      /* Sanity check packet length */
-      if(state->rbytes < 4) {
-        failf(data, "Received too short packet");
-        /* Not a timeout, but how best to handle it? */
-        event = TFTP_EVENT_TIMEOUT;
-      }
-      else {
-
-        /* The event is given by the TFTP packet time */
-        event = (tftp_event_t)getrpacketevent(&state->rpacket);
-
-        switch(event) {
-        case TFTP_EVENT_DATA:
-          /* Don't pass to the client empty or retransmitted packets */
-          if(state->rbytes > 4 &&
-              ((state->block+1) == getrpacketblock(&state->rpacket))) {
-            code = Curl_client_write(conn, CLIENTWRITE_BODY,
-                                     (char *)state->rpacket.data+4,
-                                     state->rbytes-4);
-            if(code)
-              return code;
-            k->bytecount += state->rbytes-4;
-            Curl_pgrsSetDownloadCounter(data, (curl_off_t) k->bytecount);
-          }
-          break;
-        case TFTP_EVENT_ERROR:
-          state->error = (tftp_error_t)getrpacketblock(&state->rpacket);
-          infof(data, "%s\n", (const char *)state->rpacket.data+4);
-          break;
-        case TFTP_EVENT_ACK:
-          break;
-        case TFTP_EVENT_OACK:
-          code = tftp_parse_option_ack(state,
-                                       (const char *)state->rpacket.data+2,
-                                       (int)state->rbytes-2);
-          if(code)
-            return code;
-          break;
-        case TFTP_EVENT_RRQ:
-        case TFTP_EVENT_WRQ:
-        default:
-          failf(data, "%s", "Internal error: Unexpected packet");
-          break;
-        }
-
-        /* Update the progress meter */
-        if(Curl_pgrsUpdate(conn))
-          return CURLE_ABORTED_BY_CALLBACK;
-      }
+        result = tftp_receive_packet(conn);
     }
 
     /* Check for transfer timeout every 10 blocks, or after timeout */
     if(check_time%10==0) {
-      time_t current;
-      time(&current);
-      if(current>state->max_time) {
-        DEBUGF(infof(data, "timeout: %d > %d\n",
-                     current, state->max_time));
-        state->error = TFTP_ERR_TIMEOUT;
-        state->state = TFTP_STATE_FIN;
-      }
+      /* ignore the event here as Curl_socket_ready() handles
+       * retransmission timeouts inside the easy state mach */
+      tftp_state_timeout(conn, NULL);
     }
 
+    if(result)
+      return(result);
   }
-  if(code)
-    return code;
 
   /* Tell curl we're done */
-  code = Curl_setup_transfer(conn, -1, -1, FALSE, NULL, -1, NULL);
-  if(code)
-    return code;
+  result = Curl_setup_transfer(conn, -1, -1, FALSE, NULL, -1, NULL);
 
-  /* If we have encountered an error */
-  if(state->error != TFTP_ERR_NONE) {
+  return(result);
+}
 
-    /* Translate internal error codes to curl error codes */
-    switch(state->error) {
-    case TFTP_ERR_NOTFOUND:
-      code = CURLE_TFTP_NOTFOUND;
-      break;
-    case TFTP_ERR_PERM:
-      code = CURLE_TFTP_PERM;
-      break;
-    case TFTP_ERR_DISKFULL:
-      code = CURLE_REMOTE_DISK_FULL;
-      break;
-    case TFTP_ERR_UNDEF:
-    case TFTP_ERR_ILLEGAL:
-      code = CURLE_TFTP_ILLEGAL;
-      break;
-    case TFTP_ERR_UNKNOWNID:
-      code = CURLE_TFTP_UNKNOWNID;
-      break;
-    case TFTP_ERR_EXISTS:
-      code = CURLE_REMOTE_FILE_EXISTS;
-      break;
-    case TFTP_ERR_NOSUCHUSER:
-      code = CURLE_TFTP_NOSUCHUSER;
-      break;
-    case TFTP_ERR_TIMEOUT:
-      code = CURLE_OPERATION_TIMEDOUT;
-      break;
-    case TFTP_ERR_NORESPONSE:
-      code = CURLE_COULDNT_CONNECT;
-      break;
-    default:
-      code= CURLE_ABORTED_BY_CALLBACK;
-      break;
+/**********************************************************
+ *
+ * tftp_multi_statemach
+ *
+ * Handle single RX socket event and return
+ *
+ **********************************************************/
+static CURLcode tftp_multi_statemach(struct connectdata *conn, bool *done)
+{
+  int                   rc;
+  tftp_event_t          event;
+  CURLcode              result = CURLE_OK;
+  struct SessionHandle  *data = conn->data;
+  tftp_state_data_t     *state = (tftp_state_data_t *)conn->proto.tftpc;
+  long                  timeout_ms = tftp_state_timeout(conn, &event);
+
+  *done = FALSE;
+
+  if(timeout_ms <= 0) {
+    failf(data, "TFTP response timeout");
+    return CURLE_OPERATION_TIMEDOUT;
+  }
+  else if (event != TFTP_EVENT_NONE) {
+    result = tftp_state_machine(state, event);
+    if(result != CURLE_OK)
+      return(result);
+    *done = (bool)(state->state == TFTP_STATE_FIN);
+    if(*done)
+      /* Tell curl we're done */
+      result = Curl_setup_transfer(conn, -1, -1, FALSE, NULL, -1, NULL);
+  }
+  else {
+    /* no timeouts to handle, check our socket */
+    rc = Curl_socket_ready(state->sockfd, CURL_SOCKET_BAD, 0);
+
+    if(rc == -1) {
+      /* bail out */
+      int error = SOCKERRNO;
+      failf(data, "%s", Curl_strerror(conn, error));
+      state->event = TFTP_EVENT_ERROR;
+    }
+    else if(rc != 0) {
+      result = tftp_receive_packet(conn);
+      if(result != CURLE_OK)
+        return(result);
+      result = tftp_state_machine(state, state->event);
+      if(result != CURLE_OK)
+        return(result);
+      *done = (bool)(state->state == TFTP_STATE_FIN);
+      if(*done)
+        /* Tell curl we're done */
+        result = Curl_setup_transfer(conn, -1, -1, FALSE, NULL, -1, NULL);
     }
+    /* if rc == 0, then select() timed out */
   }
-  else
-    code = CURLE_OK;
+
+  return result;
+}
+
+/**********************************************************
+ *
+ * tftp_doing
+ *
+ * Called from multi.c while DOing
+ *
+ **********************************************************/
+static CURLcode tftp_doing(struct connectdata *conn, bool *dophase_done)
+{
+  CURLcode result;
+  result = tftp_multi_statemach(conn, dophase_done);
+
+  if(*dophase_done) {
+    DEBUGF(infof(conn->data, "DO phase is complete\n"));
+  }
+  return result;
+}
+
+/**********************************************************
+ *
+ * tftp_peform
+ *
+ * Entry point for transfer from tftp_do, sarts state mach
+ *
+ **********************************************************/
+static CURLcode tftp_perform(struct connectdata *conn, bool *dophase_done)
+{
+  CURLcode              result = CURLE_OK;
+  tftp_state_data_t     *state = (tftp_state_data_t *)conn->proto.tftpc;
+
+  *dophase_done = FALSE;
+
+  result = tftp_state_machine(state, TFTP_EVENT_INIT);
+
+  if(state->state == TFTP_STATE_FIN || result != CURLE_OK)
+    return(result);
+
+  if(conn->data->state.used_interface == Curl_if_multi)
+    tftp_multi_statemach(conn, dophase_done);
+  else {
+    result = tftp_easy_statemach(conn);
+    *dophase_done = TRUE; /* with the easy interface we are done here */
+  }
+
+  if(*dophase_done)
+    DEBUGF(infof(conn->data, "DO phase is complete\n"));
+
+  return result;
+}
+
+
+/**********************************************************
+ *
+ * tftp_do
+ *
+ * The do callback
+ *
+ * This callback initiates the TFTP transfer
+ *
+ **********************************************************/
+
+static CURLcode tftp_do(struct connectdata *conn, bool *done)
+{
+  tftp_state_data_t     *state;
+  CURLcode              code;
+
+  *done = FALSE;
+
+  /*
+    Since connections can be re-used between SessionHandles, this might be a
+    connection already existing but on a fresh SessionHandle struct so we must
+    make sure we have a good 'struct TFTP' to play with. For new connections,
+    the struct TFTP is allocated and setup in the tftp_connect() function.
+  */
+  Curl_reset_reqproto(conn);
+
+  if(!conn->proto.tftpc) {
+    code = tftp_connect(conn, done);
+    if(code)
+      return code;
+  }
+  state = (tftp_state_data_t *)conn->proto.tftpc;
+
+  code = tftp_perform(conn, done);
+
+  /* If we have encountered an error */
+  code = tftp_translate_code(state->error);
+
   return code;
 }
 
 static CURLcode tftp_setup_connection(struct connectdata * conn)
 {
   struct SessionHandle *data = conn->data;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/transfer.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/transfer.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/transfer.c	2009-09-28 05:37:24.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/transfer.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: transfer.c,v 1.440 2009-09-27 21:37:24 bagder Exp $
+ * $Id: transfer.c,v 1.458 2010-02-04 19:44:31 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 /* -- WIN32 approved -- */
 #include <stdio.h>
@@ -100,43 +100,35 @@
 #include "http_negotiate.h"
 #include "share.h"
 #include "curl_memory.h"
 #include "select.h"
 #include "multiif.h"
 #include "easyif.h" /* for Curl_convert_to_network prototype */
+#include "rtsp.h"
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
 /* The last #include file should be: */
 #include "memdebug.h"
 
 #define CURL_TIMEOUT_EXPECT_100 1000 /* counting ms here */
 
-
-#ifndef CURL_DISABLE_HTTP
-static CURLcode readwrite_http_headers(struct SessionHandle *data,
-                                       struct connectdata *conn,
-                                       struct SingleRequest *k,
-                                       ssize_t *nread,
-                                       bool *stop_reading);
-#endif /* CURL_DISABLE_HTTP */
-
 /*
  * This function will call the read callback to fill our buffer with data
  * to upload.
  */
 CURLcode Curl_fillreadbuffer(struct connectdata *conn, int bytes, int *nreadp)
 {
   struct SessionHandle *data = conn->data;
   size_t buffersize = (size_t)bytes;
   int nread;
 #ifdef CURL_DOES_CONVERSIONS
   bool sending_http_headers = FALSE;
 
-  if((conn->protocol&PROT_HTTP) &&
+  if((conn->protocol&(PROT_HTTP|PROT_RTSP)) &&
      (data->state.proto.http->sending == HTTPSEND_REQUEST)) {
     /* We're sending the HTTP request headers, not the data.
        Remember that so we don't re-translate them into garbage. */
     sending_http_headers = TRUE;
   }
 #endif
@@ -258,58 +250,12 @@
 
   *nreadp = nread;
 
   return CURLE_OK;
 }
 
-#ifndef CURL_DISABLE_HTTP
-/*
- * checkhttpprefix()
- *
- * Returns TRUE if member of the list matches prefix of string
- */
-static bool
-checkhttpprefix(struct SessionHandle *data,
-                const char *s)
-{
-  struct curl_slist *head = data->set.http200aliases;
-  bool rc = FALSE;
-#ifdef CURL_DOES_CONVERSIONS
-  /* convert from the network encoding using a scratch area */
-  char *scratch = calloc(1, strlen(s)+1);
-  if(NULL == scratch) {
-     failf (data, "Failed to calloc memory for conversion!");
-     return FALSE; /* can't return CURLE_OUT_OF_MEMORY so return FALSE */
-  }
-  strcpy(scratch, s);
-  if(CURLE_OK != Curl_convert_from_network(data, scratch, strlen(s)+1)) {
-    /* Curl_convert_from_network calls failf if unsuccessful */
-     free(scratch);
-     return FALSE; /* can't return CURLE_foobar so return FALSE */
-  }
-  s = scratch;
-#endif /* CURL_DOES_CONVERSIONS */
-
-  while(head) {
-    if(checkprefix(head->data, s)) {
-      rc = TRUE;
-      break;
-    }
-    head = head->next;
-  }
-
-  if((rc != TRUE) && (checkprefix("HTTP/", s))) {
-    rc = TRUE;
-  }
-
-#ifdef CURL_DOES_CONVERSIONS
-  free(scratch);
-#endif /* CURL_DOES_CONVERSIONS */
-  return rc;
-}
-#endif   /* CURL_DISABLE_HTTP */
 
 /*
  * Curl_readrewind() rewinds the read stream. This is typically used for HTTP
  * POST/PUT with multi-pass authentication when a sending was denied and a
  * resend is necessary.
  */
@@ -380,12 +326,14 @@
     Curl_ssl_data_pending(conn, FIRSTSOCKET);
 }
 
 static void read_rewind(struct connectdata *conn,
                         size_t thismuch)
 {
+  DEBUGASSERT(conn->read_pos >= thismuch);
+
   conn->read_pos -= thismuch;
   conn->bits.stream_was_rewound = TRUE;
 
 #ifdef DEBUGBUILD
   {
     char buf[512 + 1];
@@ -398,13 +346,13 @@
     }
     else {
         buf[0] = '\0';
     }
 
     DEBUGF(infof(conn->data,
-                 "Buffer after stream rewind (read_pos = %d): [%s]",
+                 "Buffer after stream rewind (read_pos = %zu): [%s]",
                  conn->read_pos, buf));
   }
 #endif
 }
 
 
@@ -417,13 +365,17 @@
                                struct connectdata *conn,
                                struct SingleRequest *k,
                                int *didwhat, bool *done)
 {
   CURLcode result = CURLE_OK;
   ssize_t nread; /* number of bytes read */
+  size_t excess = 0; /* excess bytes read */
   bool is_empty_data = FALSE;
+#ifndef CURL_DISABLE_RTSP
+  bool readmore = FALSE; /* used by RTP to signal for more data */
+#endif
 
   *done = FALSE;
 
   /* This is where we loop until we have read everything there is to
      read or we get a EWOULDBLOCK */
   do {
@@ -485,21 +437,44 @@
     }
 
     /* Default buffer to use when we write the buffer, it may be changed
        in the flow below before the actual storing is done. */
     k->str = k->buf;
 
+#ifndef CURL_DISABLE_RTSP
+    /* Check for RTP at the beginning of the data */
+    if(conn->protocol & PROT_RTSP) {
+      result = Curl_rtsp_rtp_readwrite(data, conn, &nread, &readmore);
+      if(result)
+        return result;
+      if(readmore)
+        break;
+    }
+#endif
+
 #ifndef CURL_DISABLE_HTTP
     /* Since this is a two-state thing, we check if we are parsing
        headers at the moment or not. */
     if(k->header) {
       /* we are in parse-the-header-mode */
       bool stop_reading = FALSE;
-      result = readwrite_http_headers(data, conn, k, &nread, &stop_reading);
+      result = Curl_http_readwrite_headers(data, conn, &nread, &stop_reading);
       if(result)
         return result;
+
+#ifndef CURL_DISABLE_RTSP
+      /* Check for RTP after the headers if there is no Content */
+      if(k->maxdownload <= 0 && nread > 0 && (conn->protocol & PROT_RTSP)) {
+        result = Curl_rtsp_rtp_readwrite(data, conn, &nread, &readmore);
+        if(result)
+          return result;
+        if(readmore)
+          break;
+      }
+#endif
+
       if(stop_reading)
         /* We've stopped dealing with input, get out of the do-while loop */
         break;
     }
 #endif /* CURL_DISABLE_HTTP */
 
@@ -506,17 +481,18 @@
 
     /* This is not an 'else if' since it may be a rest from the header
        parsing, where the beginning of the buffer is headers and the end
        is non-headers. */
     if(k->str && !k->header && (nread > 0 || is_empty_data)) {
 
+
 #ifndef CURL_DISABLE_HTTP
       if(0 == k->bodywrites && !is_empty_data) {
         /* These checks are only made the first time we are about to
            write a piece of the body */
-        if(conn->protocol&PROT_HTTP) {
+        if(conn->protocol&(PROT_HTTP|PROT_RTSP)) {
           /* HTTP-only checks */
 
           if(data->req.newurl) {
             if(conn->bits.close) {
               /* Abort after the headers if "follow Location" is set
                  and we're set to close anyway. */
@@ -604,13 +580,13 @@
 
         if(CHUNKE_OK < res) {
           if(CHUNKE_WRITE_ERROR == res) {
             failf(data, "Failed writing data");
             return CURLE_WRITE_ERROR;
           }
-          failf(data, "Received problem %d in the chunky parser", res);
+          failf(data, "Received problem %d in the chunky parser", (int)res);
           return CURLE_RECV_ERROR;
         }
         else if(CHUNKE_STOP == res) {
           size_t dataleft;
           /* we're done reading chunks! */
           k->keepon &= ~KEEP_RECV; /* read no more */
@@ -621,34 +597,53 @@
              We DO care about this data if we are pipelining.
              Push it back to be read on the next pass. */
 
           dataleft = conn->chunk.dataleft;
           if(dataleft != 0) {
             infof(conn->data, "Leftovers after chunking. "
-                  " Rewinding %d bytes\n",dataleft);
+                  " Rewinding %zu bytes\n",dataleft);
             read_rewind(conn, dataleft);
           }
         }
         /* If it returned OK, we just keep going */
       }
 #endif   /* CURL_DISABLE_HTTP */
 
+      /* Account for body content stored in the header buffer */
+      if(k->badheader && !k->ignorebody) {
+        DEBUGF(infof(data, "Increasing bytecount by %zu from hbuflen\n",
+                     k->hbuflen));
+        k->bytecount += k->hbuflen;
+      }
+
       if((-1 != k->maxdownload) &&
          (k->bytecount + nread >= k->maxdownload)) {
-        /* The 'excess' amount below can't be more than BUFSIZE which
-           always will fit in a size_t */
-        size_t excess = (size_t)(k->bytecount + nread - k->maxdownload);
+
+        excess = (size_t)(k->bytecount + nread - k->maxdownload);
         if(excess > 0 && !k->ignorebody) {
-          infof(data,
-                "Rewinding stream by : %d"
+          if(conn->data->multi && Curl_multi_canPipeline(conn->data->multi)) {
+            /* The 'excess' amount below can't be more than BUFSIZE which
+               always will fit in a size_t */
+            infof(data,
+                "Rewinding stream by : %zu"
                 " bytes on url %s (size = %" FORMAT_OFF_T
                 ", maxdownload = %" FORMAT_OFF_T
-                ", bytecount = %" FORMAT_OFF_T ", nread = %d)\n",
+                ", bytecount = %" FORMAT_OFF_T ", nread = %zd)\n",
                 excess, data->state.path,
                 k->size, k->maxdownload, k->bytecount, nread);
-          read_rewind(conn, excess);
+            read_rewind(conn, excess);
+          }
+          else {
+            infof(data,
+                "Excess found in a non pipelined read:"
+                " excess = %zu"
+                ", size = %" FORMAT_OFF_T
+                ", maxdownload = %" FORMAT_OFF_T
+                ", bytecount = %" FORMAT_OFF_T "\n",
+                excess, k->size, k->maxdownload, k->bytecount);
+          }
         }
 
         nread = (ssize_t) (k->maxdownload - k->bytecount);
         if(nread < 0 ) /* this should be unusual */
           nread = 0;
 
@@ -662,15 +657,23 @@
       if(!k->chunk && (nread || k->badheader || is_empty_data)) {
         /* If this is chunky transfer, it was already written */
 
         if(k->badheader && !k->ignorebody) {
           /* we parsed a piece of data wrongly assuming it was a header
              and now we output it as body instead */
-          result = Curl_client_write(conn, CLIENTWRITE_BODY,
-                                     data->state.headerbuff,
-                                     k->hbuflen);
+
+          /* Don't let excess data pollute body writes */
+          if(k->maxdownload == -1 || (curl_off_t)k->hbuflen <= k->maxdownload)
+            result = Curl_client_write(conn, CLIENTWRITE_BODY,
+                data->state.headerbuff,
+                k->hbuflen);
+          else
+            result = Curl_client_write(conn, CLIENTWRITE_BODY,
+                data->state.headerbuff,
+                (size_t)k->maxdownload);
+
           if(result)
             return result;
         }
         if(k->badheader < HEADER_ALLBAD) {
           /* This switch handles various content encodings. If there's an
              error here, be sure to check over the almost identical code
@@ -682,15 +685,23 @@
                   IDENTITY : k->content_encoding) {
           case IDENTITY:
 #endif
             /* This is the default when the server sends no
                Content-Encoding header. See Curl_readwrite_init; the
                memset() call initializes k->content_encoding to zero. */
-            if(!k->ignorebody)
+            if(!k->ignorebody) {
+
+#ifndef CURL_DISABLE_POP3
+              if(conn->protocol&PROT_POP3)
+                result = Curl_pop3_write(conn, k->str, nread);
+              else
+#endif /* CURL_DISABLE_POP3 */
+
               result = Curl_client_write(conn, CLIENTWRITE_BODY, k->str,
                                          nread);
+            }
 #ifdef HAVE_LIBZ
             break;
 
           case DEFLATE:
             /* Assume CLIENTWRITE_BODY; headers are not encoded. */
             if(!k->ignorebody)
@@ -718,12 +729,31 @@
         if(result)
           return result;
       }
 
     } /* if(! header and data to read ) */
 
+#ifndef CURL_DISABLE_RTSP
+    if(excess > 0 && !conn->bits.stream_was_rewound &&
+        (conn->protocol & PROT_RTSP)) {
+      /* Check for RTP after the content if there is unrewound excess */
+
+      /* Parse the excess data */
+      k->str += nread;
+      nread = excess;
+
+      result = Curl_rtsp_rtp_readwrite(data, conn, &nread, &readmore);
+      if(result)
+        return result;
+
+      if(readmore)
+        k->keepon |= KEEP_RECV; /* we're not done reading */
+        break;
+    }
+#endif
+
     if(is_empty_data) {
       /* if we received nothing, the server closed the connection and we
          are done */
       k->keepon &= ~KEEP_RECV;
     }
 
@@ -738,725 +768,12 @@
     k->keepon &= ~KEEP_SEND; /* no writing anymore either */
   }
 
   return CURLE_OK;
 }
 
-#ifndef CURL_DISABLE_HTTP
-
-/*
- * header_append() copies a chunk of data to the end of the already received
- * header. We make sure that the full string fit in the allocated header
- * buffer, or else we enlarge it.
- */
-static CURLcode header_append(struct SessionHandle *data,
-                              struct SingleRequest *k,
-                              size_t length)
-{
-  if(k->hbuflen + length >= data->state.headersize) {
-    /* We enlarge the header buffer as it is too small */
-    char *newbuff;
-    size_t hbufp_index;
-    size_t newsize;
-
-    if(k->hbuflen + length > CURL_MAX_HTTP_HEADER) {
-      /* The reason to have a max limit for this is to avoid the risk of a bad
-         server feeding libcurl with a never-ending header that will cause
-         reallocs infinitely */
-      failf (data, "Avoided giant realloc for header (max is %d)!",
-             CURL_MAX_HTTP_HEADER);
-      return CURLE_OUT_OF_MEMORY;
-    }
-
-    newsize=CURLMAX((k->hbuflen+ length)*3/2, data->state.headersize*2);
-    hbufp_index = k->hbufp - data->state.headerbuff;
-    newbuff = realloc(data->state.headerbuff, newsize);
-    if(!newbuff) {
-      failf (data, "Failed to alloc memory for big header!");
-      return CURLE_OUT_OF_MEMORY;
-    }
-    data->state.headersize=newsize;
-    data->state.headerbuff = newbuff;
-    k->hbufp = data->state.headerbuff + hbufp_index;
-  }
-  memcpy(k->hbufp, k->str_start, length);
-  k->hbufp += length;
-  k->hbuflen += length;
-  *k->hbufp = 0;
-
-  return CURLE_OK;
-}
-
-
-/*
- * Read any HTTP header lines from the server and pass them to the client app.
- */
-static CURLcode readwrite_http_headers(struct SessionHandle *data,
-                                       struct connectdata *conn,
-                                       struct SingleRequest *k,
-                                       ssize_t *nread,
-                                       bool *stop_reading)
-{
-  CURLcode result;
-
-  /* header line within buffer loop */
-  do {
-    size_t rest_length;
-    size_t full_length;
-    int writetype;
-
-    /* str_start is start of line within buf */
-    k->str_start = k->str;
-
-    /* data is in network encoding so use 0x0a instead of '\n' */
-    k->end_ptr = memchr(k->str_start, 0x0a, *nread);
-
-    if(!k->end_ptr) {
-      /* Not a complete header line within buffer, append the data to
-         the end of the headerbuff. */
-      result = header_append(data, k, *nread);
-      if(result)
-        return result;
-
-      if(!k->headerline && (k->hbuflen>5)) {
-        /* make a first check that this looks like a HTTP header */
-        if(!checkhttpprefix(data, data->state.headerbuff)) {
-          /* this is not the beginning of a HTTP first header line */
-          k->header = FALSE;
-          k->badheader = HEADER_ALLBAD;
-          break;
-        }
-      }
-
-      break; /* read more and try again */
-    }
-
-    /* decrease the size of the remaining (supposed) header line */
-    rest_length = (k->end_ptr - k->str)+1;
-    *nread -= (ssize_t)rest_length;
-
-    k->str = k->end_ptr + 1; /* move past new line */
-
-    full_length = k->str - k->str_start;
-
-    result = header_append(data, k, full_length);
-    if(result)
-      return result;
-
-    k->end_ptr = k->hbufp;
-    k->p = data->state.headerbuff;
-
-    /****
-     * We now have a FULL header line that p points to
-     *****/
-
-    if(!k->headerline) {
-      /* the first read header */
-      if((k->hbuflen>5) &&
-         !checkhttpprefix(data, data->state.headerbuff)) {
-        /* this is not the beginning of a HTTP first header line */
-        k->header = FALSE;
-        if(*nread)
-          /* since there's more, this is a partial bad header */
-          k->badheader = HEADER_PARTHEADER;
-        else {
-          /* this was all we read so it's all a bad header */
-          k->badheader = HEADER_ALLBAD;
-          *nread = (ssize_t)rest_length;
-        }
-        break;
-      }
-    }
-
-    /* headers are in network encoding so
-       use 0x0a and 0x0d instead of '\n' and '\r' */
-    if((0x0a == *k->p) || (0x0d == *k->p)) {
-      size_t headerlen;
-      /* Zero-length header line means end of headers! */
-
-#ifdef CURL_DOES_CONVERSIONS
-      if(0x0d == *k->p) {
-        *k->p = '\r'; /* replace with CR in host encoding */
-        k->p++;       /* pass the CR byte */
-      }
-      if(0x0a == *k->p) {
-        *k->p = '\n'; /* replace with LF in host encoding */
-        k->p++;       /* pass the LF byte */
-      }
-#else
-      if('\r' == *k->p)
-        k->p++; /* pass the \r byte */
-      if('\n' == *k->p)
-        k->p++; /* pass the \n byte */
-#endif /* CURL_DOES_CONVERSIONS */
-
-      if(100 <= k->httpcode && 199 >= k->httpcode) {
-        /*
-         * We have made a HTTP PUT or POST and this is 1.1-lingo
-         * that tells us that the server is OK with this and ready
-         * to receive the data.
-         * However, we'll get more headers now so we must get
-         * back into the header-parsing state!
-         */
-        k->header = TRUE;
-        k->headerline = 0; /* restart the header line counter */
-
-        /* if we did wait for this do enable write now! */
-        if(k->exp100) {
-          k->exp100 = EXP100_SEND_DATA;
-          k->keepon |= KEEP_SEND;
-        }
-      }
-      else {
-        k->header = FALSE; /* no more header to parse! */
-
-        if((k->size == -1) && !k->chunk && !conn->bits.close &&
-           (conn->httpversion >= 11) ) {
-          /* On HTTP 1.1, when connection is not to get closed, but no
-             Content-Length nor Content-Encoding chunked have been
-             received, according to RFC2616 section 4.4 point 5, we
-             assume that the server will close the connection to
-             signal the end of the document. */
-          infof(data, "no chunk, no close, no size. Assume close to "
-                "signal end\n");
-          conn->bits.close = TRUE;
-        }
-      }
-
-      if(417 == k->httpcode) {
-        /*
-         * we got: "417 Expectation Failed" this means:
-         * we have made a HTTP call and our Expect Header
-         * seems to cause a problem => abort the write operations
-         * (or prevent them from starting).
-         */
-        k->exp100 = EXP100_FAILED;
-        k->keepon &= ~KEEP_SEND;
-      }
-
-      /*
-       * When all the headers have been parsed, see if we should give
-       * up and return an error.
-       */
-      if(Curl_http_should_fail(conn)) {
-        failf (data, "The requested URL returned error: %d",
-               k->httpcode);
-        return CURLE_HTTP_RETURNED_ERROR;
-      }
-
-      /* now, only output this if the header AND body are requested:
-       */
-      writetype = CLIENTWRITE_HEADER;
-      if(data->set.include_header)
-        writetype |= CLIENTWRITE_BODY;
-
-      headerlen = k->p - data->state.headerbuff;
-
-      result = Curl_client_write(conn, writetype,
-                                 data->state.headerbuff,
-                                 headerlen);
-      if(result)
-        return result;
-
-      data->info.header_size += (long)headerlen;
-      data->req.headerbytecount += (long)headerlen;
-
-      data->req.deductheadercount =
-        (100 <= k->httpcode && 199 >= k->httpcode)?data->req.headerbytecount:0;
-
-      if(data->state.resume_from &&
-         (data->set.httpreq==HTTPREQ_GET) &&
-         (k->httpcode == 416)) {
-        /* "Requested Range Not Satisfiable" */
-        *stop_reading = TRUE;
-      }
-
-      if(!*stop_reading) {
-        /* Curl_http_auth_act() checks what authentication methods
-         * that are available and decides which one (if any) to
-         * use. It will set 'newurl' if an auth method was picked. */
-        result = Curl_http_auth_act(conn);
-
-        if(result)
-          return result;
-
-        if(conn->bits.rewindaftersend) {
-          /* We rewind after a complete send, so thus we continue
-             sending now */
-          infof(data, "Keep sending data to get tossed away!\n");
-          k->keepon |= KEEP_SEND;
-        }
-      }
-
-      if(!k->header) {
-        /*
-         * really end-of-headers.
-         *
-         * If we requested a "no body", this is a good time to get
-         * out and return home.
-         */
-        if(data->set.opt_no_body)
-          *stop_reading = TRUE;
-        else {
-          /* If we know the expected size of this document, we set the
-             maximum download size to the size of the expected
-             document or else, we won't know when to stop reading!
-
-             Note that we set the download maximum even if we read a
-             "Connection: close" header, to make sure that
-             "Content-Length: 0" still prevents us from attempting to
-             read the (missing) response-body.
-          */
-          /* According to RFC2616 section 4.4, we MUST ignore
-             Content-Length: headers if we are now receiving data
-             using chunked Transfer-Encoding.
-          */
-          if(k->chunk)
-            k->size=-1;
-
-        }
-        if(-1 != k->size) {
-          /* We do this operation even if no_body is true, since this
-             data might be retrieved later with curl_easy_getinfo()
-             and its CURLINFO_CONTENT_LENGTH_DOWNLOAD option. */
-
-          Curl_pgrsSetDownloadSize(data, k->size);
-          k->maxdownload = k->size;
-        }
-        /* If max download size is *zero* (nothing) we already
-           have nothing and can safely return ok now! */
-        if(0 == k->maxdownload)
-          *stop_reading = TRUE;
-
-        if(*stop_reading) {
-          /* we make sure that this socket isn't read more now */
-          k->keepon &= ~KEEP_RECV;
-        }
-
-        if(data->set.verbose)
-          Curl_debug(data, CURLINFO_HEADER_IN,
-                     k->str_start, headerlen, conn);
-        break;          /* exit header line loop */
-      }
-
-      /* We continue reading headers, so reset the line-based
-         header parsing variables hbufp && hbuflen */
-      k->hbufp = data->state.headerbuff;
-      k->hbuflen = 0;
-      continue;
-    }
-
-    /*
-     * Checks for special headers coming up.
-     */
-
-    if(!k->headerline++) {
-      /* This is the first header, it MUST be the error code line
-         or else we consider this to be the body right away! */
-      int httpversion_major;
-      int nc;
-#ifdef CURL_DOES_CONVERSIONS
-#define HEADER1 scratch
-#define SCRATCHSIZE 21
-      CURLcode res;
-      char scratch[SCRATCHSIZE+1]; /* "HTTP/major.minor 123" */
-      /* We can't really convert this yet because we
-         don't know if it's the 1st header line or the body.
-         So we do a partial conversion into a scratch area,
-         leaving the data at k->p as-is.
-      */
-      strncpy(&scratch[0], k->p, SCRATCHSIZE);
-      scratch[SCRATCHSIZE] = 0; /* null terminate */
-      res = Curl_convert_from_network(data,
-                                      &scratch[0],
-                                      SCRATCHSIZE);
-      if(CURLE_OK != res) {
-        /* Curl_convert_from_network calls failf if unsuccessful */
-        return res;
-      }
-#else
-#define HEADER1 k->p /* no conversion needed, just use k->p */
-#endif /* CURL_DOES_CONVERSIONS */
-
-      nc = sscanf(HEADER1,
-                  " HTTP/%d.%d %3d",
-                  &httpversion_major,
-                  &conn->httpversion,
-                  &k->httpcode);
-      if(nc==3) {
-        conn->httpversion += 10 * httpversion_major;
-      }
-      else {
-        /* this is the real world, not a Nirvana
-           NCSA 1.5.x returns this crap when asked for HTTP/1.1
-        */
-        nc=sscanf(HEADER1, " HTTP %3d", &k->httpcode);
-        conn->httpversion = 10;
-
-        /* If user has set option HTTP200ALIASES,
-           compare header line against list of aliases
-        */
-        if(!nc) {
-          if(checkhttpprefix(data, k->p)) {
-            nc = 1;
-            k->httpcode = 200;
-            conn->httpversion = 10;
-          }
-        }
-      }
-
-      if(nc) {
-        data->info.httpcode = k->httpcode;
-        data->info.httpversion = conn->httpversion;
-        if (!data->state.httpversion ||
-            data->state.httpversion > conn->httpversion)
-          /* store the lowest server version we encounter */
-          data->state.httpversion = conn->httpversion;
-
-        /*
-         * This code executes as part of processing the header.  As a
-         * result, it's not totally clear how to interpret the
-         * response code yet as that depends on what other headers may
-         * be present.  401 and 407 may be errors, but may be OK
-         * depending on how authentication is working.  Other codes
-         * are definitely errors, so give up here.
-         */
-        if(data->set.http_fail_on_error && (k->httpcode >= 400) &&
-           ((k->httpcode != 401) || !conn->bits.user_passwd) &&
-           ((k->httpcode != 407) || !conn->bits.proxy_user_passwd) ) {
-
-          if(data->state.resume_from &&
-             (data->set.httpreq==HTTPREQ_GET) &&
-             (k->httpcode == 416)) {
-            /* "Requested Range Not Satisfiable", just proceed and
-               pretend this is no error */
-          }
-          else {
-            /* serious error, go home! */
-            failf (data, "The requested URL returned error: %d",
-                   k->httpcode);
-            return CURLE_HTTP_RETURNED_ERROR;
-          }
-        }
-
-        if(conn->httpversion == 10) {
-          /* Default action for HTTP/1.0 must be to close, unless
-             we get one of those fancy headers that tell us the
-             server keeps it open for us! */
-          infof(data, "HTTP 1.0, assume close after body\n");
-          conn->bits.close = TRUE;
-        }
-        else if(conn->httpversion >= 11 &&
-                !conn->bits.close) {
-          /* If HTTP version is >= 1.1 and connection is persistent
-             server supports pipelining. */
-          DEBUGF(infof(data,
-                       "HTTP 1.1 or later with persistent connection, "
-                       "pipelining supported\n"));
-          conn->server_supports_pipelining = TRUE;
-        }
-
-        switch(k->httpcode) {
-        case 204:
-          /* (quote from RFC2616, section 10.2.5): The server has
-           * fulfilled the request but does not need to return an
-           * entity-body ... The 204 response MUST NOT include a
-           * message-body, and thus is always terminated by the first
-           * empty line after the header fields. */
-          /* FALLTHROUGH */
-        case 416: /* Requested Range Not Satisfiable, it has the
-                     Content-Length: set as the "real" document but no
-                     actual response is sent. */
-        case 304:
-          /* (quote from RFC2616, section 10.3.5): The 304 response
-           * MUST NOT contain a message-body, and thus is always
-           * terminated by the first empty line after the header
-           * fields.  */
-          if(data->set.timecondition)
-            data->info.timecond = TRUE;
-          k->size=0;
-          k->maxdownload=0;
-          k->ignorecl = TRUE; /* ignore Content-Length headers */
-          break;
-        default:
-          /* nothing */
-          break;
-        }
-      }
-      else {
-        k->header = FALSE;   /* this is not a header line */
-        break;
-      }
-    }
-
-#ifdef CURL_DOES_CONVERSIONS
-    /* convert from the network encoding */
-    result = Curl_convert_from_network(data, k->p, strlen(k->p));
-    if(CURLE_OK != result) {
-      return(result);
-    }
-    /* Curl_convert_from_network calls failf if unsuccessful */
-#endif /* CURL_DOES_CONVERSIONS */
-
-    /* Check for Content-Length: header lines to get size. Ignore
-       the header completely if we get a 416 response as then we're
-       resuming a document that we don't get, and this header contains
-       info about the true size of the document we didn't get now. */
-    if(!k->ignorecl && !data->set.ignorecl &&
-       checkprefix("Content-Length:", k->p)) {
-      curl_off_t contentlength = curlx_strtoofft(k->p+15, NULL, 10);
-      if(data->set.max_filesize &&
-         contentlength > data->set.max_filesize) {
-        failf(data, "Maximum file size exceeded");
-        return CURLE_FILESIZE_EXCEEDED;
-      }
-      if(contentlength >= 0) {
-        k->size = contentlength;
-        k->maxdownload = k->size;
-        /* we set the progress download size already at this point
-           just to make it easier for apps/callbacks to extract this
-           info as soon as possible */
-        Curl_pgrsSetDownloadSize(data, k->size);
-      }
-      else {
-        /* Negative Content-Length is really odd, and we know it
-           happens for example when older Apache servers send large
-           files */
-        conn->bits.close = TRUE;
-        infof(data, "Negative content-length: %" FORMAT_OFF_T
-              ", closing after transfer\n", contentlength);
-      }
-    }
-    /* check for Content-Type: header lines to get the MIME-type */
-    else if(checkprefix("Content-Type:", k->p)) {
-      char *contenttype = Curl_copy_header_value(k->p);
-      if (!contenttype)
-        return CURLE_OUT_OF_MEMORY;
-      if (!*contenttype)
-        /* ignore empty data */
-        free(contenttype);
-      else {
-        Curl_safefree(data->info.contenttype);
-        data->info.contenttype = contenttype;
-      }
-    }
-    else if((conn->httpversion == 10) &&
-            conn->bits.httpproxy &&
-            Curl_compareheader(k->p,
-                               "Proxy-Connection:", "keep-alive")) {
-      /*
-       * When a HTTP/1.0 reply comes when using a proxy, the
-       * 'Proxy-Connection: keep-alive' line tells us the
-       * connection will be kept alive for our pleasure.
-       * Default action for 1.0 is to close.
-       */
-      conn->bits.close = FALSE; /* don't close when done */
-      infof(data, "HTTP/1.0 proxy connection set to keep alive!\n");
-    }
-    else if((conn->httpversion == 11) &&
-            conn->bits.httpproxy &&
-            Curl_compareheader(k->p,
-                               "Proxy-Connection:", "close")) {
-      /*
-       * We get a HTTP/1.1 response from a proxy and it says it'll
-       * close down after this transfer.
-       */
-      conn->bits.close = TRUE; /* close when done */
-      infof(data, "HTTP/1.1 proxy connection set close!\n");
-    }
-    else if((conn->httpversion == 10) &&
-            Curl_compareheader(k->p, "Connection:", "keep-alive")) {
-      /*
-       * A HTTP/1.0 reply with the 'Connection: keep-alive' line
-       * tells us the connection will be kept alive for our
-       * pleasure.  Default action for 1.0 is to close.
-       *
-       * [RFC2068, section 19.7.1] */
-      conn->bits.close = FALSE; /* don't close when done */
-      infof(data, "HTTP/1.0 connection set to keep alive!\n");
-    }
-    else if(Curl_compareheader(k->p, "Connection:", "close")) {
-      /*
-       * [RFC 2616, section 8.1.2.1]
-       * "Connection: close" is HTTP/1.1 language and means that
-       * the connection will close when this request has been
-       * served.
-       */
-      conn->bits.close = TRUE; /* close when done */
-    }
-    else if(Curl_compareheader(k->p,
-                               "Transfer-Encoding:", "chunked")) {
-      /*
-       * [RFC 2616, section 3.6.1] A 'chunked' transfer encoding
-       * means that the server will send a series of "chunks". Each
-       * chunk starts with line with info (including size of the
-       * coming block) (terminated with CRLF), then a block of data
-       * with the previously mentioned size. There can be any amount
-       * of chunks, and a chunk-data set to zero signals the
-       * end-of-chunks. */
-      k->chunk = TRUE; /* chunks coming our way */
-
-      /* init our chunky engine */
-      Curl_httpchunk_init(conn);
-    }
-
-    else if(checkprefix("Trailer:", k->p) ||
-            checkprefix("Trailers:", k->p)) {
-      /*
-       * This test helps Curl_httpchunk_read() to determine to look
-       * for well formed trailers after the zero chunksize record. In
-       * this case a CRLF is required after the zero chunksize record
-       * when no trailers are sent, or after the last trailer record.
-       *
-       * It seems both Trailer: and Trailers: occur in the wild.
-       */
-      k->trailerhdrpresent = TRUE;
-    }
-
-    else if(checkprefix("Content-Encoding:", k->p) &&
-            data->set.str[STRING_ENCODING]) {
-      /*
-       * Process Content-Encoding. Look for the values: identity,
-       * gzip, deflate, compress, x-gzip and x-compress. x-gzip and
-       * x-compress are the same as gzip and compress. (Sec 3.5 RFC
-       * 2616). zlib cannot handle compress.  However, errors are
-       * handled further down when the response body is processed
-       */
-      char *start;
-
-      /* Find the first non-space letter */
-      start = k->p + 17;
-      while(*start && ISSPACE(*start))
-        start++;
-
-      /* Record the content-encoding for later use */
-      if(checkprefix("identity", start))
-        k->content_encoding = IDENTITY;
-      else if(checkprefix("deflate", start))
-        k->content_encoding = DEFLATE;
-      else if(checkprefix("gzip", start)
-              || checkprefix("x-gzip", start))
-        k->content_encoding = GZIP;
-      else if(checkprefix("compress", start)
-              || checkprefix("x-compress", start))
-        k->content_encoding = COMPRESS;
-    }
-    else if(checkprefix("Content-Range:", k->p)) {
-      /* Content-Range: bytes [num]-
-         Content-Range: bytes: [num]-
-         Content-Range: [num]-
-
-         The second format was added since Sun's webserver
-         JavaWebServer/1.1.1 obviously sends the header this way!
-         The third added since some servers use that!
-      */
-
-      char *ptr = k->p + 14;
-
-      /* Move forward until first digit */
-      while(*ptr && !ISDIGIT(*ptr))
-        ptr++;
-
-      k->offset = curlx_strtoofft(ptr, NULL, 10);
-
-      if(data->state.resume_from == k->offset)
-        /* we asked for a resume and we got it */
-        k->content_range = TRUE;
-    }
-#if !defined(CURL_DISABLE_COOKIES)
-    else if(data->cookies &&
-            checkprefix("Set-Cookie:", k->p)) {
-      Curl_share_lock(data, CURL_LOCK_DATA_COOKIE,
-                      CURL_LOCK_ACCESS_SINGLE);
-      Curl_cookie_add(data,
-                      data->cookies, TRUE, k->p+11,
-                      /* If there is a custom-set Host: name, use it
-                         here, or else use real peer host name. */
-                      conn->allocptr.cookiehost?
-                      conn->allocptr.cookiehost:conn->host.name,
-                      data->state.path);
-      Curl_share_unlock(data, CURL_LOCK_DATA_COOKIE);
-    }
-#endif
-    else if(checkprefix("Last-Modified:", k->p) &&
-            (data->set.timecondition || data->set.get_filetime) ) {
-      time_t secs=time(NULL);
-      k->timeofdoc = curl_getdate(k->p+strlen("Last-Modified:"),
-                                  &secs);
-      if(data->set.get_filetime)
-        data->info.filetime = (long)k->timeofdoc;
-    }
-    else if((checkprefix("WWW-Authenticate:", k->p) &&
-             (401 == k->httpcode)) ||
-            (checkprefix("Proxy-authenticate:", k->p) &&
-             (407 == k->httpcode))) {
-      result = Curl_http_input_auth(conn, k->httpcode, k->p);
-      if(result)
-        return result;
-    }
-    else if((k->httpcode >= 300 && k->httpcode < 400) &&
-            checkprefix("Location:", k->p)) {
-      /* this is the URL that the server advises us to use instead */
-      char *location = Curl_copy_header_value(k->p);
-      if (!location)
-        return CURLE_OUT_OF_MEMORY;
-      if (!*location)
-        /* ignore empty data */
-        free(location);
-      else {
-        DEBUGASSERT(!data->req.location);
-        data->req.location = location;
-
-        if(data->set.http_follow_location) {
-          DEBUGASSERT(!data->req.newurl);
-          data->req.newurl = strdup(data->req.location); /* clone */
-          if(!data->req.newurl)
-            return CURLE_OUT_OF_MEMORY;
-
-          /* some cases of POST and PUT etc needs to rewind the data
-             stream at this point */
-          result = Curl_http_perhapsrewind(conn);
-          if(result)
-            return result;
-        }
-      }
-    }
-
-    /*
-     * End of header-checks. Write them to the client.
-     */
-
-    writetype = CLIENTWRITE_HEADER;
-    if(data->set.include_header)
-      writetype |= CLIENTWRITE_BODY;
-
-    if(data->set.verbose)
-      Curl_debug(data, CURLINFO_HEADER_IN,
-                 k->p, (size_t)k->hbuflen, conn);
-
-    result = Curl_client_write(conn, writetype, k->p, k->hbuflen);
-    if(result)
-      return result;
-
-    data->info.header_size += (long)k->hbuflen;
-    data->req.headerbytecount += (long)k->hbuflen;
-
-    /* reset hbufp pointer && hbuflen */
-    k->hbufp = data->state.headerbuff;
-    k->hbuflen = 0;
-  }
-  while(!*stop_reading && *k->str); /* header line within buffer */
-
-  /* We might have reached the end of the header part here, but
-     there might be a non-header part left in the end of the read
-     buffer. */
-
-  return CURLE_OK;
-}
-#endif   /* CURL_DISABLE_HTTP */
-
 /*
  * Send data to upload to the server, when the socket is writable.
  */
 static CURLcode readwrite_upload(struct SessionHandle *data,
                                  struct connectdata *conn,
                                  struct SingleRequest *k,
@@ -1499,13 +816,13 @@
           k->keepon &= ~KEEP_SEND;         /* disable writing */
           k->start100 = Curl_tvnow();       /* timeout count starts now */
           *didwhat &= ~KEEP_SEND;  /* we didn't write anything actually */
           break;
         }
 
-        if(conn->protocol&PROT_HTTP) {
+        if(conn->protocol&(PROT_HTTP|PROT_RTSP)) {
           if(data->state.proto.http->sending == HTTPSEND_REQUEST)
             /* We're sending the HTTP request headers, not the data.
                Remember that so we don't change the line endings. */
             sending_http_headers = TRUE;
           else
             sending_http_headers = FALSE;
@@ -1536,12 +853,21 @@
         break;
       }
 
       /* store number of bytes available for upload */
       data->req.upload_present = nread;
 
+#ifndef CURL_DISABLE_SMTP
+      if(conn->protocol & PROT_SMTP) {
+        result = Curl_smtp_escape_eob(conn, nread);
+        if(result)
+          return result;
+      }
+      else
+#endif /* CURL_DISABLE_SMTP */
+
       /* convert LF to CRLF if so asked */
       if((!sending_http_headers) &&
 #ifdef CURL_DO_LINEEND_CONV
         /* always convert if we're FTPing in ASCII mode */
          ((data->set.crlf) || (data->set.prefer_ascii))) {
 #else
@@ -1592,13 +918,13 @@
 
     /* write to socket (send away data) */
     result = Curl_write(conn,
                         conn->writesockfd,     /* socket to send to */
                         data->req.upload_fromhere, /* buffer pointer */
                         data->req.upload_present,  /* buffer size */
-                        &bytes_written);       /* actually send away */
+                        &bytes_written);           /* actually sent */
 
     if(result)
       return result;
 
     if(data->set.verbose)
       /* show the data before we change the pointer upload_fromhere */
@@ -1851,21 +1177,19 @@
 }
 
 
 /*
  * Transfer()
  *
- * This function is what performs the actual transfer. It is capable of
- * doing both ways simultaneously.
- * The transfer must already have been setup by a call to Curl_setup_transfer().
+ * This function is what performs the actual transfer. It is capable of doing
+ * both ways simultaneously.  The transfer must already have been setup by a
+ * call to Curl_setup_transfer().
  *
  * Note that headers are created in a preallocated buffer of a default size.
  * That buffer can be enlarged on demand, but it is never shrunken again.
  *
- * Parts of this function was once written by the friendly Mark Butler
- * <butlerm@xmission.com>.
  */
 
 static CURLcode
 Transfer(struct connectdata *conn)
 {
   CURLcode result;
@@ -1991,12 +1315,14 @@
 
   data->set.followlocation=0; /* reset the location-follow counter */
   data->state.this_is_a_follow = FALSE; /* reset this */
   data->state.errorbuf = FALSE; /* no error has occurred */
   data->state.httpversion = 0; /* don't assume any particular server version */
 
+  data->state.ssl_connect_retry = FALSE;
+
   data->state.authproblem = FALSE;
   data->state.authhost.want = data->set.httpauth;
   data->state.authproxy.want = data->set.proxyauth;
   Curl_safefree(data->info.wouldredirect);
   data->info.wouldredirect = NULL;
 
@@ -2288,13 +1614,13 @@
   /* Location: redirect */
   bool disallowport = FALSE;
 
   if(type == FOLLOW_REDIR) {
     if((data->set.maxredirs != -1) &&
         (data->set.followlocation >= data->set.maxredirs)) {
-      failf(data,"Maximum (%d) redirects followed", data->set.maxredirs);
+      failf(data,"Maximum (%ld) redirects followed", data->set.maxredirs);
       return CURLE_TOO_MANY_REDIRECTS;
     }
 
     /* mark the next request as a followed location: */
     data->state.this_is_a_follow = TRUE;
 
@@ -2566,19 +1892,21 @@
   struct SessionHandle *data = conn->data;
 
   *url = NULL;
 
   /* if we're talking upload, we can't do the checks below, unless the protocol
      is HTTP as when uploading over HTTP we will still get a response */
-  if(data->set.upload && !(conn->protocol&PROT_HTTP))
+  if(data->set.upload && !(conn->protocol&(PROT_HTTP|PROT_RTSP)))
     return CURLE_OK;
 
-  if((data->req.bytecount +
-      data->req.headerbytecount == 0) &&
-     conn->bits.reuse &&
-     !data->set.opt_no_body) {
+  if(/* workaround for broken TLS servers */ data->state.ssl_connect_retry ||
+      ((data->req.bytecount +
+        data->req.headerbytecount == 0) &&
+        conn->bits.reuse &&
+        !data->set.opt_no_body &&
+        data->set.rtspreq != RTSPREQ_RECEIVE)) {
     /* We got no data, we attempted to re-use a connection and yet we want a
        "body". This might happen if the connection was left alive when we were
        done using it before, but that was closed when we wanted to read from
        it again. Bad luck. Retry the same request on a fresh connect! */
     infof(conn->data, "Connection died, retrying a fresh connect\n");
     *url = strdup(conn->data->change.url);
@@ -2618,13 +1946,13 @@
    * It is important that there is NO 'return' from this function at any other
    * place than falling down to the end of the function! This is because we
    * have cleanup stuff that must be done before we get back, and that is only
    * performed after this do-while loop.
    */
 
-  do {
+  for(;;) {
     res = connect_host(data, &conn);   /* primary connection */
 
     if(res == CURLE_OK) {
       bool do_done;
       if(data->set.connect_only) {
         /* keep connection open for application to use the socket */
@@ -2639,13 +1967,13 @@
         if((res == CURLE_OK) || (res == CURLE_RECV_ERROR)) {
           bool retry = FALSE;
           CURLcode rc = Curl_retry_request(conn, &newurl);
           if(rc)
             res = rc;
           else
-            retry = newurl?TRUE:FALSE;
+            retry = (bool)(newurl?TRUE:FALSE);
 
           if(retry) {
             res = CURLE_OK;
             follow = FOLLOW_RETRY;
             if (!newurl)
               res = CURLE_OUT_OF_MEMORY;
@@ -2721,13 +2049,13 @@
           /* else we break out of the loop below */
         }
       }
     }
     break; /* it only reaches here when this shouldn't loop */
 
-  } while(1); /* loop if Location: */
+  } /* loop if Location: */
 
   if(newurl)
     free(newurl);
 
   if(res && !data->state.errorbuf) {
     /*
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/url.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/url.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/url.c	2009-10-18 02:31:50.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/url.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: url.c,v 1.812 2009-10-08 12:44:25 yangtse Exp $
+ * $Id: url.c,v 1.837 2010-02-06 17:30:06 yangtse Exp $
  ***************************************************************************/
 
 /* -- WIN32 approved -- */
 
 #include "setup.h"
 
@@ -62,13 +62,13 @@
 #endif
 
 #ifdef HAVE_SYS_PARAM_H
 #include <sys/param.h>
 #endif
 
-#ifdef VMS
+#ifdef __VMS
 #include <in.h>
 #include <inet.h>
 #endif
 
 #ifndef HAVE_SOCKET
 #error "We can't compile without socket() support!"
@@ -127,17 +127,19 @@
 #include "telnet.h"
 #include "tftp.h"
 #include "http.h"
 #include "file.h"
 #include "curl_ldap.h"
 #include "ssh.h"
+#include "imap.h"
 #include "url.h"
 #include "connect.h"
 #include "inet_ntop.h"
 #include "http_ntlm.h"
 #include "socks.h"
+#include "rtsp.h"
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
 #include "curl_memory.h"
 /* The last #include file should be: */
@@ -201,12 +203,37 @@
 
 #ifdef USE_LIBSSH2
   &Curl_handler_scp,
   &Curl_handler_sftp,
 #endif
 
+#ifndef CURL_DISABLE_IMAP
+  &Curl_handler_imap,
+#ifdef USE_SSL
+  &Curl_handler_imaps,
+#endif
+#endif
+
+#ifndef CURL_DISABLE_POP3
+  &Curl_handler_pop3,
+#ifdef USE_SSL
+  &Curl_handler_pop3s,
+#endif
+#endif
+
+#ifndef CURL_DISABLE_SMTP
+  &Curl_handler_smtp,
+#ifdef USE_SSL
+  &Curl_handler_smtps,
+#endif
+#endif
+
+#ifndef CURL_DISABLE_RTSP
+  &Curl_handler_rtsp,
+#endif
+
   (struct Curl_handler *) NULL
 };
 
 /*
  * Dummy handler for undefined protocol schemes.
  */
@@ -402,43 +429,43 @@
 
       pipeline = connptr->send_pipe;
       if(pipeline) {
         for (curr = pipeline->head; curr; curr=curr->next) {
           if(data == (struct SessionHandle *) curr->ptr) {
             fprintf(stderr,
-                    "MAJOR problem we %p are still in send pipe for %p done %d\n",
+                    "problem we %p are still in send pipe for %p done %d\n",
                     data, connptr, (int)connptr->bits.done);
           }
         }
       }
       pipeline = connptr->recv_pipe;
       if(pipeline) {
         for (curr = pipeline->head; curr; curr=curr->next) {
           if(data == (struct SessionHandle *) curr->ptr) {
             fprintf(stderr,
-                    "MAJOR problem we %p are still in recv pipe for %p done %d\n",
+                    "problem we %p are still in recv pipe for %p done %d\n",
                     data, connptr, (int)connptr->bits.done);
           }
         }
       }
       pipeline = connptr->done_pipe;
       if(pipeline) {
         for (curr = pipeline->head; curr; curr=curr->next) {
           if(data == (struct SessionHandle *) curr->ptr) {
             fprintf(stderr,
-                    "MAJOR problem we %p are still in done pipe for %p done %d\n",
+                    "problem we %p are still in done pipe for %p done %d\n",
                     data, connptr, (int)connptr->bits.done);
           }
         }
       }
       pipeline = connptr->pend_pipe;
       if(pipeline) {
         for (curr = pipeline->head; curr; curr=curr->next) {
           if(data == (struct SessionHandle *) curr->ptr) {
             fprintf(stderr,
-                    "MAJOR problem we %p are still in pend pipe for %p done %d\n",
+                    "problem we %p are still in pend pipe for %p done %d\n",
                     data, connptr, (int)connptr->bits.done);
           }
         }
       }
     }
   }
@@ -674,14 +701,16 @@
 
   set->infilesize = -1;      /* we don't know any size */
   set->postfieldsize = -1;   /* unknown size */
   set->maxredirs = -1;       /* allow any amount by default */
 
   set->httpreq = HTTPREQ_GET; /* Default HTTP request */
+  set->rtspreq = RTSPREQ_OPTIONS; /* Default RTSP request */
   set->ftp_use_epsv = TRUE;   /* FTP defaults to EPSV operations */
   set->ftp_use_eprt = TRUE;   /* FTP defaults to EPRT operations */
+  set->ftp_use_pret = FALSE;  /* mainly useful for drftpd servers */
   set->ftp_filemethod = FTPFILE_MULTICWD;
 
   set->dns_cache_timeout = 60; /* Timeout every 60 seconds by default */
 
   /* Set the default size of the SSL session ID cache */
   set->ssl.numsessions = 5;
@@ -947,18 +976,18 @@
     /*
      * An FTP option that modifies an upload to create missing directories on
      * the server.
      */
     data->set.ftp_create_missing_dirs = (int)va_arg(param, long);
     break;
-  case CURLOPT_FTP_RESPONSE_TIMEOUT:
+  case CURLOPT_SERVER_RESPONSE_TIMEOUT:
     /*
-     * An FTP option that specifies how quickly an FTP response must be
-     * obtained before it is considered failure.
+     * Option that specifies how quickly an server response must be obtained
+     * before it is considered failure. For pingpong protocols.
      */
-    data->set.ftp_response_timeout = va_arg( param , long ) * 1000;
+    data->set.server_response_timeout = va_arg( param , long ) * 1000;
     break;
   case CURLOPT_TFTP_BLKSIZE:
     /*
      * TFTP option that specifies the block size to use for data transmission
      */
     data->set.tftp_blksize = va_arg(param, long);
@@ -1128,13 +1157,14 @@
 
         /* Allocate even when size == 0. This satisfies the need of possible
            later address compare to detect the COPYPOSTFIELDS mode, and
            to mark that postfields is used rather than read function or
            form data.
         */
-        p = malloc((size_t)(data->set.postfieldsize?data->set.postfieldsize:1));
+        p = malloc((size_t)(data->set.postfieldsize?
+                            data->set.postfieldsize:1));
 
         if(!p)
           result = CURLE_OUT_OF_MEMORY;
         else {
           if(data->set.postfieldsize)
             memcpy(p, argptr, (size_t)data->set.postfieldsize);
@@ -1379,13 +1409,14 @@
      */
   {
     long auth = va_arg(param, long);
 
     /* the DIGEST_IE bit is only used to set a special marker, for all the
        rest we need to handle it as normal DIGEST */
-    data->state.authhost.iestyle = (bool)((auth & CURLAUTH_DIGEST_IE)?TRUE:FALSE);
+    data->state.authhost.iestyle = (bool)((auth & CURLAUTH_DIGEST_IE)?
+                                          TRUE:FALSE);
 
     if(auth & CURLAUTH_DIGEST_IE) {
       auth |= CURLAUTH_DIGEST; /* set standard digest bit */
       auth &= ~CURLAUTH_DIGEST_IE; /* unset ie digest bit */
     }
 
@@ -1424,13 +1455,14 @@
      */
   {
     long auth = va_arg(param, long);
 
     /* the DIGEST_IE bit is only used to set a special marker, for all the
        rest we need to handle it as normal DIGEST */
-    data->state.authproxy.iestyle = (bool)((auth & CURLAUTH_DIGEST_IE)?TRUE:FALSE);
+    data->state.authproxy.iestyle = (bool)((auth & CURLAUTH_DIGEST_IE)?
+                                           TRUE:FALSE);
 
     if(auth & CURLAUTH_DIGEST_IE) {
       auth |= CURLAUTH_DIGEST; /* set standard digest bit */
       auth &= ~CURLAUTH_DIGEST_IE; /* unset ie digest bit */
     }
     /* switch off bits we can't support */
@@ -1538,12 +1570,16 @@
     break;
 
   case CURLOPT_FTP_USE_EPSV:
     data->set.ftp_use_epsv = (bool)(0 != va_arg(param, long));
     break;
 
+  case CURLOPT_FTP_USE_PRET:
+    data->set.ftp_use_pret = (bool)(0 != va_arg(param, long));
+    break;
+
   case CURLOPT_FTP_SSL_CCC:
     data->set.ftp_ccc = (curl_ftpccc)va_arg(param, long);
     break;
 
   case CURLOPT_FTP_SKIP_PASV_IP:
     /*
@@ -2283,12 +2319,130 @@
        as a subset of the CURLOPT_PROTOCOLS ones. That means the protocol needs
        to be set in both bitmasks to be allowed to get redirected to. Defaults
        to all protocols except FILE and SCP. */
     data->set.redir_protocols = va_arg(param, long) & PROT_EXTMASK;
     break;
 
+  case CURLOPT_MAIL_FROM:
+    result = setstropt(&data->set.str[STRING_MAIL_FROM],
+                       va_arg(param, char *));
+    break;
+
+  case CURLOPT_MAIL_RCPT:
+    /* get a list of mail recipients */
+    data->set.mail_rcpt = va_arg(param, struct curl_slist *);
+    break;
+
+  case CURLOPT_RTSP_REQUEST:
+    {
+      /*
+       * Set the RTSP request method (OPTIONS, SETUP, PLAY, etc...)
+       * Would this be better if the RTSPREQ_* were just moved into here?
+       */
+      long curl_rtspreq = va_arg(param, long);
+      Curl_RtspReq rtspreq = RTSPREQ_NONE;
+      switch(curl_rtspreq) {
+        case CURL_RTSPREQ_OPTIONS:
+          rtspreq = RTSPREQ_OPTIONS;
+          break;
+
+        case CURL_RTSPREQ_DESCRIBE:
+          rtspreq = RTSPREQ_DESCRIBE;
+          break;
+
+        case CURL_RTSPREQ_ANNOUNCE:
+          rtspreq = RTSPREQ_ANNOUNCE;
+          break;
+
+        case CURL_RTSPREQ_SETUP:
+          rtspreq = RTSPREQ_SETUP;
+          break;
+
+        case CURL_RTSPREQ_PLAY:
+          rtspreq = RTSPREQ_PLAY;
+          break;
+
+        case CURL_RTSPREQ_PAUSE:
+          rtspreq = RTSPREQ_PAUSE;
+          break;
+
+        case CURL_RTSPREQ_TEARDOWN:
+          rtspreq = RTSPREQ_TEARDOWN;
+          break;
+
+        case CURL_RTSPREQ_GET_PARAMETER:
+          rtspreq = RTSPREQ_GET_PARAMETER;
+          break;
+
+        case CURL_RTSPREQ_SET_PARAMETER:
+          rtspreq = RTSPREQ_SET_PARAMETER;
+          break;
+
+        case CURL_RTSPREQ_RECORD:
+          rtspreq = RTSPREQ_RECORD;
+          break;
+
+        case CURL_RTSPREQ_RECEIVE:
+          rtspreq = RTSPREQ_RECEIVE;
+          break;
+        default:
+          rtspreq = RTSPREQ_NONE;
+      }
+
+      data->set.rtspreq = rtspreq;
+    break;
+    }
+
+
+  case CURLOPT_RTSP_SESSION_ID:
+    /*
+     * Set the RTSP Session ID manually. Useful if the application is
+     * resuming a previously established RTSP session
+     */
+    result = setstropt(&data->set.str[STRING_RTSP_SESSION_ID],
+                       va_arg(param, char *));
+    break;
+
+  case CURLOPT_RTSP_STREAM_URI:
+    /*
+     * Set the Stream URI for the RTSP request. Unless the request is
+     * for generic server options, the application will need to set this.
+     */
+    result = setstropt(&data->set.str[STRING_RTSP_STREAM_URI],
+                       va_arg(param, char *));
+    break;
+
+  case CURLOPT_RTSP_TRANSPORT:
+    /*
+     * The content of the Transport: header for the RTSP request
+     */
+    result = setstropt(&data->set.str[STRING_RTSP_TRANSPORT],
+                       va_arg(param, char *));
+    break;
+
+  case CURLOPT_RTSP_CLIENT_CSEQ:
+    /*
+     * Set the CSEQ number to issue for the next RTSP request. Useful if the
+     * application is resuming a previously broken connection. The CSEQ
+     * will increment from this new number henceforth.
+     */
+    data->state.rtsp_next_client_CSeq = va_arg(param, long);
+    break;
+
+  case CURLOPT_RTSP_SERVER_CSEQ:
+    /* Same as the above, but for server-initiated requests */
+    data->state.rtsp_next_client_CSeq = va_arg(param, long);
+    break;
+
+  case CURLOPT_INTERLEAVEDATA:
+    data->set.rtp_out = va_arg(param, void *);
+    break;
+  case CURLOPT_INTERLEAVEFUNCTION:
+    /* Set the user defined RTP write function */
+    data->set.fwrite_rtp = va_arg(param, curl_write_callback);
+    break;
   default:
     /* unknown tag and its companion, just ignore: */
     result = CURLE_FAILED_INIT; /* correct this */
     break;
   }
 
@@ -2297,12 +2451,17 @@
 
 static void conn_free(struct connectdata *conn)
 {
   if(!conn)
     return;
 
+  /* close the SSL stuff before we close any sockets since they will/may
+     write to the sockets */
+  Curl_ssl_close(conn, FIRSTSOCKET);
+  Curl_ssl_close(conn, SECONDARYSOCKET);
+
   /* close possibly still open sockets */
   if(CURL_SOCKET_BAD != conn->sock[SECONDARYSOCKET])
     sclose(conn->sock[SECONDARYSOCKET]);
   if(CURL_SOCKET_BAD != conn->sock[FIRSTSOCKET])
     sclose(conn->sock[FIRSTSOCKET]);
 
@@ -2315,32 +2474,31 @@
   Curl_safefree(conn->allocptr.userpwd);
   Curl_safefree(conn->allocptr.accept_encoding);
   Curl_safefree(conn->allocptr.rangeline);
   Curl_safefree(conn->allocptr.ref);
   Curl_safefree(conn->allocptr.host);
   Curl_safefree(conn->allocptr.cookiehost);
+  Curl_safefree(conn->allocptr.rtsp_transport);
   Curl_safefree(conn->trailer);
   Curl_safefree(conn->host.rawalloc); /* host name buffer */
   Curl_safefree(conn->proxy.rawalloc); /* proxy name buffer */
   Curl_safefree(conn->master_buffer);
 
   Curl_llist_destroy(conn->send_pipe, NULL);
   Curl_llist_destroy(conn->recv_pipe, NULL);
   Curl_llist_destroy(conn->pend_pipe, NULL);
   Curl_llist_destroy(conn->done_pipe, NULL);
 
   /* possible left-overs from the async name resolvers */
-#if defined(USE_ARES)
+#if defined(CURLRES_ASYNCH)
   Curl_safefree(conn->async.hostname);
   Curl_safefree(conn->async.os_specific);
-#elif defined(CURLRES_THREADED)
+#if defined(CURLRES_THREADED)
   Curl_destroy_thread_data(&conn->async);
 #endif
-
-  Curl_ssl_close(conn, FIRSTSOCKET);
-  Curl_ssl_close(conn, SECONDARYSOCKET);
+#endif
 
   Curl_free_ssl_config(&conn->ssl_config);
 
   free(conn); /* free all the connection oriented data */
 }
 
@@ -2353,12 +2511,17 @@
 
   if(!data) {
     DEBUGF(infof(data, "DISCONNECT without easy handle, ignoring\n"));
     return CURLE_OK;
   }
 
+  if(conn->dns_entry != NULL) {
+    Curl_resolv_unlock(data, conn->dns_entry);
+    conn->dns_entry = NULL;
+  }
+
 #if defined(DEBUGBUILD) && defined(AGGRESIVE_TEST)
   /* scan for DNS cache entries still marked as in use */
   Curl_hash_apply(data->hostcache,
                   NULL, Curl_scan_cache_used);
 #endif
 
@@ -2453,12 +2616,48 @@
     /* timeout */
     ret_val = FALSE;
 
   return ret_val;
 }
 
+#ifndef CURL_DISABLE_RTSP
+/*
+ * The server may send us RTP data at any point, and RTSPREQ_RECEIVE does not
+ * want to block the application forever while receiving a stream. Therefore,
+ * we cannot assume that an RTSP socket is dead just because it is readable.
+ *
+ * Instead, if it is readable, run Curl_getconnectinfo() to peek at the socket
+ * and distinguish between closed and data.
+ */
+static bool RTSPConnIsDead(struct connectdata *check)
+{
+  int sval;
+  bool ret_val = TRUE;
+
+  sval = Curl_socket_ready(check->sock[FIRSTSOCKET], CURL_SOCKET_BAD, 0);
+  if(sval == 0) {
+    /* timeout */
+    ret_val = FALSE;
+  }
+  else if (sval & CURL_CSELECT_ERR) {
+    /* socket is in an error state */
+    ret_val = TRUE;
+  }
+  else if (sval & CURL_CSELECT_IN) {
+    /* readable with no error. could be closed or could be alive */
+    long connectinfo = 0;
+    Curl_getconnectinfo(check->data, &connectinfo, &check);
+    if(connectinfo != -1) {
+      ret_val = FALSE;
+    }
+  }
+
+  return ret_val;
+}
+#endif /* CURL_DISABLE_RTSP */
+
 static bool IsPipeliningPossible(const struct SessionHandle *handle)
 {
   if(handle->multi && Curl_multi_canPipeline(handle->multi) &&
       (handle->set.httpreq == HTTPREQ_GET ||
        handle->set.httpreq == HTTPREQ_HEAD) &&
       handle->set.httpversion != CURL_HTTP_VERSION_1_0)
@@ -2617,16 +2816,24 @@
     }
 
     if(!pipeLen && !check->inuse) {
       /* The check for a dead socket makes sense only if there are no
          handles in pipeline and the connection isn't already marked in
          use */
-      bool dead = SocketIsDead(check->sock[FIRSTSOCKET]);
+      bool dead;
+#ifndef CURL_DISABLE_RTSP
+      if(check->protocol & PROT_RTSP)
+        /* RTSP is a special case due to RTP interleaving */
+        dead = RTSPConnIsDead(check);
+      else
+#endif /*CURL_DISABLE_RTSP*/
+        dead = SocketIsDead(check->sock[FIRSTSOCKET]);
+
       if(dead) {
         check->data = data;
-        infof(data, "Connection #%d seems to be dead!\n", i);
+        infof(data, "Connection #%ld seems to be dead!\n", i);
 
         Curl_disconnect(check); /* disconnect resources */
         data->state.connc->connects[i]=NULL; /* nothing here */
 
         continue;
       }
@@ -2668,14 +2875,14 @@
               check->connectindex);
         continue;
       }
 #endif
 
       if((check->sock[FIRSTSOCKET] == CURL_SOCKET_BAD) || check->bits.close) {
-        /* Don't pick a connection that hasn't connected yet or that is going to
-           get closed. */
+        /* Don't pick a connection that hasn't connected yet or that is going
+           to get closed. */
         infof(data, "Connection #%ld isn't open enough, can't reuse\n",
               check->connectindex);
 #ifdef DEBUGBUILD
         if(check->recv_pipe->size > 0) {
           infof(data, "BAD! Unconnected #%ld has a non-empty recv pipeline!\n",
                 check->connectindex);
@@ -2686,12 +2893,18 @@
     }
 
     if((needle->protocol&PROT_SSL) != (check->protocol&PROT_SSL))
       /* don't do mixed SSL and non-SSL connections */
       continue;
 
+    if(needle->protocol&PROT_SSL) {
+      if((data->set.ssl.verifypeer != check->verifypeer) ||
+         (data->set.ssl.verifyhost != check->verifyhost))
+        continue;
+    }
+
     if(needle->bits.proxy != check->bits.proxy)
       /* don't do mixed proxy and non-proxy connections */
       continue;
 
     if(!canPipeline && check->inuse)
       /* this request can't be pipelined but the checked connection is already
@@ -2704,13 +2917,13 @@
         Curl_raw_equal(needle->proxy.name, check->proxy.name) &&
         (needle->port == check->port))) {
       /* The requested connection does not use a HTTP proxy or it uses SSL or
          it is a non-SSL protocol tunneled over the same http proxy name and
          port number */
 
-      if(Curl_raw_equal(needle->protostr, check->protostr) &&
+      if(Curl_raw_equal(needle->handler->scheme, check->handler->scheme) &&
          Curl_raw_equal(needle->host.name, check->host.name) &&
          (needle->remote_port == check->remote_port) ) {
         if(needle->protocol & PROT_SSL) {
           /* This is SSL, verify that we're using the same
              ssl options as well */
           if(!Curl_ssl_config_matches(&needle->ssl_config,
@@ -2744,12 +2957,13 @@
       }
     }
     else { /* The requested needle connection is using a proxy,
               is the checked one using the same host, port and type? */
       if(check->bits.proxy &&
          (needle->proxytype == check->proxytype) &&
+         (needle->bits.tunnel_proxy == check->bits.tunnel_proxy) &&
          Curl_raw_equal(needle->proxy.name, check->proxy.name) &&
          needle->port == check->port) {
         /* This is the same proxy connection, use it! */
         match = TRUE;
       }
     }
@@ -2839,13 +3053,13 @@
       break;
   }
   if(i == data->state.connc->num) {
     /* there was no room available, kill one */
     i = ConnectionKillOne(data);
     if(-1 != i)
-      infof(data, "Connection (#%d) was killed to make room (holds %d)\n",
+      infof(data, "Connection (#%ld) was killed to make room (holds %ld)\n",
             i, data->state.connc->num);
     else
       infof(data, "This connection did not fit in the connection cache\n");
   }
 
   conn->connectindex = i; /* Make the child know where the pointer to this
@@ -2913,38 +3127,36 @@
 
   return result;
 }
 
 static CURLcode ConnectPlease(struct SessionHandle *data,
                               struct connectdata *conn,
-                              struct Curl_dns_entry *hostaddr,
                               bool *connected)
 {
   CURLcode result;
   Curl_addrinfo *addr;
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
   char *hostname = conn->bits.proxy?conn->proxy.name:conn->host.name;
 
-  infof(data, "About to connect() to %s%s port %d (#%d)\n",
+  infof(data, "About to connect() to %s%s port %ld (#%ld)\n",
         conn->bits.proxy?"proxy ":"",
         hostname, conn->port, conn->connectindex);
 #else
   (void)data;
 #endif
 
   /*************************************************************
    * Connect to server/proxy
    *************************************************************/
   result= Curl_connecthost(conn,
-                           hostaddr,
+                           conn->dns_entry,
                            &conn->sock[FIRSTSOCKET],
                            &addr,
                            connected);
   if(CURLE_OK == result) {
     /* All is cool, we store the current information */
-    conn->dns_entry = hostaddr;
     conn->ip_addr = addr;
 
     if(*connected)
       result = Curl_connected_proxy(conn);
   }
 
@@ -2957,13 +3169,13 @@
 /*
  * verboseconnect() displays verbose information after a connect
  */
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
 static void verboseconnect(struct connectdata *conn)
 {
-  infof(conn->data, "Connected to %s (%s) port %d (#%d)\n",
+  infof(conn->data, "Connected to %s (%s) port %ld (#%ld)\n",
         conn->bits.proxy ? conn->proxy.dispname : conn->host.dispname,
         conn->ip_addr_str, conn->port, conn->connectindex);
 }
 #endif
 
 int Curl_protocol_getsock(struct connectdata *conn,
@@ -3111,13 +3323,13 @@
   (void)data;
 #endif
 
   /* Convert (and downcase) ACE-name back into locale's character set */
   rc = idna_to_unicode_lzlz(ace_hostname, &uc_name, 0);
   if(rc != IDNA_SUCCESS)
-    return (FALSE);
+    return FALSE;
 
   rc = tld_check_lz(uc_name, &err_pos, NULL);
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
 #ifdef HAVE_TLD_STRERROR
   if(rc != TLD_SUCCESS)
     tld_errmsg = tld_strerror((Tld_rc)rc);
@@ -3129,13 +3341,16 @@
   else if(rc != TLD_SUCCESS)
     infof(data, "WARNING: TLD check for %s failed; %s\n",
           uc_name, tld_errmsg);
 #endif /* CURL_DISABLE_VERBOSE_STRINGS */
   if(uc_name)
      idn_free(uc_name);
-  return (bool)(rc == TLD_SUCCESS);
+  if(rc != TLD_SUCCESS)
+    return FALSE;
+
+  return TRUE;
 }
 #endif
 
 /*
  * Perform any necessary IDN conversion of hostname
  */
@@ -3195,46 +3410,96 @@
 
   /* and we setup a few fields in case we end up actually using this struct */
 
   conn->sock[FIRSTSOCKET] = CURL_SOCKET_BAD;     /* no file descriptor */
   conn->sock[SECONDARYSOCKET] = CURL_SOCKET_BAD; /* no file descriptor */
   conn->connectindex = -1;    /* no index */
+  conn->port = -1; /* unknown at this point */
 
   /* Default protocol-independent behavior doesn't support persistent
      connections, so we set this to force-close. Protocols that support
      this need to set this to FALSE in their "curl_do" functions. */
   conn->bits.close = TRUE;
 
   /* Store creation time to help future close decision making */
   conn->created = Curl_tvnow();
 
   return conn;
 }
 
+static CURLcode findprotocol(struct SessionHandle *data,
+                             struct connectdata *conn,
+                             const char *protostr)
+{
+  const struct Curl_handler * const *pp;
+  const struct Curl_handler *p;
+
+  /* Scan protocol handler table and match against 'protostr' to set a few
+     variables based on the URL. Now that the handler may be changed later
+     when the protocol specific setup function is called. */
+  for (pp = protocols; (p = *pp) != NULL; pp++) {
+    if(Curl_raw_equal(p->scheme, protostr)) {
+      /* Protocol found in table. Check if allowed */
+      if(!(data->set.allowed_protocols & p->protocol))
+        /* nope, get out */
+        break;
+
+      /* it is allowed for "normal" request, now do an extra check if this is
+         the result of a redirect */
+      if(data->state.this_is_a_follow &&
+         !(data->set.redir_protocols & p->protocol))
+        /* nope, get out */
+        break;
+
+      /* Perform setup complement if some. */
+      conn->handler = p;
+      conn->protocol |= p->protocol;
+
+      /* 'port' and 'remote_port' are set in setup_connection_internals() */
+      return CURLE_OK;
+    }
+  }
+
+
+  /* The protocol was not found in the table, but we don't have to assign it
+     to anything since it is already assigned to a dummy-struct in the
+     create_conn() function when the connectdata struct is allocated. */
+  failf(data, "Protocol %s not supported or disabled in " LIBCURL_NAME,
+        protostr);
+
+  return CURLE_UNSUPPORTED_PROTOCOL;
+}
+
 /*
  * Parse URL and fill in the relevant members of the connection struct.
  */
-static CURLcode ParseURLAndFillConnection(struct SessionHandle *data,
-                                          struct connectdata *conn)
+static CURLcode parseurlandfillconn(struct SessionHandle *data,
+                                    struct connectdata *conn,
+                                    bool *prot_missing)
 {
   char *at;
-  char *tmp;
+  char *fragment;
   char *path = data->state.path;
+  char *query;
   int rc;
+  char protobuf[16];
+  const char *protop;
+
+  *prot_missing = FALSE;
 
   /*************************************************************
    * Parse the URL.
    *
    * We need to parse the url even when using the proxy, because we will need
    * the hostname and port in case we are trying to SSL connect through the
    * proxy -- and we don't know if we will need to use SSL until we parse the
    * url ...
    ************************************************************/
   if((2 == sscanf(data->change.url, "%15[^:]:%[^\n]",
-                  conn->protostr,
-                  path)) && Curl_raw_equal(conn->protostr, "file")) {
+                  protobuf, path)) &&
+     Curl_raw_equal(protobuf, "file")) {
     if(path[0] == '/' && path[1] == '/') {
       /* Allow omitted hostname (e.g. file:/<path>).  This is not strictly
        * speaking a valid file: URL by RFC 1738, but treating file:/<path> as
        * file://localhost/<path> is similar to how other schemes treat missing
        * hostnames.  See RFC 1808. */
 
@@ -3274,29 +3539,29 @@
 
         /* This cannot be made with strcpy, as the memory chunks overlap! */
         memmove(path, ptr, strlen(ptr)+1);
       }
     }
 
-    strcpy(conn->protostr, "file"); /* store protocol string lowercase */
+    protop = "file"; /* protocol string */
   }
   else {
     /* clear path */
     path[0]=0;
 
     if(2 > sscanf(data->change.url,
                    "%15[^\n:]://%[^\n/]%[^\n]",
-                   conn->protostr,
+                   protobuf,
                    conn->host.name, path)) {
 
       /*
        * The URL was badly formatted, let's try the browser-style _without_
        * protocol specified like 'http://'.
        */
-      if(1 > (rc = sscanf(data->change.url, "%[^\n/]%[^\n]",
-                          conn->host.name, path)) ) {
+      rc = sscanf(data->change.url, "%[^\n/]%[^\n]", conn->host.name, path);
+      if(1 > rc) {
         /*
          * We couldn't even get this format.
          * djgpp 2.04 has a sscanf() bug where 'conn->host.name' is
          * assigned, but the return value is EOF!
          */
 #if defined(__DJGPP__) && (DJGPP_MINOR == 4)
@@ -3314,57 +3579,61 @@
        */
 
       /* Note: if you add a new protocol, please update the list in
        * lib/version.c too! */
 
       if(checkprefix("FTP.", conn->host.name))
-        strcpy(conn->protostr, "ftp");
+        protop = "ftp";
       else if(checkprefix("DICT.", conn->host.name))
-        strcpy(conn->protostr, "DICT");
+        protop = "DICT";
       else if(checkprefix("LDAP.", conn->host.name))
-        strcpy(conn->protostr, "LDAP");
+        protop = "LDAP";
+      else if(checkprefix("IMAP.", conn->host.name))
+        protop = "IMAP";
       else {
-        strcpy(conn->protostr, "http");
+        protop = "http";
       }
 
-      conn->protocol |= PROT_MISSING; /* not given in URL */
+      *prot_missing = TRUE; /* not given in URL */
     }
+    else
+      protop = protobuf;
   }
 
   /* We search for '?' in the host name (but only on the right side of a
    * @-letter to allow ?-letters in username and password) to handle things
    * like http://example.com?param= (notice the missing '/').
    */
   at = strchr(conn->host.name, '@');
   if(at)
-    tmp = strchr(at+1, '?');
+    query = strchr(at+1, '?');
   else
-    tmp = strchr(conn->host.name, '?');
+    query = strchr(conn->host.name, '?');
 
-  if(tmp) {
+  if(query) {
     /* We must insert a slash before the '?'-letter in the URL. If the URL had
        a slash after the '?', that is where the path currently begins and the
        '?string' is still part of the host name.
 
        We must move the trailing part from the host name and put it first in
        the path. And have it all prefixed with a slash.
     */
 
-    size_t hostlen = strlen(tmp);
+    size_t hostlen = strlen(query);
     size_t pathlen = strlen(path);
 
     /* move the existing path plus the zero byte forward, to make room for
        the host-name part */
     memmove(path+hostlen+1, path, pathlen+1);
 
      /* now copy the trailing host part in front of the existing path */
-    memcpy(path+1, tmp, hostlen);
+    memcpy(path+1, query, hostlen);
 
     path[0]='/'; /* prepend the missing slash */
 
-    *tmp=0; /* now cut off the hostname at the ? */
+    *query=0; /* now cut off the hostname at the ? */
   }
   else if(!path[0]) {
     /* if there's no path set, use a single slash */
     strcpy(path, "/");
   }
 
@@ -3385,34 +3654,42 @@
        scope.  */
     char *percent = strstr (conn->host.name, "%25");
     if (percent) {
       char *endp;
       unsigned long scope = strtoul (percent + 3, &endp, 10);
       if (*endp == ']') {
-        /* The address scope was well formed.  Knock it out of the hostname.  */
+        /* The address scope was well formed.  Knock it out of the
+           hostname. */
         memmove(percent, endp, strlen(endp)+1);
         if (!data->state.this_is_a_follow)
           /* Don't honour a scope given in a Location: header */
           conn->scope = (unsigned int)scope;
       } else
         infof(data, "Invalid IPv6 address format\n");
     }
   }
 
-  if (data->set.scope)
+  if(data->set.scope)
     /* Override any scope that was set above.  */
     conn->scope = data->set.scope;
 
+  /* Remove the fragment part of the path. Per RFC 2396, this is always the
+     last part of the URI. We are looking for the first '#' so that we deal
+     gracefully with non conformant URI such as http://example.com#foo#bar. */
+  fragment = strchr(path, '#');
+  if(fragment)
+    *fragment = 0;
+
   /*
-   * So if the URL was A://B/C,
-   *   conn->protostr is A
+   * So if the URL was A://B/C#D,
+   *   protop is A
    *   conn->host.name is B
    *   data->state.path is /C
    */
-  (void)rc;
-  return CURLE_OK;
+
+  return findprotocol(data, conn, protop);
 }
 
 static void llist_dtor(void *user, void *element)
 {
   (void)user;
   (void)element;
@@ -3449,63 +3726,44 @@
 
   return CURLE_OK;
 }
 
 
 /***************************************************************
-* Setup connection internals specific to the requested protocol
+* Setup connection internals specific to the requested protocol.
+* This MUST get called after proxy magic has been figured out.
 ***************************************************************/
-static CURLcode setup_connection_internals(struct SessionHandle *data,
-                                           struct connectdata *conn)
+static CURLcode setup_connection_internals(struct connectdata *conn)
 {
-  const struct Curl_handler * const * pp;
   const struct Curl_handler * p;
   CURLcode result;
 
   conn->socktype = SOCK_STREAM; /* most of them are TCP streams */
 
   /* Scan protocol handler table. */
 
-  for (pp = protocols; (p = *pp) != NULL; pp++)
-    if(Curl_raw_equal(p->scheme, conn->protostr)) {
-      /* Protocol found in table. Check if allowed */
-      if(!(data->set.allowed_protocols & p->protocol))
-        /* nope, get out */
-        break;
-
-      /* it is allowed for "normal" request, now do an extra check if this is
-         the result of a redirect */
-      if(data->state.this_is_a_follow &&
-         !(data->set.redir_protocols & p->protocol))
-        /* nope, get out */
-        break;
+  /* Perform setup complement if some. */
+  p = conn->handler;
 
-      /* Perform setup complement if some. */
-      conn->handler = p;
+  if(p->setup_connection) {
+    result = (*p->setup_connection)(conn);
 
-      if(p->setup_connection) {
-        result = (*p->setup_connection)(conn);
+    if(result != CURLE_OK)
+      return result;
 
-        if(result != CURLE_OK)
-          return result;
+    p = conn->handler;              /* May have changed. */
+  }
 
-        p = conn->handler;              /* May have changed. */
-      }
+  if(conn->port < 0)
+    /* we check for -1 here since if proxy was detected already, this
+       was very likely already set to the proxy port */
+    conn->port = p->defport;
+  conn->remote_port = (unsigned short)p->defport;
+  conn->protocol |= p->protocol;
 
-      conn->port = p->defport;
-      conn->remote_port = (unsigned short)p->defport;
-      conn->protocol |= p->protocol;
-      return CURLE_OK;
-    }
-
-  /* The protocol was not found in the table, but we don't have to assign it
-     to anything since it is already assigned to a dummy-struct in the
-     create_conn() function when the connectdata struct is allocated. */
-  failf(data, "Protocol %s not supported or disabled in " LIBCURL_NAME,
-        conn->protostr);
-  return CURLE_UNSUPPORTED_PROTOCOL;
+  return CURLE_OK;
 }
 
 #ifndef CURL_DISABLE_PROXY
 /****************************************************************
 * Checks if the host is in the noproxy list. returns true if it matches
 * and therefore the proxy should NOT be used.
@@ -3560,13 +3818,14 @@
       if(no_proxy[tok_start] == '.')
         ++tok_start;
 
       if((tok_end - tok_start) <= namelen) {
         /* Match the last part of the name to the domain we are checking. */
         const char *checkn = name + namelen - (tok_end - tok_start);
-        if(Curl_raw_nequal(no_proxy + tok_start, checkn, tok_end - tok_start)) {
+        if(Curl_raw_nequal(no_proxy + tok_start, checkn,
+                           tok_end - tok_start)) {
           if((tok_end - tok_start) == namelen || *(checkn - 1) == '.') {
             /* We either have an exact match, or the previous character is a .
              * so it is within the same domain, so no proxy for this host.
              */
             return TRUE;
           }
@@ -3612,13 +3871,13 @@
   no_proxy=curl_getenv("no_proxy");
   if(!no_proxy)
     no_proxy=curl_getenv("NO_PROXY");
 
   if(!check_noproxy(conn->host.name, no_proxy)) {
     /* It was not listed as without proxy */
-    char *protop = conn->protostr;
+    const char *protop = conn->handler->scheme;
     char *envp = proxy_env;
     char *prox;
 
     /* Now, build <protocol>_proxy and check for such a one to use */
     while(*protop)
       *envp++ = (char)tolower((int)*protop++);
@@ -3749,13 +4008,14 @@
   /* start scanning for port number at this point */
   portptr = proxyptr;
 
   /* detect and extract RFC2732-style IPv6-addresses */
   if(*proxyptr == '[') {
     char *ptr = ++proxyptr; /* advance beyond the initial bracket */
-    while(*ptr && (ISXDIGIT(*ptr) || (*ptr == ':') || (*ptr == '%') || (*ptr == '.')))
+    while(*ptr && (ISXDIGIT(*ptr) || (*ptr == ':') || (*ptr == '%') ||
+                   (*ptr == '.')))
       ptr++;
     if(*ptr == ']') {
       /* yeps, it ended nicely with a bracket as well */
       *ptr++ = 0;
     } else
       infof(data, "Invalid IPv6 address format\n");
@@ -3935,13 +4195,13 @@
                                   struct connectdata *conn)
 {
   char *portptr;
   char endbracket;
 
   /* Note that at this point, the IPv6 address cannot contain any scope
-     suffix as that has already been removed in the ParseURLAndFillConnection()
+     suffix as that has already been removed in the parseurlandfillconn()
      function */
   if((1 == sscanf(conn->host.name, "[%*45[0123456789abcdefABCDEF:.]%c",
                   &endbracket)) &&
      (']' == endbracket)) {
     /* this is a RFC2732-style specified IP-address */
     conn->bits.ipv6_ip = TRUE;
@@ -3963,24 +4223,24 @@
     if(portptr)
       *portptr = '\0'; /* cut off the name there anyway - if there was a port
                       number - since the port number is to be ignored! */
     if(conn->bits.httpproxy) {
       /* we need to create new URL with the new port number */
       char *url;
-      bool isftp = (bool)(Curl_raw_equal("ftp", conn->protostr) ||
-                          Curl_raw_equal("ftps", conn->protostr));
+      /* FTPS connections have the FTP bit set too, so they match as well */
+      bool isftp = (bool)(conn->protocol & PROT_FTP);
 
       /*
        * This synthesized URL isn't always right--suffixes like ;type=A
        * are stripped off. It would be better to work directly from the
        * original URL and simply replace the port part of it.
        */
-      url = aprintf("%s://%s%s%s:%d%s%s", conn->protostr,
-             conn->bits.ipv6_ip?"[":"", conn->host.name,
-             conn->bits.ipv6_ip?"]":"", conn->remote_port,
-             isftp?"/":"", data->state.path);
+      url = aprintf("%s://%s%s%s:%hu%s%s", conn->handler->scheme,
+                    conn->bits.ipv6_ip?"[":"", conn->host.name,
+                    conn->bits.ipv6_ip?"]":"", conn->remote_port,
+                    isftp?"/":"", data->state.path);
       if(!url)
         return CURLE_OUT_OF_MEMORY;
 
       if(data->change.url_alloc)
         free(data->change.url);
 
@@ -4054,36 +4314,41 @@
  * Set password so it's available in the connection.
  */
 static CURLcode set_userpass(struct connectdata *conn,
                              const char *user, const char *passwd)
 {
   /* If our protocol needs a password and we have none, use the defaults */
-  if( (conn->protocol & PROT_FTP) &&
+  if( (conn->protocol & (PROT_FTP|PROT_IMAP)) &&
        !conn->bits.user_passwd) {
 
     conn->user = strdup(CURL_DEFAULT_USER);
-    conn->passwd = strdup(CURL_DEFAULT_PASSWORD);
+    if(conn->user)
+      conn->passwd = strdup(CURL_DEFAULT_PASSWORD);
+    else
+      conn->passwd = NULL;
     /* This is the default password, so DON'T set conn->bits.user_passwd */
   }
   else {
     /* store user + password, zero-length if not set */
     conn->user = strdup(user);
-    conn->passwd = strdup(passwd);
+    if(conn->user)
+      conn->passwd = strdup(passwd);
+    else
+      conn->passwd = NULL;
   }
   if(!conn->user || !conn->passwd)
     return CURLE_OUT_OF_MEMORY;
 
   return CURLE_OK;
 }
 
 /*************************************************************
  * Resolve the address of the server or proxy
  *************************************************************/
 static CURLcode resolve_server(struct SessionHandle *data,
                                struct connectdata *conn,
-                               struct Curl_dns_entry **addr,
                                bool *async)
 {
   CURLcode result=CURLE_OK;
   long shortest = 0; /* default to no timeout */
 
   /*************************************************************
@@ -4110,15 +4375,14 @@
   }
 
   /*************************************************************
    * Resolve the name of the server or proxy
    *************************************************************/
   if(conn->bits.reuse) {
-    /* re-used connection, no resolving is necessary */
-    *addr = NULL;
-    /* we'll need to clear conn->dns_entry later in Curl_disconnect() */
+    /* We're reusing the connection - no need to resolve anything */
+    *async = FALSE;
 
     if(conn->bits.proxy)
       fix_hostname(data, conn, &conn->host);
   }
   else {
     /* this is a fresh connect */
@@ -4167,13 +4431,14 @@
       else if(!hostaddr) {
         failf(data, "Couldn't resolve proxy '%s'", conn->proxy.dispname);
         result = CURLE_COULDNT_RESOLVE_PROXY;
         /* don't return yet, we need to clean up the timeout first */
       }
     }
-    *addr = hostaddr;
+    DEBUGASSERT(conn->dns_entry == NULL);
+    conn->dns_entry = hostaddr;
   }
 
   return result;
 }
 
 /*
@@ -4246,36 +4511,32 @@
  * if this function returns CURLE_OK and *async is set to TRUE, the resolve
  * response will be coming asynchronously. If *async is FALSE, the name is
  * already resolved.
  *
  * @param data The sessionhandle pointer
  * @param in_connect is set to the next connection data pointer
- * @param addr is set to the new dns entry for this connection. If this
- *        connection is re-used it will be NULL.
- * @param async is set TRUE/FALSE depending on the nature of this lookup
- * @return CURLcode
+ * @param async is set TRUE when an async DNS resolution is pending
  * @see setup_conn()
  *
  * *NOTE* this function assigns the conn->data pointer!
  */
 
 static CURLcode create_conn(struct SessionHandle *data,
                             struct connectdata **in_connect,
-                            struct Curl_dns_entry **addr,
                             bool *async)
 {
   CURLcode result=CURLE_OK;
   struct connectdata *conn;
   struct connectdata *conn_temp = NULL;
   size_t urllen;
   char user[MAX_CURL_USER_LENGTH];
   char passwd[MAX_CURL_PASSWORD_LENGTH];
   bool reuse;
   char *proxy = NULL;
+  bool prot_missing = FALSE;
 
-  *addr = NULL; /* nothing yet */
   *async = FALSE;
 
   /*************************************************************
    * Check input data
    *************************************************************/
 
@@ -4323,12 +4584,15 @@
 #endif /* CURL_DISABLE_PROXY */
 
   conn->bits.user_passwd = (bool)(NULL != data->set.str[STRING_USERNAME]);
   conn->bits.ftp_use_epsv = data->set.ftp_use_epsv;
   conn->bits.ftp_use_eprt = data->set.ftp_use_eprt;
 
+  conn->verifypeer = data->set.ssl.verifypeer;
+  conn->verifyhost = data->set.ssl.verifyhost;
+
   if(data->multi && Curl_multi_canPipeline(data->multi) &&
       !conn->master_buffer) {
     /* Allocate master_buffer to be used for pipelining */
     conn->master_buffer = calloc(BUFSIZE, sizeof (char));
     if(!conn->master_buffer)
       return CURLE_OUT_OF_MEMORY;
@@ -4372,45 +4636,35 @@
   if(NULL == conn->host.rawalloc)
     return CURLE_OUT_OF_MEMORY;
 
   conn->host.name = conn->host.rawalloc;
   conn->host.name[0] = 0;
 
-  result = ParseURLAndFillConnection(data, conn);
+  result = parseurlandfillconn(data, conn, &prot_missing);
   if(result != CURLE_OK) {
       return result;
   }
 
   /*************************************************************
    * No protocol part in URL was used, add it!
    *************************************************************/
-  if(conn->protocol&PROT_MISSING) {
+  if(prot_missing) {
     /* We're guessing prefixes here and if we're told to use a proxy or if
        we're gonna follow a Location: later or... then we need the protocol
        part added so that we have a valid URL. */
     char *reurl;
 
-    reurl = aprintf("%s://%s", conn->protostr, data->change.url);
+    reurl = aprintf("%s://%s", conn->handler->scheme, data->change.url);
 
     if(!reurl) {
       Curl_safefree(proxy);
       return CURLE_OUT_OF_MEMORY;
     }
 
     data->change.url = reurl;
     data->change.url_alloc = TRUE; /* free this later */
-    conn->protocol &= ~PROT_MISSING; /* switch that one off again */
-  }
-
-  /*************************************************************
-   * Setup internals depending on protocol
-   *************************************************************/
-  result = setup_connection_internals(data, conn);
-  if(result != CURLE_OK) {
-    Curl_safefree(proxy);
-    return result;
   }
 
   /*************************************************************
    * Parse a user name and password in the URL and strip it out
    * of the host name
    *************************************************************/
@@ -4454,32 +4707,30 @@
   if(proxy && !*proxy) {
     free(proxy);  /* Don't bother with an empty proxy string */
     proxy = NULL;
   }
   /* proxy must be freed later unless NULL */
   if(proxy && *proxy) {
-    long bits = conn->protocol & (PROT_HTTPS|PROT_SSL|PROT_MISSING);
+    long bits = conn->protocol & (PROT_HTTPS|PROT_SSL);
 
     if((conn->proxytype == CURLPROXY_HTTP) ||
        (conn->proxytype == CURLPROXY_HTTP_1_0)) {
       /* force this connection's protocol to become HTTP */
       conn->protocol = PROT_HTTP | bits;
       conn->bits.httpproxy = TRUE;
     }
     conn->bits.proxy = TRUE;
   }
   else {
-      /* we aren't using the proxy after all... */
-      conn->bits.proxy = FALSE;
-      conn->bits.httpproxy = FALSE;
-      conn->bits.proxy_user_passwd = FALSE;
-      conn->bits.tunnel_proxy = FALSE;
+    /* we aren't using the proxy after all... */
+    conn->bits.proxy = FALSE;
+    conn->bits.httpproxy = FALSE;
+    conn->bits.proxy_user_passwd = FALSE;
+    conn->bits.tunnel_proxy = FALSE;
   }
-#endif /* CURL_DISABLE_PROXY */
 
-#ifndef CURL_DISABLE_PROXY
   /***********************************************************************
    * If this is supposed to use a proxy, we need to figure out the proxy
    * host name, so that we can re-use an existing connection
    * that may exist registered to the same proxy host.
    ***********************************************************************/
   if(proxy) {
@@ -4488,12 +4739,22 @@
     proxy = NULL;
     if(result != CURLE_OK)
       return result;
   }
 #endif /* CURL_DISABLE_PROXY */
 
+  /*************************************************************
+   * Setup internals depending on protocol. Needs to be done after
+   * we figured out what/if proxy to use.
+   *************************************************************/
+  result = setup_connection_internals(conn);
+  if(result != CURLE_OK) {
+    Curl_safefree(proxy);
+    return result;
+  }
+
   /***********************************************************************
    * file: is a special case in that it doesn't need a network connection
    ***********************************************************************/
 #ifndef CURL_DISABLE_FILE
   if(conn->protocol & PROT_FILE) {
     bool done;
@@ -4549,18 +4810,12 @@
    *************************************************************/
   override_userpass(data, conn, user, passwd);
   result = set_userpass(conn, user, passwd);
   if(result != CURLE_OK)
     return result;
 
-  /*************************************************************
-   * Check the current list of connections to see if we can
-   * re-use an already existing one or if we have to create a
-   * new one.
-   *************************************************************/
-
   /* Get a cloned copy of the SSL config situation stored in the
      connection struct. But to get this going nicely, we must first make
      sure that the strings in the master copy are pointing to the correct
      strings in the session handle strings array!
 
      Keep in mind that the pointers in the master copy are pointing to strings
@@ -4575,12 +4830,18 @@
   data->set.ssl.egdsocket = data->set.str[STRING_SSL_EGDSOCKET];
   data->set.ssl.cipher_list = data->set.str[STRING_SSL_CIPHER_LIST];
 
   if(!Curl_clone_ssl_config(&data->set.ssl, &conn->ssl_config))
     return CURLE_OUT_OF_MEMORY;
 
+  /*************************************************************
+   * Check the current list of connections to see if we can
+   * re-use an already existing one or if we have to create a
+   * new one.
+   *************************************************************/
+
   /* reuse_fresh is TRUE if we are told to use a new connection by force, but
      we only acknowledge this option if this is not a re-used connection
      already (which happens due to follow-location or during a HTTP
      authentication phase). */
   if(data->set.reuse_fresh && !data->state.this_is_a_follow)
     reuse = FALSE;
@@ -4634,28 +4895,26 @@
   conn->seek_func = data->set.seek_func;
   conn->seek_client = data->set.seek_client;
 
   /*************************************************************
    * Resolve the address of the server or proxy
    *************************************************************/
-  result = resolve_server(data, conn, addr, async);
+  result = resolve_server(data, conn, async);
 
   return result;
 }
 
 /* setup_conn() is called after the name resolve initiated in
  * create_conn() is all done.
  *
- * NOTE: the argument 'hostaddr' is NULL when this function is called for a
- * re-used connection.
+ * setup_conn() also handles reused connections
  *
  * conn->data MUST already have been setup fine (in create_conn)
  */
 
 static CURLcode setup_conn(struct connectdata *conn,
-                           struct Curl_dns_entry *hostaddr,
                            bool *protocol_done)
 {
   CURLcode result=CURLE_OK;
   struct SessionHandle *data = conn->data;
 
   Curl_pgrsTime(data, TIMER_NAMELOOKUP);
@@ -4694,21 +4953,16 @@
 #endif /* CURL_DO_LINEEND_CONV */
 
   for(;;) {
     /* loop for CURL_SERVER_CLOSED_CONNECTION */
 
     if(CURL_SOCKET_BAD == conn->sock[FIRSTSOCKET]) {
+      /* Try to connect only if not already connected */
       bool connected = FALSE;
 
-      /* Connect only if not already connected!
-       *
-       * NOTE: hostaddr can be NULL when passed to this function, but that is
-       * only for the case where we re-use an existing connection and thus
-       * this code section will not be reached with hostaddr == NULL.
-       */
-      result = ConnectPlease(data, conn, hostaddr, &connected);
+      result = ConnectPlease(data, conn, &connected);
 
       if(connected) {
         result = Curl_protocol_connect(conn, protocol_done);
         if(CURLE_OK == result)
           conn->bits.tcpconnect = TRUE;
       }
@@ -4763,39 +5017,28 @@
 CURLcode Curl_connect(struct SessionHandle *data,
                       struct connectdata **in_connect,
                       bool *asyncp,
                       bool *protocol_done)
 {
   CURLcode code;
-  struct Curl_dns_entry *dns;
 
   *asyncp = FALSE; /* assume synchronous resolves by default */
 
   /* call the stuff that needs to be called */
-  code = create_conn(data, in_connect, &dns, asyncp);
+  code = create_conn(data, in_connect, asyncp);
 
   if(CURLE_OK == code) {
     /* no error */
     if((*in_connect)->send_pipe->size || (*in_connect)->recv_pipe->size)
       /* pipelining */
       *protocol_done = TRUE;
-    else {
-
-      if(dns || !*asyncp)
-        /* If an address is available it means that we already have the name
-           resolved, OR it isn't async. if this is a re-used connection 'dns'
-           will be NULL here. Continue connecting from here */
-        code = setup_conn(*in_connect, dns, protocol_done);
-
-      if(dns && code) {
-        /* We have the dns entry info already but failed to connect to the
-         * host and thus we must make sure to unlock the dns entry again
-         * before returning failure from here.
-         */
-        Curl_resolv_unlock(data, dns);
-      }
+    else if (!*asyncp) {
+      /* DNS resolution is done: that's either because this is a reused
+         connection, in which case DNS was unnecessary, or because DNS
+         really did finish already (synch resolver/fast async resolve) */
+      code = setup_conn(*in_connect, protocol_done);
     }
   }
 
   if(code && *in_connect) {
     /* We're not allowed to return failure with memory left allocated
        in the connectdata struct, free those here */
@@ -4811,15 +5054,21 @@
 
    Note: this function disconnects and frees the conn data in case of
    resolve failure */
 CURLcode Curl_async_resolved(struct connectdata *conn,
                              bool *protocol_done)
 {
-#if defined(USE_ARES) || defined(USE_THREADING_GETHOSTBYNAME) || \
-    defined(USE_THREADING_GETADDRINFO)
-  CURLcode code = setup_conn(conn, conn->async.dns, protocol_done);
+#ifdef CURLRES_ASYNCH
+  CURLcode code;
+
+  if(conn->async.dns) {
+    conn->dns_entry = conn->async.dns;
+    conn->async.dns = NULL;
+  }
+
+  code = setup_conn(conn, protocol_done);
 
   if(code)
     /* We're not allowed to return failure with memory left allocated
        in the connectdata struct, free those here */
     Curl_disconnect(conn); /* close the connection */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/urldata.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/urldata.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/urldata.h	2009-10-30 05:26:30.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/urldata.h	2010-01-23 04:33:05.000000000 +0800
@@ -4,26 +4,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: urldata.h,v 1.420 2009-10-29 03:48:00 yangtse Exp $
+ * $Id: urldata.h,v 1.432 2010-01-22 20:27:48 yangtse Exp $
  ***************************************************************************/
 
 /* This file is for lib internal stuff */
 
 #include "setup.h"
 
@@ -34,12 +34,19 @@
 #define PORT_HTTPS 443
 #define PORT_DICT 2628
 #define PORT_LDAP 389
 #define PORT_LDAPS 636
 #define PORT_TFTP 69
 #define PORT_SSH 22
+#define PORT_IMAP 143
+#define PORT_IMAPS 993
+#define PORT_POP3 110
+#define PORT_POP3S 995
+#define PORT_SMTP 25
+#define PORT_SMTPS 465 /* sometimes called SSMTP */
+#define PORT_RTSP 554
 
 #define DICT_MATCH "/MATCH:"
 #define DICT_MATCH2 "/M:"
 #define DICT_MATCH3 "/FIND:"
 #define DICT_DEFINE "/DEFINE:"
 #define DICT_DEFINE2 "/D:"
@@ -48,12 +55,17 @@
 #define CURL_DEFAULT_USER "anonymous"
 #define CURL_DEFAULT_PASSWORD "ftp@example.com"
 
 /* length of longest IPv6 address string including the trailing null */
 #define MAX_IPADR_LEN sizeof("ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255")
 
+/* Default FTP/IMAP etc response timeout in milliseconds.
+   Symbian OS panics when given a timeout much greater than 1/2 hour.
+*/
+#define RESP_TIMEOUT (1800*1000)
+
 #include "cookie.h"
 #include "formdata.h"
 
 #ifdef USE_SSLEAY
 #ifdef USE_OPENSSL
 #include "openssl/rsa.h"
@@ -126,12 +138,21 @@
 
 #include "http_chunks.h" /* for the structs and enum stuff */
 #include "hostip.h"
 #include "hash.h"
 #include "splay.h"
 
+#include "imap.h"
+#include "pop3.h"
+#include "smtp.h"
+#include "ftp.h"
+#include "file.h"
+#include "ssh.h"
+#include "http.h"
+#include "rtsp.h"
+
 #ifdef HAVE_GSSAPI
 # ifdef HAVE_GSSGNU
 #  include <gss.h>
 # elif defined HAVE_GSSMIT
 #  include <gssapi/gssapi.h>
 #  include <gssapi/gssapi_generic.h>
@@ -314,287 +335,12 @@
   gss_ctx_id_t context;
   gss_name_t server_name;
   gss_buffer_desc output_token;
 };
 #endif
 
-/****************************************************************************
- * HTTP unique setup
- ***************************************************************************/
-struct HTTP {
-  struct FormData *sendit;
-  curl_off_t postsize; /* off_t to handle large file sizes */
-  const char *postdata;
-
-  const char *p_pragma;      /* Pragma: string */
-  const char *p_accept;      /* Accept: string */
-  curl_off_t readbytecount;
-  curl_off_t writebytecount;
-
-  /* For FORM posting */
-  struct Form form;
-
-  struct back {
-    curl_read_callback fread_func; /* backup storage for fread pointer */
-    void *fread_in;           /* backup storage for fread_in pointer */
-    const char *postdata;
-    curl_off_t postsize;
-  } backup;
-
-  enum {
-    HTTPSEND_NADA,    /* init */
-    HTTPSEND_REQUEST, /* sending a request */
-    HTTPSEND_BODY,    /* sending body */
-    HTTPSEND_LAST     /* never use this */
-  } sending;
-
-  void *send_buffer; /* used if the request couldn't be sent in one chunk,
-                        points to an allocated send_buffer struct */
-};
-
-/****************************************************************************
- * FTP unique setup
- ***************************************************************************/
-typedef enum {
-  FTP_STOP,    /* do nothing state, stops the state machine */
-  FTP_WAIT220, /* waiting for the initial 220 response immediately after
-                  a connect */
-  FTP_AUTH,
-  FTP_USER,
-  FTP_PASS,
-  FTP_ACCT,
-  FTP_PBSZ,
-  FTP_PROT,
-  FTP_CCC,
-  FTP_PWD,
-  FTP_SYST,
-  FTP_NAMEFMT,
-  FTP_QUOTE, /* waiting for a response to a command sent in a quote list */
-  FTP_RETR_PREQUOTE,
-  FTP_STOR_PREQUOTE,
-  FTP_POSTQUOTE,
-  FTP_CWD,  /* change dir */
-  FTP_MKD,  /* if the dir didn't exist */
-  FTP_MDTM, /* to figure out the datestamp */
-  FTP_TYPE, /* to set type when doing a head-like request */
-  FTP_LIST_TYPE, /* set type when about to do a dir list */
-  FTP_RETR_TYPE, /* set type when about to RETR a file */
-  FTP_STOR_TYPE, /* set type when about to STOR a file */
-  FTP_SIZE, /* get the remote file's size for head-like request */
-  FTP_RETR_SIZE, /* get the remote file's size for RETR */
-  FTP_STOR_SIZE, /* get the size for (resumed) STOR */
-  FTP_REST, /* when used to check if the server supports it in head-like */
-  FTP_RETR_REST, /* when asking for "resume" in for RETR */
-  FTP_PORT, /* generic state for PORT, LPRT and EPRT, check count1 */
-  FTP_PASV, /* generic state for PASV and EPSV, check count1 */
-  FTP_LIST, /* generic state for LIST, NLST or a custom list command */
-  FTP_RETR,
-  FTP_STOR, /* generic state for STOR and APPE */
-  FTP_QUIT,
-  FTP_LAST  /* never used */
-} ftpstate;
-
-typedef enum {
-  FTPFILE_MULTICWD  = 1, /* as defined by RFC1738 */
-  FTPFILE_NOCWD     = 2, /* use SIZE / RETR / STOR on the full path */
-  FTPFILE_SINGLECWD = 3  /* make one CWD, then SIZE / RETR / STOR on the file */
-} curl_ftpfile;
-
-typedef enum {
-  FTPTRANSFER_BODY, /* yes do transfer a body */
-  FTPTRANSFER_INFO, /* do still go through to get info/headers */
-  FTPTRANSFER_NONE, /* don't get anything and don't get info */
-  FTPTRANSFER_LAST  /* end of list marker, never used */
-} curl_ftptransfer;
-
-/* This FTP struct is used in the SessionHandle. All FTP data that is
-   connection-oriented must be in FTP_conn to properly deal with the fact that
-   perhaps the SessionHandle is changed between the times the connection is
-   used. */
-struct FTP {
-  curl_off_t *bytecountp;
-  char *user;    /* user name string */
-  char *passwd;  /* password string */
-
-  /* transfer a file/body or not, done as a typedefed enum just to make
-     debuggers display the full symbol and not just the numerical value */
-  curl_ftptransfer transfer;
-  curl_off_t downloadsize;
-};
-
-/* ftp_conn is used for struct connection-oriented data in the connectdata
-   struct */
-struct ftp_conn {
-  char *entrypath; /* the PWD reply when we logged on */
-  char **dirs;   /* realloc()ed array for path components */
-  int dirdepth;  /* number of entries used in the 'dirs' array */
-  int diralloc;  /* number of entries allocated for the 'dirs' array */
-  char *file;    /* decoded file */
-  char *cache;       /* data cache between getresponse()-calls */
-  curl_off_t cache_size; /* size of cache in bytes */
-  bool dont_check;  /* Set to TRUE to prevent the final (post-transfer)
-                       file size and 226/250 status check. It should still
-                       read the line, just ignore the result. */
-  long response_time; /* When no timeout is given, this is the amount of
-                         seconds we await for an FTP response. Initialized
-                         in Curl_ftp_connect() */
-  bool ctl_valid;   /* Tells Curl_ftp_quit() whether or not to do anything. If
-                       the connection has timed out or been closed, this
-                       should be FALSE when it gets to Curl_ftp_quit() */
-  bool cwddone;     /* if it has been determined that the proper CWD combo
-                       already has been done */
-  bool cwdfail;     /* set TRUE if a CWD command fails, as then we must prevent
-                       caching the current directory */
-  char *prevpath;   /* conn->path from the previous transfer */
-  char transfertype; /* set by ftp_transfertype for use by Curl_client_write()a
-                        and others (A/I or zero) */
-  size_t nread_resp; /* number of bytes currently read of a server response */
-  char *linestart_resp; /* line start pointer for the FTP server response
-                           reader function */
-  bool pending_resp;  /* set TRUE when a server response is pending or in
-                         progress, and is cleared once the last response is
-                         read */
-
-  int count1; /* general purpose counter for the state machine */
-  int count2; /* general purpose counter for the state machine */
-  int count3; /* general purpose counter for the state machine */
-  char *sendthis; /* allocated pointer to a buffer that is to be sent to the
-                     ftp server */
-  size_t sendleft; /* number of bytes left to send from the sendthis buffer */
-  size_t sendsize; /* total size of the sendthis buffer */
-  struct timeval response; /* set to Curl_tvnow() when a command has been sent
-                              off, used to time-out response reading */
-  ftpstate state; /* always use ftp.c:state() to change state! */
-  char * server_os;     /* The target server operating system. */
-};
-
-/****************************************************************************
- * SSH unique setup
- ***************************************************************************/
-typedef enum {
-  SSH_NO_STATE = -1,  /* Used for "nextState" so say there is none */
-  SSH_STOP = 0,       /* do nothing state, stops the state machine */
-
-  SSH_S_STARTUP,      /* Session startup, First state in SSH-CONNECT */
-  SSH_HOSTKEY,        /* verify hostkey */
-  SSH_AUTHLIST,
-  SSH_AUTH_PKEY_INIT,
-  SSH_AUTH_PKEY,
-  SSH_AUTH_PASS_INIT,
-  SSH_AUTH_PASS,
-  SSH_AUTH_HOST_INIT,
-  SSH_AUTH_HOST,
-  SSH_AUTH_KEY_INIT,
-  SSH_AUTH_KEY,
-  SSH_AUTH_DONE,
-  SSH_SFTP_INIT,
-  SSH_SFTP_REALPATH,   /* Last state in SSH-CONNECT */
-
-  SSH_SFTP_QUOTE_INIT, /* First state in SFTP-DO */
-  SSH_SFTP_POSTQUOTE_INIT, /* (Possibly) First state in SFTP-DONE */
-  SSH_SFTP_QUOTE,
-  SSH_SFTP_NEXT_QUOTE,
-  SSH_SFTP_QUOTE_STAT,
-  SSH_SFTP_QUOTE_SETSTAT,
-  SSH_SFTP_QUOTE_SYMLINK,
-  SSH_SFTP_QUOTE_MKDIR,
-  SSH_SFTP_QUOTE_RENAME,
-  SSH_SFTP_QUOTE_RMDIR,
-  SSH_SFTP_QUOTE_UNLINK,
-  SSH_SFTP_TRANS_INIT,
-  SSH_SFTP_UPLOAD_INIT,
-  SSH_SFTP_CREATE_DIRS_INIT,
-  SSH_SFTP_CREATE_DIRS,
-  SSH_SFTP_CREATE_DIRS_MKDIR,
-  SSH_SFTP_READDIR_INIT,
-  SSH_SFTP_READDIR,
-  SSH_SFTP_READDIR_LINK,
-  SSH_SFTP_READDIR_BOTTOM,
-  SSH_SFTP_READDIR_DONE,
-  SSH_SFTP_DOWNLOAD_INIT,
-  SSH_SFTP_DOWNLOAD_STAT, /* Last state in SFTP-DO */
-  SSH_SFTP_CLOSE,    /* Last state in SFTP-DONE */
-  SSH_SFTP_SHUTDOWN, /* First state in SFTP-DISCONNECT */
-  SSH_SCP_TRANS_INIT, /* First state in SCP-DO */
-  SSH_SCP_UPLOAD_INIT,
-  SSH_SCP_DOWNLOAD_INIT,
-  SSH_SCP_DONE,
-  SSH_SCP_SEND_EOF,
-  SSH_SCP_WAIT_EOF,
-  SSH_SCP_WAIT_CLOSE,
-  SSH_SCP_CHANNEL_FREE,   /* Last state in SCP-DONE */
-  SSH_SESSION_DISCONNECT, /* First state in SCP-DISCONNECT */
-  SSH_SESSION_FREE,       /* Last state in SCP/SFTP-DISCONNECT */
-  SSH_QUIT,
-  SSH_LAST  /* never used */
-} sshstate;
-
-/* this struct is used in the HandleData struct which is part of the
-   SessionHandle, which means this is used on a per-easy handle basis.
-   Everything that is strictly related to a connection is banned from this
-   struct. */
-struct SSHPROTO {
-  char *path;                  /* the path we operate on */
-};
-
-/* ssh_conn is used for struct connection-oriented data in the connectdata
-   struct */
-struct ssh_conn {
-  const char *authlist;       /* List of auth. methods, managed by libssh2 */
-#ifdef USE_LIBSSH2
-  const char *passphrase;     /* pass-phrase to use */
-  char *rsa_pub;              /* path name */
-  char *rsa;                  /* path name */
-  bool authed;                /* the connection has been authenticated fine */
-  sshstate state;             /* always use ssh.c:state() to change state! */
-  sshstate nextstate;         /* the state to goto after stopping */
-  CURLcode actualcode;        /* the actual error code */
-  struct curl_slist *quote_item; /* for the quote option */
-  char *quote_path1;          /* two generic pointers for the QUOTE stuff */
-  char *quote_path2;
-  LIBSSH2_SFTP_ATTRIBUTES quote_attrs; /* used by the SFTP_QUOTE state */
-  char *homedir;              /* when doing SFTP we figure out home dir in the
-                                 connect phase */
-
-  /* Here's a set of struct members used by the SFTP_READDIR state */
-  LIBSSH2_SFTP_ATTRIBUTES readdir_attrs;
-  char *readdir_filename;
-  char *readdir_longentry;
-  int readdir_len, readdir_totalLen, readdir_currLen;
-  char *readdir_line;
-  char *readdir_linkPath;
-  /* end of READDIR stuff */
-
-  int secondCreateDirs;         /* counter use by the code to see if the
-                                   second attempt has been made to change
-                                   to/create a directory */
-  char *slash_pos;              /* used by the SFTP_CREATE_DIRS state */
-  LIBSSH2_SESSION *ssh_session; /* Secure Shell session */
-  LIBSSH2_CHANNEL *ssh_channel; /* Secure Shell channel handle */
-  LIBSSH2_SFTP *sftp_session;   /* SFTP handle */
-  LIBSSH2_SFTP_HANDLE *sftp_handle;
-  int orig_waitfor;             /* default READ/WRITE bits wait for */
-
-  /* note that HAVE_LIBSSH2_KNOWNHOST_API is a define set in the libssh2.h
-     header */
-#ifdef HAVE_LIBSSH2_KNOWNHOST_API
-  LIBSSH2_KNOWNHOSTS *kh;
-#endif
-#endif /* USE_LIBSSH2 */
-};
-
-
-/****************************************************************************
- * FILE unique setup
- ***************************************************************************/
-struct FILEPROTO {
-  char *path; /* the path we operate on */
-  char *freepath; /* pointer to the allocated block we must free, this might
-                     differ from the 'path' pointer */
-  int fd;     /* open file descriptor to read from! */
-};
 
 /*
  * Boolean values that concerns this connection.
  */
 struct ConnectBits {
   bool close; /* if set, we close the connection after this request */
@@ -687,14 +433,13 @@
   ZLIB_GZIP_HEADER,     /* reading gzip header */
   ZLIB_GZIP_INFLATING,  /* inflating gzip stream */
   ZLIB_INIT_GZIP        /* initialized in transparent gzip mode */
 } zlibInitState;
 #endif
 
-#if defined(USE_ARES) || defined(USE_THREADING_GETHOSTBYNAME) || \
-    defined(USE_THREADING_GETADDRINFO)
+#ifdef CURLRES_ASYNCH
 struct Curl_async {
   char *hostname;
   int port;
   struct Curl_dns_entry *dns;
   bool done;  /* set TRUE when the lookup is complete */
   int status; /* if done is TRUE, this is the status from the callback */
@@ -763,13 +508,14 @@
   char *str_start;              /* within buf */
   char *end_ptr;                /* within buf */
   char *p;                      /* within headerbuff */
   bool content_range;           /* set TRUE if Content-Range: was found */
   curl_off_t offset;            /* possible resume offset read from the
                                    Content-Range: header */
-  int httpcode;                 /* error code from the 'HTTP/1.? XXX' line */
+  int httpcode;                 /* error code from the 'HTTP/1.? XXX' or
+                                   'RTSP/1.? XXX' line */
   struct timeval start100;      /* time stamp to wait for the 100 code from */
   enum expect100 exp100;        /* expect 100 continue state */
 
   int content_encoding;         /* What content encoding. sec 3.5, RFC2616. */
 
 #define IDENTITY 0              /* No encoding */
@@ -919,24 +665,29 @@
 #define PROT_LDAP    CURLPROTO_LDAP
 #define PROT_FILE    CURLPROTO_FILE
 #define PROT_FTPS    CURLPROTO_FTPS
 #define PROT_TFTP    CURLPROTO_TFTP
 #define PROT_SCP     CURLPROTO_SCP
 #define PROT_SFTP    CURLPROTO_SFTP
+#define PROT_IMAP    CURLPROTO_IMAP
+#define PROT_IMAPS   CURLPROTO_IMAPS
+#define PROT_POP3    CURLPROTO_POP3
+#define PROT_POP3S   CURLPROTO_POP3S
+#define PROT_SMTP    CURLPROTO_SMTP
+#define PROT_SMTPS   CURLPROTO_SMTPS
+#define PROT_RTSP    CURLPROTO_RTSP
+
+/* (1<<18) is currently the highest used bit in the public bitmask. We make
+   sure we use "private bits" above the public ones to make things easier. */
 
-/* CURLPROTO_TFTP (1<<11) is currently the highest used bit in the public
-   bitmask. We make sure we use "private bits" above the first 16 to make
-   things easier. */
+#define PROT_EXTMASK 0xfffff
 
-#define PROT_EXTMASK 0xffff
+#define PROT_SSL     (1<<25) /* protocol requires SSL */
 
-#define PROT_SSL     (1<<22) /* protocol requires SSL */
-#define PROT_MISSING (1<<23)
-
-#define PROT_CLOSEACTION PROT_FTP /* these ones need action before socket
-                                     close */
+/* these ones need action before socket close */
+#define PROT_CLOSEACTION (PROT_FTP | PROT_TFTP | PROT_IMAP | PROT_POP3)
 #define PROT_DUALCHANNEL PROT_FTP /* these protocols use two connections */
 
   /* 'dns_entry' is the particular host we use. This points to an entry in the
      DNS cache and it will not get pruned while locked. It gets unlocked in
      Curl_done(). This entry will be NULL if the connection is re-used as then
      there is no name resolve done. */
@@ -951,13 +702,12 @@
      It remains available as long as the connection does, which is longer than
      the ip_addr itself. */
   char ip_addr_str[MAX_IPADR_LEN];
 
   unsigned int scope;    /* address scope for IPv6 */
 
-  char protostr[16];  /* store the protocol string in this buffer */
   int socktype;  /* SOCK_STREAM or SOCK_DGRAM */
 
   struct hostname host;
   struct hostname proxy;
 
   long port;       /* which port to use locally */
@@ -968,13 +718,14 @@
   char *passwd;  /* password string, allocated */
 
   char *proxyuser;    /* proxy user name string, allocated */
   char *proxypasswd;  /* proxy password string, allocated */
   curl_proxytype proxytype; /* what kind of proxy that is in use */
 
-  int httpversion;              /* the HTTP version*10 reported by the server */
+  int httpversion;        /* the HTTP version*10 reported by the server */
+  int rtspversion;        /* the RTSP version*10 reported by the server */
 
   struct timeval now;     /* "current" time */
   struct timeval created; /* creation time */
   curl_socket_t sock[2]; /* two sockets, the second is used for the data
                             transfer when doing FTP */
 
@@ -1000,12 +751,13 @@
     char *accept_encoding; /* free later if not NULL! */
     char *userpwd; /* free later if not NULL! */
     char *rangeline; /* free later if not NULL! */
     char *ref; /* free later if not NULL! */
     char *host; /* free later if not NULL */
     char *cookiehost; /* free later if not NULL */
+    char *rtsp_transport; /* free later if not NULL */
   } allocptr;
 
   int sec_complete; /* if kerberos is enabled for this connection */
 #if defined(HAVE_KRB4) || defined(HAVE_GSSAPI)
   enum protection_level command_prot;
   enum protection_level data_prot;
@@ -1057,14 +809,13 @@
                                because it authenticates connections, not
                                single requests! */
   struct ntlmdata proxyntlm; /* NTLM data for proxy */
 
   char syserr_buf [256]; /* buffer for Curl_strerror() */
 
-#if defined(USE_ARES) || defined(USE_THREADING_GETHOSTBYNAME) || \
-    defined(USE_THREADING_GETADDRINFO)
+#ifdef CURLRES_ASYNCH
   /* data used for the asynch name resolve callback */
   struct Curl_async async;
 #endif
 
   /* These three are used for chunked-encoding trailer support */
   char *trailer; /* allocated buffer to store trailer in */
@@ -1072,29 +823,36 @@
   int trlPos;    /* index of where to store data */
 
   union {
     struct ftp_conn ftpc;
     struct ssh_conn sshc;
     struct tftp_state_data *tftpc;
+    struct imap_conn imapc;
+    struct pop3_conn pop3c;
+    struct smtp_conn smtpc;
+    struct rtsp_conn rtspc;
   } proto;
 
   int cselect_bits; /* bitmask of socket events */
   int waitfor;      /* current READ/WRITE bits to wait for */
 
 #if defined(HAVE_GSSAPI) || defined(USE_WINDOWS_SSPI)
   int socks5_gssapi_enctype;
 #endif
+
+  long verifypeer;
+  long verifyhost;
 };
 
 /* The end of connectdata. */
 
 /*
  * Struct to keep statistical and informational data.
  */
 struct PureInfo {
-  int httpcode;  /* Recent HTTP or FTP response code */
+  int httpcode;  /* Recent HTTP, FTP, or RTSP response code */
   int httpproxycode; /* response code from proxy when received separate */
   int httpversion; /* the http version number X.Y = X*10+Y */
   long filetime; /* If requested, this is might get set. Set to -1 if the time
                     was unretrievable. We cannot have this of type time_t,
                     since time_t is unsigned on several platforms such as
                     OpenVMS. */
@@ -1159,12 +917,28 @@
   HTTPREQ_PUT,
   HTTPREQ_HEAD,
   HTTPREQ_CUSTOM,
   HTTPREQ_LAST /* last in list */
 } Curl_HttpReq;
 
+typedef enum {
+    RTSPREQ_NONE, /* first in list */
+    RTSPREQ_OPTIONS,
+    RTSPREQ_DESCRIBE,
+    RTSPREQ_ANNOUNCE,
+    RTSPREQ_SETUP,
+    RTSPREQ_PLAY,
+    RTSPREQ_PAUSE,
+    RTSPREQ_TEARDOWN,
+    RTSPREQ_GET_PARAMETER,
+    RTSPREQ_SET_PARAMETER,
+    RTSPREQ_RECORD,
+    RTSPREQ_RECEIVE,
+    RTSPREQ_LAST /* last in list */
+} Curl_RtspReq;
+
 /*
  * Values that are generated, temporary or calculated internally for a
  * "session handle" must be defined within the 'struct UrlState'.  This struct
  * will be used within the SessionHandle struct. When the 'SessionHandle'
  * struct is cloned, this data MUST NOT be copied.
  *
@@ -1309,31 +1083,43 @@
   bool rangestringalloc; /* the range string is malloc()'ed */
 
   char *range; /* range, if used. See README for detailed specification on
                   this syntax. */
   curl_off_t resume_from; /* continue [ftp] transfer from here */
 
+  /* This RTSP state information survives requests and connections */
+  long rtsp_next_client_CSeq; /* the session's next client CSeq */
+  long rtsp_next_server_CSeq; /* the session's next server CSeq */
+  long rtsp_CSeq_recv; /* most recent CSeq received */
+
   /* Protocol specific data.
    *
    *************************************************************************
    * Note that this data will be REMOVED after each request, so anything that
    * should be kept/stored on a per-connection basis and thus live for the
    * next request on the same connection MUST be put in the connectdata struct!
    *************************************************************************/
   union {
     struct HTTP *http;
     struct HTTP *https;  /* alias, just for the sake of being more readable */
+    struct RTSP *rtsp;
     struct FTP *ftp;
     /* void *tftp;    not used */
     struct FILEPROTO *file;
     void *telnet;        /* private for telnet.c-eyes only */
     void *generic;
     struct SSHPROTO *ssh;
+    struct FTP *imap;
+    struct FTP *pop3;
+    struct FTP *smtp;
   } proto;
   /* current user of this SessionHandle instance, or NULL */
   struct connectdata *current_conn;
+
+  /* if true, force SSL connection retry (workaround for certain servers) */
+  bool ssl_connect_retry;
 };
 
 
 /*
  * This 'DynamicStatic' struct defines dynamic states that actually change
  * values in the 'UserDefined' area, which MUST be taken into consideration
@@ -1363,13 +1149,13 @@
 
 enum dupstring {
   STRING_CERT,            /* client certificate file name */
   STRING_CERT_TYPE,       /* format for certificate (default: PEM)*/
   STRING_COOKIE,          /* HTTP cookie string to send */
   STRING_COOKIEJAR,       /* dump all cookies to this file */
-  STRING_CUSTOMREQUEST,   /* HTTP/FTP request/method to use */
+  STRING_CUSTOMREQUEST,   /* HTTP/FTP/RTSP request/method to use */
   STRING_DEVICE,          /* local network interface/address to use */
   STRING_ENCODING,        /* Accept-Encoding string */
   STRING_FTP_ACCOUNT,     /* ftp account data */
   STRING_FTP_ALTERNATIVE_TO_USER, /* command to send if USER/PASS fails */
   STRING_FTPPORT,         /* port to send with the FTP PORT command */
   STRING_KEY,             /* private key file name */
@@ -1394,21 +1180,25 @@
   STRING_USERNAME,        /* <username>, if used */
   STRING_PASSWORD,        /* <password>, if used */
   STRING_PROXYUSERNAME,   /* Proxy <username>, if used */
   STRING_PROXYPASSWORD,   /* Proxy <password>, if used */
   STRING_NOPROXY,         /* List of hosts which should not use the proxy, if
                              used */
+  STRING_RTSP_SESSION_ID, /* Session ID to use */
+  STRING_RTSP_STREAM_URI, /* Stream URI for this request */
+  STRING_RTSP_TRANSPORT,  /* Transport for this session */
 #ifdef USE_LIBSSH2
   STRING_SSH_PRIVATE_KEY, /* path to the private key file for auth */
   STRING_SSH_PUBLIC_KEY,  /* path to the public key file for auth */
   STRING_SSH_HOST_PUBLIC_KEY_MD5, /* md5 of host public key in ascii hex */
   STRING_SSH_KNOWNHOSTS,  /* file name of knownhosts file */
 #endif
 #if defined(HAVE_GSSAPI) || defined(USE_WINDOWS_SSPI)
   STRING_SOCKS5_GSSAPI_SERVICE,  /* GSSAPI service name */
 #endif
+  STRING_MAIL_FROM,
 
   /* -- end of strings -- */
   STRING_LAST /* not used, just an end-of-list marker */
 };
 
 struct UserDefined {
@@ -1418,12 +1208,13 @@
   long proxyport; /* If non-zero, use this port number by default. If the
                      proxy string features a ":[port]" that one will override
                      this. */
   void *out;         /* the fetched file goes here */
   void *in;          /* the uploaded file is read from here */
   void *writeheader; /* write the header to this if non-NULL */
+  void *rtp_out;     /* write RTP to this if non-NULL */
   long use_port;     /* which port to use (when not using default) */
   long httpauth;     /* what kind of HTTP authentication to use (bitmask) */
   long proxyauth;    /* what kind of proxy authentication to use (bitmask) */
   long followlocation; /* as in HTTP Location: */
   long maxredirs;    /* maximum no. of http(s) redirects to follow, set to -1
                         for infinity */
@@ -1439,12 +1230,13 @@
                                (contain zero bytes) */
   unsigned short localport; /* local port number to bind to */
   int localportrange; /* number of additional port numbers to test in case the
                          'localport' one can't be bind()ed */
   curl_write_callback fwrite_func;   /* function that stores the output */
   curl_write_callback fwrite_header; /* function that stores headers */
+  curl_write_callback fwrite_rtp;    /* function that stores interleaved RTP */
   curl_read_callback fread_func;     /* function that reads the input */
   curl_progress_callback fprogress;  /* function for progress information */
   curl_debug_callback fdebug;      /* function that write informational data */
   curl_ioctl_callback ioctl_func;  /* function for I/O control */
   curl_sockopt_callback fsockopt;  /* function for setting socket options */
   void *sockopt_client; /* pointer to pass to the socket options callback */
@@ -1462,13 +1254,13 @@
   curl_conv_callback convfromutf8;
 
   void *progress_client; /* pointer to pass to the progress callback */
   void *ioctl_client;   /* pointer to pass to the ioctl callback */
   long timeout;         /* in milliseconds, 0 means no timeout */
   long connecttimeout;  /* in milliseconds, 0 means no timeout */
-  long ftp_response_timeout; /* in milliseconds, 0 means no timeout */
+  long server_response_timeout; /* in milliseconds, 0 means no timeout */
   long tftp_blksize ; /* in bytes, 0 means use default */
   curl_off_t infilesize;      /* size of file to upload, -1 means unknown */
   long low_speed_limit; /* bytes/second */
   long low_speed_time;  /* number of seconds */
   curl_off_t max_send_speed; /* high speed limit in bytes/second for upload */
   curl_off_t max_recv_speed; /* high speed limit in bytes/second for download */
@@ -1545,14 +1337,16 @@
   bool verbose;          /* output verbosity */
   bool krb;              /* kerberos connection requested */
   bool reuse_forbid;     /* forbidden to be reused, close after use */
   bool reuse_fresh;      /* do not re-use an existing connection  */
   bool ftp_use_epsv;     /* if EPSV is to be attempted or not */
   bool ftp_use_eprt;     /* if EPRT is to be attempted or not */
+  bool ftp_use_pret;     /* if PRET is to be used before PASV or not */
 
-  curl_usessl ftp_ssl;   /* if AUTH TLS is to be attempted etc */
+  curl_usessl ftp_ssl;   /* if AUTH TLS is to be attempted etc, for FTP or
+                            IMAP or POP3 or others! */
   curl_ftpauth ftpsslauth; /* what AUTH XXX to be attempted */
   curl_ftpccc ftp_ccc;   /* FTP CCC options */
   bool no_signal;        /* do not use any signal/alarm handler */
   bool global_dns_cache; /* subject for future removal */
   bool tcp_nodelay;      /* whether to enable TCP_NODELAY or not */
   bool ignorecl;         /* ignore content length */
@@ -1572,12 +1366,16 @@
   unsigned int scope;    /* address scope for IPv6 */
   long allowed_protocols;
   long redir_protocols;
 #if defined(HAVE_GSSAPI) || defined(USE_WINDOWS_SSPI)
   long socks5_gssapi_nec; /* flag to support nec socks5 server */
 #endif
+  struct curl_slist *mail_rcpt; /* linked list of mail recipients */
+  /* Common RTSP header options */
+  Curl_RtspReq rtspreq; /* RTSP request type */
+  long rtspversion; /* like httpversion, for RTSP */
 };
 
 struct Names {
   struct curl_hash *hostcache;
   enum {
     HCACHE_NONE,    /* not pointing to anything */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/vc6libcurl.dsp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/vc6libcurl.dsp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/vc6libcurl.dsp	2009-11-04 20:29:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/vc6libcurl.dsp	2010-02-09 18:07:52.000000000 +0800
@@ -179,12 +179,16 @@
 # Begin Source File
 
 SOURCE=.\curl_sspi.c
 # End Source File
 # Begin Source File
 
+SOURCE=.\curl_threads.c
+# End Source File
+# Begin Source File
+
 SOURCE=.\dict.c
 # End Source File
 # Begin Source File
 
 SOURCE=.\easy.c
 # End Source File
@@ -271,12 +275,16 @@
 # Begin Source File
 
 SOURCE=.\if2ip.c
 # End Source File
 # Begin Source File
 
+SOURCE=.\imap.c
+# End Source File
+# Begin Source File
+
 SOURCE=.\inet_ntop.c
 # End Source File
 # Begin Source File
 
 SOURCE=.\inet_pton.c
 # End Source File
@@ -327,24 +335,36 @@
 # Begin Source File
 
 SOURCE=.\parsedate.c
 # End Source File
 # Begin Source File
 
+SOURCE=.\pingpong.c
+# End Source File
+# Begin Source File
+
+SOURCE=.\pop3.c
+# End Source File
+# Begin Source File
+
 SOURCE=.\progress.c
 # End Source File
 # Begin Source File
 
 SOURCE=.\qssl.c
 # End Source File
 # Begin Source File
 
 SOURCE=.\rawstr.c
 # End Source File
 # Begin Source File
 
+SOURCE=.\rtsp.c
+# End Source File
+# Begin Source File
+
 SOURCE=.\security.c
 # End Source File
 # Begin Source File
 
 SOURCE=.\select.c
 # End Source File
@@ -359,12 +379,16 @@
 # Begin Source File
 
 SOURCE=.\slist.c
 # End Source File
 # Begin Source File
 
+SOURCE=.\smtp.c
+# End Source File
+# Begin Source File
+
 SOURCE=.\socks.c
 # End Source File
 # Begin Source File
 
 SOURCE=.\socks_gssapi.c
 # End Source File
@@ -491,12 +515,16 @@
 # Begin Source File
 
 SOURCE=.\curl_sspi.h
 # End Source File
 # Begin Source File
 
+SOURCE=.\curl_threads.h
+# End Source File
+# Begin Source File
+
 SOURCE=.\curlx.h
 # End Source File
 # Begin Source File
 
 SOURCE=.\dict.h
 # End Source File
@@ -559,12 +587,16 @@
 # Begin Source File
 
 SOURCE=.\if2ip.h
 # End Source File
 # Begin Source File
 
+SOURCE=.\imap.h
+# End Source File
+# Begin Source File
+
 SOURCE=.\inet_ntop.h
 # End Source File
 # Begin Source File
 
 SOURCE=.\inet_pton.h
 # End Source File
@@ -599,24 +631,36 @@
 # Begin Source File
 
 SOURCE=.\parsedate.h
 # End Source File
 # Begin Source File
 
+SOURCE=.\pingpong.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\pop3.h
+# End Source File
+# Begin Source File
+
 SOURCE=.\progress.h
 # End Source File
 # Begin Source File
 
 SOURCE=.\qssl.h
 # End Source File
 # Begin Source File
 
 SOURCE=.\rawstr.h
 # End Source File
 # Begin Source File
 
+SOURCE=.\rtsp.h
+# End Source File
+# Begin Source File
+
 SOURCE=.\select.h
 # End Source File
 # Begin Source File
 
 SOURCE=.\sendf.h
 # End Source File
@@ -635,12 +679,16 @@
 # Begin Source File
 
 SOURCE=.\slist.h
 # End Source File
 # Begin Source File
 
+SOURCE=.\smtp.h
+# End Source File
+# Begin Source File
+
 SOURCE=.\sockaddr.h
 # End Source File
 # Begin Source File
 
 SOURCE=.\socks.h
 # End Source File
@@ -706,17 +754,17 @@
 # End Source File
 # Begin Source File
 
 SOURCE=.\url.h
 # End Source File
 # End Group
-
-# Begin Group "Resource Files"
-
-# PROP Default_Filter ""
-# Begin Source File
-
-SOURCE=.\libcurl.rc
-# End Source File
-# End Group
-# End Target
-# End Project
+
+# Begin Group "Resource Files"
+
+# PROP Default_Filter ""
+# Begin Source File
+
+SOURCE=.\libcurl.rc
+# End Source File
+# End Group
+# End Target
+# End Project
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/version.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/version.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/lib/version.c	2009-06-11 02:04:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/lib/version.c	2010-01-25 06:42:54.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: version.c,v 1.61 2009-06-10 02:49:43 yangtse Exp $
+ * $Id: version.c,v 1.65 2010-01-23 13:53:33 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <string.h>
 #include <stdio.h>
@@ -113,53 +113,76 @@
   ptr += len;
 #endif
 
   return version;
 }
 
-/* data for curl_version_info */
+/* data for curl_version_info
+
+   Keep the list sorted alphabetically. It is also written so that each
+   protocol line has its own #if line to make things easier on the eye.
+ */
 
 static const char * const protocols[] = {
-#ifndef CURL_DISABLE_TFTP
-  "tftp",
+#ifndef CURL_DISABLE_DICT
+  "dict",
+#endif
+#ifndef CURL_DISABLE_FILE
+  "file",
 #endif
 #ifndef CURL_DISABLE_FTP
   "ftp",
 #endif
-#ifndef CURL_DISABLE_TELNET
-  "telnet",
+#if defined(USE_SSL) && !defined(CURL_DISABLE_FTP)
+  "ftps",
 #endif
-#ifndef CURL_DISABLE_DICT
-  "dict",
+#ifndef CURL_DISABLE_HTTP
+  "http",
 #endif
-#ifndef CURL_DISABLE_LDAP
-  "ldap",
-#ifdef HAVE_LDAP_SSL
-  "ldaps",
+#if defined(USE_SSL) && !defined(CURL_DISABLE_HTTP)
+  "https",
 #endif
+#ifndef CURL_DISABLE_IMAP
+  "imap",
 #endif
-#ifndef CURL_DISABLE_HTTP
-  "http",
+#if defined(USE_SSL) && !defined(CURL_DISABLE_IMAP)
+  "imaps",
 #endif
-#ifndef CURL_DISABLE_FILE
-  "file",
+#ifndef CURL_DISABLE_LDAP
+  "ldap",
 #endif
-
-#ifdef USE_SSL
-#ifndef CURL_DISABLE_HTTP
-  "https",
+#if defined(HAVE_LDAP_SSL) && !defined(CURL_DISABLE_LDAP)
+  "ldaps",
 #endif
-#ifndef CURL_DISABLE_FTP
-  "ftps",
+#ifndef CURL_DISABLE_POP3
+  "pop3",
 #endif
+#if defined(USE_SSL) && !defined(CURL_DISABLE_POP3)
+  "pop3s",
+#endif
+#ifndef CURL_DISABLE_RTSP
+  "rtsp",
 #endif
-
 #ifdef USE_LIBSSH2
   "scp",
+#endif
+#ifdef USE_LIBSSH2
   "sftp",
 #endif
+#ifndef CURL_DISABLE_SMTP
+  "smtp",
+#endif
+#if defined(USE_SSL) && !defined(CURL_DISABLE_SMTP)
+  "smtps",
+#endif
+#ifndef CURL_DISABLE_TELNET
+  "telnet",
+#endif
+#ifndef CURL_DISABLE_TFTP
+  "tftp",
+#endif
 
   NULL
 };
 
 static curl_version_info_data version_info = {
   CURLVERSION_NOW,
@@ -191,13 +214,13 @@
 #ifdef DEBUGBUILD
   | CURL_VERSION_DEBUG
 #endif
 #ifdef CURLDEBUG
   | CURL_VERSION_CURLDEBUG
 #endif
-#ifdef USE_ARES
+#ifdef CURLRES_ASYNCH
   | CURL_VERSION_ASYNCHDNS
 #endif
 #ifdef HAVE_SPNEGO
   | CURL_VERSION_SPNEGO
 #endif
 #if (CURL_SIZEOF_CURL_OFF_T > 4) && \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/libcurl.pc.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/libcurl.pc.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/libcurl.pc.in	2008-09-02 20:07:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/libcurl.pc.in	2009-11-18 02:11:07.000000000 +0800
@@ -15,13 +15,13 @@
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: libcurl.pc.in,v 1.4 2008-09-02 12:07:08 bagder Exp $
+# $Id: libcurl.pc.in,v 1.5 2009-11-17 18:11:07 bagder Exp $
 ###########################################################################
 
 # This should most probably benefit from getting a "Requires:" field added
 # dynamically by configure.
 #
 prefix=@prefix@
@@ -32,9 +32,9 @@
 supported_features="@SUPPORT_FEATURES@"
 
 Name: libcurl
 URL: http://curl.haxx.se/
 Description: Library to transfer files with ftp, http, etc.
 Version: @VERSION@
-Libs: -L${libdir} -lcurl @LDFLAGS@ @LIBS@
+Libs: -L${libdir} -lcurl @LIBS@
 Libs.private: @LIBCURL_LIBS@ @LIBS@
 Cflags: -I${includedir}
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/ltmain.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/ltmain.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/ltmain.sh	2009-11-04 20:25:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/ltmain.sh	2010-01-27 03:12:11.000000000 +0800
@@ -1,9 +1,9 @@
 # Generated from ltmain.m4sh.
 
-# ltmain.sh (GNU libtool) 2.2.6
+# ltmain.sh (GNU libtool) 2.2.6b
 # Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996
 
 # Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007 2008 Free Software Foundation, Inc.
 # This is free software; see the source for copying conditions.  There is NO
 # warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 
@@ -62,23 +62,23 @@
 #
 #       host-triplet:	$host
 #       shell:		$SHELL
 #       compiler:		$LTCC
 #       compiler flags:		$LTCFLAGS
 #       linker:		$LD (gnu? $with_gnu_ld)
-#       $progname:		(GNU libtool) 2.2.6
+#       $progname:		(GNU libtool) 2.2.6b Debian-2.2.6b-2
 #       automake:		$automake_version
 #       autoconf:		$autoconf_version
 #
 # Report bugs to <bug-libtool@gnu.org>.
 
 PROGRAM=ltmain.sh
 PACKAGE=libtool
-VERSION=2.2.6
+VERSION="2.2.6b Debian-2.2.6b-2"
 TIMESTAMP=""
-package_revision=1.3012
+package_revision=1.3017
 
 # Be Bourne compatible
 if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
   emulate sh
   NULLCMD=:
   # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
@@ -113,21 +113,21 @@
 
 
 
 
 : ${CP="cp -f"}
 : ${ECHO="echo"}
-: ${EGREP="/usr/bin/grep -E"}
-: ${FGREP="/usr/bin/grep -F"}
-: ${GREP="/usr/bin/grep"}
+: ${EGREP="/bin/grep -E"}
+: ${FGREP="/bin/grep -F"}
+: ${GREP="/bin/grep"}
 : ${LN_S="ln -s"}
 : ${MAKE="make"}
 : ${MKDIR="mkdir"}
 : ${MV="mv -f"}
 : ${RM="rm -f"}
-: ${SED="/opt/local/bin/gsed"}
+: ${SED="/bin/sed"}
 : ${SHELL="${CONFIG_SHELL-/bin/sh}"}
 : ${Xsed="$SED -e 1s/^X//"}
 
 # Global variables:
 EXIT_SUCCESS=0
 EXIT_FAILURE=1
@@ -5030,13 +5030,16 @@
 	deplibs=
       fi
       if test "$linkmode" = prog; then
 	case $pass in
 	dlopen) libs="$dlfiles" ;;
 	dlpreopen) libs="$dlprefiles" ;;
-	link) libs="$deplibs %DEPLIBS% $dependency_libs" ;;
+	link)
+	  libs="$deplibs %DEPLIBS%"
+	  test "X$link_all_deplibs" != Xno && libs="$libs $dependency_libs"
+	  ;;
 	esac
       fi
       if test "$linkmode,$pass" = "lib,dlpreopen"; then
 	# Collect and forward deplibs of preopened libtool libs
 	for lib in $dlprefiles; do
 	  # Ignore non-libtool-libs
@@ -5341,25 +5344,25 @@
 	    if test -z "$old_library"; then
 	      func_fatal_error "cannot find name of link library for \`$lib'"
 	    fi
 	    # It is a libtool convenience library, so add in its objects.
 	    convenience="$convenience $ladir/$objdir/$old_library"
 	    old_convenience="$old_convenience $ladir/$objdir/$old_library"
+	    tmp_libs=
+	    for deplib in $dependency_libs; do
+	      deplibs="$deplib $deplibs"
+	      if $opt_duplicate_deps ; then
+		case "$tmp_libs " in
+		*" $deplib "*) specialdeplibs="$specialdeplibs $deplib" ;;
+		esac
+	      fi
+	      tmp_libs="$tmp_libs $deplib"
+	    done
 	  elif test "$linkmode" != prog && test "$linkmode" != lib; then
 	    func_fatal_error "\`$lib' is not a convenience library"
 	  fi
-	  tmp_libs=
-	  for deplib in $dependency_libs; do
-	    deplibs="$deplib $deplibs"
-	    if $opt_duplicate_deps ; then
-	      case "$tmp_libs " in
-	      *" $deplib "*) specialdeplibs="$specialdeplibs $deplib" ;;
-	      esac
-	    fi
-	    tmp_libs="$tmp_libs $deplib"
-	  done
 	  continue
 	fi # $pass = conv
 
 
 	# Get the name of the library we link against.
 	linklib=
@@ -5890,12 +5893,13 @@
 	    tmp_libs="$tmp_libs $deplib"
 	  done
 
 	  if test "$link_all_deplibs" != no; then
 	    # Add the search paths of all dependency libraries
 	    for deplib in $dependency_libs; do
+	      path=
 	      case $deplib in
 	      -L*) path="$deplib" ;;
 	      *.la)
 	        func_dirname "$deplib" "" "."
 		dir="$func_dirname_result"
 		# We need an absolute path.
@@ -6203,12 +6207,15 @@
 	    func_arith $number_major + $number_minor
 	    current=$func_arith_result
 	    age="$number_minor"
 	    revision="$number_minor"
 	    lt_irix_increment=no
 	    ;;
+	  *)
+	    func_fatal_configuration "$modename: unknown library version type \`$version_type'"
+	    ;;
 	  esac
 	  ;;
 	no)
 	  current="$1"
 	  revision="$2"
 	  age="$3"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/m4/curl-confopts.m4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/m4/curl-confopts.m4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/m4/curl-confopts.m4	2009-06-11 02:04:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/m4/curl-confopts.m4	2010-01-30 22:30:27.000000000 +0800
@@ -2,30 +2,66 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: curl-confopts.m4,v 1.6 2009-06-10 04:25:01 yangtse Exp $
+# $Id: curl-confopts.m4,v 1.10 2010-01-27 06:59:02 yangtse Exp $
 #***************************************************************************
 
 # File version for 'aclocal' use. Keep it a single number.
-# serial 6
+# serial 9
+
+
+dnl CURL_CHECK_OPTION_ARES
+dnl -------------------------------------------------
+dnl Verify if configure has been invoked with option
+dnl --enable-ares or --disable-ares, and
+dnl set shell variable want_ares as appropriate.
+
+AC_DEFUN([CURL_CHECK_OPTION_ARES], [
+dnl   AC_BEFORE([$0],[CURL_CHECK_OPTION_THREADS])dnl
+  AC_BEFORE([$0],[CURL_CHECK_LIB_ARES])dnl
+  AC_MSG_CHECKING([whether to enable c-ares for DNS lookups])
+  OPT_ARES="default"
+  AC_ARG_ENABLE(ares,
+AC_HELP_STRING([--enable-ares@<:@=PATH@:>@],[Enable c-ares for DNS lookups])
+AC_HELP_STRING([--disable-ares],[Disable c-ares for DNS lookups]),
+  OPT_ARES=$enableval)
+  case "$OPT_ARES" in
+    no)
+      dnl --disable-ares option used
+      want_ares="no"
+      ;;
+    default)
+      dnl configure option not specified
+      want_ares="no"
+      ;;
+    *)
+      dnl --enable-ares option used
+      want_ares="yes"
+      if test -n "$enableval" && test "$enableval" != "yes"; then
+        want_ares_path="$enableval"
+      fi
+      ;;
+  esac
+  AC_MSG_RESULT([$want_ares])
+])
 
 
 dnl CURL_CHECK_OPTION_CURLDEBUG
 dnl -------------------------------------------------
 dnl Verify if configure has been invoked with option
 dnl --enable-curldebug or --disable-curldebug, and set
@@ -50,13 +86,13 @@
       dnl handle this as a a request to use the same setting as option
       dnl --enable-debug. IOW, initially, for debug-enabled builds
       dnl this will be handled as a request to enable curldebug if
       dnl possible, and for debug-disabled builds this will be handled
       dnl as a request to disable curldebug.
       if test "$want_debug" = "yes"; then
-        AC_MSG_RESULT([not specified (assuming yes)])
+        AC_MSG_RESULT([(assumed) yes])
       else
         AC_MSG_RESULT([no])
       fi
       want_curldebug_assumed="yes"
       want_curldebug="$want_debug"
       ;;
@@ -177,16 +213,16 @@
       dnl not have any optimizer flag the request will be honored, in
       dnl any other case the request can not be honored.
       dnl IOW, existing optimizer flags defined in CFLAGS or CPPFLAGS
       dnl will always take precedence over any initial assumption.
       if test "$want_debug" = "yes"; then
         want_optimize="assume_no"
-        AC_MSG_RESULT([not specified (assuming no)])
+        AC_MSG_RESULT([(assumed) no])
       else
         want_optimize="assume_yes"
-        AC_MSG_RESULT([not specified (assuming yes)])
+        AC_MSG_RESULT([(assumed) yes])
       fi
       ;;
     *)
       dnl --enable-optimize option used. We will handle this as
       dnl a request to enable compiler optimizations if possible.
       dnl If the compiler is known CFLAGS and CPPFLAGS will be
@@ -195,12 +231,60 @@
       AC_MSG_RESULT([yes])
       ;;
   esac
 ])
 
 
+dnl CURL_CHECK_OPTION_THREADS
+dnl -------------------------------------------------
+dnl Verify if configure has been invoked with option
+dnl --enable-threads or --disable-threads, and
+dnl set shell variable want_threads as appropriate.
+
+dnl AC_DEFUN([CURL_CHECK_OPTION_THREADS], [
+dnl   AC_BEFORE([$0],[CURL_CHECK_LIB_THREADS])dnl
+dnl   AC_MSG_CHECKING([whether to enable threads for DNS lookups])
+dnl   OPT_THREADS="default"
+dnl   AC_ARG_ENABLE(threads,
+dnl AC_HELP_STRING([--enable-threads@<:@=PATH@:>@],[Enable threads for DNS lookups])
+dnl AC_HELP_STRING([--disable-threads],[Disable threads for DNS lookups]),
+dnl   OPT_THREADS=$enableval)
+dnl   case "$OPT_THREADS" in
+dnl     no)
+dnl       dnl --disable-threads option used
+dnl       want_threads="no"
+dnl       AC_MSG_RESULT([no])
+dnl       ;;
+dnl     default)
+dnl       dnl configure option not specified
+dnl       want_threads="no"
+dnl       AC_MSG_RESULT([(assumed) no])
+dnl       ;;
+dnl     *)
+dnl       dnl --enable-threads option used
+dnl       want_threads="yes"
+dnl       want_threads_path="$enableval"
+dnl       AC_MSG_RESULT([yes])
+dnl       ;;
+dnl   esac
+dnl   #
+dnl   if test "$want_ares" = "assume_yes"; then
+dnl     if test "$want_threads" = "yes"; then
+dnl       AC_MSG_CHECKING([whether to ignore c-ares enabling assumed setting])
+dnl       AC_MSG_RESULT([yes])
+dnl       want_ares="no"
+dnl     else
+dnl       want_ares="yes"
+dnl     fi
+dnl   fi
+dnl   if test "$want_threads" = "yes" && test "$want_ares" = "yes"; then
+dnl     AC_MSG_ERROR([options --enable-ares and --enable-threads are mutually exclusive, at most one may be enabled.])
+dnl   fi
+dnl ])
+
+
 dnl CURL_CHECK_OPTION_WARNINGS
 dnl -------------------------------------------------
 dnl Verify if configure has been invoked with option
 dnl --enable-warnings or --disable-warnings, and set
 dnl shell variable want_warnings as appropriate.
 
@@ -267,6 +351,91 @@
     AC_DEFINE_UNQUOTED(USE_BLOCKING_SOCKETS, 1,
       [Define to disable non-blocking sockets.])
     AC_MSG_WARN([non-blocking sockets disabled.])
   fi
 ])
 
+
+dnl CURL_CHECK_LIB_ARES
+dnl -------------------------------------------------
+dnl When c-ares library support has been requested,
+dnl performs necessary checks and adjustsments needed
+dnl to enable support of this library.
+
+AC_DEFUN([CURL_CHECK_LIB_ARES], [
+  #
+  if test "$want_ares" = "yes"; then
+    dnl c-ares library support has been requested
+    clean_CPPFLAGS="$CPPFLAGS"
+    clean_LDFLAGS="$LDFLAGS"
+    clean_LIBS="$LIBS"
+    embedded_ares="unknown"
+    configure_runpath=`pwd`
+    embedded_ares_builddir="$configure_runpath/ares"
+    if test -n "$want_ares_path"; then
+      dnl c-ares library path has been specified
+      ares_CPPFLAGS="-I$want_ares_path/include"
+      ares_LDFLAGS="-L$want_ares_path/lib"
+      ares_LIBS="-lcares"
+    else
+      dnl c-ares library path has not been given
+      if test -d "$srcdir/ares"; then
+        dnl c-ares sources embedded in curl tree
+        embedded_ares="yes"
+        AC_CONFIG_SUBDIRS(ares)
+        dnl c-ares has installable configured header files, path
+        dnl inclusion fully done in makefiles for in-tree builds.
+        ares_CPPFLAGS=""
+        ares_LDFLAGS="-L$embedded_ares_builddir"
+        ares_LIBS="-lcares"
+      else
+        dnl c-ares path not specified, use defaults
+        ares_CPPFLAGS=""
+        ares_LDFLAGS=""
+        ares_LIBS="-lcares"
+      fi
+    fi
+    #
+    CPPFLAGS="$ares_CPPFLAGS $clean_CPPFLAGS"
+    LDFLAGS="$ares_LDFLAGS $clean_LDFLAGS"
+    LIBS="$ares_LIBS $clean_LIBS"
+    #
+    if test "$embedded_ares" != "yes"; then
+      dnl check if c-ares new enough when not using an embedded
+      dnl source tree one which normally has not been built yet.
+      AC_MSG_CHECKING([that c-ares is good and recent enough])
+      AC_LINK_IFELSE([
+        AC_LANG_PROGRAM([[
+#include <ares.h>
+          /* set of dummy functions in case c-ares was built with debug */
+          void curl_dofree() { }
+          void curl_sclose() { }
+          void curl_domalloc() { }
+          void curl_docalloc() { }
+          void curl_socket() { }
+        ]],[[
+          ares_channel channel;
+          ares_cancel(channel); /* added in 1.2.0 */
+          ares_process_fd(channel, 0, 0); /* added in 1.4.0 */
+        ]])
+      ],[
+        AC_MSG_RESULT([yes])
+      ],[
+        AC_MSG_RESULT([no])
+        AC_MSG_ERROR([c-ares library defective or too old])
+        dnl restore initial settings
+        CPPFLAGS="$clean_CPPFLAGS"
+        LDFLAGS="$clean_LDFLAGS"
+        LIBS="$clean_LIBS"
+        # prevent usage
+        want_ares="no"
+      ])
+    fi
+    if test "$want_ares" = "yes"; then
+      dnl finally c-ares will be used
+      AC_DEFINE(USE_ARES, 1, [Define to enable c-ares support])
+      AC_SUBST([USE_ARES], [1])
+      curl_ares_msg="enabled"
+    fi
+  fi
+])
+
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/m4/curl-functions.m4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/m4/curl-functions.m4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/m4/curl-functions.m4	2009-10-19 01:16:41.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/m4/curl-functions.m4	2010-01-07 07:00:27.000000000 +0800
@@ -15,17 +15,17 @@
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: curl-functions.m4,v 1.54 2009-10-18 03:37:40 yangtse Exp $
+# $Id: curl-functions.m4,v 1.62 2010-01-06 18:25:10 yangtse Exp $
 #***************************************************************************
 
 # File version for 'aclocal' use. Keep it a single number.
-# serial 54
+# serial 62
 
 
 dnl CURL_INCLUDES_ARPA_INET
 dnl -------------------------------------------------
 dnl Set up variable with list of headers that must be
 dnl included when arpa/inet.h is to be included.
@@ -118,12 +118,17 @@
 # include <stdint.h>
 #endif
 #ifdef HAVE_INTTYPES_H
 # include <inttypes.h>
 #endif
 /* includes end */"
+  case $host_os in
+    irix*)
+      ac_cv_header_stdint_h="no"
+      ;;
+  esac
   AC_CHECK_HEADERS(
     sys/types.h stdint.h inttypes.h,
     [], [], [$curl_includes_inttypes])
 ])
 
 
@@ -1494,13 +1499,16 @@
 dnl CURL_CHECK_FUNC_GETADDRINFO
 dnl -------------------------------------------------
 dnl Verify if getaddrinfo is available, prototyped, can
 dnl be compiled and seems to work. If all of these are
 dnl true, and usage has not been previously disallowed
 dnl with shell variable curl_disallow_getaddrinfo, then
-dnl HAVE_GETADDRINFO will be defined.
+dnl HAVE_GETADDRINFO will be defined. Additionally when
+dnl HAVE_GETADDRINFO gets defined this will also attempt
+dnl to find out if getaddrinfo happens to be threadsafe,
+dnl defining HAVE_GETADDRINFO_THREADSAFE when true.
 
 AC_DEFUN([CURL_CHECK_FUNC_GETADDRINFO], [
   AC_REQUIRE([CURL_INCLUDES_WS2TCPIP])dnl
   AC_REQUIRE([CURL_INCLUDES_STDLIB])dnl
   AC_REQUIRE([CURL_INCLUDES_STRING])dnl
   AC_REQUIRE([CURL_INCLUDES_SYS_SOCKET])dnl
@@ -1508,12 +1516,13 @@
   #
   tst_links_getaddrinfo="unknown"
   tst_proto_getaddrinfo="unknown"
   tst_compi_getaddrinfo="unknown"
   tst_works_getaddrinfo="unknown"
   tst_allow_getaddrinfo="unknown"
+  tst_tsafe_getaddrinfo="unknown"
   #
   AC_MSG_CHECKING([if getaddrinfo can be linked])
   AC_LINK_IFELSE([
     AC_LANG_PROGRAM([[
       $curl_includes_ws2tcpip
       $curl_includes_sys_socket
@@ -1622,12 +1631,88 @@
     AC_DEFINE_UNQUOTED(HAVE_GETADDRINFO, 1,
       [Define to 1 if you have a working getaddrinfo function.])
     ac_cv_func_getaddrinfo="yes"
   else
     AC_MSG_RESULT([no])
     ac_cv_func_getaddrinfo="no"
+    ac_cv_func_getaddrinfo_threadsafe="no"
+  fi
+  #
+  if test "$ac_cv_func_getaddrinfo" = "yes"; then
+    AC_MSG_CHECKING([if getaddrinfo is threadsafe])
+    case $host_os in
+      aix[[1234]].* | aix5.[[01]].*)
+        dnl aix 5.1 and older
+        tst_tsafe_getaddrinfo="no"
+        ;;
+      aix*)
+        dnl aix 5.2 and newer
+        tst_tsafe_getaddrinfo="yes"
+        ;;
+      darwin[[12345]].*)
+        dnl darwin 5.0 and mac os x 10.1.X and older
+        tst_tsafe_getaddrinfo="no"
+        ;;
+      darwin*)
+        dnl darwin 6.0 and mac os x 10.2.X and newer
+        tst_tsafe_getaddrinfo="yes"
+        ;;
+      freebsd[[1234]].* | freebsd5.[[1234]]*)
+        dnl freebsd 5.4 and older
+        tst_tsafe_getaddrinfo="no"
+        ;;
+      freebsd*)
+        dnl freebsd 5.5 and newer
+        tst_tsafe_getaddrinfo="yes"
+        ;;
+      hpux[[123456789]].* | hpux10.* | hpux11.0* | hpux11.10*)
+        dnl hpux 11.10 and older
+        tst_tsafe_getaddrinfo="no"
+        ;;
+      hpux*)
+        dnl hpux 11.11 and newer
+        tst_tsafe_getaddrinfo="yes"
+        ;;
+      netbsd[[123]].*)
+        dnl netbsd 3.X and older
+        tst_tsafe_getaddrinfo="no"
+        ;;
+      netbsd*)
+        dnl netbsd 4.X and newer
+        tst_tsafe_getaddrinfo="yes"
+        ;;
+      *bsd*)
+        dnl All other bsd's
+        tst_tsafe_getaddrinfo="no"
+        ;;
+      solaris2*)
+        dnl solaris which have it
+        tst_tsafe_getaddrinfo="yes"
+        ;;
+    esac
+    if test "$tst_tsafe_getaddrinfo" = "unknown"; then
+      CURL_CHECK_DEF_CC([h_errno], [
+        $curl_includes_ws2tcpip
+        $curl_includes_sys_socket
+        $curl_includes_netdb
+        ], [silent])
+      if test "$curl_cv_have_def_h_errno" = "no"; then
+        tst_tsafe_getaddrinfo="no"
+      fi
+    fi
+    if test "$tst_tsafe_getaddrinfo" = "unknown"; then
+      tst_tsafe_getaddrinfo="yes"
+    fi
+    AC_MSG_RESULT([$tst_tsafe_getaddrinfo])
+    if test "$tst_tsafe_getaddrinfo" = "yes"; then
+      AC_DEFINE_UNQUOTED(HAVE_GETADDRINFO_THREADSAFE, 1,
+        [Define to 1 if the getaddrinfo function is threadsafe.])
+      ac_cv_func_getaddrinfo_threadsafe="yes"
+    else
+      ac_cv_func_getaddrinfo_threadsafe="no"
+    fi
   fi
 ])
 
 
 dnl CURL_CHECK_FUNC_GETHOSTBYADDR
 dnl -------------------------------------------------
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/m4/curl-reentrant.m4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/m4/curl-reentrant.m4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/m4/curl-reentrant.m4	2009-10-02 05:17:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/m4/curl-reentrant.m4	2009-11-18 00:43:32.000000000 +0800
@@ -15,13 +15,13 @@
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: curl-reentrant.m4,v 1.6 2009-09-29 16:34:04 yangtse Exp $
+# $Id: curl-reentrant.m4,v 1.7 2009-11-14 18:51:37 yangtse Exp $
 #***************************************************************************
 
 # File version for 'aclocal' use. Keep it a single number.
 # serial 6
 
 dnl Note 1
@@ -425,23 +425,46 @@
 dnl -------------------------------------------------
 dnl Checks if the preprocessor _REENTRANT definition
 dnl must be unconditionally done for this platform.
 dnl Internal macro for CURL_CONFIGURE_REENTRANT.
 
 AC_DEFUN([CURL_CHECK_NEED_REENTRANT_SYSTEM], [
-  case $host in
-    *-*-solaris*)
+  case $host_os in
+    solaris*)
       tmp_need_reentrant="yes"
       ;;
     *)
       tmp_need_reentrant="no"
       ;;
   esac
 ])
 
 
+dnl CURL_CHECK_NEED_THREAD_SAFE_SYSTEM
+dnl -------------------------------------------------
+dnl Checks if the preprocessor _THREAD_SAFE definition
+dnl must be unconditionally done for this platform.
+dnl Internal macro for CURL_CONFIGURE_THREAD_SAFE.
+
+AC_DEFUN([CURL_CHECK_NEED_THREAD_SAFE_SYSTEM], [
+  case $host_os in
+    aix[[123]].* | aix4.[[012]].*)
+      dnl aix 4.2 and older
+      tmp_need_thread_safe="no"
+      ;;
+    aix*)
+      dnl AIX 4.3 and newer
+      tmp_need_thread_safe="yes"
+      ;;
+    *)
+      tmp_need_thread_safe="no"
+      ;;
+  esac
+])
+
+
 dnl CURL_CONFIGURE_FROM_NOW_ON_WITH_REENTRANT
 dnl -------------------------------------------------
 dnl This macro ensures that configuration tests done
 dnl after this will execute with preprocessor symbol
 dnl _REENTRANT defined. This macro also ensures that
 dnl the generated config file defines NEED_REENTRANT
@@ -456,12 +479,32 @@
 #  define _REENTRANT
 #endif
 _EOF
 ])
 
 
+dnl CURL_CONFIGURE_FROM_NOW_ON_WITH_THREAD_SAFE
+dnl -------------------------------------------------
+dnl This macro ensures that configuration tests done
+dnl after this will execute with preprocessor symbol
+dnl _THREAD_SAFE defined. This macro also ensures that
+dnl the generated config file defines NEED_THREAD_SAFE
+dnl and that in turn setup.h will define _THREAD_SAFE.
+dnl Internal macro for CURL_CONFIGURE_THREAD_SAFE.
+
+AC_DEFUN([CURL_CONFIGURE_FROM_NOW_ON_WITH_THREAD_SAFE], [
+AC_DEFINE(NEED_THREAD_SAFE, 1,
+  [Define to 1 if _THREAD_SAFE preprocessor symbol must be defined.])
+cat >>confdefs.h <<_EOF
+#ifndef _THREAD_SAFE
+#  define _THREAD_SAFE
+#endif
+_EOF
+])
+
+
 dnl CURL_CONFIGURE_REENTRANT
 dnl -------------------------------------------------
 dnl This first checks if the preprocessor _REENTRANT
 dnl symbol is already defined. If it isn't currently
 dnl defined a set of checks are performed to verify
 dnl if its definition is required to make visible to
@@ -515,7 +558,61 @@
     AC_MSG_RESULT([yes])
   else
     AC_MSG_RESULT([no])
   fi
   #
 ])
+
+
+dnl CURL_CONFIGURE_THREAD_SAFE
+dnl -------------------------------------------------
+dnl This first checks if the preprocessor _THREAD_SAFE
+dnl symbol is already defined. If it isn't currently
+dnl defined a set of checks are performed to verify
+dnl if its definition is required. Finally, if
+dnl _THREAD_SAFE is already defined or needed it takes
+dnl care of making adjustments necessary to ensure
+dnl that it is defined equally for further configure
+dnl tests and generated config file.
+
+AC_DEFUN([CURL_CONFIGURE_THREAD_SAFE], [
+  AC_PREREQ([2.50])dnl
+  #
+  AC_MSG_CHECKING([if _THREAD_SAFE is already defined])
+  AC_COMPILE_IFELSE([
+    AC_LANG_PROGRAM([[
+    ]],[[
+#ifdef _THREAD_SAFE
+      int dummy=1;
+#else
+      force compilation error
+#endif
+    ]])
+  ],[
+    AC_MSG_RESULT([yes])
+    tmp_thread_safe_initially_defined="yes"
+  ],[
+    AC_MSG_RESULT([no])
+    tmp_thread_safe_initially_defined="no"
+  ])
+  #
+  if test "$tmp_thread_safe_initially_defined" = "no"; then
+    AC_MSG_CHECKING([if _THREAD_SAFE is actually needed])
+    CURL_CHECK_NEED_THREAD_SAFE_SYSTEM
+    if test "$tmp_need_thread_safe" = "yes"; then
+      AC_MSG_RESULT([yes])
+    else
+      AC_MSG_RESULT([no])
+    fi
+  fi
+  #
+  AC_MSG_CHECKING([if _THREAD_SAFE is onwards defined])
+  if test "$tmp_thread_safe_initially_defined" = "yes" ||
+    test "$tmp_need_thread_safe" = "yes"; then
+    CURL_CONFIGURE_FROM_NOW_ON_WITH_THREAD_SAFE
+    AC_MSG_RESULT([yes])
+  else
+    AC_MSG_RESULT([no])
+  fi
+  #
+])
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/m4/libtool.m4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/m4/libtool.m4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/m4/libtool.m4	2009-11-04 20:25:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/m4/libtool.m4	2010-01-27 03:12:11.000000000 +0800
@@ -2442,13 +2442,13 @@
 # No shared lib support for Linux oldld, aout, or coff.
 linux*oldld* | linux*aout* | linux*coff*)
   dynamic_linker=no
   ;;
 
 # This must be Linux ELF.
-linux* | k*bsd*-gnu)
+linux* | k*bsd*-gnu | kopensolaris*-gnu)
   version_type=linux
   need_lib_prefix=no
   need_version=no
   library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
   soname_spec='${libname}${release}${shared_ext}$major'
   finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
@@ -2482,12 +2482,24 @@
   # most powerpc-linux boxes support dynamic linking these days and
   # people can always --disable-shared, the test was removed, and we
   # assume the GNU/Linux dynamic linker is in use.
   dynamic_linker='GNU/Linux ld.so'
   ;;
 
+netbsdelf*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  dynamic_linker='NetBSD ld.elf_so'
+  ;;
+
 netbsd*)
   version_type=sunos
   need_lib_prefix=no
   need_version=no
   if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
     library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
@@ -3069,17 +3081,17 @@
   *) libmagic=never-match;;
   esac
   lt_cv_deplibs_check_method=pass_all
   ;;
 
 # This must be Linux ELF.
-linux* | k*bsd*-gnu)
+linux* | k*bsd*-gnu | kopensolaris*-gnu)
   lt_cv_deplibs_check_method=pass_all
   ;;
 
-netbsd*)
+netbsd* | netbsdelf*-gnu)
   if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
     lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so\.[[0-9]]+\.[[0-9]]+|_pic\.a)$'
   else
     lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so|_pic\.a)$'
   fi
   ;;
@@ -3690,13 +3702,13 @@
 	    # CC pic flag -KPIC is the default.
 	    ;;
 	  *)
 	    ;;
 	esac
 	;;
-      linux* | k*bsd*-gnu)
+      linux* | k*bsd*-gnu | kopensolaris*-gnu)
 	case $cc_basename in
 	  KCC*)
 	    # KAI C++ Compiler
 	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'
 	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
 	    ;;
@@ -3754,13 +3766,13 @@
 	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'
 	    ;;
 	  *)
 	    ;;
 	esac
 	;;
-      netbsd*)
+      netbsd* | netbsdelf*-gnu)
 	;;
       *qnx* | *nto*)
         # QNX uses GNU C++, but need to define -shared option too, otherwise
         # it will coredump.
         _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'
         ;;
@@ -3974,13 +3986,13 @@
     irix5* | irix6* | nonstopux*)
       _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
       # PIC (with -KPIC) is the default.
       _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'
       ;;
 
-    linux* | k*bsd*-gnu)
+    linux* | k*bsd*-gnu | kopensolaris*-gnu)
       case $cc_basename in
       # old Intel for x86_64 which still supported -KPIC.
       ecc*)
 	_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
 	_LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
 	_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'
@@ -4179,12 +4191,15 @@
   pw32*)
     _LT_TAGVAR(export_symbols_cmds, $1)="$ltdll_cmds"
   ;;
   cygwin* | mingw* | cegcc*)
     _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\([[^ ]]*\)/\1 DATA/;/^.*[[ ]]__nm__/s/^.*[[ ]]__nm__\([[^ ]]*\)[[ ]][[^ ]]*/\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\'' | sort | uniq > $export_symbols'
   ;;
+  linux* | k*bsd*-gnu)
+    _LT_TAGVAR(link_all_deplibs, $1)=no
+  ;;
   *)
     _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
   ;;
   esac
   _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']
 ], [
@@ -4243,12 +4258,15 @@
     # we just hope/assume this is gcc and not c89 (= MSVC++)
     with_gnu_ld=yes
     ;;
   openbsd*)
     with_gnu_ld=no
     ;;
+  linux* | k*bsd*-gnu)
+    _LT_TAGVAR(link_all_deplibs, $1)=no
+    ;;
   esac
 
   _LT_TAGVAR(ld_shlibs, $1)=yes
   if test "$with_gnu_ld" = yes; then
     # If archive_cmds runs LD, not CC, wlarc should be empty
     wlarc='${wl}'
@@ -4264,12 +4282,13 @@
       _LT_TAGVAR(whole_archive_flag_spec, $1)="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
     else
       _LT_TAGVAR(whole_archive_flag_spec, $1)=
     fi
     supports_anon_versioning=no
     case `$LD -v 2>&1` in
+      *GNU\ gold*) supports_anon_versioning=yes ;;
       *\ [[01]].* | *\ 2.[[0-9]].* | *\ 2.10.*) ;; # catch versions < 2.11
       *\ 2.11.93.0.2\ *) supports_anon_versioning=yes ;; # RH7.3 ...
       *\ 2.11.92.0.12\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...
       *\ 2.11.*) ;; # other 2.11 versions
       *) supports_anon_versioning=yes ;;
     esac
@@ -4355,13 +4374,13 @@
       # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
       # time.  Moving up from 0x10000000 also allows more sbrk(2) space.
       _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
       _LT_TAGVAR(archive_expsym_cmds, $1)='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
       ;;
 
-    gnu* | linux* | tpf* | k*bsd*-gnu)
+    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)
       tmp_diet=no
       if test "$host_os" = linux-dietlibc; then
 	case $cc_basename in
 	  diet\ *) tmp_diet=yes;;	# linux-dietlibc with static linking (!diet-dyn)
 	esac
       fi
@@ -4425,13 +4444,13 @@
 	esac
       else
         _LT_TAGVAR(ld_shlibs, $1)=no
       fi
       ;;
 
-    netbsd*)
+    netbsd* | netbsdelf*-gnu)
       if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
 	_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
 	wlarc=
       else
 	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
 	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
@@ -4600,12 +4619,13 @@
 	  ;;
 	esac
 	shared_flag='-shared'
 	if test "$aix_use_runtimelinking" = yes; then
 	  shared_flag="$shared_flag "'${wl}-G'
 	fi
+	_LT_TAGVAR(link_all_deplibs, $1)=no
       else
 	# not using gcc
 	if test "$host_cpu" = ia64; then
 	# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
 	# chokes on -Wl,-G. The following line is correct:
 	  shared_flag='-G'
@@ -4838,13 +4858,13 @@
       _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
       _LT_TAGVAR(hardcode_libdir_separator, $1)=:
       _LT_TAGVAR(inherit_rpath, $1)=yes
       _LT_TAGVAR(link_all_deplibs, $1)=yes
       ;;
 
-    netbsd*)
+    netbsd* | netbsdelf*-gnu)
       if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
 	_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
       else
 	_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
       fi
       _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
@@ -5838,13 +5858,13 @@
         esac
         _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
         _LT_TAGVAR(hardcode_libdir_separator, $1)=:
         _LT_TAGVAR(inherit_rpath, $1)=yes
         ;;
 
-      linux* | k*bsd*-gnu)
+      linux* | k*bsd*-gnu | kopensolaris*-gnu)
         case $cc_basename in
           KCC*)
 	    # Kuck and Associates, Inc. (KAI) C++ Compiler
 
 	    # KCC will only create a shared library if the output file
 	    # ends with ".so" (or ".sl" for HP-UX), so rename the library
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/m4/ltversion.m4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/m4/ltversion.m4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/m4/ltversion.m4	2009-11-04 20:25:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/m4/ltversion.m4	2010-01-27 03:12:11.000000000 +0800
@@ -6,18 +6,18 @@
 # This file is free software; the Free Software Foundation gives
 # unlimited permission to copy and/or distribute it, with or without
 # modifications, as long as this notice is preserved.
 
 # Generated from ltversion.in.
 
-# serial 3012 ltversion.m4
+# serial 3017 ltversion.m4
 # This file is part of GNU Libtool
 
-m4_define([LT_PACKAGE_VERSION], [2.2.6])
-m4_define([LT_PACKAGE_REVISION], [1.3012])
+m4_define([LT_PACKAGE_VERSION], [2.2.6b])
+m4_define([LT_PACKAGE_REVISION], [1.3017])
 
 AC_DEFUN([LTVERSION_VERSION],
-[macro_version='2.2.6'
-macro_revision='1.3012'
+[macro_version='2.2.6b'
+macro_revision='1.3017'
 _LT_DECL(, macro_version, 0, [Which release of libtool.m4 was used?])
 _LT_DECL(, macro_revision, 0)
 ])
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/Makefile /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/Makefile
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/Makefile	2009-11-04 20:35:39.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/Makefile	2010-02-09 18:08:03.000000000 +0800
@@ -15,13 +15,13 @@
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: Makefile.dist,v 1.49 2009-10-06 14:14:13 yangtse Exp $
+# $Id: Makefile.dist,v 1.50 2009-11-23 16:48:32 yangtse Exp $
 ###########################################################################
 
 VC=vc6
 
 all:
 	./configure
@@ -260,21 +260,31 @@
 
 linux: all
 
 linux-ssl: ssl
 
 
-vc8:
-	@echo "generate VC8 makefiles"
+vc8: lib/Makefile.vc8 src/Makefile.vc8
+
+lib/Makefile.vc8: lib/Makefile.vc6
+	@echo "generate $@"
 	@sed -e "s#/GX /DWIN32 /YX#/EHsc /DWIN32#" -e "s#/GZ#/RTC1#" -e "s/wsock32.lib/wsock32.lib bufferoverflowu.lib/g" -e "s/VC6/VC8/g" lib/Makefile.vc6 > lib/Makefile.vc8
+
+src/Makefile.vc8: src/Makefile.vc6
+	@echo "generate $@"
 	@sed -e "s#/GX /DWIN32 /YX#/EHsc /DWIN32#" -e "s#/GZ#/RTC1#" -e "s/wsock32.lib/wsock32.lib bufferoverflowu.lib/g" -e "s/VC6/VC8/g" src/Makefile.vc6 > src/Makefile.vc8
 
 # VC9 makefiles are for use with VS2008
-vc9:
-	@echo "generate VC9 makefiles"
+vc9: lib/Makefile.vc9 src/Makefile.vc9
+
+lib/Makefile.vc9: lib/Makefile.vc6
+	@echo "generate $@"
 	@sed -e "s#/GX /DWIN32 /YX#/EHsc /DWIN32#" -e "s#/GZ#/RTC1#" -e "s/wsock32.lib/ws2_32.lib/g" -e "s/vc6/vc9/g" -e "s/VC6/VC9/g" lib/Makefile.vc6 > lib/Makefile.vc9
+
+src/Makefile.vc9: src/Makefile.vc6
+	@echo "generate $@"
 	@sed -e "s#/GX /DWIN32 /YX#/EHsc /DWIN32#" -e "s#/GZ#/RTC1#" -e "s/wsock32.lib/ws2_32.lib/g" -e "s/vc6/vc9/g" -e "s/VC6/VC9/g" src/Makefile.vc6 > src/Makefile.vc9
 
 ca-bundle: lib/mk-ca-bundle.pl
 	@echo "generate a fresh ca-bundle.crt"
 	@perl $< -b -l -u lib/ca-bundle.crt
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/Makefile.in	2009-11-04 20:35:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/Makefile.in	2010-02-09 18:07:32.000000000 +0800
@@ -60,14 +60,14 @@
 POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
 DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
 	$(srcdir)/Makefile.in $(srcdir)/curl-config.in \
 	$(srcdir)/libcurl.pc.in $(top_srcdir)/configure COPYING \
-	ChangeLog compile config.guess config.sub depcomp install-sh \
-	ltmain.sh missing mkinstalldirs
+	compile config.guess config.sub depcomp install-sh ltmain.sh \
+	missing mkinstalldirs
 subdir = .
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/m4/curl-compilers.m4 \
 	$(top_srcdir)/m4/curl-confopts.m4 \
 	$(top_srcdir)/m4/curl-functions.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
@@ -127,26 +127,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -157,13 +162,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -223,12 +227,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/AIX/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/AIX/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/AIX/Makefile.in	2009-11-04 20:26:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/AIX/Makefile.in	2010-02-05 05:42:20.000000000 +0800
@@ -76,26 +76,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -106,13 +111,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -172,12 +176,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -244,15 +249,15 @@
 	    *$$dep*) \
 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
 		&& exit 0; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  packages/AIX/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  packages/AIX/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  packages/AIX/Makefile
+	  $(AUTOMAKE) --foreign  packages/AIX/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/AIX/RPM/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/AIX/RPM/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/AIX/RPM/Makefile.in	2009-11-04 20:26:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/AIX/RPM/Makefile.in	2010-02-05 05:42:20.000000000 +0800
@@ -68,26 +68,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -98,13 +103,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -164,12 +168,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -235,15 +240,15 @@
 	    *$$dep*) \
 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
 		&& exit 0; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  packages/AIX/RPM/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  packages/AIX/RPM/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  packages/AIX/RPM/Makefile
+	  $(AUTOMAKE) --foreign  packages/AIX/RPM/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/EPM/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/EPM/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/EPM/Makefile.in	2009-11-04 20:26:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/EPM/Makefile.in	2010-02-05 05:42:20.000000000 +0800
@@ -68,26 +68,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -98,13 +103,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -164,12 +168,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Linux/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Linux/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Linux/Makefile.in	2009-11-04 20:26:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Linux/Makefile.in	2010-02-05 05:42:20.000000000 +0800
@@ -76,26 +76,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -106,13 +111,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -172,12 +176,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -243,15 +248,15 @@
 	    *$$dep*) \
 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
 		&& exit 0; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  packages/Linux/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  packages/Linux/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  packages/Linux/Makefile
+	  $(AUTOMAKE) --foreign  packages/Linux/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Linux/RPM/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Linux/RPM/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Linux/RPM/Makefile.in	2009-11-04 20:26:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Linux/RPM/Makefile.in	2010-02-05 05:42:20.000000000 +0800
@@ -68,26 +68,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -98,13 +103,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -164,12 +168,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -235,15 +240,15 @@
 	    *$$dep*) \
 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
 		&& exit 0; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  packages/Linux/RPM/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  packages/Linux/RPM/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  packages/Linux/RPM/Makefile
+	  $(AUTOMAKE) --foreign  packages/Linux/RPM/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Makefile.in	2009-11-04 20:26:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Makefile.in	2010-02-05 05:42:20.000000000 +0800
@@ -76,26 +76,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -106,13 +111,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -172,12 +176,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -273,15 +278,15 @@
 	    *$$dep*) \
 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
 		&& exit 0; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  packages/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  packages/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  packages/Makefile
+	  $(AUTOMAKE) --foreign  packages/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/OS400/ccsidcurl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/OS400/ccsidcurl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/OS400/ccsidcurl.c	2009-09-01 15:00:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/OS400/ccsidcurl.c	2009-12-23 06:15:59.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: ccsidcurl.c,v 1.16 2009-08-31 15:22:16 patrickm Exp $
+ * $Id: ccsidcurl.c,v 1.17 2009-12-21 12:26:48 patrickm Exp $
  *
  ***************************************************************************/
 
 /* CCSID API wrappers for OS/400. */
 
 #include <iconv.h>
@@ -1027,13 +1027,13 @@
      the same message; but since threadsafeness is not handled here,
      this may occur (and we don't care!). */
 
   if (testwarn) {
     testwarn = 0;
 
-    if ((int) STRING_LAST != (int) STRING_SOCKS5_GSSAPI_SERVICE + 1)
+    if ((int) STRING_LAST != (int) STRING_MAIL_RCPT + 1)
       curl_mfprintf(stderr,
        "*** WARNING: curl_easy_setopt_ccsid() should be reworked ***\n");
     }
 
   data = (struct SessionHandle *) curl;
   va_start(arg, tag);
@@ -1080,12 +1080,14 @@
   case CURLOPT_PROXYUSERNAME:
   case CURLOPT_PROXYPASSWORD:
   case CURLOPT_NOPROXY:
   /* SSH2 not (yet) implemented on OS400. */
   /* case CURLOPT_SSH_KNOWNHOSTS: */
   case CURLOPT_SOCKS5_GSSAPI_SERVICE:
+  case CURLOPT_MAIL_FROM:
+  case CURLOPT_MAIL_RCPT:
     s = va_arg(arg, char *);
     ccsid = va_arg(arg, unsigned int);
 
     if (s) {
       s = dynconvert(ASCII_CCSID, s, -1, ccsid);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/OS400/curl.inc.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/OS400/curl.inc.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/OS400/curl.inc.in	2009-08-12 05:22:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/OS400/curl.inc.in	2009-12-23 06:15:59.000000000 +0800
@@ -15,13 +15,13 @@
       * copies of the Software, and permit persons to whom the Software is
       * furnished to do so, under the terms of the COPYING file.
       *
       * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF
       * ANY KIND, either express or implied.
       *
-      * $Id: curl.inc.in,v 1.23 2009-08-11 14:07:08 patrickm Exp $
+      * $Id: curl.inc.in,v 1.24 2009-12-21 12:26:48 patrickm Exp $
       *
       **************************************************************************
       *
       /if not defined(CURL_CURL_INC_)
       /define CURL_CURL_INC_
       *
@@ -518,35 +518,47 @@
      d  CURLFTPMETHOD_NOCWD...
      d                 c                   2
      d  CURLFTPMETHOD_SINGLECWD...
      d                 c                   3
       *
      d  CURLPROTO_HTTP...
-     d                 c                   X'0001'
+     d                 c                   X'00000001'
      d  CURLPROTO_HTTPS...
-     d                 c                   X'0002'
+     d                 c                   X'00000002'
      d  CURLPROTO_FTP...
-     d                 c                   X'0004'
+     d                 c                   X'00000004'
      d  CURLPROTO_FTPS...
-     d                 c                   X'0008'
+     d                 c                   X'00000008'
      d  CURLPROTO_SCP...
-     d                 c                   X'0010'
+     d                 c                   X'00000010'
      d  CURLPROTO_SFTP...
-     d                 c                   X'0020'
+     d                 c                   X'00000020'
      d  CURLPROTO_TELNET...
-     d                 c                   X'0040'
+     d                 c                   X'00000040'
      d  CURLPROTO_LDAP...
-     d                 c                   X'0080'
+     d                 c                   X'00000080'
      d  CURLPROTO_LDAPS...
-     d                 c                   X'0100'
+     d                 c                   X'00000100'
      d  CURLPROTO_DICT...
-     d                 c                   X'0200'
+     d                 c                   X'00000200'
      d  CURLPROTO_FILE...
-     d                 c                   X'0400'
+     d                 c                   X'00000400'
      d  CURLPROTO_TFTP...
-     d                 c                   X'0800'
+     d                 c                   X'00000800'
+     d  CURLPROTO_IMAP...
+     d                 c                   X'00001000'
+     d  CURLPROTO_IMAPS...
+     d                 c                   X'00002000'
+     d  CURLPROTO_POP3...
+     d                 c                   X'00004000'
+     d  CURLPROTO_POP3S...
+     d                 c                   X'00008000'
+     d  CURLPROTO_SMTP...
+     d                 c                   X'00010000'
+     d  CURLPROTO_SMTPS...
+     d                 c                   X'00020000'
       *
      d CURLoption      s             10i 0 based(######ptr######)               Enum
      d  CURLOPT_FILE   c                   10001
      d  CURLOPT_WRITEDATA...
      d                 c                   10001
      d  CURLOPT_URL    c                   10002
@@ -874,13 +886,19 @@
      d  CURLOPT_SSH_KNOWNHOSTS...
      d                 c                   10183
      d  CURLOPT_SSH_KEYFUNCTION...
      d                 c                   20184
      d  CURLOPT_SSH_KEYDATA...
      d                 c                   10185
+     d  CURLOPT_MAIL_FROM...
+     d                 c                   10186
+     d  CURLOPT_MAIL_RCPT...
+     d                 c                   10187
       *
+     d  CURLOPT_SERVER_RESPONSE_TIMEOUT...
+     d                 c                   00112
      d  CURLOPT_POST301...
      d                 c                   00161                                Obsolescent
       *
      d CURLFORMcode    s             10i 0 based(######ptr######)               Enum
      d  CURL_FORMADD_OK...
      d                 c                   0
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/OS400/README.OS400 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/OS400/README.OS400
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/OS400/README.OS400	2009-02-18 16:01:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/OS400/README.OS400	2009-12-23 06:15:59.000000000 +0800
@@ -1,7 +1,7 @@
-$Id: README.OS400,v 1.12 2009-02-17 16:16:07 patrickm Exp $
+$Id: README.OS400,v 1.13 2009-12-21 12:26:48 patrickm Exp $
 
 Implementation notes:
 
   This is a true OS/400 implementation, not a PASE implementation (for PASE,
 use AIX implementation).
 
@@ -104,12 +104,14 @@
         CURLOPT_USERNAME
         CURLOPT_PASSWORD
         CURLOPT_PROXYUSERNAME
         CURLOPT_PROXYPASSWORD
         CURLOPT_NOPROXY
         CURLOPT_SOCKS5_GSSAPI_SERVICE
+	CURLOPT_MAIL_FROM
+	CURLOPT_MAIL_RCPT
   Else it is the same as for curl_easy_setopt().
   Note that CURLOPT_ERRORBUFFER is not in the list above, since it gives the
 address of an (empty) character buffer, not the address of a string.
 CURLOPT_POSTFIELDS stores the address of static binary data (of type void *) and
 thus is not converted. If CURLOPT_COPYPOSTFIELDS is issued after
 CURLOPT_POSTFIELDSIZE != -1, the data size is adjusted according to the
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Solaris/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Solaris/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Solaris/Makefile.in	2009-11-04 20:26:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Solaris/Makefile.in	2010-02-05 05:42:20.000000000 +0800
@@ -71,26 +71,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -101,13 +106,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -167,12 +171,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -242,15 +247,15 @@
 	    *$$dep*) \
 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
 		&& exit 0; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  packages/Solaris/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  packages/Solaris/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  packages/Solaris/Makefile
+	  $(AUTOMAKE) --foreign  packages/Solaris/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Symbian/group/curl.pkg /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Symbian/group/curl.pkg
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Symbian/group/curl.pkg	2008-04-26 06:49:18.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Symbian/group/curl.pkg	2009-11-13 06:15:48.000000000 +0800
@@ -3,15 +3,15 @@
 
 ;Language - standard language definitions
 &EN
 
 ;Header - standard sis file header including version number
 ;Version scheme: curl's major, curl's minor, curl's subminor*100 + build number
-; e.g. The third Symbian package of curl ver. 7.18.2 would have a SIS package
-; version of 7, 18, 203
-#{"curl"}, (0xF0206442), 7, 18, <please_update_version>, TYPE=SA
+; e.g. The third Symbian package of curl ver. 7.19.7 would have a SIS package
+; version of 7, 19, 703
+#{"curl"}, (0xF0206442), 7, 19, <please_update_version>, TYPE=SA
 
 ; Vendor name
 %{"Standard libcurl package"}
 :"Standard libcurl package"
 
 ; Embedded component
@@ -20,7 +20,7 @@
 ; A dependency on P.I.P.S. and the stdio server are probably good to have here
 ;(0x20009A80), *, *, *, {"P.I.P.S. for Series 60 3rd ed."}
 ;(0x20009A81), *, *, *, {"P.I.P.S. for UIQ 3"}
 ;(0x20009AA2), *, *, *, {"Symbian OS STDIOSERVER"}
 
 ;Files - standard file specifications
-"epoc32\release\armv5\urel\curl.exe" - "$:\sys\bin\curl.exe"
+"\epoc32\release\armv5\urel\curl.exe" - "$:\sys\bin\curl.exe"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Symbian/group/libcurl.mmp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Symbian/group/libcurl.mmp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Symbian/group/libcurl.mmp	2009-10-02 05:17:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Symbian/group/libcurl.mmp	2010-01-27 03:11:39.000000000 +0800
@@ -23,19 +23,19 @@
 SOURCE \
   file.c timeval.c base64.c hostip.c progress.c formdata.c  \
   cookie.c http.c sendf.c ftp.c url.c dict.c if2ip.c speedcheck.c   \
   ldap.c ssluse.c version.c getenv.c escape.c mprintf.c telnet.c    \
   netrc.c getinfo.c transfer.c strequal.c easy.c security.c krb4.c  \
   krb5.c memdebug.c http_chunks.c strtok.c connect.c llist.c hash.c \
-  multi.c content_encoding.c share.c http_digest.c md5.c        \
+  multi.c content_encoding.c share.c http_digest.c md5.c curl_rand.c \
   http_negotiate.c http_ntlm.c inet_pton.c strtoofft.c strerror.c   \
   hostares.c hostasyn.c hostip4.c hostip6.c hostsyn.c hostthre.c    \
   inet_ntop.c parsedate.c select.c gtls.c sslgen.c tftp.c splay.c   \
   strdup.c socks.c ssh.c nss.c qssl.c rawstr.c curl_addrinfo.c      \
   socks_gssapi.c socks_sspi.c curl_sspi.c slist.c nonblock.c        \
-  curl_rand.c curl_memrchr.c
+  curl_memrchr.c imap.c pop3.c smtp.c pingpong.c rtsp.c curl_threads.c
 
 USERINCLUDE   ../../../lib ../../../include/curl
 #ifdef ENABLE_SSL
 USERINCLUDE /epoc32/include/osextensions/stdapis
 // Older versions of the SDK need this instead:
 //USERINCLUDE /epoc32/include/stdapis/openssl 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Symbian/group/libcurl.pkg /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Symbian/group/libcurl.pkg
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Symbian/group/libcurl.pkg	2008-04-26 06:49:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Symbian/group/libcurl.pkg	2009-11-13 06:15:48.000000000 +0800
@@ -3,20 +3,20 @@
 
 ;Language - standard language definitions
 &EN
 
 ;Header - standard sis file header including version number
 ;Version scheme: curl's major, curl's minor, curl's subminor*100 + build number
-; e.g. The third Symbian package of curl ver. 7.18.2 would have a SIS package
-; version of 7, 18, 203
-#{"libcurl"}, (0xF0206D00), 7, 18, <please_update_version>, TYPE=SA
+; e.g. The third Symbian package of curl ver. 7.19.7 would have a SIS package
+; version of 7, 19, 703
+#{"libcurl"}, (0xF0206D00), 7, 19, <please_update_version>, TYPE=SA
 
 ; Vendor name
 %{"Standard curl package"}
 :"Standard curl package"
 
 ; A dependency on P.I.P.S. is probably a good idea to add here
 ;(0x20009A80), *, *, *, {"P.I.P.S. for Series 60 3rd ed."}
 ;(0x20009A81), *, *, *, {"P.I.P.S. for UIQ 3"}
 
 ;Files - standard file specifications
-"epoc32\release\armv5\urel\libcurl.dll" - "$:\sys\bin\libcurl.dll"
+"\epoc32\release\armv5\urel\libcurl.dll" - "$:\sys\bin\libcurl.dll"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/TPF/curl.mak /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/TPF/curl.mak
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/TPF/curl.mak	2009-10-02 05:17:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/TPF/curl.mak	2010-01-27 03:11:39.000000000 +0800
@@ -35,12 +35,13 @@
 C_SRC += content_encoding.c
 C_SRC += cookie.c
 C_SRC += curl_addrinfo.c
 C_SRC += curl_memrchr.c
 C_SRC += curl_rand.c
 C_SRC += curl_sspi.c
+C_SRC += curl_threads.c
 C_SRC += dict.c
 C_SRC += easy.c
 C_SRC += escape.c
 C_SRC += file.c
 C_SRC += formdata.c
 C_SRC += ftp.c
@@ -58,12 +59,13 @@
 C_SRC += http.c
 C_SRC += http_chunks.c
 C_SRC += http_digest.c
 C_SRC += http_negotiate.c
 C_SRC += http_ntlm.c
 C_SRC += if2ip.c
+C_SRC += imap.c
 C_SRC += inet_ntop.c
 C_SRC += inet_pton.c
 C_SRC += krb4.c
 C_SRC += krb5.c
 C_SRC += ldap.c
 C_SRC += llist.c
@@ -72,20 +74,24 @@
 C_SRC += mprintf.c
 C_SRC += multi.c
 C_SRC += netrc.c
 C_SRC += nonblock.c
 C_SRC += nss.c
 C_SRC += parsedate.c
+C_SRC += pop3.c
+C_SRC += pingpong.c
 C_SRC += progress.c
 C_SRC += qssl.c
 C_SRC += rawstr.c
+C_SRC += rtsp.c
 C_SRC += security.c
 C_SRC += select.c
 C_SRC += sendf.c
 C_SRC += share.c
 C_SRC += slist.c
+C_SRC += smtp.c
 C_SRC += socks.c
 C_SRC += socks_gssapi.c
 C_SRC += socks_sspi.c
 C_SRC += speedcheck.c
 C_SRC += splay.c
 C_SRC += ssh.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/vms: axp
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/vms/build_vms.com /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/vms/build_vms.com
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/vms/build_vms.com	2009-10-29 04:21:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/vms/build_vms.com	2010-01-01 22:17:52.000000000 +0800
@@ -1,32 +1,42 @@
-$! $Id: build_vms.com,v 1.9 2009-10-27 16:56:20 yangtse Exp $
+$! $Id: build_vms.com,v 1.11 2009-12-31 13:35:24 yangtse Exp $
 $! BUILD_VMS.COM 
 $!
 $! I've taken the original build_vms.com, supplied by Nico Baggus, if
 $! memory serves me correctly, and made some modifications.
 $!
-$! SSL support is based on logicals, or lack thereof.  If SSL$INCLUDE
-$! is defined, then it assumed that hp's SSL product has been installed.
-$! If OPENSSL is defined, but SSL$INCLUDE isn't, then the OpenSSL defined
-$! via the defines.com procedure will be used.  If neither logical is 
-$! defined, then SSL support will not be compiled/linked in.
-$!
-$! If CURL_BUILD_NOSSL is defined to anything, then no SSL support will
-$! be built in.  This way you can build without SSL support on systems
-$! that have it without the "automatic" build/link "features".
-$!
-$! If CURL_BUILD_NOHPSSL is defined to anything, it will override the
-$! SSL$INCLUDE check.  This way you can build against OpenSSL, even if
-$! you have hp SSL installed.
-$!
-$! Parameter(s):
-$!
-$! P1 - LISTING will create .lis files during the C compile
-$!      DEBUG   will compile and link with debug; also will create
-$!              compiler listings and linker map files
-$!      64      will compile and link with 64-bit pointers
+$! SSL support is controlled by logical names.  If SSL$INCLUDE is
+$! defined, then it is assumed that HP's SSL product has been installed.
+$! If OPENSSL is defined, but SSL$INCLUDE is not, then OpenSSL will be
+$! used.  If neither logical name is defined, then SSL support will not
+$! be compiled/linked in.  Command-line options NOHPSSL and NOSSL can be
+$! specified to override the automatic SSL selection.
+$!
+$! Command-line Options:
+$!
+$!    CLEAN     Delete product files for this host architecture.  (No
+$!              build done.)
+$!    CLEAN_ALL Delete product files for all host architectures.  (No
+$!              build done.)
+$!
+$!    64        Compile with 64-bit pointers.
+$!    CCQUAL=x  Add "x" to the C compiler qualifiers.
+$!    DEBUG     Compile and link with debug.
+$!    IEEE      Use IEEE floating point.  (Alpha.)
+$!    LARGE     Enable large-file support.  (Non-VAX, VMS >= V7.2.)
+$!    LDAP      Enable LDAP support.
+$!    LIST      Create C compiler listings and linker maps.
+$!    NOHPSSL   Don't use HP SSL, even if available.
+$!    NOSSL     Don't use any SSL, even if available.
+$!    OSSLOLB   Use OpenSSL object libraries (.OLB), even if shared
+$!              images (.EXE) are available.
+$!
+$! DCL Symbols:
+$!
+$!    CURL_CCDEFS="c_macro_1=value1 [, c_macro_2=value2 [...]]"
+$!              Compile with these additional C macros defined.
 $!
 $! Revisions:
 $!
 $!  2-DEC-2003, MSK, the "original" version.
 $!                   It works for me.  Your mileage may vary.
 $! 13-JAN-2004, MSK, moved this procedure to the [.packages.vms] directory
@@ -44,205 +54,519 @@
 $!  8-FEB-2005, MSK, merged the two config-vms.h* files into one that uses
 $!                   USE_SSLEAY to define if the target has SSL support built
 $!                   in.  Changed the cc/define parameter accordingly.
 $! 11-FEB-2005, MSK, If [--.LIB]AMIGAOS.C and NWLIB.C are there, rename them
 $! 23-MAR-2005, MSK, relocated cc_qual define so that DEBUG option would work
 $! 25-APR-2007, STL, allow compilation in 64-bit mode.
-$!
+$! 13-DEC-2009. SMS, Changed to skip unwanted source files without
+$!                   renaming the original files.
+$!                   Eliminated needless, persistent logical names.
+$!                   Added CURL_CCDEFS DCL symbol for user-specified C
+$!                   macro definitions.
+$!                   Added CLEAN and CLEAN_ALL options.
+$!                   Added CCQUAL option for user-specified C compiler
+$!                   qualifiers.
+$!                   Added IEEE option for IEEE floating point (Alpha).
+$!                   Added LARGE option for large-file support.
+$!                   Added OSSLOLB option, and support for OpenSSL
+$!                   shared images.
+$!                   Changed to put listing and map files into lisdir:.
+$!                   Changed to avoid case confusion on ODS5 disks.
+$!                   Added more default dev:[dir] save+restore.
+$!                   Moved remaining "defines.com" code (back) into
+$!                   here, eliminating the hard-coded OpenSSL nonsense.
+$!                   Changed to use F$GETSYI( "ARCH_NAME") (or
+$!                   equivalent) to name architecture-specific product
+$!                   file destination directory, and to create the
+$!                   directory if needed (obviating inclusion of these
+$!                   directories and dummy files in the distribution
+$!                   kit).
+$!                   Changed the "compile" subroutine to break the CC
+$!                   command across multiple lines to avoid DCL
+$!                   line-too-long problems.
+$!                   Changed "vo_c" messages to show the CC qualifiers
+$!                   once, not with every compile command.
+$!
+$!
+$! Save the original default dev:[dir], and arrange for its restoration
+$! at exit.
+$!
+$ curl = ""
+$ orig_def = f$environment( "DEFAULT")
+$ on error then goto Common_Exit
 $ on control_y then goto Common_Exit
+$!
 $ ctrl_y  = 1556 
-$ origdir = f$environment("DEFAULT")
-$ proc    = f$environment("PROCEDURE")
-$ thisdir = f$parse( proc,,,"DEVICE") + f$parse( proc,,,"DIRECTORY")
+$ proc = f$environment( "PROCEDURE")
+$ proc_dev_dir = -
+   f$parse( proc, , , "DEVICE")+ f$parse( proc, , , "DIRECTORY")
 $!
 $! Verbose output message stuff.  Define symbol to "write sys$output" or "!".
 $! vo_c - verbose output for compile
 $! vo_l - link
 $! vo_o - object check
 $!
 $ vo_c = "write sys$output"
 $ vo_l = "write sys$output"
 $ vo_o = "!"
 $!
-$ defines = thisdir + "defines.com"
-$ if f$trnlnm( "curl_defines_done") .eqs. "" 
-$ then 
-$    if f$search( defines) .eqs. "" 
-$    then
-$       write sys$output "%CURL-F-DEFFNF, cannot find defines.com procedure"
-$       exit %X18290 ! FNF
-$    else
-$       @'defines'
-$    endif
+$! Determine the main distribution directory ("[--]") in an
+$! ODS5-tolerant (case-insensitive) way.  (We do assume that the only
+$! "]" is the one at the end.)
+$!
+$ set default 'proc_dev_dir'
+$ set default [--]
+$ top_dev_dir = f$environment( "DEFAULT")- "]"
+$!
+$! Define the architecture-specific product file destination directory
+$! name(s).
+$!
+$ if (f$getsyi( "HW_MODEL") .lt. 1024)
+$ then
+$    arch_name = "VAX"
+$ else
+$    arch_name = ""
+$    arch_name = arch_name+ f$edit( f$getsyi( "ARCH_NAME"), "UPCASE")
+$    if (arch_name .eqs. "") then arch_name = "UNK"
 $ endif
-$ set def 'thisdir'
 $!
-$ hpssl   = 0
+$ exedir = proc_dev_dir- "]"+ ".''arch_name']"
+$ lisdir = exedir
+$ objdir = exedir
+$!
+$! Interpret command-line options.
+$!
+$ hpssl = 0
+$ ldap = 0
+$ nohpssl = 0
+$ nossl = 0
 $ openssl = 0
-$ cc_qual = "/define=HAVE_CONFIG_H=1"
+$ osslolb = 0
+$ cc_qual1 = ""
+$ cc_qual2 = ""
+$ cc_defs = "HAVE_CONFIG_H=1"
+$ if (f$type( CURL_CCDEFS) .nes. "")
+$ then
+$    CURL_CCDEFS = f$edit( CURL_CCDEFS, "TRIM")
+$    cc_defs = cc_defs+ ", "+ CURL_CCDEFS
+$ endif
 $ link_qual = ""
-$ if f$trnlnm( "CURL_BUILD_NOSSL") .eqs. ""
+$ ssl_opt = ""
+$!
+$ arg = 1
+$arg_loop:
+$    p = "p''arg'"
+$    arg_val = 'p'
+$    if (arg_val .eqs. "") then goto arg_loop_out
+$    arg_val = f$edit( arg_val, "upcase")
+$!
+$    if (arg_val .eqs. "CLEAN")
+$    then
+$       prods = "''exedir'*.*;*"
+$       if (f$search( prods) .nes. "") then delete /log 'prods'
+$       prods = proc_dev_dir+ arch_name+ ".DIR;1"
+$       if (f$search( prods) .nes. "") then delete /log 'prods'
+$       goto Common_Exit
+$    endif
+$!
+$    if (arg_val .eqs. "CLEAN_ALL")
+$    then
+$       prods = proc_dev_dir- "]"+ ".ALPHA]*.*;*"
+$       if (f$search( prods) .nes. "") then delete /log 'prods'
+$       prods = proc_dev_dir+ "ALPHA"+ ".DIR;1"
+$       if (f$search( prods) .nes. "") then delete /log 'prods'
+$       prods = proc_dev_dir- "]"+ ".IA64]*.*;*"
+$       if (f$search( prods) .nes. "") then delete /log 'prods'
+$       prods = proc_dev_dir+ "IA64"+ ".DIR;1"
+$       if (f$search( prods) .nes. "") then delete /log 'prods'
+$       prods = proc_dev_dir- "]"+ ".VAX]*.*;*"
+$       if (f$search( prods) .nes. "") then delete /log 'prods'
+$       prods = proc_dev_dir+ "VAX"+ ".DIR;1"
+$       if (f$search( prods) .nes. "") then delete /log 'prods'
+$       goto Common_Exit
+$    endif
+$!
+$    if (arg_val .eqs. "64")
+$    then
+$       cc_qual1 = cc_qual1 + " /POINTER = 64"
+$       goto arg_loop_end
+$    endif
+$!
+$    if (f$extract( 0, 6, arg_val) .eqs. "CCQUAL")
+$    then
+$       opts = f$edit( arg_val, "COLLAPSE")
+$       eq = f$locate( "=", opts)
+$       cc_qual2 = f$extract( (eq+ 1), 1000, opts)
+$       goto arg_loop_end
+$    endif
+$!
+$    if (arg_val .eqs. "DEBUG")
+$    then
+$       cc_qual1 = cc_qual1 + -
+         " /debug /nooptimize"
+$       link_qual = link_qual+ " /debug /map = ''lisdir'"
+$       goto arg_loop_end
+$    endif
+$!
+$    if (arg_val .eqs. "IEEE")
+$    then
+$       cc_qual1 = cc_qual1 + " /FLOAT = IEEE_FLOAT"
+$       goto arg_loop_end
+$    endif
+$!
+$    if (arg_val .eqs. "LARGE")
+$    then
+$       if (arch_name .eqs. "VAX")
+$       then
+$          write sys$output """LARGE"" is ignored on VAX."
+$       else
+$          cc_defs = cc_defs+ ", _LARGEFILE=1"
+$       endif
+$       goto arg_loop_end
+$    endif
+$!
+$    if (arg_val .eqs. "LDAP")
+$    then
+$       ldap = 1
+$       goto arg_loop_end
+$    endif
+$!
+$    if (f$extract( 0, 4, arg_val) .eqs. "LIST")
+$    then
+$       cc_qual1 = cc_qual1 + " /list = ''lisdir' /show = (all, nomessages)"
+$       goto arg_loop_end
+$    endif
+$!
+$    if (arg_val .eqs. "NOHPSSL")
+$    then
+$       nohpssl = 1
+$       goto arg_loop_end
+$    endif
+$!
+$    if (arg_val .eqs. "NOSSL")
+$    then
+$       nossl = 1
+$       goto arg_loop_end
+$    endif
+$!
+$    if (arg_val .eqs. "OSSLOLB")
+$    then
+$       osslolb = 1
+$       goto arg_loop_end
+$    endif
+$!
+$    write sys$output "Unrecognized command-line option: ''arg_val'"
+$    goto Common_Exit
+$!
+$arg_loop_end:
+$ arg = arg+ 1
+$ goto arg_loop
+$arg_loop_out:
+$!
+$! Create product directory, if needed.
+$!
+$ if (f$search( proc_dev_dir+ arch_name+ ".DIR;1") .eqs. "")
 $ then
-$    if f$trnlnm( "OPENSSL") .nes. "" 
+$    create /directory 'exedir'
+$ endif
+$!
+$! Detect available (but not prohibited) SSL software.
+$!
+$ if (.not. nossl)
+$ then
+$    if (f$trnlnm( "OPENSSL") .nes. "")
 $    then
-$       openssl = 1
-$       cc_qual = "/define=(HAVE_CONFIG_H=1,USE_SSLEAY=1)"
-$       if ( f$trnlnm( "SSL$INCLUDE") .nes. "") .and. -
-           ( f$trnlnm( "CURL_BUILD_NOHPSSL") .eqs. "")
-$       then hpssl = 1
+$       cc_defs = cc_defs+ ", USE_SSLEAY=1"
+$       if ((f$trnlnm( "SSL$INCLUDE") .nes. "") .and. (.not. nohpssl))
+$       then
+$!         Use HP SSL.
+$          hpssl = 1
+$          ssl_opt = ", ''proc_dev_dir'hpssl_"+ -
+            f$getsyi("ARCH_NAME") + ".opt /options"
+$       else
+$!         Use OpenSSL.  Assume object libraries, unless shared images
+$!         are found (and not prohibited).
+$          openssl = 1
+$          ssl_opt = ", ssllib:libssl.olb /library"+ -
+            ", ssllib:libcrypto.olb /library"
+$          if (osslolb .eq. 0)
+$          then
+              if ((f$search( "ssllib:ssl_libcrypto.exe") .nes. "") .and. -
+               (f$search( "ssllib:ssl_libssl.exe") .nes. ""))
+$             then
+$!               OpenSSL shared images with "SSL_xxx.EXE names.
+$                openssl = 2
+$                ssl_opt = ", ''proc_dev_dir'openssl_ssl_"+ -
+                  f$getsyi("ARCH_NAME") + ".opt /options"
+$             else
+$                if ((f$search( "ssllib:libcrypto.exe") .nes. "") .and. -
+                  (f$search( "ssllib:libssl.exe") .nes. ""))
+$                then
+$!                  OpenSSL shared images with "xxx.EXE names.
+$                   openssl = 3
+$                   ssl_opt = ", ''proc_dev_dir'openssl_"+ -
+                     f$getsyi("ARCH_NAME") + ".opt /options"
+$                endif
+$             endif
+$          endif
 $       endif
 $    endif
 $ endif
-$ cc_qual = cc_qual + "/OBJ=OBJDIR:"
-$ if p1 .eqs. "64" then cc_qual = cc_qual + "/POINTER=64"
-$ if p1 .eqs. "LISTING" then cc_qual = cc_qual + "/LIST/SHOW=ALL"
-$ if p1 .eqs. "DEBUG" 
-$ then 
-$    cc_qual = cc_qual + "/LIST/SHOW=ALL/DEBUG/NOOPT"
-$    link_qual = "/DEBUG/MAP"
+$!
+$! LDAP.
+$!
+$ if (ldap .eq. 0)
+$ then
+$    cc_defs = cc_defs+ ", CURL_DISABLE_LDAP=1"
 $ endif
-$ msg_qual = "/OBJ=OBJDIR:"
 $!
-$! Put the right main config file in the two source directories for the build.
+$! Form CC qualifiers.
+$!
+$ cc_defs = "/define = (''cc_defs')"
+$ cc_qual2 = cc_qual2+ " /object = ''objdir'"+ -
+   " /include = ([-.lib], [-.src],"+ -
+   " [-.packages.vms], [-.packages.vms.''arch_name'])"
+$!
+$ 'vo_c' "CC opts:", -
+  " ''cc_defs'", -
+  " ''cc_qual1'", -
+  " ''cc_qual2'"
 $!
-$ if ( openssl .eq. 1) .or. ( hpssl .eq. 1)
+$ msg_qual = "/object = ''objdir'"
+$!
+$! Inform the victim of our plans.
+$!
+$ if (hpssl)
 $ then
-$    'vo_c' "%CURL-I-BLDSSL, building with SSL support"
+$    'vo_c' "%CURL-I-BLDHPSSL, building with HP SSL support"
 $ else
-$    'vo_c' "%CURL-I-BLDNOSSL, building without SSL support"
+$    if (openssl .ne. 0)
+$    then
+$       if (openssl .eq. 1)
+$       then
+$          'vo_c' -
+ "%CURL-I-BLDOSSL_OLB, building with OpenSSL (object library) support"
+$       else
+$          'vo_c' -
+ "%CURL-I-BLDOSSL_EXE, building with OpenSSL (shared image) support"
+$       endif
+$    else
+$       'vo_c' "%CURL-I-BLDNOSSL, building with NO SSL support"
+$    endif
 $ endif
-$ config_h = "CONFIG-VMS.H"
-$!
-$! Only do the copy if the source and destination files are different.
 $!
-$ call MoveIfDiff 'config_h' "[--.LIB]CONFIG.H"
-$ call MoveIfDiff 'config_h' "[--.SRC]CONFIG.H"
-$! call MoveIfDiff "SETUP.H" "[--.LIB]"
-$! call MoveIfDiff "SETUP.H" "[--.SRC]"
-$ call MoveIfDiff "CURLMSG.H" "[--.SRC]"
-$ call MoveIfDiff "CURLMSG.MSG" "[--.SRC]"
-$ call MoveIfDiff "CURLMSG.SDL" "[--.SRC]"
-$ call MoveIfDiff "CURLMSG_VMS.H" "[--.SRC]"
+$! Announce destination and SSL directories.
 $!
-$! The [--.LIB]amigaos.c and nwlib.c files aren't needed for the VMS build.
-$! If they are there, rename them so the brute force build works right.
+$ 'vo_c' "   OBJDIR = ''objdir'"
+$ 'vo_c' "   EXEDIR = ''exedir'"
 $!
-$ if f$search( "[--.lib]amigaos.c") .nes. "" 
+$ if (openssl .ne. 0)
 $ then
-$    rename [--.lib]amigaos.c .c_not_used
+$    ssllib = f$trnlnm( "ssllib")
+$    if (ssllib .eqs. "")
+$    then
+$        ssllib = "(undefined)"
+$    endif
+$    'vo_c' "   SSLLIB = ''ssllib'"
+$!
+$    if (openssl .eq. 1)
+$    then
+$       ossl_lib1 = f$trnlnm( "ssllib")+ "LIBSSL.OLB"
+$       ossl_lib2 = f$trnlnm( "ssllib")+ "LIBCRYPTO.OLB"
+$       msg = "object libraries"
+$    else
+$       if (openssl .eq. 2)
+$       then
+$          ossl_lib1 = f$trnlnm( "ssllib")+ "SSL_LIBSSL.EXE"
+$          ossl_lib2 = f$trnlnm( "ssllib")+ "SSL_LIBCRYPTO.EXE"
+$       else
+$          ossl_lib1 = f$trnlnm( "ssllib")+ "LIBSSL.EXE"
+$          ossl_lib2 = f$trnlnm( "ssllib")+ "LIBCRYPTO.EXE"
+$       endif
+$       msg = "shared images"
+$    endif
+$    if ((f$search( ossl_lib1) .eqs. "") .or. -
+      (f$search( ossl_lib2) .eqs. ""))
+$    then
+$       write sys$output "Can't find OpenSSL ''msg':"
+$       write sys$output "   ''ossl_lib1'"
+$       write sys$output "   ''ossl_lib2'"
+$       goto Common_Exit
+$    endif
 $ endif
-$ if f$search( "[--.lib]nwlib.c") .nes. "" 
+$!
+$! Define the "curl" (process) logical name for "#include <curl/xxx.h>".
+$!
+$ curl = f$trnlnm( "curl", "LNM$PROCESS")
+$ if (curl .nes. "")
 $ then
-$    rename [--.lib]nwlib.c .c_not_used
+$    write sys$output ""
+$    write sys$output -
+ "Process logical name ""curl"" is already defined, but this procedure"
+$    write sys$output -
+ "would override that definition.  Use a command like"
+$    write sys$output -
+ "      deassign /process curl"
+$    write sys$output -
+ "to cancel that logical name definition, and then and re-run this procedure."
+$    write sys$output ""
+$    goto Common_Exit
 $ endif
+$ define curl 'top_dev_dir'.include.curl]
+$!
+$! Copy the VMS-specific config file into the product directory.
+$!
+$ call MoveIfDiff 'proc_dev_dir'config-vms.h 'objdir'curl_config.h
+$!
 $ on control_y then goto Common_Exit
 $!
-$ call build "[--.lib]" "*.c" "objdir:curllib.olb"
+$ set default 'proc_dev_dir'
+$ call build "[--.lib]" "*.c" "''objdir'CURLLIB.OLB" "amigaos, nwlib, nwos"
 $ if ($status .eq. ctrl_y) then goto Common_Exit
-$ call build "[--.src]" "*.c" "objdir:curlsrc.olb"
+$ call build "[--.src]" "*.c" "''objdir'CURLSRC.OLB"
 $ if ($status .eq. ctrl_y) then goto Common_Exit
-$ call build "[--.src]" "*.msg" "objdir:curlsrc.olb"
+$ call build "[]" "*.msg" "''objdir'CURLSRC.OLB"
 $ if ($status .eq. ctrl_y) then goto Common_Exit
-$ if ( openssl .eq. 1) .and. ( hpssl .eq. 0)
+$!
+$ ldap_opt = ""
+$ if (ldap .ne. 0) then ldap_opt = ", ''proc_dev_dir'ldap.opt /options"
+$!
+$ if (openssl .ne. 0)
 $ then
-$    'vo_l' "%CURL-I-LINK_OSSL, linking with OpenSSL"
-$    link 'link_qual'/exe=exedir:curl.exe -
-          objdir:curlsrc/lib/include=(main,curlmsg),-
-          objdir:curllib/lib, libssl/lib, libcrypto/lib
-$ endif
-$ if ( openssl .eq. 1) .and. ( hpssl .eq. 1)
-$ then
-$    'vo_l' "%CURL-I-LINK_HPSSL, linking with hp SSL option"
-$    optfile = "[]hpssl_" + f$getsyi("ARCH_NAME") + ".opt/opt"
-$    link 'link_qual'/exe=exedir:curl.exe -
-          objdir:curlsrc/lib/include=(main,curlmsg),-
-          objdir:curllib/lib, 'optfile'
-$ endif
-$ if ( openssl .eq. 0) .and. ( hpssl .eq. 0)
-$ then
-$    'vo_l' "%CURL-I-LINK_NOSSL, linking without SSL support"
-$    link 'link_qual'/exe=exedir:curl.exe -
-          objdir:curlsrc/lib/include=(main,curlmsg),-
-          objdir:curllib/lib
+$    if (openssl .eq. 1)
+$    then
+$       'vo_l' "%CURL-I-LINK_OSSL, linking with OpenSSL (object library)"
+$    else
+$       'vo_l' "%CURL-I-LINK_HPSSL, linking with OpenSSL (shared image)"
+$    endif
+$ else
+$    if (hpssl)
+$    then
+$       'vo_l' "%CURL-I-LINK_HPSSL, linking with HP SSL"
+$    else
+$       'vo_l' "%CURL-I-LINK_NOSSL, linking with NO SSL support"
+$    endif
 $ endif
 $!
+$ link 'link_qual' /executable = 'exedir'CURL.EXE -
+   'objdir'curlsrc.olb /library /include = (main, curlmsg), -
+   'objdir'curllib.olb /library -
+   'ssl_opt' -
+   'ldap_opt'
+$!
 $ goto Common_Exit
 $!
 $! Subroutine to build everything with a filetype passed in via P2 in 
 $! the directory passed in via P1 and put it in the object library named 
-$! via P3
+$! via P3.  Exclude items in P4.
 $!
 $build:   subroutine
-$ on control_y then goto EndLoop ! SS$_CONTROLY
-$! set noon
-$   set default 'p1'
-$   search = p2
-$   reset = f$search("reset")
-$   if f$search( p3) .eqs. ""
-$   then
-$      LIB/CREATE/OBJECT 'p3'
-$   endif
-$   reset = f$search("reset",1)
+$    build_def = f$environment( "default")
+$    on control_y then goto EndLoop ! SS$_CONTROLY
+$    sts = 1 ! SS$_NORMAL.
+$!    set noon
+$    set default 'p1'
+$    search = p2
+$    reset = f$search("reset")
+$    if f$search( p3) .eqs. ""
+$    then
+$       librarian /create /object 'p3'
+$    endif
+$    reject_list__ = ","+ f$edit( p4, "COLLAPSE, UPCASE")+ ","
+$    reject_list___len = f$length( reject_list__)
+$    reset = f$search( "reset", 1)
 $Loop:
-$   file = f$search(search,1)
-$   if file .eqs. "" then goto EndLoop
-$      objfile = f$parse("objdir:.OBJ;",file)
-$      obj = f$search( objfile, 2)
-$      if (obj .nes. "")
-$      then
-$         if (f$cvtime(f$file(file,"rdt")) .gts. f$cvtime(f$file(obj,"rdt")))
-$         then
-$            call compile 'file'
-$            if .not. $status then return $status
-$            lib/object 'p3' 'objfile'
-$         else
-$            'vo_o' "%CURL-I-OBJUTD, ", objfile, " is up to date"
-$         endif
-$      else
-$         'vo_o' "%CURL-I-OBJDNE, ", file, " does not exist"
-$         call compile 'file'
-$         if .not. $status then return $status
-$         lib/object 'p3' 'objfile'
-$      endif
-$   goto Loop
+$    file = f$search( search, 1)
+$    if file .eqs. "" then goto EndLoop
+$!      Skip a name if it's in the P4 exclusion list.
+$       if (p4 .nes. "")
+$       then
+$          name__ = ","+ -
+            f$edit( f$parse( file, , , "NAME", "SYNTAX_ONLY"), "UPCASE")+ -
+            ","
+$          if (f$locate( name__, reject_list__) .lt. reject_list___len)
+$          then
+$             goto Loop
+$          endif
+$       endif
+$       objfile = f$parse( "''objdir'.OBJ;", file)
+$       obj = f$search( objfile, 2)
+$       if (obj .nes. "")
+$       then
+$          if (f$cvtime(f$file(file,"rdt")) .gts. f$cvtime(f$file(obj,"rdt")))
+$          then
+$             call compile 'file'
+$             sts = $status
+$             if .not. sts
+$             then
+$                goto EndLoop
+$             endif
+$             librarian /object 'p3' 'objfile'
+$          else
+$             'vo_o' "%CURL-I-OBJUTD, ", objfile, " is up to date"
+$          endif
+$       else
+$          'vo_o' "%CURL-I-OBJDNE, ", file, " does not exist"
+$          call compile 'file'
+$          sts = $status
+$          if .not. sts
+$          then
+$             goto EndLoop
+$          endif
+$          librarian /object 'p3' 'objfile'
+$       endif
+$    goto Loop
 $EndLoop:
-$   !purge
-$   set def 'origdir'
-$   endsubroutine   ! Build
+$!!!    purge
+$    set default 'build_def'
+$    exit 'sts'
+$ endsubroutine   ! Build
 $!
 $! Based on the file TYPE, do the right compile command.  
 $! Only C and MSG supported.
 $!
 $compile:   subroutine
-$   on control_y then return ctrl_y ! SS$_CONTROLY
-$!   set noon
-$   file = p1
-$   qual = p2+p3+p4+p5+p6+p7+p8
-$   typ = f$parse(file,,,"TYPE") - "."
-$   cmd_c = "CC "+cc_qual
-$   cmd_msg = "MESSAGE "+msg_qual
-$   x = cmd_'typ'
-$   'vo_c' x," ",file
-$   'x' 'file'
-$   ENDSUBROUTINE   ! Compile
+$    on control_y then return ctrl_y ! SS$_CONTROLY
+$!    set noon
+$    file = p1
+$    qual = p2+ p3+ p4+ p5+ p6+ p7+ p8
+$    typ = f$edit( f$parse( file, , , "TYPE"), "UPCASE") - "."
+$    if (typ .eqs. "C")
+$    then
+$       'vo_c' "CC (opts) ", file
+$       CC 'cc_defs' -
+         'cc_qual1' -
+         'cc_qual2' -
+         'file'
+$    else
+$       cmd_msg = "MESSAGE "+ msg_qual
+$       x = cmd_'typ'
+$       'vo_c' x," ",file
+$       'x' 'file'
+$    endif
+$ ENDSUBROUTINE   ! Compile
 $!
 $! Do a diff of the file specified in P1 with that in P2.  If different
 $! copy P1 to P2.  This also covers if P2 doesn't exist, but not if P2
 $! is an invalid filespec.
 $!
 $MoveIfDiff:  subroutine
-$   set NoOn
-$   set message/nof/noi/nos/not
-$   diff/out=nla0: 'p1' 'p2'
-$   status = $status
-$   set message/f/i/s/t
-$   if ( status .ne. %X006C8009) ! if status is not "no diff"
-$   then
-$      copy 'p1' 'p2'
-$      purge/nolog 'p2'
-$   endif
-$   on control_y then return ctrl_y ! SS$_CONTROLY
-$   ENDSUBROUTINE   ! MoveIfDiff
+$    set NoOn
+$    define /user_mode sys$error nl:
+$    define /user_mode sys$output nl:
+$    differences 'p1' 'p2'
+$    status = $status
+$    if ( status .ne. %X006C8009) ! if status is not "no diff"
+$    then
+$       copy 'p1' 'p2'
+$       purge /nolog 'p2'
+$    endif
+$    on control_y then return ctrl_y ! SS$_CONTROLY
+$ ENDSUBROUTINE   ! MoveIfDiff
 $!
 $Common_Exit:
-$   set default 'origdir'
-$   exit
+$ set default 'orig_def'
+$ if ((curl .eqs. "") .and. (f$trnlnm( "curl", "LNM$PROCESS") .nes. ""))
+$ then
+$    deassign curl
+$ endif
+$ exit
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/vms/config-vms.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/vms/config-vms.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/vms/config-vms.h	2009-06-14 04:50:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/vms/config-vms.h	2010-01-30 22:30:27.000000000 +0800
@@ -1,30 +1,30 @@
 #ifndef HEADER_CONFIG_VMS_H
 #define HEADER_CONFIG_VMS_H
 
-/* $Id: config-vms.h,v 1.27 2009-06-11 11:57:46 yangtse Exp $ */
+/* $Id: config-vms.h,v 1.29 2010-01-28 10:56:43 yangtse Exp $ */
 /*                                                                         */
 /* MSK, 02/05/04, Hand edited for trail build on Alpha V7.3, DEC C 6.5-003 */
 /* MSK, 03/09/04, Seems to work for all platforms I've built on so far.    */
 /*      Added HAVE_SYS_IOCTL_H define                                      */
 /* TES, 10/06/04, Added MAX_INITIAL_POST_SIZE, HAVE_BASENAME               */
 /* MSK, 02/02/05, Changed HAVE_TERMIOS_H to an undef since the change in   */
 /*                getpass.c no longer undef'd it during compile.           */
 /* MSK, 02/08/05, turned two config-vms files into one by using USE_SSLEAY */
 /* MPZ, 12/28/05, changed HAVE_STRTOK_R define to use CRTL_VER             */
 /* MSK, 01/27/07, needed to add HAVE_STRUCT_TIMEVAL define                 */
 
 /* Define cpu-machine-OS */
-#ifdef __ALPHA
-#define OS "ALPHA-HP-VMS"
+#if defined(__alpha)
+#  define OS "ALPHA-HP-VMS"
+#elif defined(__vax)
+#  define OS "VAX-HP-VMS"
+#elif defined(__ia64)
+#  define OS "IA64-HP-VMS"
 #else
-#ifdef __VAX
-#define OS "VAX-HP-VMS"
-#else
-#define OS "IA64-HP-VMS"
-#endif
+#  define OS "UNKNOWN-HP-VMS"
 #endif
 
 /* Define if you have the ANSI C header files.  */
 #define STDC_HEADERS 1
 
 /* Define if you can safely include both <sys/time.h> and <time.h>.  */
@@ -91,25 +91,25 @@
 #define HAVE_SOCKET 1
 
 /* Define if you have the strcasecmp function.  */
 #define HAVE_STRCASECMP 1
 
 /* Define if you have the strcmpi function.  */
-#define HAVE_STRCMPI 1
+/* #define HAVE_STRCMPI 1 */
 
 /* Define if you have the strdup function.  */
 #define HAVE_STRDUP 1
 
 /* Define if you have the strftime function.  */
 #define HAVE_STRFTIME 1
 
 /* Define if you have the stricmp function.  */
-#define HAVE_STRICMP 1
+/* #define HAVE_STRICMP 1 */
 
 /* Define if you have the strstr function.  */
-#define  HAVE_STRSTR 1
+#define HAVE_STRSTR 1
 
 /* Define if you have the ftruncate function. */
 #define HAVE_FTRUNCATE 1
 
 /* Define if you have the uname function.  */
 #define HAVE_UNAME 1
@@ -150,31 +150,31 @@
 #define USE_OPENSSL 1
 
 /* Define if you have the crypto library (-lcrypto).  */
 #define HAVE_LIBCRYPTO 1
 
 /* Define if you have the ssl library (-lssl).  */
-#define HAVE_LIBSSL	1
+#define HAVE_LIBSSL 1
 
 /* Define if you have the <openssl/crypto.h> header file.  */
 #define HAVE_OPENSSL_CRYPTO_H 1
 
 /* Define if you have the <openssl/err.h> header file.  */
-#define HAVE_OPENSSL_ERR_H	1
+#define HAVE_OPENSSL_ERR_H 1
 
 /* Define if you have the <openssl/pem.h> header file.  */
-#define HAVE_OPENSSL_PEM_H	1
+#define HAVE_OPENSSL_PEM_H 1
 
 /* Define if you have the <openssl/rsa.h> header file.  */
 #define HAVE_OPENSSL_RSA_H 1
 
 /* Define if you have the <openssl/ssl.h> header file.  */
-#define HAVE_OPENSSL_SSL_H	1
+#define HAVE_OPENSSL_SSL_H 1
 
 /* Define if you have the <openssl/x509.h> header file.  */
-#define HAVE_OPENSSL_X509_H	1
+#define HAVE_OPENSSL_X509_H 1
 
 /*
  * This needs to be defined for OpenSSL 0.9.7 and other versions that have the
  * ENGINE stuff supported. If an include of "openssl/engine.h" fails, then
  * undefine the define below.
 */
@@ -220,13 +220,13 @@
 #define HAVE_LIBSOCKET 1
 
 /* Define if getaddrinfo exists and works */
 #define HAVE_GETADDRINFO 1
 
 /* Define if you have the <timeval.h> header file.  */
-#define	HAVE_TIMEVAL_H	1
+#define HAVE_TIMEVAL_H 1
 
 /* Define if you have the timeval struct.  */
 #define	HAVE_STRUCT_TIMEVAL 1
 
 /* Name of this package! */
 #define PACKAGE "not-used"
@@ -246,20 +246,20 @@
 /* Define if you have the <string.h> header file. */
 #define HAVE_STRING_H 1
 
 /* Define if you have the `strtok_r' function.  */
 /* Condition lifted from <string.h>             */
 #if __CRTL_VER >= 70301000
-#define HAVE_STRTOK_R 1
+#  define HAVE_STRTOK_R 1
 #endif
 
 /* Define if you have the `strtoll' function. */
 #define HAVE_STRTOLL 1
 
 /* Define if you have the <memory.h> header file. */
-#define HAVE_MEMORY_H   1
+#define HAVE_MEMORY_H 1
 
 /* Define to 1 if you need the memory.h header file even with stdlib.h */
 #define NEED_MEMORY_H 1
 
 /* Define if you have the `sigsetjmp' function. */
 #define HAVE_SIGSETJMP 1
@@ -273,26 +273,23 @@
 /* Define to 1 if you have the <sys/ioctl.h> header file. */
 #define HAVE_SYS_IOCTL_H 1
 
 /* Define to 1 if you have the <stropts.h> header file. */
 #define HAVE_STROPTS_H 1
 
-/* to disable LDAP */
-#define CURL_DISABLE_LDAP 1
-
 /* Define if you have the getnameinfo function. */
 #define HAVE_GETNAMEINFO 1
 
 /* Define to the type qualifier of arg 1 for getnameinfo. */
 #define GETNAMEINFO_QUAL_ARG1 const
 
 /* Define to the type of arg 1 for getnameinfo. */
 #define GETNAMEINFO_TYPE_ARG1 struct sockaddr *
 
 /* Define to the type of arg 2 for getnameinfo. */
-#define GETNAMEINFO_TYPE_ARG2 FIXME
+#define GETNAMEINFO_TYPE_ARG2 size_t
 
 /* Define to the type of args 4 and 6 for getnameinfo. */
 #define GETNAMEINFO_TYPE_ARG46 size_t
 
 /* Define to the type of arg 7 for getnameinfo. */
 #define GETNAMEINFO_TYPE_ARG7 int
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/vms: ia64
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/vms: ldap.opt
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/vms/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/vms/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/vms/Makefile.am	2006-02-28 05:33:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/vms/Makefile.am	2010-01-01 22:17:52.000000000 +0800
@@ -1,3 +1,5 @@
 EXTRA_DIST = batch_compile.com build_vms.com config-vms.h defines.com	\
  hpssl_alpha.opt hpssl_ia64.opt hpssl_vax.opt readme curlmsg.msg	\
- curlmsg_vms.h axp/README ia64/README vax/README curlmsg.h curlmsg.sdl
+ curlmsg_vms.h curlmsg.h curlmsg.sdl openssl_alpha.opt openssl_ia64.opt	\
+ openssl_vax.opt openssl_ssl_alpha.opt openssl_ssl_ia64.opt ldap.opt	\
+ openssl_ssl_vax.opt
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/vms/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/vms/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/vms/Makefile.in	2009-11-04 20:26:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/vms/Makefile.in	2010-02-05 05:42:20.000000000 +0800
@@ -67,26 +67,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -97,13 +102,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -163,12 +167,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -223,13 +228,15 @@
 sharedstatedir = @sharedstatedir@
 subdirs = @subdirs@
 sysconfdir = @sysconfdir@
 target_alias = @target_alias@
 EXTRA_DIST = batch_compile.com build_vms.com config-vms.h defines.com	\
  hpssl_alpha.opt hpssl_ia64.opt hpssl_vax.opt readme curlmsg.msg	\
- curlmsg_vms.h axp/README ia64/README vax/README curlmsg.h curlmsg.sdl
+ curlmsg_vms.h curlmsg.h curlmsg.sdl openssl_alpha.opt openssl_ia64.opt	\
+ openssl_vax.opt openssl_ssl_alpha.opt openssl_ssl_ia64.opt ldap.opt	\
+ openssl_ssl_vax.opt
 
 all: all-am
 
 .SUFFIXES:
 $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
 	@for dep in $?; do \
@@ -237,15 +244,15 @@
 	    *$$dep*) \
 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
 		&& exit 0; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  packages/vms/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  packages/vms/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  packages/vms/Makefile
+	  $(AUTOMAKE) --foreign  packages/vms/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
@@ -275,13 +282,12 @@
 
 ctags: CTAGS
 CTAGS:
 
 
 distdir: $(DISTFILES)
-	$(mkdir_p) $(distdir)/axp $(distdir)/ia64 $(distdir)/vax
 	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
 	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
 	list='$(DISTFILES)'; for file in $$list; do \
 	  case $$file in \
 	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
 	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/vms: openssl_alpha.opt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/vms: openssl_ia64.opt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/vms: openssl_ssl_alpha.opt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/vms: openssl_ssl_ia64.opt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/vms: openssl_ssl_vax.opt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/vms: openssl_vax.opt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/vms: vax
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Win32/cygwin/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Win32/cygwin/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Win32/cygwin/Makefile.in	2009-11-04 20:26:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Win32/cygwin/Makefile.in	2010-02-05 05:42:20.000000000 +0800
@@ -67,26 +67,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -97,13 +102,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -163,12 +167,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -251,15 +256,15 @@
 	    *$$dep*) \
 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
 		&& exit 0; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  packages/Win32/cygwin/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  packages/Win32/cygwin/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  packages/Win32/cygwin/Makefile
+	  $(AUTOMAKE) --foreign  packages/Win32/cygwin/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Win32/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Win32/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/packages/Win32/Makefile.in	2009-11-04 20:26:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/packages/Win32/Makefile.in	2010-02-05 05:42:20.000000000 +0800
@@ -76,26 +76,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -106,13 +111,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -172,12 +176,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -244,15 +249,15 @@
 	    *$$dep*) \
 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
 		&& exit 0; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  packages/Win32/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  packages/Win32/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  packages/Win32/Makefile
+	  $(AUTOMAKE) --foreign  packages/Win32/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/RELEASE-NOTES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/RELEASE-NOTES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/RELEASE-NOTES	2009-11-04 20:20:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/RELEASE-NOTES	2010-02-09 17:18:51.000000000 +0800
@@ -1,64 +1,73 @@
-Curl and libcurl 7.19.7
+Curl and libcurl 7.20.0
 
- Public curl releases:         113
- Command line options:         132
- curl_easy_setopt() options:   163
+ Public curl releases:         114
+ Command line options:         136
+ curl_easy_setopt() options:   174
  Public functions in libcurl:  58
- Known libcurl bindings:       38
- Contributors:                 732
+ Known libcurl bindings:       39
+ Contributors:                 761
 
 This release includes the following changes:
 
- o -T. is now for non-blocking uploading from stdin
- o SYST handling on FTP for OS/400 FTP server cases
- o libcurl refuses to read a single HTTP header longer than 100K
- o added the --crlfile option to curl
+ o support SSL_FILETYPE_ENGINE for client certificate
+ o curl-config can now show the arguments used when building curl
+ o non-blocking TFTP
+ o send Expect: 100-continue for POSTs with unknown sizes
+ o added support for IMAP(S), POP3(S), SMTP(S) and RTSP
+ o added new curl_easy_setopt() options for SMTP and RTSP
+ o added --mail-from and --mail-rcpt for SMTP
+ o VMS build system enhancements
+ o added support for the PRET ftp command
+ o curl supports --ssl and --ssl-reqd
+ o added -J/--remote-header-name for using server-provided filename with -O
+ o enhanced asynchronous DNS lookups
+ o symbol CURL_FORMAT_OFF_T is obsoleted
 
 This release includes the following bugfixes:
 
- o The windows makefiles work again
- o libcurl-NSS acknowledges verifyhost
- o SIGSEGV when pipelined pipe unexpectedly breaks
- o data corruption issue with re-connected transfers
- o use after free if we're completed but easy_conn not NULL (pipelined)
- o missing strdup() return code check
- o CURLOPT_PROXY_TRANSFER_MODE could pass along wrong syntax
- o configure --with-gnutls=PATH fixed
- o ftp response reader bug on failed control connections
- o improved NSS error message on failed host name verifications
- o ftp NOBODY on re-used connection hang
- o configure uses pkg-config for cross-compiles as well
- o improved NSS detection in configure
- o cookie expiry date at 1970-jan-1 00:00:00
- o libcurl-OpenSSL failed to verify some certs with Subject Alternative Name
- o libcurl-OpenSSL can load CRL files with more than one certificate inside
- o received cookies without explicit path got saved wrong if the URL had a
-   query part
- o don't shrink SO_SNDBUF on windows for those who have it set large already
- o connect next bug
- o invalid file name characters handling on Windows
- o double close() on the primary socket with libcurl-NSS
- o GSS negotiate infinite loop on bad credentials
- o memory leak in SCP/SFTP connections
- o use pkg-config to find out libssh2 installation details in configure
- o unparsable cookie expire dates make cookies get treated as session coookies
- o POST with Digest authentication and "Transfer-Encoding: chunked"
- o SCP connection re-use with wrong auth
- o CURLINFO_CONTENT_LENGTH_DOWNLOAD for 0 bytes transfers
- o CURLINFO_SIZE_DOWNLOAD for ldap transfers (-w size_download)
+ o progress meter percentage and transfer time estimates fixes
+ o portability enhancement for OS's without orthogonal directory tree structure
+ o progress meter/callback during FTP connection
+ o DNS cache timeout while transfer in progress
+ o compilation when configured --with-gssapi having GNU GSS installed
+ o SSL connection reused with mismatched protection level
+ o configure --with-nss is set but not "yes"
+ o don't store LDFLAGS in pkg-config file
+ o never-pruned DNS cached entries
+ o HTTP proxy tunnel re-used connection even if tunnel got disabled
+ o SSL lib post-close write
+ o curl failed to report write errors for tiny failed downloads
+ o TFTP BLKSIZE
+ o Expect: 100-continue handling when set by the application
+ o multi interface with OpenSSL read already freed memory when closing down
+ o --retry didn't do right for FTP transient errors
+ o some *_proxy environment variables didn't function
+ o libcurl-OpenSSL engine cleanup
+ o header include fix for FreeBSD versions before v8
+ o fragment part of URLs are no longer sent to the server
+ o progress callback called repeatedly with c-ares for resolving
+ o OpenSSL session id ref count leak
+ o progress callback called repeatedly during slow connects
+ o curl_multi_fdset() would return -1 too often during SCP/SFTP transfers
+ o FTP file size checks with ASCII transfers
+ o HTTP Cookie: headers sort cookies based on specified path lengths
+ o CURLM_CALL_MULTI_PERFORM fix for multi socket timeout calls
+ o libcurl data callback excessive length:
+   http://curl.haxx.se/docs/adv_20100209.html
 
 This release includes the following known bugs:
 
  o see docs/KNOWN_BUGS (http://curl.haxx.se/docs/knownbugs.html)
 
 This release would not have looked like this without help, code, reports and
 advice from friends like these:
 
- Karl Moerder, Kamil Dudka, Krister Johansen, Andre Guibert de Bruet,
- Michal Marek, Eric Wong, Guenter Knauf, Peter Sylvester, Daniel Johnson,
- Claes Jakobsson, Sven Anders, Chris Mumford, John P. McCaskey,
- Constantine Sapuntzakis, Michael Stillwell, Tom Mueller, Dan Fandrich,
- Kevin Baughman, John Dennis, Ray Dassen, Johan van Selst, Dima Barsky,
- Liza Alenchery, Gabriel Kuri, Stan van de Burgt, Didier Brisebourg
+ Yang Tse, Kamil Dudka, Christian Schmitz, Constantine Sapuntzakis,
+ Marco Maggi, Camille Moncelier, Claes Jakobsson, Kevin Baughman,
+ Marc Kleine-Budde, Jad Chamcham, Bjorn Augustsson, David Byron,
+ Markus Koetter, Chad Monroe, Martin Storsjo, Siegfried Gyuricsko,
+ Jon Nelson, Julien Chaffraix, Renato Botelho, Peter Pentchev, Ingmar Runge,
+ Johan van Selst, Charles Kerr, Gil Weber, David McCreedy, Chris Conroy,
+ Bjorn Stenberg, Mike Crowe, Joshua Kwan, Daniel Fandrich, Wesley Miaw
 
         Thanks! (and sorry if I forgot to mention someone)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/config-riscos.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/config-riscos.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/config-riscos.h	2009-07-23 04:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/config-riscos.h	2009-11-18 00:43:32.000000000 +0800
@@ -50,15 +50,12 @@
 /* Define this as a suitable file to read random data from */
 #undef RANDOM_FILE
 
 /* Define this to your Entropy Gathering Daemon socket pathname */
 #undef EGD_SOCKET
 
-/* Set to explicitly specify we don't want to use thread-safe functions */
-#define DISABLED_THREADSAFE
-
 /* Define if you want to enable IPv6 support */
 #undef ENABLE_IPV6
 
 /* Define if you have the <alloca.h> header file. */
 #define HAVE_ALLOCA_H
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/config-win32.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/config-win32.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/config-win32.h	2009-10-29 04:21:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/config-win32.h	2010-01-25 06:42:54.000000000 +0800
@@ -324,23 +324,26 @@
 #endif
 
 /* Availability of freeaddrinfo, getaddrinfo and getnameinfo functions is
    quite convoluted, compiler dependent and even build target dependent. */
 #if defined(HAVE_WS2TCPIP_H)
 #  if defined(__POCC__)
-#    define HAVE_FREEADDRINFO 1
-#    define HAVE_GETADDRINFO  1
-#    define HAVE_GETNAMEINFO  1
+#    define HAVE_FREEADDRINFO           1
+#    define HAVE_GETADDRINFO            1
+#    define HAVE_GETADDRINFO_THREADSAFE 1
+#    define HAVE_GETNAMEINFO            1
 #  elif defined(_WIN32_WINNT) && (_WIN32_WINNT >= 0x0501)
-#    define HAVE_FREEADDRINFO 1
-#    define HAVE_GETADDRINFO  1
-#    define HAVE_GETNAMEINFO  1
+#    define HAVE_FREEADDRINFO           1
+#    define HAVE_GETADDRINFO            1
+#    define HAVE_GETADDRINFO_THREADSAFE 1
+#    define HAVE_GETNAMEINFO            1
 #  elif defined(_MSC_VER) && (_MSC_VER >= 1200)
-#    define HAVE_FREEADDRINFO 1
-#    define HAVE_GETADDRINFO  1
-#    define HAVE_GETNAMEINFO  1
+#    define HAVE_FREEADDRINFO           1
+#    define HAVE_GETADDRINFO            1
+#    define HAVE_GETADDRINFO_THREADSAFE 1
+#    define HAVE_GETNAMEINFO            1
 #  endif
 #endif
 
 #if defined(__POCC__)
 #  ifndef _MSC_VER
 #    error Microsoft extensions /Ze compiler option is required
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/curl_config.h.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/curl_config.h.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/curl_config.h.in	2009-11-04 20:34:59.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/curl_config.h.in	2010-02-09 18:06:56.000000000 +0800
@@ -24,21 +24,33 @@
 /* to disable FTP */
 #undef CURL_DISABLE_FTP
 
 /* to disable HTTP */
 #undef CURL_DISABLE_HTTP
 
+/* to disable IMAP */
+#undef CURL_DISABLE_IMAP
+
 /* to disable LDAP */
 #undef CURL_DISABLE_LDAP
 
 /* to disable LDAPS */
 #undef CURL_DISABLE_LDAPS
 
+/* to disable POP3 */
+#undef CURL_DISABLE_POP3
+
 /* to disable proxies */
 #undef CURL_DISABLE_PROXY
 
+/* to disable RTSP */
+#undef CURL_DISABLE_RTSP
+
+/* to disable SMTP */
+#undef CURL_DISABLE_SMTP
+
 /* to disable TELNET */
 #undef CURL_DISABLE_TELNET
 
 /* to disable TFTP */
 #undef CURL_DISABLE_TFTP
 
@@ -57,15 +69,12 @@
 /* Use W$ LDAP implementation */
 #undef CURL_LDAP_WIN
 
 /* when not building a shared library */
 #undef CURL_STATICLIB
 
-/* Set to explicitly specify we don't want to use thread-safe functions */
-#undef DISABLED_THREADSAFE
-
 /* your Entropy Gathering Daemon socket pathname */
 #undef EGD_SOCKET
 
 /* Define if you want to enable IPv6 support */
 #undef ENABLE_IPV6
 
@@ -132,12 +141,15 @@
 /* Define to 1 if you have the <des.h> header file. */
 #undef HAVE_DES_H
 
 /* Define to 1 if you have the <dlfcn.h> header file. */
 #undef HAVE_DLFCN_H
 
+/* Define to 1 if you have the `ENGINE_cleanup' function. */
+#undef HAVE_ENGINE_CLEANUP
+
 /* Define to 1 if you have the `ENGINE_load_builtin_engines' function. */
 #undef HAVE_ENGINE_LOAD_BUILTIN_ENGINES
 
 /* Define to 1 if you have the <errno.h> header file. */
 #undef HAVE_ERRNO_H
 
@@ -168,12 +180,15 @@
 /* Define to 1 if you have the ftruncate function. */
 #undef HAVE_FTRUNCATE
 
 /* Define to 1 if you have a working getaddrinfo function. */
 #undef HAVE_GETADDRINFO
 
+/* Define to 1 if the getaddrinfo function is threadsafe. */
+#undef HAVE_GETADDRINFO_THREADSAFE
+
 /* Define to 1 if you have the `geteuid' function. */
 #undef HAVE_GETEUID
 
 /* Define to 1 if you have the gethostbyaddr function. */
 #undef HAVE_GETHOSTBYADDR
 
@@ -744,12 +759,15 @@
 /* Define to 1 if you need the memory.h header file even with stdlib.h */
 #undef NEED_MEMORY_H
 
 /* Define to 1 if _REENTRANT preprocessor symbol must be defined. */
 #undef NEED_REENTRANT
 
+/* Define to 1 if _THREAD_SAFE preprocessor symbol must be defined. */
+#undef NEED_THREAD_SAFE
+
 /* cpu-machine-OS */
 #undef OS
 
 /* Name of package */
 #undef PACKAGE
 
@@ -861,12 +879,15 @@
 /* The size of `long', as computed by sizeof. */
 #undef SIZEOF_LONG
 
 /* The size of `off_t', as computed by sizeof. */
 #undef SIZEOF_OFF_T
 
+/* The size of `short', as computed by sizeof. */
+#undef SIZEOF_SHORT
+
 /* The size of `size_t', as computed by sizeof. */
 #undef SIZEOF_SIZE_T
 
 /* The size of `time_t', as computed by sizeof. */
 #undef SIZEOF_TIME_T
 
@@ -879,13 +900,13 @@
 /* Define to the type of arg 3 for strerror_r. */
 #undef STRERROR_R_TYPE_ARG3
 
 /* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
 #undef TIME_WITH_SYS_TIME
 
-/* Define if you want to enable c-ares support */
+/* Define to enable c-ares support */
 #undef USE_ARES
 
 /* Define to disable non-blocking sockets. */
 #undef USE_BLOCKING_SOCKETS
 
 /* if GnuTLS is enabled */
@@ -930,15 +951,12 @@
 /* Number of bits in a file offset, on hosts where this is settable. */
 #undef _FILE_OFFSET_BITS
 
 /* Define for large files, on AIX-style hosts. */
 #undef _LARGE_FILES
 
-/* define this if you need it to compile thread-safe code */
-#undef _THREAD_SAFE
-
 /* Define to empty if `const' does not conform to ANSI C. */
 #undef const
 
 /* Type to use in place of in_addr_t when system does not provide it. */
 #undef in_addr_t
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/getpass.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/getpass.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/getpass.c	2008-10-28 04:11:37.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/getpass.c	2010-01-01 22:17:52.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: getpass.c,v 1.24 2008-10-24 01:27:00 yangtse Exp $
+ * $Id: getpass.c,v 1.25 2009-12-30 17:59:57 yangtse Exp $
  ***************************************************************************/
 
 /* This file is a reimplementation of the previous one, due to license
    problems. */
 
 #include "setup.h"
@@ -51,13 +51,13 @@
 
 /* The last #include file should be: */
 #if defined(CURLDEBUG) && defined(CURLTOOLDEBUG)
 #include "memdebug.h"
 #endif
 
-#ifdef VMS
+#ifdef __VMS
 /* VMS implementation */
 #include descrip
 #include starlet
 #include iodef
 /* #include iosbdef */
 char *getpass_r(const char *prompt, char *buffer, size_t buflen)
@@ -90,13 +90,13 @@
 
     sts = sys$dassgn(chan);
   }
   return buffer; /* we always return success */
 }
 #define DONE
-#endif /* VMS */
+#endif /* __VMS */
 
 
 #ifdef WIN32
 /* Windows implementation */
 #include <conio.h>
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/homedir.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/homedir.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/homedir.c	2008-09-18 20:42:18.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/homedir.c	2010-01-01 22:17:52.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2007, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: homedir.c,v 1.11 2008-09-12 11:18:18 yangtse Exp $
+ * $Id: homedir.c,v 1.12 2009-12-30 17:59:57 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #include <stdio.h>
 #include <stdlib.h>
@@ -30,13 +30,13 @@
 #ifdef HAVE_PWD_H
 #include <pwd.h>
 #endif
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
-#ifdef VMS
+#ifdef __VMS
 #include <unixlib.h>
 #endif
 
 #include "homedir.h"
 
 #if defined(CURLDEBUG) && defined(CURLTOOLDEBUG)
@@ -65,13 +65,13 @@
     if (rc > 0 && rc < sizeof(buf2) &&
         !strchr(buf2,'%'))    /* no vars still unexpanded */
       env = buf2;
   }
 #else
   (void)do_expand;
-#ifdef  VMS
+#ifdef __VMS
   env = getenv(variable);
   if (env && strcmp("HOME",variable) == 0) {
         env = decc_translate_vms(env);
   }
 #else
   /* no length control */
@@ -96,13 +96,13 @@
 
 #if defined(HAVE_GETPWUID) && defined(HAVE_GETEUID)
  {
    struct passwd *pw = getpwuid(geteuid());
 
    if (pw) {
-#ifdef VMS
+#ifdef __VMS
      home = decc_translate_vms(pw->pw_dir);
 #else
      home = pw->pw_dir;
 #endif
      if (home && home[0])
        home = strdup(home);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/hugehelp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/hugehelp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/hugehelp.c	2009-11-04 20:29:07.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/hugehelp.c	2010-02-02 20:40:56.000000000 +0800
@@ -1,11 +1,11 @@
 #include "setup.h"
 #ifndef HAVE_LIBZ
 /*
  * NEVER EVER edit this manually, fix the mkhelp.pl script instead!
- * Generation time: Wed Nov  4 13:29:06 2009
+ * Generation time: Tue Feb  2 13:40:56 2010
  */
 #include "setup.h"
 #ifdef USE_MANUAL
 #include "hugehelp.h"
 #include <stdio.h>
 void hugehelp(void)
@@ -648,320 +648,342 @@
 "              connection.  Instead  curl  will  re-use  the same IP address it\n"
 "              already uses for the control connection. (Added in 7.14.2)\n"
 "\n"
 "              This option has no effect if PORT, EPRT or EPSV is used  instead\n"
 "              of PASV.\n"
 "\n"
-"       --ftp-ssl\n"
-"              (FTP)  Try  to use SSL/TLS for the FTP connection.  Reverts to a\n"
+"       --ftp-pret\n"
+"              (FTP)  Tell  curl to send a PRET command before PASV (and EPSV).\n"
 , stdout);
  fputs(
-"              non-secure connection if the  server  doesn't  support  SSL/TLS.\n"
-"              See also --ftp-ssl-control and --ftp-ssl-reqd for different lev-\n"
-"              els of encryption required. (Added in 7.11.0)\n"
+"              Certain FTP servers, mainly drftpd,  require  this  non-standard\n"
+"              command  for  directory  listings as well as up and downloads in\n"
+"              PASV mode.  (Added in 7.20.x)\n"
+"\n"
+"       --ssl  (FTP, POP3, IMAP, SMTP) Try to use SSL/TLS for  the  connection.\n"
+"              Reverts to a non-secure connection if the server doesn't support\n"
+"              SSL/TLS.  See also --ftp-ssl-control and --ssl-reqd for  differ-\n"
+, stdout);
+ fputs(
+"              ent levels of encryption required. (Added in 7.20.0)\n"
+"\n"
+"              This  option  was  formerly known as --ftp-ssl (Added in 7.11.0)\n"
+"              and that can still be used but will be removed in a future  ver-\n"
+"              sion.\n"
 "\n"
 "       --ftp-ssl-control\n"
-"              (FTP) Require SSL/TLS for the FTP  login,  clear  for  transfer.\n"
-"              Allows  secure  authentication, but non-encrypted data transfers\n"
-"              for efficiency.  Fails the transfer if the server  doesn't  sup-\n"
+"              (FTP)  Require  SSL/TLS  for  the FTP login, clear for transfer.\n"
+"              Allows secure authentication, but non-encrypted  data  transfers\n"
 , stdout);
  fputs(
+"              for  efficiency.   Fails the transfer if the server doesn't sup-\n"
 "              port SSL/TLS.  (Added in 7.16.0)\n"
 "\n"
-"       --ftp-ssl-reqd\n"
-"              (FTP)  Require  SSL/TLS  for the FTP connection.  Terminates the\n"
-"              connection if the server doesn't  support  SSL/TLS.   (Added  in\n"
-"              7.15.5)\n"
+"       --ssl-reqd\n"
+"              (FTP, POP3, IMAP, SMTP)  Require  SSL/TLS  for  the  connection.\n"
+"              Terminates the connection if the server doesn't support SSL/TLS.\n"
+"              (Added in 7.20.0)\n"
 "\n"
-"       --ftp-ssl-ccc\n"
-"              (FTP)  Use  CCC  (Clear  Command Channel) Shuts down the SSL/TLS\n"
-"              layer after authenticating. The rest of the control channel com-\n"
+"              This option was  formerly  known  as  --ftp-ssl-reqd  (added  in\n"
+"              7.15.5)  and  that  can  still  be used but will be removed in a\n"
 , stdout);
  fputs(
-"              munication  will be unencrypted. This allows NAT routers to fol-\n"
+"              future version.\n"
+"\n"
+"       --ftp-ssl-ccc\n"
+"              (FTP) Use CCC (Clear Command Channel)  Shuts  down  the  SSL/TLS\n"
+"              layer after authenticating. The rest of the control channel com-\n"
+"              munication will be unencrypted. This allows NAT routers to  fol-\n"
 "              low the FTP transaction. The default mode is passive. See --ftp-\n"
 "              ssl-ccc-mode for other modes.  (Added in 7.16.1)\n"
 "\n"
 "       --ftp-ssl-ccc-mode [active/passive]\n"
-"              (FTP)  Use  CCC  (Clear  Command Channel) Sets the CCC mode. The\n"
-"              passive mode will not initiate the shutdown,  but  instead  wait\n"
 , stdout);
  fputs(
+"              (FTP) Use CCC (Clear Command Channel) Sets  the  CCC  mode.  The\n"
+"              passive  mode  will  not initiate the shutdown, but instead wait\n"
 "              for the server to do it, and will not reply to the shutdown from\n"
 "              the server. The active mode initiates the shutdown and waits for\n"
 "              a reply from the server.  (Added in 7.16.2)\n"
 "\n"
 "       -F/--form <name=content>\n"
-"              (HTTP)  This  lets curl emulate a filled-in form in which a user\n"
-"              has pressed the submit button. This causes  curl  to  POST  data\n"
-"              using the Content-Type multipart/form-data according to RFC2388.\n"
+"              (HTTP) This lets curl emulate a filled-in form in which  a  user\n"
 , stdout);
  fputs(
-"              This enables uploading of binary files etc. To force  the  'con-\n"
+"              has  pressed  the  submit  button. This causes curl to POST data\n"
+"              using the Content-Type multipart/form-data according to RFC2388.\n"
+"              This  enables  uploading of binary files etc. To force the 'con-\n"
 "              tent' part to be a file, prefix the file name with an @ sign. To\n"
 "              just get the content part from a file, prefix the file name with\n"
-"              the  symbol  <.  The  difference  between @ and < is then that @\n"
-"              makes a file get attached in the post as a  file  upload,  while\n"
-"              the < makes a text field and just get the contents for that text\n"
+"              the symbol <. The difference between @ and  <  is  then  that  @\n"
 , stdout);
  fputs(
+"              makes  a  file  get attached in the post as a file upload, while\n"
+"              the < makes a text field and just get the contents for that text\n"
 "              field from a file.\n"
 "\n"
-"              Example, to send your password file to the server, where  'pass-\n"
+"              Example,  to send your password file to the server, where 'pass-\n"
 "              word' is the name of the form-field to which /etc/passwd will be\n"
 "              the input:\n"
 "\n"
 "              curl -F password=@/etc/passwd www.mypasswords.com\n"
 "\n"
-"              To read the file's content from stdin instead of a file,  use  -\n"
-"              where  the  file name should've been. This goes for both @ and <\n"
-"              constructs.\n"
-"\n"
 , stdout);
  fputs(
-"              You can also  tell  curl  what  Content-Type  to  use  by  using\n"
+"              To  read  the file's content from stdin instead of a file, use -\n"
+"              where the file name should've been. This goes for both @  and  <\n"
+"              constructs.\n"
+"\n"
+"              You  can  also  tell  curl  what  Content-Type  to  use by using\n"
 "              'type=', in a manner similar to:\n"
 "\n"
 "              curl -F \"web=@index.html;type=text/html\" url.com\n"
 "\n"
 "              or\n"
 "\n"
 "              curl -F \"name=daniel;type=text/foo\" url.com\n"
 "\n"
-"              You  can also explicitly change the name field of an file upload\n"
+, stdout);
+ fputs(
+"              You can also explicitly change the name field of an file  upload\n"
 "              part by setting filename=, like this:\n"
 "\n"
 "              curl -F \"file=@localfile;filename=nameinpost\" url.com\n"
 "\n"
-, stdout);
- fputs(
 "              See further examples and details in the MANUAL.\n"
 "\n"
 "              This option can be used multiple times.\n"
 "\n"
 "       --form-string <name=string>\n"
-"              (HTTP) Similar to --form except that the value  string  for  the\n"
-"              named  parameter  is used literally. Leading '@' and '<' charac-\n"
-"              ters, and the ';type=' string in the value have no special mean-\n"
-"              ing. Use this in preference to --form if there's any possibility\n"
+"              (HTTP)  Similar  to  --form except that the value string for the\n"
 , stdout);
  fputs(
-"              that the string value may accidentally trigger the  '@'  or  '<'\n"
+"              named parameter is used literally. Leading '@' and  '<'  charac-\n"
+"              ters, and the ';type=' string in the value have no special mean-\n"
+"              ing. Use this in preference to --form if there's any possibility\n"
+"              that  the  string  value may accidentally trigger the '@' or '<'\n"
 "              features of --form.\n"
 "\n"
 "       -g/--globoff\n"
 "              This option switches off the \"URL globbing parser\". When you set\n"
-"              this option, you can specify URLs that contain the letters  {}[]\n"
-"              without  having them being interpreted by curl itself. Note that\n"
-"              these letters are not normal legal URL contents but they  should\n"
 , stdout);
  fputs(
+"              this  option, you can specify URLs that contain the letters {}[]\n"
+"              without having them being interpreted by curl itself. Note  that\n"
+"              these  letters are not normal legal URL contents but they should\n"
 "              be encoded according to the URI standard.\n"
 "\n"
 "       -G/--get\n"
-"              When  used,  this  option  will  make  all  data  specified with\n"
-"              -d/--data or --data-binary to be used  in  a  HTTP  GET  request\n"
-"              instead  of  the  POST request that otherwise would be used. The\n"
-"              data will be appended to the URL with a '?' separator.\n"
-"\n"
-"              If used in combination with -I, the POST data  will  instead  be\n"
+"              When used,  this  option  will  make  all  data  specified  with\n"
+"              -d/--data  or  --data-binary  to  be  used in a HTTP GET request\n"
 , stdout);
  fputs(
+"              instead of the POST request that otherwise would  be  used.  The\n"
+"              data will be appended to the URL with a '?' separator.\n"
+"\n"
+"              If  used  in  combination with -I, the POST data will instead be\n"
 "              appended to the URL with a HEAD request.\n"
 "\n"
-"              If  this option is used several times, the following occurrences\n"
-"              make no difference. This is because undoing a GET  doesn't  make\n"
-"              sense,  but  you  should  then  instead  enforce the alternative\n"
+"              If this option is used several times, the following  occurrences\n"
+"              make  no  difference. This is because undoing a GET doesn't make\n"
+, stdout);
+ fputs(
+"              sense, but you  should  then  instead  enforce  the  alternative\n"
 "              method you prefer.\n"
 "\n"
 "       -h/--help\n"
 "              Usage help.\n"
 "\n"
 "       -H/--header <header>\n"
-"              (HTTP) Extra header to use when getting  a  web  page.  You  may\n"
-, stdout);
- fputs(
+"              (HTTP)  Extra  header  to  use  when getting a web page. You may\n"
 "              specify any number of extra headers. Note that if you should add\n"
-"              a custom header that has the same name as one  of  the  internal\n"
-"              ones  curl  would  use,  your externally set header will be used\n"
-"              instead of the internal one. This allows you to make even trick-\n"
-"              ier  stuff  than  curl would normally do. You should not replace\n"
-"              internally set  headers  without  knowing  perfectly  well  what\n"
+"              a  custom  header  that has the same name as one of the internal\n"
 , stdout);
  fputs(
-"              you're  doing. Remove an internal header by giving a replacement\n"
-"              without content on the right  side  of  the  colon,  as  in:  -H\n"
+"              ones curl would use, your externally set  header  will  be  used\n"
+"              instead of the internal one. This allows you to make even trick-\n"
+"              ier stuff than curl would normally do. You  should  not  replace\n"
+"              internally  set  headers  without  knowing  perfectly  well what\n"
+"              you're doing. Remove an internal header by giving a  replacement\n"
+"              without  content  on  the  right  side  of  the colon, as in: -H\n"
 "              \"Host:\".\n"
 "\n"
-"              curl  will  make  sure  that each header you add/replace is sent\n"
+, stdout);
+ fputs(
+"              curl will make sure that each header  you  add/replace  is  sent\n"
 "              with the proper end-of-line marker, you should thus not add that\n"
 "              as a part of the header content: do not add newlines or carriage\n"
 "              returns, they will only mess things up for you.\n"
 "\n"
-, stdout);
- fputs(
 "              See also the -A/--user-agent and -e/--referer options.\n"
 "\n"
-"              This option can be used  multiple  times  to  add/replace/remove\n"
+"              This  option  can  be  used multiple times to add/replace/remove\n"
 "              multiple headers.\n"
 "\n"
-"       --hostpubmd5 <md5>\n"
-"              Pass  a  string  containing  32  hexadecimal  digits. The string\n"
-"              should be the 128 bit MD5 checksum of the remote  host's  public\n"
-"              key,  curl  will  refuse the connection with the host unless the\n"
 , stdout);
  fputs(
-"              md5sums match. This option is only for SCP and  SFTP  transfers.\n"
+"       --hostpubmd5 <md5>\n"
+"              Pass a string  containing  32  hexadecimal  digits.  The  string\n"
+"              should  be  the 128 bit MD5 checksum of the remote host's public\n"
+"              key, curl will refuse the connection with the  host  unless  the\n"
+"              md5sums  match.  This option is only for SCP and SFTP transfers.\n"
 "              (Added in 7.17.1)\n"
 "\n"
 "       --ignore-content-length\n"
-"              (HTTP)  Ignore  the  Content-Length header. This is particularly\n"
-"              useful for servers running Apache 1.x, which will report  incor-\n"
+"              (HTTP) Ignore the Content-Length header.  This  is  particularly\n"
+, stdout);
+ fputs(
+"              useful  for servers running Apache 1.x, which will report incor-\n"
 "              rect Content-Length for files larger than 2 gigabytes.\n"
 "\n"
 "       -i/--include\n"
-"              (HTTP)  Include  the  HTTP-header in the output. The HTTP-header\n"
-, stdout);
- fputs(
-"              includes things like server-name, date of  the  document,  HTTP-\n"
+"              (HTTP) Include the HTTP-header in the  output.  The  HTTP-header\n"
+"              includes  things  like  server-name, date of the document, HTTP-\n"
 "              version and more...\n"
 "\n"
 "       --interface <name>\n"
-"              Perform  an operation using a specified interface. You can enter\n"
-"              interface name, IP address or host name. An example  could  look\n"
+"              Perform an operation using a specified interface. You can  enter\n"
+, stdout);
+ fputs(
+"              interface  name,  IP address or host name. An example could look\n"
 "              like:\n"
 "\n"
 "               curl --interface eth0:1 http://www.netscape.com/\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -I/--head\n"
+"              (HTTP/FTP/FILE) Fetch the HTTP-header only! HTTP-servers feature\n"
+"              the  command  HEAD which this uses to get nothing but the header\n"
+"              of a document. When used on a FTP or FILE  file,  curl  displays\n"
 , stdout);
  fputs(
-"              (HTTP/FTP/FILE) Fetch the HTTP-header only! HTTP-servers feature\n"
-"              the command HEAD which this uses to get nothing but  the  header\n"
-"              of  a  document.  When used on a FTP or FILE file, curl displays\n"
 "              the file size and last modification time only.\n"
 "\n"
 "       -j/--junk-session-cookies\n"
 "              (HTTP) When curl is told to read cookies from a given file, this\n"
-"              option  will  make  it  discard all \"session cookies\". This will\n"
+"              option will make it discard all  \"session  cookies\".  This  will\n"
+"              basically  have  the same effect as if a new session is started.\n"
+"              Typical browsers always discard  session  cookies  when  they're\n"
+"              closed down.\n"
+"\n"
+"       -J/--remote-header-name\n"
 , stdout);
  fputs(
-"              basically have the same effect as if a new session  is  started.\n"
-"              Typical  browsers  always  discard  session cookies when they're\n"
-"              closed down.\n"
+"              (HTTP)  This option tells the -O/--remote-name option to use the\n"
+"              server-specified   Content-Disposition   filename   instead   of\n"
+"              extracting a filename from the URL.\n"
 "\n"
 "       -k/--insecure\n"
-"              (SSL) This option explicitly allows curl to  perform  \"insecure\"\n"
+"              (SSL)  This  option explicitly allows curl to perform \"insecure\"\n"
 "              SSL connections and transfers. All SSL connections are attempted\n"
-"              to be made secure by using the CA certificate  bundle  installed\n"
+"              to  be  made secure by using the CA certificate bundle installed\n"
 , stdout);
  fputs(
-"              by  default.  This  makes  all connections considered \"insecure\"\n"
+"              by default. This makes  all  connections  considered  \"insecure\"\n"
 "              fail unless -k/--insecure is used.\n"
 "\n"
-"              See    this    online    resource    for    further     details:\n"
+"              See     this    online    resource    for    further    details:\n"
 "              http://curl.haxx.se/docs/sslcerts.html\n"
 "\n"
 "       --keepalive-time <seconds>\n"
-"              This  option  sets  the  time  a connection needs to remain idle\n"
-"              before sending keepalive probes and the time between  individual\n"
+"              This option sets the time a  connection  needs  to  remain  idle\n"
+"              before  sending keepalive probes and the time between individual\n"
 , stdout);
  fputs(
 "              keepalive probes. It is currently effective on operating systems\n"
 "              offering  the  TCP_KEEPIDLE  and  TCP_KEEPINTVL  socket  options\n"
-"              (meaning  Linux, recent AIX, HP-UX and more). This option has no\n"
+"              (meaning Linux, recent AIX, HP-UX and more). This option has  no\n"
 "              effect if --no-keepalive is used. (Added in 7.18.0)\n"
 "\n"
-"              If this option is used multiple times, the last occurrence  sets\n"
+"              If  this option is used multiple times, the last occurrence sets\n"
 "              the amount.\n"
 "       --key <key>\n"
 , stdout);
  fputs(
 "              (SSL/SSH) Private key file name. Allows you to provide your pri-\n"
 "              vate key in this separate file.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --key-type <type>\n"
-"              (SSL) Private key file type. Specify which type your --key  pro-\n"
-"              vided  private  key  is. DER, PEM, and ENG are supported. If not\n"
+"              (SSL)  Private key file type. Specify which type your --key pro-\n"
+"              vided private key is. DER, PEM, and ENG are  supported.  If  not\n"
 "              specified, PEM is assumed.\n"
 "\n"
 , stdout);
  fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --krb <level>\n"
-"              (FTP) Enable Kerberos authentication and use. The level must  be\n"
+"              (FTP)  Enable Kerberos authentication and use. The level must be\n"
 "              entered and should be one of 'clear', 'safe', 'confidential', or\n"
-"              'private'. Should you use a level that  is  not  one  of  these,\n"
+"              'private'.  Should  you  use  a  level that is not one of these,\n"
 "              'private' will instead be used.\n"
 "\n"
-"              This  option  requires  a library built with kerberos4 or GSSAPI\n"
+"              This option requires a library built with  kerberos4  or  GSSAPI\n"
 , stdout);
  fputs(
-"              (GSS-Negotiate) support. This is not very common. Use  -V/--ver-\n"
+"              (GSS-Negotiate)  support. This is not very common. Use -V/--ver-\n"
 "              sion to see if your curl supports it.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -K/--config <config file>\n"
-"              Specify  which config file to read curl arguments from. The con-\n"
-"              fig file is a text file in which command line arguments  can  be\n"
-"              written  which  then will be used as if they were written on the\n"
+"              Specify which config file to read curl arguments from. The  con-\n"
+"              fig  file  is a text file in which command line arguments can be\n"
+"              written which then will be used as if they were written  on  the\n"
 , stdout);
  fputs(
 "              actual command line. Options and their parameters must be speci-\n"
-"              fied  on  the  same  config  file line, separated by whitespace,\n"
-"              colon, the equals sign or any combination thereof (however,  the\n"
-"              preferred  separator is the equals sign). If the parameter is to\n"
+"              fied on the same config  file  line,  separated  by  whitespace,\n"
+"              colon,  the equals sign or any combination thereof (however, the\n"
+"              preferred separator is the equals sign). If the parameter is  to\n"
 "              contain  whitespace,  the  parameter  must  be  enclosed  within\n"
 "              quotes. Within double quotes, the following escape sequences are\n"
 , stdout);
  fputs(
-"              available: \\\\, \\\", \\t, \\n, \\r and \\v. A backslash preceding  any\n"
+"              available:  \\\\, \\\", \\t, \\n, \\r and \\v. A backslash preceding any\n"
 "              other letter is ignored. If the first column of a config line is\n"
-"              a '#' character, the rest of the line will be treated as a  com-\n"
-"              ment.  Only  write  one  option  per physical line in the config\n"
+"              a  '#' character, the rest of the line will be treated as a com-\n"
+"              ment. Only write one option per  physical  line  in  the  config\n"
 "              file.\n"
 "\n"
 "              Specify the filename to -K/--config as '-' to make curl read the\n"
 "              file from stdin.\n"
 "\n"
 , stdout);
  fputs(
-"              Note  that  to  be able to specify a URL in the config file, you\n"
-"              need to specify it using the --url option,  and  not  by  simply\n"
-"              writing  the  URL  on its own line. So, it could look similar to\n"
+"              Note that to be able to specify a URL in the  config  file,  you\n"
+"              need  to  specify  it  using the --url option, and not by simply\n"
+"              writing the URL on its own line. So, it could  look  similar  to\n"
 "              this:\n"
 "\n"
 "              url = \"http://curl.haxx.se/docs/\"\n"
 "\n"
-"              Long option names can optionally be given  in  the  config  file\n"
+"              Long  option  names  can  optionally be given in the config file\n"
 "              without the initial double dashes.\n"
 "\n"
 , stdout);
  fputs(
 "              When curl is invoked, it always (unless -q is used) checks for a\n"
-"              default config file and uses it if  found.  The  default  config\n"
+"              default  config  file  and  uses it if found. The default config\n"
 "              file is checked for in the following places in this order:\n"
 "\n"
-"              1)  curl  tries  to find the \"home dir\": It first checks for the\n"
+"              1) curl tries to find the \"home dir\": It first  checks  for  the\n"
 "              CURL_HOME and then the HOME environment variables. Failing that,\n"
-"              it  uses getpwuid() on UNIX-like systems (which returns the home\n"
+"              it uses getpwuid() on UNIX-like systems (which returns the  home\n"
 , stdout);
  fputs(
-"              dir given the current user in your system). On Windows, it  then\n"
+"              dir  given the current user in your system). On Windows, it then\n"
 "              checks for the APPDATA variable, or as a last resort the '%USER-\n"
 "              PROFILE%\\Application Data'.\n"
 "\n"
-"              2) On windows, if there is no _curlrc file in the home  dir,  it\n"
+"              2)  On  windows, if there is no _curlrc file in the home dir, it\n"
 "              checks for one in the same dir the curl executable is placed. On\n"
-"              UNIX-like systems, it will simply try to load .curlrc  from  the\n"
+"              UNIX-like  systems,  it will simply try to load .curlrc from the\n"
 "              determined home dir.\n"
 "\n"
 , stdout);
  fputs(
 "              # --- Example file ---\n"
 "              # this is a comment\n"
@@ -972,199 +994,214 @@
 "              # and fetch another URL too\n"
 "              url = \"curl.haxx.se/docs/manpage.html\"\n"
 "              -O\n"
 "              referer = \"http://nowhereatall.com/\"\n"
 "              # --- End of example file ---\n"
 "\n"
-"              This  option  can be used multiple times to load multiple config\n"
+"              This option can be used multiple times to load  multiple  config\n"
 "              files.\n"
 "\n"
 , stdout);
  fputs(
 "       --libcurl <file>\n"
-"              Append this option to any ordinary curl command  line,  and  you\n"
-"              will  get  a  libcurl-using source code written to the file that\n"
+"              Append  this  option  to any ordinary curl command line, and you\n"
+"              will get a libcurl-using source code written to  the  file  that\n"
 "              does the equivalent of what your command-line operation does!\n"
 "\n"
-"              NOTE: this does not properly support -F and the sending of  mul-\n"
-"              tipart  formposts,  so in those cases the output program will be\n"
+"              NOTE:  this does not properly support -F and the sending of mul-\n"
+"              tipart formposts, so in those cases the output program  will  be\n"
 "              missing necessary calls to curl_formadd(3), and possibly more.\n"
 "\n"
 , stdout);
  fputs(
-"              If this option is used several times, the last given  file  name\n"
+"              If  this  option is used several times, the last given file name\n"
 "              will be used. (Added in 7.16.1)\n"
 "\n"
 "       --limit-rate <speed>\n"
-"              Specify  the  maximum  transfer  rate you want curl to use. This\n"
+"              Specify the maximum transfer rate you want  curl  to  use.  This\n"
 "              feature is useful if you have a limited pipe and you'd like your\n"
 "              transfer not to use your entire bandwidth.\n"
 "\n"
-"              The  given speed is measured in bytes/second, unless a suffix is\n"
+"              The given speed is measured in bytes/second, unless a suffix  is\n"
 , stdout);
  fputs(
-"              appended.  Appending 'k' or 'K' will count the number  as  kilo-\n"
-"              bytes,  'm'  or M' makes it megabytes, while 'g' or 'G' makes it\n"
+"              appended.   Appending  'k' or 'K' will count the number as kilo-\n"
+"              bytes, 'm' or M' makes it megabytes, while 'g' or 'G'  makes  it\n"
 "              gigabytes. Examples: 200K, 3m and 1G.\n"
 "\n"
-"              The given rate is the average speed counted  during  the  entire\n"
+"              The  given  rate  is the average speed counted during the entire\n"
 "              transfer. It means that curl might use higher transfer speeds in\n"
 "              short bursts, but over time it uses no more than the given rate.\n"
 , stdout);
  fputs(
-"              If you also use the -Y/--speed-limit option,  that  option  will\n"
+"              If  you  also  use the -Y/--speed-limit option, that option will\n"
 "              take precedence and might cripple the rate-limiting slightly, to\n"
 "              help keeping the speed-limit logic working.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -l/--list-only\n"
-"              (FTP) When listing an FTP directory, this switch forces a  name-\n"
-"              only  view.   Especially useful if you want to machine-parse the\n"
+"              (FTP)  When listing an FTP directory, this switch forces a name-\n"
+"              only view.  Especially useful if you want to  machine-parse  the\n"
 , stdout);
  fputs(
-"              contents of an FTP directory since  the  normal  directory  view\n"
+"              contents  of  an  FTP  directory since the normal directory view\n"
 "              doesn't use a standard look or format.\n"
 "\n"
-"              This  option  causes  an  FTP NLST command to be sent.  Some FTP\n"
-"              servers list only files in their response to NLST; they  do  not\n"
+"              This option causes an FTP NLST command to  be  sent.   Some  FTP\n"
+"              servers  list  only files in their response to NLST; they do not\n"
 "              include subdirectories and symbolic links.\n"
 "\n"
 "       --local-port <num>[-num]\n"
 "              Set a preferred number or range of local port numbers to use for\n"
 , stdout);
  fputs(
-"              the connection(s).  Note that  port  numbers  by  nature  are  a\n"
+"              the  connection(s).   Note  that  port  numbers  by nature are a\n"
 "              scarce resource that will be busy at times so setting this range\n"
 "              to something too narrow might cause unnecessary connection setup\n"
 "              failures. (Added in 7.15.2)\n"
 "\n"
 "       -L/--location\n"
-"              (HTTP/HTTPS)  If  the server reports that the requested page has\n"
+"              (HTTP/HTTPS) If the server reports that the requested  page  has\n"
 "              moved to a different location (indicated with a Location: header\n"
 , stdout);
  fputs(
-"              and  a  3XX  response code), this option will make curl redo the\n"
-"              request on the new place. If used together with -i/--include  or\n"
-"              -I/--head,  headers from all requested pages will be shown. When\n"
-"              authentication is used, curl only sends its credentials  to  the\n"
-"              initial  host.  If a redirect takes curl to a different host, it\n"
-"              won't be able to intercept the user+password. See  also  --loca-\n"
+"              and a 3XX response code), this option will make  curl  redo  the\n"
+"              request  on the new place. If used together with -i/--include or\n"
+"              -I/--head, headers from all requested pages will be shown.  When\n"
+"              authentication  is  used, curl only sends its credentials to the\n"
+"              initial host. If a redirect takes curl to a different  host,  it\n"
+"              won't  be  able to intercept the user+password. See also --loca-\n"
 , stdout);
  fputs(
-"              tion-trusted  on how to change this. You can limit the amount of\n"
+"              tion-trusted on how to change this. You can limit the amount  of\n"
 "              redirects to follow by using the --max-redirs option.\n"
 "\n"
-"              When curl follows a redirect and the request is not a plain  GET\n"
+"              When  curl follows a redirect and the request is not a plain GET\n"
 "              (for example POST or PUT), it will do the following request with\n"
 "              a GET if the HTTP response was 301, 302, or 303. If the response\n"
-"              code  was  any  other  3xx code, curl will re-send the following\n"
+"              code was any other 3xx code, curl  will  re-send  the  following\n"
 , stdout);
  fputs(
 "              request using the same unmodified method.\n"
 "\n"
 "       --location-trusted\n"
 "              (HTTP/HTTPS) Like -L/--location, but will allow sending the name\n"
-"              +  password to all hosts that the site may redirect to. This may\n"
+"              + password to all hosts that the site may redirect to. This  may\n"
 "              or may not introduce a security breach if the site redirects you\n"
-"              to  a  site to which you'll send your authentication info (which\n"
+"              to a site to which you'll send your authentication  info  (which\n"
 "              is plaintext in the case of HTTP Basic authentication).\n"
 "\n"
-"       --max-filesize <bytes>\n"
+"       --mail-rcpt <address>\n"
 , stdout);
  fputs(
+"              (SMTP)  Specify  a single address that the given mail should get\n"
+"              sent to. This option can be used multiple times to specify  many\n"
+"              recipients.\n"
+"\n"
+"              (Added in 7.20.0)\n"
+"\n"
+"       --mail-from <address>\n"
+"              (SMTP)  Specify  a single address that the given mail should get\n"
+"              sent from.\n"
+"\n"
+"              (Added in 7.20.0)\n"
+"\n"
+"       --max-filesize <bytes>\n"
 "              Specify the maximum size (in bytes) of a file  to  download.  If\n"
+, stdout);
+ fputs(
 "              the  file requested is larger than this value, the transfer will\n"
 "              not start and curl will return with exit code 63.\n"
 "\n"
 "              NOTE: The file size is not always known prior to  download,  and\n"
 "              for such files this option has no effect even if the file trans-\n"
 "              fer ends up being larger than this given  limit.  This  concerns\n"
-, stdout);
- fputs(
 "              both FTP and HTTP transfers.\n"
 "\n"
 "       -m/--max-time <seconds>\n"
+, stdout);
+ fputs(
 "              Maximum  time  in  seconds that you allow the whole operation to\n"
 "              take.  This is useful for preventing your batch jobs from  hang-\n"
 "              ing  for  hours  due  to slow networks or links going down.  See\n"
 "              also the --connect-timeout option.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -M/--manual\n"
-, stdout);
- fputs(
 "              Manual. Display the huge help text.\n"
 "\n"
 "       -n/--netrc\n"
+, stdout);
+ fputs(
 "              Makes curl scan the .netrc  (_netrc  on  Windows)  file  in  the\n"
 "              user's home directory for login name and password. This is typi-\n"
 "              cally used for FTP on UNIX. If used with HTTP, curl will  enable\n"
 "              user  authentication.  See netrc(4) or ftp(1) for details on the\n"
 "              file format. Curl will not complain if that  file  doesn't  have\n"
+"              the  right permissions (it should not be either world- or group-\n"
 , stdout);
  fputs(
-"              the  right permissions (it should not be either world- or group-\n"
 "              readable). The environment variable \"HOME\" is used to  find  the\n"
 "              home directory.\n"
 "\n"
 "              A  quick  and  very  simple  example of how to setup a .netrc to\n"
 "              allow curl to FTP to the machine host.domain.com with user  name\n"
 "              'myself' and password 'secret' should look similar to:\n"
 "\n"
 "              machine host.domain.com login myself password secret\n"
 "\n"
+"       --netrc-optional\n"
 , stdout);
  fputs(
-"       --netrc-optional\n"
 "              Very  similar to --netrc, but this option makes the .netrc usage\n"
 "              optional and not mandatory as the --netrc option does.\n"
 "\n"
 "       --negotiate\n"
 "              (HTTP) Enables GSS-Negotiate authentication.  The  GSS-Negotiate\n"
 "              method was designed by Microsoft and is used in their web appli-\n"
 "              cations. It is  primarily  meant  as  a  support  for  Kerberos5\n"
+"              authentication but may be also used along with another authenti-\n"
 , stdout);
  fputs(
-"              authentication but may be also used along with another authenti-\n"
 "              cation method. For more information see IETF draft draft-brezak-\n"
 "              spnego-http-04.txt.\n"
 "\n"
 "              If  you  want to enable Negotiate for your proxy authentication,\n"
 "              then use --proxy-negotiate.\n"
 "\n"
 "              This option requires a library built with GSSAPI  support.  This\n"
 "              is not very common. Use -V/--version to see if your version sup-\n"
-, stdout);
- fputs(
 "              ports GSS-Negotiate.\n"
 "\n"
+, stdout);
+ fputs(
 "              When using this option, you must also provide a  fake  -u/--user\n"
 "              option  to  activate the authentication code properly. Sending a\n"
 "              '-u :' is enough as the user  name  and  password  from  the  -u\n"
 "              option aren't actually used.\n"
 "\n"
 "              If  this option is used several times, the following occurrences\n"
 "              make no difference.\n"
 "\n"
 "       -N/--no-buffer\n"
+"              Disables the buffering of the output stream. In normal work sit-\n"
 , stdout);
  fputs(
-"              Disables the buffering of the output stream. In normal work sit-\n"
 "              uations,  curl  will  use a standard buffered output stream that\n"
 "              will have the effect that it will output the data in chunks, not\n"
 "              necessarily  exactly  when  the data arrives.  Using this option\n"
 "              will disable that buffering.\n"
 "\n"
 "              Note that this is the negated option name  documented.  You  can\n"
 "              thus use --buffer to enforce the buffering.\n"
 "\n"
+"       --no-keepalive\n"
 , stdout);
  fputs(
-"       --no-keepalive\n"
 "              Disables the use of keepalive messages on the TCP connection, as\n"
 "              by default curl enables them.\n"
 "\n"
 "              Note that this is the negated option name  documented.  You  can\n"
 "              thus use --keepalive to enforce keepalive.\n"
 "\n"
@@ -1530,13 +1567,13 @@
 "       --retry <num>\n"
 "              If  a  transient  error is returned when curl tries to perform a\n"
 , stdout);
  fputs(
 "              transfer, it will retry this number of times before  giving  up.\n"
 "              Setting  the  number to 0 makes curl do no retries (which is the\n"
-"              default). Transient error means either: a timeout,  an  FTP  5xx\n"
+"              default). Transient error means either: a timeout,  an  FTP  4xx\n"
 "              response code or an HTTP 5xx response code.\n"
 "\n"
 "              When  curl  is about to retry a transfer, it will first wait one\n"
 "              second and then for all forthcoming retries it will  double  the\n"
 , stdout);
  fputs(
@@ -1634,193 +1671,208 @@
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "              (This option was  previously  wrongly  documented  and  used  as\n"
 , stdout);
  fputs(
 "              --socks without the number appended.)\n"
+"\n"
+"              This  option (as well as --socks4) does not work with IPV6, FTPS\n"
+"              or LDAP.\n"
+"\n"
 "       --socks5-gssapi-service <servicename>\n"
 "              The default service name for a socks server is rcmd/server-fqdn.\n"
 "              This option allows you to change it.\n"
 "\n"
 "              Examples:\n"
-"               --socks5 proxy-name --socks5-gssapi-service sockd    would  use\n"
+"               --socks5  proxy-name  --socks5-gssapi-service sockd   would use\n"
 "              sockd/proxy-name\n"
-"               --socks5   proxy-name  --socks5-gssapi-service  sockd/real-name\n"
 , stdout);
  fputs(
-"              would use sockd/real-name for cases where  the  proxy-name  does\n"
+"               --socks5  proxy-name  --socks5-gssapi-service   sockd/real-name\n"
+"              would  use  sockd/real-name  for cases where the proxy-name does\n"
 "              not match the princpal name.\n"
 "               (Added in 7.19.4).\n"
 "\n"
 "       --socks5-gssapi-nec\n"
-"              As  part  of the gssapi negotiation a protection mode is negoti-\n"
-"              ated. The rfc1961 says in section  4.3/4.4  it  should  be  pro-\n"
-"              tected,  but  the  NEC  reference  implementation does not.  The\n"
-"              option --socks5-gssapi-nec allows the  unprotected  exchange  of\n"
+"              As part of the gssapi negotiation a protection mode  is  negoti-\n"
+"              ated.  The  rfc1961  says  in  section 4.3/4.4 it should be pro-\n"
+"              tected, but the NEC  reference  implementation  does  not.   The\n"
 , stdout);
  fputs(
+"              option  --socks5-gssapi-nec  allows  the unprotected exchange of\n"
 "              the protection mode negotiation. (Added in 7.19.4).\n"
 "\n"
 "       --stderr <file>\n"
-"              Redirect  all writes to stderr to the specified file instead. If\n"
-"              the file name is a plain '-', it is instead written  to  stdout.\n"
-"              This  option  has no point when you're using a shell with decent\n"
+"              Redirect all writes to stderr to the specified file instead.  If\n"
+"              the  file  name is a plain '-', it is instead written to stdout.\n"
+"              This option has no point when you're using a shell  with  decent\n"
 "              redirecting capabilities.\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --tcp-nodelay\n"
-, stdout);
- fputs(
-"              Turn on the TCP_NODELAY option. See the curl_easy_setopt(3)  man\n"
+"              Turn  on the TCP_NODELAY option. See the curl_easy_setopt(3) man\n"
 "              page for details about this option. (Added in 7.11.2)\n"
 "\n"
 "       -t/--telnet-option <OPT=val>\n"
 "              Pass options to the telnet protocol. Supported options are:\n"
 "\n"
 "              TTYPE=<term> Sets the terminal type.\n"
 "\n"
 "              XDISPLOC=<X display> Sets the X display location.\n"
 "\n"
+, stdout);
+ fputs(
 "              NEW_ENV=<var,val> Sets an environment variable.\n"
 "\n"
+"       --tftp-blksize <value>\n"
+"              (TFTP) Set TFTP BLKSIZE option (must be >512). This is the block\n"
+"              size  that curl will try to use when tranferring data to or from\n"
+"              a TFTP server. By default 512 bytes will be used.\n"
+"\n"
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"              (Added in 7.20.0)\n"
+"\n"
 "       -T/--upload-file <file>\n"
 , stdout);
  fputs(
-"              This  transfers  the  specified local file to the remote URL. If\n"
+"              This transfers the specified local file to the  remote  URL.  If\n"
 "              there is no file part in the specified URL, Curl will append the\n"
 "              local file name. NOTE that you must use a trailing / on the last\n"
-"              directory to really prove to Curl that there is no file name  or\n"
+"              directory  to really prove to Curl that there is no file name or\n"
 "              curl will think that your last directory name is the remote file\n"
 "              name to use. That will most likely cause the upload operation to\n"
 , stdout);
  fputs(
-"              fail.  If this is used on a HTTP(S) server, the PUT command will\n"
+"              fail. If this is used on a HTTP(S) server, the PUT command  will\n"
 "              be used.\n"
 "\n"
-"              Use the file name \"-\" (a single dash) to use stdin instead of  a\n"
-"              given  file.   Alternately,  the file name \".\" (a single period)\n"
-"              may be specified instead of \"-\" to  use  stdin  in  non-blocking\n"
-"              mode  to  allow  reading  server  output  while  stdin  is being\n"
+"              Use  the file name \"-\" (a single dash) to use stdin instead of a\n"
+"              given file.  Alternately, the file name \".\"  (a  single  period)\n"
+"              may  be  specified  instead  of \"-\" to use stdin in non-blocking\n"
+"              mode to  allow  reading  server  output  while  stdin  is  being\n"
 "              uploaded.\n"
 "\n"
 , stdout);
  fputs(
 "              You can specify one -T for each URL on the command line. Each -T\n"
 "              + URL pair specifies what to upload and to where. curl also sup-\n"
 "              ports \"globbing\" of the -T argument, meaning that you can upload\n"
-"              multiple  files  to  a single URL by using the same URL globbing\n"
+"              multiple files to a single URL by using the  same  URL  globbing\n"
 "              style supported in the URL, like this:\n"
 "\n"
 "              curl -T \"{file1,file2}\" http://www.uploadtothissite.com\n"
 "\n"
 "              or even\n"
 "\n"
 , stdout);
  fputs(
 "              curl -T \"img[1-1000].png\" ftp://ftp.picturemania.com/upload/\n"
 "\n"
 "       --trace <file>\n"
-"              Enables a full trace dump of all  incoming  and  outgoing  data,\n"
+"              Enables  a  full  trace  dump of all incoming and outgoing data,\n"
 "              including descriptive information, to the given output file. Use\n"
 "              \"-\" as filename to have the output sent to stdout.\n"
 "\n"
-"              This option overrides previous uses of -v/--verbose or  --trace-\n"
+"              This  option overrides previous uses of -v/--verbose or --trace-\n"
 "              ascii.\n"
 "\n"
 , stdout);
  fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --trace-ascii <file>\n"
-"              Enables  a  full  trace  dump of all incoming and outgoing data,\n"
+"              Enables a full trace dump of all  incoming  and  outgoing  data,\n"
 "              including descriptive information, to the given output file. Use\n"
 "              \"-\" as filename to have the output sent to stdout.\n"
 "\n"
 "              This is very similar to --trace, but leaves out the hex part and\n"
-"              only shows the ASCII part of the dump. It makes  smaller  output\n"
+"              only  shows  the ASCII part of the dump. It makes smaller output\n"
 , stdout);
  fputs(
 "              that might be easier to read for untrained humans.\n"
 "\n"
 "              This option overrides previous uses of -v/--verbose or --trace.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --trace-time\n"
-"              Prepends  a  time  stamp to each trace or verbose line that curl\n"
+"              Prepends a time stamp to each trace or verbose  line  that  curl\n"
 "              displays.  (Added in 7.14.0)\n"
 "\n"
 "       -u/--user <user:password>\n"
 "              Specify the user name and password to use for server authentica-\n"
 , stdout);
  fputs(
 "              tion. Overrides -n/--netrc and --netrc-optional.\n"
 "\n"
-"              If  you  just give the user name (without entering a colon) curl\n"
+"              If you just give the user name (without entering a  colon)  curl\n"
 "              will prompt for a password.\n"
 "\n"
-"              If you use an SSPI-enabled curl binary and do  NTLM  authentica-\n"
-"              tion,  you  can force curl to pick up the user name and password\n"
-"              from your environment by simply specifying a single  colon  with\n"
+"              If  you  use an SSPI-enabled curl binary and do NTLM authentica-\n"
+"              tion, you can force curl to pick up the user name  and  password\n"
+"              from  your  environment by simply specifying a single colon with\n"
 "              this option: \"-u :\".\n"
 "\n"
 , stdout);
  fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -U/--proxy-user <user:password>\n"
-"              Specify  the user name and password to use for proxy authentica-\n"
+"              Specify the user name and password to use for proxy  authentica-\n"
 "              tion.\n"
 "\n"
-"              If you use an SSPI-enabled curl binary and do  NTLM  authentica-\n"
-"              tion,  you  can force curl to pick up the user name and password\n"
-"              from your environment by simply specifying a single  colon  with\n"
+"              If  you  use an SSPI-enabled curl binary and do NTLM authentica-\n"
+"              tion, you can force curl to pick up the user name  and  password\n"
+"              from  your  environment by simply specifying a single colon with\n"
 "              this option: \"-U :\".\n"
 "\n"
 , stdout);
  fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --url <URL>\n"
-"              Specify  a  URL  to  fetch. This option is mostly handy when you\n"
+"              Specify a URL to fetch. This option is  mostly  handy  when  you\n"
 "              want to specify URL(s) in a config file.\n"
 "\n"
-"              This option may be used any number of times.  To  control  where\n"
+"              This  option  may  be used any number of times. To control where\n"
 "              this URL is written, use the -o/--output or the -O/--remote-name\n"
 "              options.\n"
 "\n"
 "       -v/--verbose\n"
 , stdout);
  fputs(
-"              Makes the fetching more  verbose/talkative.  Mostly  useful  for\n"
-"              debugging.  A line starting with '>' means \"header data\" sent by\n"
+"              Makes  the  fetching  more  verbose/talkative. Mostly useful for\n"
+"              debugging. A line starting with '>' means \"header data\" sent  by\n"
 "              curl, '<' means \"header data\" received by curl that is hidden in\n"
 "              normal cases, and a line starting with '*' means additional info\n"
 "              provided by curl.\n"
 "\n"
 "              Note  that  if  you  only  want  HTTP  headers  in  the  output,\n"
 "              -i/--include might be the option you're looking for.\n"
 "\n"
 , stdout);
  fputs(
-"              If  you think this option still doesn't give you enough details,\n"
+"              If you think this option still doesn't give you enough  details,\n"
 "              consider using --trace or --trace-ascii instead.\n"
 "\n"
 "              This option overrides previous uses of --trace-ascii or --trace.\n"
 "\n"
 "              Use -S/--silent to make curl quiet.\n"
 "\n"
 "       -V/--version\n"
 "              Displays information about curl and the libcurl version it uses.\n"
-"              The first line includes the full version of  curl,  libcurl  and\n"
+"              The  first  line  includes the full version of curl, libcurl and\n"
 , stdout);
  fputs(
 "              other 3rd party libraries linked with the executable.\n"
 "\n"
-"              The  second  line (starts with \"Protocols:\") shows all protocols\n"
+"              The second line (starts with \"Protocols:\") shows  all  protocols\n"
 "              that libcurl reports to support.\n"
 "\n"
 "              The third line (starts with \"Features:\") shows specific features\n"
 "              libcurl reports to offer. Available features include:\n"
 "\n"
 "              IPv6   You can use IPv6 with this.\n"
@@ -1828,22 +1880,22 @@
 "              krb4   Krb4 for FTP is supported.\n"
 "\n"
 "              SSL    HTTPS and FTPS are supported.\n"
 "\n"
 , stdout);
  fputs(
-"              libz   Automatic  decompression of compressed files over HTTP is\n"
+"              libz   Automatic decompression of compressed files over HTTP  is\n"
 "                     supported.\n"
 "\n"
 "              NTLM   NTLM authentication is supported.\n"
 "\n"
 "              GSS-Negotiate\n"
 "                     Negotiate authentication and krb5 for FTP is supported.\n"
 "\n"
-"              Debug  This curl uses a libcurl built with Debug.  This  enables\n"
-"                     more  error-tracking  and memory debugging etc. For curl-\n"
+"              Debug  This  curl  uses a libcurl built with Debug. This enables\n"
+"                     more error-tracking and memory debugging etc.  For  curl-\n"
 "                     developers only!\n"
 "\n"
 "              AsynchDNS\n"
 , stdout);
  fputs(
 "                     This curl uses asynchronous name resolves.\n"
@@ -1853,184 +1905,184 @@
 "              Largefile\n"
 "                     This curl supports transfers of large files, files larger\n"
 "                     than 2GB.\n"
 "\n"
 "              IDN    This curl supports IDN - international domain names.\n"
 "\n"
-"              SSPI   SSPI  is  supported. If you use NTLM and set a blank user\n"
+"              SSPI   SSPI is supported. If you use NTLM and set a  blank  user\n"
 , stdout);
  fputs(
-"                     name, curl will authenticate with your current  user  and\n"
+"                     name,  curl  will authenticate with your current user and\n"
 "                     password.\n"
 "\n"
 "       -w/--write-out <format>\n"
 "              Defines what to display on stdout after a completed and success-\n"
-"              ful operation. The format is a string  that  may  contain  plain\n"
+"              ful  operation.  The  format  is a string that may contain plain\n"
 "              text mixed with any number of variables. The string can be spec-\n"
-"              ified as \"string\", to get read from a particular file you  spec-\n"
+"              ified  as \"string\", to get read from a particular file you spec-\n"
 , stdout);
  fputs(
-"              ify  it  \"@filename\"  and  to  tell curl to read the format from\n"
+"              ify it \"@filename\" and to tell curl  to  read  the  format  from\n"
 "              stdin you write \"@-\".\n"
 "\n"
-"              The variables present in the output format will  be  substituted\n"
-"              by  the  value or text that curl thinks fit, as described below.\n"
-"              All variables are specified as %{variable_name} and to output  a\n"
-"              normal  % you just write them as %%. You can output a newline by\n"
+"              The  variables  present in the output format will be substituted\n"
+"              by the value or text that curl thinks fit, as  described  below.\n"
+"              All  variables are specified as %{variable_name} and to output a\n"
+"              normal % you just write them as %%. You can output a newline  by\n"
 , stdout);
  fputs(
 "              using \\n, a carriage return with \\r and a tab space with \\t.\n"
 "\n"
 "              NOTE: The %-symbol is a special symbol in the win32-environment,\n"
-"              where  all  occurrences  of  %  must  be doubled when using this\n"
+"              where all occurrences of %  must  be  doubled  when  using  this\n"
 "              option.\n"
 "\n"
 "              The variables available at this point are:\n"
 "\n"
 "              url_effective  The URL that was fetched last. This is most mean-\n"
-"                             ingful  if  you've  told curl to follow location:\n"
+"                             ingful if you've told curl  to  follow  location:\n"
 , stdout);
  fputs(
 "                             headers.\n"
 "\n"
 "              http_code      The numerical response code that was found in the\n"
-"                             last  retrieved  HTTP(S)  or  FTP(s) transfer. In\n"
-"                             7.18.2 the alias response_code was added to  show\n"
+"                             last retrieved HTTP(S)  or  FTP(s)  transfer.  In\n"
+"                             7.18.2  the alias response_code was added to show\n"
 "                             the same info.\n"
 "\n"
-"              http_connect   The  numerical  code  that  was found in the last\n"
-"                             response  (from  a  proxy)  to  a  curl   CONNECT\n"
+"              http_connect   The numerical code that was  found  in  the  last\n"
+"                             response   (from  a  proxy)  to  a  curl  CONNECT\n"
 , stdout);
  fputs(
 "                             request. (Added in 7.12.4)\n"
 "\n"
-"              time_total     The  total time, in seconds, that the full opera-\n"
+"              time_total     The total time, in seconds, that the full  opera-\n"
 "                             tion lasted. The time will be displayed with mil-\n"
 "                             lisecond resolution.\n"
 "\n"
 "              time_namelookup\n"
-"                             The  time,  in  seconds,  it  took from the start\n"
+"                             The time, in seconds,  it  took  from  the  start\n"
 "                             until the name resolving was completed.\n"
 "\n"
 , stdout);
  fputs(
-"              time_connect   The time, in seconds,  it  took  from  the  start\n"
-"                             until  the  TCP  connect  to  the remote host (or\n"
+"              time_connect   The  time,  in  seconds,  it  took from the start\n"
+"                             until the TCP connect  to  the  remote  host  (or\n"
 "                             proxy) was completed.\n"
 "\n"
 "              time_appconnect\n"
-"                             The time, in seconds,  it  took  from  the  start\n"
-"                             until  the  SSL/SSH/etc  connect/handshake to the\n"
+"                             The  time,  in  seconds,  it  took from the start\n"
+"                             until the SSL/SSH/etc  connect/handshake  to  the\n"
 "                             remote host was completed. (Added in 7.19.0)\n"
 "\n"
 , stdout);
  fputs(
 "              time_pretransfer\n"
-"                             The time, in seconds,  it  took  from  the  start\n"
-"                             until  the file transfer was just about to begin.\n"
+"                             The  time,  in  seconds,  it  took from the start\n"
+"                             until the file transfer was just about to  begin.\n"
 "                             This includes all pre-transfer commands and nego-\n"
 "                             tiations that are specific to the particular pro-\n"
 "                             tocol(s) involved.\n"
 "\n"
 "              time_redirect  The time, in seconds, it took for all redirection\n"
 , stdout);
  fputs(
-"                             steps  include  name lookup, connect, pretransfer\n"
-"                             and transfer before  the  final  transaction  was\n"
-"                             started.  time_redirect shows the complete execu-\n"
-"                             tion time for multiple  redirections.  (Added  in\n"
+"                             steps include name lookup,  connect,  pretransfer\n"
+"                             and  transfer  before  the  final transaction was\n"
+"                             started. time_redirect shows the complete  execu-\n"
+"                             tion  time  for  multiple redirections. (Added in\n"
 "                             7.12.3)\n"
 "\n"
 "              time_starttransfer\n"
-"                             The  time,  in  seconds,  it  took from the start\n"
+"                             The time, in seconds,  it  took  from  the  start\n"
 , stdout);
  fputs(
-"                             until the first byte was just about to be  trans-\n"
-"                             ferred.  This  includes time_pretransfer and also\n"
-"                             the time  the  server  needed  to  calculate  the\n"
+"                             until  the first byte was just about to be trans-\n"
+"                             ferred. This includes time_pretransfer  and  also\n"
+"                             the  time  the  server  needed  to  calculate the\n"
 "                             result.\n"
 "\n"
 "              size_download  The total amount of bytes that were downloaded.\n"
 "\n"
 "              size_upload    The total amount of bytes that were uploaded.\n"
 "\n"
 , stdout);
  fputs(
 "              size_header    The total amount of bytes of the downloaded head-\n"
 "                             ers.\n"
 "\n"
-"              size_request   The total amount of bytes that were sent  in  the\n"
+"              size_request   The  total  amount of bytes that were sent in the\n"
 "                             HTTP request.\n"
 "\n"
 "              speed_download The average download speed that curl measured for\n"
 "                             the complete download.\n"
 "\n"
-"              speed_upload   The average upload speed that curl  measured  for\n"
+"              speed_upload   The  average  upload speed that curl measured for\n"
 "                             the complete upload.\n"
 "\n"
 , stdout);
  fputs(
-"              content_type   The  Content-Type  of  the requested document, if\n"
+"              content_type   The Content-Type of the  requested  document,  if\n"
 "                             there was any.\n"
 "\n"
-"              num_connects   Number of new connects made in the recent  trans-\n"
+"              num_connects   Number  of new connects made in the recent trans-\n"
 "                             fer. (Added in 7.12.3)\n"
 "\n"
-"              num_redirects  Number  of  redirects  that  were followed in the\n"
+"              num_redirects  Number of redirects that  were  followed  in  the\n"
 "                             request. (Added in 7.12.3)\n"
 "\n"
 "              redirect_url   When a HTTP request was made without -L to follow\n"
 , stdout);
  fputs(
 "                             redirects, this variable will show the actual URL\n"
 "                             a redirect would take you to. (Added in 7.18.2)\n"
 "\n"
 "              ftp_entry_path The initial path libcurl ended up in when logging\n"
 "                             on to the remote FTP server. (Added in 7.15.4)\n"
 "\n"
 "              ssl_verify_result\n"
-"                             The  result of the SSL peer certificate verifica-\n"
+"                             The result of the SSL peer certificate  verifica-\n"
 , stdout);
  fputs(
 "                             tion that was requested. 0 means the verification\n"
 "                             was successful. (Added in 7.19.0)\n"
 "\n"
 "       If this option is used several times, the last one will be used.\n"
 "\n"
 "       -x/--proxy <proxyhost[:port]>\n"
-"              Use  the  specified HTTP proxy. If the port number is not speci-\n"
+"              Use the specified HTTP proxy. If the port number is  not  speci-\n"
 "              fied, it is assumed at port 1080.\n"
 "\n"
-"              This option overrides existing environment  variables  that  set\n"
+"              This  option  overrides  existing environment variables that set\n"
 , stdout);
  fputs(
-"              the  proxy  to use. If there's an environment variable setting a\n"
+"              the proxy to use. If there's an environment variable  setting  a\n"
 "              proxy, you can set proxy to \"\" to override it.\n"
 "\n"
-"              Note that all operations that are performed over  a  HTTP  proxy\n"
-"              will  transparently  be converted to HTTP. It means that certain\n"
+"              Note  that  all  operations that are performed over a HTTP proxy\n"
+"              will transparently be converted to HTTP. It means  that  certain\n"
 "              protocol specific operations might not be available. This is not\n"
-"              the  case  if you can tunnel through the proxy, as done with the\n"
+"              the case if you can tunnel through the proxy, as done  with  the\n"
 "              -p/--proxytunnel option.\n"
 "\n"
 , stdout);
  fputs(
-"              Starting with 7.14.1, the proxy host can be specified the  exact\n"
-"              same  way as the proxy environment variables, including the pro-\n"
+"              Starting  with 7.14.1, the proxy host can be specified the exact\n"
+"              same way as the proxy environment variables, including the  pro-\n"
 "              tocol prefix (http://) and the embedded user + password.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -X/--request <command>\n"
 "              (HTTP) Specifies a custom request method to use when communicat-\n"
-"              ing  with  the  HTTP server.  The specified request will be used\n"
+"              ing with the HTTP server.  The specified request  will  be  used\n"
 , stdout);
  fputs(
-"              instead of the method otherwise used (which  defaults  to  GET).\n"
-"              Read  the  HTTP  1.1 specification for details and explanations.\n"
-"              Common additional HTTP requests  include  PUT  and  DELETE,  but\n"
+"              instead  of  the  method otherwise used (which defaults to GET).\n"
+"              Read the HTTP 1.1 specification for  details  and  explanations.\n"
+"              Common  additional  HTTP  requests  include  PUT and DELETE, but\n"
 "              related technologies like WebDAV offers PROPFIND, COPY, MOVE and\n"
 "              more.\n"
 "\n"
 "              (FTP) Specifies a custom FTP command to use instead of LIST when\n"
 "              doing file lists with FTP.\n"
 "\n"
@@ -2040,84 +2092,84 @@
 "\n"
 "       -y/--speed-time <time>\n"
 "              If a download is slower than speed-limit bytes per second during\n"
 "              a speed-time period, the download gets aborted. If speed-time is\n"
 "              used, the default speed-limit will be 1 unless set with -Y.\n"
 "\n"
-"              This  option  controls  transfers  and thus will not affect slow\n"
+"              This option controls transfers and thus  will  not  affect  slow\n"
 , stdout);
  fputs(
-"              connects etc. If this is a concern for you, try  the  --connect-\n"
+"              connects  etc.  If this is a concern for you, try the --connect-\n"
 "              timeout option.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -Y/--speed-limit <speed>\n"
 "              If a download is slower than this given speed (in bytes per sec-\n"
-"              ond) for speed-time seconds it gets aborted. speed-time  is  set\n"
+"              ond)  for  speed-time seconds it gets aborted. speed-time is set\n"
 "              with -y and is 30 if not set.\n"
 "\n"
 , stdout);
  fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -z/--time-cond <date expression>\n"
-"              (HTTP/FTP)  Request a file that has been modified later than the\n"
-"              given time and date, or one that has been modified  before  that\n"
+"              (HTTP/FTP) Request a file that has been modified later than  the\n"
+"              given  time  and date, or one that has been modified before that\n"
 "              time. The date expression can be all sorts of date strings or if\n"
-"              it doesn't match any internal ones, it tries  to  get  the  time\n"
+"              it  doesn't  match  any  internal ones, it tries to get the time\n"
 , stdout);
  fputs(
-"              from  a  given  file  name  instead! See the curl_getdate(3) man\n"
+"              from a given file name  instead!  See  the  curl_getdate(3)  man\n"
 "              pages for date expression details.\n"
 "\n"
 "              Start the date expression with a dash (-) to make it request for\n"
-"              a  document that is older than the given date/time, default is a\n"
+"              a document that is older than the given date/time, default is  a\n"
 "              document that is newer than the specified date/time.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --max-redirs <num>\n"
 , stdout);
  fputs(
-"              Set  maximum  number  of  redirection-followings   allowed.   If\n"
-"              -L/--location  is  used, this option can be used to prevent curl\n"
+"              Set   maximum   number  of  redirection-followings  allowed.  If\n"
+"              -L/--location is used, this option can be used to  prevent  curl\n"
 "              from following redirections \"in absurdum\". By default, the limit\n"
 "              is set to 50 redirections. Set this option to -1 to make it lim-\n"
 "              itless.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -0/--http1.0\n"
 , stdout);
  fputs(
-"              (HTTP) Forces curl to issue its requests using HTTP 1.0  instead\n"
+"              (HTTP)  Forces curl to issue its requests using HTTP 1.0 instead\n"
 "              of using its internally preferred: HTTP 1.1.\n"
 "\n"
 "       -1/--tlsv1\n"
-"              (SSL)  Forces  curl to use TLS version 1 when negotiating with a\n"
+"              (SSL) Forces curl to use TLS version 1 when negotiating  with  a\n"
 "              remote TLS server.\n"
 "\n"
 "       -2/--sslv2\n"
-"              (SSL) Forces curl to use SSL version 2 when negotiating  with  a\n"
+"              (SSL)  Forces  curl to use SSL version 2 when negotiating with a\n"
 "              remote SSL server.\n"
 "\n"
 "       -3/--sslv3\n"
-"              (SSL)  Forces  curl to use SSL version 3 when negotiating with a\n"
+"              (SSL) Forces curl to use SSL version 3 when negotiating  with  a\n"
 , stdout);
  fputs(
 "              remote SSL server.\n"
 "\n"
 "       -4/--ipv4\n"
-"              If libcurl is capable of resolving an  address  to  multiple  IP\n"
-"              versions  (which it is if it is IPv6-capable), this option tells\n"
+"              If  libcurl  is  capable  of resolving an address to multiple IP\n"
+"              versions (which it is if it is IPv6-capable), this option  tells\n"
 "              libcurl to resolve names to IPv4 addresses only.\n"
 "\n"
 "       -6/--ipv6\n"
-"              If libcurl is capable of resolving an  address  to  multiple  IP\n"
-"              versions  (which it is if it is IPv6-capable), this option tells\n"
+"              If  libcurl  is  capable  of resolving an address to multiple IP\n"
+"              versions (which it is if it is IPv6-capable), this option  tells\n"
 , stdout);
  fputs(
 "              libcurl to resolve names to IPv6 addresses only.\n"
 "\n"
 "       -#/--progress-bar\n"
 "              Make curl display progress information as a progress bar instead\n"
@@ -2140,112 +2192,112 @@
 "              Sets the proxy server to use for HTTPS.\n"
 "\n"
 "       FTP_PROXY [protocol://]<host>[:port]\n"
 "              Sets the proxy server to use for FTP.\n"
 "\n"
 "       ALL_PROXY [protocol://]<host>[:port]\n"
-"              Sets  the  proxy  server to use if no protocol-specific proxy is\n"
+"              Sets the proxy server to use if no  protocol-specific  proxy  is\n"
 "              set.\n"
 "\n"
 , stdout);
  fputs(
 "       NO_PROXY <comma-separated list of hosts>\n"
-"              list of host names that shouldn't go through any proxy.  If  set\n"
+"              list  of  host names that shouldn't go through any proxy. If set\n"
 "              to a asterisk '*' only, it matches all hosts.\n"
 "\n"
 "EXIT CODES\n"
-"       There  are  a  bunch  of  different error codes and their corresponding\n"
-"       error messages that may appear during bad conditions. At  the  time  of\n"
+"       There are a bunch of different  error  codes  and  their  corresponding\n"
+"       error  messages  that  may appear during bad conditions. At the time of\n"
 "       this writing, the exit codes are:\n"
 "\n"
 "       1      Unsupported protocol. This build of curl has no support for this\n"
 , stdout);
  fputs(
 "              protocol.\n"
 "\n"
 "       2      Failed to initialize.\n"
 "\n"
 "       3      URL malformed. The syntax was not correct.\n"
 "\n"
-"       5      Couldn't resolve proxy.  The  given  proxy  host  could  not  be\n"
+"       5      Couldn't  resolve  proxy.  The  given  proxy  host  could not be\n"
 "              resolved.\n"
 "\n"
 "       6      Couldn't resolve host. The given remote host was not resolved.\n"
 "\n"
 "       7      Failed to connect to host.\n"
 "\n"
-"       8      FTP  weird  server  reply.  The  server  sent data curl couldn't\n"
+"       8      FTP weird server reply.  The  server  sent  data  curl  couldn't\n"
 "              parse.\n"
 "\n"
 , stdout);
  fputs(
-"       9      FTP access denied. The server denied login or denied  access  to\n"
-"              the  particular  resource or directory you wanted to reach. Most\n"
-"              often you tried to change to a directory that doesn't  exist  on\n"
+"       9      FTP  access  denied. The server denied login or denied access to\n"
+"              the particular resource or directory you wanted to  reach.  Most\n"
+"              often  you  tried to change to a directory that doesn't exist on\n"
 "              the server.\n"
 "\n"
-"       11     FTP  weird PASS reply. Curl couldn't parse the reply sent to the\n"
+"       11     FTP weird PASS reply. Curl couldn't parse the reply sent to  the\n"
 "              PASS request.\n"
 "\n"
-"       13     FTP weird PASV reply, Curl couldn't parse the reply sent to  the\n"
+"       13     FTP  weird PASV reply, Curl couldn't parse the reply sent to the\n"
 "              PASV request.\n"
 "\n"
 , stdout);
  fputs(
-"       14     FTP  weird  227  format.  Curl  couldn't  parse the 227-line the\n"
+"       14     FTP weird 227 format.  Curl  couldn't  parse  the  227-line  the\n"
 "              server sent.\n"
 "\n"
-"       15     FTP can't get host. Couldn't resolve the host IP we got  in  the\n"
+"       15     FTP  can't  get host. Couldn't resolve the host IP we got in the\n"
 "              227-line.\n"
 "\n"
-"       17     FTP  couldn't  set  binary.  Couldn't  change transfer method to\n"
+"       17     FTP couldn't set binary.  Couldn't  change  transfer  method  to\n"
 "              binary.\n"
 "\n"
 "       18     Partial file. Only a part of the file was transferred.\n"
 "\n"
-"       19     FTP couldn't download/access the given file, the RETR (or  simi-\n"
+"       19     FTP  couldn't download/access the given file, the RETR (or simi-\n"
 "              lar) command failed.\n"
 "\n"
 , stdout);
  fputs(
 "       21     FTP quote error. A quote command returned error from the server.\n"
-"       22     HTTP  page  not  retrieved.  The  requested url was not found or\n"
-"              returned another error with the HTTP error  code  being  400  or\n"
+"       22     HTTP page not retrieved. The requested  url  was  not  found  or\n"
+"              returned  another  error  with  the HTTP error code being 400 or\n"
 "              above. This return code only appears if -f/--fail is used.\n"
 "\n"
-"       23     Write  error.  Curl couldn't write data to a local filesystem or\n"
+"       23     Write error. Curl couldn't write data to a local  filesystem  or\n"
 "              similar.\n"
 "\n"
-"       25     FTP couldn't STOR file. The server denied  the  STOR  operation,\n"
+"       25     FTP  couldn't  STOR  file. The server denied the STOR operation,\n"
 , stdout);
  fputs(
 "              used for FTP uploading.\n"
 "\n"
 "       26     Read error. Various reading problems.\n"
 "\n"
 "       27     Out of memory. A memory allocation request failed.\n"
 "\n"
-"       28     Operation  timeout.  The  specified  time-out period was reached\n"
+"       28     Operation timeout. The specified  time-out  period  was  reached\n"
 "              according to the conditions.\n"
 "\n"
-"       30     FTP PORT failed. The PORT command failed. Not  all  FTP  servers\n"
-"              support  the  PORT  command,  try  doing  a  transfer using PASV\n"
+"       30     FTP  PORT  failed.  The PORT command failed. Not all FTP servers\n"
+"              support the PORT  command,  try  doing  a  transfer  using  PASV\n"
 "              instead!\n"
 "\n"
 , stdout);
  fputs(
-"       31     FTP couldn't use REST. The REST command failed. This command  is\n"
+"       31     FTP  couldn't use REST. The REST command failed. This command is\n"
 "              used for resumed FTP transfers.\n"
 "\n"
 "       33     HTTP range error. The range \"command\" didn't work.\n"
 "\n"
 "       34     HTTP post error. Internal post-request generation error.\n"
 "\n"
 "       35     SSL connect error. The SSL handshaking failed.\n"
 "\n"
-"       36     FTP  bad  download  resume. Couldn't continue an earlier aborted\n"
+"       36     FTP bad download resume. Couldn't continue  an  earlier  aborted\n"
 "              download.\n"
 "\n"
 , stdout);
  fputs(
 "       37     FILE couldn't read file. Failed to open the file. Permissions?\n"
 "\n"
@@ -2259,25 +2311,25 @@
 "              ation.\n"
 "\n"
 "       43     Internal error. A function was called with a bad parameter.\n"
 "\n"
 , stdout);
  fputs(
-"       45     Interface  error.  A  specified  outgoing interface could not be\n"
+"       45     Interface error. A specified outgoing  interface  could  not  be\n"
 "              used.\n"
 "\n"
 "       47     Too many redirects. When following redirects, curl hit the maxi-\n"
 "              mum amount.\n"
 "\n"
 "       48     Unknown TELNET option specified.\n"
 "\n"
 "       49     Malformed telnet option.\n"
 "\n"
 "       51     The peer's SSL certificate or SSH MD5 fingerprint was not ok.\n"
 "\n"
-"       52     The  server  didn't  reply anything, which here is considered an\n"
+"       52     The server didn't reply anything, which here  is  considered  an\n"
 "              error.\n"
 "\n"
 , stdout);
  fputs(
 "       53     SSL crypto engine not found.\n"
 "\n"
@@ -2288,13 +2340,13 @@
 "       56     Failure in receiving network data.\n"
 "\n"
 "       58     Problem with the local certificate.\n"
 "\n"
 "       59     Couldn't use specified SSL cipher.\n"
 "\n"
-"       60     Peer certificate cannot be authenticated with known CA  certifi-\n"
+"       60     Peer  certificate cannot be authenticated with known CA certifi-\n"
 "              cates.\n"
 "\n"
 "       61     Unrecognized transfer encoding.\n"
 "\n"
 "       62     Invalid LDAP URL.\n"
 "\n"
@@ -2305,13 +2357,13 @@
 "       64     Requested FTP SSL level failed.\n"
 "\n"
 "       65     Sending the data requires a rewind that failed.\n"
 "\n"
 "       66     Failed to initialise SSL Engine.\n"
 "\n"
-"       67     The  user  name,  password, or similar was not accepted and curl\n"
+"       67     The user name, password, or similar was not  accepted  and  curl\n"
 "              failed to log in.\n"
 "\n"
 "       68     File not found on TFTP server.\n"
 "\n"
 "       69     Permission problem on TFTP server.\n"
 "\n"
@@ -2338,22 +2390,22 @@
 "       79     An unspecified error occurred during the SSH session.\n"
 "\n"
 "       80     Failed to shut down the SSL connection.\n"
 "\n"
 , stdout);
  fputs(
-"       82     Could not load CRL file,  missing  or  wrong  format  (added  in\n"
+"       82     Could  not  load  CRL  file,  missing  or wrong format (added in\n"
 "              7.19.0).\n"
 "\n"
 "       83     Issuer check failed (added in 7.19.0).\n"
 "\n"
 "       XX     More error codes will appear here in future releases. The exist-\n"
 "              ing ones are meant to never change.\n"
 "\n"
 "AUTHORS / CONTRIBUTORS\n"
-"       Daniel Stenberg is the main author, but the whole list of  contributors\n"
+"       Daniel  Stenberg is the main author, but the whole list of contributors\n"
 "       is found in the separate THANKS file.\n"
 "\n"
 "WWW\n"
 "       http://curl.haxx.se\n"
 "\n"
 "FTP\n"
@@ -3490,3341 +3542,3382 @@
 , stdout) ;
 }
 #endif /* USE_MANUAL */
 #else
 /*
  * NEVER EVER edit this manually, fix the mkhelp.pl script instead!
- * Generation time: Wed Nov  4 13:29:07 2009
+ * Generation time: Tue Feb  2 13:40:56 2010
  */
 #include "setup.h"
 #ifdef USE_MANUAL
 #include "hugehelp.h"
 #include <stdio.h>
 #include <stdlib.h>
 #include <zlib.h>
 static const unsigned char hugehelpgz[] = {
   /* This mumbo-jumbo is the huge help text compressed with gzip.
-     Thanks to this operation, the size of this data shrunk from 129027
-     to 39790 bytes. You can disable the use of compressed help
+     Thanks to this operation, the size of this data shrunk from 130815
+     to 40283 bytes. You can disable the use of compressed help
      texts by NOT passing -c to the mkhelp.pl tool. */
   0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0xed, 0xbd,
-  0x6b, 0x7b, 0x1b, 0xd7, 0x91, 0x2e, 0xfa, 0xf9, 0xf0, 0x57, 0x74, 0xe0,
-  0x93, 0x80, 0x4c, 0x00, 0xf0, 0x22, 0xc9, 0xb6, 0x18, 0xc9, 0x63, 0x9a,
-  0xa4, 0x6c, 0x6e, 0x53, 0x22, 0x37, 0x41, 0xf9, 0xb2, 0x1d, 0x3f, 0x7a,
-  0x1a, 0x40, 0x93, 0xec, 0x10, 0xe8, 0x46, 0xba, 0x1b, 0xa4, 0x98, 0x4c,
-  0xe6, 0xb7, 0x9f, 0xaa, 0xb7, 0xaa, 0xd6, 0x5a, 0x7d, 0x01, 0x25, 0x67,
-  0xec, 0x99, 0xb3, 0xf7, 0xb3, 0x3d, 0x13, 0x91, 0x04, 0xba, 0xd7, 0xb5,
-  0x56, 0xad, 0xba, 0xbe, 0x15, 0x45, 0x1f, 0xfa, 0xef, 0x1d, 0xfe, 0xf7,
-  0x8e, 0xfe, 0x93, 0xdf, 0xa3, 0x68, 0x23, 0x8a, 0xce, 0x8b, 0xfc, 0xaf,
-  0xc9, 0xb4, 0xea, 0x7e, 0xe1, 0xdd, 0xbb, 0x7f, 0x8f, 0xe4, 0xff, 0xe8,
-  0x85, 0xbf, 0xe0, 0x27, 0x5e, 0x7a, 0xe4, 0xbf, 0xed, 0xc8, 0xbf, 0xf4,
-  0xef, 0xef, 0xb6, 0xa2, 0x8f, 0x79, 0xe9, 0xdf, 0xa3, 0x4d, 0xbc, 0xf4,
-  0x4e, 0x7b, 0x7a, 0xc1, 0xbf, 0xd3, 0x28, 0x1f, 0xef, 0xe9, 0x2f, 0x3c,
-  0x3c, 0xfe, 0x67, 0x9b, 0x5f, 0xfc, 0xcb, 0x3b, 0xfe, 0x95, 0x3e, 0xd9,
-  0xd8, 0x78, 0x73, 0xf0, 0xfa, 0xd8, 0x5e, 0x9d, 0xae, 0x8a, 0x79, 0x34,
-  0x8c, 0xaa, 0x22, 0xce, 0xca, 0xab, 0xa4, 0x88, 0xe2, 0xe8, 0xed, 0xc5,
-  0xe9, 0xc6, 0xc6, 0xf8, 0xc7, 0x37, 0x67, 0xe7, 0xe3, 0x93, 0x71, 0xed,
-  0xb1, 0x9f, 0xf2, 0x65, 0x95, 0xe6, 0x59, 0xf9, 0x73, 0xf4, 0x13, 0x3d,
-  0x34, 0x1a, 0x8d, 0x7e, 0xde, 0xd8, 0x38, 0x3a, 0x1e, 0x1f, 0x5e, 0x9c,
-  0x9c, 0x5f, 0x9e, 0x9c, 0xbd, 0xa9, 0x3d, 0x1b, 0xa5, 0x65, 0x44, 0x8d,
-  0x55, 0x79, 0x3e, 0xa7, 0x7f, 0x7c, 0xfb, 0xb3, 0xb8, 0x8a, 0xa3, 0xab,
-  0x22, 0x5f, 0x44, 0x79, 0xc1, 0x5f, 0xc4, 0x51, 0x99, 0x14, 0x77, 0x49,
-  0x31, 0x88, 0x56, 0x65, 0x9a, 0x5d, 0x47, 0x79, 0x96, 0x44, 0xf9, 0x55,
-  0x54, 0xdd, 0x24, 0xd6, 0x5c, 0xb9, 0x5a, 0x2e, 0xf3, 0xa2, 0x4a, 0x66,
-  0xd1, 0xb2, 0xc8, 0xab, 0x7c, 0x9a, 0xcf, 0xcb, 0x68, 0xf3, 0x9b, 0xcb,
-  0xcb, 0xf3, 0x41, 0xc4, 0xff, 0x8e, 0x07, 0xd1, 0x2b, 0xfe, 0xfd, 0x15,
-  0x7e, 0x8d, 0xc6, 0x87, 0xe7, 0xfc, 0x2f, 0x3e, 0x8a, 0x2e, 0xe5, 0xc7,
-  0xd1, 0xc9, 0xe1, 0xe5, 0xc0, 0x9a, 0xbb, 0x3c, 0x3e, 0x7d, 0x73, 0x7c,
-  0x49, 0x9f, 0x9e, 0x1e, 0x1d, 0x9c, 0x47, 0x3c, 0x8a, 0xe8, 0xd5, 0xc9,
-  0xe9, 0xf1, 0xd6, 0x88, 0xbe, 0xba, 0x49, 0xa2, 0x69, 0xbe, 0x58, 0xc4,
-  0xd9, 0x8c, 0x87, 0x3f, 0x4b, 0xca, 0xf4, 0x3a, 0xa3, 0x7e, 0x69, 0x98,
-  0xf7, 0x79, 0x71, 0x1b, 0xdd, 0xa7, 0xd5, 0x4d, 0xbe, 0xaa, 0x68, 0xa4,
-  0x49, 0x61, 0xcd, 0xa5, 0x59, 0x95, 0x14, 0xf1, 0x94, 0xd7, 0x65, 0xb4,
-  0x51, 0x5b, 0x81, 0xfc, 0x8a, 0xe6, 0x5b, 0xd2, 0x04, 0x27, 0xab, 0x72,
-  0x9e, 0xc7, 0x33, 0x9e, 0x16, 0xbd, 0x79, 0xb5, 0xa2, 0x05, 0x29, 0xd2,
-  0xe9, 0x6d, 0x19, 0xcd, 0xd3, 0xdb, 0x84, 0x27, 0xf5, 0xfe, 0xc1, 0x26,
-  0x39, 0x40, 0xdb, 0x51, 0xbc, 0xa2, 0xf9, 0x67, 0x43, 0x6b, 0xae, 0x4a,
-  0xa7, 0x31, 0x77, 0x40, 0x83, 0xa6, 0x09, 0x45, 0xab, 0x25, 0x37, 0x27,
-  0xb3, 0x8f, 0x96, 0x79, 0x49, 0x6f, 0x8d, 0xc7, 0xa7, 0x34, 0xf2, 0x2c,
-  0x4b, 0x30, 0x90, 0x72, 0x40, 0x7f, 0xe4, 0xb7, 0x69, 0x42, 0xbf, 0x5c,
-  0xa5, 0xf3, 0x44, 0x56, 0xdf, 0x35, 0xc7, 0xdb, 0x50, 0x24, 0xe5, 0x6a,
-  0x91, 0x44, 0x3c, 0xd3, 0x45, 0x5e, 0x24, 0xa3, 0xe8, 0xa0, 0x8c, 0x1e,
-  0xf2, 0x15, 0x4d, 0x71, 0x3e, 0xa7, 0x1d, 0x49, 0xa2, 0x49, 0x32, 0xcf,
-  0xef, 0x07, 0xbc, 0x0f, 0x51, 0xb6, 0x5a, 0x4c, 0xe8, 0x15, 0x1a, 0xfe,
-  0x55, 0x12, 0x57, 0x2b, 0x7a, 0x15, 0x8f, 0x59, 0x73, 0x8b, 0x98, 0x66,
-  0x41, 0xef, 0x16, 0xd1, 0x4d, 0x42, 0xb3, 0x2c, 0x97, 0x69, 0xf6, 0xbb,
-  0x8d, 0x36, 0x2d, 0x2c, 0xf3, 0xfb, 0xa4, 0xa0, 0xc5, 0x8c, 0x26, 0x0f,
-  0x11, 0xcd, 0x7c, 0x22, 0xdf, 0x5c, 0xf1, 0xfa, 0xc7, 0xf3, 0xb9, 0x23,
-  0x90, 0x61, 0x91, 0xcc, 0x63, 0xde, 0x6c, 0xeb, 0x6b, 0x14, 0x8d, 0x13,
-  0x47, 0x0b, 0xfa, 0xde, 0xe6, 0x93, 0x2d, 0xbc, 0x39, 0x4b, 0xaa, 0x38,
-  0x9d, 0x97, 0xb4, 0xf0, 0x4c, 0xb4, 0xb6, 0xc1, 0x34, 0x64, 0xfa, 0x33,
-  0x2a, 0x1f, 0xb2, 0x2a, 0x7e, 0xcf, 0x7d, 0x1b, 0xdd, 0x0c, 0x67, 0xc9,
-  0x32, 0xc9, 0x66, 0x49, 0x56, 0x8d, 0xa2, 0x1f, 0xf3, 0x55, 0x9f, 0xba,
-  0xbd, 0x4a, 0x69, 0x05, 0xe2, 0x48, 0x5b, 0xe2, 0xe1, 0xd1, 0xae, 0x4f,
-  0x8b, 0x74, 0x19, 0x2c, 0x7e, 0x9e, 0xd1, 0x2e, 0x47, 0x17, 0xaf, 0x0e,
-  0xa3, 0x27, 0xcf, 0x3f, 0xff, 0xd4, 0xef, 0x32, 0x35, 0x41, 0x13, 0x8c,
-  0x33, 0x22, 0xd1, 0x65, 0x32, 0x4d, 0xaf, 0x68, 0x5e, 0x8b, 0xd5, 0xbc,
-  0x4a, 0x97, 0xb4, 0xe2, 0x3c, 0x82, 0x92, 0x89, 0x6b, 0x19, 0x17, 0x55,
-  0xc9, 0x6b, 0x87, 0x0f, 0x68, 0xee, 0xf7, 0x45, 0x5a, 0x31, 0xa1, 0xf3,
-  0x17, 0xb4, 0xd2, 0x55, 0x69, 0xcd, 0x31, 0x75, 0x51, 0x3f, 0x13, 0xa2,
-  0x26, 0x5a, 0xe1, 0xb8, 0xa4, 0x4e, 0xf7, 0x5d, 0x5f, 0xd1, 0x4d, 0x55,
-  0x2d, 0xf7, 0xb7, 0xb7, 0xcb, 0xb4, 0x4a, 0x46, 0xff, 0xa0, 0x43, 0x32,
-  0xa8, 0xee, 0xf3, 0x41, 0x75, 0x53, 0x24, 0xc9, 0x3f, 0x47, 0x44, 0xb3,
-  0xee, 0x41, 0xea, 0x92, 0xf7, 0x91, 0x87, 0x75, 0x9d, 0x70, 0x07, 0x7f,
-  0x5b, 0x25, 0x19, 0x37, 0x48, 0x43, 0x88, 0xe7, 0xcb, 0x9b, 0x98, 0x76,
-  0x33, 0x21, 0xf2, 0xe3, 0x63, 0x47, 0x04, 0xc2, 0x23, 0x92, 0x83, 0xf7,
-  0xd3, 0xcf, 0xad, 0x3e, 0xaf, 0xd0, 0x25, 0xfd, 0x3b, 0xd2, 0x97, 0x62,
-  0x5a, 0x6b, 0xea, 0x6c, 0x9b, 0x89, 0xea, 0xa7, 0xdd, 0xe1, 0xee, 0xce,
-  0xce, 0xcf, 0xa3, 0xea, 0x7d, 0xf5, 0x91, 0x2f, 0xec, 0xec, 0xf8, 0x57,
-  0xf8, 0xe9, 0x4d, 0x9e, 0x71, 0x34, 0x27, 0xa2, 0xe1, 0xfe, 0xff, 0x9e,
-  0x14, 0x79, 0xb9, 0xd5, 0xd1, 0xd4, 0x3c, 0xa9, 0xe8, 0x88, 0x05, 0xed,
-  0xc4, 0xc3, 0xbf, 0x4b, 0xb7, 0xf6, 0xf0, 0x9b, 0x3c, 0xca, 0x92, 0x12,
-  0xab, 0x2a, 0xac, 0x23, 0x98, 0x36, 0x6d, 0xbf, 0x67, 0x20, 0x71, 0x85,
-  0x6f, 0x17, 0xf9, 0x82, 0x68, 0x60, 0x40, 0x07, 0xb3, 0x72, 0x8b, 0x45,
-  0xe7, 0xce, 0x31, 0x9c, 0x84, 0xf8, 0x51, 0x3c, 0x67, 0x56, 0x54, 0x52,
-  0xc3, 0x34, 0x58, 0x62, 0x00, 0x49, 0x3c, 0xbd, 0x89, 0x72, 0x7a, 0xbb,
-  0x68, 0x6f, 0x4a, 0x9c, 0x3d, 0x8c, 0xf2, 0xe2, 0x7a, 0x3b, 0x2e, 0xa6,
-  0x37, 0xe9, 0x1d, 0xad, 0xcc, 0xf3, 0xe7, 0x9f, 0x0e, 0xe9, 0x9f, 0xe7,
-  0x3f, 0x6f, 0xdf, 0xe5, 0x73, 0x5a, 0xa8, 0xa7, 0x3f, 0x6f, 0xf3, 0x76,
-  0xff, 0x23, 0x1e, 0x4c, 0x06, 0xd3, 0x7f, 0x8e, 0x6e, 0xaa, 0xc5, 0xfc,
-  0x31, 0x2a, 0xa2, 0xf6, 0xa2, 0x78, 0x91, 0xaf, 0xb2, 0xca, 0x11, 0x0e,
-  0xd1, 0x60, 0x15, 0x70, 0xa7, 0x79, 0x9a, 0xd1, 0x99, 0x25, 0x4a, 0x7f,
-  0x90, 0x13, 0x3b, 0x49, 0xfc, 0xe1, 0xae, 0xa6, 0x37, 0x34, 0x55, 0xa2,
-  0xa4, 0x58, 0x97, 0xa1, 0x4a, 0x69, 0x32, 0xf4, 0x5a, 0x46, 0x87, 0x38,
-  0x95, 0x76, 0xa4, 0xab, 0x94, 0x9e, 0xcb, 0x8b, 0x59, 0x52, 0x78, 0x9a,
-  0x1e, 0xa7, 0xb4, 0x6a, 0x72, 0x6a, 0x3f, 0x1b, 0xed, 0x3e, 0x1b, 0xed,
-  0xba, 0x05, 0xa2, 0xad, 0xcc, 0xdd, 0x10, 0xa9, 0xe9, 0x2a, 0x59, 0xd2,
-  0x70, 0x56, 0xcc, 0xfe, 0xe4, 0x14, 0x73, 0xbb, 0x11, 0x9d, 0xe2, 0x6b,
-  0x62, 0x3b, 0x6e, 0x29, 0x89, 0xf3, 0xdf, 0xc4, 0x55, 0x8d, 0x24, 0x79,
-  0x75, 0x1f, 0xa2, 0x37, 0xb4, 0xf5, 0xc6, 0x58, 0x8a, 0x48, 0xf6, 0xb8,
-  0xbd, 0xb2, 0xf7, 0xf7, 0xf7, 0xeb, 0x69, 0x6f, 0x7f, 0xb7, 0x41, 0x7e,
-  0xc1, 0x4b, 0x5d, 0x44, 0xb3, 0xbf, 0x57, 0x27, 0x9b, 0x93, 0xab, 0x08,
-  0x03, 0xf3, 0x0b, 0xcf, 0x6c, 0xc3, 0x71, 0x79, 0xe3, 0x1a, 0xd4, 0x22,
-  0xfd, 0x9e, 0x5c, 0xa5, 0xef, 0x07, 0xb2, 0x30, 0x58, 0xf1, 0x98, 0xda,
-  0x5f, 0x2c, 0x99, 0x34, 0xac, 0xb9, 0xeb, 0x55, 0x52, 0x12, 0x67, 0xe4,
-  0xe9, 0xda, 0xab, 0x68, 0x7e, 0x91, 0x5e, 0xdf, 0x54, 0xd1, 0x7d, 0xcc,
-  0x5c, 0xe7, 0xa4, 0x92, 0xb7, 0x99, 0xbd, 0x13, 0xa7, 0xb9, 0x8a, 0x89,
-  0x5f, 0x44, 0x4c, 0x5e, 0xc2, 0xcc, 0x99, 0x22, 0x1d, 0xdf, 0xa1, 0x45,
-  0x12, 0x82, 0x8b, 0x82, 0x8b, 0x6f, 0x12, 0x97, 0xbc, 0x69, 0x19, 0x11,
-  0x46, 0x45, 0x37, 0xc4, 0x8a, 0xff, 0xba, 0xa1, 0x2b, 0x20, 0xca, 0xe2,
-  0x45, 0xa2, 0xc3, 0x64, 0x9e, 0xf9, 0x8a, 0x16, 0x35, 0x79, 0x1f, 0x2f,
-  0x1c, 0x1b, 0x23, 0xa6, 0x34, 0xc0, 0x3e, 0xb9, 0xa7, 0xe9, 0x60, 0x54,
-  0x44, 0x94, 0x7c, 0x6a, 0x70, 0x10, 0x7b, 0x7c, 0xd8, 0x7a, 0xe1, 0x14,
-  0x4b, 0xdc, 0x11, 0x58, 0x22, 0x1e, 0x7e, 0x14, 0x4c, 0x96, 0x96, 0x2c,
-  0xbe, 0xe5, 0xdb, 0xa8, 0x71, 0xe9, 0xc9, 0x9b, 0xd1, 0x8c, 0x66, 0x94,
-  0x12, 0xdf, 0x9b, 0xd0, 0xb1, 0xe4, 0xe9, 0xd1, 0x38, 0x65, 0x65, 0xb8,
-  0xb1, 0x25, 0x35, 0xcc, 0x1f, 0xa6, 0x15, 0x73, 0x1c, 0x08, 0x1c, 0x58,
-  0x19, 0x3a, 0xaa, 0x59, 0x1e, 0xce, 0x9f, 0x87, 0x46, 0xcf, 0xdd, 0xc5,
-  0xf3, 0x94, 0xc4, 0x86, 0xc4, 0xbd, 0x00, 0xce, 0x3e, 0xe5, 0x5b, 0x71,
-  0x3e, 0x7f, 0x20, 0x22, 0x2c, 0x0a, 0x16, 0xd0, 0x78, 0xf3, 0x88, 0x9b,
-  0xf1, 0xe1, 0x89, 0x16, 0x09, 0xdd, 0x26, 0xb5, 0xe5, 0x4c, 0x99, 0xb7,
-  0x11, 0xd1, 0xd2, 0x0d, 0x05, 0xfa, 0xa3, 0x9b, 0x04, 0x87, 0x1c, 0x53,
-  0xc7, 0xd0, 0xb8, 0xf5, 0xe9, 0x34, 0x59, 0x56, 0xa5, 0x9f, 0xd3, 0x61,
-  0xc7, 0x7e, 0xd3, 0xdd, 0xc9, 0xeb, 0x1e, 0xde, 0xb7, 0x58, 0x58, 0xc7,
-  0xfb, 0xfd, 0x95, 0xcb, 0x02, 0xc0, 0x80, 0x0e, 0x81, 0x9b, 0x13, 0xf7,
-  0x43, 0x67, 0x00, 0x8b, 0xbe, 0xe0, 0x91, 0xf2, 0xb3, 0xa5, 0xc8, 0x43,
-  0x38, 0x97, 0xbc, 0x8b, 0x22, 0x10, 0x49, 0xb7, 0xb4, 0x20, 0xbc, 0x98,
-  0xfe, 0x5e, 0xa1, 0x5e, 0xdd, 0x9e, 0x72, 0xf7, 0x25, 0x09, 0x94, 0xc4,
-  0xd4, 0x67, 0xe5, 0x0d, 0x5d, 0xc3, 0x25, 0xf3, 0x04, 0x9e, 0xe9, 0x82,
-  0x28, 0xe6, 0x8e, 0x77, 0x78, 0x99, 0x24, 0xb3, 0x51, 0x74, 0x76, 0xc5,
-  0x47, 0xb5, 0xa0, 0x41, 0x57, 0xf8, 0x9a, 0xf9, 0x09, 0xad, 0xdc, 0x0c,
-  0xc2, 0x56, 0xe6, 0x58, 0x07, 0xc6, 0x12, 0xb0, 0x06, 0xb0, 0x10, 0x1a,
-  0xea, 0xbc, 0xce, 0x78, 0x20, 0x35, 0xf0, 0x71, 0xe6, 0xc1, 0xd1, 0x16,
-  0x47, 0x11, 0xc8, 0x90, 0x7e, 0xab, 0xee, 0x93, 0x24, 0xf3, 0x6c, 0x94,
-  0x78, 0x1e, 0x6f, 0x1b, 0x08, 0x23, 0xcd, 0xee, 0x72, 0x1e, 0xe0, 0xc6,
-  0xc6, 0xf9, 0xc5, 0xd9, 0xd7, 0x17, 0xc7, 0xe3, 0x71, 0xf4, 0xfa, 0xf8,
-  0xf2, 0xf8, 0xa2, 0x4e, 0x3d, 0x59, 0x5e, 0x2c, 0xb0, 0xa9, 0xd1, 0x2c,
-  0x2d, 0x97, 0xf3, 0xf8, 0x81, 0xb7, 0x9b, 0xe6, 0x72, 0x5d, 0xf0, 0xd9,
-  0x5a, 0x24, 0xcc, 0x6c, 0x66, 0xab, 0x02, 0x9c, 0x7e, 0x49, 0xfb, 0xa7,
-  0xd2, 0x0e, 0x5d, 0xe2, 0x10, 0x91, 0xb2, 0x6b, 0xbf, 0xd2, 0x49, 0xc0,
-  0x42, 0x6d, 0x33, 0x58, 0xfe, 0x60, 0x01, 0x74, 0x10, 0x79, 0x81, 0x54,
-  0xd6, 0x88, 0x85, 0x55, 0x9e, 0x15, 0x5f, 0x23, 0x0b, 0xc8, 0x1f, 0x74,
-  0xf1, 0x2f, 0xbc, 0xdc, 0x91, 0x5c, 0xd1, 0x7d, 0x41, 0xac, 0xd5, 0x93,
-  0xc6, 0x37, 0x24, 0xcf, 0x40, 0x6e, 0xe5, 0x25, 0x9a, 0x26, 0x3a, 0x03,
-  0x37, 0x6c, 0x2c, 0x34, 0x84, 0x5d, 0x96, 0x7e, 0x69, 0x34, 0x34, 0xf4,
-  0x45, 0x9a, 0x11, 0xc5, 0x11, 0x8d, 0xea, 0xc9, 0xa7, 0x81, 0x5f, 0x59,
-  0x73, 0x7c, 0x30, 0x64, 0x8d, 0xa4, 0x21, 0x7a, 0x8b, 0xf6, 0x9d, 0x58,
-  0xa6, 0x9b, 0x27, 0x06, 0x98, 0xe2, 0x98, 0xc4, 0x13, 0x66, 0x50, 0x2c,
-  0x96, 0x92, 0x30, 0x91, 0x84, 0xdd, 0xb8, 0xf9, 0x6b, 0x6f, 0x03, 0x3e,
-  0x87, 0x3c, 0xaa, 0x78, 0xc2, 0x9b, 0xcb, 0x03, 0x69, 0x2c, 0x27, 0x9d,
-  0x28, 0x70, 0x99, 0xfb, 0xb4, 0xc4, 0x09, 0xbb, 0xcf, 0x57, 0x73, 0x12,
-  0x0a, 0xf9, 0x81, 0xd5, 0x32, 0x5c, 0x4e, 0xea, 0x72, 0x49, 0xbd, 0x2e,
-  0xd2, 0xf7, 0x10, 0x5f, 0x1a, 0xad, 0xd0, 0xd8, 0xe8, 0xcf, 0x25, 0x6d,
-  0x87, 0x8c, 0x67, 0x14, 0xb2, 0x59, 0x48, 0x96, 0xcc, 0x41, 0x5a, 0x9b,
-  0xc9, 0x07, 0x07, 0xac, 0xef, 0xfc, 0x6c, 0x7c, 0xc9, 0x37, 0xc1, 0xf9,
-  0xdb, 0x4b, 0x6a, 0x88, 0xae, 0xad, 0xb2, 0xa2, 0x8d, 0xe5, 0x17, 0xb3,
-  0x04, 0x22, 0xb8, 0x35, 0x47, 0x7b, 0x98, 0xe2, 0xbc, 0xeb, 0x85, 0x63,
-  0x9d, 0xda, 0xf8, 0xa0, 0x53, 0x30, 0x29, 0x9b, 0x46, 0x51, 0xde, 0x24,
-  0x74, 0x90, 0xdc, 0x6b, 0x9b, 0x5f, 0x6c, 0x0d, 0xa2, 0xa1, 0x6b, 0xee,
-  0x27, 0x7e, 0xf4, 0x67, 0xee, 0xb9, 0x4c, 0x17, 0xe9, 0x3c, 0x0e, 0xee,
-  0x42, 0xc7, 0x92, 0xfc, 0xd1, 0x9c, 0x12, 0xfb, 0xc5, 0x98, 0xbd, 0x1c,
-  0xce, 0x0b, 0x88, 0x73, 0xed, 0x37, 0x6a, 0x96, 0x27, 0xf2, 0x1e, 0x0b,
-  0xc3, 0x8e, 0x03, 0xf1, 0x96, 0xf1, 0x91, 0xaf, 0x2d, 0x53, 0x93, 0x3a,
-  0x5a, 0xcb, 0xc6, 0x2c, 0x1d, 0x6a, 0x99, 0x5b, 0xb8, 0xde, 0x24, 0x2e,
-  0x7a, 0x8e, 0x99, 0xa9, 0xc0, 0x53, 0x24, 0xd7, 0x2b, 0x1a, 0xbc, 0xac,
-  0x2a, 0xcd, 0xef, 0x13, 0x1e, 0x3a, 0x0b, 0xe5, 0xee, 0x70, 0x93, 0xb4,
-  0x97, 0xcd, 0x46, 0x1b, 0x67, 0x50, 0xd5, 0x9c, 0x5e, 0x77, 0xc2, 0x77,
-  0x72, 0xc6, 0x9c, 0x70, 0x00, 0x31, 0x7c, 0x42, 0xfa, 0x5a, 0x02, 0xaa,
-  0x13, 0xc6, 0x16, 0x17, 0x49, 0x94, 0x64, 0x4c, 0x3c, 0x33, 0x61, 0x95,
-  0xc3, 0xa1, 0x7c, 0x85, 0x1d, 0x7f, 0xa0, 0xeb, 0x3c, 0xbe, 0x8e, 0x53,
-  0x77, 0xe6, 0x95, 0xd0, 0x66, 0x91, 0x3d, 0x9c, 0xe5, 0xfa, 0x3c, 0x73,
-  0x26, 0x66, 0xb2, 0xba, 0xa9, 0x2b, 0xf0, 0xa2, 0x84, 0xef, 0x28, 0xda,
-  0x13, 0xac, 0xad, 0xb6, 0xcb, 0x57, 0x93, 0x35, 0x37, 0xc1, 0x35, 0xcc,
-  0x77, 0x1a, 0x28, 0x13, 0xb7, 0x14, 0xb5, 0xd8, 0x1b, 0xf9, 0xd3, 0x07,
-  0x81, 0x26, 0x65, 0x5d, 0x8a, 0x6e, 0x9a, 0x7b, 0x96, 0xed, 0xca, 0x8a,
-  0xf8, 0x07, 0xf8, 0x1b, 0x3e, 0xa3, 0x71, 0x3a, 0x8e, 0x74, 0x93, 0xdf,
-  0x0b, 0xd9, 0xb8, 0x59, 0x50, 0x1b, 0x65, 0x8a, 0xeb, 0x94, 0x3f, 0x5f,
-  0x8c, 0xa2, 0x4d, 0x30, 0x50, 0xe2, 0xb2, 0x7c, 0x13, 0xf8, 0x59, 0xb8,
-  0x05, 0xb9, 0x8f, 0x9d, 0xc0, 0x1e, 0xcf, 0x66, 0x22, 0x68, 0xb1, 0xa8,
-  0xf4, 0x7c, 0xb4, 0x33, 0x62, 0x63, 0x41, 0x72, 0x97, 0xe6, 0xa4, 0xef,
-  0xf1, 0x1d, 0xc4, 0x17, 0xad, 0x7b, 0x2f, 0x62, 0xed, 0x87, 0x6f, 0xd0,
-  0xeb, 0x6b, 0xac, 0x4f, 0x9e, 0x6d, 0x93, 0x82, 0x18, 0x05, 0xec, 0xb7,
-  0x20, 0xe5, 0x04, 0x9c, 0x87, 0xd7, 0xc6, 0xe4, 0x58, 0x10, 0x5d, 0xc8,
-  0x7b, 0x75, 0x35, 0xb7, 0x1c, 0x9d, 0x0c, 0xe3, 0xed, 0xe1, 0x30, 0x5e,
-  0xb2, 0x62, 0xd3, 0x30, 0x07, 0x6c, 0x12, 0x91, 0x6e, 0xb3, 0x26, 0xbc,
-  0x15, 0x7d, 0xcf, 0xf2, 0x06, 0xb8, 0x34, 0xcb, 0x85, 0x99, 0x53, 0x21,
-  0xb1, 0x74, 0x22, 0x91, 0xf0, 0x21, 0x31, 0xce, 0xd3, 0xd9, 0x9c, 0x51,
-  0x6a, 0x5c, 0xb0, 0x14, 0x87, 0x4b, 0xce, 0x51, 0x21, 0x8f, 0x37, 0xa2,
-  0x1b, 0xa7, 0x30, 0xed, 0x86, 0xf6, 0x6b, 0x24, 0x12, 0x16, 0x4e, 0x29,
-  0x3f, 0xdd, 0x68, 0x8e, 0x0f, 0x49, 0xd6, 0xa7, 0x15, 0x4a, 0xde, 0xa7,
-  0xac, 0xc2, 0xf2, 0x0e, 0xab, 0xf4, 0xc0, 0x57, 0xca, 0xb4, 0xc0, 0x62,
-  0x8c, 0x20, 0xde, 0x57, 0x89, 0x1c, 0x31, 0x0c, 0xf7, 0x6a, 0x1e, 0x5f,
-  0x13, 0x1d, 0x35, 0x9a, 0x23, 0x4d, 0x3d, 0x67, 0xf6, 0x4e, 0xdc, 0xb5,
-  0x24, 0xf1, 0x9e, 0x34, 0xe2, 0x6f, 0xf4, 0x22, 0x2d, 0xa3, 0x4d, 0x62,
-  0xd0, 0xf3, 0x15, 0xb4, 0x8c, 0x33, 0x9a, 0x18, 0x7d, 0xb5, 0xe5, 0xcf,
-  0xd9, 0xf0, 0x80, 0xd6, 0x8f, 0xb5, 0xee, 0x61, 0x4c, 0x27, 0xa1, 0x8a,
-  0x5e, 0xc8, 0x8f, 0xb2, 0xe2, 0x5b, 0xe6, 0x8b, 0xe6, 0x92, 0x32, 0xaf,
-  0xda, 0x8a, 0xc6, 0x2a, 0x30, 0xf2, 0xdc, 0xde, 0xf2, 0xab, 0x07, 0xc1,
-  0x3b, 0xbc, 0x50, 0x25, 0x2d, 0x9f, 0x2d, 0x18, 0xd8, 0x9b, 0x0c, 0x65,
-  0xd4, 0x68, 0x6e, 0xcc, 0x23, 0xa5, 0xf9, 0xc6, 0x33, 0x26, 0x18, 0xb9,
-  0x8f, 0xa3, 0xc3, 0xaf, 0x4f, 0x88, 0x5c, 0xae, 0x48, 0x1d, 0xa5, 0x59,
-  0x61, 0x01, 0x59, 0x7d, 0xa6, 0x1b, 0x99, 0xd8, 0x32, 0xcd, 0x1b, 0x6b,
-  0x46, 0x7a, 0x63, 0x28, 0x8d, 0xe9, 0x7f, 0xbd, 0xd7, 0xf9, 0xdf, 0x69,
-  0x01, 0xe3, 0xed, 0xa7, 0xa3, 0x1d, 0x3a, 0x23, 0x97, 0xa4, 0xb5, 0x64,
-  0xd3, 0x7c, 0x46, 0xca, 0xfc, 0x3c, 0xce, 0x6e, 0xcb, 0x08, 0xb4, 0x8a,
-  0xfd, 0x90, 0x91, 0xf2, 0xdd, 0xb5, 0x2a, 0x0a, 0xba, 0x25, 0x67, 0x51,
-  0x78, 0x79, 0xd8, 0x71, 0x91, 0xe9, 0xc8, 0x21, 0x30, 0x41, 0x20, 0xfa,
-  0xdb, 0x8a, 0xb7, 0x63, 0x11, 0x17, 0xb7, 0x26, 0x6d, 0x38, 0xed, 0x60,
-  0x92, 0x60, 0x60, 0x78, 0xbe, 0xdd, 0xdc, 0xf0, 0x1b, 0x5a, 0x68, 0x36,
-  0x11, 0xb0, 0xc8, 0x2f, 0xa7, 0x2f, 0x37, 0xb9, 0xc4, 0x6f, 0x87, 0xe7,
-  0x7e, 0x98, 0xb7, 0x3e, 0xc8, 0x5a, 0x1c, 0xb5, 0xcc, 0xa6, 0x0a, 0xa6,
-  0x04, 0x7a, 0x93, 0xce, 0xa7, 0x58, 0x27, 0xe6, 0x31, 0x1d, 0x33, 0x5e,
-  0x38, 0x4f, 0x3b, 0xed, 0xbe, 0xf9, 0x7b, 0xa6, 0xa0, 0x7e, 0x89, 0x53,
-  0x10, 0xec, 0xfe, 0x90, 0x58, 0x32, 0x9b, 0x5b, 0xba, 0x37, 0xfa, 0x92,
-  0x4e, 0x45, 0xe9, 0x8e, 0xc5, 0x55, 0x7a, 0xbd, 0x2a, 0x12, 0x61, 0xe4,
-  0xb0, 0xd0, 0x98, 0x61, 0x86, 0xd9, 0xee, 0x4d, 0x0e, 0xe2, 0x23, 0xa9,
-  0x37, 0x99, 0x5f, 0x0d, 0x1a, 0xcd, 0xf1, 0xf1, 0x35, 0x96, 0x07, 0xbe,
-  0x50, 0x26, 0x53, 0x34, 0x95, 0x25, 0xca, 0xbe, 0x17, 0xbc, 0xaa, 0xac,
-  0xdd, 0x47, 0xd3, 0x79, 0x9c, 0x2e, 0x4a, 0xd1, 0x0a, 0x54, 0x75, 0x6d,
-  0xd2, 0xcd, 0xa5, 0x4a, 0x71, 0x20, 0x98, 0x09, 0x4b, 0x91, 0x45, 0xc9,
-  0x72, 0x22, 0x6f, 0x57, 0x6c, 0xd7, 0x27, 0x3a, 0x25, 0x5d, 0x70, 0x7a,
-  0x0b, 0xa2, 0x44, 0x2f, 0x72, 0xf3, 0x0c, 0x1b, 0xcd, 0xc9, 0xa6, 0x94,
-  0xbc, 0x9e, 0xab, 0x92, 0x2d, 0x4a, 0x65, 0x3a, 0x21, 0x82, 0x24, 0xa9,
-  0x6a, 0x35, 0x05, 0x05, 0xb0, 0x76, 0x4a, 0x7a, 0x70, 0x11, 0xb3, 0xcc,
-  0x59, 0xc1, 0x16, 0x16, 0x81, 0x6c, 0x86, 0x44, 0x22, 0xcb, 0xce, 0xd1,
-  0xc1, 0xe6, 0x23, 0x72, 0x61, 0x8d, 0x49, 0x94, 0x2a, 0xfd, 0xb2, 0xd1,
-  0x45, 0x45, 0xcd, 0x69, 0x63, 0x35, 0x1b, 0xcd, 0xc9, 0xda, 0x0e, 0x48,
-  0x48, 0x4f, 0x49, 0x05, 0x37, 0x4d, 0x92, 0x84, 0x23, 0xa1, 0xcb, 0xe1,
-  0x90, 0x74, 0xa2, 0x74, 0x3a, 0xe0, 0xdf, 0x66, 0x29, 0x29, 0x9f, 0x15,
-  0x7e, 0xcd, 0xaa, 0xf9, 0x62, 0x10, 0x85, 0xdc, 0xdf, 0xed, 0x78, 0x96,
-  0x5c, 0xe7, 0xa4, 0x13, 0x57, 0x6d, 0xaa, 0x03, 0xa7, 0x11, 0x56, 0xa3,
-  0xc2, 0x83, 0xa3, 0x0f, 0x13, 0x05, 0x48, 0x86, 0x20, 0x76, 0xcc, 0x56,
-  0xa4, 0x19, 0x9f, 0x4e, 0x1e, 0x0e, 0x0d, 0x45, 0xf8, 0x69, 0x93, 0x27,
-  0x41, 0xac, 0x2f, 0x2b, 0x62, 0x3c, 0x03, 0x15, 0x12, 0x89, 0xc7, 0x2d,
-  0xe2, 0x07, 0xec, 0x10, 0x49, 0x23, 0x4e, 0x02, 0xc0, 0xc1, 0x21, 0x06,
-  0x52, 0xdd, 0xa7, 0x53, 0x15, 0xaf, 0x79, 0x41, 0x9a, 0x0c, 0x98, 0x0d,
-  0x00, 0xf3, 0x94, 0x1f, 0x5c, 0xac, 0x68, 0x7f, 0xe9, 0x2d, 0xbe, 0x6c,
-  0x45, 0x25, 0xb9, 0xa7, 0xdd, 0x1a, 0xc9, 0xb1, 0x49, 0x44, 0x64, 0xa2,
-  0xdb, 0x8e, 0x25, 0xb9, 0xb8, 0x48, 0xa1, 0x7c, 0xb5, 0x9a, 0x93, 0x31,
-  0xf3, 0x24, 0xc3, 0x71, 0xf2, 0xeb, 0x2a, 0xd8, 0x78, 0x81, 0x06, 0x47,
-  0x8b, 0x39, 0x52, 0x70, 0x70, 0x26, 0x74, 0x9a, 0xc5, 0xca, 0x18, 0xbd,
-  0xe0, 0x3b, 0xfb, 0x25, 0x4f, 0x66, 0x0d, 0xbf, 0x3c, 0x87, 0xc6, 0x77,
-  0x53, 0x17, 0x79, 0x02, 0xbe, 0x28, 0x6a, 0x9d, 0xb4, 0x66, 0xaa, 0x20,
-  0xd3, 0x7e, 0x93, 0x50, 0x89, 0x34, 0x13, 0xb0, 0x4a, 0xd7, 0xd6, 0xd2,
-  0x5f, 0xb8, 0xb4, 0x33, 0x49, 0x7a, 0xc7, 0x96, 0x43, 0xa7, 0x4d, 0x49,
-  0xe3, 0x30, 0x85, 0xf4, 0xc6, 0x49, 0xd5, 0x6c, 0xee, 0x10, 0x1d, 0xee,
-  0xf7, 0xd4, 0x9c, 0x02, 0xcb, 0x21, 0x5a, 0xd5, 0xa5, 0xa3, 0x05, 0x56,
-  0x7b, 0xc9, 0x15, 0xeb, 0x25, 0x44, 0x14, 0x3d, 0x36, 0x9d, 0xef, 0xbe,
-  0xfc, 0xee, 0xe0, 0xf4, 0xed, 0xf1, 0xee, 0x9f, 0x9b, 0xd4, 0x43, 0xdf,
-  0xed, 0xc9, 0x77, 0x7b, 0xbd, 0x2e, 0x8e, 0x46, 0x04, 0x14, 0x45, 0xfd,
-  0x97, 0x7d, 0x52, 0x60, 0x17, 0x93, 0x7c, 0xce, 0xb3, 0xb4, 0x3b, 0x19,
-  0x9c, 0x8c, 0x46, 0x31, 0x50, 0x09, 0xbf, 0x92, 0xeb, 0x4f, 0x16, 0x86,
-  0x6f, 0xcf, 0xe6, 0xd8, 0xa1, 0xef, 0xab, 0x66, 0x0d, 0x02, 0x88, 0x67,
-  0xe1, 0x62, 0x94, 0x15, 0x6e, 0x43, 0xdd, 0x20, 0x6e, 0xb9, 0x14, 0x7a,
-  0xa4, 0x33, 0x81, 0x83, 0xd4, 0xe4, 0xf5, 0x32, 0x63, 0x9e, 0xb2, 0x1f,
-  0x12, 0xb8, 0x6e, 0x09, 0xf9, 0x28, 0x05, 0x61, 0x3d, 0x10, 0xf5, 0x56,
-  0xd3, 0x9b, 0x11, 0x5d, 0x7a, 0xc2, 0x53, 0xd2, 0x52, 0x8f, 0x67, 0x93,
-  0xdf, 0xf1, 0x75, 0xc0, 0x2a, 0xfa, 0x1d, 0xcd, 0x42, 0xb6, 0xbe, 0xa7,
-  0x63, 0x21, 0xa5, 0x90, 0xf6, 0xa5, 0xa7, 0xc7, 0x19, 0x94, 0x05, 0x0b,
-  0xb2, 0x6a, 0x80, 0x7c, 0xbe, 0x8a, 0x66, 0x73, 0x74, 0x76, 0xf2, 0x05,
-  0xf7, 0xa8, 0x66, 0x6d, 0x76, 0x2b, 0x18, 0x43, 0xe0, 0xf3, 0x44, 0xa3,
-  0x66, 0x1d, 0xf8, 0x41, 0x4f, 0x64, 0xbf, 0x48, 0xf4, 0xf8, 0x8a, 0xba,
-  0xdb, 0xa4, 0x7c, 0x6a, 0x6c, 0x42, 0xc2, 0xb6, 0x92, 0xb6, 0x5c, 0x56,
-  0xd1, 0xf0, 0x94, 0x08, 0x7a, 0x9e, 0x2b, 0x43, 0xf7, 0x42, 0xab, 0x4a,
-  0x2f, 0x91, 0xa3, 0x81, 0xfc, 0xaa, 0xe3, 0x5c, 0xea, 0x33, 0xcc, 0xb3,
-  0xb1, 0x15, 0x36, 0x50, 0x39, 0x5a, 0x8e, 0x9c, 0x48, 0x37, 0xa4, 0x95,
-  0x05, 0xe5, 0x2b, 0xd3, 0x25, 0xcd, 0xa3, 0xa3, 0xb9, 0x37, 0x49, 0x55,
-  0x4e, 0xe3, 0x65, 0xb2, 0xad, 0x37, 0xba, 0x6d, 0x24, 0x7a, 0x91, 0x81,
-  0xb4, 0x99, 0xd7, 0xd9, 0xe5, 0xb1, 0x89, 0x49, 0xfa, 0xa4, 0xd7, 0xe5,
-  0x45, 0x90, 0x0d, 0xce, 0x2c, 0x9f, 0x30, 0x08, 0xc9, 0xca, 0xa4, 0xe3,
-  0x96, 0x40, 0x95, 0x91, 0x36, 0x35, 0x82, 0x71, 0xd5, 0x26, 0xa3, 0xa6,
-  0x46, 0x23, 0x2e, 0x3b, 0x1b, 0xd4, 0x13, 0x84, 0x0d, 0x7c, 0xec, 0x3c,
-  0x0f, 0x4d, 0x6e, 0xa3, 0xb7, 0xdf, 0x70, 0xea, 0xc6, 0x30, 0xfc, 0x6b,
-  0xec, 0x25, 0x01, 0x35, 0x5b, 0x63, 0xa1, 0x48, 0xb2, 0xcf, 0x48, 0xf4,
-  0xbd, 0x4b, 0x74, 0x6d, 0x79, 0xbd, 0xba, 0xaf, 0x2c, 0xaf, 0xed, 0x19,
-  0xbf, 0x3e, 0xa2, 0xe6, 0x67, 0xab, 0xc5, 0x52, 0x25, 0x8d, 0xdf, 0x75,
-  0x1d, 0x43, 0x91, 0xa8, 0x7e, 0xa9, 0x68, 0x31, 0x49, 0x7e, 0x91, 0x60,
-  0xf1, 0x95, 0x88, 0x95, 0xc3, 0xb8, 0x9c, 0xa6, 0x69, 0xe3, 0xad, 0x63,
-  0x68, 0x54, 0xd1, 0xc1, 0xf8, 0xf0, 0xe4, 0xc4, 0x5b, 0x22, 0xee, 0x45,
-  0x48, 0xe7, 0x69, 0xb0, 0x7a, 0x49, 0x4b, 0xc2, 0x2e, 0x2a, 0xb1, 0xe5,
-  0xc1, 0x91, 0x25, 0xe3, 0xa6, 0xdb, 0xaf, 0xeb, 0xb4, 0xf1, 0xf8, 0x92,
-  0x8c, 0x68, 0x63, 0x2a, 0x52, 0xb0, 0x34, 0x44, 0xf3, 0x61, 0xbb, 0x18,
-  0xc8, 0x82, 0x2e, 0xad, 0x52, 0x95, 0xa8, 0x3f, 0x57, 0x0f, 0xcb, 0xe4,
-  0xe5, 0x41, 0x4f, 0x24, 0xb8, 0xe6, 0x9c, 0x64, 0x61, 0xa6, 0x31, 0x0d,
-  0x5f, 0x6d, 0x18, 0x72, 0x3b, 0xf1, 0x16, 0xcf, 0xd4, 0xf2, 0xa0, 0xbc,
-  0x91, 0xad, 0xe3, 0x0b, 0x16, 0x31, 0xc5, 0x06, 0x4c, 0xb7, 0xd0, 0x93,
-  0xbd, 0x26, 0x6b, 0x79, 0xa0, 0xeb, 0x7f, 0x51, 0x86, 0x32, 0x17, 0x6e,
-  0xec, 0xee, 0xab, 0xa2, 0x21, 0x72, 0x31, 0xd9, 0xe0, 0xb8, 0x7c, 0xc5,
-  0xaf, 0x34, 0x04, 0x85, 0x91, 0x13, 0x84, 0xda, 0x1b, 0x63, 0xc6, 0x55,
-  0xbe, 0x4c, 0x1b, 0x92, 0xe4, 0xaa, 0x5c, 0xc1, 0xc6, 0xb4, 0x24, 0x79,
-  0xa9, 0x9a, 0x13, 0x83, 0x1b, 0x44, 0xab, 0x8c, 0x7f, 0x3a, 0xcd, 0x34,
-  0xf2, 0x5a, 0xbb, 0x57, 0x7e, 0xa0, 0xdf, 0x14, 0x29, 0xcf, 0x35, 0x8e,
-  0x42, 0x5e, 0x2b, 0xd2, 0xb8, 0xb6, 0xaf, 0xd2, 0x03, 0x3b, 0x76, 0xe8,
-  0xb1, 0x59, 0xca, 0x4e, 0x40, 0x1a, 0x71, 0x73, 0xc7, 0x3a, 0xc5, 0xc7,
-  0xcd, 0x72, 0x45, 0x0c, 0x8d, 0x58, 0xbe, 0x13, 0x5f, 0x02, 0x91, 0x86,
-  0x97, 0xd7, 0x64, 0x97, 0xe6, 0x65, 0x40, 0x4c, 0x36, 0xd4, 0x68, 0x86,
-  0xd3, 0x74, 0x79, 0xc3, 0xa7, 0xe3, 0x05, 0x34, 0x60, 0x96, 0xb2, 0xe5,
-  0x83, 0xd6, 0xf5, 0x3c, 0x1e, 0x9f, 0x9a, 0x36, 0x83, 0x03, 0x0e, 0x8e,
-  0x6a, 0x6f, 0xeb, 0xf2, 0xa7, 0xe6, 0x7a, 0x30, 0x73, 0xa7, 0x70, 0x45,
-  0x6e, 0xba, 0x49, 0x38, 0xae, 0x23, 0x11, 0x50, 0xcc, 0xae, 0x0e, 0x03,
-  0xae, 0x7d, 0x35, 0x8a, 0x2e, 0x20, 0x0c, 0xae, 0x96, 0x7c, 0x7a, 0x22,
-  0xb8, 0x2e, 0xf5, 0xbb, 0x46, 0x73, 0x18, 0x7c, 0xb8, 0xa3, 0x70, 0xf6,
-  0xd5, 0x0e, 0x5f, 0x8d, 0x6d, 0xa6, 0xc1, 0x77, 0x44, 0xf4, 0xfb, 0x4d,
-  0x96, 0xe1, 0xbd, 0x03, 0x24, 0xd9, 0x64, 0x65, 0x39, 0x87, 0xd3, 0x66,
-  0x96, 0x4f, 0xcb, 0x6d, 0x52, 0x78, 0xcb, 0x6d, 0x1b, 0x60, 0xcd, 0x3d,
-  0x63, 0xcc, 0x75, 0x3c, 0x76, 0x73, 0x63, 0x9b, 0x08, 0x24, 0x6f, 0xb7,
-  0xbb, 0xf3, 0x07, 0x61, 0x1d, 0xa2, 0x5d, 0x9e, 0xaa, 0x2d, 0xf1, 0xeb,
-  0x6c, 0x75, 0x79, 0x3a, 0x16, 0xb9, 0xa2, 0x29, 0x19, 0xae, 0x58, 0x57,
-  0xb1, 0xdd, 0x09, 0x1b, 0xc7, 0x7d, 0x25, 0x77, 0xc0, 0x78, 0x7c, 0x88,
-  0x0f, 0xc7, 0x2b, 0x56, 0x0b, 0xa8, 0x9b, 0xe2, 0x21, 0x52, 0x25, 0xb8,
-  0xd1, 0x1c, 0xcf, 0xd6, 0xe6, 0x27, 0x66, 0xae, 0xbc, 0x78, 0x18, 0x5d,
-  0x25, 0xb3, 0xbc, 0x88, 0x47, 0xc4, 0xaa, 0x89, 0x24, 0xe1, 0x09, 0xc1,
-  0x5c, 0xe9, 0xb8, 0xbe, 0xa3, 0xd9, 0x63, 0x9a, 0x9f, 0x1c, 0xf1, 0xd3,
-  0x4d, 0x72, 0xa2, 0x6b, 0x3b, 0x29, 0x3f, 0xac, 0x91, 0xe1, 0xe2, 0x30,
-  0x67, 0x19, 0x5b, 0x4b, 0xcb, 0x2e, 0xb6, 0x69, 0xa7, 0xa6, 0xe3, 0x96,
-  0x83, 0xdd, 0xb1, 0xc6, 0x18, 0x68, 0x90, 0x4b, 0x36, 0x72, 0x25, 0xb3,
-  0x6e, 0xee, 0x70, 0x61, 0xaa, 0x4d, 0xe4, 0x9f, 0xf4, 0x06, 0xb5, 0x66,
-  0x04, 0x01, 0x31, 0xc6, 0xeb, 0xbc, 0x20, 0x86, 0xb7, 0x28, 0x5b, 0xa4,
-  0x25, 0xfe, 0x67, 0xd5, 0xaf, 0x68, 0xe0, 0x62, 0xc0, 0xac, 0x56, 0x85,
-  0x2c, 0xfe, 0x2a, 0x0b, 0x3a, 0xa0, 0x65, 0x5b, 0x2d, 0xe0, 0x35, 0xb6,
-  0x55, 0xe8, 0xe6, 0x98, 0xb6, 0x26, 0xc2, 0x73, 0x9c, 0xfc, 0x09, 0x6b,
-  0x40, 0x29, 0x5a, 0xd4, 0x2a, 0xf3, 0xde, 0x48, 0xd1, 0xce, 0x59, 0x0f,
-  0x6f, 0xca, 0x27, 0xce, 0xeb, 0x50, 0x24, 0xfc, 0x2c, 0xbf, 0x49, 0x8b,
-  0x98, 0x17, 0xf5, 0xa5, 0xc2, 0x79, 0x1c, 0xf2, 0xc2, 0x33, 0x4f, 0x7e,
-  0x41, 0x2a, 0x65, 0x4e, 0xfd, 0x34, 0xcf, 0xf8, 0xeb, 0xf8, 0x7d, 0xba,
-  0x58, 0x2d, 0xc4, 0x9e, 0x2d, 0x26, 0x00, 0x7d, 0x32, 0xf2, 0xbe, 0x39,
-  0xe2, 0x87, 0xf9, 0x7d, 0xe3, 0x98, 0x37, 0x2c, 0xca, 0xce, 0xaa, 0x8f,
-  0x39, 0xf1, 0x77, 0x24, 0xb5, 0x8d, 0x54, 0xdb, 0x53, 0x73, 0xdb, 0x82,
-  0x7d, 0x3e, 0x72, 0x67, 0x07, 0xed, 0x44, 0xcb, 0x9b, 0xb8, 0x4c, 0x98,
-  0x85, 0xd1, 0xcd, 0xda, 0x35, 0x55, 0x12, 0xde, 0x4a, 0xf7, 0x46, 0xd2,
-  0xe2, 0xd7, 0xb4, 0x99, 0x24, 0x38, 0xe3, 0x82, 0xa6, 0xe5, 0x45, 0x3c,
-  0x80, 0x5c, 0x79, 0x1d, 0x36, 0x86, 0x05, 0xdd, 0xba, 0x8b, 0xf8, 0x3d,
-  0x56, 0xc5, 0x84, 0xb8, 0x5f, 0x8b, 0x92, 0x55, 0x36, 0x0e, 0x36, 0xa1,
-  0x21, 0xcb, 0xbc, 0x80, 0x20, 0xc2, 0x92, 0x79, 0x73, 0x13, 0x9c, 0xc1,
-  0x28, 0x57, 0x1e, 0x8b, 0x27, 0x9d, 0x59, 0xdc, 0x6e, 0x3b, 0x31, 0xe7,
-  0xb3, 0x1d, 0xd6, 0x44, 0xae, 0xf8, 0x0a, 0xd6, 0xf5, 0xb6, 0x00, 0xbb,
-  0x9c, 0x27, 0xa0, 0x21, 0xa7, 0xa4, 0x8d, 0xd4, 0x5b, 0x25, 0x8d, 0x94,
-  0x51, 0xad, 0x99, 0x9a, 0x9a, 0x14, 0xcf, 0xba, 0xf4, 0xd4, 0x38, 0x90,
-  0x16, 0x31, 0xba, 0x18, 0x46, 0x4b, 0xe6, 0x53, 0xb1, 0xb6, 0xe6, 0x9a,
-  0xf3, 0xba, 0x16, 0xde, 0x6d, 0x34, 0x67, 0xc6, 0x0c, 0x50, 0xca, 0x66,
-  0xb9, 0x05, 0xb5, 0x34, 0xf3, 0x62, 0x24, 0xf3, 0xcf, 0xdb, 0x2c, 0xbf,
-  0x27, 0x6d, 0x33, 0xcb, 0xa5, 0x2f, 0x5b, 0x5f, 0x1e, 0x7b, 0x8b, 0x1b,
-  0x25, 0x7a, 0xe3, 0xb4, 0x9e, 0xac, 0x9c, 0xbc, 0x24, 0x34, 0x67, 0x52,
-  0xb3, 0x0d, 0xb4, 0xd3, 0xee, 0xa8, 0xd2, 0x73, 0xe8, 0xfe, 0x4d, 0xaa,
-  0x50, 0x88, 0x37, 0xcd, 0xca, 0xf9, 0xbe, 0x66, 0x71, 0x79, 0x33, 0x88,
-  0x7a, 0xc3, 0xde, 0xa0, 0x83, 0xe2, 0x9a, 0xb2, 0xb1, 0x8d, 0xcb, 0x09,
-  0x4b, 0xdd, 0x72, 0xba, 0x2a, 0xea, 0x3a, 0x4e, 0x26, 0x1e, 0x12, 0xeb,
-  0xfa, 0xd0, 0xe9, 0xd5, 0xf2, 0xc9, 0x17, 0xbe, 0x6f, 0x4c, 0xe8, 0xf1,
-  0xfe, 0x26, 0x9f, 0x77, 0x9e, 0xa0, 0x40, 0x55, 0xcf, 0xb9, 0x19, 0x58,
-  0x0f, 0xd9, 0x05, 0xcc, 0x92, 0x74, 0x83, 0x89, 0x44, 0xd3, 0x79, 0x12,
-  0x17, 0xf3, 0x07, 0xd5, 0xe2, 0x9a, 0x27, 0xe8, 0x4e, 0xa6, 0xc2, 0x36,
-  0xde, 0x98, 0xa8, 0xb3, 0xc8, 0x78, 0x7d, 0xd5, 0xad, 0x95, 0xcc, 0x24,
-  0x68, 0xa2, 0x12, 0x53, 0xbe, 0xae, 0x9a, 0xa8, 0x11, 0x77, 0x29, 0x5b,
-  0x8d, 0x5a, 0xab, 0x9d, 0x24, 0xb3, 0x49, 0x3c, 0xbd, 0xc5, 0x4a, 0xa3,
-  0x4d, 0x71, 0x5d, 0xf1, 0xf9, 0x73, 0x86, 0x26, 0x22, 0xe5, 0x1b, 0x3a,
-  0x78, 0x65, 0x5a, 0xad, 0xe2, 0x75, 0x27, 0xb6, 0x2e, 0xb4, 0x7f, 0xf0,
-  0xd0, 0xd6, 0x69, 0xb9, 0x4b, 0x77, 0x5e, 0x73, 0xa4, 0x0f, 0x71, 0xa4,
-  0x49, 0x34, 0xcb, 0x56, 0x24, 0xbb, 0x13, 0x5b, 0xcd, 0xaf, 0xae, 0x88,
-  0x40, 0xbe, 0x68, 0x99, 0x0e, 0xe4, 0x91, 0xed, 0x0b, 0x0d, 0xa4, 0x72,
-  0x47, 0xac, 0xee, 0xfe, 0xe5, 0x0b, 0x5b, 0x56, 0xe9, 0x3a, 0xe5, 0xbd,
-  0x88, 0xa4, 0xb9, 0xb6, 0xc9, 0xac, 0xf9, 0x44, 0xe4, 0xd7, 0x57, 0x7c,
-  0x24, 0x41, 0x18, 0xd6, 0xe4, 0x41, 0x94, 0xea, 0xb8, 0x6a, 0x46, 0x7f,
-  0x18, 0x93, 0xbe, 0x4d, 0x97, 0x4b, 0xde, 0x2c, 0x04, 0x68, 0x38, 0x13,
-  0x0f, 0xb7, 0x36, 0x49, 0xae, 0xd3, 0x2c, 0x0b, 0x43, 0x65, 0xf2, 0x55,
-  0x31, 0x75, 0x0a, 0xec, 0x24, 0xa1, 0xf3, 0xd1, 0x6c, 0xce, 0x4c, 0x12,
-  0xde, 0x89, 0xaa, 0x26, 0x9c, 0x19, 0xa2, 0x6e, 0x8c, 0xfd, 0x9c, 0x5c,
-  0xc9, 0x9e, 0x40, 0xc5, 0x50, 0x8b, 0x58, 0xd7, 0x91, 0x79, 0xe5, 0xed,
-  0x3e, 0xe6, 0xda, 0x18, 0x9f, 0xfc, 0xaf, 0x63, 0xef, 0xf0, 0x36, 0x23,
-  0x04, 0x69, 0x31, 0x4c, 0xdd, 0x2d, 0x72, 0x78, 0x4b, 0x77, 0x7d, 0x6f,
-  0x78, 0x18, 0x0d, 0x7b, 0x18, 0x48, 0xcd, 0x73, 0xb1, 0xaa, 0x72, 0x3a,
-  0xde, 0x1a, 0x1a, 0x80, 0xe8, 0x2e, 0xa6, 0x37, 0xd6, 0xad, 0x8a, 0x64,
-  0x5b, 0xfc, 0x3f, 0x79, 0x8b, 0x5f, 0x61, 0x0b, 0x65, 0xb1, 0x6d, 0x96,
-  0x30, 0x43, 0x55, 0xea, 0x36, 0x11, 0x0b, 0x86, 0xec, 0x8f, 0xb8, 0x19,
-  0xb7, 0xa1, 0x1e, 0x8b, 0xcb, 0xbc, 0xad, 0x2a, 0xa8, 0xa1, 0x58, 0xdc,
-  0x82, 0x1d, 0x2c, 0xe0, 0xd7, 0xbb, 0x81, 0x86, 0xc2, 0x2d, 0x48, 0x4d,
-  0x28, 0x9a, 0xe3, 0xa8, 0xf9, 0x7c, 0x88, 0xa4, 0xff, 0x4a, 0x32, 0x4d,
-  0xc3, 0xe4, 0x61, 0x6e, 0xad, 0x41, 0x3d, 0x7a, 0x43, 0xda, 0xec, 0xb2,
-  0x72, 0xd0, 0x05, 0x4d, 0x22, 0x51, 0xcc, 0xa1, 0x29, 0x6c, 0x2a, 0x61,
-  0x7f, 0xb7, 0x4a, 0x9b, 0xd1, 0x4d, 0x4a, 0x63, 0x2f, 0xa6, 0x37, 0x0f,
-  0x7c, 0x5d, 0xb0, 0x01, 0x92, 0x9d, 0x37, 0x97, 0x7e, 0x96, 0x4d, 0xb6,
-  0x85, 0x3e, 0xd4, 0x2a, 0x98, 0xb2, 0xc6, 0xc0, 0xfa, 0x50, 0x9e, 0x19,
-  0xfd, 0x34, 0xc6, 0x47, 0x64, 0x71, 0xc3, 0x44, 0x9b, 0xcc, 0x59, 0x02,
-  0xa0, 0x05, 0xec, 0x1a, 0xdd, 0x30, 0x0f, 0x38, 0x38, 0xb6, 0x8d, 0xee,
-  0x17, 0x6a, 0x9c, 0x39, 0xa1, 0x18, 0xb0, 0xa4, 0x2b, 0xb6, 0xc2, 0x4a,
-  0x6f, 0x74, 0x19, 0xcd, 0xf9, 0x42, 0x7c, 0x68, 0x34, 0xa7, 0x3e, 0x29,
-  0x7d, 0xdd, 0xd6, 0xde, 0x7c, 0x52, 0xcd, 0xed, 0xbc, 0xcc, 0xf5, 0x2b,
-  0xbb, 0xfa, 0x6c, 0x55, 0x44, 0xa7, 0x6a, 0x6a, 0xf5, 0x12, 0x9c, 0x8a,
-  0xf8, 0x9e, 0xe1, 0xf0, 0xaa, 0x6a, 0x59, 0x39, 0x83, 0x2d, 0xad, 0xef,
-  0xf4, 0xfc, 0x0a, 0x3e, 0xbd, 0x2d, 0xe6, 0x3e, 0x44, 0x29, 0x55, 0x74,
-  0xfa, 0x8a, 0xa9, 0xed, 0xf0, 0x82, 0x7e, 0xa6, 0xe6, 0xd4, 0x63, 0xb6,
-  0x8e, 0x20, 0x53, 0x56, 0xc8, 0x5f, 0x7f, 0x37, 0x8e, 0x36, 0xcf, 0xc6,
-  0xdb, 0x4f, 0x9e, 0xef, 0x6c, 0x35, 0xdb, 0xe2, 0x95, 0x82, 0xc4, 0xd2,
-  0x69, 0xb4, 0x1d, 0x6f, 0x73, 0x40, 0xed, 0x16, 0xe2, 0x9f, 0xef, 0x58,
-  0xe9, 0xad, 0x99, 0x59, 0xce, 0x8f, 0x5f, 0x9b, 0x3d, 0x0c, 0xbb, 0x15,
-  0x47, 0x87, 0x34, 0x1e, 0xb6, 0xe5, 0xb7, 0x09, 0xe7, 0x22, 0xb9, 0x33,
-  0xab, 0xda, 0x29, 0x2b, 0x3c, 0x38, 0x15, 0x6c, 0xb5, 0x33, 0xf5, 0x70,
-  0x99, 0x30, 0x27, 0xf0, 0xef, 0x2b, 0x6b, 0x83, 0x9c, 0xd0, 0x3e, 0xad,
-  0x13, 0xc8, 0xa8, 0x25, 0x0d, 0xa9, 0x80, 0xec, 0xcf, 0x21, 0x13, 0xb3,
-  0xdf, 0xee, 0x84, 0xd9, 0x9a, 0x1c, 0x98, 0xb3, 0x17, 0xbe, 0xde, 0xcf,
-  0x02, 0xff, 0xeb, 0x8c, 0x2d, 0x4e, 0x6c, 0x24, 0x79, 0xf1, 0x88, 0x05,
-  0x9c, 0x84, 0x56, 0x95, 0xb8, 0x93, 0x28, 0xb8, 0x9c, 0xf0, 0x1e, 0xec,
-  0xd3, 0x88, 0x7f, 0x30, 0xcf, 0x4d, 0x60, 0x21, 0xef, 0x14, 0xbf, 0x07,
-  0x2e, 0x8e, 0x0f, 0x37, 0x59, 0xfc, 0x20, 0x2b, 0x16, 0x47, 0x93, 0x22,
-  0xbf, 0xe7, 0x00, 0x62, 0x09, 0x41, 0x10, 0xda, 0x63, 0x6b, 0x05, 0xa2,
-  0x8a, 0x59, 0xcc, 0x6e, 0x5e, 0xcf, 0x34, 0x67, 0x71, 0xd1, 0xb0, 0x78,
-  0xf0, 0xcd, 0xe5, 0xeb, 0x53, 0x6c, 0x2b, 0x34, 0x18, 0xd1, 0x7e, 0xe4,
-  0x84, 0x96, 0xab, 0x09, 0xc9, 0xf6, 0x7c, 0xf7, 0x57, 0xce, 0xec, 0x12,
-  0xc6, 0x00, 0x1b, 0xe5, 0xc6, 0x08, 0x8c, 0x52, 0x5e, 0xbc, 0xec, 0xb2,
-  0xfa, 0x2b, 0xe3, 0x37, 0xf3, 0x2c, 0x36, 0x93, 0x44, 0x1c, 0xd2, 0x63,
-  0x1e, 0x96, 0x4d, 0xca, 0x21, 0xad, 0x7c, 0xae, 0x26, 0x92, 0xed, 0xf7,
-  0x43, 0x52, 0xdc, 0x87, 0x3c, 0xb8, 0x21, 0x35, 0x2f, 0x7e, 0x4d, 0xf6,
-  0x0e, 0x1f, 0x92, 0x28, 0xcc, 0x84, 0x42, 0xcd, 0x0f, 0x5f, 0xd1, 0x4e,
-  0xf0, 0x13, 0xad, 0xdd, 0xf3, 0x7b, 0xe4, 0x6f, 0x55, 0x2c, 0x1d, 0x44,
-  0x5b, 0xf9, 0x4a, 0x0c, 0x75, 0x23, 0x9c, 0x66, 0x0e, 0xaa, 0x56, 0xff,
-  0x02, 0xf1, 0xf1, 0x79, 0x93, 0x3b, 0xb0, 0xf1, 0xb8, 0x78, 0x90, 0x40,
-  0x06, 0xb5, 0xed, 0x9a, 0x8f, 0xcb, 0x99, 0x39, 0xa5, 0x4d, 0x79, 0xd2,
-  0x5b, 0x93, 0x73, 0x56, 0xd5, 0x9b, 0xe7, 0x5d, 0x9d, 0xb4, 0xfc, 0xda,
-  0x5d, 0x3c, 0x5f, 0x41, 0x7b, 0x8d, 0x65, 0x1f, 0xc4, 0xeb, 0x8b, 0x28,
-  0xc2, 0xf8, 0x01, 0x8d, 0x6b, 0xc3, 0x6e, 0x0d, 0x3a, 0x65, 0x25, 0x0e,
-  0x33, 0x91, 0xeb, 0xbd, 0x4c, 0x5c, 0x04, 0x82, 0x9d, 0x81, 0xba, 0xa5,
-  0xd3, 0x22, 0x4b, 0x2d, 0xd2, 0xa0, 0x39, 0x38, 0x17, 0x79, 0x30, 0x08,
-  0x9c, 0x2e, 0x29, 0x5f, 0x03, 0x01, 0x19, 0x07, 0xbe, 0xd7, 0x45, 0x52,
-  0x5c, 0x23, 0x7a, 0x2a, 0x27, 0x69, 0xaf, 0x6d, 0xd3, 0x11, 0x9f, 0x5d,
-  0xec, 0xa2, 0xc3, 0x20, 0xbc, 0xff, 0x61, 0x28, 0x0e, 0x11, 0x68, 0x93,
-  0x2b, 0x3a, 0x97, 0x26, 0xd5, 0xf7, 0x87, 0xb3, 0x48, 0x7d, 0x4b, 0x19,
-  0xad, 0x04, 0xed, 0x63, 0x5b, 0xd0, 0x99, 0xcf, 0x5f, 0xce, 0x49, 0xec,
-  0x7a, 0xe8, 0x47, 0x1a, 0xba, 0xa4, 0x01, 0x2d, 0x95, 0xda, 0xe9, 0x10,
-  0x85, 0x31, 0xbd, 0x59, 0x65, 0xb7, 0x66, 0x9b, 0x9b, 0x93, 0xd0, 0x5d,
-  0x46, 0x88, 0xbe, 0x6f, 0x34, 0xd7, 0x0f, 0x3a, 0xfb, 0x43, 0xd8, 0x76,
-  0xe7, 0x2a, 0x8b, 0xf2, 0xc0, 0x31, 0x94, 0x81, 0x43, 0xca, 0x5d, 0x5e,
-  0x12, 0x81, 0x1a, 0x7d, 0x39, 0x30, 0xd7, 0x6b, 0x15, 0xf8, 0x01, 0xe2,
-  0xf6, 0x39, 0xf4, 0x8a, 0x07, 0x1c, 0x08, 0xae, 0x41, 0x71, 0xda, 0x10,
-  0x2f, 0x1f, 0x9a, 0xbf, 0xd1, 0xab, 0x8c, 0xce, 0xdf, 0xd0, 0x75, 0x1b,
-  0x0a, 0xbd, 0x7b, 0xdf, 0x9e, 0x4b, 0x70, 0xc0, 0x79, 0x2b, 0x4d, 0xfe,
-  0x43, 0xd7, 0x30, 0xd7, 0xe9, 0x55, 0xd8, 0x16, 0x27, 0x99, 0x66, 0xdd,
-  0x89, 0x7b, 0x1d, 0x86, 0x39, 0x36, 0x9c, 0xff, 0x46, 0x10, 0xa3, 0xe8,
-  0x3c, 0x97, 0x78, 0x6c, 0x8c, 0xa2, 0x4b, 0xdd, 0xb4, 0xfb, 0x84, 0x27,
-  0x3d, 0x8b, 0xfa, 0x57, 0x79, 0x3e, 0x89, 0x8b, 0xbe, 0x6e, 0x21, 0xfc,
-  0xd0, 0x13, 0xb5, 0xb2, 0x69, 0x0c, 0x0e, 0xa6, 0xf3, 0x25, 0x3d, 0xd7,
-  0xa4, 0xd0, 0x49, 0x5c, 0xb3, 0x8b, 0x84, 0xe7, 0xee, 0x31, 0x8e, 0x7c,
-  0xa9, 0x2a, 0x48, 0xa5, 0x26, 0x6e, 0x48, 0xd9, 0x73, 0x48, 0x2f, 0x0d,
-  0xb7, 0x09, 0x7b, 0xed, 0xd4, 0xfb, 0xbd, 0x2c, 0x5a, 0xdd, 0xb3, 0x40,
-  0x84, 0x18, 0x5a, 0xa2, 0xad, 0x32, 0x4f, 0xee, 0xc2, 0x68, 0xea, 0xdf,
-  0x8e, 0x58, 0x78, 0xd9, 0x68, 0x43, 0x8f, 0x70, 0x7f, 0xc8, 0x3c, 0x5c,
-  0xd0, 0xb7, 0xc4, 0xb1, 0x45, 0x16, 0xf2, 0xdd, 0xe2, 0x71, 0x1d, 0x81,
-  0x38, 0x03, 0x9e, 0x21, 0x22, 0x9e, 0xf4, 0x8c, 0x64, 0xc9, 0xbd, 0x3a,
-  0x0d, 0x99, 0xb9, 0xf2, 0x55, 0xc0, 0x7c, 0x5b, 0x4c, 0x5b, 0x53, 0x48,
-  0x1f, 0xa5, 0xc5, 0x87, 0x35, 0x95, 0x2b, 0x5e, 0x02, 0xec, 0xdc, 0xbf,
-  0x78, 0x29, 0x9b, 0x52, 0x09, 0x8f, 0x65, 0xce, 0x86, 0x29, 0xd3, 0xf0,
-  0x5b, 0xeb, 0xc0, 0x51, 0x0f, 0x12, 0x9d, 0x8b, 0x80, 0x25, 0x59, 0xd4,
-  0xb8, 0xd4, 0x1c, 0x8e, 0x89, 0xac, 0x88, 0x63, 0xfe, 0x2d, 0x2a, 0x71,
-  0x4c, 0xf4, 0x97, 0x10, 0xca, 0xc0, 0x2d, 0xb0, 0xde, 0x68, 0x12, 0xa3,
-  0xad, 0x04, 0xea, 0xc2, 0xc4, 0xd2, 0x56, 0x48, 0x89, 0x84, 0xbb, 0xf1,
-  0x22, 0xc3, 0xb8, 0xe6, 0xe2, 0x99, 0x48, 0x75, 0x67, 0x5e, 0x5f, 0xfa,
-  0x63, 0x46, 0xf3, 0x1d, 0xd5, 0x25, 0x8e, 0xcf, 0x47, 0x3b, 0x5b, 0x6d,
-  0xa1, 0x93, 0x68, 0xe3, 0xf0, 0xeb, 0x13, 0x18, 0x4d, 0xe7, 0x69, 0xcc,
-  0x19, 0x0d, 0xdc, 0x87, 0xcc, 0x45, 0xf3, 0x4b, 0x8c, 0x88, 0xae, 0xd9,
-  0xee, 0xe7, 0x98, 0x6f, 0x18, 0x63, 0xe7, 0xcc, 0x22, 0xbc, 0xd2, 0x9a,
-  0x9f, 0x13, 0x1b, 0x7b, 0xce, 0x25, 0xb2, 0x33, 0x36, 0xae, 0xe1, 0x42,
-  0x36, 0x62, 0xef, 0x08, 0xe8, 0x5c, 0x3b, 0xf4, 0xce, 0xbc, 0x81, 0x9d,
-  0x9e, 0x31, 0xac, 0xa8, 0xb4, 0x5c, 0x60, 0x5a, 0x2d, 0x2b, 0xad, 0xdf,
-  0x64, 0x49, 0xd9, 0x49, 0xca, 0xfd, 0x8d, 0x96, 0x95, 0x05, 0xdd, 0x77,
-  0xe7, 0xbb, 0x39, 0x69, 0x44, 0x1c, 0xc9, 0xe8, 0xc4, 0xb3, 0xac, 0x50,
-  0xc8, 0x10, 0xb9, 0x86, 0xc5, 0x12, 0xac, 0x7f, 0x77, 0x73, 0xd0, 0x65,
-  0xff, 0x07, 0x33, 0x44, 0xc8, 0x9a, 0x44, 0xe1, 0x2c, 0x4d, 0x5b, 0x26,
-  0x43, 0xd8, 0x9a, 0x85, 0xb0, 0xf1, 0xdf, 0x71, 0xcb, 0xcb, 0xec, 0x42,
-  0x7f, 0x1e, 0xa2, 0x97, 0xcc, 0xbf, 0xbf, 0x54, 0xb7, 0x3f, 0x1b, 0x9b,
-  0x43, 0xed, 0x5d, 0xb4, 0x4c, 0x75, 0x82, 0x8b, 0x68, 0x82, 0x65, 0xe8,
-  0x6e, 0x0e, 0x0e, 0xf8, 0x70, 0xf5, 0x84, 0xfc, 0x38, 0x30, 0xb5, 0x94,
-  0xa4, 0xad, 0x96, 0xcb, 0xf3, 0xe5, 0x87, 0x57, 0xef, 0x97, 0x2e, 0xdf,
-  0xe3, 0xab, 0x77, 0x89, 0x28, 0x63, 0x92, 0x11, 0x10, 0x5d, 0xf2, 0x32,
-  0x08, 0x77, 0x60, 0xed, 0x5e, 0x82, 0xf1, 0xbc, 0xff, 0xb8, 0x7e, 0x34,
-  0x03, 0x13, 0xcd, 0xcb, 0x5f, 0x6b, 0xd7, 0x41, 0x8c, 0x70, 0xc9, 0xf0,
-  0xe0, 0xbb, 0x9b, 0x13, 0xb6, 0x87, 0xbd, 0x0f, 0xe3, 0x0d, 0xf5, 0x56,
-  0x46, 0x0b, 0xd4, 0x5f, 0xf2, 0x7e, 0xa9, 0x26, 0x6a, 0x9c, 0xbe, 0x0e,
-  0x61, 0xae, 0x26, 0xd3, 0xcd, 0xec, 0x4e, 0x6d, 0xcd, 0xef, 0x4b, 0x63,
-  0xe2, 0x1f, 0x9a, 0x5c, 0x2d, 0x38, 0x02, 0x61, 0x39, 0xe1, 0xc5, 0x5e,
-  0x33, 0x2d, 0x75, 0x58, 0xba, 0x8c, 0x93, 0xf9, 0x00, 0x48, 0xc9, 0x8f,
-  0x30, 0xf6, 0xbe, 0x35, 0xa8, 0xaf, 0x59, 0xac, 0x62, 0xaf, 0x6d, 0x74,
-  0x77, 0x73, 0x29, 0x2b, 0x4c, 0xb6, 0x7d, 0xac, 0xb8, 0x74, 0x6e, 0xdf,
-  0xff, 0x61, 0x53, 0x14, 0x1b, 0x1d, 0xa8, 0x41, 0xc8, 0x81, 0xcd, 0x99,
-  0xea, 0xd5, 0x21, 0xb5, 0x8d, 0xee, 0xaf, 0x88, 0xd3, 0x45, 0xd7, 0x30,
-  0x01, 0xdc, 0x4f, 0x6c, 0x91, 0x63, 0x63, 0xd3, 0x1c, 0xa2, 0x51, 0x2a,
-  0xb1, 0xce, 0x2f, 0xbd, 0x3a, 0x33, 0x44, 0xa0, 0x8f, 0x52, 0xed, 0x08,
-  0x74, 0xf8, 0x08, 0xb1, 0x3a, 0xe2, 0xec, 0xa6, 0xcb, 0xb5, 0x14, 0x68,
-  0x3e, 0xe5, 0xee, 0xdb, 0x4e, 0x42, 0x13, 0x4a, 0x71, 0xba, 0x1f, 0xe1,
-  0xc1, 0xb5, 0x5e, 0xf7, 0x38, 0xf8, 0xa6, 0xed, 0x43, 0xb4, 0x4b, 0x8e,
-  0x0d, 0xa3, 0x10, 0x38, 0x91, 0x7c, 0x40, 0x2b, 0x7e, 0x9f, 0x17, 0x1a,
-  0xa4, 0x35, 0x49, 0xc0, 0xf5, 0xf9, 0x8c, 0xe6, 0xf0, 0x2a, 0xb1, 0x8d,
-  0x9b, 0x03, 0xe3, 0xda, 0x21, 0x3b, 0x6c, 0xb3, 0x46, 0xb8, 0x01, 0xec,
-  0x1b, 0x16, 0xd8, 0xd3, 0x0e, 0xe5, 0x51, 0x3b, 0x15, 0xf2, 0x48, 0x68,
-  0xae, 0x2b, 0x0d, 0xee, 0xed, 0x76, 0xd8, 0x21, 0x52, 0x57, 0xf2, 0x79,
-  0x65, 0x29, 0x8d, 0x28, 0x78, 0x88, 0x81, 0xa3, 0xc9, 0xfc, 0xf1, 0x8f,
-  0xf8, 0xdf, 0xf1, 0xaa, 0x8f, 0x16, 0x64, 0xe3, 0x8b, 0x65, 0xb2, 0xaa,
-  0x4c, 0xf0, 0x9f, 0xb0, 0x51, 0x04, 0x62, 0x50, 0x3e, 0xa5, 0x73, 0x52,
-  0x20, 0xb7, 0xb1, 0xa5, 0xa9, 0xd1, 0x29, 0x82, 0xc5, 0x4a, 0xbc, 0xd2,
-  0xd3, 0xa4, 0xbe, 0xe7, 0x88, 0xcc, 0x1f, 0x26, 0xcb, 0xa2, 0xea, 0x88,
-  0x13, 0x97, 0x50, 0x57, 0x9f, 0x7a, 0x22, 0x4f, 0x8b, 0x2b, 0xd4, 0x87,
-  0xa3, 0x1f, 0x9f, 0x5f, 0x5c, 0x62, 0xa2, 0xa7, 0xfc, 0x8b, 0x1a, 0x6f,
-  0x9b, 0xe3, 0x80, 0xd1, 0x41, 0x63, 0x51, 0x39, 0x02, 0x2c, 0x81, 0xdd,
-  0xcb, 0xe5, 0x43, 0x8d, 0x82, 0xa4, 0x2a, 0x97, 0xee, 0x13, 0xcf, 0xef,
-  0x39, 0x69, 0x06, 0x12, 0x5d, 0x6b, 0x6d, 0x25, 0xf1, 0xca, 0xc2, 0x11,
-  0x78, 0x0c, 0x03, 0xb9, 0x33, 0x31, 0x0a, 0xb1, 0x58, 0x9b, 0x5d, 0xea,
-  0x8c, 0xbf, 0x64, 0x17, 0x85, 0x8a, 0xd6, 0x6b, 0x5c, 0xb5, 0x03, 0xc9,
-  0x27, 0x98, 0xcf, 0xd1, 0x24, 0xbf, 0x15, 0x15, 0x48, 0xd3, 0x8b, 0x69,
-  0x1c, 0x23, 0x3f, 0x4f, 0xe9, 0x42, 0x2c, 0x51, 0x44, 0x7b, 0x41, 0x4e,
-  0xb6, 0x29, 0xa0, 0x12, 0xdc, 0xcf, 0x7a, 0x98, 0x88, 0xad, 0xd4, 0x0c,
-  0xb2, 0x7c, 0x30, 0x69, 0x97, 0xb8, 0x27, 0xfe, 0x65, 0xd6, 0xe1, 0xf9,
-  0x06, 0x44, 0x00, 0x2d, 0xa7, 0x50, 0xb4, 0x0c, 0x28, 0x1a, 0xb1, 0x6e,
-  0x5e, 0x96, 0xe4, 0x41, 0x93, 0x2f, 0x44, 0x69, 0xbf, 0x52, 0x0b, 0x6e,
-  0x3c, 0x4f, 0xab, 0x07, 0x11, 0xf6, 0x27, 0xa2, 0x38, 0xa8, 0x09, 0xa8,
-  0x2b, 0x62, 0x94, 0x16, 0x7e, 0x96, 0xca, 0x5b, 0x32, 0x51, 0xdd, 0xb6,
-  0x16, 0x39, 0x8e, 0x83, 0x34, 0x26, 0x49, 0x68, 0x60, 0x82, 0x67, 0x7a,
-  0x31, 0x41, 0x6e, 0xa5, 0x62, 0x1c, 0x71, 0x9b, 0x79, 0x3a, 0x4d, 0x59,
-  0x5b, 0xd2, 0xe1, 0xf1, 0x82, 0x35, 0xf7, 0x8d, 0xf3, 0x42, 0xf4, 0x54,
-  0x64, 0xb9, 0xb4, 0xc3, 0x3c, 0x83, 0xa7, 0x9d, 0xc6, 0x92, 0x32, 0x57,
-  0x27, 0xcb, 0xd6, 0x88, 0x8e, 0xf0, 0x25, 0xef, 0x2b, 0x36, 0x04, 0x7e,
-  0xa6, 0xe9, 0x0d, 0x32, 0x4c, 0xc5, 0xbd, 0x2f, 0xe4, 0x35, 0x49, 0x6e,
-  0xe2, 0xbb, 0x34, 0x2f, 0x46, 0xb5, 0x54, 0xa3, 0xb6, 0xe5, 0xb0, 0x24,
-  0x9a, 0x98, 0xde, 0xc8, 0x66, 0xf1, 0x21, 0xe7, 0x77, 0x35, 0x78, 0x09,
-  0xda, 0x99, 0x26, 0x1a, 0x61, 0x8b, 0x60, 0x6a, 0x39, 0xdf, 0x16, 0xfb,
-  0x2c, 0xdc, 0x67, 0xad, 0x38, 0x3d, 0x84, 0x5a, 0xb9, 0xbc, 0x14, 0x7d,
-  0x32, 0x2e, 0xef, 0xba, 0x4f, 0x5d, 0x79, 0xf7, 0xcb, 0x4f, 0x1d, 0x02,
-  0xa6, 0x41, 0x56, 0xc7, 0xe7, 0xe3, 0xef, 0x22, 0xe7, 0x2d, 0xe9, 0x8a,
-  0xe6, 0x95, 0x03, 0xe7, 0xe7, 0x05, 0xf2, 0x0b, 0x0e, 0xdd, 0xbf, 0x78,
-  0xea, 0xdc, 0xa1, 0xa3, 0xfe, 0xf5, 0xa4, 0x9d, 0x1f, 0x8c, 0xbf, 0x6b,
-  0x9c, 0x31, 0xef, 0x46, 0xb0, 0x24, 0x8e, 0xa6, 0x3c, 0xc0, 0x49, 0x54,
-  0x85, 0x05, 0xa5, 0x71, 0x6b, 0x1f, 0x4d, 0x7e, 0xe5, 0xdd, 0xaf, 0x43,
-  0x7e, 0xd4, 0xce, 0x63, 0xe4, 0x17, 0xee, 0x5b, 0x07, 0xf9, 0xd1, 0xf4,
-  0x5b, 0xe4, 0x67, 0x6b, 0xdd, 0x4d, 0x7f, 0xeb, 0xc8, 0xaf, 0xca, 0x8d,
-  0x6e, 0x41, 0x7a, 0x41, 0x86, 0x5b, 0x9b, 0xe8, 0x02, 0x52, 0x6a, 0xc4,
-  0x35, 0x76, 0x5b, 0xee, 0xbf, 0x47, 0xfc, 0x80, 0x26, 0xf9, 0x49, 0x06,
-  0x72, 0x10, 0x28, 0x59, 0x4f, 0xfc, 0x46, 0xd8, 0xe6, 0x46, 0x67, 0xe8,
-  0x7e, 0xe0, 0x64, 0x95, 0xb0, 0x5a, 0x97, 0xc1, 0x4b, 0x4c, 0x37, 0x98,
-  0xa0, 0x46, 0x7c, 0x72, 0xbb, 0xda, 0xcd, 0x46, 0x87, 0x9c, 0x12, 0x6b,
-  0xa4, 0x77, 0x8a, 0x98, 0x00, 0xb6, 0x82, 0xd3, 0x9b, 0xd4, 0xca, 0x48,
-  0xe3, 0xaf, 0xcb, 0x50, 0xce, 0xb3, 0xe1, 0x4a, 0x24, 0x68, 0x9b, 0x9d,
-  0x65, 0xe2, 0x01, 0x10, 0x1b, 0x19, 0x82, 0x59, 0x62, 0x8b, 0x67, 0x71,
-  0x60, 0x13, 0x99, 0xf3, 0x37, 0x00, 0x6b, 0xc2, 0x47, 0x08, 0x34, 0xad,
-  0xc2, 0x41, 0x38, 0xac, 0x4c, 0xf9, 0x77, 0x10, 0xf2, 0xd6, 0x84, 0xa8,
-  0xf2, 0x6a, 0x48, 0xd6, 0x99, 0xf0, 0xdd, 0x76, 0x9c, 0x82, 0xf2, 0xe1,
-  0x46, 0x24, 0x6c, 0x6b, 0x91, 0xe1, 0x98, 0x73, 0xb9, 0x11, 0x16, 0xda,
-  0x99, 0x84, 0x7e, 0x51, 0x17, 0xd2, 0x24, 0x46, 0x98, 0xb8, 0x08, 0x9d,
-  0x1e, 0x2d, 0x87, 0x08, 0xcf, 0xaf, 0xa7, 0x2b, 0xd7, 0xd3, 0xe8, 0xa3,
-  0x95, 0xbc, 0xc5, 0x51, 0xb4, 0x30, 0x26, 0x16, 0xc9, 0x6f, 0xe8, 0x85,
-  0x4c, 0x68, 0xc1, 0x90, 0xa7, 0xc8, 0x84, 0x49, 0xc2, 0xe7, 0xba, 0xb4,
-  0x29, 0xd9, 0x7d, 0x0e, 0x06, 0xbf, 0xd0, 0xa7, 0xcf, 0xe3, 0xeb, 0x84,
-  0x93, 0x19, 0xc5, 0x99, 0xe4, 0xa3, 0x8e, 0x34, 0x1f, 0xbe, 0x3b, 0x6d,
-  0xea, 0xd2, 0xe2, 0x60, 0x3b, 0xd3, 0x8e, 0x6a, 0x89, 0x46, 0x48, 0x16,
-  0xf3, 0x69, 0x46, 0xb2, 0xf8, 0xed, 0xd0, 0x64, 0x0b, 0x90, 0xae, 0xc5,
-  0x80, 0x3b, 0xe4, 0x03, 0x31, 0x2e, 0xf5, 0xfe, 0xcc, 0xce, 0xe5, 0x9e,
-  0x0d, 0x30, 0x72, 0x53, 0x6e, 0x5b, 0x4b, 0xf9, 0x19, 0xaf, 0x95, 0xd6,
-  0x7d, 0xd2, 0x3c, 0x54, 0x39, 0xa1, 0x1a, 0x2f, 0xc0, 0xcf, 0xe3, 0x64,
-  0x11, 0xef, 0x24, 0x41, 0xaf, 0x49, 0x56, 0x24, 0xf8, 0xb1, 0xa4, 0x7d,
-  0xaa, 0xa3, 0xda, 0xd7, 0x23, 0x22, 0xfa, 0x88, 0x8d, 0x49, 0x53, 0xb5,
-  0x94, 0x51, 0x5a, 0x48, 0xf7, 0x9c, 0x71, 0x42, 0x9a, 0xce, 0x06, 0xd6,
-  0xa3, 0x5c, 0xe2, 0x0a, 0x5b, 0x2f, 0x78, 0x40, 0x31, 0xeb, 0x3a, 0x29,
-  0x80, 0x22, 0xdc, 0xb4, 0x7e, 0x4b, 0xaf, 0x75, 0x92, 0x5d, 0x73, 0x32,
-  0xe3, 0x8b, 0xce, 0x58, 0xa9, 0x64, 0xee, 0xd3, 0x7b, 0x2d, 0xa2, 0x72,
-  0x5a, 0x3c, 0x2c, 0x99, 0xf5, 0xcb, 0x7b, 0xca, 0x8f, 0x98, 0x87, 0x4b,
-  0xdc, 0x64, 0x90, 0x0d, 0x3e, 0xea, 0x08, 0x16, 0x70, 0x1d, 0x4a, 0x48,
-  0x29, 0x04, 0x00, 0x5a, 0xb0, 0x0a, 0xdc, 0x43, 0x3e, 0xe3, 0xab, 0x76,
-  0xb2, 0x4a, 0xe7, 0x33, 0x09, 0x1d, 0xf3, 0xa0, 0x21, 0x2d, 0x67, 0x0d,
-  0x37, 0x54, 0x8e, 0xea, 0xc9, 0x42, 0x48, 0xf6, 0x45, 0x88, 0xd4, 0x26,
-  0xc7, 0xe9, 0x66, 0x34, 0xf7, 0x2d, 0x13, 0x9a, 0xf5, 0x0d, 0x4d, 0x54,
-  0x68, 0x5e, 0x53, 0x77, 0x71, 0x3a, 0xc7, 0x1d, 0x46, 0xcd, 0x14, 0xab,
-  0x0c, 0xbd, 0xd7, 0x57, 0xea, 0x2e, 0x2d, 0xf2, 0x6c, 0xd1, 0xb6, 0x83,
-  0x6c, 0x5e, 0x9c, 0x8c, 0x0f, 0xa3, 0xb3, 0x71, 0x74, 0xf6, 0xe6, 0xf4,
-  0x47, 0x3e, 0x5c, 0x88, 0x38, 0x06, 0x00, 0x07, 0x77, 0x1d, 0xbc, 0x18,
-  0xdd, 0xc5, 0x45, 0x0a, 0xb5, 0x6e, 0xb0, 0x9e, 0x1b, 0x0a, 0x24, 0x04,
-  0xce, 0xcf, 0xbd, 0x6d, 0xb1, 0x0f, 0x8f, 0xe4, 0x5b, 0x0b, 0x31, 0x82,
-  0x49, 0x5c, 0xa6, 0x49, 0x21, 0xf6, 0xf0, 0xa9, 0x25, 0xf1, 0xad, 0xda,
-  0x39, 0x65, 0x6c, 0x33, 0x0b, 0x8f, 0xb5, 0x04, 0xb2, 0xf1, 0x45, 0x49,
-  0xdd, 0xd3, 0x44, 0x1b, 0x91, 0x1d, 0x34, 0xd1, 0x6b, 0xd1, 0x7f, 0xd7,
-  0xf8, 0xa4, 0x83, 0x48, 0xe5, 0x07, 0xbd, 0x7d, 0xd9, 0x34, 0x0f, 0x75,
-  0xdc, 0x49, 0xdf, 0xc7, 0x59, 0x55, 0xe4, 0x4b, 0xe2, 0xf9, 0x5f, 0xc7,
-  0xcc, 0xf2, 0x30, 0xd3, 0xa3, 0x38, 0x59, 0xb4, 0xa2, 0x0f, 0xca, 0x7c,
-  0x7a, 0x9b, 0x54, 0xea, 0x11, 0xd1, 0xbf, 0x82, 0x94, 0x35, 0xe8, 0x85,
-  0xc2, 0x37, 0x79, 0x41, 0x67, 0x74, 0x3d, 0x29, 0x01, 0x31, 0xc9, 0xd1,
-  0x50, 0xda, 0xe6, 0x49, 0x83, 0x82, 0xa8, 0x87, 0x27, 0xf2, 0x69, 0xc2,
-  0xfb, 0x32, 0xb5, 0x66, 0x40, 0xe2, 0xf0, 0x98, 0x6f, 0x1a, 0xf6, 0xe4,
-  0xbf, 0x08, 0xfc, 0xdf, 0x3f, 0xed, 0x9b, 0x0a, 0xfa, 0x73, 0xf7, 0x32,
-  0xb4, 0x43, 0xe4, 0xeb, 0x57, 0x7b, 0xd0, 0x96, 0x06, 0xcd, 0x31, 0x7b,
-  0xb9, 0xee, 0xb8, 0xb2, 0x2c, 0x13, 0x4f, 0x43, 0xeb, 0x68, 0x45, 0xe1,
-  0xfb, 0x8f, 0x24, 0xe3, 0x60, 0x2c, 0x4c, 0x26, 0x6c, 0xce, 0x12, 0xcf,
-  0xe8, 0xde, 0x3a, 0x3f, 0x7e, 0xfd, 0x48, 0x68, 0x1d, 0x4c, 0x93, 0x4b,
-  0xd5, 0x3b, 0x9c, 0xd6, 0x2f, 0xe9, 0xab, 0x6e, 0xa4, 0x8d, 0xac, 0xdf,
-  0x46, 0x73, 0x7f, 0x5b, 0x31, 0x44, 0xd1, 0x4c, 0x53, 0x0b, 0x72, 0xcb,
-  0x5d, 0x75, 0xa9, 0xf2, 0xcd, 0xc4, 0x60, 0x4b, 0x4c, 0x07, 0x6c, 0x49,
-  0xd9, 0x72, 0x9b, 0xf4, 0x82, 0x79, 0xf4, 0x34, 0x4a, 0x4b, 0xe3, 0xd8,
-  0x84, 0x1f, 0x23, 0x59, 0x29, 0xba, 0x4d, 0x1e, 0x5c, 0x00, 0xaf, 0x7d,
-  0xc6, 0x4b, 0xd0, 0x5e, 0x3b, 0x5d, 0x12, 0x24, 0x8b, 0xd3, 0x2f, 0x19,
-  0x2b, 0xfb, 0xbf, 0x8b, 0xb0, 0xff, 0x91, 0x6e, 0xab, 0x28, 0x91, 0xc3,
-  0x21, 0x37, 0x5a, 0x79, 0xf8, 0x1c, 0x4e, 0x35, 0x6f, 0xa5, 0xdb, 0x38,
-  0x70, 0xaa, 0xf9, 0x43, 0x17, 0xeb, 0x15, 0x14, 0x8d, 0x12, 0x4c, 0x4a,
-  0xb3, 0xee, 0xcb, 0xca, 0x02, 0xc5, 0x11, 0x45, 0x3f, 0x4f, 0x27, 0x05,
-  0x42, 0x73, 0x44, 0x4e, 0x0a, 0x03, 0xe6, 0x5a, 0xa2, 0x8a, 0x27, 0x20,
-  0xb6, 0x22, 0xa5, 0xd3, 0x5b, 0x9c, 0x24, 0xe5, 0x58, 0xe1, 0x86, 0x9b,
-  0xe8, 0x27, 0xe0, 0x54, 0xda, 0x5d, 0x53, 0xf7, 0x88, 0xab, 0x98, 0x81,
-  0x69, 0x38, 0xe9, 0x22, 0xcd, 0x24, 0x70, 0x4b, 0x22, 0xd7, 0x02, 0x1e,
-  0xe4, 0x98, 0x10, 0x42, 0xfe, 0xdf, 0x1d, 0x9d, 0x5c, 0x28, 0xb3, 0x9c,
-  0x3c, 0xac, 0x49, 0xdd, 0x88, 0xb6, 0x93, 0x6a, 0xba, 0xbd, 0xbc, 0x4d,
-  0xb7, 0xb3, 0xb2, 0x9c, 0x4d, 0xb6, 0xc2, 0x84, 0x72, 0x9e, 0x33, 0x07,
-  0xa1, 0x9c, 0x7f, 0x7b, 0x38, 0xfe, 0x64, 0x77, 0x97, 0x65, 0xe9, 0x15,
-  0x35, 0xbd, 0x49, 0x6b, 0xd0, 0xca, 0x94, 0x2b, 0x69, 0xd9, 0x17, 0xa3,
-  0x32, 0xdf, 0x82, 0x02, 0xe0, 0x18, 0x2e, 0x56, 0x09, 0x81, 0x2c, 0x70,
-  0x64, 0x6a, 0x1e, 0x19, 0xdb, 0x1f, 0x7f, 0xcb, 0x78, 0x12, 0x21, 0x0c,
-  0x44, 0x3b, 0x44, 0x2f, 0xf8, 0xdf, 0x0f, 0x1e, 0x71, 0x80, 0xd3, 0xd4,
-  0xb6, 0x84, 0xdf, 0x55, 0x21, 0x9f, 0x43, 0x73, 0x66, 0x51, 0xf8, 0x75,
-  0x93, 0xae, 0xd8, 0x4c, 0x36, 0xe2, 0x79, 0x0e, 0xa2, 0xa3, 0xe3, 0x0b,
-  0x10, 0xe4, 0xf1, 0x9b, 0xaf, 0x21, 0x1c, 0x72, 0xae, 0xdd, 0x75, 0x96,
-  0xfe, 0x9d, 0x39, 0x1d, 0xb5, 0x59, 0xca, 0x02, 0xf3, 0x5d, 0xe6, 0x4f,
-  0x68, 0xa3, 0x39, 0x5e, 0x2f, 0x5e, 0x45, 0x9c, 0xb1, 0xdf, 0x76, 0x99,
-  0x62, 0x61, 0x8c, 0x87, 0x07, 0xe1, 0xec, 0x7e, 0x25, 0x86, 0xc8, 0xa8,
-  0x42, 0xc4, 0x5c, 0xae, 0x1e, 0xba, 0x1c, 0xe7, 0x1c, 0x8f, 0x64, 0x57,
-  0x83, 0x44, 0x45, 0x32, 0x6d, 0xa8, 0x93, 0xc7, 0x43, 0xf1, 0xd4, 0x07,
-  0x86, 0x64, 0xf8, 0x56, 0x6c, 0xae, 0xff, 0x7e, 0xb3, 0xdc, 0x6a, 0x30,
-  0x4f, 0xc7, 0x2e, 0xdf, 0x98, 0x3e, 0x5e, 0x3f, 0xe2, 0x6d, 0x0d, 0x92,
-  0x27, 0x16, 0xbb, 0xe3, 0x61, 0xb9, 0x80, 0x58, 0xf1, 0x81, 0x38, 0xa8,
-  0x6a, 0x4b, 0x4f, 0x7b, 0xaa, 0x32, 0xa7, 0x5e, 0x6a, 0xad, 0xb4, 0xb1,
-  0x0a, 0x36, 0x57, 0xb6, 0x88, 0x07, 0x6d, 0xb6, 0x36, 0x15, 0xc3, 0x72,
-  0xb4, 0x52, 0xaa, 0x50, 0xd3, 0x96, 0x2e, 0xd4, 0x97, 0x1f, 0xf5, 0x0f,
-  0x49, 0xa4, 0x7d, 0x77, 0x78, 0xf0, 0xee, 0xab, 0xb7, 0x6f, 0x8e, 0x4e,
-  0x8f, 0xfb, 0x4d, 0x8a, 0xbc, 0x12, 0xae, 0x8f, 0x1c, 0xdf, 0xa4, 0x1a,
-  0xb8, 0xec, 0xf8, 0x30, 0xca, 0x12, 0xb7, 0x3b, 0x92, 0x5f, 0xf1, 0x1b,
-  0xc2, 0xb1, 0x75, 0xc1, 0x9b, 0xea, 0xcf, 0x2a, 0x9b, 0x21, 0x01, 0x31,
-  0x98, 0xbc, 0xe5, 0x9c, 0xa8, 0x9b, 0xcd, 0x06, 0xd8, 0xa1, 0xee, 0x32,
-  0xfd, 0xd1, 0xfd, 0x4c, 0x22, 0x76, 0x80, 0x04, 0x12, 0x40, 0x60, 0xd5,
-  0x44, 0x77, 0x44, 0x8e, 0x18, 0x66, 0x61, 0x44, 0xe3, 0xe9, 0xd8, 0xee,
-  0xb2, 0x16, 0xd6, 0xc0, 0x2d, 0x11, 0x25, 0x0f, 0x75, 0x90, 0xd3, 0xa2,
-  0xea, 0x0f, 0xa2, 0x24, 0x85, 0xcb, 0x2e, 0x0c, 0xe1, 0x9a, 0x75, 0xa6,
-  0xe1, 0x70, 0x58, 0x65, 0x2c, 0x74, 0x3d, 0x4a, 0xde, 0x27, 0x88, 0x02,
-  0xd1, 0xb7, 0x0e, 0x61, 0x04, 0xae, 0xa2, 0xef, 0xf3, 0x02, 0xe9, 0xfd,
-  0x47, 0x16, 0x87, 0x69, 0x0f, 0xc5, 0xd9, 0x43, 0xdb, 0xc3, 0xcb, 0x1a,
-  0x11, 0x6b, 0x05, 0xd7, 0x82, 0xd7, 0x78, 0x7e, 0x70, 0xf9, 0x4d, 0x67,
-  0xb0, 0x82, 0x47, 0x6d, 0xfc, 0xf0, 0x6d, 0x03, 0x36, 0x5a, 0xad, 0x8d,
-  0xf3, 0xfc, 0xc0, 0x55, 0x53, 0x3f, 0x44, 0x8d, 0xdb, 0xa6, 0x43, 0x4a,
-  0xe5, 0xde, 0xd7, 0xde, 0x37, 0x9d, 0x44, 0x69, 0x97, 0x0d, 0xdf, 0x35,
-  0x6b, 0xaf, 0x9a, 0xce, 0x9b, 0xc6, 0x66, 0xcb, 0x67, 0xd5, 0x5d, 0x34,
-  0x76, 0xd3, 0xfc, 0xef, 0x71, 0xd5, 0xc4, 0x38, 0x3d, 0x0d, 0x1e, 0xea,
-  0x83, 0x76, 0xbb, 0xb9, 0xa9, 0xb2, 0xd3, 0x8f, 0xe4, 0xa7, 0x3e, 0x02,
-  0xb8, 0xc5, 0x60, 0x84, 0xc5, 0xca, 0x55, 0x95, 0x98, 0xca, 0x5a, 0x0b,
-  0xf4, 0xec, 0xe4, 0x88, 0x03, 0x93, 0xbf, 0x9a, 0x9b, 0xe5, 0x7a, 0x92,
-  0xf7, 0x58, 0x9b, 0x40, 0xc8, 0x3a, 0xf3, 0x8b, 0x22, 0x9f, 0x4a, 0xb2,
-  0x56, 0x10, 0x59, 0xf8, 0xae, 0x48, 0x6e, 0xe2, 0xf2, 0x26, 0x5a, 0x55,
-  0x29, 0x5b, 0xcc, 0x9b, 0x3a, 0xc0, 0x8a, 0xc3, 0x0b, 0x4d, 0xf5, 0xb7,
-  0x94, 0x40, 0x4d, 0x6d, 0x77, 0x6b, 0x07, 0x64, 0x46, 0x51, 0x7d, 0x82,
-  0x98, 0x2b, 0x56, 0xee, 0x9b, 0x6a, 0xeb, 0xf8, 0x74, 0x18, 0x42, 0xc2,
-  0x2d, 0x38, 0x97, 0x13, 0x66, 0xfb, 0xe4, 0x8a, 0xa6, 0x9b, 0x06, 0x69,
-  0x82, 0x2b, 0xd7, 0x05, 0xae, 0xb8, 0xf4, 0xaa, 0xcb, 0x38, 0x65, 0xdf,
-  0x82, 0x9d, 0xe8, 0xe5, 0x53, 0x0a, 0x68, 0x5c, 0xf3, 0xe6, 0xf9, 0xed,
-  0x28, 0xe8, 0x8a, 0x8d, 0x91, 0x44, 0xc5, 0xdd, 0xf6, 0x9c, 0x57, 0x9c,
-  0x65, 0x52, 0xb2, 0x97, 0x97, 0xa7, 0xb6, 0xc9, 0x28, 0x49, 0x82, 0xc1,
-  0xc5, 0x56, 0xbf, 0xf9, 0x7c, 0x8b, 0x65, 0x76, 0xcb, 0x81, 0x43, 0xea,
-  0x49, 0xa9, 0xf9, 0x62, 0x6d, 0x19, 0xc5, 0x70, 0x9b, 0x10, 0xf1, 0x05,
-  0x27, 0x26, 0xfc, 0x1a, 0x6a, 0xdf, 0x05, 0x22, 0x2b, 0xb1, 0x56, 0x3a,
-  0xa5, 0xc1, 0x97, 0xb3, 0x44, 0xf1, 0xfb, 0x9a, 0x8c, 0x4e, 0x90, 0x5c,
-  0xd5, 0x84, 0x4d, 0x7d, 0x9e, 0x64, 0xe6, 0x10, 0x94, 0x30, 0x09, 0xa8,
-  0x43, 0x71, 0x54, 0xb3, 0x31, 0xc9, 0x6b, 0x65, 0xc7, 0xad, 0x3b, 0x4b,
-  0xe6, 0x29, 0x1e, 0x60, 0x98, 0x58, 0xcd, 0x04, 0x54, 0xc5, 0x45, 0x12,
-  0x06, 0xd5, 0x09, 0x8c, 0xe8, 0x59, 0x7b, 0x80, 0x43, 0xbd, 0xa0, 0x5d,
-  0x95, 0xcd, 0xe6, 0x36, 0x25, 0x01, 0x0c, 0xf8, 0x8d, 0xa2, 0x27, 0x5a,
-  0xb4, 0x12, 0x0f, 0xec, 0xc1, 0x41, 0xf2, 0x6e, 0xe9, 0x95, 0x06, 0x0b,
-  0x96, 0xaa, 0x48, 0xcb, 0xa2, 0xa5, 0x67, 0xb3, 0x6b, 0x55, 0x08, 0x53,
-  0x40, 0x95, 0xb1, 0x01, 0x95, 0x1c, 0x81, 0xb8, 0x0a, 0xd3, 0x1a, 0x25,
-  0xf9, 0x67, 0x6f, 0x6f, 0x8d, 0xd1, 0x57, 0x73, 0x90, 0x35, 0x48, 0x83,
-  0x17, 0x63, 0x58, 0xc6, 0x57, 0x89, 0x9d, 0x45, 0xa2, 0x63, 0x16, 0x19,
-  0xf3, 0x29, 0x2d, 0xa1, 0x44, 0x38, 0xe1, 0xb3, 0x2c, 0x6f, 0xbb, 0xc4,
-  0x56, 0x53, 0x3e, 0x8a, 0x6c, 0x00, 0x70, 0x66, 0x4c, 0x76, 0x45, 0x9b,
-  0xb7, 0xbf, 0x9c, 0xa7, 0x4b, 0x66, 0xed, 0x45, 0xbe, 0xba, 0xbe, 0xe1,
-  0xc0, 0x33, 0xf0, 0x15, 0xb9, 0x60, 0x3b, 0x1c, 0x1b, 0x8d, 0x54, 0x69,
-  0xc8, 0xb3, 0x77, 0xf9, 0x9c, 0xcd, 0x9a, 0x9b, 0x8d, 0xf6, 0x9f, 0xee,
-  0xec, 0x62, 0xb8, 0x4f, 0x77, 0x3e, 0xab, 0x45, 0xbb, 0xb3, 0x39, 0x3d,
-  0x9e, 0x22, 0x17, 0x26, 0xfa, 0x89, 0x2f, 0x8f, 0x9f, 0x3b, 0x7d, 0x31,
-  0xb0, 0xcb, 0xc6, 0x59, 0x68, 0x87, 0x8d, 0xcb, 0x5b, 0x71, 0x15, 0xf4,
-  0xec, 0x7d, 0x7e, 0xbd, 0xa7, 0xd6, 0x0c, 0xe7, 0x37, 0xee, 0x40, 0xfb,
-  0x71, 0x2a, 0x2f, 0xe7, 0x36, 0x1a, 0x8b, 0x82, 0xb4, 0x3e, 0x08, 0xb0,
-  0x01, 0x01, 0x3e, 0x00, 0x8c, 0xc2, 0xab, 0xf5, 0x96, 0x99, 0x83, 0xc3,
-  0x43, 0xef, 0xb5, 0xab, 0xc7, 0x85, 0x3d, 0xe1, 0xb8, 0xb0, 0x75, 0xc9,
-  0x52, 0x8d, 0xe3, 0x0f, 0x70, 0x99, 0x81, 0x06, 0x61, 0xc3, 0x60, 0x5e,
-  0xcb, 0xcf, 0x35, 0xa3, 0x64, 0x8b, 0xc0, 0x60, 0xa4, 0x5c, 0x95, 0x49,
-  0x73, 0x45, 0xd7, 0x67, 0x9e, 0x34, 0x81, 0xc7, 0x74, 0x4d, 0x35, 0xf5,
-  0x81, 0x0d, 0x9e, 0xdb, 0x3e, 0x61, 0x0d, 0x82, 0x1f, 0x22, 0x75, 0x63,
-  0x71, 0xdf, 0xb7, 0x22, 0x8b, 0x1c, 0x52, 0x98, 0x78, 0xbe, 0xe1, 0xf7,
-  0x79, 0x8f, 0xd4, 0xe9, 0x2c, 0x08, 0x29, 0xd7, 0x99, 0x55, 0xb4, 0x48,
-  0x71, 0x31, 0x73, 0x4e, 0x99, 0x36, 0x5c, 0x87, 0x49, 0xd9, 0x9c, 0xa7,
-  0xc3, 0x90, 0x36, 0x21, 0x98, 0x89, 0xf9, 0xb1, 0xbc, 0x04, 0x68, 0x81,
-  0xdd, 0x6d, 0xbc, 0xd7, 0x5a, 0xb6, 0x46, 0xb4, 0x48, 0x25, 0x0c, 0x34,
-  0x48, 0xfd, 0x68, 0x2e, 0x98, 0x9e, 0xb0, 0x9f, 0xe4, 0x67, 0x37, 0x0d,
-  0x22, 0xb1, 0xac, 0xc8, 0x39, 0x15, 0x07, 0x69, 0x12, 0xf2, 0x8a, 0xe4,
-  0x2a, 0x4b, 0x2c, 0x9f, 0x07, 0x7c, 0x61, 0xac, 0x00, 0xb9, 0x1e, 0xd8,
-  0xea, 0xd1, 0x4e, 0xb2, 0xda, 0x1c, 0x6f, 0x99, 0x01, 0x1d, 0x37, 0xaf,
-  0x36, 0x16, 0x17, 0xd7, 0xca, 0xa2, 0x5c, 0x84, 0x69, 0x10, 0x4e, 0xa6,
-  0xb1, 0x06, 0xc3, 0x96, 0x79, 0xe2, 0x5a, 0xf4, 0x05, 0x8e, 0xb5, 0xb8,
-  0xeb, 0x88, 0xd0, 0x83, 0x5a, 0x34, 0xbd, 0x9f, 0x75, 0x07, 0xac, 0xc8,
-  0xcd, 0x29, 0x49, 0x09, 0xb1, 0xc3, 0x12, 0x3b, 0xfc, 0xfe, 0x28, 0xc8,
-  0x5c, 0xe4, 0x63, 0x86, 0x49, 0x81, 0x10, 0x24, 0xe2, 0x2a, 0x5b, 0x17,
-  0xff, 0x62, 0x7a, 0x02, 0xb0, 0x63, 0x5f, 0x01, 0x0a, 0x3c, 0x59, 0xba,
-  0x1c, 0x24, 0x40, 0xc4, 0x08, 0x38, 0x0d, 0xe3, 0xc0, 0x02, 0xf0, 0x15,
-  0x57, 0xe7, 0x9a, 0xd1, 0x69, 0x20, 0xc3, 0x28, 0xc4, 0xae, 0x42, 0xae,
-  0xd8, 0xc5, 0xab, 0xc3, 0xdd, 0xcf, 0x9e, 0x7c, 0x4e, 0x42, 0xfa, 0x03,
-  0xd2, 0x86, 0xfc, 0x92, 0x49, 0x80, 0xeb, 0xfa, 0xc8, 0x26, 0xb5, 0x2a,
-  0x99, 0x80, 0xa9, 0xfe, 0x7c, 0x62, 0x7e, 0xf9, 0x7d, 0x02, 0x99, 0x47,
-  0x7d, 0x86, 0xad, 0xc8, 0xa9, 0x9c, 0x16, 0xd1, 0xc0, 0x44, 0x05, 0x47,
-  0x12, 0xeb, 0x24, 0x57, 0xea, 0x28, 0xa0, 0x4c, 0xc6, 0xd8, 0xe5, 0xbc,
-  0x39, 0x62, 0xa1, 0x17, 0xc7, 0x97, 0x17, 0x8c, 0x7a, 0x7f, 0x79, 0x76,
-  0xb1, 0x26, 0x1c, 0x8d, 0x2e, 0x4e, 0xe6, 0x4a, 0xbc, 0x68, 0x4c, 0x34,
-  0x0c, 0x3f, 0x60, 0x8a, 0x55, 0x90, 0x95, 0xc1, 0x5b, 0x10, 0x0b, 0x3c,
-  0x71, 0xd9, 0x99, 0x0d, 0x10, 0x24, 0x05, 0x94, 0x35, 0xf4, 0x0d, 0x3a,
-  0x4a, 0x74, 0x4e, 0x1e, 0x9b, 0x98, 0xec, 0xf9, 0xe3, 0x14, 0x82, 0x09,
-  0x33, 0x31, 0xf2, 0x8c, 0x9d, 0x3f, 0x07, 0xa3, 0x55, 0xd8, 0x41, 0x2f,
-  0x03, 0xea, 0xbd, 0xb4, 0x86, 0x42, 0x84, 0xac, 0x92, 0x32, 0xb0, 0x1b,
-  0x8a, 0x2a, 0xdf, 0x33, 0xef, 0x77, 0x8f, 0x25, 0xf8, 0x5b, 0x07, 0x6f,
-  0xf1, 0x01, 0xfa, 0x25, 0xb9, 0x61, 0xcb, 0x4f, 0x98, 0x11, 0x06, 0x71,
-  0x3e, 0x45, 0xc0, 0x73, 0x5c, 0xa7, 0xd4, 0xd4, 0xec, 0x54, 0x02, 0x10,
-  0xda, 0x01, 0x19, 0x2e, 0xcf, 0x80, 0x77, 0xb9, 0xef, 0x9c, 0xe8, 0xb9,
-  0x52, 0x87, 0xec, 0x0b, 0x09, 0x3d, 0xf3, 0x0a, 0x09, 0x1c, 0x7d, 0x1b,
-  0x55, 0xdf, 0x91, 0x5a, 0x8d, 0xfd, 0x3f, 0x1b, 0xed, 0x6e, 0x35, 0x98,
-  0x0c, 0x47, 0x20, 0x74, 0x73, 0x16, 0x76, 0x84, 0x34, 0xe2, 0x1e, 0xc4,
-  0x7a, 0xa0, 0xc1, 0xe8, 0x74, 0x25, 0x18, 0xbe, 0xc7, 0xb9, 0x3e, 0xd5,
-  0x89, 0xac, 0x82, 0x8a, 0x07, 0x6c, 0xd5, 0x75, 0xb4, 0xad, 0x5b, 0x2e,
-  0x41, 0x01, 0xab, 0x26, 0x37, 0xad, 0xb9, 0xef, 0xdb, 0xfc, 0xd3, 0xdd,
-  0x3f, 0x41, 0x0a, 0x2d, 0x3b, 0xc1, 0x7d, 0xe0, 0x85, 0x26, 0xcf, 0xd4,
-  0x66, 0xbe, 0xfb, 0x0b, 0x2e, 0xbe, 0x47, 0x03, 0xaa, 0x7e, 0x51, 0x3c,
-  0x55, 0xf4, 0x36, 0xd3, 0xc0, 0x26, 0x0e, 0xfa, 0x33, 0xb0, 0x1d, 0xbf,
-  0xa8, 0xc4, 0x94, 0x21, 0xc6, 0xc0, 0xcc, 0xdd, 0xba, 0xc5, 0xc4, 0xf8,
-  0xc9, 0x6b, 0x24, 0x19, 0x3d, 0xab, 0x52, 0x33, 0x4c, 0xed, 0x8e, 0xd1,
-  0x16, 0x35, 0x76, 0x55, 0x50, 0xad, 0x5d, 0x3c, 0x40, 0x0b, 0x0a, 0xad,
-  0x50, 0xbd, 0xbc, 0x75, 0xd2, 0x6c, 0xf7, 0xb0, 0xc5, 0xc2, 0x01, 0x21,
-  0x0b, 0x7a, 0xd6, 0x51, 0x89, 0xde, 0x2e, 0x71, 0x0d, 0x16, 0x55, 0x22,
-  0xe1, 0xf4, 0x6d, 0xc0, 0x3c, 0x51, 0x5e, 0x11, 0xf4, 0xa1, 0x30, 0x39,
-  0xf5, 0xb8, 0x09, 0x5b, 0xe7, 0x96, 0xc4, 0xe5, 0xaf, 0x8b, 0x61, 0x95,
-  0x23, 0x0a, 0x2f, 0x7a, 0xa1, 0x9d, 0x7d, 0xd1, 0x4d, 0xa2, 0xc8, 0x5d,
-  0x0a, 0xe4, 0x3d, 0x83, 0x26, 0x07, 0xce, 0xe6, 0x58, 0xad, 0x97, 0x34,
-  0x94, 0xb1, 0x63, 0xd9, 0x22, 0xb5, 0x0f, 0x5a, 0x61, 0x54, 0x86, 0xfa,
-  0xe3, 0xe5, 0x26, 0xf3, 0xbb, 0x9b, 0x8e, 0x06, 0x59, 0x8b, 0x58, 0xe8,
-  0xe5, 0x6a, 0x41, 0x33, 0xb9, 0x4f, 0x92, 0x59, 0xbf, 0x64, 0xe3, 0x3d,
-  0xe3, 0x32, 0x36, 0x05, 0x64, 0x0e, 0xa3, 0xc1, 0x82, 0x3b, 0x65, 0x01,
-  0xe1, 0x8a, 0xf0, 0x91, 0x58, 0x80, 0x41, 0x6c, 0xd8, 0x7c, 0x81, 0x6a,
-  0xa6, 0xee, 0xb6, 0xa6, 0x23, 0x62, 0x7c, 0x72, 0x79, 0x1c, 0x1d, 0xbc,
-  0xbd, 0xfc, 0xa6, 0x17, 0x60, 0xaf, 0x06, 0x6c, 0x18, 0xd7, 0x7b, 0x45,
-  0x22, 0xc4, 0x9d, 0xd0, 0x02, 0x04, 0x4d, 0x71, 0x75, 0x75, 0xc0, 0x2d,
-  0x34, 0x2c, 0xf6, 0xa3, 0x26, 0x8b, 0x78, 0xd6, 0x64, 0x11, 0x9c, 0x1d,
-  0x0e, 0x3e, 0x31, 0x4c, 0x97, 0x1f, 0x0e, 0x4a, 0xb2, 0x68, 0x28, 0xee,
-  0xe6, 0xe4, 0x9c, 0x41, 0x6f, 0x81, 0x42, 0x1c, 0x0c, 0xb7, 0x5c, 0x5d,
-  0x73, 0x98, 0x68, 0x07, 0xd0, 0x1a, 0xc3, 0x81, 0x38, 0x19, 0x5d, 0xe3,
-  0xff, 0x69, 0x95, 0x99, 0x98, 0x1c, 0xd9, 0x41, 0x19, 0x43, 0x67, 0xba,
-  0x33, 0xa5, 0x4f, 0x5f, 0x5a, 0xeb, 0x66, 0x63, 0x03, 0x8d, 0xa1, 0x4a,
-  0x86, 0x99, 0xcb, 0x0a, 0xcd, 0xee, 0x0d, 0x6b, 0xc1, 0x88, 0x5b, 0x98,
-  0x4e, 0x96, 0xef, 0x04, 0x09, 0xd4, 0x58, 0xe1, 0x54, 0xe5, 0xaf, 0xb0,
-  0xaf, 0xda, 0x82, 0x3e, 0x1d, 0xed, 0x6d, 0x75, 0x6a, 0x50, 0xca, 0x75,
-  0x58, 0xde, 0x27, 0xae, 0x41, 0x4a, 0x3f, 0x1f, 0x5f, 0xd2, 0xed, 0x25,
-  0x26, 0x51, 0x22, 0xd8, 0x0a, 0x39, 0x72, 0xc6, 0x99, 0xec, 0xe4, 0xb7,
-  0x71, 0x94, 0x78, 0x89, 0x9a, 0x07, 0xaa, 0x2c, 0xe7, 0xdd, 0xc7, 0xe6,
-  0x12, 0x4e, 0x1f, 0x31, 0xd4, 0x8c, 0xc7, 0xa7, 0xdb, 0x97, 0xa7, 0x63,
-  0x37, 0x1f, 0x16, 0xb8, 0x6b, 0xeb, 0x76, 0xc1, 0xdc, 0xb0, 0x12, 0xe4,
-  0xb4, 0x96, 0xec, 0x91, 0x0d, 0x15, 0x98, 0x34, 0x80, 0x6f, 0xd1, 0xcc,
-  0x69, 0x47, 0xfa, 0x4e, 0x1c, 0x57, 0xef, 0x70, 0x64, 0x7d, 0xb6, 0xd0,
-  0x6d, 0x7d, 0xf8, 0xac, 0x0e, 0x7f, 0x68, 0xab, 0x2b, 0x71, 0x59, 0xf6,
-  0x69, 0x91, 0xfc, 0x6d, 0x26, 0xf5, 0x5c, 0x0c, 0x50, 0x29, 0x9a, 0x27,
-  0x77, 0xad, 0x34, 0xc9, 0x79, 0x29, 0x7e, 0x6d, 0xc4, 0x02, 0xf0, 0xc8,
-  0x14, 0x46, 0x73, 0xf6, 0xd8, 0xdd, 0xd0, 0xea, 0xbb, 0x73, 0x09, 0x2f,
-  0x14, 0x90, 0xb3, 0x6b, 0xf5, 0xa2, 0x79, 0x7e, 0x9d, 0x22, 0x45, 0x1e,
-  0x31, 0xc8, 0x5a, 0xec, 0xc2, 0x60, 0x02, 0x9a, 0xba, 0xda, 0x1c, 0xf1,
-  0x1a, 0x86, 0xef, 0xda, 0xd0, 0x5e, 0xe5, 0x86, 0xe4, 0x65, 0xd6, 0x59,
-  0x58, 0x0a, 0xb0, 0x0b, 0xd4, 0x6b, 0x7b, 0x54, 0x9d, 0xf9, 0x68, 0xfa,
-  0x40, 0xbb, 0xf7, 0x0a, 0x46, 0x0a, 0x8d, 0xeb, 0x14, 0x84, 0x89, 0xf4,
-  0xaa, 0x06, 0x36, 0x14, 0x6e, 0x4f, 0xe7, 0xa5, 0x61, 0xbb, 0xd5, 0x90,
-  0x25, 0x3e, 0xed, 0x5e, 0x35, 0xde, 0x9b, 0x6e, 0xaa, 0xb3, 0x35, 0x73,
-  0x8b, 0xb6, 0x9e, 0xe6, 0x2e, 0xc5, 0x65, 0xab, 0xf9, 0xfe, 0x6b, 0x4f,
-  0x75, 0x63, 0x2a, 0xeb, 0x09, 0xcd, 0xcb, 0x41, 0x6d, 0x9e, 0xb3, 0x86,
-  0xe7, 0x31, 0x01, 0x4c, 0xa7, 0x8f, 0x48, 0x46, 0x87, 0x87, 0x87, 0xf4,
-  0xc1, 0xa1, 0xec, 0xf1, 0xa1, 0x32, 0xa7, 0xc3, 0x1b, 0xce, 0xa1, 0x9b,
-  0x6f, 0x45, 0xe3, 0x9b, 0x15, 0xe7, 0x7f, 0xe5, 0xf7, 0x22, 0x2d, 0xea,
-  0x40, 0x9a, 0xa1, 0x3a, 0xf1, 0x03, 0xdb, 0x0c, 0x04, 0xb2, 0xa7, 0x76,
-  0x8d, 0x89, 0x02, 0x86, 0xbc, 0x3e, 0xf3, 0xb1, 0x1a, 0x9f, 0x91, 0x1e,
-  0x3a, 0x53, 0x6f, 0x57, 0x99, 0x59, 0x3d, 0xbc, 0x7d, 0x2e, 0x73, 0x94,
-  0xa3, 0xe2, 0x68, 0x2c, 0x14, 0xf7, 0xe6, 0xe0, 0x92, 0x21, 0x79, 0x2b,
-  0x8d, 0xf5, 0xeb, 0x0e, 0x24, 0x72, 0xbb, 0x03, 0xe2, 0x89, 0x03, 0x34,
-  0x37, 0x93, 0xe5, 0x20, 0x33, 0x70, 0x52, 0x9a, 0xc8, 0x10, 0x12, 0xcd,
-  0xd0, 0x29, 0x80, 0xe8, 0x8a, 0x0e, 0x9d, 0x20, 0x29, 0x89, 0x48, 0xfc,
-  0x67, 0xd9, 0xa6, 0xad, 0xdd, 0x35, 0x1b, 0x22, 0xaf, 0xff, 0x24, 0x11,
-  0x91, 0xdb, 0xda, 0xeb, 0xcf, 0xff, 0xfa, 0x36, 0x25, 0x7a, 0x7d, 0xf0,
-  0x63, 0xdc, 0x74, 0x97, 0x57, 0x6e, 0x19, 0xca, 0x47, 0x0e, 0x74, 0x44,
-  0xe2, 0x9f, 0x34, 0x7c, 0xb2, 0xa4, 0xed, 0x9e, 0x01, 0xa1, 0x48, 0xe4,
-  0x35, 0x07, 0x61, 0x7c, 0x1f, 0xb7, 0xae, 0x11, 0xa3, 0x7a, 0x7f, 0x79,
-  0xcf, 0xb8, 0xb6, 0x89, 0x58, 0xb1, 0x5d, 0xf3, 0x45, 0xb2, 0x9c, 0x3f,
-  0x38, 0x75, 0x4b, 0x9b, 0x5f, 0x77, 0x9d, 0x87, 0x5a, 0x7b, 0x18, 0x2c,
-  0x6a, 0x63, 0x2c, 0xeb, 0xad, 0xa0, 0xa3, 0x98, 0x2f, 0xdb, 0xab, 0x56,
-  0x94, 0x72, 0xac, 0x3d, 0x37, 0x40, 0x71, 0xdb, 0x3b, 0x14, 0xdc, 0x6a,
-  0x2e, 0x91, 0x5e, 0x91, 0x7d, 0x35, 0x23, 0x65, 0x1d, 0xb4, 0x81, 0xe8,
-  0xcc, 0x73, 0x5e, 0x7a, 0xdc, 0xc5, 0x09, 0x69, 0x2d, 0xc8, 0x88, 0x50,
-  0x78, 0x81, 0x61, 0x9a, 0x49, 0x36, 0x3b, 0xfd, 0x14, 0xe3, 0x67, 0x1c,
-  0x75, 0xe4, 0x64, 0xf0, 0xc5, 0x69, 0x88, 0x6b, 0xeb, 0x30, 0x07, 0x14,
-  0x93, 0x32, 0xb0, 0xc4, 0x03, 0x37, 0xa1, 0x4b, 0x58, 0xf0, 0x7e, 0x80,
-  0x43, 0x45, 0x18, 0xb8, 0x64, 0xbf, 0xb9, 0xb8, 0x6f, 0xe3, 0xa2, 0xda,
-  0x06, 0x96, 0x80, 0xa4, 0x02, 0x4d, 0x19, 0x73, 0x56, 0xa1, 0xdb, 0x49,
-  0xe5, 0xdf, 0x7b, 0xf2, 0xf9, 0xe7, 0x9d, 0x31, 0x87, 0x89, 0x26, 0xc7,
-  0x78, 0xe8, 0x64, 0x46, 0xe3, 0x91, 0x5c, 0x63, 0x71, 0xed, 0x70, 0x89,
-  0x10, 0x4e, 0xcd, 0x14, 0x41, 0x5e, 0x2e, 0xce, 0xfe, 0xb4, 0x6d, 0x24,
-  0xe5, 0x01, 0xf5, 0xc5, 0xc8, 0x21, 0x29, 0x3b, 0x56, 0xb3, 0x42, 0xcb,
-  0x1d, 0xb8, 0xcc, 0x6c, 0xc5, 0x2a, 0x62, 0x6f, 0x68, 0xc6, 0x29, 0x84,
-  0xe9, 0x35, 0x70, 0x04, 0x1a, 0xcd, 0xfd, 0x95, 0x75, 0x89, 0xeb, 0xa4,
-  0x6a, 0xa7, 0xbd, 0x29, 0xb6, 0xd7, 0x07, 0x1a, 0xef, 0x72, 0x83, 0x6b,
-  0xd6, 0x5e, 0xf4, 0xc2, 0x7c, 0xe1, 0x5e, 0x11, 0x72, 0xb5, 0x5e, 0x68,
-  0x44, 0x4c, 0x7c, 0x2f, 0x54, 0x53, 0xd4, 0x8c, 0x9f, 0x2f, 0x3b, 0x34,
-  0x29, 0xc3, 0x31, 0x16, 0x10, 0xa8, 0xaa, 0x8a, 0xad, 0x4a, 0x15, 0xcc,
-  0x8e, 0x9c, 0xa4, 0x0f, 0x6f, 0xaf, 0x6a, 0xe9, 0x56, 0x9f, 0x80, 0xe9,
-  0x65, 0xde, 0x85, 0x44, 0xf3, 0xc2, 0x35, 0x0a, 0x08, 0x52, 0xc1, 0x49,
-  0xe0, 0xa1, 0x74, 0xad, 0x84, 0x49, 0x77, 0x1c, 0x28, 0x94, 0xbc, 0x6f,
-  0x9d, 0x5f, 0xbc, 0x1b, 0xac, 0x53, 0x4b, 0xa1, 0x3a, 0x7e, 0x1f, 0x2f,
-  0x50, 0x3f, 0xc9, 0x90, 0xfd, 0xe1, 0x3d, 0xf5, 0xa9, 0x4c, 0x1a, 0x51,
-  0x10, 0xda, 0x22, 0xc5, 0x3a, 0x1e, 0xf5, 0xf9, 0xa1, 0xe6, 0xde, 0xf3,
-  0x4b, 0x7d, 0xb3, 0x9b, 0x84, 0xce, 0x50, 0x50, 0xa4, 0x0c, 0xc7, 0x01,
-  0xc5, 0x89, 0x67, 0x92, 0xbb, 0x9a, 0xad, 0x01, 0x7b, 0xe2, 0x37, 0x81,
-  0x46, 0xb4, 0xdf, 0xe9, 0xb8, 0x1f, 0xbe, 0x72, 0x23, 0x7d, 0xf9, 0x65,
-  0xad, 0xb5, 0xfb, 0xfb, 0xd1, 0xe2, 0xc1, 0xbe, 0x2b, 0x6b, 0x55, 0xe4,
-  0x7c, 0x8e, 0xb1, 0x03, 0x23, 0xe0, 0x59, 0xf6, 0x4b, 0x47, 0x5c, 0x1e,
-  0x57, 0x20, 0x2c, 0x45, 0x62, 0x84, 0x26, 0xe9, 0x0b, 0xc3, 0x76, 0x66,
-  0x50, 0x91, 0xb4, 0xa0, 0xd6, 0xc4, 0xa6, 0xd6, 0x47, 0x20, 0x7d, 0x62,
-  0x07, 0xfd, 0x3a, 0x57, 0x99, 0x7c, 0x42, 0xd7, 0x8a, 0x51, 0x59, 0x5b,
-  0x70, 0x28, 0xab, 0x62, 0x35, 0xad, 0xda, 0x1e, 0xb0, 0x1f, 0xc3, 0xa2,
-  0x65, 0xa2, 0x5f, 0x99, 0x9e, 0x00, 0xb3, 0x4d, 0x8d, 0x25, 0x80, 0x8f,
-  0x60, 0xc0, 0x2e, 0x5c, 0xbc, 0x89, 0x0b, 0x01, 0xb8, 0xdc, 0xfe, 0x40,
-  0x72, 0x6e, 0x34, 0xaf, 0xde, 0xa7, 0x81, 0xaf, 0x5d, 0xf8, 0xde, 0x7d,
-  0x32, 0x79, 0xf9, 0x25, 0x87, 0x76, 0xbd, 0x07, 0xdc, 0xa6, 0xc0, 0xee,
-  0x32, 0x0d, 0x6e, 0xf3, 0x9f, 0xbd, 0x88, 0x3d, 0xfb, 0x1d, 0xeb, 0x4e,
-  0x5c, 0x7c, 0x5d, 0x8b, 0x01, 0x42, 0x45, 0xd0, 0xda, 0x55, 0x9e, 0xaf,
-  0x6d, 0xcc, 0x15, 0x98, 0xc3, 0x62, 0x04, 0xc9, 0x13, 0x92, 0xcb, 0xe0,
-  0xa9, 0x50, 0x28, 0x8f, 0x77, 0x31, 0x53, 0xac, 0x1f, 0x9c, 0xc2, 0xae,
-  0xcc, 0xee, 0xc9, 0x83, 0x03, 0xf2, 0xb7, 0x2c, 0xcf, 0x97, 0x03, 0xa9,
-  0x67, 0xc9, 0x6a, 0xf7, 0xfa, 0x05, 0xe1, 0xa7, 0x5f, 0x7e, 0x09, 0xec,
-  0x28, 0xfe, 0xf5, 0xcf, 0xee, 0x6d, 0xfe, 0x87, 0xa8, 0x98, 0x18, 0xc1,
-  0xda, 0x89, 0xb0, 0x28, 0x72, 0xb5, 0x2a, 0x20, 0x66, 0x24, 0x72, 0x24,
-  0x4b, 0x10, 0x86, 0x21, 0xc3, 0x2a, 0x37, 0x79, 0x7d, 0xf0, 0xe6, 0xed,
-  0xc1, 0xe9, 0xe8, 0x31, 0x25, 0x2d, 0x34, 0x49, 0xb9, 0x80, 0x1e, 0xd8,
-  0x87, 0x6a, 0x4a, 0x17, 0x9f, 0x47, 0x0d, 0xad, 0x96, 0x9b, 0xf0, 0xf1,
-  0xaa, 0x20, 0x1e, 0x17, 0x40, 0xaf, 0x4f, 0xc5, 0x54, 0x70, 0xe9, 0x9a,
-  0x02, 0xef, 0xe2, 0x0a, 0x6b, 0x58, 0xd9, 0xbc, 0x8e, 0x48, 0x5c, 0x58,
-  0x95, 0x8a, 0x58, 0x8a, 0x24, 0x39, 0x7d, 0x71, 0x9e, 0x72, 0xb1, 0xd1,
-  0x39, 0x63, 0xf7, 0x9d, 0x6a, 0xd9, 0xc4, 0xfe, 0x97, 0x7d, 0xac, 0x41,
-  0xff, 0x45, 0x9f, 0x37, 0xb4, 0x88, 0xa7, 0x1d, 0x79, 0x09, 0xa5, 0x73,
-  0xa9, 0x47, 0x7d, 0xa1, 0x9a, 0xbe, 0x0d, 0x42, 0xd7, 0x4c, 0x46, 0x06,
-  0x87, 0x7a, 0xa6, 0x71, 0x8a, 0x5c, 0x34, 0x30, 0x89, 0xb3, 0x0e, 0x4f,
-  0x40, 0x3d, 0x05, 0x53, 0x2a, 0x14, 0xe1, 0x5a, 0xf0, 0x33, 0x17, 0x49,
-  0xbe, 0x60, 0x8e, 0xc1, 0x1e, 0x6b, 0x81, 0xfa, 0xeb, 0xf2, 0xc2, 0xbb,
-  0xb5, 0xd1, 0xf1, 0xc8, 0x40, 0x38, 0x42, 0x82, 0x6e, 0xe5, 0x94, 0xc3,
-  0x21, 0x61, 0x52, 0xa3, 0x2f, 0xaf, 0xaf, 0x35, 0x43, 0x14, 0x73, 0x06,
-  0x1e, 0x32, 0x4d, 0xba, 0x85, 0x37, 0xa8, 0x15, 0x4a, 0x89, 0x8c, 0x9b,
-  0x60, 0x40, 0xc3, 0x6b, 0x12, 0x6b, 0xae, 0xe7, 0xf9, 0x24, 0xbf, 0xba,
-  0x7a, 0x84, 0x36, 0x24, 0x4f, 0x07, 0x4d, 0x08, 0x5b, 0xee, 0x71, 0x84,
-  0x3e, 0xbf, 0x37, 0xd1, 0xba, 0x9d, 0x8c, 0x5f, 0x3f, 0x12, 0x73, 0x12,
-  0x20, 0x80, 0x92, 0x16, 0x5a, 0x74, 0xe8, 0x4b, 0xb2, 0x34, 0x02, 0x0b,
-  0xfe, 0x44, 0x3d, 0x47, 0x31, 0xc8, 0x69, 0x48, 0x99, 0x47, 0x00, 0x21,
-  0xd1, 0xe6, 0x1f, 0xff, 0xfc, 0xe9, 0xe7, 0x0e, 0xd0, 0x1c, 0xa0, 0xd8,
-  0x69, 0xf8, 0x34, 0x87, 0x8f, 0x6a, 0xda, 0x07, 0x8c, 0xb1, 0xb4, 0x03,
-  0x95, 0x87, 0xcb, 0xd3, 0x12, 0x24, 0x41, 0x78, 0x6c, 0xfb, 0xc2, 0x28,
-  0x7d, 0x87, 0x31, 0xbc, 0xb8, 0x95, 0x79, 0xc8, 0xe7, 0xc9, 0x75, 0x8c,
-  0x44, 0x7a, 0x7f, 0x79, 0xba, 0x5c, 0x44, 0x65, 0xd5, 0x6d, 0x40, 0x2e,
-  0x97, 0x6b, 0x1c, 0x0a, 0x52, 0x30, 0xda, 0x5d, 0x9c, 0x38, 0xe3, 0x78,
-  0xb0, 0x11, 0x5f, 0xf3, 0x46, 0xb4, 0x56, 0xcd, 0xe7, 0xc5, 0x0c, 0x9a,
-  0x70, 0x8f, 0x61, 0x9e, 0x38, 0xc2, 0xec, 0x25, 0x41, 0xbc, 0x0e, 0xd4,
-  0xb2, 0x16, 0xf4, 0x29, 0x2f, 0x1a, 0xb8, 0x30, 0x22, 0x72, 0xb9, 0x0c,
-  0x1c, 0x1f, 0x0b, 0xf0, 0xf5, 0xf1, 0x65, 0x64, 0x28, 0x5c, 0x2d, 0xba,
-  0x0f, 0xaa, 0x98, 0x80, 0x0c, 0xeb, 0x90, 0x5d, 0xc0, 0xfa, 0x73, 0x85,
-  0xd4, 0xee, 0xcd, 0x4f, 0x04, 0xcb, 0x68, 0x87, 0x12, 0xa2, 0xf8, 0x2f,
-  0xa2, 0xd5, 0x59, 0x7a, 0xb8, 0x5f, 0xb6, 0x53, 0xc3, 0x55, 0xeb, 0xff,
-  0x5b, 0xdf, 0x83, 0x71, 0x74, 0x45, 0x7a, 0x78, 0x84, 0xbf, 0x46, 0x26,
-  0xf4, 0xf0, 0x64, 0xe0, 0xb2, 0xd7, 0x75, 0xbd, 0x64, 0x19, 0xdd, 0x4c,
-  0x26, 0x1d, 0x80, 0x5b, 0xeb, 0xc6, 0xf1, 0xcd, 0xf1, 0xc1, 0x91, 0x4d,
-  0x76, 0xf4, 0xdf, 0x60, 0x79, 0x37, 0xd7, 0xcb, 0x24, 0x11, 0x90, 0xb1,
-  0x95, 0x59, 0xe2, 0x65, 0xcf, 0x9c, 0xad, 0xa0, 0x23, 0x32, 0x87, 0x44,
-  0x36, 0xc0, 0x0f, 0x3b, 0xcb, 0xbb, 0xab, 0x76, 0x21, 0x81, 0xd2, 0x6e,
-  0x3d, 0x42, 0xfb, 0x7b, 0x60, 0xbd, 0xee, 0xac, 0x47, 0x13, 0x14, 0x67,
-  0x0b, 0x08, 0xfb, 0x06, 0x99, 0x47, 0xf3, 0x65, 0x2b, 0x07, 0x25, 0xbe,
-  0xe6, 0x1c, 0xb9, 0xf9, 0x32, 0x78, 0x36, 0xc8, 0x52, 0x7a, 0x21, 0x3f,
-  0xd7, 0xdc, 0x2b, 0xc7, 0xc0, 0x1e, 0xd2, 0x47, 0xc3, 0x54, 0xbc, 0xeb,
-  0xa0, 0x96, 0x0e, 0x49, 0x1a, 0x7c, 0x65, 0x5c, 0x73, 0x8e, 0x13, 0x6e,
-  0x7c, 0x62, 0xa1, 0xcd, 0x75, 0xb0, 0xe2, 0xad, 0xc4, 0x90, 0x3d, 0x98,
-  0x68, 0x12, 0xb4, 0x5e, 0x86, 0x31, 0xf5, 0x9a, 0x24, 0x64, 0x65, 0x64,
-  0x66, 0xad, 0x1a, 0x1f, 0xc4, 0x6d, 0xca, 0x8a, 0xa4, 0x40, 0x1b, 0x19,
-  0xbf, 0x74, 0x13, 0x97, 0xde, 0xf8, 0x2a, 0x29, 0xf5, 0xe2, 0xd1, 0xf3,
-  0xc7, 0xc6, 0xfc, 0x47, 0xed, 0x4a, 0x0a, 0x4e, 0xb1, 0x53, 0x20, 0xaf,
-  0x15, 0xb6, 0x0d, 0xc2, 0x36, 0x27, 0x5f, 0xf3, 0x4b, 0x9a, 0x40, 0xa5,
-  0x5d, 0x86, 0x51, 0x4b, 0x6b, 0x8e, 0xab, 0x8a, 0xd6, 0xce, 0x69, 0x95,
-  0x67, 0x49, 0xdd, 0x70, 0xc2, 0x73, 0xb4, 0x74, 0x2d, 0x24, 0x47, 0xa1,
-  0x38, 0x77, 0xeb, 0xd6, 0x03, 0x8e, 0x77, 0xb5, 0xba, 0xba, 0x12, 0xbf,
-  0x9e, 0x81, 0x74, 0x63, 0xa0, 0x2e, 0xa1, 0x76, 0x96, 0xa3, 0xb0, 0xb4,
-  0xad, 0x99, 0xe9, 0xfd, 0xf1, 0x74, 0x9d, 0x0f, 0x4d, 0xa7, 0xe3, 0xd3,
-  0x1e, 0x1d, 0xab, 0x67, 0x80, 0x64, 0xc9, 0xe8, 0x4d, 0x0a, 0xb6, 0x24,
-  0x23, 0x3a, 0x06, 0x72, 0xec, 0x7d, 0x9b, 0xa3, 0x6b, 0xcd, 0x13, 0x49,
-  0x02, 0x66, 0x80, 0xfd, 0x45, 0xce, 0x7e, 0xde, 0xcc, 0x4f, 0x5b, 0x17,
-  0x8c, 0xae, 0x88, 0xeb, 0xf4, 0xce, 0xca, 0x44, 0x61, 0x64, 0x1d, 0x99,
-  0x45, 0x36, 0x08, 0x93, 0xf5, 0x35, 0xce, 0x42, 0x32, 0xe4, 0xa3, 0x12,
-  0x25, 0x10, 0xdc, 0x76, 0x4e, 0xf3, 0x39, 0x32, 0x7f, 0x63, 0xd4, 0x17,
-  0xdb, 0x67, 0xc2, 0x6e, 0xfa, 0x3b, 0xbe, 0x21, 0xa9, 0x6e, 0xbf, 0xd7,
-  0x1d, 0x57, 0x5c, 0x63, 0xed, 0xe5, 0xaa, 0xb0, 0x94, 0x2a, 0x44, 0x02,
-  0xe8, 0xa8, 0x81, 0x50, 0x3e, 0x9b, 0x6d, 0xeb, 0x88, 0x2d, 0x6a, 0xa6,
-  0x0b, 0x5a, 0x4e, 0xc3, 0xe2, 0x97, 0x88, 0x1d, 0x9b, 0x0d, 0xf3, 0xab,
-  0x21, 0xaa, 0xe6, 0x71, 0xb9, 0x32, 0x56, 0xcb, 0x02, 0x82, 0x46, 0x8a,
-  0x24, 0xef, 0x10, 0xb5, 0xdc, 0x75, 0x4b, 0x6a, 0xf0, 0x71, 0xe1, 0x2c,
-  0x76, 0x3a, 0x18, 0x5d, 0x94, 0x7d, 0xb6, 0xf2, 0xd8, 0xeb, 0x0e, 0x2d,
-  0x8b, 0x13, 0xd2, 0xe2, 0xa2, 0x48, 0xe9, 0x1c, 0xb6, 0x40, 0x66, 0x11,
-  0x2a, 0x36, 0x90, 0x9b, 0x54, 0x22, 0x6f, 0x38, 0xa1, 0x78, 0x21, 0xce,
-  0x14, 0xda, 0x12, 0x36, 0x2b, 0x40, 0x24, 0xe4, 0xdc, 0xd8, 0x8d, 0x75,
-  0xb6, 0x74, 0x24, 0x15, 0x35, 0x4a, 0xd6, 0xc1, 0x9a, 0x1e, 0xe6, 0x60,
-  0xae, 0x43, 0x9c, 0x58, 0x27, 0x02, 0x07, 0xf5, 0x65, 0xc1, 0xaa, 0x45,
-  0x25, 0x0a, 0x96, 0x7c, 0xbb, 0x00, 0x49, 0x75, 0xc5, 0x7c, 0xf0, 0x5b,
-  0xc6, 0x3d, 0x02, 0xd9, 0x99, 0xcb, 0x0c, 0x2f, 0x57, 0x93, 0xc5, 0xec,
-  0x59, 0xf4, 0x82, 0xfe, 0xf9, 0xa2, 0xc3, 0x47, 0x29, 0xa1, 0x20, 0x2a,
-  0x0b, 0xab, 0x2c, 0x84, 0xdf, 0x9f, 0xec, 0xf1, 0x89, 0x78, 0x4f, 0x6d,
-  0x4e, 0x53, 0xc0, 0x78, 0xcc, 0xd2, 0xeb, 0xb4, 0x92, 0x08, 0x7b, 0x7d,
-  0xa1, 0xbb, 0x7c, 0x91, 0x94, 0x68, 0x89, 0x76, 0xf7, 0x3e, 0x8f, 0x26,
-  0x69, 0x15, 0xbd, 0x3e, 0x7a, 0x26, 0x05, 0xd0, 0xca, 0xd5, 0xc2, 0x17,
-  0xca, 0x04, 0x42, 0x2b, 0xca, 0x20, 0xb3, 0xc3, 0x8f, 0xc6, 0x38, 0x6f,
-  0xd5, 0x22, 0xb9, 0x4d, 0x1e, 0x06, 0x4d, 0xc7, 0xd2, 0x95, 0x39, 0xc1,
-  0x02, 0x7b, 0xb5, 0x23, 0x39, 0x14, 0x55, 0x56, 0xef, 0x68, 0x5b, 0xa0,
-  0xa7, 0xf9, 0xd3, 0x08, 0x4a, 0x2b, 0x9e, 0x74, 0xd9, 0x80, 0xb7, 0x67,
-  0x32, 0x40, 0x5e, 0xd9, 0xe1, 0xb9, 0xe4, 0x0b, 0x8d, 0x1b, 0xc9, 0xfb,
-  0x8f, 0x61, 0x91, 0x7e, 0x56, 0x37, 0xad, 0x4a, 0x19, 0x44, 0xc3, 0x90,
-  0x19, 0x92, 0x72, 0x75, 0xbd, 0xae, 0xb6, 0x5d, 0x74, 0x82, 0x67, 0xf5,
-  0x18, 0x9b, 0x46, 0x7c, 0x8a, 0x37, 0x82, 0x24, 0x53, 0xb9, 0x76, 0xf9,
-  0x20, 0xa4, 0x53, 0x2e, 0x31, 0xda, 0x42, 0xc3, 0x5c, 0x79, 0xb8, 0x59,
-  0x2b, 0xb8, 0x58, 0xac, 0x04, 0x62, 0xfa, 0x60, 0xc9, 0x66, 0x9e, 0x68,
-  0x77, 0xf4, 0x7e, 0x10, 0xd6, 0x7b, 0x52, 0x40, 0x72, 0x94, 0x75, 0x6a,
-  0xe5, 0x55, 0xc1, 0xeb, 0xdd, 0x18, 0x0d, 0xb7, 0x2d, 0xf6, 0xb5, 0x39,
-  0x87, 0x81, 0x14, 0xc2, 0x82, 0xf7, 0x88, 0x97, 0x5d, 0xc7, 0x00, 0xc3,
-  0x0e, 0x28, 0x2f, 0xa5, 0x73, 0xa0, 0x10, 0x53, 0xeb, 0xe6, 0x2d, 0xdf,
-  0x06, 0xc5, 0x85, 0xec, 0x1e, 0x56, 0x59, 0x5c, 0x82, 0x28, 0x85, 0xdc,
-  0x82, 0xaf, 0xdb, 0x45, 0xa9, 0xb8, 0x19, 0x77, 0x7a, 0xa1, 0xfd, 0xca,
-  0x0a, 0x0c, 0xf9, 0xe6, 0x1b, 0x44, 0x28, 0x5a, 0xed, 0x18, 0x65, 0x10,
-  0x3b, 0x8a, 0x46, 0xdb, 0xc1, 0xd2, 0xa5, 0xd5, 0x55, 0xe5, 0xa8, 0x92,
-  0xd1, 0x28, 0x3c, 0x4e, 0x60, 0xe4, 0x57, 0xcc, 0xfc, 0x3a, 0x73, 0x66,
-  0xcf, 0x05, 0x43, 0x2e, 0xaa, 0x17, 0x0c, 0x36, 0xc7, 0xb4, 0x17, 0x93,
-  0x5d, 0x33, 0x23, 0x67, 0x22, 0x49, 0xf8, 0xa3, 0xae, 0xeb, 0x09, 0xbd,
-  0xc9, 0x44, 0x02, 0x2f, 0x6a, 0x58, 0x41, 0x7c, 0x14, 0x1d, 0x64, 0xa6,
-  0x89, 0x6b, 0xc6, 0xbe, 0xe4, 0x48, 0xb4, 0xaa, 0x6d, 0xdc, 0x26, 0x2d,
-  0x93, 0x80, 0xda, 0x04, 0x82, 0x99, 0x91, 0x5c, 0xb5, 0xb3, 0xbf, 0x5b,
-  0x2b, 0xfd, 0xae, 0x80, 0xfe, 0x28, 0x5e, 0xf2, 0xdb, 0x45, 0x39, 0x9f,
-  0xa8, 0x24, 0xd6, 0x45, 0x2f, 0x0c, 0x83, 0xbc, 0xfd, 0xea, 0xe4, 0xf4,
-  0x78, 0x2b, 0x7a, 0x95, 0x00, 0xbf, 0xa1, 0x4e, 0x14, 0x38, 0xbe, 0xbf,
-  0x93, 0x4f, 0x8c, 0xfc, 0x55, 0x09, 0xed, 0xf2, 0xd3, 0xab, 0xc3, 0x02,
-  0xd2, 0xb4, 0x9c, 0x08, 0xcc, 0x41, 0xb2, 0x5f, 0x72, 0x18, 0x2e, 0x0d,
-  0xea, 0x1a, 0xe2, 0x6a, 0x00, 0x8a, 0xd0, 0x76, 0x12, 0x87, 0x11, 0xc9,
-  0xa3, 0x10, 0xf0, 0x1b, 0x95, 0xbb, 0x35, 0xe4, 0x92, 0xc7, 0xae, 0x56,
-  0xb9, 0x5a, 0x85, 0xea, 0x8e, 0xd1, 0x49, 0xcd, 0xb0, 0xf4, 0xef, 0x12,
-  0xf4, 0x8b, 0x55, 0x5b, 0xe4, 0x33, 0x07, 0xf7, 0x27, 0x15, 0x44, 0x78,
-  0xbe, 0xc1, 0xda, 0xfd, 0x95, 0xd6, 0xee, 0xaf, 0xab, 0xec, 0x76, 0xa8,
-  0x95, 0xe2, 0x14, 0x38, 0xa1, 0xec, 0x3e, 0x7b, 0xdf, 0x3b, 0x67, 0x3f,
-  0x02, 0x30, 0xc5, 0xd0, 0xd9, 0x2e, 0x98, 0x16, 0x6b, 0x74, 0x9f, 0x0c,
-  0x7b, 0x7d, 0xc1, 0x95, 0x9a, 0xf0, 0xc0, 0x01, 0xd9, 0x34, 0xb9, 0x29,
-  0x47, 0x7f, 0xb2, 0x8e, 0xd8, 0xb3, 0xda, 0x75, 0xda, 0x74, 0x6f, 0x3d,
-  0x6e, 0x31, 0xea, 0x51, 0x41, 0x1a, 0x83, 0x05, 0xc4, 0x09, 0xb0, 0xea,
-  0xc4, 0x27, 0x51, 0x20, 0x65, 0xdb, 0x26, 0x5d, 0xf3, 0xae, 0x20, 0x9e,
-  0xa4, 0x2f, 0x31, 0x9e, 0x27, 0x93, 0x52, 0xe3, 0x9a, 0x95, 0xc4, 0xab,
-  0xc8, 0xe0, 0x98, 0x51, 0x3e, 0x03, 0x50, 0x2b, 0x6e, 0x80, 0x51, 0x63,
-  0x70, 0x22, 0xd0, 0xb3, 0x6c, 0xd0, 0x6f, 0x11, 0xce, 0x74, 0x9e, 0x4b,
-  0x15, 0x9a, 0xfb, 0x30, 0x75, 0xf8, 0x16, 0x7c, 0xae, 0xec, 0x8a, 0x57,
-  0xd1, 0xa4, 0xb8, 0xe0, 0x70, 0x04, 0x56, 0x3f, 0x15, 0x7b, 0x2d, 0xbc,
-  0xc3, 0xe0, 0x27, 0x49, 0x4c, 0xb3, 0xd6, 0x7a, 0xed, 0xcc, 0x86, 0x5a,
-  0xb1, 0x7b, 0x98, 0x92, 0x3c, 0xb2, 0xcc, 0x01, 0xad, 0x75, 0xeb, 0x11,
-  0x0e, 0x17, 0x97, 0x88, 0xd9, 0xa4, 0xa3, 0x8e, 0xf0, 0x84, 0x25, 0xb2,
-  0x59, 0x62, 0x5e, 0x72, 0x57, 0xad, 0xac, 0x23, 0x23, 0x48, 0xf3, 0xbb,
-  0x44, 0xa0, 0x8f, 0xd9, 0x9d, 0xd4, 0xdc, 0xbb, 0x07, 0x97, 0xc6, 0xe3,
-  0xe2, 0x37, 0xc5, 0x37, 0xa0, 0x15, 0x50, 0xfc, 0xa8, 0x02, 0xdc, 0xf0,
-  0xb5, 0x93, 0x45, 0xe5, 0x0c, 0x8b, 0x73, 0x0a, 0xd7, 0xb8, 0x1d, 0xe6,
-  0x14, 0x88, 0x66, 0x91, 0xaf, 0x3f, 0x45, 0xe7, 0x83, 0x25, 0x4e, 0xdc,
-  0x64, 0x56, 0x5b, 0x41, 0x4d, 0x7d, 0x91, 0x33, 0x5f, 0x4a, 0x5e, 0x01,
-  0xac, 0x96, 0x6b, 0xca, 0x54, 0x21, 0xe9, 0xeb, 0x26, 0x7e, 0xff, 0x7e,
-  0x54, 0x26, 0x52, 0xb7, 0xa9, 0x2c, 0xe7, 0x48, 0x30, 0xab, 0xd7, 0xa7,
-  0xe2, 0xdc, 0xe2, 0x64, 0x19, 0xcf, 0x11, 0x65, 0xc5, 0xe7, 0x73, 0x5d,
-  0x1d, 0xa0, 0x3a, 0xb4, 0x0b, 0xea, 0x93, 0x69, 0x3e, 0x35, 0xf0, 0x0e,
-  0xe2, 0x50, 0xae, 0x61, 0x40, 0x9a, 0x52, 0x8e, 0xe6, 0x82, 0x0d, 0x54,
-  0xe9, 0xac, 0xe5, 0x84, 0x51, 0x30, 0x20, 0x76, 0x87, 0xf0, 0xce, 0xb9,
-  0x41, 0xb0, 0xf4, 0x3d, 0x51, 0xbb, 0x2c, 0xc2, 0x14, 0xb8, 0x75, 0xf3,
-  0x16, 0x71, 0x96, 0x33, 0xa9, 0x1f, 0xb3, 0x55, 0x4b, 0xfb, 0x6b, 0xbe,
-  0x6f, 0x55, 0x40, 0x83, 0x90, 0x6f, 0x9c, 0x45, 0x7e, 0x22, 0x77, 0x77,
-  0x1c, 0x20, 0x43, 0x51, 0x5d, 0xae, 0xc5, 0x1c, 0xaf, 0x34, 0xfd, 0x1f,
-  0x53, 0xbc, 0x3c, 0x3c, 0x7f, 0xf7, 0xed, 0xf1, 0xf1, 0xf9, 0xc9, 0x11,
-  0xf1, 0x42, 0x91, 0xb1, 0xdc, 0x47, 0x6f, 0x2e, 0xbf, 0x3b, 0xf5, 0x10,
-  0x00, 0x2a, 0x39, 0x37, 0x0f, 0x14, 0x1b, 0x42, 0xd1, 0xdc, 0x69, 0x9a,
-  0xad, 0xde, 0x0f, 0x50, 0xff, 0x86, 0x04, 0xef, 0x83, 0x93, 0x1f, 0x06,
-  0xd1, 0x37, 0xe7, 0xc3, 0xb7, 0x3f, 0xb4, 0xd2, 0x36, 0x6a, 0xd1, 0x40,
-  0xcd, 0x48, 0x16, 0x17, 0x1b, 0x04, 0x6c, 0x22, 0x3f, 0x77, 0x23, 0xb1,
-  0x0e, 0xf0, 0xd7, 0x8f, 0xbb, 0xfc, 0xea, 0xb6, 0xec, 0xf0, 0xf6, 0x73,
-  0xc6, 0x16, 0xd9, 0xfb, 0x0e, 0xee, 0x1f, 0x2f, 0x38, 0xc1, 0x61, 0x14,
-  0x12, 0xd6, 0x43, 0xf4, 0x82, 0xfe, 0xe9, 0xca, 0x12, 0xdb, 0xe6, 0x22,
-  0xda, 0xd1, 0x79, 0x90, 0x33, 0xef, 0x1c, 0x3a, 0x23, 0x0b, 0x82, 0x51,
-  0xcd, 0x5a, 0xf3, 0x1e, 0xd4, 0x69, 0x56, 0xb4, 0xc0, 0xf3, 0x5c, 0x0b,
-  0xbe, 0xe6, 0x28, 0xcc, 0x5d, 0x49, 0xb7, 0x33, 0xee, 0x57, 0x4c, 0x8f,
-  0xa3, 0x4e, 0x3f, 0x98, 0x88, 0xdd, 0x9a, 0x22, 0x3f, 0x3a, 0x72, 0x48,
-  0x14, 0x7a, 0x87, 0x73, 0x23, 0x98, 0x9f, 0xac, 0x5a, 0x17, 0x4e, 0xb4,
-  0x66, 0x6a, 0x3b, 0x48, 0x01, 0x3c, 0x97, 0x12, 0xa1, 0x1f, 0x1d, 0x5f,
-  0x0c, 0x24, 0x3f, 0x3b, 0xcc, 0xcd, 0x76, 0xf8, 0x23, 0x5a, 0x3d, 0xa9,
-  0xea, 0x34, 0xe6, 0x00, 0x43, 0xe1, 0xbf, 0x2e, 0x27, 0xfb, 0xb6, 0x98,
-  0x44, 0x2f, 0xe6, 0xf4, 0xe2, 0xbc, 0x3b, 0x80, 0x53, 0xeb, 0x5a, 0x7e,
-  0x9b, 0x14, 0x93, 0xa4, 0xc8, 0xcb, 0x66, 0xee, 0x8e, 0xe6, 0xf9, 0x6a,
-  0xfd, 0x40, 0x6e, 0x46, 0x13, 0xf9, 0x5a, 0x86, 0x48, 0x08, 0xa5, 0x0a,
-  0x37, 0xdd, 0x4a, 0x53, 0xe8, 0x23, 0x10, 0xab, 0x3f, 0x88, 0xfa, 0x9c,
-  0xa0, 0xc4, 0x3f, 0x89, 0x75, 0x5d, 0xc1, 0x57, 0x90, 0xc6, 0xf3, 0xfe,
-  0xa0, 0x0d, 0xd5, 0xd6, 0xd7, 0x55, 0xef, 0xd3, 0xc6, 0x49, 0x6b, 0x56,
-  0xe9, 0x31, 0xd6, 0x71, 0x08, 0x8c, 0x0b, 0x73, 0x48, 0x40, 0xb9, 0x84,
-  0x16, 0xab, 0xb2, 0x85, 0xa1, 0xe3, 0x9a, 0xab, 0xa7, 0x88, 0xac, 0xab,
-  0x1d, 0x51, 0xe7, 0xbc, 0x1a, 0xb4, 0x06, 0xed, 0xd7, 0x72, 0x68, 0x25,
-  0xcb, 0x16, 0xda, 0xe4, 0xad, 0xae, 0xdd, 0x53, 0x96, 0xdd, 0xbe, 0x1e,
-  0x8f, 0x0f, 0xce, 0x4f, 0x9a, 0x4b, 0x4d, 0x9f, 0x0e, 0xdf, 0x58, 0x0d,
-  0xeb, 0x2d, 0x57, 0x23, 0xdc, 0xe9, 0x6a, 0x3c, 0x03, 0xa4, 0x3c, 0xb0,
-  0xb4, 0xc9, 0xa1, 0x13, 0x08, 0x9c, 0x19, 0x7e, 0x47, 0x97, 0xd9, 0x5d,
-  0x1b, 0xc7, 0xa2, 0x74, 0x40, 0x98, 0x89, 0x9a, 0xfc, 0x8a, 0xa8, 0x56,
-  0x1b, 0x8f, 0x04, 0xab, 0xdf, 0x90, 0xa6, 0xbe, 0x95, 0x7a, 0x4b, 0x57,
-  0xe9, 0x35, 0x07, 0x07, 0xe3, 0x67, 0x17, 0xfe, 0x8b, 0x9d, 0x37, 0x2b,
-  0x51, 0xe9, 0x9f, 0xf4, 0x12, 0x24, 0xb0, 0x96, 0x34, 0xb9, 0x45, 0x04,
-  0xc9, 0x91, 0x21, 0xde, 0xb7, 0xd0, 0x69, 0xec, 0xe5, 0x34, 0x08, 0x21,
-  0x98, 0x27, 0x3e, 0x42, 0xc5, 0x04, 0x75, 0xdc, 0xe5, 0xbe, 0x51, 0x49,
-  0x07, 0x6d, 0x91, 0xab, 0xd5, 0xe9, 0xd2, 0x97, 0xc5, 0xae, 0x1c, 0x4e,
-  0x58, 0x45, 0x48, 0xb1, 0xfd, 0xb0, 0x13, 0xdc, 0xde, 0x10, 0xd3, 0x5a,
-  0xd3, 0xf4, 0x34, 0xad, 0x18, 0x4f, 0x36, 0x1c, 0xc3, 0x28, 0x3a, 0x5b,
-  0x06, 0xd2, 0xd7, 0x4d, 0x92, 0x16, 0xde, 0x41, 0xe8, 0xf3, 0x68, 0xc1,
-  0x15, 0xda, 0x93, 0x45, 0xa1, 0xb8, 0xac, 0x56, 0xf8, 0x42, 0x57, 0x50,
-  0xa6, 0x2d, 0xf5, 0x1d, 0x8c, 0xef, 0xc2, 0x93, 0x44, 0x33, 0x21, 0xbd,
-  0x9a, 0xf4, 0xf7, 0x16, 0xf5, 0xab, 0xc1, 0x0f, 0x09, 0xd7, 0x8c, 0x7b,
-  0x5b, 0x22, 0x28, 0x25, 0x02, 0x54, 0xf8, 0x43, 0xcd, 0x0d, 0x01, 0x0f,
-  0x20, 0x9d, 0xa2, 0x4d, 0xc5, 0x4d, 0x1b, 0x74, 0x79, 0x3b, 0xc5, 0x86,
-  0xce, 0x87, 0x3d, 0x00, 0x1d, 0xd7, 0xe0, 0x88, 0xa0, 0xfd, 0x2d, 0x57,
-  0xdc, 0xdc, 0xfb, 0x45, 0xa1, 0x43, 0x74, 0x20, 0x85, 0xc7, 0xa9, 0x6c,
-  0x85, 0x4d, 0xc0, 0x70, 0x1d, 0xbc, 0x43, 0xd5, 0xd8, 0x0e, 0x80, 0x9a,
-  0x45, 0xbc, 0xd6, 0xa4, 0xf3, 0x16, 0x06, 0x4d, 0x0e, 0x6c, 0x87, 0xef,
-  0x25, 0x23, 0x7d, 0x96, 0xaf, 0x98, 0xc1, 0xc9, 0xa7, 0x4d, 0x87, 0x46,
-  0x22, 0xc5, 0xe7, 0x4a, 0x76, 0x92, 0xb0, 0x57, 0xa3, 0x03, 0x1c, 0xdf,
-  0xa5, 0x84, 0xef, 0x47, 0x7f, 0xf9, 0xcb, 0x20, 0xfa, 0x4b, 0x8f, 0xfe,
-  0x57, 0xd1, 0xff, 0x68, 0x3d, 0xff, 0x22, 0x50, 0xeb, 0x7f, 0xb9, 0xa3,
-  0xfb, 0x33, 0xe2, 0x92, 0x69, 0xe5, 0x9c, 0x73, 0x97, 0x3d, 0x8e, 0x76,
-  0x47, 0x4a, 0xbf, 0x84, 0xdc, 0x69, 0xf1, 0x00, 0x3e, 0xfc, 0xb0, 0xe8,
-  0xf8, 0x3a, 0xf0, 0x12, 0xd2, 0x4f, 0x1b, 0xb6, 0x5a, 0x64, 0x12, 0x9e,
-  0xa1, 0xdb, 0x0e, 0xb2, 0x6e, 0x69, 0x55, 0x71, 0xd4, 0xff, 0xc4, 0xbc,
-  0xc8, 0x95, 0x65, 0xd4, 0x85, 0x41, 0x8b, 0x78, 0xcd, 0x15, 0x43, 0x0e,
-  0x4b, 0x94, 0x77, 0xc6, 0x2f, 0x8a, 0x5a, 0x7a, 0x86, 0xf2, 0x70, 0x52,
-  0xda, 0x50, 0x19, 0xab, 0xb2, 0x42, 0xb6, 0xd2, 0x2e, 0x6f, 0x1e, 0xa0,
-  0x7b, 0xe9, 0x90, 0x5c, 0xad, 0x59, 0x1a, 0x65, 0x47, 0xd9, 0x83, 0xb6,
-  0xf0, 0x1d, 0x20, 0x42, 0x59, 0x2c, 0x01, 0xdc, 0xd0, 0x01, 0x5f, 0xa1,
-  0x01, 0xf6, 0x87, 0xfd, 0x3a, 0x26, 0x9b, 0x85, 0xb5, 0x74, 0xd5, 0xe1,
-  0x08, 0x4a, 0x66, 0xb4, 0x6a, 0xf7, 0x05, 0x98, 0x5f, 0x95, 0xd4, 0x5c,
-  0x96, 0x04, 0x7f, 0x8f, 0xed, 0x13, 0xc3, 0x6b, 0x56, 0x9b, 0x88, 0xea,
-  0xb1, 0xc4, 0x5a, 0x5b, 0xb5, 0x12, 0x14, 0x6c, 0x4a, 0xdf, 0x4d, 0xab,
-  0x40, 0x11, 0x1a, 0x0e, 0xa5, 0xb2, 0x9f, 0x22, 0x6b, 0x42, 0x6a, 0xc5,
-  0xe5, 0xc4, 0x1a, 0x4f, 0x99, 0x2e, 0x96, 0x2d, 0x4b, 0x1c, 0xaf, 0xb1,
-  0x17, 0x7a, 0x79, 0x18, 0x00, 0xb1, 0xe6, 0x5a, 0x1f, 0xf7, 0x99, 0xb2,
-  0x91, 0x71, 0x0e, 0xec, 0x5b, 0x31, 0xd6, 0x00, 0xcf, 0xc2, 0xc7, 0xb1,
-  0x74, 0x78, 0xb1, 0x5b, 0x66, 0x1b, 0x1e, 0xd3, 0xcb, 0xa8, 0xb7, 0x56,
-  0x4b, 0xe9, 0x35, 0x5f, 0x38, 0x65, 0xb8, 0x09, 0xdd, 0x71, 0xc1, 0x18,
-  0x9b, 0xc6, 0x99, 0x83, 0x86, 0x9a, 0x03, 0x09, 0x41, 0xd1, 0xbd, 0xd3,
-  0xcc, 0x17, 0x0f, 0x75, 0xcc, 0x69, 0x8d, 0x6f, 0x42, 0x9c, 0x3a, 0x02,
-  0x59, 0xa7, 0xa7, 0x92, 0xeb, 0x34, 0xae, 0x83, 0x5b, 0x34, 0x9b, 0x03,
-  0xe7, 0x0e, 0xdf, 0xb2, 0xd0, 0x94, 0x56, 0xa6, 0x93, 0x6f, 0x9a, 0xb6,
-  0xf7, 0x37, 0xbb, 0xc7, 0xb6, 0xd4, 0x6a, 0x2c, 0xf9, 0x70, 0x6b, 0x20,
-  0x23, 0xc2, 0x2b, 0xc8, 0x01, 0x98, 0xa4, 0x90, 0xea, 0xe9, 0xbd, 0x15,
-  0x52, 0x4e, 0x24, 0x6c, 0xce, 0xe0, 0x8c, 0xd6, 0x52, 0x35, 0x14, 0x1d,
-  0xee, 0x31, 0x91, 0x30, 0x78, 0x2b, 0xac, 0xee, 0x38, 0x0b, 0x6c, 0xf0,
-  0xa5, 0x13, 0x90, 0xf3, 0x82, 0x94, 0xd8, 0xd6, 0xce, 0xec, 0x6e, 0xb9,
-  0xb8, 0x48, 0x14, 0x1e, 0x93, 0x42, 0x74, 0xaa, 0x86, 0xf5, 0x6e, 0x72,
-  0x81, 0x19, 0xe9, 0xed, 0xb3, 0x66, 0xa5, 0x8c, 0xc1, 0xcf, 0xb2, 0x7d,
-  0x14, 0x00, 0xe2, 0xf2, 0xcd, 0xd9, 0xeb, 0x63, 0x97, 0x69, 0x27, 0xa6,
-  0x2f, 0xfe, 0xa4, 0x13, 0x5b, 0x6e, 0x84, 0xe0, 0x74, 0xcb, 0x3c, 0x1f,
-  0xb4, 0x6b, 0x08, 0xca, 0x12, 0x5d, 0x27, 0xd5, 0xf2, 0x7e, 0x95, 0xce,
-  0x36, 0x01, 0x0f, 0xf0, 0xf6, 0xcd, 0xc9, 0x0f, 0x43, 0xb1, 0x9c, 0x8a,
-  0x22, 0x67, 0xf9, 0xf1, 0x96, 0x5a, 0x2f, 0xd6, 0xf5, 0x45, 0x07, 0x16,
-  0x84, 0x52, 0x0d, 0x8e, 0x99, 0xa2, 0xa1, 0x20, 0xc7, 0x28, 0xcd, 0x44,
-  0x88, 0x91, 0x06, 0xe9, 0xde, 0x38, 0xcb, 0x88, 0x7d, 0x03, 0xe4, 0x05,
-  0xdb, 0xde, 0x95, 0x35, 0x58, 0x5f, 0x89, 0xe8, 0xe0, 0xfc, 0xfc, 0xe8,
-  0xe0, 0xf2, 0xc0, 0xcd, 0x0d, 0xa0, 0x2a, 0xe0, 0x73, 0x10, 0x67, 0x58,
-  0xb1, 0x2f, 0x84, 0x04, 0xfb, 0xbf, 0xe7, 0xbc, 0xa4, 0x26, 0xe7, 0x3b,
-  0xbf, 0x38, 0x63, 0xb3, 0xdb, 0xef, 0xff, 0x72, 0xe0, 0x2b, 0x58, 0xa1,
-  0x56, 0x4b, 0xbb, 0x90, 0xd0, 0xde, 0x16, 0x8f, 0xef, 0xde, 0x8d, 0x4f,
-  0xe3, 0x66, 0x44, 0x8e, 0x8b, 0xde, 0xf1, 0x86, 0x16, 0x53, 0x27, 0x9c,
-  0xd8, 0x6a, 0x60, 0x01, 0x06, 0x1d, 0x75, 0xca, 0x83, 0x89, 0xe4, 0x9e,
-  0x9f, 0x1a, 0xc6, 0x8c, 0x2d, 0xd6, 0x3c, 0x4a, 0xde, 0x27, 0xd3, 0x55,
-  0x05, 0xde, 0xc5, 0xd6, 0x7d, 0xa6, 0xaf, 0x19, 0xaf, 0x54, 0xd3, 0x71,
-  0xdd, 0xdc, 0x1e, 0x0f, 0x9c, 0x2d, 0x1c, 0x48, 0x52, 0xc9, 0x72, 0x81,
-  0xed, 0x1f, 0xe9, 0x68, 0x3d, 0xa0, 0x6b, 0xeb, 0xec, 0x08, 0x78, 0x1b,
-  0xd1, 0xb9, 0xd1, 0x63, 0x6b, 0x41, 0x3e, 0x21, 0xc6, 0x37, 0xb4, 0x90,
-  0x4b, 0x99, 0x38, 0x7d, 0xd0, 0x7a, 0xa8, 0x72, 0x18, 0xf4, 0x2c, 0x26,
-  0xb5, 0xbd, 0x81, 0xca, 0xa7, 0x42, 0x06, 0xd5, 0x34, 0xf5, 0x28, 0x58,
-  0x85, 0x3e, 0x05, 0x88, 0x54, 0x44, 0xe5, 0xb5, 0xfd, 0x1b, 0xe6, 0x68,
-  0xa3, 0x47, 0x49, 0x2a, 0x26, 0x11, 0x97, 0xff, 0xda, 0xde, 0x1d, 0xed,
-  0xf4, 0xda, 0xa3, 0x47, 0x2a, 0x1d, 0x2c, 0xc5, 0x71, 0x26, 0xf7, 0xb3,
-  0x00, 0x82, 0xe6, 0x1f, 0x1e, 0xa0, 0xd6, 0xe7, 0x8e, 0x33, 0xf8, 0xf1,
-  0xbb, 0xc6, 0x32, 0x3c, 0x6b, 0x79, 0x4b, 0xc4, 0xe3, 0xe7, 0x59, 0x72,
-  0x96, 0x23, 0xcc, 0x32, 0x66, 0x63, 0x19, 0xec, 0xe6, 0xbd, 0xee, 0x05,
-  0xce, 0x66, 0xe2, 0xfd, 0x6f, 0xac, 0xf3, 0xa3, 0xba, 0xcb, 0xfa, 0xb0,
-  0x39, 0x47, 0x03, 0xee, 0xe3, 0xb5, 0xdc, 0xae, 0xe6, 0x26, 0xb4, 0x42,
-  0xdc, 0x9d, 0xa0, 0x8f, 0x07, 0x02, 0xbc, 0x1a, 0x6a, 0x1a, 0x9c, 0xb5,
-  0xc4, 0xc5, 0xcd, 0x38, 0xca, 0x88, 0x35, 0x27, 0x4d, 0x1c, 0x53, 0x5c,
-  0x6c, 0x91, 0x63, 0xe5, 0xaa, 0x6c, 0xdf, 0xb6, 0x62, 0x2c, 0x66, 0x13,
-  0xbb, 0xc0, 0x7e, 0xa2, 0xe7, 0xa1, 0x5c, 0xb8, 0x6a, 0xa9, 0x43, 0x8d,
-  0x88, 0xa0, 0x84, 0xaf, 0xb3, 0x8a, 0xaf, 0x81, 0x25, 0x30, 0x29, 0x95,
-  0xd4, 0xc1, 0xb9, 0xe0, 0x38, 0x48, 0x80, 0xa9, 0x68, 0x51, 0x32, 0x2c,
-  0xf1, 0x40, 0x7b, 0xaf, 0x0c, 0xbf, 0xf7, 0xbb, 0xae, 0xa2, 0xc0, 0xfb,
-  0x0a, 0x0c, 0x21, 0x59, 0xdf, 0x95, 0xfa, 0xb1, 0x39, 0x44, 0x40, 0xf3,
-  0x5f, 0x86, 0xaf, 0x82, 0xd2, 0xe2, 0x99, 0xc5, 0x9f, 0xf3, 0x92, 0xb7,
-  0xc1, 0x09, 0xa5, 0x44, 0x05, 0x5b, 0x76, 0x51, 0xba, 0x68, 0xc0, 0x26,
-  0x2e, 0x61, 0x07, 0x39, 0xa7, 0x76, 0xc7, 0x06, 0xb7, 0xa5, 0x87, 0x80,
-  0xfa, 0xba, 0x26, 0xe9, 0x78, 0x4d, 0x88, 0xb1, 0x81, 0x1b, 0xf8, 0xf2,
-  0x9f, 0x6c, 0x2d, 0x2f, 0x2d, 0xa5, 0xef, 0x1d, 0x70, 0x7b, 0x66, 0xb3,
-  0xcd, 0x27, 0x5b, 0x62, 0xc4, 0x70, 0x95, 0x7d, 0xe1, 0xc8, 0xfa, 0x4f,
-  0x2a, 0x8f, 0x41, 0xe9, 0x8f, 0xce, 0xca, 0x45, 0x35, 0xc5, 0xf2, 0xd1,
-  0xbc, 0x13, 0x14, 0x28, 0x1f, 0xc2, 0xb4, 0xf4, 0x82, 0x44, 0xae, 0x64,
-  0xb6, 0x56, 0xcb, 0x84, 0x14, 0xb2, 0x70, 0x95, 0xd3, 0x2d, 0xd5, 0x2a,
-  0xc2, 0xbb, 0xad, 0xb2, 0xdd, 0x6a, 0xd3, 0x68, 0xc9, 0xd3, 0xea, 0x07,
-  0xd2, 0x19, 0x02, 0x11, 0x55, 0x62, 0x6a, 0xe0, 0x65, 0x88, 0xa5, 0x60,
-  0x3a, 0x0d, 0x76, 0x99, 0x2e, 0x45, 0x86, 0xe0, 0x38, 0x8e, 0x99, 0x38,
-  0x12, 0x99, 0x82, 0x9a, 0x9b, 0x6a, 0xc3, 0x00, 0x9a, 0xba, 0xc4, 0x01,
-  0x49, 0x70, 0x4c, 0x56, 0x71, 0x22, 0xd6, 0x84, 0x9a, 0xb8, 0x4f, 0x67,
-  0xd5, 0x4d, 0x27, 0xce, 0x99, 0xae, 0x23, 0xe6, 0x1d, 0x09, 0x34, 0x02,
-  0x87, 0x5b, 0x60, 0xa9, 0xe0, 0x43, 0xdd, 0x16, 0xc3, 0xb1, 0xcb, 0xf2,
-  0x8d, 0x89, 0xee, 0xae, 0x38, 0x5d, 0xa0, 0xad, 0x27, 0x68, 0x98, 0xd8,
-  0xc8, 0x8e, 0x28, 0x02, 0x51, 0x6f, 0xfb, 0x7c, 0x4b, 0xf6, 0xbf, 0x55,
-  0xab, 0x88, 0xc0, 0xa5, 0x20, 0xb8, 0x58, 0x62, 0x8d, 0x10, 0x21, 0x72,
-  0x9b, 0xce, 0xdb, 0x05, 0xdc, 0x1e, 0xa0, 0x4c, 0x45, 0xfd, 0x85, 0x84,
-  0x75, 0xbe, 0xee, 0xab, 0x01, 0x1f, 0x75, 0x5a, 0xd5, 0xc3, 0x3b, 0x90,
-  0x54, 0x80, 0xa8, 0x7f, 0x2d, 0xdd, 0x7c, 0xed, 0x1f, 0x6a, 0x34, 0xe7,
-  0x9d, 0xc2, 0x76, 0x8b, 0x94, 0xfb, 0xd1, 0xde, 0xce, 0xce, 0xb7, 0x83,
-  0xe8, 0x89, 0x54, 0xb6, 0xdc, 0xfd, 0xba, 0x73, 0x85, 0x64, 0x81, 0xb0,
-  0xc5, 0xaa, 0x7f, 0xc6, 0x77, 0xe0, 0xf5, 0xba, 0x68, 0x98, 0x11, 0x6b,
-  0x8a, 0xb3, 0x55, 0x60, 0x5b, 0x96, 0xc5, 0x5f, 0xb3, 0x55, 0x30, 0x63,
-  0x37, 0x53, 0xb0, 0x17, 0x88, 0xa3, 0xe1, 0xdd, 0xbb, 0xa1, 0xdf, 0xd8,
-  0x9b, 0x6d, 0x1b, 0x8b, 0x7e, 0x3a, 0xf2, 0x68, 0xcb, 0x1b, 0x3e, 0xfe,
-  0x93, 0x55, 0x81, 0x93, 0xcc, 0x8e, 0x41, 0x29, 0x97, 0xc2, 0xb6, 0x75,
-  0xe8, 0x0c, 0x82, 0x13, 0xe1, 0x2b, 0x3b, 0x56, 0xb5, 0xe9, 0x8c, 0xda,
-  0x07, 0x10, 0x21, 0x35, 0x1c, 0x4f, 0xe2, 0x0a, 0x56, 0xfe, 0x48, 0x0a,
-  0x13, 0xfa, 0x97, 0x63, 0xe2, 0x15, 0x0f, 0xad, 0x8c, 0x14, 0x78, 0xdc,
-  0x9a, 0x93, 0x65, 0xad, 0x4a, 0xf4, 0x54, 0x18, 0x98, 0x61, 0x0a, 0xc7,
-  0x1c, 0x19, 0xb6, 0x69, 0xa9, 0x05, 0x0d, 0x78, 0x20, 0xd2, 0x34, 0xf8,
-  0xed, 0x9c, 0x1f, 0x98, 0x3f, 0x0c, 0xda, 0x6a, 0x07, 0x87, 0xc9, 0xc1,
-  0x1f, 0x60, 0x8a, 0x50, 0x38, 0x2a, 0xce, 0xc5, 0x9c, 0xa2, 0x80, 0x06,
-  0x47, 0x3a, 0xfd, 0x76, 0x66, 0xa9, 0x39, 0x03, 0x81, 0xa7, 0x65, 0x35,
-  0x64, 0x77, 0xe7, 0x7a, 0xb4, 0x20, 0x7e, 0x44, 0xf1, 0x00, 0xd8, 0xdd,
-  0x3a, 0xf3, 0x28, 0x7c, 0x62, 0xc9, 0x16, 0xc8, 0x7f, 0x44, 0x15, 0x96,
-  0x56, 0x78, 0x6d, 0xd8, 0x0a, 0x7c, 0x93, 0xf2, 0xe9, 0xc9, 0x3d, 0xe7,
-  0x35, 0x1e, 0x7b, 0x34, 0xa4, 0x3a, 0xcf, 0x30, 0xcc, 0xfd, 0x45, 0x3c,
-  0xbd, 0xa1, 0x0b, 0x65, 0x88, 0x38, 0xe4, 0xee, 0x74, 0x4a, 0x57, 0xdf,
-  0xb1, 0x39, 0x2c, 0x06, 0xe1, 0x70, 0x69, 0x49, 0x56, 0x23, 0x27, 0x80,
-  0x55, 0xe3, 0x41, 0xac, 0x01, 0xdf, 0x11, 0x63, 0xa9, 0x83, 0xd7, 0x81,
-  0xe6, 0x98, 0x17, 0x86, 0x61, 0xf9, 0x21, 0xb1, 0x41, 0x41, 0x7e, 0x32,
-  0xa9, 0x4b, 0xf1, 0xe6, 0x74, 0xec, 0x00, 0x8d, 0xd4, 0x1d, 0x58, 0x8a,
-  0xad, 0x60, 0xcc, 0x52, 0xe1, 0xab, 0x35, 0x55, 0x6f, 0x4b, 0x81, 0xea,
-  0x96, 0x78, 0x19, 0x44, 0x83, 0x88, 0x78, 0x9b, 0x16, 0xb5, 0x24, 0x73,
-  0x6e, 0xfd, 0xcf, 0x1a, 0xb0, 0xcc, 0x18, 0x29, 0x6d, 0xdb, 0xb9, 0x46,
-  0x6e, 0x70, 0x86, 0x59, 0x58, 0xa9, 0x19, 0xc6, 0x66, 0x24, 0x3d, 0x11,
-  0x89, 0xd1, 0xa5, 0x7d, 0x5b, 0x97, 0x54, 0x38, 0x67, 0x41, 0x10, 0x29,
-  0x5e, 0x10, 0x47, 0xfb, 0xe2, 0xa7, 0x21, 0xfd, 0xfb, 0x73, 0xcb, 0x17,
-  0x58, 0x09, 0x8e, 0x85, 0x9a, 0xb4, 0x2c, 0xcc, 0xb2, 0xf0, 0xb8, 0xdc,
-  0x52, 0x37, 0x1b, 0xed, 0xc8, 0xb7, 0x65, 0x00, 0x67, 0xde, 0x19, 0x32,
-  0x60, 0x6e, 0xb9, 0xcd, 0x72, 0xab, 0x56, 0x9d, 0x4c, 0x1a, 0x71, 0xad,
-  0xc0, 0x2e, 0x90, 0xc9, 0x8d, 0x23, 0x15, 0x6b, 0x9a, 0xaa, 0x2b, 0xbb,
-  0x9e, 0xa7, 0x89, 0xf7, 0x4b, 0x86, 0x15, 0xe4, 0x89, 0xab, 0x94, 0x0f,
-  0x8c, 0x32, 0x23, 0xe2, 0x5c, 0x99, 0xbb, 0x04, 0x0f, 0x50, 0x32, 0x86,
-  0xdf, 0x76, 0xe4, 0x32, 0x10, 0x8a, 0x44, 0x2b, 0x90, 0x80, 0x4b, 0x9d,
-  0x17, 0x45, 0x7e, 0x6f, 0x67, 0x5f, 0xc3, 0x74, 0x03, 0x99, 0xc1, 0x3b,
-  0x18, 0xa9, 0xed, 0xd5, 0xb2, 0xc3, 0xf3, 0xca, 0xa1, 0xfb, 0x2d, 0x00,
-  0x83, 0x30, 0x33, 0x31, 0x04, 0xe8, 0xef, 0x0c, 0xd7, 0x00, 0x7e, 0xf5,
-  0x96, 0x47, 0x0a, 0x76, 0x05, 0x15, 0xc4, 0x96, 0xed, 0xd2, 0x0d, 0x34,
-  0x94, 0x99, 0x6f, 0x5f, 0xc4, 0xe6, 0xb6, 0x4a, 0x23, 0x73, 0xbc, 0xdb,
-  0x4c, 0x80, 0x47, 0x83, 0xb4, 0x74, 0xab, 0x0d, 0xb0, 0xc9, 0x9e, 0xcc,
-  0x29, 0xec, 0x5f, 0x1a, 0x20, 0xdd, 0x04, 0xe8, 0xef, 0xc0, 0x04, 0x63,
-  0x0e, 0xf0, 0xe4, 0x87, 0x1f, 0xa2, 0x3a, 0x2e, 0xda, 0xd6, 0xa0, 0xc6,
-  0xb4, 0x1a, 0x25, 0xed, 0x88, 0x8a, 0xf2, 0x8e, 0x53, 0x6e, 0x61, 0xe7,
-  0x1a, 0x9a, 0xc9, 0x91, 0x09, 0x50, 0xe2, 0x46, 0x2e, 0x24, 0xdc, 0x0a,
-  0xf0, 0x6a, 0x30, 0x78, 0x10, 0x16, 0x15, 0xb5, 0x1d, 0x24, 0x2e, 0x04,
-  0x66, 0xe0, 0x63, 0x51, 0x25, 0x12, 0x03, 0xe1, 0x5a, 0xe1, 0x52, 0x95,
-  0x8e, 0x62, 0xe8, 0x56, 0xba, 0xcf, 0x46, 0x5d, 0x15, 0x15, 0xda, 0x98,
-  0x6d, 0x12, 0xd5, 0x8f, 0x19, 0xe1, 0xfc, 0x4a, 0x21, 0x10, 0x36, 0x4d,
-  0x4d, 0x8b, 0x44, 0x3d, 0x37, 0xbe, 0x8e, 0x52, 0xeb, 0xbc, 0x8a, 0x9d,
-  0x07, 0x91, 0x47, 0x82, 0xcd, 0xc9, 0xe1, 0xab, 0x72, 0x76, 0x71, 0xfd,
-  0xf8, 0x78, 0x86, 0x70, 0xb7, 0xf8, 0xf1, 0x41, 0x5b, 0x40, 0xb8, 0x47,
-  0xd9, 0x83, 0xc0, 0x74, 0x87, 0x10, 0x24, 0xcd, 0xd4, 0xc1, 0x4d, 0x50,
-  0xfc, 0xa9, 0x5e, 0x04, 0x4c, 0xf3, 0xc8, 0x84, 0xf4, 0xba, 0x2a, 0x9d,
-  0x0d, 0xab, 0x62, 0x85, 0x15, 0xe2, 0x0d, 0x61, 0xe4, 0x28, 0x96, 0x8c,
-  0x2d, 0xbd, 0x8a, 0x9d, 0x7c, 0x16, 0x6d, 0x25, 0xb7, 0x98, 0x77, 0xb7,
-  0xb6, 0xe1, 0xc9, 0x6c, 0x5e, 0x96, 0xc6, 0xcd, 0x69, 0xdb, 0xb5, 0x00,
-  0x89, 0xe1, 0x90, 0x04, 0xd3, 0x21, 0x1e, 0x2b, 0x5b, 0x88, 0xf2, 0x2d,
-  0x9b, 0x97, 0xb4, 0x50, 0x86, 0x0b, 0x66, 0x3a, 0x84, 0xd1, 0x90, 0xba,
-  0x8c, 0x62, 0xa6, 0x20, 0x36, 0xc1, 0x7d, 0x7d, 0xdc, 0x2c, 0xa6, 0xb3,
-  0x09, 0x1c, 0x02, 0x55, 0x15, 0x91, 0x4f, 0x40, 0x7f, 0x9f, 0xbf, 0xbd,
-  0xdc, 0xf2, 0xe6, 0x80, 0x59, 0xde, 0xb0, 0x59, 0x59, 0xeb, 0x1d, 0x99,
-  0x19, 0x12, 0xb3, 0xaf, 0xc9, 0xfe, 0x48, 0xbc, 0x70, 0x07, 0xe2, 0x9e,
-  0x84, 0xc4, 0x27, 0x3b, 0xbb, 0x24, 0xaa, 0xed, 0xec, 0xc1, 0xea, 0xf2,
-  0x64, 0xe7, 0x89, 0x33, 0x67, 0xdb, 0x53, 0xad, 0x1b, 0x8f, 0x69, 0x9a,
-  0xdf, 0x94, 0xca, 0x7f, 0xa2, 0x75, 0x47, 0x4f, 0xde, 0xbf, 0xc7, 0x57,
-  0x21, 0x9a, 0x5b, 0x91, 0x0c, 0x15, 0x1b, 0x26, 0x18, 0xea, 0x9a, 0xa3,
-  0xe5, 0x57, 0x1c, 0xe6, 0x93, 0x55, 0x26, 0xb1, 0x50, 0xac, 0xfa, 0x22,
-  0x03, 0xa0, 0x79, 0x39, 0x84, 0x74, 0xf0, 0x18, 0x6b, 0x3a, 0x65, 0xf1,
-  0xbe, 0xc6, 0xc8, 0xac, 0x9a, 0x12, 0x03, 0x0e, 0x63, 0xbf, 0x4d, 0xbb,
-  0xb3, 0xd4, 0xbc, 0x46, 0x73, 0x7f, 0x8a, 0x7c, 0xf2, 0xa9, 0x14, 0x66,
-  0x00, 0xa9, 0x07, 0xdc, 0x0d, 0xc5, 0x76, 0x38, 0x89, 0xca, 0x9f, 0x92,
-  0x5c, 0x1d, 0x84, 0xed, 0xbc, 0x00, 0x5a, 0x65, 0xab, 0x4c, 0x96, 0x32,
-  0x28, 0xc1, 0x6c, 0x35, 0xc5, 0x5d, 0xcf, 0x61, 0x2f, 0x5c, 0x68, 0x6c,
-  0x22, 0x58, 0x73, 0x06, 0xce, 0xc0, 0x4d, 0x7b, 0x22, 0x6d, 0xab, 0xd9,
-  0x08, 0x1d, 0x8e, 0xe4, 0x39, 0x97, 0xc6, 0xca, 0x9a, 0x0d, 0x1b, 0x8d,
-  0x5c, 0xf6, 0x6c, 0x93, 0x45, 0x64, 0x57, 0xb9, 0x9a, 0xfe, 0xda, 0xe0,
-  0xa0, 0xa0, 0x4b, 0x38, 0xe9, 0xcc, 0xac, 0x1e, 0x4b, 0x4d, 0x3a, 0xd0,
-  0xce, 0x57, 0x1c, 0xbc, 0xd5, 0x68, 0xaf, 0x06, 0xff, 0xc8, 0xc7, 0x05,
-  0xf2, 0x02, 0x47, 0xb6, 0xbd, 0x80, 0x6a, 0xf0, 0xc5, 0x23, 0x6e, 0x04,
-  0x53, 0xfb, 0xf0, 0xf8, 0xa6, 0x69, 0x47, 0x5b, 0x3e, 0xbd, 0x55, 0xa6,
-  0xc8, 0xe1, 0x58, 0x6c, 0xf1, 0x00, 0x3f, 0xea, 0xca, 0x9f, 0xc6, 0xa3,
-  0x9e, 0x77, 0xa6, 0xf5, 0xe0, 0x55, 0xb0, 0x7c, 0x24, 0xbb, 0x0d, 0xea,
-  0x70, 0x1e, 0x6b, 0xaa, 0x67, 0x49, 0xe9, 0x68, 0x94, 0x5f, 0x0e, 0xa8,
-  0x19, 0xc0, 0x9e, 0x60, 0xf0, 0xc9, 0x7b, 0x58, 0xf5, 0xe9, 0x24, 0x7c,
-  0xfa, 0x64, 0xd4, 0x6d, 0x5d, 0xb8, 0xac, 0x85, 0xf8, 0xd9, 0xa9, 0x17,
-  0x23, 0x38, 0xa7, 0x1b, 0x70, 0x2a, 0x1f, 0x23, 0x26, 0x86, 0xb3, 0x13,
-  0x6b, 0x4a, 0x07, 0xe2, 0x41, 0xc9, 0xf0, 0xb6, 0x22, 0x85, 0x55, 0x6b,
-  0xd1, 0x6f, 0xac, 0xd8, 0x8c, 0x37, 0xa3, 0xf0, 0x2c, 0x5b, 0xfe, 0x49,
-  0x09, 0xd6, 0x47, 0xfc, 0xbb, 0x64, 0xb5, 0xb5, 0x16, 0x4a, 0x6d, 0x00,
-  0xe0, 0x9e, 0x2e, 0xca, 0x8b, 0xeb, 0x2e, 0x24, 0x45, 0x2b, 0x58, 0x07,
-  0x19, 0xc3, 0x2c, 0x66, 0x22, 0xd0, 0xf2, 0xb2, 0x56, 0x7b, 0xd0, 0x53,
-  0xc5, 0x62, 0x5b, 0x08, 0xe3, 0xd1, 0x98, 0xa9, 0xd7, 0xce, 0x02, 0x80,
-  0x18, 0xa9, 0x34, 0xb3, 0x5a, 0x53, 0x7a, 0xd4, 0x44, 0x8b, 0x32, 0x60,
-  0x8d, 0xfb, 0x9b, 0x7c, 0x1e, 0x1a, 0x7a, 0xda, 0x0e, 0x15, 0xba, 0xa9,
-  0x46, 0x1e, 0x1f, 0x30, 0x08, 0x9c, 0xd6, 0x1a, 0x99, 0xa9, 0x21, 0x73,
-  0x4f, 0x50, 0xe5, 0xf7, 0xaf, 0xf9, 0xc4, 0x8a, 0x63, 0xf1, 0x5d, 0xd2,
-  0x85, 0xc9, 0x28, 0x81, 0x65, 0x37, 0x5c, 0xdd, 0x88, 0xf5, 0x52, 0xa1,
-  0x4d, 0x06, 0x19, 0x24, 0x91, 0xa0, 0x62, 0x35, 0x09, 0x11, 0xbb, 0x10,
-  0x66, 0xa3, 0x6b, 0x24, 0x4c, 0x21, 0x8c, 0x10, 0x51, 0x6b, 0x2d, 0x38,
-  0x24, 0x57, 0xb3, 0x44, 0x25, 0x35, 0x2c, 0x0e, 0x3b, 0x5b, 0xd6, 0xdc,
-  0x32, 0xbf, 0x9e, 0xba, 0xf5, 0x1a, 0xbb, 0x91, 0xb5, 0xe3, 0xc2, 0x5e,
-  0xe3, 0xc3, 0x11, 0xd7, 0x62, 0xe3, 0xa8, 0x55, 0x31, 0x80, 0xaf, 0x34,
-  0x99, 0x4a, 0xea, 0x81, 0xfa, 0x56, 0xb2, 0x6d, 0x2e, 0xd0, 0x59, 0x15,
-  0xd3, 0x56, 0x23, 0x4e, 0x42, 0x28, 0xa7, 0xaa, 0x1d, 0x8f, 0xf0, 0x20,
-  0xb1, 0xe6, 0x77, 0xfa, 0x0b, 0x2b, 0x2a, 0xea, 0x26, 0xd8, 0x32, 0x6b,
-  0x53, 0x37, 0x06, 0x39, 0x0b, 0x08, 0xfd, 0xd2, 0x59, 0xb0, 0x55, 0x79,
-  0xe2, 0x8d, 0x00, 0x52, 0x50, 0x57, 0x25, 0x51, 0x87, 0x94, 0xf8, 0xb0,
-  0x6c, 0xb9, 0xe7, 0x03, 0x88, 0xfe, 0x2b, 0xa9, 0xbb, 0x62, 0x8e, 0x11,
-  0x2f, 0xcc, 0xb9, 0xd2, 0x2c, 0xe1, 0x65, 0xa6, 0x70, 0x14, 0x1d, 0xa3,
-  0x8b, 0x5a, 0x25, 0x5b, 0x21, 0xc6, 0x60, 0xa6, 0x9b, 0x4f, 0xb7, 0xa0,
-  0xb8, 0x55, 0xcb, 0xcd, 0xdd, 0x2d, 0x41, 0x5d, 0xd2, 0xf4, 0xe9, 0xce,
-  0x58, 0x04, 0xab, 0x32, 0x80, 0x4a, 0x05, 0x61, 0x0d, 0xc1, 0x4a, 0xa0,
-  0x0e, 0x11, 0x1e, 0x78, 0xa5, 0x0a, 0x89, 0xac, 0x9a, 0xcb, 0xc5, 0x63,
-  0x33, 0x57, 0x17, 0x67, 0x94, 0x44, 0xa2, 0x25, 0xbb, 0x02, 0x4a, 0x01,
-  0x13, 0xde, 0xf4, 0xd8, 0x9a, 0xdc, 0x32, 0xa7, 0x94, 0x0a, 0x48, 0x3e,
-  0x2d, 0xdf, 0x7c, 0x36, 0xe4, 0x01, 0x5f, 0x17, 0x79, 0x1b, 0xd0, 0x88,
-  0xdd, 0xb8, 0xbc, 0x06, 0x5b, 0x12, 0xe9, 0xd1, 0x09, 0x00, 0xdf, 0x63,
-  0x97, 0x55, 0xcf, 0xc3, 0xe0, 0xe6, 0x91, 0xb8, 0xc5, 0x3a, 0x26, 0x5b,
-  0xdf, 0xd2, 0x16, 0xbd, 0x1f, 0x70, 0x3c, 0x40, 0x3a, 0xbd, 0x55, 0x69,
-  0x5e, 0x60, 0x45, 0xe1, 0x07, 0x41, 0x79, 0x50, 0x11, 0x8f, 0xe8, 0x9a,
-  0x50, 0x01, 0x10, 0x4a, 0x0e, 0xdd, 0x19, 0x4a, 0x6a, 0x1d, 0xf5, 0x17,
-  0xf8, 0x9c, 0x9a, 0xe0, 0x0a, 0x58, 0x9e, 0x5c, 0x6f, 0x20, 0xa8, 0xf8,
-  0x22, 0xee, 0xce, 0x72, 0x0e, 0xc1, 0x64, 0x4b, 0xbe, 0x50, 0x81, 0xec,
-  0x6f, 0x87, 0x54, 0xd0, 0x5f, 0x3c, 0x70, 0xde, 0x6f, 0xbf, 0x0e, 0x3f,
-  0xdc, 0x27, 0x86, 0x45, 0xf7, 0x44, 0xdf, 0x96, 0xb7, 0xe1, 0xf2, 0x6d,
-  0xe3, 0xb8, 0xae, 0xe9, 0x5b, 0x48, 0x5b, 0xba, 0xf0, 0xad, 0x4b, 0xe3,
-  0xc1, 0x5d, 0x8b, 0xa9, 0x0e, 0xcd, 0xbb, 0xdb, 0x68, 0xfb, 0x3b, 0x5b,
-  0x30, 0x9f, 0x26, 0x8f, 0xe7, 0xad, 0xdc, 0xa9, 0x67, 0x25, 0x62, 0xda,
-  0x0b, 0xce, 0xe9, 0xaa, 0x6c, 0xa7, 0x54, 0xb9, 0xf2, 0x42, 0x3c, 0x61,
-  0x26, 0x1b, 0xb6, 0x27, 0xc4, 0x56, 0x35, 0x41, 0x38, 0x99, 0xbc, 0xad,
-  0xad, 0x32, 0x61, 0x8e, 0x6a, 0x83, 0xd5, 0x20, 0xaa, 0xc7, 0x4b, 0x21,
-  0xd7, 0xe2, 0xad, 0xda, 0x27, 0x0b, 0xc6, 0xd5, 0xda, 0x33, 0xdd, 0x09,
-  0xa3, 0x2c, 0xa0, 0xce, 0x12, 0x8e, 0x65, 0x91, 0x08, 0x9b, 0xd7, 0xe9,
-  0xb4, 0xc8, 0xcb, 0xfc, 0x4a, 0x6e, 0x75, 0x23, 0x4f, 0x67, 0xd2, 0xe0,
-  0x84, 0xce, 0x98, 0xdd, 0x87, 0x6d, 0x7e, 0xa1, 0x85, 0xa6, 0x24, 0x42,
-  0x96, 0x2f, 0xed, 0x05, 0xd1, 0x3a, 0x1b, 0x91, 0xd8, 0xd2, 0x58, 0x89,
-  0xa1, 0x35, 0x0e, 0x60, 0xb3, 0x70, 0x47, 0x58, 0x50, 0xde, 0xb3, 0xc7,
-  0x75, 0x35, 0xde, 0x09, 0xad, 0x4f, 0x60, 0xf6, 0xc1, 0x99, 0xd6, 0x8c,
-  0x50, 0x14, 0x1a, 0x11, 0xaf, 0xed, 0xb5, 0xee, 0xd1, 0x99, 0x88, 0x0c,
-  0x68, 0x5e, 0x98, 0x25, 0xc3, 0x5a, 0x60, 0x1c, 0x6a, 0x76, 0x72, 0x7c,
-  0xf9, 0x2a, 0x9a, 0x15, 0x31, 0x4d, 0x1f, 0xff, 0x0e, 0x49, 0xca, 0xfc,
-  0x7b, 0xdc, 0xca, 0xbb, 0x2c, 0x97, 0xbc, 0x49, 0x43, 0xf6, 0x6d, 0x0d,
-  0x77, 0x9e, 0x8e, 0xaa, 0xf7, 0xdd, 0xc9, 0xc7, 0xc8, 0xea, 0x35, 0x0b,
-  0x99, 0x82, 0xc6, 0xfb, 0x2d, 0xd3, 0xa4, 0x3a, 0xbe, 0x66, 0xf3, 0xf7,
-  0x0f, 0x4d, 0x4c, 0xb6, 0x2e, 0xb8, 0x4b, 0x54, 0xe2, 0x1c, 0xe2, 0x71,
-  0x4f, 0x25, 0x8f, 0xa6, 0xd3, 0xb9, 0xb0, 0xbe, 0xce, 0xa8, 0x3e, 0x09,
-  0xe4, 0x8b, 0x7c, 0xac, 0xde, 0x1a, 0x18, 0xfc, 0xce, 0xd0, 0x3d, 0x8b,
-  0xdc, 0xeb, 0x8a, 0xd4, 0xb3, 0x8f, 0xd7, 0x80, 0xbd, 0x35, 0x88, 0xb7,
-  0x5b, 0x4f, 0x5c, 0xb5, 0xf1, 0xaf, 0x1d, 0x3e, 0x29, 0x68, 0xc0, 0x22,
-  0x78, 0x19, 0x9e, 0x07, 0xa9, 0x16, 0x1f, 0x28, 0xab, 0x2d, 0x2a, 0x00,
-  0x07, 0x6b, 0x1b, 0x9e, 0x56, 0x83, 0xc8, 0x20, 0xa7, 0x9a, 0x7b, 0x6b,
-  0x84, 0xba, 0x90, 0xb0, 0xa2, 0x36, 0x39, 0xda, 0x70, 0x15, 0xed, 0x03,
-  0x29, 0x27, 0xc9, 0x18, 0x2c, 0xde, 0x8e, 0xb5, 0x67, 0x81, 0xca, 0x89,
-  0x1d, 0x3f, 0x0a, 0x4b, 0x89, 0x0e, 0x57, 0xdd, 0xa3, 0x8b, 0x8b, 0x84,
-  0x6f, 0x27, 0x09, 0xb2, 0xd3, 0x9b, 0xf7, 0xbf, 0x21, 0xa3, 0xdd, 0xf3,
-  0xa1, 0x37, 0xdb, 0x08, 0x03, 0x9f, 0xac, 0xf8, 0xbb, 0xce, 0x1a, 0xb4,
-  0xca, 0x0b, 0xe5, 0x09, 0x75, 0xfb, 0x05, 0xce, 0xbb, 0x92, 0x43, 0xb1,
-  0x16, 0x61, 0x9d, 0x03, 0x54, 0x98, 0x26, 0x0d, 0xac, 0x49, 0x13, 0x2b,
-  0xe1, 0x1d, 0x8d, 0xe4, 0xc6, 0x86, 0x6d, 0x57, 0xba, 0xe1, 0x34, 0xa2,
-  0xb0, 0xf9, 0x2e, 0x17, 0x28, 0x5e, 0x77, 0x29, 0x33, 0x2a, 0xf4, 0x4b,
-  0xf2, 0xb8, 0xea, 0xb3, 0xda, 0x84, 0x03, 0x19, 0x66, 0xa0, 0x82, 0x9b,
-  0x15, 0x49, 0xa3, 0x83, 0x0e, 0xbb, 0xac, 0x99, 0x0a, 0xc1, 0xcb, 0xe8,
-  0x3e, 0xd5, 0xac, 0x67, 0xad, 0x66, 0xa6, 0x2d, 0x70, 0x7a, 0xed, 0x1d,
-  0x20, 0xe6, 0x5a, 0xb8, 0xed, 0x5d, 0xa3, 0xf3, 0x35, 0x95, 0xe3, 0xca,
-  0x2f, 0x60, 0x77, 0x60, 0x97, 0x2f, 0x25, 0x67, 0xe0, 0x4c, 0xc9, 0x75,
-  0x50, 0xc1, 0x5d, 0x29, 0xce, 0x32, 0xae, 0xe0, 0xff, 0x32, 0x70, 0x9d,
-  0x16, 0x13, 0x11, 0xcc, 0x7c, 0x62, 0x22, 0xd2, 0xa7, 0xf0, 0x25, 0x0f,
-  0x2f, 0xd0, 0x31, 0x92, 0x7a, 0x2e, 0xc0, 0x63, 0x74, 0xa0, 0x15, 0xd9,
-  0x7d, 0xde, 0x00, 0x27, 0x11, 0xc3, 0x34, 0xa7, 0xe6, 0xc0, 0xcb, 0xc3,
-  0x10, 0x80, 0x71, 0x10, 0xb5, 0x8c, 0x9b, 0x74, 0xfd, 0xb8, 0x38, 0x26,
-  0x84, 0x83, 0x64, 0xae, 0xf5, 0xc5, 0x7f, 0xe1, 0xda, 0xf8, 0x19, 0x04,
-  0xcb, 0xe3, 0x3e, 0x6c, 0x2c, 0x8d, 0x66, 0x4c, 0xa5, 0xb3, 0xee, 0xa2,
-  0x35, 0xba, 0x42, 0x86, 0x31, 0xab, 0x6b, 0xc4, 0x89, 0x49, 0x96, 0x99,
-  0x76, 0x72, 0x44, 0xa3, 0x61, 0xe9, 0xe6, 0x9a, 0x06, 0xf7, 0x95, 0x5b,
-  0x81, 0xb6, 0x54, 0xe6, 0x15, 0x46, 0xd8, 0xd1, 0x51, 0x93, 0x24, 0x28,
-  0x2b, 0xc3, 0x39, 0xad, 0x21, 0x50, 0x82, 0x38, 0x26, 0x2d, 0x6f, 0xaf,
-  0x3b, 0x33, 0x39, 0x42, 0xdd, 0x60, 0x09, 0x3e, 0xb8, 0x59, 0x15, 0x12,
-  0xc5, 0xa7, 0x19, 0x52, 0x8a, 0x97, 0x52, 0x24, 0x8a, 0xdf, 0x1a, 0x0c,
-  0xb8, 0xec, 0xb8, 0x9d, 0x90, 0x75, 0x93, 0x2c, 0xd4, 0x71, 0x32, 0x29,
-  0xf2, 0x5b, 0x3a, 0x1f, 0xfc, 0x1a, 0x04, 0x51, 0x5e, 0x7d, 0x39, 0xe4,
-  0x66, 0x2c, 0xa1, 0x63, 0x20, 0x09, 0xee, 0x1d, 0xa6, 0x9f, 0xc2, 0x30,
-  0x3c, 0x35, 0x57, 0xc3, 0x9f, 0x16, 0xc1, 0xf6, 0x41, 0xa4, 0x99, 0xdd,
-  0x9f, 0xb8, 0x7b, 0xb8, 0xb8, 0x87, 0xf7, 0xb3, 0xb7, 0x34, 0xd2, 0x16,
-  0x92, 0xe8, 0x6f, 0x4e, 0x43, 0x8e, 0x2c, 0x42, 0x1a, 0xea, 0xd8, 0xf2,
-  0x1a, 0x31, 0x89, 0x20, 0xf0, 0x82, 0xa8, 0x4a, 0xee, 0x78, 0x76, 0x2c,
-  0x35, 0x95, 0x7f, 0x80, 0x4b, 0x0e, 0x7d, 0x50, 0xb4, 0x2f, 0x14, 0x2b,
-  0xc6, 0x36, 0x31, 0x6c, 0xcd, 0x3c, 0x42, 0x72, 0x2c, 0xf2, 0x05, 0x82,
-  0xb8, 0x88, 0x64, 0xda, 0xb7, 0xbb, 0xcb, 0xd9, 0x50, 0xa9, 0x11, 0x96,
-  0x70, 0xde, 0x1e, 0xa4, 0x04, 0x22, 0x98, 0x49, 0x2b, 0x23, 0xfc, 0x31,
-  0x8c, 0xc2, 0x8d, 0xba, 0xcc, 0x62, 0xc8, 0x25, 0x4f, 0x4a, 0x6f, 0xfc,
-  0x93, 0xc8, 0x0b, 0x97, 0x25, 0xc5, 0x68, 0x14, 0x21, 0xcf, 0xc0, 0xd0,
-  0x46, 0xd1, 0x31, 0x5b, 0xf2, 0x3a, 0x94, 0x07, 0x0b, 0x2d, 0xc4, 0x1c,
-  0x53, 0x4d, 0x55, 0x97, 0xe0, 0x5e, 0xd5, 0xc4, 0xe2, 0x48, 0xb4, 0x01,
-  0x17, 0xe4, 0xee, 0x6a, 0x12, 0x75, 0x2a, 0x52, 0x65, 0x25, 0xa9, 0xc3,
-  0x91, 0x62, 0x5c, 0xb9, 0x8f, 0x1c, 0x3c, 0xd1, 0x2b, 0x6f, 0x53, 0x1e,
-  0x88, 0x57, 0x4c, 0x94, 0x9c, 0x0e, 0x88, 0x21, 0x8c, 0x26, 0xf2, 0x0f,
-  0x0d, 0x82, 0xdf, 0xf7, 0x3f, 0xdf, 0xb1, 0x90, 0x1f, 0x4e, 0x19, 0x0e,
-  0x9f, 0x41, 0x06, 0x6d, 0xc7, 0x3d, 0x83, 0xd4, 0xe2, 0xbc, 0x72, 0x8f,
-  0x36, 0xc1, 0x30, 0x9f, 0x8f, 0x9e, 0xd6, 0x0c, 0x88, 0x59, 0x35, 0x5f,
-  0xb8, 0xec, 0x71, 0xd3, 0x0a, 0xa2, 0x37, 0x97, 0xa7, 0xaf, 0xa3, 0x35,
-  0xea, 0x00, 0xbe, 0xab, 0x7f, 0xf5, 0x9f, 0x51, 0x0a, 0xe8, 0x8b, 0x93,
-  0x93, 0x31, 0x54, 0x02, 0x75, 0x85, 0xb6, 0x5c, 0xfa, 0x92, 0xbd, 0x02,
-  0x12, 0x24, 0x85, 0x80, 0x34, 0x7a, 0x12, 0x22, 0xad, 0x08, 0x3c, 0xe7,
-  0xab, 0xf1, 0x4b, 0x89, 0x96, 0x41, 0xc6, 0xe5, 0xce, 0x68, 0x51, 0x73,
-  0x70, 0xa5, 0x65, 0xd2, 0x0a, 0xc9, 0x58, 0x6a, 0x50, 0xab, 0x63, 0x29,
-  0x8a, 0x31, 0xc4, 0x77, 0x05, 0x57, 0x5e, 0x9b, 0xe9, 0x4d, 0x93, 0x02,
-  0x9e, 0x98, 0x05, 0x4d, 0xb5, 0x71, 0xdc, 0xa6, 0x88, 0x2b, 0x6b, 0x25,
-  0x0b, 0x6a, 0x31, 0x16, 0xc7, 0x0e, 0x4d, 0xcb, 0xcf, 0x66, 0x79, 0x01,
-  0xd7, 0x50, 0x80, 0xcc, 0xc1, 0x68, 0x52, 0x2b, 0xc4, 0x5d, 0xf0, 0xf0,
-  0x1e, 0xda, 0x47, 0xe9, 0xfe, 0x26, 0x97, 0x98, 0x07, 0x2c, 0x33, 0x73,
-  0x25, 0xf1, 0xb3, 0xc3, 0xfd, 0x23, 0x80, 0x0e, 0x42, 0x10, 0x9e, 0x95,
-  0x84, 0x1b, 0xd5, 0xe5, 0xc0, 0x71, 0xe5, 0x8f, 0x24, 0x97, 0x67, 0x20,
-  0xf6, 0x4d, 0xda, 0x9c, 0xa3, 0xf4, 0x7a, 0x1d, 0xe2, 0x51, 0xa7, 0xd2,
-  0xc1, 0x23, 0x7a, 0x5c, 0xdf, 0xe8, 0x8a, 0x3f, 0xad, 0xe9, 0x1b, 0x44,
-  0x6d, 0x1f, 0xab, 0x6a, 0xf8, 0x9a, 0xaf, 0x5a, 0x33, 0x12, 0xda, 0x06,
-  0x6e, 0x83, 0x40, 0xd7, 0x78, 0xdb, 0x72, 0x99, 0x3c, 0xa6, 0x52, 0xd4,
-  0x93, 0x7f, 0x78, 0x42, 0xff, 0xad, 0xd2, 0x71, 0x4e, 0x23, 0x55, 0x29,
-  0xb2, 0x33, 0x48, 0xf0, 0x7b, 0x24, 0x16, 0x98, 0x9c, 0x99, 0xeb, 0x43,
-  0x21, 0xfe, 0x4f, 0x59, 0xcd, 0x72, 0x86, 0x73, 0xb0, 0xb0, 0x97, 0xc2,
-  0x6e, 0xf3, 0x7f, 0xfc, 0xb3, 0xed, 0x09, 0xfd, 0xe9, 0x67, 0x51, 0x5f,
-  0x24, 0x84, 0xd3, 0x87, 0x33, 0x1a, 0x29, 0x95, 0x1e, 0xd0, 0x8d, 0x37,
-  0x8d, 0x13, 0x26, 0x64, 0x8a, 0x72, 0xa4, 0x5a, 0x90, 0xea, 0x12, 0x00,
-  0xa0, 0x57, 0xb1, 0x8e, 0xcd, 0xee, 0x01, 0xe0, 0x6b, 0x04, 0xf5, 0x29,
-  0x5d, 0x21, 0xe4, 0xc8, 0xc0, 0x79, 0x66, 0xeb, 0x30, 0x6e, 0x2c, 0xe2,
-  0x59, 0xe1, 0x53, 0x2c, 0x70, 0x99, 0x43, 0x4d, 0xc5, 0x84, 0x8e, 0xf1,
-  0xf3, 0x4d, 0x73, 0x2a, 0x45, 0x4e, 0xda, 0xf8, 0x0b, 0xb2, 0xd1, 0x1a,
-  0x35, 0xfa, 0x0f, 0x2e, 0x15, 0x5f, 0xdd, 0xe7, 0xff, 0x1c, 0xb1, 0xdf,
-  0x06, 0x8c, 0x78, 0x98, 0x0b, 0x5c, 0xe3, 0xbb, 0x4f, 0x76, 0x59, 0xef,
-  0xee, 0xb5, 0x41, 0x2a, 0xb1, 0x02, 0xb6, 0xe7, 0x2e, 0x0e, 0x7c, 0x0d,
-  0xdc, 0x43, 0xbd, 0x3b, 0xee, 0x65, 0xc0, 0x57, 0xc2, 0x3f, 0x47, 0xfc,
-  0xef, 0x4f, 0xbb, 0xc3, 0x67, 0x3f, 0xbb, 0x5e, 0x3f, 0xd9, 0x7d, 0xf7,
-  0xc9, 0x5e, 0xaf, 0x13, 0xc7, 0x92, 0x4d, 0x13, 0x2b, 0x03, 0x1f, 0x74,
-  0x05, 0x9f, 0xa5, 0x2c, 0x9e, 0x44, 0x2e, 0xa8, 0x8e, 0xe8, 0x01, 0xae,
-  0x80, 0xb7, 0xd7, 0x76, 0x53, 0xb1, 0xda, 0xf2, 0x01, 0x98, 0x9d, 0xb0,
-  0xc4, 0x55, 0x10, 0x80, 0xaa, 0x15, 0x9f, 0xa0, 0x64, 0x4a, 0x34, 0x87,
-  0xd9, 0x0c, 0x5b, 0xe6, 0x49, 0xc4, 0xe1, 0xcf, 0x1e, 0xe8, 0xde, 0x13,
-  0x7c, 0x81, 0x91, 0x73, 0x35, 0x99, 0x34, 0x69, 0x15, 0xf3, 0x24, 0x47,
-  0x65, 0xd3, 0x49, 0x00, 0x9c, 0xcc, 0xb0, 0xd5, 0xa5, 0xd0, 0x78, 0x1d,
-  0xc2, 0xd3, 0xbc, 0xd6, 0x23, 0xc2, 0x49, 0x16, 0x62, 0xf7, 0xe7, 0xe7,
-  0x0c, 0xb8, 0x40, 0x0c, 0x7a, 0x33, 0xec, 0xb8, 0xf7, 0x9b, 0xa7, 0x27,
-  0xd6, 0x19, 0x05, 0x45, 0x4c, 0x15, 0xd5, 0xd3, 0x41, 0xe7, 0x48, 0xad,
-  0xf0, 0x04, 0xc2, 0x6c, 0x0b, 0x9a, 0x46, 0x92, 0x7d, 0x9c, 0xbf, 0x27,
-  0xc4, 0x4f, 0x0a, 0x5f, 0x77, 0x11, 0x01, 0xae, 0x92, 0x3b, 0x72, 0xbd,
-  0xab, 0x76, 0x1a, 0xf7, 0x68, 0xab, 0x2b, 0x54, 0x2f, 0x6c, 0xcb, 0x52,
-  0x7e, 0x34, 0x84, 0x26, 0x2a, 0x05, 0x24, 0x11, 0xb6, 0x31, 0x2d, 0x53,
-  0x9f, 0xcc, 0xd6, 0xc7, 0xa4, 0xbb, 0x3a, 0x52, 0x03, 0x87, 0xbc, 0x91,
-  0xcc, 0xcb, 0x64, 0xf4, 0x5f, 0x4a, 0x7e, 0xb5, 0x2d, 0x1a, 0xc6, 0x2d,
-  0x0f, 0x60, 0x0d, 0xb8, 0x09, 0x71, 0x05, 0xf5, 0xf2, 0x52, 0x02, 0xe5,
-  0xee, 0xea, 0x37, 0xb9, 0x39, 0x95, 0x9a, 0xa5, 0xd4, 0x8a, 0xc3, 0x8f,
-  0xdd, 0x65, 0x21, 0x99, 0x89, 0x4d, 0x32, 0x91, 0x2c, 0x45, 0xe7, 0x94,
-  0x80, 0x03, 0x38, 0x97, 0xfc, 0x21, 0x7a, 0xbc, 0x0d, 0x3f, 0xe6, 0xee,
-  0xc1, 0x9a, 0xbe, 0x8d, 0xf1, 0x18, 0xbb, 0x9b, 0x82, 0x3b, 0x09, 0x3a,
-  0x7e, 0x7d, 0xbe, 0x1d, 0x1a, 0x18, 0x1c, 0x89, 0x52, 0x37, 0xcf, 0x10,
-  0x21, 0x71, 0xdd, 0xc2, 0x28, 0xc5, 0x3b, 0xd0, 0x23, 0x46, 0x31, 0xec,
-  0x09, 0xb4, 0x23, 0x89, 0xf1, 0x41, 0x73, 0x8f, 0xc2, 0x25, 0x3d, 0xaf,
-  0x57, 0x39, 0x60, 0xc3, 0x51, 0xf4, 0x62, 0x79, 0x53, 0x90, 0x4c, 0xf3,
-  0x48, 0x9a, 0x3b, 0x3d, 0x25, 0xcf, 0x38, 0x46, 0x1b, 0x54, 0x8b, 0xff,
-  0x0d, 0xf3, 0xad, 0x39, 0x74, 0xfb, 0xc9, 0xce, 0x6e, 0x93, 0x18, 0x6a,
-  0xd5, 0xae, 0x0b, 0xd4, 0x4f, 0xac, 0x50, 0xab, 0x2c, 0x8a, 0xf6, 0x3e,
-  0xdd, 0xfd, 0x74, 0x7b, 0x77, 0x67, 0xf4, 0x64, 0xb4, 0x17, 0xa6, 0x8c,
-  0x91, 0xac, 0x7e, 0x87, 0x7a, 0xf4, 0x1c, 0xbc, 0xd1, 0x1d, 0xef, 0xc0,
-  0xfa, 0x1e, 0x35, 0xc7, 0x91, 0x19, 0xee, 0x13, 0x98, 0x5e, 0xfc, 0x0d,
-  0x1e, 0x73, 0x68, 0x86, 0xf3, 0xfd, 0x5b, 0xed, 0x80, 0x8e, 0x22, 0x22,
-  0x3c, 0x14, 0x95, 0xf9, 0x56, 0x48, 0x4c, 0x5c, 0x4d, 0x52, 0x92, 0x59,
-  0x2a, 0xae, 0xed, 0xc4, 0x29, 0xb6, 0x24, 0xc7, 0x1a, 0x34, 0x8a, 0x04,
-  0xa6, 0x07, 0x05, 0xe2, 0xba, 0x1c, 0x46, 0x32, 0x7c, 0xc1, 0x5d, 0x09,
-  0xf0, 0x3e, 0x24, 0x1c, 0x32, 0x95, 0x84, 0x4f, 0x80, 0x7b, 0xd0, 0x9d,
-  0x8f, 0x3a, 0x19, 0xdf, 0x58, 0xc2, 0x69, 0xdc, 0x19, 0x49, 0xa8, 0xa1,
-  0x11, 0xa2, 0xfb, 0xc6, 0x12, 0xd1, 0xe2, 0xd1, 0x2e, 0xf4, 0x03, 0xa1,
-  0x54, 0x11, 0x04, 0x59, 0xd4, 0xe2, 0x79, 0x77, 0x81, 0x55, 0xa5, 0x0e,
-  0x9d, 0xde, 0xef, 0xb8, 0xe2, 0x45, 0xb0, 0x7b, 0x57, 0x94, 0x3c, 0x6f,
-  0x67, 0x7d, 0x34, 0x84, 0xed, 0x11, 0x64, 0x2f, 0xa1, 0x85, 0xbd, 0xff,
-  0x3f, 0xd1, 0xc2, 0xde, 0xff, 0xa5, 0x85, 0xff, 0x22, 0x5a, 0x78, 0xde,
-  0xa0, 0x05, 0x28, 0x0a, 0x74, 0xe9, 0xb0, 0x6a, 0xf1, 0x28, 0x45, 0x2c,
-  0xd9, 0x5d, 0xc9, 0x91, 0xfc, 0xa9, 0x24, 0x7b, 0x35, 0x0c, 0xf1, 0xa6,
-  0x85, 0x6a, 0x65, 0xac, 0xc5, 0x62, 0xd5, 0x2a, 0x69, 0x6d, 0x85, 0xb8,
-  0x54, 0xb5, 0xa8, 0x7c, 0x2a, 0x81, 0xd9, 0x14, 0x0c, 0x74, 0x47, 0xe0,
-  0x21, 0x25, 0xee, 0x93, 0x63, 0x7d, 0x71, 0xf9, 0x76, 0x13, 0xd8, 0xb6,
-  0x0b, 0xf8, 0x2a, 0x38, 0x55, 0x72, 0x48, 0x52, 0xec, 0xb2, 0x55, 0xda,
-  0x74, 0xaf, 0x3d, 0x65, 0x00, 0x35, 0x3d, 0x3a, 0x61, 0xee, 0x7c, 0x6d,
-  0x58, 0x50, 0x14, 0xce, 0xd4, 0x66, 0xb6, 0x4e, 0xc4, 0xd6, 0x42, 0xf4,
-  0x32, 0xc7, 0xb7, 0x62, 0xcb, 0x45, 0x9b, 0xb8, 0x10, 0x59, 0xdd, 0xe3,
-  0x65, 0x09, 0xfa, 0x92, 0xeb, 0xb4, 0x35, 0x61, 0x48, 0x2a, 0x12, 0xb9,
-  0x28, 0xcf, 0xa5, 0x56, 0xe1, 0xca, 0x12, 0x43, 0x9b, 0x83, 0xd4, 0x5d,
-  0xc1, 0x9c, 0xda, 0x8a, 0x62, 0x29, 0x1d, 0xf1, 0xc0, 0x1a, 0x45, 0x46,
-  0x65, 0x8d, 0x66, 0xd0, 0x58, 0x3b, 0x17, 0xa9, 0xbd, 0x4a, 0xa2, 0xde,
-  0x36, 0x47, 0x20, 0x35, 0xb9, 0xfe, 0xc5, 0x45, 0x92, 0xfe, 0x3b, 0x56,
-  0x49, 0xfb, 0xea, 0x0c, 0x08, 0x0c, 0x97, 0xa9, 0x35, 0xa3, 0x75, 0x7e,
-  0xda, 0x35, 0x3b, 0xbf, 0xce, 0x57, 0xdb, 0x9c, 0x56, 0x57, 0x3c, 0x4d,
-  0xf7, 0xc4, 0x14, 0x41, 0xc3, 0x0f, 0x44, 0x7d, 0xaa, 0x6e, 0x7e, 0xe8,
-  0xb8, 0x69, 0xf2, 0x74, 0x0f, 0x6b, 0x84, 0x70, 0x8d, 0x14, 0x1e, 0x65,
-  0xf5, 0xce, 0x0e, 0xf0, 0xc8, 0x2e, 0xba, 0xaa, 0x05, 0x32, 0xe7, 0xb6,
-  0xc1, 0xe9, 0x3f, 0xb7, 0x8b, 0xb0, 0x79, 0xd5, 0xf6, 0x10, 0x5d, 0xd4,
-  0xa6, 0xd2, 0x61, 0xf4, 0x6b, 0x6d, 0xde, 0xee, 0x68, 0x87, 0x04, 0x2c,
-  0xfe, 0x0d, 0x7a, 0xde, 0x3e, 0x5b, 0x15, 0x7e, 0xfe, 0xa2, 0x85, 0x8f,
-  0x6c, 0x49, 0x09, 0x1e, 0xaa, 0x50, 0x11, 0xb9, 0xf9, 0x7d, 0x1b, 0x99,
-  0x01, 0x40, 0xf8, 0xd8, 0x79, 0xf5, 0x99, 0xae, 0xc7, 0xc6, 0x49, 0xab,
-  0x00, 0x1a, 0x87, 0xc3, 0xdb, 0xf1, 0xf2, 0xee, 0xce, 0xe7, 0x3b, 0x9d,
-  0x29, 0x40, 0x60, 0xd0, 0x41, 0x9d, 0x13, 0x07, 0x5c, 0x25, 0xe8, 0x5e,
-  0xb1, 0x86, 0x8d, 0xd8, 0xe0, 0xc4, 0xbe, 0xd3, 0xed, 0x7d, 0xda, 0x1c,
-  0xbe, 0xdf, 0xd6, 0x35, 0xd8, 0x1a, 0x44, 0x72, 0xe8, 0xe3, 0xca, 0x55,
-  0x25, 0x37, 0x8a, 0x3d, 0x3c, 0x7b, 0xf3, 0xe6, 0xf8, 0xf0, 0xd2, 0xea,
-  0x61, 0x7b, 0x5b, 0x6d, 0x97, 0xee, 0xe7, 0x11, 0x9c, 0x65, 0x00, 0xbc,
-  0x38, 0x66, 0xe4, 0x0b, 0x2d, 0x1e, 0x0d, 0xfe, 0xd2, 0x41, 0x9c, 0xbb,
-  0xa3, 0xdd, 0x60, 0xab, 0x96, 0x36, 0xd2, 0x8a, 0xe3, 0xf5, 0xe7, 0x9d,
-  0xb8, 0xec, 0xd6, 0xa7, 0xcc, 0xd9, 0xa4, 0xda, 0xfa, 0x2c, 0x5b, 0x71,
-  0xec, 0xb8, 0x0c, 0x3a, 0x84, 0x02, 0x6b, 0x09, 0x23, 0x37, 0xb8, 0x59,
-  0xad, 0xb0, 0x2c, 0x41, 0xe0, 0x18, 0x88, 0x2b, 0x13, 0x6e, 0x08, 0x1e,
-  0x1d, 0x0b, 0x13, 0xe2, 0xb2, 0x2f, 0x68, 0xdb, 0xe6, 0x16, 0x2b, 0x9d,
-  0x56, 0x5a, 0x8b, 0x09, 0xd8, 0x8c, 0xd0, 0x62, 0x5d, 0x6c, 0x9e, 0x62,
-  0xc9, 0x52, 0x2f, 0xad, 0xfb, 0x8e, 0x7a, 0x8d, 0x97, 0xd4, 0x11, 0x42,
-  0x5e, 0x4b, 0xc1, 0xa9, 0x73, 0x07, 0xa5, 0xb6, 0xed, 0xb6, 0x75, 0x2e,
-  0x62, 0xb8, 0x23, 0x54, 0xd2, 0xd9, 0xea, 0x5c, 0x68, 0xae, 0xda, 0x04,
-  0x25, 0x2a, 0x5b, 0x83, 0x73, 0xd5, 0x57, 0x67, 0xf1, 0x3f, 0xca, 0x28,
-  0x98, 0x54, 0xbb, 0xcd, 0x49, 0x12, 0x03, 0x16, 0x67, 0x42, 0x46, 0xba,
-  0x56, 0x8e, 0x82, 0xf2, 0xda, 0x21, 0x5c, 0x4d, 0x1e, 0xc1, 0xf1, 0x62,
-  0xe5, 0x46, 0xec, 0xa5, 0x8f, 0x42, 0x78, 0xb9, 0x08, 0x00, 0xb1, 0x10,
-  0xae, 0x05, 0xcd, 0xfd, 0x2f, 0x87, 0xf0, 0xb2, 0xe2, 0xa8, 0x92, 0x96,
-  0xa3, 0x18, 0xa5, 0x5f, 0xac, 0xab, 0x57, 0x07, 0x1b, 0x78, 0xd9, 0x38,
-  0x1d, 0x5a, 0x53, 0x2b, 0x2f, 0xb6, 0xe7, 0x10, 0x19, 0x39, 0x59, 0x24,
-  0x9f, 0x1b, 0x22, 0x63, 0x07, 0x76, 0x90, 0x55, 0x0f, 0x05, 0x51, 0x50,
-  0xd3, 0x2a, 0xf0, 0xa9, 0x0d, 0x7a, 0xe1, 0x63, 0x0d, 0xa5, 0xa6, 0x8c,
-  0xd6, 0xef, 0xd2, 0x6a, 0x64, 0xd1, 0x49, 0xd6, 0xc2, 0xbf, 0xe1, 0x27,
-  0x80, 0x52, 0xa3, 0x7c, 0x5d, 0xfc, 0xdd, 0xc2, 0xea, 0xc3, 0xca, 0x8b,
-  0x6c, 0x7a, 0x52, 0x42, 0x61, 0x7c, 0x18, 0xa5, 0x96, 0x16, 0x58, 0x24,
-  0x17, 0x21, 0xed, 0x07, 0xce, 0x26, 0x07, 0xdd, 0x2a, 0x99, 0xb9, 0x45,
-  0x65, 0xa9, 0x94, 0xb5, 0x3a, 0x68, 0xa8, 0x74, 0xdf, 0x6e, 0xce, 0xaa,
-  0x0a, 0x32, 0x11, 0x48, 0x3c, 0x1b, 0xb2, 0xb8, 0x02, 0x40, 0x58, 0x6b,
-  0x55, 0x90, 0x2b, 0xaa, 0x70, 0x94, 0x4c, 0x89, 0xf5, 0xe6, 0xdc, 0x16,
-  0xb5, 0x50, 0xbd, 0x5a, 0x06, 0x43, 0x87, 0x0b, 0xdb, 0x5d, 0x42, 0x39,
-  0x1d, 0x25, 0x51, 0x8f, 0x11, 0x63, 0x7b, 0x21, 0x80, 0x8a, 0xb8, 0xa6,
-  0xdc, 0xab, 0x0c, 0xf0, 0x4c, 0x43, 0x75, 0x63, 0xed, 0xb0, 0xc3, 0x18,
-  0x7b, 0x55, 0xf3, 0x05, 0x6f, 0xd9, 0xe6, 0xdb, 0x2c, 0x7d, 0x8f, 0xab,
-  0xa0, 0x0d, 0xbb, 0xe7, 0xe6, 0xfd, 0xc8, 0xa8, 0x76, 0x9f, 0xef, 0x8d,
-  0x76, 0x3f, 0xfd, 0x7c, 0x44, 0xaa, 0xd7, 0x6e, 0x6d, 0x74, 0x08, 0x92,
-  0xe0, 0xb0, 0x86, 0xb0, 0x9d, 0x8e, 0x4b, 0xb4, 0xcb, 0x41, 0x17, 0x76,
-  0xb0, 0x78, 0x18, 0x05, 0xe1, 0x79, 0xad, 0x2e, 0x34, 0x84, 0xaf, 0xd9,
-  0xf2, 0x30, 0x30, 0xb6, 0x2b, 0xa9, 0x41, 0x3b, 0xe8, 0xaa, 0x95, 0x2a,
-  0x31, 0x1c, 0x65, 0x58, 0x22, 0x75, 0x4d, 0x65, 0xec, 0xf5, 0x75, 0x53,
-  0x5d, 0xff, 0xff, 0x89, 0xe3, 0xae, 0x49, 0xdd, 0xec, 0xdc, 0x77, 0xc7,
-  0x50, 0xca, 0x28, 0x5b, 0x5d, 0x5c, 0xa9, 0x96, 0x7a, 0x76, 0x71, 0xa9,
-  0x79, 0x4e, 0xae, 0x08, 0xf6, 0xc8, 0x45, 0x04, 0x20, 0x00, 0x49, 0x2f,
-  0x97, 0xca, 0x65, 0xbc, 0x5a, 0x73, 0x28, 0xcc, 0x6a, 0xc9, 0x88, 0xc1,
-  0x1d, 0x8a, 0x36, 0x5d, 0xe2, 0x4d, 0x58, 0xf2, 0x18, 0x3e, 0x15, 0xbc,
-  0x06, 0x1b, 0xa3, 0x14, 0x7d, 0xb6, 0xe6, 0xf8, 0xb5, 0x3f, 0xfd, 0xc9,
-  0xb3, 0xa8, 0x31, 0xc7, 0xed, 0x6b, 0xa1, 0x1d, 0x28, 0x72, 0xcf, 0xbc,
-  0x03, 0x41, 0xf2, 0xa8, 0xa3, 0xde, 0xfe, 0x4f, 0x88, 0xee, 0xff, 0x79,
-  0xf8, 0x13, 0xfd, 0xf9, 0x73, 0xcf, 0x5d, 0x03, 0x50, 0xa8, 0xc4, 0x7a,
-  0xea, 0x26, 0x2f, 0x1b, 0x84, 0x52, 0x64, 0x95, 0x2b, 0xd3, 0x0b, 0xcc,
-  0x01, 0x0e, 0xfa, 0xc0, 0x41, 0x94, 0x54, 0x43, 0x9f, 0x97, 0x1e, 0x5b,
-  0x0a, 0xb2, 0xd4, 0xbe, 0x20, 0x4a, 0x71, 0x6b, 0x89, 0x64, 0xf7, 0xd8,
-  0x32, 0x09, 0xf1, 0xe2, 0xc0, 0x4c, 0xa5, 0x6c, 0x0a, 0xbe, 0x17, 0xb6,
-  0x13, 0x5b, 0xa6, 0xb2, 0xdc, 0x3f, 0x8c, 0x50, 0xa5, 0x66, 0x6a, 0xf9,
-  0x60, 0xc3, 0x65, 0x56, 0x71, 0xc0, 0x79, 0x5c, 0xa2, 0x52, 0x81, 0x44,
-  0x75, 0x8a, 0x7f, 0x3c, 0x71, 0x51, 0x41, 0x69, 0xc6, 0xe6, 0x73, 0x43,
-  0x1f, 0x28, 0xd2, 0xf2, 0x96, 0x67, 0xa8, 0xb9, 0x7f, 0x91, 0x24, 0xa8,
-  0x6e, 0x04, 0xfa, 0x3e, 0x46, 0x66, 0xe9, 0x29, 0x1c, 0x94, 0x68, 0x08,
-  0x5a, 0xc1, 0x2d, 0xf0, 0x37, 0xe7, 0x94, 0x12, 0x34, 0x7b, 0xb5, 0xc1,
-  0x0a, 0xc8, 0x8d, 0x47, 0xfd, 0xca, 0xb3, 0x1a, 0x06, 0xb3, 0x80, 0x45,
-  0x18, 0x22, 0x4a, 0x2b, 0x68, 0x3c, 0xc4, 0xf7, 0x71, 0x21, 0xcf, 0x93,
-  0x44, 0x90, 0xa3, 0x14, 0xf0, 0x47, 0xd3, 0xc3, 0x24, 0xdc, 0x2c, 0x40,
-  0x9c, 0xea, 0x48, 0xe5, 0xac, 0x07, 0x59, 0x77, 0xa2, 0x08, 0x95, 0x49,
-  0x5c, 0x10, 0xf7, 0x62, 0x73, 0x78, 0x30, 0xb9, 0xff, 0x49, 0xcd, 0x02,
-  0x6f, 0xec, 0xd1, 0xe2, 0xd9, 0xdb, 0x63, 0xb9, 0xe4, 0x38, 0x94, 0x0e,
-  0x2c, 0x3a, 0x2e, 0x26, 0x69, 0x55, 0xc4, 0x1a, 0x4a, 0xa8, 0x89, 0xb6,
-  0x81, 0x70, 0xa1, 0xe8, 0xd0, 0xe3, 0x75, 0xc9, 0xb6, 0xa3, 0xe8, 0x7f,
-  0xa2, 0x53, 0x57, 0x68, 0x3b, 0x16, 0xb4, 0xd7, 0x2a, 0xfa, 0xea, 0xf8,
-  0xd5, 0xd9, 0xc5, 0x71, 0x3d, 0x69, 0x45, 0x72, 0xf0, 0xa2, 0xae, 0x52,
-  0x17, 0x9b, 0xa8, 0xc8, 0x67, 0x16, 0x14, 0xad, 0x00, 0x22, 0xf9, 0x7c,
-  0xe7, 0xdf, 0x1f, 0x05, 0x27, 0xcf, 0xb2, 0x95, 0xad, 0xd1, 0x81, 0x78,
-  0x36, 0x9a, 0xc8, 0x90, 0xcc, 0x3f, 0xb7, 0x50, 0x63, 0x51, 0x92, 0x24,
-  0x6d, 0x7c, 0x92, 0x85, 0x8e, 0xfa, 0x10, 0x5a, 0x81, 0x55, 0x82, 0x55,
-  0xca, 0x92, 0x2d, 0x2f, 0xae, 0xd1, 0x0e, 0xf4, 0x39, 0x62, 0xf6, 0x52,
-  0x52, 0x49, 0x4d, 0x1c, 0x8c, 0xaa, 0xcd, 0xd0, 0x6b, 0xfd, 0x61, 0x7f,
-  0x14, 0xb5, 0x3b, 0xd2, 0x6c, 0x65, 0xe9, 0xa5, 0x85, 0x74, 0x2e, 0x70,
-  0x26, 0x6c, 0xbd, 0x16, 0x3b, 0xbd, 0x29, 0x0c, 0x9a, 0xb2, 0x1e, 0x85,
-  0x39, 0xe2, 0x52, 0xac, 0xd0, 0xa0, 0x74, 0x3b, 0x6e, 0x5f, 0xb7, 0xbe,
-  0xda, 0xf9, 0x66, 0xb9, 0x55, 0x2b, 0xe2, 0xe8, 0x6a, 0x68, 0x6b, 0xad,
-  0xa0, 0x3f, 0xf5, 0xa3, 0x4d, 0x8b, 0xaf, 0xe9, 0x48, 0x5c, 0x77, 0x98,
-  0xa2, 0x96, 0x68, 0xb0, 0x25, 0x89, 0x89, 0x7c, 0xbc, 0xba, 0x8b, 0xc3,
-  0xb8, 0x59, 0xaf, 0xcd, 0x72, 0x32, 0x01, 0xc1, 0xf0, 0x9a, 0xec, 0x24,
-  0x1b, 0x02, 0x91, 0x2b, 0x77, 0x2b, 0xed, 0x28, 0x6e, 0x60, 0x17, 0x66,
-  0x82, 0x4f, 0x9c, 0x71, 0x65, 0x91, 0x26, 0x8a, 0x80, 0xfa, 0xa3, 0x85,
-  0xa3, 0x22, 0x7f, 0x2c, 0x2a, 0x1f, 0xb2, 0x0a, 0x42, 0x13, 0xe2, 0x37,
-  0xa9, 0xed, 0x82, 0x97, 0xb4, 0xd1, 0x1c, 0x6a, 0x28, 0xb8, 0x4d, 0x43,
-  0x4c, 0xf4, 0xc5, 0xab, 0xc3, 0xe7, 0xcf, 0x9e, 0x43, 0xf4, 0x43, 0xb5,
-  0x0e, 0x8d, 0xba, 0xd7, 0x90, 0x0a, 0xa4, 0x1b, 0xfa, 0x21, 0xb7, 0xd8,
-  0x81, 0xb6, 0x04, 0x29, 0x91, 0x05, 0x97, 0xb9, 0x44, 0xf9, 0x8f, 0x83,
-  0x26, 0x46, 0x9d, 0x25, 0x36, 0xba, 0x6e, 0xcf, 0x75, 0x45, 0xe7, 0xec,
-  0xd6, 0xc0, 0xe8, 0x53, 0x89, 0xe3, 0xd6, 0xa2, 0x55, 0xa6, 0x2e, 0x91,
-  0x86, 0x9e, 0x41, 0x9b, 0xd1, 0x4d, 0x1c, 0x38, 0xaa, 0x73, 0xc5, 0xc0,
-  0xca, 0xae, 0xe6, 0xfe, 0x56, 0x3f, 0xcf, 0x0d, 0x00, 0x67, 0x1c, 0x80,
-  0x5a, 0x11, 0x4b, 0x46, 0x23, 0x78, 0x05, 0x7b, 0x6f, 0x97, 0xa1, 0x44,
-  0x8d, 0x58, 0x92, 0x91, 0x7f, 0x05, 0x9f, 0x8d, 0x27, 0xaf, 0x8e, 0xfe,
-  0xda, 0x25, 0x01, 0x6f, 0xae, 0x8b, 0xa5, 0x64, 0x75, 0x74, 0xe1, 0xbc,
-  0x85, 0xc8, 0x25, 0xf2, 0xa8, 0x11, 0x7b, 0x69, 0x35, 0x7e, 0xe5, 0xdd,
-  0x93, 0x23, 0x57, 0x3e, 0xd3, 0xfb, 0x2c, 0x27, 0x0f, 0xdd, 0xcd, 0xb9,
-  0xc7, 0x40, 0x6c, 0x9e, 0x29, 0xba, 0xa6, 0xbc, 0xd4, 0x3c, 0x31, 0x18,
-  0x18, 0x7c, 0xd7, 0xdd, 0x9c, 0xb6, 0x22, 0xca, 0xa4, 0xb4, 0x61, 0x0d,
-  0x23, 0x18, 0xc7, 0x0a, 0x98, 0xf0, 0xc6, 0x70, 0x42, 0x9b, 0x75, 0xd3,
-  0x2e, 0x85, 0x73, 0x43, 0x42, 0xb8, 0x08, 0xe2, 0x1f, 0x5c, 0x8b, 0x05,
-  0x4c, 0x83, 0x06, 0x79, 0xa4, 0x49, 0xa9, 0x65, 0x98, 0x74, 0x88, 0x76,
-  0x26, 0xa9, 0x60, 0x40, 0xb4, 0x49, 0xb9, 0x69, 0x25, 0x11, 0x25, 0x0d,
-  0xcd, 0xe3, 0xcd, 0x70, 0x0a, 0x59, 0x94, 0x4f, 0xab, 0x60, 0x06, 0xfc,
-  0x40, 0x77, 0x73, 0x2a, 0x1a, 0xb4, 0x67, 0xc6, 0x89, 0x85, 0x88, 0xd8,
-  0x7e, 0x7c, 0x66, 0xf2, 0x60, 0x6b, 0x93, 0xe9, 0x43, 0x61, 0x45, 0xad,
-  0x1d, 0x5e, 0x3f, 0xb3, 0xae, 0x1d, 0xc6, 0x08, 0x9a, 0x1b, 0x6c, 0x42,
-  0x64, 0x21, 0x5b, 0x39, 0xec, 0x6e, 0xce, 0xed, 0x30, 0x9e, 0x7c, 0x74,
-  0x83, 0xb5, 0x97, 0xd6, 0x2a, 0xcc, 0x33, 0x45, 0x98, 0x7a, 0x27, 0x69,
-  0x90, 0x9c, 0xdf, 0x58, 0xbd, 0x7b, 0x7c, 0x41, 0xe6, 0x99, 0x21, 0x52,
-  0x70, 0xfa, 0x9e, 0x3f, 0xb8, 0x1a, 0x7e, 0x10, 0xd7, 0xb1, 0x2a, 0x22,
-  0x31, 0x2f, 0xac, 0x21, 0x7b, 0xdf, 0x9f, 0x87, 0x30, 0x58, 0xe6, 0x69,
-  0x66, 0xb1, 0xa7, 0xca, 0xcb, 0x83, 0x21, 0x46, 0x5d, 0xa9, 0xee, 0x41,
-  0xc0, 0x54, 0x6b, 0x8a, 0x8b, 0x5b, 0x06, 0x98, 0x73, 0xb7, 0xdb, 0xbb,
-  0xf5, 0x3a, 0x0c, 0xe8, 0x58, 0x1e, 0xf7, 0x74, 0x2c, 0xb3, 0x72, 0xca,
-  0xb9, 0x4b, 0xab, 0xfb, 0xf0, 0x6e, 0xd7, 0xbb, 0x74, 0x67, 0xb2, 0x39,
-  0xbe, 0xe5, 0xfd, 0xcc, 0x3a, 0xe7, 0x5f, 0xad, 0xe3, 0x10, 0x67, 0x30,
-  0x9e, 0x94, 0xf9, 0x7c, 0x55, 0x49, 0x44, 0x42, 0x58, 0x98, 0x97, 0xb8,
-  0xeb, 0x9a, 0xa5, 0x40, 0x10, 0x8e, 0xdd, 0xed, 0xeb, 0x33, 0xc7, 0x0a,
-  0x01, 0x26, 0x35, 0xdc, 0x0d, 0x6c, 0xc7, 0xfa, 0xc5, 0xd1, 0xa7, 0xfd,
-  0x10, 0x05, 0x37, 0xd3, 0x33, 0xaf, 0xa2, 0x63, 0x81, 0xd6, 0x33, 0x3c,
-  0xed, 0xb5, 0x71, 0x20, 0x66, 0x09, 0x43, 0xd7, 0x28, 0x29, 0x70, 0x04,
-  0x86, 0x96, 0x1d, 0x55, 0xbe, 0xf7, 0x18, 0x21, 0xad, 0x5d, 0xe3, 0x62,
-  0xf1, 0x81, 0x43, 0x4e, 0x0f, 0xf8, 0x59, 0x31, 0xc2, 0x46, 0x30, 0xab,
-  0xd6, 0xc9, 0xd4, 0x63, 0xbc, 0x66, 0xe5, 0xd7, 0x8d, 0xa0, 0x46, 0x85,
-  0x8f, 0x8d, 0x84, 0x1f, 0xec, 0x1a, 0x4c, 0x80, 0x87, 0x43, 0x9b, 0x8b,
-  0x8c, 0x35, 0x1b, 0x59, 0x77, 0x73, 0x3a, 0x5c, 0xff, 0x9e, 0x2e, 0xcf,
-  0xc0, 0xcc, 0x66, 0x33, 0x35, 0x43, 0xb3, 0x06, 0xda, 0xa6, 0x0d, 0x3b,
-  0xe0, 0xbf, 0x88, 0x41, 0xb0, 0xda, 0x31, 0xcf, 0x6a, 0x01, 0x24, 0xd4,
-  0x63, 0xbe, 0x40, 0xa2, 0x7b, 0x77, 0xa0, 0x9c, 0xc4, 0xc9, 0x87, 0x99,
-  0xee, 0x6e, 0xdb, 0x05, 0x2a, 0x54, 0x40, 0xfb, 0xac, 0x0a, 0xd7, 0x7d,
-  0x08, 0x0e, 0xd3, 0x61, 0x06, 0xb3, 0x4a, 0x1a, 0x31, 0xc0, 0x61, 0xa8,
-  0x6b, 0xa4, 0x67, 0x08, 0xa3, 0x94, 0x54, 0x8f, 0xd2, 0xf4, 0x31, 0x31,
-  0x1e, 0x39, 0x51, 0x58, 0x1e, 0x6f, 0x21, 0xbe, 0x73, 0x64, 0xaa, 0xd4,
-  0xc1, 0xaa, 0x17, 0x13, 0x19, 0xb5, 0xc2, 0xb2, 0x92, 0xeb, 0xd9, 0x50,
-  0x89, 0xa3, 0xce, 0x8a, 0x86, 0xc5, 0x36, 0x16, 0x82, 0xd4, 0xdf, 0x17,
-  0xf8, 0xf1, 0xc5, 0xda, 0x92, 0x3e, 0x63, 0x5f, 0xd7, 0x27, 0xba, 0x48,
-  0x18, 0x31, 0x15, 0x90, 0x6c, 0x9c, 0xeb, 0xaf, 0x0a, 0xf4, 0x26, 0xdb,
-  0x5a, 0xa4, 0x04, 0x9c, 0x80, 0xcc, 0x4e, 0x57, 0x5d, 0x08, 0xc7, 0x5b,
-  0x56, 0xb2, 0x06, 0x4d, 0xef, 0x8e, 0x76, 0x07, 0xa6, 0x5b, 0xa9, 0x14,
-  0x67, 0x12, 0x32, 0x7f, 0x12, 0xbb, 0x88, 0x31, 0xee, 0xba, 0x69, 0x1d,
-  0xbb, 0x90, 0xc0, 0x1e, 0x15, 0x1b, 0xc3, 0xaa, 0x4d, 0x5c, 0x7c, 0xc6,
-  0x09, 0xe5, 0x9c, 0xb0, 0xdf, 0xa2, 0xa2, 0x9d, 0xe1, 0xd3, 0xe7, 0xcf,
-  0x6b, 0xf7, 0x7a, 0xa8, 0x04, 0x3f, 0xdb, 0xd9, 0x11, 0x18, 0x83, 0xe6,
-  0x6b, 0xf4, 0xc5, 0xf0, 0x39, 0x5e, 0xac, 0xbf, 0x26, 0x69, 0xee, 0xeb,
-  0xdf, 0x1b, 0xf2, 0x37, 0x1d, 0xdd, 0xc1, 0x82, 0xb3, 0xf6, 0xad, 0xe7,
-  0xdc, 0x5d, 0xc7, 0x5b, 0x78, 0x58, 0xd6, 0x31, 0xbf, 0xba, 0xe2, 0x8a,
-  0x88, 0xfc, 0xa4, 0x40, 0x69, 0xe6, 0xc5, 0x7d, 0x5c, 0xcc, 0xda, 0xd3,
-  0xdd, 0x19, 0x0c, 0x77, 0xd7, 0x4d, 0xd7, 0x95, 0x2f, 0xc2, 0x76, 0xb2,
-  0x26, 0xb4, 0xf9, 0xc7, 0xad, 0xcd, 0x6f, 0xb6, 0xba, 0x66, 0xff, 0xd9,
-  0xce, 0xce, 0xe0, 0x53, 0xfe, 0xf9, 0xfc, 0x79, 0xf7, 0x51, 0xab, 0xf5,
-  0xf1, 0xc4, 0xa6, 0x56, 0x1b, 0x2d, 0xb5, 0xd3, 0xd1, 0xfa, 0x2e, 0xb5,
-  0xba, 0xfb, 0xfc, 0xf9, 0x80, 0x7b, 0x79, 0xf6, 0x51, 0xad, 0x57, 0xf7,
-  0xb9, 0x37, 0x9d, 0xf3, 0xeb, 0x9e, 0x1c, 0xcb, 0xc6, 0x0c, 0xe8, 0xcf,
-  0x28, 0x7a, 0x29, 0xd0, 0x0e, 0x51, 0x90, 0x59, 0xe1, 0xdd, 0x2e, 0x21,
-  0xfc, 0x11, 0x02, 0x1a, 0x96, 0xc8, 0x36, 0x80, 0xa6, 0x28, 0xea, 0x47,
-  0xec, 0xfd, 0x0b, 0xe6, 0x8f, 0xf7, 0xc0, 0x94, 0x67, 0xe2, 0x0a, 0xbb,
-  0x66, 0x58, 0x09, 0xcb, 0x45, 0x28, 0xa3, 0x4d, 0x22, 0x97, 0x2d, 0xd8,
-  0x02, 0xee, 0xe2, 0x79, 0x6a, 0xe9, 0xaa, 0x51, 0x1f, 0x06, 0x2c, 0xad,
-  0x44, 0x5d, 0x56, 0xf9, 0xb2, 0x1f, 0x49, 0x39, 0x71, 0xa7, 0x89, 0x98,
-  0x57, 0x4a, 0x9e, 0x1c, 0xca, 0x33, 0x72, 0xd0, 0xa0, 0xce, 0xbd, 0x1f,
-  0x09, 0xac, 0x0f, 0x7b, 0x87, 0x1a, 0xbd, 0x46, 0x0e, 0x00, 0xc2, 0x03,
-  0xe3, 0x09, 0xa2, 0x1c, 0xcc, 0x55, 0x7e, 0x9a, 0xfd, 0x32, 0x00, 0x92,
-  0x31, 0x87, 0x41, 0x16, 0x78, 0x03, 0x67, 0x89, 0xa1, 0x15, 0xe6, 0xf5,
-  0xcc, 0x7e, 0xf7, 0xbe, 0xd8, 0x63, 0x56, 0xa2, 0x88, 0xfa, 0x43, 0xf6,
-  0x63, 0x58, 0x35, 0x56, 0xc0, 0x80, 0x58, 0x3f, 0xbd, 0x8f, 0x8b, 0xc4,
-  0x52, 0x6b, 0x48, 0x6f, 0x36, 0x0e, 0xe0, 0xf0, 0xca, 0x34, 0x39, 0x44,
-  0x33, 0xe4, 0x7c, 0xc2, 0xa7, 0x01, 0x43, 0x4a, 0xd0, 0x38, 0x47, 0x9b,
-  0xe7, 0x96, 0x4a, 0xc4, 0xb6, 0x7f, 0xd8, 0xe9, 0x6a, 0xee, 0x30, 0x03,
-  0x2d, 0x35, 0x0b, 0x9d, 0xc0, 0xa9, 0x6c, 0x34, 0x5c, 0x60, 0xfc, 0x94,
-  0x07, 0xa2, 0x70, 0x95, 0xc1, 0xdc, 0x2c, 0xc0, 0x8e, 0x78, 0x8b, 0xc0,
-  0x98, 0x64, 0xf1, 0x0d, 0xe8, 0x43, 0xeb, 0x10, 0x5a, 0xce, 0xb0, 0x20,
-  0xbd, 0x20, 0xa1, 0xbd, 0xb6, 0x63, 0xb4, 0x57, 0x8e, 0x09, 0xd2, 0xa6,
-  0x45, 0x9b, 0x01, 0x90, 0x37, 0x68, 0x2b, 0xd0, 0xf9, 0x0d, 0x98, 0x2c,
-  0x5f, 0x30, 0x9e, 0xea, 0x6c, 0x6b, 0x24, 0x03, 0x80, 0xd1, 0x56, 0x76,
-  0x82, 0x31, 0xe2, 0x6a, 0x5b, 0xca, 0x65, 0x5e, 0x51, 0x80, 0x98, 0x9f,
-  0xb4, 0xcb, 0x79, 0x7c, 0xf2, 0xbf, 0x8e, 0x47, 0xbf, 0x86, 0x35, 0xb9,
-  0x19, 0x5e, 0x57, 0xc4, 0xf7, 0xf5, 0xaa, 0xd3, 0x44, 0x75, 0x2e, 0x69,
-  0x26, 0x9e, 0xcf, 0x7d, 0xf9, 0x54, 0xf8, 0xfd, 0x48, 0xd8, 0xcf, 0x0d,
-  0x74, 0xd5, 0x95, 0x46, 0x5d, 0x0b, 0xd2, 0x89, 0x9a, 0xd8, 0x28, 0x0c,
-  0x18, 0x1a, 0x96, 0x5d, 0x62, 0xfb, 0x02, 0xee, 0x17, 0x2b, 0xcc, 0xb0,
-  0xca, 0x50, 0x6f, 0x98, 0xc6, 0xd0, 0x94, 0x67, 0xe2, 0xfb, 0x16, 0xa6,
-  0x69, 0x18, 0x17, 0x73, 0xe1, 0xc3, 0x36, 0x79, 0xe6, 0x1f, 0xae, 0xa8,
-  0x1d, 0x56, 0x4c, 0x33, 0xbb, 0x41, 0x60, 0x1c, 0x07, 0xf1, 0x23, 0x20,
-  0xb8, 0xcb, 0x1c, 0xc5, 0x6b, 0x5b, 0xc5, 0x8b, 0x65, 0x47, 0x48, 0xaf,
-  0xa4, 0x1f, 0x19, 0x12, 0x04, 0x2b, 0x47, 0x66, 0xa8, 0xd5, 0xce, 0xda,
-  0xcd, 0x05, 0x91, 0xc6, 0x42, 0xb9, 0xf4, 0x22, 0x1c, 0x11, 0xae, 0x9f,
-  0x7a, 0x80, 0x2c, 0xcb, 0x62, 0x80, 0xde, 0xeb, 0xc8, 0x46, 0x88, 0x75,
-  0xe5, 0xd9, 0xf9, 0xc5, 0xb2, 0x61, 0x21, 0x45, 0x24, 0x44, 0xba, 0x4f,
-  0x34, 0xc2, 0x49, 0x22, 0x45, 0x10, 0x94, 0xcd, 0xa1, 0x51, 0x5a, 0xf8,
-  0x2c, 0x5e, 0xb3, 0x83, 0x1e, 0xdb, 0x4a, 0xba, 0xc6, 0xfa, 0xf9, 0x5b,
-  0x58, 0xc2, 0x7d, 0xcd, 0x76, 0xa7, 0x55, 0x75, 0xa3, 0xd5, 0x72, 0xd4,
-  0x86, 0x04, 0x0c, 0x40, 0xf9, 0xf5, 0x7d, 0xea, 0x7e, 0x27, 0x74, 0x15,
-  0x82, 0x51, 0xa0, 0x1f, 0x1e, 0x9c, 0x42, 0xa0, 0xa7, 0x65, 0x27, 0x84,
-  0x36, 0x0c, 0xc7, 0x6c, 0x01, 0x75, 0xf3, 0x95, 0xe9, 0x8a, 0x8d, 0x5f,
-  0xb2, 0xb5, 0xf6, 0xb9, 0xaa, 0x89, 0x80, 0xb7, 0x0c, 0x3c, 0xee, 0x62,
-  0xf4, 0xec, 0xfd, 0xfb, 0x96, 0x62, 0x12, 0x20, 0xd1, 0x49, 0x0d, 0x0f,
-  0x21, 0x76, 0x7a, 0xb4, 0xfe, 0x65, 0x77, 0xee, 0xb8, 0x3a, 0x92, 0x78,
-  0xbf, 0x27, 0xb9, 0x84, 0x90, 0xcb, 0x6a, 0xc5, 0x1d, 0xeb, 0x28, 0x97,
-  0xf3, 0x7d, 0x9c, 0x56, 0x1d, 0xf9, 0x71, 0x2a, 0x71, 0x38, 0xb0, 0x79,
-  0x8b, 0x65, 0xe6, 0xec, 0xa2, 0x1b, 0x62, 0x05, 0x82, 0x29, 0x26, 0x0b,
-  0x64, 0x0d, 0x1a, 0xf2, 0x7f, 0xc7, 0x3a, 0x71, 0x2f, 0xb2, 0xec, 0x29,
-  0xc0, 0xbb, 0xaa, 0x74, 0xce, 0xaf, 0x01, 0xca, 0x8a, 0x5a, 0xd8, 0xa5,
-  0xe5, 0x4f, 0xb3, 0x55, 0x95, 0x94, 0xae, 0x0c, 0x63, 0x50, 0xb2, 0xa5,
-  0x6b, 0xd9, 0xe7, 0x00, 0x45, 0x90, 0x70, 0x90, 0x66, 0x5d, 0x0c, 0x1d,
-  0x97, 0xa4, 0x95, 0xaa, 0xc7, 0xc8, 0x48, 0x76, 0x88, 0x57, 0x3b, 0x22,
-  0xa6, 0x23, 0x17, 0x2b, 0xad, 0x47, 0x33, 0x79, 0x4f, 0xab, 0x2d, 0x50,
-  0x78, 0x11, 0x3c, 0xbc, 0x39, 0x57, 0x9b, 0x8e, 0xe7, 0xd7, 0x79, 0x41,
-  0x9b, 0xba, 0x50, 0x39, 0x18, 0xd7, 0x4f, 0x53, 0x1a, 0xd3, 0xae, 0x1c,
-  0xa0, 0x11, 0xa3, 0x71, 0x3b, 0xa4, 0xb9, 0x2a, 0xaf, 0x94, 0x31, 0x2a,
-  0xe6, 0x08, 0xc2, 0xe1, 0x73, 0x31, 0xda, 0x62, 0xdc, 0x8f, 0x85, 0x1e,
-  0xee, 0x8d, 0x9e, 0x6c, 0xad, 0xcd, 0xff, 0x71, 0x19, 0xff, 0x5e, 0xd8,
-  0x6f, 0x94, 0x12, 0xee, 0xac, 0x41, 0xd6, 0x5a, 0xdc, 0x29, 0x07, 0x17,
-  0x84, 0x45, 0xc8, 0x1a, 0xe7, 0x5e, 0x16, 0xf1, 0x11, 0x9c, 0x26, 0x83,
-  0x4b, 0x2c, 0xe7, 0x49, 0xb2, 0x94, 0xb1, 0x39, 0x80, 0x3d, 0xab, 0x41,
-  0x27, 0x27, 0x15, 0xa1, 0xec, 0x4a, 0xa4, 0x7a, 0xdf, 0xae, 0xe3, 0x00,
-  0x1a, 0x85, 0xce, 0x26, 0x6d, 0x2b, 0x10, 0xd3, 0xcd, 0x69, 0x36, 0x45,
-  0x5c, 0xb1, 0xb0, 0xfc, 0x35, 0x15, 0x23, 0x6c, 0x4b, 0x31, 0x1c, 0xb7,
-  0xad, 0x8e, 0xa8, 0x74, 0x33, 0x1a, 0x05, 0xe4, 0xda, 0xe8, 0xcb, 0x82,
-  0x17, 0x8b, 0xab, 0x29, 0x11, 0xf4, 0x59, 0x14, 0x92, 0x93, 0x19, 0xc1,
-  0x67, 0xab, 0xb0, 0x1d, 0x23, 0xc7, 0x7b, 0x04, 0x57, 0x1c, 0x4b, 0xd8,
-  0x42, 0xa1, 0xf9, 0x7b, 0x52, 0xe4, 0x4d, 0xd0, 0x49, 0x93, 0x1e, 0x5d,
-  0x04, 0x91, 0xa3, 0x46, 0x1e, 0xfb, 0xc8, 0x93, 0x48, 0x1b, 0xaa, 0xf8,
-  0xbf, 0x8a, 0x62, 0xb4, 0x90, 0x40, 0xf9, 0x28, 0xd5, 0x7c, 0x10, 0xe0,
-  0xeb, 0x52, 0x0f, 0xaf, 0x64, 0x6f, 0xe8, 0x95, 0x81, 0x8a, 0xec, 0x81,
-  0x53, 0x26, 0x52, 0xc6, 0x15, 0xd0, 0x85, 0xde, 0x98, 0x2d, 0x05, 0x4e,
-  0xf9, 0x93, 0xf1, 0x11, 0x24, 0xe5, 0xc4, 0x2c, 0xa1, 0x70, 0x3d, 0xa7,
-  0x4d, 0xce, 0xb2, 0xd3, 0xa1, 0x6d, 0xf1, 0xc7, 0x40, 0x55, 0x51, 0x67,
-  0x25, 0xfa, 0x6f, 0xe5, 0x88, 0x00, 0x47, 0x49, 0x78, 0xd6, 0x2c, 0x44,
-  0x42, 0x53, 0x20, 0xb4, 0x37, 0x39, 0x47, 0x8e, 0xe8, 0x95, 0x7b, 0xe5,
-  0xdb, 0xd1, 0x37, 0xdb, 0x60, 0x49, 0x68, 0x47, 0x33, 0x97, 0xb8, 0x89,
-  0x41, 0x0d, 0x08, 0xd2, 0x86, 0x8d, 0x98, 0x27, 0xf8, 0x95, 0x24, 0x4e,
-  0x44, 0x2e, 0xca, 0x0e, 0x2f, 0x00, 0x58, 0x3b, 0x7b, 0x8f, 0xe0, 0x7c,
-  0xe3, 0xe9, 0x74, 0xa0, 0xb6, 0x61, 0x03, 0xa8, 0x8d, 0x94, 0xf1, 0x60,
-  0x2e, 0x8d, 0x31, 0xb5, 0xa3, 0xb1, 0xc5, 0xa1, 0x6c, 0x83, 0xe9, 0x97,
-  0x21, 0x00, 0x7b, 0x8a, 0x54, 0x62, 0x48, 0x8e, 0x35, 0xe4, 0xb6, 0x91,
-  0x40, 0xee, 0xae, 0xaf, 0x10, 0x4b, 0x8c, 0x10, 0x04, 0x5e, 0x89, 0x24,
-  0x6e, 0x80, 0x66, 0x8e, 0x61, 0x7f, 0x0c, 0xab, 0x6b, 0x88, 0x9b, 0xeb,
-  0xa8, 0x56, 0x97, 0x35, 0x46, 0x92, 0xf8, 0xbf, 0x4a, 0xb8, 0x25, 0xa3,
-  0x70, 0x73, 0x1d, 0xa3, 0xe6, 0xe6, 0x8d, 0xf1, 0xa1, 0x58, 0x11, 0xfe,
-  0xb6, 0x4a, 0x99, 0x44, 0x25, 0xa2, 0xe8, 0x08, 0x68, 0xa6, 0x8c, 0xc5,
-  0x2a, 0x20, 0xfe, 0x1c, 0xbe, 0xa1, 0xfe, 0xee, 0xc2, 0x49, 0x06, 0x2d,
-  0xcc, 0x3d, 0xc0, 0x45, 0x8c, 0x0c, 0x1a, 0x0d, 0xb8, 0x5e, 0x8b, 0x55,
-  0x08, 0x10, 0x33, 0x1c, 0xf3, 0x48, 0xa8, 0xd5, 0x21, 0xda, 0xe8, 0xc6,
-  0x8d, 0x31, 0x64, 0xb2, 0xa1, 0x60, 0xb5, 0x07, 0x30, 0x6b, 0x3c, 0x1c,
-  0xc8, 0x1d, 0x32, 0x02, 0x43, 0xa8, 0x88, 0x50, 0x1e, 0xa7, 0x85, 0xc8,
-  0xca, 0x1c, 0xb6, 0x16, 0xc9, 0xcc, 0xe5, 0x38, 0xcb, 0xa7, 0xd1, 0x8b,
-  0x0f, 0xc4, 0x8c, 0x2a, 0x3a, 0xb8, 0x9a, 0x49, 0xc6, 0x67, 0x87, 0xdf,
-  0x8e, 0x9f, 0x7e, 0x30, 0x58, 0x74, 0x7d, 0x91, 0xb4, 0x47, 0xc3, 0x45,
-  0x1f, 0x41, 0x25, 0xee, 0x48, 0xd2, 0x62, 0x7c, 0xf6, 0x22, 0x9d, 0x01,
-  0x55, 0xfa, 0x01, 0xf0, 0x7e, 0x69, 0xbe, 0x72, 0xa8, 0x14, 0x91, 0x8f,
-  0x9a, 0x1c, 0x88, 0x6b, 0x92, 0xe1, 0xaa, 0x9b, 0x41, 0xd1, 0xc4, 0x7e,
-  0x68, 0x4f, 0x04, 0xa4, 0x26, 0x79, 0x3f, 0x9d, 0xaf, 0xca, 0xf4, 0xee,
-  0x37, 0xad, 0x87, 0x29, 0xab, 0x1e, 0xff, 0x4b, 0xcb, 0x1e, 0x7f, 0xdc,
-  0xba, 0xb7, 0x98, 0xc8, 0x2f, 0x5c, 0xf7, 0xae, 0x5a, 0xa8, 0xff, 0x67,
-  0xac, 0xfb, 0xb3, 0xa1, 0x43, 0x48, 0x78, 0xf1, 0x4b, 0x43, 0xa5, 0xb1,
-  0x05, 0xcf, 0x34, 0xb4, 0x74, 0x13, 0xd6, 0xaf, 0x24, 0x8c, 0x36, 0x65,
-  0xc4, 0xef, 0xf9, 0x5d, 0xb2, 0x06, 0xa8, 0x01, 0x26, 0xe0, 0xad, 0x0f,
-  0x9e, 0x18, 0xb7, 0x53, 0xe2, 0x97, 0x96, 0xbd, 0x6a, 0xae, 0xdd, 0xbf,
-  0xb0, 0x73, 0x4e, 0x22, 0xf0, 0x7b, 0xd7, 0xb9, 0x79, 0xe1, 0xde, 0xc9,
-  0xa5, 0xf9, 0xdf, 0xb5, 0x73, 0x0d, 0x69, 0xb9, 0x3e, 0x0b, 0xe0, 0x10,
-  0xdb, 0xd8, 0xa5, 0xf2, 0x1d, 0xdd, 0x8b, 0xf3, 0x87, 0x06, 0x1a, 0x81,
-  0x06, 0x10, 0xb5, 0xa1, 0x79, 0x94, 0x1c, 0x6a, 0x85, 0xce, 0x74, 0x37,
-  0x5c, 0xdd, 0x8d, 0xad, 0x16, 0xf1, 0xfc, 0x2b, 0x67, 0xd6, 0x08, 0x86,
-  0x23, 0x03, 0x01, 0x95, 0x61, 0x64, 0xa2, 0x55, 0xe7, 0x99, 0x34, 0xba,
-  0x42, 0x11, 0xa1, 0xb7, 0x23, 0x97, 0xd9, 0x40, 0xd6, 0x3f, 0x48, 0x32,
-  0xb5, 0xc3, 0xdd, 0x81, 0x53, 0xb6, 0x2e, 0x22, 0xff, 0x7f, 0xcb, 0x83,
-  0xdd, 0x45, 0x1e, 0x16, 0x14, 0xff, 0xd1, 0xc4, 0xe1, 0x42, 0xd9, 0xfe,
-  0x25, 0xf2, 0x68, 0xb2, 0x96, 0x6b, 0xba, 0x7d, 0x97, 0xe9, 0x90, 0xed,
-  0x92, 0x2c, 0x30, 0xbe, 0xd0, 0x5f, 0x78, 0x73, 0xbb, 0x44, 0x62, 0x93,
-  0xfb, 0xed, 0x79, 0x70, 0x25, 0x4d, 0xe6, 0x45, 0xef, 0x6a, 0x56, 0x66,
-  0x71, 0x79, 0xba, 0x98, 0x6d, 0xcb, 0x9f, 0xc3, 0xab, 0xbf, 0xcd, 0xb2,
-  0xd1, 0x23, 0x7b, 0x18, 0xd7, 0x82, 0xca, 0x15, 0x1f, 0xbd, 0xa3, 0xba,
-  0xac, 0x2b, 0xdb, 0xd2, 0x34, 0x99, 0x3b, 0x6a, 0xd7, 0x0c, 0x19, 0x1e,
-  0xd6, 0xba, 0x39, 0xf2, 0xa7, 0x33, 0x09, 0x4a, 0x84, 0xd5, 0xb6, 0x9d,
-  0x88, 0x80, 0x27, 0xb6, 0x7d, 0x53, 0x6b, 0x7b, 0x8b, 0xc2, 0xfe, 0xd6,
-  0x76, 0xa8, 0xed, 0x71, 0x38, 0x68, 0x57, 0x73, 0x32, 0x0c, 0x20, 0x26,
-  0xd4, 0x9f, 0xc3, 0xc2, 0x4a, 0x41, 0x26, 0x54, 0xee, 0x0a, 0x73, 0x1d,
-  0x86, 0x06, 0x89, 0xd4, 0xca, 0x85, 0x14, 0xbc, 0xcb, 0x6a, 0x6a, 0x19,
-  0x23, 0x69, 0x36, 0x5d, 0x12, 0x75, 0x76, 0x25, 0x40, 0x3f, 0x0e, 0x6e,
-  0x53, 0x9f, 0x4c, 0x96, 0x34, 0xe3, 0x20, 0x0f, 0xca, 0x48, 0xd2, 0xf8,
-  0xcd, 0xd8, 0x21, 0x4f, 0x46, 0x96, 0x0b, 0x85, 0x8d, 0x45, 0x70, 0x92,
-  0xd6, 0x76, 0x40, 0x0c, 0x09, 0x73, 0x01, 0x3c, 0xd0, 0x4a, 0xee, 0x46,
-  0x40, 0x17, 0xf4, 0xae, 0xab, 0xe9, 0xee, 0xf3, 0x4f, 0x77, 0x49, 0x14,
-  0x7d, 0x40, 0x26, 0x68, 0xa9, 0xef, 0x47, 0x4f, 0x47, 0x4f, 0xb6, 0x9f,
-  0x8e, 0x9e, 0x4a, 0xcd, 0x40, 0x33, 0xba, 0x4f, 0x92, 0xce, 0xaa, 0xda,
-  0xdc, 0x29, 0xac, 0x9b, 0x60, 0x60, 0x58, 0xb8, 0x37, 0xc7, 0x87, 0x56,
-  0x17, 0x0d, 0xc5, 0x4e, 0xea, 0xb0, 0x58, 0xae, 0xbc, 0x96, 0x40, 0xf5,
-  0x74, 0x6b, 0x0d, 0x1d, 0xab, 0x62, 0xc4, 0x2b, 0x21, 0x23, 0x99, 0xce,
-  0x97, 0x8f, 0x28, 0x71, 0x12, 0xa1, 0xe4, 0x36, 0xee, 0x8d, 0xde, 0xc0,
-  0xb5, 0x95, 0x09, 0xd6, 0x6d, 0xf4, 0x81, 0x9d, 0xa9, 0x66, 0xc4, 0xf3,
-  0xba, 0x9d, 0xb9, 0x17, 0x86, 0xeb, 0x0e, 0x1b, 0x19, 0x8a, 0xab, 0x96,
-  0x0a, 0xff, 0xc0, 0xef, 0x58, 0x20, 0x57, 0x2d, 0xc4, 0xc7, 0x8c, 0xd0,
-  0xa3, 0xee, 0x50, 0x3e, 0x0f, 0xa6, 0x20, 0x40, 0x42, 0x80, 0xf6, 0xed,
-  0x0f, 0xfb, 0xc6, 0xc0, 0xcd, 0x84, 0xed, 0x8a, 0x1d, 0xc3, 0xad, 0xab,
-  0x70, 0x13, 0x8f, 0xdd, 0xeb, 0x8a, 0x09, 0x8e, 0x78, 0x13, 0xb1, 0xb8,
-  0xb0, 0xfb, 0xc2, 0xa1, 0xb0, 0x10, 0x4f, 0xb9, 0xe1, 0x48, 0x66, 0x68,
-  0x12, 0xb3, 0x64, 0xda, 0xd6, 0x7d, 0x5c, 0x96, 0x31, 0x3d, 0x3d, 0x8d,
-  0x97, 0xf1, 0x24, 0x9d, 0xa7, 0x55, 0xda, 0x11, 0x36, 0xf7, 0x2b, 0xca,
-  0x64, 0xd5, 0x74, 0x39, 0xcc, 0xf2, 0x2e, 0xdb, 0xdd, 0x25, 0x63, 0xae,
-  0x7b, 0xa0, 0xbd, 0x77, 0x6f, 0xce, 0x8e, 0x8e, 0x4f, 0x0f, 0x7e, 0x34,
-  0x67, 0xb4, 0x8b, 0x08, 0x46, 0x65, 0xb4, 0x24, 0x2e, 0x1f, 0xde, 0x95,
-  0x49, 0x45, 0x5f, 0x6e, 0x3e, 0xd9, 0x62, 0x95, 0xb6, 0x95, 0xff, 0xc1,
-  0x6a, 0x51, 0x08, 0xc3, 0xac, 0x86, 0x54, 0x3f, 0x8f, 0x06, 0x99, 0xec,
-  0xd6, 0x1c, 0x00, 0x15, 0xdd, 0x7b, 0x55, 0x32, 0xcf, 0x92, 0x4a, 0x51,
-  0x77, 0xa3, 0x17, 0x67, 0xe7, 0x97, 0x2f, 0xef, 0xe2, 0x56, 0x89, 0x76,
-  0x46, 0x31, 0xd0, 0x16, 0x4b, 0x23, 0x10, 0x79, 0x33, 0x08, 0x2d, 0x1c,
-  0xbb, 0x18, 0x3e, 0x7b, 0x92, 0x6e, 0xcd, 0x56, 0xec, 0xde, 0xe5, 0xe5,
-  0x8f, 0xe7, 0xc7, 0x2f, 0x5f, 0xb0, 0x2a, 0xfb, 0x05, 0x2b, 0xe0, 0x6a,
-  0xc2, 0x80, 0x66, 0xcb, 0xeb, 0xfc, 0xb0, 0x6c, 0x5f, 0xab, 0x3f, 0x1c,
-  0x9d, 0x8c, 0xcf, 0x4f, 0xcf, 0x0e, 0x5f, 0xbe, 0xf8, 0x81, 0x0d, 0x9f,
-  0x8c, 0xe6, 0x1d, 0xbc, 0xeb, 0x3e, 0x73, 0xf1, 0x49, 0x6d, 0x18, 0xc2,
-  0xe3, 0xef, 0xdf, 0x1d, 0xbf, 0xf9, 0xee, 0xe5, 0x8b, 0xbb, 0xb8, 0x18,
-  0xf0, 0xfc, 0xe4, 0x6d, 0x4e, 0x34, 0xee, 0x80, 0x7d, 0x0e, 0xf6, 0xf2,
-  0x92, 0xc1, 0x4a, 0x97, 0xec, 0xe4, 0x7a, 0x24, 0x3a, 0x42, 0x48, 0xd6,
-  0x03, 0xff, 0x35, 0x65, 0xec, 0xc0, 0x59, 0x51, 0x0f, 0xa4, 0x7e, 0x7b,
-  0x71, 0xda, 0x7d, 0xa0, 0x5c, 0x11, 0x4f, 0x8f, 0x84, 0x62, 0xe5, 0x38,
-  0x5d, 0xab, 0x80, 0x1d, 0xf1, 0xa8, 0xda, 0xb1, 0x15, 0x3c, 0x7c, 0xc4,
-  0x55, 0x22, 0xf9, 0x59, 0x70, 0xfb, 0x3a, 0x0c, 0x7a, 0x87, 0x8a, 0x01,
-  0xab, 0xbb, 0x14, 0x61, 0xdd, 0x36, 0x1a, 0x65, 0x52, 0xdf, 0x58, 0x13,
-  0x32, 0xa5, 0xc5, 0xd3, 0x59, 0x20, 0xe2, 0x58, 0x15, 0xcc, 0x0d, 0xc3,
-  0xb1, 0x74, 0xb5, 0xfa, 0x24, 0xe4, 0x36, 0x6a, 0x59, 0x03, 0x3c, 0x24,
-  0x39, 0xe3, 0xa7, 0xdc, 0xba, 0x71, 0x15, 0x72, 0xcc, 0xea, 0xb1, 0x4a,
-  0x16, 0x39, 0x1a, 0xf8, 0x8e, 0x9a, 0x57, 0x9b, 0x07, 0x74, 0xd1, 0xf4,
-  0x05, 0x31, 0x4f, 0xb2, 0x3c, 0xca, 0x81, 0xaf, 0xf3, 0x87, 0xc0, 0xc1,
-  0x2d, 0x1b, 0xfb, 0x18, 0xea, 0x3e, 0x1b, 0x17, 0x46, 0x9e, 0x37, 0x18,
-  0x53, 0xc0, 0xb5, 0xc5, 0xae, 0x8e, 0xcd, 0xf1, 0x96, 0xca, 0x33, 0xc2,
-  0x1a, 0xce, 0xdf, 0x5e, 0x06, 0x81, 0xd5, 0x2d, 0x28, 0x96, 0x16, 0xaf,
-  0x68, 0x08, 0xd9, 0x7e, 0xa1, 0x7a, 0xc3, 0x5e, 0x13, 0xd0, 0xc7, 0xf2,
-  0x4f, 0x50, 0x5d, 0xba, 0x96, 0xb1, 0x19, 0x77, 0xc2, 0xd2, 0x68, 0x68,
-  0x26, 0xdd, 0xc2, 0x73, 0x78, 0x22, 0xe9, 0xbc, 0x3e, 0x0c, 0x9a, 0xec,
-  0xba, 0x37, 0x0a, 0xfb, 0x11, 0x4b, 0xdb, 0x56, 0x0b, 0x62, 0xeb, 0xa1,
-  0x19, 0x53, 0xe2, 0xfa, 0xe6, 0x71, 0x5a, 0x32, 0xb1, 0x8e, 0x0c, 0xc8,
-  0xf7, 0xec, 0x8a, 0x9f, 0x10, 0xe5, 0xdd, 0xb6, 0x33, 0x87, 0x71, 0x93,
-  0x49, 0xd6, 0x26, 0x40, 0xcc, 0x91, 0x15, 0x01, 0xaf, 0x87, 0x8b, 0x76,
-  0x11, 0x48, 0x21, 0x03, 0xc7, 0xb4, 0x66, 0x4b, 0x81, 0xa7, 0x6a, 0x66,
-  0xb5, 0x63, 0x13, 0x3b, 0x16, 0xd5, 0xca, 0xe6, 0x58, 0x74, 0x3a, 0x73,
-  0xec, 0xe1, 0xa5, 0x87, 0xa4, 0x61, 0x44, 0x99, 0x8e, 0xb4, 0x0e, 0xc5,
-  0x39, 0x1c, 0x5e, 0xb6, 0x0a, 0xa7, 0xf0, 0x0b, 0xcb, 0x38, 0x2d, 0x82,
-  0xa0, 0x0b, 0x04, 0x3a, 0xf1, 0xbe, 0x08, 0x25, 0x69, 0x88, 0x1c, 0x44,
-  0xb1, 0x91, 0x90, 0x36, 0x2c, 0xea, 0x6b, 0x11, 0x96, 0x7b, 0xd7, 0xf3,
-  0x7c, 0x32, 0xa1, 0x49, 0xf5, 0x4c, 0x42, 0xa2, 0x11, 0xc6, 0xc5, 0x35,
-  0xc4, 0xf9, 0x81, 0xc1, 0x3f, 0xf8, 0xc3, 0x0a, 0xe8, 0x30, 0xf4, 0xb5,
-  0x2e, 0x26, 0x5c, 0xeb, 0x6a, 0x68, 0x25, 0x15, 0xdd, 0x57, 0x40, 0x7b,
-  0x3d, 0x34, 0xab, 0xd2, 0xf0, 0xa7, 0xd6, 0x7f, 0x53, 0xbc, 0xad, 0x1e,
-  0x38, 0xaa, 0xce, 0x31, 0x74, 0x65, 0x3e, 0x60, 0x39, 0x8a, 0xe9, 0xd4,
-  0x51, 0xdf, 0x1b, 0x13, 0xa6, 0x09, 0xf4, 0xfe, 0xc1, 0x83, 0xd8, 0x1d,
-  0xf0, 0xbf, 0x7b, 0xff, 0xec, 0x19, 0x70, 0x17, 0x43, 0x27, 0xca, 0xe0,
-  0x2b, 0x06, 0x4b, 0x2a, 0x0d, 0x2d, 0xac, 0x03, 0x1c, 0x8c, 0x2b, 0x5a,
-  0xac, 0x6d, 0x3d, 0x5d, 0x5c, 0xff, 0xb4, 0x3b, 0xdc, 0xdd, 0xd9, 0xd9,
-  0xf9, 0x79, 0xb4, 0xe4, 0xa5, 0xbb, 0x42, 0xf3, 0xf4, 0xef, 0x68, 0x99,
-  0x4e, 0x39, 0x38, 0x82, 0x36, 0x33, 0x8d, 0x51, 0xc0, 0x56, 0xfa, 0xdb,
-  0x0e, 0x2f, 0xe7, 0x82, 0xd3, 0x3c, 0x3a, 0xf9, 0xb8, 0xc1, 0x33, 0xc6,
-  0xd1, 0xd5, 0x4a, 0x90, 0x5c, 0xe9, 0xc9, 0xd9, 0x4a, 0x7c, 0xd6, 0x40,
-  0x16, 0x22, 0x49, 0x59, 0xbc, 0x89, 0xa2, 0x67, 0x11, 0xa1, 0x4a, 0x61,
-  0x0c, 0x44, 0xad, 0x0d, 0x3a, 0x4b, 0xc5, 0x21, 0xb8, 0x33, 0x29, 0xb9,
-  0x9c, 0x21, 0x92, 0x39, 0x03, 0x30, 0xf3, 0x81, 0x0b, 0x21, 0xc7, 0x81,
-  0x55, 0xb2, 0x97, 0x63, 0xdb, 0xc6, 0xdd, 0xe3, 0xa3, 0x46, 0xd2, 0x50,
-  0x58, 0xa9, 0xde, 0xc1, 0x27, 0x1b, 0xda, 0x72, 0x22, 0x99, 0x88, 0x4d,
-  0x20, 0xaf, 0x47, 0x75, 0xe2, 0x50, 0x1f, 0x46, 0xd4, 0xf7, 0xf0, 0x4e,
-  0x00, 0xfe, 0x26, 0x5c, 0xed, 0x95, 0x0d, 0xb0, 0xba, 0x68, 0x2d, 0x71,
-  0xbc, 0x9c, 0xa6, 0xe9, 0x6f, 0x2a, 0x47, 0xa1, 0x57, 0x74, 0xf3, 0xf8,
-  0x86, 0x01, 0x5d, 0x9c, 0xb7, 0x4c, 0xf7, 0xac, 0xb6, 0x69, 0x6e, 0xcf,
-  0x78, 0xcb, 0xdc, 0x8e, 0xfd, 0xef, 0xb3, 0x61, 0x5c, 0xeb, 0x27, 0x41,
-  0xfd, 0xc5, 0xa0, 0xf6, 0x01, 0xe6, 0x29, 0x59, 0x72, 0xf3, 0x24, 0xe6,
-  0xf0, 0x53, 0x53, 0xe8, 0x6f, 0x92, 0xf7, 0x22, 0x30, 0xb4, 0x13, 0xca,
-  0x25, 0x4a, 0xe7, 0xc6, 0x54, 0x91, 0x83, 0xf1, 0xe1, 0xc9, 0x49, 0x0d,
-  0x66, 0x8d, 0x97, 0x4d, 0xca, 0x8e, 0x4a, 0x4e, 0x56, 0xb9, 0xa0, 0x05,
-  0xf4, 0x1c, 0xb9, 0x25, 0xa7, 0x70, 0xf0, 0x12, 0x12, 0x0d, 0x19, 0x8e,
-  0x33, 0x2e, 0x53, 0x8b, 0x16, 0x8b, 0x25, 0x4b, 0x68, 0x95, 0xb1, 0x44,
-  0x81, 0x8a, 0xdd, 0x2b, 0x3a, 0x92, 0xe5, 0xaf, 0x45, 0x90, 0x3a, 0xfd,
-  0xdf, 0x9e, 0xf4, 0x3a, 0xc2, 0x62, 0xce, 0x0b, 0x8b, 0x3e, 0x8a, 0xad,
-  0xb4, 0x8f, 0x84, 0xb5, 0x30, 0x8e, 0x27, 0x5f, 0x1c, 0x42, 0x81, 0x39,
-  0xe0, 0xf5, 0x31, 0x60, 0x94, 0x70, 0x76, 0x15, 0x5c, 0x5b, 0xd2, 0x14,
-  0x24, 0xd7, 0xb2, 0x09, 0x23, 0xfb, 0xb4, 0x86, 0x35, 0x66, 0x90, 0xf9,
-  0xd1, 0x0b, 0xfe, 0x77, 0xdf, 0x20, 0xeb, 0x1f, 0xab, 0x44, 0x85, 0xc7,
-  0x5b, 0xd5, 0x64, 0x6a, 0x58, 0x77, 0x72, 0xdb, 0x3e, 0x8e, 0x6d, 0x3a,
-  0x8a, 0xce, 0xdc, 0xbe, 0xf8, 0x1a, 0x39, 0x68, 0xb3, 0x59, 0xb0, 0x63,
-  0x3d, 0xce, 0x29, 0x52, 0xd5, 0xae, 0x53, 0x25, 0x7d, 0x3f, 0xb2, 0x4d,
-  0x33, 0x44, 0xb1, 0xed, 0xaa, 0x10, 0x7d, 0x8e, 0x34, 0x89, 0x3c, 0xdb,
-  0xea, 0x5a, 0x2a, 0x6c, 0x15, 0x49, 0x9a, 0x1c, 0x6d, 0x24, 0xf6, 0x24,
-  0x57, 0x23, 0x67, 0xa3, 0xbb, 0x48, 0x2d, 0xa4, 0x5a, 0xc6, 0xb7, 0x3e,
-  0x3f, 0x19, 0x6a, 0xb8, 0x9c, 0xc2, 0xd0, 0x4a, 0x56, 0x14, 0xcf, 0x82,
-  0xab, 0x7c, 0x36, 0xd1, 0x78, 0xbb, 0x16, 0xc2, 0x40, 0xe4, 0xf8, 0x06,
-  0x16, 0x18, 0xc5, 0x1a, 0x4c, 0xd2, 0x6a, 0xf9, 0xc8, 0xaa, 0x37, 0x85,
-  0x4a, 0x8e, 0xfe, 0xd4, 0xe2, 0xcb, 0x5e, 0xf9, 0x98, 0x3c, 0x48, 0xd0,
-  0x9c, 0x4b, 0xa7, 0x53, 0xfd, 0x56, 0x5d, 0x9b, 0x58, 0x97, 0xa8, 0x0b,
-  0x00, 0x27, 0x20, 0xf9, 0x7d, 0xe2, 0x39, 0xab, 0x68, 0xbf, 0xf7, 0x1b,
-  0x9e, 0x8c, 0xb7, 0x66, 0x2b, 0xfd, 0x25, 0x04, 0xf9, 0x91, 0x14, 0xd9,
-  0x84, 0xbc, 0xed, 0x24, 0xc8, 0xff, 0xbb, 0xd7, 0x7e, 0xaf, 0xdf, 0xfe,
-  0xb6, 0x7b, 0x3d, 0xe4, 0x59, 0xbf, 0x20, 0xa1, 0x6f, 0xed, 0xbe, 0x12,
-  0x0f, 0x64, 0x29, 0xd2, 0xa3, 0xde, 0xb6, 0x11, 0xcc, 0x48, 0xf3, 0xa2,
-  0x79, 0xde, 0xd0, 0x1a, 0x3d, 0x38, 0x03, 0xce, 0x46, 0x37, 0x80, 0x82,
-  0x49, 0xea, 0xd4, 0xe4, 0x66, 0xb9, 0x25, 0xa1, 0xeb, 0x41, 0x92, 0xf3,
-  0xa3, 0xd7, 0x87, 0x2a, 0x29, 0xe2, 0x17, 0xa9, 0xe5, 0xa1, 0x4a, 0x96,
-  0x24, 0x92, 0x71, 0x1d, 0xd2, 0x80, 0x88, 0xe8, 0x5d, 0x8b, 0xcb, 0xd3,
-  0xe1, 0x50, 0x68, 0x31, 0x54, 0x0d, 0x7c, 0x8d, 0xeb, 0x00, 0x4b, 0x58,
-  0x61, 0x0b, 0x3e, 0x00, 0x8f, 0xaa, 0x46, 0x90, 0x60, 0x3d, 0x83, 0x6b,
-  0xac, 0xb3, 0xca, 0x18, 0x54, 0x33, 0x5e, 0x45, 0x26, 0x07, 0x54, 0xbe,
-  0xb1, 0x4b, 0x64, 0xbb, 0x8a, 0xe7, 0xb7, 0x31, 0x8b, 0x23, 0xec, 0x77,
-  0x97, 0x25, 0xb5, 0x1a, 0x70, 0x9d, 0x09, 0xe3, 0x93, 0xd5, 0xf5, 0xb5,
-  0x14, 0x2b, 0x38, 0x90, 0x0b, 0xa8, 0x34, 0x2c, 0x01, 0x98, 0xca, 0xfa,
-  0x5f, 0xf4, 0x35, 0xe6, 0xaf, 0x27, 0x25, 0x5b, 0x21, 0x0f, 0xf5, 0x44,
-  0x1e, 0x69, 0xe5, 0x03, 0x31, 0xf5, 0x0f, 0xa2, 0xfe, 0x8b, 0xee, 0x77,
-  0xb8, 0x78, 0x77, 0x7a, 0xa7, 0xa8, 0xe0, 0x4e, 0xff, 0xa7, 0x35, 0xbc,
-  0x49, 0xe9, 0x42, 0xcb, 0xda, 0x61, 0x3e, 0x5a, 0x67, 0x04, 0x66, 0x6b,
-  0x09, 0xfd, 0x8c, 0x3b, 0xc7, 0xf8, 0x47, 0xeb, 0x2f, 0x9e, 0xcd, 0x52,
-  0x2d, 0xd7, 0xc4, 0xc2, 0x58, 0x2b, 0x0d, 0x5b, 0x13, 0x65, 0xb4, 0xff,
-  0xee, 0x1a, 0x14, 0x5a, 0x65, 0x2c, 0xb5, 0x3b, 0x49, 0x22, 0xa1, 0x40,
-  0x79, 0x8a, 0xcc, 0x63, 0xb5, 0x6b, 0xad, 0x72, 0x9b, 0x49, 0x3d, 0x4d,
-  0x29, 0xb1, 0x56, 0x0e, 0xd7, 0x89, 0x3f, 0x10, 0xea, 0x84, 0x14, 0xd5,
-  0x42, 0xc9, 0xd5, 0xb2, 0x14, 0x5f, 0x79, 0xed, 0xd5, 0x68, 0x36, 0x0f,
-  0x4f, 0xc7, 0x65, 0x25, 0x15, 0x51, 0xa5, 0x0c, 0x1a, 0x2e, 0x4d, 0x7e,
-  0x50, 0x8b, 0xd8, 0xa8, 0x9d, 0x6f, 0xd0, 0xc6, 0x1b, 0x40, 0x4a, 0x8d,
-  0x03, 0x9c, 0x70, 0x42, 0x48, 0x5d, 0x88, 0x36, 0x23, 0xee, 0xbf, 0x2a,
-  0x87, 0xd5, 0x1a, 0x7b, 0x44, 0x10, 0x03, 0x0c, 0xd8, 0xd8, 0x85, 0xa3,
-  0x08, 0xbe, 0xa2, 0x05, 0x88, 0x21, 0x02, 0x25, 0x38, 0x15, 0x01, 0x9c,
-  0x78, 0xbb, 0x70, 0x09, 0x84, 0xa3, 0x5a, 0x01, 0x28, 0x31, 0x71, 0x8a,
-  0x6e, 0xad, 0xd5, 0x58, 0x2d, 0x16, 0xd9, 0xb0, 0x1d, 0xb5, 0xac, 0xfd,
-  0xa8, 0xc3, 0x3b, 0x25, 0xd1, 0x58, 0xa0, 0x36, 0xdd, 0x42, 0x3d, 0x76,
-  0xac, 0x3d, 0xd8, 0xfb, 0x48, 0x5e, 0x07, 0xcd, 0xbb, 0xa6, 0xbb, 0xa4,
-  0x69, 0x94, 0x36, 0x78, 0x52, 0xcc, 0x20, 0x42, 0x3f, 0x28, 0x9c, 0x7a,
-  0x0a, 0x10, 0xeb, 0xec, 0xd6, 0xc2, 0x5b, 0x24, 0x32, 0x3d, 0x99, 0xae,
-  0xaa, 0xba, 0x65, 0x31, 0xcc, 0x67, 0xd4, 0xf0, 0x55, 0x19, 0xd6, 0x26,
-  0x4e, 0x81, 0x02, 0xf5, 0xf5, 0xce, 0x0d, 0xe7, 0x6a, 0xbf, 0xb7, 0xa5,
-  0xa2, 0x7b, 0x2c, 0x62, 0x90, 0x7c, 0xdc, 0x25, 0x92, 0xdb, 0x98, 0x5d,
-  0xdd, 0xea, 0xdc, 0xe1, 0xb9, 0x77, 0x75, 0x4f, 0xd4, 0x57, 0xcc, 0xba,
-  0xfa, 0x7e, 0x25, 0x99, 0x06, 0x41, 0xd7, 0x0e, 0x8d, 0x57, 0x93, 0x10,
-  0xca, 0x35, 0x10, 0x06, 0x41, 0xcf, 0x39, 0xe3, 0xa1, 0x8d, 0xa2, 0x03,
-  0x17, 0xd1, 0x6d, 0xaf, 0xda, 0xfa, 0xef, 0xb7, 0x71, 0x72, 0xee, 0x3e,
-  0x0d, 0xcc, 0x37, 0xcc, 0x80, 0xf1, 0x91, 0x2e, 0x67, 0xda, 0x56, 0x23,
-  0x6e, 0x8b, 0xc9, 0x53, 0xfa, 0xf1, 0x2d, 0xff, 0xb0, 0x32, 0x88, 0x8c,
-  0xaa, 0x64, 0xe6, 0x8b, 0x76, 0x8a, 0x3c, 0x63, 0xdc, 0xcb, 0xb9, 0x1f,
-  0x83, 0x8a, 0x5e, 0xe1, 0x97, 0x22, 0x79, 0xe4, 0x1d, 0x9a, 0xdb, 0xdf,
-  0xd9, 0x98, 0xb6, 0xaa, 0x72, 0xa6, 0xc4, 0x29, 0x42, 0x4f, 0x49, 0x18,
-  0x2d, 0xa4, 0x5c, 0x88, 0x04, 0xf6, 0xcb, 0x9f, 0xea, 0x33, 0x29, 0x71,
-  0x96, 0x84, 0xbb, 0xa4, 0x6b, 0x40, 0x7f, 0xd6, 0xf7, 0x27, 0x82, 0x4a,
-  0x27, 0x38, 0xdf, 0xa3, 0x73, 0x7b, 0xac, 0x9a, 0x5c, 0x0b, 0x5d, 0xb0,
-  0xd1, 0x30, 0x2f, 0x05, 0x2d, 0xe6, 0xb3, 0x8f, 0x5b, 0xc5, 0x23, 0xbe,
-  0x65, 0x94, 0x79, 0x58, 0xe8, 0xa7, 0xd6, 0x30, 0x13, 0xc9, 0xcb, 0xd7,
-  0x30, 0xc3, 0xa3, 0x0e, 0xed, 0x53, 0x2b, 0x06, 0x75, 0x0f, 0x4e, 0xee,
-  0x3d, 0x84, 0x7e, 0x81, 0xbb, 0xdc, 0x3a, 0x73, 0xcb, 0x82, 0xae, 0xda,
-  0xe2, 0xc1, 0x5f, 0x6e, 0x11, 0x5d, 0x95, 0x52, 0x0a, 0x84, 0xbb, 0x5b,
-  0x93, 0xea, 0x39, 0x23, 0xb1, 0x67, 0xce, 0x16, 0x5e, 0x49, 0x52, 0xf9,
-  0x5d, 0xab, 0x2e, 0x63, 0xf9, 0x90, 0x4d, 0x6f, 0x8e, 0xde, 0x8c, 0xd7,
-  0xa5, 0x7b, 0xd6, 0x27, 0x87, 0xa7, 0x49, 0x8c, 0x63, 0xb6, 0x08, 0xd9,
-  0x4f, 0xe3, 0x1e, 0x3a, 0x60, 0x18, 0xce, 0xdf, 0x1c, 0x7f, 0x7d, 0x66,
-  0x3f, 0xd6, 0x2e, 0xf9, 0xa3, 0x2b, 0x7c, 0xca, 0xa9, 0x9c, 0x8f, 0x65,
-  0xc5, 0xda, 0xe0, 0x5c, 0xc9, 0x05, 0xef, 0x84, 0x20, 0x7a, 0x44, 0x29,
-  0x5c, 0x21, 0xc5, 0x81, 0x52, 0xa4, 0x54, 0xc7, 0x5d, 0x97, 0xef, 0x4b,
-  0xc7, 0x6d, 0xef, 0xeb, 0xaf, 0xda, 0xb7, 0xd5, 0xd1, 0x9b, 0x35, 0xdd,
-  0xf1, 0x37, 0x43, 0x4b, 0x75, 0xd1, 0x2b, 0x5a, 0x4b, 0xbd, 0x20, 0xef,
-  0xb8, 0xe3, 0xe4, 0x71, 0x29, 0x3b, 0xfd, 0xc1, 0xb4, 0xe0, 0x27, 0x1f,
-  0x4a, 0xf2, 0x42, 0xf5, 0x92, 0xcb, 0xcf, 0x99, 0x95, 0xf3, 0x98, 0xae,
-  0xc9, 0x8e, 0xa2, 0x71, 0x81, 0xd5, 0x3f, 0xac, 0x6e, 0x1a, 0xac, 0xb1,
-  0x02, 0xf0, 0x59, 0x75, 0x0a, 0xe4, 0x5c, 0x5b, 0x9d, 0xd3, 0x6c, 0x4d,
-  0x52, 0x6e, 0x5b, 0xaf, 0x1c, 0xde, 0xd3, 0x25, 0x05, 0x4f, 0x29, 0xcb,
-  0x80, 0xd1, 0x0b, 0xb9, 0x8e, 0xbe, 0x68, 0x1d, 0x08, 0xc1, 0x06, 0x31,
-  0xab, 0xb0, 0xb9, 0xa5, 0x70, 0xad, 0xb3, 0x81, 0xc7, 0xa1, 0xcb, 0xa0,
-  0xfc, 0x69, 0x52, 0x25, 0x62, 0x32, 0x56, 0xac, 0x99, 0x56, 0x58, 0x21,
-  0xa3, 0xfe, 0x9a, 0x6f, 0x42, 0xfc, 0xde, 0xd2, 0xaf, 0x96, 0xfb, 0x91,
-  0xf2, 0x0d, 0x2a, 0xd8, 0xb0, 0xfc, 0x6b, 0x29, 0xb8, 0x91, 0x38, 0x60,
-  0x5b, 0xee, 0xee, 0xf7, 0x6c, 0xae, 0x79, 0x6f, 0x37, 0x53, 0x5d, 0x4a,
-  0x76, 0x25, 0x18, 0xa4, 0x23, 0x6d, 0x3c, 0x48, 0x27, 0xed, 0x8c, 0xbe,
-  0x63, 0xfb, 0x56, 0x4f, 0x9e, 0xed, 0xc1, 0x38, 0xc6, 0xc9, 0x38, 0x62,
-  0xff, 0x91, 0xc4, 0x56, 0x64, 0xc0, 0x4e, 0x57, 0x6c, 0xb7, 0x82, 0xd3,
-  0xa1, 0x0d, 0x23, 0x15, 0xa2, 0x49, 0xb1, 0xd3, 0xbe, 0xf7, 0xa5, 0x19,
-  0xcc, 0x7a, 0x06, 0x9a, 0x99, 0x47, 0x01, 0x5e, 0x95, 0x19, 0x98, 0x2a,
-  0xbf, 0x1c, 0xdc, 0x57, 0xcb, 0x80, 0xcd, 0x3e, 0x03, 0x80, 0xcb, 0xa3,
-  0x4a, 0x41, 0xef, 0xcb, 0x61, 0xaf, 0xf3, 0xf6, 0xf3, 0xa5, 0x27, 0x98,
-  0x75, 0x33, 0x75, 0xa8, 0xad, 0xdb, 0x8c, 0x7b, 0xd2, 0x85, 0xaf, 0xae,
-  0x51, 0xae, 0x26, 0x24, 0xa3, 0x55, 0xab, 0x76, 0xa5, 0x76, 0x87, 0xfa,
-  0x81, 0xd2, 0xdc, 0xd0, 0x12, 0x78, 0xc9, 0x9d, 0xe9, 0x47, 0xa4, 0x3d,
-  0x36, 0x08, 0x56, 0x88, 0x42, 0x13, 0x23, 0xe3, 0xc4, 0x00, 0x61, 0x9a,
-  0xe2, 0xca, 0xc1, 0x3c, 0x2c, 0x8c, 0x81, 0xcb, 0xc9, 0xc3, 0xf2, 0x95,
-  0xd1, 0xef, 0xff, 0x61, 0x5f, 0x02, 0xbb, 0xe0, 0x9f, 0xe6, 0x7c, 0x30,
-  0xe7, 0x49, 0xdc, 0x2d, 0x75, 0x47, 0xbf, 0xc7, 0xaa, 0xc0, 0x24, 0x23,
-  0x4b, 0x83, 0x84, 0x32, 0x6e, 0xf0, 0xf7, 0x23, 0x77, 0xe9, 0x5a, 0x65,
-  0x89, 0x28, 0x4b, 0xee, 0x21, 0x19, 0xb4, 0x74, 0x02, 0x91, 0x34, 0xff,
-  0xc2, 0x05, 0xe2, 0xe8, 0x0d, 0x92, 0x18, 0xd9, 0x15, 0x1d, 0x16, 0x15,
-  0xff, 0x4b, 0xa1, 0xa2, 0x3d, 0x09, 0x3e, 0x34, 0x72, 0x96, 0x47, 0xe5,
-  0xf3, 0xea, 0x91, 0x12, 0xe3, 0xbf, 0x1f, 0x0a, 0x30, 0x85, 0x52, 0x38,
-  0xcf, 0x97, 0xc6, 0x6c, 0x9f, 0x59, 0x4d, 0xb2, 0xec, 0xc9, 0xde, 0x30,
-  0x50, 0xa7, 0x07, 0xad, 0x12, 0x3f, 0x88, 0x84, 0x81, 0xc1, 0x3e, 0x28,
-  0x1c, 0x23, 0x79, 0xa4, 0xbf, 0xd7, 0x3a, 0x00, 0x12, 0x62, 0xbf, 0x82,
-  0x9d, 0xe0, 0xbe, 0x5e, 0xc9, 0xb2, 0x53, 0x8f, 0xfb, 0x00, 0xf1, 0xf8,
-  0x8c, 0x35, 0x4b, 0xa6, 0x95, 0x90, 0x85, 0x2e, 0x0f, 0x38, 0x7c, 0xfb,
-  0x56, 0x6b, 0x4b, 0x1a, 0x62, 0xad, 0x53, 0x92, 0x38, 0xd9, 0x60, 0x2c,
-  0xe5, 0x57, 0xa0, 0x9e, 0xfb, 0xf2, 0xcf, 0x70, 0x61, 0xb2, 0x3e, 0x34,
-  0x5c, 0x9b, 0x0c, 0x6c, 0xa1, 0xf5, 0xd0, 0x0a, 0x55, 0xd3, 0xe9, 0x23,
-  0x26, 0x2f, 0x9f, 0xcf, 0xdc, 0xe9, 0x11, 0x1c, 0x76, 0xe7, 0x2b, 0xdf,
-  0x7f, 0xbc, 0x39, 0xd5, 0x8a, 0x5a, 0xd3, 0x67, 0x9f, 0xce, 0x3b, 0x24,
-  0x7e, 0xb9, 0xd5, 0x20, 0x66, 0x92, 0x14, 0x0c, 0xac, 0xd4, 0xc8, 0x0c,
-  0xf3, 0x13, 0x63, 0xbc, 0x6e, 0xdd, 0xc6, 0xc7, 0x7b, 0x95, 0x48, 0xf8,
-  0x42, 0x73, 0xeb, 0x15, 0xd0, 0x97, 0x9d, 0xad, 0xf0, 0x47, 0x90, 0x64,
-  0xc2, 0xf6, 0x01, 0xbb, 0xeb, 0x46, 0x6d, 0x60, 0xcc, 0xa8, 0x95, 0x58,
-  0xf2, 0xf9, 0x68, 0x4f, 0xa2, 0xe6, 0xe7, 0x69, 0xec, 0x53, 0x7d, 0x65,
-  0x06, 0x3c, 0xb6, 0x18, 0xc6, 0x57, 0x84, 0xa5, 0x90, 0xa8, 0xfb, 0x78,
-  0x73, 0xce, 0x83, 0xc6, 0x7a, 0xc9, 0xba, 0x95, 0x11, 0x18, 0x4b, 0x95,
-  0xf0, 0xfd, 0xd2, 0xc8, 0x92, 0x28, 0xd3, 0x6e, 0x2e, 0x4a, 0x97, 0xbf,
-  0x3d, 0x5a, 0x93, 0x74, 0x17, 0x6d, 0x1a, 0xd4, 0x9e, 0xd8, 0xcd, 0xb6,
-  0xcc, 0xe7, 0xa7, 0x69, 0x75, 0x06, 0x31, 0xfb, 0xa1, 0xe6, 0x90, 0x31,
-  0xd1, 0x4a, 0x66, 0x78, 0xda, 0x8a, 0xb7, 0x65, 0x33, 0xca, 0x3b, 0x49,
-  0x07, 0x73, 0x8a, 0x8b, 0xcf, 0x0e, 0x1b, 0x68, 0x14, 0x56, 0xae, 0x38,
-  0x5d, 0x0a, 0x58, 0x0b, 0xb5, 0x0a, 0x77, 0xd8, 0x07, 0xa8, 0x16, 0xb2,
-  0x10, 0xcf, 0xde, 0x22, 0xbc, 0x60, 0x5a, 0x77, 0xb9, 0x30, 0x72, 0x91,
-  0xda, 0xcd, 0xb5, 0x48, 0xe7, 0x1f, 0x68, 0x6e, 0x9e, 0xaa, 0x4e, 0x05,
-  0xf1, 0x6c, 0xd5, 0x79, 0x80, 0x31, 0x21, 0x66, 0x9d, 0xac, 0xa8, 0xaf,
-  0x43, 0x69, 0xaa, 0xe9, 0x69, 0x9a, 0x4a, 0xc2, 0x17, 0xac, 0x9b, 0x2a,
-  0xee, 0xac, 0x8a, 0x0b, 0x63, 0x63, 0x3b, 0x40, 0x1a, 0x55, 0x5c, 0x7c,
-  0x60, 0x17, 0x25, 0xa7, 0x10, 0xf1, 0x97, 0x5e, 0x88, 0x84, 0xe5, 0x83,
-  0xc1, 0xdf, 0x4c, 0x38, 0xe8, 0x1e, 0x72, 0x9d, 0xb4, 0xda, 0x8b, 0xef,
-  0x47, 0x14, 0x56, 0xb4, 0xfd, 0xe8, 0x41, 0xc9, 0xe3, 0x0c, 0x08, 0xe9,
-  0xb0, 0x58, 0x1d, 0xca, 0x4f, 0x80, 0x42, 0x1e, 0x6d, 0xe6, 0xc5, 0xe3,
-  0xcd, 0x29, 0x55, 0x7e, 0xc4, 0x8c, 0xe2, 0xe5, 0x52, 0xbb, 0xfa, 0xf0,
-  0x26, 0xfc, 0x46, 0xf3, 0xd5, 0x7a, 0x2d, 0xdb, 0xc4, 0x7a, 0xdd, 0xbc,
-  0xb7, 0xd9, 0x68, 0x59, 0xde, 0xb0, 0xe1, 0xa2, 0x13, 0x2e, 0xb7, 0x75,
-  0x94, 0xfc, 0xe2, 0xd4, 0x27, 0xfd, 0x48, 0x19, 0x99, 0x70, 0x19, 0x18,
-  0x7d, 0x4d, 0x59, 0xda, 0x7f, 0xd7, 0x3a, 0x48, 0x8c, 0x92, 0xa5, 0xaa,
-  0xf1, 0x2c, 0x20, 0x28, 0xb8, 0xfc, 0xdc, 0x49, 0x42, 0x8a, 0xd7, 0xe8,
-  0x43, 0xa3, 0x4b, 0x4b, 0x6f, 0x5c, 0x11, 0x6b, 0x45, 0x32, 0x6c, 0xc2,
-  0x11, 0x4a, 0x6a, 0x3b, 0x0a, 0x74, 0x7f, 0x88, 0x33, 0x68, 0x49, 0x52,
-  0x81, 0x40, 0xf7, 0x62, 0xd0, 0xd4, 0x9c, 0xb1, 0x81, 0x8c, 0xd9, 0x11,
-  0xe5, 0xd9, 0x6c, 0x8e, 0xcd, 0x26, 0x62, 0x5d, 0xbe, 0x63, 0xc5, 0x6d,
-  0x0d, 0x49, 0x16, 0x2e, 0x46, 0xb2, 0x7b, 0xb1, 0x01, 0x56, 0xcc, 0x87,
-  0x5e, 0x33, 0x8d, 0x83, 0x62, 0x26, 0x8f, 0xf7, 0x4f, 0x1c, 0x6e, 0x59,
-  0x9a, 0xab, 0x39, 0xd1, 0x80, 0x25, 0xe1, 0x40, 0x03, 0x23, 0x3c, 0xe0,
-  0x34, 0x7e, 0x1c, 0x29, 0x40, 0xe8, 0xb3, 0xa5, 0x6d, 0xe4, 0x1d, 0xb2,
-  0x32, 0x26, 0x5f, 0x6a, 0x89, 0x27, 0xde, 0xd0, 0x0f, 0x8d, 0x2e, 0x16,
-  0x5d, 0xac, 0xb1, 0x0a, 0xde, 0x69, 0x6c, 0x54, 0x2d, 0x46, 0xad, 0x8f,
-  0xe1, 0xea, 0xe0, 0xe4, 0xbc, 0x4e, 0x3e, 0x46, 0x25, 0x58, 0xad, 0xc0,
-  0xf3, 0xd9, 0xb6, 0x14, 0x47, 0x1f, 0x95, 0x1f, 0x8a, 0xa1, 0x62, 0xe4,
-  0x1f, 0x7f, 0x7c, 0x7e, 0x13, 0x5e, 0x2e, 0xc6, 0x45, 0xe0, 0xae, 0x74,
-  0x1d, 0x1d, 0xdd, 0x8c, 0x0f, 0xac, 0x19, 0x0d, 0xbf, 0xd0, 0x2a, 0xaf,
-  0xa9, 0x27, 0x94, 0xb2, 0xc5, 0x22, 0x44, 0xba, 0x6e, 0xe7, 0x73, 0x77,
-  0xc8, 0x2a, 0xe2, 0xa6, 0xae, 0x41, 0x6e, 0x66, 0x49, 0x32, 0x33, 0x78,
-  0x25, 0x12, 0x4b, 0xf8, 0xf4, 0x54, 0x49, 0xf4, 0x31, 0x4c, 0xae, 0xa4,
-  0x5d, 0x6c, 0xe3, 0x50, 0xa5, 0x7f, 0x4f, 0xde, 0x19, 0x1c, 0x88, 0x9e,
-  0x19, 0xc8, 0x06, 0x3e, 0x91, 0x5a, 0x90, 0x6f, 0x44, 0x16, 0x4c, 0x0a,
-  0x0f, 0x1e, 0xd2, 0x71, 0x02, 0xd1, 0x9a, 0x86, 0x54, 0x45, 0x1f, 0xd7,
-  0xda, 0xda, 0x28, 0x30, 0xb4, 0xa5, 0xfe, 0x8a, 0x47, 0xdb, 0xb2, 0x10,
-  0x08, 0x37, 0x2c, 0x88, 0xbe, 0x1f, 0xd8, 0xac, 0x2e, 0xc9, 0x18, 0x3d,
-  0x3a, 0x58, 0xff, 0x8f, 0x1a, 0x3d, 0xf4, 0x4e, 0xf3, 0x3b, 0x3c, 0xde,
-  0x23, 0xac, 0x89, 0x26, 0xb5, 0x6d, 0xb4, 0x8b, 0x57, 0x24, 0x33, 0xbf,
-  0x0f, 0xdc, 0x75, 0xcc, 0x5e, 0xbf, 0x00, 0xab, 0x45, 0x9e, 0x09, 0x94,
-  0x52, 0x52, 0x29, 0xca, 0x55, 0x21, 0xb8, 0xae, 0x1f, 0x26, 0x25, 0x77,
-  0xfc, 0xad, 0xbd, 0x35, 0x63, 0x70, 0xbb, 0x17, 0x8e, 0x41, 0x3f, 0x6c,
-  0x8e, 0xc0, 0x0f, 0xe1, 0x17, 0x8e, 0x41, 0xda, 0x6b, 0xc3, 0x46, 0x0a,
-  0xbe, 0xca, 0x3b, 0x0e, 0x25, 0xb6, 0xe3, 0x7e, 0x28, 0x9f, 0x0d, 0x2f,
-  0xf1, 0x99, 0x01, 0x0a, 0xe9, 0x3a, 0x26, 0x33, 0x97, 0x42, 0x33, 0x68,
-  0x57, 0xa8, 0x8b, 0xba, 0xa2, 0x73, 0xa1, 0x32, 0x64, 0x6d, 0x40, 0x36,
-  0x12, 0xf4, 0x4d, 0x40, 0x2b, 0x59, 0xb3, 0x75, 0xf6, 0x15, 0x52, 0xa4,
-  0x23, 0xf7, 0x05, 0x92, 0xa4, 0x53, 0xc3, 0x82, 0x98, 0x62, 0xf7, 0x3f,
-  0x92, 0x37, 0x7c, 0x44, 0xda, 0x31, 0x8f, 0xc1, 0x38, 0x6c, 0xe9, 0xc6,
-  0x80, 0x49, 0x07, 0x1f, 0xab, 0x06, 0x92, 0x14, 0x89, 0x2f, 0x42, 0xfa,
-  0x31, 0xaa, 0xd9, 0x3a, 0x8d, 0xa1, 0x3d, 0x0e, 0xeb, 0xec, 0x9d, 0xe8,
-  0x23, 0xc8, 0xfb, 0x8d, 0x6b, 0x04, 0x8c, 0x65, 0x74, 0x55, 0x32, 0x98,
-  0x51, 0x0e, 0x4f, 0xbd, 0x8a, 0xfa, 0xa1, 0x71, 0xe8, 0x54, 0xb4, 0x74,
-  0x48, 0xbd, 0x10, 0x2a, 0x92, 0x88, 0xa1, 0xef, 0x4d, 0x39, 0x69, 0x8b,
-  0x15, 0xec, 0x0f, 0x5c, 0xa4, 0xae, 0x41, 0xcd, 0xb6, 0x41, 0x5a, 0xba,
-  0xa4, 0x1b, 0xb5, 0xb2, 0x11, 0xdb, 0xf9, 0xbb, 0x57, 0xa4, 0xf3, 0x01,
-  0xf1, 0xef, 0x1d, 0x80, 0xf1, 0x98, 0xe6, 0x0c, 0xa9, 0x1a, 0x1f, 0x98,
-  0x4d, 0x5c, 0x10, 0x8a, 0x56, 0x4b, 0x94, 0x2f, 0xe3, 0x05, 0x99, 0xe7,
-  0xb0, 0x65, 0x3f, 0x3e, 0x38, 0x49, 0x46, 0x6f, 0x20, 0x70, 0x1b, 0xd2,
-  0x6e, 0x23, 0xb7, 0xb8, 0xad, 0xb9, 0x95, 0xe5, 0xfc, 0x1d, 0x3d, 0x99,
-  0x5e, 0x3d, 0xbc, 0x13, 0xf6, 0xfd, 0x11, 0xd7, 0xa3, 0x3c, 0x68, 0x4c,
-  0x91, 0xfd, 0x25, 0x74, 0x68, 0x49, 0x78, 0x4b, 0x48, 0xd4, 0xba, 0x12,
-  0xbb, 0x2a, 0x9a, 0x4c, 0xa7, 0x1f, 0xa5, 0xd9, 0x39, 0x13, 0x80, 0x3b,
-  0x71, 0x23, 0x06, 0xb1, 0x81, 0x77, 0x97, 0x3b, 0xb0, 0xb6, 0x3e, 0x2c,
-  0x3f, 0x71, 0x23, 0x1e, 0x9b, 0xfb, 0x31, 0xd1, 0xfa, 0xd7, 0x8b, 0x83,
-  0x70, 0xf9, 0x81, 0xff, 0x5a, 0x35, 0x22, 0x5f, 0xfa, 0xe6, 0xd7, 0xcf,
-  0x2c, 0xff, 0x38, 0x4f, 0x6e, 0xf2, 0x3e, 0x15, 0xb4, 0x8f, 0x30, 0x08,
-  0x25, 0xb0, 0x5e, 0x29, 0x33, 0x28, 0x93, 0xaa, 0x0b, 0xa6, 0x5b, 0x33,
-  0x3d, 0x2d, 0xaa, 0x5e, 0xa6, 0x50, 0x70, 0x81, 0x8c, 0x35, 0xf9, 0x13,
-  0xdc, 0x10, 0xba, 0x8b, 0x37, 0x3a, 0x54, 0x42, 0x5f, 0xc3, 0xa0, 0x94,
-  0xf4, 0x91, 0xf7, 0x48, 0x25, 0xe8, 0x21, 0x90, 0xdc, 0xc6, 0xdc, 0x95,
-  0xda, 0xf7, 0xc6, 0xd5, 0x02, 0x88, 0xe7, 0x81, 0x65, 0x3c, 0xd0, 0x0c,
-  0x14, 0x6d, 0x82, 0x23, 0xf4, 0x21, 0xe5, 0xc4, 0xb5, 0x62, 0x4b, 0x5d,
-  0xf1, 0x64, 0xc2, 0x76, 0x49, 0x83, 0xa0, 0xf1, 0x73, 0x40, 0x80, 0xe0,
-  0x55, 0x72, 0x8d, 0x43, 0xb1, 0x06, 0xf1, 0xeb, 0x12, 0x11, 0xa9, 0xb4,
-  0xca, 0x97, 0x16, 0x7d, 0xdb, 0x36, 0xaf, 0xbb, 0x5a, 0x4a, 0x4e, 0x3d,
-  0x09, 0x46, 0x28, 0x61, 0x02, 0xad, 0x32, 0x04, 0xce, 0xb8, 0xd7, 0xae,
-  0x43, 0x25, 0xf5, 0x0a, 0xb9, 0x6c, 0xa8, 0x16, 0xd7, 0xc6, 0x8a, 0x35,
-  0xcb, 0xf5, 0x58, 0x96, 0xb6, 0xd8, 0x93, 0x85, 0x84, 0xc5, 0xe9, 0xdc,
-  0x0c, 0x5a, 0x68, 0x94, 0x69, 0x5a, 0x67, 0xd5, 0x1c, 0xd7, 0x42, 0x30,
-  0x10, 0x88, 0xb8, 0x3b, 0x08, 0xb2, 0xc1, 0xa1, 0xdd, 0xb6, 0x40, 0x26,
-  0x31, 0x58, 0xa0, 0xeb, 0xb7, 0xa0, 0x22, 0x58, 0xf2, 0xbc, 0x8f, 0x1f,
-  0x0c, 0xaa, 0x44, 0x5a, 0xe9, 0x22, 0x1a, 0x56, 0xaa, 0x5c, 0xfc, 0xad,
-  0x3e, 0xda, 0x0a, 0xce, 0xc2, 0x02, 0x2b, 0x88, 0xfd, 0xa6, 0x86, 0x95,
-  0x6f, 0xb9, 0x38, 0x80, 0x84, 0xce, 0x13, 0xb8, 0x01, 0xfc, 0x3b, 0x7f,
-  0x7a, 0x34, 0x3e, 0xf0, 0x57, 0x62, 0x0d, 0x3f, 0x20, 0x04, 0x48, 0x2e,
-  0xb3, 0xb5, 0x35, 0x16, 0x98, 0x88, 0x0c, 0x3d, 0x35, 0x85, 0x8b, 0x74,
-  0x4a, 0xaa, 0x01, 0x69, 0x18, 0xf6, 0xa6, 0x16, 0xed, 0xd3, 0x50, 0xb8,
-  0x8f, 0x28, 0x35, 0x17, 0x16, 0x54, 0x04, 0x85, 0x3b, 0xd8, 0xf5, 0xcb,
-  0x5a, 0x8e, 0x50, 0x13, 0x9d, 0xa5, 0x03, 0x4d, 0x3e, 0x48, 0xe6, 0x40,
-  0x01, 0x18, 0x19, 0x0a, 0x82, 0x1b, 0xee, 0xd3, 0x52, 0x23, 0xaa, 0x14,
-  0x55, 0xcc, 0x92, 0x7b, 0x35, 0xbf, 0xe0, 0xeb, 0xe3, 0xcb, 0xad, 0x36,
-  0x8c, 0x4d, 0x5c, 0xaf, 0x73, 0x06, 0x4c, 0x43, 0x3d, 0x12, 0xb1, 0xab,
-  0x34, 0xec, 0x12, 0xd6, 0x68, 0xeb, 0x92, 0xf7, 0xcb, 0x79, 0x9c, 0x69,
-  0x6d, 0xad, 0x46, 0x73, 0x87, 0xb4, 0x0c, 0xec, 0x98, 0xf6, 0x11, 0x40,
-  0xa1, 0xfc, 0x10, 0x2a, 0xd2, 0x9c, 0x7a, 0x23, 0xfe, 0xa2, 0xa3, 0xe3,
-  0xd3, 0xe3, 0xcb, 0x63, 0xc9, 0xeb, 0x6c, 0x89, 0x24, 0xac, 0xe7, 0xcc,
-  0x38, 0xf5, 0xf3, 0x26, 0xcb, 0xe9, 0xee, 0x4d, 0xb5, 0xe6, 0x78, 0xf4,
-  0x7d, 0x32, 0x39, 0x3a, 0xf8, 0x4e, 0xc2, 0x15, 0xca, 0xe8, 0xfc, 0xe2,
-  0xec, 0xfc, 0xd5, 0xc9, 0x9b, 0xa3, 0x41, 0x74, 0x78, 0x76, 0xfe, 0xe3,
-  0x20, 0x7a, 0x7d, 0xf6, 0xdd, 0x71, 0x87, 0xbf, 0x90, 0x7d, 0xd5, 0x2d,
-  0xe2, 0x92, 0x92, 0x51, 0x1d, 0xbb, 0x1d, 0xe2, 0x12, 0xea, 0x56, 0x07,
-  0x8b, 0x7f, 0x7a, 0x32, 0xbe, 0xc4, 0xd6, 0x37, 0x63, 0xb9, 0x10, 0xae,
-  0x2e, 0xf0, 0xdb, 0x69, 0x69, 0xc1, 0x19, 0x5c, 0x3b, 0xea, 0xb7, 0xa3,
-  0xea, 0x07, 0x0e, 0xdd, 0x61, 0x29, 0x5d, 0x11, 0x90, 0xf8, 0xdf, 0x0e,
-  0xe4, 0xbc, 0xd8, 0x6b, 0x15, 0xec, 0xc6, 0xd6, 0x92, 0x2f, 0x37, 0x92,
-  0x73, 0x43, 0x2f, 0x0b, 0x5a, 0x8f, 0x28, 0x3b, 0xc4, 0x0b, 0x2d, 0xce,
-  0x65, 0xb6, 0x2a, 0xda, 0x12, 0x4f, 0x1c, 0x05, 0x1d, 0x4a, 0x1e, 0xd2,
-  0xa0, 0xa6, 0x90, 0xb1, 0x6b, 0xb1, 0xf4, 0x65, 0x1d, 0xa8, 0xfb, 0xe0,
-  0x85, 0x96, 0xd3, 0xc6, 0x57, 0x08, 0x77, 0xf9, 0xe8, 0xc1, 0x90, 0x6c,
-  0xda, 0xbb, 0xa4, 0xbc, 0xcf, 0x19, 0xf4, 0x86, 0x6f, 0x22, 0x41, 0xa3,
-  0xf9, 0x71, 0xf4, 0x38, 0xd0, 0x84, 0x46, 0x10, 0xd6, 0xf3, 0xfd, 0x84,
-  0x01, 0xad, 0x4a, 0x5f, 0xec, 0x25, 0x86, 0x7f, 0x07, 0x6b, 0xd2, 0xd6,
-  0x4e, 0x44, 0x09, 0x40, 0xf4, 0x42, 0x90, 0x59, 0x86, 0x58, 0x47, 0xba,
-  0x5b, 0xe4, 0x80, 0x10, 0xc7, 0xa7, 0xf1, 0x17, 0xe6, 0x52, 0x44, 0x79,
-  0x18, 0x7e, 0x6f, 0xd8, 0x61, 0xfc, 0x60, 0xc1, 0x79, 0x0d, 0x3f, 0xff,
-  0xf5, 0x68, 0xe2, 0x47, 0x47, 0x13, 0xb2, 0x86, 0x2f, 0xf0, 0xc7, 0x2f,
-  0xa2, 0x8a, 0x00, 0xd8, 0x49, 0x74, 0xc0, 0x4d, 0x12, 0xdb, 0x6a, 0xe4,
-  0x31, 0x6c, 0x65, 0x2c, 0xcc, 0xb6, 0x24, 0x58, 0xdd, 0xef, 0xb5, 0x9a,
-  0x6b, 0x58, 0x2a, 0xaa, 0x93, 0x44, 0xf0, 0x8c, 0x84, 0x16, 0xb4, 0xc4,
-  0x19, 0xd9, 0x62, 0x09, 0x06, 0x4e, 0x19, 0x90, 0x97, 0xef, 0x56, 0x08,
-  0x5f, 0x49, 0xf5, 0x1b, 0x2e, 0xdd, 0xdf, 0x39, 0xcf, 0x96, 0x1e, 0x1f,
-  0x82, 0xfc, 0x5f, 0xcc, 0x62, 0x98, 0xcf, 0x2c, 0x72, 0x68, 0x2d, 0xce,
-  0x34, 0xd0, 0xa5, 0x85, 0x7f, 0xc7, 0x6a, 0x99, 0x65, 0xf1, 0x83, 0x53,
-  0xa2, 0x51, 0xdc, 0x5c, 0xcb, 0x37, 0xb0, 0xa3, 0xb0, 0xf2, 0x4b, 0xdc,
-  0x5d, 0xa3, 0x5e, 0x70, 0xe3, 0xf8, 0xf0, 0xd1, 0xb3, 0xae, 0x5a, 0xc9,
-  0x9a, 0xf6, 0x02, 0x43, 0x62, 0x0b, 0x71, 0x43, 0x90, 0xb3, 0x14, 0xa8,
-  0x3b, 0x9c, 0x86, 0x49, 0x05, 0xa8, 0xe6, 0x81, 0xe0, 0x10, 0x62, 0x6a,
-  0x78, 0x46, 0xe2, 0x03, 0x4a, 0xee, 0xb4, 0xa5, 0x5c, 0x33, 0x6a, 0xaa,
-  0xc6, 0x3a, 0x0a, 0x22, 0x01, 0x47, 0x25, 0x38, 0xe8, 0x54, 0x1a, 0xa3,
-  0xda, 0x5a, 0x8b, 0xd4, 0x92, 0xda, 0x00, 0x67, 0x5b, 0x99, 0x09, 0xaf,
-  0x2b, 0xdc, 0x9a, 0xc5, 0xbe, 0x20, 0x05, 0x52, 0x6d, 0xac, 0xc6, 0x6b,
-  0x7f, 0x57, 0x4f, 0xb2, 0xa6, 0xe6, 0x78, 0x90, 0x9c, 0x60, 0xdd, 0x9d,
-  0x5f, 0x5d, 0xca, 0x7d, 0xd5, 0x98, 0xac, 0xde, 0x5f, 0xdd, 0xf2, 0x93,
-  0xf0, 0x9d, 0xc6, 0x1b, 0x8a, 0x9e, 0x8c, 0xea, 0x40, 0x9b, 0xc3, 0x2d,
-  0x17, 0x13, 0x09, 0x60, 0x49, 0xd9, 0xe5, 0xb6, 0xf5, 0x23, 0xf6, 0xe0,
-  0x1e, 0x2e, 0xac, 0x36, 0x9f, 0xcf, 0x82, 0xdd, 0xd6, 0x99, 0x72, 0x6f,
-  0xdb, 0x62, 0xd3, 0x74, 0xc5, 0x09, 0xcb, 0x96, 0xfc, 0xdd, 0x6a, 0x2b,
-  0x4b, 0xee, 0xc3, 0xb6, 0xbc, 0xe0, 0xe0, 0xda, 0xfb, 0x2d, 0xc3, 0xcb,
-  0x19, 0x89, 0x0d, 0x5a, 0x77, 0xd9, 0x89, 0xcd, 0x3a, 0x06, 0x50, 0x99,
-  0xe1, 0xb8, 0x65, 0x1d, 0x66, 0x0c, 0x1a, 0xc0, 0xd0, 0x95, 0x15, 0x67,
-  0x7b, 0x8b, 0x42, 0x54, 0x8e, 0xa2, 0x8e, 0x92, 0x43, 0xb5, 0x82, 0xd9,
-  0x1e, 0x43, 0xb0, 0x5e, 0x79, 0x54, 0x89, 0x18, 0x53, 0xe2, 0x78, 0xff,
-  0x82, 0x33, 0x11, 0x3b, 0x33, 0x77, 0x40, 0x6a, 0xbe, 0xa6, 0x79, 0x68,
-  0xd2, 0x8e, 0x7a, 0x1c, 0xba, 0x3e, 0x29, 0x57, 0xc5, 0x6c, 0xb5, 0xe8,
-  0x8d, 0x18, 0xd8, 0x53, 0x37, 0x45, 0x17, 0x86, 0x19, 0x68, 0xf3, 0x20,
-  0xc8, 0x25, 0x44, 0x7d, 0x3e, 0xdb, 0x69, 0xd8, 0xc7, 0x0d, 0xa5, 0x2e,
-  0xc0, 0xa5, 0x1b, 0xee, 0x86, 0xf4, 0x43, 0xed, 0xb5, 0x84, 0xc4, 0x8a,
-  0xef, 0xb5, 0xdf, 0x70, 0xf3, 0x76, 0x68, 0x31, 0x59, 0x00, 0xdf, 0x1d,
-  0xed, 0x74, 0x8b, 0xbb, 0xaf, 0x38, 0x71, 0xc2, 0x57, 0x58, 0x4e, 0x49,
-  0x7b, 0xe5, 0xc1, 0x96, 0x5e, 0x76, 0x93, 0x88, 0x0b, 0x57, 0x8c, 0xd6,
-  0x0e, 0x68, 0xf3, 0x0a, 0xb8, 0x72, 0x35, 0x59, 0x4b, 0xc7, 0x19, 0x90,
-  0x73, 0x9e, 0x88, 0xa9, 0x7c, 0xdf, 0x9a, 0x08, 0xab, 0xd2, 0xee, 0x32,
-  0xcb, 0x9d, 0x97, 0x77, 0xbb, 0x9d, 0x85, 0x0c, 0x6c, 0x70, 0xb5, 0xfa,
-  0xcf, 0x97, 0xa7, 0x63, 0x17, 0x01, 0xbc, 0x2b, 0x42, 0xb8, 0xc3, 0xdb,
-  0x30, 0x85, 0x68, 0x4d, 0x85, 0x6e, 0x7e, 0x55, 0x25, 0x70, 0x3f, 0x84,
-  0x3d, 0xbe, 0x30, 0xcb, 0xf9, 0xdd, 0x5e, 0xe7, 0x10, 0x1a, 0xcb, 0xc3,
-  0x03, 0x60, 0x2b, 0x8b, 0x0d, 0x60, 0xaf, 0x3d, 0x00, 0xc3, 0x10, 0xed,
-  0x1e, 0x02, 0xbf, 0xdc, 0x1a, 0xc2, 0x13, 0x1d, 0xc2, 0x93, 0x8f, 0x5f,
-  0x85, 0x70, 0x10, 0x4f, 0x7e, 0xd9, 0x2a, 0x74, 0x0e, 0xe1, 0x29, 0x07,
-  0xcb, 0x2f, 0xef, 0x9e, 0xb6, 0x09, 0xd1, 0x55, 0x9e, 0x2a, 0x05, 0x98,
-  0x63, 0x0e, 0x34, 0x26, 0xef, 0x0a, 0x67, 0x04, 0x40, 0x57, 0x7c, 0x93,
-  0x39, 0xbf, 0xf7, 0x1f, 0x9d, 0x34, 0xeb, 0xce, 0xe9, 0x88, 0xe9, 0x41,
-  0xc3, 0x3f, 0x16, 0xd8, 0x91, 0x2b, 0xfd, 0x85, 0x03, 0x88, 0x87, 0xda,
-  0x4b, 0xa3, 0xd6, 0x30, 0x8a, 0xa5, 0xae, 0x89, 0x63, 0x46, 0xac, 0x99,
-  0xe0, 0x5a, 0x69, 0x19, 0x95, 0x9c, 0x9b, 0x7a, 0x6a, 0xe3, 0x4a, 0x24,
-  0xa8, 0x34, 0x98, 0xee, 0xa7, 0x32, 0xdd, 0x4f, 0xff, 0x4f, 0x9a, 0xee,
-  0xa7, 0xeb, 0xa7, 0xfb, 0x89, 0x58, 0x15, 0x80, 0x1c, 0x39, 0x9c, 0xc4,
-  0xc5, 0x5a, 0x6c, 0x5d, 0x0b, 0x85, 0x74, 0x30, 0x93, 0xb5, 0x90, 0xfe,
-  0x52, 0x50, 0x80, 0xe4, 0x1b, 0x6a, 0x66, 0x3d, 0x2b, 0xa8, 0x49, 0xf4,
-  0x8c, 0xca, 0x53, 0x56, 0xe9, 0x94, 0xf9, 0x1c, 0xd7, 0xc4, 0x70, 0x31,
-  0xbc, 0xff, 0xb1, 0x3d, 0xea, 0xac, 0xcb, 0x78, 0xd4, 0xae, 0x9c, 0x38,
-  0x88, 0x80, 0xac, 0x1a, 0x14, 0x60, 0x0c, 0xd4, 0x53, 0x6a, 0xf7, 0xf8,
-  0xcd, 0x77, 0x27, 0x17, 0x67, 0x6f, 0x5e, 0x1f, 0xbf, 0x71, 0x91, 0x34,
-  0x97, 0xa8, 0x42, 0xd7, 0x61, 0xc1, 0xe8, 0xac, 0xbe, 0x21, 0xf2, 0x2f,
-  0x2c, 0x39, 0x9c, 0x12, 0xbb, 0x5c, 0xea, 0x5f, 0xa3, 0xb0, 0xb9, 0xe0,
-  0x21, 0x3b, 0x7c, 0x2c, 0x96, 0x2d, 0xd9, 0x39, 0x30, 0xe3, 0xe8, 0xb5,
-  0x91, 0x84, 0x15, 0xb9, 0x02, 0xda, 0x6c, 0x79, 0x7b, 0x3f, 0x4d, 0x96,
-  0xb6, 0x7e, 0xfe, 0x3e, 0xd1, 0xf2, 0x7d, 0x41, 0x44, 0x5a, 0x6d, 0x10,
-  0x7e, 0xf3, 0x82, 0x06, 0x7f, 0x32, 0xe3, 0xd5, 0xfe, 0xf6, 0xf6, 0xcf,
-  0x40, 0x83, 0xfb, 0x42, 0xed, 0x9b, 0xed, 0x2b, 0x39, 0xb4, 0xe3, 0xf8,
-  0x0a, 0x11, 0x96, 0xc2, 0x07, 0x7b, 0xd9, 0x46, 0xe0, 0xab, 0x1a, 0xbf,
-  0x23, 0x5d, 0xfa, 0x87, 0x1f, 0x7f, 0xe5, 0x2e, 0xc6, 0xb5, 0xc2, 0x04,
-  0xbf, 0x7a, 0x17, 0x35, 0xed, 0xfa, 0xe0, 0xf4, 0xf4, 0x5f, 0xea, 0xa0,
-  0x66, 0x3c, 0xad, 0xf7, 0x01, 0xad, 0xc3, 0x59, 0x0c, 0x87, 0xce, 0x62,
-  0x68, 0xdb, 0xdb, 0x82, 0x37, 0x0f, 0xb4, 0x93, 0x37, 0x67, 0x3a, 0x1a,
-  0x31, 0x37, 0x0d, 0xad, 0xe6, 0xc7, 0xcc, 0xd5, 0xd3, 0xe3, 0x81, 0xb5,
-  0xd0, 0x8a, 0xc3, 0x2f, 0xed, 0x74, 0x03, 0x34, 0x1f, 0x18, 0x59, 0xc8,
-  0x35, 0xca, 0x9d, 0x5d, 0x51, 0x60, 0xf2, 0x60, 0xb0, 0x46, 0xaa, 0x52,
-  0x87, 0x61, 0x98, 0x0b, 0xbb, 0x72, 0xb8, 0x16, 0xaa, 0xb0, 0x72, 0xaa,
-  0x16, 0x13, 0x9d, 0x62, 0xfa, 0x56, 0x80, 0x49, 0x67, 0x45, 0x00, 0x43,
-  0xe1, 0x53, 0xf4, 0xc3, 0xc9, 0x65, 0x74, 0x78, 0x76, 0xe4, 0x8f, 0xe8,
-  0xa5, 0x06, 0x69, 0xe2, 0x1f, 0x36, 0xd5, 0x64, 0x6c, 0x5f, 0x62, 0xe1,
-  0x8e, 0x94, 0x10, 0xe0, 0x6f, 0x19, 0x36, 0x3d, 0x07, 0xcc, 0x95, 0x66,
-  0xe3, 0x43, 0xdd, 0xa5, 0x42, 0x82, 0xe0, 0x66, 0x81, 0x15, 0xc1, 0x81,
-  0xd5, 0x02, 0x9c, 0xd6, 0xea, 0x6a, 0x3c, 0x00, 0x15, 0x87, 0xf8, 0x89,
-  0x98, 0x1c, 0x88, 0xb5, 0x70, 0xf1, 0xae, 0x4c, 0x6c, 0x49, 0x24, 0x59,
-  0x1d, 0x84, 0xaa, 0x44, 0x88, 0xc1, 0x25, 0xe5, 0x50, 0x0a, 0xc0, 0xc0,
-  0x6b, 0xd9, 0xc9, 0xf7, 0x8c, 0xd3, 0x2d, 0x43, 0x09, 0x63, 0x3a, 0x77,
-  0xd5, 0xee, 0x9f, 0x79, 0xb0, 0x0c, 0x8f, 0x88, 0x04, 0xd3, 0x01, 0xa7,
-  0x41, 0xc0, 0xc2, 0xe3, 0xaa, 0x7b, 0x66, 0x2e, 0x21, 0x47, 0x4b, 0x20,
-  0xb7, 0x76, 0xdc, 0x35, 0xe1, 0xfa, 0xd9, 0x53, 0x6a, 0x17, 0x3c, 0x71,
-  0x16, 0xa8, 0xc4, 0xbd, 0x94, 0xfe, 0x3d, 0x38, 0xd2, 0x4f, 0x74, 0x30,
-  0x17, 0xa7, 0x34, 0xf9, 0xb9, 0x98, 0xc2, 0x35, 0x9e, 0x1b, 0x75, 0x52,
-  0xe0, 0x3d, 0x61, 0x7d, 0x57, 0xcb, 0x5e, 0xfa, 0x37, 0x9f, 0x99, 0xb9,
-  0x4d, 0x89, 0xc1, 0xee, 0x01, 0xa3, 0x02, 0x38, 0x85, 0x54, 0xa9, 0x52,
-  0x92, 0x16, 0x8c, 0xc7, 0xa9, 0x40, 0xac, 0x71, 0xa3, 0xed, 0x82, 0xab,
-  0xda, 0x4a, 0x20, 0x37, 0x7e, 0xba, 0xa6, 0x1f, 0xd4, 0xa4, 0x96, 0x52,
-  0x88, 0xe8, 0xa4, 0x19, 0x4c, 0xc5, 0xed, 0xb7, 0x5b, 0xfb, 0xac, 0xb9,
-  0x28, 0xbe, 0x7a, 0xb8, 0xb4, 0xe8, 0x9e, 0xfc, 0xdc, 0x31, 0x0b, 0xf6,
-  0x79, 0x72, 0xc2, 0x53, 0x50, 0x7d, 0x74, 0x39, 0x77, 0x53, 0xb4, 0x0f,
-  0xe1, 0x91, 0x47, 0x29, 0x2a, 0xec, 0xda, 0x54, 0xc7, 0xdb, 0xd2, 0x0f,
-  0x8b, 0x90, 0xa3, 0x3e, 0xf7, 0x9d, 0xc4, 0xf0, 0x50, 0xd1, 0x3d, 0x92,
-  0xa5, 0x6e, 0x0b, 0xa4, 0x69, 0xf9, 0x88, 0xfd, 0x7e, 0xc4, 0x97, 0x73,
-  0xf7, 0xb7, 0xbd, 0xd1, 0xc6, 0x20, 0x12, 0x36, 0xe2, 0x63, 0x9c, 0xb0,
-  0x0e, 0x52, 0x95, 0x2d, 0xac, 0xe5, 0x86, 0x58, 0xf7, 0x38, 0x53, 0xbf,
-  0x05, 0xf0, 0xba, 0x47, 0x48, 0x15, 0x6d, 0x5d, 0xa2, 0x95, 0x24, 0xe1,
-  0x42, 0xa9, 0x9e, 0x05, 0x68, 0x8a, 0x38, 0xd3, 0x01, 0xbc, 0x13, 0x9f,
-  0x21, 0x53, 0xce, 0xc5, 0x85, 0x14, 0x96, 0x5c, 0x09, 0x63, 0x61, 0x1b,
-  0x42, 0xdf, 0xee, 0x6e, 0x73, 0xb1, 0xcf, 0x0f, 0xc6, 0x63, 0x5b, 0xe8,
-  0xc3, 0x70, 0x41, 0x65, 0x09, 0xd5, 0xb5, 0x89, 0x84, 0x68, 0xcd, 0x17,
-  0x6c, 0x1b, 0x32, 0xb4, 0x8d, 0x46, 0xe4, 0xc3, 0xee, 0x13, 0xd7, 0x97,
-  0xeb, 0xea, 0x3b, 0x69, 0x6b, 0xf0, 0x91, 0x5d, 0x75, 0xf7, 0xf5, 0x5d,
-  0x47, 0x5f, 0x4f, 0x5b, 0x44, 0xb4, 0xb7, 0xf7, 0x59, 0xa4, 0x39, 0x02,
-  0x44, 0x42, 0xe8, 0xcf, 0x77, 0x18, 0xf4, 0x48, 0xcf, 0x0d, 0x15, 0x08,
-  0x22, 0xe9, 0xac, 0x99, 0x8c, 0xd1, 0x04, 0x5d, 0x3d, 0x73, 0x5d, 0x91,
-  0x50, 0xd1, 0x87, 0xa9, 0x4b, 0x0f, 0x49, 0xeb, 0xec, 0x00, 0xf5, 0x83,
-  0x0f, 0xca, 0x09, 0xaf, 0x01, 0xf1, 0xf1, 0xb5, 0xb1, 0x24, 0x36, 0x8a,
-  0xa0, 0x9f, 0xcf, 0xfc, 0x94, 0xfc, 0xb8, 0x05, 0xc5, 0x1e, 0x89, 0xf3,
-  0xa3, 0xe0, 0xb0, 0x3a, 0x42, 0xb1, 0x10, 0x24, 0xe7, 0xb7, 0x68, 0x66,
-  0x42, 0xc8, 0xab, 0xbe, 0x17, 0x39, 0x7e, 0xe7, 0x5a, 0x0e, 0x4d, 0x00,
-  0x53, 0x50, 0x24, 0x2a, 0xae, 0xe1, 0x8f, 0x48, 0xc1, 0xec, 0xd8, 0xa7,
-  0x31, 0x15, 0xe1, 0x69, 0xdf, 0x7d, 0xee, 0xd7, 0xc4, 0x86, 0x64, 0xa6,
-  0xc6, 0x6d, 0x3d, 0x3e, 0xde, 0x22, 0x22, 0xc2, 0x1d, 0xff, 0x7d, 0x71,
-  0x7c, 0x79, 0xc1, 0xe1, 0xaa, 0x11, 0x20, 0x54, 0x9a, 0x9a, 0x32, 0x1d,
-  0xa9, 0x2d, 0x67, 0x96, 0x97, 0x72, 0x0d, 0x01, 0xd7, 0xf5, 0x94, 0x2c,
-  0x25, 0x69, 0x71, 0xcf, 0x70, 0x0d, 0xf3, 0x5a, 0x85, 0x5a, 0x5f, 0x2b,
-  0x46, 0xee, 0x21, 0x1f, 0x3e, 0xa6, 0x27, 0xc3, 0xad, 0xbf, 0x8f, 0xe1,
-  0x11, 0xf0, 0x3e, 0x61, 0x9c, 0x2e, 0xd0, 0x7d, 0xe4, 0xdc, 0xef, 0x16,
-  0x98, 0x82, 0x9c, 0x26, 0x65, 0x80, 0x12, 0x2a, 0xde, 0x32, 0x12, 0xb9,
-  0xce, 0xe3, 0x4c, 0x72, 0x52, 0x65, 0x10, 0x2e, 0xfd, 0x14, 0xdd, 0x29,
-  0x96, 0xba, 0x44, 0x9f, 0x03, 0x47, 0x2b, 0x8a, 0x9e, 0x72, 0x1d, 0xb6,
-  0xb6, 0xcd, 0x69, 0x92, 0xdf, 0x99, 0x6b, 0x52, 0x13, 0x3a, 0xa4, 0xc0,
-  0x0b, 0xf6, 0x0b, 0xf7, 0x29, 0x54, 0x8d, 0xe1, 0x15, 0xc9, 0xcc, 0xbc,
-  0x60, 0x66, 0x46, 0x08, 0x96, 0x4d, 0x0e, 0xe5, 0xf7, 0xc8, 0x2f, 0xb1,
-  0x35, 0x6b, 0x9c, 0x46, 0x49, 0x3e, 0x01, 0x8b, 0x05, 0xe3, 0xf1, 0x30,
-  0x75, 0xe5, 0x03, 0xcd, 0x7c, 0xd1, 0x1e, 0x98, 0x02, 0xe0, 0x04, 0xdd,
-  0x3c, 0x6b, 0x13, 0xc4, 0xf8, 0xf2, 0xec, 0x22, 0x28, 0x4a, 0x5b, 0x67,
-  0xba, 0x1a, 0xeb, 0xcb, 0x8f, 0x78, 0xef, 0xec, 0xa0, 0xc3, 0x75, 0xe0,
-  0x12, 0x20, 0x25, 0xc4, 0x88, 0x33, 0xe9, 0x7d, 0xaf, 0x9f, 0x7a, 0x47,
-  0x97, 0x4e, 0xed, 0x3b, 0xd2, 0x00, 0x38, 0x23, 0xd0, 0x90, 0xcc, 0xe8,
-  0x86, 0x24, 0xc1, 0x7b, 0x11, 0xd8, 0x5f, 0xf6, 0xe4, 0x9c, 0x9d, 0xad,
-  0x40, 0xeb, 0x92, 0xc9, 0xc8, 0x64, 0xa4, 0x39, 0x8d, 0x6c, 0xb7, 0x52,
-  0xc3, 0x94, 0x33, 0x06, 0x36, 0x49, 0x51, 0xce, 0xd0, 0x99, 0x03, 0xab,
-  0x33, 0xd3, 0xbf, 0xbb, 0xba, 0x3c, 0xa6, 0x37, 0x8c, 0xcd, 0xec, 0x15,
-  0x10, 0x47, 0x8a, 0x46, 0x5e, 0xa0, 0x82, 0x43, 0x73, 0xb3, 0xa7, 0x24,
-  0x0a, 0xcc, 0xb4, 0x92, 0xab, 0x04, 0x57, 0x39, 0xf1, 0xc8, 0x8b, 0x15,
-  0x3b, 0x6e, 0x9d, 0xcf, 0xcf, 0x2e, 0x2e, 0x6d, 0x68, 0xe8, 0x16, 0x1f,
-  0x34, 0x8e, 0x0f, 0x7b, 0xea, 0x35, 0xff, 0x26, 0xa8, 0x62, 0x58, 0x76,
-  0x57, 0x14, 0xd7, 0x4d, 0x41, 0x3b, 0xd6, 0x10, 0xc3, 0xd4, 0x15, 0x0f,
-  0xe6, 0xfb, 0x72, 0x65, 0x53, 0xae, 0x5c, 0x86, 0x3b, 0xf3, 0xe7, 0x6e,
-  0x3f, 0xa6, 0x4f, 0xf0, 0x7c, 0xb2, 0xdb, 0xa6, 0x0e, 0x16, 0xbe, 0x2f,
-  0x8e, 0xc7, 0x97, 0x32, 0x76, 0xfe, 0xad, 0x35, 0x76, 0xc9, 0x72, 0xb4,
-  0xd2, 0xb2, 0x9d, 0x8e, 0x25, 0x50, 0x07, 0x47, 0xc8, 0x2c, 0xb4, 0xda,
-  0x98, 0x73, 0x05, 0x05, 0x6b, 0xf6, 0x24, 0x08, 0xd7, 0x03, 0xd7, 0x54,
-  0x5a, 0xb9, 0xb4, 0xea, 0x73, 0x51, 0x4f, 0x7b, 0xe9, 0xd1, 0xa5, 0x2b,
-  0x47, 0x22, 0x2f, 0x6e, 0x83, 0x16, 0x9e, 0xfa, 0x16, 0x96, 0xcc, 0xde,
-  0xb5, 0x81, 0x13, 0xb3, 0x8e, 0xf3, 0x87, 0xce, 0xf9, 0x7c, 0x9d, 0x64,
-  0x46, 0x18, 0xf2, 0x9c, 0x6f, 0xe7, 0x99, 0xcb, 0x79, 0x36, 0xf1, 0x28,
-  0x18, 0x0a, 0x7f, 0x6c, 0x71, 0xee, 0x70, 0x34, 0x36, 0xc8, 0xee, 0xc9,
-  0xa7, 0xfe, 0x82, 0x60, 0xf1, 0xd9, 0x3b, 0x77, 0x74, 0x05, 0x82, 0x0b,
-  0x89, 0x7d, 0x63, 0x69, 0xb6, 0x02, 0x10, 0x0b, 0x71, 0x89, 0x39, 0xe3,
-  0x41, 0xa9, 0x77, 0xa6, 0x65, 0x88, 0x6e, 0x46, 0x0f, 0x3e, 0xd1, 0x8b,
-  0x88, 0xd4, 0x78, 0xbf, 0x5d, 0x92, 0x49, 0x88, 0xc3, 0xec, 0x65, 0x3c,
-  0x3a, 0xb8, 0x99, 0xbb, 0x2d, 0x46, 0xd1, 0x39, 0x23, 0x87, 0xc2, 0xc4,
-  0x5e, 0xfe, 0x9b, 0x6f, 0x4d, 0x0e, 0xcb, 0xe9, 0xd1, 0x01, 0xee, 0x4f,
-  0x04, 0x5e, 0xa4, 0x5c, 0x8a, 0x19, 0x9f, 0xf0, 0xaf, 0x01, 0xea, 0x63,
-  0x6b, 0xca, 0xcf, 0xfd, 0xcb, 0x25, 0xcd, 0x83, 0x14, 0x93, 0xe6, 0x23,
-  0x4f, 0x95, 0xb6, 0x48, 0x6b, 0x41, 0x13, 0x8e, 0x3b, 0xf3, 0x99, 0xe6,
-  0x2d, 0x49, 0x39, 0x9c, 0x11, 0x2d, 0x5c, 0xd9, 0x33, 0x35, 0x2e, 0x1e,
-  0x34, 0x25, 0x77, 0xc2, 0x81, 0xac, 0x13, 0x40, 0x2c, 0xe8, 0xe4, 0x70,
-  0xd1, 0x1c, 0x6a, 0x2b, 0x63, 0x86, 0x3b, 0x37, 0xc7, 0x79, 0x2d, 0x8d,
-  0x0b, 0x0b, 0xab, 0xb0, 0x13, 0xed, 0xf2, 0xd3, 0x0d, 0x18, 0xd4, 0xa7,
-  0x42, 0x8d, 0x8e, 0x74, 0xdc, 0x35, 0x56, 0x1b, 0x1d, 0x77, 0xec, 0xb2,
-  0x43, 0xb1, 0xdb, 0xac, 0x5a, 0xa2, 0x20, 0x48, 0xd0, 0xd4, 0x33, 0xdf,
-  0xd4, 0x15, 0xc0, 0xd6, 0x8c, 0xbf, 0x1f, 0xd4, 0x78, 0x90, 0x43, 0x5a,
-  0x4b, 0xdd, 0x93, 0xa2, 0x2b, 0x48, 0x14, 0x4c, 0xc7, 0xb1, 0x0a, 0xfa,
-  0x10, 0x62, 0xb8, 0xcc, 0x73, 0x29, 0x8e, 0xe8, 0x62, 0xfd, 0x46, 0x12,
-  0x45, 0xd8, 0x36, 0xbb, 0x97, 0x9a, 0xfe, 0x7b, 0xa3, 0x75, 0xab, 0xd8,
-  0x6d, 0xd0, 0xaa, 0xb8, 0xba, 0x5a, 0xb4, 0x8a, 0xa6, 0x3c, 0xfd, 0x5c,
-  0xd5, 0xb7, 0xdb, 0x8c, 0x4b, 0x88, 0x5f, 0x1e, 0x9f, 0xbe, 0x39, 0xbe,
-  0x74, 0x58, 0x1c, 0x36, 0x9b, 0xe0, 0xf9, 0xe7, 0x6a, 0xd8, 0x52, 0xed,
-  0xca, 0x50, 0x70, 0x9b, 0xee, 0xd7, 0x67, 0xbb, 0xce, 0xb6, 0xc3, 0x81,
-  0x73, 0xfd, 0x52, 0xce, 0x5f, 0x10, 0x3e, 0x87, 0x62, 0xb5, 0xdf, 0x44,
-  0xaf, 0x8f, 0x9e, 0x71, 0xa8, 0xfe, 0x75, 0x52, 0x30, 0x0e, 0xb7, 0x57,
-  0x76, 0xf2, 0x80, 0x13, 0x3c, 0xdb, 0x0b, 0xb1, 0x22, 0x44, 0x41, 0x51,
-  0x96, 0xa1, 0xa2, 0x2c, 0x2d, 0x12, 0x27, 0x97, 0x92, 0xae, 0x2a, 0xf6,
-  0x40, 0x03, 0x5f, 0x35, 0x60, 0x10, 0x08, 0x07, 0xcd, 0xaa, 0xb9, 0x75,
-  0x36, 0xf1, 0xec, 0x89, 0x67, 0x13, 0xc5, 0xc3, 0x92, 0xe1, 0xcc, 0xa4,
-  0xac, 0x6e, 0x07, 0xcd, 0x3e, 0x13, 0xd6, 0x74, 0x28, 0x27, 0x8b, 0xa5,
-  0xc5, 0xf6, 0x6b, 0x48, 0x70, 0x85, 0xb9, 0x2d, 0x78, 0xef, 0x59, 0xa8,
-  0xaf, 0x95, 0x5a, 0x4f, 0x93, 0xd6, 0x8f, 0x39, 0x9f, 0xd4, 0x00, 0xf6,
-  0xcf, 0x7e, 0xea, 0x9e, 0xe5, 0xaa, 0x82, 0x69, 0xa6, 0x40, 0x33, 0x8f,
-  0xbc, 0xa1, 0x52, 0xa6, 0x5c, 0xbe, 0x5e, 0xfe, 0x11, 0xc9, 0x22, 0x58,
-  0xfb, 0xe0, 0x95, 0xe7, 0x75, 0x75, 0x14, 0xf8, 0xaa, 0xbe, 0xd2, 0x01,
-  0x4f, 0x2a, 0x5d, 0xde, 0x84, 0xe4, 0xff, 0xa9, 0xdc, 0x85, 0xe7, 0xcd,
-  0x68, 0x48, 0xe3, 0x32, 0xb5, 0x04, 0x7f, 0x3b, 0x4c, 0x42, 0x5c, 0x87,
-  0x74, 0x40, 0xf4, 0x95, 0x26, 0x69, 0xf2, 0xb3, 0xc1, 0xe5, 0xf1, 0xe9,
-  0xae, 0x52, 0x25, 0x4d, 0x39, 0xbf, 0xce, 0x48, 0xc7, 0x9f, 0xb5, 0x8b,
-  0x43, 0x06, 0x8f, 0xef, 0xe9, 0x91, 0x94, 0xba, 0xaa, 0x60, 0x3b, 0x0c,
-  0x2d, 0xec, 0x1f, 0x78, 0xa2, 0x54, 0x2b, 0xbe, 0x34, 0x29, 0x99, 0x4d,
-  0xad, 0xc2, 0x86, 0x98, 0xd4, 0xc2, 0xe6, 0x3f, 0x7d, 0xaa, 0xd2, 0x8d,
-  0x09, 0xa0, 0xcc, 0xf9, 0x79, 0x21, 0xe6, 0x0c, 0xa4, 0xd0, 0x62, 0x84,
-  0x9f, 0xea, 0xe5, 0xa2, 0x5b, 0x59, 0x59, 0x01, 0x67, 0xe5, 0x81, 0x25,
-  0xe2, 0x6a, 0xef, 0xd3, 0x4c, 0xe3, 0xbd, 0x5b, 0xaf, 0x7f, 0xba, 0xc6,
-  0xaa, 0xa1, 0x9e, 0x88, 0x63, 0xd0, 0x52, 0xf0, 0xfc, 0x67, 0xfe, 0x24,
-  0x48, 0x12, 0xbf, 0xa4, 0xfe, 0xbb, 0x50, 0x2f, 0xb8, 0xb6, 0x0d, 0x29,
-  0xd1, 0xce, 0x12, 0xeb, 0x06, 0x4b, 0x4b, 0xb6, 0xef, 0x72, 0xe5, 0xb9,
-  0xee, 0x49, 0x2b, 0x8f, 0xd2, 0xe0, 0x18, 0x7f, 0x2a, 0x24, 0xf5, 0x0a,
-  0x78, 0xb9, 0x5e, 0x02, 0x27, 0x46, 0x11, 0x44, 0xe0, 0xfa, 0xa7, 0x9f,
-  0x2b, 0x6d, 0xd8, 0x8d, 0x64, 0x82, 0xe0, 0xda, 0x37, 0x3e, 0xdb, 0x09,
-  0xc5, 0xc2, 0x19, 0xdb, 0xd2, 0x24, 0x55, 0x7a, 0xed, 0x0b, 0x42, 0x19,
-  0x27, 0xc4, 0xa8, 0xaf, 0x89, 0xa8, 0xf1, 0x8c, 0xc7, 0x08, 0xf0, 0x8f,
-  0xed, 0xd5, 0xd9, 0x5a, 0x28, 0xa4, 0x44, 0x27, 0x47, 0xc1, 0x83, 0x4f,
-  0xfc, 0x04, 0xe3, 0x39, 0xdf, 0xb7, 0x0f, 0xa2, 0xea, 0x97, 0xd1, 0x26,
-  0xbf, 0x15, 0x80, 0xca, 0x7f, 0xf6, 0x54, 0xa3, 0x30, 0x39, 0xfe, 0xf6,
-  0x46, 0x96, 0xbf, 0xf5, 0x8c, 0x90, 0xc3, 0xa1, 0x2b, 0xbf, 0x2b, 0xc1,
-  0x94, 0x65, 0xd7, 0x35, 0xfb, 0xd9, 0xa7, 0x8f, 0x3c, 0xab, 0xd7, 0x52,
-  0xe9, 0x2e, 0xd3, 0xe0, 0xbd, 0xcf, 0xda, 0xc7, 0xdc, 0x04, 0x6f, 0x0b,
-  0x56, 0xa6, 0xa3, 0xc6, 0x27, 0x2d, 0xda, 0xe4, 0xe0, 0xeb, 0x7f, 0x33,
-  0xdb, 0x4a, 0xc1, 0x51, 0x98, 0xe5, 0xbf, 0x85, 0xe3, 0xfd, 0xdc, 0xd1,
-  0x93, 0xb3, 0xaa, 0x38, 0xf8, 0xff, 0x10, 0xf6, 0xd6, 0x41, 0xff, 0xcb,
-  0xea, 0x04, 0x2d, 0xc8, 0x9e, 0xd3, 0x4d, 0x1d, 0x54, 0x0b, 0x56, 0x6d,
-  0x4b, 0x93, 0xcf, 0x2d, 0xe2, 0x49, 0x47, 0xf7, 0x0d, 0x6d, 0x2a, 0xa8,
-  0x23, 0xb0, 0x4e, 0xed, 0x34, 0x8e, 0x41, 0x79, 0xb3, 0x12, 0xdd, 0xd6,
-  0xcd, 0xc8, 0x17, 0x35, 0x0f, 0x5e, 0xdb, 0xf3, 0xdc, 0x0b, 0x63, 0x83,
-  0x5c, 0x76, 0x48, 0xa3, 0x15, 0xe5, 0x37, 0x02, 0x19, 0xb2, 0x04, 0xcd,
-  0xaa, 0x1f, 0xca, 0x85, 0x98, 0xb1, 0x22, 0x8a, 0x36, 0xe3, 0xf5, 0x55,
-  0xf8, 0x38, 0x8e, 0x3a, 0xe8, 0x46, 0x85, 0x07, 0xf6, 0xe0, 0xd2, 0x2e,
-  0xdd, 0x24, 0xd3, 0x5b, 0x3b, 0x32, 0xda, 0x88, 0x8f, 0xbe, 0xf6, 0x6f,
-  0xfd, 0xf0, 0x83, 0xf0, 0x1c, 0x0e, 0x24, 0x09, 0x0d, 0xb9, 0x0e, 0xac,
-  0x9c, 0x0e, 0xa8, 0x5c, 0x53, 0xbc, 0xdd, 0x28, 0x69, 0x5c, 0x24, 0xf3,
-  0x84, 0x41, 0xc1, 0x44, 0x32, 0xc5, 0x42, 0x77, 0x05, 0x3f, 0x72, 0x54,
-  0x88, 0x14, 0x64, 0x49, 0x14, 0x38, 0x2e, 0x63, 0xff, 0xb5, 0x5a, 0x27,
-  0x68, 0x04, 0x07, 0x6f, 0x2f, 0xbf, 0x39, 0xbb, 0x18, 0x47, 0xdb, 0x9c,
-  0x03, 0x7d, 0x79, 0x71, 0xf2, 0xd5, 0x5b, 0xd2, 0xf8, 0x9c, 0xe5, 0xf9,
-  0x28, 0x26, 0x5d, 0x70, 0x1e, 0x8d, 0xab, 0x24, 0x9b, 0x24, 0xc5, 0xb5,
-  0x61, 0x8a, 0x03, 0xb4, 0x84, 0x79, 0x77, 0x5e, 0x08, 0xae, 0xaa, 0xaf,
-  0x86, 0x6c, 0xb6, 0x73, 0x09, 0xfe, 0x4a, 0xe9, 0xcb, 0xdc, 0x6b, 0x33,
-  0x69, 0x23, 0x85, 0xdb, 0xd5, 0xe0, 0xbe, 0xfc, 0xe6, 0xe0, 0xcd, 0xb7,
-  0x63, 0x43, 0xae, 0xfb, 0xfe, 0xfb, 0xef, 0x43, 0xc7, 0xcb, 0xfe, 0xf6,
-  0x36, 0xb0, 0xca, 0x6e, 0xe2, 0xf7, 0xef, 0x47, 0x65, 0xb2, 0xb1, 0x41,
-  0xe7, 0x68, 0xc3, 0xe7, 0x12, 0x28, 0x9c, 0x71, 0xb9, 0xa2, 0x9b, 0x8e,
-  0xbe, 0xde, 0x5e, 0xae, 0x26, 0x0c, 0x9f, 0xbc, 0xbd, 0xaa, 0xb4, 0x7c,
-  0x01, 0xde, 0xde, 0xde, 0xd8, 0x18, 0x1f, 0x1f, 0x47, 0x07, 0xa7, 0xe3,
-  0xb3, 0xe0, 0xdd, 0xcd, 0xdd, 0x2d, 0x12, 0x03, 0xae, 0x93, 0x8a, 0x7e,
-  0xd9, 0xd8, 0x38, 0x3d, 0xb8, 0x64, 0x2d, 0xe7, 0xbb, 0xe3, 0x8b, 0xf1,
-  0xc9, 0xd9, 0x1b, 0xde, 0x1d, 0xc6, 0x78, 0x88, 0xe7, 0x5c, 0x08, 0x9e,
-  0x05, 0x0f, 0xce, 0xc1, 0xbc, 0xb7, 0xc2, 0x01, 0x0c, 0x5c, 0x42, 0xa2,
-  0x8a, 0xc8, 0x6d, 0xe2, 0x58, 0xba, 0x67, 0xe0, 0x8d, 0xd8, 0x0a, 0xb4,
-  0x57, 0xac, 0x6a, 0x98, 0xf7, 0x71, 0x23, 0xf2, 0x86, 0x0e, 0xc1, 0x5e,
-  0x49, 0x26, 0x12, 0x32, 0x33, 0x10, 0x74, 0x01, 0x04, 0xab, 0x07, 0xf0,
-  0x07, 0x9d, 0x13, 0x1f, 0x9f, 0xbc, 0x3e, 0x27, 0x99, 0xff, 0xed, 0xf8,
-  0xe0, 0xeb, 0x63, 0x7e, 0xf4, 0xeb, 0xa4, 0xf2, 0xfb, 0x21, 0x05, 0x0e,
-  0xb8, 0x93, 0x37, 0x49, 0x55, 0x4e, 0xe3, 0x25, 0x47, 0x9d, 0x53, 0x37,
-  0x43, 0xe1, 0x8b, 0x41, 0xdb, 0x22, 0xfd, 0x79, 0xa0, 0xe9, 0x4c, 0x9f,
-  0x07, 0x0a, 0x74, 0xd8, 0xee, 0xc5, 0xf1, 0xc1, 0xd1, 0xeb, 0x63, 0x8b,
-  0xa7, 0x12, 0x18, 0x47, 0x6a, 0xf4, 0x26, 0x5f, 0x24, 0x81, 0xf1, 0x93,
-  0xef, 0x2a, 0x5e, 0x7c, 0xfa, 0x86, 0x96, 0x74, 0x4d, 0x77, 0x7e, 0xa3,
-  0xf0, 0xec, 0xe8, 0x2a, 0xdd, 0x96, 0xd6, 0xad, 0xbf, 0xd8, 0x2d, 0x89,
-  0xe1, 0xa1, 0xa8, 0xf8, 0x26, 0x5a, 0x2c, 0xd4, 0xdf, 0xcf, 0x77, 0x76,
-  0x76, 0x1e, 0x99, 0x07, 0xec, 0x8c, 0x7a, 0x0b, 0xd0, 0x54, 0xf6, 0xf9,
-  0xf1, 0x6d, 0xdf, 0xbe, 0x91, 0x66, 0x68, 0xb8, 0xe5, 0x3f, 0x33, 0x49,
-  0x11, 0x49, 0xab, 0xa4, 0x7b, 0xd0, 0xd3, 0x3c, 0x77, 0x7b, 0x50, 0x5b,
-  0x9e, 0x19, 0x63, 0xd8, 0xa4, 0x95, 0x21, 0x5a, 0xe1, 0x0d, 0x19, 0xfa,
-  0x2c, 0x05, 0xfb, 0x89, 0x8b, 0x87, 0x66, 0x93, 0xfc, 0x0d, 0xb5, 0xc9,
-  0x3f, 0x46, 0x79, 0x71, 0xbd, 0xbd, 0xd8, 0xc7, 0x25, 0x4b, 0x0f, 0xbd,
-  0x4a, 0x50, 0x65, 0xe6, 0x3e, 0x77, 0xa1, 0x47, 0x25, 0x2f, 0x2d, 0xc7,
-  0x39, 0x7e, 0xc4, 0xb8, 0x7e, 0xc1, 0x3a, 0x60, 0x3b, 0xb9, 0xca, 0xa8,
-  0xcc, 0xdc, 0xc2, 0x31, 0x3a, 0x3a, 0x29, 0x79, 0xcb, 0xd8, 0xca, 0x34,
-  0x22, 0x16, 0x42, 0xbd, 0xd0, 0xe7, 0x42, 0x24, 0xf4, 0x6b, 0x41, 0x44,
-  0x33, 0xaa, 0xde, 0x57, 0xfc, 0x16, 0x3b, 0x6b, 0xd5, 0x78, 0x0b, 0x48,
-  0x2a, 0x62, 0x59, 0x45, 0x4e, 0x32, 0x7a, 0x2c, 0xe9, 0x37, 0x63, 0x44,
-  0xb5, 0x2b, 0xe2, 0x8d, 0x03, 0x84, 0xe0, 0x86, 0x9b, 0x7d, 0x0e, 0x87,
-  0xa0, 0xa0, 0xd2, 0xd1, 0xcb, 0x47, 0x74, 0x1e, 0x4c, 0x4a, 0x56, 0x3f,
-  0xd3, 0x8b, 0x23, 0xa0, 0x1e, 0x2e, 0xc4, 0xde, 0xea, 0x0b, 0xf0, 0x49,
-  0x05, 0x02, 0xde, 0x4a, 0xe9, 0x0e, 0x05, 0x52, 0x46, 0x89, 0x94, 0x45,
-  0x42, 0x5f, 0xb4, 0x27, 0xdb, 0x08, 0xc7, 0xf9, 0xe8, 0x9e, 0x0e, 0xcf,
-  0x5d, 0xbd, 0x15, 0x5a, 0x81, 0x3b, 0x5e, 0x82, 0xdb, 0x04, 0xb3, 0x0f,
-  0x85, 0xdd, 0x47, 0x06, 0xb3, 0x4f, 0xab, 0xc0, 0x6f, 0xfc, 0xc7, 0xf6,
-  0xa8, 0x2c, 0x6f, 0xb6, 0xd3, 0xd9, 0xbb, 0x59, 0x19, 0xd3, 0x67, 0xc4,
-  0xd7, 0x5a, 0x1f, 0x8f, 0xe8, 0xc3, 0xe8, 0x2f, 0xae, 0xa9, 0xff, 0xa7,
-  0x9c, 0x76, 0x4f, 0xe3, 0x3f, 0xb6, 0x19, 0xd5, 0x0b, 0xc8, 0xc3, 0xc1,
-  0xaa, 0x75, 0xb0, 0x0e, 0x9a, 0x92, 0x00, 0xc8, 0xd1, 0x59, 0xec, 0x26,
-  0x8b, 0xe1, 0x75, 0xd4, 0x53, 0x5a, 0xfb, 0x69, 0x6f, 0x67, 0x67, 0x77,
-  0x7f, 0xf7, 0xf3, 0xe7, 0x3b, 0xfb, 0xbb, 0xbb, 0xbb, 0x7b, 0xfb, 0xbb,
-  0xfb, 0xfb, 0x7b, 0x3b, 0x3f, 0x6f, 0xf7, 0x36, 0x36, 0x8e, 0xce, 0xbe,
-  0x7f, 0x73, 0x7a, 0x76, 0x70, 0x14, 0x5d, 0x9e, 0x91, 0xaa, 0xcb, 0x86,
-  0x8a, 0x8e, 0x63, 0x0e, 0x38, 0xa7, 0x2a, 0x97, 0x6b, 0x2d, 0x34, 0x6a,
-  0xb6, 0xba, 0xcc, 0x21, 0x11, 0xf3, 0x4b, 0xa3, 0x9b, 0x6a, 0xf1, 0x61,
-  0xde, 0xf5, 0x31, 0x9d, 0x0c, 0x24, 0x24, 0xcc, 0x2b, 0x3d, 0x41, 0x81,
-  0xf4, 0xc4, 0xca, 0xb1, 0xd5, 0xeb, 0xaf, 0xbb, 0x90, 0xc0, 0x4d, 0x71,
-  0x4a, 0xfb, 0xd2, 0x10, 0x52, 0x75, 0xa4, 0xac, 0x47, 0x33, 0xb8, 0x2a,
-  0x00, 0xea, 0xb4, 0x94, 0xda, 0xdc, 0x24, 0x0c, 0x6c, 0xb5, 0x26, 0x78,
-  0xb6, 0x76, 0x4a, 0x74, 0xeb, 0x24, 0xef, 0x31, 0xeb, 0x3a, 0x8f, 0x10,
-  0x88, 0x32, 0x3f, 0x3b, 0x20, 0x13, 0x99, 0x1a, 0x97, 0x16, 0x36, 0x64,
-  0x78, 0xaf, 0x3b, 0xba, 0xe3, 0x7e, 0x8c, 0x75, 0xf8, 0x2e, 0xf8, 0x9b,
-  0xf0, 0xc6, 0xd9, 0x76, 0xb6, 0x27, 0x19, 0xc0, 0xdb, 0xf1, 0xc9, 0x9b,
-  0xaf, 0xe1, 0x5c, 0xfa, 0xfe, 0xec, 0xe2, 0x68, 0x4c, 0xcd, 0xf2, 0x55,
-  0xbc, 0x01, 0xf3, 0x03, 0x9f, 0x58, 0x1d, 0x95, 0xd0, 0x3f, 0x77, 0xfd,
-  0x27, 0xe8, 0x1a, 0xb3, 0x81, 0x4b, 0x3d, 0xc0, 0x30, 0x03, 0x51, 0x91,
-  0xf3, 0x09, 0xba, 0xb9, 0x1b, 0x8e, 0x82, 0xbc, 0xfe, 0xe5, 0x22, 0x66,
-  0x9c, 0xd7, 0x64, 0x24, 0x70, 0x69, 0x08, 0x23, 0xd8, 0x66, 0xb8, 0x94,
-  0x6d, 0x16, 0x59, 0xb7, 0xab, 0x1c, 0x7c, 0x02, 0xad, 0xe4, 0x85, 0x43,
-  0xc6, 0xad, 0xad, 0x08, 0x1f, 0xb0, 0xab, 0x79, 0x7c, 0x8d, 0x0e, 0xdb,
-  0x67, 0x2f, 0xe8, 0x4c, 0xbb, 0xff, 0xd8, 0x2e, 0x99, 0xbd, 0xa1, 0xbd,
-  0x13, 0x10, 0x00, 0xf2, 0xd8, 0x91, 0x24, 0xa1, 0x56, 0x71, 0x91, 0x8f,
-  0x50, 0x3c, 0x86, 0x5d, 0xec, 0x5c, 0xe1, 0xa2, 0x09, 0xe1, 0xab, 0x35,
-  0x0a, 0x37, 0xc4, 0xa2, 0x30, 0x0c, 0x72, 0xa2, 0x44, 0xac, 0x47, 0xdd,
-  0x32, 0xaf, 0x3e, 0x4b, 0x34, 0x3c, 0xfa, 0xf4, 0x59, 0x5e, 0xb2, 0xe4,
-  0x3c, 0x18, 0x1a, 0x7b, 0x24, 0xe1, 0x30, 0x9c, 0xf8, 0xa3, 0x02, 0x5b,
-  0x8f, 0x11, 0x94, 0xd3, 0x69, 0x5a, 0xf5, 0x2c, 0xc1, 0xc8, 0x03, 0x6a,
-  0xf9, 0x44, 0xd6, 0xb2, 0xa2, 0xa1, 0xc4, 0x74, 0x75, 0x68, 0x35, 0x11,
-  0x4d, 0xb9, 0xcd, 0x17, 0x0b, 0x49, 0xc5, 0xec, 0x71, 0xf6, 0x89, 0x6f,
-  0x25, 0xd5, 0x34, 0x2a, 0x57, 0x2d, 0x83, 0x99, 0x2c, 0xf7, 0x2e, 0xb9,
-  0x1f, 0x58, 0x75, 0xc7, 0xcf, 0xbd, 0xd1, 0x87, 0x79, 0x31, 0x89, 0x9b,
-  0xc4, 0x28, 0x85, 0x72, 0x34, 0xa4, 0x3f, 0x80, 0xec, 0xaf, 0x2d, 0x5b,
-  0x58, 0x96, 0xa4, 0xc5, 0x52, 0xeb, 0x79, 0x21, 0x1b, 0x88, 0x02, 0x76,
-  0x99, 0x4c, 0xc1, 0xf2, 0x68, 0xed, 0x36, 0xf7, 0x2a, 0xef, 0x45, 0x5a,
-  0x95, 0xc9, 0xfc, 0x8a, 0xad, 0x10, 0xbe, 0xc8, 0xd8, 0xe4, 0x21, 0x68,
-  0x60, 0xc3, 0x40, 0x42, 0xd9, 0x67, 0x93, 0xb9, 0x74, 0x98, 0x5c, 0x79,
-  0xc6, 0x35, 0x18, 0xa7, 0x22, 0x73, 0xd7, 0x19, 0x85, 0x78, 0x65, 0x46,
-  0x06, 0xb8, 0xbd, 0x11, 0x39, 0xe4, 0xdd, 0xc6, 0x14, 0x1c, 0xce, 0x1b,
-  0x70, 0xb6, 0x40, 0x1d, 0xc1, 0x83, 0xab, 0x09, 0xad, 0xb6, 0x7b, 0x8e,
-  0xd7, 0x8e, 0x0d, 0xdc, 0x58, 0xb5, 0xc3, 0xb0, 0x5e, 0x8a, 0xe0, 0x0b,
-  0x42, 0xc9, 0xac, 0xc1, 0x85, 0xd3, 0x00, 0x61, 0x11, 0xa7, 0x83, 0x86,
-  0x48, 0xd5, 0x55, 0xe9, 0x56, 0x14, 0xe0, 0xdc, 0xb1, 0xab, 0x0a, 0xd4,
-  0x75, 0x0c, 0x95, 0x23, 0xad, 0x3f, 0x87, 0x1f, 0x3e, 0x82, 0xed, 0x21,
-  0x99, 0xc4, 0x3f, 0x7f, 0x90, 0x53, 0x92, 0x66, 0x8f, 0x1f, 0x46, 0x1d,
-  0xc4, 0x47, 0x75, 0x8c, 0xb9, 0x6a, 0x52, 0x12, 0x4c, 0xa1, 0x3e, 0x3a,
-  0x46, 0x9c, 0xaf, 0x08, 0xb3, 0xef, 0x80, 0xf1, 0xac, 0xe1, 0x34, 0xe2,
-  0x20, 0x48, 0x8c, 0xef, 0x7e, 0xf4, 0x55, 0x5c, 0xa6, 0xd3, 0x41, 0x74,
-  0x94, 0x92, 0xa0, 0x5e, 0x0d, 0x3c, 0xd4, 0xa2, 0x83, 0xa8, 0x1c, 0x45,
-  0xdf, 0x5b, 0x81, 0x48, 0xba, 0x73, 0x11, 0xf5, 0x09, 0xa3, 0x62, 0xcd,
-  0xdb, 0x4b, 0xcb, 0xa0, 0x26, 0x57, 0x97, 0x13, 0x46, 0x54, 0x84, 0xb6,
-  0x3d, 0x8c, 0x1c, 0x36, 0x33, 0x2e, 0x6f, 0xeb, 0xf8, 0xe9, 0x22, 0x52,
-  0x95, 0x6c, 0x38, 0x64, 0xf9, 0x07, 0xeb, 0x9b, 0x69, 0x05, 0x0b, 0xa5,
-  0xb9, 0x3c, 0xb3, 0x20, 0x1e, 0xef, 0x45, 0x55, 0x33, 0x4e, 0xa9, 0x31,
-  0x33, 0xe6, 0xe7, 0xc5, 0x6d, 0x64, 0xc7, 0x75, 0x03, 0x71, 0xe5, 0xb4,
-  0x4e, 0xbc, 0x22, 0xca, 0x4f, 0xce, 0x2e, 0x8f, 0x7f, 0x17, 0x8d, 0x53,
-  0xae, 0xe7, 0xe7, 0x28, 0x87, 0x0f, 0x39, 0x57, 0xbe, 0x56, 0x17, 0x54,
-  0x6b, 0x4f, 0x5d, 0x8e, 0xaa, 0xda, 0x04, 0x2d, 0x11, 0x42, 0xea, 0xe2,
-  0x04, 0x78, 0x71, 0xa0, 0xd9, 0xbb, 0x34, 0x8e, 0x5c, 0x0d, 0x63, 0x9e,
-  0xfb, 0x3b, 0x26, 0xfd, 0x77, 0x1e, 0x3b, 0x7c, 0xa5, 0x2f, 0x02, 0xd9,
-  0x8d, 0xdb, 0x51, 0x83, 0x00, 0x0c, 0x29, 0xd3, 0xb4, 0xa0, 0x2b, 0x98,
-  0xf9, 0xd4, 0x54, 0x6c, 0x80, 0x08, 0x70, 0xc3, 0xd8, 0xd9, 0xc6, 0x11,
-  0x4f, 0x88, 0xae, 0xb0, 0x5c, 0x53, 0xe4, 0xc2, 0xcd, 0x1f, 0x82, 0xe2,
-  0xd9, 0x76, 0xee, 0x42, 0x56, 0x8a, 0x5c, 0x50, 0xe4, 0xd4, 0xa1, 0xf4,
-  0x86, 0x62, 0x0b, 0x6e, 0x20, 0x68, 0x8c, 0x5a, 0x85, 0x2c, 0x91, 0xb9,
-  0x9b, 0x2d, 0x10, 0xec, 0x38, 0xaa, 0x87, 0xe9, 0x74, 0x16, 0x2d, 0x1e,
-  0x34, 0xdf, 0x59, 0xf9, 0x30, 0x27, 0xe8, 0x40, 0x57, 0xf9, 0xfc, 0xf3,
-  0xd6, 0xbd, 0xfb, 0xde, 0x3d, 0xbd, 0x4f, 0x5f, 0x07, 0x3a, 0xd1, 0x9c,
-  0x1d, 0x8e, 0x56, 0xe3, 0xc7, 0x2b, 0x46, 0x2d, 0x81, 0x33, 0x4c, 0x60,
-  0x94, 0x0e, 0x9d, 0xf1, 0xb0, 0x63, 0x5f, 0x5c, 0x0d, 0xa3, 0x0d, 0x91,
-  0xb8, 0xb5, 0x66, 0x40, 0x29, 0x6e, 0xeb, 0x35, 0x22, 0xa8, 0x9d, 0xbc,
-  0xe6, 0x60, 0x03, 0x01, 0x85, 0x84, 0xa4, 0x11, 0xcb, 0x34, 0x2c, 0x6f,
-  0x8d, 0x73, 0x6d, 0x98, 0x93, 0x4e, 0x74, 0x30, 0x0e, 0x8c, 0xb0, 0x7e,
-  0xd6, 0x46, 0x0e, 0x0b, 0xdf, 0xdd, 0x18, 0xc3, 0xb7, 0xeb, 0x87, 0xf3,
-  0xf6, 0x5f, 0x19, 0xce, 0x41, 0xf4, 0x68, 0xa4, 0x9f, 0x96, 0x36, 0x60,
-  0x26, 0x52, 0xea, 0x49, 0x9d, 0x49, 0xc5, 0x7a, 0xa3, 0x3f, 0x59, 0xa3,
-  0x29, 0x7b, 0x00, 0x26, 0x75, 0x14, 0xc9, 0xb6, 0xae, 0x92, 0xe5, 0xf2,
-  0x34, 0xe4, 0x47, 0x6e, 0x7f, 0x60, 0x43, 0xf9, 0xd8, 0xe1, 0x5a, 0x8a,
-  0xbb, 0x85, 0xaa, 0xfa, 0xfe, 0x24, 0xfd, 0x4a, 0x5a, 0xe0, 0x88, 0xff,
-  0x20, 0xfb, 0xd1, 0x12, 0xec, 0x19, 0x54, 0xfc, 0x3d, 0xc2, 0x36, 0x68,
-  0xb0, 0x1e, 0xd0, 0x95, 0x67, 0x82, 0xb4, 0xa8, 0xc6, 0x6b, 0xfa, 0xd9,
-  0xae, 0xe0, 0x30, 0x11, 0x7b, 0x54, 0xd0, 0x3b, 0x52, 0x32, 0xe9, 0xb2,
-  0x5a, 0x22, 0xf6, 0xb0, 0x5e, 0x87, 0x4b, 0xee, 0x15, 0x2d, 0xf7, 0xce,
-  0x2b, 0x17, 0x94, 0x33, 0x46, 0x45, 0x2f, 0x19, 0xa3, 0x16, 0x91, 0x97,
-  0x3a, 0x27, 0x52, 0xd0, 0x13, 0xf7, 0x7c, 0x92, 0x48, 0x4b, 0xd5, 0xda,
-  0x18, 0xe0, 0xc3, 0x80, 0xf1, 0x0a, 0x39, 0x83, 0x7d, 0x47, 0x57, 0xab,
-  0x02, 0xc1, 0x19, 0x9a, 0x8a, 0xae, 0x79, 0x84, 0xd4, 0xe8, 0xc5, 0xc1,
-  0x9b, 0xaf, 0x8f, 0x71, 0xde, 0x99, 0xed, 0xba, 0x64, 0x06, 0x24, 0xc6,
-  0x0d, 0xe1, 0x29, 0x2e, 0x05, 0xa6, 0x23, 0xe5, 0x37, 0x66, 0xab, 0x29,
-  0x7b, 0xa9, 0xdf, 0x3a, 0xb4, 0x4a, 0x00, 0x70, 0xce, 0x53, 0x64, 0xa9,
-  0xc4, 0x2e, 0x7c, 0x60, 0x23, 0x32, 0xdd, 0x14, 0x1c, 0x83, 0x45, 0x1a,
-  0x8e, 0x8f, 0xcc, 0x01, 0x71, 0x3d, 0x59, 0xc6, 0x9a, 0x9f, 0x15, 0x87,
-  0x29, 0x3f, 0xaa, 0x09, 0x8c, 0x6a, 0x53, 0xe0, 0xbb, 0x43, 0xa2, 0x21,
-  0x9d, 0xd4, 0x59, 0x40, 0xea, 0x1c, 0x85, 0x1a, 0x97, 0x20, 0x1f, 0xed,
-  0xee, 0xec, 0x78, 0x30, 0x9d, 0xd8, 0x35, 0xd8, 0x22, 0xb2, 0x22, 0xda,
-  0x19, 0x3e, 0x7f, 0xbe, 0x8e, 0x7e, 0x5c, 0xa3, 0x48, 0x41, 0x79, 0xf6,
-  0xd1, 0x6d, 0x0e, 0xf9, 0xd1, 0x75, 0x6d, 0x76, 0xc8, 0x16, 0xa8, 0xc0,
-  0xa1, 0xbe, 0xf8, 0xd2, 0x05, 0x7c, 0xa8, 0x0e, 0x22, 0x86, 0x2f, 0x18,
-  0x22, 0x33, 0x27, 0x60, 0xf0, 0x52, 0x6e, 0x44, 0x4e, 0x12, 0x00, 0x36,
-  0x94, 0xa9, 0x2b, 0x4b, 0x76, 0xc7, 0xa7, 0xce, 0x3e, 0xfb, 0x51, 0x0b,
-  0x13, 0x88, 0x98, 0x6b, 0x96, 0xe8, 0xaa, 0x3d, 0x1b, 0xb5, 0x5f, 0x45,
-  0xa4, 0xb9, 0x9c, 0xb3, 0x3a, 0x4a, 0xda, 0x8b, 0x88, 0xec, 0x24, 0x7f,
-  0xc2, 0x2e, 0xb1, 0xdd, 0x90, 0x46, 0xdf, 0x6a, 0x6d, 0x3a, 0x2e, 0x2b,
-  0xc0, 0xae, 0x19, 0x41, 0x23, 0x4e, 0x33, 0x09, 0xbb, 0xf1, 0xfb, 0xbf,
-  0x46, 0x35, 0xbe, 0x8c, 0x86, 0x01, 0x53, 0x57, 0xc8, 0x1d, 0xe6, 0xe8,
-  0x8b, 0x07, 0x93, 0x52, 0xb4, 0x07, 0xb4, 0x6e, 0x76, 0xae, 0x5a, 0xf5,
-  0xd8, 0x81, 0x8a, 0x96, 0xa0, 0xa1, 0x16, 0x53, 0xef, 0xe8, 0x52, 0xba,
-  0xc1, 0x25, 0xd1, 0x60, 0xe1, 0x1f, 0x37, 0x94, 0x78, 0x7d, 0xcd, 0x4d,
-  0xbe, 0x91, 0x06, 0xa6, 0x9f, 0x34, 0x55, 0x65, 0x45, 0x63, 0xe4, 0x07,
-  0x71, 0x82, 0xf2, 0xfd, 0x8d, 0xe8, 0x3f, 0x3b, 0xb8, 0x47, 0x86, 0xc5,
-  0xe7, 0xd3, 0x2a, 0x6f, 0x37, 0x86, 0xd9, 0x69, 0x33, 0xb8, 0x94, 0xf7,
-  0xa5, 0xeb, 0xb8, 0xbb, 0x3b, 0x79, 0xdf, 0xd6, 0xa3, 0x83, 0xee, 0xf9,
-  0xe6, 0x57, 0x24, 0x26, 0x17, 0xef, 0x6d, 0x28, 0x12, 0xac, 0xa0, 0x80,
-  0x61, 0xa4, 0x75, 0x26, 0xbe, 0x11, 0x69, 0xce, 0x04, 0x60, 0x9a, 0x98,
-  0x70, 0x80, 0x21, 0x0b, 0xf6, 0x76, 0x8b, 0x68, 0x8a, 0x2b, 0xc5, 0xa6,
-  0x40, 0xd1, 0x91, 0x93, 0x2b, 0x4b, 0xec, 0xf4, 0x60, 0x1f, 0xc5, 0x2a,
-  0x93, 0x59, 0xc0, 0xe1, 0x40, 0x83, 0x8f, 0xcb, 0x1b, 0x38, 0xd9, 0x9d,
-  0x8e, 0xd4, 0xbe, 0x8c, 0x42, 0xc0, 0x0a, 0xba, 0x7d, 0xe4, 0xea, 0x01,
-  0x63, 0xad, 0x2d, 0x45, 0x7d, 0x05, 0x02, 0x95, 0xe2, 0x63, 0x49, 0x9f,
-  0xb9, 0x46, 0xa7, 0xb1, 0x14, 0xd4, 0xdf, 0x2a, 0x5f, 0xd8, 0xa0, 0xb9,
-  0xba, 0x4a, 0x26, 0x6d, 0x89, 0x34, 0x03, 0x0d, 0x08, 0x35, 0xdf, 0x90,
-  0x60, 0xdb, 0x58, 0x42, 0x88, 0xb3, 0xc0, 0x2d, 0x90, 0x7c, 0x5b, 0xe3,
-  0xb4, 0x9a, 0x45, 0x02, 0x3d, 0xd4, 0x43, 0xdd, 0x68, 0xde, 0x0d, 0xc3,
-  0xdd, 0x4b, 0x94, 0x1f, 0x2c, 0xf8, 0x8c, 0x32, 0x9e, 0x4b, 0x9f, 0x98,
-  0xa1, 0x0c, 0x50, 0x92, 0x5a, 0x50, 0x90, 0xf4, 0x6c, 0x7c, 0xe9, 0xaa,
-  0x63, 0x9b, 0x28, 0xf8, 0xdd, 0xf1, 0xc5, 0x57, 0x67, 0xe3, 0x63, 0x62,
-  0x11, 0x47, 0xc7, 0x5f, 0xbd, 0x65, 0xf6, 0xc1, 0x3b, 0x26, 0x76, 0x0a,
-  0xa0, 0x32, 0x08, 0x82, 0x32, 0x72, 0x89, 0x9c, 0x98, 0x2c, 0x19, 0x91,
-  0x03, 0xa3, 0x0c, 0x8d, 0xe9, 0x52, 0x41, 0x7a, 0x9e, 0x88, 0x62, 0x9b,
-  0x22, 0x9a, 0xce, 0x03, 0x96, 0xb0, 0xf8, 0x9c, 0x31, 0x7e, 0x70, 0x65,
-  0x18, 0x1d, 0x86, 0x5f, 0x5b, 0xee, 0x7b, 0xf1, 0xf8, 0x4e, 0xcc, 0x18,
-  0x7a, 0x20, 0x7c, 0x85, 0x1c, 0xab, 0x85, 0x33, 0x0a, 0xca, 0xdc, 0x2a,
-  0x32, 0xf5, 0x3c, 0x97, 0x0b, 0x8c, 0xd3, 0x88, 0x70, 0x98, 0x81, 0xb9,
-  0x9e, 0xa2, 0xa2, 0x9e, 0x62, 0x4b, 0x6a, 0x5d, 0x9a, 0x52, 0x08, 0x8e,
-  0xf8, 0x8c, 0xe4, 0x5f, 0xcc, 0x95, 0x33, 0x83, 0x0d, 0x95, 0x89, 0x24,
-  0x2c, 0xcb, 0x05, 0x3a, 0xb4, 0xd2, 0xf4, 0x1c, 0xb1, 0xa2, 0x98, 0x89,
-  0x9b, 0x7c, 0x24, 0x18, 0x32, 0x40, 0x14, 0x06, 0xc1, 0x06, 0x96, 0xd2,
-  0x2d, 0x0e, 0x5c, 0x8a, 0x57, 0x3e, 0xf0, 0x7c, 0x29, 0xe9, 0xdc, 0xad,
-  0x67, 0x07, 0x97, 0x32, 0x53, 0xce, 0x2d, 0x95, 0x3b, 0x39, 0x84, 0xc3,
-  0x08, 0x33, 0xa3, 0x38, 0x30, 0xc7, 0xe1, 0xa4, 0xc9, 0x79, 0xe2, 0xc0,
-  0xb8, 0x40, 0x08, 0x5e, 0x5f, 0xec, 0xc5, 0x4c, 0x2d, 0x1a, 0xce, 0xe3,
-  0xa3, 0x62, 0x5d, 0x91, 0x5c, 0xf6, 0x76, 0xf3, 0x96, 0xc2, 0x7e, 0x14,
-  0x35, 0x6b, 0x7a, 0xea, 0x19, 0x94, 0xd6, 0xa5, 0xce, 0x4b, 0xf5, 0xbe,
-  0x0a, 0xad, 0x6c, 0xc4, 0x1b, 0x37, 0x8e, 0x8e, 0x2f, 0x0f, 0x4e, 0x4e,
-  0x8f, 0x8f, 0xa2, 0x93, 0x37, 0xaf, 0xce, 0x2e, 0x5e, 0x1f, 0x5c, 0xaa,
-  0x97, 0xe9, 0xc8, 0xe9, 0xa9, 0xae, 0x56, 0x89, 0x33, 0x03, 0x78, 0x1d,
-  0x16, 0x34, 0x4c, 0xdb, 0x78, 0xad, 0x80, 0x41, 0xb2, 0x0e, 0x49, 0x6d,
-  0x11, 0x36, 0x22, 0xf5, 0x4e, 0xf9, 0xea, 0x23, 0x7c, 0x47, 0x6f, 0x3b,
-  0x8f, 0xc2, 0xc8, 0xd6, 0xd3, 0xb4, 0x4c, 0x80, 0x7f, 0x3d, 0xda, 0x94,
-  0xab, 0xb5, 0x25, 0xb7, 0x13, 0xef, 0xa7, 0x16, 0x8b, 0x67, 0xa2, 0x1c,
-  0x9e, 0x70, 0x72, 0x2b, 0x44, 0x4c, 0x2d, 0xa2, 0x7d, 0x52, 0xb9, 0x4a,
-  0x7d, 0x4c, 0x2f, 0xdc, 0x4e, 0x90, 0x5e, 0x45, 0x24, 0x88, 0x8a, 0xc0,
-  0x41, 0x9b, 0x2e, 0x53, 0xc9, 0xca, 0x8b, 0x88, 0x4f, 0x53, 0x6a, 0x81,
-  0x04, 0x1b, 0xac, 0x49, 0xda, 0x44, 0xce, 0x42, 0x08, 0xc9, 0xfb, 0x2a,
-  0xc9, 0x4a, 0xae, 0xf3, 0x64, 0x87, 0x9d, 0x5f, 0xf1, 0x5c, 0xd4, 0x6c,
-  0xb9, 0x8a, 0x68, 0x18, 0x36, 0xb5, 0xe9, 0xbc, 0x10, 0x24, 0xbd, 0x0c,
-  0x4f, 0x14, 0xc6, 0x8c, 0xd7, 0x82, 0x0b, 0xfa, 0xf2, 0xcf, 0xcc, 0x12,
-  0xfb, 0x5d, 0x98, 0x86, 0x57, 0x5a, 0x82, 0xa2, 0x46, 0x7a, 0xdc, 0xfc,
-  0xc1, 0x2d, 0x8d, 0xd4, 0x8e, 0xe8, 0x21, 0xae, 0x11, 0x39, 0xd4, 0xee,
-  0x35, 0x4e, 0x0a, 0xfa, 0xb0, 0x6d, 0xa1, 0x08, 0x50, 0x10, 0x03, 0x26,
-  0xb9, 0x20, 0x95, 0x60, 0x0d, 0x64, 0x1e, 0x20, 0xf0, 0xca, 0x0c, 0xc7,
-  0x2c, 0xe6, 0x7b, 0x5b, 0xaf, 0xab, 0xc0, 0xd4, 0x2a, 0x75, 0xed, 0xaa,
-  0x7f, 0x8d, 0xdd, 0xb3, 0x58, 0xc9, 0xe0, 0x85, 0xd8, 0x3b, 0x5e, 0xb1,
-  0xfe, 0x9b, 0x06, 0x5c, 0xce, 0x34, 0xab, 0x0d, 0xaa, 0xf7, 0xa0, 0x6d,
-  0xaa, 0xae, 0x4d, 0x2a, 0x7c, 0xb1, 0xee, 0xaa, 0x0c, 0x59, 0xbd, 0x75,
-  0x8d, 0xd1, 0xcf, 0xba, 0x46, 0xa0, 0x6c, 0x1c, 0xb5, 0x3b, 0xb5, 0x54,
-  0x57, 0x0c, 0x97, 0x1d, 0xa3, 0x35, 0x6c, 0x68, 0xce, 0x91, 0xb2, 0x4a,
-  0x98, 0x4f, 0xc3, 0x34, 0xdc, 0x29, 0x17, 0x8f, 0x4a, 0x4a, 0x2b, 0xc8,
-  0x15, 0x06, 0x93, 0x8b, 0x4b, 0xdd, 0x2a, 0xbd, 0x33, 0xd7, 0xcb, 0x36,
-  0x0c, 0x18, 0xd1, 0x5e, 0xb2, 0x40, 0x01, 0xb0, 0x7f, 0x49, 0xc8, 0x06,
-  0x97, 0x67, 0x7f, 0x26, 0x97, 0x95, 0x87, 0x2d, 0x86, 0x6d, 0x0a, 0x72,
-  0x69, 0x80, 0x04, 0x30, 0x57, 0x67, 0xba, 0xc4, 0xed, 0xe3, 0x0b, 0x06,
-  0x0f, 0x05, 0xb7, 0x22, 0xe6, 0xb4, 0x32, 0x3b, 0x14, 0x12, 0xdd, 0xe6,
-  0x5a, 0xc1, 0x65, 0xc7, 0x89, 0xe2, 0xc5, 0x1c, 0x21, 0x4a, 0x1a, 0xb3,
-  0x71, 0x9e, 0x97, 0x72, 0xde, 0x20, 0x6d, 0xf7, 0xa4, 0xb0, 0x03, 0x93,
-  0x41, 0x6f, 0x79, 0x43, 0x7d, 0xf4, 0xa2, 0x6b, 0xd6, 0x57, 0x26, 0x79,
-  0x18, 0xf0, 0xa6, 0xdb, 0x32, 0x93, 0xc7, 0x5f, 0x5e, 0xc4, 0x57, 0x71,
-  0x32, 0xff, 0xfd, 0xde, 0xce, 0x38, 0xbe, 0x5e, 0xcd, 0xe3, 0x3f, 0xe0,
-  0xc5, 0x97, 0x4f, 0x9e, 0xec, 0xed, 0x7c, 0xf6, 0xf9, 0x4e, 0x2f, 0xf0,
-  0x15, 0x35, 0x1c, 0xcd, 0xf0, 0x1b, 0xa2, 0x16, 0x33, 0x33, 0x5e, 0xf4,
-  0x33, 0x9a, 0x5e, 0xa7, 0xdc, 0xcd, 0x37, 0x2c, 0xbd, 0xe8, 0x1a, 0xc4,
-  0x88, 0x89, 0x10, 0x3e, 0x29, 0x65, 0x9f, 0x38, 0x77, 0x9e, 0xe8, 0xfa,
-  0x93, 0xdd, 0x7d, 0x61, 0x65, 0xd7, 0xb0, 0x4d, 0xc5, 0x42, 0xb1, 0xd1,
-  0x8b, 0x34, 0xa3, 0x2b, 0xe8, 0x8b, 0xa8, 0x8a, 0xaf, 0x1d, 0xad, 0xa2,
-  0x05, 0x57, 0xa6, 0xd9, 0xac, 0xe1, 0x57, 0x29, 0xea, 0xcf, 0x8e, 0xa2,
-  0xcd, 0x4b, 0x41, 0x4c, 0x83, 0xe4, 0xb3, 0x4c, 0x8a, 0xb9, 0xa4, 0xbb,
-  0xc6, 0x0b, 0x8b, 0xb9, 0xe4, 0xf7, 0xd9, 0x1b, 0x3f, 0x5a, 0xce, 0x5d,
-  0x51, 0x6a, 0x68, 0x61, 0xa9, 0x27, 0xb8, 0xf9, 0xb2, 0xf4, 0x45, 0x90,
-  0xe4, 0xbe, 0x09, 0xb1, 0xd8, 0x68, 0xb1, 0x50, 0xe2, 0xa1, 0x87, 0x59,
-  0x0d, 0x5c, 0x2d, 0x95, 0xe1, 0xcc, 0x66, 0x3a, 0xc2, 0xef, 0x28, 0x35,
-  0xa7, 0x25, 0x8e, 0x7b, 0x4b, 0x49, 0x10, 0x72, 0x25, 0x3c, 0x34, 0x9d,
-  0xb8, 0x36, 0xaf, 0xb8, 0xf2, 0x1b, 0xf3, 0xc2, 0x14, 0xdd, 0xdd, 0x2f,
-  0x5e, 0x82, 0x20, 0x76, 0xbf, 0xf8, 0x83, 0xfb, 0x6c, 0x4f, 0x3f, 0xdb,
-  0xfb, 0xe2, 0x0f, 0xa3, 0x11, 0xc6, 0xc7, 0x14, 0xd2, 0xb7, 0xaf, 0xfb,
-  0x9a, 0x77, 0x18, 0xeb, 0x11, 0x96, 0xbf, 0x1c, 0xf4, 0x8e, 0xec, 0x75,
-  0xcf, 0x7a, 0x0e, 0x57, 0x79, 0xa0, 0xf6, 0x77, 0xc7, 0xb7, 0x52, 0x03,
-  0x23, 0x06, 0xaa, 0x67, 0xd9, 0xb5, 0xe8, 0xce, 0x4c, 0x88, 0x76, 0x4a,
-  0x87, 0x59, 0x12, 0x47, 0x7f, 0x64, 0x4a, 0xfd, 0xe3, 0x46, 0xa4, 0x66,
-  0x72, 0xde, 0x0e, 0xd4, 0x1c, 0x8c, 0x8c, 0x6c, 0xa5, 0x70, 0xbc, 0x20,
-  0xbe, 0x71, 0xcb, 0x1c, 0x63, 0xc9, 0x97, 0x60, 0x50, 0xc5, 0xe2, 0x4f,
-  0x9a, 0x90, 0x28, 0x1b, 0xce, 0xfc, 0x0c, 0xe9, 0x0c, 0x92, 0x15, 0x44,
-  0x22, 0x46, 0xc5, 0xbc, 0x01, 0x4f, 0xfe, 0xfe, 0x87, 0x1f, 0x54, 0x9e,
-  0xa2, 0x5f, 0x74, 0xdc, 0x37, 0xc4, 0x89, 0x66, 0xc4, 0xdc, 0x16, 0xa8,
-  0x95, 0xa0, 0x85, 0x47, 0xf4, 0xc6, 0xbf, 0xd2, 0x79, 0x4a, 0x23, 0xb4,
-  0xb1, 0x52, 0xa6, 0x97, 0x47, 0x86, 0x25, 0x3d, 0x16, 0x26, 0x06, 0xca,
-  0xdc, 0x84, 0x3b, 0xd0, 0xc7, 0x5a, 0x84, 0x84, 0xcf, 0x3b, 0x87, 0x4d,
-  0x07, 0xed, 0x53, 0x63, 0xa6, 0x0a, 0xeb, 0x46, 0x82, 0x62, 0x45, 0xc8,
-  0x79, 0xd9, 0x93, 0x07, 0xaf, 0xd3, 0x9e, 0x1a, 0x79, 0xe5, 0x93, 0x9e,
-  0x4f, 0x22, 0x95, 0xdd, 0xc0, 0x96, 0xbd, 0x14, 0xc9, 0x29, 0xfd, 0x7b,
-  0xf2, 0x72, 0x77, 0xa7, 0xfb, 0x09, 0x56, 0x87, 0x22, 0x86, 0x5f, 0x7d,
-  0xe9, 0x8d, 0xe4, 0x8f, 0x3d, 0x9f, 0xce, 0xe4, 0x69, 0xad, 0x18, 0x88,
-  0xfa, 0x29, 0x2f, 0x7b, 0x13, 0xbe, 0x5f, 0xf9, 0xff, 0xd7, 0x8c, 0x03,
-  0x11, 0x5f, 0xfa, 0x6c, 0xb9, 0x9a, 0x2c, 0xd2, 0xda, 0x80, 0xb7, 0x79,
-  0x82, 0x5f, 0xc0, 0xac, 0x92, 0x38, 0xda, 0x40, 0xa1, 0x59, 0x11, 0xfd,
-  0xfa, 0x57, 0x79, 0x3e, 0x89, 0x8b, 0xbe, 0x1a, 0x52, 0x6d, 0x9c, 0xfd,
-  0xdd, 0xbd, 0x27, 0x4f, 0x9f, 0xf5, 0x47, 0x2a, 0xa6, 0x81, 0x41, 0x40,
-  0x33, 0x4b, 0x55, 0x97, 0x91, 0x26, 0x5c, 0x5e, 0xa0, 0x2f, 0x1c, 0xdf,
-  0xe9, 0x70, 0x60, 0x1e, 0xc6, 0xdd, 0xbd, 0x94, 0xde, 0xfe, 0xc0, 0xfd,
-  0xbc, 0x44, 0x17, 0x7f, 0x48, 0x67, 0x2f, 0xdd, 0x0c, 0xff, 0xc0, 0x73,
-  0x79, 0xa9, 0x93, 0xa0, 0x7d, 0xb5, 0x48, 0xfa, 0x72, 0x6b, 0xa3, 0x93,
-  0xab, 0x75, 0x6e, 0xae, 0x6d, 0xe2, 0x06, 0x26, 0x0d, 0x6f, 0xd7, 0x70,
-  0x26, 0xd6, 0x5b, 0x08, 0xab, 0x3e, 0x92, 0x7c, 0xfb, 0xfd, 0x90, 0x5a,
-  0x19, 0x72, 0x2b, 0x43, 0xcf, 0xae, 0xa3, 0x05, 0xa7, 0x8d, 0xf0, 0x46,
-  0x0c, 0x34, 0x9d, 0x60, 0x0e, 0x7b, 0x87, 0x0a, 0x02, 0x79, 0x0e, 0x5f,
-  0xd2, 0xe1, 0xd7, 0x27, 0x7d, 0x75, 0xd2, 0x8a, 0xe6, 0x36, 0xe8, 0x32,
-  0xb0, 0xb9, 0xb0, 0x09, 0x45, 0x21, 0xd8, 0x30, 0x3c, 0x83, 0x98, 0x7d,
-  0x8e, 0xdc, 0xaf, 0x64, 0xfe, 0x50, 0x67, 0x7a, 0xe7, 0xcc, 0xd9, 0x64,
-  0x57, 0xe0, 0x93, 0xb0, 0x19, 0x00, 0xbb, 0x88, 0xf3, 0x11, 0xd6, 0x6a,
-  0x0f, 0xf9, 0x3b, 0x7c, 0xe5, 0x3c, 0x02, 0x2e, 0x4c, 0x5d, 0x1f, 0xa5,
-  0xaf, 0x84, 0x9b, 0x18, 0x83, 0xe8, 0xb9, 0xea, 0x52, 0x42, 0x09, 0x21,
-  0xef, 0x80, 0x3f, 0x63, 0x92, 0xd4, 0xca, 0x16, 0x89, 0x58, 0xc8, 0xdc,
-  0xf3, 0x85, 0x2b, 0x47, 0xf4, 0x45, 0x04, 0x50, 0x7f, 0x79, 0x4b, 0x03,
-  0xd1, 0x6b, 0xe5, 0x5b, 0xf1, 0x92, 0x6a, 0x07, 0xce, 0xfb, 0x11, 0x78,
-  0x6e, 0x55, 0x2c, 0x90, 0x16, 0x64, 0xa2, 0x93, 0x07, 0xd5, 0xff, 0xb9,
-  0x85, 0xfe, 0x9f, 0x71, 0x08, 0x5e, 0xf0, 0x36, 0xe0, 0xeb, 0x2f, 0xfa,
-  0x62, 0xc6, 0x73, 0xef, 0xf2, 0x30, 0x1a, 0xde, 0x15, 0x21, 0xd0, 0x70,
-  0x3e, 0x24, 0x4e, 0x1b, 0x9e, 0x8b, 0xc8, 0x62, 0x9c, 0x67, 0x9a, 0x41,
-  0x9f, 0x4a, 0x93, 0x39, 0xa7, 0x98, 0xb1, 0x58, 0xa9, 0xb2, 0xd0, 0x40,
-  0x1b, 0x4f, 0x38, 0x82, 0x90, 0x65, 0xc7, 0x3e, 0x47, 0xe0, 0xe0, 0xbd,
-  0xbe, 0x83, 0x87, 0x61, 0x91, 0x3a, 0x01, 0xbb, 0x2b, 0x12, 0xab, 0x27,
-  0xb6, 0xa1, 0x78, 0x24, 0x5e, 0x96, 0x0f, 0x27, 0x56, 0x06, 0xa2, 0x83,
-  0x0f, 0xd6, 0x97, 0x24, 0xe4, 0xd6, 0x11, 0x79, 0xc5, 0x99, 0x30, 0xda,
-  0xe9, 0x4b, 0x5e, 0xee, 0xdd, 0xd1, 0x75, 0x7a, 0x25, 0x8b, 0x41, 0x2c,
-  0xf2, 0x3a, 0xd9, 0xa6, 0x3f, 0x07, 0xf4, 0xf9, 0x1e, 0xcb, 0x64, 0xfc,
-  0xcb, 0x13, 0xf8, 0xee, 0xc3, 0x9b, 0x3f, 0x38, 0x1b, 0xee, 0x5c, 0xf0,
-  0x2f, 0xa9, 0xbb, 0xf1, 0xd5, 0x2c, 0xad, 0xa3, 0x04, 0x99, 0xd7, 0xa0,
-  0x57, 0x05, 0x6a, 0xd5, 0x9b, 0x9c, 0x59, 0xcf, 0x62, 0x8d, 0x74, 0xc5,
-  0x91, 0xa3, 0x2e, 0xce, 0x4d, 0x9d, 0x8b, 0x2a, 0xa6, 0xb3, 0xd4, 0x9d,
-  0xaa, 0xc5, 0x84, 0x23, 0x6d, 0x71, 0xaf, 0x26, 0xf7, 0x5b, 0x83, 0x30,
-  0x7a, 0xc8, 0xca, 0x68, 0xba, 0x6a, 0xbf, 0xc8, 0xba, 0xe5, 0xee, 0x37,
-  0xb5, 0x70, 0x55, 0x90, 0x2e, 0x83, 0x6d, 0x4e, 0x9b, 0x3b, 0x58, 0x2f,
-  0xfe, 0x24, 0x41, 0x1f, 0x69, 0x59, 0x6d, 0x71, 0x37, 0xc9, 0xbc, 0x84,
-  0xaa, 0xce, 0x83, 0xde, 0x88, 0x82, 0x75, 0x37, 0x98, 0x0c, 0x74, 0xd5,
-  0xe7, 0x52, 0x54, 0xdb, 0xf0, 0x09, 0x09, 0x6f, 0x3b, 0x5e, 0x08, 0xe4,
-  0x3b, 0xc8, 0x76, 0x3e, 0x94, 0xfb, 0x52, 0x85, 0xa0, 0xe1, 0xab, 0x51,
-  0x74, 0x8a, 0xd8, 0xb7, 0x32, 0x96, 0xc4, 0x62, 0xbb, 0x53, 0x8d, 0x02,
-  0x88, 0x5c, 0x44, 0xea, 0xde, 0x90, 0x80, 0x52, 0xce, 0xe6, 0x34, 0x32,
-  0x02, 0x94, 0x9d, 0xd7, 0x33, 0x45, 0xa2, 0x50, 0x09, 0x64, 0x00, 0x4b,
-  0xb4, 0x7b, 0x0e, 0x55, 0xd9, 0x5c, 0x09, 0xe5, 0x80, 0x48, 0x83, 0x46,
-  0xc4, 0xa9, 0xaf, 0x22, 0x67, 0xc0, 0xca, 0x1d, 0xe1, 0x4b, 0xd2, 0x68,
-  0x22, 0x76, 0x16, 0xad, 0xdb, 0x2b, 0x7e, 0x2c, 0x6a, 0x0d, 0x94, 0xc5,
-  0x73, 0x67, 0xd2, 0xe9, 0x41, 0x53, 0x9c, 0x27, 0x4e, 0x9f, 0x56, 0x2c,
-  0x5e, 0xc1, 0xc6, 0xcd, 0x15, 0x1b, 0x49, 0x04, 0x0c, 0xef, 0x63, 0xe0,
-  0x41, 0xf2, 0xb8, 0xe2, 0x3b, 0xfa, 0x85, 0x2f, 0xf9, 0x49, 0x41, 0x3b,
-  0x9d, 0x14, 0x72, 0x1d, 0xa0, 0xd7, 0xb0, 0x26, 0xd9, 0x37, 0x97, 0xaf,
-  0x4f, 0x23, 0x4b, 0xd0, 0xbe, 0xf2, 0xc2, 0xa1, 0x45, 0xee, 0x60, 0x8a,
-  0x6a, 0x0c, 0x11, 0x09, 0x48, 0x9f, 0x92, 0x9b, 0x4d, 0xd6, 0x96, 0xb3,
-  0xbc, 0x22, 0x54, 0x8d, 0x0e, 0x8f, 0x69, 0xf0, 0x84, 0xbc, 0xba, 0x21,
-  0x00, 0x0a, 0x7d, 0x5e, 0x82, 0xfe, 0x20, 0xea, 0xf3, 0x50, 0xf9, 0x8b,
-  0x3e, 0xd6, 0x13, 0x1f, 0x07, 0xcb, 0xd7, 0x1f, 0x75, 0x9c, 0x3c, 0x7e,
-  0xe6, 0xe5, 0x97, 0xb5, 0x55, 0xc2, 0xe7, 0xd6, 0xd4, 0x4b, 0x09, 0x97,
-  0x6d, 0x49, 0xd9, 0xf6, 0x6e, 0xd0, 0xfe, 0xcb, 0x43, 0x6a, 0x45, 0x6a,
-  0x9e, 0xc9, 0x9e, 0x40, 0xa0, 0x76, 0x9f, 0xa5, 0x48, 0x45, 0x69, 0x35,
-  0xf4, 0xe1, 0x93, 0x7b, 0x69, 0xec, 0xc7, 0x85, 0x08, 0x09, 0x47, 0x13,
-  0x12, 0x30, 0x6e, 0x4b, 0xbb, 0x99, 0x8a, 0xa6, 0x77, 0x9f, 0xc3, 0xae,
-  0x00, 0x3e, 0xb3, 0x3b, 0x42, 0x6e, 0x82, 0x07, 0xd3, 0x71, 0x0d, 0x38,
-  0x75, 0xbd, 0x87, 0x05, 0xed, 0x99, 0x9d, 0xc4, 0x29, 0xf1, 0xb6, 0xca,
-  0x6d, 0x13, 0x30, 0x4d, 0x7d, 0x99, 0x4e, 0x51, 0xc5, 0xf4, 0xe5, 0x97,
-  0xb3, 0xfc, 0x9a, 0xd9, 0xd5, 0x80, 0x6e, 0x56, 0xfe, 0xd9, 0x8b, 0xf0,
-  0xf8, 0x9e, 0xf6, 0x2b, 0x63, 0xc6, 0x71, 0x11, 0xd1, 0xdd, 0xfe, 0xd6,
-  0x28, 0xa6, 0xa8, 0x63, 0x4b, 0x66, 0xf9, 0x54, 0x9b, 0x77, 0xad, 0xcb,
-  0x9e, 0x50, 0x17, 0xee, 0x0b, 0xdf, 0x5d, 0xb0, 0x42, 0xb1, 0xb6, 0x2d,
-  0x05, 0xe8, 0xe6, 0x69, 0x25, 0x77, 0xb8, 0x43, 0x57, 0x87, 0x61, 0x8b,
-  0x6b, 0x48, 0xc8, 0x85, 0x35, 0xd7, 0xa8, 0xf9, 0xfe, 0x97, 0x7d, 0x09,
-  0x78, 0xec, 0xbf, 0xe8, 0x83, 0x75, 0x31, 0x43, 0x32, 0x2c, 0x5d, 0xbd,
-  0x95, 0xfa, 0x72, 0x1d, 0x0e, 0x45, 0x68, 0xd0, 0xf2, 0x80, 0xb5, 0x30,
-  0x15, 0xe6, 0x1a, 0xa6, 0x3d, 0x86, 0x11, 0x36, 0xb0, 0x0e, 0x00, 0xe4,
-  0x1b, 0xa3, 0x62, 0x7c, 0x9a, 0x49, 0x25, 0xbe, 0x69, 0xbd, 0x6d, 0x21,
-  0x8f, 0x21, 0xdd, 0xb7, 0x64, 0xcf, 0xab, 0x98, 0x37, 0x57, 0xd9, 0x92,
-  0x93, 0xbb, 0xa6, 0x95, 0x20, 0x4a, 0xe3, 0x40, 0x8d, 0xa2, 0xb7, 0x99,
-  0x80, 0xdf, 0x25, 0xac, 0x23, 0x87, 0x8e, 0xf3, 0x81, 0x0b, 0x00, 0xa0,
-  0x95, 0xaa, 0x39, 0x16, 0xc3, 0x01, 0x8b, 0x4d, 0x44, 0x8c, 0xd7, 0xda,
-  0x2f, 0xdf, 0xaf, 0x05, 0x87, 0x25, 0xa8, 0x71, 0x1a, 0xe2, 0x80, 0x4b,
-  0xfb, 0x55, 0x2e, 0xc4, 0x6e, 0xba, 0xe3, 0x57, 0xc7, 0x17, 0x17, 0xc7,
-  0x17, 0xbc, 0xde, 0x07, 0x75, 0x14, 0xfb, 0x1b, 0x8d, 0x8f, 0xf6, 0xf8,
-  0x6c, 0x16, 0x1a, 0xd6, 0x2e, 0x5c, 0x2c, 0xec, 0x50, 0x01, 0x95, 0x36,
-  0x22, 0x73, 0x78, 0x4b, 0xae, 0xbb, 0x98, 0x85, 0x61, 0x53, 0x44, 0x60,
-  0xa0, 0xb3, 0xdf, 0xcf, 0xf9, 0x6e, 0x11, 0x30, 0xfa, 0x50, 0xa2, 0xd8,
-  0x88, 0xec, 0xd5, 0x42, 0x4b, 0x8c, 0xe0, 0xbe, 0x36, 0x05, 0x32, 0x10,
-  0x4e, 0x47, 0x1a, 0xcb, 0x95, 0xa8, 0x1b, 0x7b, 0xee, 0x6c, 0x12, 0x98,
-  0xef, 0x15, 0x9f, 0x52, 0xd6, 0x97, 0xb0, 0x12, 0x65, 0xb5, 0x5a, 0xa6,
-  0x33, 0x67, 0xe2, 0xa5, 0xcf, 0x49, 0xe8, 0x8b, 0xe4, 0x9c, 0x97, 0x36,
-  0x62, 0x78, 0x15, 0xcd, 0x00, 0x11, 0x5a, 0xd8, 0x24, 0xb9, 0xdc, 0xdb,
-  0xc7, 0x10, 0xf9, 0x2f, 0x75, 0x29, 0x15, 0x39, 0xbb, 0x91, 0xb7, 0xa5,
-  0x94, 0x9f, 0xc0, 0xb4, 0xc8, 0xfc, 0xc2, 0x82, 0x06, 0x42, 0xde, 0xc0,
-  0xf6, 0xab, 0x85, 0x8f, 0x88, 0xf4, 0x25, 0x03, 0x2f, 0x90, 0xae, 0x51,
-  0xec, 0x47, 0x3f, 0x95, 0xe9, 0xf4, 0x67, 0x7f, 0x7d, 0x20, 0x90, 0xd9,
-  0x07, 0x2d, 0x4a, 0x90, 0x01, 0x4d, 0x5e, 0x17, 0x4a, 0x15, 0x60, 0x49,
-  0x93, 0x7a, 0x3b, 0x3e, 0xbe, 0x88, 0x0e, 0xbe, 0x66, 0x8c, 0xa7, 0xff,
-  0xdc, 0xee, 0xf2, 0x73, 0x7a, 0x3d, 0xd8, 0xde, 0x6a, 0x62, 0x6e, 0x32,
-  0x0b, 0x2b, 0x4e, 0x8c, 0x6a, 0x1b, 0x9b, 0x5a, 0x81, 0x18, 0x7f, 0xc7,
-  0xd7, 0xb7, 0x70, 0x23, 0xfa, 0xe0, 0x26, 0x7e, 0xcc, 0x16, 0xf2, 0x01,
-  0x0b, 0x37, 0x51, 0x32, 0xfa, 0xc5, 0x0d, 0x61, 0x5b, 0xa3, 0xa3, 0x2f,
-  0x5b, 0xba, 0xa6, 0x6c, 0xd2, 0x41, 0xd4, 0x7f, 0x9d, 0xff, 0x9d, 0xa4,
-  0x81, 0x78, 0xfb, 0xc9, 0x68, 0x27, 0xda, 0xfc, 0x3e, 0xcd, 0x9e, 0x3f,
-  0xfb, 0x73, 0x74, 0xb2, 0xd5, 0xaf, 0x45, 0x7b, 0x0a, 0x98, 0xf3, 0x24,
-  0xce, 0x6e, 0xdd, 0x8e, 0x9d, 0xe1, 0x54, 0x4b, 0x0c, 0x8b, 0x41, 0x82,
-  0x4a, 0xed, 0xc1, 0xb5, 0x2d, 0x22, 0xdd, 0x48, 0x03, 0x47, 0xa3, 0xef,
-  0x1c, 0x28, 0x1d, 0x2b, 0xf6, 0xf4, 0xd4, 0x8c, 0x97, 0xee, 0xf9, 0xb3,
-  0x56, 0x13, 0x4f, 0x5d, 0x1b, 0x6f, 0xa5, 0x8d, 0x5f, 0xd8, 0xc4, 0xde,
-  0x68, 0x67, 0x2f, 0xda, 0x3c, 0x1b, 0x6f, 0xef, 0xb9, 0x16, 0xda, 0x4d,
-  0xec, 0xa1, 0x09, 0x7e, 0xa8, 0xfe, 0xf2, 0x53, 0xee, 0xff, 0xa7, 0x24,
-  0xfb, 0x39, 0xda, 0xfc, 0x61, 0x77, 0x97, 0x1a, 0xf8, 0x73, 0x74, 0x70,
-  0xf2, 0x43, 0xf4, 0x74, 0x44, 0x8d, 0xbd, 0x89, 0xef, 0xb4, 0x39, 0x45,
-  0x72, 0x1a, 0xa3, 0x11, 0xfa, 0xbe, 0xd5, 0xc6, 0xb3, 0x46, 0x1b, 0xa7,
-  0xa4, 0x0c, 0xbe, 0xa7, 0x4b, 0x65, 0x67, 0xf4, 0x64, 0x2f, 0x4a, 0x9f,
-  0x7d, 0xfe, 0xa9, 0x35, 0xa4, 0x6d, 0xe0, 0xfb, 0xba, 0x81, 0x52, 0x72,
-  0x7d, 0x49, 0xd6, 0x39, 0x7e, 0x4f, 0xcc, 0x0c, 0x1c, 0x02, 0x20, 0xaa,
-  0x37, 0x71, 0x31, 0x53, 0x72, 0xe3, 0x42, 0x2a, 0xb4, 0x53, 0x8a, 0x11,
-  0x96, 0xc0, 0x52, 0x49, 0x37, 0xe7, 0x7e, 0x6b, 0x38, 0xac, 0x90, 0xda,
-  0xa3, 0x7f, 0x8e, 0x5e, 0x8f, 0x4f, 0x8e, 0x69, 0x46, 0x3b, 0x34, 0x34,
-  0xbf, 0x86, 0x32, 0x20, 0x7c, 0x85, 0xc5, 0xa5, 0x55, 0xdd, 0xe0, 0xec,
-  0x1f, 0xb4, 0x61, 0x82, 0xb6, 0x84, 0x76, 0x31, 0x78, 0x63, 0x5e, 0x96,
-  0xe8, 0xf7, 0x2d, 0xd1, 0xda, 0xf0, 0xe0, 0x9a, 0xf5, 0x06, 0xbd, 0x6b,
-  0xb9, 0xeb, 0x6f, 0xf3, 0x8c, 0x8e, 0x49, 0x91, 0x17, 0x1c, 0xef, 0xd1,
-  0xaf, 0x89, 0x0b, 0xdf, 0x1e, 0x1d, 0x4b, 0xb6, 0xda, 0xeb, 0x38, 0x23,
-  0x16, 0xc9, 0xd0, 0x0e, 0xe5, 0x2d, 0xbb, 0xdf, 0xc5, 0x85, 0x23, 0xef,
-  0x9f, 0x3e, 0x64, 0xef, 0x69, 0x1f, 0x3f, 0x1b, 0xed, 0x32, 0xb6, 0x1d,
-  0xab, 0xba, 0xaf, 0x5e, 0xd3, 0xdf, 0xbb, 0x4f, 0xfb, 0x11, 0x7f, 0x55,
-  0x57, 0xdb, 0xed, 0xbc, 0x6e, 0x1c, 0x9e, 0x9d, 0x7d, 0x7b, 0x22, 0x91,
-  0x18, 0x87, 0x6a, 0x49, 0x65, 0xe9, 0xca, 0xa9, 0xc2, 0xc2, 0x5c, 0x49,
-  0x65, 0xf3, 0x81, 0xe4, 0x70, 0xc0, 0xdd, 0x26, 0xc9, 0x12, 0x60, 0x74,
-  0x0d, 0x8e, 0x50, 0x29, 0x8b, 0x96, 0x91, 0xb1, 0x34, 0x9d, 0xce, 0xea,
-  0xb0, 0x14, 0x25, 0xe3, 0x84, 0x99, 0xd5, 0x76, 0xf2, 0xe0, 0x32, 0x62,
-  0x63, 0x5f, 0xe6, 0x51, 0x4b, 0xd5, 0x6b, 0x53, 0x66, 0x75, 0x96, 0x3a,
-  0xef, 0xf4, 0xa2, 0x2a, 0xbc, 0xfd, 0x71, 0x52, 0x0d, 0x65, 0xd0, 0xfb,
-  0x6a, 0xa8, 0xed, 0xab, 0xd5, 0xc9, 0xd9, 0xcc, 0x96, 0x8a, 0x4c, 0x0b,
-  0x6b, 0xf1, 0xc3, 0x92, 0xab, 0x51, 0xd2, 0x9c, 0x94, 0x35, 0xa3, 0xdc,
-  0x6a, 0x82, 0xa0, 0xa2, 0x37, 0x07, 0xaf, 0x8f, 0x5f, 0x7e, 0x77, 0x70,
-  0xfa, 0xf6, 0x98, 0x5e, 0x61, 0x6c, 0xd6, 0x4d, 0x1f, 0x78, 0x84, 0x31,
-  0x2e, 0xd2, 0x69, 0x3e, 0x67, 0xcf, 0x52, 0xff, 0xcf, 0xfd, 0x0d, 0x89,
-  0xb3, 0x8c, 0x7a, 0xfc, 0xd6, 0xae, 0xbc, 0x46, 0x74, 0xc1, 0x7f, 0xed,
-  0xc9, 0x5f, 0x7b, 0x7f, 0xee, 0x6d, 0xd5, 0x26, 0xdd, 0x52, 0x8d, 0x99,
-  0x5e, 0xee, 0x25, 0xc0, 0x0e, 0xb5, 0x52, 0x10, 0xdc, 0x2b, 0xab, 0xd2,
-  0x33, 0xb7, 0x8c, 0x5d, 0x6d, 0xfc, 0xec, 0xe6, 0xe4, 0x21, 0x54, 0xbc,
-  0x7b, 0xfc, 0xd2, 0x4b, 0x08, 0x17, 0x3d, 0xce, 0x7c, 0x52, 0x71, 0x03,
-  0x2e, 0x6b, 0x6e, 0xc3, 0x9a, 0x48, 0xde, 0x2f, 0x39, 0x8e, 0x6b, 0xb3,
-  0x27, 0xbf, 0xbc, 0x3c, 0x3a, 0xb8, 0x3c, 0xe6, 0x17, 0xac, 0x7b, 0x2b,
-  0x5c, 0x6d, 0x21, 0xb8, 0x3c, 0x9e, 0xcd, 0x9e, 0x7c, 0xf8, 0x92, 0x27,
-  0xd4, 0x93, 0x4a, 0x03, 0x82, 0xb2, 0xd8, 0x18, 0x57, 0x9e, 0x69, 0x34,
-  0x63, 0x90, 0xa8, 0x57, 0x5a, 0xc0, 0xc8, 0x66, 0x4f, 0xbe, 0xeb, 0x39,
-  0xa3, 0xad, 0x16, 0x66, 0x55, 0x17, 0xe5, 0x0c, 0x01, 0xba, 0xad, 0x24,
-  0x21, 0x29, 0x36, 0xe1, 0xf7, 0x47, 0xfd, 0x13, 0x62, 0x66, 0x0a, 0xa0,
-  0xe6, 0xdc, 0xc6, 0x6b, 0x5e, 0x21, 0x1b, 0x96, 0xf2, 0x7c, 0x77, 0xef,
-  0xc9, 0x9f, 0xb1, 0x9e, 0x2f, 0x7b, 0xdb, 0x74, 0x37, 0xf4, 0xfe, 0xcc,
-  0x5d, 0xa7, 0x55, 0x50, 0x74, 0x45, 0xbb, 0x61, 0x85, 0x4a, 0x29, 0x4a,
-  0xa2, 0x55, 0x78, 0xd7, 0x61, 0x10, 0x93, 0x79, 0x61, 0x41, 0xef, 0x25,
-  0x8d, 0xc0, 0xf2, 0xcc, 0xcd, 0x89, 0x8f, 0xfd, 0x42, 0x51, 0xc0, 0xcc,
-  0xa1, 0x83, 0x4a, 0x77, 0xe1, 0xfd, 0x31, 0x90, 0x77, 0x65, 0x8e, 0x5a,
-  0x0a, 0x86, 0xfb, 0x5c, 0x3c, 0x58, 0xa6, 0x01, 0xfa, 0x82, 0x50, 0x2e,
-  0x7b, 0xd6, 0xb2, 0x11, 0x4c, 0xd4, 0xa0, 0x63, 0xda, 0x08, 0x44, 0x02,
-  0x62, 0x2d, 0x0f, 0x90, 0x93, 0xc4, 0xeb, 0x1f, 0x04, 0x3b, 0xd8, 0x9d,
-  0x1d, 0x4f, 0x38, 0x5f, 0xce, 0x85, 0x55, 0x07, 0xaa, 0xb8, 0x5b, 0x7a,
-  0x3b, 0x7e, 0x69, 0x00, 0x2b, 0xc0, 0x17, 0xa5, 0xac, 0x65, 0xe9, 0x0c,
-  0x47, 0x70, 0x30, 0xea, 0xb3, 0xf5, 0x7d, 0x6a, 0x24, 0x2c, 0x60, 0x1a,
-  0xa2, 0xc7, 0x8b, 0x82, 0x4c, 0xac, 0x26, 0x4b, 0x8a, 0x47, 0x03, 0x1d,
-  0x3a, 0xfc, 0x4f, 0x98, 0x62, 0x90, 0xef, 0xc2, 0xef, 0x8c, 0x46, 0x23,
-  0x5f, 0x0a, 0x84, 0xb7, 0x45, 0xdd, 0x4e, 0xc0, 0x15, 0x0f, 0xb0, 0xcf,
-  0xb0, 0xc6, 0x9b, 0x10, 0xe4, 0x21, 0x4c, 0x6f, 0x69, 0xd4, 0x8b, 0x9a,
-  0x24, 0xdc, 0xd1, 0x08, 0x0c, 0x1b, 0x7d, 0xed, 0xb6, 0x6f, 0xa5, 0x06,
-  0x6e, 0xbb, 0x36, 0xe1, 0x91, 0xb1, 0x89, 0xc1, 0xb1, 0x8c, 0x91, 0xa0,
-  0xef, 0xf8, 0x54, 0xee, 0xd6, 0x82, 0x29, 0x98, 0x93, 0xf6, 0xa5, 0xca,
-  0x29, 0xb6, 0x44, 0x16, 0x4d, 0x87, 0xa2, 0x65, 0x6e, 0x98, 0xc9, 0xe5,
-  0xf7, 0xc8, 0xe7, 0x44, 0xd6, 0x28, 0xc7, 0x80, 0x64, 0x62, 0x1f, 0xb0,
-  0x1b, 0xc4, 0x21, 0xff, 0x5a, 0x3b, 0x33, 0xb1, 0xcf, 0xb2, 0xd2, 0x0c,
-  0xb9, 0x5f, 0xd3, 0x60, 0x34, 0xd3, 0xbb, 0x8c, 0x15, 0x23, 0x8b, 0xc4,
-  0xb6, 0x7c, 0x01, 0x4f, 0x97, 0x4e, 0xde, 0xdb, 0x4a, 0x38, 0xd8, 0x6b,
-  0x28, 0xb9, 0xd2, 0x96, 0xa9, 0x62, 0xdc, 0x43, 0xf3, 0x65, 0x1f, 0xf3,
-  0x91, 0x4f, 0xad, 0x45, 0xe7, 0x20, 0x6f, 0xac, 0x8d, 0xbf, 0x95, 0xeb,
-  0xac, 0x8b, 0x56, 0x54, 0x4c, 0xca, 0x10, 0x94, 0x03, 0xbe, 0x17, 0xc5,
-  0xf7, 0x5c, 0x92, 0x86, 0x68, 0x50, 0x7c, 0x65, 0x62, 0x96, 0x39, 0x0d,
-  0x8c, 0x8b, 0x6e, 0x86, 0x56, 0xcf, 0x39, 0xf6, 0x15, 0x9d, 0x0d, 0x15,
-  0x56, 0xa0, 0xde, 0xcc, 0x8a, 0x97, 0xa2, 0xa8, 0x08, 0x43, 0x73, 0xa9,
-  0xa0, 0x6e, 0xfa, 0x39, 0x8f, 0x9c, 0x58, 0xf4, 0x58, 0xe9, 0x26, 0x45,
-  0x58, 0x20, 0x1b, 0x3a, 0x24, 0x96, 0xc2, 0x56, 0x4b, 0xaa, 0x79, 0x5b,
-  0x27, 0xce, 0x25, 0x0d, 0x9b, 0x13, 0xcb, 0xd3, 0x59, 0x9e, 0x0d, 0x5d,
-  0xa1, 0x21, 0x17, 0x78, 0x55, 0xa4, 0xd7, 0xd7, 0xa2, 0xb1, 0x45, 0xcd,
-  0xa9, 0x75, 0x13, 0xd9, 0x29, 0xaf, 0x0a, 0xc7, 0x6e, 0x3e, 0xac, 0x5b,
-  0xcd, 0x4b, 0x57, 0xa8, 0x54, 0xcd, 0x2e, 0x35, 0x62, 0x36, 0x37, 0xa4,
-  0xec, 0x1b, 0x20, 0xb4, 0x24, 0xd9, 0x92, 0x6d, 0x5f, 0x75, 0xb7, 0xf1,
-  0xd9, 0x05, 0x33, 0xb1, 0xd2, 0x6d, 0x79, 0xbf, 0x74, 0x9b, 0x0e, 0x68,
-  0x19, 0x1f, 0x75, 0x32, 0x63, 0xe3, 0xf2, 0x82, 0xaf, 0xe2, 0x7b, 0x17,
-  0xf2, 0x24, 0x50, 0xbb, 0x93, 0xd8, 0x6b, 0x5c, 0x1b, 0x51, 0xcd, 0xc4,
-  0xcb, 0xa5, 0x2d, 0x4f, 0x32, 0xe5, 0x43, 0xf9, 0x5d, 0xe2, 0xd1, 0x8d,
-  0xbc, 0x95, 0xd1, 0x23, 0xc4, 0xe9, 0xe9, 0x77, 0xcc, 0xa4, 0xe1, 0xd3,
-  0x75, 0xfc, 0x0a, 0x93, 0x6c, 0xac, 0xca, 0x28, 0x0a, 0x9a, 0x14, 0x5b,
-  0x49, 0x1e, 0xb2, 0x78, 0x19, 0x9b, 0xba, 0xaa, 0xad, 0x45, 0x0d, 0xea,
-  0x07, 0xea, 0x7e, 0xa0, 0x9a, 0x08, 0x9a, 0xac, 0x52, 0x55, 0xe9, 0x02,
-  0xe4, 0xbc, 0xcb, 0xd7, 0x66, 0xd9, 0x73, 0x9b, 0xd4, 0x43, 0xee, 0xc9,
-  0x44, 0x89, 0x00, 0x34, 0xc0, 0x02, 0x9d, 0xf3, 0xda, 0x1f, 0xcc, 0x63,
-  0x0e, 0x5c, 0xc9, 0x25, 0x20, 0x00, 0x5b, 0x06, 0xa2, 0x86, 0x35, 0xad,
-  0xc1, 0x53, 0x5b, 0xc7, 0xcf, 0x05, 0x68, 0x08, 0xad, 0xb1, 0x90, 0x82,
-  0x66, 0x88, 0x4a, 0x10, 0x9d, 0x3b, 0x35, 0xe6, 0xfe, 0x78, 0x12, 0xe6,
-  0xa4, 0x76, 0x46, 0x3f, 0x74, 0x64, 0xcf, 0x2f, 0xce, 0xbe, 0xbe, 0x38,
-  0x1e, 0x8f, 0xa3, 0xd7, 0xc7, 0x97, 0xa2, 0xf2, 0x5f, 0x4a, 0x34, 0x9c,
-  0x40, 0x14, 0xc3, 0xd7, 0x60, 0x38, 0x09, 0x16, 0x70, 0x62, 0xf6, 0x04,
-  0xa0, 0xaa, 0xe6, 0xec, 0x47, 0x83, 0x28, 0x07, 0x75, 0x7e, 0xae, 0x41,
-  0x74, 0x37, 0xb0, 0xf6, 0x23, 0xa4, 0x09, 0xee, 0x48, 0x67, 0x3c, 0xf7,
-  0x26, 0x55, 0xc8, 0xc8, 0x12, 0xe4, 0x74, 0x63, 0x9c, 0xcb, 0x9b, 0xd0,
-  0xf9, 0xf6, 0xa6, 0x9f, 0x98, 0xde, 0xef, 0xa3, 0x4b, 0x2b, 0xc7, 0xfd,
-  0x7b, 0x52, 0x83, 0x95, 0x3e, 0x7e, 0x1f, 0xfd, 0x40, 0x6d, 0xce, 0x68,
-  0xd5, 0xb5, 0xea, 0xe2, 0x18, 0xa5, 0x36, 0x7c, 0x39, 0x13, 0x40, 0x9d,
-  0x86, 0x25, 0x76, 0x56, 0x45, 0xf1, 0x81, 0x92, 0xbe, 0x48, 0x9b, 0x17,
-  0xd0, 0x27, 0x0d, 0xa9, 0x73, 0x3d, 0xf3, 0xdb, 0xa8, 0x26, 0x76, 0x9a,
-  0x5c, 0x55, 0x10, 0x48, 0xb8, 0x3b, 0x6a, 0x6e, 0x87, 0x41, 0x0c, 0x77,
-  0x5f, 0xf3, 0x47, 0x3b, 0xd1, 0x93, 0xcf, 0x3f, 0xdd, 0xf9, 0x5c, 0x7e,
-  0xb5, 0x7f, 0x9f, 0x3f, 0xdd, 0x51, 0x30, 0x50, 0xfa, 0xeb, 0xe9, 0xfe,
-  0xd3, 0xdd, 0x7d, 0x06, 0x29, 0xda, 0xd9, 0xdf, 0xa1, 0xff, 0x7f, 0xaa,
-  0x9f, 0x30, 0x12, 0xd3, 0xf3, 0xbd, 0xcf, 0x3f, 0x43, 0x2c, 0x0c, 0xd3,
-  0xc7, 0x9c, 0x3a, 0x19, 0x56, 0xf9, 0x10, 0x48, 0x0e, 0x10, 0x82, 0x7e,
-  0x5f, 0xb7, 0x4a, 0xb2, 0x73, 0x9d, 0xeb, 0x29, 0xf2, 0xc4, 0x5d, 0x01,
-  0x66, 0xb3, 0xb0, 0x4a, 0x36, 0x7f, 0x58, 0x24, 0xd6, 0x4d, 0x43, 0xdf,
-  0x96, 0x42, 0x9d, 0x80, 0x46, 0xa9, 0xbd, 0x43, 0x22, 0xa3, 0x24, 0x53,
-  0x85, 0x2f, 0xff, 0x92, 0xae, 0x2d, 0xe9, 0x70, 0x03, 0xd8, 0x2a, 0xba,
-  0x55, 0xfa, 0xde, 0x54, 0x96, 0x90, 0x68, 0x24, 0x28, 0x3e, 0xda, 0x28,
-  0x16, 0xfa, 0x4b, 0xfb, 0x13, 0x03, 0x16, 0xbf, 0xa5, 0xd4, 0x10, 0xb5,
-  0x7b, 0xb3, 0x9a, 0xa9, 0x5d, 0x7d, 0xd5, 0x88, 0x67, 0xc3, 0x6f, 0xbf,
-  0x5f, 0xa9, 0xa0, 0xae, 0xa7, 0x43, 0x16, 0x91, 0xaa, 0x2e, 0x1d, 0x53,
-  0x6e, 0x35, 0xf7, 0x76, 0x19, 0xb6, 0xf7, 0x31, 0xcd, 0xf9, 0x19, 0x81,
-  0x82, 0xdd, 0xce, 0x0d, 0x83, 0xcd, 0x49, 0x25, 0xae, 0xcd, 0x15, 0x08,
-  0x35, 0x74, 0x2c, 0x57, 0x57, 0x10, 0xaf, 0x3a, 0x92, 0x1d, 0xca, 0x1b,
-  0x2a, 0x7e, 0x96, 0x48, 0x11, 0x12, 0x41, 0xe1, 0x2e, 0xc7, 0x6d, 0x2f,
-  0xcf, 0x1b, 0x65, 0xb7, 0xba, 0x62, 0x6a, 0x0c, 0xfa, 0xd3, 0x3e, 0x70,
-  0x9e, 0xdc, 0xa1, 0x7b, 0x74, 0x6a, 0x3e, 0xca, 0xdd, 0x55, 0xb5, 0xd9,
-  0x74, 0x51, 0xe3, 0x5d, 0x47, 0xd2, 0x3f, 0x87, 0x40, 0x72, 0xd7, 0x5c,
-  0x78, 0x11, 0xa1, 0xa0, 0x11, 0xc6, 0xc7, 0x09, 0xfc, 0xf9, 0x8a, 0x21,
-  0x6a, 0xb7, 0x8c, 0x85, 0x0d, 0x3f, 0x71, 0x41, 0x5b, 0xb8, 0xd7, 0x14,
-  0x96, 0x3d, 0x16, 0xca, 0x9f, 0x87, 0xf9, 0x65, 0x35, 0x40, 0xf6, 0x10,
-  0x0c, 0x76, 0x43, 0xca, 0x07, 0xd3, 0x4d, 0x4b, 0x37, 0x47, 0x50, 0xbc,
-  0xeb, 0x77, 0x1b, 0x1b, 0xe3, 0xf3, 0xe3, 0xe3, 0xa3, 0xe8, 0xf4, 0xe4,
-  0xf5, 0xc9, 0x65, 0x20, 0x90, 0xbb, 0x8b, 0xc4, 0x0c, 0xae, 0xa5, 0x46,
-  0xb1, 0x35, 0x96, 0xc3, 0x63, 0x0f, 0x2a, 0x80, 0xb3, 0x5e, 0xe5, 0x8b,
-  0x44, 0xf3, 0x19, 0xe6, 0xcd, 0xf7, 0xa0, 0x7a, 0x03, 0xae, 0x02, 0x55,
-  0x36, 0xbc, 0x40, 0x57, 0x92, 0x70, 0x33, 0x75, 0xb5, 0x7e, 0x86, 0x3f,
-  0x6a, 0x94, 0x46, 0x5d, 0x72, 0x52, 0x08, 0x35, 0x57, 0xc7, 0x49, 0x43,
-  0x5b, 0x1b, 0xa3, 0xe2, 0xb5, 0x4d, 0xe6, 0x5a, 0x4e, 0xd4, 0x59, 0xe8,
-  0x10, 0xb4, 0x77, 0x9f, 0x20, 0x33, 0x76, 0x91, 0x0a, 0x90, 0x73, 0x18,
-  0x52, 0xec, 0x6a, 0xa7, 0x5c, 0xe6, 0xc2, 0xc7, 0xc3, 0x1e, 0xc3, 0xb2,
-  0x56, 0x16, 0x4f, 0x6b, 0x7d, 0x85, 0x05, 0x93, 0x9e, 0xec, 0xb8, 0xc4,
-  0x81, 0x25, 0x78, 0x8e, 0x8a, 0xfa, 0xdc, 0xd9, 0x6e, 0x44, 0xf2, 0xc8,
-  0x8a, 0xa5, 0xfa, 0x62, 0x95, 0xb5, 0xae, 0xbb, 0x1f, 0xe5, 0x5d, 0x9a,
-  0xff, 0xa7, 0x3b, 0xb8, 0xde, 0xae, 0xe2, 0x62, 0x48, 0x92, 0xd7, 0xc3,
-  0xd0, 0x8c, 0xab, 0x42, 0x11, 0x1a, 0x6e, 0x2c, 0xa6, 0x9f, 0xc4, 0x57,
-  0xfa, 0x68, 0x48, 0x8b, 0x3e, 0xfb, 0x23, 0x87, 0x5f, 0x72, 0xae, 0x07,
-  0x80, 0xa7, 0x3e, 0x88, 0x50, 0x83, 0xda, 0x05, 0x40, 0x8b, 0xac, 0xe3,
-  0xe1, 0xf5, 0x6c, 0x17, 0x3d, 0x8f, 0x42, 0xed, 0xd3, 0x5c, 0x3d, 0x44,
-  0x29, 0x4f, 0x53, 0xe7, 0xd2, 0x16, 0xad, 0x17, 0xd1, 0xee, 0xe7, 0x3c,
-  0x8f, 0x8f, 0x9b, 0x0f, 0x17, 0xb4, 0xb0, 0x50, 0x36, 0x51, 0x17, 0x72,
-  0xbf, 0x9b, 0x92, 0x9e, 0x00, 0xcc, 0x72, 0x59, 0x5d, 0x8b, 0x89, 0x45,
-  0xc8, 0x1e, 0xeb, 0x27, 0xea, 0x4f, 0x87, 0x65, 0x0a, 0x0e, 0x6e, 0x91,
-  0x90, 0x50, 0xbb, 0x51, 0xd6, 0x85, 0x6d, 0xad, 0x12, 0xb2, 0xd7, 0x2f,
-  0x7c, 0xea, 0x1c, 0x96, 0x81, 0xad, 0x23, 0x44, 0x6b, 0xf7, 0xe9, 0x0c,
-  0x52, 0xb5, 0x19, 0x01, 0x40, 0x7f, 0x42, 0x7c, 0x12, 0x2a, 0x0d, 0xff,
-  0x25, 0x1c, 0x9f, 0x6e, 0x64, 0x2a, 0xc0, 0xa0, 0xaa, 0x25, 0x8c, 0x0b,
-  0x9b, 0x90, 0x1f, 0xb8, 0x18, 0x4b, 0xdd, 0x35, 0xc0, 0xac, 0xb9, 0xe7,
-  0x7b, 0xe1, 0xf0, 0xfd, 0xaa, 0x9a, 0x9b, 0x5d, 0xc1, 0x57, 0x5b, 0xa8,
-  0xcf, 0x99, 0xb3, 0xfa, 0x83, 0x69, 0xef, 0xee, 0x90, 0xfc, 0x3a, 0xcf,
-  0x9b, 0x65, 0xd9, 0xda, 0x4a, 0x29, 0xa6, 0x35, 0xc4, 0xea, 0xec, 0xee,
-  0x7c, 0xbb, 0x7e, 0xd5, 0x81, 0x21, 0xfb, 0xe8, 0xcb, 0x7b, 0x4f, 0x1f,
-  0xd9, 0xb4, 0xb3, 0xa2, 0x56, 0x66, 0x47, 0x04, 0x41, 0xef, 0x80, 0x69,
-  0x6d, 0x1b, 0x11, 0x7e, 0x72, 0x1d, 0xa3, 0xca, 0xfa, 0x23, 0xa3, 0xb7,
-  0x34, 0x8d, 0xc6, 0x50, 0x5e, 0x6b, 0x50, 0xb6, 0x7c, 0x59, 0xb2, 0x85,
-  0x6c, 0x09, 0xd0, 0x21, 0xaf, 0xc6, 0xba, 0xdc, 0x4e, 0x49, 0xf6, 0x0e,
-  0xde, 0x16, 0xce, 0x39, 0xa8, 0x33, 0x09, 0xa3, 0x9e, 0x22, 0xb9, 0x5e,
-  0x49, 0x36, 0x75, 0x2e, 0x6a, 0x3f, 0xa3, 0x32, 0xea, 0x79, 0x25, 0xde,
-  0xcc, 0xe1, 0x43, 0x42, 0x4f, 0x60, 0xbc, 0xd3, 0xd8, 0x44, 0x56, 0x11,
-  0x39, 0x9a, 0x17, 0x03, 0xdb, 0x67, 0xa7, 0xec, 0x0c, 0x03, 0x37, 0x90,
-  0xe3, 0x15, 0xd6, 0x7b, 0x92, 0x6a, 0x48, 0x23, 0xa4, 0x2a, 0x0a, 0xa1,
-  0x38, 0x66, 0xcf, 0x09, 0x5e, 0xec, 0x14, 0xab, 0xc4, 0x43, 0x80, 0x06,
-  0x06, 0x4a, 0xb5, 0x68, 0xc9, 0x75, 0xc5, 0x1c, 0xbf, 0xb4, 0x5c, 0x54,
-  0x81, 0x8a, 0x65, 0xbb, 0xff, 0xe1, 0xd9, 0x9b, 0x57, 0x27, 0x5f, 0x3b,
-  0x84, 0x0b, 0x61, 0xe2, 0xab, 0x2a, 0x67, 0xbb, 0xa6, 0x18, 0x0d, 0xc5,
-  0x92, 0x1c, 0x7a, 0xbd, 0xb5, 0xde, 0x86, 0xc6, 0xde, 0x12, 0x7b, 0x7a,
-  0x17, 0x7e, 0x00, 0x06, 0x92, 0x3d, 0x61, 0x5b, 0xb9, 0xa4, 0x91, 0x97,
-  0x5b, 0xde, 0xf2, 0xd0, 0x00, 0xe0, 0x91, 0x24, 0x8d, 0xb8, 0xa8, 0x56,
-  0x4b, 0x17, 0x42, 0x18, 0xd4, 0xeb, 0x50, 0x10, 0x49, 0xbe, 0x15, 0xb8,
-  0x6e, 0xf4, 0x6a, 0x29, 0xac, 0x49, 0x42, 0x1f, 0xeb, 0x86, 0x5d, 0xb9,
-  0x03, 0xd8, 0xb2, 0xa0, 0x79, 0xf7, 0x7a, 0x01, 0xb4, 0xe2, 0x72, 0xe6,
-  0x0c, 0x8c, 0x15, 0x86, 0xcb, 0x9b, 0x2b, 0x87, 0x8b, 0x75, 0xc9, 0x44,
-  0xad, 0xd4, 0xd2, 0x42, 0x34, 0x33, 0x9e, 0xb7, 0x54, 0x70, 0xfd, 0xd1,
-  0xd5, 0xb2, 0xd5, 0xd8, 0x5f, 0xef, 0x2a, 0x72, 0x45, 0x0b, 0x7c, 0x7c,
-  0x92, 0x0c, 0x16, 0x71, 0x84, 0xe5, 0x40, 0x5c, 0x9e, 0xf8, 0xe4, 0x25,
-  0x7b, 0x68, 0xf6, 0x47, 0x28, 0x77, 0x89, 0x20, 0x9e, 0xb0, 0x0e, 0x95,
-  0x72, 0x49, 0x0f, 0x79, 0x7a, 0x72, 0x15, 0xe4, 0x96, 0x49, 0x9c, 0xa0,
-  0x11, 0x9d, 0x98, 0x8b, 0xd9, 0xd6, 0xd2, 0xff, 0xa4, 0x3f, 0x2c, 0x1f,
-  0x16, 0x93, 0x7c, 0x6e, 0x79, 0x17, 0x2e, 0xbb, 0xda, 0x1e, 0xaa, 0x68,
-  0x1a, 0x08, 0x1c, 0x94, 0xe2, 0x83, 0xe8, 0x3a, 0xb0, 0x50, 0xfa, 0x58,
-  0x29, 0x3f, 0x7e, 0xc1, 0xd8, 0x87, 0xa7, 0xc8, 0x66, 0xe1, 0x52, 0xfd,
-  0x93, 0x6c, 0x3a, 0xcf, 0x95, 0xaa, 0x39, 0x43, 0x16, 0x2b, 0x55, 0x9f,
-  0x3a, 0xfb, 0xfe, 0xf2, 0x15, 0x1b, 0x3b, 0x80, 0x9f, 0x4d, 0xe2, 0x0e,
-  0x1b, 0x87, 0xbf, 0xb7, 0x09, 0xf2, 0xdb, 0xf2, 0x85, 0xc6, 0xe4, 0x1b,
-  0x46, 0x02, 0x35, 0x24, 0x80, 0xdb, 0x34, 0xd4, 0xbf, 0x88, 0x6d, 0x51,
-  0x3c, 0x80, 0x3f, 0x5a, 0xe7, 0xf6, 0x68, 0x63, 0xe9, 0x89, 0x9e, 0xe2,
-  0xe2, 0x5a, 0x91, 0x87, 0xd4, 0xa9, 0x06, 0x25, 0xd1, 0xc1, 0xa0, 0x3b,
-  0x1b, 0x25, 0x0b, 0x25, 0x2e, 0x66, 0x06, 0xe2, 0xd3, 0x4a, 0xb2, 0xfb,
-  0x34, 0x09, 0x4a, 0xac, 0x93, 0x8e, 0x10, 0x03, 0x8e, 0xf3, 0x89, 0x8b,
-  0x4b, 0x89, 0xfd, 0x5d, 0x66, 0xf0, 0xcc, 0xde, 0x54, 0xab, 0x97, 0x59,
-  0xf0, 0x1a, 0xdb, 0xf3, 0xa0, 0x09, 0x27, 0x6a, 0x43, 0x91, 0xae, 0x20,
-  0x4b, 0x30, 0xec, 0x16, 0x72, 0x7f, 0x92, 0xd2, 0x37, 0x21, 0xdf, 0xbf,
-  0xd4, 0x5c, 0x73, 0x3a, 0xcf, 0x8a, 0x1e, 0xa0, 0x90, 0x48, 0x9f, 0xef,
-  0xa8, 0x25, 0xae, 0xd2, 0x60, 0xd5, 0x32, 0x3a, 0xb8, 0x38, 0x26, 0xc9,
-  0xf6, 0x3a, 0x43, 0x76, 0x38, 0x8f, 0xb0, 0xd2, 0xfd, 0x81, 0x60, 0xcd,
-  0xab, 0xa0, 0xe7, 0x83, 0x3b, 0xbc, 0x0f, 0xde, 0x64, 0x62, 0xd2, 0xf8,
-  0x00, 0x3a, 0x64, 0x2e, 0x0a, 0x8d, 0x49, 0x6e, 0x6a, 0x90, 0x7d, 0xe0,
-  0x3a, 0x9c, 0xe6, 0x2d, 0x24, 0xc5, 0xde, 0x12, 0xea, 0x2a, 0x37, 0xb8,
-  0xbe, 0xf3, 0x16, 0x5b, 0x0f, 0x71, 0xfa, 0x6c, 0xad, 0x71, 0xaa, 0x7d,
-  0x22, 0xc2, 0xdf, 0x0c, 0x6d, 0x4c, 0xfb, 0xaa, 0x79, 0x40, 0x3d, 0x39,
-  0x0d, 0xba, 0xad, 0x47, 0x7f, 0xc3, 0x3d, 0xc3, 0xb2, 0x48, 0x53, 0x2e,
-  0x48, 0x5c, 0x7c, 0xbd, 0x18, 0xb2, 0x67, 0x81, 0xf0, 0x2b, 0x59, 0x79,
-  0x1c, 0x61, 0x2d, 0x36, 0x6a, 0x16, 0x7e, 0xe2, 0x32, 0xb1, 0xb2, 0x4a,
-  0x50, 0x07, 0x66, 0x7a, 0x56, 0x99, 0x2a, 0x38, 0x58, 0x78, 0xc2, 0x88,
-  0x1b, 0xb7, 0x22, 0x00, 0x84, 0xfc, 0xa9, 0xd3, 0xcc, 0xfb, 0x89, 0x9b,
-  0xad, 0x1f, 0x83, 0xfb, 0x92, 0x3f, 0x7a, 0xe9, 0x00, 0x88, 0x78, 0x14,
-  0x23, 0xee, 0x08, 0x2c, 0x15, 0xee, 0x53, 0xfe, 0x05, 0x1f, 0x23, 0xea,
-  0xcd, 0x30, 0xdc, 0x6a, 0x20, 0x22, 0x8a, 0xfc, 0x1e, 0x0e, 0x44, 0x7c,
-  0x7c, 0xe0, 0xd0, 0x93, 0x50, 0x34, 0x0e, 0x6a, 0x1d, 0xb1, 0x29, 0x87,
-  0x53, 0x79, 0xed, 0xc0, 0x97, 0x49, 0xad, 0x36, 0x92, 0x4b, 0x14, 0xea,
-  0x0d, 0x7b, 0xb4, 0x16, 0xfd, 0xf9, 0xdc, 0x33, 0x7c, 0x7b, 0x8c, 0x77,
-  0x15, 0x39, 0x75, 0x5e, 0x60, 0x52, 0xde, 0xc5, 0xa8, 0xd2, 0x0f, 0xb5,
-  0x04, 0x07, 0xae, 0xca, 0xc1, 0xf9, 0x3f, 0x0e, 0x04, 0x06, 0x49, 0x22,
-  0x08, 0x17, 0xb8, 0x4b, 0x4b, 0xf3, 0x43, 0x12, 0x6d, 0x4f, 0x35, 0x36,
-  0x42, 0x32, 0xaa, 0x93, 0x6a, 0x1a, 0x2c, 0x65, 0x32, 0xbd, 0xc9, 0x25,
-  0xa6, 0x96, 0x16, 0x2d, 0x48, 0xbe, 0xec, 0x45, 0xff, 0xae, 0x34, 0xf0,
-  0xad, 0xcf, 0xd9, 0x63, 0x42, 0x18, 0x09, 0xb6, 0xd6, 0xc8, 0x13, 0xc4,
-  0xf1, 0x0f, 0x97, 0x17, 0x07, 0xd1, 0x37, 0xc7, 0x07, 0x47, 0xc7, 0x17,
-  0xe3, 0xc6, 0xa5, 0xaf, 0x51, 0x20, 0x22, 0xa1, 0xb1, 0x3d, 0x18, 0xa2,
-  0xb1, 0x25, 0xff, 0x6b, 0xd4, 0xbe, 0x71, 0xbd, 0xf8, 0x01, 0x07, 0x89,
-  0xce, 0x07, 0x2b, 0x44, 0xe2, 0x38, 0xe0, 0xd0, 0x34, 0x0e, 0x7f, 0xce,
-  0x83, 0x36, 0xb4, 0x00, 0xb0, 0xb3, 0x9e, 0x87, 0xf9, 0x32, 0x1e, 0xd7,
-  0xc9, 0x5f, 0x26, 0xb3, 0xdc, 0x72, 0x01, 0xeb, 0x3b, 0xf7, 0x8d, 0xcf,
-  0xbc, 0x0e, 0xd8, 0x96, 0x5e, 0x32, 0x6a, 0x40, 0xec, 0xfd, 0x30, 0xa4,
-  0x7e, 0x87, 0xb4, 0xf8, 0x43, 0xc6, 0xdd, 0x7a, 0x48, 0xca, 0x5e, 0xc3,
-  0x1a, 0x58, 0xef, 0x7e, 0x43, 0x2a, 0x11, 0xb4, 0x4e, 0xd2, 0x37, 0x9d,
-  0x2d, 0xf1, 0xe9, 0x9a, 0x73, 0x7d, 0x80, 0xa6, 0x06, 0x81, 0x4b, 0x35,
-  0x10, 0x92, 0xf5, 0x04, 0xb5, 0x92, 0x5b, 0x34, 0x4e, 0xc9, 0xab, 0x99,
-  0x1a, 0x1b, 0x86, 0x81, 0xe8, 0x14, 0x20, 0xeb, 0xa4, 0x95, 0x5e, 0xea,
-  0xb0, 0x8b, 0x18, 0x28, 0x24, 0x0d, 0x4b, 0x1f, 0x0a, 0xef, 0x07, 0xf8,
-  0x42, 0x34, 0x4a, 0xbf, 0xac, 0xb9, 0x4a, 0xd5, 0x2e, 0xaa, 0x08, 0x99,
-  0xda, 0x1c, 0x8f, 0xc1, 0xd1, 0xbc, 0x05, 0xf7, 0x73, 0x97, 0x06, 0x8f,
-  0xad, 0xef, 0x4a, 0x44, 0x18, 0x2b, 0xf5, 0x30, 0x75, 0x72, 0xcc, 0x99,
-  0x6c, 0xbc, 0xc9, 0xab, 0x41, 0x26, 0x50, 0x48, 0xcc, 0x28, 0xe5, 0x81,
-  0xe8, 0x71, 0xf7, 0x5c, 0x12, 0x7d, 0x93, 0x97, 0xb8, 0x0b, 0xda, 0x8f,
-  0xf3, 0x25, 0xdf, 0xb5, 0xfc, 0x78, 0x43, 0x5d, 0x5d, 0x0e, 0xf8, 0x0e,
-  0x48, 0x91, 0x60, 0x5f, 0xe7, 0x07, 0x97, 0xdf, 0xc0, 0xd1, 0x0a, 0x12,
-  0x3e, 0x02, 0xe4, 0x83, 0xb9, 0xd7, 0xda, 0x09, 0x59, 0x4e, 0x81, 0x13,
-  0xf9, 0xd7, 0x40, 0xbc, 0x4c, 0x9e, 0x84, 0x23, 0x0f, 0x26, 0x4a, 0x60,
-  0x02, 0xa5, 0x6a, 0x78, 0xac, 0x97, 0x97, 0x41, 0xe8, 0xbb, 0xcb, 0xb6,
-  0x73, 0xb1, 0x97, 0x7d, 0x49, 0x49, 0xef, 0xcb, 0x9c, 0x40, 0xf4, 0x2c,
-  0xcc, 0xb1, 0xc6, 0x13, 0xe2, 0x29, 0xe2, 0x8b, 0x2b, 0x4d, 0xb4, 0x1d,
-  0xd0, 0x9e, 0x76, 0x63, 0x64, 0x05, 0x47, 0xfa, 0xcb, 0xc5, 0xc3, 0xa8,
-  0x0d, 0x20, 0x12, 0x7d, 0xb5, 0xaa, 0xea, 0x6c, 0xa5, 0x81, 0xea, 0xe8,
-  0x24, 0xcb, 0x22, 0xcf, 0xab, 0x3a, 0x2e, 0x22, 0x56, 0x47, 0x4e, 0xb4,
-  0x80, 0xa1, 0xc9, 0x58, 0xb8, 0xa9, 0x4c, 0xe5, 0xee, 0x50, 0x30, 0x8c,
-  0x27, 0x65, 0x3e, 0x5f, 0x55, 0x41, 0xf4, 0xf5, 0x2f, 0x1b, 0x73, 0x30,
-  0xe8, 0xcd, 0x93, 0x51, 0x62, 0x04, 0xc5, 0xe1, 0xc3, 0x45, 0x4c, 0x9a,
-  0x3e, 0xd7, 0x82, 0x65, 0xbf, 0x63, 0x91, 0x67, 0xf5, 0x1a, 0x28, 0x08,
-  0xf4, 0xde, 0xda, 0xd8, 0x18, 0xdb, 0x66, 0x33, 0x04, 0x5f, 0x7b, 0xd3,
-  0x01, 0x18, 0x01, 0x9c, 0x3f, 0xf1, 0x1b, 0x4c, 0xe9, 0x17, 0x03, 0x46,
-  0x4a, 0x64, 0x4f, 0xc1, 0xc2, 0x65, 0x8f, 0xd3, 0xb2, 0x3e, 0x29, 0x7c,
-  0xe5, 0x3c, 0x17, 0x96, 0x5d, 0x76, 0x99, 0x1b, 0x5c, 0xae, 0x7a, 0xee,
-  0x3c, 0x41, 0xd4, 0x12, 0xd4, 0x3b, 0x71, 0x33, 0xf9, 0x12, 0x50, 0x94,
-  0x2e, 0x1f, 0x9a, 0xcb, 0x83, 0xdc, 0xfe, 0x8f, 0xed, 0x68, 0x20, 0x78,
-  0x37, 0x1d, 0xa8, 0x23, 0xab, 0xe8, 0xff, 0x45, 0x08, 0x96, 0x42, 0x16,
-  0x72, 0x9b, 0x0d, 0xa8, 0xbf, 0x11, 0xa9, 0x50, 0x37, 0xc5, 0xd4, 0x53,
-  0x3f, 0x49, 0x07, 0xc9, 0x3d, 0xeb, 0x2f, 0xa6, 0x23, 0xf0, 0x17, 0x96,
-  0x6a, 0xea, 0x11, 0x64, 0x00, 0x7c, 0x71, 0xe5, 0xac, 0x7a, 0x5c, 0x3e,
-  0x4a, 0x6a, 0x29, 0x89, 0x58, 0x8f, 0x5a, 0x02, 0xe6, 0x41, 0xdd, 0x88,
-  0x6a, 0x7a, 0x7b, 0x19, 0x95, 0xb9, 0xfc, 0xb4, 0x94, 0x23, 0x8d, 0xf1,
-  0x52, 0xf2, 0x57, 0x35, 0x4a, 0x0b, 0x61, 0x14, 0x22, 0xfe, 0x58, 0xf0,
-  0xa9, 0x84, 0xd5, 0x99, 0x63, 0xd2, 0xc6, 0x68, 0x42, 0x00, 0xfb, 0x2d,
-  0x81, 0x80, 0xa6, 0x05, 0x21, 0x5d, 0x7d, 0x54, 0xa4, 0x6c, 0x73, 0xed,
-  0x21, 0x53, 0x64, 0xec, 0x46, 0xb5, 0x2c, 0x8e, 0x8d, 0xb0, 0x94, 0x9c,
-  0x8c, 0x5e, 0xaf, 0x7e, 0xa4, 0xc5, 0xc3, 0x47, 0x77, 0x1f, 0xa7, 0x55,
-  0x28, 0x11, 0xd8, 0x8c, 0x48, 0xc3, 0x53, 0xd0, 0xfa, 0xc9, 0x43, 0x2d,
-  0x34, 0xc5, 0xc7, 0x6d, 0x5e, 0x73, 0x92, 0x87, 0x5a, 0xa4, 0x14, 0x54,
-  0x04, 0xe6, 0xaf, 0x9b, 0x54, 0xa3, 0x4b, 0x65, 0xd1, 0xcd, 0x1c, 0xc8,
-  0xf6, 0x0c, 0x98, 0xf7, 0x38, 0xb4, 0xc0, 0x7b, 0x57, 0x5d, 0x00, 0xc4,
-  0xa8, 0x7d, 0x5a, 0x46, 0x0e, 0x7e, 0x4f, 0x6f, 0x90, 0x93, 0x30, 0x9f,
-  0x1c, 0xab, 0xe2, 0x62, 0x9e, 0x3f, 0xaa, 0xeb, 0xb0, 0x3f, 0x8e, 0x62,
-  0xcd, 0x22, 0xbf, 0x1e, 0xa5, 0x5c, 0x25, 0x7b, 0xbb, 0x50, 0x49, 0x25,
-  0x70, 0x03, 0x68, 0x76, 0x56, 0xd6, 0xca, 0xe3, 0xb4, 0xd4, 0xd7, 0x1d,
-  0x45, 0x33, 0x01, 0x96, 0x68, 0xa9, 0xf6, 0xea, 0x67, 0x16, 0x89, 0x30,
-  0xf0, 0x38, 0xd5, 0xea, 0x9f, 0x48, 0xfa, 0x76, 0x59, 0x15, 0xab, 0x69,
-  0x0d, 0xb9, 0x0a, 0xc4, 0x50, 0xf3, 0xcf, 0xbb, 0xe5, 0xcd, 0x43, 0xad,
-  0x7e, 0x33, 0xae, 0xe5, 0xb2, 0xe8, 0x93, 0x61, 0x17, 0x5b, 0x52, 0x0c,
-  0x54, 0x8b, 0x21, 0x43, 0x3b, 0xa1, 0xf1, 0x3b, 0x02, 0x1b, 0x9e, 0xbb,
-  0x54, 0xfa, 0x1a, 0x00, 0x98, 0xe4, 0x25, 0x04, 0xb7, 0xae, 0x8a, 0x60,
-  0x10, 0x39, 0x8a, 0x48, 0xa1, 0xc8, 0x20, 0xd0, 0xb0, 0xb1, 0x72, 0xc3,
-  0xc1, 0x85, 0x51, 0x77, 0x43, 0x5f, 0xfd, 0x93, 0xfa, 0xdb, 0xa6, 0x85,
-  0x34, 0xf8, 0x7d, 0x57, 0xd9, 0xa1, 0xf4, 0x90, 0x63, 0x8d, 0x58, 0xd5,
-  0x64, 0x4e, 0x53, 0x76, 0x92, 0xa1, 0x9c, 0xc4, 0x85, 0xae, 0xdf, 0xc8,
-  0xd5, 0xe3, 0xb4, 0xba, 0xa7, 0x0d, 0x41, 0xa2, 0x7d, 0x2b, 0x9e, 0x0b,
-  0x18, 0x49, 0x8b, 0x88, 0x8e, 0xcc, 0x9a, 0x0a, 0x66, 0x83, 0x05, 0x63,
-  0x9d, 0xc6, 0x36, 0xe9, 0xe4, 0xdc, 0x75, 0x41, 0x43, 0xe0, 0x19, 0xf7,
-  0xe7, 0xc9, 0x4e, 0x3f, 0x28, 0x4d, 0xb1, 0x29, 0xa1, 0xff, 0x39, 0xf4,
-  0x1e, 0xb6, 0x1c, 0x62, 0x82, 0x62, 0xb7, 0xe0, 0x08, 0xb7, 0xad, 0x8e,
-  0xa1, 0x50, 0x13, 0xbf, 0x74, 0x30, 0xbb, 0xcf, 0xf7, 0x46, 0xbb, 0x9f,
-  0x7e, 0x3e, 0xda, 0x19, 0xed, 0xee, 0x30, 0x67, 0xe1, 0xa1, 0x04, 0x83,
-  0x93, 0x75, 0xe9, 0xe8, 0xaa, 0xf6, 0x5e, 0xbb, 0xcf, 0x37, 0xc7, 0x97,
-  0xdf, 0x9f, 0x5d, 0x7c, 0x1b, 0x9d, 0xbc, 0xb9, 0x3c, 0xbe, 0x78, 0x75,
-  0x70, 0xf8, 0xb1, 0x00, 0xc4, 0xa1, 0xc1, 0x3a, 0x28, 0x47, 0x98, 0xf8,
-  0x85, 0x69, 0x5b, 0x05, 0xfd, 0x9a, 0x25, 0xd5, 0xcd, 0xce, 0xfe, 0xee,
-  0xa3, 0xc0, 0xa5, 0x1d, 0x86, 0x41, 0xff, 0xbe, 0x4d, 0x6a, 0x97, 0x27,
-  0xb5, 0xbe, 0x15, 0x07, 0x87, 0x36, 0x96, 0x00, 0x2b, 0x17, 0x9c, 0x0b,
-  0x06, 0x8f, 0xd2, 0x04, 0xe9, 0xa4, 0x88, 0xcd, 0x24, 0x35, 0x11, 0xf4,
-  0x44, 0x49, 0xab, 0x55, 0x98, 0x17, 0x0d, 0x42, 0x57, 0x76, 0xcb, 0x31,
-  0xca, 0xab, 0x74, 0x5e, 0xa9, 0x21, 0x45, 0xc0, 0x10, 0x67, 0x10, 0xee,
-  0x3a, 0x2b, 0xf4, 0xa2, 0x36, 0x97, 0x94, 0xe8, 0x9d, 0xb9, 0x6c, 0x11,
-  0x87, 0x3e, 0x50, 0xcb, 0xb9, 0xc1, 0x58, 0xeb, 0xd5, 0x1b, 0xc3, 0x18,
-  0xda, 0x06, 0x12, 0x61, 0x69, 0xb1, 0xcd, 0x98, 0x58, 0xcd, 0x28, 0x7a,
-  0xa8, 0x03, 0xc1, 0x69, 0x08, 0x46, 0x23, 0x5d, 0x41, 0x94, 0x32, 0xf4,
-  0xdb, 0x3a, 0x8e, 0xa6, 0xdc, 0x4e, 0xc8, 0xa0, 0x10, 0xc9, 0xcf, 0x50,
-  0xba, 0xb9, 0xf5, 0xb2, 0x86, 0xaf, 0x16, 0x49, 0xb9, 0x88, 0xf0, 0x75,
-  0x11, 0xb2, 0x11, 0xa2, 0x39, 0x2b, 0xe2, 0x7b, 0xae, 0x42, 0x23, 0x62,
-  0x83, 0x0f, 0x66, 0x0c, 0x6a, 0x5e, 0xb0, 0xc8, 0xe4, 0xd7, 0x3c, 0x3a,
-  0x3f, 0x7e, 0x3d, 0xb4, 0x52, 0x78, 0xf4, 0xbb, 0x98, 0xa1, 0x0c, 0x7f,
-  0x53, 0x32, 0x7c, 0x96, 0x49, 0x66, 0x01, 0x35, 0xe0, 0x89, 0x1a, 0x01,
-  0x14, 0x4e, 0x80, 0x0f, 0x8d, 0x58, 0x24, 0x84, 0xd7, 0x2a, 0x90, 0x99,
-  0x5d, 0x5a, 0x1d, 0x50, 0x78, 0xbc, 0x9f, 0x1a, 0xb5, 0x1c, 0x6d, 0xba,
-  0x48, 0x5d, 0xee, 0x0f, 0xe1, 0xa8, 0x88, 0x16, 0x70, 0x01, 0x02, 0xb9,
-  0x65, 0x5c, 0x9f, 0x7f, 0x7b, 0x38, 0xfe, 0x64, 0x77, 0x4f, 0x87, 0xb3,
-  0x35, 0xf2, 0xb8, 0x96, 0xad, 0x64, 0x7c, 0xb0, 0xeb, 0x70, 0x8c, 0x96,
-  0x5a, 0x8d, 0x03, 0x8e, 0xcd, 0xd8, 0x74, 0xe9, 0x41, 0x5b, 0xb5, 0xfc,
-  0x20, 0x84, 0x7f, 0x3d, 0x38, 0xe1, 0xd2, 0x95, 0xab, 0x63, 0x67, 0x08,
-  0x6a, 0x2e, 0x68, 0xd5, 0x83, 0xca, 0xc5, 0xfb, 0xc5, 0x99, 0x7d, 0x24,
-  0x2d, 0x6b, 0x6b, 0xc8, 0x1d, 0xf7, 0x31, 0x2d, 0xcd, 0x3d, 0xe7, 0xf5,
-  0xf6, 0xdf, 0x32, 0x7c, 0xa2, 0x5e, 0xea, 0x86, 0xce, 0xe3, 0xbb, 0xc1,
-  0x01, 0xd0, 0x10, 0xf6, 0x99, 0xd5, 0x55, 0xc9, 0x3c, 0xac, 0x3b, 0x3f,
-  0x7d, 0x46, 0x1b, 0x45, 0x27, 0x4b, 0xf0, 0x1a, 0x98, 0x29, 0xe4, 0x73,
-  0x56, 0x5a, 0xdc, 0x23, 0x47, 0x05, 0xe3, 0xe7, 0x2f, 0x25, 0x98, 0xf4,
-  0xcd, 0x28, 0xfa, 0x26, 0xc9, 0x4a, 0xad, 0x59, 0x6c, 0x19, 0x58, 0x08,
-  0x0e, 0xe4, 0xd2, 0x49, 0x28, 0x74, 0x73, 0x9a, 0xc4, 0x8a, 0x26, 0x48,
-  0xbc, 0xae, 0x14, 0xdd, 0xd6, 0x8a, 0x3c, 0xc4, 0x1c, 0xa2, 0x87, 0x9b,
-  0x48, 0x0d, 0xb4, 0xa8, 0x75, 0x98, 0x96, 0xda, 0xc0, 0x66, 0x1d, 0x13,
-  0x10, 0x00, 0xd5, 0x68, 0x4e, 0x8f, 0x39, 0xbc, 0x4c, 0x6a, 0x4f, 0xbe,
-  0x01, 0xe8, 0x2a, 0xdb, 0x09, 0x45, 0xd7, 0xf2, 0x4c, 0x65, 0x56, 0xdc,
-  0xb0, 0xd1, 0xa3, 0xa4, 0xeb, 0x26, 0xce, 0xa6, 0x0f, 0xa3, 0x19, 0x49,
-  0xb1, 0x6c, 0x36, 0x1b, 0xad, 0x6e, 0xb7, 0x83, 0x63, 0xca, 0x2c, 0xff,
-  0x46, 0xb0, 0x01, 0xea, 0x26, 0x6f, 0x2b, 0xd1, 0xd7, 0x86, 0xef, 0x8a,
-  0x6b, 0x67, 0x82, 0x49, 0xc2, 0xb2, 0xfc, 0xe5, 0x78, 0xae, 0x85, 0xb9,
-  0x3a, 0x8e, 0x1c, 0xde, 0x27, 0xb7, 0x30, 0x5a, 0x26, 0x8b, 0x7d, 0x97,
-  0x87, 0x6c, 0xfc, 0x41, 0x31, 0xc2, 0x9d, 0x4a, 0x11, 0x98, 0x67, 0xb3,
-  0xe4, 0x7a, 0xae, 0x02, 0x45, 0xa8, 0xb4, 0x78, 0xfc, 0xd6, 0x76, 0x1a,
-  0x88, 0xa8, 0x3a, 0xf0, 0x40, 0xa0, 0x04, 0x13, 0x71, 0xaa, 0x05, 0x2a,
-  0xa3, 0x18, 0xe3, 0xd7, 0xc2, 0xb0, 0xbe, 0x11, 0x45, 0x0c, 0x01, 0xf4,
-  0x28, 0xca, 0xa1, 0x8a, 0x71, 0xc7, 0xc2, 0x91, 0xd4, 0xf1, 0x44, 0xdf,
-  0x0a, 0x85, 0x00, 0xec, 0x57, 0x43, 0xa3, 0xe1, 0xf6, 0xb4, 0x52, 0x78,
-  0x72, 0x56, 0xe8, 0xeb, 0xbb, 0x27, 0x6c, 0xeb, 0xbe, 0x3c, 0x1d, 0x0f,
-  0x84, 0x1e, 0xb2, 0xe4, 0x3e, 0xa0, 0x2c, 0xc1, 0xa7, 0x56, 0xf2, 0x63,
-  0xcb, 0x8f, 0x84, 0xaf, 0x59, 0x19, 0xde, 0x42, 0x46, 0x23, 0x9c, 0xc1,
-  0x3b, 0xc9, 0x7c, 0x16, 0x84, 0x2d, 0x84, 0xc6, 0x13, 0xf3, 0x70, 0xac,
-  0xa6, 0x88, 0x08, 0x44, 0x0e, 0xe5, 0x85, 0x31, 0xf4, 0x48, 0x60, 0x7a,
-  0x32, 0x88, 0x86, 0x7b, 0x00, 0xcf, 0xd9, 0xad, 0x2f, 0x64, 0xcc, 0xa5,
-  0x3e, 0xe2, 0x29, 0x4a, 0x1b, 0x6d, 0xb8, 0x92, 0xeb, 0xc6, 0x12, 0x36,
-  0x95, 0xac, 0xef, 0xe8, 0x7d, 0xfe, 0xb1, 0xa7, 0x93, 0xba, 0xdb, 0x45,
-  0xe8, 0x36, 0xcb, 0xa3, 0x77, 0xc9, 0xfc, 0xa1, 0x2d, 0x36, 0xec, 0x3d,
-  0xba, 0xb3, 0x48, 0x92, 0xb8, 0x4f, 0x1d, 0xb6, 0xaa, 0xc0, 0x6b, 0xc3,
-  0x10, 0xaa, 0x88, 0x86, 0x36, 0x00, 0x5a, 0x46, 0x35, 0x71, 0x67, 0xd1,
-  0xdd, 0x9e, 0x79, 0x9a, 0xf9, 0x1b, 0x5b, 0x3c, 0x31, 0xd5, 0x7b, 0x46,
-  0xd2, 0x4a, 0x60, 0xe4, 0x70, 0xb7, 0x80, 0x72, 0x39, 0xf5, 0x89, 0xe8,
-  0x96, 0x38, 0x49, 0x8d, 0xd3, 0xe4, 0x99, 0x1a, 0x15, 0x24, 0xe1, 0x3d,
-  0xce, 0x04, 0xfa, 0x95, 0x64, 0x61, 0x1f, 0xe4, 0x84, 0x10, 0x70, 0x9c,
-  0x69, 0x92, 0x60, 0xcb, 0xd5, 0x42, 0x6b, 0x34, 0x81, 0x11, 0x0f, 0x70,
-  0xdd, 0x56, 0x11, 0x71, 0xe2, 0x54, 0x42, 0xfe, 0xe6, 0x10, 0xa6, 0x21,
-  0x60, 0xa9, 0xb1, 0xd4, 0x2f, 0x14, 0x5b, 0xc0, 0x04, 0x57, 0x0f, 0xf4,
-  0x72, 0x93, 0x8a, 0x0d, 0x03, 0x11, 0xaa, 0x58, 0x30, 0x62, 0x15, 0xfd,
-  0x88, 0x4e, 0xdf, 0x8a, 0x1b, 0xad, 0x72, 0x84, 0xc0, 0x3a, 0x81, 0x41,
-  0xb3, 0xe9, 0xc6, 0x90, 0x3a, 0xa3, 0x7e, 0xc8, 0x24, 0x87, 0x5f, 0xf0,
-  0x22, 0x94, 0x7d, 0xbf, 0x6a, 0x0a, 0x17, 0x5c, 0x5f, 0x02, 0xf5, 0x8f,
-  0xd0, 0x7a, 0x4b, 0x53, 0xe7, 0x85, 0x55, 0x15, 0xed, 0x27, 0xef, 0x59,
-  0x44, 0xea, 0x5b, 0xbf, 0xf2, 0xbd, 0xa0, 0x01, 0x60, 0x7d, 0xcf, 0x4f,
-  0xde, 0x48, 0xa1, 0x4c, 0x77, 0x96, 0x12, 0x96, 0xbc, 0xe5, 0x39, 0x11,
-  0x84, 0xc5, 0xc2, 0xcf, 0x5e, 0x4b, 0xb1, 0x39, 0x31, 0xc1, 0xf1, 0x21,
-  0x49, 0xad, 0xbb, 0x8b, 0x95, 0x8c, 0xa0, 0xcf, 0x37, 0x65, 0x59, 0xce,
-  0xfb, 0x8d, 0xfa, 0x6f, 0x6e, 0x47, 0x1b, 0x57, 0x92, 0xb3, 0x66, 0x4d,
-  0x67, 0x61, 0xf1, 0x5c, 0x6d, 0xa5, 0xc6, 0x29, 0x07, 0x8d, 0x8c, 0xc9,
-  0xd0, 0x8c, 0xfe, 0x49, 0x34, 0xda, 0xa6, 0x0e, 0xcb, 0x6d, 0x7b, 0x71,
-  0x79, 0x3b, 0x2d, 0xe9, 0x8e, 0xe4, 0xf4, 0xe0, 0x9f, 0x1c, 0xae, 0x33,
-  0x0f, 0x79, 0xf6, 0x73, 0x34, 0x9c, 0xce, 0x65, 0x86, 0xa8, 0x34, 0xf9,
-  0x13, 0xd1, 0x0d, 0x3f, 0xf1, 0xf3, 0x06, 0xa7, 0xca, 0x8d, 0xdf, 0xbe,
-  0x66, 0x54, 0x75, 0x54, 0xf3, 0xbb, 0xbc, 0x38, 0x78, 0x33, 0x7e, 0x25,
-  0x96, 0xd6, 0xcb, 0x3c, 0x28, 0x12, 0xa8, 0x66, 0x6a, 0x73, 0x47, 0x3a,
-  0xd0, 0xb1, 0x7b, 0x81, 0xfa, 0xb6, 0x48, 0x6d, 0xad, 0x20, 0x38, 0x68,
-  0x42, 0x1a, 0x4b, 0xf9, 0x41, 0x30, 0x6c, 0x3a, 0x51, 0x9b, 0xe5, 0x96,
-  0xbb, 0x5d, 0xcb, 0xb0, 0x70, 0x89, 0x87, 0xbb, 0x33, 0xa4, 0x54, 0x7d,
-  0x88, 0xcf, 0xcc, 0xa1, 0x0d, 0xc6, 0x3e, 0x15, 0x86, 0xbe, 0x16, 0x65,
-  0xf2, 0x90, 0xf4, 0x8f, 0xa1, 0x82, 0xe4, 0x07, 0x65, 0x5a, 0x9c, 0x75,
-  0x4e, 0x18, 0xba, 0x02, 0xc3, 0xb9, 0xc6, 0xc3, 0x6c, 0x42, 0x6b, 0x7a,
-  0xf3, 0x8f, 0xbb, 0x5b, 0xdd, 0xcd, 0x5f, 0xfe, 0xd2, 0xe6, 0xbb, 0xc7,
-  0x6e, 0x02, 0xbf, 0x4f, 0x56, 0xd9, 0xfc, 0xe3, 0xde, 0xd6, 0xa3, 0x33,
-  0x0a, 0xd3, 0xed, 0x7c, 0x9f, 0xf4, 0x06, 0x0f, 0x36, 0x7a, 0x69, 0x25,
-  0x61, 0xf5, 0x22, 0x76, 0x01, 0x1f, 0x57, 0x1e, 0xf0, 0xae, 0x86, 0xff,
-  0xc0, 0x01, 0xc1, 0x4e, 0xfc, 0xf3, 0x7e, 0x1c, 0xcd, 0x5b, 0x38, 0xf9,
-  0x5f, 0xc7, 0x21, 0x50, 0x20, 0x69, 0xe3, 0x21, 0xcf, 0xe3, 0xc4, 0xf3,
-  0x32, 0x1f, 0xa1, 0xef, 0xbd, 0x47, 0xfa, 0xf6, 0xb3, 0x0b, 0x74, 0x5d,
-  0x76, 0x8a, 0x72, 0x54, 0x95, 0xa1, 0xc3, 0x6a, 0x3f, 0x1b, 0xbe, 0xfa,
-  0xe4, 0xfa, 0xfe, 0x2e, 0x4f, 0x5e, 0x1f, 0x33, 0x8a, 0xec, 0xd1, 0x09,
-  0x23, 0x99, 0x8d, 0x15, 0x4c, 0xd0, 0xd4, 0x5a, 0x07, 0xb5, 0x1a, 0x42,
-  0xdd, 0x8b, 0xb7, 0xd0, 0x05, 0x2f, 0xb9, 0xf3, 0xef, 0x76, 0x82, 0xbb,
-  0xd6, 0xe8, 0xda, 0xd2, 0x72, 0xf8, 0x4e, 0xae, 0x86, 0xaf, 0xf3, 0x19,
-  0x54, 0xaf, 0xa1, 0x80, 0x53, 0xd3, 0x5b, 0xf4, 0xe1, 0xdb, 0x6c, 0x51,
-  0xfb, 0x38, 0xcc, 0x14, 0x54, 0xad, 0x7a, 0x63, 0x5d, 0x39, 0x80, 0xbf,
-  0x6f, 0x0f, 0x87, 0x28, 0xfd, 0x2a, 0x41, 0x42, 0xea, 0x2a, 0xa8, 0xa1,
-  0x3d, 0xd8, 0xd9, 0xa7, 0xf5, 0x49, 0xe7, 0x0f, 0xe2, 0xd6, 0x8e, 0x7d,
-  0x30, 0x92, 0x4f, 0x0b, 0xbc, 0xe6, 0xd4, 0x24, 0x6f, 0x31, 0x12, 0x9b,
-  0xd0, 0x46, 0x88, 0x4e, 0x09, 0xe1, 0x3c, 0xb9, 0xf7, 0xd1, 0x34, 0x5a,
-  0x67, 0x2f, 0x5f, 0x3e, 0x60, 0x92, 0xf7, 0x35, 0x47, 0x7d, 0xa7, 0xb7,
-  0xee, 0xef, 0xf2, 0x4e, 0xad, 0x00, 0x86, 0xf4, 0x10, 0x12, 0xa0, 0x7e,
-  0xa2, 0xf5, 0x22, 0xce, 0x8a, 0x80, 0x81, 0xe9, 0xb0, 0xad, 0xfe, 0x4b,
-  0x80, 0x5c, 0x19, 0x00, 0x6d, 0xd6, 0xc7, 0xe9, 0x4d, 0x98, 0x1b, 0x7c,
-  0xb7, 0x8d, 0xd8, 0x72, 0x6e, 0xae, 0x16, 0xe2, 0x3a, 0xcb, 0x7a, 0x25,
-  0xbb, 0x24, 0xb2, 0xcc, 0x61, 0xc9, 0x0e, 0xef, 0x0f, 0xfb, 0xc0, 0xd7,
-  0x4e, 0xb3, 0x8e, 0xc9, 0x0c, 0x7f, 0xf9, 0x6c, 0x5a, 0x8e, 0xbc, 0xa8,
-  0x77, 0xc5, 0x10, 0x0b, 0xec, 0x15, 0xe9, 0xc9, 0x00, 0x04, 0x75, 0x44,
-  0x68, 0x8b, 0x84, 0x7a, 0x66, 0x6b, 0xa6, 0x9c, 0x88, 0xa2, 0xe6, 0xe2,
-  0x2c, 0x9d, 0xc9, 0x55, 0x2c, 0x5d, 0xcc, 0x47, 0x57, 0xcb, 0x19, 0x5c,
-  0xfc, 0x12, 0xdc, 0xf8, 0x3f, 0xe2, 0x6c, 0x15, 0x17, 0x0f, 0xd1, 0xee,
-  0xde, 0x20, 0xda, 0xdb, 0xd9, 0xdd, 0xeb, 0x98, 0x43, 0xef, 0x7f, 0x70,
-  0x88, 0xcd, 0x1e, 0xbe, 0xee, 0x7d, 0xec, 0x2c, 0x7c, 0xa0, 0x3c, 0x6e,
-  0x56, 0x4d, 0x29, 0x25, 0xde, 0xc3, 0xde, 0x3e, 0x29, 0x76, 0xcb, 0xe5,
-  0xed, 0x00, 0x8d, 0x06, 0xc1, 0x42, 0x0c, 0x4f, 0x56, 0x86, 0xca, 0x15,
-  0x2d, 0xe1, 0x27, 0x36, 0xb4, 0xc2, 0x18, 0xe2, 0x28, 0x9c, 0xf5, 0x2d,
-  0x2e, 0x50, 0x63, 0xab, 0xbe, 0x47, 0x69, 0x65, 0xdb, 0xc2, 0x81, 0x1a,
-  0xbc, 0x37, 0x44, 0xef, 0x47, 0x27, 0x87, 0x97, 0x86, 0x9d, 0x77, 0xc5,
-  0xd7, 0x69, 0xf1, 0xf0, 0x71, 0xe5, 0x8a, 0x1e, 0x7d, 0x66, 0xb6, 0x7f,
-  0x93, 0x90, 0x58, 0x96, 0x4d, 0x56, 0xd7, 0xfb, 0x7f, 0x8d, 0x8b, 0xeb,
-  0x3c, 0xfb, 0xd0, 0xf3, 0x33, 0x64, 0x2a, 0xed, 0x13, 0x83, 0xda, 0x7d,
-  0xbe, 0xfb, 0x44, 0xc2, 0xe0, 0x53, 0xae, 0x6e, 0x06, 0xfe, 0xd0, 0x5f,
-  0xf4, 0x05, 0xba, 0x01, 0xf1, 0xf7, 0x0e, 0xaf, 0x21, 0x9b, 0xf5, 0x45,
-  0xe7, 0x8a, 0xc3, 0x67, 0x67, 0xfa, 0xac, 0xa4, 0x34, 0xf7, 0x81, 0x18,
-  0x42, 0x8f, 0x73, 0xfe, 0xdf, 0x6a, 0xd9, 0x1f, 0xd5, 0x4e, 0xf8, 0x07,
-  0xe6, 0xca, 0x5d, 0xb8, 0xea, 0x4c, 0x87, 0xc2, 0x93, 0x95, 0x9d, 0x4e,
-  0x8a, 0x24, 0xbe, 0xf5, 0xf5, 0xee, 0x3c, 0xae, 0x83, 0x19, 0xd0, 0x2f,
-  0x5e, 0x1d, 0x0a, 0x1c, 0xa6, 0x25, 0xe2, 0x60, 0xa9, 0x23, 0x67, 0xee,
-  0xd8, 0xe2, 0x51, 0x7e, 0xa0, 0x7f, 0x8e, 0x94, 0xdf, 0x9f, 0x4d, 0x3e,
-  0xe2, 0x21, 0x3a, 0x77, 0x02, 0x3c, 0x76, 0x50, 0x2f, 0x6e, 0xc0, 0x82,
-  0x7f, 0xc5, 0xa4, 0x66, 0xc5, 0xed, 0x36, 0xa5, 0x58, 0x9b, 0x18, 0xb0,
-  0x79, 0x68, 0xae, 0xfe, 0xae, 0x5a, 0x0c, 0x68, 0xdc, 0x5c, 0x08, 0xed,
-  0xe8, 0xe0, 0x3c, 0x50, 0x9e, 0xa0, 0x9c, 0x78, 0x43, 0x11, 0x3f, 0xc7,
-  0x82, 0x33, 0x6a, 0x67, 0x8a, 0x3d, 0xe9, 0x61, 0xe0, 0x45, 0xde, 0x0a,
-  0x7c, 0x72, 0x76, 0x17, 0x4b, 0xb8, 0x75, 0xae, 0xd7, 0x09, 0x6c, 0x1a,
-  0x40, 0xf7, 0x9e, 0xcf, 0x62, 0xb8, 0xd5, 0xf4, 0x12, 0x82, 0x3c, 0x8e,
-  0xb6, 0x52, 0x8d, 0xad, 0xa1, 0xbd, 0x79, 0x1f, 0x69, 0x4a, 0x80, 0xe6,
-  0x3e, 0xc8, 0xef, 0xf2, 0x18, 0xa7, 0xbb, 0x3e, 0xd8, 0x04, 0x84, 0x3f,
-  0xd3, 0xe0, 0xe3, 0xf2, 0x96, 0x58, 0xa9, 0xb8, 0x83, 0xa9, 0xf7, 0x74,
-  0x9a, 0x98, 0x61, 0x75, 0x96, 0x4a, 0x58, 0x06, 0x9b, 0x34, 0x80, 0xaa,
-  0x53, 0xdb, 0x30, 0xb9, 0x81, 0x58, 0x83, 0x99, 0x97, 0x89, 0x20, 0xe0,
-  0x45, 0x97, 0xf7, 0xb9, 0x48, 0x9d, 0x0e, 0x75, 0x40, 0x02, 0x1b, 0xcb,
-  0x55, 0x2a, 0x20, 0x1a, 0xb4, 0x79, 0xe0, 0x07, 0x41, 0xa5, 0xb5, 0x9e,
-  0xb3, 0xa6, 0x1c, 0x39, 0x2f, 0xda, 0xf8, 0xe8, 0xdb, 0x88, 0x13, 0xb5,
-  0xb9, 0x8f, 0x43, 0xae, 0x50, 0xc0, 0x0e, 0xf1, 0x05, 0xb4, 0x89, 0xaf,
-  0x57, 0x7c, 0xde, 0x0f, 0x6f, 0xe2, 0x25, 0x0b, 0xc5, 0xbb, 0x3b, 0xac,
-  0x82, 0x7f, 0x6f, 0x29, 0x5f, 0x7c, 0x50, 0xad, 0x32, 0x69, 0xd9, 0x0b,
-  0xb4, 0xf3, 0x19, 0x17, 0x16, 0x65, 0xa1, 0xb8, 0x6e, 0xf8, 0xa3, 0xdb,
-  0xb3, 0xdc, 0x5e, 0x30, 0xc3, 0x9a, 0x97, 0x44, 0x1a, 0x45, 0x39, 0xbb,
-  0xdd, 0x9e, 0xd2, 0x3f, 0x4f, 0x76, 0xb6, 0x01, 0xca, 0x58, 0xc1, 0x4e,
-  0xc6, 0x34, 0xb9, 0xb7, 0xf7, 0xec, 0xd9, 0x20, 0xea, 0xb1, 0xe5, 0xca,
-  0x3a, 0xe0, 0x23, 0x41, 0x27, 0xab, 0xd7, 0x55, 0x72, 0x6e, 0xbb, 0xb8,
-  0x9a, 0xf2, 0xff, 0xf8, 0x35, 0xab, 0x1c, 0x75, 0xa9, 0x39, 0x1c, 0x58,
-  0x87, 0x2c, 0x44, 0x5d, 0x31, 0xb2, 0xba, 0xa7, 0x7d, 0x30, 0xdb, 0x04,
-  0xbb, 0x21, 0x96, 0x49, 0xbe, 0x34, 0x5f, 0xe3, 0x42, 0xe1, 0xf2, 0xd1,
-  0x7d, 0xe0, 0xa1, 0x81, 0x77, 0x58, 0x82, 0xab, 0x34, 0xbb, 0xbe, 0x5c,
-  0x4d, 0x86, 0x9a, 0x66, 0x2a, 0xba, 0x46, 0x4a, 0x27, 0x97, 0xfe, 0x9c,
-  0x9b, 0x09, 0xb8, 0xc5, 0x91, 0xbf, 0x8a, 0x7a, 0x4a, 0x5b, 0xfc, 0x63,
-  0x04, 0x57, 0x61, 0x32, 0xe5, 0x69, 0xe4, 0x2f, 0xf5, 0x8f, 0x7f, 0xfb,
-  0x37, 0x6a, 0xf6, 0xdf, 0xb8, 0x95, 0x97, 0x7f, 0x2c, 0xab, 0x9b, 0xe0,
-  0x99, 0x9e, 0x12, 0xfc, 0x89, 0x77, 0x94, 0x22, 0xf8, 0x09, 0x90, 0xa5,
-  0xc8, 0x86, 0x7a, 0x7d, 0xaa, 0x1c, 0x79, 0x10, 0xcc, 0x2f, 0x45, 0x9e,
-  0x9a, 0x18, 0xde, 0x5c, 0xec, 0xc1, 0x57, 0xec, 0xc4, 0x4c, 0x38, 0xbf,
-  0x99, 0xa8, 0x10, 0x98, 0x74, 0x5b, 0x26, 0x62, 0x1c, 0xbf, 0xf9, 0xee,
-  0xe4, 0xe2, 0xec, 0xcd, 0xeb, 0xe3, 0x37, 0x97, 0xd1, 0x77, 0x07, 0x17,
-  0x27, 0x07, 0x5f, 0x9d, 0x6a, 0x1a, 0x35, 0x4f, 0x81, 0x43, 0x46, 0x44,
-  0xf4, 0x6e, 0x20, 0x8a, 0x06, 0x69, 0x2d, 0x9d, 0x50, 0xfa, 0x8d, 0xca,
-  0x81, 0xef, 0x14, 0xa3, 0x1a, 0x36, 0xd6, 0x77, 0x28, 0x67, 0x31, 0x60,
-  0xaf, 0xdf, 0x3b, 0xab, 0x6c, 0xc1, 0xb6, 0xcb, 0x87, 0x20, 0x31, 0x97,
-  0xa3, 0x59, 0x98, 0x4a, 0x8d, 0x3f, 0xf9, 0x2a, 0x44, 0x0a, 0xf6, 0x3f,
-  0x8a, 0xbe, 0x96, 0xdc, 0x6e, 0x8d, 0xab, 0x72, 0xaf, 0x6a, 0x9e, 0x91,
-  0xda, 0x72, 0xe4, 0x3f, 0xf7, 0xcb, 0xc1, 0xe9, 0xa9, 0xef, 0xf2, 0xf1,
-  0xda, 0x0c, 0x0a, 0xf0, 0x23, 0x29, 0x41, 0x37, 0x56, 0x64, 0xf8, 0x3a,
-  0xf7, 0xc0, 0xdb, 0xd9, 0x43, 0x88, 0xb1, 0xcd, 0x9d, 0xd2, 0xb6, 0x6c,
-  0x0a, 0x30, 0x03, 0xfb, 0x1e, 0xe9, 0x20, 0xa5, 0xe5, 0xed, 0x20, 0xea,
-  0xff, 0xb1, 0x2f, 0xa9, 0x5a, 0x09, 0x00, 0x68, 0xa5, 0xf2, 0xc3, 0x96,
-  0x5f, 0xa0, 0x37, 0x67, 0x7e, 0x4c, 0xea, 0x51, 0x73, 0x03, 0x70, 0x2f,
-  0x7a, 0x67, 0x68, 0x69, 0x72, 0x0d, 0xa2, 0x10, 0xfd, 0xe3, 0x8a, 0xf3,
-  0xef, 0xf2, 0xcd, 0x95, 0x56, 0xd9, 0x69, 0xd2, 0xf9, 0x2e, 0x94, 0xb7,
-  0x78, 0x1a, 0x00, 0x0d, 0x8b, 0x4d, 0x87, 0xd5, 0x60, 0xc8, 0x03, 0xae,
-  0xd8, 0xb7, 0x2c, 0x39, 0xdb, 0x8b, 0xd4, 0x55, 0xb5, 0x2a, 0x95, 0x93,
-  0x82, 0xba, 0xde, 0x6f, 0x5b, 0x05, 0x08, 0xf8, 0xaf, 0x38, 0xca, 0xbc,
-  0x48, 0x67, 0x8a, 0x5c, 0xd7, 0x49, 0x1d, 0x23, 0xb8, 0x3d, 0x2e, 0x0e,
-  0x81, 0xf3, 0x9d, 0x71, 0x59, 0x28, 0x57, 0x1e, 0x41, 0x22, 0x52, 0x89,
-  0x9b, 0x14, 0x9c, 0xe6, 0x95, 0xa9, 0x30, 0x82, 0x28, 0x4f, 0x88, 0xea,
-  0xf1, 0x75, 0x6e, 0x62, 0x78, 0xec, 0x7c, 0xb1, 0x92, 0xbe, 0x25, 0x01,
-  0x3c, 0x26, 0x8d, 0x39, 0x68, 0x2a, 0x67, 0x0e, 0x83, 0xd7, 0xd6, 0x8c,
-  0xcf, 0x1c, 0xb4, 0x04, 0xe3, 0x99, 0x06, 0x35, 0x94, 0x41, 0xee, 0xaf,
-  0x8f, 0x89, 0x67, 0x9e, 0x22, 0xfe, 0x4a, 0xc3, 0x8a, 0x02, 0x22, 0x97,
-  0xe5, 0x0a, 0x23, 0x7c, 0x0e, 0xc3, 0xe2, 0x07, 0xd1, 0xa4, 0x46, 0x42,
-  0xa2, 0x49, 0xb3, 0x8b, 0xd2, 0x29, 0x9a, 0x73, 0x5a, 0x92, 0x71, 0xa4,
-  0x38, 0x9a, 0xa4, 0xd7, 0x91, 0x99, 0x44, 0x22, 0xa6, 0x12, 0xe0, 0x86,
-  0xe5, 0x8b, 0x84, 0xb7, 0x0a, 0xa8, 0x60, 0x90, 0xe1, 0x6f, 0xb8, 0x68,
-  0xbc, 0x87, 0xb1, 0xb2, 0x99, 0x94, 0x1c, 0xb6, 0x1f, 0x98, 0xd4, 0x60,
-  0x56, 0x5f, 0xf1, 0x3a, 0x5a, 0x8c, 0x93, 0x42, 0x5e, 0x6b, 0xc4, 0x17,
-  0xdb, 0x6b, 0x01, 0xc0, 0x97, 0x21, 0xbf, 0xc4, 0x72, 0x75, 0xb1, 0x0e,
-  0x16, 0x0d, 0xcb, 0x5c, 0x03, 0x56, 0x16, 0xae, 0x41, 0xb5, 0xe9, 0x30,
-  0xab, 0xb9, 0x95, 0xa9, 0x80, 0x7e, 0x32, 0xd1, 0x4b, 0xb0, 0x7a, 0xad,
-  0xc6, 0x84, 0x6d, 0x96, 0x82, 0x33, 0x5d, 0x49, 0xa5, 0x7b, 0x1a, 0xdf,
-  0x66, 0xc0, 0x80, 0x32, 0x22, 0x11, 0x79, 0x4c, 0xf4, 0x48, 0xfd, 0x6b,
-  0x28, 0xae, 0xcc, 0xd8, 0xca, 0x71, 0x95, 0x5b, 0xde, 0x9d, 0x2d, 0xd2,
-  0x00, 0x53, 0xeb, 0x54, 0xcb, 0x5c, 0x61, 0xbc, 0xb4, 0x5f, 0x66, 0x95,
-  0x0a, 0x8d, 0x5a, 0x91, 0xa5, 0x71, 0xcc, 0xe7, 0x01, 0x68, 0xb5, 0x98,
-  0x25, 0xe2, 0x96, 0x10, 0xe2, 0x2a, 0xd6, 0x1f, 0x68, 0x40, 0x89, 0x00,
-  0xdc, 0x06, 0x33, 0xd1, 0x50, 0x65, 0x16, 0xd3, 0x1a, 0xb6, 0xb2, 0x80,
-  0xb3, 0x99, 0xeb, 0x35, 0xbc, 0xa1, 0xb4, 0x5a, 0x42, 0x1a, 0x2f, 0x44,
-  0x88, 0xf4, 0xe4, 0xb7, 0x78, 0x90, 0x60, 0xb6, 0x8d, 0x8d, 0xc3, 0xb7,
-  0xe3, 0xcb, 0xb3, 0xd7, 0xd1, 0xd9, 0xdb, 0xcb, 0xf3, 0xb7, 0x97, 0x7a,
-  0x85, 0x4d, 0x24, 0x14, 0x58, 0x74, 0x45, 0x91, 0x06, 0x6c, 0x37, 0x17,
-  0xea, 0x4f, 0x46, 0xe4, 0x42, 0x0e, 0xb0, 0xba, 0x00, 0xb2, 0xc6, 0xa5,
-  0xfa, 0x00, 0xc8, 0x49, 0x30, 0x70, 0xb1, 0xe6, 0xf7, 0xb4, 0xe6, 0x48,
-  0xd3, 0x84, 0x8d, 0xc7, 0x32, 0x87, 0xa0, 0xff, 0x74, 0xd7, 0x22, 0x69,
-  0x54, 0x37, 0x83, 0xe7, 0xb7, 0x8e, 0x10, 0xe4, 0xc3, 0x73, 0xcc, 0xc6,
-  0xe3, 0x4d, 0x40, 0x61, 0xa4, 0x20, 0x62, 0x64, 0xa6, 0x95, 0x59, 0x36,
-  0x2d, 0x58, 0x13, 0x11, 0x2c, 0xf5, 0x7c, 0xb5, 0x30, 0x6d, 0xae, 0xca,
-  0x69, 0x86, 0x37, 0x2e, 0xd0, 0x9a, 0x83, 0x53, 0x10, 0x60, 0x26, 0xde,
-  0x79, 0x8e, 0xe4, 0xb2, 0x9a, 0xf3, 0xf7, 0x6c, 0x0f, 0x6f, 0x5d, 0xb7,
-  0xf7, 0x51, 0xff, 0xfb, 0x24, 0x6c, 0xf0, 0xf7, 0xff, 0xe0, 0x6c, 0xc0,
-  0x77, 0xf6, 0xc9, 0x3f, 0xa5, 0xcb, 0xbf, 0x64, 0x7d, 0xc4, 0x65, 0xd5,
-  0xdd, 0xb0, 0xdf, 0x1e, 0x5f, 0x7c, 0x75, 0x7c, 0x71, 0x36, 0x46, 0x2c,
-  0x8a, 0x99, 0xbd, 0xda, 0xc4, 0x7e, 0x9b, 0x14, 0x93, 0xa4, 0xc8, 0xb5,
-  0xbc, 0x8c, 0xfd, 0xf5, 0x6c, 0xfb, 0xeb, 0xf1, 0xf8, 0xe0, 0xfc, 0xc4,
-  0x55, 0x22, 0x71, 0x79, 0x49, 0xa2, 0x2b, 0x65, 0x92, 0x39, 0xc7, 0xf3,
-  0xb7, 0x57, 0x88, 0x2e, 0xa6, 0xb7, 0x12, 0xaf, 0xda, 0x72, 0x78, 0x9a,
-  0xc1, 0x96, 0x3d, 0x9d, 0x9a, 0xae, 0xc6, 0x0d, 0x1b, 0xd4, 0x90, 0x64,
-  0x6d, 0x0b, 0x01, 0xbf, 0x62, 0xfb, 0xf2, 0xc0, 0xc5, 0x74, 0xdd, 0x16,
-  0x93, 0x21, 0x11, 0xfa, 0xad, 0x55, 0x8d, 0x94, 0xc8, 0x7a, 0x62, 0x93,
-  0x12, 0x72, 0xeb, 0xed, 0x0d, 0xb7, 0x5c, 0x28, 0x76, 0xfb, 0x96, 0x8f,
-  0x06, 0x97, 0xca, 0x98, 0x8f, 0x84, 0xb3, 0xcb, 0x59, 0xb2, 0x38, 0x4a,
-  0x66, 0xaf, 0x8f, 0x21, 0x1f, 0x50, 0x6f, 0xae, 0x8a, 0x95, 0x98, 0xbc,
-  0xe8, 0x93, 0xa7, 0x0e, 0x01, 0x2a, 0xac, 0x21, 0x7a, 0x45, 0x42, 0xf8,
-  0xf2, 0x7e, 0xa6, 0x17, 0x08, 0x40, 0x8f, 0x33, 0x31, 0x79, 0x0b, 0xff,
-  0x6e, 0x3a, 0x3e, 0xb8, 0xec, 0x16, 0x52, 0x00, 0x34, 0xc0, 0x39, 0x9a,
-  0xcc, 0xe3, 0xec, 0x16, 0x37, 0x19, 0xee, 0x26, 0x56, 0x3b, 0x0d, 0xd8,
-  0x88, 0x8b, 0x94, 0xc1, 0xcf, 0xa5, 0x58, 0x03, 0x10, 0x04, 0xad, 0x1e,
-  0x3a, 0xdb, 0x78, 0x1d, 0x7e, 0x53, 0xe0, 0xd1, 0xc1, 0x49, 0xf2, 0x8b,
-  0xc0, 0xd6, 0xa3, 0xe3, 0x53, 0xba, 0x94, 0x5c, 0xda, 0x02, 0xd4, 0xf4,
-  0x64, 0xce, 0x28, 0x3c, 0x16, 0x69, 0x22, 0x99, 0x7a, 0x29, 0x98, 0x98,
-  0x30, 0x0e, 0xc3, 0xe3, 0x86, 0x4f, 0x02, 0x94, 0x82, 0x84, 0xc4, 0xd2,
-  0x95, 0xad, 0x50, 0xae, 0x2d, 0x0c, 0x0c, 0x70, 0x93, 0xbe, 0x8a, 0x45,
-  0x58, 0xd8, 0x44, 0x03, 0xb8, 0x0e, 0x7d, 0x9c, 0x49, 0x6c, 0xdf, 0xc9,
-  0x20, 0xbc, 0x68, 0xea, 0x3c, 0x57, 0xb5, 0x7c, 0x89, 0xb5, 0xdb, 0x24,
-  0xaf, 0x77, 0x19, 0x02, 0xc0, 0x00, 0xa9, 0x01, 0xb1, 0x83, 0x3b, 0xac,
-  0x19, 0x0b, 0x82, 0xad, 0x07, 0x9e, 0xda, 0xc0, 0x47, 0x56, 0x70, 0x1d,
-  0xb1, 0x50, 0xe2, 0x8c, 0x42, 0xd0, 0xa4, 0xde, 0xbe, 0xd5, 0x0c, 0xdc,
-  0xa6, 0xa8, 0x61, 0x9f, 0x86, 0xf1, 0x9e, 0x02, 0x87, 0x00, 0xf3, 0xa0,
-  0x64, 0x00, 0x40, 0x93, 0x71, 0x32, 0xee, 0xf0, 0x0d, 0x5f, 0x15, 0xf9,
-  0x70, 0xb2, 0x82, 0x6e, 0xe6, 0x81, 0xbb, 0x34, 0x2b, 0x90, 0xeb, 0x04,
-  0x03, 0xa9, 0x0b, 0xdf, 0xb3, 0x8f, 0x03, 0xf9, 0xd6, 0xe2, 0xf6, 0x40,
-  0x02, 0x5e, 0x1d, 0xc5, 0xc5, 0x61, 0x77, 0x48, 0x54, 0x3b, 0xa2, 0x7b,
-  0x35, 0x84, 0x59, 0x47, 0xa8, 0x9b, 0xec, 0xe2, 0xcf, 0x32, 0xad, 0xa5,
-  0x07, 0x7b, 0x7b, 0x3d, 0x86, 0xb7, 0x72, 0xf8, 0xe9, 0x97, 0x10, 0x11,
-  0x12, 0x45, 0x15, 0xb7, 0xe0, 0x5c, 0x4b, 0x05, 0xb8, 0xab, 0xb8, 0x6a,
-  0x90, 0xc0, 0x0e, 0xc4, 0x73, 0xa9, 0xfb, 0xb0, 0xf6, 0x16, 0x91, 0xc3,
-  0x54, 0x5d, 0x5e, 0xfe, 0x78, 0x7e, 0xfc, 0xd2, 0xde, 0x7c, 0x6c, 0xcf,
-  0x04, 0x8d, 0x0b, 0xb1, 0x18, 0x89, 0xc2, 0x5f, 0x06, 0x95, 0x39, 0x89,
-  0xc8, 0x86, 0x95, 0xf9, 0x88, 0xa5, 0x9b, 0x61, 0xf4, 0xc3, 0xd1, 0xc9,
-  0xf8, 0xfc, 0xf4, 0xec, 0xf0, 0xe5, 0x8b, 0x1f, 0x8c, 0x1b, 0x7f, 0xc1,
-  0xf0, 0x33, 0x22, 0xa3, 0xb9, 0xcf, 0x3c, 0x5a, 0x80, 0xbe, 0xf7, 0xe6,
-  0xf8, 0xfb, 0x77, 0xa4, 0x21, 0xbc, 0x64, 0x98, 0xf0, 0xc1, 0x5d, 0x3c,
-  0xd7, 0x97, 0x58, 0xcd, 0xea, 0x90, 0xeb, 0x82, 0xdc, 0x8e, 0xae, 0x85,
-  0x65, 0x79, 0x22, 0xc0, 0x6c, 0x7d, 0x80, 0x04, 0xad, 0xe1, 0x59, 0x41,
-  0x8d, 0xa1, 0xb8, 0x96, 0xa8, 0xd9, 0x51, 0xb2, 0x31, 0x77, 0x37, 0x7f,
-  0xbf, 0x92, 0x30, 0x3d, 0x76, 0x4d, 0x87, 0x1e, 0x5f, 0x44, 0x42, 0xea,
-  0x37, 0x3e, 0x42, 0x54, 0x01, 0x79, 0x0b, 0x0e, 0x8c, 0x70, 0xc0, 0x86,
-  0x5a, 0x37, 0x13, 0xbe, 0x54, 0x45, 0x3f, 0x54, 0x58, 0x1f, 0x0e, 0xca,
-  0xb4, 0xf8, 0x6c, 0x57, 0x98, 0x59, 0xc4, 0x17, 0x37, 0x96, 0x78, 0x3a,
-  0xa5, 0x1f, 0x8c, 0x3a, 0xc9, 0x15, 0x5e, 0xce, 0xb9, 0x50, 0xfb, 0xf8,
-  0x92, 0x55, 0x29, 0xad, 0x65, 0xa6, 0x66, 0x68, 0x2b, 0x34, 0x07, 0x14,
-  0x80, 0x3a, 0x9a, 0x65, 0x58, 0x7c, 0xa2, 0x76, 0xa2, 0x1d, 0x9b, 0xab,
-  0xa7, 0x05, 0xb2, 0x35, 0x41, 0x72, 0x0d, 0x59, 0x08, 0x15, 0x4c, 0xd6,
-  0xf8, 0xca, 0x0e, 0x70, 0xae, 0xa4, 0xd1, 0xa8, 0xc1, 0x80, 0x02, 0x2a,
-  0xd8, 0x9d, 0x79, 0x3a, 0xf1, 0x86, 0xf3, 0x86, 0x5b, 0x92, 0xbd, 0xde,
-  0x0a, 0xff, 0x10, 0x1e, 0x21, 0x33, 0x89, 0xfb, 0x5c, 0xdb, 0x32, 0xb7,
-  0xa2, 0x8a, 0x42, 0xfc, 0x30, 0x59, 0x87, 0x19, 0x91, 0x4e, 0x59, 0x85,
-  0x62, 0x62, 0x22, 0x9a, 0xfb, 0x34, 0x88, 0x6b, 0x54, 0x44, 0x21, 0xa0,
-  0xa1, 0x2a, 0xcb, 0x46, 0x09, 0x73, 0xc9, 0x6d, 0x62, 0x63, 0x0b, 0x09,
-  0x2c, 0xc8, 0xd5, 0x46, 0xfc, 0x89, 0xce, 0xac, 0x25, 0x7d, 0xa8, 0xd8,
-  0x78, 0xcd, 0x49, 0x51, 0x80, 0x6d, 0x9a, 0xb1, 0xa8, 0x05, 0x2b, 0x5c,
-  0xd8, 0x99, 0xdd, 0xa4, 0xbc, 0x82, 0x93, 0x55, 0x58, 0xe5, 0xcb, 0x8d,
-  0x5e, 0x8a, 0x5c, 0x60, 0xe1, 0x11, 0x79, 0x17, 0x17, 0x80, 0x45, 0xac,
-  0x14, 0x7b, 0xdc, 0x94, 0x1e, 0x0d, 0xa3, 0x1b, 0xd5, 0x11, 0x62, 0x8c,
-  0x2e, 0xad, 0x80, 0xdf, 0x63, 0x2b, 0xea, 0x56, 0x53, 0xc8, 0xb7, 0x48,
-  0x2c, 0x1e, 0x46, 0x4c, 0x0d, 0x25, 0xfb, 0x1c, 0xb2, 0xa9, 0xbb, 0x8c,
-  0x39, 0x8d, 0x85, 0xe3, 0x42, 0x0a, 0x45, 0xdf, 0x59, 0x71, 0xbd, 0x74,
-  0xad, 0x2b, 0x8a, 0xaa, 0x98, 0xec, 0x78, 0x33, 0x64, 0x36, 0x1f, 0x18,
-  0x2c, 0xcb, 0x1d, 0x90, 0x95, 0x98, 0xd8, 0x1f, 0xb4, 0x43, 0x97, 0x72,
-  0x6d, 0x9b, 0x35, 0x90, 0x0c, 0x9e, 0x18, 0x09, 0x23, 0x66, 0xdb, 0x0d,
-  0x12, 0x0f, 0x4b, 0x4d, 0xe7, 0x74, 0x4e, 0x4b, 0x61, 0x78, 0x28, 0x62,
-  0xe4, 0x13, 0xa0, 0x6a, 0xce, 0x41, 0x92, 0x2c, 0x97, 0xa8, 0xc8, 0x33,
-  0x55, 0x4c, 0x72, 0x44, 0x82, 0xba, 0xf6, 0xec, 0x0e, 0xf1, 0x6b, 0x45,
-  0x8b, 0xfa, 0xfa, 0xed, 0xe9, 0xe5, 0xc9, 0x79, 0xe8, 0x80, 0x8c, 0xbe,
-  0x3f, 0xb9, 0xfc, 0x86, 0xe4, 0x75, 0xae, 0xf8, 0x7c, 0xca, 0x5e, 0x9e,
-  0xd7, 0xaf, 0x0f, 0xde, 0x70, 0xba, 0xfa, 0x1b, 0x04, 0xcc, 0x1d, 0x40,
-  0x67, 0x60, 0x6e, 0x44, 0x2b, 0xcc, 0xa4, 0xc3, 0x89, 0xcc, 0x83, 0xb6,
-  0xb7, 0xa1, 0x71, 0xfa, 0xc0, 0x70, 0xf8, 0x08, 0x85, 0x6b, 0xc4, 0x1b,
-  0xae, 0x3a, 0xc1, 0x03, 0xdb, 0x76, 0x70, 0x6a, 0x59, 0xcf, 0xe2, 0x75,
-  0x6e, 0x82, 0x91, 0x23, 0x69, 0x4e, 0x64, 0x73, 0xf8, 0x56, 0xe5, 0xea,
-  0xf6, 0x1e, 0x0c, 0x6c, 0xa8, 0x43, 0x34, 0x45, 0x00, 0x2b, 0x89, 0x4c,
-  0x99, 0xaa, 0x34, 0x72, 0x5d, 0xd6, 0x83, 0xd8, 0xa9, 0x47, 0x0c, 0x09,
-  0xde, 0xe5, 0xdc, 0x1b, 0x05, 0x59, 0xd9, 0x64, 0x7d, 0xf9, 0xe2, 0x34,
-  0xbc, 0x4f, 0xeb, 0x55, 0x85, 0x2d, 0xea, 0xec, 0x3a, 0x4f, 0xfc, 0xc1,
-  0x1d, 0x9e, 0x59, 0x33, 0x66, 0x01, 0x86, 0x06, 0x26, 0x77, 0xcb, 0x90,
-  0xd9, 0xda, 0x90, 0xb6, 0x64, 0xcb, 0x55, 0xad, 0x51, 0x0b, 0xda, 0xbe,
-  0x48, 0x95, 0xb5, 0xda, 0xde, 0x80, 0x91, 0x3d, 0x73, 0x2d, 0x6b, 0x74,
-  0x03, 0x82, 0x7c, 0x35, 0x4f, 0x46, 0xe7, 0x0c, 0x66, 0x69, 0x8f, 0xd5,
-  0xd2, 0x7c, 0x1b, 0x05, 0xc6, 0x2d, 0x4f, 0x0a, 0xd9, 0x91, 0x8c, 0xe7,
-  0xe2, 0x7d, 0xa7, 0xa8, 0xd4, 0x95, 0xe7, 0xa3, 0xe4, 0x7d, 0xc2, 0x6e,
-  0x4e, 0xfe, 0xf5, 0xaf, 0xcb, 0xeb, 0x30, 0x85, 0x0a, 0x73, 0xd5, 0x5c,
-  0xe1, 0x6e, 0x94, 0x60, 0x91, 0x8a, 0xb4, 0x5e, 0x59, 0x6d, 0x04, 0x5a,
-  0x84, 0x6c, 0x77, 0x5d, 0x87, 0xfa, 0xfd, 0x5e, 0xfb, 0xfb, 0x3d, 0xb1,
-  0x3c, 0x72, 0x5d, 0x7a, 0x07, 0xae, 0x29, 0x89, 0xc1, 0xa1, 0xf4, 0x66,
-  0x32, 0x01, 0x53, 0x98, 0x94, 0xb0, 0x87, 0x7b, 0x45, 0x58, 0xa2, 0x98,
-  0xff, 0x39, 0x30, 0x69, 0x55, 0x20, 0xe1, 0x11, 0x8f, 0xc0, 0x52, 0x2c,
-  0xd1, 0xa4, 0x88, 0xdd, 0x02, 0x9b, 0xe2, 0xdb, 0x8a, 0x1a, 0xa4, 0xef,
-  0x9f, 0xba, 0xe8, 0x6e, 0xcf, 0xd2, 0x50, 0xf3, 0x4b, 0xd3, 0x6b, 0x86,
-  0xe9, 0xf2, 0xce, 0xca, 0x5e, 0xd2, 0xaf, 0x9f, 0xba, 0x72, 0x2f, 0x65,
-  0xcd, 0x4d, 0x55, 0x43, 0xb1, 0x35, 0xde, 0x8f, 0xc1, 0x21, 0xda, 0x8e,
-  0x19, 0x83, 0x03, 0x80, 0x1d, 0x35, 0xc6, 0x95, 0xd4, 0xe3, 0x7c, 0x83,
-  0x02, 0x94, 0xb0, 0x31, 0xcf, 0x91, 0x6a, 0x09, 0x76, 0x14, 0xf0, 0x96,
-  0x10, 0x39, 0x5e, 0x77, 0xfd, 0xa7, 0xbd, 0x9d, 0x9d, 0xdd, 0xfd, 0xdd,
-  0xcf, 0x9f, 0xef, 0xec, 0xef, 0xee, 0xee, 0xee, 0xed, 0xef, 0xee, 0xef,
-  0xef, 0xed, 0xfc, 0xbc, 0xcd, 0xa6, 0xa3, 0xbb, 0x34, 0xb9, 0x77, 0xf5,
-  0xe5, 0xbf, 0x97, 0x6b, 0x1a, 0x7e, 0x83, 0x07, 0x71, 0x07, 0x32, 0x97,
-  0x54, 0x0d, 0xd7, 0x04, 0x1f, 0x07, 0x53, 0x20, 0x91, 0xd8, 0x82, 0x4e,
-  0xb6, 0xf4, 0xa9, 0x8b, 0x38, 0x83, 0x01, 0x7a, 0x32, 0x46, 0xf5, 0xb7,
-  0x15, 0xcf, 0x74, 0xc2, 0xd2, 0x00, 0x44, 0x9a, 0xd2, 0x25, 0x8a, 0x5d,
-  0xcf, 0xf3, 0xc9, 0x04, 0xd1, 0xf0, 0x2e, 0x57, 0x72, 0x14, 0x31, 0x4c,
-  0xe7, 0xad, 0x90, 0x84, 0x3a, 0x0f, 0x10, 0xab, 0x26, 0x07, 0xdd, 0xaf,
-  0x8e, 0xc8, 0x5d, 0x1a, 0x9f, 0x3b, 0xcd, 0x19, 0xa7, 0x7e, 0xc6, 0x4c,
-  0x89, 0x16, 0xa9, 0x70, 0x39, 0x14, 0xd1, 0x55, 0xf2, 0xf9, 0xce, 0xfe,
-  0x3e, 0x97, 0x92, 0xf8, 0xfd, 0xee, 0x40, 0xc3, 0x0c, 0xc3, 0xd8, 0xe9,
-  0x81, 0xbb, 0x9d, 0xa4, 0x0d, 0xd6, 0x3e, 0xc2, 0x79, 0x66, 0xab, 0x45,
-  0x52, 0xa8, 0x1e, 0x82, 0xfb, 0x50, 0xd0, 0x64, 0x98, 0x18, 0x6d, 0xc8,
-  0xee, 0x59, 0x14, 0x47, 0x81, 0x69, 0x5e, 0x92, 0x1d, 0xfc, 0xe5, 0xa9,
-  0xe7, 0x1c, 0x47, 0x25, 0x93, 0xc2, 0x93, 0xfc, 0x30, 0x04, 0x72, 0x40,
-  0x64, 0xe4, 0xb7, 0xa1, 0xac, 0xaa, 0x09, 0x1e, 0x3f, 0x05, 0x83, 0xdf,
-  0x7b, 0xb6, 0xfb, 0xb3, 0x44, 0xb5, 0x31, 0x81, 0xfb, 0x55, 0xd0, 0x62,
-  0x61, 0x33, 0x95, 0x47, 0x24, 0x27, 0x4c, 0x09, 0x63, 0x33, 0x19, 0x5d,
-  0x8f, 0x4c, 0x48, 0x50, 0xc3, 0xe1, 0x20, 0x8c, 0x2d, 0x16, 0x38, 0x6b,
-  0xa9, 0xd4, 0x0e, 0xb5, 0xcb, 0x6c, 0x43, 0x66, 0xe3, 0x15, 0xbb, 0x64,
-  0xad, 0xea, 0xcb, 0x06, 0x5d, 0x19, 0x07, 0x27, 0xa7, 0x1c, 0xb7, 0x72,
-  0x4a, 0x12, 0xd8, 0xd8, 0x58, 0x19, 0x82, 0x7b, 0x10, 0x77, 0x93, 0xa5,
-  0x7c, 0x9b, 0x0e, 0x1c, 0xd8, 0xbc, 0xc5, 0xc8, 0x43, 0xac, 0x60, 0xfb,
-  0xbb, 0x48, 0xe6, 0x0a, 0x0a, 0x45, 0xf2, 0x30, 0xf1, 0xb3, 0x52, 0xcc,
-  0x29, 0xc0, 0x5e, 0x64, 0x50, 0x62, 0xf8, 0x3a, 0x20, 0xf1, 0xca, 0xc2,
-  0xa3, 0xbe, 0x45, 0x91, 0xcc, 0x93, 0x3b, 0xb5, 0x7b, 0x08, 0x92, 0xdd,
-  0xd7, 0xea, 0x66, 0x90, 0xfa, 0x76, 0x95, 0xf7, 0x96, 0xd4, 0x3c, 0x19,
-  0xdc, 0xe7, 0xb6, 0x80, 0x00, 0xf8, 0xdc, 0x6e, 0x94, 0x04, 0x76, 0xe8,
-  0xcb, 0xe6, 0xd5, 0xe1, 0xf7, 0x86, 0x2c, 0x82, 0x96, 0xb2, 0x13, 0x6f,
-  0x4b, 0x4d, 0xdf, 0x6d, 0x86, 0x08, 0x8a, 0x2a, 0x6f, 0x05, 0x92, 0xc4,
-  0x2c, 0x36, 0x30, 0x80, 0x4c, 0x31, 0xe6, 0xb1, 0xd4, 0x32, 0x60, 0x13,
-  0x0a, 0x5a, 0xba, 0x22, 0x79, 0x89, 0xa1, 0xd0, 0x07, 0x91, 0x2f, 0x27,
-  0x9f, 0xcf, 0xe9, 0x4f, 0x04, 0x3c, 0xf0, 0xaa, 0xe3, 0x59, 0x06, 0xf8,
-  0x0b, 0xc2, 0x90, 0xe8, 0x4f, 0x89, 0x81, 0xd5, 0xbf, 0xd0, 0x54, 0xb1,
-  0x02, 0x8e, 0xe4, 0x40, 0x88, 0x95, 0xfd, 0x02, 0xd5, 0x74, 0xe4, 0x46,
-  0xaf, 0x6e, 0x39, 0x19, 0xff, 0x91, 0x79, 0x8d, 0x8c, 0x4d, 0xe4, 0x85,
-  0xad, 0xae, 0xec, 0xc2, 0x44, 0xea, 0x59, 0x7d, 0xb5, 0x62, 0x3b, 0xb5,
-  0xab, 0xd7, 0xc0, 0xa3, 0x58, 0x30, 0x69, 0x25, 0x52, 0x3a, 0xce, 0x35,
-  0xce, 0x02, 0xd7, 0x8a, 0x76, 0x57, 0x5a, 0x3f, 0xcd, 0xef, 0xb9, 0xf0,
-  0xdd, 0xd5, 0x15, 0x57, 0x33, 0x3f, 0xcb, 0x3c, 0x5e, 0x24, 0x73, 0x55,
-  0x79, 0x70, 0x61, 0xc5, 0x36, 0x68, 0x6e, 0x56, 0xd6, 0xde, 0xa2, 0x18,
-  0x47, 0xd1, 0x01, 0x56, 0x89, 0x64, 0x21, 0x34, 0x27, 0xee, 0x36, 0x88,
-  0x83, 0x8d, 0xa0, 0x39, 0x2d, 0xcc, 0xcb, 0x37, 0xe4, 0x02, 0x15, 0x00,
-  0x39, 0x38, 0x6c, 0x91, 0x67, 0x16, 0x03, 0xbd, 0x2a, 0x05, 0x3d, 0xcc,
-  0xaa, 0xf8, 0x6e, 0x88, 0xcd, 0x30, 0x9d, 0x2b, 0x5c, 0xaf, 0x0a, 0xce,
-  0x78, 0x23, 0x9c, 0xcc, 0x6c, 0xb8, 0xbc, 0x59, 0xda, 0x4e, 0x1b, 0xbf,
-  0x12, 0x66, 0xa6, 0x51, 0xb7, 0xb8, 0xde, 0xce, 0xbf, 0x39, 0x1f, 0x45,
-  0xc7, 0xdc, 0x92, 0x8c, 0x49, 0xef, 0x21, 0x68, 0x50, 0xf4, 0x1d, 0x4d,
-  0xf6, 0x9a, 0x19, 0xf8, 0x59, 0xc1, 0x7f, 0xa1, 0x35, 0xfd, 0x52, 0x8c,
-  0x26, 0xf8, 0xb6, 0xde, 0x2b, 0x35, 0x94, 0x67, 0x1a, 0x3b, 0x87, 0xdf,
-  0xe9, 0xa8, 0x10, 0x77, 0x74, 0xdb, 0xe4, 0x7b, 0xc8, 0x8b, 0x1a, 0xd6,
-  0x82, 0xbc, 0x19, 0x11, 0xd3, 0x04, 0xeb, 0x5b, 0x3e, 0x60, 0xff, 0xa0,
-  0x70, 0x03, 0xa0, 0x43, 0xaf, 0x07, 0x69, 0x20, 0x20, 0x2d, 0x25, 0x3f,
-  0x17, 0x60, 0x23, 0xe7, 0xaa, 0x10, 0x94, 0x81, 0x22, 0xd1, 0x70, 0xa4,
-  0x5c, 0x1d, 0x18, 0xa2, 0x6f, 0x94, 0x49, 0xe3, 0xb8, 0x06, 0xe2, 0x95,
-  0x7d, 0xc1, 0x42, 0x31, 0x8f, 0x85, 0x98, 0x10, 0x6d, 0xc1, 0x68, 0xe3,
-  0xff, 0x03, 0xc2, 0x3d, 0xb9, 0x93, 0x03, 0xf8, 0x01, 0x00,
+  0x7b, 0x5b, 0x23, 0xd7, 0xb1, 0x2f, 0xfc, 0xf7, 0xcb, 0xa7, 0xe8, 0xc8,
+  0x6f, 0x22, 0x48, 0x24, 0x71, 0x99, 0x8b, 0x3d, 0x64, 0xc6, 0xdb, 0x18,
+  0x18, 0x9b, 0x6d, 0x66, 0xe0, 0x20, 0xc6, 0x97, 0xe3, 0xf8, 0x99, 0xa7,
+  0x25, 0x35, 0xd0, 0x41, 0x52, 0x2b, 0xdd, 0x2d, 0x40, 0xce, 0xce, 0xfe,
+  0xec, 0x6f, 0xd5, 0xaf, 0xaa, 0xd6, 0x5a, 0x7d, 0x11, 0x33, 0x4e, 0xec,
+  0x9c, 0xf7, 0x9c, 0xe7, 0x78, 0xef, 0x0c, 0x20, 0x75, 0xaf, 0x6b, 0xad,
+  0x5a, 0x75, 0xfd, 0x55, 0x14, 0x7d, 0xe8, 0xbf, 0xf7, 0xf8, 0xdf, 0x7b,
+  0xfa, 0x4f, 0x7e, 0x8f, 0xa2, 0x8d, 0x28, 0x3a, 0xcf, 0xb3, 0xbf, 0x26,
+  0xe3, 0xb2, 0xfd, 0x85, 0xf7, 0xef, 0xff, 0x2b, 0x92, 0xff, 0xa3, 0x17,
+  0xfe, 0x82, 0x9f, 0x78, 0xe9, 0x91, 0xff, 0xb6, 0x23, 0xff, 0xd2, 0x7f,
+  0xbd, 0xdf, 0x8a, 0x3e, 0xe6, 0xa5, 0xff, 0x8a, 0x36, 0xf1, 0xd2, 0x7b,
+  0xed, 0xe9, 0x25, 0xff, 0x4e, 0xa3, 0x7c, 0xbc, 0xa7, 0xbf, 0xf0, 0xf0,
+  0xf8, 0x9f, 0x6d, 0x7e, 0xf1, 0x2f, 0xef, 0xf9, 0x57, 0xfa, 0x64, 0x63,
+  0xe3, 0xed, 0xc1, 0x9b, 0x63, 0x7b, 0x75, 0xbc, 0xcc, 0xa7, 0x51, 0x3f,
+  0x2a, 0xf3, 0x78, 0x5e, 0x5c, 0x25, 0x79, 0x14, 0x47, 0xef, 0x2e, 0x4e,
+  0x37, 0x36, 0x86, 0x3f, 0xbc, 0x3d, 0x3b, 0x1f, 0x9e, 0x0c, 0x2b, 0x8f,
+  0xfd, 0x98, 0x2d, 0xca, 0x34, 0x9b, 0x17, 0x3f, 0x45, 0x3f, 0xd2, 0x43,
+  0x83, 0xc1, 0xe0, 0xa7, 0x8d, 0x8d, 0xa3, 0xe3, 0xe1, 0xe1, 0xc5, 0xc9,
+  0xf9, 0xe5, 0xc9, 0xd9, 0xdb, 0xca, 0xb3, 0x51, 0x5a, 0x44, 0xd4, 0x58,
+  0x99, 0x65, 0x53, 0xfa, 0xc7, 0xb7, 0x3f, 0x89, 0xcb, 0x38, 0xba, 0xca,
+  0xb3, 0x59, 0x94, 0xe5, 0xfc, 0x45, 0x1c, 0x15, 0x49, 0x7e, 0x97, 0xe4,
+  0xbd, 0x68, 0x59, 0xa4, 0xf3, 0xeb, 0x28, 0x9b, 0x27, 0x51, 0x76, 0x15,
+  0x95, 0x37, 0x89, 0x35, 0x57, 0x2c, 0x17, 0x8b, 0x2c, 0x2f, 0x93, 0x49,
+  0xb4, 0xc8, 0xb3, 0x32, 0x1b, 0x67, 0xd3, 0x22, 0xda, 0xfc, 0xfa, 0xf2,
+  0xf2, 0xbc, 0x17, 0xf1, 0xbf, 0xc3, 0x5e, 0xf4, 0x9a, 0x7f, 0x7f, 0x8d,
+  0x5f, 0xa3, 0xe1, 0xe1, 0x39, 0xff, 0x8b, 0x8f, 0xa2, 0x4b, 0xf9, 0x71,
+  0x74, 0x72, 0x78, 0xd9, 0xb3, 0xe6, 0x2e, 0x8f, 0x4f, 0xdf, 0x1e, 0x5f,
+  0xd2, 0xa7, 0xa7, 0x47, 0x07, 0xe7, 0x11, 0x8f, 0x22, 0x7a, 0x7d, 0x72,
+  0x7a, 0xbc, 0x35, 0xa0, 0xaf, 0x6e, 0x92, 0x68, 0x9c, 0xcd, 0x66, 0xf1,
+  0x7c, 0xc2, 0xc3, 0x9f, 0x24, 0x45, 0x7a, 0x3d, 0xa7, 0x7e, 0x69, 0x98,
+  0xf7, 0x59, 0x7e, 0x1b, 0xdd, 0xa7, 0xe5, 0x4d, 0xb6, 0x2c, 0x69, 0xa4,
+  0x49, 0x6e, 0xcd, 0xa5, 0xf3, 0x32, 0xc9, 0xe3, 0x31, 0xaf, 0xcb, 0x60,
+  0xa3, 0xb2, 0x02, 0xd9, 0x15, 0xcd, 0xb7, 0xa0, 0x09, 0x8e, 0x96, 0xc5,
+  0x34, 0x8b, 0x27, 0x3c, 0x2d, 0x7a, 0xf3, 0x6a, 0x49, 0x0b, 0x92, 0xa7,
+  0xe3, 0xdb, 0x22, 0x9a, 0xa6, 0xb7, 0x09, 0x4f, 0xea, 0x61, 0x65, 0x93,
+  0xec, 0xa1, 0xed, 0x28, 0x5e, 0xd2, 0xfc, 0xe7, 0x7d, 0x6b, 0xae, 0x4c,
+  0xc7, 0x31, 0x77, 0x40, 0x83, 0xa6, 0x09, 0x45, 0xcb, 0x05, 0x37, 0x27,
+  0xb3, 0x8f, 0x16, 0x59, 0x41, 0x6f, 0x0d, 0x87, 0xa7, 0x34, 0xf2, 0xf9,
+  0x3c, 0xc1, 0x40, 0x8a, 0x1e, 0xfd, 0x91, 0xdd, 0xa6, 0x09, 0xfd, 0x72,
+  0x95, 0x4e, 0x13, 0x59, 0x7d, 0xd7, 0x1c, 0x6f, 0x43, 0x9e, 0x14, 0xcb,
+  0x59, 0x12, 0xf1, 0x4c, 0x67, 0x59, 0x9e, 0x0c, 0xa2, 0x83, 0x22, 0x5a,
+  0x65, 0x4b, 0x9a, 0xe2, 0x74, 0x4a, 0x3b, 0x92, 0x44, 0xa3, 0x64, 0x9a,
+  0xdd, 0xf7, 0x78, 0x1f, 0xa2, 0xf9, 0x72, 0x36, 0xa2, 0x57, 0x68, 0xf8,
+  0x57, 0x49, 0x5c, 0x2e, 0xe9, 0x55, 0x3c, 0x66, 0xcd, 0xcd, 0x62, 0x9a,
+  0x05, 0xbd, 0x9b, 0x47, 0x37, 0x09, 0xcd, 0xb2, 0x58, 0xa4, 0xf3, 0xdf,
+  0x6d, 0x34, 0x69, 0x61, 0x91, 0xdd, 0x27, 0x39, 0x2d, 0x66, 0x34, 0x5a,
+  0x45, 0x34, 0xf3, 0x91, 0x7c, 0x73, 0xc5, 0xeb, 0x1f, 0x4f, 0xa7, 0x8e,
+  0x40, 0xfa, 0x79, 0x32, 0x8d, 0x79, 0xb3, 0xad, 0xaf, 0x41, 0x34, 0x4c,
+  0x1c, 0x2d, 0xe8, 0x7b, 0x9b, 0x4f, 0xb6, 0xf0, 0xe6, 0x24, 0x29, 0xe3,
+  0x74, 0x5a, 0xd0, 0xc2, 0x33, 0xd1, 0xda, 0x06, 0xd3, 0x90, 0xe9, 0xcf,
+  0xa8, 0x58, 0xcd, 0xcb, 0xf8, 0x81, 0xfb, 0x36, 0xba, 0xe9, 0x4f, 0x92,
+  0x45, 0x32, 0x9f, 0x24, 0xf3, 0x72, 0x10, 0xfd, 0x90, 0x2d, 0xbb, 0xd4,
+  0xed, 0x55, 0x4a, 0x2b, 0x10, 0x47, 0xda, 0x12, 0x0f, 0x8f, 0x76, 0x7d,
+  0x9c, 0xa7, 0x8b, 0x60, 0xf1, 0xb3, 0x39, 0xed, 0x72, 0x74, 0xf1, 0xfa,
+  0x30, 0x7a, 0xf2, 0xe2, 0xb3, 0xe7, 0x7e, 0x97, 0xa9, 0x09, 0x9a, 0x60,
+  0x3c, 0x27, 0x12, 0x5d, 0x24, 0xe3, 0xf4, 0x8a, 0xe6, 0x35, 0x5b, 0x4e,
+  0xcb, 0x74, 0x41, 0x2b, 0xce, 0x23, 0x28, 0x98, 0xb8, 0x16, 0x71, 0x5e,
+  0x16, 0xbc, 0x76, 0xf8, 0x80, 0xe6, 0x7e, 0x9f, 0xa7, 0x25, 0x13, 0x3a,
+  0x7f, 0x41, 0x2b, 0x5d, 0x16, 0xd6, 0x1c, 0x53, 0x17, 0xf5, 0x33, 0x22,
+  0x6a, 0xa2, 0x15, 0x8e, 0x0b, 0xea, 0x74, 0xdf, 0xf5, 0x15, 0xdd, 0x94,
+  0xe5, 0x62, 0x7f, 0x7b, 0xbb, 0x48, 0xcb, 0x64, 0xf0, 0x77, 0x3a, 0x24,
+  0xbd, 0xf2, 0x3e, 0xeb, 0x95, 0x37, 0x79, 0x92, 0xfc, 0x63, 0x40, 0x34,
+  0xeb, 0x1e, 0xa4, 0x2e, 0x79, 0x1f, 0x79, 0x58, 0xd7, 0x09, 0x77, 0xf0,
+  0xb7, 0x65, 0x32, 0xe7, 0x06, 0x69, 0x08, 0xf1, 0x74, 0x71, 0x13, 0xd3,
+  0x6e, 0x26, 0x44, 0x7e, 0x7c, 0xec, 0x88, 0x40, 0x78, 0x44, 0x72, 0xf0,
+  0x7e, 0xfc, 0xa9, 0xd1, 0xe7, 0x15, 0xba, 0xa4, 0x7f, 0x07, 0xfa, 0x52,
+  0x4c, 0x6b, 0x4d, 0x9d, 0x6d, 0x33, 0x51, 0xfd, 0xb8, 0xdb, 0xdf, 0xdd,
+  0xd9, 0xf9, 0x69, 0x50, 0x3e, 0x94, 0x1f, 0xf9, 0xc2, 0xce, 0x8e, 0x7f,
+  0x85, 0x9f, 0xde, 0xe4, 0x19, 0x47, 0x53, 0x22, 0x1a, 0xee, 0xff, 0xe7,
+  0x24, 0xcf, 0x8a, 0xad, 0x96, 0xa6, 0xa6, 0x49, 0x49, 0x47, 0x2c, 0x68,
+  0x27, 0xee, 0xff, 0x2c, 0xdd, 0xda, 0xc3, 0x6f, 0xb3, 0x68, 0x9e, 0x14,
+  0x58, 0x55, 0x61, 0x1d, 0xc1, 0xb4, 0x69, 0xfb, 0x3d, 0x03, 0x89, 0x4b,
+  0x7c, 0x3b, 0xcb, 0x66, 0x44, 0x03, 0x3d, 0x3a, 0x98, 0xa5, 0x5b, 0x2c,
+  0x3a, 0x77, 0x8e, 0xe1, 0x24, 0xc4, 0x8f, 0xe2, 0x29, 0xb3, 0xa2, 0x82,
+  0x1a, 0xa6, 0xc1, 0x12, 0x03, 0x48, 0xe2, 0xf1, 0x4d, 0x94, 0xd1, 0xdb,
+  0x79, 0x73, 0x53, 0xe2, 0xf9, 0x6a, 0x90, 0xe5, 0xd7, 0xdb, 0x71, 0x3e,
+  0xbe, 0x49, 0xef, 0x68, 0x65, 0x5e, 0xbc, 0x78, 0xde, 0xa7, 0x7f, 0x5e,
+  0xfc, 0xb4, 0x7d, 0x97, 0x4d, 0x69, 0xa1, 0x9e, 0xfe, 0xb4, 0xcd, 0xdb,
+  0xfd, 0xf7, 0xb8, 0x37, 0xea, 0x8d, 0xff, 0x31, 0xb8, 0x29, 0x67, 0xd3,
+  0xc7, 0xa8, 0x88, 0xda, 0x8b, 0xe2, 0x59, 0xb6, 0x9c, 0x97, 0x8e, 0x70,
+  0x88, 0x06, 0xcb, 0x80, 0x3b, 0x4d, 0xd3, 0x39, 0x9d, 0x59, 0xa2, 0xf4,
+  0x95, 0x9c, 0xd8, 0x51, 0xe2, 0x0f, 0x77, 0x39, 0xbe, 0xa1, 0xa9, 0x12,
+  0x25, 0xc5, 0xba, 0x0c, 0x65, 0x4a, 0x93, 0xa1, 0xd7, 0xe6, 0x74, 0x88,
+  0x53, 0x69, 0x47, 0xba, 0x4a, 0xe9, 0xb9, 0x2c, 0x9f, 0x24, 0xb9, 0xa7,
+  0xe9, 0x61, 0x4a, 0xab, 0x26, 0xa7, 0xf6, 0xd3, 0xc1, 0xee, 0xb3, 0xc1,
+  0xae, 0x5b, 0x20, 0xda, 0xca, 0xcc, 0x0d, 0x91, 0x9a, 0x2e, 0x93, 0x05,
+  0x0d, 0x67, 0xc9, 0xec, 0x4f, 0x4e, 0x31, 0xb7, 0x1b, 0xd1, 0x29, 0xbe,
+  0x26, 0xb6, 0xe3, 0x96, 0x92, 0x38, 0xff, 0x4d, 0x5c, 0x56, 0x48, 0x92,
+  0x57, 0x77, 0x15, 0xbd, 0xa5, 0xad, 0x37, 0xc6, 0x92, 0x47, 0xb2, 0xc7,
+  0xcd, 0x95, 0xbd, 0xbf, 0xbf, 0x5f, 0x4f, 0x7b, 0xfb, 0xbb, 0x35, 0xf2,
+  0x0b, 0x5e, 0x6a, 0x23, 0x9a, 0xfd, 0xbd, 0x2a, 0xd9, 0x9c, 0x5c, 0x45,
+  0x18, 0x98, 0x5f, 0x78, 0x66, 0x1b, 0x8e, 0xcb, 0x1b, 0xd7, 0xa0, 0x16,
+  0xe9, 0xf7, 0xe4, 0x2a, 0x7d, 0xe8, 0xc9, 0xc2, 0x60, 0xc5, 0x63, 0x6a,
+  0x7f, 0xb6, 0x60, 0xd2, 0xb0, 0xe6, 0xae, 0x97, 0x49, 0x41, 0x9c, 0x91,
+  0xa7, 0x6b, 0xaf, 0xa2, 0xf9, 0x59, 0x7a, 0x7d, 0x53, 0x46, 0xf7, 0x31,
+  0x73, 0x9d, 0x93, 0x52, 0xde, 0x66, 0xf6, 0x4e, 0x9c, 0xe6, 0x2a, 0x26,
+  0x7e, 0x11, 0x31, 0x79, 0x09, 0x33, 0x67, 0x8a, 0x74, 0x7c, 0x87, 0x16,
+  0x49, 0x08, 0x2e, 0x0a, 0x2e, 0xbe, 0x51, 0x5c, 0xf0, 0xa6, 0xcd, 0x89,
+  0x30, 0x4a, 0xba, 0x21, 0x96, 0xfc, 0xd7, 0x0d, 0x5d, 0x01, 0xd1, 0x3c,
+  0x9e, 0x25, 0x3a, 0x4c, 0xe6, 0x99, 0xaf, 0x69, 0x51, 0x93, 0x87, 0x78,
+  0xe6, 0xd8, 0x18, 0x31, 0xa5, 0x1e, 0xf6, 0xc9, 0x3d, 0x4d, 0x07, 0xa3,
+  0x24, 0xa2, 0xe4, 0x53, 0x83, 0x83, 0xd8, 0xe1, 0xc3, 0xd6, 0x09, 0xa7,
+  0x58, 0xe0, 0x8e, 0xc0, 0x12, 0xf1, 0xf0, 0xa3, 0x60, 0xb2, 0xb4, 0x64,
+  0xf1, 0x2d, 0xdf, 0x46, 0xb5, 0x4b, 0x4f, 0xde, 0x8c, 0x26, 0x34, 0xa3,
+  0x94, 0xf8, 0xde, 0x88, 0x8e, 0x25, 0x4f, 0x8f, 0xc6, 0x29, 0x2b, 0xc3,
+  0x8d, 0x2d, 0xa8, 0x61, 0xfe, 0x30, 0x2d, 0x99, 0xe3, 0x40, 0xe0, 0xc0,
+  0xca, 0xd0, 0x51, 0x9d, 0x67, 0xe1, 0xfc, 0x79, 0x68, 0xf4, 0xdc, 0x5d,
+  0x3c, 0x4d, 0x49, 0x6c, 0x48, 0xdc, 0x0b, 0xe0, 0xec, 0x63, 0xbe, 0x15,
+  0xa7, 0xd3, 0x15, 0x11, 0x61, 0x9e, 0xb3, 0x80, 0xc6, 0x9b, 0x47, 0xdc,
+  0x8c, 0x0f, 0x4f, 0x34, 0x4b, 0xe8, 0x36, 0xa9, 0x2c, 0x67, 0xca, 0xbc,
+  0x8d, 0x88, 0x96, 0x6e, 0x28, 0xd0, 0x1f, 0xdd, 0x24, 0x38, 0xe4, 0x98,
+  0x3a, 0x86, 0xc6, 0xad, 0x8f, 0xc7, 0xc9, 0xa2, 0x2c, 0xfc, 0x9c, 0x0e,
+  0x5b, 0xf6, 0x9b, 0xee, 0x4e, 0x5e, 0xf7, 0xf0, 0xbe, 0xc5, 0xc2, 0x3a,
+  0xde, 0xef, 0xaf, 0x5c, 0x16, 0x00, 0x7a, 0x74, 0x08, 0xdc, 0x9c, 0xb8,
+  0x1f, 0x3a, 0x03, 0x58, 0xf4, 0x19, 0x8f, 0x94, 0x9f, 0x2d, 0x44, 0x1e,
+  0xc2, 0xb9, 0xe4, 0x5d, 0x14, 0x81, 0x48, 0xba, 0xa5, 0x05, 0xe1, 0xc5,
+  0xf4, 0xf7, 0x0a, 0xf5, 0xea, 0xf6, 0x94, 0xbb, 0x2f, 0x48, 0xa0, 0x24,
+  0xa6, 0x3e, 0x29, 0x6e, 0xe8, 0x1a, 0x2e, 0x98, 0x27, 0xf0, 0x4c, 0x67,
+  0x44, 0x31, 0x77, 0xbc, 0xc3, 0x8b, 0x24, 0x99, 0x0c, 0xa2, 0xb3, 0x2b,
+  0x3e, 0xaa, 0x39, 0x0d, 0xba, 0xc4, 0xd7, 0xcc, 0x4f, 0x68, 0xe5, 0x26,
+  0x10, 0xb6, 0xe6, 0x8e, 0x75, 0x60, 0x2c, 0x01, 0x6b, 0x00, 0x0b, 0xa1,
+  0xa1, 0x4e, 0xab, 0x8c, 0x07, 0x52, 0x03, 0x1f, 0x67, 0x1e, 0x1c, 0x6d,
+  0x71, 0x14, 0x81, 0x0c, 0xe9, 0xb7, 0xf2, 0x3e, 0x49, 0xe6, 0x9e, 0x8d,
+  0x12, 0xcf, 0xe3, 0x6d, 0x03, 0x61, 0xa4, 0xf3, 0xbb, 0x8c, 0x07, 0xb8,
+  0xb1, 0x71, 0x7e, 0x71, 0xf6, 0xd5, 0xc5, 0xf1, 0x70, 0x18, 0xbd, 0x39,
+  0xbe, 0x3c, 0xbe, 0xa8, 0x52, 0xcf, 0x3c, 0xcb, 0x67, 0xd8, 0xd4, 0x68,
+  0x92, 0x16, 0x8b, 0x69, 0xbc, 0xe2, 0xed, 0xa6, 0xb9, 0x5c, 0xe7, 0x7c,
+  0xb6, 0x66, 0x09, 0x33, 0x9b, 0xc9, 0x32, 0x07, 0xa7, 0x5f, 0xd0, 0xfe,
+  0xa9, 0xb4, 0x43, 0x97, 0x38, 0x44, 0xa4, 0xf9, 0xb5, 0x5f, 0xe9, 0x24,
+  0x60, 0xa1, 0xb6, 0x19, 0x2c, 0x7f, 0xb0, 0x00, 0xda, 0x8b, 0xbc, 0x40,
+  0x2a, 0x6b, 0xc4, 0xc2, 0x2a, 0xcf, 0x8a, 0xaf, 0x91, 0x19, 0xe4, 0x0f,
+  0xba, 0xf8, 0x67, 0x5e, 0xee, 0x48, 0xae, 0xe8, 0xbe, 0x20, 0xd6, 0xea,
+  0x49, 0xe3, 0x6b, 0x92, 0x67, 0x20, 0xb7, 0xf2, 0x12, 0x8d, 0x13, 0x9d,
+  0x81, 0x1b, 0x36, 0x16, 0x1a, 0xc2, 0x2e, 0x4b, 0xbf, 0x34, 0x1a, 0x1a,
+  0xfa, 0x2c, 0x9d, 0x13, 0xc5, 0x11, 0x8d, 0xea, 0xc9, 0xa7, 0x81, 0x5f,
+  0x59, 0x73, 0x7c, 0x30, 0x64, 0x8d, 0xa4, 0x21, 0x7a, 0x8b, 0xf6, 0x9d,
+  0x58, 0xa6, 0x9b, 0x27, 0x06, 0x98, 0xe2, 0x98, 0xc4, 0x23, 0x66, 0x50,
+  0x2c, 0x96, 0x92, 0x30, 0x91, 0x84, 0xdd, 0xb8, 0xf9, 0x6b, 0x6f, 0x3d,
+  0x3e, 0x87, 0x3c, 0xaa, 0x78, 0xc4, 0x9b, 0xcb, 0x03, 0xa9, 0x2d, 0x27,
+  0x9d, 0x28, 0x70, 0x99, 0xfb, 0xb4, 0xc0, 0x09, 0xbb, 0xcf, 0x96, 0x53,
+  0x12, 0x0a, 0xf9, 0x81, 0xe5, 0x22, 0x5c, 0x4e, 0xea, 0x72, 0x41, 0xbd,
+  0xce, 0xd2, 0x07, 0x88, 0x2f, 0xb5, 0x56, 0x68, 0x6c, 0xf4, 0xe7, 0x82,
+  0xb6, 0x43, 0xc6, 0x33, 0x08, 0xd9, 0x2c, 0x24, 0x4b, 0xe6, 0x20, 0x8d,
+  0xcd, 0xe4, 0x83, 0x03, 0xd6, 0x77, 0x7e, 0x36, 0xbc, 0xe4, 0x9b, 0xe0,
+  0xfc, 0xdd, 0x25, 0x35, 0x44, 0xd7, 0x56, 0x51, 0xd2, 0xc6, 0xf2, 0x8b,
+  0xf3, 0x04, 0x22, 0xb8, 0x35, 0x47, 0x7b, 0x98, 0xe2, 0xbc, 0xeb, 0x85,
+  0x63, 0x9d, 0xda, 0xf8, 0xa0, 0x53, 0x30, 0x29, 0x9b, 0x46, 0x51, 0xdc,
+  0x24, 0x74, 0x90, 0xdc, 0x6b, 0x9b, 0x9f, 0x6f, 0xf5, 0xa2, 0xbe, 0x6b,
+  0xee, 0x47, 0x7e, 0xf4, 0x27, 0xee, 0xb9, 0x48, 0x67, 0xe9, 0x34, 0x0e,
+  0xee, 0x42, 0xc7, 0x92, 0xfc, 0xd1, 0x1c, 0x13, 0xfb, 0xc5, 0x98, 0xbd,
+  0x1c, 0xce, 0x0b, 0x88, 0x73, 0xed, 0x37, 0x6a, 0x92, 0x25, 0xf2, 0x1e,
+  0x0b, 0xc3, 0x8e, 0x03, 0xf1, 0x96, 0xf1, 0x91, 0xaf, 0x2c, 0x53, 0x9d,
+  0x3a, 0x1a, 0xcb, 0xc6, 0x2c, 0x1d, 0x6a, 0x99, 0x5b, 0xb8, 0xce, 0x28,
+  0xce, 0x3b, 0x8e, 0x99, 0xa9, 0xc0, 0x93, 0x27, 0xd7, 0x4b, 0x1a, 0xbc,
+  0xac, 0x2a, 0xcd, 0xef, 0x13, 0x1e, 0x3a, 0x0b, 0xe5, 0xee, 0x70, 0x93,
+  0xb4, 0x37, 0x9f, 0x0c, 0x36, 0xce, 0xa0, 0xaa, 0x39, 0xbd, 0xee, 0x84,
+  0xef, 0xe4, 0x39, 0x73, 0xc2, 0x1e, 0xc4, 0xf0, 0x11, 0xe9, 0x6b, 0x09,
+  0xa8, 0x4e, 0x18, 0x5b, 0x9c, 0x27, 0x51, 0x32, 0x67, 0xe2, 0x99, 0x08,
+  0xab, 0xec, 0xf7, 0xe5, 0x2b, 0xec, 0xf8, 0x8a, 0xae, 0xf3, 0xf8, 0x3a,
+  0x4e, 0xdd, 0x99, 0x57, 0x42, 0x9b, 0x44, 0xf6, 0xf0, 0x3c, 0xd3, 0xe7,
+  0x99, 0x33, 0x31, 0x93, 0xd5, 0x4d, 0x5d, 0x82, 0x17, 0x25, 0x7c, 0x47,
+  0xd1, 0x9e, 0x60, 0x6d, 0xb5, 0x5d, 0xbe, 0x9a, 0xac, 0xb9, 0x11, 0xae,
+  0x61, 0xbe, 0xd3, 0x40, 0x99, 0xb8, 0xa5, 0xa8, 0xc5, 0xce, 0xc0, 0x9f,
+  0x3e, 0x08, 0x34, 0x29, 0xeb, 0x52, 0x74, 0xd3, 0xdc, 0xb3, 0x6c, 0x57,
+  0x94, 0xc4, 0x3f, 0xc0, 0xdf, 0xf0, 0x19, 0x8d, 0xd3, 0x71, 0xa4, 0x9b,
+  0xec, 0x5e, 0xc8, 0xc6, 0xcd, 0x82, 0xda, 0x28, 0x52, 0x5c, 0xa7, 0xfc,
+  0xf9, 0x6c, 0x10, 0x6d, 0x82, 0x81, 0x12, 0x97, 0xe5, 0x9b, 0xc0, 0xcf,
+  0xc2, 0x2d, 0xc8, 0x7d, 0xec, 0x04, 0xf6, 0x78, 0x32, 0x11, 0x41, 0x8b,
+  0x45, 0xa5, 0x17, 0x83, 0x9d, 0x01, 0x1b, 0x0b, 0x92, 0xbb, 0x34, 0x23,
+  0x7d, 0x8f, 0xef, 0x20, 0xbe, 0x68, 0xdd, 0x7b, 0x11, 0x6b, 0x3f, 0x7c,
+  0x83, 0x5e, 0x5f, 0x63, 0x7d, 0xb2, 0xf9, 0x36, 0x29, 0x88, 0x51, 0xc0,
+  0x7e, 0x73, 0x52, 0x4e, 0xc0, 0x79, 0x78, 0x6d, 0x4c, 0x8e, 0x05, 0xd1,
+  0x85, 0xbc, 0x57, 0x57, 0x73, 0xcb, 0xd1, 0x49, 0x3f, 0xde, 0xee, 0xf7,
+  0xe3, 0x05, 0x2b, 0x36, 0x35, 0x73, 0xc0, 0x26, 0x11, 0xe9, 0x36, 0x6b,
+  0xc2, 0x5b, 0xd1, 0x77, 0x2c, 0x6f, 0x80, 0x4b, 0xb3, 0x5c, 0x38, 0x77,
+  0x2a, 0x24, 0x96, 0x4e, 0x24, 0x12, 0x3e, 0x24, 0xc6, 0x79, 0x5a, 0x9b,
+  0x33, 0x4a, 0x8d, 0x73, 0x96, 0xe2, 0x70, 0xc9, 0x39, 0x2a, 0xe4, 0xf1,
+  0x46, 0x74, 0xe3, 0xe4, 0xa6, 0xdd, 0xd0, 0x7e, 0x0d, 0x44, 0xc2, 0xc2,
+  0x29, 0xe5, 0xa7, 0x6b, 0xcd, 0xf1, 0x21, 0x99, 0x77, 0x69, 0x85, 0x92,
+  0x87, 0x94, 0x55, 0x58, 0xde, 0x61, 0x95, 0x1e, 0xf8, 0x4a, 0x19, 0xe7,
+  0x58, 0x8c, 0x01, 0xc4, 0xfb, 0x32, 0x91, 0x23, 0x86, 0xe1, 0x5e, 0x4d,
+  0xe3, 0x6b, 0xa2, 0xa3, 0x5a, 0x73, 0xa4, 0xa9, 0x67, 0xcc, 0xde, 0x89,
+  0xbb, 0x16, 0x24, 0xde, 0x93, 0x46, 0xfc, 0xb5, 0x5e, 0xa4, 0x45, 0xb4,
+  0x49, 0x0c, 0x7a, 0xba, 0x84, 0x96, 0x71, 0x46, 0x13, 0xa3, 0xaf, 0xb6,
+  0xfc, 0x39, 0xeb, 0x1f, 0xd0, 0xfa, 0xb1, 0xd6, 0xdd, 0x8f, 0xe9, 0x24,
+  0x94, 0xd1, 0x4b, 0xf9, 0x51, 0x94, 0x7c, 0xcb, 0x7c, 0x5e, 0x5f, 0x52,
+  0xe6, 0x55, 0x5b, 0xd1, 0x50, 0x05, 0x46, 0x9e, 0xdb, 0x3b, 0x7e, 0xf5,
+  0x20, 0x78, 0x87, 0x17, 0xaa, 0xa0, 0xe5, 0xb3, 0x05, 0x03, 0x7b, 0x93,
+  0xa1, 0x0c, 0x6a, 0xcd, 0x0d, 0x79, 0xa4, 0x34, 0xdf, 0x78, 0xc2, 0x04,
+  0x23, 0xf7, 0x71, 0x74, 0xf8, 0xd5, 0x09, 0x91, 0xcb, 0x15, 0xa9, 0xa3,
+  0x34, 0x2b, 0x2c, 0x20, 0xab, 0xcf, 0x74, 0x23, 0x13, 0x5b, 0xa6, 0x79,
+  0x63, 0xcd, 0x48, 0x6f, 0x0c, 0xa5, 0x31, 0xfd, 0xaf, 0xf3, 0x26, 0xfb,
+  0x99, 0x16, 0x30, 0xde, 0x7e, 0x3a, 0xd8, 0xa1, 0x33, 0x72, 0x49, 0x5a,
+  0xcb, 0x7c, 0x9c, 0x4d, 0x48, 0x99, 0x9f, 0xc6, 0xf3, 0xdb, 0x22, 0x02,
+  0xad, 0x62, 0x3f, 0x64, 0xa4, 0x7c, 0x77, 0x2d, 0xf3, 0x9c, 0x6e, 0xc9,
+  0x49, 0x14, 0x5e, 0x1e, 0x76, 0x5c, 0x64, 0x3a, 0x72, 0x08, 0x4c, 0x10,
+  0x88, 0xfe, 0xb6, 0xe4, 0xed, 0x98, 0xc5, 0xf9, 0xad, 0x49, 0x1b, 0x4e,
+  0x3b, 0x18, 0x25, 0x18, 0x18, 0x9e, 0x6f, 0x36, 0xd7, 0xff, 0x9a, 0x16,
+  0x9a, 0x4d, 0x04, 0x2c, 0xf2, 0xcb, 0xe9, 0xcb, 0x4c, 0x2e, 0xf1, 0xdb,
+  0xe1, 0xb9, 0x1f, 0xe6, 0xad, 0x0f, 0xb2, 0x16, 0x47, 0x2d, 0xb3, 0xa9,
+  0x82, 0x29, 0x81, 0xde, 0xa4, 0xf3, 0x29, 0xd6, 0x89, 0x69, 0x4c, 0xc7,
+  0x8c, 0x17, 0xce, 0xd3, 0x4e, 0xb3, 0x6f, 0xfe, 0x9e, 0x29, 0xa8, 0x5b,
+  0xe0, 0x14, 0x04, 0xbb, 0xdf, 0x27, 0x96, 0xcc, 0xe6, 0x96, 0xf6, 0x8d,
+  0xbe, 0xa4, 0x53, 0x51, 0xb8, 0x63, 0x71, 0x95, 0x5e, 0x2f, 0xf3, 0x44,
+  0x18, 0x39, 0x2c, 0x34, 0x66, 0x98, 0x61, 0xb6, 0x7b, 0x93, 0x81, 0xf8,
+  0x48, 0xea, 0x4d, 0xa6, 0x57, 0xbd, 0x5a, 0x73, 0x7c, 0x7c, 0x8d, 0xe5,
+  0x81, 0x2f, 0x14, 0xc9, 0x18, 0x4d, 0xcd, 0x13, 0x65, 0xdf, 0x33, 0x5e,
+  0x55, 0xd6, 0xee, 0xa3, 0xf1, 0x34, 0x4e, 0x67, 0x85, 0x68, 0x05, 0xaa,
+  0xba, 0xd6, 0xe9, 0xe6, 0x52, 0xa5, 0x38, 0x10, 0xcc, 0x88, 0xa5, 0xc8,
+  0xbc, 0x60, 0x39, 0x91, 0xb7, 0x2b, 0xb6, 0xeb, 0x13, 0x9d, 0x92, 0x2e,
+  0x38, 0xbe, 0x05, 0x51, 0xa2, 0x17, 0xb9, 0x79, 0xfa, 0xb5, 0xe6, 0x64,
+  0x53, 0x0a, 0x5e, 0xcf, 0x65, 0xc1, 0x16, 0xa5, 0x22, 0x1d, 0x11, 0x41,
+  0x92, 0x54, 0xb5, 0x1c, 0x83, 0x02, 0x58, 0x3b, 0x25, 0x3d, 0x38, 0x8f,
+  0x59, 0xe6, 0x2c, 0x61, 0x0b, 0x8b, 0x40, 0x36, 0x7d, 0x22, 0x91, 0x45,
+  0xeb, 0xe8, 0x60, 0xf3, 0x11, 0xb9, 0xb0, 0xc2, 0x24, 0x0a, 0x95, 0x7e,
+  0xd9, 0xe8, 0xa2, 0xa2, 0xe6, 0xb8, 0xb6, 0x9a, 0xb5, 0xe6, 0x64, 0x6d,
+  0x7b, 0x24, 0xa4, 0xa7, 0xa4, 0x82, 0x9b, 0x26, 0x49, 0xc2, 0x91, 0xd0,
+  0x65, 0xbf, 0x4f, 0x3a, 0x51, 0x3a, 0xee, 0xf1, 0x6f, 0x93, 0x94, 0x94,
+  0xcf, 0x12, 0xbf, 0xce, 0xcb, 0xe9, 0xac, 0x17, 0x85, 0xdc, 0xdf, 0xed,
+  0xf8, 0x3c, 0xb9, 0xce, 0x48, 0x27, 0x2e, 0x9b, 0x54, 0x07, 0x4e, 0x23,
+  0xac, 0x46, 0x85, 0x07, 0x47, 0x1f, 0x26, 0x0a, 0x90, 0x0c, 0x41, 0xec,
+  0x98, 0xad, 0x48, 0x13, 0x3e, 0x9d, 0x3c, 0x1c, 0x1a, 0x8a, 0xf0, 0xd3,
+  0x3a, 0x4f, 0x82, 0x58, 0x5f, 0x94, 0xc4, 0x78, 0x7a, 0x2a, 0x24, 0x12,
+  0x8f, 0x9b, 0xc5, 0x2b, 0xec, 0x10, 0x49, 0x23, 0x4e, 0x02, 0xc0, 0xc1,
+  0x21, 0x06, 0x52, 0xde, 0xa7, 0x63, 0x15, 0xaf, 0x79, 0x41, 0xea, 0x0c,
+  0x98, 0x0d, 0x00, 0xd3, 0x94, 0x1f, 0x9c, 0x2d, 0x69, 0x7f, 0xe9, 0x2d,
+  0xbe, 0x6c, 0x45, 0x25, 0xb9, 0xa7, 0xdd, 0x1a, 0xc8, 0xb1, 0x49, 0x44,
+  0x64, 0xa2, 0xdb, 0x8e, 0x25, 0xb9, 0x38, 0x4f, 0xa1, 0x7c, 0x35, 0x9a,
+  0x93, 0x31, 0xf3, 0x24, 0xc3, 0x71, 0xf2, 0xeb, 0x2a, 0xd8, 0x78, 0x81,
+  0x06, 0x47, 0x8b, 0x39, 0x52, 0x70, 0x70, 0x46, 0x74, 0x9a, 0xc5, 0xca,
+  0x18, 0xbd, 0xe4, 0x3b, 0xfb, 0x15, 0x4f, 0x66, 0x0d, 0xbf, 0x3c, 0x87,
+  0xc6, 0x77, 0x53, 0x15, 0x79, 0x02, 0xbe, 0x28, 0x6a, 0x9d, 0xb4, 0x66,
+  0xaa, 0x20, 0xd3, 0x7e, 0x9d, 0x50, 0x89, 0x34, 0x13, 0xb0, 0x4a, 0xd7,
+  0xd6, 0xc2, 0x5f, 0xb8, 0xb4, 0x33, 0x49, 0x7a, 0xc7, 0x96, 0x43, 0xa7,
+  0x4d, 0x49, 0xe3, 0x30, 0x85, 0x74, 0x86, 0x49, 0x59, 0x6f, 0xee, 0x10,
+  0x1d, 0xee, 0x77, 0xd4, 0x9c, 0x02, 0xcb, 0x21, 0x5a, 0xd5, 0xa5, 0xa3,
+  0x05, 0x56, 0x7b, 0xc9, 0x15, 0xeb, 0x25, 0x44, 0x14, 0x1d, 0x36, 0x9d,
+  0xef, 0xbe, 0xfa, 0xf6, 0xe0, 0xf4, 0xdd, 0xf1, 0xee, 0x9f, 0xeb, 0xd4,
+  0x43, 0xdf, 0xed, 0xc9, 0x77, 0x7b, 0x9d, 0x36, 0x8e, 0x46, 0x04, 0x14,
+  0x45, 0xdd, 0x57, 0x5d, 0x52, 0x60, 0x67, 0xa3, 0x6c, 0xca, 0xb3, 0xb4,
+  0x3b, 0x19, 0x9c, 0x8c, 0x46, 0xd1, 0x53, 0x09, 0xbf, 0x94, 0xeb, 0x4f,
+  0x16, 0x86, 0x6f, 0xcf, 0xfa, 0xd8, 0xa1, 0xef, 0xab, 0x66, 0x0d, 0x02,
+  0x88, 0x27, 0xe1, 0x62, 0x14, 0x25, 0x6e, 0x43, 0xdd, 0x20, 0x6e, 0xb9,
+  0x10, 0x7a, 0xa4, 0x33, 0x81, 0x83, 0x54, 0xe7, 0xf5, 0x32, 0x63, 0x9e,
+  0xb2, 0x1f, 0x12, 0xb8, 0x6e, 0x01, 0xf9, 0x28, 0x05, 0x61, 0xad, 0x88,
+  0x7a, 0xcb, 0xf1, 0xcd, 0x80, 0x2e, 0x3d, 0xe1, 0x29, 0x69, 0xa1, 0xc7,
+  0xb3, 0xce, 0xef, 0xf8, 0x3a, 0x60, 0x15, 0xfd, 0x8e, 0x66, 0x21, 0x5b,
+  0xdf, 0xd1, 0xb1, 0x90, 0x52, 0x48, 0xfb, 0xd2, 0xd1, 0xe3, 0x0c, 0xca,
+  0x82, 0x05, 0x59, 0x35, 0x40, 0x3e, 0x5f, 0x79, 0xbd, 0x39, 0x3a, 0x3b,
+  0xd9, 0x8c, 0x7b, 0x54, 0xb3, 0x36, 0xbb, 0x15, 0x8c, 0x21, 0xf0, 0x79,
+  0xa2, 0x51, 0xb3, 0x0e, 0xbc, 0xd2, 0x13, 0xd9, 0xcd, 0x13, 0x3d, 0xbe,
+  0xa2, 0xee, 0xd6, 0x29, 0x9f, 0x1a, 0x1b, 0x91, 0xb0, 0xad, 0xa4, 0x2d,
+  0x97, 0x55, 0xd4, 0x3f, 0x25, 0x82, 0x9e, 0x66, 0xca, 0xd0, 0xbd, 0xd0,
+  0xaa, 0xd2, 0x4b, 0xe4, 0x68, 0x20, 0xbb, 0x6a, 0x39, 0x97, 0xfa, 0x0c,
+  0xf3, 0x6c, 0x6c, 0x85, 0x0d, 0x54, 0x8e, 0x96, 0x23, 0x27, 0xd2, 0x0d,
+  0x69, 0x65, 0x41, 0xf9, 0xca, 0x74, 0x49, 0xf3, 0x68, 0x69, 0xee, 0x6d,
+  0x52, 0x16, 0xe3, 0x78, 0x91, 0x6c, 0xeb, 0x8d, 0x6e, 0x1b, 0x89, 0x5e,
+  0x64, 0x20, 0x4d, 0xe6, 0x75, 0x76, 0x79, 0x6c, 0x62, 0x92, 0x3e, 0xe9,
+  0x75, 0x79, 0x11, 0x64, 0x83, 0x33, 0xcb, 0x27, 0x0c, 0x42, 0xb2, 0x32,
+  0xe9, 0xb8, 0x21, 0x50, 0xcd, 0x49, 0x9b, 0x1a, 0xc0, 0xb8, 0x6a, 0x93,
+  0x51, 0x53, 0xa3, 0x11, 0x97, 0x9d, 0x0d, 0xea, 0x09, 0xc2, 0x06, 0x3e,
+  0x76, 0x9e, 0x87, 0x3a, 0xb7, 0xd1, 0xdb, 0xaf, 0x3f, 0x76, 0x63, 0xe8,
+  0xff, 0x35, 0xf6, 0x92, 0x80, 0x9a, 0xad, 0xb1, 0x50, 0x24, 0xd9, 0xcf,
+  0x49, 0xf4, 0xbd, 0x4b, 0x74, 0x6d, 0x79, 0xbd, 0xda, 0xaf, 0x2c, 0xaf,
+  0xed, 0x19, 0xbf, 0x3e, 0xa2, 0xe6, 0x27, 0xcb, 0xd9, 0x42, 0x25, 0x8d,
+  0xdf, 0xb5, 0x1d, 0x43, 0x91, 0xa8, 0x7e, 0xa9, 0x68, 0x31, 0x4a, 0x7e,
+  0x91, 0x60, 0xf1, 0xa5, 0x88, 0x95, 0xfd, 0xb8, 0x18, 0xa7, 0x69, 0xed,
+  0xad, 0x63, 0x68, 0x54, 0xd1, 0xc1, 0xf0, 0xf0, 0xe4, 0xc4, 0x5b, 0x22,
+  0xee, 0x45, 0x48, 0xe7, 0x69, 0xb0, 0x7a, 0x49, 0x4b, 0xc2, 0x2e, 0x2a,
+  0xb1, 0xe5, 0xc1, 0x91, 0x25, 0xe3, 0xa6, 0xdb, 0xaf, 0xed, 0xb4, 0xf1,
+  0xf8, 0x92, 0x39, 0xd1, 0xc6, 0x58, 0xa4, 0x60, 0x69, 0x88, 0xe6, 0xc3,
+  0x76, 0x31, 0x90, 0x05, 0x5d, 0x5a, 0x85, 0x2a, 0x51, 0x7f, 0x2e, 0x57,
+  0x8b, 0xe4, 0xd5, 0x41, 0x47, 0x24, 0xb8, 0xfa, 0x9c, 0x64, 0x61, 0xc6,
+  0x31, 0x0d, 0x5f, 0x6d, 0x18, 0x72, 0x3b, 0xf1, 0x16, 0x4f, 0xd4, 0xf2,
+  0xa0, 0xbc, 0x91, 0xad, 0xe3, 0x33, 0x16, 0x31, 0xc5, 0x06, 0x4c, 0xb7,
+  0xd0, 0x93, 0xbd, 0x3a, 0x6b, 0x59, 0xd1, 0xf5, 0x3f, 0x2b, 0x42, 0x99,
+  0x0b, 0x37, 0x76, 0xfb, 0x55, 0x51, 0x13, 0xb9, 0x98, 0x6c, 0x70, 0x5c,
+  0xbe, 0xe4, 0x57, 0x6a, 0x82, 0xc2, 0xc0, 0x09, 0x42, 0xcd, 0x8d, 0x31,
+  0xe3, 0x2a, 0x5f, 0xa6, 0x35, 0x49, 0x72, 0x59, 0x2c, 0x61, 0x63, 0x5a,
+  0x90, 0xbc, 0x54, 0x4e, 0x89, 0xc1, 0xf5, 0xa2, 0xe5, 0x9c, 0x7f, 0x3a,
+  0xcd, 0x34, 0xf2, 0x5a, 0xbb, 0x57, 0x7e, 0xa0, 0xdf, 0xe4, 0x29, 0xcf,
+  0x35, 0x8e, 0x42, 0x5e, 0x2b, 0xd2, 0xb8, 0xb6, 0xaf, 0xd2, 0x03, 0x3b,
+  0x76, 0xe8, 0xb1, 0x49, 0xca, 0x4e, 0x40, 0x1a, 0x71, 0x7d, 0xc7, 0x5a,
+  0xc5, 0xc7, 0xcd, 0x62, 0x49, 0x0c, 0x8d, 0x58, 0xbe, 0x13, 0x5f, 0x02,
+  0x91, 0x86, 0x97, 0xd7, 0x64, 0x97, 0xfa, 0x65, 0x40, 0x4c, 0x36, 0xd4,
+  0x68, 0xfa, 0xe3, 0x74, 0x71, 0xc3, 0xa7, 0xe3, 0x25, 0x34, 0x60, 0x96,
+  0xb2, 0xe5, 0x83, 0xc6, 0xf5, 0x3c, 0x1c, 0x9e, 0x9a, 0x36, 0x83, 0x03,
+  0x0e, 0x8e, 0x6a, 0x6f, 0xeb, 0xf2, 0xa7, 0xe6, 0x7a, 0x30, 0x73, 0xa7,
+  0x70, 0x45, 0x6e, 0xba, 0x4e, 0x38, 0xae, 0x23, 0x11, 0x50, 0xcc, 0xae,
+  0x0e, 0x03, 0xae, 0x7d, 0x35, 0x88, 0x2e, 0x20, 0x0c, 0x2e, 0x17, 0x7c,
+  0x7a, 0x22, 0xb8, 0x2e, 0xf5, 0xbb, 0x5a, 0x73, 0x18, 0x7c, 0xb8, 0xa3,
+  0x70, 0xf6, 0x55, 0x0e, 0x5f, 0x85, 0x6d, 0xa6, 0xc1, 0x77, 0x44, 0xf4,
+  0xfb, 0x75, 0x96, 0xe1, 0xbd, 0x03, 0x24, 0xd9, 0xcc, 0x8b, 0x62, 0x0a,
+  0xa7, 0xcd, 0x24, 0x1b, 0x17, 0xdb, 0xa4, 0xf0, 0x16, 0xdb, 0x36, 0xc0,
+  0x8a, 0x7b, 0xc6, 0x98, 0xeb, 0x70, 0xe8, 0xe6, 0xc6, 0x36, 0x11, 0x48,
+  0xde, 0x6e, 0x77, 0xa7, 0x2b, 0x61, 0x1d, 0xa2, 0x5d, 0x9e, 0xaa, 0x2d,
+  0xf1, 0xab, 0xf9, 0xf2, 0xf2, 0x74, 0x28, 0x72, 0x45, 0x5d, 0x32, 0x5c,
+  0xb2, 0xae, 0x62, 0xbb, 0x13, 0x36, 0x8e, 0xfb, 0x4a, 0xee, 0x80, 0xe1,
+  0xf0, 0x10, 0x1f, 0x0e, 0x97, 0xac, 0x16, 0x50, 0x37, 0xf9, 0x2a, 0x52,
+  0x25, 0xb8, 0xd6, 0x1c, 0xcf, 0xd6, 0xe6, 0x27, 0x66, 0xae, 0x2c, 0x5f,
+  0x0d, 0xae, 0x92, 0x49, 0x96, 0xc7, 0x03, 0x62, 0xd5, 0x44, 0x92, 0xf0,
+  0x84, 0x60, 0xae, 0x74, 0x5c, 0xdf, 0xd3, 0xec, 0x31, 0xcd, 0x4f, 0x8e,
+  0xf8, 0xe9, 0x3a, 0x39, 0xd1, 0xb5, 0x9d, 0x14, 0x1f, 0xd6, 0xc8, 0x70,
+  0x71, 0x98, 0xb3, 0x8c, 0xad, 0xa5, 0x45, 0x1b, 0xdb, 0xb4, 0x53, 0xd3,
+  0x72, 0xcb, 0xc1, 0xee, 0x58, 0x61, 0x0c, 0x34, 0xc8, 0x05, 0x1b, 0xb9,
+  0x92, 0x49, 0x3b, 0x77, 0xb8, 0x30, 0xd5, 0x26, 0xf2, 0x4f, 0x7a, 0x83,
+  0x5a, 0x3d, 0x82, 0x80, 0x18, 0xe3, 0x75, 0x96, 0x13, 0xc3, 0x9b, 0x15,
+  0x0d, 0xd2, 0x12, 0xff, 0xb3, 0xea, 0x57, 0x34, 0x70, 0x31, 0x60, 0x96,
+  0xcb, 0x5c, 0x16, 0x7f, 0x39, 0x0f, 0x3a, 0xa0, 0x65, 0x5b, 0xce, 0xe0,
+  0x35, 0xb6, 0x55, 0x68, 0xe7, 0x98, 0xb6, 0x26, 0xc2, 0x73, 0x9c, 0xfc,
+  0x09, 0x6b, 0x40, 0x21, 0x5a, 0xd4, 0x72, 0xee, 0xbd, 0x91, 0xa2, 0x9d,
+  0xb3, 0x1e, 0x5e, 0x97, 0x4f, 0x9c, 0xd7, 0x21, 0x4f, 0xf8, 0x59, 0x7e,
+  0x93, 0x16, 0x31, 0xcb, 0xab, 0x4b, 0x85, 0xf3, 0xd8, 0xe7, 0x85, 0x67,
+  0x9e, 0xfc, 0x92, 0x54, 0xca, 0x8c, 0xfa, 0xa9, 0x9f, 0xf1, 0x37, 0xf1,
+  0x43, 0x3a, 0x5b, 0xce, 0xc4, 0x9e, 0x2d, 0x26, 0x00, 0x7d, 0x32, 0xf2,
+  0xbe, 0x39, 0xe2, 0x87, 0xd9, 0x7d, 0xed, 0x98, 0xd7, 0x2c, 0xca, 0xce,
+  0xaa, 0x8f, 0x39, 0xf1, 0x77, 0x24, 0xb5, 0x0d, 0x54, 0xdb, 0x53, 0x73,
+  0xdb, 0x8c, 0x7d, 0x3e, 0x72, 0x67, 0x07, 0xed, 0x44, 0x8b, 0x9b, 0xb8,
+  0x48, 0x98, 0x85, 0xd1, 0xcd, 0xda, 0x36, 0x55, 0x12, 0xde, 0x0a, 0xf7,
+  0x46, 0xd2, 0xe0, 0xd7, 0xb4, 0x99, 0x24, 0x38, 0xe3, 0x82, 0xa6, 0xe5,
+  0x45, 0x3c, 0x80, 0x5c, 0x79, 0x2d, 0x36, 0x86, 0x19, 0xdd, 0xba, 0xb3,
+  0xf8, 0x01, 0xab, 0x62, 0x42, 0xdc, 0xaf, 0x45, 0xc9, 0x2a, 0x1b, 0x07,
+  0x9b, 0x50, 0x93, 0x65, 0x5e, 0x42, 0x10, 0x61, 0xc9, 0xbc, 0xbe, 0x09,
+  0xce, 0x60, 0x94, 0x29, 0x8f, 0xc5, 0x93, 0xce, 0x2c, 0x6e, 0xb7, 0x9d,
+  0x98, 0xf3, 0xd9, 0x0e, 0x6b, 0x22, 0x57, 0x7c, 0x05, 0xeb, 0x7a, 0x53,
+  0x80, 0x5d, 0x4c, 0x13, 0xd0, 0x90, 0x53, 0xd2, 0x06, 0xea, 0xad, 0x92,
+  0x46, 0x8a, 0xa8, 0xd2, 0x4c, 0x45, 0x4d, 0x8a, 0x27, 0x6d, 0x7a, 0x6a,
+  0x1c, 0x48, 0x8b, 0x18, 0x5d, 0x0c, 0xa3, 0x25, 0xf3, 0xa9, 0x58, 0x5b,
+  0x73, 0xcd, 0x79, 0x5d, 0x0b, 0xef, 0xd6, 0x9a, 0x33, 0x63, 0x06, 0x28,
+  0x65, 0xb3, 0xd8, 0x82, 0x5a, 0x3a, 0xf7, 0x62, 0x24, 0xf3, 0xcf, 0xdb,
+  0x79, 0x76, 0x4f, 0xda, 0xe6, 0x3c, 0x93, 0xbe, 0x6c, 0x7d, 0x79, 0xec,
+  0x0d, 0x6e, 0x94, 0xe8, 0x8d, 0xd3, 0x78, 0xb2, 0x74, 0xf2, 0x92, 0xd0,
+  0x9c, 0x49, 0xcd, 0x36, 0xd0, 0x56, 0xbb, 0xa3, 0x4a, 0xcf, 0xa1, 0xfb,
+  0x37, 0x29, 0x43, 0x21, 0xde, 0x34, 0x2b, 0xe7, 0xfb, 0x9a, 0xc4, 0xc5,
+  0x4d, 0x2f, 0xea, 0xf4, 0x3b, 0xbd, 0x16, 0x8a, 0xab, 0xcb, 0xc6, 0x36,
+  0x2e, 0x27, 0x2c, 0xb5, 0xcb, 0xe9, 0xaa, 0xa8, 0xeb, 0x38, 0x99, 0x78,
+  0x48, 0xac, 0xeb, 0x42, 0xa7, 0x57, 0xcb, 0x27, 0x5f, 0xf8, 0xbe, 0x31,
+  0xa1, 0xc7, 0xfb, 0x9b, 0x6c, 0xda, 0x7a, 0x82, 0x02, 0x55, 0x3d, 0xe3,
+  0x66, 0x60, 0x3d, 0x64, 0x17, 0x30, 0x4b, 0xd2, 0x35, 0x26, 0x12, 0x8d,
+  0xa7, 0x49, 0x9c, 0x4f, 0x57, 0xaa, 0xc5, 0xd5, 0x4f, 0xd0, 0x9d, 0x4c,
+  0x85, 0x6d, 0xbc, 0x31, 0x51, 0x67, 0x3e, 0xe7, 0xf5, 0x55, 0xb7, 0x56,
+  0x32, 0x91, 0xa0, 0x89, 0x52, 0x4c, 0xf9, 0xba, 0x6a, 0xa2, 0x46, 0xdc,
+  0xa5, 0x6c, 0x35, 0x6a, 0xac, 0x76, 0x92, 0x4c, 0x46, 0xf1, 0xf8, 0x16,
+  0x2b, 0x8d, 0x36, 0xc5, 0x75, 0xc5, 0xe7, 0xcf, 0x19, 0x9a, 0x88, 0x94,
+  0x6f, 0xe8, 0xe0, 0x15, 0x69, 0xb9, 0x8c, 0xd7, 0x9d, 0xd8, 0xaa, 0xd0,
+  0xfe, 0xc1, 0x43, 0x5b, 0xa5, 0xe5, 0x36, 0xdd, 0x79, 0xcd, 0x91, 0x3e,
+  0xc4, 0x91, 0x26, 0xd1, 0x6c, 0xbe, 0x24, 0xd9, 0x9d, 0xd8, 0x6a, 0x76,
+  0x75, 0x45, 0x04, 0xf2, 0x79, 0xc3, 0x74, 0x20, 0x8f, 0x6c, 0x5f, 0x68,
+  0x20, 0x95, 0x3b, 0x62, 0x55, 0xf7, 0x2f, 0x5f, 0xd8, 0xb2, 0x4a, 0xd7,
+  0x29, 0xef, 0x45, 0x24, 0xcd, 0x35, 0x4d, 0x66, 0xf5, 0x27, 0x22, 0xbf,
+  0xbe, 0xe2, 0x23, 0x09, 0xc2, 0xb0, 0x46, 0x2b, 0x51, 0xaa, 0xe3, 0xb2,
+  0x1e, 0xfd, 0x61, 0x4c, 0xfa, 0x36, 0x5d, 0x2c, 0x78, 0xb3, 0x10, 0xa0,
+  0xe1, 0x4c, 0x3c, 0xdc, 0xda, 0x28, 0xb9, 0x4e, 0xe7, 0xf3, 0x30, 0x54,
+  0x26, 0x5b, 0xe6, 0x63, 0xa7, 0xc0, 0x8e, 0x12, 0x3a, 0x1f, 0xf5, 0xe6,
+  0xcc, 0x24, 0xe1, 0x9d, 0xa8, 0x6a, 0xc2, 0x99, 0x20, 0xea, 0xc6, 0xd8,
+  0xcf, 0xc9, 0x95, 0xec, 0x09, 0x54, 0x0c, 0xb5, 0x88, 0xb5, 0x1d, 0x99,
+  0xd7, 0xde, 0xee, 0x63, 0xae, 0x8d, 0xe1, 0xc9, 0xff, 0x3c, 0xf6, 0x0e,
+  0x6f, 0x33, 0x42, 0x90, 0x16, 0xc3, 0xd4, 0xdd, 0x20, 0x87, 0x77, 0x74,
+  0xd7, 0x77, 0xfa, 0x87, 0x51, 0xbf, 0x83, 0x81, 0x54, 0x3c, 0x17, 0xcb,
+  0x32, 0xa3, 0xe3, 0xad, 0xa1, 0x01, 0x88, 0xee, 0x62, 0x7a, 0x63, 0xdd,
+  0x2a, 0x4f, 0xb6, 0xc5, 0xff, 0x93, 0x35, 0xf8, 0x15, 0xb6, 0x50, 0x16,
+  0xdb, 0x66, 0x09, 0x33, 0x54, 0xa9, 0x6e, 0x13, 0xb1, 0x60, 0xc8, 0xfe,
+  0x88, 0x9b, 0x71, 0x1b, 0xea, 0xb1, 0xb8, 0xcc, 0x9b, 0xaa, 0x82, 0x1a,
+  0x8a, 0xc5, 0x2d, 0xd8, 0xc2, 0x02, 0x7e, 0xbd, 0x1b, 0xa8, 0x2f, 0xdc,
+  0x82, 0xd4, 0x84, 0xbc, 0x3e, 0x8e, 0x8a, 0xcf, 0x87, 0x48, 0xfa, 0xaf,
+  0x24, 0xd3, 0xd4, 0x4c, 0x1e, 0xe6, 0xd6, 0xea, 0x55, 0xa3, 0x37, 0xa4,
+  0xcd, 0x36, 0x2b, 0x07, 0x5d, 0xd0, 0x24, 0x12, 0xc5, 0x1c, 0x9a, 0xc2,
+  0xa6, 0x12, 0xf6, 0x77, 0xab, 0xb4, 0x19, 0xdd, 0xa4, 0x34, 0xf6, 0x7c,
+  0x7c, 0xb3, 0xe2, 0xeb, 0x82, 0x0d, 0x90, 0xec, 0xbc, 0xb9, 0xf4, 0xb3,
+  0xac, 0xb3, 0x2d, 0xf4, 0xa1, 0x56, 0xc1, 0x94, 0x35, 0x06, 0xd6, 0x87,
+  0xb2, 0xb9, 0xd1, 0x4f, 0x6d, 0x7c, 0x44, 0x16, 0x37, 0x4c, 0xb4, 0xc9,
+  0x94, 0x25, 0x00, 0x5a, 0xc0, 0xb6, 0xd1, 0xf5, 0xb3, 0x80, 0x83, 0x63,
+  0xdb, 0xe8, 0x7e, 0xa1, 0xc6, 0x99, 0x13, 0x8a, 0x01, 0x4b, 0xba, 0x62,
+  0x2b, 0xac, 0xf4, 0x46, 0x97, 0xd1, 0x94, 0x2f, 0xc4, 0x55, 0xad, 0x39,
+  0xf5, 0x49, 0xe9, 0xeb, 0xb6, 0xf6, 0xe6, 0x93, 0xaa, 0x6f, 0xe7, 0x65,
+  0xa6, 0x5f, 0xd9, 0xd5, 0x67, 0xab, 0x22, 0x3a, 0x55, 0x5d, 0xab, 0x97,
+  0xe0, 0x54, 0xc4, 0xf7, 0xf4, 0xfb, 0x57, 0x65, 0xc3, 0xca, 0x19, 0x6c,
+  0x69, 0x75, 0xa7, 0xa7, 0x57, 0xf0, 0xe9, 0x6d, 0x31, 0xf7, 0x21, 0x4a,
+  0x29, 0xa3, 0xd3, 0xd7, 0x4c, 0x6d, 0x87, 0x17, 0xf4, 0x33, 0x35, 0xa7,
+  0x1e, 0xb3, 0x75, 0x04, 0x99, 0xb2, 0x42, 0xfe, 0xe6, 0xdb, 0x61, 0xb4,
+  0x79, 0x36, 0xdc, 0x7e, 0xf2, 0x62, 0x67, 0xab, 0xde, 0x16, 0xaf, 0x14,
+  0x24, 0x96, 0x56, 0xa3, 0xed, 0x70, 0x9b, 0x03, 0x6a, 0xb7, 0x10, 0xff,
+  0x7c, 0xc7, 0x4a, 0x6f, 0xc5, 0xcc, 0x72, 0x7e, 0xfc, 0xc6, 0xec, 0x61,
+  0xd8, 0xad, 0x38, 0x3a, 0xa4, 0xf1, 0xb0, 0x2d, 0xbf, 0x49, 0x38, 0x17,
+  0xc9, 0x9d, 0x59, 0xd5, 0x4e, 0x59, 0xe1, 0xc1, 0xa9, 0x60, 0xab, 0x9d,
+  0xa9, 0x87, 0x8b, 0x84, 0x39, 0x81, 0x7f, 0x5f, 0x59, 0x1b, 0xe4, 0x84,
+  0xe6, 0x69, 0x1d, 0x41, 0x46, 0x2d, 0x68, 0x48, 0x39, 0x64, 0x7f, 0x0e,
+  0x99, 0x98, 0xfc, 0x76, 0x27, 0xcc, 0xd6, 0xe4, 0xc0, 0x9c, 0xbd, 0xf0,
+  0xf5, 0x7e, 0x1a, 0xf8, 0x5f, 0x27, 0x6c, 0x71, 0x62, 0x23, 0xc9, 0xcb,
+  0x47, 0x2c, 0xe0, 0x24, 0xb4, 0xaa, 0xc4, 0x9d, 0x44, 0xc1, 0xe5, 0x84,
+  0xf7, 0x60, 0x9f, 0x46, 0xfc, 0x83, 0x79, 0x6e, 0x02, 0x0b, 0x79, 0xab,
+  0xf8, 0xdd, 0x73, 0x71, 0x7c, 0xb8, 0xc9, 0xe2, 0x95, 0xac, 0x58, 0x1c,
+  0x8d, 0xf2, 0xec, 0x9e, 0x03, 0x88, 0x25, 0x04, 0x41, 0x68, 0x8f, 0xad,
+  0x15, 0x88, 0x2a, 0x66, 0x31, 0xbb, 0x7e, 0x3d, 0xd3, 0x9c, 0xc5, 0x45,
+  0xc3, 0xe2, 0xc1, 0xd7, 0x97, 0x6f, 0x4e, 0xb1, 0xad, 0xd0, 0x60, 0x44,
+  0xfb, 0x91, 0x13, 0x5a, 0x2c, 0x47, 0x24, 0xdb, 0xf3, 0xdd, 0x5f, 0x3a,
+  0xb3, 0x4b, 0x18, 0x03, 0x6c, 0x94, 0x1b, 0x23, 0x30, 0x4a, 0x79, 0xf1,
+  0xa2, 0xcd, 0xea, 0xaf, 0x8c, 0xdf, 0xcc, 0xb3, 0xd8, 0x4c, 0x12, 0x71,
+  0x48, 0x8f, 0x59, 0x2d, 0xea, 0x94, 0x43, 0x5a, 0xf9, 0x54, 0x4d, 0x24,
+  0xdb, 0x0f, 0x7d, 0x52, 0xdc, 0xfb, 0x3c, 0xb8, 0x3e, 0x35, 0x2f, 0x7e,
+  0x4d, 0xf6, 0x0e, 0x1f, 0x92, 0x28, 0xcc, 0x84, 0x42, 0xcd, 0xf7, 0x5f,
+  0xd3, 0x4e, 0xf0, 0x13, 0x8d, 0xdd, 0xf3, 0x7b, 0xe4, 0x6f, 0x55, 0x2c,
+  0x1d, 0x44, 0x5b, 0xf9, 0x4a, 0x0c, 0x75, 0x03, 0x9c, 0x66, 0x0e, 0xaa,
+  0x56, 0xff, 0x02, 0xf1, 0xf1, 0x69, 0x9d, 0x3b, 0xb0, 0xf1, 0x38, 0x5f,
+  0x49, 0x20, 0x83, 0xda, 0x76, 0xcd, 0xc7, 0xe5, 0xcc, 0x9c, 0xd2, 0xa6,
+  0x3c, 0xe9, 0xad, 0xc9, 0x19, 0xab, 0xea, 0xf5, 0xf3, 0xae, 0x4e, 0x5a,
+  0x7e, 0xed, 0x2e, 0x9e, 0x2e, 0xa1, 0xbd, 0xc6, 0xb2, 0x0f, 0xe2, 0xf5,
+  0x45, 0x14, 0x61, 0xbc, 0x42, 0xe3, 0xda, 0xb0, 0x5b, 0x83, 0x56, 0x59,
+  0x89, 0xc3, 0x4c, 0xe4, 0x7a, 0x2f, 0x12, 0x17, 0x81, 0x60, 0x67, 0xa0,
+  0x6a, 0xe9, 0xb4, 0xc8, 0x52, 0x8b, 0x34, 0xa8, 0x0f, 0xce, 0x45, 0x1e,
+  0xf4, 0x02, 0xa7, 0x4b, 0xca, 0xd7, 0x40, 0x40, 0xc6, 0x81, 0xef, 0x75,
+  0x96, 0xe4, 0xd7, 0x88, 0x9e, 0xca, 0x48, 0xda, 0x6b, 0xda, 0x74, 0xc4,
+  0x67, 0x17, 0xbb, 0xe8, 0x30, 0x08, 0xef, 0x7f, 0xe8, 0x8b, 0x43, 0x04,
+  0xda, 0xe4, 0x92, 0xce, 0xa5, 0x49, 0xf5, 0xdd, 0xfe, 0x24, 0x52, 0xdf,
+  0xd2, 0x9c, 0x56, 0x82, 0xf6, 0xb1, 0x29, 0xe8, 0x4c, 0xa7, 0xaf, 0xa6,
+  0x24, 0x76, 0xad, 0xba, 0x91, 0x86, 0x2e, 0x69, 0x40, 0x4b, 0xa9, 0x76,
+  0x3a, 0x44, 0x61, 0x8c, 0x6f, 0x96, 0xf3, 0x5b, 0xb3, 0xcd, 0x4d, 0x49,
+  0xe8, 0x2e, 0x22, 0x44, 0xdf, 0xd7, 0x9a, 0xeb, 0x06, 0x9d, 0xfd, 0x21,
+  0x6c, 0xbb, 0x75, 0x95, 0x45, 0x79, 0xe0, 0x18, 0xca, 0xc0, 0x21, 0xe5,
+  0x2e, 0x2f, 0x89, 0x40, 0x8d, 0xbe, 0xe8, 0x99, 0xeb, 0xb5, 0x0c, 0xfc,
+  0x00, 0x71, 0xf3, 0x1c, 0x7a, 0xc5, 0x03, 0x0e, 0x04, 0xd7, 0xa0, 0x38,
+  0x6d, 0x88, 0x97, 0xf7, 0xcd, 0xdf, 0xe8, 0x55, 0x46, 0xe7, 0x6f, 0x68,
+  0xbb, 0x0d, 0x85, 0xde, 0xbd, 0x6f, 0xcf, 0x25, 0x38, 0xe0, 0xbc, 0x15,
+  0x26, 0xff, 0xa1, 0x6b, 0x98, 0xeb, 0xf4, 0x2a, 0x6c, 0x8a, 0x93, 0x4c,
+  0xb3, 0xee, 0xc4, 0xbd, 0x09, 0xc3, 0x1c, 0x6b, 0xce, 0x7f, 0x23, 0x88,
+  0x41, 0x74, 0x9e, 0x49, 0x3c, 0x36, 0x46, 0xd1, 0xa6, 0x6e, 0xda, 0x7d,
+  0xc2, 0x93, 0x9e, 0x44, 0xdd, 0xab, 0x2c, 0x1b, 0xc5, 0x79, 0x57, 0xb7,
+  0x10, 0x7e, 0xe8, 0x91, 0x5a, 0xd9, 0x34, 0x06, 0x07, 0xd3, 0xf9, 0x82,
+  0x9e, 0xab, 0x53, 0xe8, 0x28, 0xae, 0xd8, 0x45, 0xc2, 0x73, 0xf7, 0x18,
+  0x47, 0xbe, 0x54, 0x15, 0xa4, 0x54, 0x13, 0x37, 0xa4, 0xec, 0x29, 0xa4,
+  0x97, 0x9a, 0xdb, 0x84, 0xbd, 0x76, 0xea, 0xfd, 0x5e, 0xe4, 0x8d, 0xee,
+  0x59, 0x20, 0x42, 0x0c, 0x2d, 0xd1, 0x56, 0x91, 0x25, 0x77, 0x61, 0x34,
+  0xf5, 0x6f, 0x47, 0x2c, 0xbc, 0x6c, 0xb4, 0xa1, 0x47, 0xb8, 0x3f, 0x64,
+  0x1e, 0x2e, 0xe8, 0x5b, 0xe2, 0xd8, 0x22, 0x0b, 0xf9, 0x6e, 0xf0, 0xb8,
+  0x96, 0x40, 0x9c, 0x1e, 0xcf, 0x10, 0x11, 0x4f, 0x7a, 0x46, 0xe6, 0xc9,
+  0xbd, 0x3a, 0x0d, 0x99, 0xb9, 0xf2, 0x55, 0xc0, 0x7c, 0x5b, 0x4c, 0x5b,
+  0x63, 0x48, 0x1f, 0x85, 0xc5, 0x87, 0xd5, 0x95, 0x2b, 0x5e, 0x02, 0xec,
+  0xdc, 0x3f, 0x79, 0x29, 0x9b, 0x52, 0x09, 0x8f, 0x65, 0xc6, 0x86, 0x29,
+  0xd3, 0xf0, 0x1b, 0xeb, 0xc0, 0x51, 0x0f, 0x12, 0x9d, 0x8b, 0x80, 0x25,
+  0x59, 0xd4, 0xb8, 0xd0, 0x1c, 0x8e, 0x91, 0xac, 0x88, 0x63, 0xfe, 0x0d,
+  0x2a, 0x71, 0x4c, 0xf4, 0x97, 0x10, 0x4a, 0xcf, 0x2d, 0xb0, 0xde, 0x68,
+  0x12, 0xa3, 0xad, 0x04, 0xea, 0xc2, 0xc4, 0xd2, 0x46, 0x48, 0x89, 0x84,
+  0xbb, 0xf1, 0x22, 0xc3, 0xb8, 0xe6, 0xe2, 0x99, 0x48, 0x75, 0x67, 0x5e,
+  0x5f, 0xf8, 0x63, 0x46, 0xf3, 0x1d, 0x54, 0x25, 0x8e, 0xcf, 0x06, 0x3b,
+  0x5b, 0x4d, 0xa1, 0x93, 0x68, 0xe3, 0xf0, 0xab, 0x13, 0x18, 0x4d, 0xa7,
+  0x69, 0xcc, 0x19, 0x0d, 0xdc, 0x87, 0xcc, 0x45, 0xf3, 0x4b, 0x8c, 0x88,
+  0xae, 0xd9, 0xee, 0xe7, 0x98, 0x6f, 0x18, 0x63, 0xe7, 0xcc, 0x22, 0xbc,
+  0xd2, 0x9a, 0x9f, 0x13, 0x1b, 0x7b, 0xce, 0x24, 0xb2, 0x33, 0x36, 0xae,
+  0xe1, 0x42, 0x36, 0x62, 0xef, 0x08, 0x68, 0x5d, 0x3b, 0xf4, 0xce, 0xbc,
+  0x81, 0x9d, 0x9e, 0x31, 0xac, 0xa8, 0xb4, 0x5c, 0x60, 0x5a, 0x0d, 0x2b,
+  0xad, 0xdf, 0x64, 0x49, 0xd9, 0x49, 0x8a, 0xfd, 0x8d, 0x86, 0x95, 0x05,
+  0xdd, 0xb7, 0xe7, 0xbb, 0x39, 0x69, 0x44, 0x1c, 0xc9, 0xe8, 0xc4, 0xb3,
+  0xac, 0x50, 0xc8, 0x10, 0xb9, 0x86, 0xc5, 0x12, 0xac, 0x7f, 0x7b, 0x73,
+  0xd0, 0x65, 0xff, 0x93, 0x19, 0x22, 0x64, 0x4d, 0xa2, 0x70, 0x96, 0xa6,
+  0x2d, 0x93, 0x21, 0x6c, 0xcd, 0x42, 0xd8, 0xf8, 0xef, 0xb8, 0xe1, 0x65,
+  0x76, 0xa1, 0x3f, 0xab, 0xe8, 0x15, 0xf3, 0xef, 0x2f, 0xd4, 0xed, 0xcf,
+  0xc6, 0xe6, 0x50, 0x7b, 0x17, 0x2d, 0x53, 0x9d, 0xe0, 0x22, 0x9a, 0x60,
+  0x19, 0xda, 0x9b, 0x83, 0x03, 0x3e, 0x5c, 0x3d, 0x21, 0x3f, 0x0e, 0x4c,
+  0x2d, 0x24, 0x69, 0xab, 0xe1, 0xf2, 0x7c, 0xf5, 0xe1, 0xd5, 0xfb, 0xa5,
+  0xcb, 0xf7, 0xf8, 0xea, 0x5d, 0x22, 0xca, 0x98, 0x64, 0x04, 0x44, 0x97,
+  0xbc, 0x0a, 0xc2, 0x1d, 0x58, 0xbb, 0x97, 0x60, 0x3c, 0xef, 0x3f, 0xae,
+  0x1e, 0xcd, 0xc0, 0x44, 0xf3, 0xea, 0xd7, 0xda, 0x75, 0x10, 0x23, 0x5c,
+  0x32, 0x3c, 0xf8, 0xf6, 0xe6, 0x84, 0xed, 0x61, 0xef, 0xc3, 0x78, 0x43,
+  0xbd, 0x95, 0xd1, 0x02, 0xf5, 0x97, 0x3c, 0x2c, 0xd4, 0x44, 0x8d, 0xd3,
+  0xd7, 0x22, 0xcc, 0x55, 0x64, 0xba, 0x89, 0xdd, 0xa9, 0x8d, 0xf9, 0x7d,
+  0x61, 0x4c, 0xfc, 0x43, 0x93, 0xab, 0x04, 0x47, 0x20, 0x2c, 0x27, 0xbc,
+  0xd8, 0x2b, 0xa6, 0xa5, 0x16, 0x4b, 0x97, 0x71, 0x32, 0x1f, 0x00, 0x29,
+  0xf9, 0x11, 0xc6, 0xde, 0xb7, 0x7a, 0xd5, 0x35, 0x8b, 0x55, 0xec, 0xb5,
+  0x8d, 0x6e, 0x6f, 0x2e, 0x65, 0x85, 0xc9, 0xb6, 0x8f, 0x15, 0x97, 0xd6,
+  0xed, 0xfb, 0x3f, 0x6c, 0x8a, 0x62, 0xa3, 0x03, 0x35, 0x08, 0x39, 0xb0,
+  0x39, 0x53, 0xbd, 0x3a, 0xa4, 0xb6, 0xd1, 0xfd, 0x15, 0x71, 0xba, 0xe8,
+  0x1a, 0x26, 0x80, 0xfb, 0x89, 0x2d, 0x72, 0x6c, 0x6c, 0x9a, 0x42, 0x34,
+  0x4a, 0x25, 0xd6, 0xf9, 0x95, 0x57, 0x67, 0xfa, 0x08, 0xf4, 0x51, 0xaa,
+  0x1d, 0x80, 0x0e, 0x1f, 0x21, 0x56, 0x47, 0x9c, 0xed, 0x74, 0xb9, 0x96,
+  0x02, 0xcd, 0xa7, 0xdc, 0x7e, 0xdb, 0x49, 0x68, 0x42, 0x21, 0x4e, 0xf7,
+  0x23, 0x3c, 0xb8, 0xd6, 0xeb, 0x1e, 0x07, 0xdf, 0x34, 0x7d, 0x88, 0x76,
+  0xc9, 0xb1, 0x61, 0x14, 0x02, 0x27, 0x92, 0x0f, 0x68, 0xc5, 0xef, 0xb3,
+  0x5c, 0x83, 0xb4, 0x46, 0x09, 0xb8, 0x3e, 0x9f, 0xd1, 0x0c, 0x5e, 0x25,
+  0xb6, 0x71, 0x73, 0x60, 0x5c, 0x33, 0x64, 0x87, 0x6d, 0xd6, 0x08, 0x37,
+  0x80, 0x7d, 0xc3, 0x02, 0x7b, 0x9a, 0xa1, 0x3c, 0x6a, 0xa7, 0x42, 0x1e,
+  0x09, 0xcd, 0x75, 0xa9, 0xc1, 0xbd, 0xed, 0x0e, 0x3b, 0x44, 0xea, 0x4a,
+  0x3e, 0xaf, 0x2c, 0xa5, 0x11, 0x05, 0x0f, 0x31, 0x70, 0x34, 0x99, 0x3f,
+  0xfe, 0x11, 0xff, 0x3b, 0x5e, 0xf5, 0xd1, 0x82, 0x6c, 0x7c, 0xb1, 0x4c,
+  0x56, 0x95, 0x09, 0xfe, 0x05, 0x1b, 0x45, 0x20, 0x06, 0x65, 0x63, 0x3a,
+  0x27, 0x39, 0x72, 0x1b, 0x1b, 0x9a, 0x1a, 0x9d, 0x22, 0x58, 0xac, 0xc4,
+  0x2b, 0x3d, 0x4e, 0xaa, 0x7b, 0x8e, 0xc8, 0xfc, 0x7e, 0xb2, 0xc8, 0xcb,
+  0x96, 0x38, 0x71, 0x09, 0x75, 0xf5, 0xa9, 0x27, 0xf2, 0xb4, 0xb8, 0x42,
+  0x7d, 0x38, 0xfa, 0xf1, 0xf9, 0xc5, 0x25, 0x26, 0x7a, 0xca, 0xbf, 0xa8,
+  0xf1, 0xb6, 0x3e, 0x0e, 0x18, 0x1d, 0x34, 0x16, 0x95, 0x23, 0xc0, 0x12,
+  0xd8, 0xbd, 0x5c, 0x3e, 0xd4, 0x20, 0x48, 0xaa, 0x72, 0xe9, 0x3e, 0xf1,
+  0xf4, 0x9e, 0x93, 0x66, 0x20, 0xd1, 0x35, 0xd6, 0x56, 0x12, 0xaf, 0x2c,
+  0x1c, 0x81, 0xc7, 0xd0, 0x93, 0x3b, 0x13, 0xa3, 0x10, 0x8b, 0xb5, 0xd9,
+  0xa5, 0xce, 0xf8, 0x4b, 0x76, 0x51, 0xa8, 0x68, 0xbd, 0xc6, 0x55, 0xdb,
+  0x93, 0x7c, 0x82, 0xe9, 0x14, 0x4d, 0xf2, 0x5b, 0x51, 0x8e, 0x34, 0xbd,
+  0x98, 0xc6, 0x31, 0xf0, 0xf3, 0x94, 0x2e, 0xc4, 0x12, 0x45, 0xb4, 0x17,
+  0xe4, 0x64, 0x9b, 0x02, 0x2a, 0xc1, 0xfd, 0xac, 0x87, 0x89, 0xd8, 0x4a,
+  0xcd, 0x20, 0xcb, 0x07, 0x93, 0x76, 0x89, 0x7b, 0xe2, 0x5f, 0x66, 0x1d,
+  0x9e, 0x6f, 0x40, 0x04, 0xd0, 0x72, 0x0a, 0x45, 0xc3, 0x80, 0xa2, 0x11,
+  0xeb, 0xe6, 0x65, 0x49, 0x56, 0x9a, 0x7c, 0x21, 0x4a, 0xfb, 0x95, 0x5a,
+  0x70, 0xe3, 0x69, 0x5a, 0xae, 0x44, 0xd8, 0x1f, 0x89, 0xe2, 0xa0, 0x26,
+  0xa0, 0xb6, 0x88, 0x51, 0x5a, 0xf8, 0x49, 0x2a, 0x6f, 0xc9, 0x44, 0x75,
+  0xdb, 0x1a, 0xe4, 0x38, 0x0c, 0xd2, 0x98, 0x24, 0xa1, 0x81, 0x09, 0x9e,
+  0xe9, 0xc5, 0x04, 0xb9, 0xa5, 0x8a, 0x71, 0xc4, 0x6d, 0xa6, 0xe9, 0x38,
+  0x65, 0x6d, 0x49, 0x87, 0xc7, 0x0b, 0x56, 0xdf, 0x37, 0xce, 0x0b, 0xd1,
+  0x53, 0x31, 0xcf, 0xa4, 0x1d, 0xe6, 0x19, 0x3c, 0xed, 0x34, 0x96, 0x94,
+  0xb9, 0x2a, 0x59, 0x36, 0x46, 0x74, 0x84, 0x2f, 0x79, 0x5f, 0xb1, 0x21,
+  0xf0, 0x33, 0x8d, 0x6f, 0x90, 0x61, 0x2a, 0xee, 0x7d, 0x21, 0xaf, 0x51,
+  0x72, 0x13, 0xdf, 0xa5, 0x59, 0x3e, 0xa8, 0xa4, 0x1a, 0x35, 0x2d, 0x87,
+  0x05, 0xd1, 0xc4, 0xf8, 0x46, 0x36, 0x8b, 0x0f, 0x39, 0xbf, 0xab, 0xc1,
+  0x4b, 0xd0, 0xce, 0x34, 0xd1, 0x08, 0x5b, 0x04, 0x53, 0xcb, 0xf9, 0xb6,
+  0xd8, 0x67, 0xe1, 0x3e, 0x6b, 0xc4, 0xe9, 0x21, 0xd4, 0xca, 0xe5, 0xa5,
+  0xe8, 0x93, 0x71, 0x71, 0xd7, 0x7e, 0xea, 0x8a, 0xbb, 0x5f, 0x7e, 0xea,
+  0x10, 0x30, 0x0d, 0xb2, 0x3a, 0x3e, 0x1f, 0x7e, 0x1b, 0x39, 0x6f, 0x49,
+  0x5b, 0x34, 0xaf, 0x1c, 0x38, 0x3f, 0x2f, 0x90, 0x5f, 0x70, 0xe8, 0xfe,
+  0xc9, 0x53, 0xe7, 0x0e, 0x1d, 0xf5, 0xaf, 0x27, 0xed, 0xfc, 0x60, 0xf8,
+  0x6d, 0xed, 0x8c, 0x79, 0x37, 0x82, 0x25, 0x71, 0xd4, 0xe5, 0x01, 0x4e,
+  0xa2, 0xca, 0x2d, 0x28, 0x8d, 0x5b, 0xfb, 0x68, 0xf2, 0x2b, 0xee, 0x7e,
+  0x1d, 0xf2, 0xa3, 0x76, 0x1e, 0x23, 0xbf, 0x70, 0xdf, 0x5a, 0xc8, 0x8f,
+  0xa6, 0xdf, 0x20, 0x3f, 0x5b, 0xeb, 0x76, 0xfa, 0x5b, 0x47, 0x7e, 0x65,
+  0x66, 0x74, 0x0b, 0xd2, 0x0b, 0x32, 0xdc, 0x9a, 0x44, 0x17, 0x90, 0x52,
+  0x2d, 0xae, 0xb1, 0xdd, 0x72, 0xff, 0x1d, 0xe2, 0x07, 0x34, 0xc9, 0x4f,
+  0x32, 0x90, 0x83, 0x40, 0xc9, 0x6a, 0xe2, 0x37, 0xc2, 0x36, 0x37, 0x5a,
+  0x43, 0xf7, 0x03, 0x27, 0xab, 0x84, 0xd5, 0xba, 0x0c, 0x5e, 0x62, 0xba,
+  0xc1, 0x04, 0x35, 0xe2, 0x93, 0xdb, 0xd5, 0x6e, 0x36, 0x5a, 0xe4, 0x94,
+  0x58, 0x23, 0xbd, 0x53, 0xc4, 0x04, 0xb0, 0x15, 0x9c, 0xde, 0xa4, 0x56,
+  0x06, 0x1a, 0x7f, 0x5d, 0x84, 0x72, 0x9e, 0x0d, 0x57, 0x22, 0x41, 0x9b,
+  0xec, 0x6c, 0x2e, 0x1e, 0x00, 0xb1, 0x91, 0x21, 0x98, 0x25, 0xb6, 0x78,
+  0x16, 0x07, 0x36, 0x31, 0x77, 0xfe, 0x06, 0x60, 0x4d, 0xf8, 0x08, 0x81,
+  0xba, 0x55, 0x38, 0x08, 0x87, 0x95, 0x29, 0xff, 0x0e, 0x42, 0xde, 0x9a,
+  0x10, 0x55, 0x5e, 0x0d, 0xc9, 0x3a, 0x13, 0xbe, 0xdb, 0x8c, 0x53, 0x50,
+  0x3e, 0x5c, 0x8b, 0x84, 0x6d, 0x2c, 0x32, 0x1c, 0x73, 0x2e, 0x37, 0xc2,
+  0x42, 0x3b, 0x93, 0xd0, 0x2f, 0xea, 0x42, 0x9a, 0xc4, 0x08, 0x13, 0xe7,
+  0xa1, 0xd3, 0xa3, 0xe1, 0x10, 0xe1, 0xf9, 0x75, 0x74, 0xe5, 0x3a, 0x1a,
+  0x7d, 0xb4, 0x94, 0xb7, 0x38, 0x8a, 0x16, 0xc6, 0xc4, 0x3c, 0xf9, 0x0d,
+  0xbd, 0x90, 0x09, 0x2d, 0x18, 0xf2, 0x14, 0x99, 0x30, 0x49, 0xf8, 0x5c,
+  0x97, 0x36, 0x25, 0xbb, 0xcf, 0xc1, 0xe0, 0x17, 0xfa, 0xf4, 0x79, 0x7c,
+  0x9d, 0x70, 0x32, 0xa3, 0x38, 0x93, 0x7c, 0xd4, 0x91, 0xe6, 0xc3, 0xb7,
+  0xa7, 0x4d, 0x5d, 0x5a, 0x1c, 0x6c, 0x6b, 0xda, 0x51, 0x25, 0xd1, 0x08,
+  0xc9, 0x62, 0x3e, 0xcd, 0x48, 0x16, 0xbf, 0x19, 0x9a, 0x6c, 0x01, 0xd2,
+  0x95, 0x18, 0x70, 0x87, 0x7c, 0x20, 0xc6, 0xa5, 0xce, 0x9f, 0xd9, 0xb9,
+  0xdc, 0xb1, 0x01, 0x46, 0x6e, 0xca, 0x4d, 0x6b, 0x29, 0x3f, 0xe3, 0xb5,
+  0xd2, 0xaa, 0x4f, 0x9a, 0x87, 0x2a, 0x27, 0x54, 0xe3, 0x05, 0xf8, 0x79,
+  0x9c, 0x2c, 0xe2, 0x9d, 0x24, 0xe8, 0xd5, 0xc9, 0x8a, 0x04, 0x3f, 0x96,
+  0xb4, 0x4f, 0x75, 0x54, 0xfb, 0x7a, 0x44, 0x44, 0x1f, 0xb1, 0x31, 0x69,
+  0xaa, 0x96, 0x32, 0x4a, 0x0b, 0xe9, 0x9e, 0x32, 0x4e, 0x48, 0xdd, 0xd9,
+  0xc0, 0x7a, 0x94, 0x4b, 0x5c, 0x61, 0xeb, 0x05, 0x0f, 0x28, 0x66, 0x5d,
+  0x27, 0x05, 0x50, 0x84, 0x9b, 0xd6, 0x6f, 0xe9, 0xb5, 0x4e, 0xe6, 0xd7,
+  0x9c, 0xcc, 0xf8, 0xb2, 0x35, 0x56, 0x2a, 0x99, 0xfa, 0xf4, 0x5e, 0x8b,
+  0xa8, 0x1c, 0xe7, 0xab, 0x05, 0xb3, 0x7e, 0x79, 0x4f, 0xf9, 0x11, 0xf3,
+  0x70, 0x89, 0x9b, 0x0c, 0xb2, 0xc1, 0x07, 0x2d, 0xc1, 0x02, 0xae, 0x43,
+  0x09, 0x29, 0x85, 0x00, 0x40, 0x0b, 0x56, 0x82, 0x7b, 0xc8, 0x67, 0x7c,
+  0xd5, 0x8e, 0x96, 0xe9, 0x74, 0x22, 0xa1, 0x63, 0x1e, 0x34, 0xa4, 0xe1,
+  0xac, 0xe1, 0x86, 0x8a, 0x41, 0x35, 0x59, 0x08, 0xc9, 0xbe, 0x08, 0x91,
+  0xda, 0xe4, 0x38, 0xdd, 0x39, 0xcd, 0x7d, 0xcb, 0x84, 0x66, 0x7d, 0x43,
+  0x13, 0x15, 0xea, 0xd7, 0xd4, 0x5d, 0x9c, 0x4e, 0x71, 0x87, 0x51, 0x33,
+  0xf9, 0x72, 0x8e, 0xde, 0xab, 0x2b, 0x75, 0x97, 0xe6, 0xd9, 0x7c, 0xd6,
+  0xb4, 0x83, 0x6c, 0x5e, 0x9c, 0x0c, 0x0f, 0xa3, 0xb3, 0x61, 0x74, 0xf6,
+  0xf6, 0xf4, 0x07, 0x3e, 0x5c, 0x88, 0x38, 0x06, 0x00, 0x07, 0x77, 0x1d,
+  0xbc, 0x18, 0xdd, 0xc5, 0x79, 0x0a, 0xb5, 0xae, 0xb7, 0x9e, 0x1b, 0x0a,
+  0x24, 0x04, 0xce, 0xcf, 0xbd, 0x6d, 0xb1, 0x0f, 0x8f, 0xe4, 0x5b, 0x0b,
+  0x31, 0x82, 0x49, 0x5c, 0xa4, 0x49, 0x2e, 0xf6, 0xf0, 0xb1, 0x25, 0xf1,
+  0x2d, 0x9b, 0x39, 0x65, 0x6c, 0x33, 0x0b, 0x8f, 0xb5, 0x04, 0xb2, 0xf1,
+  0x45, 0x49, 0xdd, 0xd3, 0x44, 0x6b, 0x91, 0x1d, 0x34, 0xd1, 0x6b, 0xd1,
+  0x7f, 0xd7, 0xf8, 0xa4, 0x83, 0x48, 0xe5, 0x95, 0xde, 0xbe, 0x6c, 0x9a,
+  0x87, 0x3a, 0xee, 0xa4, 0xef, 0xe3, 0x79, 0x99, 0x67, 0x0b, 0xe2, 0xf9,
+  0x5f, 0xc5, 0xcc, 0xf2, 0x30, 0xd3, 0xa3, 0x38, 0x99, 0x35, 0xa2, 0x0f,
+  0x8a, 0x6c, 0x7c, 0x9b, 0x94, 0xea, 0x11, 0xd1, 0xbf, 0x82, 0x94, 0x35,
+  0xe8, 0x85, 0xc2, 0x37, 0x79, 0x41, 0x27, 0x74, 0x3d, 0x29, 0x01, 0x31,
+  0xc9, 0xd1, 0x50, 0x9a, 0xe6, 0x49, 0x83, 0x82, 0xa8, 0x86, 0x27, 0xf2,
+  0x69, 0xc2, 0xfb, 0x32, 0xb5, 0x7a, 0x40, 0x62, 0xff, 0x98, 0x6f, 0x1a,
+  0xf6, 0xe4, 0xbf, 0x0c, 0xfc, 0xdf, 0x3f, 0xee, 0x9b, 0x0a, 0xfa, 0x53,
+  0xfb, 0x32, 0x34, 0x43, 0xe4, 0xab, 0x57, 0x7b, 0xd0, 0x96, 0x06, 0xcd,
+  0x31, 0x7b, 0xb9, 0x6e, 0xb9, 0xb2, 0x2c, 0x13, 0x4f, 0x43, 0xeb, 0x68,
+  0x45, 0xe1, 0xfb, 0x8f, 0x24, 0xe3, 0x60, 0x28, 0x4c, 0x26, 0x6c, 0xce,
+  0x12, 0xcf, 0xe8, 0xde, 0x3a, 0x3f, 0x7e, 0xf3, 0x48, 0x68, 0x1d, 0x4c,
+  0x93, 0x0b, 0xd5, 0x3b, 0x9c, 0xd6, 0x2f, 0xe9, 0xab, 0x6e, 0xa4, 0xb5,
+  0xac, 0xdf, 0x5a, 0x73, 0x7f, 0x5b, 0x32, 0x44, 0xd1, 0x44, 0x53, 0x0b,
+  0x32, 0xcb, 0x5d, 0x75, 0xa9, 0xf2, 0xf5, 0xc4, 0x60, 0x4b, 0x4c, 0x07,
+  0x6c, 0x49, 0xd1, 0x70, 0x9b, 0x74, 0x82, 0x79, 0x74, 0x34, 0x4a, 0x4b,
+  0xe3, 0xd8, 0x84, 0x1f, 0x23, 0x59, 0x29, 0xba, 0x4d, 0x56, 0x2e, 0x80,
+  0xd7, 0x3e, 0xe3, 0x25, 0x68, 0xae, 0x9d, 0x2e, 0x09, 0x92, 0xc5, 0xe9,
+  0x97, 0x39, 0x2b, 0xfb, 0xbf, 0x8b, 0xb0, 0xff, 0x91, 0x6e, 0xab, 0x28,
+  0x91, 0xfd, 0x3e, 0x37, 0x5a, 0x7a, 0xf8, 0x1c, 0x4e, 0x35, 0x6f, 0xa4,
+  0xdb, 0x38, 0x70, 0xaa, 0xe9, 0xaa, 0x8d, 0xf5, 0x0a, 0x8a, 0x46, 0x01,
+  0x26, 0xa5, 0x59, 0xf7, 0x45, 0x69, 0x81, 0xe2, 0x88, 0xa2, 0x9f, 0xa6,
+  0xa3, 0x1c, 0xa1, 0x39, 0x22, 0x27, 0x85, 0x01, 0x73, 0x0d, 0x51, 0xc5,
+  0x13, 0x10, 0x5b, 0x91, 0xd2, 0xf1, 0x2d, 0x4e, 0x92, 0x72, 0xac, 0x70,
+  0xc3, 0x4d, 0xf4, 0x13, 0x70, 0x2a, 0xed, 0xae, 0xae, 0x7b, 0xc4, 0x65,
+  0xcc, 0xc0, 0x34, 0x9c, 0x74, 0x91, 0xce, 0x25, 0x70, 0x4b, 0x22, 0xd7,
+  0x02, 0x1e, 0xe4, 0x98, 0x10, 0x42, 0xfe, 0xdf, 0x1f, 0x9d, 0x5c, 0x28,
+  0xb3, 0x1c, 0xad, 0xd6, 0xa4, 0x6e, 0x44, 0xdb, 0x49, 0x39, 0xde, 0x5e,
+  0xdc, 0xa6, 0xdb, 0xf3, 0xa2, 0x98, 0x8c, 0xb6, 0xc2, 0x84, 0x72, 0x9e,
+  0x33, 0x07, 0xa1, 0x9c, 0x7f, 0x73, 0x38, 0xfc, 0x64, 0x77, 0x97, 0x65,
+  0xe9, 0x25, 0x35, 0xbd, 0x49, 0x6b, 0xd0, 0xc8, 0x94, 0x2b, 0x68, 0xd9,
+  0x67, 0x83, 0x22, 0xdb, 0x82, 0x02, 0xe0, 0x18, 0x2e, 0x56, 0x09, 0x81,
+  0x2c, 0x70, 0x64, 0x6a, 0x1e, 0x19, 0xdb, 0x1f, 0x7f, 0xcb, 0x78, 0x12,
+  0x21, 0x0c, 0x44, 0x3b, 0x44, 0x2f, 0xf9, 0xdf, 0x0f, 0x1e, 0x71, 0x80,
+  0xd3, 0x54, 0xb6, 0x84, 0xdf, 0x55, 0x21, 0x9f, 0x43, 0x73, 0x26, 0x51,
+  0xf8, 0x75, 0x9d, 0xae, 0xd8, 0x4c, 0x36, 0xe0, 0x79, 0xf6, 0xa2, 0xa3,
+  0xe3, 0x0b, 0x10, 0xe4, 0xf1, 0xdb, 0xaf, 0x20, 0x1c, 0x72, 0xae, 0xdd,
+  0xf5, 0x3c, 0xfd, 0x99, 0x39, 0x1d, 0xb5, 0x59, 0xc8, 0x02, 0xf3, 0x5d,
+  0xe6, 0x4f, 0x68, 0xad, 0x39, 0x5e, 0x2f, 0x5e, 0x45, 0x9c, 0xb1, 0xdf,
+  0x76, 0x99, 0x62, 0x61, 0x8c, 0x87, 0x07, 0xe1, 0xec, 0x7e, 0x25, 0x86,
+  0xc8, 0xa8, 0x42, 0xc4, 0x5c, 0xae, 0x56, 0x6d, 0x8e, 0x73, 0x8e, 0x47,
+  0xb2, 0xab, 0x41, 0xa2, 0x22, 0x99, 0x36, 0xd4, 0xc9, 0xe3, 0xa1, 0x78,
+  0xaa, 0x03, 0x43, 0x32, 0x7c, 0x23, 0x36, 0xd7, 0x7f, 0xbf, 0x59, 0x6c,
+  0xd5, 0x98, 0xa7, 0x63, 0x97, 0x6f, 0x4d, 0x1f, 0xaf, 0x1e, 0xf1, 0xa6,
+  0x06, 0xc9, 0x13, 0x8b, 0xdd, 0xf1, 0xb0, 0x5c, 0x40, 0xac, 0x78, 0x4f,
+  0x1c, 0x54, 0x95, 0xa5, 0xa7, 0x3d, 0x55, 0x99, 0x53, 0x2f, 0xb5, 0x46,
+  0xda, 0x58, 0x09, 0x9b, 0x2b, 0x5b, 0xc4, 0x83, 0x36, 0x1b, 0x9b, 0x8a,
+  0x61, 0x39, 0x5a, 0x29, 0x54, 0xa8, 0x69, 0x4a, 0x17, 0xea, 0xcb, 0x8f,
+  0xba, 0x87, 0x24, 0xd2, 0xbe, 0x3f, 0x3c, 0x78, 0xff, 0xe5, 0xbb, 0xb7,
+  0x47, 0xa7, 0xc7, 0xdd, 0x3a, 0x45, 0x5e, 0x09, 0xd7, 0x47, 0x8e, 0x6f,
+  0x52, 0xf6, 0x5c, 0x76, 0x7c, 0x18, 0x65, 0x89, 0xdb, 0x1d, 0xc9, 0xaf,
+  0xf8, 0x0d, 0xe1, 0xd8, 0xba, 0xe0, 0x75, 0xf5, 0x67, 0x39, 0x9f, 0x20,
+  0x01, 0x31, 0x98, 0xbc, 0xe5, 0x9c, 0xa8, 0x9b, 0xcd, 0x06, 0xd8, 0xa2,
+  0xee, 0x32, 0xfd, 0xd1, 0xfd, 0x4c, 0x22, 0x76, 0x80, 0x04, 0x12, 0x40,
+  0x60, 0x55, 0x44, 0x77, 0x44, 0x8e, 0x18, 0x66, 0x61, 0x44, 0xe3, 0x69,
+  0xd9, 0xee, 0xa2, 0x12, 0xd6, 0xc0, 0x2d, 0x11, 0x25, 0xf7, 0x75, 0x90,
+  0xe3, 0xbc, 0xec, 0xf6, 0xa2, 0x24, 0x85, 0xcb, 0x2e, 0x0c, 0xe1, 0x9a,
+  0xb4, 0xa6, 0xe1, 0x70, 0x58, 0x65, 0x2c, 0x74, 0x3d, 0x48, 0x1e, 0x12,
+  0x44, 0x81, 0xe8, 0x5b, 0x87, 0x30, 0x02, 0x97, 0xd1, 0x77, 0x59, 0x8e,
+  0xf4, 0xfe, 0x23, 0x8b, 0xc3, 0xb4, 0x87, 0xe2, 0xf9, 0xaa, 0xe9, 0xe1,
+  0x65, 0x8d, 0x88, 0xb5, 0x82, 0x6b, 0xc1, 0x6b, 0x3c, 0x3f, 0xb8, 0xfc,
+  0xba, 0x35, 0x58, 0xc1, 0xa3, 0x36, 0x7e, 0xf8, 0xb6, 0x01, 0x1b, 0x2d,
+  0xd7, 0xc6, 0x79, 0x7e, 0xe0, 0xaa, 0xa9, 0x1e, 0xa2, 0xda, 0x6d, 0xd3,
+  0x22, 0xa5, 0x72, 0xef, 0x6b, 0xef, 0x9b, 0x56, 0xa2, 0xb4, 0xcb, 0x86,
+  0xef, 0x9a, 0xb5, 0x57, 0x4d, 0xeb, 0x4d, 0x63, 0xb3, 0xe5, 0xb3, 0xea,
+  0x2e, 0x1a, 0xbb, 0x69, 0xfe, 0xf7, 0xb8, 0x6a, 0x62, 0x9c, 0x9e, 0x1a,
+  0x0f, 0xf5, 0x41, 0xbb, 0xed, 0xdc, 0x54, 0xd9, 0xe9, 0x47, 0xf2, 0x53,
+  0x1f, 0x01, 0xdc, 0x60, 0x30, 0xc2, 0x62, 0xe5, 0xaa, 0x4a, 0x4c, 0x65,
+  0xad, 0x04, 0x7a, 0xb6, 0x72, 0xc4, 0x9e, 0xc9, 0x5f, 0xf5, 0xcd, 0x72,
+  0x3d, 0xc9, 0x7b, 0xac, 0x4d, 0x20, 0x64, 0x9d, 0xf9, 0x45, 0x9e, 0x8d,
+  0x25, 0x59, 0x2b, 0x88, 0x2c, 0x7c, 0x9f, 0x27, 0x37, 0x71, 0x71, 0x13,
+  0x2d, 0xcb, 0x94, 0x2d, 0xe6, 0x75, 0x1d, 0x60, 0xc9, 0xe1, 0x85, 0xa6,
+  0xfa, 0x5b, 0x4a, 0xa0, 0xa6, 0xb6, 0xbb, 0xb5, 0x03, 0x32, 0xa3, 0xa8,
+  0x3e, 0x41, 0xcc, 0x15, 0x2b, 0xf7, 0x75, 0xb5, 0x75, 0x78, 0xda, 0x0f,
+  0x21, 0xe1, 0x66, 0x9c, 0xcb, 0x09, 0xb3, 0x7d, 0x72, 0x45, 0xd3, 0x4d,
+  0x83, 0x34, 0xc1, 0xa5, 0xeb, 0x02, 0x57, 0x5c, 0x7a, 0xd5, 0x66, 0x9c,
+  0xb2, 0x6f, 0xc1, 0x4e, 0xf4, 0xf2, 0x29, 0x04, 0x34, 0xae, 0x7e, 0xf3,
+  0xfc, 0x76, 0x14, 0x74, 0xc5, 0xc6, 0x48, 0xa2, 0xe2, 0x76, 0x7b, 0xce,
+  0x6b, 0xce, 0x32, 0x29, 0xd8, 0xcb, 0xcb, 0x53, 0xdb, 0x64, 0x94, 0x24,
+  0xc1, 0xe0, 0x62, 0xab, 0xdf, 0x74, 0xba, 0xc5, 0x32, 0xbb, 0xe5, 0xc0,
+  0x21, 0xf5, 0xa4, 0xd0, 0x7c, 0xb1, 0xa6, 0x8c, 0x62, 0xb8, 0x4d, 0x88,
+  0xf8, 0x82, 0x13, 0x13, 0x7e, 0x0d, 0xb5, 0xef, 0x02, 0x91, 0x95, 0x58,
+  0x2b, 0x9d, 0xd2, 0xe0, 0xcb, 0x49, 0xa2, 0xf8, 0x7d, 0x75, 0x46, 0x27,
+  0x48, 0xae, 0x6a, 0xc2, 0xa6, 0x3e, 0x4f, 0xe6, 0xe6, 0x10, 0x94, 0x30,
+  0x09, 0xa8, 0x43, 0x71, 0x54, 0xb1, 0x31, 0xc9, 0x6b, 0x45, 0xcb, 0xad,
+  0x3b, 0x49, 0xa6, 0x29, 0x1e, 0x60, 0x98, 0x58, 0xcd, 0x04, 0x54, 0xc5,
+  0x45, 0x12, 0x06, 0xd5, 0x09, 0x8c, 0xe8, 0x59, 0x7b, 0x80, 0x43, 0xbd,
+  0xa0, 0x5d, 0x15, 0xf5, 0xe6, 0x36, 0x25, 0x01, 0x0c, 0xf8, 0x8d, 0xa2,
+  0x27, 0x5a, 0xb4, 0x12, 0x0f, 0x6c, 0xe5, 0x20, 0x79, 0xb7, 0xf4, 0x4a,
+  0x83, 0x05, 0x4b, 0x55, 0xa4, 0x45, 0xde, 0xd0, 0xb3, 0xd9, 0xb5, 0x2a,
+  0x84, 0x29, 0xa0, 0xca, 0xd8, 0x80, 0x52, 0x8e, 0x40, 0x5c, 0x86, 0x69,
+  0x8d, 0x92, 0xfc, 0xb3, 0xb7, 0xb7, 0xc6, 0xe8, 0xab, 0x39, 0xc8, 0x1a,
+  0xa4, 0xc1, 0x8b, 0xd1, 0x2f, 0xe2, 0xab, 0xc4, 0xce, 0x22, 0xd1, 0x31,
+  0x8b, 0x8c, 0xd9, 0x98, 0x96, 0x50, 0x22, 0x9c, 0xf0, 0xd9, 0x3c, 0x6b,
+  0xba, 0xc4, 0x96, 0x63, 0x3e, 0x8a, 0x6c, 0x00, 0x70, 0x66, 0x4c, 0x76,
+  0x45, 0x9b, 0xb7, 0xbf, 0x98, 0xa6, 0x0b, 0x66, 0xed, 0x79, 0xb6, 0xbc,
+  0xbe, 0xe1, 0xc0, 0x33, 0xf0, 0x15, 0xb9, 0x60, 0x5b, 0x1c, 0x1b, 0xb5,
+  0x54, 0x69, 0xc8, 0xb3, 0x77, 0xd9, 0x94, 0xcd, 0x9a, 0x9b, 0xb5, 0xf6,
+  0x9f, 0xee, 0xec, 0x62, 0xb8, 0x4f, 0x77, 0x3e, 0xad, 0x44, 0xbb, 0xb3,
+  0x39, 0x3d, 0x1e, 0x23, 0x17, 0x26, 0xfa, 0x91, 0x2f, 0x8f, 0x9f, 0x5a,
+  0x7d, 0x31, 0xb0, 0xcb, 0xc6, 0xf3, 0xd0, 0x0e, 0x1b, 0x17, 0xb7, 0xe2,
+  0x2a, 0xe8, 0xd8, 0xfb, 0xfc, 0x7a, 0x47, 0xad, 0x19, 0xce, 0x6f, 0xdc,
+  0x82, 0xf6, 0xe3, 0x54, 0x5e, 0xce, 0x6d, 0x34, 0x16, 0x05, 0x69, 0xbd,
+  0x17, 0x60, 0x03, 0x02, 0x7c, 0x00, 0x18, 0x85, 0x57, 0xeb, 0x2d, 0x33,
+  0x07, 0x87, 0x87, 0xde, 0x6b, 0x57, 0x8d, 0x0b, 0x7b, 0xc2, 0x71, 0x61,
+  0xeb, 0x92, 0xa5, 0x6a, 0xc7, 0x1f, 0xe0, 0x32, 0x3d, 0x0d, 0xc2, 0x86,
+  0xc1, 0xbc, 0x92, 0x9f, 0x6b, 0x46, 0xc9, 0x06, 0x81, 0xc1, 0x48, 0xb9,
+  0x2c, 0x92, 0xfa, 0x8a, 0xae, 0xcf, 0x3c, 0xa9, 0x03, 0x8f, 0xe9, 0x9a,
+  0x6a, 0xea, 0x03, 0x1b, 0x3c, 0xb7, 0x7d, 0xc2, 0x1a, 0x04, 0x3f, 0x44,
+  0xea, 0xc6, 0xe2, 0xbe, 0x6f, 0x44, 0x16, 0x39, 0xa4, 0x30, 0xf1, 0x7c,
+  0xc3, 0xef, 0xf3, 0x80, 0xd4, 0xe9, 0x79, 0x10, 0x52, 0xae, 0x33, 0x2b,
+  0x69, 0x91, 0xe2, 0x7c, 0xe2, 0x9c, 0x32, 0x4d, 0xb8, 0x0e, 0x93, 0xb2,
+  0x39, 0x4f, 0x87, 0x21, 0x6d, 0x42, 0x30, 0x13, 0xf3, 0x63, 0x79, 0x09,
+  0xd0, 0x02, 0xbb, 0x9b, 0x78, 0xaf, 0x95, 0x6c, 0x8d, 0x68, 0x96, 0x4a,
+  0x18, 0x68, 0x90, 0xfa, 0x51, 0x5f, 0x30, 0x3d, 0x61, 0x3f, 0xca, 0xcf,
+  0x76, 0x1a, 0x44, 0x62, 0x59, 0x9e, 0x71, 0x2a, 0x0e, 0xd2, 0x24, 0xe4,
+  0x15, 0xc9, 0x55, 0x96, 0x58, 0x3e, 0x0f, 0xf8, 0xc2, 0x58, 0x01, 0x72,
+  0x3d, 0xb0, 0xd5, 0xa3, 0x99, 0x64, 0xb5, 0x39, 0xdc, 0x32, 0x03, 0x3a,
+  0x6e, 0x5e, 0x6d, 0x2c, 0xce, 0xaf, 0x95, 0x45, 0xb9, 0x08, 0xd3, 0x20,
+  0x9c, 0x4c, 0x63, 0x0d, 0xfa, 0x0d, 0xf3, 0xc4, 0xb5, 0xe8, 0x0b, 0x1c,
+  0x6b, 0x71, 0xd7, 0x12, 0xa1, 0x07, 0xb5, 0x68, 0x7c, 0x3f, 0x69, 0x0f,
+  0x58, 0x91, 0x9b, 0x53, 0x92, 0x12, 0x62, 0x87, 0x25, 0x76, 0xf8, 0xdd,
+  0x51, 0x90, 0xb9, 0xc8, 0xc7, 0x0c, 0x93, 0x02, 0x21, 0x48, 0xc4, 0xd5,
+  0x7c, 0x5d, 0xfc, 0x8b, 0xe9, 0x09, 0xc0, 0x8e, 0x7d, 0x0d, 0x28, 0xf0,
+  0x64, 0xe1, 0x72, 0x90, 0x00, 0x11, 0x23, 0xe0, 0x34, 0x8c, 0x03, 0x0b,
+  0xc0, 0x57, 0x5c, 0x9d, 0x6b, 0x46, 0xa7, 0x81, 0x0c, 0x83, 0x10, 0xbb,
+  0x0a, 0xb9, 0x62, 0x17, 0xaf, 0x0f, 0x77, 0x3f, 0x7d, 0xf2, 0x19, 0x09,
+  0xe9, 0x2b, 0xa4, 0x0d, 0xf9, 0x25, 0x93, 0x00, 0xd7, 0xf5, 0x91, 0x4d,
+  0x6a, 0x55, 0x32, 0x01, 0x53, 0xfd, 0xf9, 0xc4, 0xfc, 0xb2, 0xfb, 0x04,
+  0x32, 0x8f, 0xfa, 0x0c, 0x1b, 0x91, 0x53, 0x19, 0x2d, 0xa2, 0x81, 0x89,
+  0x0a, 0x8e, 0x24, 0xd6, 0x49, 0xae, 0xd4, 0x41, 0x40, 0x99, 0x8c, 0xb1,
+  0xcb, 0x79, 0x73, 0xc4, 0x42, 0x2f, 0x8e, 0x2f, 0x2f, 0x18, 0xf5, 0xfe,
+  0xf2, 0xec, 0x62, 0x4d, 0x38, 0x1a, 0x5d, 0x9c, 0xcc, 0x95, 0x78, 0xd1,
+  0x98, 0x68, 0x18, 0x7e, 0xc0, 0x14, 0xab, 0x20, 0x2b, 0x83, 0xb7, 0x20,
+  0x16, 0x78, 0xe2, 0xa2, 0x35, 0x1b, 0x20, 0x48, 0x0a, 0x28, 0x2a, 0xe8,
+  0x1b, 0x74, 0x94, 0xe8, 0x9c, 0x3c, 0x36, 0x31, 0xd9, 0xf3, 0xc7, 0x29,
+  0x04, 0x13, 0x66, 0x62, 0xe4, 0x19, 0x3b, 0x7f, 0x0e, 0x46, 0xab, 0xb0,
+  0x83, 0x5e, 0x06, 0xd4, 0x7b, 0x69, 0x0d, 0x85, 0x08, 0x59, 0x25, 0x45,
+  0x60, 0x37, 0x14, 0x55, 0xbe, 0x63, 0xde, 0xef, 0x0e, 0x4b, 0xf0, 0xb7,
+  0x0e, 0xde, 0xe2, 0x03, 0xf4, 0x4b, 0x72, 0xc3, 0x96, 0x9f, 0x30, 0x23,
+  0x0c, 0xe2, 0x7c, 0x8a, 0x80, 0xe7, 0xb8, 0x4e, 0xa1, 0xa9, 0xd9, 0xa9,
+  0x04, 0x20, 0x34, 0x03, 0x32, 0x5c, 0x9e, 0x01, 0xef, 0x72, 0xd7, 0x39,
+  0xd1, 0x33, 0xa5, 0x0e, 0xd9, 0x17, 0x12, 0x7a, 0xa6, 0x25, 0x12, 0x38,
+  0xba, 0x36, 0xaa, 0xae, 0x23, 0xb5, 0x0a, 0xfb, 0x7f, 0x36, 0xd8, 0xdd,
+  0xaa, 0x31, 0x19, 0x8e, 0x40, 0x68, 0xe7, 0x2c, 0xec, 0x08, 0xa9, 0xc5,
+  0x3d, 0x88, 0xf5, 0x40, 0x83, 0xd1, 0xe9, 0x4a, 0x30, 0x7c, 0x8f, 0x73,
+  0x7d, 0xaa, 0x15, 0x59, 0x05, 0x15, 0x0f, 0xd8, 0xaa, 0xeb, 0x68, 0x5b,
+  0xb7, 0x5c, 0x82, 0x02, 0x96, 0x75, 0x6e, 0x5a, 0x71, 0xdf, 0x37, 0xf9,
+  0xa7, 0xbb, 0x7f, 0x82, 0x14, 0x5a, 0x76, 0x82, 0xfb, 0xc0, 0x0b, 0x4d,
+  0x9e, 0xa9, 0xcc, 0x7c, 0xf7, 0x17, 0x5c, 0x7c, 0x8f, 0x06, 0x54, 0xfd,
+  0xa2, 0x78, 0xaa, 0xe8, 0xdd, 0x5c, 0x03, 0x9b, 0x38, 0xe8, 0xcf, 0xc0,
+  0x76, 0xfc, 0xa2, 0x12, 0x53, 0x86, 0x18, 0x03, 0x33, 0x77, 0xe3, 0x16,
+  0x13, 0xe3, 0x27, 0xaf, 0x91, 0x64, 0xf4, 0x2c, 0x0b, 0xcd, 0x30, 0xb5,
+  0x3b, 0x46, 0x5b, 0xd4, 0xd8, 0x55, 0x41, 0xb5, 0x76, 0xf1, 0x00, 0x0d,
+  0x28, 0xb4, 0x5c, 0xf5, 0xf2, 0xc6, 0x49, 0xb3, 0xdd, 0xc3, 0x16, 0x0b,
+  0x07, 0x84, 0x2c, 0xe8, 0x59, 0x47, 0x29, 0x7a, 0xbb, 0xc4, 0x35, 0x58,
+  0x54, 0x89, 0x84, 0xd3, 0x37, 0x01, 0xf3, 0x44, 0x79, 0x45, 0xd0, 0x87,
+  0xc2, 0xe4, 0x54, 0xe3, 0x26, 0x6c, 0x9d, 0x1b, 0x12, 0x97, 0xbf, 0x2e,
+  0xfa, 0x65, 0x86, 0x28, 0xbc, 0xe8, 0xa5, 0x76, 0xf6, 0x79, 0x3b, 0x89,
+  0x22, 0x77, 0x29, 0x90, 0xf7, 0x0c, 0x9a, 0x1c, 0x38, 0x9b, 0x43, 0xb5,
+  0x5e, 0xd2, 0x50, 0x86, 0x8e, 0x65, 0x8b, 0xd4, 0xde, 0x6b, 0x84, 0x51,
+  0x19, 0xea, 0x8f, 0x97, 0x9b, 0xcc, 0xef, 0x6e, 0x3a, 0x1a, 0x64, 0x2d,
+  0x62, 0xa1, 0x97, 0xcb, 0x19, 0xcd, 0xe4, 0x3e, 0x49, 0x26, 0xdd, 0x82,
+  0x8d, 0xf7, 0x8c, 0xcb, 0x58, 0x17, 0x90, 0x39, 0x8c, 0x06, 0x0b, 0xee,
+  0x94, 0x05, 0x84, 0x2b, 0xc2, 0x47, 0x62, 0x01, 0x06, 0xb1, 0x61, 0xf3,
+  0x05, 0xaa, 0x99, 0xba, 0xdb, 0xea, 0x8e, 0x88, 0xe1, 0xc9, 0xe5, 0x71,
+  0x74, 0xf0, 0xee, 0xf2, 0xeb, 0x4e, 0x80, 0xbd, 0x1a, 0xb0, 0x61, 0x5c,
+  0xef, 0x25, 0x89, 0x10, 0x77, 0x42, 0x0b, 0x10, 0x34, 0xc5, 0xd5, 0xd5,
+  0x02, 0xb7, 0x50, 0xb3, 0xd8, 0x0f, 0xea, 0x2c, 0xe2, 0x59, 0x9d, 0x45,
+  0x70, 0x76, 0x38, 0xf8, 0x44, 0x3f, 0x5d, 0x7c, 0x38, 0x28, 0xc9, 0xa2,
+  0xa1, 0xb8, 0x9b, 0x93, 0x73, 0x06, 0xbd, 0x05, 0x0a, 0x71, 0x30, 0xdc,
+  0x62, 0x79, 0xcd, 0x61, 0xa2, 0x2d, 0x40, 0x6b, 0x0c, 0x07, 0xe2, 0x64,
+  0x74, 0x8d, 0xff, 0xa7, 0x55, 0x66, 0x62, 0x72, 0x64, 0x07, 0x65, 0x0c,
+  0x9d, 0xe9, 0xce, 0x14, 0x3e, 0x7d, 0x69, 0xad, 0x9b, 0x8d, 0x0d, 0x34,
+  0x86, 0x2a, 0x19, 0x66, 0x2e, 0x2b, 0x34, 0xbb, 0x37, 0xac, 0x05, 0x23,
+  0x6e, 0x60, 0x3a, 0x59, 0xbe, 0x13, 0x24, 0x50, 0x63, 0x85, 0x63, 0x95,
+  0xbf, 0xc2, 0xbe, 0x2a, 0x0b, 0xfa, 0x74, 0xb0, 0xb7, 0xd5, 0xaa, 0x41,
+  0x29, 0xd7, 0x61, 0x79, 0x9f, 0xb8, 0x06, 0x29, 0xfd, 0x7c, 0x7c, 0x49,
+  0xb7, 0x97, 0x98, 0x44, 0x89, 0x60, 0xcb, 0xe5, 0xc8, 0x19, 0x67, 0xb2,
+  0x93, 0xdf, 0xc4, 0x51, 0xe2, 0x25, 0xaa, 0x1f, 0x28, 0x62, 0x8f, 0xed,
+  0xa1, 0x9b, 0xb2, 0x61, 0x6e, 0xc7, 0x40, 0xfd, 0x71, 0x74, 0x4e, 0x52,
+  0x81, 0x5b, 0xe5, 0x20, 0x76, 0x2b, 0xda, 0x84, 0x0f, 0x80, 0xc6, 0xb1,
+  0x55, 0x17, 0x60, 0x38, 0x89, 0x37, 0x4e, 0x43, 0x0d, 0x88, 0xf8, 0xe5,
+  0x8c, 0x3e, 0x61, 0xcd, 0x3c, 0xa7, 0x31, 0xb0, 0xc7, 0xce, 0xc0, 0x2b,
+  0xf5, 0x80, 0xb1, 0x06, 0x68, 0xf7, 0xdf, 0x46, 0xab, 0x5c, 0xa5, 0x16,
+  0xd3, 0xc0, 0x7c, 0xc3, 0x2e, 0x77, 0x3a, 0x17, 0xa8, 0x72, 0x02, 0x88,
+  0x91, 0x98, 0xc1, 0xc6, 0x71, 0xba, 0x27, 0xd9, 0xfd, 0x1c, 0xc8, 0x01,
+  0x4d, 0x6a, 0xc2, 0xe0, 0x99, 0xa9, 0x0d, 0xaa, 0xd7, 0xe0, 0xde, 0xce,
+  0xe0, 0x21, 0xa4, 0xf1, 0xa2, 0x98, 0xca, 0xca, 0xf4, 0x68, 0xed, 0xcf,
+  0x9f, 0xf4, 0xa2, 0x93, 0x37, 0x07, 0xf4, 0xfb, 0xf0, 0x0d, 0x68, 0x3b,
+  0x77, 0xe1, 0x4c, 0xc3, 0xe1, 0xe9, 0xf6, 0xe5, 0xe9, 0x30, 0xa8, 0x5e,
+  0x11, 0x6c, 0x7a, 0x33, 0x89, 0x19, 0xc6, 0x5d, 0x18, 0xa2, 0x31, 0x65,
+  0x01, 0x70, 0x0d, 0x60, 0x6e, 0xd2, 0xab, 0xf0, 0x50, 0x98, 0xd2, 0xa2,
+  0x2e, 0xf4, 0xa6, 0xb1, 0x68, 0x5b, 0xb0, 0xa1, 0x82, 0x18, 0x63, 0x9c,
+  0xcd, 0x62, 0xda, 0x37, 0x12, 0x94, 0xe0, 0x35, 0xfe, 0x84, 0x96, 0x7c,
+  0x62, 0x8b, 0xc8, 0x97, 0x51, 0x33, 0x83, 0xb4, 0x8c, 0xa6, 0x34, 0xc2,
+  0x69, 0x21, 0x9e, 0x7f, 0x44, 0x4b, 0xf0, 0x98, 0x74, 0xaf, 0x6a, 0x6a,
+  0x23, 0x2d, 0xd8, 0xce, 0xd6, 0xe3, 0xa1, 0x5f, 0xf7, 0x71, 0x21, 0xfe,
+  0xdc, 0x24, 0xa7, 0xbd, 0x07, 0x5a, 0x8b, 0x00, 0x93, 0xe9, 0x20, 0x5b,
+  0x6e, 0xe3, 0xa6, 0x0e, 0x2c, 0xb7, 0x0e, 0xdd, 0x95, 0xb4, 0xdb, 0xde,
+  0xbc, 0xa4, 0x52, 0x8f, 0x7c, 0xc0, 0x09, 0xf3, 0x77, 0x96, 0xb9, 0x76,
+  0xb5, 0xe4, 0x8a, 0x3f, 0xb0, 0x1b, 0xb6, 0xc5, 0xd9, 0xd6, 0xcf, 0x43,
+  0xb0, 0x56, 0xed, 0xc7, 0xe2, 0xc2, 0x28, 0xd5, 0x76, 0xda, 0x6f, 0x35,
+  0x53, 0xf8, 0x34, 0xbb, 0x66, 0xc4, 0x53, 0x09, 0x2d, 0xc7, 0xf9, 0x37,
+  0xec, 0x87, 0xba, 0x02, 0x3e, 0x45, 0x10, 0x8e, 0x6e, 0x79, 0xd5, 0x20,
+  0x21, 0x42, 0x0f, 0x53, 0x84, 0x2e, 0x7b, 0xe2, 0xd2, 0x17, 0x5c, 0xf4,
+  0x65, 0xd3, 0x4d, 0x1e, 0x39, 0xa3, 0xe0, 0x78, 0xc5, 0x57, 0xd3, 0x6b,
+  0xd8, 0x9e, 0x34, 0x5c, 0x57, 0x80, 0x43, 0xd6, 0x92, 0x53, 0xab, 0x24,
+  0xe0, 0x09, 0xaa, 0xb2, 0x31, 0xcf, 0xc3, 0x8d, 0xf6, 0xb4, 0xd4, 0xb2,
+  0x5c, 0x6d, 0x67, 0xe5, 0xb1, 0x05, 0x7c, 0xe4, 0xac, 0x5c, 0x8a, 0x83,
+  0xde, 0xd0, 0x1d, 0x3e, 0xf6, 0x88, 0xb8, 0x39, 0x3c, 0x92, 0x7a, 0xbf,
+  0x9e, 0x72, 0x95, 0x70, 0xab, 0x74, 0xab, 0x84, 0xab, 0x19, 0x90, 0x46,
+  0x33, 0x38, 0x4d, 0xc4, 0x05, 0xd1, 0x6c, 0x93, 0xcd, 0xe8, 0xa5, 0x19,
+  0x19, 0x0e, 0x2f, 0x8b, 0xf9, 0x52, 0x9f, 0xa7, 0xb4, 0x2c, 0xe7, 0x47,
+  0xc9, 0xb8, 0x11, 0x08, 0x03, 0xa2, 0x56, 0xf7, 0x52, 0x2b, 0x0d, 0x8f,
+  0xc7, 0xad, 0xf4, 0xcb, 0x02, 0xfb, 0xe1, 0xe1, 0x61, 0xb4, 0x79, 0x08,
+  0x0a, 0x3d, 0x54, 0x6e, 0x7a, 0x78, 0xc3, 0x79, 0x9d, 0x53, 0xc6, 0x14,
+  0xb8, 0x59, 0x72, 0x06, 0xca, 0x04, 0x73, 0xc4, 0xa6, 0xe8, 0x12, 0xd6,
+  0x43, 0xc8, 0xe2, 0x15, 0xdb, 0xb2, 0x04, 0x4a, 0xaa, 0x22, 0x5e, 0x89,
+  0x61, 0x00, 0xf9, 0xa6, 0xe6, 0xfb, 0xb7, 0xfb, 0x4f, 0x7a, 0x69, 0x4d,
+  0x09, 0x5f, 0xce, 0xcd, 0x1a, 0xe7, 0xcc, 0xc6, 0x73, 0x47, 0xfd, 0xaa,
+  0x25, 0xc5, 0x72, 0x66, 0xde, 0x1e, 0x5c, 0x32, 0x52, 0x74, 0xa9, 0x21,
+  0xa8, 0x6b, 0x02, 0xdc, 0xdc, 0x91, 0x04, 0xf5, 0xc7, 0x01, 0xca, 0xa0,
+  0xe9, 0x18, 0x90, 0x65, 0x39, 0x59, 0x52, 0x64, 0x5b, 0x89, 0xb2, 0x69,
+  0x15, 0x8c, 0x75, 0x45, 0xfb, 0x4e, 0xc1, 0x91, 0x04, 0x39, 0xfe, 0xb3,
+  0x68, 0x1e, 0x8f, 0x86, 0xfe, 0x54, 0x79, 0xfd, 0x47, 0x89, 0xd4, 0xdd,
+  0xd6, 0x5e, 0x7f, 0xfa, 0xa7, 0xb6, 0x09, 0x81, 0x59, 0xb2, 0x3d, 0xfc,
+  0x98, 0xdd, 0x60, 0x4d, 0x6f, 0x71, 0x2d, 0x26, 0x5d, 0x24, 0x1a, 0xc9,
+  0x98, 0x4b, 0x81, 0x57, 0x2d, 0x87, 0x87, 0x36, 0x7d, 0x02, 0xf0, 0x2c,
+  0x26, 0x40, 0x53, 0x1d, 0xee, 0xe3, 0x86, 0x78, 0x63, 0x12, 0x8d, 0x17,
+  0x2a, 0x27, 0x5c, 0x73, 0x47, 0xbc, 0x2b, 0x0e, 0x6b, 0x27, 0x4f, 0x16,
+  0xd3, 0x95, 0x33, 0x03, 0x68, 0xdb, 0xeb, 0xc4, 0xcc, 0xd0, 0x9a, 0x14,
+  0x06, 0x31, 0xdb, 0x00, 0x8b, 0x6a, 0x2b, 0xe8, 0x28, 0x66, 0x21, 0xf0,
+  0xaa, 0x11, 0x3d, 0x1f, 0x6b, 0xcf, 0x35, 0xb0, 0xe6, 0xe6, 0x0e, 0x05,
+  0xd2, 0x96, 0x03, 0x78, 0x50, 0xc4, 0x69, 0xcd, 0x94, 0x7a, 0x2c, 0x6f,
+  0x77, 0xca, 0x8b, 0x0f, 0xc1, 0x28, 0x21, 0x5d, 0x1a, 0x79, 0x3a, 0x0a,
+  0x7a, 0xd1, 0x4f, 0xe7, 0x82, 0xb1, 0x40, 0x3f, 0xc5, 0x24, 0x6f, 0x40,
+  0x19, 0x75, 0xdc, 0x48, 0xe6, 0x1e, 0x06, 0x05, 0xa8, 0x09, 0x9a, 0x02,
+  0x87, 0x51, 0xc5, 0xc3, 0x50, 0xbc, 0x54, 0x93, 0xc2, 0x00, 0xe8, 0xd1,
+  0x22, 0xc4, 0x7a, 0xff, 0xd4, 0xa1, 0x22, 0x5f, 0x5c, 0x72, 0x3c, 0x87,
+  0x84, 0x15, 0xc4, 0x79, 0xb9, 0x0d, 0x8c, 0x0b, 0x49, 0x51, 0x1b, 0x33,
+  0x16, 0xb2, 0x96, 0x14, 0xb8, 0x78, 0x7d, 0xb8, 0xf7, 0xe4, 0xb3, 0xcf,
+  0xda, 0x63, 0x61, 0x13, 0xcd, 0xda, 0x0a, 0x40, 0xbd, 0x19, 0x27, 0x4a,
+  0xb2, 0xe0, 0xc5, 0xe9, 0xc8, 0xc5, 0x6b, 0x38, 0x69, 0xd8, 0xab, 0x98,
+  0xdd, 0x71, 0xd3, 0x78, 0xcf, 0x03, 0xea, 0x8a, 0xf1, 0x4d, 0x52, 0xc9,
+  0xac, 0x96, 0x8a, 0x96, 0xe1, 0x70, 0x88, 0x01, 0x8a, 0xa1, 0xc5, 0x5e,
+  0xfa, 0x39, 0xa7, 0xb6, 0xa6, 0xd7, 0xc0, 0xb7, 0xa8, 0x35, 0xf7, 0x57,
+  0xd6, 0x71, 0xaf, 0x93, 0xb2, 0x99, 0x8e, 0xa9, 0x98, 0x73, 0x1f, 0x68,
+  0xbc, 0x8d, 0x06, 0x25, 0x99, 0xf4, 0xa5, 0xf2, 0x07, 0xa7, 0x9c, 0x5b,
+  0xf9, 0x21, 0x1a, 0x0c, 0x18, 0xf7, 0x4b, 0x87, 0xf5, 0xe1, 0x40, 0x59,
+  0xbf, 0x68, 0xd1, 0xf0, 0x0b, 0x1f, 0xff, 0x26, 0xf8, 0x64, 0x65, 0x19,
+  0x5b, 0x01, 0x35, 0x58, 0xc4, 0x19, 0x3f, 0xc2, 0xa1, 0x70, 0xbb, 0xc2,
+  0x19, 0x44, 0x31, 0xd3, 0x36, 0x84, 0xa4, 0x97, 0xda, 0x68, 0x2c, 0xd0,
+  0xb8, 0x82, 0xdf, 0xc1, 0xe3, 0x69, 0x5b, 0x09, 0xd3, 0x3a, 0x38, 0x80,
+  0x2d, 0x79, 0x68, 0x9c, 0x5f, 0xbc, 0x1b, 0xac, 0x53, 0x43, 0xd1, 0x3f,
+  0x7e, 0x88, 0x67, 0xa8, 0xeb, 0xe5, 0xa4, 0x7e, 0xb8, 0xf5, 0x7d, 0x8e,
+  0x9d, 0x86, 0xba, 0x84, 0x46, 0x72, 0x71, 0xdb, 0x74, 0xf9, 0x99, 0xfa,
+  0xde, 0xf3, 0x3b, 0x5d, 0xb3, 0xe7, 0x85, 0x4e, 0x7a, 0x50, 0xa4, 0x0c,
+  0xc7, 0x01, 0x18, 0x8a, 0xc7, 0x9c, 0x7b, 0x9a, 0xac, 0x01, 0x21, 0xe3,
+  0x37, 0x81, 0x92, 0xb5, 0xdf, 0x1a, 0x50, 0xd2, 0x7f, 0xed, 0x06, 0xfa,
+  0xea, 0x8b, 0x4a, 0x6b, 0xf7, 0xf7, 0x83, 0xd9, 0xca, 0xbe, 0x2b, 0x2a,
+  0xd5, 0x0d, 0x7d, 0xee, 0xbb, 0x66, 0x00, 0x18, 0xc9, 0x74, 0x0b, 0x47,
+  0x5e, 0x1e, 0xf1, 0x22, 0x2c, 0x92, 0xe3, 0x6b, 0x02, 0xd1, 0xbd, 0xd1,
+  0xcc, 0x58, 0xd3, 0x34, 0x06, 0x4f, 0x7d, 0x62, 0xe9, 0xed, 0x22, 0xbd,
+  0x23, 0xb1, 0x23, 0x7e, 0x9d, 0xa9, 0xa6, 0x38, 0xa2, 0x4b, 0x85, 0x08,
+  0x4d, 0x29, 0xad, 0xa9, 0xa6, 0x16, 0x65, 0xbe, 0x1c, 0x97, 0x4d, 0xcf,
+  0xac, 0x2f, 0xf6, 0x27, 0x98, 0xcd, 0xa5, 0x57, 0xdc, 0xc4, 0xe0, 0x5f,
+  0x65, 0x0a, 0xb8, 0x32, 0x79, 0xc4, 0x86, 0xe7, 0x5c, 0xc7, 0x2b, 0x01,
+  0x8c, 0x73, 0xb7, 0x27, 0xe2, 0xb3, 0xe2, 0x3d, 0x78, 0x78, 0x82, 0xb5,
+  0x0b, 0xdf, 0xb9, 0x4f, 0x46, 0xaf, 0xbe, 0xe0, 0x90, 0xc3, 0x07, 0xc0,
+  0xc0, 0x0a, 0x1c, 0x34, 0xd3, 0xe0, 0x36, 0xff, 0xd9, 0x89, 0x38, 0xe2,
+  0xa4, 0x65, 0xdd, 0x89, 0x8b, 0xaf, 0x6b, 0x31, 0x40, 0x4e, 0x09, 0x5a,
+  0xbb, 0xca, 0xb2, 0xb5, 0x8d, 0xfd, 0x10, 0x16, 0x16, 0x0c, 0x72, 0x7a,
+  0x24, 0xc5, 0xc6, 0x13, 0xa1, 0x10, 0x1e, 0x6f, 0xe1, 0x5c, 0xcf, 0xa9,
+  0x1c, 0xc2, 0x36, 0xc4, 0x81, 0xd1, 0xca, 0x15, 0x98, 0xb0, 0xec, 0xe3,
+  0x57, 0x3d, 0xa9, 0xb3, 0xca, 0xda, 0xea, 0xfa, 0x05, 0xe1, 0xa7, 0x5f,
+  0x7d, 0x01, 0x4c, 0x33, 0xfe, 0xf5, 0xcf, 0xee, 0x6d, 0xfe, 0x87, 0xa8,
+  0x98, 0xb8, 0xc0, 0xda, 0x89, 0xb0, 0x28, 0x72, 0xb5, 0xcc, 0x21, 0x66,
+  0x24, 0x72, 0x24, 0x0b, 0xd1, 0x65, 0x15, 0xb1, 0x58, 0x59, 0xc9, 0x9b,
+  0x83, 0xb7, 0xef, 0x0e, 0x4e, 0x07, 0x8f, 0x89, 0xaf, 0xa1, 0xa9, 0xd4,
+  0x05, 0x9a, 0xc1, 0x6e, 0x59, 0x11, 0x1c, 0xf9, 0x3c, 0x6a, 0xc8, 0xbf,
+  0xdc, 0x84, 0x8f, 0x56, 0xab, 0x89, 0x86, 0x86, 0x08, 0xc2, 0xe4, 0xa4,
+  0x37, 0xa8, 0xc2, 0x7d, 0xb8, 0x4c, 0x62, 0x41, 0x1e, 0xd2, 0x46, 0x55,
+  0x74, 0x68, 0x89, 0x10, 0x67, 0xc7, 0x66, 0x1e, 0x4b, 0xed, 0x2e, 0xb3,
+  0x62, 0x4c, 0x53, 0x2e, 0x81, 0x3b, 0x65, 0x44, 0xc9, 0x53, 0x2d, 0xe6,
+  0xd9, 0xfd, 0xa2, 0x2b, 0x67, 0xa3, 0xfb, 0xb2, 0xcb, 0xe8, 0x3b, 0xf4,
+  0xce, 0xb8, 0x25, 0x5f, 0xa6, 0x70, 0xa1, 0x1e, 0x51, 0x57, 0xa8, 0xa6,
+  0x6b, 0x43, 0xd0, 0x35, 0x93, 0x61, 0x21, 0xd0, 0x63, 0xae, 0xf1, 0xb3,
+  0x5c, 0xcc, 0x32, 0x89, 0xe7, 0x2d, 0x1e, 0xaa, 0x6a, 0x6a, 0xb0, 0x54,
+  0xce, 0xc2, 0xd5, 0x50, 0x66, 0x36, 0x6d, 0xd1, 0x40, 0x72, 0xe6, 0x17,
+  0x1c, 0x49, 0x21, 0x10, 0x94, 0x6d, 0xd1, 0x21, 0x72, 0x63, 0x04, 0xc5,
+  0x72, 0x22, 0x1d, 0x0b, 0x07, 0xef, 0xd0, 0xc5, 0x9c, 0x72, 0xa4, 0x2e,
+  0xac, 0xbd, 0xf4, 0xed, 0xf5, 0xb5, 0x26, 0x2f, 0xf3, 0xbc, 0x69, 0xed,
+  0x68, 0xd6, 0x0d, 0x1c, 0x4c, 0xad, 0x9c, 0x4b, 0x74, 0x5c, 0x07, 0xa9,
+  0xea, 0x5f, 0x93, 0x58, 0x73, 0x3d, 0xcd, 0x46, 0xd9, 0xd5, 0xd5, 0x23,
+  0xb4, 0x21, 0xf9, 0x63, 0x68, 0x42, 0xd8, 0x72, 0x87, 0x33, 0x47, 0xf8,
+  0xbd, 0x91, 0xd6, 0x93, 0xe5, 0xba, 0x0a, 0x03, 0x31, 0x73, 0x02, 0x9a,
+  0xaa, 0x61, 0x2e, 0x0a, 0x43, 0x82, 0x7b, 0x2e, 0xbf, 0xc5, 0xa2, 0x92,
+  0x51, 0x68, 0x54, 0x74, 0x76, 0x8d, 0x75, 0xf4, 0xd0, 0x34, 0x45, 0xf4,
+  0xf7, 0x7f, 0xfc, 0xf8, 0x53, 0x0b, 0x98, 0x13, 0xbb, 0x2e, 0x34, 0xaa,
+  0x9f, 0xa3, 0x9a, 0x35, 0x1b, 0x09, 0x3e, 0x02, 0xb6, 0x57, 0x79, 0x14,
+  0x47, 0xad, 0x8c, 0x33, 0x08, 0xf2, 0x26, 0x9a, 0x17, 0x06, 0xdb, 0xee,
+  0xac, 0xc3, 0x18, 0xe1, 0x05, 0xa5, 0x85, 0x6e, 0x4c, 0x93, 0xeb, 0x18,
+  0x08, 0x0f, 0xfe, 0xf6, 0x74, 0x49, 0xb2, 0xc2, 0xac, 0x9b, 0x40, 0x71,
+  0x2e, 0x07, 0x3e, 0x14, 0xa4, 0x60, 0x4c, 0xbe, 0x38, 0x71, 0x4e, 0x9b,
+  0x60, 0x23, 0xbe, 0xe2, 0x8d, 0x68, 0xac, 0x9a, 0x03, 0x52, 0xec, 0xd5,
+  0x51, 0x48, 0x43, 0xf8, 0x02, 0x64, 0x7f, 0x88, 0xe2, 0x5f, 0x01, 0xc6,
+  0x6a, 0x08, 0x31, 0x01, 0x18, 0x99, 0x60, 0xba, 0x87, 0x88, 0x45, 0x38,
+  0xa2, 0x2e, 0x85, 0x07, 0x6c, 0x1d, 0x51, 0x2a, 0x5f, 0x1d, 0x3b, 0x74,
+  0xb8, 0x06, 0xdd, 0x57, 0x0a, 0xc1, 0x55, 0x71, 0xe4, 0x00, 0x40, 0xe9,
+  0xaa, 0xfb, 0xdd, 0xbb, 0x1a, 0x1f, 0x62, 0xb0, 0x6f, 0x53, 0x42, 0x14,
+  0x97, 0x48, 0xd4, 0x3a, 0x83, 0x2d, 0xf0, 0xcb, 0x76, 0x6a, 0x78, 0x7f,
+  0xdd, 0xff, 0xe8, 0x7a, 0x90, 0x98, 0xd6, 0x20, 0x42, 0x97, 0xe0, 0xd6,
+  0x4c, 0xd2, 0xef, 0x9f, 0xf4, 0xfc, 0x60, 0x7d, 0x8f, 0x36, 0x95, 0x51,
+  0x0b, 0x10, 0xdc, 0xba, 0x71, 0x7c, 0x7d, 0x7c, 0x70, 0x64, 0xf3, 0xfd,
+  0xb7, 0x64, 0xd8, 0x03, 0x0e, 0x2a, 0xf4, 0x09, 0x99, 0x53, 0x70, 0x94,
+  0x08, 0xfc, 0xdd, 0xd2, 0x7c, 0x44, 0xd8, 0x34, 0x33, 0x72, 0xb4, 0x44,
+  0x8c, 0x91, 0xc4, 0xc6, 0xb0, 0xd8, 0x56, 0x85, 0xd8, 0xd5, 0x60, 0x11,
+  0x91, 0xd5, 0x55, 0x4d, 0x32, 0xaf, 0x90, 0x30, 0xa3, 0xc0, 0xab, 0xd2,
+  0x5a, 0x27, 0x29, 0x28, 0x1a, 0x18, 0x10, 0xf6, 0x0d, 0x32, 0xe2, 0xa6,
+  0x8b, 0x46, 0x6e, 0x54, 0x7c, 0xcd, 0xb9, 0x9b, 0xd3, 0x45, 0xf0, 0x6c,
+  0x90, 0x3d, 0xf7, 0x52, 0x7e, 0xae, 0xbb, 0x57, 0x8e, 0x05, 0x14, 0x4b,
+  0x1f, 0x76, 0xc2, 0x8a, 0x4b, 0x37, 0x29, 0x65, 0x19, 0x48, 0xd8, 0x20,
+  0xee, 0x74, 0x9d, 0xa0, 0xe8, 0x36, 0xf3, 0xcf, 0xfa, 0x3a, 0x58, 0x51,
+  0x61, 0x62, 0xc8, 0x1e, 0xe4, 0x56, 0x10, 0xb7, 0x34, 0xab, 0x31, 0xcc,
+  0xf5, 0xd0, 0xe4, 0x35, 0x2b, 0x6f, 0x34, 0x69, 0xd4, 0x9e, 0xe1, 0x6b,
+  0xbd, 0x28, 0x39, 0xa5, 0xd4, 0x8d, 0x8c, 0xdf, 0xbb, 0x89, 0x0b, 0xef,
+  0x17, 0x10, 0xb4, 0x87, 0x22, 0x8c, 0x7c, 0x30, 0xbf, 0x66, 0xb3, 0xc2,
+  0x87, 0x05, 0xe2, 0x5b, 0xfc, 0x45, 0x4f, 0xe4, 0x6c, 0x06, 0x04, 0xe0,
+  0x17, 0x34, 0xa9, 0xcf, 0xf5, 0xe6, 0xc1, 0xf0, 0x96, 0x4d, 0x20, 0xfb,
+  0xda, 0x71, 0x75, 0xce, 0xd4, 0x6c, 0x9e, 0x54, 0x2d, 0x27, 0x3c, 0x47,
+  0x4b, 0x23, 0x44, 0xd2, 0x1e, 0x8a, 0xc6, 0x37, 0x6e, 0x3d, 0x16, 0xf8,
+  0xca, 0x25, 0x6e, 0x84, 0x78, 0x1e, 0x8e, 0xd3, 0x65, 0x79, 0x4f, 0x32,
+  0x59, 0x78, 0x47, 0x5f, 0x48, 0x56, 0x63, 0xed, 0x3b, 0x1e, 0xaf, 0xf3,
+  0xed, 0xba, 0xaa, 0x16, 0x2e, 0x1f, 0xd7, 0x78, 0x3d, 0x4c, 0x6a, 0x92,
+  0x6a, 0x9e, 0xe4, 0xec, 0xe2, 0x40, 0xd8, 0x16, 0x8b, 0xb1, 0xf7, 0x4d,
+  0x8e, 0xae, 0xb5, 0x78, 0x70, 0x1e, 0xb8, 0xee, 0x03, 0x1b, 0xc9, 0x24,
+  0xd7, 0x50, 0x67, 0xad, 0x4b, 0x46, 0x57, 0xc4, 0x75, 0x7a, 0x27, 0xd4,
+  0x62, 0x23, 0x6b, 0xc9, 0x78, 0x73, 0x63, 0x30, 0x51, 0xdf, 0x3b, 0xf7,
+  0x05, 0xbd, 0x21, 0x2a, 0x50, 0x9e, 0xc3, 0xd2, 0xe6, 0xc7, 0xd9, 0x94,
+  0xef, 0x39, 0x29, 0x6b, 0x4e, 0x84, 0x5d, 0xf7, 0xc3, 0x7d, 0x4d, 0x52,
+  0xdd, 0x7e, 0xa7, 0x3d, 0xde, 0xdd, 0x23, 0x0b, 0x15, 0x0e, 0xca, 0x17,
+  0xd1, 0x29, 0xb6, 0xcb, 0x38, 0xb2, 0x44, 0x7d, 0xdb, 0x3a, 0x5e, 0x0b,
+  0x68, 0x6f, 0x1d, 0xb5, 0xa5, 0x6b, 0x2c, 0x10, 0xd3, 0x38, 0xe9, 0x67,
+  0x57, 0x7d, 0x54, 0x73, 0xe4, 0x32, 0x7a, 0xac, 0x95, 0x05, 0x04, 0x8d,
+  0xd4, 0x5d, 0xde, 0x22, 0x6a, 0xbb, 0xed, 0x96, 0xd4, 0xa0, 0xf8, 0xdc,
+  0x59, 0xec, 0x74, 0x40, 0xba, 0x26, 0xfb, 0x6c, 0xe5, 0xb1, 0xd7, 0x1d,
+  0x8a, 0x1b, 0x27, 0x4a, 0xc6, 0x79, 0x9e, 0xd2, 0x29, 0x6c, 0x80, 0x1f,
+  0x23, 0x84, 0xb1, 0x27, 0x17, 0xa9, 0x44, 0x84, 0xb1, 0xbb, 0x67, 0x26,
+  0x4e, 0x3e, 0x78, 0x69, 0x96, 0x0b, 0x48, 0x84, 0x9c, 0xb3, 0xdd, 0x26,
+  0xfb, 0xfa, 0x64, 0xb7, 0x5a, 0x29, 0x45, 0x38, 0x30, 0xc2, 0xdc, 0xe0,
+  0x75, 0x48, 0x28, 0x55, 0xdf, 0x03, 0xf4, 0x23, 0x77, 0x07, 0x56, 0xc5,
+  0x60, 0x38, 0x60, 0xfc, 0xa2, 0x6f, 0x8b, 0xe1, 0xb5, 0x2d, 0x16, 0x89,
+  0x5f, 0x31, 0xee, 0x11, 0xc8, 0xce, 0x5c, 0xfe, 0x7a, 0xb1, 0x1c, 0xcd,
+  0x26, 0xcf, 0xa2, 0x97, 0xf4, 0xcf, 0xe7, 0x2d, 0xbe, 0x73, 0x54, 0x37,
+  0x17, 0x91, 0x4f, 0x05, 0x21, 0xfc, 0xfe, 0x64, 0x8f, 0x8f, 0xc3, 0x03,
+  0xb5, 0x38, 0x4e, 0x01, 0x2e, 0x33, 0x49, 0xaf, 0xd3, 0xb2, 0x70, 0x49,
+  0x84, 0x78, 0x65, 0x7d, 0x59, 0x2d, 0xac, 0xd0, 0xee, 0xde, 0x67, 0xd1,
+  0x28, 0x2d, 0xa3, 0x37, 0x47, 0xcf, 0xa4, 0x34, 0x5f, 0xb1, 0x9c, 0xf9,
+  0x12, 0xae, 0xc0, 0x0e, 0xe6, 0x01, 0x92, 0x74, 0x4a, 0x63, 0x9c, 0x36,
+  0x6a, 0xe4, 0xdc, 0x26, 0xab, 0x5e, 0xa5, 0x3a, 0xc4, 0x95, 0x79, 0x66,
+  0x03, 0x23, 0xbb, 0xa3, 0x37, 0x29, 0xf5, 0x6d, 0x4e, 0xfb, 0x16, 0x81,
+  0x9e, 0xe6, 0x4f, 0xfd, 0x17, 0x91, 0x55, 0xf5, 0xaa, 0x88, 0x9b, 0x56,
+  0xd5, 0x01, 0x19, 0x8f, 0x87, 0xe7, 0xd8, 0xcc, 0x61, 0x15, 0xc9, 0xe5,
+  0x31, 0x8c, 0xdc, 0x4f, 0xab, 0xa6, 0x55, 0x29, 0xcf, 0x69, 0xd8, 0x46,
+  0x7d, 0x52, 0xae, 0xae, 0xd7, 0xd5, 0x5c, 0x3c, 0xc1, 0xa3, 0x15, 0x0b,
+  0xd9, 0x29, 0x1e, 0x77, 0x99, 0xcf, 0x41, 0x94, 0x16, 0x1f, 0x84, 0x74,
+  0xcc, 0xa5, 0x6f, 0x1b, 0x28, 0xad, 0x4b, 0x81, 0x41, 0xc6, 0x04, 0xac,
+  0x12, 0x68, 0xbe, 0x14, 0xec, 0xf3, 0x83, 0x05, 0x1b, 0x79, 0xa2, 0xdd,
+  0xc1, 0x43, 0x2f, 0x2c, 0x44, 0xa6, 0x48, 0xf9, 0x5c, 0x6e, 0xac, 0xe1,
+  0x81, 0x42, 0x34, 0x46, 0x6d, 0x40, 0xdc, 0xb4, 0x58, 0xd7, 0xa6, 0x1c,
+  0x9e, 0x94, 0x0b, 0x13, 0xde, 0x23, 0x66, 0x76, 0x1d, 0x03, 0xa4, 0x3d,
+  0xa0, 0xbc, 0x94, 0xce, 0x81, 0x42, 0x9f, 0xad, 0x99, 0xb7, 0x7c, 0xe9,
+  0xb2, 0xdf, 0xed, 0x12, 0x56, 0x39, 0x5c, 0x43, 0x7b, 0x8d, 0xdc, 0x82,
+  0x27, 0x9a, 0xc5, 0xd2, 0xb8, 0x1d, 0xec, 0x38, 0x8e, 0xaf, 0xe8, 0xbf,
+  0xba, 0x06, 0x7d, 0xbe, 0xf9, 0x7a, 0x11, 0xea, 0xa9, 0x2b, 0xe1, 0xf9,
+  0xa0, 0x66, 0x34, 0xda, 0x0c, 0xe2, 0x2f, 0xac, 0xde, 0x2f, 0x47, 0x3b,
+  0x0d, 0x06, 0xe1, 0x71, 0x02, 0x27, 0xbf, 0x62, 0xf6, 0xd7, 0x9a, 0xcb,
+  0x7d, 0x2e, 0xd8, 0x86, 0xd5, 0x3a, 0xd6, 0x16, 0x2f, 0xe1, 0xc5, 0x64,
+  0xd7, 0xca, 0xc0, 0x59, 0x05, 0xd8, 0xa7, 0xd9, 0x32, 0x35, 0xeb, 0x2d,
+  0x92, 0x69, 0x84, 0xfe, 0xfd, 0xb0, 0xb6, 0xfd, 0x20, 0x3a, 0x98, 0x9b,
+  0x2e, 0xae, 0x45, 0xc5, 0x38, 0x77, 0xa7, 0x51, 0x05, 0xe6, 0x36, 0x69,
+  0x98, 0x04, 0xd4, 0x26, 0x10, 0xcc, 0x8c, 0xe4, 0xaa, 0x9d, 0xfd, 0xdd,
+  0xb0, 0x7e, 0xd0, 0x5c, 0x0b, 0x4d, 0xa0, 0xa8, 0xce, 0x6f, 0x17, 0x7d,
+  0x7f, 0xa2, 0x92, 0x58, 0x1b, 0xbd, 0x30, 0x3c, 0xf7, 0xf6, 0xeb, 0x93,
+  0xd3, 0xe3, 0xad, 0xe8, 0x75, 0x02, 0x5c, 0x91, 0x1a, 0xd9, 0xf0, 0xe1,
+  0xfd, 0x9d, 0x7c, 0x62, 0xd4, 0xaf, 0x4a, 0x68, 0x5b, 0xce, 0x9b, 0x73,
+  0xd5, 0x43, 0x9e, 0x96, 0x23, 0x81, 0x59, 0x48, 0x5e, 0x56, 0x06, 0xd3,
+  0xa5, 0x81, 0xb0, 0x5b, 0x30, 0x63, 0x2b, 0xf9, 0xc1, 0xd6, 0xe6, 0x2b,
+  0xe6, 0x78, 0x14, 0x7a, 0x94, 0x93, 0xd7, 0x38, 0x60, 0x1e, 0x78, 0xa4,
+  0x16, 0x39, 0x0b, 0x0e, 0xd5, 0xca, 0xe9, 0x2d, 0xa3, 0x93, 0x5a, 0x76,
+  0xe9, 0xcf, 0x12, 0x8c, 0x8e, 0x55, 0x9b, 0x65, 0x13, 0x07, 0x43, 0x29,
+  0x95, 0x6d, 0x78, 0xbe, 0xc1, 0xda, 0xfd, 0x95, 0xd6, 0xee, 0xaf, 0xcb,
+  0xf9, 0x6d, 0x5f, 0x2b, 0x18, 0x2a, 0xa0, 0x47, 0xd1, 0x7e, 0xf6, 0xbe,
+  0x73, 0x41, 0x28, 0x08, 0x0c, 0x16, 0x43, 0x67, 0xb3, 0x90, 0x5f, 0xac,
+  0x51, 0xa7, 0x32, 0xf0, 0xf5, 0x85, 0x80, 0xbc, 0xf0, 0x20, 0xc5, 0xd7,
+  0xc7, 0x1c, 0x91, 0x0c, 0x05, 0xb1, 0x63, 0x05, 0x15, 0xad, 0xe1, 0xce,
+  0x20, 0x84, 0x60, 0x6c, 0x40, 0xdb, 0x16, 0x96, 0x7a, 0x76, 0xe3, 0xca,
+  0xe1, 0x41, 0x7e, 0xd5, 0xf0, 0x12, 0x16, 0x6d, 0x78, 0xbd, 0xe9, 0xa2,
+  0xf7, 0xa5, 0x1a, 0x0b, 0xc1, 0x99, 0x65, 0x52, 0xaa, 0x5d, 0xb3, 0x92,
+  0x10, 0x68, 0x28, 0xe1, 0x85, 0x01, 0x00, 0xd9, 0x08, 0xa3, 0xfa, 0xe0,
+  0x0c, 0x41, 0x9c, 0x65, 0x83, 0x6e, 0x83, 0x70, 0xc6, 0xd3, 0x4c, 0xaa,
+  0x23, 0xdd, 0x87, 0x6e, 0xcd, 0xff, 0xc4, 0x7d, 0xcf, 0x57, 0x99, 0x52,
+  0x62, 0xbf, 0x25, 0x42, 0xde, 0x15, 0x7b, 0x0b, 0x0e, 0x8a, 0x64, 0x8a,
+  0x41, 0x8e, 0x38, 0xf3, 0x6d, 0xcc, 0x83, 0xd2, 0xe0, 0x3e, 0x17, 0xa9,
+  0x15, 0x36, 0xab, 0x1f, 0xe8, 0xdd, 0x8e, 0x53, 0x1f, 0x11, 0x59, 0x65,
+  0x45, 0x2a, 0x92, 0x85, 0x33, 0x0a, 0x06, 0x82, 0x78, 0x4b, 0x41, 0x47,
+  0x03, 0x37, 0x00, 0x97, 0x72, 0xaf, 0x38, 0x4f, 0x15, 0xc7, 0x1c, 0xfb,
+  0xf9, 0xde, 0x82, 0xaf, 0x17, 0x6d, 0x71, 0x63, 0x96, 0x4e, 0x15, 0x4a,
+  0x37, 0x81, 0xa1, 0x53, 0x05, 0x7d, 0x07, 0x97, 0xae, 0xbc, 0xb2, 0x63,
+  0xad, 0x75, 0x9a, 0x41, 0x23, 0x21, 0xd2, 0x80, 0x98, 0xce, 0x3c, 0xc2,
+  0xd3, 0x01, 0xd1, 0x57, 0xe3, 0x11, 0x8e, 0x57, 0x90, 0xc8, 0xf5, 0xa4,
+  0xa5, 0x9e, 0xb7, 0x20, 0x76, 0xd3, 0x26, 0x59, 0x6c, 0x83, 0xab, 0x1b,
+  0xd8, 0x92, 0x9b, 0x27, 0x39, 0x8c, 0x58, 0xb7, 0x98, 0x1d, 0x68, 0x75,
+  0x5a, 0x5d, 0x99, 0xb3, 0x56, 0xf5, 0x18, 0xf3, 0xae, 0x48, 0xe1, 0x20,
+  0x3f, 0xa6, 0x10, 0xbe, 0x7f, 0xfd, 0x64, 0x51, 0xc1, 0xc6, 0xe2, 0x0d,
+  0xc3, 0x35, 0x6e, 0x86, 0x1b, 0x06, 0xa2, 0xa8, 0x37, 0x72, 0xa1, 0x2c,
+  0x0d, 0x8b, 0xd8, 0xb8, 0xba, 0xad, 0xc8, 0x89, 0x06, 0x30, 0x44, 0xce,
+  0x5e, 0x1b, 0xb9, 0xba, 0x72, 0x6b, 0xca, 0xc5, 0x21, 0xf9, 0xf2, 0x26,
+  0x7e, 0x78, 0x18, 0x14, 0x89, 0xd4, 0x4f, 0x2b, 0x8a, 0x29, 0x12, 0x3d,
+  0xab, 0x75, 0xe2, 0x38, 0xc7, 0x3f, 0x59, 0xc4, 0x53, 0x44, 0x3b, 0x32,
+  0x3f, 0x5a, 0x57, 0x8f, 0xab, 0x62, 0xd2, 0x4b, 0x34, 0xda, 0x0d, 0x6f,
+  0xc4, 0xd5, 0xaa, 0x59, 0x8c, 0x0a, 0x55, 0x18, 0xc4, 0x37, 0x07, 0x61,
+  0x11, 0xcd, 0x4e, 0x1a, 0x4e, 0x27, 0x0d, 0xec, 0x82, 0xfb, 0x87, 0x37,
+  0xce, 0x8d, 0x82, 0xd5, 0x8d, 0x91, 0x1a, 0xa2, 0x5d, 0x17, 0xe6, 0x23,
+  0x4b, 0xe9, 0xe1, 0xbb, 0x74, 0xb2, 0x6c, 0x68, 0xbb, 0xf5, 0xd7, 0xad,
+  0x1a, 0x6f, 0x90, 0x7a, 0x01, 0xce, 0xc3, 0x4f, 0x64, 0xee, 0x52, 0x07,
+  0x74, 0x2f, 0xaa, 0x3c, 0x36, 0x2e, 0x83, 0x2b, 0x85, 0xe1, 0xc0, 0x2d,
+  0x73, 0x79, 0x78, 0xfe, 0xfe, 0x9b, 0xe3, 0xe3, 0xf3, 0x93, 0x23, 0x66,
+  0xff, 0xb8, 0x6f, 0xdc, 0x47, 0x6f, 0x2f, 0xbf, 0x3d, 0xf5, 0x50, 0x1c,
+  0xaa, 0x29, 0xd4, 0x0f, 0x14, 0x1b, 0x7e, 0xb9, 0xb9, 0xd3, 0x74, 0xbe,
+  0x7c, 0xe8, 0xa1, 0x0c, 0x15, 0xe9, 0x19, 0x07, 0x27, 0xdf, 0x93, 0xec,
+  0x72, 0xde, 0x7f, 0xf7, 0x7d, 0x23, 0x7b, 0x2a, 0x08, 0xca, 0xa3, 0xeb,
+  0xab, 0x7e, 0xce, 0x5d, 0x8c, 0x1e, 0x30, 0xc2, 0xfc, 0xdc, 0x8d, 0xc4,
+  0x5a, 0x40, 0x98, 0x3f, 0x32, 0xe6, 0xb8, 0xaa, 0xb5, 0x84, 0xd7, 0xbd,
+  0xb3, 0x2e, 0x61, 0xf7, 0x5b, 0x6e, 0xbb, 0x78, 0xc6, 0x89, 0x46, 0x83,
+  0x90, 0xb0, 0x56, 0xd1, 0x4b, 0xfa, 0xa7, 0x2d, 0x5b, 0x73, 0x9b, 0x8b,
+  0xd9, 0x47, 0xe7, 0x01, 0x76, 0x85, 0x73, 0x61, 0x0d, 0x2c, 0x6e, 0x49,
+  0x2d, 0x09, 0x9a, 0x7f, 0xa4, 0x3e, 0xc2, 0xbc, 0x01, 0x62, 0xe9, 0x5a,
+  0xf0, 0xb5, 0x7f, 0x61, 0xde, 0x4b, 0xda, 0x9d, 0x8f, 0xbf, 0x62, 0x9a,
+  0x2a, 0x75, 0xfa, 0x41, 0x40, 0x84, 0xe6, 0x1c, 0xf9, 0xd9, 0x81, 0x83,
+  0x84, 0x51, 0x91, 0x85, 0x5b, 0xc1, 0x04, 0x65, 0xd9, 0x5a, 0xf0, 0xda,
+  0x05, 0x31, 0x21, 0x44, 0xfb, 0x48, 0x89, 0xca, 0x8f, 0x8e, 0x2f, 0x7a,
+  0x02, 0x92, 0x10, 0x02, 0x24, 0x78, 0x14, 0xa0, 0x81, 0x15, 0x70, 0x2e,
+  0x5b, 0x8d, 0x57, 0xc0, 0x32, 0xf9, 0xf7, 0x61, 0x23, 0xdc, 0xe6, 0xa3,
+  0xe8, 0x25, 0x02, 0xfe, 0xd6, 0x04, 0x52, 0x6b, 0x81, 0xd9, 0x6f, 0x92,
+  0x7c, 0x94, 0xe4, 0x59, 0x51, 0x4f, 0xa2, 0xd3, 0x84, 0x7b, 0x2d, 0xe4,
+  0xc9, 0xed, 0x58, 0x26, 0x6e, 0x33, 0xb0, 0x10, 0x7c, 0x9a, 0x5f, 0x68,
+  0xa4, 0x0b, 0x75, 0x11, 0x39, 0xd7, 0xed, 0x45, 0x5d, 0x4e, 0x14, 0xe4,
+  0x9f, 0xc4, 0xbe, 0xae, 0xe0, 0x18, 0x49, 0xe3, 0x69, 0xb7, 0xd7, 0x84,
+  0x4c, 0xec, 0xea, 0xb2, 0x77, 0x39, 0xf0, 0x51, 0x55, 0x63, 0xd8, 0x51,
+  0x60, 0x36, 0x64, 0x2c, 0x26, 0x8c, 0xc5, 0x60, 0x59, 0xd8, 0x8c, 0xe1,
+  0x0d, 0x74, 0x45, 0x03, 0xcb, 0xca, 0x35, 0x57, 0x37, 0x1f, 0xb7, 0x5f,
+  0x10, 0x21, 0x43, 0xd0, 0xc0, 0x48, 0xd6, 0xf5, 0x2d, 0x91, 0x5d, 0x52,
+  0xdd, 0x05, 0x44, 0xf6, 0x56, 0x17, 0xee, 0xa9, 0xd8, 0xe8, 0xbf, 0x1a,
+  0x0e, 0x0f, 0xce, 0x4f, 0xea, 0x4b, 0x4d, 0x9f, 0xf6, 0xdf, 0x5a, 0x2d,
+  0xf9, 0x2d, 0x47, 0x2c, 0xde, 0x22, 0xcc, 0xe3, 0x47, 0xee, 0x11, 0x4b,
+  0xd7, 0x1c, 0x27, 0x02, 0x2c, 0xaa, 0x6f, 0xe9, 0x32, 0x5b, 0x13, 0xe1,
+  0xa8, 0xc0, 0x43, 0x6a, 0xe2, 0xcc, 0xa3, 0x4a, 0x8d, 0x4a, 0x92, 0x25,
+  0x7f, 0x43, 0x9a, 0xfa, 0x46, 0xea, 0x9e, 0x5d, 0xa5, 0xd7, 0x1c, 0xa4,
+  0x8f, 0x9f, 0x6d, 0x38, 0x4c, 0xd5, 0xe3, 0x16, 0x3c, 0xe8, 0x05, 0x66,
+  0x40, 0x9e, 0x69, 0x8e, 0x99, 0xc8, 0xcd, 0x8a, 0x9d, 0xdc, 0x12, 0x6e,
+  0xc2, 0x6f, 0xab, 0x53, 0x37, 0x0d, 0x82, 0x26, 0x20, 0x66, 0xb8, 0x3e,
+  0x66, 0xae, 0x06, 0x49, 0xd0, 0xae, 0x78, 0x4a, 0xeb, 0xa6, 0x36, 0xad,
+  0x97, 0x67, 0xfa, 0x4b, 0x32, 0xaf, 0x4c, 0x57, 0xc5, 0x65, 0xb1, 0x74,
+  0xb1, 0xcb, 0xdf, 0x9e, 0x37, 0x3b, 0x62, 0xdd, 0xd4, 0x36, 0x2e, 0x19,
+  0xd7, 0x39, 0x1c, 0xc1, 0x20, 0x3a, 0x5b, 0x04, 0xd2, 0xd7, 0x4d, 0x92,
+  0xe6, 0xde, 0x23, 0xea, 0xf3, 0xd9, 0xc1, 0x15, 0x9a, 0x93, 0x15, 0x2d,
+  0x28, 0x28, 0xb7, 0x32, 0x0f, 0x16, 0x40, 0x8a, 0xac, 0x38, 0xae, 0x2b,
+  0x48, 0xfc, 0x3c, 0x95, 0x32, 0x29, 0x16, 0xa4, 0x87, 0x36, 0xaa, 0x84,
+  0x8a, 0x75, 0x53, 0x90, 0x0f, 0x18, 0x80, 0xba, 0x40, 0x14, 0x4e, 0x04,
+  0xcc, 0xfe, 0x55, 0xc5, 0xe9, 0x02, 0x97, 0x27, 0x9d, 0xa2, 0x4d, 0x05,
+  0x30, 0x6c, 0xab, 0xca, 0x26, 0x3e, 0x83, 0x1c, 0xd4, 0x63, 0xd8, 0xff,
+  0x1a, 0x0b, 0x12, 0xb4, 0x2e, 0xc5, 0x1c, 0x05, 0x7f, 0x2b, 0xf0, 0x03,
+  0xb7, 0xa4, 0x45, 0xaa, 0x0b, 0x31, 0x9c, 0x80, 0xe1, 0xab, 0xb8, 0x37,
+  0x35, 0x8f, 0x7f, 0x04, 0xa8, 0x20, 0x55, 0x27, 0x14, 0xfc, 0xa1, 0x81,
+  0x05, 0x95, 0x01, 0x63, 0xe5, 0x3b, 0x41, 0x86, 0x98, 0x64, 0x4b, 0xe6,
+  0x6f, 0xf2, 0x69, 0xdd, 0x83, 0x93, 0x48, 0x11, 0xc8, 0x82, 0x9d, 0x42,
+  0xec, 0xc5, 0x69, 0x29, 0x52, 0xe1, 0xa0, 0x19, 0xf6, 0xa3, 0xe8, 0x2f,
+  0x7f, 0xe9, 0x45, 0x7f, 0xe9, 0xd0, 0xff, 0x4a, 0xfa, 0x1f, 0x2d, 0xe8,
+  0x5f, 0xa4, 0xe6, 0xc1, 0x5f, 0xee, 0xe8, 0x02, 0x8d, 0xb8, 0x76, 0x61,
+  0x31, 0x65, 0x10, 0x01, 0x0f, 0x68, 0xdf, 0xcc, 0x23, 0x94, 0x10, 0x43,
+  0x2d, 0xe2, 0xc1, 0x67, 0x1f, 0x26, 0xac, 0x89, 0x5b, 0x2b, 0x49, 0xad,
+  0xa1, 0x0d, 0x5b, 0xce, 0xe6, 0xa2, 0x20, 0xeb, 0xd6, 0x83, 0xa8, 0x1b,
+  0x5a, 0x24, 0x31, 0xc2, 0xee, 0x27, 0x5d, 0x75, 0x9b, 0x97, 0x96, 0xda,
+  0x1a, 0x46, 0x69, 0xe2, 0x3d, 0x57, 0x95, 0x5c, 0x0b, 0x46, 0xc2, 0x32,
+  0xdc, 0x16, 0xaf, 0x09, 0x45, 0xfc, 0x8c, 0x8d, 0x79, 0x52, 0x60, 0x14,
+  0x3c, 0x55, 0x38, 0x06, 0x1b, 0xa4, 0xa3, 0xc5, 0xcd, 0x0a, 0x7a, 0xa6,
+  0xd0, 0xa0, 0xf8, 0xec, 0x2c, 0xc6, 0x97, 0x46, 0xd9, 0x52, 0x7e, 0xa4,
+  0x29, 0x7c, 0x07, 0xc8, 0x6c, 0x4e, 0x63, 0x62, 0xb7, 0x7b, 0xc0, 0x57,
+  0x68, 0x7c, 0xdd, 0x7e, 0xb7, 0x8a, 0x8d, 0x68, 0xb5, 0x6e, 0xda, 0xea,
+  0xe1, 0x04, 0xa5, 0x6b, 0x1a, 0x35, 0x34, 0x3d, 0xf2, 0x97, 0x44, 0xa9,
+  0x8d, 0x84, 0x03, 0x39, 0x57, 0x12, 0x5c, 0x84, 0x66, 0x39, 0x0b, 0xcf,
+  0x59, 0x0f, 0x37, 0x4e, 0xa3, 0x66, 0x89, 0xa4, 0xa6, 0x79, 0x5f, 0x14,
+  0xd2, 0xfb, 0xbd, 0x2a, 0xd4, 0xef, 0x4b, 0x95, 0x4d, 0x71, 0x9c, 0x33,
+  0x79, 0xa0, 0x4e, 0xe1, 0x8a, 0x83, 0x6d, 0x16, 0x0d, 0xcb, 0x23, 0xaf,
+  0xb2, 0xbd, 0xc9, 0xe3, 0x60, 0xce, 0xcc, 0x05, 0x77, 0xee, 0xe7, 0xca,
+  0x43, 0x86, 0x19, 0x00, 0xa8, 0xc5, 0x30, 0xa5, 0xa8, 0x32, 0x85, 0x0f,
+  0xd2, 0x68, 0xf1, 0xda, 0x37, 0xcc, 0x54, 0x3c, 0x9e, 0x57, 0x51, 0x67,
+  0xad, 0x96, 0xd2, 0xa9, 0xbf, 0x70, 0x9a, 0xc1, 0xb9, 0xa9, 0x36, 0x76,
+  0x41, 0xfb, 0x13, 0x4b, 0x9b, 0xc1, 0xb4, 0x4d, 0x81, 0x4a, 0x22, 0x16,
+  0x0e, 0x5f, 0xf4, 0xdb, 0x18, 0xfc, 0x1a, 0x5f, 0x8c, 0x38, 0xb1, 0x04,
+  0x3a, 0x52, 0x4f, 0x25, 0xd7, 0x4b, 0x5d, 0x07, 0x7b, 0x6a, 0x36, 0x16,
+  0xce, 0xe1, 0xbf, 0x65, 0xa1, 0x29, 0x2d, 0xcd, 0x0a, 0xb1, 0x69, 0xda,
+  0xde, 0xdf, 0xec, 0x1e, 0xdb, 0x52, 0x1b, 0xb9, 0xe4, 0xa5, 0xae, 0x43,
+  0x09, 0xab, 0x72, 0x51, 0x28, 0x15, 0x30, 0x5a, 0xa5, 0x90, 0xec, 0xaf,
+  0x48, 0x98, 0x9e, 0x54, 0x63, 0x89, 0xd7, 0x52, 0x35, 0x14, 0x1d, 0xee,
+  0x31, 0x91, 0x6c, 0x0b, 0x5d, 0x04, 0xcf, 0x59, 0xe0, 0x73, 0x28, 0x9c,
+  0x80, 0x9c, 0xe5, 0xa4, 0xc5, 0x36, 0x76, 0x66, 0x77, 0x4b, 0x55, 0x7a,
+  0x94, 0xff, 0x43, 0x35, 0x48, 0x55, 0xc1, 0x3a, 0x37, 0x99, 0x60, 0xfd,
+  0x74, 0xf6, 0x59, 0xad, 0x12, 0xae, 0x60, 0x73, 0x74, 0xa1, 0xf5, 0xf5,
+  0x9c, 0x1c, 0x06, 0x53, 0xfa, 0xfa, 0xec, 0xcd, 0xb1, 0xcb, 0x78, 0x15,
+  0x53, 0x1f, 0x7f, 0xd2, 0x8a, 0xf1, 0x38, 0x40, 0x36, 0x81, 0x21, 0x40,
+  0xf4, 0x9a, 0xb5, 0x3c, 0xb1, 0x3a, 0xd7, 0x49, 0xb9, 0xb8, 0x5f, 0xa6,
+  0x93, 0x4d, 0xa0, 0x74, 0xbc, 0x7b, 0x7b, 0xf2, 0x7d, 0x1f, 0x66, 0x62,
+  0xd5, 0xe3, 0x0c, 0xa6, 0xc2, 0x10, 0x2e, 0xd4, 0x9f, 0x30, 0x6b, 0xc1,
+  0x64, 0xb1, 0xe2, 0x0c, 0xa0, 0x17, 0x85, 0x25, 0x42, 0xb2, 0x5f, 0x3a,
+  0x17, 0x29, 0x46, 0x9a, 0xdc, 0x62, 0x16, 0x44, 0xfc, 0x1b, 0x68, 0x4b,
+  0xd8, 0xf7, 0x96, 0xec, 0xdd, 0x60, 0xbf, 0xb9, 0xb9, 0x83, 0xf3, 0xf3,
+  0xa3, 0x83, 0xcb, 0x03, 0x37, 0x37, 0x80, 0x1b, 0x81, 0xcd, 0x41, 0x9c,
+  0x61, 0xbd, 0x3e, 0x17, 0x12, 0xec, 0xfe, 0x9e, 0xf3, 0x03, 0xeb, 0x9c,
+  0xef, 0xfc, 0xe2, 0x8c, 0x2d, 0x8d, 0xbf, 0xff, 0xcb, 0x81, 0xaf, 0x24,
+  0x87, 0x9a, 0x49, 0xcd, 0x82, 0x5e, 0x7b, 0x24, 0xc0, 0x9d, 0x21, 0xa4,
+  0xc3, 0x06, 0xa8, 0x91, 0x42, 0x22, 0xc8, 0x45, 0xef, 0x79, 0x4f, 0xf3,
+  0xb1, 0x13, 0x4e, 0x60, 0xff, 0xd4, 0xed, 0xec, 0x35, 0x73, 0xcb, 0x82,
+  0x89, 0x30, 0xb7, 0xad, 0x61, 0x3d, 0xd9, 0x5a, 0x4d, 0xa3, 0xe4, 0x21,
+  0x19, 0x2f, 0x4b, 0xb0, 0x2f, 0x8e, 0x6e, 0x67, 0xfa, 0x9a, 0xf0, 0x42,
+  0xd5, 0x1d, 0xf5, 0x6e, 0x7f, 0x6c, 0x83, 0x04, 0x81, 0x04, 0x57, 0x80,
+  0xf0, 0x20, 0x49, 0xea, 0xcc, 0xa4, 0x80, 0xc6, 0xc0, 0x46, 0xab, 0x36,
+  0xab, 0xc6, 0xd9, 0x11, 0x10, 0x45, 0xa2, 0x73, 0x9b, 0x43, 0x63, 0x41,
+  0x3e, 0x21, 0xa6, 0xd7, 0xb7, 0x10, 0x53, 0x99, 0x36, 0x7d, 0xd0, 0x78,
+  0xa8, 0x74, 0xb5, 0x20, 0x58, 0x4c, 0x6a, 0x7a, 0x3f, 0x95, 0x4f, 0x85,
+  0x0c, 0xaa, 0x6e, 0xea, 0x51, 0xd0, 0x18, 0x7d, 0x0a, 0x50, 0xc5, 0x88,
+  0x42, 0x6c, 0xfa, 0x73, 0xcc, 0xb1, 0x48, 0x8f, 0x92, 0x54, 0x4c, 0x22,
+  0x2e, 0xff, 0xb5, 0xbd, 0x3b, 0xd8, 0xe9, 0x34, 0x47, 0x8f, 0x94, 0x56,
+  0x58, 0xc6, 0xe3, 0xb9, 0xdc, 0xcf, 0x02, 0xcc, 0x9b, 0x7d, 0x78, 0x80,
+  0xc2, 0x41, 0x49, 0xe6, 0x43, 0xd4, 0x42, 0xdb, 0x58, 0xfa, 0x67, 0x0d,
+  0xef, 0x90, 0x78, 0x38, 0x3d, 0x4b, 0x9e, 0x67, 0x08, 0x2b, 0x8d, 0xd9,
+  0x58, 0x06, 0x3f, 0x41, 0xa7, 0x7d, 0x81, 0xe7, 0x13, 0x89, 0x76, 0xa8,
+  0xad, 0xf3, 0x3f, 0x15, 0x24, 0xe8, 0xf6, 0xdf, 0x7f, 0xbe, 0x9e, 0xdb,
+  0x55, 0xdc, 0xa2, 0xa4, 0x04, 0x81, 0x1e, 0x5b, 0xc1, 0x57, 0x0f, 0x04,
+  0x00, 0xb9, 0x16, 0xfc, 0xc4, 0x9e, 0x58, 0xae, 0x33, 0xc8, 0x81, 0x55,
+  0xac, 0x3f, 0x69, 0x0e, 0xe7, 0x2c, 0xa8, 0x18, 0x18, 0x4b, 0x48, 0x72,
+  0xe3, 0xea, 0x70, 0xf5, 0xa5, 0xb5, 0xdb, 0xbe, 0xdc, 0xb4, 0x6a, 0xa5,
+  0x43, 0xa1, 0x96, 0xa0, 0x8e, 0x76, 0x98, 0xbe, 0xbf, 0x06, 0x1e, 0xc4,
+  0xc4, 0x54, 0x52, 0x07, 0xa7, 0x82, 0xa7, 0x22, 0xe1, 0xb4, 0xa2, 0x45,
+  0xc9, 0x98, 0xc4, 0xe3, 0xee, 0xdd, 0x50, 0xfc, 0xde, 0xef, 0xda, 0x8a,
+  0x73, 0xef, 0xeb, 0x4c, 0x15, 0x7e, 0xa1, 0x54, 0xc7, 0x3d, 0x87, 0x79,
+  0x68, 0xa6, 0x52, 0xff, 0xb5, 0x33, 0xab, 0x99, 0xdd, 0x8d, 0x7a, 0xa4,
+  0x35, 0x6f, 0x82, 0x84, 0x4a, 0xb0, 0x7b, 0x96, 0xcf, 0x50, 0x41, 0x0c,
+  0x30, 0x7d, 0x60, 0x06, 0x19, 0x03, 0x2c, 0xc4, 0x06, 0x7a, 0xa7, 0x47,
+  0x80, 0x3a, 0xba, 0x26, 0xd9, 0x78, 0x2d, 0x22, 0xaa, 0x81, 0x8c, 0xf8,
+  0x32, 0xbc, 0xec, 0x1d, 0x28, 0x2c, 0xb5, 0xf6, 0x3d, 0xf0, 0xb3, 0x26,
+  0x93, 0xcd, 0x27, 0x5b, 0xb2, 0xf6, 0xae, 0xc2, 0x36, 0x1c, 0x77, 0x1f,
+  0xac, 0xaa, 0xfd, 0x21, 0xf5, 0xd1, 0x3b, 0x3f, 0xda, 0x50, 0x6f, 0x2a,
+  0x8a, 0xe5, 0xa3, 0x79, 0x36, 0x53, 0x12, 0x75, 0xca, 0x3e, 0x4c, 0x4b,
+  0x2f, 0x49, 0xe0, 0x4a, 0x26, 0x9f, 0x3f, 0x22, 0x4d, 0xce, 0xe2, 0x87,
+  0x74, 0xb6, 0x9c, 0xf9, 0xc4, 0x38, 0xbc, 0xe7, 0xcb, 0x3c, 0x78, 0x50,
+  0x2e, 0x58, 0x34, 0xda, 0xf0, 0xa5, 0xd4, 0xef, 0xa5, 0xf3, 0x03, 0x32,
+  0xb1, 0xc4, 0x10, 0xc1, 0xa9, 0xc2, 0x54, 0x48, 0xe3, 0x61, 0xa3, 0x50,
+  0xba, 0x48, 0x8c, 0x66, 0xbb, 0x13, 0x71, 0x9b, 0x32, 0x05, 0xd5, 0x37,
+  0xd5, 0x46, 0x82, 0xaa, 0x06, 0xe2, 0x93, 0x90, 0x80, 0xa0, 0x79, 0xc9,
+  0xd9, 0x72, 0x23, 0x6a, 0xe2, 0x3e, 0x9d, 0x94, 0x37, 0xad, 0x78, 0x83,
+  0xb2, 0x88, 0x98, 0x76, 0x24, 0x08, 0x25, 0x1c, 0x60, 0x82, 0x95, 0x82,
+  0xcb, 0x78, 0x5b, 0xec, 0xc6, 0x2e, 0xd9, 0x3e, 0x26, 0xaa, 0xbb, 0xe2,
+  0xec, 0x88, 0x16, 0x3d, 0x41, 0xc3, 0xe2, 0x06, 0xee, 0x8c, 0x4a, 0xd5,
+  0xcc, 0x5b, 0x09, 0x42, 0xfd, 0x46, 0xed, 0x22, 0x02, 0x5c, 0x84, 0x78,
+  0x6a, 0x89, 0xae, 0xa2, 0x1b, 0xf4, 0x36, 0x9d, 0x36, 0x0b, 0x29, 0xae,
+  0xa0, 0x4c, 0x75, 0x67, 0x78, 0xfd, 0x4d, 0x57, 0x2d, 0xf8, 0xa8, 0x96,
+  0xac, 0xfe, 0x6c, 0x4d, 0x7c, 0x88, 0xba, 0xd7, 0xd2, 0xc5, 0x57, 0x5d,
+  0x97, 0x45, 0xd1, 0xb8, 0x02, 0xbd, 0x13, 0xdc, 0x6e, 0x91, 0x62, 0x3f,
+  0xda, 0xdb, 0xd9, 0xf9, 0xa6, 0x17, 0x3d, 0x91, 0x0a, 0xb3, 0xbb, 0x5f,
+  0xb5, 0xae, 0x90, 0x15, 0x7b, 0x92, 0x1a, 0x9e, 0xaa, 0x83, 0xc6, 0x77,
+  0x60, 0xf7, 0xba, 0x70, 0x98, 0x12, 0xfb, 0x9e, 0x96, 0xb9, 0x09, 0xda,
+  0xb2, 0xf8, 0x6b, 0xb6, 0x0a, 0x66, 0xec, 0x3a, 0x14, 0xc2, 0x0c, 0x31,
+  0x43, 0xbc, 0x7b, 0x37, 0xf4, 0x5b, 0xe2, 0xf3, 0x3f, 0xa5, 0x93, 0x96,
+  0x0c, 0xe4, 0xe2, 0x86, 0x4f, 0xff, 0x68, 0x99, 0xe3, 0x28, 0xb3, 0x1b,
+  0x54, 0xca, 0x16, 0xb1, 0x69, 0xdd, 0x04, 0x2b, 0x92, 0x15, 0x7c, 0x85,
+  0x55, 0x0f, 0x54, 0xc3, 0x93, 0x19, 0xac, 0xab, 0x0b, 0x29, 0xc9, 0x00,
+  0xae, 0x76, 0xec, 0x0f, 0xa4, 0x33, 0x61, 0x08, 0x72, 0x52, 0x9c, 0xde,
+  0x21, 0xe1, 0x9c, 0xde, 0xc5, 0x58, 0x9f, 0x2c, 0x6b, 0x55, 0xa2, 0xa6,
+  0xc2, 0xbe, 0x0c, 0x5b, 0x38, 0xe6, 0xc8, 0xf0, 0x69, 0x0b, 0x2d, 0x2c,
+  0xc2, 0x03, 0x91, 0x76, 0xc1, 0x72, 0xa7, 0xfc, 0xc0, 0x74, 0xd5, 0x6b,
+  0xaa, 0x1d, 0x1c, 0x16, 0x08, 0x7f, 0x80, 0xad, 0x70, 0x38, 0x24, 0xce,
+  0x9d, 0x1d, 0xa3, 0x90, 0x0d, 0x87, 0x76, 0xfd, 0x76, 0x66, 0xa9, 0x29,
+  0x03, 0xf2, 0xa7, 0x45, 0xd9, 0x67, 0xf7, 0x6e, 0xbb, 0xad, 0x13, 0x7a,
+  0x85, 0x66, 0x94, 0x1b, 0xd4, 0xd4, 0xc4, 0xc3, 0x61, 0x8a, 0x29, 0x5b,
+  0x6a, 0x6f, 0x20, 0x90, 0x92, 0x8f, 0x14, 0xb3, 0xaf, 0x7e, 0x23, 0xd0,
+  0x8f, 0x18, 0xe5, 0x5d, 0x9a, 0xdc, 0xd3, 0x71, 0x3a, 0xf6, 0x98, 0x64,
+  0x55, 0x8e, 0x61, 0x95, 0x2f, 0x88, 0xea, 0xc7, 0x37, 0x74, 0x9f, 0xf4,
+  0x11, 0x76, 0xdd, 0x26, 0xb7, 0xbb, 0x28, 0x65, 0x84, 0xa3, 0xb1, 0x9e,
+  0x85, 0x92, 0x2c, 0x3e, 0x0b, 0xbe, 0x40, 0xc1, 0x13, 0x1c, 0x4b, 0x89,
+  0x70, 0xf6, 0x5f, 0xf1, 0x28, 0xd6, 0x80, 0x60, 0x09, 0x06, 0xac, 0x83,
+  0xb9, 0x82, 0xee, 0x98, 0xe5, 0x86, 0x25, 0xfb, 0xb8, 0xd8, 0x00, 0xfa,
+  0xd4, 0x15, 0x7a, 0x7b, 0x3a, 0xf4, 0xe8, 0x00, 0xe6, 0x0a, 0x2c, 0x60,
+  0x29, 0x20, 0xfe, 0xcb, 0x42, 0x21, 0x3f, 0xd6, 0x5e, 0x9e, 0xc8, 0x61,
+  0xe6, 0x23, 0x3e, 0x08, 0xf1, 0x2f, 0x22, 0xe0, 0xa6, 0x79, 0x05, 0xee,
+  0x81, 0xfb, 0xf8, 0xb3, 0x98, 0xdb, 0x24, 0x28, 0xad, 0x3d, 0x52, 0x85,
+  0xd3, 0xe9, 0xc2, 0x8a, 0xe9, 0x30, 0x36, 0x23, 0xcb, 0x8b, 0x48, 0x8c,
+  0x2e, 0xed, 0xdb, 0xaa, 0xa4, 0xc2, 0x39, 0x1a, 0x82, 0x0c, 0xf3, 0x92,
+  0xf8, 0xd9, 0xe7, 0x3f, 0xf6, 0xe9, 0xdf, 0x9f, 0x1a, 0xbe, 0xc0, 0x52,
+  0xf0, 0x64, 0xd4, 0xa4, 0x65, 0x61, 0xa5, 0xb9, 0xc7, 0xc7, 0x97, 0xfa,
+  0xf5, 0x68, 0x47, 0xbe, 0x2d, 0x82, 0xb2, 0x02, 0xed, 0x21, 0x12, 0xe6,
+  0x9b, 0xdb, 0x2c, 0x18, 0x21, 0xb4, 0x52, 0x00, 0x40, 0xd0, 0x41, 0xac,
+  0x21, 0xb6, 0x0c, 0xcc, 0xe5, 0xce, 0x81, 0x07, 0xb6, 0xbe, 0x8c, 0xe3,
+  0x98, 0xe5, 0x1c, 0xe7, 0x96, 0xf4, 0xb5, 0x20, 0x47, 0xec, 0x66, 0x2d,
+  0x56, 0x8c, 0xf6, 0x24, 0x02, 0x5d, 0x91, 0xb9, 0x84, 0x16, 0x10, 0x32,
+  0x86, 0xdf, 0x74, 0xe4, 0x32, 0x20, 0x91, 0xc4, 0x66, 0x90, 0x80, 0x4b,
+  0x5d, 0xe7, 0x79, 0x76, 0x6f, 0x67, 0x5f, 0x83, 0x92, 0x03, 0x99, 0xc1,
+  0x3b, 0x19, 0xa9, 0xed, 0xe5, 0xa2, 0xc5, 0xf3, 0xca, 0xa9, 0x0a, 0x0d,
+  0x20, 0x91, 0x30, 0x13, 0x33, 0x2c, 0x94, 0xd1, 0x1a, 0x9e, 0x02, 0x1c,
+  0xf9, 0x2d, 0x33, 0x80, 0xb9, 0xb2, 0x26, 0x62, 0xc9, 0x76, 0x59, 0x27,
+  0x1a, 0xb8, 0x2d, 0x20, 0x3a, 0xd7, 0x49, 0x5b, 0x89, 0x72, 0x49, 0xac,
+  0x06, 0xee, 0x82, 0x45, 0x5d, 0x97, 0x91, 0xab, 0xd1, 0xb1, 0xc9, 0x9e,
+  0xcc, 0x31, 0xcc, 0x5f, 0x1a, 0x10, 0x5e, 0x2f, 0x94, 0xd1, 0x82, 0x4b,
+  0x10, 0x47, 0x4f, 0xbe, 0xff, 0xbe, 0x0a, 0x4e, 0xb8, 0xd5, 0xab, 0x70,
+  0x2c, 0x1f, 0xc0, 0xa1, 0xf2, 0x05, 0x11, 0x51, 0xd6, 0x76, 0xca, 0x2d,
+  0xd2, 0xde, 0xec, 0xba, 0x1c, 0x88, 0x01, 0x2d, 0x0e, 0xb6, 0x3f, 0xc5,
+  0x5d, 0x96, 0x4a, 0xd8, 0x1a, 0xfa, 0x1e, 0xc4, 0x81, 0x35, 0x1d, 0x24,
+  0x2e, 0xe4, 0xa7, 0xe7, 0x22, 0x6f, 0x25, 0xf0, 0x04, 0xc1, 0x69, 0xb6,
+  0x56, 0xbc, 0x54, 0x85, 0x23, 0x18, 0xba, 0x94, 0xee, 0xe7, 0xed, 0x95,
+  0x4d, 0x6a, 0x6e, 0x1f, 0x57, 0xe0, 0x40, 0x83, 0x08, 0x71, 0x7e, 0xa5,
+  0x24, 0x0f, 0xdb, 0xa7, 0xc6, 0x79, 0xa2, 0xbe, 0x1b, 0x2b, 0x17, 0xd4,
+  0x38, 0xaf, 0x62, 0xe7, 0xe1, 0x30, 0x2b, 0xcc, 0x8f, 0x93, 0x78, 0xe5,
+  0xe4, 0xe2, 0xf2, 0xf1, 0xb1, 0x0c, 0xe1, 0x5e, 0xe1, 0xf1, 0x5e, 0x8b,
+  0x80, 0x70, 0x8f, 0xf2, 0x23, 0x60, 0x3c, 0x66, 0xbf, 0x43, 0xd0, 0x95,
+  0x26, 0x26, 0xe1, 0x2e, 0xc8, 0xff, 0xd4, 0x5a, 0x8e, 0x8f, 0xf7, 0xbf,
+  0xad, 0xe2, 0x60, 0xbf, 0xcc, 0x97, 0x58, 0x22, 0xf6, 0xf9, 0x72, 0x5e,
+  0x79, 0xe6, 0xd3, 0xc9, 0xd8, 0xcd, 0x67, 0xd1, 0x65, 0x72, 0x89, 0x79,
+  0x6f, 0x6b, 0x4b, 0x10, 0x88, 0xcd, 0x4c, 0x4c, 0x38, 0x30, 0x01, 0x55,
+  0xc3, 0x23, 0xfa, 0x7d, 0x12, 0x4d, 0xfb, 0x78, 0xac, 0x68, 0x54, 0x76,
+  0x08, 0x6d, 0x5e, 0x0a, 0xcf, 0x99, 0x4d, 0xb5, 0x94, 0x8b, 0x5b, 0x33,
+  0xd3, 0x21, 0x8c, 0x88, 0xd4, 0x65, 0x14, 0x33, 0x05, 0xd1, 0xa1, 0xfb,
+  0xea, 0xb8, 0x5e, 0xd4, 0x6a, 0x13, 0x18, 0x79, 0xaa, 0x2a, 0x22, 0x79,
+  0x82, 0xfe, 0x3e, 0x7f, 0x77, 0xb9, 0xe5, 0xeb, 0xd9, 0x4d, 0xb2, 0x9a,
+  0xcd, 0xca, 0x1a, 0x6f, 0xc9, 0x44, 0x91, 0x0c, 0x05, 0x05, 0x65, 0x40,
+  0x9a, 0x89, 0x3b, 0x13, 0x8c, 0xa3, 0xf0, 0x64, 0x67, 0x97, 0x44, 0xb5,
+  0x9d, 0x3d, 0x58, 0x5d, 0x9e, 0xec, 0x3c, 0x71, 0xe6, 0x6c, 0x7b, 0xaa,
+  0x71, 0xe3, 0x4d, 0xe4, 0x45, 0xa8, 0x85, 0x20, 0xf9, 0x27, 0x0f, 0x0f,
+  0xf8, 0xb8, 0x57, 0x47, 0xe9, 0x29, 0x54, 0xa1, 0x4c, 0x82, 0x1a, 0xcf,
+  0x6b, 0x8e, 0x96, 0x5f, 0x71, 0x98, 0x4f, 0x96, 0x73, 0x89, 0xfd, 0x62,
+  0xe5, 0x17, 0x19, 0x0f, 0xf5, 0xcb, 0x21, 0xa4, 0x83, 0xc7, 0x58, 0xd3,
+  0x29, 0x8b, 0xf7, 0x15, 0x46, 0xd6, 0xf3, 0x98, 0x0e, 0x82, 0xf8, 0x6b,
+  0xca, 0x9d, 0xe5, 0x22, 0xd6, 0x9a, 0xfb, 0x93, 0x4f, 0xb5, 0x95, 0xfa,
+  0x28, 0x20, 0xf5, 0x80, 0xbd, 0xa1, 0xe6, 0x15, 0x27, 0x8c, 0xf9, 0x63,
+  0x92, 0x0d, 0x0c, 0x6f, 0xb5, 0x91, 0x07, 0x41, 0xab, 0x6c, 0x15, 0x02,
+  0x53, 0x06, 0x61, 0x98, 0x2c, 0xc7, 0xb8, 0xeb, 0x39, 0xec, 0x85, 0x0b,
+  0xfe, 0x8d, 0x04, 0xf3, 0xd1, 0x40, 0x34, 0xb8, 0x6d, 0x4f, 0xa4, 0x4d,
+  0x35, 0x1b, 0xc7, 0x10, 0x4f, 0xb9, 0xa4, 0x5d, 0xd6, 0x6b, 0xd8, 0x60,
+  0xe4, 0x52, 0x85, 0x1b, 0x0c, 0x62, 0x7e, 0x95, 0x19, 0x44, 0x6d, 0x13,
+  0xa4, 0x17, 0x64, 0x09, 0x17, 0x9d, 0x99, 0x87, 0x63, 0xa9, 0x0d, 0x09,
+  0xda, 0xf9, 0x92, 0x83, 0xd5, 0x6a, 0x2d, 0x56, 0x60, 0x58, 0x67, 0x8c,
+  0x29, 0x9b, 0x8f, 0xe9, 0x70, 0xbf, 0xd4, 0x98, 0xcd, 0xa6, 0xab, 0x5f,
+  0x70, 0x47, 0x4c, 0xff, 0xc3, 0x04, 0x00, 0x15, 0xe9, 0x61, 0xa7, 0x74,
+  0x69, 0x45, 0xaa, 0x9e, 0x01, 0x81, 0x58, 0x3c, 0xc9, 0xcd, 0xc4, 0x2d,
+  0x40, 0xab, 0xba, 0x15, 0xff, 0x28, 0xeb, 0x89, 0xb3, 0xff, 0xb7, 0xa0,
+  0x45, 0xd2, 0x42, 0xa7, 0x0b, 0x86, 0xf8, 0x6a, 0xda, 0xb6, 0xd7, 0x63,
+  0x94, 0xe8, 0xb4, 0xc1, 0xc5, 0xff, 0x9d, 0xd3, 0x86, 0xdf, 0xf5, 0x97,
+  0x0d, 0xf3, 0x01, 0x45, 0x6a, 0x10, 0x67, 0xf9, 0x12, 0x8a, 0xdb, 0xc7,
+  0xa8, 0xe5, 0x78, 0x7c, 0xd3, 0x94, 0xd7, 0x2d, 0x9f, 0x6a, 0x2d, 0x3a,
+  0xb9, 0xc1, 0x39, 0x21, 0x7e, 0xa2, 0x4d, 0xaa, 0xc2, 0xa3, 0xfe, 0x6a,
+  0x4b, 0xab, 0xa1, 0xd4, 0xb8, 0x93, 0x91, 0x77, 0xd9, 0xab, 0xa2, 0xe3,
+  0xac, 0xa9, 0x31, 0x88, 0xc0, 0x47, 0x29, 0x52, 0x1f, 0x44, 0xc9, 0x03,
+  0xfe, 0x18, 0xb7, 0x6f, 0xf2, 0x00, 0xb7, 0x0b, 0xf1, 0xa9, 0xe7, 0x4f,
+  0x06, 0xed, 0xb6, 0x9f, 0xcb, 0x4a, 0xc0, 0xa9, 0xb1, 0x64, 0x71, 0x51,
+  0x08, 0x9c, 0xcc, 0x22, 0x67, 0x5c, 0xd9, 0x70, 0x76, 0x52, 0xc3, 0xa0,
+  0x05, 0x7f, 0xa3, 0x60, 0x10, 0x70, 0x91, 0x90, 0xcb, 0xb5, 0x18, 0x61,
+  0x56, 0x92, 0xcb, 0x85, 0xba, 0x62, 0x96, 0x0d, 0xef, 0xb1, 0xa4, 0x8e,
+  0x20, 0x1b, 0x43, 0x92, 0x2c, 0x1b, 0x0b, 0xa5, 0x7a, 0x33, 0x2e, 0x37,
+  0x17, 0x56, 0xca, 0xd5, 0x69, 0x92, 0xbc, 0x11, 0x4a, 0x85, 0x0c, 0x76,
+  0x56, 0x04, 0x78, 0xb1, 0x70, 0x7e, 0x83, 0xb8, 0x7e, 0x47, 0x15, 0xb3,
+  0x6d, 0x21, 0x8c, 0x47, 0x23, 0xda, 0xde, 0x28, 0x29, 0x88, 0x1e, 0x0c,
+  0xef, 0xa1, 0x3e, 0x29, 0x74, 0xcb, 0x7a, 0x93, 0xf0, 0x53, 0xd4, 0xf7,
+  0xbd, 0xc9, 0xa6, 0xa1, 0x19, 0xae, 0xe9, 0xee, 0x22, 0x49, 0x62, 0xe0,
+  0x51, 0x54, 0x55, 0xff, 0xe2, 0xd5, 0xd4, 0x4a, 0xc2, 0xa9, 0xd5, 0x2f,
+  0x18, 0xa1, 0x16, 0xfa, 0x5f, 0xb3, 0x91, 0x95, 0x10, 0xe4, 0xab, 0xbe,
+  0x0d, 0xb9, 0x56, 0x7c, 0x2b, 0x37, 0x5c, 0x03, 0x8e, 0x36, 0x6d, 0x29,
+  0xb4, 0xc9, 0x50, 0xac, 0x24, 0xaf, 0x95, 0xac, 0xc4, 0x22, 0x7a, 0x1c,
+  0xaa, 0x46, 0x74, 0x8d, 0xe4, 0xbd, 0x89, 0xc8, 0x54, 0x24, 0x72, 0x34,
+  0x40, 0xe3, 0x5c, 0x65, 0x27, 0x95, 0xa3, 0xb1, 0x38, 0xec, 0x0a, 0x5b,
+  0x23, 0x03, 0xfc, 0x7a, 0xca, 0xf0, 0x1b, 0xec, 0xc6, 0xbc, 0x19, 0xb5,
+  0xf7, 0x06, 0x1f, 0x0e, 0xb8, 0x62, 0x25, 0xc7, 0x50, 0x8b, 0x73, 0x62,
+  0xa9, 0xa9, 0x7d, 0x52, 0x35, 0xd9, 0xb7, 0x32, 0xdf, 0xe6, 0x32, 0xc6,
+  0x65, 0x3e, 0x6e, 0x34, 0xe2, 0x24, 0xb8, 0x62, 0xac, 0xb6, 0x8b, 0x01,
+  0x1e, 0x24, 0xc6, 0xf1, 0x5e, 0x7f, 0xe1, 0x4b, 0x42, 0x7d, 0x38, 0x5b,
+  0x2e, 0x72, 0xa3, 0x35, 0x78, 0x82, 0x85, 0xb7, 0x6e, 0xe1, 0xfc, 0x0b,
+  0xaa, 0xd9, 0xf2, 0x46, 0x00, 0x77, 0xab, 0xad, 0xde, 0xb2, 0xc3, 0x93,
+  0x5d, 0x2d, 0x1a, 0xc1, 0x13, 0x41, 0x21, 0x93, 0x2b, 0xa9, 0x4e, 0x65,
+  0x7e, 0x2b, 0x2f, 0x69, 0xbb, 0x02, 0x56, 0x61, 0x92, 0x8c, 0x62, 0xa3,
+  0xb4, 0x8c, 0x2e, 0x6a, 0x14, 0xb6, 0x86, 0x88, 0x89, 0x99, 0x6e, 0x3e,
+  0xdd, 0x82, 0x5a, 0x5d, 0x2e, 0x36, 0x77, 0xb7, 0xd0, 0xa3, 0x25, 0xf3,
+  0x8b, 0xa0, 0xdf, 0xea, 0xaf, 0xd6, 0x7a, 0x2e, 0x61, 0xa5, 0xd5, 0x52,
+  0x00, 0x61, 0x59, 0x9c, 0xc3, 0x09, 0x67, 0x5d, 0x51, 0x56, 0xcd, 0xa1,
+  0x5a, 0xb3, 0x11, 0xb2, 0x8d, 0x33, 0x4a, 0x4a, 0xdb, 0x82, 0x1d, 0x35,
+  0x85, 0x40, 0xae, 0x6f, 0x7a, 0x04, 0x62, 0xb8, 0x9f, 0x13, 0x2b, 0x25,
+  0x42, 0xcb, 0x37, 0x9d, 0xf4, 0x79, 0xc0, 0xd7, 0x79, 0xd6, 0x44, 0x08,
+  0x63, 0x27, 0x3b, 0xaf, 0xc1, 0x96, 0xf8, 0x41, 0x5b, 0xcb, 0x64, 0x74,
+  0xd8, 0xa1, 0xd8, 0xf1, 0x60, 0xe1, 0x8c, 0xd5, 0x94, 0xaa, 0x8c, 0x56,
+  0x37, 0x0c, 0x55, 0xb6, 0xb4, 0x41, 0xef, 0x07, 0x1c, 0xad, 0x91, 0x8e,
+  0x6f, 0xd5, 0x17, 0x2b, 0xe0, 0xcb, 0xf0, 0x51, 0xa1, 0x88, 0xb2, 0x08,
+  0xaf, 0x74, 0x4d, 0xa8, 0x7c, 0x0e, 0x15, 0x94, 0xee, 0x0c, 0x25, 0xb5,
+  0x96, 0x2a, 0x35, 0x7c, 0x4e, 0x4d, 0xb1, 0x40, 0x02, 0x52, 0xa6, 0x37,
+  0x10, 0x2c, 0x30, 0xa2, 0x8d, 0x4c, 0x32, 0x8e, 0x90, 0x65, 0x3f, 0x8b,
+  0x50, 0x81, 0xec, 0x6f, 0x8b, 0xcc, 0xd6, 0x9d, 0xad, 0x38, 0x0d, 0xbd,
+  0x5b, 0x05, 0x69, 0xef, 0x12, 0xc3, 0xa2, 0x7b, 0xa2, 0x6b, 0xcb, 0x0b,
+  0xb3, 0xca, 0x23, 0x40, 0x1a, 0xeb, 0xfa, 0x16, 0xd2, 0x96, 0x2e, 0x7c,
+  0xeb, 0xd2, 0x78, 0x70, 0xd7, 0x62, 0xaa, 0x7d, 0xf3, 0xbb, 0xd7, 0xda,
+  0xfe, 0xd6, 0x16, 0x4c, 0x3b, 0xb7, 0xe7, 0xad, 0x28, 0xb4, 0x67, 0x25,
+  0x62, 0x79, 0x0d, 0xce, 0xe9, 0xb2, 0x68, 0x26, 0xf8, 0xb9, 0x22, 0x6c,
+  0x16, 0xb5, 0xc0, 0x16, 0x9f, 0xd8, 0x6a, 0xcb, 0x08, 0x27, 0x93, 0xb7,
+  0xb5, 0x55, 0x26, 0xcc, 0x41, 0x65, 0xb0, 0x1a, 0xe2, 0xf6, 0x78, 0xc1,
+  0xf8, 0x4a, 0x34, 0x5c, 0xf3, 0x64, 0xc1, 0xb0, 0x5b, 0x79, 0xa6, 0x3d,
+  0x7d, 0x99, 0xf5, 0x87, 0x49, 0xc2, 0xa1, 0x46, 0x02, 0x1d, 0xf0, 0x26,
+  0x1d, 0xe7, 0x59, 0x91, 0x5d, 0xc9, 0xad, 0x6e, 0xe4, 0xe9, 0xcc, 0x4d,
+  0x9c, 0x5b, 0x1c, 0xb3, 0x73, 0xb7, 0xc9, 0x2f, 0xb4, 0x1c, 0x9f, 0xc4,
+  0x2f, 0xf3, 0xa5, 0x3d, 0x23, 0x5a, 0xe7, 0x54, 0x0a, 0xb6, 0x03, 0x97,
+  0x02, 0x0a, 0x17, 0xbb, 0xa8, 0x3d, 0xbd, 0x23, 0x2c, 0x62, 0xf2, 0xd9,
+  0xe3, 0x9a, 0x34, 0xef, 0x84, 0x56, 0x71, 0xc1, 0x85, 0x20, 0xd1, 0x65,
+  0xa8, 0xac, 0xa3, 0x98, 0x48, 0xa2, 0xff, 0xd8, 0x6b, 0xed, 0xa3, 0x33,
+  0x05, 0x06, 0x00, 0xe6, 0x30, 0x1a, 0x87, 0x15, 0x13, 0x39, 0x10, 0xf0,
+  0xe4, 0xf8, 0xf2, 0x75, 0x34, 0xc9, 0x63, 0x9a, 0x3e, 0xfe, 0xed, 0x93,
+  0x0e, 0xf0, 0x73, 0xdc, 0xc8, 0x02, 0x2e, 0x16, 0xbc, 0x49, 0x7d, 0xf6,
+  0x3c, 0xf6, 0x77, 0x9e, 0x0e, 0xca, 0x87, 0xd6, 0x48, 0x41, 0xb1, 0x35,
+  0x9b, 0x05, 0x53, 0x4b, 0x6b, 0xf8, 0x2d, 0xd3, 0x14, 0x4f, 0xbe, 0x66,
+  0xb3, 0x87, 0x55, 0x1d, 0xe6, 0xb0, 0x0d, 0x14, 0x18, 0x58, 0x3a, 0x7d,
+  0x3c, 0xee, 0xa9, 0xe4, 0x5f, 0x08, 0xbb, 0x94, 0x30, 0xcb, 0x20, 0x90,
+  0x72, 0x4d, 0xb1, 0x90, 0x47, 0xe3, 0x2a, 0xdb, 0xe2, 0x28, 0xed, 0xe3,
+  0x35, 0xe8, 0x89, 0x35, 0xe2, 0x6d, 0xd7, 0xe2, 0x97, 0xcd, 0x2a, 0x01,
+  0x0e, 0xc5, 0x19, 0x34, 0x60, 0xf1, 0xd5, 0x0c, 0x27, 0x05, 0xcb, 0x51,
+  0x7f, 0xa9, 0xe9, 0xb0, 0xed, 0x49, 0x42, 0xe0, 0xb1, 0x40, 0x51, 0x33,
+  0x68, 0xb7, 0x1a, 0x91, 0x41, 0x4e, 0x35, 0xdf, 0xe3, 0x00, 0xd5, 0x73,
+  0x61, 0xe2, 0xae, 0x73, 0xb4, 0xfe, 0x32, 0xda, 0x07, 0x6e, 0x53, 0x32,
+  0xe7, 0x92, 0x1a, 0x76, 0xac, 0x3d, 0x0b, 0x54, 0x4e, 0xec, 0xf8, 0x51,
+  0x58, 0x70, 0xb9, 0xbf, 0x6c, 0x1f, 0x5d, 0x9c, 0x27, 0x7c, 0x3b, 0x49,
+  0x08, 0xa4, 0xde, 0xbc, 0x83, 0x7f, 0x3f, 0xe2, 0xb6, 0xe7, 0x43, 0x6f,
+  0xb7, 0x11, 0xa4, 0x3f, 0x5a, 0xf2, 0x77, 0xad, 0x95, 0xba, 0x95, 0x17,
+  0xca, 0x13, 0xea, 0x93, 0x0d, 0x9c, 0xab, 0x05, 0xc7, 0xc9, 0xcd, 0xc2,
+  0x6a, 0x30, 0x2c, 0xf9, 0xb1, 0x86, 0x5c, 0xa7, 0x89, 0xa5, 0xf0, 0x8e,
+  0x5e, 0x15, 0x5b, 0xb8, 0x66, 0x79, 0x97, 0x6e, 0xd8, 0xd4, 0x14, 0x36,
+  0xdf, 0xe6, 0xa0, 0xc6, 0xeb, 0x70, 0x35, 0xc2, 0x4f, 0x25, 0x42, 0xbf,
+  0xc4, 0x38, 0xab, 0xb5, 0x41, 0x9b, 0x70, 0x50, 0xec, 0xc4, 0xde, 0xc6,
+  0x37, 0x4b, 0x92, 0x46, 0x7b, 0x2d, 0x56, 0x73, 0x33, 0xe4, 0x82, 0x97,
+  0xd1, 0x7d, 0xaa, 0x29, 0xf8, 0x96, 0xa8, 0x25, 0x2d, 0x70, 0xb2, 0xf7,
+  0x1d, 0x00, 0x0f, 0x1b, 0xd5, 0x2d, 0xda, 0x46, 0xe7, 0x2b, 0xcf, 0xc7,
+  0xa5, 0x5f, 0xc0, 0xc7, 0xc2, 0xee, 0x02, 0xe8, 0x7f, 0x3a, 0xfa, 0x30,
+  0xc0, 0x2a, 0x11, 0x08, 0xc5, 0x59, 0x06, 0x20, 0xbc, 0x93, 0x06, 0x7b,
+  0xd5, 0x60, 0x22, 0x52, 0x59, 0x84, 0x98, 0x88, 0xf4, 0x29, 0x7c, 0xc9,
+  0x23, 0xd4, 0xb5, 0x8c, 0xa4, 0x9a, 0xa9, 0xf1, 0x18, 0x1d, 0x2c, 0xc5,
+  0x36, 0xe1, 0xb3, 0x3a, 0x38, 0xa5, 0x1d, 0x96, 0x53, 0xb5, 0xd5, 0x5e,
+  0x1e, 0x9e, 0x07, 0xb6, 0x70, 0xc6, 0x09, 0x58, 0x9b, 0xd2, 0xa4, 0xc1,
+  0x3a, 0x73, 0xd7, 0xfa, 0xec, 0xdf, 0xb8, 0x36, 0x7e, 0x06, 0xc1, 0xf2,
+  0xb8, 0x0f, 0x6b, 0x4b, 0xa3, 0x29, 0x7c, 0xe9, 0xa4, 0x3d, 0x8b, 0x42,
+  0x57, 0xc8, 0x90, 0xb8, 0x75, 0x8d, 0x38, 0x6d, 0xcc, 0xf2, 0x24, 0x4f,
+  0x8e, 0x68, 0x34, 0x2c, 0xdd, 0x5c, 0xd3, 0xe0, 0xbe, 0x74, 0x2b, 0xd0,
+  0x94, 0xca, 0xbc, 0xc2, 0x08, 0x27, 0x07, 0x2a, 0x37, 0x05, 0xc5, 0xb7,
+  0x38, 0xc1, 0x3a, 0x84, 0xed, 0x10, 0xc7, 0xb1, 0xe5, 0x90, 0xae, 0xc9,
+  0x93, 0x47, 0x75, 0x75, 0xc4, 0x86, 0x90, 0xfe, 0xc2, 0x97, 0xf2, 0x68,
+  0x65, 0xf9, 0x6b, 0x8a, 0xde, 0x93, 0x27, 0x0a, 0xdd, 0x1c, 0x0c, 0xb8,
+  0x68, 0xb9, 0x9d, 0xb8, 0xf6, 0x79, 0x92, 0xcc, 0x34, 0x3e, 0x74, 0x94,
+  0x67, 0xb7, 0x74, 0x3e, 0xf8, 0x35, 0x08, 0xa2, 0xbc, 0xfa, 0x72, 0xc8,
+  0xcd, 0x94, 0x45, 0xc7, 0x40, 0x01, 0x8b, 0x9b, 0x86, 0x39, 0x87, 0x78,
+  0xad, 0x99, 0x34, 0xfe, 0xb4, 0x08, 0xd2, 0x14, 0xe2, 0x00, 0xed, 0xfe,
+  0xc4, 0xdd, 0xc3, 0x25, 0x90, 0x7c, 0x14, 0x44, 0x43, 0x23, 0x6d, 0x40,
+  0xf3, 0xfe, 0xe6, 0x34, 0xe4, 0xc8, 0x22, 0xa4, 0xa1, 0x96, 0x2d, 0xaf,
+  0x10, 0x93, 0x08, 0x02, 0x2f, 0x89, 0xaa, 0xe4, 0x8e, 0x67, 0xaf, 0x5f,
+  0x5d, 0xf9, 0x07, 0xdc, 0x69, 0x3f, 0x08, 0x5a, 0x77, 0xe5, 0xb4, 0xc5,
+  0x16, 0x2a, 0x86, 0xc7, 0x89, 0xc7, 0x91, 0x8f, 0x45, 0xbe, 0x40, 0x80,
+  0x1d, 0x91, 0x4c, 0xf3, 0x76, 0x77, 0x19, 0x35, 0x2a, 0x35, 0xc2, 0x4b,
+  0xc1, 0xdb, 0x83, 0x1c, 0x55, 0x84, 0x9a, 0xa9, 0x75, 0xec, 0x8f, 0x61,
+  0x88, 0x74, 0xd4, 0x66, 0xb4, 0x04, 0xb0, 0x41, 0x52, 0x78, 0xdb, 0xac,
+  0xc4, 0xc5, 0xb8, 0x1c, 0x36, 0x86, 0x47, 0x09, 0x79, 0x06, 0x86, 0x36,
+  0x88, 0x8e, 0xd9, 0xce, 0xda, 0xa2, 0x3c, 0x58, 0xe0, 0x27, 0xe6, 0x88,
+  0x14, 0xc7, 0x12, 0x58, 0x91, 0x74, 0xe3, 0xaa, 0x26, 0xc6, 0xa9, 0xcf,
+  0x33, 0x8b, 0x7b, 0x67, 0x4c, 0x51, 0x57, 0xb9, 0xad, 0x55, 0x91, 0x2a,
+  0x4a, 0xcd, 0x63, 0x37, 0x58, 0x65, 0xfb, 0xc8, 0xa1, 0x65, 0xbd, 0xf6,
+  0x16, 0xff, 0x9e, 0xf8, 0x2c, 0x45, 0xc9, 0x69, 0x01, 0xbc, 0xc2, 0x68,
+  0x22, 0xff, 0x50, 0x2f, 0xf8, 0x7d, 0xff, 0xb3, 0x1d, 0x2d, 0xb4, 0x09,
+  0x7c, 0xc5, 0xf0, 0x19, 0x14, 0xa4, 0x68, 0xb9, 0x67, 0x90, 0xe8, 0x9e,
+  0x95, 0xee, 0xd1, 0x3a, 0x34, 0xeb, 0x8b, 0xc1, 0xd3, 0x8a, 0x79, 0x77,
+  0x5e, 0x4e, 0x67, 0x1e, 0x1a, 0xc8, 0x00, 0x49, 0xdf, 0x5e, 0x9e, 0xbe,
+  0x89, 0xd6, 0xa8, 0x03, 0xf8, 0xae, 0xfa, 0xd5, 0xbf, 0xa2, 0x14, 0xd0,
+  0x17, 0x27, 0x27, 0x43, 0xa8, 0x04, 0xea, 0xa8, 0x6e, 0x04, 0x5c, 0x94,
+  0x9a, 0x67, 0xc2, 0x52, 0x55, 0x9e, 0x92, 0x46, 0x9f, 0x23, 0x47, 0xac,
+  0xcc, 0xc6, 0xd9, 0x94, 0xd3, 0x09, 0xf9, 0xa5, 0x44, 0x8b, 0xc5, 0xe3,
+  0x72, 0x67, 0xf0, 0xb2, 0x29, 0xb8, 0xd2, 0x22, 0x69, 0x04, 0xcc, 0xb0,
+  0x22, 0x8b, 0x01, 0x18, 0x4b, 0x91, 0xb5, 0xc1, 0x5d, 0xc1, 0xf5, 0x29,
+  0x2d, 0xdb, 0x83, 0xf4, 0x14, 0xa2, 0x38, 0x16, 0x34, 0xd5, 0xc6, 0x71,
+  0x9b, 0x22, 0xea, 0xaf, 0x91, 0xca, 0xa9, 0x25, 0xab, 0x2a, 0x48, 0x3d,
+  0x80, 0x31, 0x9b, 0x64, 0x39, 0xdc, 0x76, 0x01, 0x4e, 0x0c, 0x63, 0x9b,
+  0x2d, 0x11, 0x12, 0xc3, 0xc3, 0x5b, 0x35, 0x8f, 0xd2, 0xfd, 0x4d, 0x26,
+  0x11, 0x29, 0x58, 0x66, 0xe6, 0x4a, 0x12, 0x04, 0x01, 0xbf, 0x80, 0xc0,
+  0x8b, 0x08, 0x41, 0x78, 0x56, 0x12, 0x6e, 0x54, 0x9b, 0x7b, 0xcd, 0x15,
+  0x89, 0x93, 0x4c, 0xab, 0x9e, 0xd8, 0x37, 0x69, 0x73, 0x8e, 0xd2, 0xeb,
+  0x35, 0xf8, 0x5b, 0xed, 0x4a, 0x07, 0x8f, 0xe8, 0x71, 0x7d, 0xa3, 0x2d,
+  0x3a, 0xb8, 0xa2, 0x6f, 0x10, 0xb5, 0x7d, 0xac, 0xaa, 0xe1, 0x2b, 0x63,
+  0x6b, 0x65, 0x5d, 0x49, 0xf2, 0xe2, 0xdb, 0x20, 0xd0, 0x35, 0xde, 0x35,
+  0x1c, 0x5a, 0x8f, 0xa9, 0x14, 0xd5, 0xd4, 0x2c, 0x9e, 0xd0, 0xff, 0x52,
+  0xe9, 0x38, 0xa3, 0x91, 0xaa, 0x14, 0xd9, 0x1a, 0xc2, 0xf9, 0x9d, 0x24,
+  0x7e, 0xa8, 0x9c, 0x99, 0xe9, 0x43, 0x21, 0x1a, 0x55, 0x51, 0x4e, 0xb2,
+  0xa5, 0xb8, 0x75, 0x61, 0xb0, 0xcd, 0xed, 0x36, 0xff, 0xfb, 0x3f, 0x9a,
+  0x7e, 0xea, 0x1f, 0x7f, 0x12, 0xf5, 0x45, 0x02, 0x6c, 0xbd, 0x1f, 0xc5,
+  0x48, 0xa9, 0xf0, 0xe8, 0x82, 0xbc, 0x69, 0x9c, 0xcd, 0x22, 0x53, 0x94,
+  0x23, 0x55, 0x57, 0x61, 0x34, 0x3c, 0x43, 0xaf, 0x62, 0x1d, 0x9b, 0xdd,
+  0x03, 0xc0, 0x9b, 0x0e, 0xaa, 0xf8, 0x06, 0xf8, 0x5a, 0x8a, 0x02, 0x34,
+  0x59, 0x87, 0xb8, 0x64, 0xe1, 0xe8, 0x55, 0x58, 0x4b, 0x04, 0x02, 0x8b,
+  0x09, 0x1d, 0xe3, 0xe7, 0x9b, 0xe6, 0x54, 0x4a, 0x41, 0x35, 0xd1, 0x40,
+  0x64, 0xa3, 0x35, 0xa6, 0xf7, 0xef, 0x74, 0xca, 0x7a, 0xe5, 0x7d, 0xf6,
+  0x8f, 0x01, 0xfb, 0xd5, 0xc0, 0x88, 0xfb, 0x99, 0x80, 0x87, 0xbe, 0xff,
+  0x64, 0x97, 0xf5, 0xee, 0x4e, 0x13, 0x32, 0x15, 0x2b, 0x60, 0x7b, 0xee,
+  0xa2, 0xf4, 0xd7, 0x80, 0x8f, 0x54, 0xbb, 0xe3, 0x5e, 0x7a, 0x7c, 0x25,
+  0xfc, 0x63, 0xc0, 0xff, 0xfe, 0xb8, 0xdb, 0x7f, 0xf6, 0x93, 0xeb, 0xf5,
+  0x93, 0xdd, 0xf7, 0x9f, 0xec, 0x75, 0x5a, 0x11, 0x66, 0xd9, 0x34, 0xb1,
+  0x34, 0x28, 0x4c, 0x53, 0xe8, 0xb4, 0x78, 0xa8, 0xb8, 0xba, 0x54, 0x47,
+  0xf4, 0x70, 0x6b, 0x00, 0x7f, 0x6c, 0x3a, 0x11, 0x59, 0x6d, 0xf9, 0x00,
+  0xe8, 0x53, 0x58, 0x08, 0x30, 0x40, 0x6a, 0xd0, 0xba, 0x78, 0x50, 0x32,
+  0x25, 0xd6, 0xc6, 0x6c, 0x86, 0x0d, 0xf3, 0x24, 0x90, 0x26, 0x26, 0x2b,
+  0xba, 0xf7, 0x04, 0xed, 0x62, 0xe0, 0x5c, 0x4d, 0x26, 0x4d, 0x5a, 0x5d,
+  0x51, 0xc9, 0x20, 0xda, 0x74, 0x12, 0x00, 0xa7, 0x9a, 0x6c, 0xb5, 0x29,
+  0x34, 0x5e, 0x87, 0xf0, 0x34, 0xaf, 0x55, 0xdb, 0x70, 0x92, 0x85, 0xd8,
+  0xfd, 0xf9, 0xa9, 0x21, 0x4e, 0x7c, 0xe0, 0xf4, 0xc4, 0x3a, 0xa3, 0xa0,
+  0xd4, 0xb3, 0x62, 0xcc, 0x3a, 0x18, 0x27, 0x7c, 0x75, 0x2f, 0xa0, 0xd2,
+  0x0d, 0xa0, 0x24, 0xe4, 0x62, 0x79, 0x7f, 0x4f, 0x88, 0xe6, 0x15, 0xbe,
+  0xae, 0x0c, 0xa3, 0xa7, 0xf9, 0x76, 0x44, 0xd4, 0xc8, 0xc4, 0x2f, 0x9b,
+  0x49, 0xf6, 0x83, 0xad, 0xb6, 0x40, 0xca, 0xb0, 0x2d, 0x4b, 0xc8, 0xd2,
+  0x00, 0xa7, 0xa8, 0x10, 0xcc, 0x4e, 0xd8, 0xc6, 0x14, 0xef, 0x22, 0x09,
+  0x2d, 0x03, 0x8d, 0x60, 0x4e, 0xad, 0xb6, 0xd7, 0x73, 0x28, 0x30, 0xc9,
+  0xb4, 0x48, 0x06, 0xff, 0x56, 0xf2, 0xab, 0x6c, 0x51, 0x3f, 0x6e, 0x78,
+  0x00, 0x2b, 0x6e, 0x5e, 0x84, 0x7d, 0x54, 0x8b, 0xf0, 0x49, 0x61, 0x01,
+  0x57, 0xe5, 0xce, 0xcd, 0xa9, 0xd0, 0x00, 0xb8, 0x46, 0x96, 0x44, 0xec,
+  0x2e, 0x0b, 0xc9, 0x1c, 0x6d, 0x00, 0x93, 0x20, 0x8b, 0xd4, 0x39, 0x25,
+  0xe0, 0x9e, 0xcf, 0x24, 0xc1, 0x8b, 0x1e, 0x6f, 0x82, 0xe1, 0xb9, 0x7b,
+  0xb0, 0xa2, 0x6f, 0x63, 0x3c, 0xc6, 0xee, 0xc6, 0xe0, 0x4e, 0x52, 0xab,
+  0xa1, 0x3a, 0xdf, 0x16, 0x0d, 0x4c, 0x70, 0x0d, 0x50, 0x5d, 0xd4, 0x00,
+  0x4a, 0x71, 0xdd, 0xc2, 0x28, 0xc5, 0x3b, 0xd0, 0x21, 0x46, 0xd1, 0xef,
+  0x30, 0x13, 0x82, 0x72, 0x18, 0x34, 0xf7, 0x28, 0x78, 0xd7, 0x8b, 0xaa,
+  0x6b, 0x98, 0x0d, 0x47, 0xd1, 0xcb, 0xc5, 0x4d, 0x4e, 0x32, 0xcd, 0x23,
+  0x20, 0x04, 0xf4, 0x94, 0x3c, 0xe3, 0x18, 0x6d, 0x90, 0x65, 0xff, 0x1b,
+  0x66, 0xc3, 0x73, 0x64, 0xfd, 0x93, 0x9d, 0xdd, 0x46, 0x15, 0x12, 0x5f,
+  0x78, 0x3c, 0x43, 0xc8, 0x0a, 0x9b, 0x5d, 0x18, 0x46, 0x3f, 0x8a, 0xf6,
+  0x9e, 0xef, 0x3e, 0xdf, 0xde, 0xdd, 0x19, 0x3c, 0x19, 0xec, 0xa9, 0x50,
+  0x0c, 0x4c, 0x44, 0x92, 0xd5, 0xb9, 0xca, 0x4f, 0x84, 0xd0, 0x9a, 0xf6,
+  0x68, 0x14, 0xd6, 0xf7, 0xa8, 0xb9, 0x00, 0x8e, 0x55, 0xcb, 0x09, 0xfb,
+  0x1b, 0x3c, 0xe6, 0xc0, 0x19, 0x17, 0x99, 0x61, 0x95, 0x2c, 0x1a, 0xce,
+  0xea, 0x79, 0x9f, 0x87, 0xa2, 0x32, 0xdf, 0x52, 0xd0, 0x94, 0x47, 0x29,
+  0xc9, 0x2c, 0x25, 0x57, 0xc0, 0xe3, 0xf4, 0x67, 0x92, 0x63, 0x0d, 0xa9,
+  0x87, 0xf3, 0x82, 0xb3, 0xb0, 0x8c, 0xe6, 0x9a, 0x00, 0x45, 0x13, 0x56,
+  0x90, 0x3a, 0x6c, 0x64, 0x8f, 0x84, 0xcb, 0x54, 0xd2, 0x71, 0x81, 0xbd,
+  0x42, 0x77, 0x3e, 0xea, 0xce, 0x7c, 0x6d, 0xd9, 0xc0, 0x71, 0x6b, 0x9c,
+  0xa7, 0x46, 0xae, 0x88, 0xee, 0x1b, 0x4b, 0xbc, 0x11, 0x96, 0x12, 0x0a,
+  0x8e, 0x7e, 0x20, 0x94, 0x2a, 0x82, 0xa0, 0xa0, 0x37, 0x4e, 0xd2, 0x36,
+  0xe8, 0xb4, 0xd4, 0xd5, 0x49, 0xf0, 0x3b, 0xae, 0x68, 0x1e, 0xec, 0xde,
+  0x15, 0x25, 0xcf, 0xdb, 0x59, 0x1f, 0x0d, 0x30, 0x7c, 0x04, 0x67, 0x4e,
+  0x68, 0x61, 0xef, 0xff, 0x4f, 0xb4, 0xb0, 0xf7, 0x7f, 0x69, 0xe1, 0xdf,
+  0x44, 0x0b, 0x2f, 0x6a, 0xb4, 0x00, 0x45, 0x81, 0x2e, 0x1d, 0x56, 0x2d,
+  0x1e, 0xa5, 0x88, 0x05, 0xbb, 0x2b, 0x39, 0xd1, 0x22, 0x95, 0x54, 0xbc,
+  0x9a, 0x21, 0xde, 0xb4, 0x50, 0xad, 0x1f, 0x38, 0x9b, 0x2d, 0xeb, 0xb3,
+  0x9a, 0x5b, 0xb9, 0x42, 0x55, 0x2d, 0xca, 0x20, 0x8d, 0x41, 0x6d, 0x0a,
+  0x16, 0xf6, 0x25, 0x40, 0xa5, 0x12, 0x95, 0xcb, 0xc1, 0xd8, 0xb8, 0x7c,
+  0xdb, 0x09, 0x6c, 0xdb, 0x85, 0xe3, 0xe5, 0x9c, 0xc5, 0xda, 0x27, 0x29,
+  0x76, 0xd1, 0x28, 0x00, 0xbd, 0xd7, 0x9c, 0x32, 0x60, 0xc3, 0x1e, 0x9d,
+  0x30, 0x77, 0xbe, 0x36, 0x68, 0x2b, 0x0a, 0x67, 0x6a, 0x33, 0x5b, 0x27,
+  0x62, 0xcb, 0x24, 0x75, 0x8e, 0xef, 0xc4, 0x96, 0x8b, 0x36, 0x71, 0x21,
+  0xb2, 0xba, 0xc7, 0xcb, 0x12, 0xf4, 0x25, 0xd7, 0x69, 0x63, 0xc2, 0x0e,
+  0xfb, 0x72, 0xa0, 0xcf, 0xa5, 0x56, 0x07, 0xd0, 0xf2, 0x7c, 0xeb, 0x83,
+  0xd4, 0x5d, 0xc1, 0x9c, 0x9a, 0x8a, 0x62, 0x21, 0x1d, 0xf1, 0xc0, 0x6a,
+  0xa5, 0x98, 0x65, 0x8d, 0x26, 0xd0, 0x58, 0x5b, 0x17, 0xa9, 0xb9, 0x4a,
+  0xa2, 0xde, 0xd6, 0x47, 0x20, 0x95, 0x0b, 0xff, 0xc9, 0x45, 0x92, 0xfe,
+  0x5b, 0x56, 0x49, 0xfb, 0x6a, 0x0d, 0xd7, 0x0c, 0x97, 0xa9, 0x31, 0xa3,
+  0x75, 0x7e, 0xda, 0x35, 0x3b, 0xbf, 0xce, 0x57, 0x5b, 0x9f, 0x56, 0x5b,
+  0x3c, 0x4d, 0xfb, 0xc4, 0xa4, 0xc2, 0x6c, 0xe0, 0x30, 0xb6, 0x52, 0x67,
+  0x36, 0x3f, 0x74, 0x5c, 0x37, 0x79, 0xba, 0x87, 0x35, 0x7e, 0xbb, 0x42,
+  0x0a, 0x8f, 0xb2, 0x7a, 0x67, 0x07, 0x78, 0x64, 0x17, 0x1d, 0x28, 0xb5,
+  0xcc, 0xb9, 0x69, 0x70, 0xfa, 0xd7, 0x76, 0x11, 0x36, 0xaf, 0xca, 0x1e,
+  0xa2, 0x8b, 0xca, 0x54, 0x5a, 0x8c, 0x7e, 0x8d, 0xcd, 0xdb, 0x1d, 0xec,
+  0x90, 0x80, 0xc5, 0xbf, 0x41, 0xcf, 0xdb, 0x67, 0xab, 0xc2, 0x4f, 0x9f,
+  0x37, 0xd0, 0xba, 0x0d, 0x04, 0x3c, 0x00, 0xba, 0xc3, 0xbc, 0x22, 0x7e,
+  0xdf, 0x46, 0x66, 0xf8, 0x1c, 0x3e, 0xb3, 0x41, 0x7d, 0xa6, 0xeb, 0x91,
+  0x8b, 0xd2, 0x32, 0x00, 0x2e, 0xe2, 0xe4, 0x03, 0xbc, 0xbc, 0xbb, 0xf3,
+  0xd9, 0x4e, 0x6b, 0x82, 0x16, 0x18, 0x74, 0x4b, 0xe5, 0x1d, 0xcd, 0x26,
+  0x8c, 0x5d, 0x68, 0xaf, 0x0c, 0x4e, 0xec, 0x3b, 0xed, 0xde, 0xa7, 0xcd,
+  0xfe, 0xc3, 0xb6, 0xae, 0xc1, 0x56, 0x4f, 0x93, 0xbd, 0xe2, 0xd2, 0x6c,
+  0xfe, 0x2e, 0x25, 0xe3, 0xf0, 0xec, 0xed, 0xdb, 0xe3, 0x43, 0xba, 0x72,
+  0x6e, 0x72, 0xb8, 0x38, 0x9d, 0xad, 0xb6, 0x4d, 0xf7, 0xf3, 0x78, 0xe2,
+  0x32, 0x00, 0x5e, 0x1c, 0x33, 0xf2, 0x85, 0x16, 0x8f, 0x1a, 0x7f, 0x69,
+  0x21, 0xce, 0xdd, 0xc1, 0x6e, 0xb0, 0x55, 0x0b, 0x1b, 0x69, 0xc9, 0xd9,
+  0x14, 0xd3, 0xd6, 0x50, 0x6f, 0xeb, 0x53, 0xe6, 0x6c, 0x52, 0x6d, 0x75,
+  0x96, 0x8d, 0x44, 0x03, 0x5c, 0x06, 0x2d, 0x42, 0x81, 0xb5, 0x84, 0x91,
+  0x2b, 0x14, 0x9c, 0xd5, 0xa1, 0x97, 0xc4, 0x58, 0x0c, 0x24, 0x72, 0xcb,
+  0xa2, 0xf8, 0x2a, 0x2d, 0x0b, 0xe3, 0xd0, 0x0e, 0x39, 0x4f, 0x95, 0xb6,
+  0x6d, 0x6a, 0x91, 0xec, 0x69, 0xa9, 0x95, 0xc1, 0x80, 0x14, 0x0a, 0x2d,
+  0xd6, 0xc5, 0xe6, 0x15, 0x12, 0x2f, 0x44, 0xbd, 0x34, 0xee, 0x3b, 0xea,
+  0x35, 0x5e, 0x50, 0x47, 0x08, 0x48, 0x2e, 0x04, 0x43, 0xd0, 0x1d, 0x94,
+  0xca, 0xb6, 0xdb, 0xd6, 0xf9, 0x54, 0x89, 0x66, 0xa8, 0xa4, 0xb3, 0xd5,
+  0xb9, 0x38, 0x57, 0xb5, 0x09, 0x4a, 0xc8, 0xbc, 0xc6, 0x4e, 0xab, 0xaf,
+  0xce, 0xe2, 0x7f, 0x94, 0x51, 0xb4, 0x54, 0xd7, 0x54, 0xaa, 0x97, 0x18,
+  0xb0, 0x78, 0x2e, 0x64, 0xa4, 0x6b, 0xe5, 0x28, 0x28, 0xab, 0x1c, 0xc2,
+  0xe5, 0xe8, 0x11, 0x94, 0x35, 0x56, 0x6e, 0xc4, 0x5e, 0xfa, 0x28, 0xc0,
+  0x9a, 0x8b, 0x00, 0x10, 0x0b, 0xe1, 0x5a, 0x08, 0xe7, 0x7f, 0x3b, 0xc0,
+  0x9a, 0x95, 0x90, 0x96, 0xa4, 0xa9, 0x75, 0x41, 0xc8, 0x56, 0x33, 0x13,
+  0x36, 0xf0, 0xa2, 0x76, 0x3a, 0xb4, 0xc2, 0x5b, 0x96, 0x6f, 0x4f, 0x21,
+  0x32, 0x72, 0x32, 0x4f, 0xc6, 0x66, 0x2c, 0x65, 0x9f, 0x2d, 0x14, 0x32,
+  0xf6, 0xf5, 0x9b, 0xa9, 0x69, 0x15, 0xf8, 0xd4, 0x06, 0x3d, 0xf3, 0xb1,
+  0x86, 0x8a, 0xfd, 0x25, 0x90, 0x82, 0x56, 0x1c, 0xef, 0x64, 0xde, 0x40,
+  0x27, 0xe2, 0x27, 0xc6, 0x1e, 0x2e, 0x56, 0xeb, 0x7a, 0x09, 0xab, 0x17,
+  0xa6, 0xe8, 0xea, 0xdc, 0x19, 0xa1, 0x30, 0x78, 0x4f, 0x7b, 0x26, 0x8b,
+  0x94, 0x6a, 0xee, 0x06, 0xce, 0x26, 0x17, 0x6a, 0x2d, 0x79, 0xd3, 0x79,
+  0x69, 0xa9, 0xae, 0x8b, 0xb0, 0x9a, 0x76, 0x5c, 0xdc, 0x16, 0x6b, 0xf1,
+  0x47, 0x15, 0x41, 0x06, 0xf1, 0x6c, 0x48, 0xf8, 0x0b, 0xc0, 0x89, 0xad,
+  0x55, 0xc1, 0x15, 0x29, 0xc3, 0x51, 0x32, 0x25, 0x56, 0x9b, 0x73, 0x5b,
+  0xd4, 0xc0, 0x5c, 0x6b, 0x18, 0x0c, 0x1d, 0x4a, 0x71, 0x7b, 0xa1, 0xf9,
+  0x74, 0x90, 0x44, 0x1d, 0xc6, 0x2f, 0xee, 0x84, 0xc1, 0xed, 0xe2, 0x9a,
+  0x72, 0xaf, 0x72, 0xdd, 0x6b, 0x1a, 0xaa, 0x1b, 0x6b, 0x8b, 0x1d, 0xc6,
+  0xd8, 0xab, 0x9a, 0x2f, 0x78, 0xcb, 0x36, 0xdf, 0xcd, 0xd3, 0x07, 0x5c,
+  0x05, 0x4d, 0x50, 0x44, 0x37, 0xef, 0x47, 0x46, 0xb5, 0xfb, 0x62, 0x6f,
+  0xb0, 0xfb, 0xfc, 0xb3, 0x01, 0xa9, 0x5e, 0xbb, 0x95, 0xd1, 0x21, 0x48,
+  0x82, 0xc3, 0x1a, 0xc2, 0x76, 0x5a, 0x2e, 0xd1, 0x36, 0x07, 0x5d, 0xd8,
+  0xc1, 0x6c, 0x35, 0x08, 0xc2, 0xf3, 0x1a, 0x5d, 0x68, 0x08, 0x5f, 0xbd,
+  0xe5, 0x7e, 0x60, 0x6c, 0x57, 0x52, 0x83, 0x76, 0xd0, 0x56, 0x51, 0xda,
+  0x70, 0xea, 0x82, 0x42, 0xd2, 0x93, 0xf6, 0x01, 0xad, 0xaf, 0x2e, 0xed,
+  0xfa, 0xff, 0x17, 0x8e, 0xbb, 0x55, 0x73, 0x39, 0x4a, 0x7d, 0xd4, 0xb8,
+  0x14, 0x9b, 0xb7, 0xea, 0xe1, 0x52, 0x53, 0xfa, 0xec, 0xe2, 0x52, 0x93,
+  0xd0, 0x84, 0x1d, 0xc4, 0xc5, 0xdd, 0xc0, 0x45, 0x04, 0x20, 0x00, 0x49,
+  0x2f, 0x97, 0x26, 0xd0, 0x2e, 0xca, 0x57, 0x5b, 0xba, 0x68, 0x70, 0x87,
+  0xa2, 0x4d, 0x97, 0x16, 0x15, 0x16, 0x86, 0x87, 0x4f, 0x05, 0xaf, 0xc1,
+  0xc6, 0x48, 0x2b, 0x34, 0xf5, 0x19, 0xbc, 0xfc, 0xda, 0x9f, 0xfe, 0xe4,
+  0x59, 0xd4, 0x90, 0xe3, 0xf6, 0xb5, 0xec, 0x13, 0x14, 0xb9, 0x67, 0xde,
+  0x81, 0x20, 0x59, 0xee, 0x51, 0x67, 0xff, 0x47, 0x44, 0xf7, 0xff, 0xd4,
+  0xff, 0x91, 0xfe, 0xfc, 0xa9, 0xe3, 0xae, 0x01, 0x28, 0x54, 0x62, 0x3d,
+  0x75, 0x93, 0x97, 0x0d, 0xea, 0xe1, 0x19, 0x57, 0xcc, 0x1c, 0x88, 0x10,
+  0x1c, 0xf4, 0x81, 0x83, 0x28, 0x89, 0xa0, 0x32, 0x53, 0xf5, 0x30, 0x48,
+  0x82, 0xb8, 0xd4, 0x62, 0x21, 0x4a, 0x71, 0x6b, 0xa9, 0x39, 0x19, 0x9a,
+  0xe4, 0x89, 0x17, 0x7b, 0x66, 0x2a, 0x65, 0x53, 0xf0, 0xbd, 0xb0, 0x9d,
+  0xd8, 0xf2, 0xc8, 0xe5, 0xfe, 0x61, 0xf8, 0x30, 0x35, 0x53, 0xcb, 0x07,
+  0x1b, 0x2e, 0xef, 0x8d, 0x03, 0xce, 0xb5, 0xf4, 0xb5, 0x44, 0x75, 0x8a,
+  0x7f, 0x3c, 0x71, 0x51, 0x41, 0xe9, 0x9c, 0xcd, 0xe7, 0x86, 0x0e, 0x91,
+  0xa7, 0xc5, 0x2d, 0xcf, 0x50, 0x33, 0x33, 0x23, 0x49, 0x1d, 0xde, 0x08,
+  0xf4, 0x7d, 0x8c, 0xcc, 0x92, 0x87, 0x38, 0x28, 0xd1, 0xf0, 0xcd, 0x82,
+  0x5b, 0xe0, 0x6f, 0xce, 0x29, 0x25, 0x95, 0x79, 0xd4, 0x06, 0x2b, 0x28,
+  0x44, 0x1e, 0x93, 0x2d, 0x33, 0xe4, 0xa7, 0x10, 0xc8, 0xc3, 0xf0, 0x6a,
+  0x1a, 0x41, 0xe3, 0x21, 0x02, 0xa0, 0x0b, 0x79, 0x46, 0x41, 0xdc, 0x78,
+  0x62, 0x30, 0x93, 0x9a, 0xba, 0x27, 0xe1, 0x66, 0x01, 0x1e, 0x58, 0x4b,
+  0xa2, 0x6d, 0x35, 0xc8, 0xba, 0x86, 0xd8, 0xa4, 0x69, 0x19, 0x49, 0x9c,
+  0x13, 0xf7, 0x62, 0x73, 0x78, 0x30, 0xb9, 0xff, 0x41, 0xcd, 0x02, 0x0d,
+  0x8e, 0xd1, 0x0b, 0x31, 0xf2, 0xb6, 0xfb, 0x6d, 0x7b, 0x28, 0x97, 0xdc,
+  0x10, 0xd9, 0x67, 0x4c, 0x5b, 0xf9, 0x28, 0x2d, 0xf3, 0x58, 0x43, 0x09,
+  0x35, 0x15, 0x3a, 0x10, 0x2e, 0x14, 0xae, 0x7c, 0xb8, 0x2e, 0x15, 0x7a,
+  0x10, 0xfd, 0x0f, 0x74, 0xaa, 0x6f, 0x4b, 0x24, 0x0c, 0xf2, 0x6f, 0xbe,
+  0x3c, 0x7e, 0x7d, 0x76, 0x71, 0x5c, 0x4d, 0x5a, 0x91, 0x1c, 0xc9, 0xa8,
+  0xad, 0xf0, 0xca, 0x26, 0xea, 0x43, 0x9a, 0x05, 0x05, 0x4b, 0x65, 0xd9,
+  0x96, 0xe7, 0xdf, 0x1d, 0x05, 0x27, 0xcf, 0xf2, 0xb7, 0xad, 0xd1, 0x9e,
+  0x78, 0x36, 0x1a, 0x08, 0xd6, 0xc4, 0x3f, 0xb7, 0x50, 0xef, 0x53, 0xb0,
+  0xd6, 0x6c, 0x7c, 0x82, 0x11, 0x80, 0x7a, 0x25, 0x5a, 0x0f, 0x58, 0x82,
+  0x55, 0x8a, 0x82, 0x2d, 0x2f, 0xae, 0xd1, 0x16, 0x6c, 0x40, 0x46, 0xa0,
+  0x40, 0x85, 0x2f, 0x35, 0x71, 0xc4, 0x11, 0xbc, 0x2f, 0xec, 0x90, 0x19,
+  0x44, 0xcd, 0x8e, 0x46, 0xba, 0x0e, 0xe8, 0xa5, 0x81, 0xbb, 0x2f, 0x60,
+  0x33, 0x6c, 0xbd, 0x16, 0x3b, 0xbd, 0x29, 0x0c, 0x0a, 0x28, 0x10, 0x85,
+  0x09, 0xfc, 0x52, 0x3a, 0xd3, 0x01, 0x1d, 0x37, 0x6f, 0x5f, 0xb7, 0xbe,
+  0xda, 0xf9, 0x66, 0xb1, 0x55, 0x29, 0x29, 0x6a, 0x8b, 0x67, 0x95, 0xab,
+  0xfe, 0xd4, 0x8d, 0x36, 0x2d, 0xbe, 0xa6, 0x05, 0x56, 0xc0, 0x61, 0xbe,
+  0x5a, 0xa2, 0xc1, 0x96, 0x2b, 0x5c, 0xb4, 0xa6, 0x54, 0x91, 0x9b, 0xf5,
+  0xda, 0x2c, 0x27, 0x13, 0x10, 0x0c, 0x4e, 0xcb, 0x4e, 0xb2, 0xe1, 0x43,
+  0xb9, 0xe2, 0xcb, 0xd2, 0x4e, 0x6f, 0x3d, 0xa2, 0x85, 0x4f, 0x9c, 0x71,
+  0x45, 0xba, 0x46, 0x8a, 0x50, 0xfb, 0x83, 0x85, 0xa3, 0x4a, 0x72, 0x65,
+  0xb1, 0x9a, 0x97, 0x10, 0x9a, 0x04, 0x40, 0x7e, 0x9c, 0xe5, 0xbc, 0xa4,
+  0xb5, 0xe6, 0x80, 0x49, 0xe0, 0x36, 0x0d, 0x31, 0xd1, 0x17, 0xaf, 0x0f,
+  0x5f, 0x3c, 0x7b, 0x01, 0xd1, 0x0f, 0xb5, 0x63, 0x34, 0xea, 0x5e, 0x43,
+  0x2a, 0x90, 0x0c, 0xea, 0x87, 0xdc, 0x60, 0x07, 0xda, 0x12, 0xa4, 0x44,
+  0x16, 0x5c, 0xa6, 0x12, 0xe5, 0x3f, 0x0c, 0x9a, 0x18, 0xb4, 0xc2, 0x19,
+  0xb5, 0xdd, 0x9e, 0xeb, 0x4a, 0x20, 0xda, 0xad, 0x81, 0xd1, 0xa7, 0x12,
+  0xc7, 0xad, 0x05, 0xd4, 0x4c, 0x5d, 0x22, 0x0d, 0x7d, 0x0e, 0x6d, 0x46,
+  0x37, 0xb1, 0xe7, 0xa8, 0xce, 0xd5, 0xa6, 0x2b, 0xda, 0x9a, 0xfb, 0x5b,
+  0xf5, 0x3c, 0x2b, 0xd5, 0x05, 0x89, 0xa0, 0xb3, 0x6a, 0x45, 0x55, 0x54,
+  0x6f, 0x87, 0xbd, 0xb7, 0xcd, 0x50, 0xa2, 0x46, 0x2c, 0xc4, 0x0b, 0x71,
+  0x66, 0xdc, 0x74, 0x1a, 0x90, 0x57, 0x4b, 0x7f, 0xcd, 0x02, 0x95, 0x37,
+  0xd7, 0xf9, 0x42, 0xb2, 0x3a, 0xda, 0x50, 0xf8, 0x42, 0xd4, 0x14, 0x79,
+  0xd4, 0x88, 0xdd, 0x41, 0x8b, 0xcb, 0xbb, 0x27, 0x47, 0xae, 0x98, 0xab,
+  0xf7, 0x59, 0x8e, 0x56, 0xed, 0xcd, 0xb9, 0xc7, 0x40, 0x6c, 0x9e, 0x29,
+  0xba, 0xa6, 0xbc, 0xd4, 0x3c, 0x5a, 0x99, 0xb1, 0x93, 0xbf, 0x6b, 0x6f,
+  0x4e, 0x5b, 0x11, 0x65, 0x52, 0xda, 0xb0, 0x86, 0x11, 0x8c, 0x63, 0x05,
+  0x75, 0x78, 0x63, 0x38, 0xa1, 0xcd, 0xba, 0x69, 0x16, 0x66, 0xba, 0x21,
+  0x21, 0x5c, 0x04, 0xf1, 0x0f, 0xae, 0xc5, 0x0c, 0xa6, 0x41, 0xab, 0x6a,
+  0xa1, 0x29, 0xc3, 0x45, 0x98, 0x74, 0x88, 0x76, 0x46, 0x00, 0x66, 0x6c,
+  0x23, 0xe5, 0xba, 0x95, 0x44, 0x94, 0x34, 0x34, 0x8f, 0x37, 0xc3, 0x29,
+  0xcc, 0xa3, 0x6c, 0x5c, 0x06, 0x33, 0xe0, 0x07, 0xda, 0x9b, 0x53, 0xd1,
+  0xa0, 0x39, 0x33, 0x4e, 0x2c, 0x44, 0xc4, 0xf6, 0xe3, 0x33, 0x93, 0x07,
+  0x1b, 0x9b, 0x4c, 0x1f, 0x0a, 0x2b, 0x6a, 0xec, 0xf0, 0xfa, 0x99, 0xb5,
+  0xed, 0x30, 0x46, 0x50, 0xdf, 0x60, 0x13, 0x22, 0x73, 0xd9, 0xca, 0x7e,
+  0x7b, 0x73, 0x6e, 0x87, 0xf1, 0xe4, 0xa3, 0x1b, 0xac, 0xbd, 0x34, 0x56,
+  0x61, 0x3a, 0x57, 0x08, 0xb0, 0xf7, 0x92, 0x06, 0xc9, 0xf9, 0x8d, 0xe5,
+  0xfb, 0xc7, 0x17, 0x64, 0x3a, 0x37, 0xbc, 0x10, 0x4e, 0xdf, 0xf3, 0x07,
+  0x57, 0xc3, 0x0f, 0xe2, 0x2a, 0x92, 0x48, 0x24, 0xe6, 0x85, 0x35, 0x64,
+  0xef, 0xfb, 0xf3, 0x00, 0x13, 0x8b, 0x2c, 0x9d, 0x5b, 0xec, 0xa9, 0xf2,
+  0xf2, 0x60, 0x88, 0x51, 0x1b, 0x10, 0x41, 0x10, 0x30, 0xd5, 0x98, 0xe2,
+  0xec, 0x96, 0xe1, 0xff, 0xdc, 0xed, 0xf6, 0x7e, 0xbd, 0x0e, 0x03, 0x3a,
+  0x96, 0xc7, 0x3d, 0x1d, 0xcb, 0xac, 0x9c, 0x72, 0xee, 0xd2, 0xea, 0x3e,
+  0xbc, 0xdb, 0xd5, 0x2e, 0xdd, 0x99, 0xac, 0x8f, 0x6f, 0x71, 0x3f, 0xb1,
+  0xce, 0xf9, 0x57, 0xeb, 0x38, 0x84, 0x81, 0x8c, 0x47, 0x45, 0x36, 0x5d,
+  0x96, 0x12, 0x91, 0x10, 0x96, 0x89, 0x26, 0xee, 0xba, 0x66, 0x29, 0x10,
+  0x84, 0x63, 0x77, 0xfb, 0xfa, 0xcc, 0xb1, 0x5c, 0x60, 0x63, 0x0d, 0x15,
+  0x05, 0xdb, 0xb1, 0x7e, 0x71, 0xf4, 0x69, 0x3f, 0x44, 0xc1, 0x34, 0xf5,
+  0xcc, 0x2b, 0x6f, 0x59, 0xa0, 0xf5, 0x0c, 0x4f, 0x7b, 0xad, 0x1d, 0x88,
+  0x49, 0xc2, 0xb8, 0x42, 0x4a, 0x0a, 0x1c, 0x81, 0x21, 0x0d, 0x19, 0xdf,
+  0x7b, 0x8c, 0x90, 0xd6, 0xae, 0x71, 0x3e, 0xfb, 0xc0, 0x21, 0xa7, 0x07,
+  0xfc, 0xac, 0x18, 0xff, 0x24, 0x98, 0x55, 0xe3, 0x64, 0xea, 0x31, 0x5e,
+  0xb3, 0xf2, 0xeb, 0x46, 0x50, 0xa1, 0xc2, 0xc7, 0x46, 0xc2, 0x0f, 0xb6,
+  0x0d, 0xc6, 0x2f, 0x2d, 0xcb, 0x29, 0xc8, 0x58, 0xb3, 0x91, 0xb5, 0x37,
+  0xa7, 0xc3, 0xf5, 0xef, 0xe9, 0xf2, 0xf4, 0xcc, 0x6c, 0x36, 0x51, 0x33,
+  0x34, 0x6b, 0xa0, 0x4d, 0xda, 0xb0, 0x03, 0xfe, 0x8b, 0x18, 0x04, 0xab,
+  0x1d, 0xd3, 0x79, 0x25, 0x80, 0x84, 0x7a, 0xcc, 0x66, 0x48, 0x74, 0x6f,
+  0x0f, 0x94, 0x93, 0x38, 0xf9, 0x30, 0xd3, 0xdd, 0x6d, 0xbb, 0x60, 0xb9,
+  0x4e, 0x93, 0xb0, 0x2a, 0xdc, 0x7d, 0x08, 0xdd, 0xd3, 0x62, 0x06, 0xb3,
+  0x42, 0x27, 0x31, 0xa0, 0x7b, 0xa8, 0x6b, 0xa4, 0x67, 0x28, 0x1e, 0x2d,
+  0x52, 0x3d, 0x0a, 0xd3, 0xc7, 0xc4, 0x78, 0xe4, 0x44, 0x61, 0x79, 0xbc,
+  0x81, 0xc7, 0xcf, 0x91, 0xa9, 0x52, 0x93, 0xad, 0x5a, 0xea, 0x65, 0xd0,
+  0x08, 0xcb, 0x4a, 0xae, 0x27, 0x7d, 0x25, 0x8e, 0x2a, 0x2b, 0xea, 0xe7,
+  0xdb, 0x58, 0x08, 0x52, 0x7f, 0x5f, 0xe2, 0xc7, 0xe7, 0x6b, 0x0b, 0x4c,
+  0x0d, 0x7d, 0x95, 0xa9, 0xe8, 0x22, 0x61, 0x44, 0x5b, 0x00, 0xe6, 0x71,
+  0xae, 0xbf, 0x2a, 0xd0, 0x9b, 0x6c, 0x6b, 0x91, 0x82, 0x84, 0x02, 0x01,
+  0x3c, 0x5e, 0xb6, 0xe1, 0x4f, 0x6f, 0x59, 0x01, 0x25, 0x34, 0xbd, 0x3b,
+  0xd8, 0xed, 0x99, 0x6e, 0xa5, 0x52, 0x9c, 0x49, 0xc8, 0xfc, 0x49, 0xec,
+  0x22, 0xc6, 0xb8, 0xeb, 0xba, 0x75, 0xec, 0x42, 0x02, 0x7b, 0x54, 0x6c,
+  0x0c, 0x8b, 0x88, 0x31, 0xb0, 0x97, 0x13, 0xca, 0x39, 0x61, 0xbf, 0x41,
+  0x45, 0x3b, 0xfd, 0xa7, 0x2f, 0x5e, 0x54, 0xee, 0xf5, 0x50, 0x09, 0x7e,
+  0xb6, 0xb3, 0x23, 0x30, 0x06, 0xf5, 0xd7, 0xe8, 0x8b, 0xfe, 0x0b, 0xbc,
+  0x58, 0x7d, 0x4d, 0xd2, 0xdc, 0xd7, 0xbf, 0xd7, 0xe7, 0x6f, 0x5a, 0xba,
+  0x83, 0x05, 0x67, 0xed, 0x5b, 0x2f, 0xb8, 0xbb, 0x96, 0xb7, 0xf0, 0xb0,
+  0xac, 0x63, 0x76, 0x75, 0xc5, 0xe5, 0x39, 0xf9, 0x49, 0x01, 0x3a, 0xcd,
+  0xf2, 0xfb, 0x38, 0x9f, 0x34, 0xa7, 0xbb, 0xd3, 0xeb, 0xef, 0xae, 0x9b,
+  0xae, 0x2b, 0xa6, 0x85, 0xed, 0x64, 0x4d, 0x68, 0xf3, 0x8f, 0x5b, 0x9b,
+  0x5f, 0x6f, 0xb5, 0xcd, 0xfe, 0xd3, 0x9d, 0x9d, 0xde, 0x73, 0xfe, 0xf9,
+  0xe2, 0x45, 0xfb, 0x51, 0xab, 0xf4, 0xf1, 0xc4, 0xa6, 0x56, 0x19, 0x2d,
+  0xb5, 0xd3, 0xd2, 0xfa, 0x2e, 0xb5, 0xba, 0xfb, 0xe2, 0x45, 0x8f, 0x7b,
+  0x79, 0xf6, 0x51, 0xad, 0x97, 0xf7, 0x99, 0x37, 0x9d, 0xf3, 0xeb, 0x9e,
+  0x1c, 0x8b, 0xda, 0x0c, 0xe8, 0xcf, 0x28, 0x7a, 0x25, 0xd0, 0x0e, 0x51,
+  0x90, 0x59, 0xe1, 0xdd, 0x2e, 0x21, 0x3c, 0x15, 0x02, 0x1a, 0x16, 0xc8,
+  0x36, 0x80, 0xa6, 0x28, 0xea, 0x47, 0xec, 0xfd, 0x0b, 0xe6, 0x8f, 0xf7,
+  0xb0, 0xa1, 0x67, 0xe2, 0x0a, 0xbb, 0x66, 0x58, 0x09, 0xcb, 0x45, 0x28,
+  0xa2, 0x4d, 0x22, 0x97, 0x2d, 0xd8, 0x02, 0xee, 0xe2, 0x69, 0x6a, 0xe9,
+  0xaa, 0x51, 0x17, 0x06, 0x2c, 0x49, 0x3d, 0xa6, 0xdf, 0xb3, 0x45, 0x37,
+  0x92, 0xea, 0xf6, 0x4e, 0x13, 0x31, 0xaf, 0x94, 0x3c, 0xd9, 0x97, 0x67,
+  0xe4, 0xa0, 0x41, 0x9d, 0x7b, 0x50, 0xd8, 0x25, 0xf6, 0x0e, 0xd5, 0x7a,
+  0x8d, 0x1c, 0x00, 0x84, 0x87, 0x2d, 0x14, 0xbc, 0x3f, 0x98, 0xab, 0xfc,
+  0x34, 0xbb, 0x45, 0x00, 0xf3, 0x63, 0x0e, 0x83, 0x79, 0xe0, 0x0d, 0x9c,
+  0x24, 0x06, 0x25, 0x59, 0x2b, 0x8b, 0xe0, 0xde, 0x17, 0x7b, 0xcc, 0x52,
+  0x14, 0x51, 0x7f, 0xc8, 0x2a, 0x55, 0x66, 0x05, 0xd3, 0x90, 0xf5, 0xd3,
+  0xfb, 0xd8, 0x0a, 0xa8, 0x22, 0x02, 0xd0, 0x38, 0x80, 0x43, 0x93, 0xd3,
+  0xe4, 0x10, 0xcd, 0x90, 0xf3, 0x09, 0x9f, 0x06, 0xdb, 0x29, 0x41, 0xe3,
+  0x13, 0x60, 0xa7, 0x6a, 0x2a, 0x11, 0xdb, 0xfe, 0x05, 0x39, 0x31, 0x74,
+  0x87, 0x21, 0x6f, 0x28, 0xf6, 0x16, 0x3a, 0x81, 0xbb, 0xd9, 0xa8, 0xb9,
+  0xc0, 0xf8, 0x29, 0x0f, 0x44, 0xe1, 0x2a, 0xd5, 0xb9, 0x59, 0x80, 0x1d,
+  0xb9, 0x6a, 0x97, 0xb2, 0xf8, 0x06, 0xf4, 0xa1, 0x35, 0x31, 0x2d, 0x67,
+  0x58, 0x70, 0x78, 0x90, 0xd0, 0x5e, 0xd9, 0x31, 0xda, 0x2b, 0xc7, 0x04,
+  0x69, 0xd3, 0xa2, 0xcd, 0x00, 0x62, 0x1d, 0xb4, 0x15, 0xe8, 0xfc, 0x86,
+  0x19, 0x97, 0xcd, 0x18, 0xf0, 0x76, 0xb2, 0x35, 0x90, 0x01, 0xc0, 0x68,
+  0x2b, 0x3b, 0xc1, 0x10, 0x82, 0x95, 0x2d, 0xe5, 0xc2, 0xc3, 0x28, 0x87,
+  0xcd, 0x4f, 0xda, 0xe5, 0x3c, 0x3c, 0xf9, 0x9f, 0xc7, 0x83, 0x5f, 0xc3,
+  0x9a, 0x5c, 0x0f, 0xaf, 0xcb, 0xe3, 0x7b, 0xf3, 0x6e, 0x4a, 0x8c, 0xa1,
+  0xd4, 0xb4, 0x93, 0x28, 0xe6, 0x78, 0x3a, 0xf5, 0xd5, 0x7c, 0xe1, 0xf7,
+  0x23, 0x61, 0x3f, 0x33, 0x44, 0x5c, 0xab, 0xd3, 0x9b, 0xad, 0x85, 0x50,
+  0x45, 0x85, 0x76, 0x54, 0xa9, 0x0c, 0x0d, 0xcb, 0x2e, 0xb1, 0x7d, 0x06,
+  0xf7, 0x0b, 0xdf, 0x89, 0x4c, 0x8a, 0xcb, 0x39, 0xaa, 0x5f, 0xd3, 0x18,
+  0xea, 0xf2, 0x4c, 0x7c, 0xdf, 0x40, 0x9c, 0x0d, 0xe3, 0x62, 0x2e, 0x7c,
+  0xd8, 0x26, 0xcf, 0xbc, 0xd5, 0x73, 0x5b, 0x29, 0xf0, 0x1e, 0x16, 0x76,
+  0x37, 0xbb, 0x41, 0x60, 0x1c, 0x07, 0xf1, 0x23, 0x20, 0xb8, 0xcd, 0x1c,
+  0xc5, 0x6b, 0x5b, 0xc6, 0xb3, 0x45, 0x4b, 0x48, 0xaf, 0xa4, 0x1f, 0x19,
+  0x12, 0x04, 0x2b, 0x47, 0x66, 0xa8, 0xd5, 0xce, 0x9a, 0xcd, 0x05, 0x91,
+  0xc6, 0x42, 0xb9, 0xf4, 0x22, 0x1c, 0x11, 0xae, 0x9f, 0x6a, 0x80, 0x2c,
+  0xcb, 0x62, 0x00, 0x46, 0x6c, 0xc9, 0x46, 0x88, 0x75, 0xe5, 0x53, 0xe0,
+  0xb2, 0x25, 0x79, 0x2e, 0x35, 0x3e, 0x44, 0xba, 0x4f, 0x34, 0xc2, 0xa9,
+  0x0a, 0x5e, 0x6f, 0x55, 0xe9, 0xe2, 0x35, 0x3b, 0xe8, 0x91, 0xc7, 0xa4,
+  0x6b, 0xac, 0x9f, 0xbf, 0x85, 0x25, 0xdc, 0xd7, 0x6c, 0x77, 0x5a, 0xe4,
+  0x39, 0x5a, 0x2e, 0x06, 0x4d, 0xc0, 0xc6, 0xd2, 0xd7, 0x09, 0xd3, 0xf7,
+  0xa9, 0xfb, 0x9d, 0xd0, 0x55, 0x08, 0x46, 0x81, 0x7e, 0x78, 0x70, 0x8a,
+  0x50, 0x9f, 0x16, 0xad, 0x00, 0xe7, 0x30, 0x1c, 0xb3, 0x05, 0xd4, 0xcd,
+  0x57, 0xa6, 0x2b, 0x36, 0x7e, 0xc9, 0xd6, 0xda, 0xe7, 0x8a, 0x33, 0x02,
+  0xde, 0xd2, 0x0b, 0x20, 0x3a, 0x9f, 0x3e, 0x3c, 0x34, 0x14, 0x93, 0x00,
+  0x2a, 0x50, 0x0a, 0xac, 0x08, 0xb1, 0x3f, 0x7b, 0x78, 0xa8, 0x7e, 0xf9,
+  0x18, 0x02, 0x1c, 0xf6, 0x7b, 0x94, 0x49, 0x08, 0xb9, 0xac, 0x56, 0xdc,
+  0xb2, 0x8e, 0x72, 0x39, 0xdf, 0xc7, 0x69, 0xd9, 0x92, 0x1f, 0xa7, 0x12,
+  0x87, 0x2b, 0x05, 0x60, 0xb1, 0xcc, 0x9c, 0x5d, 0x74, 0x43, 0xac, 0x40,
+  0x10, 0xdf, 0x64, 0x81, 0xac, 0x41, 0xab, 0xcb, 0xd0, 0xb2, 0x4e, 0xdc,
+  0x8b, 0x2c, 0x7b, 0x0a, 0x68, 0xb5, 0x32, 0x9d, 0xf2, 0x6b, 0x00, 0x1a,
+  0xa3, 0x16, 0x76, 0x69, 0xf9, 0xd3, 0xf9, 0xb2, 0x4c, 0x8a, 0xb6, 0x92,
+  0x3a, 0x6d, 0xcb, 0x3e, 0x05, 0x28, 0x82, 0x84, 0x83, 0xd4, 0x8b, 0x96,
+  0xe8, 0xb8, 0x24, 0xad, 0x54, 0x3d, 0x46, 0x46, 0xb2, 0x7d, 0xbc, 0xda,
+  0x12, 0x31, 0x1d, 0xb9, 0x58, 0x69, 0x3d, 0x9a, 0xc9, 0x03, 0xad, 0xb6,
+  0xc0, 0x14, 0x46, 0xf0, 0xf0, 0x92, 0x74, 0xc1, 0xb7, 0xcd, 0x75, 0x96,
+  0xd3, 0xa6, 0xce, 0x54, 0x0e, 0xc6, 0xf5, 0x53, 0x97, 0xc6, 0xb4, 0x2b,
+  0x07, 0x68, 0xc4, 0x68, 0xe9, 0x0e, 0x08, 0xb0, 0xcc, 0x4a, 0x65, 0x8c,
+  0x8a, 0x39, 0x82, 0x70, 0xf8, 0x4c, 0x8c, 0xb6, 0x18, 0xf7, 0x63, 0xa1,
+  0x87, 0x7b, 0x83, 0x27, 0x5b, 0x1f, 0xc4, 0xd7, 0x0e, 0x84, 0x7d, 0x8f,
+  0xcf, 0xbe, 0xbe, 0x40, 0x5c, 0x63, 0x71, 0xc7, 0xa9, 0x96, 0x07, 0xb6,
+  0x12, 0x71, 0xb5, 0x73, 0x2f, 0x8b, 0xf8, 0x08, 0x4e, 0x93, 0x55, 0x5d,
+  0x29, 0xa6, 0x49, 0xb2, 0x90, 0xb1, 0x29, 0xfe, 0xa1, 0x1e, 0x55, 0x77,
+  0x52, 0x11, 0xca, 0xae, 0x44, 0xaa, 0xf7, 0xed, 0x3a, 0x0e, 0xa0, 0x51,
+  0xe8, 0x6c, 0xd2, 0xb6, 0xf2, 0x3d, 0xed, 0x9c, 0x66, 0x53, 0xc4, 0x15,
+  0x0b, 0xcb, 0x5f, 0x53, 0xcf, 0xc3, 0xb6, 0x54, 0x4a, 0x22, 0xda, 0xb6,
+  0x3a, 0xa2, 0xd2, 0xcd, 0xa8, 0xd5, 0xf7, 0x6b, 0x62, 0x63, 0xe3, 0x9e,
+  0x96, 0xab, 0x29, 0x11, 0x68, 0x60, 0x94, 0xf9, 0x93, 0x19, 0xc1, 0x67,
+  0xab, 0xb0, 0x1d, 0x03, 0xc7, 0x7b, 0x04, 0xf4, 0x1d, 0x4b, 0xd8, 0x40,
+  0xa1, 0xf9, 0x39, 0xc9, 0xb3, 0x00, 0x15, 0x14, 0xab, 0x68, 0xd2, 0xa3,
+  0x8b, 0x20, 0x72, 0xd4, 0xc8, 0x63, 0x1f, 0x78, 0x12, 0x69, 0x02, 0x49,
+  0xff, 0xbb, 0x28, 0x46, 0xcb, 0x3c, 0x14, 0x8f, 0x52, 0xcd, 0x07, 0x01,
+  0xbe, 0x2e, 0xf5, 0xf0, 0x4a, 0xf6, 0x86, 0x5e, 0x19, 0x2c, 0xd1, 0x87,
+  0x4e, 0x99, 0xc8, 0xea, 0x99, 0x78, 0xba, 0xd0, 0x1b, 0xb3, 0xa1, 0xc0,
+  0x29, 0x7f, 0x32, 0x3e, 0x82, 0xa4, 0x9c, 0x98, 0x25, 0x14, 0xae, 0xb6,
+  0xb5, 0xc9, 0x59, 0x76, 0x3a, 0xb4, 0x2d, 0xfe, 0x18, 0xa8, 0x2a, 0xb1,
+  0xaf, 0x93, 0x99, 0x37, 0x72, 0x44, 0x80, 0xa3, 0x24, 0x3c, 0x6b, 0x12,
+  0x22, 0xa1, 0x29, 0x10, 0xda, 0xdb, 0x8c, 0x23, 0x47, 0xf4, 0xca, 0xbd,
+  0xf2, 0xed, 0xe8, 0x9b, 0x4d, 0xb0, 0x24, 0xb4, 0xa3, 0x99, 0x4b, 0xdc,
+  0x44, 0xaf, 0x82, 0xd2, 0x69, 0xc3, 0x46, 0xcc, 0x13, 0xfc, 0x4a, 0x12,
+  0x27, 0x22, 0x17, 0x65, 0x8b, 0x17, 0x00, 0xac, 0x9d, 0xbd, 0x47, 0x70,
+  0xbe, 0xf1, 0x74, 0x5a, 0x50, 0xdb, 0xb0, 0x01, 0xd4, 0x46, 0xca, 0x78,
+  0x30, 0x97, 0xc6, 0x98, 0x9a, 0xd1, 0xd8, 0xe2, 0x50, 0xb6, 0xc1, 0x74,
+  0x01, 0x24, 0x19, 0xc0, 0xaf, 0xf5, 0x54, 0x72, 0xac, 0x20, 0xb7, 0x0d,
+  0x04, 0x10, 0x79, 0x7d, 0xbd, 0x62, 0x62, 0x84, 0x20, 0xf0, 0x52, 0x24,
+  0x71, 0x03, 0x34, 0x73, 0x0c, 0xfb, 0x63, 0x58, 0x5d, 0x4d, 0xdc, 0x5c,
+  0x47, 0xb5, 0xba, 0xac, 0x31, 0x92, 0xc4, 0xff, 0x59, 0xc2, 0x2d, 0x18,
+  0x20, 0x9d, 0xab, 0x4c, 0xd5, 0x37, 0x6f, 0x88, 0x0f, 0xc5, 0x8a, 0xf0,
+  0xb7, 0x65, 0xca, 0x24, 0x2a, 0x11, 0x45, 0x47, 0xc0, 0x9a, 0x65, 0xa8,
+  0x5c, 0x29, 0xb2, 0xc0, 0xe1, 0x1b, 0xea, 0xef, 0xce, 0x9d, 0x64, 0xd0,
+  0xc0, 0xdc, 0x03, 0x5c, 0xc4, 0xc0, 0xa0, 0xd1, 0x80, 0xeb, 0x35, 0x5b,
+  0x86, 0x00, 0x31, 0xfd, 0x21, 0x8f, 0x84, 0x5a, 0xed, 0xa3, 0x8d, 0x76,
+  0xdc, 0x18, 0x43, 0x26, 0xeb, 0x0b, 0x96, 0x7e, 0x00, 0xb3, 0xc6, 0xc3,
+  0x81, 0xdc, 0x21, 0x23, 0x30, 0x84, 0x0a, 0x8e, 0x38, 0x68, 0xc1, 0xcb,
+  0x65, 0x0e, 0x5b, 0x89, 0x64, 0xe6, 0x62, 0xa9, 0xc5, 0xd3, 0xe8, 0xe5,
+  0x07, 0x62, 0x46, 0x15, 0xbb, 0x5d, 0xcd, 0x24, 0xc3, 0xb3, 0xc3, 0x6f,
+  0x86, 0x4f, 0x3f, 0x18, 0x2c, 0xba, 0xbe, 0x84, 0xdd, 0xa3, 0xe1, 0xa2,
+  0x8f, 0x60, 0x46, 0xb7, 0x24, 0x69, 0x31, 0x7a, 0x7e, 0x9e, 0x4e, 0x12,
+  0x81, 0x8c, 0x65, 0x78, 0xbf, 0x34, 0x5b, 0x3a, 0x54, 0x8a, 0xc8, 0x47,
+  0x4d, 0xf6, 0xc4, 0x35, 0xc9, 0x50, 0xe2, 0xf5, 0xa0, 0x68, 0x62, 0x3f,
+  0xb4, 0x27, 0x02, 0x52, 0x93, 0x3c, 0x8c, 0xa7, 0xcb, 0x22, 0xbd, 0xfb,
+  0x4d, 0xab, 0x95, 0xca, 0xaa, 0xc7, 0xff, 0xd4, 0xb2, 0xc7, 0x1f, 0xb7,
+  0xee, 0x0d, 0x26, 0xf2, 0x0b, 0xd7, 0xbd, 0xad, 0x52, 0xed, 0xff, 0x19,
+  0xeb, 0xfe, 0xac, 0xef, 0x10, 0x12, 0x5e, 0xfe, 0xd2, 0x50, 0x69, 0x6c,
+  0xc1, 0x33, 0x0d, 0x2d, 0xdd, 0x84, 0xf5, 0x2b, 0x09, 0xa3, 0x4d, 0x19,
+  0x8f, 0x7d, 0x7a, 0x97, 0xac, 0x01, 0x6a, 0x80, 0x09, 0x78, 0xeb, 0x83,
+  0x27, 0xc6, 0xed, 0x94, 0xf8, 0xa5, 0x65, 0xaf, 0xea, 0x6b, 0xf7, 0x4f,
+  0xec, 0x9c, 0x93, 0x08, 0xfc, 0xde, 0xb5, 0x6e, 0x5e, 0xb8, 0x77, 0x72,
+  0x69, 0xfe, 0xaf, 0xda, 0xb9, 0x9a, 0xb4, 0x5c, 0x9d, 0x05, 0x23, 0x3a,
+  0xb8, 0xb1, 0x03, 0xbf, 0x28, 0xa7, 0x7b, 0x91, 0x7f, 0xa9, 0xa0, 0x11,
+  0x68, 0x00, 0x51, 0x13, 0x9a, 0x47, 0xc9, 0xa1, 0x52, 0x86, 0xce, 0xaa,
+  0x9b, 0x58, 0x55, 0x94, 0xad, 0x06, 0xf1, 0xfc, 0x33, 0x67, 0xd6, 0x08,
+  0x86, 0x23, 0x03, 0x01, 0x95, 0x61, 0x64, 0x62, 0x35, 0xd1, 0xf8, 0x26,
+  0x6b, 0x71, 0xe3, 0x41, 0x6f, 0x47, 0x2e, 0xf3, 0xc9, 0x55, 0xf4, 0x71,
+  0x24, 0x53, 0x39, 0xdc, 0x2d, 0x38, 0x65, 0xeb, 0x22, 0xf2, 0xff, 0xb7,
+  0x3c, 0xd8, 0x6d, 0xe4, 0x61, 0x41, 0xf1, 0x1f, 0x4d, 0x1c, 0x2e, 0x94,
+  0xed, 0x5f, 0x22, 0x8f, 0xb6, 0x73, 0xb6, 0xa9, 0xf1, 0x79, 0xbc, 0x4c,
+  0xc6, 0xf3, 0xb7, 0x7c, 0x49, 0x28, 0x40, 0x87, 0xe1, 0x56, 0x3f, 0x39,
+  0xff, 0xf6, 0x39, 0x9c, 0x19, 0xc3, 0x66, 0xe6, 0xff, 0xe9, 0xd1, 0xc1,
+  0x79, 0x0b, 0x0b, 0xbb, 0xa6, 0x5b, 0x7e, 0x91, 0xf6, 0xd9, 0xfe, 0xc9,
+  0x82, 0xe9, 0x4b, 0xfd, 0x85, 0x89, 0xa8, 0x4d, 0xf4, 0x36, 0xfd, 0xc2,
+  0x9e, 0x07, 0xf7, 0xd3, 0xa4, 0x61, 0xcc, 0x52, 0xcd, 0xd7, 0x2c, 0x96,
+  0x8f, 0x67, 0x93, 0x6d, 0xf9, 0xb3, 0x7f, 0xf5, 0xb7, 0xc9, 0x7c, 0xf0,
+  0x08, 0xad, 0xc4, 0x95, 0xe0, 0x75, 0x85, 0xc9, 0x6f, 0xa9, 0x31, 0xec,
+  0x8a, 0xf7, 0xd4, 0x4d, 0xf3, 0xee, 0x54, 0x45, 0x9a, 0x8a, 0x03, 0x60,
+  0xa2, 0x75, 0xb3, 0xe4, 0x4f, 0x27, 0x88, 0x7e, 0x64, 0xf3, 0x70, 0x33,
+  0xe1, 0x01, 0xdf, 0x6f, 0xfb, 0x96, 0xfe, 0xb5, 0xde, 0xac, 0x3d, 0x0e,
+  0x3b, 0x6d, 0x6b, 0x4e, 0x46, 0x21, 0xb2, 0x72, 0xed, 0x49, 0xd1, 0xfa,
+  0xa5, 0x36, 0x17, 0x4a, 0xb8, 0xf9, 0x2b, 0x42, 0xbe, 0x6f, 0xc9, 0xb9,
+  0x14, 0x5c, 0xcd, 0x72, 0x6c, 0x99, 0x29, 0xe9, 0x7c, 0xbc, 0xa0, 0x53,
+  0xd0, 0x96, 0x68, 0xfd, 0x38, 0x88, 0x4e, 0x75, 0x36, 0xf3, 0xa4, 0x1e,
+  0x6f, 0x79, 0x50, 0x54, 0xd0, 0x02, 0xe4, 0xb9, 0xc8, 0x32, 0xae, 0xb0,
+  0xad, 0x08, 0x81, 0xd2, 0xfa, 0x1e, 0x88, 0x54, 0xc1, 0x4d, 0x24, 0x8f,
+  0x34, 0x92, 0xc8, 0x4b, 0x07, 0xb3, 0x14, 0xe5, 0x57, 0xe3, 0xdd, 0x17,
+  0xcf, 0x77, 0x59, 0xea, 0x5d, 0x15, 0x0e, 0xc6, 0x19, 0xcd, 0x3c, 0x1d,
+  0x3c, 0xd9, 0x7e, 0x3a, 0x78, 0x1a, 0x79, 0xfc, 0xd9, 0x51, 0xd2, 0x56,
+  0x5b, 0x9d, 0xbb, 0x65, 0x5e, 0x36, 0xd2, 0x23, 0xf7, 0xf6, 0xf8, 0xd0,
+  0x4a, 0xe3, 0x71, 0x9e, 0x50, 0x0d, 0x7b, 0x4b, 0x4b, 0xb7, 0xf1, 0xe2,
+  0x0d, 0x84, 0xd4, 0xd7, 0x00, 0x25, 0xb6, 0x2c, 0x4b, 0x64, 0xe4, 0x2b,
+  0x61, 0x2b, 0x73, 0x9d, 0x33, 0xad, 0x2b, 0xb1, 0xac, 0x1b, 0xad, 0xf1,
+  0xd2, 0x12, 0x89, 0x57, 0x5f, 0x9b, 0x60, 0xe5, 0x06, 0x1f, 0xd8, 0x99,
+  0x72, 0x42, 0xbc, 0xb5, 0xdd, 0x69, 0x7c, 0xe1, 0x2a, 0x3a, 0x10, 0xc3,
+  0x40, 0x8d, 0xdd, 0x42, 0x51, 0x26, 0xf8, 0x15, 0x8b, 0x17, 0xab, 0x44,
+  0x12, 0x99, 0xad, 0xfb, 0x71, 0x60, 0x74, 0x39, 0xeb, 0x02, 0x59, 0x04,
+  0x10, 0xe1, 0x6e, 0xbf, 0x6b, 0x57, 0x85, 0x19, 0xcb, 0x83, 0x4a, 0x79,
+  0x06, 0x6b, 0xb1, 0xfe, 0xd0, 0x2b, 0xf2, 0x38, 0xa2, 0x5a, 0xc4, 0xae,
+  0xc3, 0x4e, 0x12, 0x87, 0xf5, 0x42, 0x1c, 0xe5, 0x86, 0x99, 0x9e, 0x5a,
+  0x71, 0x26, 0xc9, 0xb8, 0xa9, 0x63, 0xb9, 0x6c, 0x66, 0x7a, 0x7e, 0x1c,
+  0x2f, 0xe2, 0x51, 0x3a, 0x4d, 0xcb, 0xb4, 0x25, 0x3c, 0xef, 0x57, 0x94,
+  0xfd, 0xca, 0xf1, 0xa2, 0x3f, 0xcf, 0xda, 0x6c, 0x84, 0x97, 0x8c, 0xed,
+  0x1e, 0x20, 0xfa, 0xbd, 0x7f, 0x7b, 0x76, 0x74, 0x7c, 0x7a, 0xf0, 0x83,
+  0x79, 0xbd, 0x5d, 0xe8, 0x31, 0x0a, 0xe4, 0x25, 0x71, 0xb1, 0x7a, 0x5f,
+  0x24, 0x25, 0x7d, 0xb9, 0xf9, 0x64, 0x8b, 0xfd, 0x51, 0xf5, 0x6b, 0x96,
+  0xd5, 0xaf, 0x10, 0xee, 0x59, 0x0d, 0xb6, 0x7e, 0x1e, 0x35, 0x32, 0xd9,
+  0xad, 0x38, 0x1a, 0x4a, 0xba, 0x5f, 0xcb, 0x64, 0x3a, 0x4f, 0x4a, 0x45,
+  0xf7, 0x8d, 0x5e, 0x9e, 0x9d, 0x5f, 0xbe, 0xba, 0x8b, 0xa7, 0x75, 0x92,
+  0x61, 0xb4, 0x04, 0x6d, 0xd1, 0xaa, 0xad, 0x44, 0xf2, 0x66, 0x10, 0xc2,
+  0x38, 0x74, 0xb1, 0x82, 0xf6, 0x24, 0xdd, 0xce, 0x8d, 0x18, 0xc1, 0xcb,
+  0xcb, 0x1f, 0xce, 0x8f, 0x5f, 0xbd, 0x64, 0x95, 0xf9, 0x73, 0x56, 0xf4,
+  0xd5, 0x54, 0x02, 0x0d, 0x9a, 0xd7, 0x79, 0xb5, 0x68, 0x5e, 0xdf, 0xdf,
+  0x1f, 0x9d, 0x0c, 0xcf, 0x4f, 0xcf, 0x0e, 0x5f, 0xbd, 0xfc, 0x9e, 0x0d,
+  0xac, 0x8c, 0x1a, 0x1e, 0xbc, 0xeb, 0x3e, 0x73, 0x71, 0x50, 0x4d, 0xb8,
+  0xc3, 0xe3, 0xef, 0xde, 0x1f, 0xbf, 0xfd, 0xf6, 0xd5, 0xcb, 0xbb, 0x38,
+  0xef, 0xf1, 0xfc, 0xe4, 0x6d, 0x4e, 0x68, 0x6e, 0x81, 0x97, 0xae, 0xec,
+  0x25, 0xe7, 0x1e, 0x8c, 0xa6, 0xb7, 0x52, 0x68, 0x00, 0xe0, 0xfe, 0x8d,
+  0x00, 0x84, 0x4b, 0xc4, 0x69, 0xb3, 0xd1, 0x82, 0x7f, 0x8b, 0xbe, 0x3c,
+  0xfd, 0x86, 0xdd, 0x5b, 0xee, 0x6e, 0xb6, 0x32, 0xeb, 0x9f, 0x3f, 0xdb,
+  0xdd, 0xdb, 0x0a, 0x70, 0xc3, 0xd9, 0x49, 0x4e, 0x23, 0xbe, 0x6d, 0x18,
+  0x4d, 0x7e, 0xb6, 0x42, 0x4d, 0x1e, 0x17, 0x5c, 0xcb, 0xa5, 0xf2, 0x0d,
+  0x80, 0x73, 0xc0, 0x66, 0x2b, 0xae, 0x16, 0x85, 0x10, 0x25, 0x8e, 0xcc,
+  0xa0, 0x2f, 0x19, 0x01, 0x3c, 0x6f, 0x04, 0x61, 0xc4, 0x32, 0x28, 0x8b,
+  0xff, 0xf4, 0x18, 0x89, 0x11, 0x0d, 0x47, 0xfd, 0xde, 0xed, 0x84, 0xfc,
+  0x6b, 0x1f, 0x8c, 0x96, 0x1b, 0xa5, 0x56, 0xd6, 0xe1, 0x92, 0x21, 0x68,
+  0x17, 0xec, 0xba, 0x7c, 0x24, 0xe6, 0x05, 0xeb, 0xe7, 0xd1, 0x1c, 0xab,
+  0xcc, 0x2a, 0xf0, 0x3f, 0x29, 0x99, 0x9a, 0x43, 0x8b, 0x91, 0x4a, 0xd6,
+  0xb0, 0x2f, 0x57, 0x36, 0xd7, 0xe3, 0xdb, 0x58, 0x09, 0x5c, 0xd7, 0x30,
+  0xc0, 0x64, 0x3c, 0x56, 0xba, 0xa6, 0x79, 0x3c, 0xea, 0x00, 0x93, 0xac,
+  0x3b, 0x38, 0xf3, 0x5d, 0x65, 0x01, 0x87, 0x75, 0x02, 0x5f, 0x8a, 0x14,
+  0x3e, 0xde, 0x36, 0x86, 0xc0, 0xeb, 0xb7, 0xb1, 0x26, 0x10, 0x2e, 0x12,
+  0x37, 0x0c, 0xe4, 0x5c, 0x0e, 0x41, 0xc2, 0xfc, 0x30, 0x1e, 0xcb, 0x42,
+  0xac, 0xce, 0x42, 0x42, 0xdd, 0xea, 0x36, 0x9e, 0x80, 0xa0, 0x6e, 0x38,
+  0x3e, 0xa9, 0x74, 0x65, 0x47, 0xb1, 0x77, 0xd5, 0x08, 0x34, 0x23, 0xd2,
+  0xc0, 0x23, 0x58, 0x17, 0x24, 0x3c, 0x4c, 0x8f, 0x26, 0xa5, 0x88, 0xd1,
+  0x99, 0xb5, 0x0c, 0x0e, 0x67, 0x9e, 0xae, 0x82, 0xb0, 0x05, 0xd9, 0xd8,
+  0xc7, 0x6a, 0x29, 0xb0, 0xc9, 0x68, 0xe0, 0xe8, 0xcd, 0x08, 0x0d, 0x52,
+  0x02, 0xfb, 0xaf, 0x36, 0x87, 0x5b, 0x4a, 0xc6, 0x42, 0x6e, 0xe7, 0xef,
+  0x7c, 0x92, 0x4f, 0x5b, 0x89, 0x8d, 0x75, 0x04, 0xe8, 0xd4, 0x6d, 0xbf,
+  0x50, 0x9d, 0x7e, 0xa7, 0x8e, 0xd3, 0x64, 0xc7, 0x0d, 0x25, 0xdd, 0xc3,
+  0x24, 0xa2, 0xb8, 0x15, 0x6c, 0x48, 0xe2, 0x6d, 0xa3, 0x83, 0x29, 0xbc,
+  0xcb, 0xc4, 0x1b, 0x57, 0xbd, 0x7a, 0x1f, 0x83, 0x4e, 0xc4, 0x9d, 0x38,
+  0xab, 0xa8, 0xd8, 0x4f, 0xb7, 0x1a, 0xc0, 0x69, 0x2b, 0x2d, 0x6f, 0xe7,
+  0x6d, 0x01, 0x61, 0x3e, 0x2c, 0x0f, 0xb5, 0x36, 0x34, 0x04, 0x58, 0x80,
+  0x95, 0x34, 0xf3, 0xc1, 0x21, 0x37, 0x20, 0x15, 0x17, 0xc8, 0xf4, 0x48,
+  0x75, 0x81, 0x2b, 0xcb, 0x85, 0x30, 0x09, 0x4e, 0x94, 0x21, 0x9e, 0x4a,
+  0x9b, 0x10, 0xc2, 0x00, 0x3a, 0x56, 0xc7, 0x2a, 0xc0, 0x26, 0xb6, 0x2c,
+  0xaa, 0xd5, 0xaa, 0xb2, 0x9c, 0x03, 0x66, 0x03, 0xfd, 0x4b, 0x0f, 0x34,
+  0xa4, 0x95, 0xe5, 0xeb, 0xc9, 0x3a, 0x8a, 0x5e, 0xd9, 0xbf, 0x6c, 0x14,
+  0x2b, 0xe2, 0x17, 0x16, 0x71, 0x9a, 0x07, 0xa1, 0x34, 0x08, 0x5f, 0xe3,
+  0xb9, 0x0b, 0x25, 0x69, 0xe0, 0x23, 0xa4, 0xde, 0x81, 0x90, 0x36, 0xfc,
+  0x24, 0x6b, 0x71, 0xb3, 0x3b, 0xd7, 0xd3, 0x6c, 0x34, 0xa2, 0x49, 0x75,
+  0x4c, 0x22, 0xa5, 0x11, 0xc6, 0xf9, 0x35, 0x94, 0xb4, 0x9e, 0x81, 0x7a,
+  0xf8, 0xc3, 0x0a, 0x40, 0x38, 0xf4, 0xb5, 0x2e, 0xd2, 0x5f, 0x8b, 0xa5,
+  0x64, 0x1e, 0xe5, 0x13, 0x68, 0x6d, 0x61, 0xe1, 0x2d, 0x71, 0x7f, 0xe3,
+  0xf3, 0xc8, 0xfa, 0xaf, 0x73, 0xfc, 0x72, 0xc5, 0xb1, 0x92, 0xee, 0xfa,
+  0x54, 0xe6, 0x03, 0x96, 0xa3, 0x48, 0x5d, 0x69, 0x4b, 0xb0, 0x3d, 0x4f,
+  0x98, 0x26, 0xd0, 0xf9, 0x3b, 0x8f, 0x62, 0xb7, 0xc7, 0xff, 0xee, 0xfd,
+  0xa3, 0x63, 0x70, 0x6c, 0x0c, 0x88, 0x29, 0x83, 0x2f, 0x19, 0x02, 0xab,
+  0x30, 0x0c, 0xb8, 0x16, 0xc8, 0x37, 0xae, 0x53, 0xb2, 0xb6, 0xf5, 0x74,
+  0x76, 0xfd, 0xe3, 0x6e, 0x7f, 0x77, 0x67, 0x67, 0xe7, 0xa7, 0xc1, 0x82,
+  0x97, 0xee, 0x0a, 0xcd, 0xd3, 0xbf, 0x83, 0x45, 0x3a, 0xe6, 0x90, 0x17,
+  0xda, 0xcc, 0x34, 0x46, 0xd1, 0x68, 0xe9, 0x6f, 0x3b, 0xbc, 0x3e, 0x73,
+  0x4e, 0xde, 0x69, 0xe5, 0xe3, 0x0e, 0x74, 0x93, 0x21, 0xc8, 0x97, 0x2c,
+  0xc6, 0xc9, 0xc3, 0xd1, 0x64, 0x29, 0xd1, 0x08, 0x12, 0xad, 0xa1, 0x6e,
+  0x62, 0xde, 0x6c, 0x22, 0x55, 0xad, 0x77, 0x42, 0x37, 0x5e, 0xaf, 0xb5,
+  0x3c, 0x23, 0xbe, 0x4d, 0x0a, 0x2e, 0x21, 0x8a, 0x14, 0xdd, 0x00, 0xa2,
+  0xbe, 0xe7, 0x12, 0x03, 0x70, 0x60, 0x95, 0xee, 0xe5, 0xdc, 0x36, 0xd1,
+  0x14, 0xf9, 0x98, 0x91, 0xf4, 0xc9, 0x5f, 0x1b, 0x97, 0x73, 0xa0, 0xd8,
+  0x86, 0xa1, 0x2d, 0x05, 0x9b, 0x1a, 0xf0, 0x6c, 0x6d, 0x0a, 0xba, 0x37,
+  0x75, 0x84, 0x66, 0x0e, 0x04, 0xf3, 0xf7, 0xef, 0x04, 0xb7, 0x71, 0xc4,
+  0x45, 0x96, 0x81, 0x7d, 0x85, 0x75, 0x68, 0x28, 0x3f, 0xc5, 0x38, 0x4d,
+  0x7f, 0x53, 0xa9, 0x15, 0xbd, 0xa2, 0x9b, 0xc7, 0x37, 0x2c, 0x96, 0xed,
+  0x92, 0xdd, 0x0a, 0x37, 0xcb, 0xef, 0x96, 0x98, 0x3b, 0xdc, 0x7e, 0xfd,
+  0x6f, 0xb4, 0x61, 0x5c, 0xc1, 0x29, 0x41, 0xbd, 0xd3, 0xa0, 0xa2, 0x05,
+  0xa6, 0x2a, 0x8a, 0xe2, 0x34, 0x89, 0x39, 0xa8, 0xd8, 0xcc, 0x34, 0x37,
+  0xc9, 0x83, 0x08, 0x0c, 0x4d, 0x98, 0x00, 0xf1, 0xe9, 0xb2, 0xd7, 0x44,
+  0xf5, 0xbe, 0x83, 0xe1, 0xe1, 0xc9, 0x49, 0x45, 0x21, 0xe6, 0xc5, 0x93,
+  0x62, 0xbf, 0x70, 0xb3, 0x14, 0x33, 0x5a, 0x45, 0x76, 0xf2, 0x60, 0xb8,
+  0x0d, 0x39, 0x85, 0x43, 0xd2, 0x90, 0x3e, 0xca, 0x20, 0xab, 0x71, 0x91,
+  0x5a, 0x0c, 0x60, 0x2c, 0xb9, 0x5f, 0xcb, 0x39, 0x4b, 0x14, 0x1c, 0x18,
+  0x73, 0xb3, 0xa4, 0x23, 0x59, 0x7c, 0xa4, 0xe9, 0xed, 0x63, 0xe9, 0xf1,
+  0xb7, 0x27, 0xbd, 0x96, 0x60, 0xa7, 0xf3, 0x5c, 0x63, 0xca, 0x24, 0xf4,
+  0x25, 0x92, 0x48, 0x25, 0x86, 0x66, 0xe5, 0x5b, 0x43, 0x28, 0x30, 0x43,
+  0xc5, 0x04, 0x8c, 0x16, 0x57, 0x8a, 0x15, 0x39, 0x6d, 0x41, 0xda, 0x51,
+  0x3d, 0xa1, 0xa8, 0x83, 0x03, 0x3f, 0xad, 0x48, 0xa1, 0x56, 0x08, 0x21,
+  0x7a, 0xc9, 0xff, 0xee, 0x5b, 0x21, 0x82, 0xc7, 0xea, 0x8b, 0xe1, 0xf1,
+  0x46, 0x8d, 0xa0, 0x0a, 0x82, 0xa1, 0x5c, 0xb7, 0x8f, 0x23, 0xd6, 0x0e,
+  0xa2, 0x33, 0xb7, 0x2f, 0xbe, 0xf2, 0x11, 0xda, 0xac, 0x97, 0x61, 0x69,
+  0xdb, 0x0e, 0xbe, 0xb3, 0x90, 0x7e, 0x78, 0x9d, 0x2a, 0xe1, 0xfb, 0x71,
+  0x6d, 0x9a, 0x71, 0x91, 0xed, 0x91, 0xb9, 0x68, 0xcf, 0x74, 0x13, 0x4f,
+  0xb3, 0xf9, 0x56, 0xeb, 0x52, 0x61, 0xab, 0x48, 0xd0, 0xe4, 0x18, 0x32,
+  0xb1, 0xde, 0xb9, 0xca, 0x47, 0x6b, 0x71, 0x73, 0x21, 0xd7, 0x32, 0x6e,
+  0xf9, 0xf9, 0x49, 0x5f, 0xc3, 0x20, 0x15, 0x5e, 0x58, 0xb2, 0xdd, 0x78,
+  0x1e, 0x93, 0xac, 0x8e, 0x6b, 0xd3, 0xb6, 0x10, 0x3e, 0x9f, 0x5a, 0xa0,
+  0x31, 0x2b, 0xd0, 0x57, 0xcb, 0x45, 0x6d, 0x6e, 0xd5, 0x82, 0x11, 0x75,
+  0xa1, 0x12, 0x89, 0xcf, 0x82, 0x71, 0x11, 0x2a, 0x7b, 0xa3, 0x95, 0x04,
+  0x43, 0xba, 0x34, 0x49, 0xb5, 0x28, 0xc8, 0x35, 0x8e, 0x95, 0x69, 0x83,
+  0x35, 0x0a, 0x48, 0x7e, 0x9f, 0x78, 0xce, 0x32, 0xda, 0xef, 0xfc, 0x86,
+  0x27, 0xe3, 0x9d, 0x59, 0xc0, 0x7f, 0x7d, 0x82, 0x54, 0x3f, 0xc1, 0x07,
+  0x08, 0xf2, 0xff, 0xee, 0xb5, 0xdf, 0xeb, 0x77, 0xbf, 0xed, 0x5e, 0xf7,
+  0x79, 0xde, 0x2f, 0x49, 0xe8, 0x5b, 0xb7, 0xaf, 0x31, 0x84, 0x48, 0x0e,
+  0xe8, 0x64, 0x1c, 0xe0, 0x06, 0x26, 0x1d, 0xd4, 0x2e, 0xbe, 0x72, 0x6e,
+  0x68, 0x89, 0x5c, 0x1c, 0x54, 0x13, 0x1d, 0xc3, 0x60, 0x31, 0x4c, 0x52,
+  0xa7, 0x46, 0x37, 0x8b, 0x2d, 0x49, 0x48, 0x08, 0x52, 0xd7, 0x1f, 0x97,
+  0x67, 0x9c, 0x9a, 0x22, 0x0e, 0xaf, 0x4a, 0x82, 0xb1, 0xa4, 0xbf, 0x72,
+  0x58, 0x88, 0x01, 0x48, 0x40, 0x44, 0x6f, 0x5b, 0x5c, 0x9e, 0x10, 0x07,
+  0xb8, 0x8b, 0x51, 0xb0, 0xe7, 0x8b, 0xca, 0x07, 0x08, 0xd1, 0x0a, 0x46,
+  0xf1, 0x01, 0xd0, 0x5b, 0x35, 0x39, 0x05, 0xeb, 0x19, 0x5c, 0x63, 0xad,
+  0xb5, 0xe3, 0xd4, 0x70, 0xc9, 0x6b, 0x09, 0x19, 0x05, 0x25, 0x8d, 0xec,
+  0x2a, 0xd9, 0x2e, 0xe3, 0xe9, 0x6d, 0xcc, 0x12, 0xc9, 0x20, 0x7a, 0x23,
+  0xeb, 0xea, 0x4b, 0xfb, 0x35, 0xe2, 0x3f, 0x46, 0xcb, 0xeb, 0x6b, 0x94,
+  0xa0, 0x38, 0x90, 0x1b, 0xa8, 0x30, 0x80, 0x08, 0x18, 0x26, 0xbb, 0x9f,
+  0x77, 0x35, 0x90, 0xb3, 0x23, 0x65, 0x92, 0x21, 0x0e, 0x75, 0x44, 0x1c,
+  0x69, 0x66, 0x79, 0x31, 0xfd, 0xf7, 0xa2, 0xee, 0xcb, 0xf6, 0x97, 0x48,
+  0x41, 0x4f, 0xd2, 0x3b, 0xc5, 0x7a, 0x77, 0xea, 0x3f, 0xad, 0xe1, 0x4d,
+  0x4a, 0x17, 0xda, 0xbc, 0x19, 0xbc, 0xa5, 0xd5, 0x63, 0xe0, 0x21, 0xe8,
+  0x69, 0x41, 0xe9, 0xb6, 0x41, 0xfe, 0xd1, 0xfa, 0x8b, 0x27, 0x93, 0x54,
+  0x8b, 0x70, 0xb1, 0x30, 0xd6, 0x48, 0xae, 0xd7, 0xf4, 0x27, 0xed, 0xbf,
+  0xbd, 0xb2, 0x88, 0x5e, 0xc1, 0xa9, 0x71, 0x0b, 0x91, 0x85, 0x40, 0x79,
+  0x8a, 0xb7, 0x64, 0x05, 0xa3, 0xad, 0x1e, 0x9f, 0x29, 0xa2, 0x75, 0x29,
+  0xb1, 0x52, 0x81, 0xda, 0x89, 0x3f, 0x10, 0xea, 0x84, 0x12, 0xd5, 0x22,
+  0xcc, 0x35, 0xd0, 0x14, 0x35, 0x7b, 0xdd, 0xd5, 0x68, 0x26, 0x0f, 0x7f,
+  0x6a, 0x8a, 0x52, 0x8a, 0x10, 0x4b, 0x6d, 0x3b, 0xdc, 0x9a, 0xfc, 0xa0,
+  0x56, 0x26, 0x32, 0xab, 0x6a, 0xaf, 0x89, 0x22, 0x81, 0x44, 0x29, 0x07,
+  0x23, 0xe2, 0xe4, 0x90, 0xaa, 0x10, 0x6d, 0x36, 0xf3, 0x7f, 0x56, 0x0e,
+  0xab, 0x34, 0xf6, 0x88, 0x20, 0x06, 0x70, 0xb7, 0xa1, 0x0b, 0x32, 0x12,
+  0xd4, 0x4c, 0x0b, 0xfb, 0x43, 0x5c, 0x51, 0x70, 0x2a, 0x02, 0x90, 0xf8,
+  0x66, 0x39, 0x1a, 0x08, 0x47, 0x95, 0xb2, 0x5e, 0x62, 0x50, 0x16, 0xdd,
+  0x5a, 0xeb, 0x3f, 0x5b, 0x84, 0xb9, 0x21, 0x76, 0xa6, 0x30, 0x68, 0x15,
+  0x83, 0x16, 0x5f, 0xa0, 0x05, 0xd9, 0x89, 0x58, 0xa6, 0xbb, 0xa8, 0x49,
+  0x3d, 0xac, 0x42, 0x58, 0x13, 0x1c, 0x7c, 0x0f, 0xaa, 0x77, 0xd1, 0xeb,
+  0x4d, 0x69, 0x5a, 0x2a, 0x34, 0xe7, 0x13, 0x08, 0xd0, 0x2b, 0x05, 0xc9,
+  0x4f, 0x01, 0x4d, 0x3e, 0xbf, 0xb5, 0xa0, 0x25, 0xc9, 0x37, 0x48, 0xc6,
+  0xcb, 0xb2, 0x6a, 0xc7, 0x0d, 0xc6, 0xa4, 0x31, 0xc9, 0x18, 0xd2, 0x26,
+  0xce, 0x80, 0x82, 0x2f, 0x76, 0xce, 0x0d, 0xbb, 0x6c, 0xbf, 0xb3, 0x65,
+  0x72, 0x3b, 0xd4, 0x1a, 0x07, 0x6a, 0xd6, 0x26, 0x92, 0xdb, 0x90, 0x5d,
+  0xb5, 0xf8, 0xcc, 0xa1, 0xf4, 0xb7, 0x75, 0x4f, 0xe4, 0x97, 0xb7, 0xf6,
+  0xfe, 0x5a, 0xf2, 0x47, 0x82, 0xce, 0x1d, 0xc6, 0xb2, 0xa6, 0x96, 0x14,
+  0x6b, 0x80, 0x29, 0x82, 0x9e, 0x33, 0x46, 0xb9, 0x23, 0x36, 0xe4, 0xe2,
+  0xf4, 0xed, 0x55, 0x5b, 0xfc, 0xfd, 0x26, 0xfa, 0xd1, 0xdd, 0xf3, 0xc0,
+  0x7c, 0xc3, 0x0c, 0x18, 0x1f, 0xe9, 0x72, 0xa6, 0x4d, 0x35, 0xe2, 0x36,
+  0x1f, 0x3d, 0xa5, 0x1f, 0xdf, 0xf0, 0x0f, 0x2b, 0x6e, 0xc9, 0x58, 0x59,
+  0x66, 0xbe, 0x68, 0x02, 0x1f, 0x70, 0xe5, 0x02, 0x39, 0xf7, 0x43, 0x50,
+  0xd1, 0x6b, 0xfc, 0x92, 0x27, 0x8f, 0xbc, 0x43, 0x73, 0xfb, 0x99, 0x1d,
+  0x88, 0xcb, 0x32, 0x63, 0x4a, 0x1c, 0x23, 0x51, 0x63, 0xb6, 0xc8, 0xa5,
+  0x06, 0x8c, 0x64, 0x6b, 0xc8, 0x9f, 0xea, 0xa1, 0x2a, 0x70, 0x94, 0x94,
+  0xb9, 0xa4, 0x6b, 0xa0, 0x9c, 0xd6, 0xf7, 0x27, 0x85, 0x3f, 0x5a, 0x21,
+  0x17, 0x1f, 0x9d, 0xdb, 0x63, 0x35, 0x02, 0x1b, 0x98, 0x91, 0xb5, 0x86,
+  0x79, 0x29, 0x68, 0x31, 0x9f, 0x7d, 0xdc, 0x2a, 0x1e, 0xf1, 0x2d, 0xe3,
+  0xca, 0xe4, 0x1a, 0x16, 0x99, 0xd6, 0xa6, 0x13, 0xc9, 0xcb, 0xd7, 0xa6,
+  0xc3, 0xc3, 0x2a, 0x21, 0x68, 0x1d, 0xa8, 0xf6, 0xc1, 0xe1, 0xd2, 0x43,
+  0x3c, 0x1f, 0x98, 0xcb, 0xad, 0x99, 0x5a, 0x66, 0x74, 0xd1, 0xe6, 0x2b,
+  0x7f, 0xb5, 0x45, 0x74, 0x4d, 0x0e, 0x22, 0xd4, 0x77, 0x41, 0xe7, 0x6b,
+  0x12, 0x78, 0x27, 0x24, 0xf6, 0x4c, 0xd9, 0xc2, 0x2b, 0xa9, 0x47, 0xbf,
+  0x6b, 0x54, 0xdb, 0x2c, 0x56, 0xf3, 0xf1, 0xcd, 0xd1, 0xdb, 0xe1, 0xba,
+  0x24, 0xde, 0xb4, 0x70, 0xd1, 0xca, 0x1c, 0x5e, 0xc2, 0x4f, 0x93, 0x10,
+  0xc7, 0x6c, 0x11, 0xd2, 0x9f, 0x46, 0xb3, 0xb4, 0x80, 0x6b, 0x9c, 0xbf,
+  0x3d, 0xfe, 0xea, 0xcc, 0x7e, 0xac, 0x5d, 0xf2, 0x47, 0x57, 0xf8, 0x94,
+  0x13, 0x74, 0x1f, 0xcb, 0x75, 0xb6, 0xc1, 0xb9, 0x42, 0x1a, 0xde, 0x0b,
+  0x41, 0x04, 0x89, 0x02, 0xc7, 0x42, 0x8b, 0x3d, 0x25, 0x49, 0xa9, 0x79,
+  0xbc, 0x2e, 0x8b, 0x9b, 0x8e, 0xdb, 0xde, 0x57, 0x5f, 0x36, 0x6f, 0xab,
+  0xa3, 0xb7, 0x6b, 0xba, 0xe3, 0x6f, 0xfa, 0x96, 0xc0, 0xa4, 0x57, 0xb4,
+  0x16, 0xf0, 0x41, 0x36, 0x79, 0xcb, 0xc9, 0xe3, 0x02, 0x85, 0xf2, 0xa3,
+  0x32, 0x75, 0xbb, 0x12, 0xf9, 0xb8, 0x0b, 0xcd, 0x0b, 0x3e, 0x03, 0xa0,
+  0x49, 0xa6, 0x31, 0x5d, 0x93, 0x51, 0x4b, 0x29, 0xc0, 0xc0, 0xea, 0x5f,
+  0xad, 0x36, 0x17, 0xac, 0xb2, 0x02, 0x2b, 0x5a, 0xd5, 0x11, 0xe4, 0xd2,
+  0x43, 0x7a, 0x6f, 0xb2, 0x74, 0xe7, 0xc4, 0xac, 0xeb, 0x95, 0xfd, 0x7b,
+  0xba, 0xa4, 0xe0, 0x98, 0x66, 0x19, 0x30, 0x7a, 0x29, 0xd7, 0xd1, 0xe7,
+  0x8d, 0x03, 0x21, 0x88, 0x2f, 0x66, 0x15, 0x36, 0x27, 0x20, 0xee, 0x75,
+  0x36, 0xf0, 0x38, 0xcc, 0x20, 0x14, 0xb5, 0x4d, 0xca, 0x44, 0x4c, 0xc6,
+  0x8a, 0x20, 0xd4, 0x08, 0x16, 0x25, 0xd9, 0xce, 0x3b, 0x27, 0x2c, 0xcc,
+  0x40, 0xba, 0xd6, 0x3a, 0x3c, 0x5a, 0x98, 0xc3, 0xea, 0x6e, 0x59, 0x66,
+  0xb5, 0x38, 0xbb, 0x1b, 0xc1, 0x05, 0x0f, 0x6c, 0xae, 0x79, 0xb0, 0x9b,
+  0xa9, 0x2a, 0x22, 0xbb, 0xc2, 0x1a, 0x92, 0x5b, 0xad, 0x0d, 0x07, 0x49,
+  0xc2, 0xad, 0x31, 0x95, 0x88, 0x82, 0xea, 0xc8, 0xc3, 0x1d, 0x58, 0xc7,
+  0x38, 0xc7, 0x4a, 0x0c, 0x40, 0x92, 0xaf, 0x8c, 0xc4, 0xe6, 0xf1, 0x92,
+  0x0d, 0x57, 0x70, 0x3c, 0xa0, 0x02, 0x4f, 0x6b, 0x73, 0x2b, 0xbe, 0xb7,
+  0x3b, 0x5f, 0x98, 0xb9, 0xac, 0x63, 0xd6, 0x74, 0x0f, 0x40, 0x06, 0xaf,
+  0x01, 0x1a, 0x57, 0x49, 0x59, 0x97, 0xa2, 0xc5, 0xc7, 0x28, 0x4e, 0x03,
+  0x94, 0x0c, 0x40, 0xed, 0x89, 0xce, 0x17, 0xfd, 0x4e, 0xeb, 0xed, 0x17,
+  0x54, 0x14, 0x61, 0x81, 0x07, 0x12, 0xb0, 0x5a, 0xbb, 0xcd, 0xbc, 0x27,
+  0xbd, 0x98, 0x8e, 0x54, 0x2c, 0x47, 0x24, 0xa4, 0x95, 0xcb, 0xb2, 0x11,
+  0x96, 0xa8, 0x19, 0xfa, 0xf0, 0xc8, 0x42, 0x47, 0xe0, 0x05, 0xf7, 0x5e,
+  0x53, 0x08, 0x7b, 0x6c, 0x0e, 0x2c, 0x11, 0x59, 0xa8, 0x36, 0xc6, 0x11,
+  0xd0, 0x10, 0x18, 0xe6, 0xa7, 0x2e, 0xae, 0x1c, 0xf0, 0x45, 0xef, 0x47,
+  0x87, 0xdb, 0xc9, 0xa3, 0x2d, 0x16, 0xd1, 0xef, 0xff, 0x6e, 0x5f, 0x02,
+  0x92, 0xe2, 0x1f, 0xb6, 0x5e, 0x56, 0xeb, 0xa3, 0x5d, 0xea, 0xfe, 0xbd,
+  0xb7, 0xc9, 0xc8, 0xca, 0x20, 0x4b, 0x90, 0x9b, 0xfb, 0xfd, 0xc0, 0xdd,
+  0xb9, 0xd6, 0x44, 0x34, 0x4f, 0xee, 0x45, 0x52, 0x6a, 0xe8, 0x04, 0x22,
+  0x69, 0xfe, 0x85, 0xcb, 0xfe, 0xd1, 0x2b, 0x24, 0x31, 0xb2, 0xe3, 0x3f,
+  0x2c, 0x15, 0xff, 0x97, 0x5c, 0x45, 0x7b, 0x12, 0x7c, 0x68, 0xe0, 0x2c,
+  0x8f, 0xca, 0xe7, 0xe5, 0x23, 0x85, 0xe3, 0x7f, 0xdf, 0x17, 0xb8, 0x11,
+  0xa5, 0x6e, 0x9e, 0x2e, 0x8d, 0xd9, 0x3e, 0xb3, 0x4a, 0x73, 0xf3, 0x27,
+  0x7b, 0xfd, 0x40, 0x99, 0xee, 0x35, 0x0a, 0x37, 0xb1, 0xe7, 0x91, 0xe5,
+  0xa4, 0xa0, 0x18, 0x10, 0xd3, 0xf8, 0xef, 0xb5, 0xb2, 0x03, 0x9c, 0x59,
+  0x92, 0xd4, 0x35, 0x31, 0xad, 0x54, 0xd3, 0xa9, 0xd6, 0xc6, 0xf8, 0xb7,
+  0x12, 0x4f, 0xb0, 0x3b, 0x4e, 0xbe, 0xb1, 0x14, 0x69, 0x09, 0x11, 0x69,
+  0x8b, 0x37, 0x40, 0x20, 0x85, 0x55, 0x50, 0x93, 0x86, 0xa0, 0x46, 0xc3,
+  0x5b, 0xc9, 0x06, 0x63, 0x29, 0xaa, 0x03, 0xf5, 0xdc, 0x3b, 0xe7, 0xe1,
+  0xc2, 0x64, 0x7d, 0xa8, 0xbf, 0x36, 0xc5, 0xdb, 0x12, 0x26, 0x98, 0x71,
+  0x48, 0x9d, 0xa5, 0x2e, 0xbc, 0xb2, 0xd3, 0x49, 0x70, 0x7e, 0x04, 0x5c,
+  0x3f, 0x72, 0x91, 0x09, 0xfb, 0x8f, 0x37, 0xa7, 0x5a, 0x51, 0x63, 0xfa,
+  0xec, 0xd3, 0x79, 0x8f, 0x74, 0x3e, 0xb7, 0x1a, 0xc4, 0x4c, 0x92, 0x9c,
+  0xe1, 0xb2, 0x6a, 0xf9, 0x7e, 0x7e, 0x62, 0x8c, 0xc2, 0xae, 0xdb, 0xf8,
+  0x78, 0xaf, 0xb0, 0x4c, 0xe4, 0x0a, 0x98, 0x30, 0x71, 0xbe, 0x56, 0xe4,
+  0x25, 0x90, 0x5c, 0xc2, 0xd6, 0x01, 0x77, 0xd5, 0xb5, 0xc1, 0x9d, 0x46,
+  0x8d, 0x74, 0xa1, 0xcf, 0xb8, 0x3c, 0x01, 0x92, 0x21, 0xa6, 0x69, 0xec,
+  0x33, 0xb8, 0x65, 0x0a, 0x3c, 0xb8, 0x18, 0xd6, 0x57, 0x96, 0x95, 0x49,
+  0xd4, 0x7d, 0xbc, 0x39, 0x87, 0x65, 0xc9, 0x7a, 0xc9, 0xba, 0x95, 0x11,
+  0x70, 0xd2, 0xfa, 0xca, 0x54, 0x17, 0x44, 0x57, 0xc4, 0x6b, 0x9c, 0x2d,
+  0xfe, 0xf6, 0x68, 0x4d, 0x2a, 0x65, 0x14, 0x6d, 0x1a, 0x82, 0xa2, 0x58,
+  0xce, 0xb6, 0x14, 0xe0, 0xd8, 0xee, 0x41, 0x05, 0x0e, 0xfe, 0x50, 0x73,
+  0xc8, 0x83, 0x69, 0xa4, 0xa8, 0x3c, 0x6d, 0x44, 0x77, 0xb2, 0x0d, 0xe5,
+  0xbd, 0x24, 0xf9, 0x39, 0xcd, 0xc1, 0xa5, 0xfc, 0xf5, 0xf8, 0x45, 0xcd,
+  0x7e, 0xea, 0x79, 0x14, 0x62, 0x71, 0xa2, 0xe1, 0x0a, 0xfb, 0x00, 0xd5,
+  0x42, 0x16, 0xe2, 0xd9, 0x27, 0x8a, 0x82, 0x04, 0xe3, 0xba, 0xcb, 0x70,
+  0x92, 0x8b, 0xd4, 0x6e, 0xae, 0x59, 0x3a, 0xfd, 0x40, 0x73, 0xd3, 0x54,
+  0x95, 0x2a, 0x88, 0x67, 0xcb, 0xd6, 0x03, 0x8c, 0x09, 0x31, 0xe7, 0x64,
+  0x45, 0x7d, 0x1d, 0xf6, 0x56, 0x45, 0x51, 0x6a, 0x4c, 0x14, 0x71, 0xea,
+  0x25, 0xd7, 0x3a, 0x0f, 0x4b, 0x02, 0x43, 0x89, 0x7a, 0xbc, 0x39, 0xc9,
+  0x14, 0x45, 0x54, 0xad, 0x17, 0x22, 0x61, 0xf9, 0x60, 0x48, 0x3f, 0x13,
+  0x0e, 0xda, 0x87, 0x5c, 0x25, 0x2d, 0xcb, 0x5a, 0xd2, 0x70, 0xc3, 0xfa,
+  0xb8, 0x30, 0x2c, 0xd0, 0xeb, 0x2f, 0x19, 0x54, 0x50, 0xd9, 0x35, 0xf2,
+  0xc0, 0x4d, 0x16, 0xb6, 0x22, 0x21, 0xdb, 0x9b, 0x59, 0xfe, 0x78, 0x73,
+  0x4a, 0x94, 0x1f, 0x31, 0xa3, 0x78, 0xb1, 0xd0, 0xde, 0x3e, 0xbc, 0x09,
+  0xbf, 0xc9, 0x7c, 0xb5, 0x06, 0xcf, 0x36, 0x31, 0xde, 0xc8, 0x26, 0xbe,
+  0xcd, 0x46, 0xcb, 0xe2, 0x46, 0xb2, 0xca, 0xb3, 0xe8, 0xc3, 0x3c, 0x2b,
+  0x00, 0xde, 0xaf, 0x4d, 0xfa, 0x91, 0xe2, 0x40, 0xe1, 0x32, 0x30, 0xa6,
+  0x9e, 0xf2, 0xb4, 0xff, 0x45, 0xeb, 0x20, 0x51, 0x4a, 0x96, 0x7f, 0xc8,
+  0x93, 0x80, 0xa0, 0xe0, 0x92, 0xae, 0xe9, 0x2c, 0x92, 0xea, 0x35, 0xf8,
+  0xd0, 0xe8, 0xd2, 0xc2, 0x5b, 0x56, 0x62, 0x38, 0x6d, 0x92, 0x7e, 0x1d,
+  0x64, 0x52, 0x00, 0x0b, 0x50, 0x76, 0xfd, 0x43, 0x9c, 0x41, 0x0b, 0xcd,
+  0x0a, 0xb0, 0xbd, 0x97, 0x82, 0xc6, 0xe6, 0x8c, 0x0d, 0x44, 0xcc, 0x96,
+  0x98, 0xda, 0x7a, 0x73, 0x6c, 0x36, 0x11, 0xeb, 0xf2, 0x1d, 0x2b, 0x6e,
+  0x6b, 0x48, 0xd2, 0x82, 0x34, 0xd7, 0x9d, 0x7c, 0x40, 0x50, 0xf3, 0x3a,
+  0x6b, 0xfe, 0x78, 0x50, 0xa2, 0xe6, 0xf1, 0xfe, 0x89, 0xc3, 0x2d, 0xdc,
+  0xf2, 0xc8, 0xe9, 0x17, 0xfe, 0xd3, 0x73, 0x94, 0xd7, 0x83, 0x24, 0xfa,
+  0x71, 0xa4, 0x20, 0xb5, 0x02, 0x5c, 0xc6, 0x68, 0x2d, 0x9f, 0x14, 0xe1,
+  0x8b, 0xfc, 0xa5, 0x56, 0xee, 0xba, 0x8f, 0x8b, 0x0f, 0x8d, 0x2e, 0x16,
+  0x6d, 0xac, 0xba, 0x08, 0x62, 0xfd, 0xd1, 0x48, 0x19, 0x10, 0x75, 0x24,
+  0x46, 0xad, 0x8f, 0xe1, 0xea, 0x9a, 0x13, 0x8e, 0x54, 0x70, 0x17, 0xa6,
+  0x12, 0xac, 0x57, 0x98, 0x1f, 0xf9, 0xc1, 0x6b, 0xbc, 0x2d, 0x79, 0x12,
+  0x63, 0xc5, 0xc8, 0x3f, 0xfe, 0xf8, 0xfc, 0xea, 0xbc, 0x3c, 0xc0, 0x05,
+  0x02, 0x9c, 0x4e, 0xf3, 0xf0, 0x8c, 0xf4, 0x68, 0x7d, 0x60, 0xcd, 0x38,
+  0x86, 0x52, 0x2e, 0xc1, 0xf0, 0x18, 0xd5, 0x19, 0x84, 0xee, 0x7c, 0x4b,
+  0x96, 0x7e, 0x8b, 0xac, 0xa2, 0x3b, 0x50, 0x41, 0x52, 0x9d, 0x27, 0xc9,
+  0xc4, 0x50, 0xb3, 0x48, 0x30, 0xe1, 0xe3, 0x53, 0x26, 0x1f, 0xc3, 0xe4,
+  0x0a, 0xda, 0xc2, 0x26, 0xba, 0x58, 0xfa, 0x73, 0xf2, 0xde, 0x40, 0x5e,
+  0x42, 0xe1, 0xc0, 0xa7, 0xc7, 0x4b, 0x5c, 0xa7, 0x88, 0x3e, 0x49, 0xee,
+  0x21, 0x61, 0x5a, 0x4e, 0x20, 0x5a, 0xd3, 0x90, 0xaa, 0xe8, 0xe3, 0x5a,
+  0x5b, 0x1b, 0x05, 0x86, 0xb6, 0xd4, 0x5f, 0xf1, 0x68, 0x5b, 0x16, 0x00,
+  0xe1, 0x86, 0x05, 0xd1, 0xf7, 0x03, 0x9b, 0xd5, 0x26, 0x19, 0xa3, 0x47,
+  0x57, 0xac, 0x41, 0x99, 0xb5, 0xc8, 0x4d, 0xeb, 0xc7, 0x1f, 0xe8, 0x9d,
+  0x8f, 0xf7, 0x08, 0x73, 0xa2, 0x49, 0x6d, 0x1b, 0xcd, 0x92, 0x24, 0xc9,
+  0xc4, 0xef, 0x03, 0x77, 0x1d, 0xb3, 0xd7, 0x2f, 0x40, 0xe0, 0x91, 0x67,
+  0x02, 0xb5, 0x94, 0x54, 0x8a, 0x62, 0x99, 0x0b, 0x5a, 0xef, 0x87, 0x49,
+  0xc9, 0x9d, 0x7f, 0x6b, 0x6f, 0xcd, 0x18, 0xdc, 0xee, 0x61, 0xfa, 0x36,
+  0x08, 0x8b, 0x93, 0xfb, 0x95, 0xc6, 0x20, 0xad, 0x35, 0xc1, 0x40, 0x05,
+  0x35, 0xe7, 0x3d, 0x07, 0x6e, 0xeb, 0x08, 0x0e, 0xe5, 0xa3, 0xfe, 0x25,
+  0x7f, 0xa4, 0x3b, 0x6d, 0xab, 0x98, 0x04, 0x25, 0x7c, 0x99, 0x0d, 0x5c,
+  0x7d, 0x70, 0x04, 0xb9, 0x6a, 0x0c, 0xf3, 0x26, 0xcc, 0x1e, 0x49, 0xfa,
+  0x26, 0xa0, 0x15, 0xac, 0xd9, 0x8a, 0x7d, 0x85, 0xbb, 0x24, 0x55, 0x3a,
+  0x72, 0xdf, 0x20, 0xf7, 0x3d, 0x35, 0x88, 0x8f, 0x31, 0x7c, 0x24, 0x1f,
+  0xc7, 0x1b, 0x3e, 0x22, 0x99, 0x9c, 0xc7, 0x60, 0xfc, 0xb5, 0x70, 0x63,
+  0xa0, 0x21, 0xf8, 0x0f, 0xc5, 0x19, 0x06, 0xca, 0xf3, 0x85, 0x65, 0x4d,
+  0x0d, 0xf9, 0xe7, 0x34, 0x86, 0xe6, 0x38, 0xac, 0xbb, 0xf7, 0x50, 0x47,
+  0x24, 0x9b, 0x3b, 0xae, 0x10, 0x30, 0x96, 0xd1, 0xd5, 0x3e, 0x61, 0x3e,
+  0xd9, 0x17, 0x77, 0x32, 0x86, 0xf4, 0xa1, 0x71, 0xe8, 0x64, 0xb4, 0x20,
+  0x4c, 0xb5, 0xbc, 0x2d, 0x52, 0xc3, 0xa1, 0xee, 0x8d, 0x39, 0x15, 0x8f,
+  0x15, 0xec, 0x0f, 0x5c, 0xa4, 0xae, 0x41, 0xcd, 0x6d, 0x02, 0xd8, 0x80,
+  0x24, 0x77, 0x35, 0x72, 0x4c, 0x9b, 0x59, 0xd9, 0x57, 0xa4, 0xf3, 0x01,
+  0xc7, 0xf1, 0x3d, 0xe0, 0x0e, 0x99, 0xe6, 0x0c, 0x7f, 0x1c, 0x1f, 0x98,
+  0x45, 0x5c, 0x70, 0xa7, 0x96, 0x0b, 0x14, 0xa5, 0xe3, 0x05, 0x99, 0x66,
+  0xb0, 0x66, 0x3f, 0x3e, 0x38, 0x81, 0x18, 0xa8, 0xe1, 0xaa, 0x5b, 0xfc,
+  0x7c, 0x2d, 0x63, 0xbc, 0xa9, 0xb9, 0x15, 0xc5, 0xf4, 0x3d, 0x3d, 0x99,
+  0x5e, 0xad, 0xde, 0x0b, 0xfb, 0xfe, 0xf0, 0xf5, 0x28, 0xcf, 0xd9, 0x49,
+  0x61, 0x77, 0x09, 0x9d, 0x58, 0x92, 0xdd, 0x12, 0x92, 0xb4, 0xae, 0xc4,
+  0xa8, 0x1a, 0xa1, 0xc9, 0x74, 0xfc, 0x51, 0x9a, 0x9d, 0xd3, 0x78, 0xdd,
+  0x99, 0x1b, 0x30, 0x34, 0x11, 0xbc, 0xbb, 0xb0, 0x99, 0x69, 0x5b, 0x1f,
+  0x96, 0x9f, 0xb8, 0x11, 0x8f, 0xb8, 0xfe, 0x98, 0x68, 0xfd, 0xeb, 0xc5,
+  0x41, 0xb8, 0xac, 0xcf, 0x8f, 0xab, 0x31, 0x55, 0x0d, 0xd3, 0xf7, 0xe5,
+  0x8c, 0xd6, 0xe5, 0x3e, 0x4b, 0xc1, 0xc4, 0x7f, 0x0e, 0x2f, 0xe0, 0xa3,
+  0x73, 0x9d, 0x93, 0x87, 0x54, 0x60, 0x5c, 0xda, 0xd2, 0x4b, 0x94, 0x21,
+  0x14, 0x49, 0xd9, 0x9e, 0xf2, 0xf5, 0xb0, 0x72, 0x31, 0xf5, 0x32, 0x85,
+  0x9c, 0x8b, 0x9e, 0xac, 0xc9, 0x55, 0x41, 0x09, 0x17, 0x41, 0x45, 0x8a,
+  0x37, 0x5a, 0x54, 0x42, 0x1f, 0x5d, 0x53, 0x48, 0xb2, 0x8e, 0xb4, 0xde,
+  0x41, 0x10, 0xb9, 0x8d, 0xb8, 0x2d, 0x91, 0x32, 0xf4, 0xe3, 0xc7, 0xd3,
+  0xd0, 0x36, 0x1e, 0x28, 0x07, 0x0a, 0x23, 0xc2, 0x51, 0xfa, 0x88, 0x6e,
+  0x0b, 0xd6, 0xbf, 0x2d, 0x9e, 0x0c, 0x5c, 0x97, 0x14, 0x08, 0x9a, 0xc0,
+  0x74, 0xa5, 0x18, 0xa4, 0x5c, 0xb7, 0x52, 0x4c, 0x41, 0xfc, 0xae, 0x44,
+  0x43, 0x82, 0x52, 0x2d, 0x8c, 0x8f, 0xbe, 0x6f, 0x9a, 0xd7, 0x5d, 0x85,
+  0x2c, 0xa7, 0x9e, 0x04, 0xc3, 0x93, 0x30, 0x81, 0x46, 0x71, 0x09, 0x67,
+  0xdc, 0x6b, 0x56, 0x17, 0xc3, 0x45, 0xc7, 0xb5, 0x60, 0xc5, 0x90, 0x87,
+  0xf5, 0xaa, 0x97, 0x60, 0xb2, 0xcd, 0x81, 0x3d, 0x19, 0x28, 0x30, 0xbe,
+  0x7c, 0x62, 0x3d, 0x68, 0xa1, 0x56, 0x7c, 0x6b, 0x9d, 0x55, 0xd3, 0x15,
+  0x12, 0x91, 0x96, 0x10, 0x89, 0xb8, 0xdb, 0x0b, 0xe8, 0x00, 0xea, 0x6d,
+  0x03, 0x3b, 0xd4, 0xd5, 0x9c, 0x69, 0x00, 0x80, 0xb0, 0x15, 0x27, 0x5e,
+  0x19, 0xfe, 0x8c, 0xb4, 0xd1, 0x4a, 0x82, 0xbd, 0x20, 0xfc, 0xd6, 0xca,
+  0x70, 0x35, 0x82, 0xb3, 0xb0, 0xc0, 0x5a, 0x9a, 0x60, 0x53, 0xc3, 0xca,
+  0xb7, 0x5c, 0x1c, 0x40, 0x42, 0x27, 0x0a, 0xdc, 0x00, 0xee, 0x9d, 0x3f,
+  0x3d, 0x1a, 0x1f, 0xf8, 0x2b, 0xb1, 0x86, 0xef, 0x11, 0x02, 0x24, 0x97,
+  0xd9, 0xda, 0xca, 0x19, 0x4c, 0x46, 0x86, 0x89, 0x9b, 0xc2, 0x41, 0x3a,
+  0x26, 0xcd, 0x80, 0x74, 0x0c, 0x7b, 0x53, 0x4b, 0x31, 0x86, 0xe9, 0x54,
+  0x1f, 0x59, 0x40, 0x10, 0xd4, 0xed, 0x90, 0xf4, 0x2f, 0x2b, 0x9c, 0xc7,
+  0xc9, 0xa0, 0xbe, 0xe0, 0x7b, 0x4b, 0x8d, 0x80, 0x30, 0x93, 0x43, 0x16,
+  0x5e, 0x47, 0x83, 0xf8, 0x86, 0xfb, 0xb4, 0xd0, 0x88, 0x2a, 0x85, 0x8b,
+  0xd3, 0x54, 0x2d, 0xf8, 0xf6, 0xbf, 0x3a, 0xbe, 0xdc, 0x6a, 0x82, 0x13,
+  0xc5, 0x13, 0x3f, 0x32, 0xc0, 0x54, 0xea, 0x79, 0x88, 0x5d, 0xf1, 0x68,
+  0x97, 0x1c, 0x28, 0x4a, 0x4c, 0xf2, 0xb0, 0x98, 0xc6, 0x73, 0xad, 0x98,
+  0x56, 0x6b, 0xee, 0x90, 0x96, 0x81, 0x39, 0x59, 0x10, 0x02, 0xa4, 0x1e,
+  0x75, 0x57, 0x32, 0xd6, 0x29, 0xd3, 0x48, 0xbf, 0xe1, 0x16, 0x8f, 0x8e,
+  0x4f, 0x8f, 0x2f, 0x8f, 0x11, 0x1d, 0xdd, 0x10, 0x49, 0x58, 0xcd, 0x99,
+  0x70, 0xa2, 0xed, 0xcd, 0x3c, 0xa3, 0xbb, 0x37, 0xd5, 0x4a, 0xf2, 0xd1,
+  0x77, 0xc9, 0xe8, 0xe8, 0xe0, 0x5b, 0x09, 0x57, 0x28, 0xa2, 0xf3, 0x8b,
+  0xb3, 0xf3, 0xd7, 0x27, 0x6f, 0x8f, 0x7a, 0xd1, 0xe1, 0xd9, 0xf9, 0x0f,
+  0xbd, 0xe8, 0xcd, 0xd9, 0xb7, 0xc7, 0x2d, 0xfe, 0x42, 0xf6, 0x55, 0x37,
+  0xb3, 0xc9, 0x5e, 0xaf, 0xd9, 0xed, 0x10, 0x6d, 0x52, 0xb7, 0x3a, 0x48,
+  0xe2, 0x39, 0x3d, 0x19, 0x5e, 0x62, 0xeb, 0xeb, 0xb1, 0x5c, 0x88, 0x57,
+  0x17, 0x50, 0xf5, 0xb4, 0xb0, 0xe0, 0x0c, 0xae, 0x08, 0xf6, 0xdb, 0x51,
+  0xf5, 0x8a, 0x43, 0x77, 0x58, 0x46, 0x57, 0x5c, 0x2b, 0xfe, 0xb7, 0x05,
+  0x0f, 0x31, 0xf6, 0x5a, 0x05, 0xfb, 0x72, 0xb5, 0x90, 0xcf, 0x8d, 0xe4,
+  0xdc, 0xd0, 0xcb, 0x82, 0xc1, 0x24, 0xaa, 0x0e, 0xf1, 0x42, 0x0b, 0x74,
+  0x99, 0x2c, 0xf3, 0xa6, 0xc4, 0x13, 0x47, 0x41, 0x87, 0x92, 0x87, 0xd4,
+  0xab, 0x28, 0x64, 0xec, 0x59, 0x2c, 0x7c, 0xb1, 0x0e, 0xea, 0x3e, 0x78,
+  0xa1, 0xe1, 0xb4, 0xf1, 0x75, 0xdf, 0x5d, 0xf6, 0x7f, 0x30, 0x24, 0x9b,
+  0xf6, 0x2e, 0x29, 0xef, 0x53, 0x86, 0x32, 0xe2, 0x9b, 0x48, 0x30, 0x86,
+  0x7e, 0x78, 0x34, 0x38, 0x4a, 0xc3, 0x07, 0x43, 0x3f, 0xbb, 0x30, 0x9f,
+  0xa5, 0x03, 0xbd, 0xc4, 0x65, 0x1e, 0xc3, 0xbd, 0x13, 0x61, 0x4d, 0x9a,
+  0xda, 0x89, 0x6a, 0x07, 0x12, 0xc0, 0x10, 0x24, 0x97, 0x21, 0xda, 0x91,
+  0x6e, 0x17, 0x39, 0x25, 0xc4, 0xf5, 0x7b, 0x92, 0x65, 0x09, 0x38, 0x6a,
+  0x7d, 0xaf, 0xdf, 0x62, 0xfc, 0x60, 0xc1, 0x79, 0x0d, 0x3f, 0xff, 0xf5,
+  0x68, 0xe2, 0x07, 0x47, 0x13, 0xb2, 0x86, 0x2f, 0xf1, 0xc7, 0x2f, 0xa2,
+  0x8a, 0x00, 0xae, 0x4b, 0x34, 0xc0, 0x4d, 0x12, 0xdb, 0x2a, 0xe4, 0xd1,
+  0x6f, 0x64, 0x2c, 0x4c, 0xb6, 0xd4, 0x74, 0x14, 0xec, 0xb6, 0xda, 0x6c,
+  0x58, 0x2e, 0xaa, 0x12, 0x45, 0x85, 0x22, 0x5a, 0xc4, 0x19, 0xd9, 0x62,
+  0x09, 0x05, 0x4e, 0x19, 0x66, 0x99, 0x6f, 0x57, 0xe0, 0x88, 0x24, 0xe5,
+  0x6f, 0xb8, 0x74, 0x3f, 0x73, 0x56, 0x33, 0x3d, 0xde, 0x07, 0xf9, 0xbf,
+  0x9c, 0xb0, 0xf8, 0x4c, 0x4c, 0x4f, 0x43, 0x87, 0xd6, 0xa2, 0x87, 0x6f,
+  0x11, 0x33, 0x15, 0x0e, 0x1e, 0xab, 0x65, 0x96, 0xc5, 0x0f, 0xce, 0x40,
+  0x47, 0xc5, 0x7a, 0xad, 0xc9, 0xc1, 0x7e, 0xc2, 0xd2, 0x56, 0xb8, 0xe5,
+  0xe6, 0xd7, 0x2a, 0xca, 0x0a, 0xcc, 0xc8, 0xc7, 0x8f, 0x1e, 0x77, 0x55,
+  0x68, 0xd6, 0x34, 0xa9, 0x76, 0x44, 0xfe, 0xb6, 0x85, 0xde, 0x1c, 0xfc,
+  0x7a, 0x38, 0x0d, 0x13, 0x0a, 0x50, 0xa3, 0x05, 0xc1, 0x21, 0xc4, 0xd4,
+  0xf0, 0x8c, 0x84, 0x07, 0x14, 0xdc, 0x65, 0x43, 0xb9, 0x66, 0xa3, 0x9b,
+  0x45, 0x3b, 0x2a, 0x02, 0x04, 0x02, 0x13, 0x3c, 0x28, 0x2e, 0x8d, 0x52,
+  0xed, 0xad, 0x06, 0xa9, 0x6a, 0x00, 0xc4, 0x2d, 0xd9, 0x19, 0x1a, 0x74,
+  0xe0, 0x13, 0x20, 0x35, 0x44, 0x5b, 0xf9, 0xec, 0xef, 0x14, 0xdc, 0x52,
+  0x4a, 0x7c, 0xb3, 0x1f, 0x96, 0xda, 0xe2, 0x31, 0x72, 0x32, 0xfb, 0x9a,
+  0x6c, 0xf6, 0x42, 0xd2, 0xd9, 0x6b, 0x93, 0xd5, 0x1b, 0xac, 0x5d, 0x7e,
+  0x12, 0xbe, 0x53, 0x7b, 0x43, 0x31, 0xb1, 0x51, 0xf3, 0x69, 0xb3, 0xbf,
+  0xe5, 0x62, 0x22, 0x01, 0x17, 0x2a, 0xdb, 0xdc, 0xb4, 0x7e, 0xc4, 0xce,
+  0x32, 0xe1, 0xa2, 0x6a, 0xb3, 0xe9, 0xc4, 0x9f, 0x27, 0xcb, 0x44, 0xe2,
+  0xce, 0xb6, 0xc5, 0xa6, 0xe9, 0x2a, 0x4e, 0x16, 0x4d, 0xf9, 0xbb, 0xd1,
+  0xd8, 0x3c, 0xb9, 0x0f, 0x1b, 0xf3, 0xb2, 0x83, 0x6b, 0xf0, 0xb7, 0x0c,
+  0x2f, 0x67, 0x7c, 0x3d, 0x68, 0xdd, 0x45, 0x2b, 0xe2, 0x2e, 0xa7, 0xaf,
+  0x07, 0xf0, 0x7c, 0xa6, 0x31, 0x41, 0x50, 0x09, 0xec, 0xc7, 0x7d, 0x57,
+  0x2e, 0xbe, 0x70, 0xc8, 0xa3, 0x6d, 0x69, 0xd5, 0x95, 0x32, 0xe8, 0x36,
+  0xee, 0x6a, 0x35, 0x59, 0x25, 0x61, 0x4c, 0x48, 0x0a, 0x92, 0x72, 0x22,
+  0x62, 0x7b, 0xe6, 0x0e, 0x48, 0xcd, 0x57, 0xaa, 0x0f, 0x0d, 0xda, 0x51,
+  0x87, 0x43, 0xd7, 0x47, 0xc5, 0x32, 0x9f, 0x2c, 0x67, 0x9d, 0x30, 0xc3,
+  0x5d, 0x17, 0x86, 0x19, 0x68, 0xfd, 0x20, 0xc8, 0x25, 0x44, 0xbd, 0x3e,
+  0xdb, 0xa9, 0x59, 0xc7, 0x0d, 0x7b, 0x30, 0x40, 0x1b, 0xec, 0xef, 0x86,
+  0xf4, 0x43, 0xed, 0x35, 0x84, 0xc4, 0x92, 0xef, 0xb5, 0xdf, 0x70, 0xf3,
+  0x76, 0x68, 0x31, 0x59, 0x00, 0xdf, 0x1d, 0xec, 0xb4, 0x8b, 0xbb, 0x1c,
+  0x99, 0x37, 0x4e, 0x7c, 0xe1, 0xec, 0x94, 0xd4, 0x57, 0x1e, 0x6d, 0xe1,
+  0x25, 0x37, 0x89, 0xb9, 0x70, 0x35, 0x86, 0xf5, 0x90, 0xd6, 0xaf, 0x80,
+  0x2b, 0x57, 0x69, 0xb7, 0x70, 0x5c, 0x01, 0x29, 0xe7, 0x89, 0x98, 0xca,
+  0xf7, 0x9d, 0xa8, 0x19, 0x0c, 0x6f, 0x97, 0x59, 0xee, 0xb4, 0xb8, 0xdb,
+  0x6d, 0x2d, 0x4f, 0x51, 0x1b, 0x1a, 0x4b, 0x62, 0x97, 0xa7, 0x43, 0x17,
+  0xfc, 0xbb, 0x2b, 0x22, 0xb8, 0xc3, 0x36, 0xf1, 0x75, 0xe9, 0xd7, 0xd4,
+  0x5d, 0xe7, 0x97, 0x55, 0x08, 0xf7, 0x43, 0xd8, 0xe3, 0x0b, 0xb3, 0x98,
+  0xde, 0xed, 0xb5, 0x0e, 0xc1, 0xc6, 0x50, 0x19, 0x04, 0x1b, 0x5a, 0x6c,
+  0x10, 0x7b, 0xcd, 0x41, 0x3c, 0x56, 0xfa, 0x9d, 0x5f, 0x6d, 0x0c, 0xe1,
+  0x89, 0x0e, 0xe1, 0xc9, 0xc7, 0xae, 0x42, 0x38, 0x80, 0x27, 0xbf, 0x74,
+  0x15, 0x5a, 0x87, 0xf0, 0x94, 0x83, 0xe5, 0x17, 0x77, 0x4f, 0x5b, 0xb2,
+  0x76, 0xcc, 0x26, 0x06, 0x56, 0x05, 0x24, 0x94, 0xa9, 0x14, 0xda, 0xf4,
+  0xee, 0x70, 0x2e, 0x31, 0x68, 0xc5, 0x42, 0x33, 0xef, 0x3d, 0x3a, 0xa9,
+  0x57, 0x13, 0xd4, 0x31, 0x7b, 0x50, 0x6b, 0x41, 0x78, 0xb9, 0xd2, 0x5f,
+  0x38, 0x7e, 0xb8, 0xaf, 0x3d, 0xd4, 0x0a, 0x48, 0x4b, 0x09, 0xdc, 0x35,
+  0x71, 0xcc, 0x48, 0x66, 0x14, 0xb4, 0x32, 0x2d, 0x8e, 0x93, 0x71, 0x5b,
+  0x4f, 0x6d, 0x50, 0x89, 0x04, 0x95, 0x06, 0xd3, 0x7d, 0x2e, 0xd3, 0x7d,
+  0xfe, 0x7f, 0xd2, 0x74, 0x9f, 0xaf, 0x9f, 0xee, 0x27, 0x62, 0x55, 0x00,
+  0x1e, 0x68, 0x7f, 0x14, 0xe7, 0x6b, 0x11, 0x93, 0x2d, 0x14, 0xd2, 0x81,
+  0x87, 0x56, 0x42, 0xfa, 0x0b, 0x41, 0x5d, 0x92, 0x6f, 0xa8, 0x99, 0xf5,
+  0xac, 0xa0, 0x22, 0xd1, 0x33, 0x0c, 0x52, 0x51, 0xa6, 0x63, 0xe6, 0x73,
+  0x5c, 0xe9, 0xc4, 0xc5, 0xf0, 0xfe, 0xf7, 0xf6, 0xa0, 0xb5, 0xda, 0xe6,
+  0x51, 0xb3, 0x1e, 0x66, 0x2f, 0x02, 0x5e, 0x6e, 0x50, 0x56, 0x33, 0x40,
+  0xaf, 0xa1, 0x76, 0x8f, 0xdf, 0x7e, 0x7b, 0x72, 0x71, 0xf6, 0xf6, 0xcd,
+  0xf1, 0x5b, 0x17, 0x49, 0x73, 0x89, 0xda, 0x82, 0x6d, 0x56, 0xb4, 0xb6,
+  0x9a, 0x2a, 0x22, 0xff, 0xc2, 0x94, 0xc3, 0x29, 0xb1, 0x8b, 0x85, 0xfe,
+  0x35, 0x08, 0x9b, 0x0b, 0x1e, 0xb2, 0xe3, 0xc7, 0x42, 0xd9, 0x82, 0x7d,
+  0x03, 0x13, 0x8e, 0x5f, 0x1b, 0x48, 0x58, 0x91, 0x2b, 0x8b, 0xce, 0xb6,
+  0xb7, 0x87, 0x71, 0xb2, 0xb0, 0xf5, 0xf3, 0xf7, 0x89, 0x16, 0x65, 0x0c,
+  0x22, 0xd2, 0x2a, 0x83, 0xf0, 0x9b, 0x17, 0x34, 0xf8, 0xa3, 0x19, 0xaf,
+  0xf6, 0xb7, 0xb7, 0x7f, 0x02, 0xc6, 0xdf, 0xe7, 0x6a, 0xdf, 0x6c, 0x5e,
+  0xc9, 0xa1, 0x21, 0xc7, 0xd7, 0xfd, 0xb0, 0x1c, 0x3e, 0x58, 0xcc, 0x36,
+  0x02, 0x5f, 0xd5, 0xf0, 0x3d, 0xe9, 0xd2, 0xdf, 0xff, 0xf0, 0x2b, 0x77,
+  0x31, 0xac, 0x94, 0x9b, 0xf8, 0xd5, 0xbb, 0xa8, 0x68, 0xd7, 0x07, 0xa7,
+  0xa7, 0xbf, 0x6a, 0x07, 0x50, 0x39, 0xbc, 0xbd, 0xb0, 0xef, 0xec, 0x85,
+  0x96, 0x00, 0xd9, 0x50, 0x66, 0x2b, 0xda, 0xc9, 0xdb, 0x33, 0x1d, 0x8d,
+  0x98, 0x9b, 0xfa, 0x56, 0xc9, 0x65, 0xe2, 0xaa, 0x24, 0xf2, 0xc0, 0x1a,
+  0x18, 0xd4, 0xf8, 0x12, 0xa2, 0x93, 0x03, 0xe3, 0x34, 0xab, 0x2f, 0x10,
+  0xc9, 0x90, 0x6e, 0x94, 0x39, 0xdb, 0xa2, 0xc0, 0x1f, 0x9a, 0xd1, 0xba,
+  0xc5, 0x30, 0xcc, 0x00, 0x13, 0x1c, 0xae, 0x85, 0xda, 0xba, 0x9c, 0xaa,
+  0xc5, 0x44, 0xa7, 0x48, 0xcd, 0x25, 0xc0, 0xef, 0x59, 0x11, 0xc0, 0x50,
+  0xf8, 0x14, 0x7d, 0x7f, 0x72, 0x19, 0x1d, 0x9e, 0x1d, 0xf9, 0x23, 0x7a,
+  0x29, 0x41, 0x9a, 0x39, 0xca, 0x21, 0x2d, 0xe7, 0xc4, 0xc4, 0x58, 0x5d,
+  0x48, 0xaf, 0x80, 0x75, 0xe6, 0x20, 0xcf, 0x11, 0x2f, 0x67, 0x76, 0x22,
+  0x5a, 0x50, 0x29, 0xe6, 0x96, 0x4b, 0x10, 0xdc, 0x24, 0xb0, 0x22, 0x54,
+  0x01, 0x80, 0x9d, 0xa9, 0x96, 0x63, 0xa2, 0x19, 0x18, 0x87, 0x58, 0x8a,
+  0x58, 0x1d, 0x88, 0xbb, 0x70, 0x55, 0xb6, 0xb9, 0x58, 0x93, 0x48, 0xb8,
+  0x3a, 0xf0, 0xba, 0x44, 0x80, 0x78, 0x26, 0x45, 0x6e, 0x72, 0x80, 0xfb,
+  0x6b, 0x31, 0xd1, 0x07, 0x46, 0x5f, 0xc7, 0x68, 0x2a, 0x31, 0x9d, 0xbb,
+  0x6a, 0xf7, 0x9f, 0x7b, 0xb0, 0x0c, 0x8f, 0x3f, 0x05, 0xd3, 0x01, 0x27,
+  0x41, 0x4c, 0x2c, 0xa1, 0xc8, 0x00, 0xc4, 0xac, 0x02, 0x8a, 0x14, 0xb6,
+  0x6e, 0xec, 0xb8, 0x6b, 0xc2, 0xf5, 0xb3, 0xa7, 0xd4, 0x2e, 0x28, 0xf1,
+  0x2c, 0x4f, 0x89, 0x7b, 0x29, 0xfd, 0x39, 0x38, 0xd2, 0x4f, 0x74, 0x30,
+  0x17, 0xa7, 0x34, 0xf3, 0xa9, 0xd8, 0xc1, 0x35, 0x9e, 0x1b, 0xd5, 0x6f,
+  0xe0, 0x3d, 0x61, 0x7d, 0x57, 0x8b, 0x99, 0xfa, 0x37, 0x9f, 0x99, 0xb9,
+  0x4d, 0x49, 0xc1, 0xa3, 0x74, 0x2a, 0x15, 0x88, 0x23, 0x57, 0x95, 0x49,
+  0x25, 0x54, 0x09, 0x04, 0x1b, 0xc3, 0x5d, 0x26, 0xb6, 0xed, 0x66, 0xdd,
+  0x87, 0x5a, 0x8c, 0xcd, 0xf3, 0x5a, 0x3f, 0xd6, 0x0d, 0x2a, 0x8d, 0x4b,
+  0x81, 0x4b, 0x74, 0x51, 0x0f, 0xa6, 0xe2, 0xe6, 0x9b, 0xad, 0x7d, 0x5a,
+  0x5f, 0x14, 0x5f, 0x13, 0x5e, 0x5a, 0x74, 0x4f, 0x7e, 0xe6, 0x98, 0x45,
+  0x74, 0x9f, 0x70, 0xbe, 0x93, 0x9e, 0x49, 0xd4, 0x2b, 0xb2, 0xd9, 0x59,
+  0x6c, 0x84, 0xa4, 0x41, 0x02, 0xc4, 0x4a, 0x63, 0x29, 0xc7, 0x3a, 0xde,
+  0x86, 0x7e, 0x98, 0x87, 0x1c, 0xf5, 0x85, 0xef, 0x24, 0x8a, 0xe1, 0xa2,
+  0x62, 0x53, 0xe7, 0x3c, 0x75, 0x9b, 0x20, 0xed, 0xcb, 0x47, 0xec, 0xf9,
+  0x23, 0xce, 0x9c, 0xb9, 0xbf, 0xf5, 0x8d, 0x06, 0x06, 0x51, 0x2d, 0xc4,
+  0x89, 0x57, 0x41, 0x2a, 0xed, 0x85, 0xf5, 0xf9, 0x10, 0xe9, 0x1e, 0xcf,
+  0xd5, 0x6f, 0x21, 0x20, 0xec, 0x0c, 0xbc, 0x9d, 0x35, 0xe2, 0x49, 0xb3,
+  0xab, 0xd2, 0x55, 0xff, 0x61, 0x95, 0x7a, 0x12, 0xa0, 0x57, 0xe2, 0x54,
+  0xfb, 0x46, 0x71, 0x86, 0x4c, 0x3b, 0x87, 0x03, 0x29, 0x6a, 0xb8, 0xe7,
+  0x82, 0x4a, 0xae, 0xfe, 0x4c, 0xec, 0xd6, 0x16, 0xfb, 0xfc, 0x60, 0x38,
+  0xb4, 0xa5, 0x06, 0x42, 0x94, 0xad, 0xa7, 0xac, 0xa0, 0x7a, 0x36, 0x91,
+  0x0d, 0xad, 0xe9, 0x82, 0x2d, 0x86, 0x0c, 0x6d, 0xa4, 0x16, 0xf9, 0xb0,
+  0xfb, 0xc4, 0xaf, 0xb9, 0xeb, 0xec, 0x5b, 0x69, 0xad, 0xf7, 0x91, 0x9d,
+  0xb5, 0xf6, 0xf5, 0x6d, 0x4b, 0x5f, 0x4f, 0x6b, 0xf3, 0xda, 0xdb, 0xfb,
+  0x54, 0xd3, 0x03, 0x68, 0xad, 0x0f, 0x2b, 0x94, 0xa2, 0xc4, 0xa1, 0xb6,
+  0x06, 0x7a, 0xb0, 0x6f, 0x48, 0x10, 0x49, 0x6b, 0x25, 0x6c, 0x0c, 0x26,
+  0xe8, 0xea, 0x99, 0x9f, 0x16, 0x49, 0x15, 0xdc, 0x1e, 0x9b, 0x3d, 0xe4,
+  0x98, 0x34, 0x4e, 0x0f, 0x70, 0x3f, 0xf8, 0xa8, 0x9c, 0xf0, 0xc8, 0x88,
+  0x8f, 0xaf, 0x89, 0x25, 0xb1, 0x61, 0x04, 0xfd, 0x7c, 0xea, 0xfa, 0x71,
+  0x23, 0x67, 0x3d, 0x54, 0x72, 0xe6, 0x07, 0x21, 0x47, 0x50, 0x1a, 0x09,
+  0xa2, 0xcd, 0xd4, 0x51, 0xd0, 0x24, 0x59, 0x7d, 0xdb, 0xf7, 0x22, 0xc7,
+  0xef, 0x5c, 0x8b, 0xdc, 0x09, 0x60, 0x0a, 0x4a, 0x7f, 0xc5, 0x15, 0xf4,
+  0x11, 0x29, 0x83, 0x1e, 0x7b, 0xf3, 0x6a, 0x1e, 0x9e, 0xf6, 0xdd, 0x17,
+  0xc1, 0x9a, 0xd8, 0xb0, 0xcc, 0xd6, 0xb8, 0x6d, 0xc7, 0xc7, 0xb1, 0x10,
+  0x91, 0xee, 0xf8, 0xef, 0x8b, 0xe3, 0xcb, 0x0b, 0x8e, 0x57, 0x05, 0x84,
+  0x4a, 0x5d, 0x53, 0xa6, 0x33, 0xb5, 0xe5, 0xcc, 0xf2, 0x52, 0x84, 0x23,
+  0xe0, 0xba, 0x9e, 0x92, 0xa5, 0xd0, 0x30, 0xee, 0x19, 0xce, 0xaa, 0xae,
+  0xd4, 0x1d, 0xf6, 0x15, 0x80, 0xe4, 0x1e, 0xf2, 0xd1, 0x97, 0x7a, 0x32,
+  0xdc, 0xfa, 0xfb, 0x18, 0x1e, 0x20, 0x25, 0x0a, 0x5b, 0xd3, 0x30, 0xf7,
+  0x81, 0xba, 0xde, 0x5d, 0x54, 0x8a, 0xa4, 0x33, 0xc5, 0xe6, 0x21, 0xd6,
+  0x60, 0xf1, 0x86, 0x91, 0xc8, 0x75, 0x4e, 0xd7, 0xa4, 0x24, 0xa5, 0xda,
+  0x75, 0xe8, 0xbc, 0x81, 0xd2, 0xa5, 0x7c, 0x8a, 0x10, 0x74, 0x20, 0x69,
+  0x45, 0x4f, 0x77, 0x76, 0x9a, 0xcd, 0xc5, 0xa3, 0xec, 0xce, 0x5c, 0x93,
+  0x9a, 0xd0, 0x21, 0x65, 0x7b, 0xb0, 0x5f, 0xb8, 0x4c, 0xa1, 0x6b, 0xf4,
+  0xaf, 0x48, 0x66, 0xe6, 0x05, 0x33, 0x33, 0x42, 0xb0, 0x6c, 0x72, 0x28,
+  0xbf, 0x43, 0x82, 0x89, 0x2e, 0x59, 0xf5, 0x28, 0x4a, 0xee, 0x89, 0xe1,
+  0x04, 0xc6, 0x56, 0xaf, 0x10, 0x49, 0x6a, 0x2b, 0x9a, 0xfd, 0xac, 0x65,
+  0x9e, 0x0a, 0x80, 0x13, 0x74, 0xf3, 0xac, 0x85, 0x20, 0xa2, 0xe1, 0xe5,
+  0xd9, 0x45, 0x14, 0x54, 0x1b, 0xae, 0x72, 0x5d, 0xc4, 0x33, 0xf0, 0x13,
+  0xce, 0x3b, 0xdb, 0x6b, 0x71, 0x1d, 0xb8, 0x04, 0x48, 0x09, 0x31, 0xe2,
+  0x4c, 0x7a, 0xdf, 0xeb, 0x73, 0xef, 0xe8, 0xd2, 0xb9, 0x7d, 0x4b, 0x1a,
+  0x00, 0x67, 0x04, 0x1a, 0x94, 0x19, 0xdd, 0x8f, 0x24, 0x78, 0xcf, 0x02,
+  0xfb, 0xcb, 0x9e, 0x9c, 0xb3, 0xb3, 0x25, 0x68, 0x5d, 0x72, 0x19, 0x99,
+  0x8c, 0x34, 0xab, 0x91, 0xcd, 0x56, 0x6a, 0x98, 0x72, 0xc6, 0xc0, 0x3a,
+  0x29, 0xca, 0x19, 0x3a, 0xf3, 0x60, 0x75, 0x62, 0xf9, 0x1f, 0xd4, 0xbc,
+  0x7e, 0xf8, 0x1c, 0x59, 0x6a, 0xea, 0x46, 0x51, 0x12, 0xd2, 0xba, 0x1c,
+  0xf5, 0xcd, 0x1e, 0x93, 0x28, 0x30, 0xd1, 0xfa, 0xbc, 0x12, 0x5c, 0xe5,
+  0x64, 0x23, 0x2f, 0x56, 0xec, 0xf8, 0x75, 0x3e, 0x3f, 0xbb, 0xb8, 0xb4,
+  0x62, 0x35, 0x7a, 0x6f, 0xe2, 0xa3, 0xda, 0x09, 0x62, 0x67, 0x3d, 0x24,
+  0xc0, 0xa0, 0x6e, 0x79, 0x7b, 0x9d, 0x78, 0x01, 0xce, 0x43, 0xab, 0xda,
+  0x06, 0x17, 0xb9, 0xc8, 0x57, 0xe6, 0xf9, 0x72, 0xa5, 0x70, 0xc0, 0x72,
+  0x34, 0x4d, 0x87, 0xf9, 0x73, 0xbb, 0x1f, 0xd3, 0x27, 0x78, 0x3e, 0xd9,
+  0x6d, 0xa1, 0x0e, 0x16, 0xc0, 0x2f, 0x8e, 0x87, 0x97, 0xb2, 0x6a, 0xfc,
+  0x5b, 0x63, 0xe4, 0x92, 0xe6, 0xa8, 0x1f, 0xb6, 0x3a, 0x96, 0x40, 0x1d,
+  0x1c, 0x22, 0x33, 0xd3, 0x1a, 0x72, 0xce, 0x1b, 0x14, 0xac, 0xd9, 0x93,
+  0x20, 0x5c, 0x0f, 0x8c, 0x53, 0x69, 0xe5, 0xd2, 0x6a, 0x0a, 0x46, 0x1d,
+  0xed, 0xa4, 0x43, 0x57, 0xae, 0x1c, 0x8a, 0x2c, 0xbf, 0x0d, 0x5a, 0x78,
+  0x1a, 0x30, 0x0b, 0x66, 0xee, 0xda, 0xc0, 0x89, 0x59, 0xc6, 0xf9, 0x43,
+  0xe7, 0x7c, 0xbe, 0x4e, 0xe6, 0x46, 0x18, 0xf2, 0x9c, 0x6f, 0xe7, 0x99,
+  0xcb, 0x79, 0x36, 0xf1, 0x28, 0x18, 0x0a, 0x7f, 0x6c, 0x91, 0xee, 0x70,
+  0x34, 0xd6, 0xc8, 0xee, 0xc9, 0x73, 0xb7, 0x8a, 0x2c, 0x3a, 0x3b, 0xd7,
+  0x8e, 0x4c, 0x3f, 0xb8, 0x8b, 0xd8, 0x35, 0x96, 0xce, 0x97, 0x89, 0x16,
+  0xe4, 0x88, 0xf3, 0x69, 0x8a, 0x30, 0x55, 0xf1, 0xcd, 0x34, 0x0c, 0xd1,
+  0xf5, 0xe8, 0xc1, 0x27, 0x7a, 0x11, 0x91, 0x1a, 0xef, 0x77, 0x4b, 0x12,
+  0x09, 0x71, 0x92, 0xbd, 0x8c, 0x47, 0x07, 0x77, 0xee, 0x6e, 0x8b, 0x41,
+  0x74, 0xce, 0x38, 0xad, 0x30, 0xb1, 0x17, 0xff, 0xe1, 0x5b, 0x93, 0xc3,
+  0xc2, 0xf8, 0xe1, 0x7c, 0x7d, 0x42, 0x38, 0x4d, 0xb9, 0xc0, 0x36, 0x3e,
+  0xe1, 0x5f, 0x03, 0xd4, 0xc7, 0xc6, 0x94, 0x5f, 0xf8, 0x97, 0x0b, 0x9a,
+  0x08, 0xe9, 0x26, 0xf5, 0x47, 0x9e, 0x2a, 0x6d, 0x91, 0xe2, 0x82, 0x26,
+  0xb8, 0x03, 0xb0, 0x67, 0x3e, 0xd3, 0xbc, 0x25, 0x29, 0x47, 0x33, 0xa2,
+  0x85, 0x2b, 0x7b, 0xc6, 0xc4, 0x58, 0x79, 0xce, 0x37, 0x25, 0x77, 0xc2,
+  0x81, 0xac, 0x13, 0x40, 0x2c, 0xe8, 0xdc, 0x70, 0x29, 0x24, 0x6a, 0x6b,
+  0xce, 0x0c, 0x77, 0x6a, 0xbe, 0x73, 0x9f, 0xc9, 0xc5, 0x3c, 0x73, 0x64,
+  0x87, 0xa7, 0xad, 0xa8, 0x78, 0x0d, 0x74, 0xf6, 0xa9, 0x50, 0xa3, 0x23,
+  0x1d, 0x77, 0x8d, 0x55, 0x46, 0xc7, 0x1d, 0xbb, 0xec, 0x50, 0x6c, 0x37,
+  0xab, 0x96, 0x28, 0xf3, 0x12, 0x34, 0xf5, 0xcc, 0x37, 0x75, 0xc5, 0x59,
+  0x7d, 0xae, 0x2d, 0xcf, 0x83, 0x3c, 0xcc, 0x5a, 0xea, 0x1e, 0x53, 0x3d,
+  0x41, 0xae, 0xb2, 0x86, 0xa6, 0x50, 0xbd, 0x3f, 0x9e, 0x0a, 0x31, 0x5c,
+  0x66, 0x99, 0x94, 0xbc, 0x74, 0xb1, 0x7e, 0x03, 0x89, 0x22, 0x6c, 0x9a,
+  0xdd, 0x8b, 0x9e, 0xaa, 0x57, 0x5a, 0x8d, 0x8c, 0xbd, 0x06, 0x8d, 0x3a,
+  0xba, 0xcb, 0x59, 0xa3, 0x14, 0xce, 0xd3, 0xcf, 0x54, 0x7d, 0xbb, 0x9d,
+  0x73, 0x61, 0xf8, 0xcb, 0xe3, 0xd3, 0xb7, 0xc7, 0x97, 0x0e, 0x8c, 0xc3,
+  0x26, 0x14, 0x3c, 0xff, 0x42, 0x0d, 0x5b, 0xaa, 0x5d, 0x19, 0xe6, 0x70,
+  0xdd, 0xfd, 0xfa, 0x6c, 0xd7, 0xd9, 0x76, 0x38, 0x72, 0xae, 0x5b, 0xc8,
+  0xf9, 0x0b, 0xe2, 0xe7, 0x50, 0x82, 0xf8, 0xeb, 0xe8, 0xcd, 0xd1, 0x33,
+  0x0e, 0xd4, 0xbf, 0x4e, 0x72, 0x46, 0x3d, 0xf7, 0xca, 0x4e, 0x16, 0x70,
+  0x82, 0x67, 0x7b, 0x01, 0x56, 0x84, 0x5c, 0x66, 0xa9, 0x9e, 0x0f, 0x16,
+  0x63, 0x69, 0x85, 0x38, 0xb7, 0x94, 0x14, 0x55, 0xb1, 0x06, 0x42, 0xb3,
+  0x16, 0x2b, 0xa3, 0xe2, 0x82, 0x88, 0x6c, 0x50, 0xaf, 0x85, 0x5c, 0x65,
+  0x13, 0xcf, 0x9e, 0x78, 0x36, 0x91, 0xaf, 0x16, 0x8c, 0x68, 0x26, 0xc5,
+  0x92, 0x5b, 0x68, 0xf6, 0x99, 0xb0, 0xa6, 0x43, 0x39, 0x59, 0x2c, 0x2f,
+  0x36, 0x5f, 0xe3, 0x90, 0x24, 0x31, 0xb7, 0x05, 0xef, 0x3d, 0x0b, 0xf5,
+  0xb5, 0x42, 0xab, 0xa4, 0xd2, 0xfa, 0xa1, 0x1c, 0x00, 0x2a, 0x3b, 0xfb,
+  0x67, 0x9f, 0xbb, 0x67, 0xb9, 0x56, 0x64, 0x3a, 0x57, 0xa0, 0x99, 0x47,
+  0xde, 0x50, 0x29, 0x53, 0x2e, 0x5f, 0x1f, 0x23, 0x23, 0xb2, 0x45, 0xb0,
+  0xf6, 0xc1, 0x2b, 0x2f, 0xaa, 0xea, 0x28, 0x30, 0x4c, 0x7d, 0xfd, 0x0a,
+  0x9e, 0x54, 0xba, 0xb8, 0x09, 0xc9, 0xff, 0xb9, 0xdc, 0x85, 0xe7, 0x1c,
+  0x0e, 0x59, 0xd9, 0x4f, 0x63, 0x33, 0x95, 0x0c, 0x7f, 0x3b, 0x4d, 0x42,
+  0x5d, 0x87, 0x07, 0xf6, 0x46, 0x9d, 0x34, 0xf9, 0xd1, 0xe0, 0xf2, 0x78,
+  0xbe, 0xab, 0x54, 0x49, 0x53, 0xce, 0xae, 0xe7, 0xa4, 0xe3, 0x4f, 0x9a,
+  0x25, 0x3f, 0x83, 0xc7, 0xf7, 0xf4, 0x48, 0x4a, 0xb5, 0x5c, 0xb0, 0x1d,
+  0xc6, 0x16, 0xf6, 0x0f, 0x3c, 0x51, 0xaa, 0x15, 0x57, 0x9a, 0x14, 0x42,
+  0x67, 0x50, 0x67, 0xb6, 0x21, 0x26, 0x95, 0xb0, 0xf9, 0xe7, 0x4f, 0x55,
+  0xba, 0x31, 0x29, 0x94, 0x39, 0x3f, 0x2f, 0xc4, 0x94, 0x81, 0x14, 0x1a,
+  0x8c, 0xf0, 0xb9, 0x5e, 0x2e, 0xba, 0x95, 0xa5, 0x95, 0xe5, 0x56, 0x1e,
+  0x58, 0x20, 0xae, 0xf6, 0x3e, 0x9d, 0x6b, 0xb4, 0x77, 0xe3, 0xf5, 0xe7,
+  0x6b, 0xac, 0x1a, 0xea, 0x8b, 0x38, 0x06, 0x2d, 0x05, 0xcf, 0x7f, 0xea,
+  0x4e, 0x82, 0x03, 0xe0, 0xea, 0xb9, 0x38, 0x2f, 0x78, 0xb5, 0x0d, 0x26,
+  0xd1, 0x0e, 0x12, 0xf4, 0xea, 0x85, 0xaf, 0x78, 0xd1, 0xe6, 0xca, 0x73,
+  0xdd, 0x93, 0x4e, 0x1e, 0xa5, 0xc1, 0x31, 0x7e, 0x2e, 0x24, 0xf5, 0x1a,
+  0x9e, 0x64, 0x3b, 0x07, 0x1c, 0x8e, 0x1b, 0x22, 0x58, 0xfb, 0xa7, 0x5f,
+  0x28, 0x6d, 0xd8, 0x8d, 0x64, 0x82, 0xe0, 0xda, 0x37, 0x3e, 0xdd, 0x09,
+  0xc5, 0xc2, 0x09, 0xdb, 0xd2, 0x24, 0x55, 0x7a, 0xed, 0x0b, 0x42, 0x19,
+  0x27, 0xc4, 0xa8, 0xaf, 0x89, 0xa8, 0xf1, 0x8c, 0x87, 0x08, 0xf0, 0x8f,
+  0xed, 0x55, 0xd9, 0x5a, 0x28, 0xa4, 0x44, 0x27, 0x47, 0xc1, 0x83, 0x4f,
+  0xfc, 0x04, 0xe3, 0x29, 0xdf, 0xb7, 0x2b, 0xd1, 0xf4, 0x0b, 0x05, 0x11,
+  0x0f, 0x1e, 0x7d, 0xaa, 0x51, 0x98, 0x1c, 0x7f, 0x7b, 0x23, 0xeb, 0xdf,
+  0x78, 0x46, 0xc8, 0xe1, 0xd0, 0x15, 0x55, 0x96, 0x70, 0xca, 0xa2, 0xed,
+  0x9a, 0xfd, 0xf4, 0xf9, 0x23, 0xcf, 0xea, 0xb5, 0x54, 0xb8, 0xcb, 0x34,
+  0x78, 0xef, 0xd3, 0xe6, 0x31, 0x37, 0xc1, 0xdb, 0xa2, 0x95, 0xf5, 0xa4,
+  0x45, 0x9b, 0x1c, 0x7c, 0xfd, 0x1f, 0x66, 0x5a, 0xc9, 0x39, 0x0a, 0xb3,
+  0xf8, 0x8f, 0x70, 0xbc, 0x9f, 0x85, 0x21, 0xcf, 0x62, 0x57, 0x71, 0xf5,
+  0x16, 0x42, 0xd8, 0x5b, 0x5f, 0xb9, 0x04, 0xab, 0x13, 0xb4, 0x20, 0x7b,
+  0x4e, 0x37, 0x75, 0x50, 0x03, 0x5a, 0x35, 0x2d, 0x4d, 0x3f, 0xb7, 0x88,
+  0x27, 0x1d, 0xdd, 0xd7, 0xb4, 0xa9, 0xa0, 0x8e, 0xc0, 0x3a, 0xb5, 0x53,
+  0x3b, 0x06, 0xc5, 0xcd, 0x52, 0x54, 0x5b, 0x37, 0x23, 0x5f, 0xaa, 0x3e,
+  0x78, 0x6d, 0xcf, 0x73, 0x2f, 0xbd, 0x58, 0x25, 0xeb, 0xe2, 0x90, 0xa1,
+  0x7d, 0x45, 0xff, 0x8d, 0x40, 0x8a, 0x7c, 0x15, 0xd3, 0x80, 0x50, 0x07,
+  0xc6, 0x00, 0x0d, 0x36, 0xe3, 0xf6, 0xa4, 0x2b, 0x8d, 0xa3, 0x0e, 0xba,
+  0x51, 0xe1, 0x81, 0x1d, 0xb8, 0xb4, 0x4b, 0x37, 0xc9, 0xf8, 0xd6, 0x8e,
+  0x8c, 0x6b, 0xa3, 0xf9, 0xd6, 0xf7, 0xdf, 0x0b, 0xcf, 0x71, 0x70, 0x2e,
+  0x6a, 0x3d, 0x75, 0x60, 0xe5, 0x74, 0x46, 0x05, 0x22, 0x9c, 0xb7, 0x1b,
+  0x85, 0xaa, 0xf3, 0x64, 0x9a, 0x30, 0x28, 0x98, 0x48, 0xa6, 0x58, 0xe8,
+  0xb6, 0xe0, 0x47, 0x8e, 0x08, 0x91, 0x32, 0x3b, 0x89, 0x02, 0xc7, 0xcd,
+  0xd9, 0x7f, 0xad, 0x06, 0x0a, 0x1a, 0xc1, 0xc1, 0xbb, 0xcb, 0xaf, 0xcf,
+  0x2e, 0x86, 0xd1, 0x36, 0xe7, 0x40, 0x5f, 0x5e, 0x9c, 0x7c, 0xf9, 0x8e,
+  0x14, 0x3e, 0x67, 0x79, 0x3e, 0x8a, 0x49, 0x11, 0x9c, 0x72, 0xa8, 0x46,
+  0x32, 0x1f, 0x25, 0xf9, 0xb5, 0x81, 0x8a, 0x03, 0xb5, 0x84, 0x79, 0x77,
+  0x96, 0xfb, 0x0a, 0x1c, 0x52, 0xe4, 0xda, 0x2c, 0xeb, 0x08, 0xff, 0x4a,
+  0xe9, 0xbb, 0xcc, 0x6b, 0x33, 0x69, 0x35, 0xaf, 0xdd, 0x57, 0x56, 0xbf,
+  0xfc, 0xfa, 0xe0, 0xed, 0x37, 0x43, 0x43, 0xae, 0xfb, 0xee, 0xbb, 0xef,
+  0x42, 0xc7, 0xcb, 0xfe, 0xf6, 0x36, 0xb0, 0xca, 0x6e, 0xe2, 0x87, 0x87,
+  0x41, 0x91, 0x6c, 0x6c, 0xd0, 0x39, 0xda, 0xf0, 0xb9, 0x04, 0x0a, 0x67,
+  0x5c, 0x2c, 0xe9, 0xa6, 0xa3, 0xaf, 0xb7, 0x17, 0xcb, 0x11, 0xc3, 0x27,
+  0x6f, 0x2f, 0x4b, 0x2d, 0x16, 0x81, 0xb7, 0xb7, 0x37, 0x36, 0x86, 0xc7,
+  0xc7, 0xd1, 0xc1, 0xe9, 0xf0, 0x2c, 0x78, 0x77, 0x73, 0x77, 0x8b, 0x24,
+  0x81, 0xeb, 0xa4, 0xa4, 0x5f, 0x36, 0x36, 0x4e, 0x0f, 0x2e, 0x59, 0xc9,
+  0xf9, 0xf6, 0xf8, 0x62, 0x78, 0x72, 0xf6, 0x96, 0x77, 0x87, 0x41, 0x1e,
+  0xe2, 0xe9, 0x3d, 0xe3, 0x6a, 0x5d, 0xa5, 0xc8, 0xc1, 0xbc, 0xb7, 0x32,
+  0x0d, 0x0c, 0x5c, 0x42, 0xa2, 0x8a, 0xc8, 0x6e, 0xe2, 0x58, 0xb2, 0x1a,
+  0x3e, 0x12, 0x13, 0x50, 0xb2, 0xaa, 0x61, 0xde, 0xc7, 0x8d, 0xc8, 0x1b,
+  0x3a, 0x04, 0xc6, 0x3d, 0x19, 0x49, 0xc8, 0x4c, 0x4f, 0xd0, 0x05, 0x10,
+  0xac, 0x1e, 0xc0, 0x1f, 0xb4, 0x4e, 0x7c, 0x78, 0xf2, 0xe6, 0x9c, 0x64,
+  0xfe, 0x77, 0xc3, 0x83, 0xaf, 0x8e, 0xf9, 0xd1, 0xaf, 0x92, 0xd2, 0x6f,
+  0x87, 0x94, 0x93, 0xe0, 0x4e, 0xde, 0x26, 0x65, 0x31, 0x8e, 0x17, 0x1c,
+  0x77, 0x4e, 0xdd, 0xf4, 0x85, 0x2f, 0x06, 0x6d, 0x8b, 0xf4, 0xe7, 0x81,
+  0xa6, 0xe7, 0xfa, 0x3c, 0x50, 0xa0, 0xc3, 0x76, 0x2f, 0x8e, 0x0f, 0x8e,
+  0xde, 0x1c, 0x5b, 0x40, 0x95, 0xdc, 0x23, 0xd4, 0xe8, 0x4d, 0xc6, 0x95,
+  0x69, 0x9c, 0xe9, 0x93, 0xef, 0x2a, 0x5e, 0x7c, 0xfa, 0x86, 0xcb, 0x2d,
+  0xb4, 0x77, 0xe7, 0x37, 0x0a, 0xcf, 0x0e, 0xae, 0xd2, 0x6d, 0x69, 0xdd,
+  0xfa, 0x8b, 0xdd, 0x92, 0x58, 0x64, 0x92, 0xca, 0x6f, 0xa2, 0xc6, 0x42,
+  0xfd, 0xfd, 0x6c, 0x67, 0x67, 0xe7, 0x91, 0x79, 0xc0, 0xd0, 0xa8, 0xb7,
+  0x00, 0x4d, 0x65, 0x9f, 0x1f, 0xdf, 0xf6, 0xed, 0x1b, 0x65, 0x86, 0x66,
+  0x5b, 0xfe, 0x73, 0x2e, 0x8a, 0x77, 0x5a, 0x26, 0xed, 0x83, 0x1e, 0x67,
+  0x99, 0xdb, 0x83, 0xca, 0xf2, 0x4c, 0x18, 0xc3, 0x26, 0x2d, 0x03, 0x0c,
+  0x34, 0x1b, 0xfa, 0x24, 0x05, 0xfb, 0x89, 0xf3, 0x55, 0xbd, 0x49, 0xfe,
+  0x86, 0xda, 0xe4, 0x1f, 0x83, 0x2c, 0xbf, 0xde, 0x9e, 0xed, 0xe3, 0x92,
+  0xa5, 0x87, 0x5e, 0x27, 0xa8, 0xe9, 0x73, 0x9f, 0xb9, 0xd0, 0xa3, 0x82,
+  0x97, 0x96, 0xa3, 0x1c, 0x3f, 0x62, 0x5c, 0xbf, 0x60, 0x1d, 0xb0, 0x9d,
+  0x5c, 0x3b, 0x56, 0x66, 0x6e, 0xe1, 0x18, 0x2d, 0x9d, 0x14, 0xbc, 0x65,
+  0x6c, 0x66, 0x1a, 0x10, 0x0b, 0xa1, 0x5e, 0xe8, 0x73, 0x21, 0x12, 0xfa,
+  0x35, 0x27, 0xa2, 0x19, 0x94, 0x0f, 0x25, 0xbf, 0xc5, 0xce, 0x5a, 0xb5,
+  0x16, 0x03, 0x92, 0x8a, 0x58, 0x56, 0x9e, 0x91, 0x8c, 0x1e, 0x4b, 0xfa,
+  0xcd, 0x10, 0x61, 0xed, 0x41, 0x34, 0x1a, 0x42, 0xdd, 0xb9, 0xe1, 0x7a,
+  0x9f, 0xfd, 0x3e, 0x28, 0xa8, 0x70, 0xf4, 0xf2, 0x11, 0x9d, 0x07, 0x93,
+  0x92, 0xd5, 0x9f, 0xeb, 0xc5, 0x11, 0x50, 0xcf, 0x90, 0x46, 0xd1, 0xe8,
+  0x0b, 0x00, 0x4a, 0x39, 0x82, 0xde, 0x0a, 0xe9, 0x0e, 0x05, 0x69, 0x06,
+  0x89, 0x14, 0xa1, 0x42, 0x5f, 0xb4, 0x27, 0xdb, 0x88, 0xc6, 0xf9, 0xe8,
+  0x9e, 0x0e, 0xcf, 0x5d, 0x7d, 0x1b, 0x5a, 0x81, 0x3b, 0x5e, 0x82, 0xdb,
+  0x04, 0xb3, 0x0f, 0x65, 0xdd, 0x47, 0x06, 0xb3, 0x4f, 0xab, 0xc0, 0x6f,
+  0xfc, 0xf7, 0xf6, 0xa0, 0x28, 0x6e, 0xb6, 0xd3, 0xc9, 0xfb, 0x49, 0x11,
+  0xd3, 0x67, 0xc4, 0xd7, 0x1a, 0x1f, 0x0f, 0xe8, 0xc3, 0xe8, 0x2f, 0xae,
+  0xa9, 0xff, 0xa7, 0x18, 0xb7, 0x4f, 0xe3, 0xbf, 0xb7, 0x19, 0xd5, 0x0b,
+  0xc8, 0xc3, 0xc1, 0xaa, 0xb5, 0xb0, 0x0e, 0x9a, 0x92, 0x00, 0xc8, 0xd1,
+  0x59, 0x6c, 0x27, 0x8b, 0xfe, 0x75, 0xd4, 0x51, 0x5a, 0xfb, 0x71, 0x6f,
+  0x67, 0x67, 0x77, 0x7f, 0xf7, 0xb3, 0x17, 0x3b, 0xfb, 0xbb, 0xbb, 0xbb,
+  0x7b, 0xfb, 0xbb, 0xfb, 0xfb, 0x7b, 0x3b, 0x3f, 0x6d, 0x77, 0x36, 0x36,
+  0x8e, 0xce, 0xbe, 0x7b, 0x7b, 0x7a, 0x76, 0x70, 0x14, 0x5d, 0x9e, 0x91,
+  0xb2, 0xcb, 0x86, 0x8a, 0x96, 0x63, 0x0e, 0x38, 0xa7, 0x32, 0x93, 0x6b,
+  0x2d, 0x0e, 0x6a, 0x6f, 0x34, 0xba, 0xcc, 0x20, 0x11, 0xf3, 0x4b, 0x83,
+  0x9b, 0x72, 0xf6, 0x61, 0xde, 0xf5, 0x31, 0x9d, 0xf4, 0x24, 0x24, 0xcc,
+  0x2b, 0x3d, 0x41, 0xd9, 0xfb, 0xc4, 0x8a, 0xec, 0xb9, 0x6a, 0xe2, 0xf0,
+  0xb0, 0xb9, 0x90, 0xc0, 0x4d, 0xf1, 0x4b, 0xfb, 0xa0, 0x49, 0xa9, 0x3a,
+  0x52, 0x54, 0xa3, 0x19, 0x5c, 0x15, 0x00, 0x75, 0x5a, 0x4a, 0xc5, 0x75,
+  0x12, 0x06, 0xb6, 0x1a, 0x13, 0x3c, 0x5b, 0x3b, 0x25, 0xba, 0x75, 0x92,
+  0x07, 0xcc, 0xba, 0xca, 0x23, 0x04, 0xa2, 0xcc, 0xcf, 0x0e, 0xd0, 0x44,
+  0xa6, 0xc6, 0xa5, 0xb9, 0x0d, 0x19, 0xbe, 0xeb, 0x96, 0xee, 0xb8, 0x1f,
+  0x63, 0x1d, 0xbe, 0x0b, 0xfe, 0x26, 0xbc, 0x71, 0xb6, 0x9d, 0xed, 0x49,
+  0x06, 0xf0, 0x6e, 0x78, 0xf2, 0xf6, 0x2b, 0x38, 0x97, 0xbe, 0x3b, 0xbb,
+  0x38, 0x1a, 0x52, 0xb3, 0x7c, 0x15, 0x6f, 0xc0, 0xfc, 0xc0, 0x27, 0x56,
+  0x47, 0x25, 0xf4, 0xcf, 0x5d, 0xff, 0x09, 0xea, 0xc6, 0xa4, 0xe7, 0xf2,
+  0x0e, 0x30, 0xcc, 0x40, 0x54, 0xe4, 0x7c, 0x82, 0x76, 0xee, 0x86, 0xa3,
+  0x20, 0xaf, 0x7f, 0x31, 0x8b, 0x19, 0xe5, 0x35, 0x19, 0x08, 0x5c, 0x1a,
+  0xc2, 0x08, 0xb6, 0x19, 0x2f, 0x65, 0x9b, 0x45, 0xd6, 0xed, 0x32, 0x03,
+  0x9f, 0x40, 0x2b, 0x59, 0xee, 0x90, 0x71, 0x2b, 0x2b, 0xc2, 0x07, 0xec,
+  0x6a, 0x1a, 0x5f, 0xa3, 0xc3, 0xe6, 0xd9, 0x0b, 0x3a, 0xd3, 0xee, 0x3f,
+  0xb6, 0x4b, 0x14, 0xe3, 0xe3, 0xf6, 0x4e, 0x40, 0x00, 0x48, 0x63, 0x47,
+  0x92, 0x84, 0x5a, 0xc5, 0x45, 0x3c, 0x42, 0xf1, 0x18, 0xf6, 0xaf, 0x73,
+  0x85, 0x8b, 0x3a, 0x84, 0xaf, 0x56, 0x9e, 0xdc, 0x10, 0x8b, 0x42, 0x3f,
+  0xc8, 0x89, 0x12, 0xb1, 0x1e, 0x25, 0xe2, 0xbc, 0xf6, 0x5c, 0x20, 0x18,
+  0x1e, 0x7d, 0x22, 0xcb, 0x0b, 0xca, 0xa2, 0x2c, 0x39, 0x0f, 0x86, 0xc6,
+  0x1e, 0x49, 0x38, 0x0c, 0x27, 0xfe, 0xa8, 0xbc, 0xd6, 0x61, 0xfc, 0xe4,
+  0x74, 0x9c, 0x96, 0x1d, 0xcb, 0x30, 0xf2, 0x88, 0x5a, 0xde, 0xfb, 0x55,
+  0x94, 0x34, 0x94, 0x98, 0xae, 0x0e, 0x2d, 0x27, 0xa2, 0x19, 0xb7, 0xd9,
+  0x6c, 0x26, 0xa9, 0x98, 0x1d, 0xce, 0x3e, 0xf1, 0xad, 0xa4, 0x9a, 0x48,
+  0xe5, 0x0a, 0x66, 0x30, 0x93, 0xe5, 0xde, 0x25, 0xf7, 0x43, 0x42, 0xf1,
+  0x8d, 0x9f, 0x7b, 0xa3, 0x0f, 0xf3, 0x62, 0x12, 0x37, 0x89, 0x51, 0x0a,
+  0xe5, 0x68, 0x40, 0x7f, 0x00, 0xd9, 0x5f, 0x59, 0xb6, 0xb0, 0x2c, 0x49,
+  0x83, 0xa5, 0x56, 0xf3, 0x42, 0x36, 0x10, 0x05, 0xec, 0x32, 0x99, 0x82,
+  0xe5, 0xd1, 0x4a, 0x79, 0xee, 0x55, 0xde, 0x8b, 0xb4, 0x2c, 0x92, 0xe9,
+  0x95, 0x56, 0x97, 0xd3, 0x82, 0x6e, 0xa3, 0x55, 0xd0, 0xc0, 0x86, 0x81,
+  0x84, 0xb2, 0xcf, 0x66, 0xee, 0xd2, 0x61, 0x32, 0xe5, 0x19, 0xd7, 0x60,
+  0x9c, 0x0a, 0xcd, 0x5d, 0x65, 0x14, 0xe2, 0x96, 0x19, 0x18, 0x76, 0xed,
+  0x46, 0xe4, 0x90, 0x77, 0x6b, 0x53, 0x70, 0x30, 0x6f, 0xc0, 0xda, 0x02,
+  0x75, 0x04, 0x0f, 0x2e, 0x47, 0xb4, 0xda, 0xee, 0x39, 0x5e, 0x3b, 0x36,
+  0x70, 0x63, 0xd5, 0x0e, 0xc3, 0x7a, 0x29, 0x82, 0x2f, 0x68, 0x38, 0x7d,
+  0x7e, 0x50, 0x34, 0x40, 0x58, 0xc4, 0xe9, 0xa0, 0x21, 0x52, 0x75, 0x59,
+  0xb8, 0x15, 0x05, 0x3c, 0x77, 0xec, 0xaa, 0x02, 0xb5, 0x1d, 0x43, 0xe5,
+  0x48, 0xeb, 0xcf, 0xe1, 0x87, 0x8f, 0x60, 0x73, 0x48, 0x26, 0xf1, 0x4f,
+  0x57, 0x72, 0x4a, 0xd2, 0xf9, 0xe3, 0x87, 0x51, 0x07, 0xf1, 0x51, 0x1d,
+  0x63, 0xae, 0x9a, 0x94, 0x04, 0x53, 0xa8, 0x0f, 0x91, 0x11, 0xef, 0x2b,
+  0xc2, 0xec, 0x5b, 0x60, 0x3c, 0x2b, 0x38, 0x8d, 0x38, 0x08, 0x12, 0xe3,
+  0xbb, 0x1f, 0x7d, 0x19, 0x17, 0xe9, 0xb8, 0x17, 0x1d, 0xa5, 0x24, 0xa8,
+  0x97, 0x3d, 0x0f, 0xb6, 0xe8, 0x20, 0x2a, 0x07, 0xd1, 0x77, 0x56, 0xf6,
+  0x93, 0xee, 0x5c, 0x04, 0x9e, 0xc2, 0xae, 0xe8, 0xb2, 0xd4, 0x36, 0xc4,
+  0x60, 0xab, 0x26, 0xd7, 0x30, 0x23, 0x0c, 0x6d, 0x7b, 0x1c, 0x39, 0x6c,
+  0x66, 0x5c, 0xdc, 0x56, 0x11, 0xd4, 0x45, 0xa4, 0x2a, 0xd8, 0x70, 0xc8,
+  0xf2, 0x0f, 0xd6, 0x77, 0xae, 0x15, 0x2c, 0x94, 0xe6, 0xb2, 0xb9, 0x45,
+  0x27, 0x79, 0x2f, 0xaa, 0x1a, 0x72, 0x0a, 0x8d, 0x99, 0x31, 0x37, 0x2f,
+  0x6e, 0x23, 0x3b, 0xae, 0x1b, 0x88, 0x2b, 0xa7, 0x75, 0xe2, 0x15, 0x51,
+  0x7e, 0x72, 0x76, 0x79, 0xfc, 0xbb, 0x68, 0x98, 0x72, 0x01, 0x45, 0x47,
+  0x39, 0x7c, 0xc8, 0xd9, 0xd3, 0xad, 0x2e, 0xa8, 0xc6, 0x9e, 0xba, 0x1c,
+  0x55, 0xb5, 0x09, 0x5a, 0x22, 0x84, 0xd4, 0xc5, 0xb9, 0x97, 0xba, 0xe4,
+  0xbc, 0x32, 0xa0, 0xd9, 0xbb, 0x34, 0x8e, 0x5c, 0x65, 0x6a, 0x9e, 0xfb,
+  0x7b, 0x26, 0xfd, 0xf7, 0x1e, 0x3b, 0x7c, 0xa9, 0x2f, 0x02, 0xd9, 0x8d,
+  0xdb, 0x51, 0x83, 0x00, 0x0c, 0x29, 0xe3, 0x34, 0xa7, 0x2b, 0x98, 0xf9,
+  0xd4, 0x58, 0x6c, 0x80, 0x08, 0x70, 0xc3, 0xd8, 0xd9, 0xc6, 0x11, 0x8f,
+  0x88, 0xae, 0xb0, 0x5c, 0x63, 0xe4, 0xc2, 0x09, 0xee, 0xb7, 0xda, 0x15,
+  0xed, 0xdc, 0x85, 0xac, 0x14, 0xd9, 0xa0, 0xc8, 0xa9, 0x43, 0xe9, 0x0d,
+  0xc5, 0x16, 0xdc, 0x40, 0xd0, 0x18, 0xb5, 0x0a, 0x59, 0x62, 0xee, 0x6e,
+  0xb6, 0x40, 0xb0, 0xe3, 0x98, 0x1e, 0xa6, 0xd3, 0x49, 0x34, 0x5b, 0x69,
+  0xbe, 0xb3, 0xf2, 0x61, 0x4e, 0xd0, 0x81, 0xae, 0xf2, 0xd9, 0x67, 0x8d,
+  0x7b, 0xf7, 0xc1, 0x3d, 0xbd, 0x4f, 0x5f, 0x07, 0x3a, 0xd1, 0x94, 0x1d,
+  0x8e, 0x56, 0xe3, 0xc7, 0x2b, 0x46, 0x0d, 0x81, 0x33, 0xcc, 0x61, 0x94,
+  0x0e, 0x9d, 0xf1, 0xb0, 0x65, 0x5f, 0x5c, 0x19, 0xa3, 0x0d, 0x91, 0xb8,
+  0x65, 0x9c, 0x71, 0x21, 0x6e, 0xeb, 0x35, 0x22, 0xa8, 0x9d, 0xbc, 0xfa,
+  0x60, 0x03, 0x01, 0x85, 0x84, 0xa4, 0x01, 0xcb, 0x34, 0x2c, 0x6f, 0x0d,
+  0x33, 0x6d, 0x98, 0x13, 0x4e, 0x74, 0x30, 0x0e, 0x8c, 0xb0, 0x7a, 0xd6,
+  0x06, 0x0e, 0x0b, 0xdf, 0xdd, 0x18, 0xfd, 0x77, 0xeb, 0x87, 0xf3, 0xee,
+  0x9f, 0x19, 0xce, 0x41, 0xf4, 0x68, 0xa4, 0x9f, 0x16, 0x36, 0x60, 0x26,
+  0x52, 0xe8, 0x49, 0x9d, 0x64, 0xb0, 0x06, 0x19, 0xfd, 0xc9, 0x1a, 0x8d,
+  0xd9, 0x03, 0x30, 0xaa, 0x82, 0x48, 0x36, 0x75, 0x95, 0x79, 0x26, 0x4f,
+  0x43, 0x7e, 0xe4, 0xf6, 0x7b, 0x36, 0x94, 0x8f, 0x1d, 0xae, 0x25, 0xb9,
+  0x5b, 0xa8, 0xaa, 0xef, 0x4f, 0xd2, 0xaf, 0xa4, 0x85, 0x20, 0xe0, 0x5f,
+  0xa0, 0xc5, 0xe5, 0x79, 0x06, 0x15, 0x7f, 0x40, 0xd4, 0x06, 0x0d, 0xd6,
+  0xd7, 0x86, 0xe3, 0x99, 0x20, 0x2d, 0xaa, 0xf6, 0x9a, 0x7e, 0xb6, 0x2b,
+  0x38, 0x4c, 0xc4, 0x1e, 0x15, 0xf4, 0x8e, 0x94, 0x4c, 0xba, 0xac, 0x16,
+  0x88, 0x3d, 0xac, 0xd6, 0xe1, 0x92, 0x7b, 0x45, 0xaa, 0xc9, 0x63, 0xe5,
+  0x82, 0x22, 0xd5, 0xa8, 0xe8, 0x25, 0x63, 0x94, 0x82, 0xc5, 0x5a, 0xe7,
+  0x44, 0xaa, 0xa7, 0xe2, 0x9e, 0x4f, 0x12, 0x69, 0xa9, 0x5c, 0x1b, 0x03,
+  0x7c, 0x18, 0x30, 0x5e, 0x21, 0x67, 0xb0, 0xef, 0xe8, 0x6a, 0x99, 0x23,
+  0x36, 0x43, 0x53, 0xd1, 0x35, 0x93, 0x90, 0x1a, 0xbd, 0x38, 0x78, 0xfb,
+  0xd5, 0x31, 0xce, 0x3b, 0xb3, 0x5d, 0x9f, 0x37, 0xcb, 0x89, 0x71, 0x7d,
+  0x78, 0x8a, 0x0b, 0x41, 0xea, 0x48, 0xf9, 0x8d, 0xc9, 0x72, 0xcc, 0x4e,
+  0xea, 0x77, 0x7a, 0x0c, 0xd2, 0x02, 0x00, 0x9c, 0xd3, 0x94, 0x07, 0xc1,
+  0x2c, 0x57, 0xfd, 0xc1, 0x1b, 0x91, 0xe9, 0xa6, 0xe0, 0x18, 0x2c, 0xd2,
+  0xd0, 0x0a, 0x41, 0x91, 0x2d, 0x96, 0xa3, 0x45, 0xac, 0xf9, 0x59, 0x71,
+  0x98, 0xf2, 0xa3, 0x9a, 0xc0, 0xa0, 0x32, 0x05, 0xbe, 0x3b, 0x24, 0x1a,
+  0xd2, 0x49, 0x9d, 0x39, 0xa4, 0xce, 0x41, 0xa8, 0x71, 0x09, 0xf0, 0xd1,
+  0xee, 0xce, 0x8e, 0x07, 0xd3, 0xf1, 0xa9, 0x4b, 0x0d, 0x22, 0xcb, 0xa3,
+  0x9d, 0xfe, 0x8b, 0x17, 0xeb, 0xe8, 0xc7, 0x35, 0x8a, 0x14, 0x94, 0x67,
+  0x1f, 0xdd, 0x66, 0x9f, 0x1f, 0x5d, 0xd7, 0x66, 0x8b, 0x6c, 0x81, 0xfa,
+  0x1b, 0xea, 0x8b, 0x2f, 0x5c, 0xc0, 0x87, 0xea, 0x20, 0x62, 0xf8, 0x82,
+  0x21, 0x72, 0xee, 0x04, 0x0c, 0x5e, 0xca, 0x8d, 0xc8, 0x49, 0x02, 0xc0,
+  0x86, 0x32, 0x75, 0x65, 0xc1, 0xee, 0xf8, 0xd4, 0xd9, 0x67, 0x3f, 0x6a,
+  0x61, 0x02, 0x11, 0x73, 0xcd, 0x12, 0x5d, 0x35, 0x67, 0xa3, 0xf6, 0xab,
+  0x88, 0x34, 0x97, 0x73, 0x56, 0x47, 0x49, 0x7b, 0x11, 0x91, 0x9d, 0xe4,
+  0x4f, 0xd8, 0x25, 0xb6, 0x6b, 0xd2, 0xe8, 0x3b, 0xad, 0x4d, 0xc7, 0x75,
+  0x05, 0xd8, 0x35, 0x23, 0x68, 0xc4, 0xe9, 0x5c, 0x8b, 0xc4, 0xb9, 0xfd,
+  0x5f, 0xa3, 0x1a, 0x5f, 0x46, 0xfd, 0x80, 0xa9, 0x2b, 0xe4, 0x0e, 0x73,
+  0xf4, 0xd9, 0xca, 0xa4, 0x14, 0xed, 0x01, 0xad, 0x9b, 0x9d, 0xab, 0x52,
+  0xac, 0xb7, 0xa7, 0xa2, 0x25, 0x68, 0xa8, 0xc1, 0xd4, 0x5b, 0xba, 0x94,
+  0x6e, 0x70, 0x49, 0xd4, 0x58, 0xf8, 0xc7, 0x0d, 0x25, 0x6e, 0x29, 0xbb,
+  0x69, 0x72, 0x6c, 0xca, 0xe9, 0x8f, 0xaa, 0x9f, 0xd4, 0x55, 0x65, 0x45,
+  0x63, 0xe4, 0x07, 0x71, 0x82, 0xb2, 0xfd, 0x8d, 0xe8, 0x5f, 0x1d, 0xdc,
+  0x23, 0xc3, 0xe2, 0xf3, 0x69, 0xf5, 0xd4, 0x6b, 0xc3, 0x6c, 0xb5, 0x19,
+  0x5c, 0xca, 0xfb, 0xd2, 0x75, 0xdc, 0xde, 0x9d, 0xbc, 0x6f, 0xeb, 0xd1,
+  0x42, 0xf7, 0x7c, 0xf3, 0x2b, 0x0e, 0x93, 0x8b, 0xf6, 0x36, 0x1c, 0x09,
+  0x56, 0x50, 0xc0, 0x30, 0xd2, 0x2a, 0x13, 0xdf, 0x88, 0x34, 0x67, 0x02,
+  0x28, 0x4d, 0x4c, 0x38, 0x00, 0x91, 0x05, 0x7b, 0xbb, 0x45, 0x34, 0xc5,
+  0x95, 0xa2, 0x53, 0xa0, 0xe8, 0xc8, 0x09, 0x32, 0x51, 0xd8, 0x65, 0xe2,
+  0xc1, 0x3e, 0xf2, 0xe5, 0x5c, 0x66, 0x01, 0x87, 0x03, 0x0d, 0x3e, 0x2e,
+  0x6e, 0xe0, 0x64, 0x77, 0x3a, 0x52, 0xf3, 0x32, 0x0a, 0x01, 0x2b, 0xe8,
+  0xf6, 0x91, 0xab, 0x07, 0x8c, 0xb5, 0xb2, 0x14, 0xd5, 0x15, 0x08, 0x54,
+  0x8a, 0x8f, 0x25, 0x7d, 0xe6, 0x1a, 0xad, 0xc6, 0x52, 0x50, 0x7f, 0xa3,
+  0x7c, 0x61, 0x8d, 0xe6, 0xaa, 0x2a, 0x99, 0xb4, 0x25, 0xd2, 0x0c, 0x34,
+  0x20, 0xd4, 0x7c, 0x43, 0x7a, 0x6d, 0x6d, 0x09, 0x21, 0xce, 0x02, 0xb4,
+  0x40, 0xd2, 0x6d, 0x8d, 0xd3, 0x6a, 0x16, 0x09, 0xf4, 0x50, 0x0f, 0x75,
+  0xa3, 0x79, 0x37, 0x8c, 0x77, 0x2f, 0x41, 0x7e, 0xb0, 0xe0, 0x33, 0xca,
+  0x78, 0x26, 0x7d, 0x62, 0x86, 0x32, 0x40, 0x49, 0x6a, 0x91, 0xc0, 0xaa,
+  0xe1, 0xa5, 0x2b, 0x43, 0x6e, 0xa2, 0xe0, 0xb7, 0xc7, 0x17, 0x5f, 0x9e,
+  0x0d, 0x8f, 0x89, 0x45, 0x1c, 0x1d, 0x7f, 0xf9, 0x8e, 0xd9, 0x07, 0xef,
+  0x98, 0xd8, 0x29, 0x80, 0xcb, 0x20, 0x08, 0xca, 0x48, 0x26, 0x72, 0x62,
+  0xb2, 0xe4, 0x44, 0xf6, 0x8c, 0x32, 0x34, 0xa6, 0x4b, 0x05, 0xe9, 0x69,
+  0x22, 0x8a, 0x6d, 0x8a, 0x68, 0x3a, 0x0f, 0x59, 0xc2, 0xe2, 0xf3, 0x9c,
+  0xf1, 0x83, 0x4b, 0xc3, 0xe8, 0x30, 0xfc, 0xda, 0x62, 0xdf, 0x8b, 0xc7,
+  0x77, 0x62, 0xc6, 0xd0, 0x03, 0xe1, 0x2b, 0xe4, 0x58, 0x25, 0x9c, 0x41,
+  0x50, 0xe6, 0x56, 0xa1, 0xa9, 0xa7, 0x99, 0x5c, 0x60, 0x9c, 0x46, 0x84,
+  0xc3, 0x0c, 0xcc, 0xf5, 0x14, 0x15, 0xf5, 0x14, 0x5b, 0x52, 0xeb, 0xd2,
+  0x14, 0x42, 0x70, 0xc4, 0x67, 0x24, 0x05, 0x63, 0xaa, 0x9c, 0x19, 0x6c,
+  0xa8, 0x48, 0x24, 0x61, 0x59, 0x2e, 0x50, 0x35, 0xf3, 0x4b, 0xd0, 0x8a,
+  0x42, 0x26, 0x6e, 0xf2, 0x91, 0x60, 0xc8, 0x00, 0x51, 0x18, 0x04, 0x1b,
+  0x58, 0x6a, 0xb7, 0x38, 0x70, 0x29, 0x5e, 0xf9, 0xc0, 0xf3, 0xa5, 0xa4,
+  0x73, 0xb7, 0x9e, 0x1d, 0x5c, 0xca, 0x4c, 0x39, 0xb9, 0x54, 0xee, 0x64,
+  0x57, 0x2d, 0x1b, 0x7e, 0x24, 0x9f, 0x19, 0xc5, 0x81, 0x39, 0x0e, 0x25,
+  0x4d, 0xce, 0x13, 0x87, 0xc6, 0x05, 0x42, 0xf0, 0xfa, 0x62, 0x2f, 0x66,
+  0x6a, 0xd1, 0x70, 0x9e, 0x7a, 0x4e, 0xb4, 0x7a, 0xbb, 0x79, 0x4b, 0x61,
+  0x3f, 0x8a, 0xea, 0x35, 0x3d, 0xf5, 0x0c, 0x4a, 0xeb, 0x52, 0xe7, 0xa5,
+  0x7c, 0x28, 0x43, 0x2b, 0x1b, 0xf1, 0xc6, 0x8d, 0xa3, 0xe3, 0xcb, 0x83,
+  0x93, 0xd3, 0xe3, 0xa3, 0xe8, 0xe4, 0xed, 0xeb, 0xb3, 0x8b, 0x37, 0x07,
+  0x97, 0xea, 0x65, 0x3a, 0x72, 0x7a, 0xaa, 0xab, 0x55, 0xe2, 0xcc, 0x00,
+  0x5e, 0x87, 0x05, 0x0d, 0xd3, 0x36, 0x5e, 0x2b, 0x62, 0x90, 0xac, 0x43,
+  0x52, 0x59, 0x84, 0x8d, 0x48, 0xbd, 0x53, 0xbe, 0xfa, 0x08, 0xdf, 0xd1,
+  0xdb, 0xce, 0xa3, 0x30, 0xb0, 0xf5, 0x34, 0x2d, 0x13, 0xe0, 0x5f, 0x8f,
+  0x36, 0xe5, 0x2a, 0x6d, 0xc9, 0xed, 0x04, 0x50, 0x7a, 0xa4, 0xc1, 0x80,
+  0x28, 0xfb, 0x27, 0x9c, 0xdc, 0x0a, 0x11, 0x53, 0x4b, 0x96, 0x9f, 0x94,
+  0xae, 0x52, 0x1f, 0xd3, 0x0b, 0xb7, 0x13, 0xa4, 0x57, 0x11, 0x09, 0xa2,
+  0x24, 0x70, 0xd0, 0xa6, 0xcb, 0x54, 0xb2, 0xf2, 0x22, 0xe2, 0xd3, 0xc4,
+  0x27, 0xe1, 0x06, 0x73, 0x2a, 0xd7, 0x06, 0xbb, 0x6d, 0x4b, 0x2d, 0x7c,
+  0xf1, 0x50, 0x26, 0xf3, 0x82, 0x8b, 0x3c, 0xd9, 0x61, 0xe7, 0x57, 0x3c,
+  0x17, 0x35, 0x5b, 0xae, 0x22, 0x1a, 0x86, 0x4d, 0x6d, 0x3a, 0x2f, 0x04,
+  0x49, 0x2f, 0xfd, 0x13, 0x85, 0x31, 0xe3, 0xb5, 0xe0, 0x82, 0xbe, 0xfc,
+  0x73, 0xee, 0xf3, 0xfa, 0x35, 0x4c, 0xc3, 0x2b, 0x2d, 0x41, 0x51, 0x23,
+  0x3d, 0x6e, 0xfe, 0xe0, 0x16, 0x46, 0x6a, 0x47, 0xf4, 0x10, 0x57, 0x88,
+  0xec, 0x6b, 0xf7, 0x1a, 0x27, 0x05, 0x7d, 0xd8, 0xb6, 0x50, 0x04, 0x28,
+  0x88, 0x01, 0xa3, 0x4c, 0x90, 0x4a, 0xb0, 0x06, 0x32, 0x0f, 0x10, 0x78,
+  0x69, 0x86, 0x63, 0x16, 0xf3, 0xbd, 0xad, 0xd7, 0x55, 0x60, 0x6a, 0x94,
+  0xba, 0x76, 0xd5, 0xbf, 0x86, 0xee, 0x59, 0xac, 0x64, 0xf0, 0x42, 0xec,
+  0x1d, 0xaf, 0x58, 0xff, 0x4d, 0x03, 0x2e, 0x67, 0x9a, 0xd5, 0x06, 0xd5,
+  0x7b, 0xd0, 0x34, 0x55, 0x57, 0x26, 0x15, 0xbe, 0x58, 0x75, 0x55, 0x86,
+  0xac, 0xde, 0xba, 0xc6, 0xe8, 0x27, 0x6d, 0x23, 0x50, 0x36, 0x8e, 0xda,
+  0x9d, 0x5a, 0xa9, 0x2b, 0x86, 0xcb, 0x8e, 0xe1, 0x1a, 0x36, 0x14, 0x91,
+  0x41, 0x59, 0x25, 0xcc, 0xa7, 0x61, 0x22, 0xee, 0x98, 0x8b, 0x47, 0x71,
+  0x01, 0x4e, 0x2d, 0x16, 0x17, 0x04, 0x93, 0x8b, 0x4b, 0x5d, 0x61, 0x45,
+  0xc1, 0xf5, 0xe6, 0x1b, 0x06, 0x8c, 0x68, 0x2f, 0x59, 0xa0, 0x00, 0xd8,
+  0xbf, 0x24, 0x64, 0x83, 0xcb, 0xb3, 0x3f, 0x33, 0x89, 0x0b, 0xd8, 0x19,
+  0x11, 0x53, 0x2a, 0x97, 0x06, 0x48, 0x00, 0x73, 0x75, 0xa6, 0x4b, 0xdc,
+  0x3e, 0xbe, 0x66, 0x70, 0x5f, 0x70, 0x2b, 0x62, 0x4e, 0x2b, 0xb3, 0x43,
+  0x21, 0xd1, 0x6d, 0xae, 0x15, 0x2b, 0x2a, 0x4f, 0xcd, 0x20, 0x44, 0x49,
+  0x63, 0x36, 0xce, 0xb3, 0x42, 0xce, 0x1b, 0xa4, 0xed, 0x8e, 0x2f, 0xed,
+  0xd0, 0x59, 0xdc, 0x50, 0x1f, 0x9d, 0xe8, 0x9a, 0xf5, 0x95, 0x51, 0x16,
+  0x06, 0xbc, 0xe9, 0xb6, 0x4c, 0xe4, 0xf1, 0x57, 0x17, 0xf1, 0x55, 0x9c,
+  0x4c, 0x7f, 0xbf, 0xb7, 0x33, 0x8c, 0xaf, 0x97, 0xd3, 0xf8, 0x0f, 0x78,
+  0xf1, 0xd5, 0x93, 0x27, 0x7b, 0x3b, 0x9f, 0x7e, 0xb6, 0xd3, 0x09, 0x7c,
+  0x45, 0x35, 0x47, 0x33, 0xfc, 0x86, 0xa8, 0xc5, 0xcc, 0x8c, 0x17, 0xfd,
+  0x0c, 0xc6, 0xd7, 0x29, 0x77, 0xf3, 0x35, 0x4b, 0x2f, 0xba, 0x06, 0x31,
+  0x22, 0x22, 0x84, 0x4f, 0x6a, 0xd1, 0x27, 0xba, 0x72, 0x89, 0xae, 0x3f,
+  0xd9, 0xdd, 0x17, 0x56, 0x76, 0x0d, 0xdb, 0x54, 0x2c, 0x14, 0x1b, 0xbd,
+  0x4c, 0xe7, 0x74, 0x05, 0x7d, 0x1e, 0x95, 0xf1, 0xb5, 0xa3, 0x55, 0xb4,
+  0xe0, 0xca, 0x34, 0x9b, 0x35, 0xfc, 0x2a, 0x45, 0xc1, 0xe0, 0x41, 0xb4,
+  0x79, 0x29, 0x98, 0x69, 0x90, 0x7c, 0x16, 0x49, 0x3e, 0x95, 0x74, 0xd7,
+  0x78, 0x66, 0x31, 0x97, 0xfc, 0x3e, 0x7b, 0xe3, 0x07, 0x8b, 0xa9, 0x2b,
+  0x4a, 0x0d, 0x2d, 0x2c, 0xf5, 0x04, 0x37, 0x5d, 0x14, 0xbe, 0x08, 0x92,
+  0xdc, 0x37, 0x21, 0x1a, 0x1b, 0x2d, 0x16, 0x4a, 0x3c, 0x74, 0x30, 0xab,
+  0x9e, 0xab, 0xa6, 0xd2, 0x9f, 0xd8, 0x4c, 0x07, 0xf8, 0x1d, 0xa5, 0xe6,
+  0xb4, 0x62, 0x6e, 0x67, 0x21, 0x09, 0x42, 0xae, 0x82, 0x87, 0xe6, 0x13,
+  0x57, 0xe6, 0x15, 0x97, 0x7e, 0x63, 0x5e, 0x9a, 0xa2, 0xbb, 0xfb, 0xf9,
+  0x2b, 0x10, 0xc4, 0xee, 0xe7, 0x7f, 0x70, 0x9f, 0xed, 0xe9, 0x67, 0x7b,
+  0x9f, 0xff, 0x61, 0x30, 0xc0, 0xf8, 0x98, 0x42, 0xba, 0xf6, 0x75, 0x57,
+  0xb3, 0x0e, 0x63, 0x3d, 0xc2, 0xf2, 0x97, 0x83, 0xde, 0x91, 0xbd, 0xee,
+  0x58, 0xcf, 0xe1, 0x2a, 0xf7, 0xd4, 0xfe, 0xee, 0xf8, 0x56, 0x6a, 0x68,
+  0xc4, 0x80, 0xf5, 0x2c, 0xda, 0x16, 0xdd, 0x99, 0x09, 0xd1, 0x4e, 0xe1,
+  0x30, 0x4b, 0xe2, 0xe8, 0x8f, 0x4c, 0xa9, 0x7f, 0xdc, 0x88, 0xd4, 0x4c,
+  0xce, 0xdb, 0x81, 0x9a, 0x83, 0x91, 0x91, 0xad, 0x14, 0x8e, 0x17, 0xcc,
+  0x37, 0x6e, 0x99, 0xc3, 0x2c, 0xf9, 0x12, 0x0c, 0xaa, 0x58, 0xfc, 0x49,
+  0x71, 0x7f, 0x64, 0xc3, 0x99, 0x9f, 0x21, 0xa1, 0x41, 0xd2, 0x82, 0x48,
+  0xc4, 0x28, 0x99, 0x37, 0xe0, 0xc9, 0xdf, 0x7f, 0xff, 0xbd, 0xca, 0x53,
+  0xf4, 0x8b, 0x8e, 0xfb, 0x86, 0x38, 0xd1, 0x84, 0x98, 0xdb, 0x0c, 0xb5,
+  0x12, 0xb4, 0xec, 0x88, 0xde, 0xf8, 0x57, 0x3a, 0x4f, 0x69, 0x84, 0x36,
+  0x56, 0x8a, 0xf4, 0xf2, 0xc8, 0xb0, 0xa4, 0xc7, 0xc2, 0xc4, 0x40, 0x99,
+  0x9b, 0x70, 0x07, 0xfa, 0x58, 0x8b, 0x90, 0xf0, 0x79, 0xe7, 0xb0, 0xe9,
+  0xa0, 0x7d, 0x6a, 0xcc, 0x54, 0x61, 0xdd, 0x48, 0x50, 0xac, 0x08, 0x39,
+  0xaf, 0x3a, 0xf2, 0xe0, 0x75, 0xda, 0x51, 0x23, 0xaf, 0x7c, 0xd2, 0xf1,
+  0x49, 0xa4, 0xb2, 0x1b, 0xd8, 0xb2, 0x57, 0x22, 0x39, 0xa5, 0x3f, 0x27,
+  0xaf, 0x76, 0x77, 0xda, 0x9f, 0x60, 0x75, 0x28, 0x62, 0xf8, 0xd5, 0x57,
+  0xde, 0x48, 0xfe, 0xd8, 0xf3, 0xe9, 0x44, 0x9e, 0xd6, 0x8a, 0x81, 0xa8,
+  0xa0, 0xf2, 0xaa, 0x33, 0xe2, 0xfb, 0x95, 0xff, 0x7f, 0xcd, 0x38, 0x10,
+  0xf1, 0xa5, 0xcf, 0x16, 0xcb, 0xd1, 0x2c, 0xad, 0x0c, 0x78, 0x9b, 0x27,
+  0xf8, 0x39, 0xcc, 0x2a, 0x89, 0xa3, 0x0d, 0x94, 0x9a, 0x15, 0xd1, 0xaf,
+  0x7b, 0x95, 0x65, 0xa3, 0x38, 0xef, 0xaa, 0x21, 0xd5, 0xc6, 0xd9, 0xdd,
+  0xdd, 0x7b, 0xf2, 0xf4, 0x59, 0x77, 0xa0, 0x62, 0x1a, 0x18, 0x04, 0x34,
+  0xb3, 0x54, 0x75, 0x19, 0x69, 0x22, 0x96, 0xe3, 0x19, 0x16, 0x8e, 0x6f,
+  0x75, 0x38, 0x30, 0x0f, 0xe3, 0xee, 0x5e, 0x49, 0x6f, 0x7f, 0xe0, 0x7e,
+  0x5e, 0xa1, 0x8b, 0x3f, 0xa4, 0x93, 0x57, 0x6e, 0x86, 0x7f, 0xe0, 0xb9,
+  0xbc, 0xd2, 0x49, 0xd0, 0xbe, 0x5a, 0x30, 0x7d, 0xb1, 0xb5, 0xd1, 0xca,
+  0xd5, 0x5a, 0x37, 0xd7, 0x36, 0x71, 0x03, 0x93, 0x86, 0xb7, 0xab, 0x3f,
+  0x11, 0xeb, 0x2d, 0x84, 0x55, 0x1f, 0x49, 0xbe, 0xfd, 0xd0, 0xa7, 0x56,
+  0xfa, 0xdc, 0x4a, 0xdf, 0xb3, 0xeb, 0x68, 0xc6, 0x99, 0x23, 0xbc, 0x11,
+  0x3d, 0x4d, 0x27, 0x98, 0xc2, 0xde, 0xa1, 0x82, 0x40, 0x96, 0xc1, 0x97,
+  0x74, 0xf8, 0xd5, 0x49, 0x57, 0x9d, 0xb4, 0xa2, 0xb9, 0xf5, 0xda, 0x0c,
+  0x6c, 0x2e, 0x6c, 0x42, 0x61, 0x08, 0x36, 0x0c, 0xfb, 0x3b, 0x66, 0x9f,
+  0x23, 0xf7, 0x2b, 0xb9, 0x3f, 0xd4, 0x99, 0xde, 0x39, 0x53, 0x36, 0xd9,
+  0xe5, 0xf8, 0x24, 0x6c, 0x06, 0xb0, 0x2e, 0xe2, 0x7c, 0x84, 0xb5, 0xda,
+  0x43, 0xfe, 0xf6, 0x5f, 0x3b, 0x8f, 0x80, 0x0b, 0x53, 0xd7, 0x47, 0xe9,
+  0x2b, 0xe1, 0x26, 0xc6, 0x20, 0x3a, 0xae, 0xbe, 0x94, 0x50, 0x42, 0xc8,
+  0x3b, 0xe0, 0xcf, 0x18, 0x25, 0x95, 0xaa, 0x45, 0x22, 0x16, 0x32, 0xf7,
+  0x7c, 0xe9, 0x0a, 0x12, 0x7d, 0x1e, 0x01, 0xd4, 0x5f, 0xde, 0xd2, 0x40,
+  0xf4, 0x4a, 0xf1, 0x56, 0xbc, 0xa4, 0xda, 0x81, 0xf3, 0x7e, 0x04, 0x9e,
+  0x5b, 0x15, 0x0b, 0xa4, 0x05, 0x99, 0xe8, 0x68, 0xa5, 0xfa, 0x3f, 0xb7,
+  0xd0, 0xfd, 0x33, 0x0e, 0xc1, 0x4b, 0xde, 0x06, 0x7c, 0xfd, 0x79, 0x57,
+  0xcc, 0x78, 0xee, 0x5d, 0x1e, 0x46, 0xcd, 0xbb, 0x22, 0x04, 0x1a, 0xce,
+  0x27, 0xbb, 0x72, 0x78, 0x2e, 0x22, 0x8b, 0x71, 0x96, 0xe9, 0x1c, 0xfa,
+  0x54, 0x9a, 0x4c, 0x27, 0x5a, 0x33, 0x4d, 0x65, 0xa1, 0x9e, 0x36, 0x9e,
+  0x70, 0x0a, 0x2f, 0xcb, 0x8e, 0x5d, 0x8e, 0xc0, 0xc1, 0x7b, 0x5d, 0x07,
+  0x0f, 0xc3, 0x22, 0x75, 0x02, 0x76, 0x97, 0x27, 0x56, 0x4f, 0x6c, 0x43,
+  0xb3, 0xcb, 0xbc, 0x2c, 0x1f, 0x4e, 0xac, 0x08, 0x44, 0x07, 0x1f, 0xac,
+  0x2f, 0x49, 0xc8, 0x8d, 0x23, 0xf2, 0x9a, 0x33, 0x61, 0xb4, 0xd3, 0x57,
+  0xbc, 0xdc, 0xbb, 0x83, 0xeb, 0xf4, 0x4a, 0x16, 0x83, 0x58, 0xe4, 0x75,
+  0xb2, 0x4d, 0x7f, 0xf6, 0xe8, 0xf3, 0x3d, 0x96, 0xc9, 0xf8, 0x97, 0x27,
+  0xf0, 0xdd, 0x87, 0x37, 0x7f, 0x70, 0x36, 0xdc, 0xb9, 0xe0, 0x5f, 0x52,
+  0x77, 0xe3, 0xab, 0x59, 0x5a, 0x47, 0x09, 0x32, 0x57, 0xe4, 0x4d, 0x2f,
+  0x68, 0xf6, 0x02, 0x93, 0x33, 0x90, 0xd7, 0x32, 0x48, 0x27, 0x85, 0x8f,
+  0x73, 0x53, 0xe7, 0xa2, 0x8a, 0xe9, 0x2c, 0x75, 0xa7, 0x6a, 0x31, 0xe1,
+  0x48, 0x5b, 0xdc, 0xab, 0xc9, 0xfd, 0x56, 0x2f, 0x8c, 0x1e, 0xb2, 0x32,
+  0x9a, 0xae, 0xd6, 0x2f, 0xd2, 0xd0, 0xb8, 0xfb, 0x4d, 0x2d, 0x5c, 0xc5,
+  0x60, 0x0e, 0x9a, 0x2f, 0x83, 0x6d, 0x4e, 0xeb, 0x3b, 0x58, 0xad, 0xfd,
+  0x24, 0x41, 0x1f, 0x69, 0x51, 0x6e, 0x71, 0x37, 0xc9, 0xb4, 0x80, 0xaa,
+  0xce, 0x83, 0xde, 0x88, 0x82, 0x75, 0x37, 0x98, 0x0c, 0x74, 0xd5, 0xe5,
+  0x62, 0x54, 0xdb, 0xf0, 0x09, 0x09, 0x6f, 0x3b, 0x9e, 0x09, 0xe2, 0x3b,
+  0xc8, 0x76, 0xda, 0x97, 0xfb, 0x52, 0x85, 0xa0, 0xfe, 0xeb, 0x41, 0x74,
+  0x8a, 0xd8, 0xb7, 0x22, 0x96, 0xd4, 0x62, 0xbb, 0x53, 0x8d, 0x02, 0x88,
+  0x5c, 0x44, 0xea, 0xde, 0x90, 0x2a, 0x5c, 0x9c, 0xcd, 0x69, 0x64, 0x04,
+  0x20, 0x3b, 0xaf, 0x67, 0x8a, 0x44, 0xa1, 0x12, 0x48, 0x0f, 0x96, 0x68,
+  0xf7, 0x1c, 0x6a, 0xb2, 0xb9, 0x9a, 0xd0, 0x01, 0x91, 0x06, 0x8d, 0x88,
+  0x53, 0x5f, 0x45, 0xce, 0x80, 0x95, 0x3b, 0xc2, 0x97, 0xa4, 0xd1, 0x44,
+  0xec, 0x2c, 0x5a, 0xb7, 0x57, 0xfc, 0x58, 0xd4, 0x1a, 0x28, 0x8b, 0xe7,
+  0xce, 0xa4, 0xd3, 0x81, 0xa6, 0x38, 0x4d, 0x9c, 0x3e, 0xad, 0x68, 0xbc,
+  0x02, 0x8c, 0x9b, 0x29, 0x36, 0x92, 0x08, 0x18, 0xde, 0xc7, 0xc0, 0x83,
+  0xe4, 0x71, 0xc5, 0x77, 0xf4, 0x0b, 0x5f, 0xf2, 0xa3, 0x9c, 0x76, 0x3a,
+  0xc9, 0xe5, 0x3a, 0x40, 0xaf, 0x56, 0xf4, 0x5e, 0x14, 0x93, 0x37, 0xa7,
+  0x91, 0xa5, 0x68, 0x5f, 0x79, 0xe1, 0xd0, 0x22, 0x77, 0x30, 0x45, 0x35,
+  0x86, 0x88, 0x04, 0xa4, 0x4f, 0xc9, 0xcd, 0x26, 0x6b, 0xcb, 0x59, 0x5e,
+  0x11, 0x2f, 0x4e, 0xe5, 0x98, 0x06, 0x4f, 0xc8, 0xab, 0x4c, 0x3b, 0x44,
+  0x1a, 0x5d, 0x5e, 0x82, 0x6e, 0x2f, 0xea, 0xf2, 0x50, 0xf9, 0x8b, 0x2e,
+  0xd6, 0x13, 0x1f, 0x07, 0xcb, 0xd7, 0x1d, 0xb4, 0x9c, 0x3c, 0x7e, 0xe6,
+  0xd5, 0x17, 0x95, 0x55, 0xc2, 0xe7, 0xd6, 0xd4, 0x2b, 0x09, 0x97, 0x6d,
+  0x48, 0xd9, 0xf6, 0x6e, 0xd0, 0xfe, 0xab, 0x43, 0x6a, 0x45, 0xaa, 0x9e,
+  0xc9, 0x9e, 0x40, 0xa0, 0x76, 0x9f, 0xa5, 0xc8, 0x45, 0x69, 0x34, 0xf4,
+  0xe1, 0x93, 0x7b, 0x69, 0xec, 0xc7, 0x85, 0x08, 0x09, 0x47, 0x13, 0x12,
+  0x30, 0x6e, 0x4b, 0xbb, 0x99, 0x8a, 0xa6, 0x77, 0x9f, 0xc1, 0xae, 0x00,
+  0x3e, 0xb3, 0x3b, 0x40, 0x6e, 0x82, 0xc7, 0xd2, 0x71, 0x0d, 0x38, 0x75,
+  0xbd, 0x83, 0x05, 0xed, 0x98, 0x9d, 0xc4, 0x29, 0xf1, 0xb6, 0xca, 0x4d,
+  0x13, 0x30, 0x4d, 0x7d, 0x91, 0x8e, 0x51, 0xc5, 0xf4, 0xd5, 0x17, 0x93,
+  0xec, 0x9a, 0xd9, 0x55, 0x8f, 0x6e, 0x56, 0xfe, 0xd9, 0x89, 0xf0, 0xf8,
+  0x9e, 0xf6, 0x2b, 0x63, 0xc6, 0x71, 0x11, 0xd1, 0xdd, 0xfe, 0xd6, 0x28,
+  0xa6, 0xa8, 0x65, 0x4b, 0x26, 0xd9, 0x58, 0x9b, 0x77, 0xad, 0xcb, 0x9e,
+  0x50, 0x17, 0xee, 0x0b, 0xdf, 0x5d, 0xb0, 0x42, 0xb1, 0xb6, 0x2d, 0x25,
+  0xe8, 0xa6, 0x69, 0x29, 0x77, 0xb8, 0x43, 0x57, 0x87, 0x61, 0x8b, 0xab,
+  0x48, 0xc8, 0x85, 0x35, 0xd5, 0xa8, 0xf9, 0xee, 0x17, 0x5d, 0x09, 0x78,
+  0xec, 0xbe, 0xec, 0x82, 0x75, 0x31, 0x43, 0x32, 0x2c, 0x5d, 0xbd, 0x95,
+  0xba, 0x72, 0x1d, 0xf6, 0x45, 0x68, 0xd0, 0xf2, 0x80, 0x95, 0x30, 0x15,
+  0xe6, 0x1a, 0xa6, 0x3d, 0x86, 0x11, 0x36, 0xb0, 0x0e, 0xf8, 0xc2, 0x78,
+  0x8c, 0x4f, 0x33, 0x2a, 0xc5, 0x37, 0xad, 0xb7, 0x2d, 0xe4, 0x31, 0xa4,
+  0xfb, 0x16, 0xec, 0x79, 0x15, 0xf3, 0xe6, 0x72, 0xbe, 0xe0, 0xe4, 0xae,
+  0x31, 0xea, 0xe6, 0xea, 0x81, 0x1a, 0x44, 0xef, 0xe6, 0x82, 0x7e, 0x97,
+  0xb0, 0x8e, 0x1c, 0x3a, 0xce, 0x7b, 0x2e, 0x00, 0x80, 0x56, 0xaa, 0xe2,
+  0x58, 0x0c, 0x07, 0x2c, 0x36, 0x11, 0x31, 0x5e, 0x6b, 0xbf, 0x7c, 0xbf,
+  0xe6, 0x1c, 0x96, 0xa0, 0xc6, 0x69, 0x88, 0x03, 0x2e, 0xed, 0x57, 0xb9,
+  0x10, 0xbb, 0xe9, 0x8e, 0x5f, 0x1f, 0x5f, 0x5c, 0x1c, 0x5f, 0xf0, 0x7a,
+  0x1f, 0x54, 0x51, 0xec, 0x6f, 0x34, 0x3e, 0xda, 0xe3, 0xb3, 0x59, 0x68,
+  0x58, 0xb3, 0x70, 0xb1, 0xb0, 0x43, 0x05, 0x54, 0xda, 0x88, 0xcc, 0xe1,
+  0x2d, 0xb9, 0xee, 0x62, 0x16, 0x86, 0x4d, 0x11, 0x81, 0x81, 0xce, 0x7e,
+  0x3f, 0xe5, 0xbb, 0x45, 0xc0, 0xe8, 0x43, 0x89, 0x62, 0x23, 0xb2, 0x57,
+  0x73, 0xad, 0x30, 0x82, 0xfb, 0xda, 0x14, 0xc8, 0x40, 0x38, 0x1d, 0x68,
+  0x2c, 0x57, 0xa2, 0x6e, 0x6c, 0x5f, 0x3d, 0x1c, 0xf3, 0xbd, 0xe2, 0x53,
+  0xca, 0xfa, 0x12, 0x56, 0xa2, 0x28, 0x97, 0x8b, 0x74, 0xe2, 0x4c, 0xbc,
+  0xf4, 0x39, 0x09, 0x7d, 0x91, 0x9c, 0xf3, 0xc2, 0x46, 0x0c, 0xaf, 0xa2,
+  0x19, 0x20, 0x42, 0x0b, 0x9b, 0xa4, 0x96, 0x7b, 0xfb, 0x18, 0x22, 0xff,
+  0xa5, 0x2c, 0xa5, 0x22, 0x67, 0xd7, 0xf2, 0xb6, 0x94, 0xf2, 0x13, 0x98,
+  0x16, 0x99, 0x5f, 0x58, 0xd0, 0x40, 0xc8, 0x1b, 0xd8, 0x7e, 0x35, 0xf3,
+  0x11, 0x91, 0xbe, 0x64, 0xe0, 0x05, 0xd2, 0x35, 0xf2, 0xfd, 0xe8, 0xc7,
+  0x22, 0x1d, 0xff, 0xe4, 0xaf, 0x0f, 0x04, 0x32, 0xfb, 0xa0, 0x45, 0x09,
+  0x32, 0xa0, 0xc9, 0xeb, 0x42, 0xa9, 0x02, 0x2c, 0x69, 0x52, 0xef, 0x86,
+  0xc7, 0x17, 0xd1, 0xc1, 0x57, 0x8c, 0xf1, 0xf4, 0xaf, 0xed, 0x2e, 0x3f,
+  0xa7, 0xd7, 0x83, 0xed, 0xad, 0x26, 0xe6, 0x26, 0x66, 0xfe, 0xd6, 0xea,
+  0x09, 0xe1, 0xc6, 0xa6, 0x56, 0x1f, 0x26, 0xc8, 0xa0, 0xac, 0x6c, 0xe1,
+  0x46, 0xf4, 0xc1, 0x4d, 0xfc, 0x98, 0x2d, 0xe4, 0x03, 0x16, 0x6e, 0xa2,
+  0x64, 0xf4, 0x8b, 0x1b, 0xc2, 0xb6, 0x46, 0x47, 0x5f, 0x34, 0x74, 0x4d,
+  0xd9, 0xa4, 0x83, 0xa8, 0xfb, 0x26, 0xfb, 0x99, 0xa4, 0x81, 0x78, 0xfb,
+  0xc9, 0x60, 0x27, 0xda, 0xfc, 0x2e, 0x9d, 0xbf, 0x78, 0xf6, 0xe7, 0xe8,
+  0x64, 0xab, 0x5b, 0x89, 0xf6, 0x14, 0x30, 0xe7, 0x51, 0x3c, 0xbf, 0x75,
+  0x3b, 0x76, 0x86, 0x53, 0x2d, 0x31, 0x2c, 0x06, 0x09, 0x2a, 0xb5, 0x07,
+  0xd7, 0xb6, 0x88, 0x74, 0x23, 0x0d, 0x1c, 0x8d, 0xbe, 0x75, 0xb0, 0x74,
+  0xac, 0xd8, 0xd3, 0x53, 0x13, 0x5e, 0xba, 0x17, 0xcf, 0x1a, 0x4d, 0x3c,
+  0x75, 0x6d, 0xbc, 0x93, 0x36, 0x7e, 0x61, 0x13, 0x7b, 0x83, 0x9d, 0xbd,
+  0x68, 0xf3, 0x6c, 0xb8, 0xbd, 0xe7, 0x5a, 0x68, 0x36, 0xb1, 0x87, 0x26,
+  0xf8, 0xa1, 0xea, 0xcb, 0x4f, 0xb9, 0xff, 0x1f, 0x93, 0xf9, 0x4f, 0xd1,
+  0xe6, 0xf7, 0xbb, 0xbb, 0xd4, 0xc0, 0x9f, 0xa3, 0x83, 0x93, 0xef, 0xa3,
+  0xa7, 0x03, 0x6a, 0xec, 0x6d, 0x7c, 0xa7, 0xcd, 0x29, 0x92, 0xd3, 0x10,
+  0x8d, 0xd0, 0xf7, 0x8d, 0x36, 0x9e, 0xd5, 0xda, 0x38, 0x25, 0x65, 0xf0,
+  0x81, 0x2e, 0x95, 0x9d, 0xc1, 0x93, 0xbd, 0x28, 0x7d, 0xf6, 0xd9, 0x73,
+  0x6b, 0x48, 0xdb, 0xc0, 0xf7, 0x55, 0x03, 0xa5, 0xe4, 0xfa, 0x92, 0xac,
+  0x73, 0xfc, 0x40, 0xcc, 0x0c, 0x1c, 0x02, 0x00, 0xaa, 0x37, 0x71, 0x3e,
+  0x51, 0x72, 0xe3, 0x42, 0x2a, 0xb4, 0x53, 0x8a, 0x11, 0x96, 0xc0, 0x52,
+  0x49, 0x37, 0xe7, 0x7e, 0x63, 0x38, 0xac, 0x90, 0xda, 0xa3, 0x7f, 0x8e,
+  0xde, 0x0c, 0x4f, 0x8e, 0x69, 0x46, 0x3b, 0x34, 0x34, 0xbf, 0x86, 0x32,
+  0x20, 0x7c, 0x85, 0xc5, 0xa5, 0x55, 0xdd, 0xe0, 0xec, 0x1f, 0xb4, 0x61,
+  0x82, 0xb6, 0x84, 0x76, 0x31, 0x78, 0x63, 0x56, 0x14, 0xe8, 0xf7, 0x1d,
+  0xd1, 0x5a, 0xff, 0xe0, 0x9a, 0xf5, 0x06, 0xbd, 0x6b, 0xb9, 0xeb, 0x6f,
+  0xb2, 0x39, 0x1d, 0x93, 0x3c, 0xcb, 0x39, 0xde, 0xa3, 0x5b, 0x11, 0x17,
+  0xbe, 0x39, 0x3a, 0x96, 0x6c, 0xb5, 0x37, 0xf1, 0x9c, 0x58, 0x24, 0xe3,
+  0x3a, 0x14, 0xb7, 0xec, 0x7e, 0x17, 0x17, 0x8e, 0xbc, 0x7f, 0xba, 0x9a,
+  0x3f, 0xd0, 0x3e, 0x7e, 0x3a, 0xd8, 0x65, 0x6c, 0x3b, 0x56, 0x75, 0x5f,
+  0xbf, 0xa1, 0xbf, 0x77, 0x9f, 0x76, 0x23, 0xfe, 0xaa, 0xaa, 0xb6, 0xdb,
+  0x79, 0xdd, 0x38, 0x3c, 0x3b, 0xfb, 0xe6, 0x44, 0x22, 0x31, 0x0e, 0xd5,
+  0x92, 0xca, 0xd2, 0x95, 0x53, 0x85, 0x85, 0xb9, 0x92, 0xca, 0xe6, 0x03,
+  0xc9, 0xe1, 0x80, 0xbb, 0x4d, 0x92, 0x05, 0xc0, 0xe8, 0x6a, 0x1c, 0xa1,
+  0x54, 0x16, 0x2d, 0x23, 0x63, 0x69, 0x3a, 0x9d, 0x54, 0x31, 0x29, 0x0a,
+  0xc6, 0x09, 0x33, 0xab, 0xed, 0x68, 0xe5, 0x32, 0x62, 0x63, 0x5f, 0xe6,
+  0x11, 0x43, 0x74, 0xe1, 0xac, 0x66, 0x75, 0x96, 0x3a, 0xef, 0xf4, 0xa2,
+  0x2a, 0xbc, 0xdd, 0x61, 0x52, 0xf6, 0x65, 0xd0, 0xfb, 0x6a, 0xa8, 0xed,
+  0xaa, 0xd5, 0xc9, 0xd9, 0xcc, 0x16, 0x8a, 0x4c, 0x0b, 0x6b, 0xf1, 0x6a,
+  0xc1, 0xe5, 0x28, 0xa7, 0xae, 0x62, 0x30, 0xca, 0xad, 0x26, 0x08, 0x2a,
+  0x7a, 0x7b, 0xf0, 0xe6, 0xf8, 0xd5, 0xb7, 0x07, 0xa7, 0xef, 0x8e, 0xe9,
+  0x15, 0xc6, 0x66, 0xdd, 0xf4, 0x81, 0x47, 0x18, 0xe3, 0x2c, 0x1d, 0x67,
+  0x53, 0xf6, 0x2c, 0x75, 0xff, 0xdc, 0xdd, 0x90, 0x38, 0xcb, 0xa8, 0xc3,
+  0x6f, 0xed, 0xca, 0x6b, 0x44, 0x17, 0xfc, 0xd7, 0x9e, 0xfc, 0xb5, 0xf7,
+  0xe7, 0xce, 0x56, 0x65, 0xd2, 0x0d, 0xd5, 0x98, 0xe9, 0xe5, 0x5e, 0x02,
+  0xec, 0x50, 0x2b, 0x05, 0xc1, 0xbd, 0xb2, 0x2a, 0x1d, 0x73, 0xcb, 0xd8,
+  0xd5, 0xc6, 0xcf, 0x6e, 0x8e, 0x56, 0xa1, 0xe2, 0xdd, 0xe1, 0x97, 0x5e,
+  0x41, 0xb8, 0xe8, 0x70, 0xe6, 0x93, 0x8a, 0x1b, 0x70, 0x59, 0x73, 0x1b,
+  0xd6, 0x44, 0xf2, 0xb0, 0xe0, 0x38, 0xae, 0xcd, 0x8e, 0xfc, 0xf2, 0xea,
+  0xe8, 0xe0, 0xf2, 0x98, 0x5f, 0xb0, 0xee, 0xad, 0x70, 0xb5, 0x85, 0xe0,
+  0xf2, 0x78, 0x36, 0x3b, 0xf2, 0xe1, 0x2b, 0x9e, 0x50, 0x47, 0x2a, 0x0d,
+  0x08, 0xcc, 0x62, 0x6d, 0x5c, 0xd9, 0x5c, 0xa3, 0x19, 0x83, 0x44, 0xbd,
+  0xc2, 0x02, 0x46, 0x36, 0x3b, 0xf2, 0x5d, 0xc7, 0x19, 0x6d, 0xb5, 0x34,
+  0xab, 0xba, 0x28, 0x27, 0x08, 0xd0, 0x6d, 0x24, 0x09, 0x49, 0x7d, 0x24,
+  0xbf, 0x3f, 0xea, 0x9f, 0x10, 0x33, 0x53, 0x00, 0x35, 0xe7, 0x36, 0x5e,
+  0xf3, 0x0a, 0xd9, 0xb0, 0x94, 0x65, 0xbb, 0x7b, 0x4f, 0xfe, 0x8c, 0xf5,
+  0x7c, 0xd5, 0xd9, 0xa6, 0xbb, 0xa1, 0xf3, 0x67, 0xee, 0x3a, 0x2d, 0x83,
+  0xa2, 0x2b, 0xda, 0x0d, 0x2b, 0x54, 0x4a, 0x51, 0x12, 0xad, 0xc2, 0xbb,
+  0x0e, 0x83, 0x98, 0xcc, 0x0b, 0x0b, 0x7a, 0x2f, 0x69, 0x04, 0x96, 0x6a,
+  0x6e, 0x4e, 0x7c, 0xec, 0x17, 0x8a, 0x02, 0xce, 0x1d, 0x40, 0xa9, 0x74,
+  0x17, 0xde, 0x1f, 0x3d, 0x79, 0x57, 0xe6, 0xa8, 0xa5, 0x60, 0xb8, 0xcf,
+  0xd9, 0xca, 0x32, 0x0d, 0xd0, 0x17, 0x84, 0x72, 0xd9, 0xb3, 0x86, 0x8d,
+  0x60, 0xa4, 0x06, 0x1d, 0xd3, 0x46, 0x20, 0x12, 0x10, 0x6b, 0x59, 0x41,
+  0x4e, 0x12, 0xaf, 0x7f, 0x10, 0xec, 0x60, 0x77, 0x76, 0x3c, 0xe2, 0x7c,
+  0x39, 0x17, 0x56, 0x1d, 0xa8, 0xe2, 0x6e, 0xe9, 0xed, 0xf8, 0xa5, 0x01,
+  0xac, 0x00, 0x5f, 0x94, 0xb2, 0x96, 0x85, 0x33, 0x1c, 0xc1, 0xc1, 0xa8,
+  0xcf, 0x56, 0xf7, 0xa9, 0x96, 0xb0, 0x80, 0x69, 0x88, 0x1e, 0x2f, 0x0a,
+  0x32, 0xb1, 0x9a, 0x79, 0x92, 0x3f, 0x1a, 0xe8, 0xd0, 0xe2, 0x7f, 0xc2,
+  0x14, 0x83, 0x7c, 0x17, 0x7e, 0x67, 0x30, 0x18, 0xf8, 0x62, 0x20, 0xbc,
+  0x2d, 0xea, 0x76, 0x02, 0xae, 0x78, 0x80, 0x7d, 0x86, 0x35, 0xde, 0x84,
+  0x20, 0x0f, 0x61, 0x7a, 0x4b, 0xa3, 0x5e, 0xd4, 0x24, 0xe1, 0x8e, 0x46,
+  0x60, 0xd8, 0xe8, 0x6a, 0xb7, 0x5d, 0x2b, 0x35, 0x70, 0xdb, 0xb6, 0x09,
+  0x8f, 0x8c, 0x4d, 0x0c, 0x8e, 0x45, 0x8c, 0x04, 0x7d, 0xc7, 0xa7, 0x32,
+  0xb7, 0x16, 0x4c, 0xc1, 0x9c, 0xb4, 0x2f, 0x55, 0x4e, 0xb1, 0x25, 0xb2,
+  0x68, 0x3a, 0x14, 0x2d, 0x73, 0xc3, 0x4c, 0x2e, 0xbb, 0x47, 0x3e, 0x27,
+  0xb2, 0x46, 0x39, 0x06, 0x64, 0x2e, 0xf6, 0x01, 0xbb, 0x41, 0x1c, 0xf2,
+  0xaf, 0xb5, 0x33, 0x11, 0xfb, 0x2c, 0x2b, 0xcd, 0x90, 0xfb, 0x35, 0x0d,
+  0x46, 0x33, 0xbd, 0x8b, 0x58, 0x11, 0xb2, 0x48, 0x6c, 0xcb, 0x66, 0xf0,
+  0x74, 0xe9, 0xe4, 0xbd, 0xad, 0x84, 0x83, 0xbd, 0xfa, 0x92, 0x2b, 0x6d,
+  0x99, 0x2a, 0xc6, 0x3d, 0x34, 0x5b, 0xf6, 0x31, 0x1f, 0xf9, 0xd8, 0x5a,
+  0x74, 0x0e, 0xf2, 0xda, 0xda, 0xf8, 0x5b, 0xb9, 0xca, 0xba, 0x68, 0x45,
+  0xc5, 0xa4, 0x0c, 0x41, 0x39, 0xe0, 0x7b, 0x51, 0x7c, 0xcf, 0x35, 0x69,
+  0x88, 0x06, 0xc5, 0x57, 0x26, 0x66, 0x99, 0xd3, 0xc0, 0xb8, 0xe8, 0x66,
+  0x68, 0x05, 0x9d, 0x63, 0x5f, 0xd1, 0xd9, 0x60, 0x61, 0x05, 0xea, 0xcd,
+  0xac, 0x78, 0x29, 0x8a, 0x8a, 0x30, 0x34, 0x97, 0x0a, 0xea, 0xa6, 0x9f,
+  0xf3, 0xc8, 0x89, 0x45, 0x0f, 0x95, 0x6e, 0x52, 0x84, 0x05, 0xb2, 0xa1,
+  0x43, 0x62, 0x29, 0x6c, 0xb5, 0xa4, 0x9a, 0xb7, 0x75, 0xe2, 0x5c, 0xd2,
+  0xb0, 0x39, 0xb1, 0x3c, 0x3d, 0xcf, 0xe6, 0x7d, 0x57, 0x65, 0xc8, 0x05,
+  0x5e, 0xe5, 0xe9, 0xf5, 0xb5, 0x68, 0x6c, 0x51, 0x7d, 0x6a, 0xed, 0x44,
+  0x76, 0xca, 0xab, 0xc2, 0xb1, 0x9b, 0xab, 0x75, 0xab, 0x79, 0xe9, 0x2a,
+  0x95, 0xaa, 0xd9, 0xa5, 0x42, 0xcc, 0xe6, 0x86, 0x94, 0x7d, 0x2b, 0x51,
+  0x0d, 0x06, 0xc9, 0x96, 0x6c, 0xfb, 0xaa, 0xba, 0x8d, 0xcf, 0x2e, 0x36,
+  0x50, 0xc0, 0x7e, 0xee, 0x73, 0x4b, 0x6d, 0xd3, 0x01, 0x2d, 0xe3, 0xa3,
+  0x4e, 0x26, 0x6c, 0x5c, 0x9e, 0xf1, 0x55, 0x7c, 0xef, 0x42, 0x9e, 0x04,
+  0x6b, 0x77, 0x14, 0x7b, 0x8d, 0x6b, 0x23, 0xaa, 0x98, 0x78, 0x0b, 0x54,
+  0xa6, 0x56, 0x3e, 0x94, 0xdd, 0x25, 0x1e, 0xdf, 0xc8, 0x5b, 0x19, 0x3d,
+  0x24, 0x9d, 0x9e, 0x7e, 0xc7, 0x4c, 0x6a, 0x3e, 0x5d, 0xc7, 0xaf, 0x30,
+  0xc9, 0xda, 0xaa, 0x0c, 0xa2, 0xa0, 0x49, 0xb1, 0x95, 0x64, 0x21, 0x8b,
+  0x97, 0xb1, 0xa9, 0xab, 0xda, 0x5a, 0xd4, 0xa0, 0x7e, 0x60, 0xee, 0x07,
+  0xaa, 0x89, 0xa0, 0xc9, 0x2a, 0x55, 0x15, 0x2e, 0x40, 0xce, 0xbb, 0x7c,
+  0x6d, 0x96, 0x1d, 0xb7, 0x49, 0x1d, 0xe4, 0x9e, 0x8c, 0x94, 0x08, 0x40,
+  0x03, 0x2c, 0xd0, 0x39, 0xaf, 0xfd, 0xc1, 0x34, 0xe6, 0xc0, 0x95, 0x4c,
+  0x02, 0x02, 0xb0, 0x65, 0x20, 0x6a, 0x58, 0xd3, 0x6a, 0x3c, 0xb5, 0x71,
+  0xfc, 0x5c, 0x80, 0x86, 0xd0, 0x1a, 0xc0, 0xe9, 0xb8, 0x19, 0xa2, 0x12,
+  0x44, 0xe7, 0x8e, 0x8d, 0xb9, 0x3f, 0x9e, 0x84, 0x39, 0xaa, 0x9c, 0xd1,
+  0x0f, 0x1d, 0xd9, 0xf3, 0x8b, 0xb3, 0xaf, 0x2e, 0x8e, 0x87, 0xc3, 0xe8,
+  0xcd, 0xf1, 0xa5, 0xa8, 0xfc, 0x97, 0x12, 0x0d, 0x27, 0x10, 0xc5, 0xf0,
+  0x35, 0x18, 0x4e, 0x82, 0x05, 0x9c, 0x98, 0x3d, 0x01, 0x98, 0xaa, 0x19,
+  0xfb, 0xd1, 0x20, 0xca, 0x41, 0x9d, 0x9f, 0x6a, 0x10, 0xdd, 0x0d, 0xac,
+  0xfd, 0x08, 0x69, 0x82, 0x3b, 0xd2, 0x19, 0xcf, 0xbd, 0x49, 0x15, 0x32,
+  0xb2, 0x04, 0x39, 0xdd, 0x18, 0xe7, 0xf2, 0x26, 0x74, 0xbe, 0xbd, 0xe9,
+  0x27, 0xa6, 0xf7, 0xfb, 0xe8, 0xd2, 0xca, 0x71, 0xff, 0x9e, 0xd4, 0x60,
+  0xa5, 0x8f, 0xdf, 0x47, 0xdf, 0x53, 0x9b, 0x13, 0x5a, 0x75, 0x2d, 0xba,
+  0x38, 0x44, 0xa9, 0x0d, 0x5f, 0xce, 0x04, 0x85, 0x20, 0xc2, 0x12, 0x3b,
+  0xcb, 0x3c, 0xff, 0x40, 0x49, 0x5f, 0xa4, 0xcd, 0x0b, 0xb4, 0x80, 0x86,
+  0xd4, 0xb9, 0x9e, 0xf9, 0x6d, 0xc0, 0x65, 0x9e, 0x26, 0x57, 0x25, 0x04,
+  0x12, 0xee, 0x8e, 0x9a, 0xdb, 0x61, 0x10, 0xc3, 0xdd, 0x37, 0xfc, 0xd1,
+  0x4e, 0xf4, 0xe4, 0xb3, 0xe7, 0x3b, 0x9f, 0xc9, 0xaf, 0xf6, 0xef, 0x8b,
+  0xa7, 0x3b, 0x0a, 0x06, 0x4a, 0x7f, 0x3d, 0xdd, 0x7f, 0xba, 0xbb, 0xcf,
+  0x20, 0x45, 0x3b, 0xfb, 0x3b, 0xf4, 0xff, 0x4f, 0xf5, 0x13, 0x46, 0x62,
+  0x7a, 0xb1, 0xf7, 0xd9, 0xa7, 0x88, 0x85, 0x61, 0xfa, 0x98, 0x52, 0x27,
+  0xfd, 0x32, 0xeb, 0x03, 0xc9, 0x01, 0x42, 0xd0, 0xef, 0xab, 0x56, 0x49,
+  0x76, 0xae, 0x73, 0x39, 0x45, 0x9e, 0xb8, 0x2b, 0xc0, 0x6c, 0x16, 0x56,
+  0x49, 0xe6, 0x0f, 0x8b, 0xc4, 0xba, 0x69, 0xe8, 0xdb, 0x52, 0xa7, 0x13,
+  0xd0, 0x28, 0x95, 0x77, 0x48, 0x64, 0x94, 0x64, 0xaa, 0xf0, 0xe5, 0x5f,
+  0xd2, 0xb5, 0x25, 0x1d, 0x6e, 0x00, 0x5b, 0x45, 0xb7, 0x4a, 0xdf, 0x1b,
+  0xcb, 0x12, 0x12, 0x8d, 0x04, 0xc5, 0x47, 0x6b, 0xa5, 0x42, 0x7f, 0x69,
+  0x7f, 0x62, 0xc0, 0xe2, 0xb7, 0x94, 0x1a, 0xa2, 0x66, 0x6f, 0x56, 0x33,
+  0xb5, 0xad, 0xaf, 0x0a, 0xf1, 0x6c, 0xf8, 0xed, 0xf7, 0x2b, 0x15, 0xd4,
+  0x16, 0x75, 0xc8, 0x22, 0x52, 0xd5, 0xa5, 0x65, 0xca, 0x8d, 0xe6, 0xde,
+  0x2d, 0xc2, 0xf6, 0x3e, 0xa6, 0x39, 0x3f, 0x23, 0x50, 0xb0, 0xdb, 0xb9,
+  0x7e, 0xb0, 0x39, 0xa9, 0xc4, 0xb5, 0xb9, 0x02, 0xa1, 0x86, 0x8e, 0xe5,
+  0xea, 0x0a, 0xe2, 0x55, 0x47, 0xb2, 0x7d, 0x79, 0x43, 0xc5, 0xcf, 0x02,
+  0x29, 0x42, 0x22, 0x28, 0xdc, 0x65, 0xb8, 0xed, 0xe5, 0x79, 0xa3, 0xec,
+  0x46, 0x57, 0x4c, 0x8d, 0x41, 0x7f, 0xda, 0x07, 0xce, 0x93, 0x3b, 0x74,
+  0x8f, 0x4e, 0xcd, 0x47, 0xb9, 0xbb, 0x9a, 0x36, 0x9b, 0x2e, 0x6a, 0xbc,
+  0xed, 0x48, 0xfa, 0xe7, 0x10, 0x48, 0xee, 0x9a, 0x0b, 0x2f, 0x22, 0x14,
+  0x34, 0x52, 0x3c, 0x63, 0x06, 0xdd, 0x62, 0x88, 0xda, 0x2d, 0x63, 0x61,
+  0xfd, 0x4f, 0x5c, 0xd0, 0x16, 0xee, 0x35, 0x85, 0x65, 0x8f, 0x85, 0xf2,
+  0xa7, 0x61, 0x7e, 0x59, 0x05, 0x90, 0x3d, 0x84, 0x82, 0xdd, 0x90, 0xea,
+  0xc1, 0x74, 0xd3, 0xd2, 0xcd, 0x11, 0x14, 0xef, 0xfa, 0xdd, 0xc6, 0xc6,
+  0xf0, 0xfc, 0xf8, 0xf8, 0x28, 0x3a, 0x3d, 0x79, 0x73, 0x72, 0x19, 0x08,
+  0xe4, 0xee, 0x22, 0x31, 0x83, 0x6b, 0x61, 0x15, 0x5c, 0xaa, 0xcb, 0xe1,
+  0xb1, 0x07, 0xa5, 0x3f, 0xbb, 0xca, 0x67, 0x89, 0xe6, 0x33, 0x4c, 0xeb,
+  0xef, 0x41, 0xf5, 0x06, 0x5c, 0x05, 0xaa, 0x6c, 0x78, 0x81, 0xae, 0x20,
+  0xe1, 0x66, 0xec, 0x6a, 0xfd, 0xf4, 0x7f, 0xd0, 0x28, 0x8d, 0xaa, 0xe4,
+  0xa4, 0x10, 0x6a, 0xae, 0x94, 0x93, 0x86, 0xb6, 0xd6, 0x46, 0xc5, 0x6b,
+  0x9b, 0x4c, 0xb5, 0x9c, 0xa8, 0xb3, 0xd0, 0x21, 0x68, 0xef, 0x3e, 0x41,
+  0x66, 0xec, 0x2c, 0x15, 0x20, 0xe7, 0x30, 0xa4, 0xd8, 0xd5, 0x4e, 0xb9,
+  0xcc, 0x84, 0x8f, 0x87, 0x3d, 0x86, 0x65, 0xad, 0x2c, 0x9e, 0xd6, 0xfa,
+  0x0a, 0x0b, 0x26, 0x3d, 0xd9, 0x71, 0x89, 0x03, 0x0b, 0xf0, 0x1c, 0x15,
+  0xf5, 0xb9, 0xb3, 0xdd, 0x88, 0xe4, 0x91, 0x25, 0x4b, 0xf5, 0xf9, 0x72,
+  0xde, 0xb8, 0xee, 0x7e, 0x90, 0x77, 0x69, 0xfe, 0xcf, 0x77, 0x70, 0xbd,
+  0x5d, 0xc5, 0x79, 0x9f, 0x24, 0xaf, 0x55, 0xdf, 0x8c, 0xab, 0x42, 0x11,
+  0x1a, 0x6e, 0x2c, 0xa6, 0x9f, 0xc4, 0x57, 0xfa, 0xa8, 0x49, 0x8b, 0x3e,
+  0xfb, 0x23, 0x83, 0x5f, 0x72, 0xaa, 0x07, 0x80, 0xa7, 0xde, 0x8b, 0x50,
+  0x83, 0xda, 0x05, 0x40, 0x8b, 0xac, 0xe3, 0xe1, 0xf5, 0x6c, 0x17, 0x3d,
+  0x8f, 0x42, 0xed, 0xd3, 0x4c, 0x3d, 0x44, 0x29, 0x4f, 0x53, 0xe7, 0xd2,
+  0x14, 0xad, 0x67, 0xd1, 0xee, 0x67, 0x3c, 0x8f, 0x8f, 0x9b, 0x0f, 0x57,
+  0xb4, 0xb0, 0x50, 0x36, 0x51, 0x17, 0x32, 0xbf, 0x9b, 0x92, 0x9e, 0x00,
+  0xcc, 0x72, 0x59, 0x5d, 0x8b, 0x89, 0x45, 0xc8, 0x1e, 0xeb, 0x27, 0xea,
+  0x4f, 0x87, 0x65, 0x0a, 0x0e, 0x6e, 0x91, 0x90, 0x50, 0xbb, 0x51, 0xd6,
+  0x85, 0x6d, 0xad, 0x12, 0xb2, 0xd7, 0xcd, 0x7d, 0xea, 0x1c, 0x96, 0x81,
+  0xad, 0x23, 0x44, 0x6b, 0xf7, 0xe9, 0x04, 0x52, 0xb5, 0x19, 0x01, 0x40,
+  0x7f, 0x42, 0x7c, 0x12, 0x2a, 0x0d, 0xff, 0x25, 0x1c, 0x9f, 0x6e, 0x64,
+  0x2a, 0xc0, 0xf0, 0xb2, 0x66, 0x30, 0x2e, 0x6c, 0x42, 0x7e, 0xe0, 0x62,
+  0x2c, 0x55, 0xd7, 0x00, 0xb3, 0xe6, 0x8e, 0xef, 0x85, 0xc3, 0xf7, 0xcb,
+  0x72, 0x6a, 0x76, 0x05, 0x5f, 0x6d, 0xa1, 0x3a, 0x67, 0xce, 0xea, 0x0f,
+  0xa6, 0xbd, 0xbb, 0x43, 0xf2, 0xeb, 0x34, 0xab, 0x97, 0x65, 0x6b, 0x2a,
+  0xa5, 0x98, 0x56, 0x1f, 0xab, 0xb3, 0xbb, 0xf3, 0xcd, 0xfa, 0x55, 0x07,
+  0x54, 0xeb, 0xa3, 0x2f, 0xef, 0x3d, 0x7d, 0x64, 0xd3, 0xce, 0x72, 0x57,
+  0x67, 0xc7, 0xc3, 0x8d, 0x78, 0x07, 0x4c, 0x63, 0xdb, 0x88, 0xf0, 0x93,
+  0xeb, 0x18, 0x45, 0xd6, 0x1f, 0x19, 0xbd, 0xa5, 0x69, 0xd4, 0x86, 0xf2,
+  0x46, 0x83, 0xb2, 0xe5, 0xcb, 0x82, 0x2d, 0x64, 0x0b, 0x80, 0x0e, 0x79,
+  0x35, 0xd6, 0xe5, 0x76, 0x4a, 0xb2, 0x77, 0xf0, 0xb6, 0x70, 0xce, 0x5e,
+  0x95, 0x49, 0x18, 0xf5, 0xe4, 0xc9, 0xf5, 0x52, 0xb2, 0xa9, 0x33, 0x51,
+  0xfb, 0x19, 0x95, 0x51, 0xcf, 0x2b, 0xf1, 0x66, 0x0e, 0x1f, 0x12, 0x7a,
+  0x02, 0xe3, 0x1d, 0xc7, 0x26, 0xb2, 0x8a, 0xc8, 0x51, 0xbf, 0x18, 0xd8,
+  0x3e, 0x3b, 0x66, 0x67, 0x18, 0xb8, 0x81, 0x1c, 0xaf, 0xb0, 0xe0, 0x93,
+  0xd4, 0x42, 0x1a, 0x20, 0x55, 0x51, 0x08, 0xc5, 0x31, 0x7b, 0x4e, 0xf0,
+  0x62, 0xa7, 0x58, 0x29, 0x1e, 0x02, 0x34, 0xd0, 0x53, 0xaa, 0x45, 0x4b,
+  0xae, 0x2b, 0xe6, 0xf8, 0x85, 0xe5, 0xa2, 0x0a, 0x58, 0x2c, 0xdb, 0xfd,
+  0x0f, 0xcf, 0xde, 0xbe, 0x3e, 0xf9, 0xca, 0x21, 0x5c, 0x08, 0x13, 0x5f,
+  0x96, 0x19, 0xdb, 0x35, 0xc5, 0x68, 0xe8, 0x4a, 0x71, 0x39, 0xaf, 0xb7,
+  0xd6, 0xdb, 0xd0, 0xd8, 0x5b, 0x62, 0x4f, 0xef, 0xc3, 0x0f, 0xc0, 0x40,
+  0xe6, 0x4f, 0xd8, 0x56, 0x2e, 0x69, 0xe4, 0xc5, 0x96, 0xb7, 0x3c, 0xd4,
+  0x00, 0x78, 0x24, 0x49, 0x23, 0xce, 0xcb, 0xe5, 0xc2, 0x85, 0x10, 0x06,
+  0xf5, 0x3a, 0x14, 0x46, 0x92, 0x6f, 0x05, 0xae, 0x1b, 0xbd, 0x5c, 0x08,
+  0x6b, 0x92, 0xd0, 0xc7, 0xaa, 0x61, 0x57, 0xee, 0x00, 0xb6, 0x2c, 0x68,
+  0xde, 0xbd, 0x5e, 0x00, 0x8d, 0xb8, 0x9c, 0x29, 0xa3, 0x62, 0x85, 0xe1,
+  0xf2, 0xe6, 0xca, 0xe1, 0x62, 0x5d, 0x32, 0x51, 0x2b, 0xb5, 0x34, 0x13,
+  0xcd, 0x8c, 0xe7, 0x2d, 0x15, 0x5c, 0x7f, 0x70, 0xb5, 0x6c, 0x35, 0xf6,
+  0xd7, 0xbb, 0x8a, 0x0a, 0x57, 0x98, 0xd4, 0xc5, 0x27, 0xc9, 0x60, 0x11,
+  0x47, 0x58, 0xf4, 0xc4, 0xe5, 0x89, 0x4f, 0x5e, 0xb1, 0x87, 0x66, 0x7f,
+  0x80, 0x72, 0x97, 0x08, 0xe2, 0x09, 0x2b, 0x51, 0x29, 0x97, 0xf4, 0x90,
+  0xa7, 0x27, 0x57, 0x41, 0x6e, 0x99, 0xc4, 0x09, 0x1a, 0xd1, 0x89, 0xb9,
+  0x98, 0x6d, 0x2d, 0xdd, 0x4f, 0xba, 0xfd, 0x62, 0x35, 0x1b, 0x65, 0x53,
+  0xcb, 0xbb, 0x70, 0xd9, 0xd5, 0xf6, 0x50, 0x49, 0xd3, 0x40, 0xe0, 0xa0,
+  0x94, 0x1e, 0x44, 0xd7, 0x81, 0x85, 0xd2, 0xc7, 0x4a, 0xf9, 0xf1, 0x0b,
+  0xc6, 0x3e, 0x3c, 0x45, 0x36, 0x0b, 0x97, 0xea, 0x9f, 0xcc, 0xc7, 0xd3,
+  0x4c, 0xa9, 0x9a, 0x33, 0x64, 0xb1, 0x52, 0xd5, 0xa9, 0xb3, 0xef, 0x2f,
+  0x5b, 0xb2, 0xb1, 0x03, 0xf8, 0xd9, 0x24, 0xee, 0xb0, 0x71, 0xf8, 0x3b,
+  0x9b, 0x20, 0xbf, 0x2d, 0x5f, 0x68, 0x4c, 0xbe, 0x61, 0x24, 0x50, 0x43,
+  0x02, 0xb8, 0x4d, 0x43, 0xfd, 0x8b, 0xd8, 0x16, 0xc5, 0x03, 0xf8, 0x83,
+  0x75, 0x6e, 0x8f, 0xd6, 0x96, 0x9e, 0xe8, 0x29, 0xce, 0xaf, 0x15, 0x79,
+  0x48, 0x9d, 0x6a, 0x50, 0x12, 0x1d, 0x0c, 0xba, 0xb3, 0x51, 0xb2, 0x50,
+  0xe2, 0x62, 0x66, 0x20, 0x3e, 0x2d, 0x25, 0xbb, 0x4f, 0x93, 0xa0, 0xc4,
+  0x3a, 0xe9, 0x08, 0x31, 0xe0, 0x38, 0x9f, 0xb8, 0xb8, 0x94, 0xd8, 0xdf,
+  0x65, 0x86, 0xcf, 0xec, 0x4d, 0xb5, 0x7a, 0x99, 0x05, 0xaf, 0xb1, 0x3d,
+  0x0f, 0x9a, 0x70, 0xa2, 0x36, 0x14, 0xe9, 0x0a, 0xb2, 0x04, 0xc3, 0x6e,
+  0x21, 0xf7, 0x27, 0x29, 0x7c, 0x13, 0xf2, 0xfd, 0x2b, 0xcd, 0x35, 0xa7,
+  0xf3, 0xac, 0xe8, 0x01, 0x0a, 0x89, 0xf4, 0xd9, 0x8e, 0x5a, 0xe2, 0x4a,
+  0x0d, 0x56, 0x2d, 0xa2, 0x83, 0x8b, 0x63, 0x92, 0x6c, 0xaf, 0xe7, 0xc8,
+  0x0e, 0xe7, 0x11, 0x96, 0xba, 0x3f, 0x10, 0xac, 0x79, 0x15, 0xf4, 0x7c,
+  0x70, 0x87, 0xf7, 0xc1, 0x9b, 0x4c, 0x4c, 0x1a, 0x1f, 0x40, 0x87, 0xcc,
+  0x45, 0xa1, 0x31, 0xc9, 0x8d, 0x0d, 0xb2, 0x0f, 0x5c, 0x87, 0xd3, 0xbc,
+  0x85, 0xa4, 0xd8, 0x5b, 0x42, 0x5d, 0x65, 0x06, 0xd7, 0x77, 0xde, 0x60,
+  0xeb, 0x21, 0x4e, 0x9f, 0xad, 0x35, 0x4e, 0xb5, 0x4f, 0x44, 0xf8, 0x9b,
+  0xa1, 0x8d, 0x69, 0x5f, 0x15, 0x0f, 0xa8, 0x27, 0xa7, 0x5e, 0xbb, 0xf5,
+  0xe8, 0x6f, 0xb8, 0x67, 0x58, 0x16, 0xa9, 0xcb, 0x05, 0x89, 0x8b, 0xaf,
+  0x17, 0x43, 0xf6, 0x24, 0x10, 0x7e, 0x25, 0x2b, 0x8f, 0x23, 0xac, 0xc5,
+  0x46, 0xcd, 0xc2, 0x4f, 0x5c, 0x24, 0x56, 0x57, 0x09, 0xea, 0xc0, 0x44,
+  0xcf, 0x2a, 0x53, 0x05, 0x07, 0x0b, 0x8f, 0x18, 0x71, 0xe3, 0x56, 0x04,
+  0x80, 0x90, 0x3f, 0xb5, 0x9a, 0x79, 0x3f, 0x71, 0xb3, 0xf5, 0x63, 0x70,
+  0x5f, 0xf2, 0x47, 0xaf, 0x1c, 0x00, 0x11, 0x8f, 0x62, 0xc0, 0x1d, 0x81,
+  0xa5, 0xc2, 0x7d, 0xca, 0xbf, 0xe0, 0x63, 0x44, 0xbd, 0x19, 0x86, 0x5b,
+  0x05, 0x44, 0x44, 0x81, 0xdf, 0xc3, 0x81, 0x88, 0x8f, 0x0f, 0x1c, 0x7a,
+  0x14, 0x8a, 0xc6, 0x41, 0xad, 0x23, 0x36, 0xe5, 0x70, 0x2a, 0xaf, 0x1d,
+  0xf8, 0x22, 0xa9, 0xd4, 0x46, 0x72, 0x89, 0x42, 0x9d, 0x7e, 0x87, 0xd6,
+  0xa2, 0x3b, 0x9d, 0x7a, 0x86, 0x6f, 0x8f, 0xf1, 0xae, 0x22, 0xa7, 0xce,
+  0x0b, 0x4c, 0xca, 0xbb, 0x18, 0x55, 0x7a, 0x55, 0x49, 0x70, 0xe0, 0xaa,
+  0x1c, 0x9c, 0xff, 0xe3, 0x40, 0x60, 0x90, 0x24, 0x82, 0x70, 0x81, 0xbb,
+  0xb4, 0x30, 0x3f, 0x24, 0xd1, 0xf6, 0x58, 0x63, 0x23, 0x24, 0xa3, 0x3a,
+  0x29, 0xc7, 0xc1, 0x52, 0x26, 0xe3, 0x9b, 0x4c, 0x62, 0x6a, 0x69, 0xd1,
+  0x82, 0xe4, 0xcb, 0x4e, 0xf4, 0x5f, 0x4a, 0x03, 0xdf, 0xf8, 0x9c, 0x3d,
+  0x26, 0x84, 0x81, 0x60, 0x6b, 0x0d, 0x3c, 0x41, 0x1c, 0x7f, 0x7f, 0x79,
+  0x71, 0x10, 0x7d, 0x7d, 0x7c, 0x70, 0x74, 0x7c, 0x31, 0xac, 0x5d, 0xfa,
+  0x1a, 0x05, 0x22, 0x12, 0x1a, 0xdb, 0x83, 0x21, 0x1a, 0x5b, 0xf2, 0xbf,
+  0x46, 0xed, 0x1b, 0xd7, 0x8b, 0x57, 0x38, 0x48, 0x74, 0x3e, 0x58, 0x21,
+  0x12, 0xc7, 0x01, 0x87, 0xa6, 0x71, 0xf8, 0x73, 0x16, 0xb4, 0xa1, 0x05,
+  0x80, 0x9d, 0xf5, 0x3c, 0xcc, 0x97, 0xf1, 0xb8, 0x4e, 0xfe, 0x32, 0x99,
+  0x64, 0x96, 0x0b, 0x58, 0xdd, 0xb9, 0xaf, 0x7d, 0xe6, 0x75, 0xc0, 0xb6,
+  0xf4, 0x92, 0x51, 0x03, 0x62, 0xe7, 0xfb, 0x3e, 0xf5, 0xdb, 0xa7, 0xc5,
+  0xef, 0x33, 0xee, 0xd6, 0x2a, 0x29, 0x3a, 0x35, 0x6b, 0x60, 0xb5, 0xfb,
+  0x0d, 0x29, 0x73, 0xd9, 0x38, 0x49, 0x5f, 0xb7, 0xb6, 0xc4, 0xa7, 0x6b,
+  0xca, 0xf5, 0x01, 0xea, 0x1a, 0x04, 0x2e, 0xd5, 0x40, 0x48, 0xd6, 0x13,
+  0xd4, 0x48, 0x6e, 0xd1, 0x38, 0x25, 0xaf, 0x66, 0x6a, 0x6c, 0x18, 0x06,
+  0xa2, 0x53, 0x80, 0xac, 0x93, 0x96, 0x7a, 0xa9, 0xc3, 0x2e, 0x62, 0xa0,
+  0x90, 0x34, 0x2c, 0x7d, 0x28, 0xbc, 0x1f, 0xe0, 0x0b, 0xd1, 0x28, 0xfd,
+  0xa2, 0xe2, 0x2a, 0x55, 0xbb, 0xa8, 0x96, 0xa8, 0xd1, 0xe6, 0x78, 0x0c,
+  0x8e, 0xe6, 0x2d, 0xb8, 0x9f, 0xbb, 0x34, 0x78, 0x6c, 0x7d, 0x57, 0x22,
+  0xc2, 0x58, 0xa9, 0x87, 0xa9, 0x93, 0x63, 0xce, 0x64, 0xe3, 0x4d, 0x5e,
+  0x0d, 0x32, 0x81, 0x42, 0x62, 0x46, 0x29, 0x0f, 0x44, 0x8f, 0xbb, 0xe7,
+  0x92, 0xe8, 0xeb, 0xac, 0xc0, 0x5d, 0xd0, 0x7c, 0x9c, 0x2f, 0xf9, 0xb6,
+  0xe5, 0xc7, 0x1b, 0xea, 0xea, 0x72, 0xc0, 0x77, 0x40, 0x8a, 0x04, 0xfb,
+  0x3a, 0x3f, 0xb8, 0xfc, 0x1a, 0x8e, 0x56, 0x90, 0xf0, 0x11, 0x20, 0x1f,
+  0xcc, 0xbd, 0xd6, 0x4c, 0xc8, 0x72, 0x0a, 0x9c, 0xc8, 0xbf, 0x06, 0xe2,
+  0x65, 0xf2, 0x24, 0x1c, 0x79, 0x30, 0x51, 0x02, 0x13, 0x28, 0x55, 0xc3,
+  0x63, 0xb5, 0xc0, 0x0c, 0x42, 0xdf, 0x5d, 0xb6, 0x9d, 0x8b, 0xbd, 0xec,
+  0x4a, 0x4a, 0x7a, 0x57, 0xe6, 0x04, 0xa2, 0x67, 0x61, 0x8e, 0x35, 0x9e,
+  0x10, 0x4f, 0x11, 0x5f, 0x5c, 0x69, 0xa2, 0x6d, 0x8f, 0xf6, 0xb4, 0x1d,
+  0x23, 0x2b, 0x38, 0xd2, 0x5f, 0xcc, 0x56, 0x83, 0x26, 0x80, 0x48, 0xf4,
+  0xe5, 0xb2, 0xac, 0xb2, 0x95, 0x1a, 0xaa, 0xa3, 0x93, 0x2c, 0xf3, 0x2c,
+  0x2b, 0xab, 0xb8, 0x88, 0x58, 0x1d, 0x39, 0xd1, 0x02, 0x86, 0x26, 0x63,
+  0xe1, 0xa6, 0xe6, 0x2a, 0x77, 0x87, 0x82, 0x61, 0x3c, 0x2a, 0xb2, 0xe9,
+  0xb2, 0x0c, 0xa2, 0xaf, 0x7f, 0xd9, 0x98, 0x83, 0x41, 0x6f, 0x9e, 0x0c,
+  0x12, 0x23, 0x28, 0x0e, 0x1f, 0xce, 0x63, 0xd2, 0xf4, 0xb9, 0x16, 0x2c,
+  0xfb, 0x1d, 0xf3, 0x6c, 0x5e, 0xad, 0x81, 0x82, 0x40, 0xef, 0xad, 0x8d,
+  0x8d, 0xa1, 0x6d, 0x36, 0x43, 0xf0, 0x35, 0x37, 0x1d, 0x80, 0x11, 0xc0,
+  0xf9, 0x13, 0xbf, 0xc1, 0x98, 0x7e, 0x31, 0x60, 0xa4, 0x44, 0xf6, 0x14,
+  0x2c, 0x5c, 0xf6, 0x38, 0x2d, 0xaa, 0x93, 0xc2, 0x57, 0xce, 0x73, 0x61,
+  0xd9, 0x65, 0x97, 0x99, 0xc1, 0xe5, 0xaa, 0xe7, 0xce, 0x13, 0x44, 0x25,
+  0x41, 0xbd, 0x15, 0x37, 0x93, 0x2f, 0x01, 0x45, 0xe9, 0xf2, 0xa1, 0xb9,
+  0x3c, 0xc8, 0xed, 0xff, 0xde, 0x8e, 0x7a, 0x82, 0x77, 0xd3, 0x82, 0x3a,
+  0xb2, 0x8c, 0xfe, 0x5f, 0x84, 0x60, 0x29, 0x64, 0x21, 0xb7, 0x59, 0x83,
+  0xfa, 0x1b, 0x90, 0x0a, 0x75, 0x93, 0x8f, 0x3d, 0xf5, 0x93, 0x74, 0x90,
+  0xdc, 0xb3, 0xfe, 0x62, 0x3a, 0x02, 0x7f, 0x61, 0xa9, 0xa6, 0x1e, 0x41,
+  0x06, 0xc0, 0x17, 0x57, 0xce, 0xaa, 0xc7, 0xe5, 0xa3, 0xa4, 0x98, 0x92,
+  0x88, 0xf5, 0xa8, 0x25, 0x60, 0x1e, 0xd4, 0x8d, 0xa8, 0xa2, 0xb7, 0x17,
+  0x51, 0x91, 0xc9, 0x4f, 0x4b, 0x39, 0xd2, 0x18, 0x2f, 0x25, 0x7f, 0x55,
+  0xa3, 0xb4, 0x6e, 0x8b, 0x16, 0x33, 0xb3, 0xe0, 0x53, 0x09, 0xab, 0x33,
+  0xc7, 0xa4, 0x8d, 0xd1, 0x84, 0x00, 0xf6, 0x5b, 0x02, 0x01, 0x0d, 0x97,
+  0x4d, 0xe1, 0xcb, 0xa3, 0x22, 0x65, 0x9b, 0x6b, 0x0f, 0x99, 0x22, 0x63,
+  0x37, 0xaa, 0x65, 0x71, 0xb8, 0x8d, 0xf2, 0xa3, 0xd7, 0xab, 0x1f, 0x69,
+  0xf1, 0xf0, 0xd1, 0xdd, 0xc7, 0x69, 0x19, 0x4a, 0x04, 0x36, 0x23, 0xd2,
+  0xf0, 0x14, 0xb4, 0x7e, 0xb4, 0xaa, 0x84, 0xa6, 0xf8, 0xb8, 0xcd, 0x6b,
+  0x4e, 0xf2, 0x50, 0x8b, 0x94, 0x82, 0x8a, 0xc0, 0xfc, 0x75, 0x93, 0x6a,
+  0x74, 0xa9, 0x2c, 0xba, 0x99, 0x03, 0xd9, 0x9e, 0x01, 0xf3, 0x1e, 0x87,
+  0x16, 0x78, 0xef, 0xaa, 0x0b, 0x80, 0x18, 0x34, 0x4f, 0xcb, 0xc0, 0xc1,
+  0xef, 0xe9, 0x0d, 0x72, 0x12, 0xe6, 0x93, 0x63, 0x55, 0x5c, 0xcc, 0xf3,
+  0x47, 0x75, 0x1d, 0xf6, 0xc7, 0x51, 0xac, 0xf3, 0xc8, 0xaf, 0x47, 0x21,
+  0x57, 0xc9, 0xde, 0x2e, 0x54, 0x52, 0x09, 0xdc, 0x00, 0x9a, 0x9d, 0x15,
+  0xb5, 0xaa, 0xd4, 0x20, 0x09, 0xd6, 0x1d, 0x55, 0x33, 0x01, 0x96, 0x68,
+  0xa9, 0xf6, 0xea, 0x67, 0x16, 0x89, 0x30, 0xf0, 0x38, 0x55, 0x8a, 0x9f,
+  0x48, 0xfa, 0x76, 0x51, 0xe6, 0xcb, 0x71, 0x05, 0xb9, 0x0a, 0xc4, 0x50,
+  0xf1, 0xcf, 0xbb, 0xe5, 0xcd, 0x42, 0xad, 0x7e, 0x33, 0xae, 0xe4, 0xb2,
+  0xe8, 0x93, 0x61, 0x17, 0x5b, 0x52, 0x0c, 0x54, 0x4b, 0x21, 0x43, 0x3b,
+  0xa1, 0xf1, 0x3b, 0x02, 0xeb, 0x9f, 0xbb, 0x54, 0xfa, 0x0a, 0x00, 0x98,
+  0xe4, 0x25, 0x04, 0xb7, 0xae, 0x8a, 0x60, 0x10, 0x39, 0xf2, 0x48, 0xa1,
+  0xc8, 0x20, 0xd0, 0xb0, 0xb1, 0x72, 0xc3, 0xc1, 0x85, 0x51, 0x77, 0x7d,
+  0x5f, 0xfd, 0x93, 0xfa, 0xdb, 0xa6, 0x85, 0x34, 0xf8, 0x7d, 0x57, 0xdc,
+  0xa1, 0xf0, 0x90, 0x63, 0xb5, 0x58, 0xd5, 0x64, 0x4a, 0x53, 0x76, 0x92,
+  0xa1, 0x9c, 0xc4, 0x99, 0xae, 0xdf, 0xc0, 0xd5, 0xe3, 0xb4, 0xa2, 0xa7,
+  0x35, 0x41, 0xa2, 0x79, 0x2b, 0x9e, 0x0b, 0x18, 0x49, 0x83, 0x88, 0x8e,
+  0xcc, 0x9a, 0x0a, 0x66, 0x83, 0x05, 0x63, 0x9d, 0xc6, 0x36, 0xe9, 0xe4,
+  0xdc, 0x75, 0x41, 0x43, 0xe0, 0x19, 0x77, 0xa7, 0xc9, 0x4e, 0x37, 0xa8,
+  0x4e, 0xb1, 0x29, 0xa1, 0xff, 0x19, 0xf4, 0x1e, 0xb6, 0x1c, 0x62, 0x82,
+  0x62, 0xb7, 0xe0, 0x08, 0xb7, 0xad, 0x96, 0xa1, 0x50, 0x13, 0xbf, 0x74,
+  0x30, 0xbb, 0x2f, 0xf6, 0x06, 0xbb, 0xcf, 0x3f, 0x1b, 0xec, 0x0c, 0x76,
+  0x77, 0x98, 0xb3, 0xf0, 0x50, 0x82, 0xc1, 0xc9, 0xba, 0xb4, 0x74, 0x55,
+  0x79, 0xaf, 0xd9, 0xe7, 0xdb, 0xe3, 0xcb, 0xef, 0xce, 0x2e, 0xbe, 0x89,
+  0x4e, 0xde, 0x5e, 0x1e, 0x5f, 0xbc, 0x3e, 0x38, 0xfc, 0x58, 0x00, 0xe2,
+  0xd0, 0x60, 0x1d, 0x94, 0x23, 0x4c, 0xfc, 0xc2, 0x34, 0xad, 0x82, 0x7e,
+  0xcd, 0x92, 0xf2, 0x66, 0x67, 0x7f, 0xf7, 0x51, 0xe0, 0xd2, 0x16, 0xc3,
+  0xa0, 0x7f, 0xdf, 0x26, 0xb5, 0xcb, 0x93, 0x5a, 0xdf, 0x8a, 0x83, 0x43,
+  0x1b, 0x4a, 0x80, 0x95, 0x0b, 0xce, 0x05, 0x83, 0x47, 0x69, 0x82, 0x74,
+  0x94, 0xc7, 0x66, 0x92, 0x1a, 0x09, 0x7a, 0xa2, 0xa4, 0xd5, 0x2a, 0xcc,
+  0x8b, 0x06, 0xa1, 0x2b, 0xbb, 0xe5, 0x18, 0xe5, 0x65, 0x3a, 0x2d, 0xd5,
+  0x90, 0x22, 0x60, 0x88, 0x13, 0x08, 0x77, 0xc6, 0x90, 0xad, 0x3c, 0x2f,
+  0xaa, 0xf3, 0xa2, 0x3c, 0x97, 0x94, 0xe7, 0x9d, 0xb8, 0x6c, 0x11, 0x87,
+  0x3e, 0x50, 0xc9, 0xb9, 0xc1, 0x58, 0xab, 0xd5, 0x1b, 0xc3, 0x18, 0xda,
+  0x1a, 0x12, 0x61, 0x61, 0xb1, 0xcd, 0x98, 0x58, 0xc5, 0x28, 0x7a, 0xa8,
+  0x03, 0xc1, 0x69, 0x08, 0x46, 0x23, 0x5d, 0x41, 0x94, 0x32, 0xf4, 0xdb,
+  0x2a, 0x8e, 0xa6, 0xdc, 0x4e, 0xc8, 0xa0, 0x10, 0xc9, 0xcf, 0x50, 0xba,
+  0xb9, 0xf5, 0xa2, 0x82, 0xaf, 0x16, 0x49, 0xb9, 0x88, 0xf0, 0x75, 0x11,
+  0xb2, 0x11, 0xa2, 0x39, 0xc9, 0xe3, 0x7b, 0xae, 0x42, 0x23, 0x62, 0x83,
+  0x0f, 0x66, 0x0c, 0x4a, 0x5e, 0xb0, 0xc8, 0xe4, 0xd7, 0x3c, 0x3a, 0x3f,
+  0x7e, 0xd3, 0xb7, 0x6a, 0x78, 0xf4, 0xbb, 0x98, 0xa1, 0x0c, 0x7f, 0x53,
+  0x32, 0x7c, 0x16, 0xc9, 0xdc, 0x02, 0x6a, 0xc0, 0x13, 0x35, 0x02, 0x28,
+  0x9c, 0x00, 0x1f, 0x1a, 0xb1, 0x48, 0x08, 0xaf, 0x55, 0x20, 0x33, 0xbb,
+  0xb4, 0x5a, 0xa0, 0xf0, 0x78, 0x3f, 0x35, 0x6a, 0x39, 0xda, 0x74, 0x91,
+  0xba, 0xdc, 0x1f, 0xc2, 0x51, 0x11, 0x2d, 0xe0, 0x02, 0x04, 0x32, 0xcb,
+  0xb8, 0x3e, 0xff, 0xe6, 0x70, 0xf8, 0xc9, 0xee, 0x9e, 0x0e, 0x67, 0x6b,
+  0xe0, 0x71, 0x2d, 0x1b, 0xc9, 0xf8, 0x60, 0xd7, 0xe1, 0x18, 0x2d, 0xb5,
+  0x1a, 0x07, 0x1c, 0x9b, 0xb1, 0xe9, 0xd2, 0x83, 0xb6, 0x2a, 0xf9, 0x41,
+  0x1b, 0x52, 0x83, 0xd4, 0x84, 0x4b, 0x57, 0xad, 0x8e, 0x9d, 0x21, 0xa8,
+  0xb9, 0xa0, 0x55, 0x0f, 0x4a, 0x17, 0xef, 0x17, 0xcf, 0xed, 0x23, 0x69,
+  0x59, 0x5b, 0x43, 0xee, 0xb8, 0x8f, 0x69, 0xa9, 0xef, 0x39, 0xaf, 0xb7,
+  0xff, 0x96, 0xe1, 0x13, 0xf5, 0x52, 0x37, 0x74, 0x1e, 0xdf, 0x0d, 0x0e,
+  0x80, 0x86, 0xb0, 0x4f, 0xac, 0xae, 0xca, 0xdc, 0xc3, 0xba, 0xf3, 0xd3,
+  0x67, 0xb4, 0x51, 0x74, 0xb2, 0x04, 0xaf, 0x81, 0x99, 0x42, 0x36, 0x65,
+  0xa5, 0xc5, 0x3d, 0x72, 0x94, 0x33, 0x7c, 0xfe, 0x42, 0x82, 0x49, 0xdf,
+  0x0e, 0xa2, 0xaf, 0x93, 0x79, 0xa1, 0x35, 0x8b, 0x2d, 0x03, 0x0b, 0xc1,
+  0x81, 0x5c, 0x3a, 0x09, 0x85, 0x6e, 0x4e, 0x93, 0x58, 0xd1, 0x04, 0x89,
+  0xd7, 0x15, 0xa2, 0xdb, 0x5a, 0x91, 0x87, 0x98, 0x43, 0xf4, 0x70, 0x13,
+  0xa9, 0x81, 0x16, 0x95, 0x0e, 0xd3, 0x42, 0x1b, 0xd8, 0xac, 0x62, 0x02,
+  0x02, 0xa0, 0x1a, 0xcd, 0xe9, 0x31, 0x87, 0x97, 0x49, 0xed, 0xc9, 0x37,
+  0x00, 0x5d, 0x65, 0x3b, 0xa1, 0xe8, 0x5a, 0x9e, 0xa9, 0x4c, 0xf2, 0x1b,
+  0x36, 0x7a, 0x14, 0x74, 0xdd, 0xc4, 0xf3, 0xf1, 0x6a, 0x30, 0x21, 0x29,
+  0x96, 0xcd, 0x66, 0x83, 0xe5, 0xed, 0x76, 0x70, 0x4c, 0x99, 0xe5, 0xdf,
+  0x08, 0x36, 0x40, 0xd5, 0xe4, 0x6d, 0x55, 0xfa, 0x9a, 0xf0, 0x5d, 0x71,
+  0xe5, 0x4c, 0x30, 0x49, 0x58, 0x96, 0xbf, 0x1c, 0xcf, 0xb5, 0x30, 0x57,
+  0xc7, 0x91, 0xc3, 0xfb, 0xe4, 0x16, 0x06, 0x8b, 0x64, 0xb6, 0xef, 0xf2,
+  0x90, 0x8d, 0x3f, 0x28, 0x46, 0xb8, 0x53, 0x29, 0x02, 0xf3, 0xec, 0x3c,
+  0xb9, 0x9e, 0xaa, 0x40, 0x11, 0x2a, 0x2d, 0x1e, 0xbf, 0xb5, 0x99, 0x06,
+  0x22, 0xaa, 0x0e, 0x3c, 0x10, 0x28, 0xc1, 0x44, 0x9c, 0x6a, 0x86, 0xda,
+  0x28, 0xc6, 0xf8, 0xb5, 0x30, 0xac, 0x6f, 0x44, 0x11, 0x43, 0x00, 0x3d,
+  0xca, 0x62, 0xb0, 0x1a, 0x77, 0x2c, 0x1c, 0x49, 0x1d, 0x4f, 0xf4, 0xad,
+  0x50, 0x08, 0xc0, 0x7e, 0x35, 0x34, 0x1a, 0x6e, 0x4f, 0x2b, 0x85, 0x27,
+  0x67, 0x85, 0xbe, 0xbe, 0x7b, 0xc2, 0xb6, 0xee, 0xcb, 0xd3, 0x61, 0x4f,
+  0xe8, 0x61, 0x9e, 0xdc, 0x07, 0x94, 0x25, 0xf8, 0xd4, 0x4a, 0x7e, 0x6c,
+  0xf9, 0x91, 0xf0, 0x35, 0x2b, 0xc3, 0x9b, 0xcb, 0x68, 0x84, 0x33, 0x78,
+  0x27, 0x99, 0xcf, 0x82, 0xb0, 0x85, 0xd0, 0x78, 0x62, 0x1e, 0x8e, 0xd5,
+  0x14, 0x11, 0x81, 0xc8, 0xa1, 0xbc, 0x30, 0x86, 0x1e, 0x09, 0x4c, 0x4f,
+  0x7a, 0x51, 0x7f, 0x0f, 0xe0, 0x39, 0xbb, 0xd5, 0x85, 0x8c, 0xb9, 0xd4,
+  0x47, 0x3c, 0x46, 0x69, 0xa3, 0x0d, 0x57, 0x72, 0xdd, 0x58, 0xc2, 0xa6,
+  0x92, 0xf5, 0x1d, 0xbd, 0xcf, 0x3f, 0xf6, 0x74, 0x52, 0x77, 0xbb, 0x08,
+  0xdd, 0x66, 0x79, 0xf4, 0x2e, 0x99, 0xae, 0x9a, 0x62, 0xc3, 0xde, 0xa3,
+  0x3b, 0x8b, 0x24, 0x89, 0xfb, 0xd4, 0x61, 0xab, 0x0a, 0xbc, 0x36, 0x0c,
+  0xa1, 0x8a, 0x68, 0x68, 0x03, 0xa0, 0x65, 0x54, 0x13, 0xf7, 0x3c, 0xba,
+  0xdb, 0x33, 0x4f, 0x33, 0x7f, 0x63, 0x8b, 0x27, 0xa6, 0x7a, 0xcf, 0x48,
+  0x1a, 0x09, 0x8c, 0x1c, 0xee, 0x16, 0x50, 0x2e, 0xa7, 0x3e, 0x11, 0xdd,
+  0x12, 0x27, 0xa9, 0x70, 0x1a, 0xd6, 0xa0, 0x4a, 0x87, 0x41, 0xc4, 0xdb,
+  0x0f, 0xe8, 0x57, 0x92, 0x85, 0x7d, 0x90, 0x13, 0x42, 0xc0, 0x71, 0xa6,
+  0x49, 0x82, 0x2d, 0x96, 0x33, 0xad, 0xd1, 0x04, 0x46, 0xdc, 0xc3, 0x75,
+  0x5b, 0x46, 0xc4, 0x89, 0x53, 0x09, 0xf9, 0x9b, 0x42, 0x98, 0x86, 0x80,
+  0xa5, 0xc6, 0x52, 0xbf, 0x50, 0x6c, 0x01, 0x13, 0x5c, 0x3d, 0xd0, 0xcb,
+  0x4d, 0x2a, 0x36, 0x0c, 0x44, 0xa8, 0x62, 0xc1, 0x88, 0x55, 0x74, 0x23,
+  0x3a, 0x7d, 0x4b, 0x6e, 0xb4, 0xcc, 0x10, 0x02, 0xeb, 0x04, 0x06, 0xcd,
+  0xa6, 0x1b, 0x42, 0xea, 0x8c, 0xba, 0x21, 0x93, 0xec, 0x7f, 0xce, 0x8b,
+  0x50, 0x74, 0xfd, 0xaa, 0x29, 0x5c, 0x70, 0x75, 0x09, 0xd4, 0x3f, 0x42,
+  0xeb, 0x2d, 0x4d, 0x9d, 0xe7, 0x56, 0x54, 0xb4, 0x9b, 0x3c, 0xb0, 0x88,
+  0xd4, 0xb5, 0x7e, 0xe5, 0x7b, 0x41, 0x03, 0xc0, 0xfa, 0x9e, 0x9f, 0xbc,
+  0x95, 0x42, 0x99, 0xee, 0x2c, 0x25, 0x2c, 0x79, 0xcb, 0x73, 0x22, 0x08,
+  0x8b, 0x85, 0x9f, 0xbd, 0x96, 0x62, 0x73, 0x62, 0x82, 0xe3, 0x43, 0x92,
+  0x5a, 0x77, 0x17, 0x4b, 0x19, 0x41, 0x97, 0x6f, 0xca, 0xa2, 0x98, 0x76,
+  0x6b, 0xf5, 0xdf, 0xdc, 0x8e, 0xd6, 0xae, 0x24, 0x67, 0xcd, 0x1a, 0x4f,
+  0xc2, 0x82, 0xb6, 0xda, 0x4a, 0x85, 0x53, 0xf6, 0x6a, 0x19, 0x93, 0xa1,
+  0x19, 0xfd, 0x93, 0x68, 0xb0, 0x4d, 0x1d, 0x16, 0xdb, 0xf6, 0xe2, 0xe2,
+  0x76, 0x5c, 0xd0, 0x1d, 0xc9, 0xe9, 0xc1, 0x3f, 0x3a, 0x5c, 0x67, 0x1e,
+  0xf2, 0xe4, 0xa7, 0xa8, 0x3f, 0x9e, 0xca, 0x0c, 0x51, 0x6c, 0xf2, 0x47,
+  0xa2, 0x1b, 0x7e, 0xe2, 0xa7, 0x0d, 0x4e, 0x95, 0x1b, 0xbe, 0x7b, 0xc3,
+  0xa8, 0xea, 0xa8, 0xe6, 0x77, 0x79, 0x71, 0xf0, 0x76, 0xf8, 0x5a, 0x2c,
+  0xad, 0x97, 0x99, 0xaf, 0x13, 0xa8, 0xe6, 0x05, 0xe7, 0x8e, 0x74, 0xa0,
+  0x63, 0xf7, 0x02, 0xf5, 0x6d, 0x91, 0xda, 0x5a, 0x41, 0xb0, 0x57, 0x87,
+  0x34, 0x96, 0x0a, 0x84, 0x60, 0xd8, 0x74, 0xa2, 0x36, 0x8b, 0x2d, 0x77,
+  0xbb, 0x16, 0x61, 0xe1, 0x12, 0x0f, 0x77, 0x67, 0x48, 0xa9, 0xfa, 0x10,
+  0x9f, 0x99, 0x43, 0x1b, 0x8c, 0x7d, 0x2a, 0x0c, 0x7d, 0x2d, 0xca, 0xe4,
+  0x21, 0xe9, 0x1f, 0x7d, 0x05, 0xc9, 0x0f, 0xca, 0xb4, 0x38, 0xeb, 0x9c,
+  0x30, 0x74, 0x05, 0x86, 0x73, 0x8d, 0x87, 0xd9, 0x84, 0xd6, 0xf4, 0xe6,
+  0x1f, 0x77, 0xb7, 0xda, 0x9b, 0xbf, 0xfc, 0xa5, 0xcd, 0xb7, 0x8f, 0xdd,
+  0x04, 0x7e, 0x9f, 0xac, 0xb2, 0xf9, 0xc7, 0xbd, 0xad, 0x47, 0x67, 0x14,
+  0xa6, 0xdb, 0xf9, 0x3e, 0xe9, 0x0d, 0x1e, 0x6c, 0xf4, 0xca, 0x4a, 0xc2,
+  0xea, 0x45, 0xec, 0x02, 0x3e, 0xae, 0x3c, 0xe0, 0x5d, 0x05, 0xff, 0x81,
+  0x03, 0x82, 0x9d, 0xf8, 0xe7, 0xfd, 0x38, 0x9a, 0xb7, 0x70, 0xf2, 0x3f,
+  0x8f, 0x43, 0xa0, 0x40, 0xd2, 0xc6, 0x43, 0x9e, 0xc7, 0x89, 0xe7, 0x45,
+  0x36, 0x40, 0xdf, 0x7b, 0x8f, 0xf4, 0xed, 0x67, 0x17, 0xe8, 0xba, 0xec,
+  0x14, 0xe5, 0xa8, 0x2a, 0x43, 0x87, 0xd5, 0x7e, 0x36, 0x7c, 0xf5, 0xc9,
+  0xf5, 0xfd, 0x5d, 0x9e, 0xbc, 0x39, 0x66, 0x14, 0xd9, 0xa3, 0x13, 0x46,
+  0x32, 0x1b, 0x2a, 0x98, 0xa0, 0xa9, 0xb5, 0x0e, 0x6a, 0x35, 0x84, 0xba,
+  0x17, 0x6f, 0xa1, 0x0b, 0x5e, 0x72, 0xe7, 0xdf, 0xed, 0x04, 0x77, 0xad,
+  0xd1, 0xb5, 0x85, 0xe5, 0xf0, 0x9d, 0x5c, 0xf5, 0xdf, 0x64, 0x13, 0xa8,
+  0x5e, 0x7d, 0x01, 0xa7, 0xa6, 0xb7, 0xe8, 0xc3, 0x77, 0xf3, 0x59, 0xe5,
+  0xe3, 0x30, 0x53, 0x50, 0xb5, 0xea, 0x8d, 0x75, 0xe5, 0x00, 0x7e, 0xde,
+  0xee, 0xf7, 0x51, 0xfd, 0x55, 0x82, 0x84, 0xd4, 0x55, 0x50, 0x41, 0x7b,
+  0xb0, 0xb3, 0x4f, 0xeb, 0x93, 0x4e, 0x57, 0xe2, 0xd6, 0x8e, 0x7d, 0x30,
+  0x92, 0x4f, 0x0b, 0xbc, 0xe6, 0xd4, 0x24, 0x6f, 0x31, 0x12, 0x9b, 0xd0,
+  0x46, 0x88, 0x4e, 0x09, 0xe1, 0x3c, 0xb9, 0xf7, 0xd1, 0x34, 0x5a, 0x67,
+  0x2f, 0x5b, 0xac, 0x30, 0xc9, 0xfb, 0x8a, 0xa3, 0xbe, 0xd5, 0x5b, 0xf7,
+  0xb3, 0xbc, 0x53, 0x29, 0x80, 0x21, 0x3d, 0x84, 0x04, 0xa8, 0x9f, 0x68,
+  0xbd, 0x88, 0xb3, 0x3c, 0x60, 0x60, 0x3a, 0x6c, 0xab, 0xff, 0x12, 0x20,
+  0x57, 0x06, 0x40, 0x9b, 0xd5, 0x71, 0x7a, 0x13, 0xe6, 0x06, 0xdf, 0x6d,
+  0x03, 0xb6, 0x9c, 0x9b, 0xab, 0x85, 0xb8, 0xce, 0xa2, 0x5a, 0xc9, 0x2e,
+  0x89, 0x2c, 0x73, 0x58, 0xb2, 0xc3, 0xbb, 0xfd, 0x2e, 0xf0, 0xb5, 0xd3,
+  0x79, 0xcb, 0x64, 0xfa, 0xbf, 0x7c, 0x36, 0x0d, 0x47, 0x5e, 0xd4, 0xb9,
+  0x62, 0x88, 0x05, 0xf6, 0x8a, 0x74, 0x64, 0x00, 0x82, 0x3a, 0x22, 0xb4,
+  0x45, 0x42, 0x3d, 0xb3, 0x35, 0x53, 0x4e, 0x44, 0x51, 0x73, 0x71, 0x96,
+  0xce, 0xe4, 0x2a, 0x96, 0x2e, 0xe6, 0xa3, 0xcb, 0xc5, 0x04, 0x2e, 0x7e,
+  0x09, 0x6e, 0xfc, 0xcf, 0x78, 0xbe, 0x8c, 0xf3, 0x55, 0xb4, 0xbb, 0xd7,
+  0x8b, 0xf6, 0x76, 0x76, 0xf7, 0x5a, 0xe6, 0xd0, 0xf9, 0x4f, 0x0e, 0xb1,
+  0xd9, 0xc3, 0xd7, 0x9d, 0x8f, 0x9d, 0x85, 0x0f, 0x94, 0xc7, 0xcd, 0xaa,
+  0x29, 0xa5, 0xc4, 0x7b, 0xd8, 0xdb, 0x27, 0xc5, 0x6e, 0xb9, 0xbc, 0x1d,
+  0xa0, 0xd1, 0x20, 0x58, 0x88, 0xe1, 0xc9, 0xca, 0x50, 0xb9, 0xa2, 0x25,
+  0xfc, 0xc4, 0x86, 0x56, 0x18, 0x43, 0x1c, 0x85, 0xb3, 0xbe, 0xc5, 0x39,
+  0x6a, 0x6c, 0x55, 0xf7, 0x28, 0x2d, 0x6d, 0x5b, 0x38, 0x50, 0x83, 0xf7,
+  0x86, 0xe8, 0xfd, 0xe8, 0xe4, 0xf0, 0xd2, 0xb0, 0xf3, 0xae, 0xf8, 0x3a,
+  0xcd, 0x57, 0x1f, 0x57, 0xae, 0xe8, 0xd1, 0x67, 0x26, 0xfb, 0x37, 0x09,
+  0x89, 0x65, 0xf3, 0xd1, 0xf2, 0x7a, 0xff, 0xaf, 0x71, 0x7e, 0x9d, 0xcd,
+  0x3f, 0xf4, 0xfc, 0x04, 0x99, 0x4a, 0xfb, 0xc4, 0xa0, 0x76, 0x5f, 0xec,
+  0x3e, 0x91, 0x30, 0xf8, 0x94, 0xab, 0x9b, 0x81, 0x3f, 0x74, 0x67, 0x5d,
+  0x81, 0x6e, 0x40, 0xfc, 0xbd, 0xc3, 0x6b, 0x98, 0x4f, 0xba, 0xa2, 0x73,
+  0xc5, 0xe1, 0xb3, 0x13, 0x7d, 0x56, 0x52, 0x9a, 0xbb, 0x1b, 0x52, 0xc9,
+  0xb0, 0xcb, 0xf9, 0x7f, 0xcb, 0x45, 0x77, 0x50, 0x39, 0xe1, 0x1f, 0x98,
+  0x2b, 0x77, 0xe1, 0xaa, 0x33, 0x1d, 0x0a, 0x4f, 0x56, 0x76, 0x3a, 0xca,
+  0x93, 0xf8, 0xd6, 0xd7, 0xbb, 0xf3, 0xb8, 0x0e, 0x66, 0x40, 0xbf, 0x78,
+  0x7d, 0x28, 0x70, 0x98, 0x96, 0x88, 0x83, 0xa5, 0x8e, 0x9c, 0xb9, 0x63,
+  0x8b, 0x47, 0xf9, 0x81, 0xfe, 0x39, 0x52, 0x7e, 0x7f, 0x32, 0xfa, 0x88,
+  0x87, 0xe8, 0xdc, 0x09, 0xf0, 0xd8, 0x41, 0xb5, 0xb8, 0x01, 0x0b, 0xfe,
+  0x25, 0x93, 0x9a, 0x15, 0xb6, 0xdb, 0x94, 0x5a, 0x6d, 0x62, 0xc0, 0x96,
+  0x82, 0xea, 0x5a, 0x7f, 0x57, 0x2d, 0x06, 0x34, 0x6e, 0x2e, 0x84, 0x76,
+  0x74, 0x70, 0x1e, 0x28, 0x4f, 0x50, 0x4e, 0xbc, 0xa1, 0x88, 0x9f, 0x63,
+  0xc1, 0x19, 0xb5, 0x33, 0xc5, 0x9e, 0xb4, 0xea, 0x79, 0x91, 0xb7, 0x04,
+  0x9f, 0x9c, 0xdc, 0xc5, 0x12, 0x6e, 0x9d, 0xe9, 0x75, 0x02, 0x9b, 0x06,
+  0xd0, 0xbd, 0xa7, 0x93, 0x18, 0x6e, 0x35, 0xbd, 0x84, 0x20, 0x8f, 0xa3,
+  0xad, 0x54, 0x63, 0x6b, 0x68, 0x6f, 0x1e, 0x22, 0x4d, 0x09, 0xd0, 0xdc,
+  0x07, 0xf9, 0x5d, 0x1e, 0xe3, 0x74, 0xd7, 0x95, 0x4d, 0x40, 0xf8, 0x33,
+  0x0d, 0x3e, 0x2e, 0x6e, 0x89, 0x95, 0x8a, 0x3b, 0x98, 0x7a, 0x4f, 0xc7,
+  0x89, 0x19, 0x56, 0x27, 0xa9, 0x84, 0x65, 0xb0, 0x49, 0x03, 0xa8, 0x3a,
+  0x95, 0x0d, 0x93, 0x1b, 0x88, 0x35, 0x98, 0x69, 0x91, 0x08, 0x02, 0x5e,
+  0x74, 0x79, 0x9f, 0x89, 0xd4, 0xe9, 0x50, 0x07, 0x24, 0xb0, 0xb1, 0x58,
+  0xa6, 0x02, 0xa2, 0x41, 0x9b, 0x07, 0x7e, 0x10, 0x54, 0x5a, 0xeb, 0x38,
+  0x6b, 0xca, 0x91, 0xf3, 0xa2, 0x0d, 0x8f, 0xbe, 0x89, 0x38, 0x51, 0x9b,
+  0xfb, 0x38, 0xe4, 0x0a, 0x05, 0xec, 0x10, 0x9f, 0x41, 0x9b, 0xf8, 0x6a,
+  0xc9, 0xe7, 0xfd, 0xf0, 0x26, 0x5e, 0xb0, 0x50, 0xbc, 0xbb, 0xc3, 0x2a,
+  0xf8, 0x77, 0x96, 0xf2, 0xc5, 0x07, 0xd5, 0x2a, 0x93, 0x16, 0x9d, 0x40,
+  0x3b, 0x9f, 0x70, 0x61, 0x51, 0x16, 0x8a, 0xab, 0x86, 0x3f, 0xba, 0x3d,
+  0x8b, 0xed, 0x19, 0x33, 0xac, 0x69, 0x41, 0xa4, 0x91, 0x17, 0x93, 0xdb,
+  0xed, 0x31, 0xfd, 0xf3, 0x64, 0x67, 0x1b, 0xa0, 0x8c, 0x25, 0xec, 0x64,
+  0x4c, 0x93, 0x7b, 0x7b, 0xcf, 0x9e, 0xf5, 0xa2, 0x0e, 0x5b, 0xae, 0xac,
+  0x03, 0x3e, 0x12, 0x74, 0xb2, 0x3a, 0x6d, 0x25, 0xe7, 0xb6, 0xf3, 0xab,
+  0x31, 0xff, 0x8f, 0x5f, 0xb3, 0xca, 0x51, 0x97, 0x9a, 0xc3, 0x81, 0x75,
+  0x98, 0x87, 0xa8, 0x2b, 0x46, 0x56, 0xf7, 0xb4, 0x0f, 0x66, 0x9b, 0x60,
+  0x37, 0xc4, 0x22, 0xc9, 0x16, 0xe6, 0x6b, 0x9c, 0x29, 0x5c, 0x3e, 0xba,
+  0x0f, 0x3c, 0x34, 0xf0, 0x0e, 0x4b, 0x70, 0x95, 0x66, 0xd7, 0x17, 0xcb,
+  0x51, 0x5f, 0xd3, 0x4c, 0x45, 0xd7, 0x48, 0xe9, 0xe4, 0xd2, 0x9f, 0x53,
+  0x33, 0x01, 0x37, 0x38, 0xf2, 0x97, 0x51, 0x47, 0x69, 0x8b, 0x7f, 0x0c,
+  0xe0, 0x2a, 0x4c, 0xc6, 0x3c, 0x8d, 0xec, 0x95, 0xfe, 0xf1, 0x1f, 0xff,
+  0x41, 0xcd, 0xfe, 0x07, 0xb7, 0xf2, 0xea, 0x8f, 0x45, 0x79, 0x13, 0x3c,
+  0xd3, 0x51, 0x82, 0x3f, 0xf1, 0x8e, 0x52, 0x04, 0x3f, 0x01, 0xb2, 0x14,
+  0xd9, 0x50, 0x6f, 0x4e, 0x95, 0x23, 0xf7, 0x82, 0xf9, 0xa5, 0xc8, 0x53,
+  0x13, 0xc3, 0x9b, 0x8b, 0x3d, 0xf8, 0x92, 0x9d, 0x98, 0x09, 0xe7, 0x37,
+  0x13, 0x15, 0x02, 0x93, 0x6e, 0xcb, 0x44, 0x8c, 0xe3, 0xb7, 0xdf, 0x9e,
+  0x5c, 0x9c, 0xbd, 0x7d, 0x73, 0xfc, 0xf6, 0x32, 0xfa, 0xf6, 0xe0, 0xe2,
+  0xe4, 0xe0, 0xcb, 0x53, 0x4d, 0xa3, 0xe6, 0x29, 0x70, 0xc8, 0x88, 0x88,
+  0xde, 0x35, 0x44, 0xd1, 0x20, 0xad, 0xa5, 0x15, 0x4a, 0xbf, 0x56, 0x39,
+  0xf0, 0xbd, 0x62, 0x54, 0xc3, 0xc6, 0xfa, 0x1e, 0xe5, 0x2c, 0x7a, 0xec,
+  0xf5, 0x7b, 0x6f, 0x95, 0x2d, 0xd8, 0x76, 0xb9, 0x0a, 0x12, 0x73, 0x39,
+  0x9a, 0x85, 0xa9, 0xd4, 0xf8, 0x93, 0xaf, 0x42, 0xa4, 0x60, 0xff, 0x83,
+  0xe8, 0x2b, 0xc9, 0xed, 0xd6, 0xb8, 0x2a, 0xf7, 0xaa, 0xe6, 0x19, 0xa9,
+  0x2d, 0x47, 0xfe, 0x73, 0xbf, 0x1c, 0x9c, 0x9e, 0xfa, 0x2e, 0x1f, 0xaf,
+  0xcd, 0xa0, 0x00, 0x3f, 0x92, 0x12, 0x74, 0x63, 0x45, 0x86, 0xaf, 0x33,
+  0x0f, 0xbc, 0x3d, 0x5f, 0x85, 0x18, 0xdb, 0xdc, 0x29, 0x6d, 0xcb, 0xa6,
+  0x00, 0x33, 0xb0, 0xef, 0x91, 0x0e, 0x52, 0x5a, 0xdc, 0xf6, 0xa2, 0xee,
+  0x1f, 0xbb, 0x92, 0xaa, 0x95, 0x00, 0x80, 0x56, 0x2a, 0x3f, 0x6c, 0xf9,
+  0x05, 0x7a, 0x7b, 0xe6, 0xc7, 0xa4, 0x1e, 0x35, 0x37, 0x00, 0xf7, 0xa2,
+  0x77, 0x86, 0x16, 0x26, 0xd7, 0x20, 0x0a, 0xd1, 0x3f, 0xae, 0x38, 0xff,
+  0x2e, 0xdf, 0x5c, 0x69, 0x95, 0x9d, 0x26, 0xad, 0xef, 0x42, 0x79, 0x8b,
+  0xc7, 0x01, 0xd0, 0xb0, 0xd8, 0x74, 0x58, 0x0d, 0x86, 0x3c, 0x20, 0x25,
+  0x91, 0xe5, 0x92, 0x78, 0x90, 0x4a, 0xda, 0x1b, 0x56, 0xbf, 0x57, 0x39,
+  0x29, 0xa8, 0xeb, 0x61, 0xdb, 0x2a, 0x40, 0xc0, 0x7f, 0xc5, 0x51, 0xe6,
+  0x79, 0x3a, 0x51, 0xe4, 0xba, 0x56, 0xea, 0x18, 0xc0, 0xed, 0x71, 0x71,
+  0x08, 0x9c, 0xef, 0x39, 0x97, 0x85, 0x72, 0xe5, 0x11, 0x24, 0x22, 0x95,
+  0xb8, 0x49, 0xce, 0x69, 0x5e, 0x73, 0x15, 0x46, 0x10, 0xe5, 0x09, 0x51,
+  0x3d, 0xbe, 0xce, 0x4c, 0x0c, 0x8f, 0x9d, 0x2f, 0x56, 0xd2, 0xb7, 0x24,
+  0x80, 0xc7, 0xa4, 0x31, 0x07, 0x4d, 0xe5, 0xcc, 0x61, 0xf0, 0xda, 0x9a,
+  0xf1, 0x99, 0x83, 0x96, 0x60, 0x3c, 0xd3, 0xa0, 0x86, 0x22, 0xc8, 0xfd,
+  0xf5, 0x31, 0xf1, 0xcc, 0x53, 0xc4, 0x5f, 0x69, 0x58, 0x51, 0x40, 0xe4,
+  0xb2, 0x5c, 0x61, 0x84, 0xcf, 0x61, 0x58, 0xfc, 0x20, 0x9a, 0xd4, 0x48,
+  0x48, 0x34, 0x69, 0x76, 0x51, 0x3a, 0x45, 0x53, 0x4e, 0x4b, 0x32, 0x8e,
+  0x14, 0x47, 0xa3, 0xf4, 0x3a, 0x32, 0x93, 0x48, 0xc4, 0x54, 0x02, 0xdc,
+  0xb0, 0x6c, 0x96, 0xf0, 0x56, 0x01, 0x15, 0x0c, 0x32, 0xfc, 0x0d, 0x17,
+  0x8d, 0xf7, 0x30, 0x56, 0x36, 0x93, 0x82, 0xc3, 0xf6, 0x03, 0x93, 0x1a,
+  0xcc, 0xea, 0x4b, 0x5e, 0x47, 0x8b, 0x71, 0x52, 0xc8, 0x6b, 0x8d, 0xf8,
+  0x62, 0x7b, 0x2d, 0x00, 0xf8, 0xe6, 0xc8, 0x2f, 0xb1, 0x5c, 0x5d, 0xac,
+  0x83, 0x45, 0xc3, 0x32, 0xd7, 0x80, 0x95, 0x85, 0x6b, 0x50, 0x6d, 0x3a,
+  0xcc, 0x6a, 0x6e, 0x65, 0x2c, 0xa0, 0x9f, 0x4c, 0xf4, 0x12, 0xac, 0x5e,
+  0xa9, 0x31, 0x61, 0x9b, 0xa5, 0xe0, 0x4c, 0x57, 0x52, 0xe9, 0x9e, 0xc6,
+  0xb7, 0x19, 0x30, 0xa0, 0x39, 0x91, 0x88, 0x3c, 0x26, 0x7a, 0xa4, 0xfe,
+  0xd5, 0x17, 0x57, 0x66, 0x6c, 0xe5, 0xb8, 0x8a, 0x2d, 0xef, 0xce, 0x16,
+  0x69, 0x80, 0xa9, 0x75, 0xac, 0x65, 0xae, 0x30, 0x5e, 0xda, 0x2f, 0xb3,
+  0x4a, 0x85, 0x46, 0xad, 0xc8, 0xd2, 0x38, 0xa6, 0xd3, 0x00, 0xb4, 0x5a,
+  0xcc, 0x12, 0x71, 0x43, 0x08, 0x71, 0x15, 0xeb, 0x0f, 0x34, 0xa0, 0x44,
+  0x00, 0x6e, 0x83, 0x99, 0x68, 0xa8, 0x32, 0x8b, 0x69, 0x35, 0x5b, 0x59,
+  0xc0, 0xd9, 0xcc, 0xf5, 0x1a, 0xde, 0x50, 0x5a, 0x2d, 0x21, 0x8d, 0x67,
+  0x22, 0x44, 0x7a, 0xf2, 0x9b, 0xad, 0x24, 0x98, 0x6d, 0x63, 0xe3, 0xf0,
+  0xdd, 0xf0, 0xf2, 0xec, 0x4d, 0x74, 0xf6, 0xee, 0xf2, 0xfc, 0xdd, 0xa5,
+  0x5e, 0x61, 0x23, 0x09, 0x05, 0x16, 0x5d, 0x51, 0xa4, 0x01, 0xdb, 0xcd,
+  0x99, 0xfa, 0x93, 0x11, 0xb9, 0x90, 0x01, 0xac, 0x2e, 0x80, 0xac, 0x71,
+  0xa9, 0x3e, 0x00, 0x72, 0x12, 0x0c, 0x5c, 0xac, 0xf9, 0x3d, 0xad, 0x39,
+  0xd2, 0x34, 0x61, 0xe3, 0xb1, 0xcc, 0x21, 0xe8, 0x3f, 0xed, 0xb5, 0x48,
+  0x6a, 0xd5, 0xcd, 0xe0, 0xf9, 0xad, 0x22, 0x04, 0xf9, 0xf0, 0x1c, 0xb3,
+  0xf1, 0x78, 0x13, 0x50, 0x18, 0x29, 0x88, 0x18, 0x99, 0x71, 0x69, 0x96,
+  0x4d, 0x0b, 0xd6, 0x44, 0x04, 0x4b, 0x35, 0x5f, 0x2d, 0x4c, 0x9b, 0x2b,
+  0x33, 0x9a, 0xe1, 0x8d, 0x0b, 0xb4, 0xe6, 0xe0, 0x14, 0x04, 0x98, 0x89,
+  0x77, 0x9e, 0x23, 0xb9, 0xac, 0xe6, 0xfc, 0x3d, 0xdb, 0xc3, 0x1b, 0xd7,
+  0xed, 0x7d, 0xd4, 0xfd, 0x2e, 0x09, 0x1b, 0xfc, 0xfd, 0xdf, 0x39, 0x1b,
+  0xf0, 0xbd, 0x7d, 0xf2, 0x0f, 0xe9, 0xf2, 0x2f, 0xf3, 0x2e, 0xe2, 0xb2,
+  0xaa, 0x6e, 0xd8, 0x6f, 0x8e, 0x2f, 0xbe, 0x3c, 0xbe, 0x38, 0x1b, 0x22,
+  0x16, 0xc5, 0xcc, 0x5e, 0x4d, 0x62, 0xbf, 0x4d, 0xf2, 0x51, 0x92, 0x67,
+  0x5a, 0x5e, 0xc6, 0xfe, 0x7a, 0xb6, 0xfd, 0xd5, 0x70, 0x78, 0x70, 0x7e,
+  0xe2, 0x2a, 0x91, 0xb8, 0xbc, 0x24, 0xd1, 0x95, 0xe6, 0x92, 0x39, 0xc7,
+  0xf3, 0xb7, 0x57, 0x88, 0x2e, 0xc6, 0xb7, 0x12, 0xaf, 0xda, 0x70, 0x78,
+  0x9a, 0xc1, 0x96, 0x3d, 0x9d, 0x9a, 0xae, 0xc6, 0x0d, 0x1b, 0xd4, 0x90,
+  0x64, 0x6d, 0x0b, 0x01, 0xbf, 0x66, 0xfb, 0x72, 0xcf, 0xc5, 0x74, 0xdd,
+  0xe6, 0xa3, 0x3e, 0x11, 0xfa, 0xad, 0x55, 0x8d, 0x94, 0xc8, 0x7a, 0x62,
+  0x93, 0x12, 0x72, 0xeb, 0xed, 0x0d, 0xb7, 0x5c, 0x28, 0x76, 0xfb, 0x96,
+  0x8f, 0x06, 0x97, 0xca, 0x98, 0x0e, 0x84, 0xb3, 0xcb, 0x59, 0xb2, 0x38,
+  0x4a, 0x66, 0xaf, 0x8f, 0x21, 0x1f, 0x50, 0x6f, 0xae, 0x8a, 0x95, 0x98,
+  0xbc, 0xe8, 0x93, 0xa7, 0x0e, 0x01, 0x2a, 0xac, 0x21, 0x7a, 0x45, 0x42,
+  0xf8, 0xe2, 0x7e, 0xa2, 0x17, 0x08, 0x40, 0x8f, 0xe7, 0x62, 0xf2, 0x16,
+  0xfe, 0x5d, 0x77, 0x7c, 0x70, 0xd9, 0x2d, 0xa4, 0x00, 0x68, 0x80, 0x73,
+  0x34, 0x9a, 0xc6, 0xf3, 0x5b, 0xdc, 0x64, 0xb8, 0x9b, 0x58, 0xed, 0x34,
+  0x60, 0x23, 0x2e, 0x52, 0x06, 0x3f, 0x97, 0x62, 0x0d, 0x40, 0x10, 0xb4,
+  0x7a, 0xe8, 0x6c, 0xe3, 0x75, 0xf8, 0x4d, 0x81, 0x47, 0x07, 0x27, 0xc9,
+  0x2f, 0x02, 0x5b, 0x8f, 0x8e, 0x4f, 0xe9, 0x52, 0x72, 0x69, 0x0b, 0x50,
+  0xd3, 0x93, 0x29, 0xa3, 0xf0, 0x58, 0xa4, 0x89, 0x64, 0xea, 0xa5, 0x60,
+  0x62, 0xc2, 0x38, 0x0c, 0x8f, 0x1b, 0x3e, 0x09, 0x50, 0x0a, 0x12, 0x12,
+  0x0b, 0x57, 0xb6, 0x42, 0xb9, 0xb6, 0x30, 0x30, 0xc0, 0x4d, 0xfa, 0x2a,
+  0x16, 0x61, 0x61, 0x13, 0x0d, 0xe0, 0x3a, 0xf4, 0x71, 0x26, 0xb1, 0x7d,
+  0x27, 0x83, 0xf0, 0xa2, 0xa9, 0xf3, 0x5c, 0x55, 0xf2, 0x25, 0xd6, 0x6e,
+  0x93, 0xbc, 0xde, 0x66, 0x08, 0x00, 0x03, 0xa4, 0x06, 0xc4, 0x0e, 0xee,
+  0xb0, 0x66, 0x2c, 0x08, 0xb6, 0x1a, 0x78, 0x6a, 0x03, 0x1f, 0x58, 0xc1,
+  0x75, 0xc4, 0x42, 0x89, 0x33, 0x0a, 0x41, 0x93, 0x7a, 0xfb, 0x96, 0x13,
+  0x70, 0x9b, 0xbc, 0x82, 0x7d, 0x1a, 0xc6, 0x7b, 0x0a, 0x1c, 0x02, 0xcc,
+  0x83, 0x92, 0x01, 0x00, 0x4d, 0xc6, 0xc9, 0xb8, 0xfd, 0xb7, 0x7c, 0x55,
+  0x64, 0xfd, 0xd1, 0x12, 0xba, 0x99, 0x07, 0xee, 0xd2, 0xac, 0x40, 0xae,
+  0x13, 0x0c, 0xa4, 0x2e, 0x7c, 0xcf, 0x3e, 0x0e, 0xe4, 0x5b, 0x8b, 0xdb,
+  0x03, 0x09, 0x78, 0x55, 0x14, 0x17, 0x87, 0xdd, 0x21, 0x51, 0xed, 0x88,
+  0xee, 0xd5, 0x10, 0x66, 0x1d, 0xa1, 0x6e, 0xb2, 0x8b, 0x3f, 0x9b, 0x6b,
+  0x2d, 0x3d, 0xd8, 0xdb, 0xab, 0x31, 0xbc, 0xa5, 0xc3, 0x4f, 0xbf, 0x84,
+  0x88, 0x90, 0x28, 0xaa, 0xb8, 0x05, 0xe7, 0x5a, 0x2a, 0xc0, 0x5d, 0xc9,
+  0x55, 0x83, 0x04, 0x76, 0x20, 0x9e, 0x4a, 0xdd, 0x87, 0xb5, 0xb7, 0x88,
+  0x1c, 0xa6, 0xf2, 0xf2, 0xf2, 0x87, 0xf3, 0xe3, 0x57, 0xf6, 0xe6, 0x63,
+  0x7b, 0x26, 0x68, 0x5c, 0x88, 0xc5, 0x48, 0x14, 0xfe, 0x32, 0xa8, 0xcc,
+  0x49, 0x44, 0xd6, 0x2f, 0xcd, 0x47, 0x2c, 0xdd, 0xf4, 0xa3, 0xef, 0x8f,
+  0x4e, 0x86, 0xe7, 0xa7, 0x67, 0x87, 0xaf, 0x5e, 0x7e, 0x6f, 0xdc, 0xf8,
+  0x73, 0x86, 0x9f, 0x11, 0x19, 0xcd, 0x7d, 0xe6, 0xd1, 0x02, 0xf4, 0xbd,
+  0xb7, 0xc7, 0xdf, 0xbd, 0x27, 0x0d, 0xe1, 0x15, 0xc3, 0x84, 0xf7, 0xee,
+  0xe2, 0xa9, 0xbe, 0xc4, 0x6a, 0x56, 0x8b, 0x5c, 0x17, 0xe4, 0x76, 0xb4,
+  0x2d, 0x2c, 0xcb, 0x13, 0x01, 0x66, 0xeb, 0x0a, 0x12, 0xb4, 0x86, 0x67,
+  0x05, 0x35, 0x86, 0xe2, 0x4a, 0xa2, 0x66, 0x4b, 0xc9, 0xc6, 0xcc, 0xdd,
+  0xfc, 0xdd, 0x52, 0xc2, 0xf4, 0xd8, 0x35, 0x1d, 0x7a, 0x7c, 0x11, 0x09,
+  0xa9, 0xdf, 0xf8, 0x08, 0x51, 0x05, 0xe4, 0xcd, 0x39, 0x30, 0xc2, 0x01,
+  0x1b, 0x6a, 0xdd, 0x4c, 0xf8, 0x52, 0x15, 0xfd, 0x50, 0x61, 0x7d, 0x38,
+  0x28, 0xd3, 0xe2, 0xb3, 0x5d, 0x61, 0x66, 0x11, 0x5f, 0xdc, 0x58, 0xe2,
+  0xf1, 0x98, 0x7e, 0x30, 0xea, 0x24, 0x57, 0x78, 0x39, 0xe7, 0x42, 0xed,
+  0xc3, 0x4b, 0x56, 0xa5, 0xb4, 0x96, 0x99, 0x9a, 0xa1, 0xad, 0xd0, 0x1c,
+  0x50, 0x00, 0xaa, 0x68, 0x96, 0x61, 0xf1, 0x89, 0xca, 0x89, 0x76, 0x6c,
+  0xae, 0x9a, 0x16, 0xc8, 0xd6, 0x04, 0xc9, 0x35, 0x64, 0x21, 0x54, 0x30,
+  0x59, 0xe3, 0x2b, 0x3b, 0xc0, 0x99, 0x92, 0x46, 0xad, 0x06, 0x03, 0x0a,
+  0xa8, 0x60, 0x77, 0xa6, 0xe9, 0xc8, 0x1b, 0xce, 0x6b, 0x6e, 0x49, 0xf6,
+  0x7a, 0x2b, 0xfc, 0x43, 0x78, 0x84, 0xcc, 0x24, 0xee, 0x73, 0x6d, 0x8b,
+  0xcc, 0x8a, 0x2a, 0x0a, 0xf1, 0xc3, 0x64, 0x1d, 0x66, 0x44, 0x3a, 0x65,
+  0x15, 0x8a, 0x89, 0x89, 0x68, 0xee, 0xd3, 0x20, 0xae, 0x51, 0x11, 0x85,
+  0x80, 0x86, 0xaa, 0x2c, 0x1b, 0x25, 0xcc, 0x25, 0xb7, 0x89, 0x8d, 0x2d,
+  0x24, 0xb0, 0x20, 0x57, 0x1b, 0xf1, 0x27, 0x3a, 0xb3, 0x86, 0xf4, 0xa1,
+  0x62, 0xe3, 0x35, 0x27, 0x45, 0x01, 0xb6, 0x69, 0xc2, 0xa2, 0x16, 0xac,
+  0x70, 0x61, 0x67, 0x76, 0x93, 0xf2, 0x0a, 0x8e, 0x96, 0x61, 0x95, 0x2f,
+  0x37, 0x7a, 0x29, 0x72, 0x81, 0x85, 0x47, 0xe4, 0x5d, 0x9c, 0x03, 0x16,
+  0xb1, 0x54, 0xec, 0x71, 0x53, 0x7a, 0x34, 0x8c, 0x6e, 0x50, 0x45, 0x88,
+  0x31, 0xba, 0xb4, 0x02, 0x7e, 0x8f, 0xad, 0xa8, 0x5b, 0x4d, 0x21, 0xdf,
+  0x3c, 0xb1, 0x78, 0x18, 0x31, 0x35, 0x14, 0xec, 0x73, 0x98, 0x8f, 0xdd,
+  0x65, 0xcc, 0x69, 0x2c, 0x1c, 0x17, 0x92, 0x2b, 0xfa, 0xce, 0x92, 0xeb,
+  0xa5, 0x6b, 0x5d, 0x51, 0x54, 0xc5, 0x64, 0xc7, 0x9b, 0x21, 0xb3, 0xf9,
+  0xc0, 0x60, 0x59, 0xee, 0x80, 0xac, 0xc4, 0xc4, 0xbe, 0xd2, 0x0e, 0x5d,
+  0xca, 0xb5, 0x6d, 0x56, 0x4f, 0x32, 0x78, 0x62, 0x24, 0x8c, 0x98, 0x6d,
+  0x37, 0x48, 0x3c, 0x2c, 0x34, 0x9d, 0xd3, 0x39, 0x2d, 0x85, 0xe1, 0xa1,
+  0x88, 0x91, 0x4f, 0x80, 0xaa, 0x38, 0x07, 0x49, 0xb2, 0x5c, 0xa0, 0x22,
+  0xcf, 0x58, 0x31, 0xc9, 0x11, 0x09, 0xea, 0xda, 0xb3, 0x3b, 0xc4, 0xaf,
+  0x15, 0x2d, 0xea, 0x9b, 0x77, 0xa7, 0x97, 0x27, 0xe7, 0xa1, 0x03, 0x32,
+  0xfa, 0xee, 0xe4, 0xf2, 0x6b, 0x92, 0xd7, 0xb9, 0xe2, 0xf3, 0x29, 0x7b,
+  0x79, 0xde, 0xbc, 0x39, 0x78, 0xcb, 0xe9, 0xea, 0x6f, 0x11, 0x30, 0x77,
+  0x00, 0x9d, 0x81, 0xb9, 0x11, 0xad, 0x30, 0x93, 0x0e, 0x27, 0x32, 0xf7,
+  0x9a, 0xde, 0x86, 0xda, 0xe9, 0x03, 0xc3, 0xe1, 0x23, 0x14, 0xae, 0x11,
+  0x6f, 0xb8, 0xea, 0x04, 0x2b, 0xb6, 0xed, 0xe0, 0xd4, 0xb2, 0x9e, 0xc5,
+  0xeb, 0x5c, 0x07, 0x23, 0x47, 0xd2, 0x9c, 0xc8, 0xe6, 0xf0, 0xad, 0xca,
+  0xd5, 0xed, 0x3d, 0x18, 0xd8, 0x50, 0x87, 0x68, 0x8a, 0x00, 0x56, 0x12,
+  0x99, 0xe6, 0xaa, 0xd2, 0xc8, 0x75, 0x59, 0x0d, 0x62, 0xa7, 0x1e, 0x31,
+  0x24, 0x78, 0x97, 0x33, 0x6f, 0x14, 0x64, 0x65, 0x93, 0xf5, 0xe5, 0x8b,
+  0xd3, 0xf0, 0x3e, 0xad, 0x56, 0x15, 0xb6, 0xa8, 0xb3, 0xeb, 0x2c, 0xf1,
+  0x07, 0xb7, 0x7f, 0x66, 0xcd, 0x98, 0x05, 0x18, 0x1a, 0x98, 0xdc, 0x2d,
+  0x7d, 0x66, 0x6b, 0x7d, 0xda, 0x92, 0x2d, 0x57, 0xb5, 0x46, 0x2d, 0x68,
+  0xfb, 0x22, 0x55, 0x56, 0x6a, 0x7b, 0x03, 0x46, 0xf6, 0xcc, 0xb5, 0xac,
+  0xd1, 0x0d, 0x08, 0xf2, 0xd5, 0x3c, 0x19, 0x9d, 0x33, 0x98, 0xa5, 0x3d,
+  0x56, 0x49, 0xf3, 0xad, 0x15, 0x18, 0xb7, 0x3c, 0x29, 0x64, 0x47, 0x32,
+  0x9e, 0x8b, 0xf7, 0x9d, 0xa2, 0x52, 0x57, 0x96, 0x0d, 0x92, 0x87, 0x84,
+  0xdd, 0x9c, 0xfc, 0xeb, 0x5f, 0x17, 0xd7, 0x61, 0x0a, 0x15, 0xe6, 0xaa,
+  0xb9, 0xc2, 0xed, 0x28, 0xc1, 0x22, 0x15, 0x69, 0xbd, 0xb2, 0xca, 0x08,
+  0xb4, 0x08, 0xd9, 0xee, 0xba, 0x0e, 0xf5, 0xfb, 0xbd, 0xe6, 0xf7, 0x7b,
+  0x62, 0x79, 0xe4, 0xba, 0xf4, 0x0e, 0x5c, 0x53, 0x12, 0x83, 0x43, 0xe9,
+  0xcd, 0x64, 0x02, 0xa6, 0x30, 0x29, 0x61, 0x0f, 0xf7, 0x8a, 0xb0, 0x44,
+  0x31, 0xff, 0x73, 0x60, 0xd2, 0x32, 0x47, 0xc2, 0x23, 0x1e, 0x81, 0xa5,
+  0x58, 0xa2, 0x49, 0x11, 0xbb, 0x05, 0x36, 0xc5, 0xb7, 0x15, 0x35, 0x48,
+  0xdf, 0x3f, 0x75, 0xd1, 0xdd, 0x9e, 0xa5, 0xa1, 0xe6, 0x97, 0xa6, 0xd7,
+  0xf4, 0xd3, 0xc5, 0x9d, 0x95, 0xbd, 0xa4, 0x5f, 0x9f, 0xbb, 0x72, 0x2f,
+  0x45, 0xc5, 0x4d, 0x55, 0x41, 0xb1, 0x35, 0xde, 0x8f, 0xc1, 0x21, 0xda,
+  0x8e, 0x19, 0x83, 0x03, 0x80, 0x1d, 0xd4, 0xc6, 0x95, 0x54, 0xe3, 0x7c,
+  0x83, 0x02, 0x94, 0xb0, 0x31, 0x4f, 0x91, 0x6a, 0x09, 0x76, 0x14, 0xf0,
+  0x96, 0x10, 0x39, 0x5e, 0x77, 0xfd, 0xc7, 0xbd, 0x9d, 0x9d, 0xdd, 0xfd,
+  0xdd, 0xcf, 0x5e, 0xec, 0xec, 0xef, 0xee, 0xee, 0xee, 0xed, 0xef, 0xee,
+  0xef, 0xef, 0xed, 0xfc, 0xb4, 0xcd, 0xa6, 0xa3, 0xbb, 0x34, 0xb9, 0x77,
+  0xf5, 0xe5, 0xbf, 0x93, 0x6b, 0x1a, 0x7e, 0x83, 0x95, 0xb8, 0x03, 0x99,
+  0x4b, 0xaa, 0x86, 0x6b, 0x82, 0x8f, 0x83, 0x29, 0x90, 0x48, 0x6c, 0x41,
+  0x27, 0x5b, 0xf8, 0xd4, 0x45, 0x9c, 0xc1, 0x00, 0x3d, 0x19, 0xa3, 0xfa,
+  0xdb, 0x92, 0x67, 0x3a, 0x62, 0x69, 0x00, 0x22, 0x4d, 0xe1, 0x12, 0xc5,
+  0xae, 0xa7, 0xd9, 0x68, 0x84, 0x68, 0x78, 0x97, 0x2b, 0x39, 0x88, 0x18,
+  0xa6, 0xf3, 0x56, 0x48, 0x42, 0x9d, 0x07, 0x88, 0x55, 0x93, 0x83, 0xee,
+  0x57, 0x47, 0xe4, 0x2e, 0x8d, 0xcf, 0x1d, 0x67, 0x8c, 0x53, 0x3f, 0x61,
+  0xa6, 0x44, 0x8b, 0x94, 0xbb, 0x1c, 0x8a, 0xe8, 0x2a, 0xf9, 0x6c, 0x67,
+  0x7f, 0x9f, 0x4b, 0x49, 0xfc, 0x7e, 0xb7, 0xa7, 0x61, 0x86, 0x61, 0xec,
+  0x74, 0xcf, 0xdd, 0x4e, 0xd2, 0x06, 0x6b, 0x1f, 0xe1, 0x3c, 0xe7, 0xcb,
+  0x59, 0x92, 0xab, 0x1e, 0x82, 0xfb, 0x50, 0xd0, 0x64, 0x98, 0x18, 0x6d,
+  0xc8, 0xee, 0x59, 0x14, 0x47, 0x81, 0x69, 0x5e, 0x92, 0x1d, 0xfc, 0xe5,
+  0xa9, 0xe7, 0x1c, 0x47, 0x65, 0x2e, 0x85, 0x27, 0xf9, 0x61, 0x08, 0xe4,
+  0x80, 0xc8, 0xc8, 0x6e, 0x43, 0x59, 0x55, 0x13, 0x3c, 0x7e, 0x0c, 0x06,
+  0xbf, 0xf7, 0x6c, 0xf7, 0x27, 0x89, 0x6a, 0x63, 0x02, 0xf7, 0xab, 0xa0,
+  0xc5, 0xc2, 0x26, 0x2a, 0x8f, 0x48, 0x4e, 0x98, 0x12, 0xc6, 0x66, 0x32,
+  0xb8, 0x1e, 0x98, 0x90, 0xa0, 0x86, 0xc3, 0x5e, 0x18, 0x5b, 0x2c, 0x70,
+  0xd6, 0x52, 0xa9, 0x1d, 0x6a, 0x97, 0xd9, 0x86, 0xcc, 0xc6, 0x2b, 0x76,
+  0xc9, 0x4a, 0xd5, 0x97, 0x0d, 0xba, 0x32, 0x0e, 0x4e, 0x4e, 0x39, 0x6e,
+  0xe5, 0x94, 0x24, 0xb0, 0xa1, 0xb1, 0x32, 0x04, 0xf7, 0x20, 0xee, 0x66,
+  0x9e, 0xf2, 0x6d, 0xda, 0x73, 0x60, 0xf3, 0x16, 0x23, 0x0f, 0xb1, 0x82,
+  0xed, 0xef, 0x22, 0x99, 0x2b, 0x28, 0x14, 0xc9, 0xc3, 0xc4, 0xcf, 0x0a,
+  0x31, 0xa7, 0x00, 0x7b, 0x91, 0x41, 0x89, 0xe1, 0xeb, 0x80, 0xc4, 0x2b,
+  0x0b, 0x8f, 0xfa, 0x16, 0x79, 0x32, 0x4d, 0xee, 0xd4, 0xee, 0x21, 0x48,
+  0x76, 0x5f, 0xa9, 0x9b, 0x41, 0xea, 0xdb, 0x95, 0xde, 0x5b, 0x52, 0xf1,
+  0x64, 0x70, 0x9f, 0xdb, 0x02, 0x02, 0xe0, 0x73, 0xbb, 0x51, 0x12, 0xd8,
+  0xa1, 0x2f, 0x9b, 0x57, 0x87, 0xdf, 0xeb, 0xb3, 0x08, 0x5a, 0xc8, 0x4e,
+  0xbc, 0x2b, 0x34, 0x7d, 0xb7, 0x1e, 0x22, 0x28, 0xaa, 0xbc, 0x15, 0x48,
+  0x12, 0xb3, 0x58, 0xcf, 0x00, 0x32, 0xc5, 0x98, 0xc7, 0x52, 0x4b, 0x8f,
+  0x4d, 0x28, 0x68, 0xe9, 0x8a, 0xe4, 0x25, 0x86, 0x42, 0xef, 0x45, 0xbe,
+  0x9c, 0x7c, 0x36, 0xa5, 0x3f, 0x11, 0xf0, 0xc0, 0xab, 0x8e, 0x67, 0x19,
+  0xe0, 0x2f, 0x08, 0x43, 0xa2, 0x3f, 0x25, 0x06, 0x56, 0xff, 0x42, 0x53,
+  0xf9, 0x12, 0x38, 0x92, 0x3d, 0x21, 0x56, 0xf6, 0x0b, 0x94, 0xe3, 0x81,
+  0x1b, 0xbd, 0xba, 0xe5, 0x64, 0xfc, 0x47, 0xe6, 0x35, 0x32, 0x36, 0x91,
+  0xe5, 0xb6, 0xba, 0xb2, 0x0b, 0x23, 0xa9, 0x67, 0xf5, 0xe5, 0x92, 0xed,
+  0xd4, 0xae, 0x5e, 0x03, 0x8f, 0x62, 0xc6, 0xa4, 0x95, 0x48, 0xe9, 0x38,
+  0xd7, 0x38, 0x0b, 0x5c, 0x4b, 0xda, 0x5d, 0x69, 0xfd, 0x34, 0xbb, 0xe7,
+  0xc2, 0x77, 0x57, 0x57, 0x5c, 0xcd, 0xfc, 0x6c, 0xee, 0xf1, 0x22, 0x99,
+  0xab, 0xca, 0x83, 0x33, 0x2b, 0xb6, 0x41, 0x73, 0xb3, 0xb2, 0xf6, 0x16,
+  0xc5, 0x38, 0x88, 0x0e, 0xb0, 0x4a, 0x24, 0x0b, 0xa1, 0x39, 0x71, 0xb7,
+  0x41, 0x1c, 0xac, 0x05, 0xcd, 0x69, 0x61, 0x5e, 0xbe, 0x21, 0x67, 0xa8,
+  0x00, 0xc8, 0xc1, 0x61, 0xb3, 0x6c, 0x6e, 0x31, 0xd0, 0xcb, 0x42, 0xd0,
+  0xc3, 0xac, 0x8a, 0xef, 0x86, 0xd8, 0x0c, 0xd3, 0xa9, 0xc2, 0xf5, 0xaa,
+  0xe0, 0x8c, 0x37, 0xc2, 0xc9, 0x4c, 0xfa, 0x8b, 0x9b, 0x85, 0xed, 0xb4,
+  0xf1, 0x2b, 0x61, 0x66, 0x1a, 0x75, 0x8b, 0xeb, 0xed, 0xfc, 0xeb, 0xf3,
+  0x41, 0x74, 0xcc, 0x2d, 0xc9, 0x98, 0xf4, 0x1e, 0x82, 0x06, 0x45, 0xdf,
+  0xd1, 0x64, 0xaf, 0x99, 0x81, 0x9f, 0xe5, 0xfc, 0x17, 0x5a, 0xd3, 0x2f,
+  0xc5, 0x68, 0x82, 0x6f, 0xab, 0xbd, 0x52, 0x43, 0xd9, 0x5c, 0x63, 0xe7,
+  0xf0, 0x3b, 0x1d, 0x15, 0xe2, 0x8e, 0x6e, 0x9b, 0x7c, 0x0f, 0x59, 0x5e,
+  0xc1, 0x5a, 0x90, 0x37, 0x23, 0x62, 0x9a, 0x60, 0x7d, 0x8b, 0x15, 0xf6,
+  0x0f, 0x0a, 0x37, 0x00, 0x3a, 0xf4, 0x7a, 0x90, 0x06, 0x02, 0xd2, 0x52,
+  0xf2, 0x73, 0x01, 0x36, 0x72, 0xae, 0x72, 0x41, 0x19, 0xc8, 0x13, 0x0d,
+  0x47, 0xca, 0xd4, 0x81, 0x21, 0xfa, 0x46, 0x91, 0xd4, 0x8e, 0x6b, 0x20,
+  0x5e, 0xd9, 0x17, 0x2c, 0x14, 0xf3, 0x58, 0x88, 0x09, 0xd1, 0x16, 0x0c,
+  0x36, 0xfe, 0x3f, 0xfc, 0x55, 0x3d, 0x92, 0xff, 0xfe, 0x01, 0x00,
 };
 #define BUF_SIZE 0x10000
 /* Decompress and send to stdout a gzip-compressed buffer */
 void hugehelp(void)
 {
   unsigned char* buf;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/main.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/main.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/main.c	2009-10-29 04:21:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/main.c	2010-02-04 02:16:48.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: main.c,v 1.541 2009-10-27 16:38:42 yangtse Exp $
+ * $Id: main.c,v 1.558 2010-02-03 10:57:42 yangtse Exp $
  ***************************************************************************/
 #include "setup.h"
 
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
@@ -274,13 +274,13 @@
 
 /*
  * Default sizeof(off_t) in case it hasn't been defined in config file.
  */
 
 #ifndef SIZEOF_OFF_T
-#  if defined(__VMS) && (defined(__alpha) || defined(__ia64))
+#  if defined(__VMS) && !defined(__VAX)
 #    if defined(_LARGEFILE)
 #      define SIZEOF_OFF_T 8
 #    endif
 #  elif defined(__OS400__) && defined(__ILEC400__)
 #    if defined(_LARGE_FILES)
 #      define SIZEOF_OFF_T 8
@@ -474,12 +474,13 @@
   bool encoding;    /* Accept-Encoding please */
   long authtype;    /* auth bitmask */
   bool use_resume;
   bool resume_from_current;
   bool disable_epsv;
   bool disable_eprt;
+  bool ftp_pret;
   curl_off_t resume_from;
   char *postfields;
   curl_off_t postfieldsize;
   char *referer;
   long timeout;
   long connecttimeout;
@@ -497,12 +498,14 @@
   bool showerror;
   char *userpwd;
   char *proxyuserpwd;
   char *proxy;
   int proxyver;     /* set to CURLPROXY_HTTP* define */
   char *noproxy;
+  char *mail_from;
+  struct curl_slist *mail_rcpt;
   bool proxytunnel;
   bool ftp_append;         /* APPE on ftp */
   bool mute;               /* shutup */
   bool use_ascii;          /* select ascii or text transfer */
   bool autoreferer;        /* automatically set referer */
   bool failonerror;        /* fail on (HTTP) errors */
@@ -540,13 +543,13 @@
   char *trace_dump; /* file to dump the network trace to, or NULL */
   FILE *trace_stream;
   bool trace_fopened;
   trace tracetype;
   bool tracetime; /* include timestamp? */
   long httpversion;
-  bool progressmode;
+  int progressmode;
   bool nobuffer;
   bool readbusy; /* set when reading input returns EAGAIN */
   bool globoff;
   bool use_httpget;
   bool insecure_ok; /* set TRUE to allow insecure SSL connects */
   bool create_dirs;
@@ -599,22 +602,23 @@
   long retry_delay; /* delay between retries (in seconds) */
   long retry_maxtime; /* maximum time to keep retrying */
 
   char *ftp_account; /* for ACCT */
   char *ftp_alternative_to_user; /* send command if USER/PASS fails */
   int ftp_filemethod;
-
+  long tftp_blksize; /* TFTP BLKSIZE option */
   bool ignorecl; /* --ignore-content-length */
   bool disable_sessionid;
 
   char *libcurl; /* output libcurl code to this file name */
   bool raw;
   bool post301;
   bool post302;
   bool nokeepalive; /* for keepalive needs */
   long alivetime;
+  bool content_disposition; /* use Content-disposition filename */
 
   int default_node_flags; /* default flags to seach for each 'node', which is
                              basically each given URL to transfer */
   struct OutStruct *outs;
 };
 
@@ -789,17 +793,16 @@
     "    --ftp-alternative-to-user <cmd> String to replace \"USER [name]\" (F)",
     "    --ftp-create-dirs Create the remote dirs if not present (F)",
     "    --ftp-method [multicwd/nocwd/singlecwd] Control CWD usage (F)",
     "    --ftp-pasv      Use PASV/EPSV instead of PORT (F)",
     " -P/--ftp-port <address> Use PORT with address instead of PASV (F)",
     "    --ftp-skip-pasv-ip Skip the IP address for PASV (F)\n"
-    "    --ftp-ssl       Try SSL/TLS for ftp transfer (F)",
+    "    --ftp-pret      Send PRET before PASV (for drftpd) (F)",
     "    --ftp-ssl-ccc   Send CCC after authenticating (F)",
     "    --ftp-ssl-ccc-mode [active/passive] Set CCC mode (F)",
     "    --ftp-ssl-control Require SSL/TLS for ftp login, clear for transfer (F)",
-    "    --ftp-ssl-reqd  Require SSL/TLS for ftp transfer (F)",
     " -G/--get           Send the -d data with a HTTP GET (H)",
     " -g/--globoff       Disable URL sequences and ranges using {} and []",
     " -H/--header <line> Custom header to pass to server (H)",
     " -I/--head          Show document info only",
     " -h/--help          This help text",
     "    --hostpubmd5 <md5> Hex encoded MD5 string of the host public key. (SSH)",
@@ -814,17 +817,20 @@
     "    --keepalive-time <seconds> Interval between keepalive probes",
     "    --key <key>     Private key file name (SSL/SSH)",
     "    --key-type <type> Private key file type (DER/PEM/ENG) (SSL)",
     "    --krb <level>   Enable Kerberos with specified security level (F)",
     "    --libcurl <file> Dump libcurl equivalent code of this command line",
     "    --limit-rate <rate> Limit transfer speed to this rate",
+    " -J/--remote-header-name Use the header-provided filename (H)",
     " -l/--list-only     List only names of an FTP directory (F)",
     "    --local-port <num>[-num] Force use of these local port numbers",
     " -L/--location      Follow Location: hints (H)",
     "    --location-trusted Follow Location: and send auth to other hosts (H)",
     " -M/--manual        Display the full manual",
+    "    --mail-from <from> Mail from this address",
+    "    --mail-rcpt <to> Mail to this receiver(s)",
     "    --max-filesize <bytes> Maximum file size to download (H/F)",
     "    --max-redirs <num> Maximum number of redirects allowed (H)",
     " -m/--max-time <seconds> Maximum time allowed for the transfer",
     "    --negotiate     Use HTTP Negotiate Authentication (H)",
     " -n/--netrc         Must read .netrc for user name and password",
     "    --netrc-optional Use either .netrc or URL; overrides -n",
@@ -869,17 +875,20 @@
 #if defined(HAVE_GSSAPI) || defined(USE_WINDOWS_SSPI)
     "    --socks5-gssapi-service <name> SOCKS5 proxy service name for gssapi",
     "    --socks5-gssapi-nec  Compatibility with NEC SOCKS5 server",
 #endif
     " -Y/--speed-limit   Stop transfer if below speed-limit for 'speed-time' secs",
     " -y/--speed-time    Time needed to trig speed-limit abort. Defaults to 30",
+    "    --ssl           Try SSL/TLS (FTP, IMAP, POP3, SMTP)",
+    "    --ssl-reqd      Require SSL/TLS (FTP, IMAP, POP3, SMTP)",
     " -2/--sslv2         Use SSLv2 (SSL)",
     " -3/--sslv3         Use SSLv3 (SSL)",
     "    --stderr <file> Where to redirect stderr. - means stdout",
     "    --tcp-nodelay   Use the TCP_NODELAY option",
     " -t/--telnet-option <OPT=val> Set telnet option",
+    "    --tftp-blksize <value> Set TFTP BLKSIZE option (must be >512)",
     " -z/--time-cond <time> Transfer based on a time condition",
     " -1/--tlsv1         Use TLSv1 (SSL)",
     "    --trace <file>  Write a debug trace to the given file",
     "    --trace-ascii <file> Like --trace but without the hex output",
     "    --trace-time    Add time stamps to trace/verbose output",
     " -T/--upload-file <file> Transfer <file> to remote site",
@@ -1693,13 +1702,15 @@
     {"*x", "krb4" ,       TRUE}, /* this is the previous name */
     {"*y", "max-filesize", TRUE},
     {"*z", "disable-eprt", FALSE},
     {"*Z", "eprt", FALSE}, /* made like this to make --no-eprt and --eprt to
                               work although --disable-eprt is the documented
                               option */
-    {"$a", "ftp-ssl",    FALSE},
+    {"$a", "ftp-ssl",    FALSE}, /* deprecated name since 7.20.0 */
+    {"$a", "ssl",        FALSE}, /* new option name in 7.20.0, previously this
+                                    was ftp-ssl */
     {"$b", "ftp-pasv",   FALSE},
     {"$c", "socks5",   TRUE},
     {"$c", "socks",      TRUE}, /* this is how the option once was documented
                                    but we prefer the --socks5 version for
                                    explicit version */
     {"$d", "tcp-nodelay",FALSE},
@@ -1716,13 +1727,15 @@
     {"$q", "ftp-skip-pasv-ip", FALSE},
     {"$r", "ftp-method", TRUE},
     {"$s", "local-port", TRUE},
     {"$t", "socks4",     TRUE},
     {"$T", "socks4a",    TRUE},
     {"$u", "ftp-alternative-to-user", TRUE},
-    {"$v", "ftp-ssl-reqd", FALSE},
+    {"$v", "ftp-ssl-reqd", FALSE}, /* deprecated name since 7.20.0 */
+    {"$v", "ssl-reqd", FALSE},  /* new option name in 7.20.0, previously this
+                                   was ftp-ssl-reqd */
     {"$w", "sessionid", FALSE}, /* listed as --no-sessionid in the help */
     {"$x", "ftp-ssl-control", FALSE},
     {"$y", "ftp-ssl-ccc", FALSE},
     {"$j", "ftp-ssl-ccc-mode", TRUE},
     {"$z", "libcurl",    TRUE},
     {"$#", "raw",        FALSE},
@@ -1729,18 +1742,22 @@
     {"$0", "post301",    FALSE},
     {"$1", "keepalive",   FALSE}, /* listed as --no-keepalive in the help */
     {"$2", "socks5-hostname", TRUE},
     {"$3", "keepalive-time",  TRUE},
     {"$4", "post302",    FALSE},
     {"$5", "noproxy",    TRUE},
+
 #if defined(HAVE_GSSAPI) || defined(USE_WINDOWS_SSPI)
     {"$6", "socks5-gssapi-service",  TRUE},
     {"$7", "socks5-gssapi-nec",  FALSE},
 #endif
     {"$8", "proxy1.0",   TRUE},
-
+    {"$9", "tftp-blksize", TRUE},
+    {"$A", "mail-from", TRUE},
+    {"$B", "mail-rcpt", TRUE},
+    {"$C", "ftp-pret",   FALSE},
     {"0", "http1.0",     FALSE},
     {"1", "tlsv1",       FALSE},
     {"2", "sslv2",       FALSE},
     {"3", "sslv3",       FALSE},
     {"4", "ipv4",       FALSE},
     {"6", "ipv6",       FALSE},
@@ -1774,12 +1791,13 @@
     {"G", "get",         FALSE},
     {"h", "help",        FALSE},
     {"H", "header",      TRUE},
     {"i", "include",     FALSE},
     {"I", "head",        FALSE},
     {"j", "junk-session-cookies", FALSE},
+    {"J", "remote-header-name", FALSE},
     {"k", "insecure",    FALSE},
     {"K", "config",      TRUE},
     {"l", "list-only",   FALSE},
     {"L", "location",    FALSE},
     {"Lt", "location-trusted", FALSE},
     {"m", "max-time",    TRUE},
@@ -2261,16 +2279,34 @@
 #endif
       case '8': /* --proxy1.0 */
         /* http 1.0 proxy */
         GetStr(&config->proxy, nextarg);
         config->proxyver = CURLPROXY_HTTP_1_0;
         break;
+      case '9': /* --tftp-blksize */
+        str2num(&config->tftp_blksize, nextarg);
+        break;
+      case 'A': /* --mail-from */
+        GetStr(&config->mail_from, nextarg);
+        break;
+      case 'B': /* --mail-rcpt */
+        /* append receiver to a list */
+        err = add2list(&config->mail_rcpt, nextarg);
+        if(err)
+          return err;
+        break;
+      case 'C': /* --ftp-pret */
+        config->ftp_pret = toggle;
+        break;
       }
       break;
     case '#': /* --progress-bar */
-      config->progressmode = toggle?CURL_PROGRESS_BAR:0;
+      if(toggle)
+        config->progressmode = CURL_PROGRESS_BAR;
+      else
+        config->progressmode = CURL_PROGRESS_STATS;
       break;
     case '0':
       /* HTTP version 1.0 */
       config->httpversion = CURL_HTTP_VERSION_1_0;
       break;
     case '1':
@@ -2631,12 +2667,20 @@
       config->no_body = toggle;
       if(SetHTTPrequest(config,
                         (config->no_body)?HTTPREQ_HEAD:HTTPREQ_GET,
                         &config->httpreq))
         return PARAM_BAD_USE;
       break;
+    case 'J': /* --remote-header-name */
+      if (config->include_headers) {
+        warnf(config,
+              "--include and --remote-header-name cannot be combined.\n");
+        return PARAM_BAD_USE;
+      }
+      config->content_disposition = toggle;
+      break;
     case 'k': /* allow insecure SSL connects */
       config->insecure_ok = toggle;
       break;
     case 'K': /* parse config file */
       if(parseconfig(nextarg, config))
         warnf(config, "error trying read config from the '%s' file\n",
@@ -2781,13 +2825,13 @@
         char buffer[32];
         curl_off_t off;
         warnf(config,
               "A specified range MUST include at least one dash (-). "
               "Appending one for you!\n");
         off = curlx_strtoofft(nextarg, NULL, 10);
-        snprintf(buffer, sizeof(buffer), "%Od-", off);
+        snprintf(buffer, sizeof(buffer), "%" CURL_FORMAT_CURL_OFF_T "-", off);
         GetStr(&config->range, buffer);
       }
       {
         /* byte range requested */
         char* tmp_range;
         tmp_range=nextarg;
@@ -2933,24 +2977,29 @@
     case 'w':
       /* get the output string */
       if('@' == *nextarg) {
         /* the data begins with a '@' letter, it means that a file name
            or - (stdin) follows */
         FILE *file;
+        const char *fname;
         nextarg++; /* pass the @ */
-        if(curlx_strequal("-", nextarg))
+        if(curlx_strequal("-", nextarg)) {
+          fname = "<stdin>";
           file = stdin;
-        else
+        }
+        else {
+          fname = nextarg;
           file = fopen(nextarg, "r");
+        }
         err = file2string(&config->writeout, file);
         if(file && (file != stdin))
           fclose(file);
         if(err)
           return err;
         if(!config->writeout)
-          warnf(config, "Failed to read %s", file);
+          warnf(config, "Failed to read %s", fname);
       }
       else
         GetStr(&config->writeout, nextarg);
       break;
     case 'x':
       /* proxy */
@@ -3285,25 +3334,43 @@
 static size_t my_fwrite(void *buffer, size_t sz, size_t nmemb, void *stream)
 {
   size_t rc;
   struct OutStruct *out=(struct OutStruct *)stream;
   struct Configurable *config = out->config;
 
+  /*
+   * Once that libcurl has called back my_fwrite() the returned value
+   * is checked against the amount that was intended to be written, if
+   * it does not match then it fails with CURLE_WRITE_ERROR. So at this
+   * point returning a value different from sz*nmemb indicates failure.
+   */
+  const size_t err_rc = (sz * nmemb) ? 0 : 1;
+
   if(!out->stream) {
+    if (!out->filename) {
+      warnf(config, "Remote filename has no length!\n");
+      return err_rc; /* Failure */
+    }
+
+    if (config->content_disposition) {
+      /* don't overwrite existing files */
+      FILE* f = fopen(out->filename, "r");
+      if (f) {
+        fclose(f);
+        warnf(config, "Refusing to overwrite %s: %s\n", out->filename,
+              strerror(EEXIST));
+        return err_rc; /* Failure */
+      }
+    }
+
     /* open file for writing */
     out->stream=fopen(out->filename, "wb");
     if(!out->stream) {
-      warnf(config, "Failed to create the file %s\n", out->filename);
-      /*
-       * Once that libcurl has called back my_fwrite() the returned value
-       * is checked against the amount that was intended to be written, if
-       * it does not match then it fails with CURLE_WRITE_ERROR. So at this
-       * point returning a value different from sz*nmemb indicates failure.
-       */
-      rc = (0 == (sz * nmemb)) ? 1 : 0;
-      return rc; /* failure */
+      warnf(config, "Failed to create the file %s: %s\n", out->filename,
+            strerror(errno));
+      return err_rc; /* failure */
     }
   }
 
   rc = fwrite(buffer, sz, nmemb, out->stream);
 
   if((sz * nmemb) == rc) {
@@ -3313,15 +3380,20 @@
 
   if(config->readbusy) {
     config->readbusy = FALSE;
     curl_easy_pause(config->easy, CURLPAUSE_CONT);
   }
 
-  if(config->nobuffer)
+  if(config->nobuffer) {
     /* disable output buffering */
-    fflush(out->stream);
+    int res = fflush(out->stream);
+    if(res) {
+      /* return a value that isn't the same as sz * nmemb */
+      return err_rc; /* failure */
+    }
+  }
 
   return rc;
 }
 
 struct InStruct {
   int fd;
@@ -3810,12 +3882,13 @@
 
   curl_slist_free_all(config->quote); /* checks for config->quote == NULL */
   curl_slist_free_all(config->prequote);
   curl_slist_free_all(config->postquote);
   curl_slist_free_all(config->headers);
   curl_slist_free_all(config->telnet_options);
+  curl_slist_free_all(config->mail_rcpt);
 
   if(config->easy)
     curl_easy_cleanup(config->easy);
 }
 
 #ifdef WIN32
@@ -3915,13 +3988,13 @@
     }
     ret = curl_easy_setopt(curl, tag, pval);
 
   }
   else {
     curl_off_t oval = va_arg(arg, curl_off_t);
-    snprintf(value, sizeof(value), "(curl_off_t)%Od", oval);
+    snprintf(value, sizeof(value), "%" CURL_FORMAT_CURL_OFF_T, oval);
     ret = curl_easy_setopt(curl, tag, oval);
   }
 
   if(config->libcurl) {
     /* we only use this for real if --libcurl was used */
 
@@ -4005,13 +4078,95 @@
   }
   curl_slist_free_all(easycode);
 }
 
 static bool stdin_upload(const char *uploadfile)
 {
-  return curlx_strequal(uploadfile, "-") || curlx_strequal(uploadfile, ".");
+  return (bool)(curlx_strequal(uploadfile, "-") ||
+                curlx_strequal(uploadfile, "."));
+}
+
+static char*
+parse_filename(char *ptr, int len)
+{
+  char* copy;
+  char* p;
+  char* q;
+  char quote = 0;
+
+  /* simple implementation of strndup() */
+  copy = malloc(len+1);
+  if (!copy)
+    return NULL;
+  strncpy(copy, ptr, len);
+  copy[len] = 0;
+  
+  p = copy;
+  if (*p == '\'' || *p == '"') {
+    /* store the starting quote */
+    quote = *p;
+    p++;
+  }
+
+  /* if the filename contains a path, only use filename portion */
+  q = strrchr(copy, '/');
+  if (q) {
+    p=q+1;
+    if (!*p) {
+      free(copy);
+      return NULL;
+    }
+  }
+
+  q = strrchr(p, quote);
+  if (q)
+    *q = 0;
+
+  if (copy!=p)
+    memmove(copy, p, strlen(p)+1);
+
+  return copy;
+}
+
+static size_t
+header_callback(void *ptr, size_t size, size_t nmemb, void *stream)
+{
+  struct OutStruct* outs = (struct OutStruct*)stream;
+  const char* str = (char*)ptr;
+  const size_t cb = size*nmemb;
+  const char* end = (char*)ptr + cb;
+
+  if (cb > 20 && curlx_strnequal(str, "Content-disposition:", 20)) {
+    char *p = (char*)str + 20;
+
+    /* look for the 'filename=' parameter
+       (encoded filenames (*=) are not supported) */
+    for(;;) {
+      char *filename;
+
+      while (*p && (p < end) && !ISALPHA(*p))
+        p++;
+      if (p > end-9)
+        break;
+
+      if (memcmp(p, "filename=", 9)) {
+        /* no match, find next parameter */
+        while ((p < end) && (*p != ';'))
+          p++;
+        continue;
+      }
+      p+=9;
+      filename = parse_filename(p, cb - (p - str));
+      if (filename) {
+        outs->filename = filename;
+        break;
+      }
+    }
+  }
+
+  return cb;
 }
 
 static int
 operate(struct Configurable *config, int argc, argv_item_t argv[])
 {
   char errorbuffer[CURL_ERROR_SIZE];
@@ -4390,13 +4545,13 @@
 
             if(pc) {
               /* duplicate the string beyond the slash */
               pc++;
               outfile = *pc ? strdup(pc): NULL;
             }
-            if(!outfile || !*outfile) {
+            if((!outfile || !*outfile) && !config->content_disposition) {
               helpf(config->errors, "Remote file name has no length!\n");
               res = CURLE_WRITE_ERROR;
               free(url);
               break;
             }
 #if defined(MSDOS) || defined(WIN32)
@@ -4812,13 +4967,13 @@
 
         my_setopt(curl, CURLOPT_MAXREDIRS, config->maxredirs);
         my_setopt(curl, CURLOPT_CRLF, config->crlf);
         my_setopt(curl, CURLOPT_QUOTE, config->quote);
         my_setopt(curl, CURLOPT_POSTQUOTE, config->postquote);
         my_setopt(curl, CURLOPT_PREQUOTE, config->prequote);
-        my_setopt(curl, CURLOPT_WRITEHEADER,
+        my_setopt(curl, CURLOPT_HEADERDATA,
                   config->headerfile?&heads:NULL);
         my_setopt_str(curl, CURLOPT_COOKIEFILE, config->cookiefile);
         /* cookie jar was added in 7.9 */
         if(config->cookiejar)
           my_setopt_str(curl, CURLOPT_COOKIEJAR, config->cookiejar);
         /* cookie session added in 7.9.7 */
@@ -4991,23 +5146,46 @@
         }
 
         /* curl 7.19.1 (the 301 version existed in 7.18.2) */
         my_setopt(curl, CURLOPT_POSTREDIR, config->post301 |
                   (config->post302 ? CURL_REDIR_POST_302 : FALSE));
 
+        /* curl 7.20.0 */
+        if(config->tftp_blksize)
+          my_setopt(curl, CURLOPT_TFTP_BLKSIZE, config->tftp_blksize);
+
+        if(config->mail_from)
+          my_setopt_str(curl, CURLOPT_MAIL_FROM, config->mail_from);
+
+        if(config->mail_rcpt)
+          my_setopt_str(curl, CURLOPT_MAIL_RCPT, config->mail_rcpt);
+
+        /* curl 7.20.x */
+        if(config->ftp_pret)
+          my_setopt(curl, CURLOPT_FTP_USE_PRET, TRUE);
+
+        if ((urlnode->flags & GETOUT_USEREMOTE)
+            && config->content_disposition) {
+          my_setopt(curl, CURLOPT_HEADERFUNCTION, header_callback);
+          my_setopt(curl, CURLOPT_HEADERDATA, &outs);
+        }
+        
         retry_numretries = config->req_retry;
 
         retrystart = cutil_tvnow();
 
-        do {
+        for(;;) {
           res = curl_easy_perform(curl);
           if (!curl_slist_append(easycode, "ret = curl_easy_perform(hnd);")) {
             res = CURLE_OUT_OF_MEMORY;
             break;
           }
 
+          if (config->content_disposition && outs.stream && !config->mute)
+            printf("curl: Saved to filename '%s'\n", outs.filename);
+
           /* if retry-max-time is non-zero, make sure we haven't exceeded the
              time */
           if(retry_numretries &&
              (!config->retry_maxtime ||
               (cutil_tvdiff(cutil_tvnow(), retrystart)<
                config->retry_maxtime*1000)) ) {
@@ -5048,20 +5226,20 @@
                    * uploaded something when this was returned.
                    */
                   break;
                 }
               }
             } /* if CURLE_OK */
-            else if(CURLE_LOGIN_DENIED == res) {
+            else if(res) {
               curl_easy_getinfo(curl, CURLINFO_RESPONSE_CODE, &response);
 
-              if(response/100 == 5)
+              if(response/100 == 4)
                 /*
                  * This is typically when the FTP server only allows a certain
-                 * amount of users and we are not one of them. It mostly
-                 * returns 530 in this case, but all 5xx codes are transient.
+                 * amount of users and we are not one of them.  All 4xx codes
+                 * are transient.
                  */
                 retry = RETRY_FTP;
             }
 
             if(retry) {
               static const char * const m[]={
@@ -5080,13 +5258,14 @@
                   retry_sleep = RETRY_SLEEP_MAX;
               }
               if(outs.bytes && outs.filename) {
                 /* We have written data to a output file, we truncate file
                  */
                 if(!config->mute)
-                  fprintf(config->errors, "Throwing away %Od bytes\n",
+                  fprintf(config->errors, "Throwing away %"
+                          CURL_FORMAT_CURL_OFF_T " bytes\n",
                           outs.bytes);
                 fflush(outs.stream);
                 /* truncate file at the position where we started appending */
 #ifdef HAVE_FTRUNCATE
                 if(ftruncate( fileno(outs.stream), outs.init)) {
                   /* when truncate fails, we can't just append as then we'll
@@ -5113,13 +5292,13 @@
           } /* if retry_numretries */
 
           /* In all ordinary cases, just break out of loop here */
           retry_sleep = retry_sleep_default;
           break;
 
-        } while(1);
+        }
 
         if((config->progressmode == CURL_PROGRESS_BAR) &&
            progressbar.calls)
           /* if the custom progress bar has been displayed, we output a
              newline here */
           fputs("\n", progressbar.out);
@@ -5167,14 +5346,20 @@
                       CURL_CA_CERT_ERRORMSG1,
                       CURL_CA_CERT_ERRORMSG2 );
             }
           }
         }
 
-        if (outfile && !curlx_strequal(outfile, "-") && outs.stream)
-          fclose(outs.stream);
+        if (outfile && !curlx_strequal(outfile, "-") && outs.stream) {
+          int rc = fclose(outs.stream);
+          if(!res && rc) {
+            /* something went wrong in the writing process */
+            res = CURLE_WRITE_ERROR;
+            fprintf(config->errors, "(%d) Failed writing body\n", res);
+          }
+        }
 
 #ifdef HAVE_UTIME
         /* Important that we set the time _after_ the file has been
            closed, as is done above here */
         if(config->remote_time && outs.filename) {
           /* ask libcurl if we got a time. Pretty please */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/Makefile.am	2009-07-23 04:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/Makefile.am	2009-11-06 03:12:20.000000000 +0800
@@ -15,33 +15,35 @@
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: Makefile.am,v 1.64 2009-07-14 13:25:14 gknauf Exp $
+# $Id: Makefile.am,v 1.65 2009-11-05 15:04:04 yangtse Exp $
 ###########################################################################
 AUTOMAKE_OPTIONS = foreign nostdinc
 
 # Specify our include paths here, and do it relative to $(top_srcdir) and
 # $(top_builddir), to ensure that these paths which belong to the library
 # being currently built and tested are searched before the library which
 # might possibly already be installed in the system.
 #
-# $(top_builddir)/include is for libcurl's generated curl/curlbuild.h file
+# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h
+# $(top_builddir)/include for generated curlbuild.h included from lib/setup.h
 # $(top_srcdir)/include is for libcurl's external include files
 # $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file
 # $(top_builddir)/src is for curl's generated src/curl_config.h file
 # $(top_srcdir)/lib is for libcurl's lib/setup.h and other "borrowed" files
 # $(top_srcdir)/src is for curl's src/setup.h and "curl-private" files
 
-INCLUDES = -I$(top_builddir)/include \
-           -I$(top_srcdir)/include   \
-           -I$(top_builddir)/lib     \
-           -I$(top_builddir)/src     \
-           -I$(top_srcdir)/lib       \
+INCLUDES = -I$(top_builddir)/include/curl \
+           -I$(top_builddir)/include      \
+           -I$(top_srcdir)/include        \
+           -I$(top_builddir)/lib          \
+           -I$(top_builddir)/src          \
+           -I$(top_srcdir)/lib            \
            -I$(top_srcdir)/src
 
 bin_PROGRAMS = curl
 
 include Makefile.inc
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/Makefile.in	2009-11-04 20:26:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/Makefile.in	2010-02-05 05:42:21.000000000 +0800
@@ -95,26 +95,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -125,13 +130,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -193,12 +197,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -272,32 +277,34 @@
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: Makefile.am,v 1.64 2009-07-14 13:25:14 gknauf Exp $
+# $Id: Makefile.am,v 1.65 2009-11-05 15:04:04 yangtse Exp $
 ###########################################################################
 AUTOMAKE_OPTIONS = foreign nostdinc
 
 # Specify our include paths here, and do it relative to $(top_srcdir) and
 # $(top_builddir), to ensure that these paths which belong to the library
 # being currently built and tested are searched before the library which
 # might possibly already be installed in the system.
 #
-# $(top_builddir)/include is for libcurl's generated curl/curlbuild.h file
+# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h
+# $(top_builddir)/include for generated curlbuild.h included from lib/setup.h
 # $(top_srcdir)/include is for libcurl's external include files
 # $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file
 # $(top_builddir)/src is for curl's generated src/curl_config.h file
 # $(top_srcdir)/lib is for libcurl's lib/setup.h and other "borrowed" files
 # $(top_srcdir)/src is for curl's src/setup.h and "curl-private" files
-INCLUDES = -I$(top_builddir)/include \
-           -I$(top_srcdir)/include   \
-           -I$(top_builddir)/lib     \
-           -I$(top_builddir)/src     \
-           -I$(top_srcdir)/lib       \
+INCLUDES = -I$(top_builddir)/include/curl \
+           -I$(top_builddir)/include      \
+           -I$(top_srcdir)/include        \
+           -I$(top_builddir)/lib          \
+           -I$(top_builddir)/src          \
+           -I$(top_srcdir)/lib            \
            -I$(top_srcdir)/src
 
 
 # libcurl has sources that provide functions named curlx_* that aren't part of
 # the official API, but we re-use the code here to avoid duplication.
 CURLX_ONES = $(top_srcdir)/lib/strtoofft.c \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/Makefile.Watcom /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/Makefile.Watcom
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/Makefile.Watcom	2009-07-23 04:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/Makefile.Watcom	2010-02-05 05:41:46.000000000 +0800
@@ -1,24 +1,29 @@
 #
 #  Watcom / OpenWatcom / Win32 makefile for cURL.
 #  G. Vanem <gvanem@broadpark.no>
 #
-# $Id: Makefile.Watcom,v 1.16 2009-07-15 21:49:48 danf Exp $
+# $Id: Makefile.Watcom,v 1.17 2010-02-03 23:07:11 danf Exp $
 
 CC = wcc386
 
 CFLAGS = -3r -mf -d3 -hc -zff -zgf -zq -zm -s -fr=con -w2 -fpi -oilrtfm &
          -bt=nt -d+ -dWIN32 -dHAVE_STRTOLL -dDEBUGBUILD -dENABLE_IPV6    &
          -dHAVE_WINSOCK2_H -I..\include -I..\lib
 
 OBJ_DIR = WC_Win32.obj
 
-OBJS = $(OBJ_DIR)\getpass.obj  $(OBJ_DIR)\homedir.obj  $(OBJ_DIR)\hugehelp.obj &
-       $(OBJ_DIR)\main.obj     $(OBJ_DIR)\urlglob.obj  $(OBJ_DIR)\writeenv.obj &
-       $(OBJ_DIR)\writeout.obj $(OBJ_DIR)\curlutil.obj $(OBJ_DIR)\rawstr.obj   &
-       $(OBJ_DIR)\os-specific.obj
+# Unfortunately, we can't include Makefile.inc here because wmake doesn't
+# use backslash as the line continuation character by default
+CURL_SOURCES = main.c hugehelp.c urlglob.c writeout.c writeenv.c &
+	getpass.c homedir.c curlutil.c os-specific.c
+
+CURLX_SOURCES = rawstr.c
+
+OBJS = $(CURL_SOURCES:.c=.obj) $(CURLX_SOURCES:.c=.obj)
+OBJS = $OBJ_DIR\$(OBJS: = $OBJ_DIR\)
 
 RESOURCE = $(OBJ_DIR)\curl.res
 
 all: hugehelp.c $(OBJ_DIR) curl.exe .SYMBOLIC
 	@echo Welcome to cURL
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/os-specific.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/os-specific.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/os-specific.c	2009-06-11 02:04:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/os-specific.c	2010-01-01 22:17:52.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: os-specific.c,v 1.2 2009-06-10 18:02:11 yangtse Exp $
+ * $Id: os-specific.c,v 1.3 2009-12-31 13:35:24 yangtse Exp $
  ***************************************************************************/
 #include "setup.h"
 
 #include <curl/curl.h>
 
 #define ENABLE_CURLX_PRINTF
@@ -106,8 +106,117 @@
   else {
     vms_code = vms_cond[code] | vms_show;
   }
   decc$exit(vms_code);
 }
 
+#if defined(__DECC) && !defined(__VAX) && \
+    defined(__CRTL_VER) && (__CRTL_VER >= 70301000)
+
+/*
+ * 2004-09-19 SMS.
+ *
+ * decc_init()
+ *
+ * On non-VAX systems, use LIB$INITIALIZE to set a collection of C
+ * RTL features without using the DECC$* logical name method, nor
+ * requiring the user to define the corresponding logical names.
+ */
+
+#include <unixlib.h>
+
+/* Structure to hold a DECC$* feature name and its desired value. */
+typedef struct {
+  char *name;
+  int value;
+} decc_feat_t;
+
+/* Array of DECC$* feature names and their desired values. */
+static decc_feat_t decc_feat_array[] = {
+  /* Preserve command-line case with SET PROCESS/PARSE_STYLE=EXTENDED */
+  { "DECC$ARGV_PARSE_STYLE", 1 },
+  /* Preserve case for file names on ODS5 disks. */
+  { "DECC$EFS_CASE_PRESERVE", 1 },
+  /* Enable multiple dots (and most characters) in ODS5 file names,
+     while preserving VMS-ness of ";version". */
+  { "DECC$EFS_CHARSET", 1 },
+  /* List terminator. */
+  { (char *)NULL, 0 }
+};
+
+/* Flag to sense if decc_init() was called. */
+static int decc_init_done = -1;
+
+/* LIB$INITIALIZE initialization function. */
+static void decc_init(void)
+{
+  int feat_index;
+  int feat_value;
+  int feat_value_max;
+  int feat_value_min;
+  int i;
+  int sts;
+
+  /* Set the global flag to indicate that LIB$INITIALIZE worked. */
+  decc_init_done = 1;
+
+  /* Loop through all items in the decc_feat_array[]. */
+  for(i = 0; decc_feat_array[i].name != NULL; i++) {
+
+    /* Get the feature index. */
+    feat_index = decc$feature_get_index( decc_feat_array[i].name);
+
+    if(feat_index >= 0) {
+      /* Valid item.  Collect its properties. */
+      feat_value = decc$feature_get_value( feat_index, 1);
+      feat_value_min = decc$feature_get_value( feat_index, 2);
+      feat_value_max = decc$feature_get_value( feat_index, 3);
+
+      if((decc_feat_array[i].value >= feat_value_min) &&
+         (decc_feat_array[i].value <= feat_value_max)) {
+        /* Valid value.  Set it if necessary. */
+        if(feat_value != decc_feat_array[i].value) {
+          sts = decc$feature_set_value( feat_index, 1,
+                                        decc_feat_array[i].value);
+        }
+      }
+      else {
+        /* Invalid DECC feature value. */
+        printf(" INVALID DECC FEATURE VALUE, %d: %d <= %s <= %d.\n",
+               feat_value,
+               feat_value_min, decc_feat_array[i].name, feat_value_max);
+      }
+    }
+    else {
+      /* Invalid DECC feature name. */
+      printf(" UNKNOWN DECC FEATURE: %s.\n", decc_feat_array[i].name);
+    }
+
+  }
+}
+
+/* Get "decc_init()" into a valid, loaded LIB$INITIALIZE PSECT. */
+
+#pragma nostandard
+
+/* Establish the LIB$INITIALIZE PSECTs, with proper alignment and
+   other attributes.  Note that "nopic" is significant only on VAX. */
+#pragma extern_model save
+#pragma extern_model strict_refdef "LIB$INITIALIZ" 2, nopic, nowrt
+const int spare[8] = {0};
+#pragma extern_model strict_refdef "LIB$INITIALIZE" 2, nopic, nowrt
+void (*const x_decc_init)() = decc_init;
+#pragma extern_model restore
+
+/* Fake reference to ensure loading the LIB$INITIALIZE PSECT. */
+#pragma extern_model save
+int LIB$INITIALIZE(void);
+#pragma extern_model strict_refdef
+int dmy_lib$initialize = (int) LIB$INITIALIZE;
+#pragma extern_model restore
+
+#pragma standard
+
+#endif /* __DECC && !__VAX && __CRTL_VER && __CRTL_VER >= 70301000 */
+
 #endif /* __VMS */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/setup.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/setup.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/setup.h	2009-10-29 04:21:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/setup.h	2009-11-18 00:43:32.000000000 +0800
@@ -17,13 +17,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: setup.h,v 1.62 2009-10-27 16:56:20 yangtse Exp $
+ * $Id: setup.h,v 1.63 2009-11-14 18:51:38 yangtse Exp $
  ***************************************************************************/
 
 #define CURL_NO_OLDIES
 
 /*
  * Define WIN32 when build target is Win32 API
@@ -66,12 +66,23 @@
 #include "config-tpf.h"
 #endif
 
 #endif /* HAVE_CONFIG_H */
 
 /*
+ * AIX 4.3 and newer needs _THREAD_SAFE defined to build
+ * proper reentrant code. Others may also need it.
+ */
+
+#ifdef NEED_THREAD_SAFE
+#  ifndef _THREAD_SAFE
+#    define _THREAD_SAFE
+#  endif
+#endif
+
+/*
  * Tru64 needs _REENTRANT set for a few function prototypes and
  * things to appear in the system header files. Unixware needs it
  * to build proper reentrant code. Others may also need it.
  */
 
 #ifdef NEED_REENTRANT
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/urlglob.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/urlglob.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/urlglob.c	2009-06-08 06:18:25.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/urlglob.c	2009-11-20 21:23:36.000000000 +0800
@@ -15,13 +15,13 @@
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: urlglob.c,v 1.54 2009-06-05 16:14:50 yangtse Exp $
+ * $Id: urlglob.c,v 1.55 2009-11-18 10:33:55 yangtse Exp $
  ***************************************************************************/
 
 /* client-local setup.h */
 #include "setup.h"
 
 #include <stdio.h>
@@ -340,13 +340,13 @@
   char *glob_buffer = malloc(strlen(url)+1);
 
   *glob = NULL;
   if(NULL == glob_buffer)
     return CURLE_OUT_OF_MEMORY;
 
-  glob_expand = calloc(sizeof(URLGlob), 1);
+  glob_expand = calloc(1, sizeof(URLGlob));
   if(NULL == glob_expand) {
     free(glob_buffer);
     return CURLE_OUT_OF_MEMORY;
   }
   glob_expand->size = 0;
   glob_expand->urllen = strlen(url);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/version.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/version.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/version.h	2009-11-04 20:35:39.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/version.h	2010-02-09 18:08:03.000000000 +0800
@@ -24,13 +24,13 @@
  ***************************************************************************/
 
 #include <curl/curlver.h>
 
 #define CURL_NAME "curl"
 #define CURL_COPYRIGHT LIBCURL_COPYRIGHT
-#define CURL_VERSION "7.19.7"
+#define CURL_VERSION "7.20.0"
 #define CURL_VERSION_MAJOR LIBCURL_VERSION_MAJOR
 #define CURL_VERSION_MINOR LIBCURL_VERSION_MINOR
 #define CURL_VERSION_PATCH LIBCURL_VERSION_PATCH
 #define CURL_ID CURL_NAME " " CURL_VERSION " (" OS ") "
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/writeenv.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/writeenv.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/src/writeenv.c	2008-11-04 00:23:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/src/writeenv.c	2010-01-19 05:44:41.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: writeenv.c,v 1.11 2008-11-03 15:51:40 giva Exp $
+ * $Id: writeenv.c,v 1.12 2010-01-18 20:22:04 yangtse Exp $
  ***************************************************************************/
 
 #include "setup.h"
 
 #ifdef USE_ENVIRONMENT
 
@@ -32,12 +32,16 @@
 #include <kernel.h>
 #endif
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
+#if defined(CURLDEBUG) && defined(CURLTOOLDEBUG)
+#include "memdebug.h"
+#endif
+
 static const struct
 {
   const char * name;
   CURLINFO id;
   enum {
     writeenv_NONE,
@@ -66,15 +70,13 @@
 static void internalSetEnv(const char * name, char * value)
 {
   /* Add your OS-specific code here. */
 #ifdef __riscos__
   _kernel_setenv(name, value);
 #elif defined (CURLDEBUG)
-  extern FILE *curl_debuglogfile;
-  if (curl_debuglogfile)
-     fprintf (curl_debuglogfile, "ENV %s = %s\n", name, value);
+  curl_memlog("ENV %s = %s\n", name, value);
 #endif
   return;
 }
 
 void ourWriteEnv(CURL *curl)
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/certs/Server-localhost0h-sv.dhp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/certs/Server-localhost0h-sv.dhp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/certs/Server-localhost0h-sv.dhp	2009-08-05 06:07:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/certs/Server-localhost0h-sv.dhp	2009-11-30 03:11:42.000000000 +0800
@@ -0,0 +1,5 @@
+-----BEGIN DH PARAMETERS-----
+MIGHAoGBAL/3hRxvWX+Mdyu/aBPU1JeeA5sg4nXtA7B24eCql9Tq53Lks1/HJ5B+
+xSapGAFd+22xhBsNkJihf74oiPEVr9nNoLjFV/DZe259+JYgs+pBTFN+Cp13ALUi
+CeZxX2mlxlstD1SBRTKgxA/j4ttR1Chn8knn+RVdFE9YFKCYPyLrAgEC
+-----END DH PARAMETERS-----
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/certs/Server-localhost0h-sv.pem /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/certs/Server-localhost0h-sv.pem
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/certs/Server-localhost0h-sv.pem	2009-08-05 06:07:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/certs/Server-localhost0h-sv.pem	2009-11-30 03:11:42.000000000 +0800
@@ -117,6 +117,11 @@
 GFJ4P+qchmJu25CwzfHBby2HSqC+s9xt5GvR2rkQJX41HxuqpwkvhHcnsEiobVRX
 ODUiNAMP1F2rHHIVsdmJVhAS+30NGBKpCjjck89p/3WGnuNr65JsVRbVZYvXnF5L
 gsiSbIvmGKL4jGWqtusj7cuZ2/yLjh16Ocn1e39Ye+0BbDxA7OOpX8Q9y4EXA20t
 170AX8R58vurxg6iAYuhQnPelik+v9fZUafUmAd/8PTNAKHhrGwFrKuTG7BcLBOt
 /yfcgJk0Zr3jMVTVtj/O1AijUihhXr0=
 -----END CERTIFICATE-----
+-----BEGIN DH PARAMETERS-----
+MIGHAoGBAL/3hRxvWX+Mdyu/aBPU1JeeA5sg4nXtA7B24eCql9Tq53Lks1/HJ5B+
+xSapGAFd+22xhBsNkJihf74oiPEVr9nNoLjFV/DZe259+JYgs+pBTFN+Cp13ALUi
+CeZxX2mlxlstD1SBRTKgxA/j4ttR1Chn8knn+RVdFE9YFKCYPyLrAgEC
+-----END DH PARAMETERS-----
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/certs/Server-localhost.nn-sv.dhp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/certs/Server-localhost.nn-sv.dhp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/certs/Server-localhost.nn-sv.dhp	2009-08-05 06:24:47.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/certs/Server-localhost.nn-sv.dhp	2009-11-30 03:11:42.000000000 +0800
@@ -0,0 +1,5 @@
+-----BEGIN DH PARAMETERS-----
+MIGHAoGBAPrtEVPhZfEczB9JnWXbln79YnTh/V6ehXMWe414wyn/VT1ow25sLEev
+H2+eT84aDp5e+TfBSFjA6or96/lyQvsgAE+cE6f6uuw9ApVG2MK+BCn4snxHBb6G
+LFQf+9qHZ4BEkpBL60p1fkGu8BM1wXGXEaeYhgGumNA9fm5YJrl7AgEC
+-----END DH PARAMETERS-----
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/certs/Server-localhost.nn-sv.pem /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/certs/Server-localhost.nn-sv.pem
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/certs/Server-localhost.nn-sv.pem	2009-08-05 06:24:47.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/certs/Server-localhost.nn-sv.pem	2009-11-30 03:11:42.000000000 +0800
@@ -116,6 +116,11 @@
 JC4IQLkaTc17EsIeFtAQ+3JC1JUhODGmc1xNs9tYDA4/qPnAFKGp7iB+P3owqyQO
 yjYZsN0BzqpnaUqN410gNHTWfxQGllheaHhuAAIdPlbrXyw1AhAFnQveZrusJr3r
 qtEdtv61ZRX4BrYcF82/8ihssPRzDeRuWR2oVDa+aMLBFYfEIAhfaJMTisZQ8hqd
 kbRxk+jDxsHwiQ/qoPMDs+TYwSfu+UGTevYlLQdvP3YWAnFhcN56IG/dqzWiA4ql
 1NyJRw/MfIjhIv9q5YMuerR1t+HU5dZ1i71c
 -----END CERTIFICATE-----
+-----BEGIN DH PARAMETERS-----
+MIGHAoGBAPrtEVPhZfEczB9JnWXbln79YnTh/V6ehXMWe414wyn/VT1ow25sLEev
+H2+eT84aDp5e+TfBSFjA6or96/lyQvsgAE+cE6f6uuw9ApVG2MK+BCn4snxHBb6G
+LFQf+9qHZ4BEkpBL60p1fkGu8BM1wXGXEaeYhgGumNA9fm5YJrl7AgEC
+-----END DH PARAMETERS-----
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/certs/Server-localhost-sv.dhp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/certs/Server-localhost-sv.dhp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/certs/Server-localhost-sv.dhp	2009-08-05 06:07:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/certs/Server-localhost-sv.dhp	2009-11-30 03:11:42.000000000 +0800
@@ -0,0 +1,5 @@
+-----BEGIN DH PARAMETERS-----
+MIGHAoGBAP5mA7oYimErFUulbvNC8V0HwyB62NCj6TZb6YXJwElCksQc8RyHnkrY
+9Wx2+lduFqHjUWalgVF7Gma7CfR/pt+fiU6Jn2vWR2v7KT6hYeRKsJrONJlth+NK
+V7/d4zyvleJ/VSp0TuuSxmMMQ6hG3i5YhSGXyCh4h0pl4Wu/hdVTAgEC
+-----END DH PARAMETERS-----
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/certs/Server-localhost-sv.pem /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/certs/Server-localhost-sv.pem
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/certs/Server-localhost-sv.pem	2009-08-05 06:07:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/certs/Server-localhost-sv.pem	2009-11-30 03:11:42.000000000 +0800
@@ -116,6 +116,11 @@
 NXG/2TUD3f3lfUXb5ZoWFBTHmKXFuU2BOgz54Jdx0POgXYS6g6jYoJi/EkhC8BuK
 WIAWYmm7llrOrAL6y80gMND7IzrTe3UDyMEgniSQ0mEAhWPi+adSUOINO2H5sdVf
 ZN3LOHsFjbf5CI6/0wIT5zT6Pbuv16reeSj0rof1SYVCx6+LoJTtId425jijD3XP
 aBBIHX2booiGvbX+lUrI/ndrCkd5q9Y16lNPjzq64UwAV7iZ+SFd0q3Zx/q/cXNJ
 XQss/QI3lDw+1+9yxePzFJ9YJyqq
 -----END CERTIFICATE-----
+-----BEGIN DH PARAMETERS-----
+MIGHAoGBAP5mA7oYimErFUulbvNC8V0HwyB62NCj6TZb6YXJwElCksQc8RyHnkrY
+9Wx2+lduFqHjUWalgVF7Gma7CfR/pt+fiU6Jn2vWR2v7KT6hYeRKsJrONJlth+NK
+V7/d4zyvleJ/VSp0TuuSxmMMQ6hG3i5YhSGXyCh4h0pl4Wu/hdVTAgEC
+-----END DH PARAMETERS-----
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/DISABLED /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/DISABLED
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/DISABLED	2009-09-27 04:51:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/DISABLED	2010-02-02 06:53:00.000000000 +0800
@@ -1,8 +1,9 @@
-# $Id: DISABLED,v 1.45 2009-09-26 20:51:51 bagder Exp $
+# $Id: DISABLED,v 1.48 2010-02-01 12:05:08 yangtse Exp $
 # This file can be used to specify test cases that should not run when all
 # test cases are run by runtests.pl. Just add the plain test case numbers, one
 # per line.
 # Lines starting with '#' letters are treated as comments.
 563
 564
-
+802
+803
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/Makefile.am	2009-10-31 06:22:37.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/Makefile.am	2010-01-30 22:30:27.000000000 +0800
@@ -60,13 +60,15 @@
  test1072 test1073 test1074 test1075 test1076 test1077 test1078 test1079   \
  test1080 test1081 test1082 test1083 test1084 test1085 test633 test634     \
  test635 test636 test637 test558 test559 test1086 test1087 test1088        \
  test1089 test1090 test1091 test1092 test1093 test1094 test1095 test1096   \
  test1097 test560 test561 test1098 test1099 test562 test563 test1100       \
  test564 test1101 test1102 test1103 test1104 test299 test310 test311       \
- test312 test1105 test565
+ test312 test1105 test565 test800 test1106 test801 test566 test802 test803 \
+ test1107 test1108 test1109 test1110 test1111 test1112 test129 test567     \
+ test568 test569 test570 test571
 
 filecheck:
 	@mkdir test-place; \
 	cp "$(top_srcdir)"/tests/data/test[0-9]* test-place/; \
 	rm test-place/*~; \
 	for f in $(EXTRA_DIST); do \
@@ -80,6 +82,8 @@
 	ls test-place; \
 	! ls test-place | grep . >/dev/null ; \
 	RC=$$? ; \
 	rm -rf test-place ; \
 	exit $$RC
 
+show:
+	@echo $(EXTRA_DIST)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/Makefile.in	2009-11-04 20:26:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/Makefile.in	2010-02-05 05:42:21.000000000 +0800
@@ -67,26 +67,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -97,13 +102,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -163,12 +167,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -282,13 +287,15 @@
  test1072 test1073 test1074 test1075 test1076 test1077 test1078 test1079   \
  test1080 test1081 test1082 test1083 test1084 test1085 test633 test634     \
  test635 test636 test637 test558 test559 test1086 test1087 test1088        \
  test1089 test1090 test1091 test1092 test1093 test1094 test1095 test1096   \
  test1097 test560 test561 test1098 test1099 test562 test563 test1100       \
  test564 test1101 test1102 test1103 test1104 test299 test310 test311       \
- test312 test1105 test565
+ test312 test1105 test565 test800 test1106 test801 test566 test802 test803 \
+ test1107 test1108 test1109 test1110 test1111 test1112 test129 test567     \
+ test568 test569 test570 test571
 
 all: all-am
 
 .SUFFIXES:
 $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
 	@for dep in $?; do \
@@ -296,15 +303,15 @@
 	    *$$dep*) \
 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
 		&& exit 0; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  tests/data/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  tests/data/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  tests/data/Makefile
+	  $(AUTOMAKE) --foreign  tests/data/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
@@ -464,9 +471,12 @@
 	echo "Local files not present in EXTRA_DIST:" ; \
 	ls test-place; \
 	! ls test-place | grep . >/dev/null ; \
 	RC=$$? ; \
 	rm -rf test-place ; \
 	exit $$RC
+
+show:
+	@echo $(EXTRA_DIST)
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
 # Otherwise a system limit (for SysV at least) may be exceeded.
 .NOEXPORT:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test104 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test104
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test104	2008-11-20 05:12:35.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test104	2009-12-26 07:29:13.000000000 +0800
@@ -18,26 +18,26 @@
 ftp
 </server>
  <name>
 FTP --head to get file size only
  </name>
  <command>
-ftp://%HOSTIP:%FTPPORT/a/path/103 --head
+ftp://%HOSTIP:%FTPPORT/a/path/104 --head
 </command>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
 USER anonymous
 PASS ftp@example.com
 PWD
 CWD a
 CWD path
-MDTM 103
+MDTM 104
 TYPE I
-SIZE 103
+SIZE 104
 REST 0
 QUIT
 </protocol>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test105 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test105
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test105	2008-11-20 05:12:35.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test105	2009-12-26 07:29:13.000000000 +0800
@@ -29,25 +29,25 @@
 ftp
 </server>
  <name>
 FTP user+password in URL and ASCII transfer
  </name>
  <command>
-ftp://userdude:passfellow@%HOSTIP:%FTPPORT/103 --use-ascii
+ftp://userdude:passfellow@%HOSTIP:%FTPPORT/105 --use-ascii
 </command>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
 USER userdude
 PASS passfellow
 PWD
 EPSV
 PASV
 TYPE A
-SIZE 103
-RETR 103
+SIZE 105
+RETR 105
 QUIT
 </protocol>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test1086 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test1086
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test1086	2008-11-20 05:12:35.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test1086	2010-02-05 05:41:46.000000000 +0800
@@ -42,12 +42,38 @@
 Long chunk of data that couldn't possibly be sent in the time allotted.
 Long chunk of data that couldn't possibly be sent in the time allotted.
 Long chunk of data that couldn't possibly be sent in the time allotted.
 Long chunk of data that couldn't possibly be sent in the time allotted.
 Long chunk of data that couldn't possibly be sent in the time allotted.
 Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
+Long chunk of data that couldn't possibly be sent in the time allotted.
 </data>
 </reply>
 
 # Client-side
 <client>
 <server>
@@ -57,13 +83,13 @@
 ftp
 </killserver>
  <name>
 FTP download with strict timeout and slow data transfer
  </name>
  <command timeout="1">
-ftp://%HOSTIP:%FTPPORT/1086 -m 6
+ftp://%HOSTIP:%FTPPORT/1086 -m 7
 </command>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 # 28 is CURLE_OPERATION_TIMEDOUT
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test1106
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test1107
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test1108
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test1109
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test1110
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test1111
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test1112
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test129
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test149 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test149
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test149	2008-11-20 05:12:35.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test149	2009-12-26 07:29:13.000000000 +0800
@@ -9,15 +9,15 @@
 ftp
 </server>
  <name>
 FTP with multiple uploads
  </name>
  <command>
--T log/upload148 ftp://%HOSTIP:%FTPPORT/dir1/148 -T log/upload148 ftp://%HOSTIP:%FTPPORT/dir2/148
+-T log/upload149 ftp://%HOSTIP:%FTPPORT/dir1/149 -T log/upload149 ftp://%HOSTIP:%FTPPORT/dir2/149
 </command>
-<file name="log/upload148">
+<file name="log/upload149">
 send away this contents
 </file>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
@@ -30,18 +30,18 @@
 USER anonymous
 PASS ftp@example.com
 PWD
 CWD dir1
 EPSV
 TYPE I
-STOR 148
+STOR 149
 CWD /nowhere/anywhere
 CWD dir2
 EPSV
-STOR 148
+STOR 149
 QUIT
 </protocol>
-<file name="log/upload148">
+<file name="log/upload149">
 send away this contents
 </file>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test196 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test196
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test196	2008-11-20 05:12:35.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test196	2009-12-11 04:33:24.000000000 +0800
@@ -1,11 +1,11 @@
 <testcase>
 # Server-side
 <reply>
 <servercmd>
-REPLY PASS 530 temporarily not available
+REPLY PASS 430 temporarily not available
 </servercmd>
 </reply>
 
 # Client-side
 <client>
 <server>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test303 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test303
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test303	2008-11-20 05:12:36.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test303	2010-02-04 02:16:49.000000000 +0800
@@ -27,16 +27,16 @@
 SSL
 </features>
 <server>
 https
 </server>
  <name>
-HTTPS with 7 secs timeout
+HTTPS with 8 secs timeout
  </name>
  <command>
--k https://%HOSTIP:%HTTPSPORT/want/303 -m 7
+-k https://%HOSTIP:%HTTPSPORT/want/303 -m 8
 </command>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <strip>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test310 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test310
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test310	2009-08-19 15:09:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test310	2010-01-19 05:44:41.000000000 +0800
@@ -1,11 +1,12 @@
 <testcase>
 <info>
 <keywords>
 HTTPS
 HTTP GET
+PEM certificate
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test311 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test311
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test311	2009-08-19 15:09:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test311	2010-01-19 05:44:41.000000000 +0800
@@ -1,11 +1,12 @@
 <testcase>
 <info>
 <keywords>
 HTTPS
 HTTP GET
+PEM certificate
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test312 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test312
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test312	2009-08-19 15:09:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test312	2010-01-19 05:44:41.000000000 +0800
@@ -1,11 +1,12 @@
 <testcase>
 <info>
 <keywords>
 HTTPS
 HTTP GET
+PEM certificate
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test510 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test510
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test510	2008-11-20 05:12:36.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test510	2009-12-08 02:26:11.000000000 +0800
@@ -37,12 +37,13 @@
 <protocol>
 POST /510 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 Transfer-Encoding: chunked
 Content-Type: application/x-www-form-urlencoded
+Expect: 100-continue
 
 3
 one
 3
 two
 5
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test521 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test521
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test521	2008-11-20 05:12:36.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test521	2009-12-26 07:29:13.000000000 +0800
@@ -36,24 +36,24 @@
 lib521
 </tool>
  <name>
 FTP dir list PASV with CURLOPT_PORT
  </name>
  <command>
-ftp://%HOSTIP/520/ %FTPPORT
+ftp://%HOSTIP/521/ %FTPPORT
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
 USER xxx
 PASS yyy
 PWD
-CWD 520
+CWD 521
 EPSV
 TYPE A
 LIST
 QUIT
 </protocol>
 </verify>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test523 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test523
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test523	2009-01-08 14:24:24.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test523	2009-12-17 23:42:09.000000000 +0800
@@ -47,13 +47,13 @@
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent:.*
 </strip>
 <protocol>
-GET http://www.haxx.se:19999/523 HTTP/1.1
+GET HTTP://www.haxx.se:19999/523 HTTP/1.1
 Authorization: Basic eHh4Onl5eQ==
 Host: www.haxx.se:19999
 Accept: */*
 Proxy-Connection: Keep-Alive
 
 </protocol>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test557 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test557
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test557	2008-11-20 05:12:36.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test557	2010-02-05 05:41:46.000000000 +0800
@@ -23,12 +23,14 @@
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <stdout mode="text">
+All curl_mprintf() unsigned short tests OK!
+All curl_mprintf() signed short tests OK!
 All curl_mprintf() unsigned int tests OK!
 All curl_mprintf() signed int tests OK!
 All curl_mprintf() unsigned long tests OK!
 All curl_mprintf() signed long tests OK!
 All curl_mprintf() curl_off_t tests OK!
 </stdout>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test565 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test565
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test565	2009-10-30 06:51:31.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test565	2009-12-08 02:40:46.000000000 +0800
@@ -85,12 +85,13 @@
 POST /565 HTTP/1.1
 Authorization: Digest username="foo", realm="testrealm", nonce="1053604144", uri="/565", response="877424f750af047634dbd94f9933217b"
 Host: 127.0.0.1:8990
 Accept: */*
 Transfer-Encoding: chunked
 Content-Type: application/x-www-form-urlencoded
+Expect: 100-continue
 
 3
 one
 3
 two
 5
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test566
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test567
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test568
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test569
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test570
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test571
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test8
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/data/test8	2009-10-26 02:10:47.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data/test8	2010-02-04 02:16:49.000000000 +0800
@@ -34,15 +34,16 @@
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Type: text/html
 Funny-head: yesyes
 Set-Cookie: foobar=name; domain=127.0.0.1; path=/;
 Set-Cookie: mismatch=this; domain=127.0.0.1; path="/silly/";
-Set-Cookie: partmatch=present; domain=.0.0.1; path=/;
+Set-Cookie: partmatch=present; domain=.0.0.1; path=/w;
 Set-Cookie: duplicate=test; domain=.0.0.1; domain=.0.0.1; path=/donkey;
 Set-Cookie: cookie=yes; path=/we;
+Set-Cookie: cookie=perhaps; path=/we/want;
 Set-Cookie: nocookie=yes; path=/WE;
 Set-Cookie: blexp=yesyes; domain=.0.0.1; domain=.0.0.1; expiry=totally bad;
 
 </file>
 </client>
 
@@ -52,11 +53,11 @@
 ^User-Agent:.*
 </strip>
 <protocol>
 GET /we/want/8 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
-Cookie: blexp=yesyes; cookie=yes; partmatch=present; foobar=name
+Cookie: cookie=perhaps; cookie=yes; partmatch=present; foobar=name; blexp=yesyes
 
 </protocol>
 </verify>
 </testcase>
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test800
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test801
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test802
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/data: test803
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/FILEFORMAT /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/FILEFORMAT
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/FILEFORMAT	2009-05-31 04:58:29.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/FILEFORMAT	2010-02-02 06:53:00.000000000 +0800
@@ -125,12 +125,16 @@
 idle            do nothing after receiving the request, just "sit idle"
 stream          continuously send data to the client, never-ending
 pipe: [num]     tell the server to expect this many HTTP requests before
                 sending back anything, to allow pipelining tests
 skip: [num]     instructs the server to ignore reading this many bytes from a PUT
                 or POST request
+
+rtp: part [num] channel [num] size [num]
+               stream a fake RTP packet for the given part on a chosen channel
+               with the given payload size
 </servercmd>
 </reply>
 
 <client>
 
 <server>
@@ -145,12 +149,14 @@
 https
 none
 scp
 sftp
 socks4
 socks5
+rtsp
+rtsp-ipv6
 
 Give only one per line.  This subsection is mandatory.
 </server>
 
 <features>
 A list of features that MUST be present in the client/library for this test to
@@ -259,12 +265,14 @@
 %FTPTIME2  - Timeout in seconds that should be just sufficient to receive
              a response from the test FTP server
 %TFTPPORT  - Port number of the TFTP server
 %TFTP6PORT - IPv6 port number of the TFTP server
 %SSHPORT   - Port number of the SCP/SFTP server
 %SOCKSPORT - Port number of the SOCKS4/5 server
+%RTSPPORT  - Port number of the RTSP server
+%RTSP6PORT - IPv6 port number of the RTSP server
 %SRCDIR    - Full path to the source dir
 %PWD       - Current directory
 %CURL      - Path to the curl executable
 %USER      - Login ID of the user running the test
 </command>
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/ftp.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/ftp.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/ftp.pm	2009-03-28 05:57:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/ftp.pm	2010-01-21 05:28:53.000000000 +0800
@@ -2,87 +2,234 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: ftp.pm,v 1.13 2008-04-23 23:55:34 yangtse Exp $
+# $Id: ftp.pm,v 1.25 2010-01-20 20:39:56 yangtse Exp $
 ###########################################################################
 
+use strict;
+use warnings;
+
+use serverhelp qw(
+    servername_id
+    mainsockf_pidfilename
+    datasockf_pidfilename
+    );
+
 #######################################################################
-# Return the pid of the server as found in the given pid file
-#
-sub serverpid {
-    my $PIDFILE = $_[0];
-    open(PFILE, "<$PIDFILE");
-    my $PID=0+<PFILE>;
-    close(PFILE);
-    return $PID;
+# pidfromfile returns the pid stored in the given pidfile.  The value
+# of the returned pid will never be a negative value. It will be zero
+# on any file related error or if a pid can not be extracted from the
+# given file.
+#
+sub pidfromfile {
+    my $pidfile = $_[0];
+    my $pid = 0;
+
+    if(-f $pidfile && -s $pidfile && open(PIDFH, "<$pidfile")) {
+        $pid = 0 + <PIDFH>;
+        close(PIDFH);
+        $pid = 0 unless($pid > 0);
+    }
+    return $pid;
 }
 
 #######################################################################
-# Check the given test server if it is still alive.
-#
-sub checkserver {
-    my ($pidfile)=@_;
-    my $pid=0;
-
-    # check for pidfile
-    if ( -f $pidfile ) {
-        $pid=serverpid($pidfile);
-        if ($pid ne "" && kill(0, $pid)) {
+# processexists checks if a process with the pid stored in the given
+# pidfile exists and is alive. This will return 0 on any file related
+# error or if a pid can not be extracted from the given file. When a
+# process with the same pid as the one extracted from the given file
+# is currently alive this returns that positive pid. Otherwise, when
+# the process is not alive, will return the negative value of the pid.
+#
+sub processexists {
+    use POSIX ":sys_wait_h";
+    my $pidfile = $_[0];
+
+    # fetch pid from pidfile
+    my $pid = pidfromfile($pidfile);
+
+    if($pid > 0) {
+        # verify if currently alive
+        if(kill(0, $pid)) {
             return $pid;
         }
         else {
-            return -$pid; # negative means dead process
+            # get rid of the certainly invalid pidfile
+            unlink($pidfile) if($pid == pidfromfile($pidfile));
+            # reap its dead children, if not done yet
+            waitpid($pid, &WNOHANG);
+            # negative return value means dead process
+            return -$pid;
         }
     }
     return 0;
 }
 
-#############################################################################
-# Kill a specific slave
+#######################################################################
+# killpid attempts to gracefully stop processes in the given pid list
+# with a SIGTERM signal and SIGKILLs those which haven't died on time.
 #
-sub ftpkillslave {
-    my ($id, $ext, $verbose)=@_;
-    my $base;
-    for $base (('filt', 'data')) {
-        my $f = ".sock$base$id$ext.pid";
-        my $pid = checkserver($f);
+sub killpid {
+    use POSIX ":sys_wait_h";
+    my ($verbose, $pidlist) = @_;
+    my @requested;
+    my @signalled;
+    my @reapchild;
+
+    # The 'pidlist' argument is a string of whitespace separated pids.
+    return if(not defined($pidlist));
+
+    # Make 'requested' hold the non-duplicate pids from 'pidlist'.
+    @requested = split(' ', $pidlist);
+    return if(not @requested);
+    if(scalar(@requested) > 2) {
+        @requested = sort({$a <=> $b} @requested);
+    }
+    for(my $i = scalar(@requested) - 2; $i >= 0; $i--) {
+        if($requested[$i] == $requested[$i+1]) {
+            splice @requested, $i+1, 1;
+        }
+    }
+
+    # Send a SIGTERM to processes which are alive to gracefully stop them.
+    foreach my $tmp (@requested) {
+        chomp $tmp;
+        if($tmp =~ /^(\d+)$/) {
+            my $pid = $1;
+            if($pid > 0) {
+                if(kill(0, $pid)) {
+                    print("RUN: Process with pid $pid signalled to die\n")
+                        if($verbose);
+                    kill("TERM", $pid);
+                    push @signalled, $pid;
+                }
+                else {
+                    print("RUN: Process with pid $pid already dead\n")
+                        if($verbose);
+                    # if possible reap its dead children
+                    waitpid($pid, &WNOHANG);
+                    push @reapchild, $pid;
+                }
+            }
+        }
+    }
+
+    # Allow all signalled processes five seconds to gracefully die.
+    if(@signalled) {
+        my $twentieths = 5 * 20;
+        while($twentieths--) {
+            for(my $i = scalar(@signalled) - 1; $i >= 0; $i--) {
+                my $pid = $signalled[$i];
+                if(!kill(0, $pid)) {
+                    print("RUN: Process with pid $pid gracefully died\n")
+                        if($verbose);
+                    splice @signalled, $i, 1;
+                    # if possible reap its dead children
+                    waitpid($pid, &WNOHANG);
+                    push @reapchild, $pid;
+                }
+            }
+            last if(not scalar(@signalled));
+            select(undef, undef, undef, 0.05);
+        }
+    }
+
+    # Mercilessly SIGKILL processes still alive.
+    if(@signalled) {
+        foreach my $pid (@signalled) {
+            if($pid > 0) {
+                print("RUN: Process with pid $pid forced to die with SIGKILL\n")
+                    if($verbose);
+                kill("KILL", $pid);
+                # if possible reap its dead children
+                waitpid($pid, &WNOHANG);
+                push @reapchild, $pid;
+            }
+        }
+    }
+
+    # Reap processes dead children for sure.
+    if(@reapchild) {
+        foreach my $pid (@reapchild) {
+            if($pid > 0) {
+                waitpid($pid, 0);
+            }
+        }
+    }
+}
+
+#######################################################################
+# killsockfilters kills sockfilter processes for a given server.
+#
+sub killsockfilters {
+    my ($proto, $ipvnum, $idnum, $verbose, $which) = @_;
+    my $server;
+    my $pidfile;
+    my $pid;
+
+    return if($proto !~ /^(ftp|imap|pop3|smtp)$/);
+
+    die "unsupported sockfilter: $which"
+        if($which && ($which !~ /^(main|data)$/));
+
+    $server = servername_id($proto, $ipvnum, $idnum) if($verbose);
+
+    if(!$which || ($which eq 'main')) {
+        $pidfile = mainsockf_pidfilename($proto, $ipvnum, $idnum);
+        $pid = processexists($pidfile);
         if($pid > 0) {
-            printf ("* kill pid for %s => %d\n", "ftp-$base$id$ext", $pid) if($verbose);
-            kill (9, $pid); # die!
+            printf("* kill pid for %s-%s => %d\n", $server,
+                ($proto eq 'ftp')?'ctrl':'filt', $pid) if($verbose);
+            kill("KILL", $pid);
             waitpid($pid, 0);
         }
-        unlink($f);
+        unlink($pidfile) if(-f $pidfile);
+    }
+
+    return if($proto ne 'ftp');
+
+    if(!$which || ($which eq 'data')) {
+        $pidfile = datasockf_pidfilename($proto, $ipvnum, $idnum);
+        $pid = processexists($pidfile);
+        if($pid > 0) {
+            printf("* kill pid for %s-data => %d\n", $server,
+                $pid) if($verbose);
+            kill("KILL", $pid);
+            waitpid($pid, 0);
+        }
+        unlink($pidfile) if(-f $pidfile);
     }
 }
 
+#######################################################################
+# killallsockfilters kills sockfilter processes for all servers.
+#
+sub killallsockfilters {
+    my $verbose = $_[0];
 
-#############################################################################
-# Make sure no FTP leftovers are still running. Kill all slave processes.
-# This uses pidfiles since it might be used by other processes.
-#
-sub ftpkillslaves {
-    my ($versbose) = @_;
-    for $ext (("", "ipv6")) {
-        for $id (("", "2")) {
-            ftpkillslave ($id, $ext, $verbose);
+    for my $proto (('ftp', 'imap', 'pop3', 'smtp')) {
+        for my $ipvnum (('4', '6')) {
+            for my $idnum (('1', '2')) {
+                killsockfilters($proto, $ipvnum, $idnum, $verbose);
+            }
         }
     }
 }
 
 
 sub set_advisor_read_lock {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/ftpserver.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/ftpserver.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/ftpserver.pl	2009-05-06 06:08:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/ftpserver.pl	2010-01-21 05:28:53.000000000 +0800
@@ -3,138 +3,204 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: ftpserver.pl,v 1.100 2009-05-05 08:46:31 yangtse Exp $
+# $Id: ftpserver.pl,v 1.125 2010-01-20 20:42:21 yangtse Exp $
 ###########################################################################
 
-# This is the FTP server designed for the curl test suite.
+# This is a server designed for the curl test suite.
+#
+# In December 2009 we started remaking the server to support more protocols
+# that are similar in spirit. Like POP3, IMAP and SMTP in addition to the FTP
+# it already supported since a long time. Note that it still only supports one
+# protocol per invoke. You need to start mulitple servers to support multiple
+# protocols simultaneously.
 #
 # It is meant to exercise curl, it is not meant to be a fully working
 # or even very standard compliant server.
 #
 # You may optionally specify port on the command line, otherwise it'll
 # default to port 8921.
 #
 # All socket/network/TCP related stuff is done by the 'sockfilt' program.
 #
 
+BEGIN {
+    @INC=(@INC, $ENV{'srcdir'}, '.');
+    # sub second timestamping needs Time::HiRes
+    eval {
+        no warnings "all";
+        require Time::HiRes;
+        import  Time::HiRes qw( gettimeofday );
+    }
+}
+
 use strict;
+use warnings;
 use IPC::Open2;
-#use Time::HiRes qw( gettimeofday ); # not available in perl 5.6
 
 require "getpart.pm";
 require "ftp.pm";
 
+use serverhelp qw(
+    servername_str
+    server_pidfilename
+    server_logfilename
+    mainsockf_pidfilename
+    mainsockf_logfilename
+    datasockf_pidfilename
+    datasockf_logfilename
+    );
 
-my $ftpdnum="";
+#**********************************************************************
+# global vars...
+#
+my $verbose = 0;    # set to 1 for debugging
+my $idstr = "";     # server instance string
+my $idnum = 1;      # server instance number
+my $ipvnum = 4;     # server IPv number (4 or 6)
+my $proto = 'ftp';  # default server protocol
+my $srcdir;         # directory where ftpserver.pl is located
+my $srvrname;       # server name for presentation purposes
+my $grok_eprt;
 
-# open and close each time to allow removal at any time
+my $path   = '.';
+my $logdir = $path .'/log';
+
+#**********************************************************************
+# global vars used for server address and primary listener port
+#
+my $port = 8921;               # default primary listener port
+my $listenaddr = '127.0.0.1';  # default address for listener port
+
+#**********************************************************************
+# global vars used for file names
+#
+my $pidfile;            # server pid file name
+my $logfile;            # server log file name
+my $mainsockf_pidfile;  # pid file for primary connection sockfilt process
+my $mainsockf_logfile;  # log file for primary connection sockfilt process
+my $datasockf_pidfile;  # pid file for secondary connection sockfilt process
+my $datasockf_logfile;  # log file for secondary connection sockfilt process
+
+#**********************************************************************
+# global vars used for server logs advisor read lock handling
+#
+my $SERVERLOGS_LOCK = 'log/serverlogs.lock';
+my $serverlogslocked = 0;
+
+#**********************************************************************
+# global vars used for child processes PID tracking
+#
+my $sfpid;        # PID for primary connection sockfilt process
+my $slavepid;     # PID for secondary connection sockfilt process
+
+#**********************************************************************
+# global typeglob filehandle vars to read/write from/to sockfilters
+#
+local *SFREAD;    # used to read from primary connection
+local *SFWRITE;   # used to write to primary connection
+local *DREAD;     # used to read from secondary connection
+local *DWRITE;    # used to write to secondary connection
+
+#**********************************************************************
+# global vars which depend on server protocol selection
+#
+my %commandfunc;  # protocol command specific function callbacks
+my %displaytext;  # text returned to client before callback runs
+my @welcome;      # text returned to client upon connection
+
+#**********************************************************************
+# global vars customized for each test from the server commands file
+#
+my $ctrldelay;    # set if server should throttle ctrl stream
+my $datadelay;    # set if server should throttle data stream
+my $retrweirdo;   # set if ftp server should use RETRWEIRDO
+my $retrnosize;   # set if ftp server should use RETRNOSIZE
+my $pasvbadip;    # set if ftp server should use PASVBADIP
+my $nosave;       # set if ftp server should not save uploaded data
+my %customreply;  #
+my %customcount;  #
+my %delayreply;   #
+
+#**********************************************************************
+# global vars used for signal handling
+#
+my $got_exit_signal = 0; # set if program should finish execution ASAP
+my $exit_signal;         # first signal handled in exit_signal_handler
+
+#**********************************************************************
+# exit_signal_handler will be triggered to indicate that the program
+# should finish its execution in a controlled way as soon as possible.
+# For now, program will also terminate from within this handler.
+#
+sub exit_signal_handler {
+    my $signame = shift;
+    # For now, simply mimic old behavior.
+    killsockfilters($proto, $ipvnum, $idnum, $verbose);
+    unlink($pidfile);
+    if($serverlogslocked) {
+        $serverlogslocked = 0;
+        clear_advisor_read_lock($SERVERLOGS_LOCK);
+    }
+    exit;
+}
+
+#**********************************************************************
+# logmsg is general message logging subroutine for our test servers.
+#
 sub logmsg {
- # if later than perl 5.6 is used
- #   my ($seconds, $microseconds) = gettimeofday;
-    my $seconds = time();
-    my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
-        localtime($seconds);
-    open(FTPLOG, ">>log/ftpd$ftpdnum.log");
-    printf FTPLOG ("%02d:%02d:%02d ", $hour, $min, $sec);
-    print FTPLOG @_;
-    close(FTPLOG);
+    my $now;
+    # sub second timestamping needs Time::HiRes
+    if($Time::HiRes::VERSION) {
+        my ($seconds, $usec) = gettimeofday();
+        my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
+            localtime($seconds);
+        $now = sprintf("%02d:%02d:%02d.%06d ", $hour, $min, $sec, $usec);
+    }
+    else {
+        my $seconds = time();
+        my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
+            localtime($seconds);
+        $now = sprintf("%02d:%02d:%02d ", $hour, $min, $sec);
+    }
+    if(open(LOGFILEFH, ">>$logfile")) {
+        print LOGFILEFH $now;
+        print LOGFILEFH @_;
+        close(LOGFILEFH);
+    }
 }
 
 sub ftpmsg {
   # append to the server.input file
-  open(INPUT, ">>log/server$ftpdnum.input") ||
-    logmsg "failed to open log/server$ftpdnum.input\n";
+  open(INPUT, ">>log/server$idstr.input") ||
+    logmsg "failed to open log/server$idstr.input\n";
 
   print INPUT @_;
   close(INPUT);
 
   # use this, open->print->close system only to make the file
   # open as little as possible, to make the test suite run
   # better on windows/cygwin
 }
 
-my $verbose=0; # set to 1 for debugging
-my $pasvbadip=0;
-my $retrweirdo=0;
-my $retrnosize=0;
-my $srcdir=".";
-my $nosave=0;
-my $controldelay=0; # set to 1 to delay the control connect data sending to
- # test that curl deals with that nicely
-my $slavepid; # for the DATA connection sockfilt slave process
-my $ipv6;
-my $ext; # append to log/pid file names
-my $grok_eprt;
-my $port = 8921; # just a default
-my $listenaddr = "127.0.0.1"; # just a default
-my $pidfile = ".ftpd.pid"; # a default, use --pidfile
-
-my $SERVERLOGS_LOCK="log/serverlogs.lock"; # server logs advisor read lock
-
-do {
-    if($ARGV[0] eq "-v") {
-        $verbose=1;
-    }
-    elsif($ARGV[0] eq "-s") {
-        $srcdir=$ARGV[1];
-        shift @ARGV;
-    }
-    elsif($ARGV[0] eq "--id") {
-        $ftpdnum=$ARGV[1];
-        shift @ARGV;
-    }
-    elsif($ARGV[0] eq "--pidfile") {
-        $pidfile=$ARGV[1];
-        shift @ARGV;
-    }
-    elsif($ARGV[0] eq "--ipv6") {
-        $ipv6="--ipv6";
-        $ext="ipv6";
-        $grok_eprt = 1;
-    }
-    elsif($ARGV[0] eq "--port") {
-        $port = $ARGV[1];
-        shift @ARGV;
-    }
-    elsif($ARGV[0] eq "--addr") {
-        $listenaddr = $ARGV[1];
-        $listenaddr =~ s/^\[(.*)\]$/\1/;
-        shift @ARGV;
-    }
-} while(shift @ARGV);
-
-sub catch_zap {
-    my $signame = shift;
-    print STDERR "ftpserver.pl received SIG$signame, exiting\n";
-    ftpkillslaves(1);
-    clear_advisor_read_lock($SERVERLOGS_LOCK);
-    die "Somebody sent me a SIG$signame";
-}
-$SIG{INT} = \&catch_zap;
-$SIG{KILL} = \&catch_zap;
-
-my $sfpid;
-
-local(*SFREAD, *SFWRITE);
 
 sub sysread_or_die {
     my $FH     = shift;
     my $scalar = shift;
     my $length = shift;
     my $fcaller;
@@ -143,63 +209,66 @@
 
     $result = sysread($$FH, $$scalar, $length);
 
     if(not defined $result) {
         ($fcaller, $lcaller) = (caller)[1,2];
         logmsg "Failed to read input\n";
-        logmsg "Error: ftp$ftpdnum$ext sysread error: $!\n";
-        kill(9, $sfpid);
-        waitpid($sfpid, 0);
-        clear_advisor_read_lock($SERVERLOGS_LOCK);
-        die "Died in sysread_or_die() at $fcaller " .
-            "line $lcaller. ftp$ftpdnum$ext sysread error: $!\n";
+        logmsg "Error: $srvrname server, sysread error: $!\n";
+        logmsg "Exited from sysread_or_die() at $fcaller " .
+               "line $lcaller. $srvrname server, sysread error: $!\n";
+        killsockfilters($proto, $ipvnum, $idnum, $verbose);
+        unlink($pidfile);
+        if($serverlogslocked) {
+            $serverlogslocked = 0;
+            clear_advisor_read_lock($SERVERLOGS_LOCK);
+        }
+        exit;
     }
     elsif($result == 0) {
         ($fcaller, $lcaller) = (caller)[1,2];
         logmsg "Failed to read input\n";
-        logmsg "Error: ftp$ftpdnum$ext read zero\n";
-        kill(9, $sfpid);
-        waitpid($sfpid, 0);
-        clear_advisor_read_lock($SERVERLOGS_LOCK);
-        die "Died in sysread_or_die() at $fcaller " .
-            "line $lcaller. ftp$ftpdnum$ext read zero\n";
+        logmsg "Error: $srvrname server, read zero\n";
+        logmsg "Exited from sysread_or_die() at $fcaller " .
+               "line $lcaller. $srvrname server, read zero\n";
+        killsockfilters($proto, $ipvnum, $idnum, $verbose);
+        unlink($pidfile);
+        if($serverlogslocked) {
+            $serverlogslocked = 0;
+            clear_advisor_read_lock($SERVERLOGS_LOCK);
+        }
+        exit;
     }
 
     return $result;
 }
 
 sub startsf {
-    my $cmd="./server/sockfilt --port $port --logfile log/sockctrl$ftpdnum$ext.log --pidfile .sockfilt$ftpdnum$ext.pid $ipv6";
-    $sfpid = open2(*SFREAD, *SFWRITE, $cmd);
+    my $mainsockfcmd = "./server/sockfilt " .
+        "--ipv$ipvnum --port $port " .
+        "--pidfile \"$mainsockf_pidfile\" " .
+        "--logfile \"$mainsockf_logfile\"";
+    $sfpid = open2(*SFREAD, *SFWRITE, $mainsockfcmd);
 
-    print STDERR "$cmd\n" if($verbose);
+    print STDERR "$mainsockfcmd\n" if($verbose);
 
     print SFWRITE "PING\n";
     my $pong;
-    sysread SFREAD, $pong, 5;
+    sysread_or_die(\*SFREAD, \$pong, 5);
 
     if($pong !~ /^PONG/) {
-        logmsg "Failed sockfilt command: $cmd\n";
-        kill(9, $sfpid);
-        waitpid($sfpid, 0);
-        clear_advisor_read_lock($SERVERLOGS_LOCK);
+        logmsg "Failed sockfilt command: $mainsockfcmd\n";
+        killsockfilters($proto, $ipvnum, $idnum, $verbose);
+        unlink($pidfile);
+        if($serverlogslocked) {
+            $serverlogslocked = 0;
+            clear_advisor_read_lock($SERVERLOGS_LOCK);
+        }
         die "Failed to start sockfilt!";
     }
 }
 
-# remove the file here so that if startsf() fails, it is very noticeable 
-unlink($pidfile);
-
-startsf();
-
-logmsg sprintf("FTP server listens on port IPv%d/$port\n", $ipv6?6:4);
-open(PID, ">$pidfile");
-print PID $$."\n";
-close(PID);
-
-logmsg("logged pid $$ in $pidfile\n");
 
 sub sockfilt {
     my $l;
     foreach $l (@_) {
         printf SFWRITE "DATA\n%04x\n", length($l);
         print SFWRITE $l;
@@ -217,13 +286,13 @@
 
 
 # Send data to the client on the control stream, which happens to be plain
 # stdout.
 
 sub sendcontrol {
-    if(!$controldelay) {
+    if(!$ctrldelay) {
         # spit it all out at once
         sockfilt @_;
     }
     else {
         my $a = join("", @_);
         my @a = split("", $a);
@@ -243,13 +312,13 @@
 
 # Send data to the client on the data stream
 
 sub senddata {
     my $l;
     foreach $l (@_) {
-      if(!$controldelay) {
+      if(!$datadelay) {
         # spit it all out at once
         sockfiltsecondary $l;
       }
       else {
           # pause between each byte
           for (split(//,$l)) {
@@ -257,76 +326,367 @@
               select(undef, undef, undef, 0.01);
           }
       }
     }
 }
 
-# this text is shown before the function specified below is run
-my %displaytext = ('USER' => '331 We are happy you popped in!',
-                   'PASS' => '230 Welcome you silly person',
-                   'PORT' => '200 You said PORT - I say FINE',
-                   'TYPE' => '200 I modify TYPE as you wanted',
-                   'LIST' => '150 here comes a directory',
-                   'NLST' => '150 here comes a directory',
-                   'CWD'  => '250 CWD command successful.',
-                   'SYST' => '215 UNIX Type: L8', # just fake something
-                   'QUIT' => '221 bye bye baby', # just reply something
-                   'PWD'  => '257 "/nowhere/anywhere" is current directory',
-                   'MKD'  => '257 Created your requested directory',
-                   'REST' => '350 Yeah yeah we set it there for you',
-                   'DELE' => '200 OK OK OK whatever you say',
-                   'RNFR' => '350 Received your order. Please provide more',
-                   'RNTO' => '250 Ok, thanks. File renaming completed.',
-                   'NOOP' => '200 Yes, I\'m very good at doing nothing.',
-                   'PBSZ' => '500 PBSZ not implemented',
-                   'PROT' => '500 PROT not implemented',
-                   );
-
-# callback functions for certain commands
-my %commandfunc = ( 'PORT' => \&PORT_command,
-                    'EPRT' => \&PORT_command,
-                    'LIST' => \&LIST_command,
-                    'NLST' => \&NLST_command,
-                    'PASV' => \&PASV_command,
-                    'EPSV' => \&PASV_command,
-                    'RETR' => \&RETR_command,   
-                    'SIZE' => \&SIZE_command,
-                    'REST' => \&REST_command,
-                    'STOR' => \&STOR_command,
-                    'APPE' => \&STOR_command, # append looks like upload
-                    'MDTM' => \&MDTM_command,
-                    );
+#**********************************************************************
+# protocolsetup initializes the 'displaytext' and 'commandfunc' hashes
+# for the given protocol. References to protocol command callbacks are
+# stored in 'commandfunc' hash, and text which will be returned to the
+# client before the command callback runs is stored in 'displaytext'.
+#
+sub protocolsetup {
+    my $proto = $_[0];
 
+    if($proto eq 'ftp') {
+        %commandfunc = (
+            'PORT' => \&PORT_ftp,
+            'EPRT' => \&PORT_ftp,
+            'LIST' => \&LIST_ftp,
+            'NLST' => \&NLST_ftp,
+            'PASV' => \&PASV_ftp,
+            'EPSV' => \&PASV_ftp,
+            'RETR' => \&RETR_ftp,   
+            'SIZE' => \&SIZE_ftp,
+            'REST' => \&REST_ftp,
+            'STOR' => \&STOR_ftp,
+            'APPE' => \&STOR_ftp, # append looks like upload
+            'MDTM' => \&MDTM_ftp,
+        );
+        %displaytext = (
+            'USER' => '331 We are happy you popped in!',
+            'PASS' => '230 Welcome you silly person',
+            'PORT' => '200 You said PORT - I say FINE',
+            'TYPE' => '200 I modify TYPE as you wanted',
+            'LIST' => '150 here comes a directory',
+            'NLST' => '150 here comes a directory',
+            'CWD'  => '250 CWD command successful.',
+            'SYST' => '215 UNIX Type: L8', # just fake something
+            'QUIT' => '221 bye bye baby', # just reply something
+            'PWD'  => '257 "/nowhere/anywhere" is current directory',
+            'MKD'  => '257 Created your requested directory',
+            'REST' => '350 Yeah yeah we set it there for you',
+            'DELE' => '200 OK OK OK whatever you say',
+            'RNFR' => '350 Received your order. Please provide more',
+            'RNTO' => '250 Ok, thanks. File renaming completed.',
+            'NOOP' => '200 Yes, I\'m very good at doing nothing.',
+            'PBSZ' => '500 PBSZ not implemented',
+            'PROT' => '500 PROT not implemented',
+        );
+        @welcome = (
+            '220-        _   _ ____  _     '."\r\n",
+            '220-    ___| | | |  _ \| |    '."\r\n",
+            '220-   / __| | | | |_) | |    '."\r\n",
+            '220-  | (__| |_| |  _ <| |___ '."\r\n",
+            '220    \___|\___/|_| \_\_____|'."\r\n"
+        );
+    }
+    elsif($proto eq 'pop3') {
+        %commandfunc = (
+            'RETR' => \&RETR_pop3,
+        );
+        %displaytext = (
+            'USER' => '+OK We are happy you popped in!',
+            'PASS' => '+OK Access granted',
+            'QUIT' => '+OK byebye',
+        );
+        @welcome = (
+            '        _   _ ____  _     '."\r\n",
+            '    ___| | | |  _ \| |    '."\r\n",
+            '   / __| | | | |_) | |    '."\r\n",
+            '  | (__| |_| |  _ <| |___ '."\r\n",
+            '   \___|\___/|_| \_\_____|'."\r\n",
+            '+OK cURL POP3 server ready to serve'."\r\n"
+        );
+    }
+    elsif($proto eq 'imap') {
+        %commandfunc = (
+            'FETCH'  => \&FETCH_imap,
+            'SELECT' => \&SELECT_imap,
+        );
+        %displaytext = (
+            'LOGIN'  => ' OK We are happy you popped in!',
+            'SELECT' => ' OK selection done',
+            'LOGOUT' => ' OK thanks for the fish',
+        );
+        @welcome = (
+            '        _   _ ____  _     '."\r\n",
+            '    ___| | | |  _ \| |    '."\r\n",
+            '   / __| | | | |_) | |    '."\r\n",
+            '  | (__| |_| |  _ <| |___ '."\r\n",
+            '   \___|\___/|_| \_\_____|'."\r\n",
+            '* OK cURL IMAP server ready to serve'."\r\n"
+        );
+    }
+    elsif($proto eq 'smtp') {
+        %commandfunc = (
+            'DATA' => \&DATA_smtp,
+            'RCPT' => \&RCPT_smtp,
+        );
+        %displaytext = (
+            'EHLO' => '230 We are happy you popped in!',
+            'MAIL' => '200 Note taken',
+            'RCPT' => '200 Receivers accepted',
+            'QUIT' => '200 byebye',
+        );
+        @welcome = (
+            '220-        _   _ ____  _     '."\r\n",
+            '220-    ___| | | |  _ \| |    '."\r\n",
+            '220-   / __| | | | |_) | |    '."\r\n",
+            '220-  | (__| |_| |  _ <| |___ '."\r\n",
+            '220    \___|\___/|_| \_\_____|'."\r\n"
+        );
+    }
+}
 
 sub close_dataconn {
     my ($closed)=@_; # non-zero if already disconnected
 
+    my $datapid = processexists($datasockf_pidfile);
+
     if(!$closed) {
         logmsg "* disconnect data connection\n";
-        print DWRITE "DISC\n";
-        my $i;
-        sysread DREAD, $i, 5;
+        if($datapid > 0) {
+            print DWRITE "DISC\n";
+            my $i;
+            sysread DREAD, $i, 5;
+        }
     }
     else {
         logmsg "data connection already disconnected\n";
     }
     logmsg "=====> Closed data connection\n";
 
-    logmsg "* quit sockfilt for data (pid $slavepid)\n";
-    print DWRITE "QUIT\n";
-    waitpid $slavepid, 0;
-    $slavepid=0;
+    logmsg "* quit sockfilt for data (pid $datapid)\n";
+    if($datapid > 0) {
+        print DWRITE "QUIT\n";
+        waitpid($datapid, 0);
+        unlink($datasockf_pidfile) if(-f $datasockf_pidfile);
+    }
+}
+
+################
+################ SMTP commands 
+################
+
+# what set by "RCPT"
+my $smtp_rcpt;
+
+sub DATA_smtp {
+    my $testno;
+
+    if($smtp_rcpt =~ /^TO:(.*)/) {
+        $testno = $1;
+    }
+    else {
+        return; # failure
+    }
+
+    if($testno eq "verifiedserver") {
+        sendcontrol "554 WE ROOLZ: $$\r\n";
+        return 0; # don't wait for data now
+    }
+    else {
+        $testno =~ s/^([0-9]*).*/$1/;
+        sendcontrol "354 Show me the mail\r\n";
+    }
+
+    logmsg "===> rcpt $testno was $smtp_rcpt\n";
+
+    my $filename = "log/upload.$testno";
+
+    logmsg "Store test number $testno in $filename\n";
+
+    open(FILE, ">$filename") ||
+        return 0; # failed to open output
+
+    my $line;
+    my $ulsize=0;
+    my $disc=0;
+    my $raw;
+    while (5 == (sysread \*SFREAD, $line, 5)) {
+        if($line eq "DATA\n") {
+            my $i;
+            my $eob;
+            sysread \*SFREAD, $i, 5;
+
+            my $size = 0;
+            if($i =~ /^([0-9a-fA-F]{4})\n/) {
+                $size = hex($1);
+            }
+
+            sysread \*SFREAD, $line, $size;
+            
+            $ulsize += $size;
+            print FILE $line if(!$nosave);
+
+            $raw .= $line;
+            if($raw =~ /\x0d\x0a\x2e\x0d\x0a/) {
+                # end of data marker!
+                $eob = 1;
+            }
+            logmsg "> Appending $size bytes to file\n";
+            if($eob) {
+                logmsg "Found SMTP EOB marker\n";
+                last;
+            }
+        }
+        elsif($line eq "DISC\n") {
+            # disconnect!
+            $disc=1;
+            last;
+        }
+        else {
+            logmsg "No support for: $line";
+            last;
+        }
+    }
+    if($nosave) {
+        print FILE "$ulsize bytes would've been stored here\n";
+    }
+    close(FILE);
+    logmsg "received $ulsize bytes upload\n";
+
 }
 
+sub RCPT_smtp {
+    my ($args) = @_;
+
+    $smtp_rcpt = $args;
+}
+
+################
+################ IMAP commands 
+################
+
+# global to allow the command functions to read it
+my $cmdid;
+
+# what was picked by SELECT
+my $selected;
+
+sub SELECT_imap {
+    my ($testno) = @_;
+    my @data;
+    my $size;
+
+    logmsg "SELECT_imap got test $testno\n";
+
+    $selected = $testno;
+
+    return 0;
+}
+
+
+sub FETCH_imap {
+     my ($testno) = @_;
+     my @data;
+     my $size;
+
+     logmsg "FETCH_imap got test $testno\n";
+
+     $testno = $selected;
+
+     if($testno =~ /^verifiedserver$/) {
+         # this is the secret command that verifies that this actually is
+         # the curl test server
+         my $response = "WE ROOLZ: $$\r\n";
+         if($verbose) {
+             print STDERR "FTPD: We returned proof we are the test server\n";
+         }
+         $data[0] = $response;
+         logmsg "return proof we are we\n";
+     }
+     else {
+         logmsg "retrieve a mail\n";
+
+         $testno =~ s/^([^0-9]*)//;
+         my $testpart = "";
+         if ($testno > 10000) {
+             $testpart = $testno % 10000;
+             $testno = int($testno / 10000);
+         }
+
+         # send mail content
+         loadtest("$srcdir/data/test$testno");
+
+         @data = getpart("reply", "data$testpart");
+     }
+
+     for (@data) {
+         $size += length($_);
+     }
+
+     sendcontrol "* FETCH starts {$size}\r\n";
+
+     for my $d (@data) {
+         sendcontrol $d;
+     }
+
+     sendcontrol "$cmdid OK FETCH completed\r\n";
+    
+     return 0;
+}
+
+################
+################ POP3 commands 
+################
+
+sub RETR_pop3 {
+     my ($testno) = @_;
+     my @data;
+
+     if($testno =~ /^verifiedserver$/) {
+         # this is the secret command that verifies that this actually is
+         # the curl test server
+         my $response = "WE ROOLZ: $$\r\n";
+         if($verbose) {
+             print STDERR "FTPD: We returned proof we are the test server\n";
+         }
+         $data[0] = $response;
+         logmsg "return proof we are we\n";
+     }
+     else {
+         logmsg "retrieve a mail\n";
+
+         $testno =~ s/^([^0-9]*)//;
+         my $testpart = "";
+         if ($testno > 10000) {
+             $testpart = $testno % 10000;
+             $testno = int($testno / 10000);
+         }
+
+         # send mail content
+         loadtest("$srcdir/data/test$testno");
+
+         @data = getpart("reply", "data$testpart");
+     }
+
+     sendcontrol "+OK Mail transfer starts\r\n";
+
+     for my $d (@data) {
+         sendcontrol $d;
+     }
+
+     # end with the magic 5-byte end of mail marker
+     sendcontrol "\r\n.\r\n";
+    
+     return 0;
+}
+
+################
+################ FTP commands 
+################
 my $rest=0;
-sub REST_command {
+sub REST_ftp {
     $rest = $_[0];
     logmsg "Set REST position to $rest\n"
 }
 
-sub LIST_command {
+sub LIST_ftp {
   #  print "150 ASCII data connection for /bin/ls (193.15.23.1,59196) (0 bytes)\r\n";
 
 # this is a built-in fake-dir ;-)
 my @ftpdir=("total 20\r\n",
 "drwxr-xr-x   8 98       98           512 Oct 22 13:06 .\r\n",
 "drwxr-xr-x   8 98       98           512 Oct 22 13:06 ..\r\n",
@@ -345,67 +705,76 @@
     }
     close_dataconn(0);
     sendcontrol "226 ASCII transfer complete\r\n";
     return 0;
 }
 
-sub NLST_command {
+sub NLST_ftp {
     my @ftpdir=("file", "with space", "fake", "..", " ..", "funny", "README");
     logmsg "pass NLST data on data connection\n";
     for(@ftpdir) {
         senddata "$_\r\n";
     }
     close_dataconn(0);
     sendcontrol "226 ASCII transfer complete\r\n";
     return 0;
 }
 
-sub MDTM_command {
+sub MDTM_ftp {
     my $testno = $_[0];
     my $testpart = "";
     if ($testno > 10000) {
         $testpart = $testno % 10000;
         $testno = int($testno / 10000);
     }
 
     loadtest("$srcdir/data/test$testno");
 
     my @data = getpart("reply", "mdtm");
 
     my $reply = $data[0];
-    chomp $reply;
+    chomp $reply if($reply);
 
-    if($reply <0) {
+    if($reply && ($reply =~ /^[+-]?\d+$/) && ($reply < 0)) {
         sendcontrol "550 $testno: no such file.\r\n";
     }
     elsif($reply) {
         sendcontrol "$reply\r\n";
     }
     else {
         sendcontrol "500 MDTM: no such command.\r\n";
     }
     return 0;
 }
 
-sub SIZE_command {
+sub SIZE_ftp {
     my $testno = $_[0];
-    my $testpart = "";
-    if ($testno > 10000) {
-        $testpart = $testno % 10000;
-        $testno = int($testno / 10000);
-    }
-
-    loadtest("$srcdir/data/test$testno");
 
-    if($testno eq "verifiedserver") {
+    if($testno =~ /^verifiedserver$/) {
         my $response = "WE ROOLZ: $$\r\n";
         my $size = length($response);
         sendcontrol "213 $size\r\n";
         return 0;
     }
 
+    if($testno =~ /(\d+)\/?$/) {
+        $testno = $1;
+    }
+    else {
+        print STDERR "SIZE_ftp: invalid test number: $testno\n";
+        return 1;
+    }
+
+    my $testpart = "";
+    if($testno > 10000) {
+        $testpart = $testno % 10000;
+        $testno = int($testno / 10000);
+    }
+
+    loadtest("$srcdir/data/test$testno");
+
     my @data = getpart("reply", "size");
 
     my $size = $data[0];
 
     if($size) {
         if($size > -1) {
@@ -428,13 +797,13 @@
             sendcontrol "550 $testno: No such file or directory.\r\n";
         }
     }
     return 0;
 }
 
-sub RETR_command {
+sub RETR_ftp {
     my ($testno) = @_;
 
     if($testno =~ /^verifiedserver$/) {
         # this is the secret command that verifies that this actually is
         # the curl test server
         my $response = "WE ROOLZ: $$\r\n";
@@ -505,13 +874,13 @@
     else {
         sendcontrol "550 $testno: No such file or directory.\r\n";
     }
     return 0;
 }
 
-sub STOR_command {
+sub STOR_ftp {
     my $testno=$_[0];
 
     my $filename = "log/upload.$testno";
 
     logmsg "STOR test number $testno in $filename\n";
 
@@ -525,15 +894,17 @@
     my $disc=0;
     while (5 == (sysread DREAD, $line, 5)) {
         if($line eq "DATA\n") {
             my $i;
             sysread DREAD, $i, 5;
 
-            #print STDERR "  GOT: $i";
+            my $size = 0;
+            if($i =~ /^([0-9a-fA-F]{4})\n/) {
+                $size = hex($1);
+            }
 
-            my $size = hex($i);
             sysread DREAD, $line, $size;
             
             #print STDERR "  GOT: $size bytes\n";
 
             $ulsize += $size;
             print FILE $line if(!$nosave);
@@ -556,38 +927,34 @@
     close_dataconn($disc);
     logmsg "received $ulsize bytes upload\n";
     sendcontrol "226 File transfer complete\r\n";
     return 0;
 }
 
-sub PASV_command {
+sub PASV_ftp {
     my ($arg, $cmd)=@_;
     my $pasvport;
-    my $pidf=".sockdata$ftpdnum$ext.pid";
 
-    my $prev = checkserver($pidf);
-    if($prev > 0) {
-        print "kill existing server: $prev\n" if($verbose);
-        kill(9, $prev);
-        waitpid($prev, 0);
-    }
+    # kill previous data connection sockfilt when alive
+    killsockfilters($proto, $ipvnum, $idnum, $verbose, 'data');
 
     # We fire up a new sockfilt to do the data transfer for us.
-    $slavepid = open2(\*DREAD, \*DWRITE,
-                      "./server/sockfilt --port 0 --logfile log/sockdata$ftpdnum$ext.log --pidfile $pidf $ipv6");
+    my $datasockfcmd = "./server/sockfilt " .
+        "--ipv$ipvnum --port 0 " .
+        "--pidfile \"$datasockf_pidfile\" " .
+        "--logfile \"$datasockf_logfile\"";
+    $slavepid = open2(\*DREAD, \*DWRITE, $datasockfcmd);
 
     print DWRITE "PING\n";
     my $pong;
-
     sysread_or_die(\*DREAD, \$pong, 5);
 
     if($pong !~ /^PONG/) {
-        kill(9, $slavepid);
-        waitpid($slavepid, 0);
-        sendcontrol "500 no free ports!\r\n";
         logmsg "failed to run sockfilt for data connection\n";
+        killsockfilters($proto, $ipvnum, $idnum, $verbose, 'data');
+        sendcontrol "500 no free ports!\r\n";
         return 0;
     }
 
     logmsg "Run sockfilt for data on pid $slavepid\n";
 
     # Find out what port we listen on
@@ -597,14 +964,17 @@
     # READ the response code
     sysread_or_die(\*DREAD, \$i, 5);
 
     # READ the response size
     sysread_or_die(\*DREAD, \$i, 5);
 
-    my $size = hex($i);
-        
+    my $size = 0;
+    if($i =~ /^([0-9a-fA-F]{4})\n/) {
+        $size = hex($1);
+    }
+       
     # READ the response data
     sysread_or_die(\*DREAD, \$i, $size);
         
     # The data is in the format
     # IPvX/NNN
 
@@ -629,13 +999,13 @@
     }
 
     eval {
         local $SIG{ALRM} = sub { die "alarm\n" };
 
         # assume swift operations unless explicitly slow
-        alarm ($controldelay?20:10);
+        alarm ($datadelay?20:10);
 
         # Wait for 'CNCT'
         my $input;
 
         while(sysread(DREAD, $input, 5)) {
 
@@ -648,29 +1018,28 @@
             last;
         }
         alarm 0;
     };
     if ($@) {
         # timed out
-
-        print DWRITE "QUIT\n";
-        waitpid $slavepid, 0;
-        logmsg "accept failed\n";
-        $slavepid=0;
+        logmsg "$srvrname server timed out awaiting data connection ".
+            "on port $pasvport\n";
+        logmsg "accept failed or connection not even attempted\n";
+        killsockfilters($proto, $ipvnum, $idnum, $verbose, 'data');
         return;
     }
     else {
         logmsg "data connection setup on port $pasvport\n";
     }
 
     return;
 }
 
 # Support both PORT and EPRT here. Consider LPRT too.
 
-sub PORT_command {
+sub PORT_ftp {
     my ($arg, $cmd) = @_;
     my $port;
     my $addr;
 
     # We always ignore the given IP and use localhost.
 
@@ -701,46 +1070,50 @@
     if(!$port || $port > 65535) {
         print STDERR "very illegal PORT number: $port\n";
         return 1;
     }
 
     # We fire up a new sockfilt to do the data transfer for us.
-    # FIX: make it use IPv6 if need be
-    my $filtcmd="./server/sockfilt --connect $port --addr $addr --logfile log/sockdata$ftpdnum$ext.log --pidfile .sockdata$ftpdnum$ext.pid $ipv6";
-    $slavepid = open2(\*DREAD, \*DWRITE, $filtcmd);
+    my $datasockfcmd = "./server/sockfilt " .
+        "--ipv$ipvnum --connect $port --addr \"$addr\" " .
+        "--pidfile \"$datasockf_pidfile\" " .
+        "--logfile \"$datasockf_logfile\"";
+    $slavepid = open2(\*DREAD, \*DWRITE, $datasockfcmd);
 
-    print STDERR "$filtcmd\n" if($verbose);
+    print STDERR "$datasockfcmd\n" if($verbose);
 
     print DWRITE "PING\n";
     my $pong;
-    sysread DREAD, $pong, 5;
+    sysread_or_die(\*DREAD, \$pong, 5);
 
     if($pong !~ /^PONG/) {
         logmsg "Failed sockfilt for data connection\n";
-        kill(9, $slavepid);
-        waitpid($slavepid, 0);
+        killsockfilters($proto, $ipvnum, $idnum, $verbose, 'data');
     }
 
     logmsg "====> Client DATA connect to port $port\n";
 
     return;
 }
 
-my %customreply;
-my %customcount;
-my %delayreply;
+#**********************************************************************
+# customize configures test server operation for each curl test, reading
+# configuration commands/parameters from server commands file each time
+# a new client control connection is established with the test server.
+# On success returns 1, otherwise zero.
+#
 sub customize {
-    $nosave = 0; # default is to save as normal
-    $controldelay = 0; # default is no delaying the responses
-    $retrweirdo = 0;
-    $retrnosize = 0;
-    $pasvbadip = 0;
-    $nosave = 0;
-    %customreply = ();
-    %customcount = ();
-    %delayreply = ();
+    $ctrldelay = 0;    # default is no throttling of the ctrl stream
+    $datadelay = 0;    # default is no throttling of the data stream
+    $retrweirdo = 0;   # default is no use of RETRWEIRDO
+    $retrnosize = 0;   # default is no use of RETRNOSIZE
+    $pasvbadip = 0;    # default is no use of PASVBADIP
+    $nosave = 0;       # default is to actually save uploaded data to file
+    %customreply = (); #
+    %customcount = (); #
+    %delayreply = ();  #
 
     open(CUSTOM, "<log/ftpserver.cmd") ||
         return 1;
 
     logmsg "FTPD: Getting commands from log/ftpserver.cmd\n";
 
@@ -757,14 +1130,15 @@
         }
         elsif($_ =~ /DELAY ([A-Z]+) (\d*)/) {
             $delayreply{$1}=$2;
             logmsg "FTPD: delay reply for $1 with $2 seconds\n";
         }
         elsif($_ =~ /SLOWDOWN/) {
-            $controldelay=1;
-            logmsg "FTPD: send response with 0.1 sec delay between each byte\n";
+            $ctrldelay=1;
+            $datadelay=1;
+            logmsg "FTPD: send response with 0.01 sec delay between each byte\n";
         }
         elsif($_ =~ /RETRWEIRDO/) {
             logmsg "FTPD: instructed to use RETRWEIRDO\n";
             $retrweirdo=1;
         }
         elsif($_ =~ /RETRNOSIZE/) {
@@ -782,18 +1156,150 @@
             logmsg "FTPD: NOSAVE prevents saving of uploaded data\n";
         }
     }
     close(CUSTOM);
 }
 
-my @welcome=(
-            '220-        _   _ ____  _     '."\r\n",
-            '220-    ___| | | |  _ \| |    '."\r\n",
-            '220-   / __| | | | |_) | |    '."\r\n",
-            '220-  | (__| |_| |  _ <| |___ '."\r\n",
-            '220    \___|\___/|_| \_\_____|'."\r\n");
+#----------------------------------------------------------------------
+#----------------------------------------------------------------------
+#---------------------------  END OF SUBS  ----------------------------
+#----------------------------------------------------------------------
+#----------------------------------------------------------------------
+
+#**********************************************************************
+# Parse command line options
+#
+# Options:
+#
+# --verbose   # verbose
+# --srcdir    # source directory
+# --id        # server instance number
+# --proto     # server protocol
+# --pidfile   # server pid file
+# --logfile   # server log file
+# --ipv4      # server IP version 4
+# --ipv6      # server IP version 6
+# --port      # server listener port
+# --addr      # server address for listener port binding
+#
+while(@ARGV) {
+    if($ARGV[0] eq '--verbose') {
+        $verbose = 1;
+    }
+    elsif($ARGV[0] eq '--srcdir') {
+        if($ARGV[1]) {
+            $srcdir = $ARGV[1];
+            shift @ARGV;
+        }
+    }
+    elsif($ARGV[0] eq '--id') {
+        if($ARGV[1] && ($ARGV[1] =~ /^(\d+)$/)) {
+            $idnum = $1 if($1 > 0);
+            shift @ARGV;
+        }
+    }
+    elsif($ARGV[0] eq '--proto') {
+        if($ARGV[1] && ($ARGV[1] =~ /^(ftp|imap|pop3|smtp)$/)) {
+            $proto = $1;
+            shift @ARGV;
+        }
+        else {
+            die "unsupported protocol $ARGV[1]";
+        }
+    }
+    elsif($ARGV[0] eq '--pidfile') {
+        if($ARGV[1]) {
+            $pidfile = $ARGV[1];
+            shift @ARGV;
+        }
+    }
+    elsif($ARGV[0] eq '--logfile') {
+        if($ARGV[1]) {
+            $logfile = $ARGV[1];
+            shift @ARGV;
+        }
+    }
+    elsif($ARGV[0] eq '--ipv4') {
+        $ipvnum = 4;
+        $listenaddr = '127.0.0.1' if($listenaddr eq '::1');
+        $grok_eprt = 0;
+    }
+    elsif($ARGV[0] eq '--ipv6') {
+        $ipvnum = 6;
+        $listenaddr = '::1' if($listenaddr eq '127.0.0.1');
+        $grok_eprt = 1;
+    }
+    elsif($ARGV[0] eq '--port') {
+        if($ARGV[1] && ($ARGV[1] =~ /^(\d+)$/)) {
+            $port = $1 if($1 > 1024);
+            shift @ARGV;
+        }
+    }
+    elsif($ARGV[0] eq '--addr') {
+        if($ARGV[1]) {
+            my $tmpstr = $ARGV[1];
+            if($tmpstr =~ /^(\d\d?\d?)\.(\d\d?\d?)\.(\d\d?\d?)\.(\d\d?\d?)$/) {
+                $listenaddr = "$1.$2.$3.$4" if($ipvnum == 4);
+            }
+            elsif($ipvnum == 6) {
+                $listenaddr = $tmpstr;
+                $listenaddr =~ s/^\[(.*)\]$/$1/;
+            }
+            shift @ARGV;
+        }
+    }
+    else {
+        print STDERR "\nWarning: ftpserver.pl unknown parameter: $ARGV[0]\n";
+    }
+    shift @ARGV;
+}
+
+#***************************************************************************
+# Initialize command line option dependant variables
+#
+
+if(!$srcdir) {
+    $srcdir = $ENV{'srcdir'} || '.';
+}
+if(!$pidfile) {
+    $pidfile = "$path/". server_pidfilename($proto, $ipvnum, $idnum);
+}
+if(!$logfile) {
+    $logfile = server_logfilename($logdir, $proto, $ipvnum, $idnum);
+}
+
+$mainsockf_pidfile = "$path/".
+    mainsockf_pidfilename($proto, $ipvnum, $idnum);
+$mainsockf_logfile =
+    mainsockf_logfilename($logdir, $proto, $ipvnum, $idnum);
+
+if($proto eq 'ftp') {
+    $datasockf_pidfile = "$path/".
+        datasockf_pidfilename($proto, $ipvnum, $idnum);
+    $datasockf_logfile =
+        datasockf_logfilename($logdir, $proto, $ipvnum, $idnum);
+}
+
+$srvrname = servername_str($proto, $ipvnum, $idnum);
+
+$idstr = "$idnum" if($idnum > 1);
+
+protocolsetup($proto);
+
+$SIG{INT} = \&exit_signal_handler;
+$SIG{TERM} = \&exit_signal_handler;
+
+startsf();
+
+logmsg sprintf("%s server listens on port IPv${ipvnum}/${port}\n", uc($proto));
+
+open(PID, ">$pidfile");
+print PID $$."\n";
+close(PID);
+
+logmsg("logged pid $$ in $pidfile\n");
 
 
 while(1) {
     #
     # We read 'sockfilt' commands.
     # 
@@ -807,20 +1313,19 @@
         logmsg "sockfilt said: $input";
         next;
     }
     logmsg "====> Client connect\n";
 
     set_advisor_read_lock($SERVERLOGS_LOCK);
+    $serverlogslocked = 1;
 
     # flush data:
     $| = 1;
 
-    kill(9, $slavepid) if($slavepid);
-    waitpid($slavepid, 0) if($slavepid);
-    $slavepid=0;
-        
+    killsockfilters($proto, $ipvnum, $idnum, $verbose, 'data');
+ 
     &customize(); # read test control instructions
 
     sendcontrol @welcome;
     if($verbose) {
         for(@welcome) {
             print STDERR "OUT: $_";
@@ -845,64 +1350,91 @@
             next;
         }
 
         # SIZE of data
         sysread_or_die(\*SFREAD, \$i, 5);
 
-        my $size = hex($i);
+        my $size = 0;
+        if($i =~ /^([0-9a-fA-F]{4})\n/) {
+            $size = hex($1);
+        }
 
         # data
         sysread SFREAD, $_, $size;
         
         ftpmsg $_;
         
         # Remove trailing CRLF.
         s/[\n\r]+$//;
 
-        unless (m/^([A-Z]{3,4})\s?(.*)/i) {
-            sendcontrol "500 '$_': command not understood.\r\n";
-            last;
-        }
-        my $FTPCMD=$1;
-        my $FTPARG=$2;
+        my $FTPCMD;
+        my $FTPARG;
         my $full=$_;
+        if($proto eq "imap") {
+            # IMAP is different with its identifier first on the command line
+            unless (m/^([^ ]+) ([^ ]+) (.*)/ ||
+                    m/^([^ ]+) ([^ ]+)/) {
+                sendcontrol "$1 '$_': command not understood.\r\n";
+                last;
+            }
+            $cmdid=$1; # set the global variable
+            $FTPCMD=$2;
+            $FTPARG=$3;
+        }
+        else {
+            unless (m/^([A-Z]{3,4})\s?(.*)/i) {
+                sendcontrol "500 '$_': command not understood.\r\n";
+                last;
+            }
+            $FTPCMD=$1;
+            $FTPARG=$2;
+        }
                  
         logmsg "< \"$full\"\n";
 
         if($verbose) {
             print STDERR "IN: $full\n";
         }
 
         my $delay = $delayreply{$FTPCMD};
         if($delay) {
             # just go sleep this many seconds!
             logmsg("Sleep for $delay seconds\n");
-            sleep($delay);
+            my $twentieths = $delay * 20;
+            while($twentieths--) {
+                select(undef, undef, undef, 0.05) unless($got_exit_signal);
+            }
         }
 
         my $text;
         $text = $customreply{$FTPCMD};
         my $fake = $text;
-        if($text eq "") {
-            $text = $displaytext{$FTPCMD};
-        }
-        else {
+
+        if($text && ($text ne "")) {
             if($customcount{$FTPCMD} && (!--$customcount{$FTPCMD})) {
                 # used enough number of times, now blank the customreply
                 $customreply{$FTPCMD}="";
             }
         }
+        else {
+            $text = $displaytext{$FTPCMD};
+        }
         my $check;
-        if($text) {
-            sendcontrol "$text\r\n";
+        if($text && ($text ne "")) {
+            if($cmdid && ($cmdid ne "")) {
+                sendcontrol "$cmdid$text\r\n";
+            }
+            else {
+                sendcontrol "$text\r\n";
+            }
         }
         else {
             $check=1; # no response yet
         }
 
-        if($fake eq "") {
+        unless($fake && ($fake ne "")) {
             # only perform this if we're not faking a reply
             my $func = $commandfunc{$FTPCMD};
             if($func) {
                 &$func($FTPARG, $FTPCMD);
                 $check=0; # taken care of
             }
@@ -913,15 +1445,20 @@
             sendcontrol "500 $FTPCMD is not dealt with!\r\n";
         }
             
     } # while(1)
     logmsg "====> Client disconnected\n";
 
-    clear_advisor_read_lock($SERVERLOGS_LOCK);
+    if($serverlogslocked) {
+        $serverlogslocked = 0;
+        clear_advisor_read_lock($SERVERLOGS_LOCK);
+    }
 }
 
-print SFWRITE "QUIT\n";
-waitpid $sfpid, 0;
-
-clear_advisor_read_lock($SERVERLOGS_LOCK);
+killsockfilters($proto, $ipvnum, $idnum, $verbose);
+unlink($pidfile);
+if($serverlogslocked) {
+    $serverlogslocked = 0;
+    clear_advisor_read_lock($SERVERLOGS_LOCK);
+}
 
 exit;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/httpserver.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/httpserver.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/httpserver.pl	2009-03-28 05:57:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/httpserver.pl	2010-01-09 07:38:55.000000000 +0800
@@ -1,36 +1,114 @@
 #!/usr/bin/env perl
+#***************************************************************************
+#                                  _   _ ____  _
+#  Project                     ___| | | |  _ \| |
+#                             / __| | | | |_) | |
+#                            | (__| |_| |  _ <| |___
+#                             \___|\___/|_| \_\_____|
+#
+# Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
+#
+# This software is licensed as described in the file COPYING, which
+# you should have received as part of this distribution. The terms
+# are also available at http://curl.haxx.se/docs/copyright.html.
+#
+# You may opt to use, copy, modify, merge, publish, distribute and/or sell
+# copies of the Software, and permit persons to whom the Software is
+# furnished to do so, under the terms of the COPYING file.
+#
+# This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
+# KIND, either express or implied.
+#
+# $Id: httpserver.pl,v 1.29 2010-01-08 15:54:07 yangtse Exp $
+#***************************************************************************
+
+BEGIN {
+    @INC=(@INC, $ENV{'srcdir'}, '.');
+}
 
 use strict;
+use warnings;
 
-my $verbose=0; # set to 1 for debugging
+use serverhelp qw(
+    server_pidfilename
+    server_logfilename
+    );
 
-my $dir=".";
-my $port = 8999; # just a default
-my $ipv6;
-my $pid=".http.pid"; # name of the pidfile
+my $verbose = 0;     # set to 1 for debugging
+my $port = 8990;     # just a default
+my $ipvnum = 4;      # default IP version of http server
+my $idnum = 1;       # dafault http server instance number
+my $proto = 'http';  # protocol the http server speaks
+my $pidfile;         # http server pid file
+my $logfile;         # http server log file
+my $srcdir;
 my $fork;
-do {
-    if($ARGV[0] eq "-v") {
-        $verbose=1;
-    }
-    elsif($ARGV[0] eq "-d") {
-        $dir=$ARGV[1];
-        shift @ARGV;
-    }
-    elsif($ARGV[0] eq "-p") {
-        $pid=$ARGV[1];
-        shift @ARGV;
+
+my $flags  = "";
+my $path   = '.';
+my $logdir = $path .'/log';
+
+while(@ARGV) {
+    if($ARGV[0] eq '--pidfile') {
+        if($ARGV[1]) {
+            $pidfile = $ARGV[1];
+            shift @ARGV;
+        }
+    }
+    elsif($ARGV[0] eq '--logfile') {
+        if($ARGV[1]) {
+            $logfile = $ARGV[1];
+            shift @ARGV;
+        }
+    }
+    elsif($ARGV[0] eq '--srcdir') {
+        if($ARGV[1]) {
+            $srcdir = $ARGV[1];
+            shift @ARGV;
+        }
+    }
+    elsif($ARGV[0] eq '--ipv4') {
+        $ipvnum = 4;
+    }
+    elsif($ARGV[0] eq '--ipv6') {
+        $ipvnum = 6;
+    }
+    elsif($ARGV[0] eq '--port') {
+        if($ARGV[1] =~ /^(\d+)$/) {
+            $port = $1;
+            shift @ARGV;
+        }
+    }
+    elsif($ARGV[0] eq '--id') {
+        if($ARGV[1] =~ /^(\d+)$/) {
+            $idnum = $1 if($1 > 0);
+            shift @ARGV;
+        }
     }
-    elsif($ARGV[0] eq "--fork") {
-        $fork = $ARGV[0];
-        shift @ARGV;
+    elsif($ARGV[0] eq '--verbose') {
+        $verbose = 1;
     }
-    elsif($ARGV[0] =~ /^(\d+)$/) {
-        $port = $1;
+    elsif($ARGV[0] eq '--fork') {
+        $fork = $ARGV[0];
     }
-    elsif($ARGV[0] =~ /^ipv6/i) {
-        $ipv6="--ipv6 ";
+    else {
+        print STDERR "\nWarning: httpserver.pl unknown parameter: $ARGV[0]\n";
     }
-} while(shift @ARGV);
+    shift @ARGV;
+}
+
+if(!$srcdir) {
+    $srcdir = $ENV{'srcdir'} || '.';
+}
+if(!$pidfile) {
+    $pidfile = "$path/". server_pidfilename($proto, $ipvnum, $idnum);
+}
+if(!$logfile) {
+    $logfile = server_logfilename($logdir, $proto, $ipvnum, $idnum);
+}
+
+$flags .= "--fork " if(defined($fork));
+$flags .= "--pidfile \"$pidfile\" --logfile \"$logfile\" ";
+$flags .= "--ipv$ipvnum --port $port --srcdir \"$srcdir\"";
 
-exec("server/sws --pidfile $pid$fork $ipv6$port $dir");
+exec("server/sws $flags");
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests: httpsserver.pl
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib500.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib500.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib500.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib500.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib500.c,v 1.9 2008-09-20 04:26:56 yangtse Exp $
+ * $Id: lib500.c,v 1.10 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -26,14 +26,14 @@
   if ((curl = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_HEADER, 1L);
 
   res = curl_easy_perform(curl);
 
   if(!res) {
     FILE *moo;
     res = curl_easy_getinfo(curl, CURLINFO_PRIMARY_IP, &ipstr);
@@ -41,12 +41,14 @@
     if(moo) {
       fprintf(moo, "IP: %s\n", ipstr);
       fclose(moo);
     }
   }
 
+test_cleanup:
+
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib501.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib501.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib501.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib501.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib501.c,v 1.7 2008-09-20 04:26:56 yangtse Exp $
+ * $Id: lib501.c,v 1.8 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -27,16 +27,18 @@
   if ((curl = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L);
+  test_setopt(curl, CURLOPT_HEADER, 1L);
 
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib502.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib502.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib502.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib502.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib502.c,v 1.8 2008-09-20 04:26:56 yangtse Exp $
+ * $Id: lib502.c,v 1.9 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "testutil.h"
 #include "memdebug.h"
@@ -20,13 +20,13 @@
  * Get a single URL without select().
  */
 
 int test(char *URL)
 {
   CURL *c;
-  CURLM *m;
+  CURLM *m = NULL;
   int res = 0;
   int running=1;
   struct timeval mp_start;
   char mp_timedout = FALSE;
 
   if (curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
@@ -37,13 +37,13 @@
   if ((c = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(c, CURLOPT_URL, URL);
+  test_setopt(c, CURLOPT_URL, URL);
 
   if ((m = curl_multi_init()) == NULL) {
     fprintf(stderr, "curl_multi_init() failed\n");
     curl_easy_cleanup(c);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
@@ -78,14 +78,18 @@
     if (mp_timedout) fprintf(stderr, "mp_timedout\n");
     fprintf(stderr, "ABORTING TEST, since it seems "
             "that it would have run forever.\n");
     res = TEST_ERR_RUNS_FOREVER;
   }
 
-  curl_multi_remove_handle(m, c);
+test_cleanup:
+
+  if(m) {
+    curl_multi_remove_handle(m, c);
+    curl_multi_cleanup(m);
+  }
   curl_easy_cleanup(c);
-  curl_multi_cleanup(m);
   curl_global_cleanup();
 
   return res;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib503.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib503.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib503.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib503.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib503.c,v 1.19 2008-09-20 04:26:56 yangtse Exp $
+ * $Id: lib503.c,v 1.20 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include <sys/types.h>
 
@@ -26,13 +26,13 @@
  * auth info.
  */
 
 int test(char *URL)
 {
   CURL *c;
-  CURLM *m;
+  CURLM *m = NULL;
   int res = 0;
   int running;
   char done = FALSE;
   struct timeval ml_start;
   struct timeval mp_start;
   char ml_timedout = FALSE;
@@ -46,18 +46,18 @@
   if ((c = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(c, CURLOPT_PROXY, libtest_arg2); /* set in first.c */
-  curl_easy_setopt(c, CURLOPT_URL, URL);
-  curl_easy_setopt(c, CURLOPT_USERPWD, "test:ing");
-  curl_easy_setopt(c, CURLOPT_PROXYUSERPWD, "test:ing");
-  curl_easy_setopt(c, CURLOPT_HTTPPROXYTUNNEL, 1L);
-  curl_easy_setopt(c, CURLOPT_HEADER, 1L);
+  test_setopt(c, CURLOPT_PROXY, libtest_arg2); /* set in first.c */
+  test_setopt(c, CURLOPT_URL, URL);
+  test_setopt(c, CURLOPT_USERPWD, "test:ing");
+  test_setopt(c, CURLOPT_PROXYUSERPWD, "test:ing");
+  test_setopt(c, CURLOPT_HTTPPROXYTUNNEL, 1L);
+  test_setopt(c, CURLOPT_HEADER, 1L);
 
   if ((m = curl_multi_init()) == NULL) {
     fprintf(stderr, "curl_multi_init() failed\n");
     curl_easy_cleanup(c);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
@@ -136,14 +136,18 @@
     if (mp_timedout) fprintf(stderr, "mp_timedout\n");
     fprintf(stderr, "ABORTING TEST, since it seems "
             "that it would have run forever.\n");
     res = TEST_ERR_RUNS_FOREVER;
   }
 
-  curl_multi_remove_handle(m, c);
+test_cleanup:
+
+  if(m) {
+    curl_multi_remove_handle(m, c);
+    curl_multi_cleanup(m);
+  }
   curl_easy_cleanup(c);
-  curl_multi_cleanup(m);
   curl_global_cleanup();
 
   return res;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib504.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib504.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib504.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib504.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib504.c,v 1.28 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib504.c,v 1.29 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include <sys/types.h>
 
@@ -25,16 +25,16 @@
  * Use multi interface to get document over proxy with bad port number.
  * This caused the interface to "hang" in libcurl 7.10.2.
  */
 int test(char *URL)
 {
   CURL *c;
-  int ret=0;
-  CURLM *m;
+  int res = 0;
+  CURLM *m = NULL;
   fd_set rd, wr, exc;
-  CURLMcode res;
+  CURLMcode ret;
   char done = FALSE;
   int running;
   int max_fd;
   int rc;
   struct timeval ml_start;
   struct timeval mp_start;
@@ -51,26 +51,26 @@
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* the point here being that there must not run anything on the given
      proxy port */
-  curl_easy_setopt(c, CURLOPT_PROXY, libtest_arg2);
-  curl_easy_setopt(c, CURLOPT_URL, URL);
-  curl_easy_setopt(c, CURLOPT_VERBOSE, 1L);
+  test_setopt(c, CURLOPT_PROXY, libtest_arg2);
+  test_setopt(c, CURLOPT_URL, URL);
+  test_setopt(c, CURLOPT_VERBOSE, 1L);
 
   if ((m = curl_multi_init()) == NULL) {
     fprintf(stderr, "curl_multi_init() failed\n");
     curl_easy_cleanup(c);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if ((res = curl_multi_add_handle(m, c)) != CURLM_OK) {
+  if ((ret = curl_multi_add_handle(m, c)) != CURLM_OK) {
     fprintf(stderr, "curl_multi_add_handle() failed, "
-            "with code %d\n", res);
+            "with code %d\n", ret);
     curl_multi_cleanup(m);
     curl_easy_cleanup(c);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
@@ -90,16 +90,16 @@
     }
     mp_timedout = FALSE;
     mp_start = tutil_tvnow();
 
     fprintf(stderr, "curl_multi_perform()\n");
 
-    res = CURLM_CALL_MULTI_PERFORM;
+    ret = CURLM_CALL_MULTI_PERFORM;
 
-    while (res == CURLM_CALL_MULTI_PERFORM) {
-      res = curl_multi_perform(m, &running);
+    while (ret == CURLM_CALL_MULTI_PERFORM) {
+      ret = curl_multi_perform(m, &running);
       if (tutil_tvdiff(tutil_tvnow(), mp_start) >
           MULTI_PERFORM_HANG_TIMEOUT) {
         mp_timedout = TRUE;
         break;
       }
     }
@@ -109,49 +109,53 @@
     if(!running) {
       /* This is where this code is expected to reach */
       int numleft;
       CURLMsg *msg = curl_multi_info_read(m, &numleft);
       fprintf(stderr, "Expected: not running\n");
       if(msg && !numleft)
-        ret = 100; /* this is where we should be */
+        res = 100; /* this is where we should be */
       else
-        ret = 99; /* not correct */
+        res = 99; /* not correct */
       break;
     }
-    fprintf(stderr, "running == %d, res == %d\n", running, res);
+    fprintf(stderr, "running == %d, ret == %d\n", running, ret);
 
-    if (res != CURLM_OK) {
-      ret = 2;
+    if (ret != CURLM_OK) {
+      res = 2;
       break;
     }
 
     FD_ZERO(&rd);
     FD_ZERO(&wr);
     FD_ZERO(&exc);
     max_fd = 0;
 
     fprintf(stderr, "curl_multi_fdset()\n");
     if (curl_multi_fdset(m, &rd, &wr, &exc, &max_fd) != CURLM_OK) {
       fprintf(stderr, "unexpected failured of fdset.\n");
-      ret = 3;
+      res = 3;
       break;
     }
     rc = select_test(max_fd+1, &rd, &wr, &exc, &interval);
     fprintf(stderr, "select returned %d\n", rc);
   }
 
   if (ml_timedout || mp_timedout) {
     if (ml_timedout) fprintf(stderr, "ml_timedout\n");
     if (mp_timedout) fprintf(stderr, "mp_timedout\n");
     fprintf(stderr, "ABORTING TEST, since it seems "
             "that it would have run forever.\n");
-    ret = TEST_ERR_RUNS_FOREVER;
+    res = TEST_ERR_RUNS_FOREVER;
   }
 
-  curl_multi_remove_handle(m, c);
+test_cleanup:
+
+  if(m) {
+    curl_multi_remove_handle(m, c);
+    curl_multi_cleanup(m);
+  }
   curl_easy_cleanup(c);
-  curl_multi_cleanup(m);
   curl_global_cleanup();
 
-  return ret;
+  return res;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib505.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib505.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib505.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib505.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,16 +2,15 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib505.c,v 1.15 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib505.c,v 1.17 2010-02-05 18:07:19 yangtse Exp $
  */
 
-#include "setup.h" /* struct_stat etc. */
 #include "test.h"
 
 #ifdef HAVE_SYS_SOCKET_H
 #include <sys/socket.h>
 #endif
 #ifdef HAVE_SYS_TYPES_H
@@ -115,33 +114,35 @@
     fclose(hd_src);
     return TEST_ERR_MAJOR_BAD;
   }
   headerlist = hl;
 
   /* enable uploading */
-  curl_easy_setopt(curl, CURLOPT_UPLOAD, 1L);
+  test_setopt(curl, CURLOPT_UPLOAD, 1L);
 
   /* enable verbose */
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   /* specify target */
-  curl_easy_setopt(curl,CURLOPT_URL, URL);
+  test_setopt(curl,CURLOPT_URL, URL);
 
   /* pass in that last of FTP commands to run after the transfer */
-  curl_easy_setopt(curl, CURLOPT_POSTQUOTE, headerlist);
+  test_setopt(curl, CURLOPT_POSTQUOTE, headerlist);
 
   /* now specify which file to upload */
-  curl_easy_setopt(curl, CURLOPT_INFILE, hd_src);
+  test_setopt(curl, CURLOPT_INFILE, hd_src);
 
   /* and give the size of the upload (optional) */
-  curl_easy_setopt(curl, CURLOPT_INFILESIZE_LARGE,
+  test_setopt(curl, CURLOPT_INFILESIZE_LARGE,
                    (curl_off_t)file_info.st_size);
 
   /* Now run off and do what you've been told! */
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   /* clean up the FTP commands list */
   curl_slist_free_all(headerlist);
 
   /* close the local file */
   fclose(hd_src);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib506.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib506.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib506.c	2009-05-08 14:51:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib506.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib506.c,v 1.23 2009-05-08 02:14:50 yangtse Exp $
+ * $Id: lib506.c,v 1.24 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 #include <stdlib.h>
 #include <ctype.h>
 #include <errno.h>
@@ -221,18 +221,18 @@
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   url = suburl( URL, i );
   headers = sethost( NULL );
-  curl_easy_setopt( curl, CURLOPT_HTTPHEADER, headers );
-  curl_easy_setopt( curl, CURLOPT_URL,        url );
+  test_setopt( curl, CURLOPT_HTTPHEADER, headers );
+  test_setopt( curl, CURLOPT_URL,        url );
   printf( "CURLOPT_SHARE\n" );
-  curl_easy_setopt( curl, CURLOPT_SHARE,      share );
+  test_setopt( curl, CURLOPT_SHARE,      share );
   printf( "CURLOPT_COOKIEJAR\n" );
-  curl_easy_setopt( curl, CURLOPT_COOKIEJAR,  JAR );
+  test_setopt( curl, CURLOPT_COOKIEJAR,  JAR );
 
   printf( "PERFORM\n" );
   curl_easy_perform( curl );
 
   /* try to free share, expect to fail because share is in use*/
   printf( "try SHARE_CLEANUP...\n" );
@@ -242,12 +242,14 @@
     fprintf(stderr, "curl_share_cleanup succeed but error expected\n");
     share = NULL;
   } else {
     printf( "SHARE_CLEANUP failed, correct\n" );
   }
 
+test_cleanup:
+
   /* clean up last handle */
   printf( "CLEANUP\n" );
   curl_easy_cleanup( curl );
   curl_slist_free_all( headers );
 
   curl_free(url);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib507.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib507.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib507.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib507.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib507.c,v 1.17 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib507.c,v 1.18 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "testutil.h"
 #include "memdebug.h"
@@ -19,14 +19,15 @@
 int test(char *URL)
 {
   CURL* curls;
   CURLM* multi;
   int still_running;
   int i = -1;
+  int res = 0;
   CURLMsg *msg;
-  CURLMcode res;
+  CURLMcode ret;
   struct timeval ml_start;
   struct timeval mp_start;
   char ml_timedout = FALSE;
   char mp_timedout = FALSE;
 
   if (curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
@@ -44,34 +45,34 @@
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_multi_cleanup(multi);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curls, CURLOPT_URL, URL);
+  test_setopt(curls, CURLOPT_URL, URL);
 
-  if ((res = curl_multi_add_handle(multi, curls)) != CURLM_OK) {
+  if ((ret = curl_multi_add_handle(multi, curls)) != CURLM_OK) {
     fprintf(stderr, "curl_multi_add_handle() failed, "
-            "with code %d\n", res);
+            "with code %d\n", ret);
     curl_easy_cleanup(curls);
     curl_multi_cleanup(multi);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   mp_timedout = FALSE;
   mp_start = tutil_tvnow();
 
   do {
-    res = curl_multi_perform(multi, &still_running);
+    ret = curl_multi_perform(multi, &still_running);
     if (tutil_tvdiff(tutil_tvnow(), mp_start) > 
         MULTI_PERFORM_HANG_TIMEOUT) {
       mp_timedout = TRUE;
       break;
     }
-  } while (res == CURLM_CALL_MULTI_PERFORM);
+  } while (ret == CURLM_CALL_MULTI_PERFORM);
 
   ml_timedout = FALSE;
   ml_start = tutil_tvnow();
 
   while ((!ml_timedout) && (!mp_timedout) && (still_running)) {
     struct timeval timeout;
@@ -100,19 +101,19 @@
         break;
       case 0:
       default:
         mp_timedout = FALSE;
         mp_start = tutil_tvnow();
         do {
-          res = curl_multi_perform(multi, &still_running);
+          ret = curl_multi_perform(multi, &still_running);
           if (tutil_tvdiff(tutil_tvnow(), mp_start) > 
               MULTI_PERFORM_HANG_TIMEOUT) {
             mp_timedout = TRUE;
             break;
           }
-        } while (res == CURLM_CALL_MULTI_PERFORM);
+        } while (ret == CURLM_CALL_MULTI_PERFORM);
         break;
     }
   }
   if (ml_timedout || mp_timedout) {
     if (ml_timedout) fprintf(stderr, "ml_timedout\n");
     if (mp_timedout) fprintf(stderr, "mp_timedout\n");
@@ -125,12 +126,17 @@
     if(msg)
       /* this should now contain a result code from the easy handle,
          get it */
       i = msg->data.result;
   }
 
+test_cleanup:
+
   curl_multi_cleanup(multi);
   curl_easy_cleanup(curls);
   curl_global_cleanup();
 
+  if(res)
+    i = res;
+
   return i; /* return the final return code */
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib508.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib508.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib508.c	2009-05-08 14:51:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib508.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib508.c,v 1.9 2009-05-08 02:14:50 yangtse Exp $
+ * $Id: lib508.c,v 1.10 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -55,40 +55,42 @@
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_URL, URL);
 
   /* Now specify we want to POST data */
-  curl_easy_setopt(curl, CURLOPT_POST, 1L);
+  test_setopt(curl, CURLOPT_POST, 1L);
 
 #ifdef CURL_DOES_CONVERSIONS
   /* Convert the POST data to ASCII */
-  curl_easy_setopt(curl, CURLOPT_TRANSFERTEXT, 1L);
+  test_setopt(curl, CURLOPT_TRANSFERTEXT, 1L);
 #endif
 
   /* Set the expected POST size */
-  curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, (long)pooh.sizeleft);
+  test_setopt(curl, CURLOPT_POSTFIELDSIZE, (long)pooh.sizeleft);
 
   /* we want to use our own read function */
-  curl_easy_setopt(curl, CURLOPT_READFUNCTION, read_callback);
+  test_setopt(curl, CURLOPT_READFUNCTION, read_callback);
 
   /* pointer to pass to our read function */
-  curl_easy_setopt(curl, CURLOPT_INFILE, &pooh);
+  test_setopt(curl, CURLOPT_INFILE, &pooh);
 
   /* get verbose debug output please */
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   /* include headers in the output */
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L);
+  test_setopt(curl, CURLOPT_HEADER, 1L);
 
   /* Perform the request, res will get the return code */
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   /* always cleanup */
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib510.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib510.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib510.c	2009-10-31 06:24:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib510.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib510.c,v 1.9 2009-10-30 22:24:48 bagder Exp $
+ * $Id: lib510.c,v 1.10 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -69,45 +69,47 @@
     curl_easy_cleanup(curl);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_URL, URL);
 
   /* Now specify we want to POST data */
-  curl_easy_setopt(curl, CURLOPT_POST, 1L);
+  test_setopt(curl, CURLOPT_POST, 1L);
 
 #ifdef CURL_DOES_CONVERSIONS
   /* Convert the POST data to ASCII */
-  curl_easy_setopt(curl, CURLOPT_TRANSFERTEXT, 1L);
+  test_setopt(curl, CURLOPT_TRANSFERTEXT, 1L);
 #endif
 
   /* we want to use our own read function */
-  curl_easy_setopt(curl, CURLOPT_READFUNCTION, read_callback);
+  test_setopt(curl, CURLOPT_READFUNCTION, read_callback);
 
   /* pointer to pass to our read function */
-  curl_easy_setopt(curl, CURLOPT_INFILE, &pooh);
+  test_setopt(curl, CURLOPT_INFILE, &pooh);
 
   /* get verbose debug output please */
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   /* include headers in the output */
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L);
+  test_setopt(curl, CURLOPT_HEADER, 1L);
 
   /* enforce chunked transfer by setting the header */
-  curl_easy_setopt(curl, CURLOPT_HTTPHEADER, slist);
+  test_setopt(curl, CURLOPT_HTTPHEADER, slist);
 
 #ifdef LIB565
-  curl_easy_setopt(curl, CURLOPT_HTTPAUTH, CURLAUTH_DIGEST);
-  curl_easy_setopt(curl, CURLOPT_USERPWD, "foo:bar");
+  test_setopt(curl, CURLOPT_HTTPAUTH, CURLAUTH_DIGEST);
+  test_setopt(curl, CURLOPT_USERPWD, "foo:bar");
 #endif
 
   /* Perform the request, res will get the return code */
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   /* clean up the headers list */
   if(slist)
     curl_slist_free_all(slist);
 
   /* always cleanup */
   curl_easy_cleanup(curl);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib511.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib511.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib511.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib511.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib511.c,v 1.7 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib511.c,v 1.8 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -25,18 +25,20 @@
   if ((curl = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_FILETIME, 1L);
-  curl_easy_setopt(curl, CURLOPT_NOBODY, 1L);
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_FILETIME, 1L);
+  test_setopt(curl, CURLOPT_NOBODY, 1L);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib513.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib513.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib513.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib513.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib513.c,v 1.5 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib513.c,v 1.6 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -35,35 +35,37 @@
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_URL, URL);
 
   /* Now specify we want to POST data */
-  curl_easy_setopt(curl, CURLOPT_POST, 1L);
+  test_setopt(curl, CURLOPT_POST, 1L);
 
   /* Set the expected POST size */
-  curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, 1L);
+  test_setopt(curl, CURLOPT_POSTFIELDSIZE, 1L);
 
   /* we want to use our own read function */
-  curl_easy_setopt(curl, CURLOPT_READFUNCTION, read_callback);
+  test_setopt(curl, CURLOPT_READFUNCTION, read_callback);
 
   /* pointer to pass to our read function */
-  curl_easy_setopt(curl, CURLOPT_INFILE, NULL);
+  test_setopt(curl, CURLOPT_INFILE, NULL);
 
   /* get verbose debug output please */
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   /* include headers in the output */
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L);
+  test_setopt(curl, CURLOPT_HEADER, 1L);
 
   /* Perform the request, res will get the return code */
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   /* always cleanup */
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib514.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib514.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib514.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib514.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib514.c,v 1.5 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib514.c,v 1.6 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -26,40 +26,42 @@
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_URL, URL);
 
   /* Based on a bug report by Niels van Tongeren on June 29, 2004:
 
   A weird situation occurs when request 1 is a POST request and the request
   2 is a HEAD request. For the POST request we set the CURLOPT_POSTFIELDS,
   CURLOPT_POSTFIELDSIZE and CURLOPT_POST options. For the HEAD request we
   set the CURLOPT_NOBODY option to '1'.
 
   */
 
-  curl_easy_setopt(curl, CURLOPT_POSTFIELDS, "moo");
-  curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, 3L);
-  curl_easy_setopt(curl, CURLOPT_POST, 1L);
+  test_setopt(curl, CURLOPT_POSTFIELDS, "moo");
+  test_setopt(curl, CURLOPT_POSTFIELDSIZE, 3L);
+  test_setopt(curl, CURLOPT_POST, 1L);
 
   /* this is where transfer 1 would take place, but skip that and change
      options right away instead */
 
-  curl_easy_setopt(curl, CURLOPT_NOBODY, 1L);
+  test_setopt(curl, CURLOPT_NOBODY, 1L);
 
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L); /* show verbose for debug */
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L); /* include header */
+  test_setopt(curl, CURLOPT_VERBOSE, 1L); /* show verbose for debug */
+  test_setopt(curl, CURLOPT_HEADER, 1L); /* include header */
 
   /* Now, we should be making a fine HEAD request */
 
   /* Perform the request 2, res will get the return code */
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   /* always cleanup */
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib515.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib515.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib515.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib515.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib515.c,v 1.5 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib515.c,v 1.6 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -26,21 +26,23 @@
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_POSTFIELDS, NULL);
-  curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, 0L);
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L); /* show verbose for debug */
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L); /* include header */
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_POSTFIELDS, NULL);
+  test_setopt(curl, CURLOPT_POSTFIELDSIZE, 0L);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L); /* show verbose for debug */
+  test_setopt(curl, CURLOPT_HEADER, 1L); /* include header */
 
   /* Now, we should be making a zero byte POST request */
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   /* always cleanup */
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib516.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib516.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib516.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib516.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib516.c,v 1.5 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib516.c,v 1.6 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -26,20 +26,22 @@
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_HTTPPOST, NULL);
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L); /* show verbose for debug */
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L); /* include header */
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_HTTPPOST, NULL);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L); /* show verbose for debug */
+  test_setopt(curl, CURLOPT_HEADER, 1L); /* include header */
 
   /* Now, we should be making a zero byte POST request */
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   /* always cleanup */
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib518.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib518.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib518.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib518.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib518.c,v 1.36 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib518.c,v 1.37 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
@@ -481,17 +481,19 @@
     fprintf(stderr, "curl_easy_init() failed\n");
     close_file_descriptors();
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_HEADER, 1L);
 
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   close_file_descriptors();
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib519.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib519.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib519.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib519.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib519.c,v 1.5 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib519.c,v 1.6 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -25,25 +25,27 @@
   if ((curl = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_USERPWD, "monster:underbed");
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L);
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_USERPWD, "monster:underbed");
+  test_setopt(curl, CURLOPT_HEADER, 1L);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   /* get first page */
   res = curl_easy_perform(curl);
 
-  curl_easy_setopt(curl, CURLOPT_USERPWD, "anothermonster:inwardrobe");
+  test_setopt(curl, CURLOPT_USERPWD, "anothermonster:inwardrobe");
 
   /* get second page */
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib520.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib520.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib520.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib520.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib520.c,v 1.5 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib520.c,v 1.6 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -25,17 +25,19 @@
   if ((curl = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_FILETIME, 1L);
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_FILETIME, 1L);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib521.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib521.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib521.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib521.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib521.c,v 1.6 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib521.c,v 1.7 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -25,19 +25,21 @@
   if ((curl = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_PORT, atoi(libtest_arg2));
-  curl_easy_setopt(curl, CURLOPT_USERPWD, "xxx:yyy");
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_PORT, atoi(libtest_arg2));
+  test_setopt(curl, CURLOPT_USERPWD, "xxx:yyy");
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib523.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib523.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib523.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib523.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib523.c,v 1.6 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib523.c,v 1.7 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -25,20 +25,22 @@
   if ((curl = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_PROXY, libtest_arg2);
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_PORT, 19999L);
-  curl_easy_setopt(curl, CURLOPT_USERPWD, "xxx:yyy");
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_PROXY, libtest_arg2);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_PORT, 19999L);
+  test_setopt(curl, CURLOPT_USERPWD, "xxx:yyy");
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib524.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib524.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib524.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib524.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib524.c,v 1.5 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib524.c,v 1.6 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -25,18 +25,20 @@
   if ((curl = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_UPLOAD, 1L);
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_UPLOAD, 1L);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib525.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib525.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib525.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib525.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib525.c,v 1.19 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib525.c,v 1.20 2010-02-05 18:07:19 yangtse Exp $
  */
 
 #include "test.h"
 
 #include <sys/types.h>
 #include <sys/stat.h>
@@ -27,13 +27,13 @@
   FILE *hd_src ;
   int hd ;
   int error;
   struct_stat file_info;
   int running;
   char done=FALSE;
-  CURLM *m;
+  CURLM *m = NULL;
   struct timeval ml_start;
   struct timeval mp_start;
   char ml_timedout = FALSE;
   char mp_timedout = FALSE;
 
   if (!libtest_arg2) {
@@ -69,36 +69,36 @@
     fclose(hd_src);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* enable uploading */
-  curl_easy_setopt(curl, CURLOPT_UPLOAD, 1L);
+  test_setopt(curl, CURLOPT_UPLOAD, 1L);
 
   /* specify target */
-  curl_easy_setopt(curl,CURLOPT_URL, URL);
+  test_setopt(curl,CURLOPT_URL, URL);
 
   /* go verbose */
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   /* use active FTP */
-  curl_easy_setopt(curl, CURLOPT_FTPPORT, "-");
+  test_setopt(curl, CURLOPT_FTPPORT, "-");
 
   /* now specify which file to upload */
-  curl_easy_setopt(curl, CURLOPT_READDATA, hd_src);
+  test_setopt(curl, CURLOPT_READDATA, hd_src);
 
   /* NOTE: if you want this code to work on Windows with libcurl as a DLL, you
      MUST also provide a read callback with CURLOPT_READFUNCTION. Failing to
      do so will give you a crash since a DLL may not use the variable's memory
      when passed in to it from an app like this. */
 
   /* Set the size of the file to upload (optional).  If you give a *_LARGE
      option you MUST make sure that the type of the passed-in argument is a
      curl_off_t. If you use CURLOPT_INFILESIZE (without _LARGE) you must
      make sure that to pass in a type 'long' argument. */
-  curl_easy_setopt(curl, CURLOPT_INFILESIZE_LARGE,
+  test_setopt(curl, CURLOPT_INFILESIZE_LARGE,
                    (curl_off_t)file_info.st_size);
 
   if ((m = curl_multi_init()) == NULL) {
     fprintf(stderr, "curl_multi_init() failed\n");
     curl_easy_cleanup(curl);
     curl_global_cleanup();
@@ -180,22 +180,28 @@
     if (mp_timedout) fprintf(stderr, "mp_timedout\n");
     fprintf(stderr, "ABORTING TEST, since it seems "
             "that it would have run forever.\n");
     res = TEST_ERR_RUNS_FOREVER;
   }
 
+test_cleanup:
+
 #ifdef LIB529
   /* test 529 */
-  curl_multi_remove_handle(m, curl);
-  curl_multi_cleanup(m);
+  if(m) {
+    curl_multi_remove_handle(m, curl);
+    curl_multi_cleanup(m);
+  }
   curl_easy_cleanup(curl);
 #else
   /* test 525 */
-  curl_multi_remove_handle(m, curl);
+  if(m)
+    curl_multi_remove_handle(m, curl);
   curl_easy_cleanup(curl);
-  curl_multi_cleanup(m);
+  if(m)
+    curl_multi_cleanup(m);
 #endif
 
   fclose(hd_src); /* close the local file */
 
   curl_global_cleanup();
   return res;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib526.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib526.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib526.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib526.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib526.c,v 1.15 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib526.c,v 1.18 2010-02-05 19:24:22 yangtse Exp $
  */
 
 /*
  * This code sets up multiple easy handles that transfer a single file from
  * the same URL, in a serial manner after each other. Due to the connection
  * sharing within the multi handle all transfers are performed on the same
@@ -44,13 +44,13 @@
 int test(char *URL)
 {
   int res = 0;
   CURL *curl[NUM_HANDLES];
   int running;
   char done=FALSE;
-  CURLM *m;
+  CURLM *m = NULL;
   int current=0;
   int i, j;
   struct timeval ml_start;
   struct timeval mp_start;
   char ml_timedout = FALSE;
   char mp_timedout = FALSE;
@@ -69,16 +69,34 @@
       for (j=i-1; j >= 0; j--) {
         curl_easy_cleanup(curl[j]);
       }
       curl_global_cleanup();
       return TEST_ERR_MAJOR_BAD + i;
     }
-    curl_easy_setopt(curl[i], CURLOPT_URL, URL);
+    res = curl_easy_setopt(curl[i], CURLOPT_URL, URL);
+    if(res) {
+      fprintf(stderr, "curl_easy_setopt() failed "
+              "on handle #%d\n", i);
+      for (j=i; j >= 0; j--) {
+        curl_easy_cleanup(curl[j]);
+      }
+      curl_global_cleanup();
+      return TEST_ERR_MAJOR_BAD + i;
+    }
 
     /* go verbose */
-    curl_easy_setopt(curl[i], CURLOPT_VERBOSE, 1L);
+    res = curl_easy_setopt(curl[i], CURLOPT_VERBOSE, 1L);
+    if(res) {
+      fprintf(stderr, "curl_easy_setopt() failed "
+              "on handle #%d\n", i);
+      for (j=i; j >= 0; j--) {
+        curl_easy_cleanup(curl[j]);
+      }
+      curl_global_cleanup();
+      return TEST_ERR_MAJOR_BAD + i;
+    }
   }
 
   if ((m = curl_multi_init()) == NULL) {
     fprintf(stderr, "curl_multi_init() failed\n");
     for(i=0; i < NUM_HANDLES; i++) {
       curl_easy_cleanup(curl[i]);
@@ -139,14 +157,14 @@
           /* first remove the only handle we use */
           curl_multi_remove_handle(m, curl[0]);
 
           /* make us re-use the same handle all the time, and try resetting
              the handle first too */
           curl_easy_reset(curl[0]);
-          curl_easy_setopt(curl[0], CURLOPT_URL, URL);
-          curl_easy_setopt(curl[0], CURLOPT_VERBOSE, 1L);
+          test_setopt(curl[0], CURLOPT_URL, URL);
+          test_setopt(curl[0], CURLOPT_VERBOSE, 1L);
 
           /* re-add it */
           res = (int)curl_multi_add_handle(m, curl[0]);
 #else
           res = (int)curl_multi_add_handle(m, curl[current]);
 #endif
@@ -194,20 +212,26 @@
     if (mp_timedout) fprintf(stderr, "mp_timedout\n");
     fprintf(stderr, "ABORTING TEST, since it seems "
             "that it would have run forever.\n");
     res = TEST_ERR_RUNS_FOREVER;
   }
 
+#ifdef LIB532
+test_cleanup:
+#endif
+
 #ifndef LIB527
   /* get NUM_HANDLES easy handles */
   for(i=0; i < NUM_HANDLES; i++) {
 #ifdef LIB526
-    curl_multi_remove_handle(m, curl[i]);
+    if(m)
+      curl_multi_remove_handle(m, curl[i]);
 #endif
     curl_easy_cleanup(curl[i]);
   }
 #endif
-  curl_multi_cleanup(m);
+  if(m)
+    curl_multi_cleanup(m);
 
   curl_global_cleanup();
   return res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib530.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib530.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib530.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib530.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib530.c,v 1.18 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib530.c,v 1.20 2010-02-05 19:19:34 yangtse Exp $
  */
 
 #include "test.h"
 
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
@@ -66,19 +66,53 @@
       curl_multi_cleanup(m);
       curl_global_cleanup();
       return TEST_ERR_MAJOR_BAD + i;
     }
     sprintf(target_url, "%s%04i", URL, i + 1);
     target_url[sizeof(target_url) - 1] = '\0';
-    curl_easy_setopt(curl[i], CURLOPT_URL, target_url);
+
+    res = curl_easy_setopt(curl[i], CURLOPT_URL, target_url);
+    if(res) {
+      fprintf(stderr, "curl_easy_setopt() failed "
+              "on handle #%d\n", i);
+      for (j=i; j >= 0; j--) {
+        curl_multi_remove_handle(m, curl[j]);
+        curl_easy_cleanup(curl[j]);
+      }
+      curl_multi_cleanup(m);
+      curl_global_cleanup();
+      return TEST_ERR_MAJOR_BAD + i;
+    }
 
     /* go verbose */
-    curl_easy_setopt(curl[i], CURLOPT_VERBOSE, 1L);
+    res = curl_easy_setopt(curl[i], CURLOPT_VERBOSE, 1L);
+    if(res) {
+      fprintf(stderr, "curl_easy_setopt() failed "
+              "on handle #%d\n", i);
+      for (j=i; j >= 0; j--) {
+        curl_multi_remove_handle(m, curl[j]);
+        curl_easy_cleanup(curl[j]);
+      }
+      curl_multi_cleanup(m);
+      curl_global_cleanup();
+      return TEST_ERR_MAJOR_BAD + i;
+    }
 
     /* include headers */
-    curl_easy_setopt(curl[i], CURLOPT_HEADER, 1L);
+    res = curl_easy_setopt(curl[i], CURLOPT_HEADER, 1L);
+    if(res) {
+      fprintf(stderr, "curl_easy_setopt() failed "
+              "on handle #%d\n", i);
+      for (j=i; j >= 0; j--) {
+        curl_multi_remove_handle(m, curl[j]);
+        curl_easy_cleanup(curl[j]);
+      }
+      curl_multi_cleanup(m);
+      curl_global_cleanup();
+      return TEST_ERR_MAJOR_BAD + i;
+    }
 
     /* add handle to multi */
     if ((res = (int)curl_multi_add_handle(m, curl[i])) != CURLM_OK) {
       fprintf(stderr, "curl_multi_add_handle() failed, "
               "on handle #%d with code %d\n", i, res);
       curl_easy_cleanup(curl[i]);
@@ -160,12 +194,14 @@
     if (mp_timedout) fprintf(stderr, "mp_timedout\n");
     fprintf(stderr, "ABORTING TEST, since it seems "
             "that it would have run forever.\n");
     res = TEST_ERR_RUNS_FOREVER;
   }
 
+/* test_cleanup: */
+
   /* cleanup NUM_HANDLES easy handles */
   for(i=0; i < NUM_HANDLES; i++) {
     curl_multi_remove_handle(m, curl[i]);
     curl_easy_cleanup(curl[i]);
   }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib533.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib533.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib533.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib533.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib533.c,v 1.16 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib533.c,v 1.17 2010-02-05 18:07:20 yangtse Exp $
  */
 
 /* used for test case 533, 534 and 535 */
 
 #include "test.h"
 
@@ -25,13 +25,13 @@
 int test(char *URL)
 {
   int res = 0;
   CURL *curl;
   int running;
   char done=FALSE;
-  CURLM *m;
+  CURLM *m = NULL;
   int current=0;
   struct timeval ml_start;
   struct timeval mp_start;
   char ml_timedout = FALSE;
   char mp_timedout = FALSE;
 
@@ -43,15 +43,15 @@
   if ((curl = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1);
-  curl_easy_setopt(curl, CURLOPT_FAILONERROR, 1);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_VERBOSE, 1);
+  test_setopt(curl, CURLOPT_FAILONERROR, 1);
 
   if ((m = curl_multi_init()) == NULL) {
     fprintf(stderr, "curl_multi_init() failed\n");
     curl_easy_cleanup(curl);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
@@ -100,15 +100,15 @@
           /* remove the handle we use */
           curl_multi_remove_handle(m, curl);
 
           /* make us re-use the same handle all the time, and try resetting
              the handle first too */
           curl_easy_reset(curl);
-          curl_easy_setopt(curl, CURLOPT_URL, libtest_arg2);
-          curl_easy_setopt(curl, CURLOPT_VERBOSE, 1);
-          curl_easy_setopt(curl, CURLOPT_FAILONERROR, 1);
+          test_setopt(curl, CURLOPT_URL, libtest_arg2);
+          test_setopt(curl, CURLOPT_VERBOSE, 1);
+          test_setopt(curl, CURLOPT_FAILONERROR, 1);
 
           /* re-add it */
           res = (int)curl_multi_add_handle(m, curl);
           if(res) {
             fprintf(stderr, "add handle failed: %d.\n", res);
             res = 243;
@@ -153,12 +153,15 @@
     if (mp_timedout) fprintf(stderr, "mp_timedout\n");
     fprintf(stderr, "ABORTING TEST, since it seems "
             "that it would have run forever.\n");
     res = TEST_ERR_RUNS_FOREVER;
   }
 
+test_cleanup:
+
   curl_easy_cleanup(curl);
-  curl_multi_cleanup(m);
+  if(m)
+    curl_multi_cleanup(m);
   curl_global_cleanup();
 
   return res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib536.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib536.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib536.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib536.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib536.c,v 1.14 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib536.c,v 1.15 2010-02-05 18:07:20 yangtse Exp $
  */
 
 #include "test.h"
 
 #include <sys/types.h>
 #include <sys/stat.h>
@@ -90,39 +90,42 @@
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   curl_multi_setopt(multi, CURLMOPT_PIPELINING, 1L);
 
-  curl_easy_setopt(easy, CURLOPT_WRITEFUNCTION, fwrite);
-  curl_easy_setopt(easy, CURLOPT_FAILONERROR, 1L);
-  curl_easy_setopt(easy, CURLOPT_URL, URL);
+  test_setopt(easy, CURLOPT_WRITEFUNCTION, fwrite);
+  test_setopt(easy, CURLOPT_FAILONERROR, 1L);
+  test_setopt(easy, CURLOPT_URL, URL);
 
   if (curl_multi_add_handle(multi, easy) != CURLM_OK) {
     printf("curl_multi_add_handle() failed\n");
     res = TEST_ERR_MAJOR_BAD;
   } else {
     if (perform(multi) != CURLM_OK)
       printf("retrieve 1 failed\n");
 
     curl_multi_remove_handle(multi, easy);
   }
   curl_easy_reset(easy);
 
-  curl_easy_setopt(easy, CURLOPT_FAILONERROR, 1L);
-  curl_easy_setopt(easy, CURLOPT_URL, libtest_arg2);
+  test_setopt(easy, CURLOPT_FAILONERROR, 1L);
+  test_setopt(easy, CURLOPT_URL, libtest_arg2);
 
   if (curl_multi_add_handle(multi, easy) != CURLM_OK) {
     printf("curl_multi_add_handle() 2 failed\n");
     res = TEST_ERR_MAJOR_BAD;
   } else {
     if (perform(multi) != CURLM_OK)
       printf("retrieve 2 failed\n");
 
     curl_multi_remove_handle(multi, easy);
   }
+
+test_cleanup:
+
   curl_easy_cleanup(easy);
   curl_multi_cleanup(multi);
   curl_global_cleanup();
 
   printf("Finished!\n");
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib537.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib537.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib537.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib537.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib537.c,v 1.21 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib537.c,v 1.22 2010-02-05 18:07:20 yangtse Exp $
  */
 
 #include "test.h"
 
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
@@ -484,17 +484,19 @@
     fprintf(stderr, "curl_easy_init() failed\n");
     close_file_descriptors();
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_HEADER, 1L);
 
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   close_file_descriptors();
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib539.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib539.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib539.c	2008-09-23 04:44:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib539.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,25 +2,25 @@
   *                                  _   _ ____  _
   *  Project                     ___| | | |  _ \| |
   *                             / __| | | | |_) | |
   *                            | (__| |_| |  _ <| |___
   *                             \___|\___/|_| \_\_____|
   *
-  * $Id: lib539.c,v 1.3 2008-09-22 17:20:29 danf Exp $
+  * $Id: lib539.c,v 1.4 2010-02-05 18:07:20 yangtse Exp $
   */
 
 #include "test.h"
 
 #include "memdebug.h"
 
 int test(char *URL)
 {
    CURLcode res;
    CURL *curl;
-   char *newURL;
-   struct curl_slist *slist;
+   char *newURL = NULL;
+   struct curl_slist *slist = NULL;
 
    if (curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
      fprintf(stderr, "curl_global_init() failed\n");
      return TEST_ERR_MAJOR_BAD;
    }
 
@@ -30,15 +30,15 @@
      return TEST_ERR_MAJOR_BAD;
    }
 
    /*
     * Begin with cURL set to use a single CWD to the URL's directory.
     */
-   curl_easy_setopt(curl, CURLOPT_URL, URL);
-   curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
-   curl_easy_setopt(curl, CURLOPT_FTP_FILEMETHOD, (long) CURLFTPMETHOD_SINGLECWD);
+   test_setopt(curl, CURLOPT_URL, URL);
+   test_setopt(curl, CURLOPT_VERBOSE, 1L);
+   test_setopt(curl, CURLOPT_FTP_FILEMETHOD, (long) CURLFTPMETHOD_SINGLECWD);
 
    res = curl_easy_perform(curl);
 
    /*
     * Change the FTP_FILEMETHOD option to use full paths rather than a CWD
     * command.  Alter the URL's path a bit, appending a "./".  Use an innocuous
@@ -60,19 +60,22 @@
      free(newURL);
      curl_easy_cleanup(curl);
      curl_global_cleanup();
      return TEST_ERR_MAJOR_BAD;
    }
 
-   curl_easy_setopt(curl, CURLOPT_URL, newURL);
-   curl_easy_setopt(curl, CURLOPT_FTP_FILEMETHOD, (long) CURLFTPMETHOD_NOCWD);
-   curl_easy_setopt(curl, CURLOPT_QUOTE, slist);
+   test_setopt(curl, CURLOPT_URL, newURL);
+   test_setopt(curl, CURLOPT_FTP_FILEMETHOD, (long) CURLFTPMETHOD_NOCWD);
+   test_setopt(curl, CURLOPT_QUOTE, slist);
 
    res = curl_easy_perform(curl);
 
+test_cleanup:
+
    curl_slist_free_all(slist);
-   free(newURL);
+   if(newURL)
+     free(newURL);
    curl_easy_cleanup(curl);
    curl_global_cleanup();
 
    return (int)res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib540.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib540.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib540.c	2009-10-18 02:31:50.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib540.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib540.c,v 1.8 2009-10-10 12:29:32 yangtse Exp $
+ * $Id: lib540.c,v 1.9 2010-02-05 18:07:20 yangtse Exp $
  *
  * This is the 'proxyauth.c' test app posted by Shmulik Regev on the libcurl
  * mailing list on 10 Jul 2007, converted to a test case.
  *
  * argv1 = URL
  * argv2 = proxy
@@ -21,39 +21,59 @@
 #include "memdebug.h"
 
 #define PROXY libtest_arg2
 #define PROXYUSERPWD libtest_arg3
 #define HOST test_argv[4]
 
-static void init(CURLM *cm, const char* url, const char* userpwd,
+static int init(CURLM *cm, const char* url, const char* userpwd,
                 struct curl_slist *headers)
 {
-  CURL *eh = curl_easy_init();
+  CURL *eh;
+  int res;
 
-  curl_easy_setopt(eh, CURLOPT_URL, url);
-  curl_easy_setopt(eh, CURLOPT_PROXY, PROXY);
-  curl_easy_setopt(eh, CURLOPT_PROXYUSERPWD, userpwd);
-  curl_easy_setopt(eh, CURLOPT_PROXYAUTH, (long)CURLAUTH_ANY);
-  curl_easy_setopt(eh, CURLOPT_VERBOSE, 1L);
-  curl_easy_setopt(eh, CURLOPT_HEADER, 1L);
-  curl_easy_setopt(eh, CURLOPT_HTTPHEADER, headers); /* custom Host: */
+  if ((eh = curl_easy_init()) == NULL) {
+    fprintf(stderr, "curl_easy_init() failed\n");
+    return 1; /* failure */
+  }
+
+  res = curl_easy_setopt(eh, CURLOPT_URL, url);
+  if(res) return 1;
+  res = curl_easy_setopt(eh, CURLOPT_PROXY, PROXY);
+  if(res) return 1;
+  res = curl_easy_setopt(eh, CURLOPT_PROXYUSERPWD, userpwd);
+  if(res) return 1;
+  res = curl_easy_setopt(eh, CURLOPT_PROXYAUTH, (long)CURLAUTH_ANY);
+  if(res) return 1;
+  res = curl_easy_setopt(eh, CURLOPT_VERBOSE, 1L);
+  if(res) return 1;
+  res = curl_easy_setopt(eh, CURLOPT_HEADER, 1L);
+  if(res) return 1;
+  res = curl_easy_setopt(eh, CURLOPT_HTTPHEADER, headers); /* custom Host: */
+  if(res) return 1;
+
+  if ((res = (int)curl_multi_add_handle(cm, eh)) != CURLM_OK) {
+    fprintf(stderr, "curl_multi_add_handle() failed, "
+            "with code %d\n", res);
+    return 1; /* failure */
+  }
 
-  curl_multi_add_handle(cm, eh);
+  return 0; /* success */
 }
 
 static int loop(CURLM *cm, const char* url, const char* userpwd,
                 struct curl_slist *headers)
 {
   CURLMsg *msg;
   CURLMcode code;
   long L;
   int M, Q, U = -1;
   fd_set R, W, E;
   struct timeval T;
 
-  init(cm, url, userpwd, headers);
+  if(init(cm, url, userpwd, headers))
+    return 1; /* failure */
 
   while (U) {
 
     do {
       code = curl_multi_perform(cm, &U);
     } while (code == CURLM_CALL_MULTI_PERFORM);
@@ -62,21 +82,21 @@
       FD_ZERO(&R);
       FD_ZERO(&W);
       FD_ZERO(&E);
 
       if (curl_multi_fdset(cm, &R, &W, &E, &M)) {
         fprintf(stderr, "E: curl_multi_fdset\n");
-        return EXIT_FAILURE;
+        return 1; /* failure */
       }
 
       /* In a real-world program you OF COURSE check the return that maxfd is
          bigger than -1 so that the call to select() below makes sense! */
 
       if (curl_multi_timeout(cm, &L)) {
         fprintf(stderr, "E: curl_multi_timeout\n");
-        return EXIT_FAILURE;
+        return 1; /* failure */
       }
 
       if(L != -1) {
         T.tv_sec = L/1000;
         T.tv_usec = (L%1000)*1000;
       }
@@ -84,13 +104,13 @@
         T.tv_sec = 5;
         T.tv_usec = 0;
       }
 
       if (0 > select(M+1, &R, &W, &E, &T)) {
         fprintf(stderr, "E: select\n");
-        return EXIT_FAILURE;
+        return 1; /* failure */
       }
     }
 
     while ((msg = curl_multi_info_read(cm, &Q))) {
       if (msg->msg == CURLMSG_DONE) {
         CURL *e = msg->easy_handle;
@@ -102,39 +122,58 @@
       else {
         fprintf(stderr, "E: CURLMsg (%d)\n", (int)msg->msg);
       }
     }
   }
 
-  return 1;
+  return 0; /* success */
 }
 
 int test(char *URL)
 {
-  CURLM *cm;
+  CURLM *cm = NULL;
   struct curl_slist *headers = NULL;
   char buffer[246]; /* naively fixed-size */
+  int res;
 
   if(test_argc < 4)
     return 99;
 
   sprintf(buffer, "Host: %s", HOST);
 
   /* now add a custom Host: header */
   headers = curl_slist_append(headers, buffer);
+  if(!headers) {
+    fprintf(stderr, "curl_slist_append() failed\n");
+    return TEST_ERR_MAJOR_BAD;
+  }
 
-  curl_global_init(CURL_GLOBAL_ALL);
+  if (curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
+    fprintf(stderr, "curl_global_init() failed\n");
+    curl_slist_free_all(headers);
+    return TEST_ERR_MAJOR_BAD;
+  }
+
+  if ((cm = curl_multi_init()) == NULL) {
+    fprintf(stderr, "curl_multi_init() failed\n");
+    curl_slist_free_all(headers);
+    curl_global_cleanup();
+    return TEST_ERR_MAJOR_BAD;
+  }
 
-  cm = curl_multi_init();
-  loop(cm, URL, PROXYUSERPWD, headers);
+  res = loop(cm, URL, PROXYUSERPWD, headers);
+  if(res)
+    goto test_cleanup;
 
   fprintf(stderr, "lib540: now we do the request again\n");
-  loop(cm, URL, PROXYUSERPWD, headers);
+  res = loop(cm, URL, PROXYUSERPWD, headers);
+
+test_cleanup:
 
   curl_multi_cleanup(cm);
 
   curl_global_cleanup();
 
   curl_slist_free_all(headers);
 
-  return EXIT_SUCCESS;
+  return res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib541.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib541.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib541.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib541.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,16 +2,15 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib541.c,v 1.4 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib541.c,v 1.6 2010-02-05 18:07:20 yangtse Exp $
  */
 
-#include "setup.h" /* struct_stat etc. */
 #include "test.h"
 
 #ifdef HAVE_SYS_SOCKET_H
 #include <sys/socket.h>
 #endif
 #ifdef HAVE_SYS_TYPES_H
@@ -88,30 +87,32 @@
     curl_global_cleanup();
     fclose(hd_src);
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* enable uploading */
-  curl_easy_setopt(curl, CURLOPT_UPLOAD, 1L);
+  test_setopt(curl, CURLOPT_UPLOAD, 1L);
 
   /* enable verbose */
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   /* specify target */
-  curl_easy_setopt(curl,CURLOPT_URL, URL);
+  test_setopt(curl,CURLOPT_URL, URL);
 
   /* now specify which file to upload */
-  curl_easy_setopt(curl, CURLOPT_INFILE, hd_src);
+  test_setopt(curl, CURLOPT_INFILE, hd_src);
 
   /* Now run off and do what you've been told! */
   res = curl_easy_perform(curl);
 
   /* and now upload the exact same again, but without rewinding so it already
      is at end of file */
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   /* close the local file */
   fclose(hd_src);
 
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib542.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib542.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib542.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib542.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,16 +2,15 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib542.c,v 1.4 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib542.c,v 1.6 2010-02-05 18:07:20 yangtse Exp $
  */
 
-#include "setup.h" /* struct_stat etc. */
 #include "test.h"
 
 #ifdef HAVE_SYS_SOCKET_H
 #include <sys/socket.h>
 #endif
 #ifdef HAVE_SYS_TYPES_H
@@ -49,25 +48,27 @@
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* enable verbose */
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   /* enable NOBODY */
-  curl_easy_setopt(curl, CURLOPT_NOBODY, 1L);
+  test_setopt(curl, CURLOPT_NOBODY, 1L);
 
   /* disable HEADER */
-  curl_easy_setopt(curl, CURLOPT_HEADER, 0L);
+  test_setopt(curl, CURLOPT_HEADER, 0L);
 
   /* specify target */
-  curl_easy_setopt(curl,CURLOPT_URL, URL);
+  test_setopt(curl,CURLOPT_URL, URL);
 
   /* Now run off and do what you've been told! */
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib543.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib543.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib543.c	2009-04-17 05:38:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib543.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,33 +2,41 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib543.c,v 1.3 2009-04-14 12:53:54 yangtse Exp $
+ * $Id: lib543.c,v 1.5 2010-02-05 18:07:20 yangtse Exp $
  *
  * Based on Alex Fishman's bug report on September 30, 2007
  */
 
-#include "setup.h"
 #include "test.h"
 
 #include "memdebug.h"
 
 int test(char *URL)
 {
   unsigned char a[] = {0x9c, 0x26, 0x4b, 0x3d, 0x49, 0x4, 0xa1, 0x1,
                        0xe0, 0xd8, 0x7c,  0x20, 0xb7, 0xef, 0x53, 0x29, 0xfa,
                        0x1d, 0x57, 0xe1};
 
-  CURL* easy  = curl_easy_init();
-  int asize = (int)sizeof(a);
-  char* s = curl_easy_escape(easy, (char*)a, asize);
+  CURL *easy;
+  int asize;
+  char *s;
   (void)URL;
 
+  if ((easy = curl_easy_init()) == NULL) {
+    fprintf(stderr, "curl_easy_init() failed\n");
+    return TEST_ERR_MAJOR_BAD;
+  }
+
+  asize = (int)sizeof(a);
+
+  s = curl_easy_escape(easy, (char*)a, asize);
+
   printf("%s\n", s);
 
   curl_free(s);
   curl_easy_cleanup(easy);
 
   return 0;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib544.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib544.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib544.c	2009-05-08 14:51:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib544.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib544.c,v 1.4 2009-05-08 02:14:50 yangtse Exp $
+ * $Id: lib544.c,v 1.5 2010-02-05 18:07:20 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -37,29 +37,31 @@
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_URL, URL);
 
 #ifdef LIB545
-  curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, (long) sizeof teststring - 1);
+  test_setopt(curl, CURLOPT_POSTFIELDSIZE, (long) sizeof teststring - 1);
 #endif
 
-  curl_easy_setopt(curl, CURLOPT_COPYPOSTFIELDS, teststring);
+  test_setopt(curl, CURLOPT_COPYPOSTFIELDS, teststring);
 
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L); /* show verbose for debug */
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L); /* include header */
+  test_setopt(curl, CURLOPT_VERBOSE, 1L); /* show verbose for debug */
+  test_setopt(curl, CURLOPT_HEADER, 1L); /* include header */
 
   /* Update the original data to detect non-copy. */
   strcpy(teststring, "FAIL");
 
   /* Now, this is a POST request with binary 0 embedded in POST data. */
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   /* always cleanup */
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib547.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib547.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib547.c	2009-05-08 14:51:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib547.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib547.c,v 1.7 2009-05-08 02:14:50 yangtse Exp $
+ * $Id: lib547.c,v 1.8 2010-02-05 18:07:20 yangtse Exp $
  *
  * argv1 = URL
  * argv2 = proxy
  * argv3 = proxyuser:password
  */
 
@@ -81,35 +81,37 @@
   if ((curl = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_HEADER, 1L);
 #ifdef LIB548
   /* set the data to POST with a mere pointer to a zero-terminated string */
-  curl_easy_setopt(curl, CURLOPT_POSTFIELDS, UPLOADTHIS);
+  test_setopt(curl, CURLOPT_POSTFIELDS, UPLOADTHIS);
 #else
   /* 547 style, which means reading the POST data from a callback */
-  curl_easy_setopt(curl, CURLOPT_IOCTLFUNCTION, ioctlcallback);
-  curl_easy_setopt(curl, CURLOPT_IOCTLDATA, &counter);
-  curl_easy_setopt(curl, CURLOPT_READFUNCTION, readcallback);
-  curl_easy_setopt(curl, CURLOPT_READDATA, &counter);
+  test_setopt(curl, CURLOPT_IOCTLFUNCTION, ioctlcallback);
+  test_setopt(curl, CURLOPT_IOCTLDATA, &counter);
+  test_setopt(curl, CURLOPT_READFUNCTION, readcallback);
+  test_setopt(curl, CURLOPT_READDATA, &counter);
   /* We CANNOT do the POST fine without setting the size (or choose chunked)! */
-  curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, (long)strlen(UPLOADTHIS));
+  test_setopt(curl, CURLOPT_POSTFIELDSIZE, (long)strlen(UPLOADTHIS));
 #endif
-  curl_easy_setopt(curl, CURLOPT_POST, 1L);
-  curl_easy_setopt(curl, CURLOPT_PROXY, libtest_arg2);
-  curl_easy_setopt(curl, CURLOPT_PROXYUSERPWD, libtest_arg3);
-  curl_easy_setopt(curl, CURLOPT_PROXYAUTH,
+  test_setopt(curl, CURLOPT_POST, 1L);
+  test_setopt(curl, CURLOPT_PROXY, libtest_arg2);
+  test_setopt(curl, CURLOPT_PROXYUSERPWD, libtest_arg3);
+  test_setopt(curl, CURLOPT_PROXYAUTH,
                    (long) (CURLAUTH_NTLM | CURLAUTH_DIGEST | CURLAUTH_BASIC) );
 
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib549.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib549.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib549.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib549.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib549.c,v 1.3 2008-09-20 04:26:57 yangtse Exp $
+ * $Id: lib549.c,v 1.4 2010-02-05 18:07:20 yangtse Exp $
  *
  * argv1 = URL
  * argv2 = proxy
  * argv3 = non-zero means ASCII transfer
  */
 
@@ -29,22 +29,25 @@
   if ((curl = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_PROXY, libtest_arg2);
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_PROXY_TRANSFER_MODE, 1L);
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
-  if(libtest_arg3)
+  test_setopt(curl, CURLOPT_PROXY, libtest_arg2);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_PROXY_TRANSFER_MODE, 1L);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
+  if(libtest_arg3) {
     /* enable ascii/text mode */
-    curl_easy_setopt(curl, CURLOPT_TRANSFERTEXT, 1L);
+    test_setopt(curl, CURLOPT_TRANSFERTEXT, 1L);
+  }
 
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib552.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib552.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib552.c	2009-05-08 14:51:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib552.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib552.c,v 1.8 2009-05-08 02:14:50 yangtse Exp $
+ * $Id: lib552.c,v 1.9 2010-02-05 18:07:20 yangtse Exp $
  *
  * argv1 = URL
  * argv2 = proxy with embedded user+password
  */
 
 #include "test.h"
@@ -152,51 +152,55 @@
   struct data config;
   size_t i;
   static const char fill[] = "test data";
 
   config.trace_ascii = 1; /* enable ascii tracing */
 
-  curl = curl_easy_init();
-  if(curl) {
-    curl_easy_setopt(curl, CURLOPT_DEBUGFUNCTION, my_trace);
-    curl_easy_setopt(curl, CURLOPT_DEBUGDATA, &config);
-    /* the DEBUGFUNCTION has no effect until we enable VERBOSE */
-    curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
-
-    /* setup repeated data string */
-    for (i=0; i < sizeof(databuf); ++i)
-        databuf[i] = fill[i % sizeof fill];
+  if((curl = curl_easy_init()) == NULL) {
+    fprintf(stderr, "curl_easy_init() failed\n");
+    curl_global_cleanup();
+    return TEST_ERR_MAJOR_BAD;
+  }
+
+  test_setopt(curl, CURLOPT_DEBUGFUNCTION, my_trace);
+  test_setopt(curl, CURLOPT_DEBUGDATA, &config);
+  /* the DEBUGFUNCTION has no effect until we enable VERBOSE */
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
+
+  /* setup repeated data string */
+  for (i=0; i < sizeof(databuf); ++i)
+      databuf[i] = fill[i % sizeof fill];
 
-    /* Post */
-    curl_easy_setopt(curl, CURLOPT_POST, 1L);
+  /* Post */
+  test_setopt(curl, CURLOPT_POST, 1L);
 
 #ifdef CURL_DOES_CONVERSIONS
-    /* Convert the POST data to ASCII */
-    curl_easy_setopt(curl, CURLOPT_TRANSFERTEXT, 1L);
+  /* Convert the POST data to ASCII */
+  test_setopt(curl, CURLOPT_TRANSFERTEXT, 1L);
 #endif
 
-    /* Setup read callback */
-    curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, (long) sizeof(databuf));
-    curl_easy_setopt(curl, CURLOPT_READFUNCTION, read_callback);
+  /* Setup read callback */
+  test_setopt(curl, CURLOPT_POSTFIELDSIZE, (long) sizeof(databuf));
+  test_setopt(curl, CURLOPT_READFUNCTION, read_callback);
 
-    /* Write callback */
-    curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, write_callback);
+  /* Write callback */
+  test_setopt(curl, CURLOPT_WRITEFUNCTION, write_callback);
 
-    /* Ioctl function */
-    curl_easy_setopt(curl, CURLOPT_IOCTLFUNCTION, ioctl_callback);
+  /* Ioctl function */
+  test_setopt(curl, CURLOPT_IOCTLFUNCTION, ioctl_callback);
 
-    curl_easy_setopt(curl, CURLOPT_PROXY, libtest_arg2);
+  test_setopt(curl, CURLOPT_PROXY, libtest_arg2);
 
-    curl_easy_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_URL, URL);
 
-    /* Accept any auth. But for this bug configure proxy with DIGEST, basic might work too, not NTLM */
-    curl_easy_setopt(curl, CURLOPT_PROXYAUTH, (long)CURLAUTH_ANY);
+  /* Accept any auth. But for this bug configure proxy with DIGEST, basic might work too, not NTLM */
+  test_setopt(curl, CURLOPT_PROXYAUTH, (long)CURLAUTH_ANY);
 
-    res = curl_easy_perform(curl);
-    fprintf(stderr, "curl_easy_perform = %d\n", (int)res);
+  res = curl_easy_perform(curl);
+  fprintf(stderr, "curl_easy_perform = %d\n", (int)res);
 
-    /* always cleanup */
-    curl_easy_cleanup(curl);
-  }
+test_cleanup:
+
+  curl_easy_cleanup(curl);
   curl_global_cleanup();
   return (int)res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib553.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib553.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib553.c	2009-05-08 14:51:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib553.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib553.c,v 1.6 2009-05-08 02:14:50 yangtse Exp $
+ * $Id: lib553.c,v 1.7 2010-02-05 18:07:20 yangtse Exp $
  *
  * This test case and code is based on the bug recipe Joe Malicki provided for
  * bug report #1871269, fixed on Jan 14 2008 before the 7.18.0 release.
  */
 
 #include "test.h"
@@ -46,46 +46,56 @@
 {
   CURL *curl;
   CURLcode res = CURLE_FAILED_INIT;
   int i;
   struct curl_slist *headerlist=NULL, *hl;
 
-  curl_global_init(CURL_GLOBAL_ALL);
-  curl = curl_easy_init();
+  if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
+    fprintf(stderr, "curl_global_init() failed\n");
+    return TEST_ERR_MAJOR_BAD;
+  }
+
+  if((curl = curl_easy_init()) == NULL) {
+    fprintf(stderr, "curl_easy_init() failed\n");
+    curl_global_cleanup();
+    return TEST_ERR_MAJOR_BAD;
+  }
 
-  if(curl) {
-    for (i = 0; i < NUM_HEADERS; i++) {
-      int len = sprintf(buf, "Header%d: ", i);
-      memset(&buf[len], 'A', SIZE_HEADERS);
-      buf[len + SIZE_HEADERS]=0; /* zero terminate */
-      hl = curl_slist_append(headerlist,  buf);
-      if (!hl)
-        goto errout;
-      headerlist = hl;
-    }
-    hl = curl_slist_append(headerlist, "Expect: ");
+  for (i = 0; i < NUM_HEADERS; i++) {
+    int len = sprintf(buf, "Header%d: ", i);
+    memset(&buf[len], 'A', SIZE_HEADERS);
+    buf[len + SIZE_HEADERS]=0; /* zero terminate */
+    hl = curl_slist_append(headerlist,  buf);
     if (!hl)
-      goto errout;
+      goto test_cleanup;
     headerlist = hl;
+  }
 
-    curl_easy_setopt(curl, CURLOPT_URL, URL);
-    curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headerlist);
-    curl_easy_setopt(curl, CURLOPT_POST, 1L);
+  hl = curl_slist_append(headerlist, "Expect: ");
+  if (!hl)
+    goto test_cleanup;
+  headerlist = hl;
+
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_HTTPHEADER, headerlist);
+  test_setopt(curl, CURLOPT_POST, 1L);
 #ifdef CURL_DOES_CONVERSIONS
-    /* Convert the POST data to ASCII */
-    curl_easy_setopt(curl, CURLOPT_TRANSFERTEXT, 1L);
+  /* Convert the POST data to ASCII */
+  test_setopt(curl, CURLOPT_TRANSFERTEXT, 1L);
 #endif
-    curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, (long)POSTLEN);
-    curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
-    curl_easy_setopt(curl, CURLOPT_HEADER, 1L);
-    curl_easy_setopt(curl, CURLOPT_READFUNCTION, myreadfunc);
-    res = curl_easy_perform(curl);
+  test_setopt(curl, CURLOPT_POSTFIELDSIZE, (long)POSTLEN);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_HEADER, 1L);
+  test_setopt(curl, CURLOPT_READFUNCTION, myreadfunc);
 
-errout:
-    curl_easy_cleanup(curl);
+  res = curl_easy_perform(curl);
+
+test_cleanup:
+
+  curl_easy_cleanup(curl);
+
+  curl_slist_free_all(headerlist);
 
-    curl_slist_free_all(headerlist);
-  }
   curl_global_cleanup();
 
   return (int)res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib554.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib554.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib554.c	2009-07-23 06:08:01.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib554.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib554.c,v 1.7 2009-07-22 22:08:01 bagder Exp $
+ * $Id: lib554.c,v 1.8 2010-02-05 18:07:20 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -112,35 +112,37 @@
     curl_formfree(formpost);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_URL, URL);
 
   /* Now specify we want to POST data */
-  curl_easy_setopt(curl, CURLOPT_POST, 1L);
+  test_setopt(curl, CURLOPT_POST, 1L);
 
   /* Set the expected POST size */
-  curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, (long)pooh.sizeleft);
+  test_setopt(curl, CURLOPT_POSTFIELDSIZE, (long)pooh.sizeleft);
 
   /* we want to use our own read function */
-  curl_easy_setopt(curl, CURLOPT_READFUNCTION, read_callback);
+  test_setopt(curl, CURLOPT_READFUNCTION, read_callback);
 
   /* send a multi-part formpost */
-  curl_easy_setopt(curl, CURLOPT_HTTPPOST, formpost);
+  test_setopt(curl, CURLOPT_HTTPPOST, formpost);
 
   /* get verbose debug output please */
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   /* include headers in the output */
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L);
+  test_setopt(curl, CURLOPT_HEADER, 1L);
 
   /* Perform the request, res will get the return code */
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   /* always cleanup */
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   /* now cleanup the formpost chain */
   curl_formfree(formpost);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib555.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib555.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib555.c	2009-05-08 14:51:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib555.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib555.c,v 1.5 2009-05-08 02:14:50 yangtse Exp $
+ * $Id: lib555.c,v 1.6 2010-02-05 18:07:20 yangtse Exp $
  *
  * This test case is supposed to be identical to 547 except that this uses the
  * multi interface and 547 is easy interface.
  *
  * argv1 = URL
  * argv2 = proxy
@@ -61,13 +61,13 @@
 
 int test(char *URL)
 {
   int res;
   CURL *curl;
   int counter=0;
-  CURLM *m;
+  CURLM *m = NULL;
   int running=1;
   struct timeval mp_start;
   char mp_timedout = FALSE;
 
   if (curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
@@ -77,32 +77,32 @@
   if ((curl = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_HEADER, 1L);
 
   /* read the POST data from a callback */
-  curl_easy_setopt(curl, CURLOPT_IOCTLFUNCTION, ioctlcallback);
-  curl_easy_setopt(curl, CURLOPT_IOCTLDATA, &counter);
-  curl_easy_setopt(curl, CURLOPT_READFUNCTION, readcallback);
-  curl_easy_setopt(curl, CURLOPT_READDATA, &counter);
+  test_setopt(curl, CURLOPT_IOCTLFUNCTION, ioctlcallback);
+  test_setopt(curl, CURLOPT_IOCTLDATA, &counter);
+  test_setopt(curl, CURLOPT_READFUNCTION, readcallback);
+  test_setopt(curl, CURLOPT_READDATA, &counter);
   /* We CANNOT do the POST fine without setting the size (or choose chunked)! */
-  curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, strlen(UPLOADTHIS));
+  test_setopt(curl, CURLOPT_POSTFIELDSIZE, strlen(UPLOADTHIS));
 
-  curl_easy_setopt(curl, CURLOPT_POST, 1L);
+  test_setopt(curl, CURLOPT_POST, 1L);
 #ifdef CURL_DOES_CONVERSIONS
   /* Convert the POST data to ASCII. */
-  curl_easy_setopt(curl, CURLOPT_TRANSFERTEXT, 1L);
+  test_setopt(curl, CURLOPT_TRANSFERTEXT, 1L);
 #endif
-  curl_easy_setopt(curl, CURLOPT_PROXY, libtest_arg2);
-  curl_easy_setopt(curl, CURLOPT_PROXYUSERPWD, libtest_arg3);
-  curl_easy_setopt(curl, CURLOPT_PROXYAUTH,
+  test_setopt(curl, CURLOPT_PROXY, libtest_arg2);
+  test_setopt(curl, CURLOPT_PROXYUSERPWD, libtest_arg3);
+  test_setopt(curl, CURLOPT_PROXYAUTH,
                    (long) (CURLAUTH_NTLM | CURLAUTH_DIGEST | CURLAUTH_BASIC) );
 
   if ((m = curl_multi_init()) == NULL) {
     fprintf(stderr, "curl_multi_init() failed\n");
     curl_easy_cleanup(curl);
     curl_global_cleanup();
@@ -141,15 +141,18 @@
     if (mp_timedout) fprintf(stderr, "mp_timedout\n");
     fprintf(stderr, "ABORTING TEST, since it seems "
             "that it would have run forever.\n");
     res = TEST_ERR_RUNS_FOREVER;
   }
 
-  curl_multi_remove_handle(m, curl);
-  curl_easy_cleanup(curl);
-  curl_multi_cleanup(m);
+test_cleanup:
 
+  if(m) {
+    curl_multi_remove_handle(m, curl);
+    curl_multi_cleanup(m);
+  }
+  curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return res;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib556.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib556.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib556.c	2009-05-08 14:51:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib556.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib556.c,v 1.7 2009-05-08 02:14:50 yangtse Exp $
+ * $Id: lib556.c,v 1.8 2010-02-05 18:07:20 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -36,14 +36,14 @@
   if ((curl = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_CONNECT_ONLY, 1L);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_CONNECT_ONLY, 1L);
 
   res = curl_easy_perform(curl);
 
   if(!res) {
     /* we are connected, now get a HTTP document the raw way */
     const char *request = 
@@ -79,12 +79,13 @@
         total += iolen;
 
       } while(((res == CURLE_OK) || (res == CURLE_AGAIN)) && (total < 129));
     }
   }
 
+test_cleanup:
 
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib557.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib557.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib557.c	2008-09-22 05:15:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib557.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib557.c,v 1.7 2008-09-21 03:48:25 yangtse Exp $
+ * $Id: lib557.c,v 1.9 2010-02-04 14:50:58 yangtse Exp $
  */
 
 /*
  * The purpose of this test is to minimally exercise libcurl's internal
  * curl_m*printf formatting capabilities and handling of some data types.
  */
@@ -34,19 +34,35 @@
 #endif
 #define MPRNT_OFF_T_C_HELPER1(Val,Suffix) MPRNT_OFF_T_C_HELPER2(Val,Suffix)
 #define MPRNT_OFF_T_C(Val)  MPRNT_OFF_T_C_HELPER1(Val,MPRNT_SUFFIX_CURL_OFF_T)
 
 
 #define BUFSZ    256
+#define USHORT_TESTS_ARRSZ 1 + 100
+#define SSHORT_TESTS_ARRSZ 1 + 100
 #define UINT_TESTS_ARRSZ   1 + 100
 #define SINT_TESTS_ARRSZ   1 + 100
 #define ULONG_TESTS_ARRSZ  1 + 100
 #define SLONG_TESTS_ARRSZ  1 + 100
 #define COFFT_TESTS_ARRSZ  1 + 100
 
 
+struct unsshort_st {
+  unsigned short num;   /* unsigned short  */
+  const char *expected; /* expected string */
+  char result[BUFSZ];   /* result string   */
+};
+
+
+struct sigshort_st {
+  short num;            /* signed short    */
+  const char *expected; /* expected string */
+  char result[BUFSZ];   /* result string   */
+};
+
+
 struct unsint_st {
   unsigned int num;     /* unsigned int    */
   const char *expected; /* expected string */
   char result[BUFSZ];   /* result string   */
 };
 
@@ -76,17 +92,296 @@
   curl_off_t num;       /* curl_off_t      */
   const char *expected; /* expected string */
   char result[BUFSZ];   /* result string   */
 };
 
 
-static struct unsint_st  ui_test[UINT_TESTS_ARRSZ];
-static struct sigint_st  si_test[SINT_TESTS_ARRSZ];
-static struct unslong_st ul_test[ULONG_TESTS_ARRSZ];
-static struct siglong_st sl_test[SLONG_TESTS_ARRSZ];
-static struct curloff_st co_test[COFFT_TESTS_ARRSZ];
+static struct unsshort_st us_test[USHORT_TESTS_ARRSZ];
+static struct sigshort_st ss_test[SSHORT_TESTS_ARRSZ];
+static struct unsint_st   ui_test[UINT_TESTS_ARRSZ];
+static struct sigint_st   si_test[SINT_TESTS_ARRSZ];
+static struct unslong_st  ul_test[ULONG_TESTS_ARRSZ];
+static struct siglong_st  sl_test[SLONG_TESTS_ARRSZ];
+static struct curloff_st  co_test[COFFT_TESTS_ARRSZ];
+
+
+static int test_unsigned_short_formatting(void)
+{
+  int i, j;
+  int num_ushort_tests;
+  int failed = 0;
+
+#if (SIZEOF_SHORT == 1)
+
+  i=1; us_test[i].num = 0xFFU; us_test[i].expected = "256";
+  i++; us_test[i].num = 0xF0U; us_test[i].expected = "240";
+  i++; us_test[i].num = 0x0FU; us_test[i].expected = "15";
+
+  i++; us_test[i].num = 0xE0U; us_test[i].expected = "224";
+  i++; us_test[i].num = 0x0EU; us_test[i].expected = "14";
+
+  i++; us_test[i].num = 0xC0U; us_test[i].expected = "192";
+  i++; us_test[i].num = 0x0CU; us_test[i].expected = "12";
+
+  i++; us_test[i].num = 0x01U; us_test[i].expected = "1";
+  i++; us_test[i].num = 0x00U; us_test[i].expected = "0";
+
+  num_ushort_tests = i;
+
+#elif (SIZEOF_SHORT == 2)
+
+  i=1; us_test[i].num = 0xFFFFU; us_test[i].expected = "65535";
+  i++; us_test[i].num = 0xFF00U; us_test[i].expected = "65280";
+  i++; us_test[i].num = 0x00FFU; us_test[i].expected = "255";
+
+  i++; us_test[i].num = 0xF000U; us_test[i].expected = "61440";
+  i++; us_test[i].num = 0x0F00U; us_test[i].expected = "3840";
+  i++; us_test[i].num = 0x00F0U; us_test[i].expected = "240";
+  i++; us_test[i].num = 0x000FU; us_test[i].expected = "15";
+
+  i++; us_test[i].num = 0xC000U; us_test[i].expected = "49152";
+  i++; us_test[i].num = 0x0C00U; us_test[i].expected = "3072";
+  i++; us_test[i].num = 0x00C0U; us_test[i].expected = "192";
+  i++; us_test[i].num = 0x000CU; us_test[i].expected = "12";
+
+  i++; us_test[i].num = 0x0001U; us_test[i].expected = "1";
+  i++; us_test[i].num = 0x0000U; us_test[i].expected = "0";
+
+  num_ushort_tests = i;
+
+#elif (SIZEOF_SHORT == 4)
+
+  i=1; us_test[i].num = 0xFFFFFFFFU; us_test[i].expected = "4294967295";
+  i++; us_test[i].num = 0xFFFF0000U; us_test[i].expected = "4294901760";
+  i++; us_test[i].num = 0x0000FFFFU; us_test[i].expected = "65535";
+
+  i++; us_test[i].num = 0xFF000000U; us_test[i].expected = "4278190080";
+  i++; us_test[i].num = 0x00FF0000U; us_test[i].expected = "16711680";
+  i++; us_test[i].num = 0x0000FF00U; us_test[i].expected = "65280";
+  i++; us_test[i].num = 0x000000FFU; us_test[i].expected = "255";
+
+  i++; us_test[i].num = 0xF0000000U; us_test[i].expected = "4026531840";
+  i++; us_test[i].num = 0x0F000000U; us_test[i].expected = "251658240";
+  i++; us_test[i].num = 0x00F00000U; us_test[i].expected = "15728640";
+  i++; us_test[i].num = 0x000F0000U; us_test[i].expected = "983040";
+  i++; us_test[i].num = 0x0000F000U; us_test[i].expected = "61440";
+  i++; us_test[i].num = 0x00000F00U; us_test[i].expected = "3840";
+  i++; us_test[i].num = 0x000000F0U; us_test[i].expected = "240";
+  i++; us_test[i].num = 0x0000000FU; us_test[i].expected = "15";
+
+  i++; us_test[i].num = 0xC0000000U; us_test[i].expected = "3221225472";
+  i++; us_test[i].num = 0x0C000000U; us_test[i].expected = "201326592";
+  i++; us_test[i].num = 0x00C00000U; us_test[i].expected = "12582912";
+  i++; us_test[i].num = 0x000C0000U; us_test[i].expected = "786432";
+  i++; us_test[i].num = 0x0000C000U; us_test[i].expected = "49152";
+  i++; us_test[i].num = 0x00000C00U; us_test[i].expected = "3072";
+  i++; us_test[i].num = 0x000000C0U; us_test[i].expected = "192";
+  i++; us_test[i].num = 0x0000000CU; us_test[i].expected = "12";
+
+  i++; us_test[i].num = 0x00000001U; us_test[i].expected = "1";
+  i++; us_test[i].num = 0x00000000U; us_test[i].expected = "0";
+
+  num_ushort_tests = i;
+
+#endif
+
+  for(i=1; i<=num_ushort_tests; i++) {
+
+    for(j=0; j<BUFSZ; j++)
+      us_test[i].result[j] = 'X';
+    us_test[i].result[BUFSZ-1] = '\0';
+
+    (void)curl_msprintf(us_test[i].result, "%hu", us_test[i].num);
+
+    if(memcmp(us_test[i].result,
+               us_test[i].expected,
+               strlen(us_test[i].expected))) {
+      printf("unsigned short test #%.2d: Failed (Expected: %s Got: %s)\n",
+             i, us_test[i].expected, us_test[i].result);
+      failed++;
+    }
+
+  }
+
+  if(!failed)
+    printf("All curl_mprintf() unsigned short tests OK!\n");
+  else
+    printf("Some curl_mprintf() unsigned short tests Failed!\n");
+
+  return failed;
+}
+
+
+static int test_signed_short_formatting(void)
+{
+  int i, j;
+  int num_sshort_tests;
+  int failed = 0;
+
+#if (SIZEOF_SHORT == 1)
+
+  i=1; ss_test[i].num = 0x7F; ss_test[i].expected = "127";
+
+  i++; ss_test[i].num = 0x70; ss_test[i].expected = "112";
+  i++; ss_test[i].num = 0x07; ss_test[i].expected = "7";
+
+  i++; ss_test[i].num = 0x50; ss_test[i].expected = "80";
+  i++; ss_test[i].num = 0x05; ss_test[i].expected = "5";
+
+  i++; ss_test[i].num = 0x01; ss_test[i].expected = "1";
+  i++; ss_test[i].num = 0x00; ss_test[i].expected = "0";
+
+  i++; ss_test[i].num = -0x7F -1; ss_test[i].expected = "-128";
+
+  i++; ss_test[i].num = -0x70 -1; ss_test[i].expected = "-113";
+  i++; ss_test[i].num = -0x07 -1; ss_test[i].expected = "-8";
+
+  i++; ss_test[i].num = -0x50 -1; ss_test[i].expected = "-81";
+  i++; ss_test[i].num = -0x05 -1; ss_test[i].expected = "-6";
+
+  i++; ss_test[i].num =  0x00 -1; ss_test[i].expected = "-1";
+
+  num_sshort_tests = i;
+
+#elif (SIZEOF_SHORT == 2)
+
+  i=1; ss_test[i].num = 0x7FFF; ss_test[i].expected = "32767";
+  i++; ss_test[i].num = 0x7FFE; ss_test[i].expected = "32766";
+  i++; ss_test[i].num = 0x7FFD; ss_test[i].expected = "32765";
+  i++; ss_test[i].num = 0x7F00; ss_test[i].expected = "32512";
+  i++; ss_test[i].num = 0x07F0; ss_test[i].expected = "2032";
+  i++; ss_test[i].num = 0x007F; ss_test[i].expected = "127";
+
+  i++; ss_test[i].num = 0x7000; ss_test[i].expected = "28672";
+  i++; ss_test[i].num = 0x0700; ss_test[i].expected = "1792";
+  i++; ss_test[i].num = 0x0070; ss_test[i].expected = "112";
+  i++; ss_test[i].num = 0x0007; ss_test[i].expected = "7";
+
+  i++; ss_test[i].num = 0x5000; ss_test[i].expected = "20480";
+  i++; ss_test[i].num = 0x0500; ss_test[i].expected = "1280";
+  i++; ss_test[i].num = 0x0050; ss_test[i].expected = "80";
+  i++; ss_test[i].num = 0x0005; ss_test[i].expected = "5";
+
+  i++; ss_test[i].num = 0x0001; ss_test[i].expected = "1";
+  i++; ss_test[i].num = 0x0000; ss_test[i].expected = "0";
+
+  i++; ss_test[i].num = -0x7FFF -1; ss_test[i].expected = "-32768";
+  i++; ss_test[i].num = -0x7FFE -1; ss_test[i].expected = "-32767";
+  i++; ss_test[i].num = -0x7FFD -1; ss_test[i].expected = "-32766";
+  i++; ss_test[i].num = -0x7F00 -1; ss_test[i].expected = "-32513";
+  i++; ss_test[i].num = -0x07F0 -1; ss_test[i].expected = "-2033";
+  i++; ss_test[i].num = -0x007F -1; ss_test[i].expected = "-128";
+
+  i++; ss_test[i].num = -0x7000 -1; ss_test[i].expected = "-28673";
+  i++; ss_test[i].num = -0x0700 -1; ss_test[i].expected = "-1793";
+  i++; ss_test[i].num = -0x0070 -1; ss_test[i].expected = "-113";
+  i++; ss_test[i].num = -0x0007 -1; ss_test[i].expected = "-8";
+
+  i++; ss_test[i].num = -0x5000 -1; ss_test[i].expected = "-20481";
+  i++; ss_test[i].num = -0x0500 -1; ss_test[i].expected = "-1281";
+  i++; ss_test[i].num = -0x0050 -1; ss_test[i].expected = "-81";
+  i++; ss_test[i].num = -0x0005 -1; ss_test[i].expected = "-6";
+
+  i++; ss_test[i].num =  0x0000 -1; ss_test[i].expected = "-1";
+
+  num_sshort_tests = i;
+
+#elif (SIZEOF_SHORT == 4)
+
+  i=1; ss_test[i].num = 0x7FFFFFFF; ss_test[i].expected = "2147483647";
+  i++; ss_test[i].num = 0x7FFFFFFE; ss_test[i].expected = "2147483646";
+  i++; ss_test[i].num = 0x7FFFFFFD; ss_test[i].expected = "2147483645";
+  i++; ss_test[i].num = 0x7FFF0000; ss_test[i].expected = "2147418112";
+  i++; ss_test[i].num = 0x00007FFF; ss_test[i].expected = "32767";
+
+  i++; ss_test[i].num = 0x7F000000; ss_test[i].expected = "2130706432";
+  i++; ss_test[i].num = 0x007F0000; ss_test[i].expected = "8323072";
+  i++; ss_test[i].num = 0x00007F00; ss_test[i].expected = "32512";
+  i++; ss_test[i].num = 0x0000007F; ss_test[i].expected = "127";
+
+  i++; ss_test[i].num = 0x70000000; ss_test[i].expected = "1879048192";
+  i++; ss_test[i].num = 0x07000000; ss_test[i].expected = "117440512";
+  i++; ss_test[i].num = 0x00700000; ss_test[i].expected = "7340032";
+  i++; ss_test[i].num = 0x00070000; ss_test[i].expected = "458752";
+  i++; ss_test[i].num = 0x00007000; ss_test[i].expected = "28672";
+  i++; ss_test[i].num = 0x00000700; ss_test[i].expected = "1792";
+  i++; ss_test[i].num = 0x00000070; ss_test[i].expected = "112";
+  i++; ss_test[i].num = 0x00000007; ss_test[i].expected = "7";
+
+  i++; ss_test[i].num = 0x50000000; ss_test[i].expected = "1342177280";
+  i++; ss_test[i].num = 0x05000000; ss_test[i].expected = "83886080";
+  i++; ss_test[i].num = 0x00500000; ss_test[i].expected = "5242880";
+  i++; ss_test[i].num = 0x00050000; ss_test[i].expected = "327680";
+  i++; ss_test[i].num = 0x00005000; ss_test[i].expected = "20480";
+  i++; ss_test[i].num = 0x00000500; ss_test[i].expected = "1280";
+  i++; ss_test[i].num = 0x00000050; ss_test[i].expected = "80";
+  i++; ss_test[i].num = 0x00000005; ss_test[i].expected = "5";
+
+  i++; ss_test[i].num = 0x00000001; ss_test[i].expected = "1";
+  i++; ss_test[i].num = 0x00000000; ss_test[i].expected = "0";
+
+  i++; ss_test[i].num = -0x7FFFFFFF -1; ss_test[i].expected = "-2147483648";
+  i++; ss_test[i].num = -0x7FFFFFFE -1; ss_test[i].expected = "-2147483647";
+  i++; ss_test[i].num = -0x7FFFFFFD -1; ss_test[i].expected = "-2147483646";
+  i++; ss_test[i].num = -0x7FFF0000 -1; ss_test[i].expected = "-2147418113";
+  i++; ss_test[i].num = -0x00007FFF -1; ss_test[i].expected = "-32768";
+
+  i++; ss_test[i].num = -0x7F000000 -1; ss_test[i].expected = "-2130706433";
+  i++; ss_test[i].num = -0x007F0000 -1; ss_test[i].expected = "-8323073";
+  i++; ss_test[i].num = -0x00007F00 -1; ss_test[i].expected = "-32513";
+  i++; ss_test[i].num = -0x0000007F -1; ss_test[i].expected = "-128";
+
+  i++; ss_test[i].num = -0x70000000 -1; ss_test[i].expected = "-1879048193";
+  i++; ss_test[i].num = -0x07000000 -1; ss_test[i].expected = "-117440513";
+  i++; ss_test[i].num = -0x00700000 -1; ss_test[i].expected = "-7340033";
+  i++; ss_test[i].num = -0x00070000 -1; ss_test[i].expected = "-458753";
+  i++; ss_test[i].num = -0x00007000 -1; ss_test[i].expected = "-28673";
+  i++; ss_test[i].num = -0x00000700 -1; ss_test[i].expected = "-1793";
+  i++; ss_test[i].num = -0x00000070 -1; ss_test[i].expected = "-113";
+  i++; ss_test[i].num = -0x00000007 -1; ss_test[i].expected = "-8";
+
+  i++; ss_test[i].num = -0x50000000 -1; ss_test[i].expected = "-1342177281";
+  i++; ss_test[i].num = -0x05000000 -1; ss_test[i].expected = "-83886081";
+  i++; ss_test[i].num = -0x00500000 -1; ss_test[i].expected = "-5242881";
+  i++; ss_test[i].num = -0x00050000 -1; ss_test[i].expected = "-327681";
+  i++; ss_test[i].num = -0x00005000 -1; ss_test[i].expected = "-20481";
+  i++; ss_test[i].num = -0x00000500 -1; ss_test[i].expected = "-1281";
+  i++; ss_test[i].num = -0x00000050 -1; ss_test[i].expected = "-81";
+  i++; ss_test[i].num = -0x00000005 -1; ss_test[i].expected = "-6";
+
+  i++; ss_test[i].num =  0x00000000 -1; ss_test[i].expected = "-1";
+
+  num_sshort_tests = i;
+
+#endif
+
+  for(i=1; i<=num_sshort_tests; i++) {
+
+    for(j=0; j<BUFSZ; j++)
+      ss_test[i].result[j] = 'X';
+    ss_test[i].result[BUFSZ-1] = '\0';
+
+    (void)curl_msprintf(ss_test[i].result, "%hd", ss_test[i].num);
+
+    if(memcmp(ss_test[i].result,
+              ss_test[i].expected,
+              strlen(ss_test[i].expected))) {
+      printf("signed short test #%.2d: Failed (Expected: %s Got: %s)\n",
+             i, ss_test[i].expected, ss_test[i].result);
+      failed++;
+    }
+
+  }
+
+  if(!failed)
+    printf("All curl_mprintf() signed short tests OK!\n");
+  else
+    printf("Some curl_mprintf() signed short tests Failed!\n");
+
+  return failed;
+}
 
 
 static int test_unsigned_int_formatting(void)
 {
   int i, j;
   int num_uint_tests;
@@ -1070,12 +1365,16 @@
 
 int test(char *URL)
 {
   int errors = 0;
   (void)URL; /* not used */
 
+  errors += test_unsigned_short_formatting();
+
+  errors += test_signed_short_formatting();
+
   errors += test_unsigned_int_formatting();
 
   errors += test_signed_int_formatting();
 
   errors += test_unsigned_long_formatting();
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib560.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib560.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib560.c	2009-10-18 02:31:50.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib560.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib560.c,v 1.3 2009-10-10 12:29:32 yangtse Exp $
+ * $Id: lib560.c,v 1.4 2010-02-05 18:07:20 yangtse Exp $
  *
  */
 #include "test.h"
 
 /*
  * Simply download a HTTPS file!
@@ -20,26 +20,27 @@
  * fast/different compared to the real/distant servers we saw the bug happen
  * with.
  */
 int test(char *URL)
 {
   CURL *http_handle;
-  CURLM *multi_handle;
+  CURLM *multi_handle = NULL;
   CURLMcode code;
+  int res;
 
   int still_running; /* keep number of running handles */
 
   http_handle = curl_easy_init();
   if (!http_handle)
     return TEST_ERR_MAJOR_BAD;
 
   /* set options */
-  curl_easy_setopt(http_handle, CURLOPT_URL, URL);
-  curl_easy_setopt(http_handle, CURLOPT_HEADER, 1L);
-  curl_easy_setopt(http_handle, CURLOPT_SSL_VERIFYPEER, 0L);
-  curl_easy_setopt(http_handle, CURLOPT_SSL_VERIFYHOST, 0L);
+  test_setopt(http_handle, CURLOPT_URL, URL);
+  test_setopt(http_handle, CURLOPT_HEADER, 1L);
+  test_setopt(http_handle, CURLOPT_SSL_VERIFYPEER, 0L);
+  test_setopt(http_handle, CURLOPT_SSL_VERIFYHOST, 0L);
 
   /* init a multi stack */
   multi_handle = curl_multi_init();
   if (!multi_handle) {
     curl_easy_cleanup(http_handle);
     return TEST_ERR_MAJOR_BAD;
@@ -90,12 +91,15 @@
         code = curl_multi_perform(multi_handle, &still_running);
       } while(code == CURLM_CALL_MULTI_PERFORM);
       break;
     }
   }
 
-  curl_multi_cleanup(multi_handle);
+test_cleanup:
+
+  if(multi_handle)
+    curl_multi_cleanup(multi_handle);
 
   curl_easy_cleanup(http_handle);
 
-  return 0;
+  return res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib562.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib562.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib562.c	2009-04-30 17:02:39.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib562.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,16 +2,15 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib562.c,v 1.1 2009-04-30 09:02:39 bagder Exp $
+ * $Id: lib562.c,v 1.3 2010-02-05 18:07:20 yangtse Exp $
  */
 
-#include "setup.h" /* struct_stat etc. */
 #include "test.h"
 
 #ifdef HAVE_SYS_SOCKET_H
 #include <sys/socket.h>
 #endif
 #ifdef HAVE_SYS_TYPES_H
@@ -53,22 +52,24 @@
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* enable verbose */
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+  test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   /* set port number */
-  curl_easy_setopt(curl, CURLOPT_PORT, atoi(libtest_arg2) );
+  test_setopt(curl, CURLOPT_PORT, atoi(libtest_arg2) );
 
   /* specify target */
-  curl_easy_setopt(curl,CURLOPT_URL, URL);
+  test_setopt(curl,CURLOPT_URL, URL);
 
   /* Now run off and do what you've been told! */
   res = curl_easy_perform(curl);
 
+test_cleanup:
+
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib564.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib564.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib564.c	2009-05-17 05:09:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib564.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib564.c,v 1.2 2009-05-15 10:16:33 yangtse Exp $
+ * $Id: lib564.c,v 1.3 2010-02-05 18:07:20 yangtse Exp $
  */
 
 #include "test.h"
 
 #include <sys/types.h>
 #include <sys/stat.h>
@@ -23,13 +23,13 @@
 int test(char *URL)
 {
   int res = 0;
   CURL *curl;
   int running;
   char done=FALSE;
-  CURLM *m;
+  CURLM *m = NULL;
   struct timeval ml_start;
   struct timeval mp_start;
   char ml_timedout = FALSE;
   char mp_timedout = FALSE;
 
   if (curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
@@ -40,16 +40,16 @@
   if ((curl = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_VERBOSE, 1);
-  curl_easy_setopt(curl, CURLOPT_PROXY, libtest_arg2);
-  curl_easy_setopt(curl, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS4);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_VERBOSE, 1);
+  test_setopt(curl, CURLOPT_PROXY, libtest_arg2);
+  test_setopt(curl, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS4);
 
   if ((m = curl_multi_init()) == NULL) {
     fprintf(stderr, "curl_multi_init() failed\n");
     curl_easy_cleanup(curl);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
@@ -130,12 +130,15 @@
     if (mp_timedout) fprintf(stderr, "mp_timedout\n");
     fprintf(stderr, "ABORTING TEST, since it seems "
             "that it would have run forever.\n");
     res = TEST_ERR_RUNS_FOREVER;
   }
 
+test_cleanup:
+
   curl_easy_cleanup(curl);
-  curl_multi_cleanup(m);
+  if(m)
+    curl_multi_cleanup(m);
   curl_global_cleanup();
 
   return res;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib566.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib566.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/lib566.c	2009-11-01 02:51:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/lib566.c	2010-02-09 16:43:16.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: lib566.c,v 1.2 2009-10-31 18:51:51 bagder Exp $
+ * $Id: lib566.c,v 1.3 2010-02-05 18:07:20 yangtse Exp $
  */
 
 #include "test.h"
 
 #include "memdebug.h"
 
@@ -27,14 +27,14 @@
   if ((curl = curl_easy_init()) == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  curl_easy_setopt(curl, CURLOPT_URL, URL);
-  curl_easy_setopt(curl, CURLOPT_HEADER, 1L);
+  test_setopt(curl, CURLOPT_URL, URL);
+  test_setopt(curl, CURLOPT_HEADER, 1L);
 
   res = curl_easy_perform(curl);
 
   if(!res) {
     FILE *moo;
     res = curl_easy_getinfo(curl, CURLINFO_CONTENT_LENGTH_DOWNLOAD,
@@ -43,12 +43,14 @@
     if(moo) {
       fprintf(moo, "CL: %.0f\n", content_length);
       fclose(moo);
     }
   }
 
+test_cleanup:
+
   curl_easy_cleanup(curl);
   curl_global_cleanup();
 
   return (int)res;
 }
 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest: lib567.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest: lib568.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest: lib569.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest: lib570.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest: lib571.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/Makefile.am	2009-07-23 04:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/Makefile.am	2009-11-06 03:12:20.000000000 +0800
@@ -15,39 +15,42 @@
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: Makefile.am,v 1.84 2009-07-14 13:25:15 gknauf Exp $
+# $Id: Makefile.am,v 1.85 2009-11-05 15:04:04 yangtse Exp $
 ###########################################################################
 AUTOMAKE_OPTIONS = foreign nostdinc
 
 # Specify our include paths here, and do it relative to $(top_srcdir) and
 # $(top_builddir), to ensure that these paths which belong to the library
 # being currently built and tested are searched before the library which
 # might possibly already be installed in the system.
 #
-# $(top_builddir)/include is for libcurl's generated curl/curlbuild.h file
+# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h
+# $(top_builddir)/include for generated curlbuild.h included from lib/setup.h
 # $(top_srcdir)/include is for libcurl's external include files
 # $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file
 # $(top_srcdir)/lib is for libcurl's lib/setup.h and other "borrowed" files
 # $(top_builddir)/ares is for in-tree c-ares's generated ares_build.h file
 # $(top_srcdir)/ares is for in-tree c-ares's external include files
 
 if USE_EMBEDDED_ARES
-INCLUDES = -I$(top_builddir)/include \
-           -I$(top_srcdir)/include   \
-           -I$(top_builddir)/lib     \
-           -I$(top_srcdir)/lib       \
-           -I$(top_builddir)/ares    \
+INCLUDES = -I$(top_builddir)/include/curl \
+           -I$(top_builddir)/include      \
+           -I$(top_srcdir)/include        \
+           -I$(top_builddir)/lib          \
+           -I$(top_srcdir)/lib            \
+           -I$(top_builddir)/ares         \
            -I$(top_srcdir)/ares
 else
-INCLUDES = -I$(top_builddir)/include \
-           -I$(top_srcdir)/include   \
-           -I$(top_builddir)/lib     \
+INCLUDES = -I$(top_builddir)/include/curl \
+           -I$(top_builddir)/include      \
+           -I$(top_srcdir)/include        \
+           -I$(top_builddir)/lib          \
            -I$(top_srcdir)/lib 
 endif
 
 EXTRA_DIST = test75.pl test307.pl test610.pl test613.pl test1013.pl	\
 test1022.pl Makefile.inc
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/Makefile.in	2009-11-04 20:26:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/Makefile.in	2010-02-05 05:42:21.000000000 +0800
@@ -53,13 +53,14 @@
 	lib544$(EXEEXT) lib545$(EXEEXT) lib547$(EXEEXT) \
 	lib548$(EXEEXT) lib549$(EXEEXT) lib552$(EXEEXT) \
 	lib553$(EXEEXT) lib554$(EXEEXT) lib555$(EXEEXT) \
 	lib556$(EXEEXT) lib539$(EXEEXT) lib557$(EXEEXT) \
 	lib558$(EXEEXT) lib559$(EXEEXT) lib560$(EXEEXT) \
 	lib562$(EXEEXT) lib564$(EXEEXT) lib565$(EXEEXT) \
-	lib566$(EXEEXT)
+	lib566$(EXEEXT) lib567$(EXEEXT) lib568$(EXEEXT) \
+	lib569$(EXEEXT) lib570$(EXEEXT) lib571$(EXEEXT)
 subdir = tests/libtest
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/m4/curl-compilers.m4 \
 	$(top_srcdir)/m4/curl-confopts.m4 \
 	$(top_srcdir)/m4/curl-functions.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
@@ -315,12 +316,32 @@
 lib565_LDADD = $(LDADD)
 lib565_DEPENDENCIES = $(top_builddir)/lib/libcurl.la
 am_lib566_OBJECTS = lib566.$(OBJEXT) $(am__objects_1)
 lib566_OBJECTS = $(am_lib566_OBJECTS)
 lib566_LDADD = $(LDADD)
 lib566_DEPENDENCIES = $(top_builddir)/lib/libcurl.la
+am_lib567_OBJECTS = lib567.$(OBJEXT) $(am__objects_1)
+lib567_OBJECTS = $(am_lib567_OBJECTS)
+lib567_LDADD = $(LDADD)
+lib567_DEPENDENCIES = $(top_builddir)/lib/libcurl.la
+am_lib568_OBJECTS = lib568.$(OBJEXT) $(am__objects_1)
+lib568_OBJECTS = $(am_lib568_OBJECTS)
+lib568_LDADD = $(LDADD)
+lib568_DEPENDENCIES = $(top_builddir)/lib/libcurl.la
+am_lib569_OBJECTS = lib569.$(OBJEXT) $(am__objects_1)
+lib569_OBJECTS = $(am_lib569_OBJECTS)
+lib569_LDADD = $(LDADD)
+lib569_DEPENDENCIES = $(top_builddir)/lib/libcurl.la
+am_lib570_OBJECTS = lib570.$(OBJEXT) $(am__objects_1)
+lib570_OBJECTS = $(am_lib570_OBJECTS)
+lib570_LDADD = $(LDADD)
+lib570_DEPENDENCIES = $(top_builddir)/lib/libcurl.la
+am_lib571_OBJECTS = lib571.$(OBJEXT) $(am__objects_1)
+lib571_OBJECTS = $(am_lib571_OBJECTS)
+lib571_LDADD = $(LDADD)
+lib571_DEPENDENCIES = $(top_builddir)/lib/libcurl.la
 DEFAULT_INCLUDES = 
 depcomp = $(SHELL) $(top_srcdir)/depcomp
 am__depfiles_maybe = depfiles
 COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
 	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
 LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
@@ -344,13 +365,14 @@
 	$(lib543_SOURCES) $(lib544_SOURCES) $(lib545_SOURCES) \
 	$(lib547_SOURCES) $(lib548_SOURCES) $(lib549_SOURCES) \
 	$(lib552_SOURCES) $(lib553_SOURCES) $(lib554_SOURCES) \
 	$(lib555_SOURCES) $(lib556_SOURCES) $(lib557_SOURCES) \
 	$(lib558_SOURCES) $(lib559_SOURCES) $(lib560_SOURCES) \
 	$(lib562_SOURCES) $(lib564_SOURCES) $(lib565_SOURCES) \
-	$(lib566_SOURCES)
+	$(lib566_SOURCES) $(lib567_SOURCES) $(lib568_SOURCES) \
+	$(lib569_SOURCES) $(lib570_SOURCES) $(lib571_SOURCES)
 DIST_SOURCES = $(lib500_SOURCES) $(lib501_SOURCES) $(lib502_SOURCES) \
 	$(lib503_SOURCES) $(lib504_SOURCES) $(lib505_SOURCES) \
 	$(lib506_SOURCES) $(lib507_SOURCES) $(lib508_SOURCES) \
 	$(lib510_SOURCES) $(lib511_SOURCES) $(lib512_SOURCES) \
 	$(lib513_SOURCES) $(lib514_SOURCES) $(lib515_SOURCES) \
 	$(lib516_SOURCES) $(lib517_SOURCES) $(lib518_SOURCES) \
@@ -363,13 +385,14 @@
 	$(lib543_SOURCES) $(lib544_SOURCES) $(lib545_SOURCES) \
 	$(lib547_SOURCES) $(lib548_SOURCES) $(lib549_SOURCES) \
 	$(lib552_SOURCES) $(lib553_SOURCES) $(lib554_SOURCES) \
 	$(lib555_SOURCES) $(lib556_SOURCES) $(lib557_SOURCES) \
 	$(lib558_SOURCES) $(lib559_SOURCES) $(lib560_SOURCES) \
 	$(lib562_SOURCES) $(lib564_SOURCES) $(lib565_SOURCES) \
-	$(lib566_SOURCES)
+	$(lib566_SOURCES) $(lib567_SOURCES) $(lib568_SOURCES) \
+	$(lib569_SOURCES) $(lib570_SOURCES) $(lib571_SOURCES)
 ETAGS = etags
 CTAGS = ctags
 DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
 ACLOCAL = @ACLOCAL@
 AMDEP_FALSE = @AMDEP_FALSE@
 AMDEP_TRUE = @AMDEP_TRUE@
@@ -380,26 +403,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -410,13 +438,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -476,12 +503,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -555,37 +583,40 @@
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: Makefile.am,v 1.84 2009-07-14 13:25:15 gknauf Exp $
+# $Id: Makefile.am,v 1.85 2009-11-05 15:04:04 yangtse Exp $
 ###########################################################################
 AUTOMAKE_OPTIONS = foreign nostdinc
-@USE_EMBEDDED_ARES_FALSE@INCLUDES = -I$(top_builddir)/include \
-@USE_EMBEDDED_ARES_FALSE@           -I$(top_srcdir)/include   \
-@USE_EMBEDDED_ARES_FALSE@           -I$(top_builddir)/lib     \
+@USE_EMBEDDED_ARES_FALSE@INCLUDES = -I$(top_builddir)/include/curl \
+@USE_EMBEDDED_ARES_FALSE@           -I$(top_builddir)/include      \
+@USE_EMBEDDED_ARES_FALSE@           -I$(top_srcdir)/include        \
+@USE_EMBEDDED_ARES_FALSE@           -I$(top_builddir)/lib          \
 @USE_EMBEDDED_ARES_FALSE@           -I$(top_srcdir)/lib 
 
 
 # Specify our include paths here, and do it relative to $(top_srcdir) and
 # $(top_builddir), to ensure that these paths which belong to the library
 # being currently built and tested are searched before the library which
 # might possibly already be installed in the system.
 #
-# $(top_builddir)/include is for libcurl's generated curl/curlbuild.h file
+# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h
+# $(top_builddir)/include for generated curlbuild.h included from lib/setup.h
 # $(top_srcdir)/include is for libcurl's external include files
 # $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file
 # $(top_srcdir)/lib is for libcurl's lib/setup.h and other "borrowed" files
 # $(top_builddir)/ares is for in-tree c-ares's generated ares_build.h file
 # $(top_srcdir)/ares is for in-tree c-ares's external include files
-@USE_EMBEDDED_ARES_TRUE@INCLUDES = -I$(top_builddir)/include \
-@USE_EMBEDDED_ARES_TRUE@           -I$(top_srcdir)/include   \
-@USE_EMBEDDED_ARES_TRUE@           -I$(top_builddir)/lib     \
-@USE_EMBEDDED_ARES_TRUE@           -I$(top_srcdir)/lib       \
-@USE_EMBEDDED_ARES_TRUE@           -I$(top_builddir)/ares    \
+@USE_EMBEDDED_ARES_TRUE@INCLUDES = -I$(top_builddir)/include/curl \
+@USE_EMBEDDED_ARES_TRUE@           -I$(top_builddir)/include      \
+@USE_EMBEDDED_ARES_TRUE@           -I$(top_srcdir)/include        \
+@USE_EMBEDDED_ARES_TRUE@           -I$(top_builddir)/lib          \
+@USE_EMBEDDED_ARES_TRUE@           -I$(top_srcdir)/lib            \
+@USE_EMBEDDED_ARES_TRUE@           -I$(top_builddir)/ares         \
 @USE_EMBEDDED_ARES_TRUE@           -I$(top_srcdir)/ares
 
 EXTRA_DIST = test75.pl test307.pl test610.pl test613.pl test1013.pl	\
 test1022.pl Makefile.inc
 
 
@@ -660,12 +691,17 @@
 lib560_SOURCES = lib560.c $(SUPPORTFILES)
 lib562_SOURCES = lib562.c $(SUPPORTFILES)
 lib564_SOURCES = lib564.c $(SUPPORTFILES) $(TESTUTIL)
 lib565_SOURCES = lib510.c $(SUPPORTFILES)
 lib565_CFLAGS = -DLIB565
 lib566_SOURCES = lib566.c $(SUPPORTFILES)
+lib567_SOURCES = lib567.c $(SUPPORTFILES)
+lib568_SOURCES = lib568.c $(SUPPORTFILES)
+lib569_SOURCES = lib569.c $(SUPPORTFILES)
+lib570_SOURCES = lib570.c $(SUPPORTFILES)
+lib571_SOURCES = lib571.c $(SUPPORTFILES)
 all: all-am
 
 .SUFFIXES:
 .SUFFIXES: .c .lo .o .obj
 $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/Makefile.inc $(am__configure_deps)
 	@for dep in $?; do \
@@ -865,12 +901,27 @@
 lib565$(EXEEXT): $(lib565_OBJECTS) $(lib565_DEPENDENCIES) 
 	@rm -f lib565$(EXEEXT)
 	$(LINK) $(lib565_LDFLAGS) $(lib565_OBJECTS) $(lib565_LDADD) $(LIBS)
 lib566$(EXEEXT): $(lib566_OBJECTS) $(lib566_DEPENDENCIES) 
 	@rm -f lib566$(EXEEXT)
 	$(LINK) $(lib566_LDFLAGS) $(lib566_OBJECTS) $(lib566_LDADD) $(LIBS)
+lib567$(EXEEXT): $(lib567_OBJECTS) $(lib567_DEPENDENCIES) 
+	@rm -f lib567$(EXEEXT)
+	$(LINK) $(lib567_LDFLAGS) $(lib567_OBJECTS) $(lib567_LDADD) $(LIBS)
+lib568$(EXEEXT): $(lib568_OBJECTS) $(lib568_DEPENDENCIES) 
+	@rm -f lib568$(EXEEXT)
+	$(LINK) $(lib568_LDFLAGS) $(lib568_OBJECTS) $(lib568_LDADD) $(LIBS)
+lib569$(EXEEXT): $(lib569_OBJECTS) $(lib569_DEPENDENCIES) 
+	@rm -f lib569$(EXEEXT)
+	$(LINK) $(lib569_LDFLAGS) $(lib569_OBJECTS) $(lib569_LDADD) $(LIBS)
+lib570$(EXEEXT): $(lib570_OBJECTS) $(lib570_DEPENDENCIES) 
+	@rm -f lib570$(EXEEXT)
+	$(LINK) $(lib570_LDFLAGS) $(lib570_OBJECTS) $(lib570_LDADD) $(LIBS)
+lib571$(EXEEXT): $(lib571_OBJECTS) $(lib571_DEPENDENCIES) 
+	@rm -f lib571$(EXEEXT)
+	$(LINK) $(lib571_LDFLAGS) $(lib571_OBJECTS) $(lib571_LDADD) $(LIBS)
 
 mostlyclean-compile:
 	-rm -f *.$(OBJEXT)
 
 distclean-compile:
 	-rm -f *.tab.c
@@ -943,12 +994,17 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib560.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib562.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib564.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib565-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib565-lib510.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib566.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib567.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib568.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib569.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib570.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib571.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testutil.Po@am__quote@
 
 .c.o:
 @am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
 @am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/Makefile.inc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/Makefile.inc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/Makefile.inc	2009-10-31 06:32:37.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/Makefile.inc	2010-01-30 22:30:27.000000000 +0800
@@ -7,13 +7,14 @@
 # These are all libcurl test programs
 noinst_PROGRAMS = lib500 lib501 lib502 lib503 lib504 lib505 lib506	\
   lib507 lib508 lib510 lib511 lib512 lib513 lib514 lib515 lib516	\
   lib517 lib518 lib519 lib520 lib521 lib523 lib524 lib525 lib526 lib527	\
   lib529 lib530 lib532 lib533 lib536 lib537 lib540 lib541 lib542 lib543 \
   lib544 lib545 lib547 lib548 lib549 lib552 lib553 lib554 lib555 lib556 \
-  lib539 lib557 lib558 lib559 lib560 lib562 lib564 lib565 lib566
+  lib539 lib557 lib558 lib559 lib560 lib562 lib564 lib565 lib566 lib567 \
+  lib568 lib569 lib570 lib571
 
 lib500_SOURCES = lib500.c $(SUPPORTFILES)
 
 lib501_SOURCES = lib501.c $(SUPPORTFILES)
 
 lib502_SOURCES = lib502.c $(SUPPORTFILES) $(TESTUTIL)
@@ -128,6 +129,17 @@
 lib564_SOURCES = lib564.c $(SUPPORTFILES) $(TESTUTIL)
 
 lib565_SOURCES = lib510.c $(SUPPORTFILES)
 lib565_CFLAGS = -DLIB565
 
 lib566_SOURCES = lib566.c $(SUPPORTFILES)
+
+lib567_SOURCES = lib567.c $(SUPPORTFILES)
+
+lib568_SOURCES = lib568.c $(SUPPORTFILES)
+
+lib569_SOURCES = lib569.c $(SUPPORTFILES)
+
+lib570_SOURCES = lib570.c $(SUPPORTFILES)
+
+lib571_SOURCES = lib571.c $(SUPPORTFILES)
+
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/test.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/test.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/libtest/test.h	2009-07-23 04:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/libtest/test.h	2010-02-09 16:43:17.000000000 +0800
@@ -2,20 +2,22 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: test.h,v 1.23 2009-07-14 13:25:15 gknauf Exp $
+ * $Id: test.h,v 1.25 2010-02-05 18:07:20 yangtse Exp $
  */
 
 /* Now include the setup.h file from libcurl's private libdir (the source
    version, but that might include "curl_config.h" from the build dir so we
    need both of them in the include path), so that we get good in-depth
    knowledge about the system we're building this on */
 
+#define CURL_NO_OLDIES
+
 #include "setup.h"
 
 #include <curl/curl.h>
 #include <stdio.h>
 #include <string.h>
 #include <stdlib.h>
@@ -37,12 +39,15 @@
 #  include "select.h"
 #endif
 
 #define TEST_ERR_MAJOR_BAD     100
 #define TEST_ERR_RUNS_FOREVER   99
 
+#define test_setopt(A,B,C) \
+  if((res = curl_easy_setopt((A),(B),(C))) != CURLE_OK) goto test_cleanup
+
 extern char *libtest_arg2; /* set by first.c to the argv[2] or NULL */
 extern char *libtest_arg3; /* set by first.c to the argv[3] or NULL */
 
 /* argc and argv as passed in to the main() function */
 extern int test_argc;
 extern char **test_argv;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/Makefile.am	2009-08-12 05:48:59.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/Makefile.am	2010-02-02 06:53:00.000000000 +0800
@@ -15,22 +15,23 @@
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: Makefile.am,v 1.49 2009-08-11 21:48:59 bagder Exp $
+# $Id: Makefile.am,v 1.54 2010-02-01 12:05:08 yangtse Exp $
 ###########################################################################
 
 HTMLPAGES = testcurl.html runtests.html
 PDFPAGES = testcurl.pdf runtests.pdf
 
-EXTRA_DIST = ftpserver.pl httpserver.pl httpsserver.pl runtests.pl getpart.pm \
+EXTRA_DIST = ftpserver.pl httpserver.pl secureserver.pl runtests.pl getpart.pm \
  FILEFORMAT README stunnel.pem memanalyze.pl testcurl.pl valgrind.pm ftp.pm   \
  sshserver.pl sshhelp.pm testcurl.1 runtests.1 $(HTMLPAGES) $(PDFPAGES) \
- CMakeLists.txt certs/scripts/*.sh certs/Server* certs/EdelCurlRoot*
+ CMakeLists.txt certs/scripts/*.sh certs/Server* certs/EdelCurlRoot* \
+ serverhelp.pm tftpserver.pl rtspserver.pl
 
 SUBDIRS = data server libtest
 
 PERLFLAGS = -I$(srcdir)
 
 CLEANFILES = .http.pid .https.pid .ftp.pid .ftps.pid
@@ -45,13 +46,13 @@
 TEST_Q =
 TEST_F =
 TEST_T =
 else # if not cross-compiling:
 TEST = srcdir=$(srcdir) $(PERL) $(PERLFLAGS) $(srcdir)/runtests.pl
 TEST_Q = -a -s
-TEST_F = -a -p
+TEST_F = -a -p -r
 TEST_T = -a -t
 endif
 
 test: all
 	$(TEST)
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/Makefile.in	2009-11-04 20:26:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/Makefile.in	2010-02-05 05:42:21.000000000 +0800
@@ -31,13 +31,13 @@
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: Makefile.am,v 1.49 2009-08-11 21:48:59 bagder Exp $
+# $Id: Makefile.am,v 1.54 2010-02-01 12:05:08 yangtse Exp $
 ###########################################################################
 srcdir = @srcdir@
 top_srcdir = @top_srcdir@
 VPATH = @srcdir@
 pkgdatadir = $(datadir)/@PACKAGE@
 pkglibdir = $(libdir)/@PACKAGE@
@@ -99,26 +99,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -129,13 +134,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -195,12 +199,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -255,26 +260,27 @@
 sharedstatedir = @sharedstatedir@
 subdirs = @subdirs@
 sysconfdir = @sysconfdir@
 target_alias = @target_alias@
 HTMLPAGES = testcurl.html runtests.html
 PDFPAGES = testcurl.pdf runtests.pdf
-EXTRA_DIST = ftpserver.pl httpserver.pl httpsserver.pl runtests.pl getpart.pm \
+EXTRA_DIST = ftpserver.pl httpserver.pl secureserver.pl runtests.pl getpart.pm \
  FILEFORMAT README stunnel.pem memanalyze.pl testcurl.pl valgrind.pm ftp.pm   \
  sshserver.pl sshhelp.pm testcurl.1 runtests.1 $(HTMLPAGES) $(PDFPAGES) \
- CMakeLists.txt certs/scripts/*.sh certs/Server* certs/EdelCurlRoot*
+ CMakeLists.txt certs/scripts/*.sh certs/Server* certs/EdelCurlRoot* \
+ serverhelp.pm tftpserver.pl rtspserver.pl
 
 SUBDIRS = data server libtest
 PERLFLAGS = -I$(srcdir)
 CLEANFILES = .http.pid .https.pid .ftp.pid .ftps.pid
 MAN2HTML = roffit < $< >$@
 @CROSSCOMPILING_FALSE@TEST = srcdir=$(srcdir) $(PERL) $(PERLFLAGS) $(srcdir)/runtests.pl
 @CROSSCOMPILING_TRUE@TEST = @echo "NOTICE: we can't run the tests when cross-compiling!"
 @CROSSCOMPILING_FALSE@TEST_Q = -a -s
 @CROSSCOMPILING_TRUE@TEST_Q = 
-@CROSSCOMPILING_FALSE@TEST_F = -a -p
+@CROSSCOMPILING_FALSE@TEST_F = -a -p -r
 @CROSSCOMPILING_TRUE@TEST_F = 
 @CROSSCOMPILING_FALSE@TEST_T = -a -t
 @CROSSCOMPILING_TRUE@TEST_T = 
 all: all-recursive
 
 .SUFFIXES:
@@ -285,15 +291,15 @@
 	    *$$dep*) \
 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
 		&& exit 0; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  tests/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  tests/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  tests/Makefile
+	  $(AUTOMAKE) --foreign  tests/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/README /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/README
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/README	2009-03-28 05:57:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/README	2009-12-13 06:46:21.000000000 +0800
@@ -9,30 +9,34 @@
 Requires:
   perl (and a unix-style shell)
   diff (when a test fails, a diff is shown)
   stunnel (for HTTPS and FTPS tests)
   OpenSSH or SunSSH (for SCP, SFTP and SOCKS4/5 tests)
 
-TCP ports used by default:
+Ports used by default:
 
-  - 8990 on localhost for HTTP tests
-  - 8991 on localhost for HTTPS tests
-  - 8994 on localhost for HTTP IPv6 tests
-  - 8992 on localhost for FTP tests
-  - 8995 on localhost for FTP (2) tests
-  - 8993 on localhost for FTPS tests
-  - 8996 on localhost for FTP IPv6 tests
-  - 8997 on localhost for TFTP tests
-  - 8999 on localhost for SCP/SFTP tests
-  - 9000 on localhost for SOCKS tests
-
-  The test suite runs simple FTP, HTTP and TFTP servers on these ports to
-  which it makes requests.  For SSL tests, it runs stunnel to handle
-  encryption to the regular servers. For SSH, it runs a standard OpenSSH
-  server. For SOCKS4/5 tests SSH is used to perform the SOCKS functionality
-  and requires a SSH client and server.
+  - TCP/8990 for HTTP
+  - TCP/8991 for HTTPS
+  - TCP/8992 for FTP
+  - TCP/8993 for FTPS
+  - TCP/8994 for HTTP IPv6
+  - TCP/8995 for FTP (2)
+  - TCP/8996 for FTP IPv6
+  - UDP/8997 for TFTP
+  - UDP/8998 for TFTP IPv6
+  - TCP/8999 for SCP/SFTP
+  - TCP/9000 for SOCKS
+  - TCP/9001 for POP3
+  - TCP/9002 for IMAP
+  - TCP/9003 for SMTP
+
+  The test suite runs simple FTP, POP3, IMAP, SMTP, HTTP and TFTP stand-alone
+  servers on these ports to which it makes requests.  For SSL tests, it runs
+  stunnel to handle encryption to the regular servers. For SSH, it runs a
+  standard OpenSSH server. For SOCKS4/5 tests SSH is used to perform the SOCKS
+  functionality and requires a SSH client and server.
 
   The base port number shown above can be changed using runtests' -b option
   to allow running more than one instance of the test suite simultaneously
   on one machine.
 
 Run:
@@ -51,22 +55,24 @@
   ranges with 'to', as in "./runtests 3 to 9" which runs the seven tests from
   3 to 9. Any test numbers starting with ! are disabled, as are any test
   numbers found in the file data/DISABLED (one per line).
 
 Shell startup scripts:
   Tests which use the ssh test server, SCP/SFTP/SOCKS tests, might be badly
-  influenced by the output of system wide or user specific shell startup scripts,
-  .bashrc, .profile, /etc/csh.cshrc, .login, /etc/bashrc, etc. which output text
-  messages or escape sequences on user login.  When these shell startup messages
-  or escape sequences are output they might corrupt the expected stream of data
-  which flows to the sftp-server or from the ssh client which can result in bad
-  test behaviour or even prevent the test server from running.
+  influenced by the output of system wide or user specific shell startup
+  scripts, .bashrc, .profile, /etc/csh.cshrc, .login, /etc/bashrc, etc. which
+  output text messages or escape sequences on user login.  When these shell
+  startup messages or escape sequences are output they might corrupt the
+  expected stream of data which flows to the sftp-server or from the ssh
+  client which can result in bad test behaviour or even prevent the test
+  server from running.
 
   If the test suite ssh or sftp server fails to start up and logs the message
   'Received message too long' then you are certainly suffering the unwanted
-  output of a shell startup script.  Locate, cleanup or adjust the shell script.
+  output of a shell startup script.  Locate, cleanup or adjust the shell
+  script.
 
 Memory:
   The test script will check that all allocated memory is freed properly IF
   curl has been built with the CURLDEBUG define set. The script will
   automatically detect if that is the case, and it will use the ../memanalyze
   script to analyze the memory debugging output.
@@ -125,22 +131,23 @@
   a workstation where perl is available, while curl itself is run on a remote
   system using ssh or some other remote execution method.  See the comments at
   the beginning of runtests.pl for details.
 
 TEST CASE NUMBERS
 
- So far, I've used this system:
+ So far, we've used this system:
 
  1   -  99   HTTP
  100 - 199   FTP*
  200 - 299   FILE*
  300 - 399   HTTPS
  400 - 499   FTPS
  500 - 599   libcurl source code tests, not using the curl command tool
  600 - 699   SCP/SFTP
  700 - 799   SOCKS4 (even numbers) and SOCK5 (odd numbers)
+ 800 - 899   POP3, IMAP, SMTP
  1000 - 1999 miscellaneous*
  2000 - x    multiple sequential protocols per test case*
 
  Since 30-apr-2003, there's nothing in the system that requires us to keep
  within these number series, and those sections marked with * actually
  contain tests for a variety of protocols. Each test case now specifies
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests: rtspserver.pl
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/runtests.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/runtests.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/runtests.1	2009-03-28 05:57:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/runtests.1	2010-02-04 02:16:48.000000000 +0800
@@ -15,16 +15,16 @@
 .\" * copies of the Software, and permit persons to whom the Software is
 .\" * furnished to do so, under the terms of the COPYING file.
 .\" *
 .\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 .\" * KIND, either express or implied.
 .\" *
-.\" * $Id: runtests.1,v 1.6 2008-07-27 02:34:27 danf Exp $
+.\" * $Id: runtests.1,v 1.7 2010-02-02 14:46:55 yangtse Exp $
 .\" **************************************************************************
 .\"
-.TH runtests.pl 1 "11 Oct 2007" "Curl 7.17.1" "runtests"
+.TH runtests.pl 1 "2 Feb 2010" "Curl 7.20.0" "runtests"
 .SH NAME
 runtests.pl \- run one or more test cases
 .SH SYNOPSIS
 .B runtests.pl [options] [test number] [!test number] [key word] [!key word]
 .SH DESCRIPTION
 \fIruntests.pl\fP runs one, several or all the existing test cases in curl's
@@ -70,12 +70,16 @@
 Disable the check for and use of valgrind.
 .IP "-p"
 Prints out all files in "log/" to stdout when a test case fails. Very
 practical when used in the automated and distributed tests since then the
 people checking the failures and the reasons for them might not have physical
 access to the machine and logs.
+.IP "-r"
+Display run time statistics. (Requires Perl Time::HiRes module)
+.IP "-rf"
+Display full run time statistics. (Requires Perl Time::HiRes module)
 .IP "-s"
 Shorter output. Speaks less than default.
 .IP "-t[num]"
 Selects a \fBtorture\fP test for the given tests. This makes runtests.pl first
 run the tests once and count the number of memory allocations made. It then
 reruns the test that number of times, each time forcing one of the allocations
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/runtests.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/runtests.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/runtests.html	2009-04-15 05:53:24.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/runtests.html	2010-02-09 18:07:55.000000000 +0800
@@ -67,12 +67,16 @@
 <p class="level0"><a name="-l"></a><span class="nroffip">-l</span> 
 <p class="level1">Lists all test case names. 
 <p class="level0"><a name="-n"></a><span class="nroffip">-n</span> 
 <p class="level1">Disable the check for and use of valgrind. 
 <p class="level0"><a name="-p"></a><span class="nroffip">-p</span> 
 <p class="level1">Prints out all files in "log/" to stdout when a test case fails. Very practical when used in the automated and distributed tests since then the people checking the failures and the reasons for them might not have physical access to the machine and logs. 
+<p class="level0"><a name="-r"></a><span class="nroffip">-r</span> 
+<p class="level1">Display run time statistics. (Requires Perl Time::HiRes module) 
+<p class="level0"><a name="-rf"></a><span class="nroffip">-rf</span> 
+<p class="level1">Display full run time statistics. (Requires Perl Time::HiRes module) 
 <p class="level0"><a name="-s"></a><span class="nroffip">-s</span> 
 <p class="level1">Shorter output. Speaks less than default. 
 <p class="level0"><a name="-tnum"></a><span class="nroffip">-t[num]</span> 
 <p class="level1">Selects a <span Class="bold">torture</span> test for the given tests. This makes runtests.pl first run the tests once and count the number of memory allocations made. It then reruns the test that number of times, each time forcing one of the allocations to fail until all allocs have been tested. By setting <span Class="emphasis">num</span> you can force the allocation with that number to be set to fail at once instead of looping through everyone, which is very handy when debugging and then often in combination with <a class="emphasis" href="#-g">-g</a>. 
 <p class="level0"><a name="-v"></a><span class="nroffip">-v</span> 
 <p class="level1">Enable verbose output. Speaks more than default. <a name="RUNNING"></a><h2 class="nroffsh">RUNNING TESTS</h2>
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/runtests.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/runtests.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/runtests.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/runtests.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/runtests.pl	2009-08-12 05:48:59.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/runtests.pl	2010-02-09 16:43:16.000000000 +0800
@@ -3,26 +3,26 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: runtests.pl,v 1.330 2009-08-11 21:48:59 bagder Exp $
+# $Id: runtests.pl,v 1.383 2010-02-06 17:31:09 yangtse Exp $
 ###########################################################################
 
 # Experimental hooks are available to run tests remotely on machines that
 # are able to run curl but are unable to run the test harness.  
 # The following sections need to be modified:
 #
@@ -55,35 +55,52 @@
 
 
 # These should be the only variables that might be needed to get edited:
 
 BEGIN {
     @INC=(@INC, $ENV{'srcdir'}, ".");
+    # run time statistics needs Time::HiRes
+    eval {
+        no warnings "all";
+        require Time::HiRes;
+        import  Time::HiRes qw( time );
+    }
 }
 
 use strict;
-#use Time::HiRes qw( gettimeofday );
-#use warnings;
+use warnings;
 use Cwd;
 
+# Subs imported from serverhelp module
+use serverhelp qw(
+    serverfactors
+    servername_id
+    servername_str
+    servername_canon
+    server_pidfilename
+    server_logfilename
+    );
+
 # Variables and subs imported from sshhelp module
 use sshhelp qw(
     $sshdexe
     $sshexe
     $sftpexe
     $sshconfig
     $sftpconfig
+    $sshdlog
     $sshlog
     $sftplog
     $sftpcmds
     display_sshdconfig
     display_sshconfig
     display_sftpconfig
     display_sshdlog
     display_sshlog
     display_sftplog
+    exe_ext
     find_sshd
     find_ssh
     find_sftp
     sshversioninfo
     );
 
@@ -106,15 +123,23 @@
 my $FTPSPORT; # FTPS server port
 my $FTP6PORT; # FTP IPv6 server port
 my $TFTPPORT; # TFTP
 my $TFTP6PORT; # TFTP
 my $SSHPORT; # SCP/SFTP
 my $SOCKSPORT; # SOCKS4/5 port
+my $POP3PORT; # POP3
+my $POP36PORT; # POP3 IPv6 server port
+my $IMAPPORT; # IMAP
+my $IMAP6PORT; # IMAP IPv6 server port
+my $SMTPPORT; # SMTP
+my $SMTP6PORT; # SMTP IPv6 server port
+my $RTSPPORT; # RTSP
+my $RTSP6PORT; # RTSP IPv6 server port
 
 my $srcdir = $ENV{'srcdir'} || '.';
-my $CURL="../src/curl"; # what curl executable to run on the tests
+my $CURL="../src/curl".exe_ext(); # what curl executable to run on the tests
 my $VCURL=$CURL;   # what curl binary to use to verify the servers with
                    # VCURL is handy to set to the system one when the one you
                    # just built hangs or crashes and thus prevent verification
 my $DBGCURL=$CURL; #"../src/.libs/curl";  # alternative for debugging
 my $LOGDIR="log";
 my $TESTDIR="$srcdir/data";
@@ -133,24 +158,12 @@
 # $TESTCASES="1 2 3 7 8";
 
 #######################################################################
 # No variables below this point should need to be modified
 #
 
-my $HTTPPIDFILE=".http.pid";
-my $HTTP6PIDFILE=".http6.pid";
-my $HTTPSPIDFILE=".https.pid";
-my $FTPPIDFILE=".ftp.pid";
-my $FTP6PIDFILE=".ftp6.pid";
-my $FTP2PIDFILE=".ftp2.pid";
-my $FTPSPIDFILE=".ftps.pid";
-my $TFTPPIDFILE=".tftpd.pid";
-my $TFTP6PIDFILE=".tftp6.pid";
-my $SSHPIDFILE=".ssh.pid";
-my $SOCKSPIDFILE=".socks.pid";
-
 # invoke perl like this:
 my $perl="perl -I$srcdir";
 my $server_response_maxtime=13;
 
 my $debug_build=0; # curl built with --enable-debug
 my $curl_debug=0;  # curl built with --enable-curldebug (memory tracking)
@@ -163,13 +176,13 @@
 my $memanalyze="$perl $srcdir/memanalyze.pl";
 
 my $pwd = getcwd();          # current working directory
 
 my $start;
 my $forkserver=0;
-my $ftpchecktime; # time it took to verify our test FTP server
+my $ftpchecktime=1; # time it took to verify our test FTP server
 
 my $stunnel = checkcmd("stunnel4") || checkcmd("stunnel");
 my $valgrind = checktestcmd("valgrind");
 my $valgrind_logfile="--logfile";
 my $valgrind_tool;
 my $gdb = checktestcmd("gdb");
@@ -208,12 +221,22 @@
 my $sshdverstr;  # for socks server, ssh daemon version string
 my $sshderror;   # for socks server, ssh daemon version error
 
 my $defserverlogslocktimeout = 20; # timeout to await server logs lock removal
 my $defpostcommanddelay = 0; # delay between command and postcheck sections
 
+my $timestats;   # time stamping and stats generation
+my $fullstats;   # show time stats for every single test
+my %timeprepini; # timestamp for each test preparation start
+my %timesrvrini; # timestamp for each test required servers verification start
+my %timesrvrend; # timestamp for each test required servers verification end
+my %timetoolini; # timestamp for each test command run starting
+my %timetoolend; # timestamp for each test command run stopping
+my %timesrvrlog; # timestamp for each test server logs lock removal
+my %timevrfyend; # timestamp for each test result verification end
+
 my $testnumcheck; # test number, set in singletest sub.
 
 #######################################################################
 # variables the command line options may set
 #
 
@@ -225,36 +248,31 @@
 my $keepoutfiles; # keep stdout and stderr files after tests
 my $listonly;     # only list the tests
 my $postmortem;   # display detailed info about failed tests
 
 my %run;          # running server
 my %doesntrun;    # servers that don't work, identified by pidfile
+my %serverpidfile;# all server pid file names, identified by server id
+my %runcert;      # cert file currently in use by an ssl running server
 
 # torture test variables
 my $torture;
 my $tortnum;
 my $tortalloc;
 
-# open and close each time to allow removal at any time
+#######################################################################
+# logmsg is our general message logging subroutine.
+#
 sub logmsg {
-# uncomment the Time::HiRes usage for this
-#    my ($seconds, $microseconds) = gettimeofday;
-#    my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
-#        localtime($seconds);
-    my $t;
-    if(1) {
-#        $t = sprintf ("%02d:%02d:%02d.%06d ", $hour, $min, $sec,
-#                      $microseconds);
-    }
     for(@_) {
-        print "${t}$_";
+        print "$_";
     }
 }
 
 # get the name of the current user
-my $USER = $ENV{USER};	# Linux
+my $USER = $ENV{USER};          # Linux
 if (!$USER) {
     $USER = $ENV{USERNAME};	# Windows
     if (!$USER) {
         $USER = $ENV{LOGNAME};	# Some UNIX (I think)
     }
 }
@@ -263,37 +281,63 @@
 $ENV{'CURL_MEMDEBUG'} = $memdump;
 $ENV{'HOME'}=$pwd;
 
 sub catch_zap {
     my $signame = shift;
     logmsg "runtests.pl received SIG$signame, exiting\n";
-    stopservers(1);
+    stopservers($verbose);
     die "Somebody sent me a SIG$signame";
 }
 $SIG{INT} = \&catch_zap;
-$SIG{KILL} = \&catch_zap;
+$SIG{TERM} = \&catch_zap;
 
 ##########################################################################
 # Clear all possible '*_proxy' environment variables for various protocols
 # to prevent them to interfere with our testing!
 
 my $protocol;
 foreach $protocol (('ftp', 'http', 'ftps', 'https', 'no')) {
     my $proxy = "${protocol}_proxy";
     # clear lowercase version
-    $ENV{$proxy}=undef;
+    delete $ENV{$proxy} if($ENV{$proxy});
     # clear uppercase version
-    $ENV{uc($proxy)}=undef;
+    delete $ENV{uc($proxy)} if($ENV{uc($proxy)});
 }
 
 # make sure we don't get affected by other variables that control our
 # behaviour
 
-$ENV{'SSL_CERT_DIR'}=undef;
-$ENV{'SSL_CERT_PATH'}=undef;
-$ENV{'CURL_CA_BUNDLE'}=undef;
+delete $ENV{'SSL_CERT_DIR'} if($ENV{'SSL_CERT_DIR'});
+delete $ENV{'SSL_CERT_PATH'} if($ENV{'SSL_CERT_PATH'});
+delete $ENV{'CURL_CA_BUNDLE'} if($ENV{'CURL_CA_BUNDLE'});
+
+#######################################################################
+# Load serverpidfile hash with pidfile names for all possible servers.
+#
+sub init_serverpidfile_hash {
+  for my $proto (('ftp', 'http', 'imap', 'pop3', 'smtp')) {
+    for my $ssl (('', 's')) {
+      for my $ipvnum ((4, 6)) {
+        for my $idnum ((1, 2)) {
+          my $serv = servername_id("$proto$ssl", $ipvnum, $idnum);
+          my $pidf = server_pidfilename("$proto$ssl", $ipvnum, $idnum);
+          $serverpidfile{$serv} = $pidf;
+        }
+      }
+    }
+  }
+  for my $proto (('tftp', 'sftp', 'socks', 'ssh', 'rtsp')) {
+    for my $ipvnum ((4, 6)) {
+      for my $idnum ((1, 2)) {
+        my $serv = servername_id($proto, $ipvnum, $idnum);
+        my $pidf = server_pidfilename($proto, $ipvnum, $idnum);
+        $serverpidfile{$serv} = $pidf;
+      }
+    }
+  }
+}
 
 #######################################################################
 # Check if a given child process has just died. Reaps it if so.
 #
 sub checkdied {
     use POSIX ":sys_wait_h";
@@ -399,12 +443,21 @@
             return "$_/$cmd";
         }
     }
 }
 
 #######################################################################
+# Get the list of tests that the tests/data/Makefile.am knows about!
+#
+my $disttests;
+sub get_disttests {
+    my @dist = `cd data && make show`;
+    $disttests = join("", @dist);
+}
+
+#######################################################################
 # Check for a command in the PATH of the machine running curl.
 #
 sub checktestcmd {
     my ($cmd)=@_;
     return checkcmd($cmd);
 }
@@ -415,34 +468,33 @@
 sub runclient {
     my ($cmd)=@_;
     return system($cmd);
 
 # This is one way to test curl on a remote machine
 #    my $out = system("ssh $CLIENTIP cd \'$pwd\' \\; \'$cmd\'");
-#    sleep 2;	# time to allow the NFS server to be updated
+#    sleep 2;    # time to allow the NFS server to be updated
 #    return $out;
 }
 
 #######################################################################
 # Run the application under test and return its stdout
 #
 sub runclientoutput {
     my ($cmd)=@_;
     return `$cmd`;
 
 # This is one way to test curl on a remote machine
 #    my @out = `ssh $CLIENTIP cd \'$pwd\' \\; \'$cmd\'`;
-#    sleep 2;	# time to allow the NFS server to be updated
+#    sleep 2;    # time to allow the NFS server to be updated
 #    return @out;
  }
 
 #######################################################################
 # Memory allocation test and failure torture testing.
 #
 sub torture {
-    use POSIX "strftime";
     my $testcmd = shift;
     my $gdbline = shift;
 
     # remove memdump first to be sure we get a new nice and clean one
     unlink($memdump);
 
@@ -473,33 +525,38 @@
         my $dumped_core;
 
         if($tortalloc && ($tortalloc != $limit)) {
             next;
         }
 
-        logmsg "Fail alloc no: $limit @ " . strftime ("%H:%M:%S", localtime) . "\r" if($verbose);
+        if($verbose) {
+            my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
+                localtime(time());
+            my $now = sprintf("%02d:%02d:%02d ", $hour, $min, $sec);
+            logmsg "Fail alloc no: $limit at $now\r";
+        }
 
         # make the memory allocation function number $limit return failure
         $ENV{'CURL_MEMLIMIT'} = $limit;
 
         # remove memdump first to be sure we get a new nice and clean one
         unlink($memdump);
 
-        logmsg "**> Alloc number $limit is now set to fail <**\n" if($gdbthis);
+        logmsg "*** Alloc number $limit is now set to fail ***\n" if($gdbthis);
 
-        my $ret;
+        my $ret = 0;
         if($gdbthis) {
             runclient($gdbline)
         }
         else {
             $ret = runclient($testcmd);
         }
-        #logmsg "$_ Returned " . $ret / 256 . "\n";
+        #logmsg "$_ Returned " . $ret >> 8 . "\n";
 
         # Now clear the variable again
-        $ENV{'CURL_MEMLIMIT'} = undef;
+        delete $ENV{'CURL_MEMLIMIT'} if($ENV{'CURL_MEMLIMIT'});
 
         if(-r "core") {
             # there's core file present now!
             logmsg " core dumped\n";
             $dumped_core = 1;
             $fail = 2;
@@ -527,191 +584,336 @@
                 logmsg `$memanalyze -l $memdump`;
                 $fail = 1;
             }
         }
         if($fail) {
             logmsg " Failed on alloc number $limit in test.\n",
-            " invoke with -t$limit to repeat this single case.\n";
+            " invoke with \"-t$limit\" to repeat this single case.\n";
             stopservers($verbose);
             return 1;
         }
     }
 
     logmsg "torture OK\n";
     return 0;
 }
 
 #######################################################################
-# stop the given test server (pid)
+# Stop a test server along with pids which aren't in the %run hash yet.
+# This also stops all servers which are relative to the given one.
 #
 sub stopserver {
-    my ($pid) = @_;
-
-    if(not defined $pid || $pid <= 0) {
-        return; # whad'da'ya wanna'da with no pid ?
-    }
-
-    # It might be more than one pid
-    # Send each one a SIGTERM to gracefully kill it
-
-    my @killed;
-    my @pids = split(/\s+/, $pid);
-    for (@pids) {
-        chomp($_);
-        if($_ =~ /^(\d+)$/) {
-            if(($1 > 0) && kill(0, $1)) {
-                if($verbose) {
-                    logmsg "RUN: Test server pid $1 signalled to die\n";
-                }
-                kill(15, $1); # die!
-                push @killed, $1;
-            }
-        }
-    }
-
-    # Give each process killed up to a few seconds to die, then send
-    # a SIGKILL to finish it off for good.
-    for (@killed) {
-        my $count = 5; # wait for this many seconds for server to die
-	while($count--) {
-            if (!kill(0, $_) || checkdied($_)) {
-                last;
-            }
-            sleep(1);
-        }
-        if ($count < 0) {
-            logmsg "RUN: forcing pid $_ to die with SIGKILL\n";
-            kill(9, $_); # die!
+    my ($server, $pidlist) = @_;
+    #
+    # kill sockfilter processes for pingpong relative server
+    #
+    if($server =~ /^(ftp|imap|pop3|smtp)s?(\d*)(-ipv6|)$/) {
+        my $proto  = $1;
+        my $idnum  = ($2 && ($2 > 1)) ? $2 : 1;
+        my $ipvnum = ($3 && ($3 =~ /6$/)) ? 6 : 4;
+        killsockfilters($proto, $ipvnum, $idnum, $verbose);
+    }
+    #
+    # All servers relative to the given one must be stopped also
+    #
+    my @killservers;
+    if($server =~ /^(ftp|http|imap|pop3|smtp)s(.*)$/) {
+        # given an ssl server, also kill non-ssl underlying one
+        push @killservers, "${1}${2}";
+    }
+    elsif($server =~ /^(ftp|http|imap|pop3|smtp)(.*)$/) {
+        # given a non-ssl server, also kill ssl piggybacking one
+        push @killservers, "${1}s${2}";
+    }
+    elsif($server =~ /^(socks)(.*)$/) {
+        # given an socks server, also kill ssh underlying one
+        push @killservers, "ssh${2}";
+    }
+    elsif($server =~ /^(ssh)(.*)$/) {
+        # given an ssh server, also kill socks piggybacking one
+        push @killservers, "socks${2}";
+    }
+    push @killservers, $server;
+    #
+    # kill given pids and server relative ones clearing them in %run hash
+    #
+    foreach my $server (@killservers) {
+        if($run{$server}) {
+            $pidlist .= "$run{$server} ";
+            $run{$server} = 0;
+        }
+        $runcert{$server} = 0 if($runcert{$server});
+    }
+    killpid($verbose, $pidlist);
+    #
+    # cleanup server pid files
+    #
+    foreach my $server (@killservers) {
+        my $pidfile = $serverpidfile{$server};
+        my $pid = processexists($pidfile);
+        if($pid > 0) {
+            logmsg "Warning: $server server unexpectedly alive\n";
+            killpid($verbose, $pid);
         }
+        unlink($pidfile) if(-f $pidfile);
     }
 }
 
 #######################################################################
 # Verify that the server that runs on $ip, $port is our server.  This also
 # implies that we can speak with it, as there might be occasions when the
 # server runs fine but we cannot talk to it ("Failed to connect to ::1: Can't
 # assign requested address" #
 
 sub verifyhttp {
-    my ($proto, $ip, $port) = @_;
-    my $cmd = "$VCURL --max-time $server_response_maxtime --output $LOGDIR/verifiedserver --insecure --silent --verbose --globoff \"$proto://$ip:$port/verifiedserver\" 2>$LOGDIR/verifyhttp";
-    my $pid;
+    my ($proto, $ipvnum, $idnum, $ip, $port) = @_;
+    my $server = servername_id($proto, $ipvnum, $idnum);
+    my $pid = 0;
+
+    my $verifyout = "$LOGDIR/".
+        servername_canon($proto, $ipvnum, $idnum) .'_verify.out';
+    unlink($verifyout) if(-f $verifyout);
+
+    my $verifylog = "$LOGDIR/".
+        servername_canon($proto, $ipvnum, $idnum) .'_verify.log';
+    unlink($verifylog) if(-f $verifylog);
+
+    my $flags = "--max-time $server_response_maxtime ";
+    $flags .= "--output $verifyout ";
+    $flags .= "--silent ";
+    $flags .= "--verbose ";
+    $flags .= "--globoff ";
+    $flags .= "--insecure " if($proto eq 'https');
+    $flags .= "\"$proto://$ip:$port/verifiedserver\"";
+
+    my $cmd = "$VCURL $flags 2>$verifylog";
 
     # verify if our/any server is running on this port
-    logmsg "CMD; $cmd\n" if ($verbose);
+    logmsg "RUN: $cmd\n" if($verbose);
     my $res = runclient($cmd);
 
     $res >>= 8; # rotate the result
-    my $data;
+    if($res & 128) {
+        logmsg "RUN: curl command died with a coredump\n";
+        return -1;
+    }
 
     if($res && $verbose) {
-        open(ERR, "<$LOGDIR/verifyhttp");
-        my @e = <ERR>;
-        close(ERR);
         logmsg "RUN: curl command returned $res\n";
-        for(@e) {
-            if($_ !~ /^([ \t]*)$/) {
-                logmsg "RUN: $_";
+        if(open(FILE, "<$verifylog")) {
+            while(my $string = <FILE>) {
+                logmsg "RUN: $string" if($string !~ /^([ \t]*)$/);
             }
+            close(FILE);
+        }
+    }
+
+    my $data;
+    if(open(FILE, "<$verifyout")) {
+        while(my $string = <FILE>) {
+            $data = $string;
+            last; # only want first line
         }
+        close(FILE);
     }
-    open(FILE, "<$LOGDIR/verifiedserver");
-    my @file=<FILE>;
-    close(FILE);
-    $data=$file[0]; # first line
 
-    if ( $data =~ /WE ROOLZ: (\d+)/ ) {
+    if($data && ($data =~ /WE ROOLZ: (\d+)/)) {
         $pid = 0+$1;
     }
     elsif($res == 6) {
         # curl: (6) Couldn't resolve host '::1'
         logmsg "RUN: failed to resolve host ($proto://$ip:$port/verifiedserver)\n";
         return -1;
     }
     elsif($data || ($res != 7)) {
-        logmsg "RUN: Unknown server is running on port $port\n";
+        logmsg "RUN: Unknown server on our $server port: $port\n";
         return -1;
     }
     return $pid;
 }
 
 #######################################################################
 # Verify that the server that runs on $ip, $port is our server.  This also
 # implies that we can speak with it, as there might be occasions when the
 # server runs fine but we cannot talk to it ("Failed to connect to ::1: Can't
 # assign requested address" #
 
 sub verifyftp {
-    my ($proto, $ip, $port) = @_;
-    my $pid;
+    my ($proto, $ipvnum, $idnum, $ip, $port) = @_;
+    my $server = servername_id($proto, $ipvnum, $idnum);
+    my $pid = 0;
     my $time=time();
-    my $extra;
+    my $extra="";
+
+    my $verifylog = "$LOGDIR/".
+        servername_canon($proto, $ipvnum, $idnum) .'_verify.log';
+    unlink($verifylog) if(-f $verifylog);
+
     if($proto eq "ftps") {
-    	$extra = "--insecure --ftp-ssl-control ";
+    	$extra .= "--insecure --ftp-ssl-control ";
     }
-    my $cmd="$VCURL --max-time $server_response_maxtime --silent --verbose --globoff $extra\"$proto://$ip:$port/verifiedserver\" 2>$LOGDIR/verifyftp";
+    elsif($proto eq "smtp") {
+        # SMTP is a bit different since it requires more options and it
+        # has _no_ output!
+        $extra .= "--mail-rcpt verifiedserver ";
+        $extra .= "--mail-from fake ";
+        $extra .= "--user localhost:unused ";
+        $extra .= "--upload /dev/null ";
+        $extra .= "--stderr - "; # move stderr to parse the verbose stuff
+    }
+
+    my $flags = "--max-time $server_response_maxtime ";
+    $flags .= "--silent ";
+    $flags .= "--verbose ";
+    $flags .= "--globoff ";
+    $flags .= $extra;
+    $flags .= "\"$proto://$ip:$port/verifiedserver\"";
+
+    my $cmd = "$VCURL $flags 2>$verifylog";
+
     # check if this is our server running on this port:
-    my @data=runclientoutput($cmd);
     logmsg "RUN: $cmd\n" if($verbose);
-    my $line;
+    my @data = runclientoutput($cmd);
+
+    my $res = $? >> 8; # rotate the result
+    if($res & 128) {
+        logmsg "RUN: curl command died with a coredump\n";
+        return -1;
+    }
 
-    foreach $line (@data) {
-        if ( $line =~ /WE ROOLZ: (\d+)/ ) {
+    foreach my $line (@data) {
+        if($line =~ /WE ROOLZ: (\d+)/) {
             # this is our test server with a known pid!
             $pid = 0+$1;
             last;
         }
     }
-    if($pid <= 0 && $data[0]) {
+    if($pid <= 0 && @data && $data[0]) {
         # this is not a known server
-        logmsg "RUN: Unknown server on our FTP port: $port\n";
+        logmsg "RUN: Unknown server on our $server port: $port\n";
         return 0;
     }
     # we can/should use the time it took to verify the FTP server as a measure
     # on how fast/slow this host/FTP is.
-    my $took = time()-$time;
+    my $took = int(0.5+time()-$time);
 
     if($verbose) {
-        logmsg "RUN: Verifying our test FTP server took $took seconds\n";
+        logmsg "RUN: Verifying our test $server server took $took seconds\n";
     }
-    $ftpchecktime = $took?$took:1; # make sure it never is zero
+    $ftpchecktime = $took>=1?$took:1; # make sure it never is below 1
 
     return $pid;
 }
 
 #######################################################################
+# Verify that the server that runs on $ip, $port is our server.  This also
+# implies that we can speak with it, as there might be occasions when the
+# server runs fine but we cannot talk to it ("Failed to connect to ::1: Can't
+# assign requested address" #
+
+sub verifyrtsp {
+    my ($proto, $ipvnum, $idnum, $ip, $port) = @_;
+    my $server = servername_id($proto, $ipvnum, $idnum);
+    my $pid = 0;
+
+    my $verifyout = "$LOGDIR/".
+        servername_canon($proto, $ipvnum, $idnum) .'_verify.out';
+    unlink($verifyout) if(-f $verifyout);
+
+    my $verifylog = "$LOGDIR/".
+        servername_canon($proto, $ipvnum, $idnum) .'_verify.log';
+    unlink($verifylog) if(-f $verifylog);
+
+    my $flags = "--max-time $server_response_maxtime ";
+    $flags .= "--output $verifyout ";
+    $flags .= "--silent ";
+    $flags .= "--verbose ";
+    $flags .= "--globoff ";
+    # currently verification is done using http
+    $flags .= "\"http://$ip:$port/verifiedserver\"";
+
+    my $cmd = "$VCURL $flags 2>$verifylog";
+
+    # verify if our/any server is running on this port
+    logmsg "RUN: $cmd\n" if($verbose);
+    my $res = runclient($cmd);
+
+    $res >>= 8; # rotate the result
+    if($res & 128) {
+        logmsg "RUN: curl command died with a coredump\n";
+        return -1;
+    }
+
+    if($res && $verbose) {
+        logmsg "RUN: curl command returned $res\n";
+        if(open(FILE, "<$verifylog")) {
+            while(my $string = <FILE>) {
+                logmsg "RUN: $string" if($string !~ /^([ \t]*)$/);
+            }
+            close(FILE);
+        }
+    }
+
+    my $data;
+    if(open(FILE, "<$verifyout")) {
+        while(my $string = <FILE>) {
+            $data = $string;
+            last; # only want first line
+        }
+        close(FILE);
+    }
+
+    if($data && ($data =~ /RTSP_SERVER WE ROOLZ: (\d+)/)) {
+        $pid = 0+$1;
+    }
+    elsif($res == 6) {
+        # curl: (6) Couldn't resolve host '::1'
+        logmsg "RUN: failed to resolve host ($proto://$ip:$port/verifiedserver)\n";
+        return -1;
+    }
+    elsif($data || ($res != 7)) {
+        logmsg "RUN: Unknown server on our $server port: $port\n";
+        return -1;
+    }
+    return $pid;
+}
+
+#######################################################################
 # Verify that the ssh server has written out its pidfile, recovering
 # the pid from the file and returning it if a process with that pid is
 # actually alive.
 
 sub verifyssh {
-    my ($proto, $ip, $port) = @_;
+    my ($proto, $ipvnum, $idnum, $ip, $port) = @_;
+    my $server = servername_id($proto, $ipvnum, $idnum);
+    my $pidfile = server_pidfilename($proto, $ipvnum, $idnum);
     my $pid = 0;
-    if(open(FILE, "<$SSHPIDFILE")) {
+    if(open(FILE, "<$pidfile")) {
         $pid=0+<FILE>;
         close(FILE);
     }
     if($pid > 0) {
         # if we have a pid it is actually our ssh server,
         # since runsshserver() unlinks previous pidfile
         if(!kill(0, $pid)) {
             logmsg "RUN: SSH server has died after starting up\n";
             checkdied($pid);
-            unlink($SSHPIDFILE);
+            unlink($pidfile);
             $pid = -1;
         }
     }
     return $pid;
 }
 
 #######################################################################
 # Verify that we can connect to the sftp server, properly authenticate
 # with generated config and key files and run a simple remote pwd.
 
 sub verifysftp {
-    my ($proto, $ip, $port) = @_;
+    my ($proto, $ipvnum, $idnum, $ip, $port) = @_;
+    my $server = servername_id($proto, $ipvnum, $idnum);
     my $verified = 0;
     # Find out sftp client canonical file name
     my $sftp = find_sftp();
     if(!$sftp) {
         logmsg "RUN: SFTP server cannot find $sftpexe\n";
         return -1;
@@ -741,25 +943,27 @@
 
 
 #######################################################################
 # STUB for verifying socks
 
 sub verifysocks {
-    my ($proto, $ip, $port) = @_;
+    my ($proto, $ipvnum, $idnum, $ip, $port) = @_;
+    my $server = servername_id($proto, $ipvnum, $idnum);
+    my $pidfile = server_pidfilename($proto, $ipvnum, $idnum);
     my $pid = 0;
-    if(open(FILE, "<$SOCKSPIDFILE")) {
+    if(open(FILE, "<$pidfile")) {
         $pid=0+<FILE>;
         close(FILE);
     }
     if($pid > 0) {
         # if we have a pid it is actually our socks server,
         # since runsocksserver() unlinks previous pidfile
         if(!kill(0, $pid)) {
             logmsg "RUN: SOCKS server has died after starting up\n";
             checkdied($pid);
-            unlink($SOCKSPIDFILE);
+            unlink($pidfile);
             $pid = -1;
         }
     }
     return $pid;
 }
 
@@ -769,28 +973,32 @@
 # particular can take a long time to start if it needs to generate
 # keys on a slow or loaded host.
 #
 
 my %protofunc = ('http' => \&verifyhttp,
                  'https' => \&verifyhttp,
+                 'rtsp' => \&verifyrtsp,
                  'ftp' => \&verifyftp,
+                 'pop3' => \&verifyftp,
+                 'imap' => \&verifyftp,
+                 'smtp' => \&verifyftp,
                  'ftps' => \&verifyftp,
                  'tftp' => \&verifyftp,
                  'ssh' => \&verifyssh,
                  'socks' => \&verifysocks);
 
 sub verifyserver {
-    my ($proto, $ip, $port) = @_;
+    my ($proto, $ipvnum, $idnum, $ip, $port) = @_;
 
     my $count = 30; # try for this many seconds
     my $pid;
 
     while($count--) {
         my $fun = $protofunc{$proto};
 
-        $pid = &$fun($proto, $ip, $port);
+        $pid = &$fun($proto, $ipvnum, $idnum, $ip, $port);
 
         if($pid > 0) {
             last;
         }
         elsif($pid < 0) {
             # a real failure, stop trying and bail out
@@ -805,463 +1013,644 @@
 
 #######################################################################
 # start the http server
 #
 sub runhttpserver {
     my ($verbose, $ipv6) = @_;
-    my $RUNNING;
-    my $pidfile = $HTTPPIDFILE;
     my $port = $HTTPPORT;
     my $ip = $HOSTIP;
-    my $nameext;
-    my $fork = $forkserver?"--fork":"";
+    my $proto = 'http';
+    my $ipvnum = 4;
+    my $idnum = 1;
+    my $server;
+    my $srvrname;
+    my $pidfile;
+    my $logfile;
+    my $flags = "";
 
     if($ipv6) {
         # if IPv6, use a different setup
-        $pidfile = $HTTP6PIDFILE;
+        $ipvnum = 6;
         $port = $HTTP6PORT;
         $ip = $HOST6IP;
-        $nameext="-ipv6";
     }
 
+    $server = servername_id($proto, $ipvnum, $idnum);
+
+    $pidfile = $serverpidfile{$server};
+
     # don't retry if the server doesn't work
     if ($doesntrun{$pidfile}) {
         return (0,0);
     }
 
-    my $pid = checkserver($pidfile);
+    my $pid = processexists($pidfile);
     if($pid > 0) {
-        stopserver($pid);
+        stopserver($server, "$pid");
     }
-    unlink($pidfile);
+    unlink($pidfile) if(-f $pidfile);
 
-    my $flag=$debugprotocol?"-v ":"";
-    my $dir=$ENV{'srcdir'};
-    if($dir) {
-        $flag .= "-d \"$dir\" ";
-    }
+    $srvrname = servername_str($proto, $ipvnum, $idnum);
+
+    $logfile = server_logfilename($LOGDIR, $proto, $ipvnum, $idnum);
 
-    my $cmd="$perl $srcdir/httpserver.pl -p $pidfile $fork$flag $port $ipv6";
-    my ($httppid, $pid2) =
-        startnew($cmd, $pidfile, 15, 0); # start the server in a new process
+    $flags .= "--fork " if($forkserver);
+    $flags .= "--verbose " if($debugprotocol);
+    $flags .= "--pidfile \"$pidfile\" --logfile \"$logfile\" ";
+    $flags .= "--id $idnum " if($idnum > 1);
+    $flags .= "--ipv$ipvnum --port $port --srcdir \"$srcdir\"";
+
+    my $cmd = "$perl $srcdir/httpserver.pl $flags";
+    my ($httppid, $pid2) = startnew($cmd, $pidfile, 15, 0);
 
     if($httppid <= 0 || !kill(0, $httppid)) {
         # it is NOT alive
-        logmsg "RUN: failed to start the HTTP$nameext server\n";
-        stopserver("$pid2");
+        logmsg "RUN: failed to start the $srvrname server\n";
+        stopserver($server, "$pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return (0,0);
     }
 
     # Server is up. Verify that we can speak to it.
-    my $pid3 = verifyserver("http", $ip, $port);
+    my $pid3 = verifyserver($proto, $ipvnum, $idnum, $ip, $port);
     if(!$pid3) {
-        logmsg "RUN: HTTP$nameext server failed verification\n";
+        logmsg "RUN: $srvrname server failed verification\n";
         # failed to talk to it properly. Kill the server and return failure
-        stopserver("$httppid $pid2");
+        stopserver($server, "$httppid $pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return (0,0);
     }
     $pid2 = $pid3;
 
     if($verbose) {
-        logmsg "RUN: HTTP$nameext server is now running PID $httppid\n";
+        logmsg "RUN: $srvrname server is now running PID $httppid\n";
     }
 
     sleep(1);
 
     return ($httppid, $pid2);
 }
 
 #######################################################################
 # start the https server (or rather, tunnel)
 #
 sub runhttpsserver {
-    my ($verbose, $ipv6, $parm) = @_;
-    my $STATUS;
-    my $RUNNING;
-    my $ip = $HOSTIP;
-    my $pidfile = $HTTPSPIDFILE;
+    my ($verbose, $ipv6, $certfile) = @_;
+    my $proto = 'https';
+    my $ip = ($ipv6 && ($ipv6 =~ /6$/)) ? "$HOST6IP" : "$HOSTIP";
+    my $ipvnum = ($ipv6 && ($ipv6 =~ /6$/)) ? 6 : 4;
+    my $idnum = 1;
+    my $server;
+    my $srvrname;
+    my $pidfile;
+    my $logfile;
+    my $flags = "";
 
     if(!$stunnel) {
-        return 0;
+        return (0,0);
     }
 
-    if($ipv6) {
-        # not complete yet
-        $ip = $HOST6IP;
-    }
+    $server = servername_id($proto, $ipvnum, $idnum);
+
+    $pidfile = $serverpidfile{$server};
 
     # don't retry if the server doesn't work
     if ($doesntrun{$pidfile}) {
         return (0,0);
     }
 
-    my $pid = checkserver($pidfile);
+    my $pid = processexists($pidfile);
     if($pid > 0) {
-        # kill previous stunnel!
-        stopserver($pid);
+        stopserver($server, "$pid");
     }
-    unlink($pidfile);
+    unlink($pidfile) if(-f $pidfile);
+
+    $srvrname = servername_str($proto, $ipvnum, $idnum);
+
+    $certfile = 'stunnel.pem' unless($certfile);
 
-    my $flag=$debugprotocol?"-v ":"";
-    $flag .= " -c $parm" if ($parm);
-    my $cmd="$perl $srcdir/httpsserver.pl $flag -p https -s \"$stunnel\" -d $srcdir -r $HTTPPORT $HTTPSPORT";
+    $logfile = server_logfilename($LOGDIR, $proto, $ipvnum, $idnum);
 
+    $flags .= "--verbose " if($debugprotocol);
+    $flags .= "--pidfile \"$pidfile\" --logfile \"$logfile\" ";
+    $flags .= "--id $idnum " if($idnum > 1);
+    $flags .= "--ipv$ipvnum --proto $proto ";
+    $flags .= "--certfile \"$certfile\" " if($certfile ne 'stunnel.pem');
+    $flags .= "--stunnel \"$stunnel\" --srcdir \"$srcdir\" ";
+    $flags .= "--connect $HTTPPORT --accept $HTTPSPORT";
+
+    my $cmd = "$perl $srcdir/secureserver.pl $flags";
     my ($httpspid, $pid2) = startnew($cmd, $pidfile, 15, 0);
 
     if($httpspid <= 0 || !kill(0, $httpspid)) {
         # it is NOT alive
-        logmsg "RUN: failed to start the HTTPS server\n";
-        stopservers($verbose);
+        logmsg "RUN: failed to start the $srvrname server\n";
+        stopserver($server, "$pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return(0,0);
     }
 
     # Server is up. Verify that we can speak to it.
-    my $pid3 = verifyserver("https", $ip, $HTTPSPORT);
+    my $pid3 = verifyserver($proto, $ipvnum, $idnum, $ip, $HTTPSPORT);
     if(!$pid3) {
-        logmsg "RUN: HTTPS server failed verification\n";
+        logmsg "RUN: $srvrname server failed verification\n";
         # failed to talk to it properly. Kill the server and return failure
-        stopserver("$httpspid $pid2");
+        stopserver($server, "$httpspid $pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return (0,0);
     }
     # Here pid3 is actually the pid returned by the unsecure-http server.
 
+    $runcert{$server} = $certfile;
+
     if($verbose) {
-        logmsg "RUN: HTTPS server is now running PID $httpspid\n";
+        logmsg "RUN: $srvrname server is now running PID $httpspid\n";
     }
 
     sleep(1);
 
     return ($httpspid, $pid2);
 }
 
 #######################################################################
-# start the ftp server
+# start the pingpong server (FTP, POP3, IMAP, SMTP)
 #
-sub runftpserver {
-    my ($id, $verbose, $ipv6) = @_;
-    my $STATUS;
-    my $RUNNING;
-    my $port = $id?$FTP2PORT:$FTPPORT;
-    # check for pidfile
-    my $pidfile = $id?$FTP2PIDFILE:$FTPPIDFILE;
-    my $ip=$HOSTIP;
-    my $nameext;
-    my $cmd;
-
-    if($ipv6) {
-        # if IPv6, use a different setup
-        $pidfile = $FTP6PIDFILE;
-        $port = $FTP6PORT;
-        $ip = $HOST6IP;
-        $nameext="-ipv6";
+sub runpingpongserver {
+    my ($proto, $id, $verbose, $ipv6) = @_;
+    my $port;
+    my $ip = ($ipv6 && ($ipv6 =~ /6$/)) ? "$HOST6IP" : "$HOSTIP";
+    my $ipvnum = ($ipv6 && ($ipv6 =~ /6$/)) ? 6 : 4;
+    my $idnum = ($id && ($id =~ /^(\d+)$/) && ($id > 1)) ? $id : 1;
+    my $server;
+    my $srvrname;
+    my $pidfile;
+    my $logfile;
+    my $flags = "";
+
+    if($proto eq "ftp") {
+        $port = ($idnum>1)?$FTP2PORT:$FTPPORT;
+
+        if($ipvnum==6) {
+            # if IPv6, use a different setup
+            $port = $FTP6PORT;
+        }
     }
+    elsif($proto eq "pop3") {
+        $port = ($ipvnum==6) ? $POP36PORT : $POP3PORT;
+    }
+    elsif($proto eq "imap") {
+        $port = ($ipvnum==6) ? $IMAP6PORT : $IMAPPORT;
+    }
+    elsif($proto eq "smtp") {
+        $port = ($ipvnum==6) ? $SMTP6PORT : $SMTPPORT;
+    }
+    else {
+        print STDERR "Unsupported protocol $proto!!\n";
+        return 0;
+    }
+
+    $server = servername_id($proto, $ipvnum, $idnum);
+
+    $pidfile = $serverpidfile{$server};
 
     # don't retry if the server doesn't work
     if ($doesntrun{$pidfile}) {
         return (0,0);
     }
 
-    my $pid = checkserver($pidfile);
+    my $pid = processexists($pidfile);
     if($pid > 0) {
-        stopserver($pid);
+        stopserver($server, "$pid");
     }
-    unlink($pidfile);
+    unlink($pidfile) if(-f $pidfile);
 
-    # start our server:
-    my $flag=$debugprotocol?"-v ":"";
-    $flag .= "-s \"$srcdir\" ";
-    my $addr;
-    if($id) {
-        $flag .="--id $id ";
-    }
-    if($ipv6) {
-        $flag .="--ipv6 ";
-        $addr = $HOST6IP;
-    } else {
-        $addr = $HOSTIP;
-    }
+    $srvrname = servername_str($proto, $ipvnum, $idnum);
+
+    $logfile = server_logfilename($LOGDIR, $proto, $ipvnum, $idnum);
 
-    $cmd="$perl $srcdir/ftpserver.pl --pidfile $pidfile $flag --port $port --addr \"$addr\"";
+    $flags .= "--verbose " if($debugprotocol);
+    $flags .= "--pidfile \"$pidfile\" --logfile \"$logfile\" ";
+    $flags .= "--srcdir \"$srcdir\" --proto $proto ";
+    $flags .= "--id $idnum " if($idnum > 1);
+    $flags .= "--ipv$ipvnum --port $port --addr \"$ip\"";
+
+    my $cmd = "$perl $srcdir/ftpserver.pl $flags";
     my ($ftppid, $pid2) = startnew($cmd, $pidfile, 15, 0);
 
     if($ftppid <= 0 || !kill(0, $ftppid)) {
         # it is NOT alive
-        logmsg "RUN: failed to start the FTP$id$nameext server\n";
-        stopserver("$pid2");
+        logmsg "RUN: failed to start the $srvrname server\n";
+        stopserver($server, "$pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return (0,0);
     }
 
     # Server is up. Verify that we can speak to it.
-    my $pid3 = verifyserver("ftp", $ip, $port);
+    my $pid3 = verifyserver($proto, $ipvnum, $idnum, $ip, $port);
     if(!$pid3) {
-        logmsg "RUN: FTP$id$nameext server failed verification\n";
+        logmsg "RUN: $srvrname server failed verification\n";
         # failed to talk to it properly. Kill the server and return failure
-        stopserver("$ftppid $pid2");
+        stopserver($server, "$ftppid $pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return (0,0);
     }
     $pid2 = $pid3;
 
     if($verbose) {
-        logmsg "RUN: FTP$id$nameext server is now running PID $ftppid\n";
+        logmsg "RUN: $srvrname server is now running PID $ftppid\n";
     }
 
     sleep(1);
 
     return ($pid2, $ftppid);
 }
 
 #######################################################################
 # start the ftps server (or rather, tunnel)
 #
 sub runftpsserver {
-    my ($verbose, $ipv6) = @_;
-    my $STATUS;
-    my $RUNNING;
-    my $ip = $HOSTIP;
-    my $pidfile = $FTPSPIDFILE;
+    my ($verbose, $ipv6, $certfile) = @_;
+    my $proto = 'ftps';
+    my $ip = ($ipv6 && ($ipv6 =~ /6$/)) ? "$HOST6IP" : "$HOSTIP";
+    my $ipvnum = ($ipv6 && ($ipv6 =~ /6$/)) ? 6 : 4;
+    my $idnum = 1;
+    my $server;
+    my $srvrname;
+    my $pidfile;
+    my $logfile;
+    my $flags = "";
 
     if(!$stunnel) {
-        return 0;
+        return (0,0);
     }
 
-    if($ipv6) {
-        # not complete yet
-        $ip = $HOST6IP;
-    }
+    $server = servername_id($proto, $ipvnum, $idnum);
+
+    $pidfile = $serverpidfile{$server};
 
     # don't retry if the server doesn't work
     if ($doesntrun{$pidfile}) {
         return (0,0);
     }
 
-    my $pid = checkserver($pidfile);
+    my $pid = processexists($pidfile);
     if($pid > 0) {
-        # kill previous stunnel!
-        stopserver($pid);
+        stopserver($server, "$pid");
     }
-    unlink($pidfile);
+    unlink($pidfile) if(-f $pidfile);
+
+    $srvrname = servername_str($proto, $ipvnum, $idnum);
+
+    $certfile = 'stunnel.pem' unless($certfile);
+
+    $logfile = server_logfilename($LOGDIR, $proto, $ipvnum, $idnum);
 
-    my $flag=$debugprotocol?"-v ":"";
-    my $cmd="$perl $srcdir/httpsserver.pl $flag -p ftps -s \"$stunnel\" -d $srcdir -r $FTPPORT $FTPSPORT";
+    $flags .= "--verbose " if($debugprotocol);
+    $flags .= "--pidfile \"$pidfile\" --logfile \"$logfile\" ";
+    $flags .= "--id $idnum " if($idnum > 1);
+    $flags .= "--ipv$ipvnum --proto $proto ";
+    $flags .= "--certfile \"$certfile\" " if($certfile ne 'stunnel.pem');
+    $flags .= "--stunnel \"$stunnel\" --srcdir \"$srcdir\" ";
+    $flags .= "--connect $FTPPORT --accept $FTPSPORT";
 
+    my $cmd = "$perl $srcdir/secureserver.pl $flags";
     my ($ftpspid, $pid2) = startnew($cmd, $pidfile, 15, 0);
 
     if($ftpspid <= 0 || !kill(0, $ftpspid)) {
         # it is NOT alive
-        logmsg "RUN: failed to start the FTPS server\n";
-        stopservers($verbose);
+        logmsg "RUN: failed to start the $srvrname server\n";
+        stopserver($server, "$pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return(0,0);
     }
 
     # Server is up. Verify that we can speak to it.
-    my $pid3 = verifyserver("ftps", $ip, $FTPSPORT);
+    my $pid3 = verifyserver($proto, $ipvnum, $idnum, $ip, $FTPSPORT);
     if(!$pid3) {
-        logmsg "RUN: FTPS server failed verification\n";
+        logmsg "RUN: $srvrname server failed verification\n";
         # failed to talk to it properly. Kill the server and return failure
-        stopserver("$ftpspid $pid2");
+        stopserver($server, "$ftpspid $pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return (0,0);
     }
     # Here pid3 is actually the pid returned by the unsecure-ftp server.
 
+    $runcert{$server} = $certfile;
+
     if($verbose) {
-        logmsg "RUN: FTPS server is now running PID $ftpspid\n";
+        logmsg "RUN: $srvrname server is now running PID $ftpspid\n";
     }
 
     sleep(1);
 
     return ($ftpspid, $pid2);
 }
 
 #######################################################################
 # start the tftp server
 #
 sub runtftpserver {
     my ($id, $verbose, $ipv6) = @_;
-    my $STATUS;
-    my $RUNNING;
     my $port = $TFTPPORT;
-    # check for pidfile
-    my $pidfile = $TFTPPIDFILE;
-    my $ip=$HOSTIP;
-    my $nameext;
-    my $cmd;
+    my $ip = $HOSTIP;
+    my $proto = 'tftp';
+    my $ipvnum = 4;
+    my $idnum = ($id && ($id =~ /^(\d+)$/) && ($id > 1)) ? $id : 1;
+    my $server;
+    my $srvrname;
+    my $pidfile;
+    my $logfile;
+    my $flags = "";
 
     if($ipv6) {
         # if IPv6, use a different setup
-        $pidfile = $TFTP6PIDFILE;
+        $ipvnum = 6;
         $port = $TFTP6PORT;
         $ip = $HOST6IP;
-        $nameext="-ipv6";
     }
 
+    $server = servername_id($proto, $ipvnum, $idnum);
+
+    $pidfile = $serverpidfile{$server};
+
     # don't retry if the server doesn't work
     if ($doesntrun{$pidfile}) {
         return (0,0);
     }
 
-    my $pid = checkserver($pidfile);
+    my $pid = processexists($pidfile);
     if($pid > 0) {
-        stopserver($pid);
+        stopserver($server, "$pid");
     }
-    unlink($pidfile);
+    unlink($pidfile) if(-f $pidfile);
 
-    # start our server:
-    my $flag=$debugprotocol?"-v ":"";
-    $flag .= "-s \"$srcdir\" ";
-    if($id) {
-        $flag .="--id $id ";
-    }
-    if($ipv6) {
-        $flag .="--ipv6 ";
-    }
+    $srvrname = servername_str($proto, $ipvnum, $idnum);
+
+    $logfile = server_logfilename($LOGDIR, $proto, $ipvnum, $idnum);
 
-    $cmd="./server/tftpd --pidfile $pidfile $flag $port";
+    $flags .= "--verbose " if($debugprotocol);
+    $flags .= "--pidfile \"$pidfile\" --logfile \"$logfile\" ";
+    $flags .= "--id $idnum " if($idnum > 1);
+    $flags .= "--ipv$ipvnum --port $port --srcdir \"$srcdir\"";
+
+    my $cmd = "$perl $srcdir/tftpserver.pl $flags";
     my ($tftppid, $pid2) = startnew($cmd, $pidfile, 15, 0);
 
     if($tftppid <= 0 || !kill(0, $tftppid)) {
         # it is NOT alive
-        logmsg "RUN: failed to start the TFTP$id$nameext server\n";
-        stopserver("$pid2");
+        logmsg "RUN: failed to start the $srvrname server\n";
+        stopserver($server, "$pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return (0,0);
     }
 
     # Server is up. Verify that we can speak to it.
-    my $pid3 = verifyserver("tftp", $ip, $port);
+    my $pid3 = verifyserver($proto, $ipvnum, $idnum, $ip, $port);
     if(!$pid3) {
-        logmsg "RUN: TFTP$id$nameext server failed verification\n";
+        logmsg "RUN: $srvrname server failed verification\n";
         # failed to talk to it properly. Kill the server and return failure
-        stopserver("$tftppid $pid2");
+        stopserver($server, "$tftppid $pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return (0,0);
     }
     $pid2 = $pid3;
 
     if($verbose) {
-        logmsg "RUN: TFTP$id$nameext server is now running PID $tftppid\n";
+        logmsg "RUN: $srvrname server is now running PID $tftppid\n";
     }
 
     sleep(1);
 
     return ($pid2, $tftppid);
 }
 
 
 #######################################################################
-# Start the scp/sftp server
+# start the rtsp server
+#
+sub runrtspserver {
+    my ($verbose, $ipv6) = @_;
+    my $port = $RTSPPORT;
+    my $ip = $HOSTIP;
+    my $proto = 'rtsp';
+    my $ipvnum = 4;
+    my $idnum = 1;
+    my $server;
+    my $srvrname;
+    my $pidfile;
+    my $logfile;
+    my $flags = "";
+
+    if($ipv6) {
+        # if IPv6, use a different setup
+        $ipvnum = 6;
+        $port = $RTSP6PORT;
+        $ip = $HOST6IP;
+    }
+
+    $server = servername_id($proto, $ipvnum, $idnum);
+
+    $pidfile = $serverpidfile{$server};
+
+    # don't retry if the server doesn't work
+    if ($doesntrun{$pidfile}) {
+        return (0,0);
+    }
+
+    my $pid = processexists($pidfile);
+    if($pid > 0) {
+        stopserver($server, "$pid");
+    }
+    unlink($pidfile) if(-f $pidfile);
+
+    $srvrname = servername_str($proto, $ipvnum, $idnum);
+
+    $logfile = server_logfilename($LOGDIR, $proto, $ipvnum, $idnum);
+
+    $flags .= "--verbose " if($debugprotocol);
+    $flags .= "--pidfile \"$pidfile\" --logfile \"$logfile\" ";
+    $flags .= "--id $idnum " if($idnum > 1);
+    $flags .= "--ipv$ipvnum --port $port --srcdir \"$srcdir\"";
+
+    my $cmd = "$perl $srcdir/rtspserver.pl $flags";
+    my ($rtsppid, $pid2) = startnew($cmd, $pidfile, 15, 0);
+
+    if($rtsppid <= 0 || !kill(0, $rtsppid)) {
+        # it is NOT alive
+        logmsg "RUN: failed to start the $srvrname server\n";
+        stopserver($server, "$pid2");
+        displaylogs($testnumcheck);
+        $doesntrun{$pidfile} = 1;
+        return (0,0);
+    }
+
+    # Server is up. Verify that we can speak to it.
+    my $pid3 = verifyserver($proto, $ipvnum, $idnum, $ip, $port);
+    if(!$pid3) {
+        logmsg "RUN: $srvrname server failed verification\n";
+        # failed to talk to it properly. Kill the server and return failure
+        stopserver($server, "$rtsppid $pid2");
+        displaylogs($testnumcheck);
+        $doesntrun{$pidfile} = 1;
+        return (0,0);
+    }
+    $pid2 = $pid3;
+
+    if($verbose) {
+        logmsg "RUN: $srvrname server is now running PID $rtsppid\n";
+    }
+
+    sleep(1);
+
+    return ($rtsppid, $pid2);
+}
+
+
+#######################################################################
+# Start the ssh (scp/sftp) server
 #
 sub runsshserver {
     my ($id, $verbose, $ipv6) = @_;
     my $ip=$HOSTIP;
     my $port = $SSHPORT;
     my $socksport = $SOCKSPORT;
-    my $pidfile = $SSHPIDFILE;
+    my $proto = 'ssh';
+    my $ipvnum = 4;
+    my $idnum = ($id && ($id =~ /^(\d+)$/) && ($id > 1)) ? $id : 1;
+    my $server;
+    my $srvrname;
+    my $pidfile;
+    my $logfile;
+    my $flags = "";
+
+    $server = servername_id($proto, $ipvnum, $idnum);
+
+    $pidfile = $serverpidfile{$server};
 
     # don't retry if the server doesn't work
     if ($doesntrun{$pidfile}) {
         return (0,0);
     }
 
-    my $pid = checkserver($pidfile);
+    my $pid = processexists($pidfile);
     if($pid > 0) {
-        stopserver($pid);
+        stopserver($server, "$pid");
     }
-    unlink($pidfile);
+    unlink($pidfile) if(-f $pidfile);
+
+    $srvrname = servername_str($proto, $ipvnum, $idnum);
 
-    my $flag=$verbose?'-v ':'';
-    $flag .= '-d ' if($debugprotocol);
+    $logfile = server_logfilename($LOGDIR, $proto, $ipvnum, $idnum);
 
-    my $cmd="$perl $srcdir/sshserver.pl ${flag}-u $USER -l $ip -p $port -s $socksport";
+    $flags .= "--verbose " if($verbose);
+    $flags .= "--debugprotocol " if($debugprotocol);
+    $flags .= "--pidfile \"$pidfile\" ";
+    $flags .= "--id $idnum " if($idnum > 1);
+    $flags .= "--ipv$ipvnum --addr \"$ip\" ";
+    $flags .= "--sshport $port --socksport $socksport ";
+    $flags .= "--user \"$USER\"";
+
+    my $cmd = "$perl $srcdir/sshserver.pl $flags";
     my ($sshpid, $pid2) = startnew($cmd, $pidfile, 60, 0);
 
     # on loaded systems sshserver start up can take longer than the timeout
     # passed to startnew, when this happens startnew completes without being
     # able to read the pidfile and consequently returns a zero pid2 above.
 
     if($sshpid <= 0 || !kill(0, $sshpid)) {
         # it is NOT alive
-        logmsg "RUN: failed to start the SSH server\n";
-        stopserver("$pid2");
+        logmsg "RUN: failed to start the $srvrname server\n";
+        stopserver($server, "$pid2");
         $doesntrun{$pidfile} = 1;
         return (0,0);
     }
 
     # ssh server verification allows some extra time for the server to start up
     # and gives us the opportunity of recovering the pid from the pidfile, when
     # this verification succeeds the recovered pid is assigned to pid2.
 
-    my $pid3 = verifyserver("ssh",$ip,$port);
+    my $pid3 = verifyserver($proto, $ipvnum, $idnum, $ip, $port);
     if(!$pid3) {
-        logmsg "RUN: SSH server failed verification\n";
+        logmsg "RUN: $srvrname server failed verification\n";
         # failed to fetch server pid. Kill the server and return failure
-        stopserver("$sshpid $pid2");
+        stopserver($server, "$sshpid $pid2");
         $doesntrun{$pidfile} = 1;
         return (0,0);
     }
     $pid2 = $pid3;
 
     # once it is known that the ssh server is alive, sftp server verification
     # is performed actually connecting to it, authenticating and performing a
     # very simple remote command.  This verification is tried only one time.
 
-    if(verifysftp("sftp",$ip,$port) < 1) {
+    $sshdlog = server_logfilename($LOGDIR, 'ssh', $ipvnum, $idnum);
+    $sftplog = server_logfilename($LOGDIR, 'sftp', $ipvnum, $idnum);
+
+    if(verifysftp('sftp', $ipvnum, $idnum, $ip, $port) < 1) {
         logmsg "RUN: SFTP server failed verification\n";
         # failed to talk to it properly. Kill the server and return failure
         display_sftplog();
         display_sftpconfig();
         display_sshdlog();
         display_sshdconfig();
-        stopserver("$sshpid $pid2");
+        stopserver($server, "$sshpid $pid2");
         $doesntrun{$pidfile} = 1;
         return (0,0);
     }
 
     if($verbose) {
-        logmsg "RUN: SSH server is now running PID $pid2\n";
+        logmsg "RUN: $srvrname server is now running PID $pid2\n";
     }
 
     return ($pid2, $sshpid);
 }
 
 #######################################################################
 # Start the socks server
 #
 sub runsocksserver {
     my ($id, $verbose, $ipv6) = @_;
     my $ip=$HOSTIP;
     my $port = $SOCKSPORT;
-    my $pidfile = $SOCKSPIDFILE;
+    my $proto = 'socks';
+    my $ipvnum = 4;
+    my $idnum = ($id && ($id =~ /^(\d+)$/) && ($id > 1)) ? $id : 1;
+    my $server;
+    my $srvrname;
+    my $pidfile;
+    my $logfile;
+    my $flags = "";
+
+    $server = servername_id($proto, $ipvnum, $idnum);
+
+    $pidfile = $serverpidfile{$server};
 
     # don't retry if the server doesn't work
     if ($doesntrun{$pidfile}) {
         return (0,0);
     }
 
-    my $pid = checkserver($pidfile);
+    my $pid = processexists($pidfile);
     if($pid > 0) {
-        stopserver($pid);
+        stopserver($server, "$pid");
     }
-    unlink($pidfile);
+    unlink($pidfile) if(-f $pidfile);
+
+    $srvrname = servername_str($proto, $ipvnum, $idnum);
+
+    $logfile = server_logfilename($LOGDIR, $proto, $ipvnum, $idnum);
 
     # The ssh server must be already running
     if(!$run{'ssh'}) {
         logmsg "RUN: SOCKS server cannot find running SSH server\n";
         $doesntrun{$pidfile} = 1;
         return (0,0);
@@ -1325,41 +1714,43 @@
     if(! -e $sshconfig) {
         logmsg "RUN: SOCKS server cannot find $sshconfig\n";
         $doesntrun{$pidfile} = 1;
         return (0,0);
     }
 
+    $sshlog  = server_logfilename($LOGDIR, 'socks', $ipvnum, $idnum);
+
     # start our socks server
     my $cmd="$ssh -N -F $sshconfig $ip > $sshlog 2>&1";
     my ($sshpid, $pid2) = startnew($cmd, $pidfile, 30, 1);
 
     if($sshpid <= 0 || !kill(0, $sshpid)) {
         # it is NOT alive
-        logmsg "RUN: failed to start the SOCKS server\n";
+        logmsg "RUN: failed to start the $srvrname server\n";
         display_sshlog();
         display_sshconfig();
         display_sshdlog();
         display_sshdconfig();
-        stopserver("$pid2");
+        stopserver($server, "$pid2");
         $doesntrun{$pidfile} = 1;
         return (0,0);
     }
 
     # Ugly hack but ssh doesn't support pid files
-    my $pid3 = verifyserver("socks",$ip,$port);
+    my $pid3 = verifyserver($proto, $ipvnum, $idnum, $ip, $port);
     if(!$pid3) {
-        logmsg "RUN: SOCKS server failed verification\n";
+        logmsg "RUN: $srvrname server failed verification\n";
         # failed to talk to it properly. Kill the server and return failure
-        stopserver("$sshpid $pid2");
+        stopserver($server, "$sshpid $pid2");
         $doesntrun{$pidfile} = 1;
         return (0,0);
     }
     $pid2 = $pid3;
 
     if($verbose) {
-        logmsg "RUN: SOCKS server is now running PID $pid2\n";
+        logmsg "RUN: $srvrname server is now running PID $pid2\n";
     }
 
     return ($pid2, $sshpid);
 }
 
 #######################################################################
@@ -1658,47 +2049,58 @@
     "* $curl\n",
     "* $libcurl\n",
     "* Features: $feat\n",
     "* Host: $hostname",
     "* System: $hosttype");
 
-    logmsg sprintf("* Server SSL:     %s\n", $stunnel?"ON":"OFF");
-    logmsg sprintf("* libcurl SSL:    %s\n", $ssl_version?"ON":"OFF");
-    logmsg sprintf("* debug build:    %s\n", $debug_build?"ON":"OFF");
-    logmsg sprintf("* track memory:   %s\n", $curl_debug?"ON":"OFF");
-    logmsg sprintf("* valgrind:       %s\n", $valgrind?"ON":"OFF");
-    logmsg sprintf("* HTTP IPv6       %s\n", $http_ipv6?"ON":"OFF");
-    logmsg sprintf("* FTP IPv6        %s\n", $ftp_ipv6?"ON":"OFF");
-
-    logmsg sprintf("* HTTP port:      %d\n", $HTTPPORT);
-    logmsg sprintf("* FTP port:       %d\n", $FTPPORT);
-    logmsg sprintf("* FTP port 2:     %d\n", $FTP2PORT);
+    logmsg sprintf("* Server SSL:   %8s", $stunnel?"ON ":"OFF");
+    logmsg sprintf("  libcurl SSL:  %s\n", $ssl_version?"ON ":"OFF");
+    logmsg sprintf("* debug build:  %8s", $debug_build?"ON ":"OFF");
+    logmsg sprintf("  track memory: %s\n", $curl_debug?"ON ":"OFF");
+    logmsg sprintf("* valgrind:     %8s", $valgrind?"ON ":"OFF");
+    logmsg sprintf("  HTTP IPv6     %s\n", $http_ipv6?"ON ":"OFF");
+    logmsg sprintf("* FTP IPv6      %8s", $ftp_ipv6?"ON ":"OFF");
+    logmsg sprintf("  Libtool lib:  %s\n", $libtool?"ON ":"OFF");
+    if($ssl_version) {
+        logmsg sprintf("* SSL library:       %s\n", $ssllib);
+    }
+
+    logmsg "* Ports:\n";
+
+    logmsg sprintf("*   HTTP/%d ", $HTTPPORT);
+    logmsg sprintf("FTP/%d ", $FTPPORT);
+    logmsg sprintf("FTP2/%d ", $FTP2PORT);
+    logmsg sprintf("RTSP/%d ", $RTSPPORT);
     if($stunnel) {
-        logmsg sprintf("* FTPS port:      %d\n", $FTPSPORT);
-        logmsg sprintf("* HTTPS port:     %d\n", $HTTPSPORT);
+        logmsg sprintf("FTPS/%d ", $FTPSPORT);
+        logmsg sprintf("HTTPS/%d ", $HTTPSPORT);
     }
+    logmsg sprintf("\n*   TFTP/%d ", $TFTPPORT);
     if($http_ipv6) {
-        logmsg sprintf("* HTTP IPv6 port: %d\n", $HTTP6PORT);
+        logmsg sprintf("HTTP-IPv6/%d ", $HTTP6PORT);
+        logmsg sprintf("RTSP-IPv6/%d ", $RTSP6PORT);
     }
     if($ftp_ipv6) {
-        logmsg sprintf("* FTP IPv6 port:  %d\n", $FTP6PORT);
+        logmsg sprintf("FTP-IPv6/%d ", $FTP6PORT);
     }
-    logmsg sprintf("* TFTP port:      %d\n", $TFTPPORT);
     if($tftp_ipv6) {
-        logmsg sprintf("* TFTP IPv6 port: %d\n", $TFTP6PORT);
+        logmsg sprintf("TFTP-IPv6/%d ", $TFTP6PORT);
     }
-    logmsg sprintf("* SCP/SFTP port:  %d\n", $SSHPORT);
-    logmsg sprintf("* SOCKS port:     %d\n", $SOCKSPORT);
-
-    if($ssl_version) {
-        logmsg sprintf("* SSL library:    %s\n", $ssllib);
+    logmsg sprintf("\n*   SSH/%d ", $SSHPORT);
+    logmsg sprintf("SOCKS/%d ", $SOCKSPORT);
+    logmsg sprintf("POP3/%d ", $POP3PORT);
+    logmsg sprintf("IMAP/%d ", $IMAPPORT);
+    logmsg sprintf("SMTP/%d\n", $SMTPPORT);
+    if($ftp_ipv6) {
+        logmsg sprintf("*   POP3-IPv6/%d ", $POP36PORT);
+        logmsg sprintf("IMAP-IPv6/%d ", $IMAP6PORT);
+        logmsg sprintf("SMTP-IPv6/%d\n", $SMTP6PORT);
     }
 
     $has_textaware = ($^O eq 'MSWin32') || ($^O eq 'msys');
 
-    logmsg sprintf("* Libtool lib:    %s\n", $libtool?"ON":"OFF");
     logmsg "***************************************** \n";
 }
 
 #######################################################################
 # substitute the variable stuff into either a joined up file or
 # a command, in either case passed by reference
@@ -1717,16 +2119,24 @@
   $$thing =~ s/%SRCDIR/$srcdir/g;
   $$thing =~ s/%PWD/$pwd/g;
   $$thing =~ s/%TFTPPORT/$TFTPPORT/g;
   $$thing =~ s/%TFTP6PORT/$TFTP6PORT/g;
   $$thing =~ s/%SSHPORT/$SSHPORT/g;
   $$thing =~ s/%SOCKSPORT/$SOCKSPORT/g;
+  $$thing =~ s/%POP3PORT/$POP3PORT/g;
+  $$thing =~ s/%POP36PORT/$POP36PORT/g;
+  $$thing =~ s/%IMAPPORT/$IMAPPORT/g;
+  $$thing =~ s/%IMAP6PORT/$IMAP6PORT/g;
+  $$thing =~ s/%SMTPPORT/$SMTPPORT/g;
+  $$thing =~ s/%SMTP6PORT/$SMTP6PORT/g;
   $$thing =~ s/%CURL/$CURL/g;
   $$thing =~ s/%USER/$USER/g;
   $$thing =~ s/%CLIENTIP/$CLIENTIP/g;
   $$thing =~ s/%CLIENT6IP/$CLIENT6IP/g;
+  $$thing =~ s/%RTSPPORT/$RTSPPORT/g;
+  $$thing =~ s/%RTSP6PORT/$RTSP6PORT/g;
 
   # The purpose of FTPTIME2 and FTPTIME3 is to provide times that can be
   # used for time-out tests and that whould work on most hosts as these
   # adjust for the startup/check time for this particular host. We needed
   # to do this to make the test suite run better on very slow hosts.
 
@@ -1744,27 +2154,83 @@
         subVariables \$_;
     }
     return @in;
 }
 
 #######################################################################
-# Run a single specified test case
+# Provide time stamps for single test skipped events
 #
+sub timestampskippedevents {
+    my $testnum = $_[0];
+
+    return if((not defined($testnum)) || ($testnum < 1));
+
+    if($timestats) {
+
+        if($timevrfyend{$testnum}) {
+            return;
+        }
+        elsif($timesrvrlog{$testnum}) {
+            $timevrfyend{$testnum} = $timesrvrlog{$testnum};
+            return;
+        }
+        elsif($timetoolend{$testnum}) {
+            $timevrfyend{$testnum} = $timetoolend{$testnum};
+            $timesrvrlog{$testnum} = $timetoolend{$testnum};
+        }
+        elsif($timetoolini{$testnum}) {
+            $timevrfyend{$testnum} = $timetoolini{$testnum};
+            $timesrvrlog{$testnum} = $timetoolini{$testnum};
+            $timetoolend{$testnum} = $timetoolini{$testnum};
+        }
+        elsif($timesrvrend{$testnum}) {
+            $timevrfyend{$testnum} = $timesrvrend{$testnum};
+            $timesrvrlog{$testnum} = $timesrvrend{$testnum};
+            $timetoolend{$testnum} = $timesrvrend{$testnum};
+            $timetoolini{$testnum} = $timesrvrend{$testnum};
+        }
+        elsif($timesrvrini{$testnum}) {
+            $timevrfyend{$testnum} = $timesrvrini{$testnum};
+            $timesrvrlog{$testnum} = $timesrvrini{$testnum};
+            $timetoolend{$testnum} = $timesrvrini{$testnum};
+            $timetoolini{$testnum} = $timesrvrini{$testnum};
+            $timesrvrend{$testnum} = $timesrvrini{$testnum};
+        }
+        elsif($timeprepini{$testnum}) {
+            $timevrfyend{$testnum} = $timeprepini{$testnum};
+            $timesrvrlog{$testnum} = $timeprepini{$testnum};
+            $timetoolend{$testnum} = $timeprepini{$testnum};
+            $timetoolini{$testnum} = $timeprepini{$testnum};
+            $timesrvrend{$testnum} = $timeprepini{$testnum};
+            $timesrvrini{$testnum} = $timeprepini{$testnum};
+        }
+    }
+}
 
+#######################################################################
+# Run a single specified test case
+#
 sub singletest {
     my ($testnum, $count, $total)=@_;
 
     my @what;
     my $why;
     my %feature;
     my $cmd;
 
     # copy test number to a global scope var, this allows
     # testnum checking when starting test harness servers.
     $testnumcheck = $testnum;
 
+    # timestamp test preparation start
+    $timeprepini{$testnum} = Time::HiRes::time() if($timestats);
+
+    if($disttests !~ /test$testnum\W/ ) {
+        logmsg "Warning: test$testnum not present in tests/data/Makefile.am\n";
+    }
+
     # load the test case file definition
     if(loadtest("${TESTDIR}/test${testnum}")) {
         if($verbose) {
             # this is not a test
             logmsg "RUN: $testnum doesn't look like a test case\n";
         }
@@ -1863,34 +2329,42 @@
             } elsif ($enabled_keywords{$k}) {
             	$match = 1;
             }
         }
 
 	if(!$why && !$match && %enabled_keywords) {
-	  $why = "disabled by missing keyword";
+            $why = "disabled by missing keyword";
 	}
     }
 
+    # timestamp required servers verification start
+    $timesrvrini{$testnum} = Time::HiRes::time() if($timestats);
+
     if(!$why) {
         $why = serverfortest($testnum);
     }
 
+    # timestamp required servers verification end
+    $timesrvrend{$testnum} = Time::HiRes::time() if($timestats);
+
     if(!$why) {
         my @precheck = getpart("client", "precheck");
-        $cmd = $precheck[0];
-        chomp $cmd;
-        subVariables \$cmd;
-        if($cmd) {
-            my @o = `$cmd 2>/dev/null`;
-            if($o[0]) {
-                $why = $o[0];
-                chomp $why;
-            } elsif($?) {
-                $why = "precheck command error";
+        if(@precheck) {
+            $cmd = $precheck[0];
+            chomp $cmd;
+            subVariables \$cmd;
+            if($cmd) {
+                my @o = `$cmd 2>/dev/null`;
+                if($o[0]) {
+                    $why = $o[0];
+                    chomp $why;
+                } elsif($?) {
+                    $why = "precheck command error";
+                }
+                logmsg "prechecked $cmd\n" if($verbose);
             }
-            logmsg "prechecked $cmd\n" if($verbose);
         }
     }
 
     if($why && !$listonly) {
         # there's a problem, count it as "skipped"
         $skipped++;
@@ -1898,12 +2372,13 @@
         $teststat[$testnum]=$why; # store reason for this test case
 
         if(!$short) {
             printf "test %03d SKIPPED: $why\n", $testnum;
         }
 
+        timestampskippedevents($testnum);
         return -1;
     }
     logmsg sprintf("test %03d...", $testnum);
 
     # extract the reply data
     my @reply = getpart("reply", "data");
@@ -1950,12 +2425,13 @@
         my $name = $testname[0];
         $name =~ s/\n//g;
         logmsg "[$name]\n";
     }
 
     if($listonly) {
+        timestampskippedevents($testnum);
         return 0; # look successful
     }
 
     my @codepieces = getpart("client", "tool");
 
     my $tool="";
@@ -1970,26 +2446,31 @@
 
     if(@ftpservercmd) {
         # write the instructions to file
         writearray($FTPDCMD, \@ftpservercmd);
     }
 
-    my (@setenv)= getpart("client", "setenv");
-    my @envs;
-
-    my $s;
-    for $s (@setenv) {
-        chomp $s; # cut off the newline
-
-        subVariables \$s;
-
-        if($s =~ /([^=]*)=(.*)/) {
-            my ($var, $content)=($1, $2);
-            $ENV{$var}=$content;
-            # remember which, so that we can clear them afterwards!
-            push @envs, $var;
+    # test definition may instruct to (un)set environment vars
+    my %oldenv;
+    my @setenv = getpart("client", "setenv");
+    if(@setenv) {
+        foreach my $s (@setenv) {
+            chomp $s;
+            subVariables \$s;
+            if($s =~ /([^=]*)=(.*)/) {
+                my ($var, $content) = ($1, $2);
+                # remember current setting, to restore it once test runs
+                $oldenv{$var} = ($ENV{$var})?"$ENV{$var}":'notset';
+                # set new value
+                if(!$content) {
+                    delete $ENV{$var} if($ENV{$var});
+                }
+                else {
+                    $ENV{$var} = "$content";
+                }
+            }
         }
     }
 
     # get the command line options to use
     my @blaha;
     ($cmd, @blaha)= getpart("client", "command");
@@ -2008,12 +2489,13 @@
     my @inputfile=getpart("client", "file");
     my %fileattr = getpartattr("client", "file");
     my $filename=$fileattr{'name'};
     if(@inputfile || $filename) {
         if(!$filename) {
             logmsg "ERROR: section client=>file has no name attribute\n";
+            timestampskippedevents($testnum);
             return -1;
         }
         my $fileContent = join('', @inputfile);
         subVariables \$fileContent;
 #        logmsg "DEBUG: writing file " . $filename . "\n";
         open(OUTFILE, ">$filename");
@@ -2023,13 +2505,13 @@
     }
 
     my %cmdhash = getpartattr("client", "command");
 
     my $out="";
 
-    if($cmdhash{'option'} !~ /no-output/) {
+    if((!$cmdhash{'option'}) || ($cmdhash{'option'} !~ /no-output/)) {
         #We may slap on --output!
         if (!@validstdout) {
             $out=" --output $CURLOUT ";
         }
     }
 
@@ -2073,20 +2555,30 @@
         $CMDLINE="$CURL";
     }
     else {
         $CMDLINE="$LIBDIR/$tool";
         if(! -f $CMDLINE) {
             print "The tool set in the test case for this: '$tool' does not exist\n";
+            timestampskippedevents($testnum);
             return -1;
         }
         $DBGCURL=$CMDLINE;
     }
 
-    my $usevalgrind = $valgrind && ((getpart("verify", "valgrind"))[0] !~ /disable/);
-    if($usevalgrind) {
-        $CMDLINE = "$valgrind ".$valgrind_tool."--leak-check=yes --num-callers=16 ${valgrind_logfile}=$LOGDIR/valgrind$testnum $CMDLINE";
+    my $usevalgrind;
+    if($valgrind) {
+        my @valgrindoption = getpart("verify", "valgrind");
+        if((!@valgrindoption) || ($valgrindoption[0] !~ /disable/)) {
+            $usevalgrind = 1;
+            my $valgrindcmd = "$valgrind ";
+            $valgrindcmd .= "$valgrind_tool " if($valgrind_tool);
+            $valgrindcmd .= "--leak-check=yes ";
+            $valgrindcmd .= "--num-callers=16 ";
+            $valgrindcmd .= "${valgrind_logfile}=$LOGDIR/valgrind$testnum";
+            $CMDLINE = "$valgrindcmd $CMDLINE";
+        }
     }
 
     $CMDLINE .= "$cmdargs >>$STDOUT 2>>$STDERR";
 
     if($verbose) {
         logmsg "$CMDLINE\n";
@@ -2106,24 +2598,29 @@
         my $code = join("", @precommand);
         eval $code;
         if($@) {
             logmsg "perl: $code\n";
             logmsg "precommand: $@";
             stopservers($verbose);
+            timestampskippedevents($testnum);
             return -1;
         }
     }
 
     if($gdbthis) {
         my $gdbinit = "$TESTDIR/gdbinit$testnum";
         open(GDBCMD, ">$LOGDIR/gdbcmd");
         print GDBCMD "set args $cmdargs\n";
         print GDBCMD "show args\n";
         print GDBCMD "source $gdbinit\n" if -e $gdbinit;
         close(GDBCMD);
     }
+
+    # timestamp starting of test command
+    $timetoolini{$testnum} = Time::HiRes::time() if($timestats);
+
     # run the command line we built
     if ($torture) {
         $cmdres = torture($CMDLINE,
                        "$gdb --directory libtest $DBGCURL -x $LOGDIR/gdbcmd");
     }
     elsif($gdbthis) {
@@ -2140,12 +2637,16 @@
         }
         else {
             $cmdres >>= 8;
             $cmdres = (2000 + $signal_num) if($signal_num && !$cmdres);
         }
     }
+
+    # timestamp finishing of test command
+    $timetoolend{$testnum} = Time::HiRes::time() if($timestats);
+
     if(!$dumped_core) {
         if(-r "core") {
             # there's core file present now!
             $dumped_core = 1;
         }
     }
@@ -2166,15 +2667,15 @@
     # that the server has not yet finished writing out all its log files,
     # including server request log files used for protocol verification.
     # So, if the lock file exists the script waits here a certain amount
     # of time until the server removes it, or the given time expires.
 
     if($serverlogslocktimeout) {
-        my $lockretry = $serverlogslocktimeout * 4;
+        my $lockretry = $serverlogslocktimeout * 20;
         while((-f $SERVERLOGS_LOCK) && $lockretry--) {
-            select(undef, undef, undef, 0.25);
+            select(undef, undef, undef, 0.05);
         }
         if(($lockretry < 0) &&
            ($serverlogslocktimeout >= $defserverlogslocktimeout)) {
             logmsg "Warning: server logs lock timeout ",
                    "($serverlogslocktimeout seconds) expired\n";
         }
@@ -2183,41 +2684,123 @@
     # Test harness ssh server does not have this synchronization mechanism,
     # this implies that some ssh server based tests might need a small delay
     # once that the client command has run to avoid false test failures.
 
     sleep($postcommanddelay) if($postcommanddelay);
 
-    # run the postcheck command
-    my @postcheck= getpart("client", "postcheck");
-    $cmd = $postcheck[0];
-    chomp $cmd;
-    subVariables \$cmd;
-    if($cmd) {
-	logmsg "postcheck $cmd\n" if($verbose);
-	my $rc = runclient("$cmd");
-	# Must run the postcheck command in torture mode in order
-	# to clean up, but the result can't be relied upon.
-	if($rc != 0 && !$torture) {
-	    logmsg " postcheck FAILED\n";
-	    return 1;
+    # timestamp removal of server logs advisor read lock
+    $timesrvrlog{$testnum} = Time::HiRes::time() if($timestats);
+
+    # test definition might instruct to stop some servers
+    # stop also all servers relative to the given one
+
+    my @killtestservers = getpart("client", "killserver");
+    if(@killtestservers) {
+        #
+        # All servers relative to the given one must be stopped also
+        #
+        my @killservers;
+        foreach my $server (@killtestservers) {
+            chomp $server;
+            if($server =~ /^(ftp|http|imap|pop3|smtp)s(.*)$/) {
+                # given an ssl server, also kill non-ssl underlying one
+                push @killservers, "${1}${2}";
+            }
+            elsif($server =~ /^(ftp|http|imap|pop3|smtp)(.*)$/) {
+                # given a non-ssl server, also kill ssl piggybacking one
+                push @killservers, "${1}s${2}";
+            }
+            elsif($server =~ /^(socks)(.*)$/) {
+                # given an socks server, also kill ssh underlying one
+                push @killservers, "ssh${2}";
+            }
+            elsif($server =~ /^(ssh)(.*)$/) {
+                # given an ssh server, also kill socks piggybacking one
+                push @killservers, "socks${2}";
+            }
+            push @killservers, $server;
+        }
+        #
+        # kill sockfilter processes for pingpong relative servers
+        #
+        foreach my $server (@killservers) {
+            if($server =~ /^(ftp|imap|pop3|smtp)s?(\d*)(-ipv6|)$/) {
+                my $proto  = $1;
+                my $idnum  = ($2 && ($2 > 1)) ? $2 : 1;
+                my $ipvnum = ($3 && ($3 =~ /6$/)) ? 6 : 4;
+                killsockfilters($proto, $ipvnum, $idnum, $verbose);
+            }
+        }
+        #
+        # kill server relative pids clearing them in %run hash
+        #
+        my $pidlist;
+        foreach my $server (@killservers) {
+            if($run{$server}) {
+                $pidlist .= "$run{$server} ";
+                $run{$server} = 0;
+            }
+            $runcert{$server} = 0 if($runcert{$server});
+        }
+        killpid($verbose, $pidlist);
+        #
+        # cleanup server pid files
+        #
+        foreach my $server (@killservers) {
+            my $pidfile = $serverpidfile{$server};
+            my $pid = processexists($pidfile);
+            if($pid > 0) {
+                logmsg "Warning: $server server unexpectedly alive\n";
+                killpid($verbose, $pid);
+            }
+            unlink($pidfile) if(-f $pidfile);
 	}
     }
 
-    # remove the special FTP command file after each test!
+    # remove the test server commands file after each test
     unlink($FTPDCMD);
 
-    my $e;
-    for $e (@envs) {
-        $ENV{$e}=""; # clean up
+    # run the postcheck command
+    my @postcheck= getpart("client", "postcheck");
+    if(@postcheck) {
+        $cmd = $postcheck[0];
+        chomp $cmd;
+        subVariables \$cmd;
+        if($cmd) {
+            logmsg "postcheck $cmd\n" if($verbose);
+            my $rc = runclient("$cmd");
+            # Must run the postcheck command in torture mode in order
+            # to clean up, but the result can't be relied upon.
+            if($rc != 0 && !$torture) {
+                logmsg " postcheck FAILED\n";
+                # timestamp test result verification end
+                $timevrfyend{$testnum} = Time::HiRes::time() if($timestats);
+                return 1;
+            }
+        }
+    }
+
+    # restore environment variables that were modified
+    if(%oldenv) {
+        foreach my $var (keys %oldenv) {
+            if($oldenv{$var} eq 'notset') {
+                delete $ENV{$var} if($ENV{$var});
+            }
+            else {
+                $ENV{$var} = "$oldenv{$var}";
+            }
+        }
     }
 
     # Skip all the verification on torture tests
     if ($torture) {
 	if(!$cmdres && !$keepoutfiles) {
 	    cleardir($LOGDIR);
 	}
+        # timestamp test result verification end
+        $timevrfyend{$testnum} = Time::HiRes::time() if($timestats);
         return $cmdres;
     }
 
     my @err = getpart("verify", "errorcode");
     my $errorcode = $err[0] || "0";
     my $ok="";
@@ -2231,25 +2814,27 @@
 
         # get all attributes
         my %hash = getpartattr("verify", "stdout");
 
         # get the mode attribute
         my $filemode=$hash{'mode'};
-        if(($filemode eq "text") && $has_textaware) {
+        if($filemode && ($filemode eq "text") && $has_textaware) {
             # text mode when running on windows: fix line endings
             map s/\r\n/\n/g, @actual;
         }
 
         if($hash{'nonewline'}) {
             # Yes, we must cut off the final newline from the final line
             # of the protocol data
             chomp($validstdout[$#validstdout]);
         }
 
         $res = compare("stdout", \@actual, \@validstdout);
         if($res) {
+            # timestamp test result verification end
+            $timevrfyend{$testnum} = Time::HiRes::time() if($timestats);
             return 1;
         }
         $ok .= "s";
     }
     else {
         $ok .= "-"; # stdout not checked
@@ -2259,19 +2844,21 @@
     if(!$replyattr{'nocheck'} && (@reply || $replyattr{'sendzero'})) {
         # verify the received data
         my @out = loadarray($CURLOUT);
         my %hash = getpartattr("reply", "data");
         # get the mode attribute
         my $filemode=$hash{'mode'};
-        if(($filemode eq "text") && $has_textaware) {
+        if($filemode && ($filemode eq "text") && $has_textaware) {
             # text mode when running on windows: fix line endings
             map s/\r\n/\n/g, @out;
         }
 
         $res = compare("data", \@out, \@reply);
         if ($res) {
+            # timestamp test result verification end
+            $timevrfyend{$testnum} = Time::HiRes::time() if($timestats);
             return 1;
         }
         $ok .= "d";
     }
     else {
         $ok .= "-"; # data not checked
@@ -2279,12 +2866,14 @@
 
     if(@upload) {
         # verify uploaded data
         my @out = loadarray("$LOGDIR/upload.$testnum");
         $res = compare("upload", \@out, \@upload);
         if ($res) {
+            # timestamp test result verification end
+            $timevrfyend{$testnum} = Time::HiRes::time() if($timestats);
             return 1;
         }
         $ok .= "u";
     }
     else {
         $ok .= "-"; # upload not checked
@@ -2324,12 +2913,14 @@
                 eval $strip;
             }
         }
 
         $res = compare("protocol", \@out, \@protstrip);
         if($res) {
+            # timestamp test result verification end
+            $timevrfyend{$testnum} = Time::HiRes::time() if($timestats);
             return 1;
         }
 
         $ok .= "p";
 
     }
@@ -2343,21 +2934,23 @@
         my %hash = getpartattr("verify", "file");
 
         my $filename=$hash{'name'};
         if(!$filename) {
             logmsg "ERROR: section verify=>file has no name attribute\n";
             stopservers($verbose);
+            # timestamp test result verification end
+            $timevrfyend{$testnum} = Time::HiRes::time() if($timestats);
             return -1;
         }
         my @generated=loadarray($filename);
 
         # what parts to cut off from the file
         my @stripfile = getpart("verify", "stripfile");
 
         my $filemode=$hash{'mode'};
-        if(($filemode eq "text") && $has_textaware) {
+        if($filemode && ($filemode eq "text") && $has_textaware) {
             # text mode when running on windows means adding an extra
             # strip expression
             push @stripfile, "s/\r\n/\n/";
         }
 
         my $strip;
@@ -2369,25 +2962,27 @@
         }
 
         @outfile = fixarray(@outfile);
 
         $res = compare("output", \@generated, \@outfile);
         if($res) {
+            # timestamp test result verification end
+            $timevrfyend{$testnum} = Time::HiRes::time() if($timestats);
             return 1;
         }
 
         $ok .= "o";
     }
     else {
         $ok .= "-"; # output not checked
     }
 
     # accept multiple comma-separated error codes
     my @splerr = split(/ *, */, $errorcode);
     my $errok;
-    foreach $e (@splerr) {
+    foreach my $e (@splerr) {
         if($e == $cmdres) {
             # a fine error code
             $errok = 1;
             last;
         }
     }
@@ -2398,33 +2993,17 @@
     else {
         if(!$short) {
             printf("\n%s returned $cmdres, %d was expected\n",
                    (!$tool)?"curl":$tool, $errorcode);
         }
         logmsg " exit FAILED\n";
+        # timestamp test result verification end
+        $timevrfyend{$testnum} = Time::HiRes::time() if($timestats);
         return 1;
     }
 
-    @what = getpart("client", "killserver");
-    for(@what) {
-        my $serv = $_;
-        chomp $serv;
-        if($serv =~ /^ftp(\d*)(-ipv6|)/) {
-            my ($id, $ext) = ($1, $2);
-            #print STDERR "SERV $serv $id $ext\n";
-            ftpkillslave($id, $ext, $verbose);
-        }
-        if($run{$serv}) {
-            stopserver($run{$serv}); # the pid file is in the hash table
-            $run{$serv}=0; # clear pid
-        }
-        else {
-            logmsg "RUN: The $serv server is not running\n";
-        }
-    }
-
     if($curl_debug) {
         if(! -f $memdump) {
             logmsg "\n** ALERT! memory debugging with no output file?\n";
         }
         else {
             my @memdata=`$memanalyze $memdump`;
@@ -2436,47 +3015,54 @@
                     $leak=1;
                 }
             }
             if($leak) {
                 logmsg "\n** MEMORY FAILURE\n";
                 logmsg @memdata;
+                # timestamp test result verification end
+                $timevrfyend{$testnum} = Time::HiRes::time() if($timestats);
                 return 1;
             }
             else {
                 $ok .= "m";
             }
         }
     }
     else {
         $ok .= "-"; # memory not checked
     }
 
     if($valgrind) {
-        # this is the valid protocol blurb curl should generate
         if($usevalgrind) {
-
-            opendir(DIR, "log") ||
-                return 0; # can't open log dir
+            unless(opendir(DIR, "$LOGDIR")) {
+                logmsg "ERROR: unable to read $LOGDIR\n";
+                # timestamp test result verification end
+                $timevrfyend{$testnum} = Time::HiRes::time() if($timestats);
+                return 1;
+            }
             my @files = readdir(DIR);
             closedir(DIR);
-            my $f;
-            my $l;
-            foreach $f (@files) {
-                if($f =~ /^valgrind$testnum\.pid/) {
-                    $l = $f;
+            my $vgfile;
+            foreach my $file (@files) {
+                if($file =~ /^valgrind$testnum(\..*|)$/) {
+                    $vgfile = $file;
                     last;
                 }
             }
-            my $src=$ENV{'srcdir'};
-            if(!$src) {
-                $src=".";
+            if(!$vgfile) {
+                logmsg "ERROR: valgrind log file missing for test $testnum\n";
+                # timestamp test result verification end
+                $timevrfyend{$testnum} = Time::HiRes::time() if($timestats);
+                return 1;
             }
-            my @e = valgrindparse($src, $feature{'SSL'}, "$LOGDIR/$l");
-            if($e[0]) {
+            my @e = valgrindparse($srcdir, $feature{'SSL'}, "$LOGDIR/$vgfile");
+            if(@e && $e[0]) {
                 logmsg " valgrind ERROR ";
                 logmsg @e;
+                # timestamp test result verification end
+                $timevrfyend{$testnum} = Time::HiRes::time() if($timestats);
                 return 1;
             }
             $ok .= "v";
         }
         else {
             if(!$short) {
@@ -2501,39 +3087,61 @@
 
     # the test succeeded, remove all log files
     if(!$keepoutfiles) {
         cleardir($LOGDIR);
     }
 
-    unlink($FTPDCMD); # remove the instructions for this test
+    # timestamp test result verification end
+    $timevrfyend{$testnum} = Time::HiRes::time() if($timestats);
 
     return 0;
 }
 
 #######################################################################
 # Stop all running test servers
 sub stopservers {
-    my ($verbose)=@_;
-    for(keys %run) {
-        my $server = $_;
-        my $pids=$run{$server};
-        my $pid;
-        my $prev;
-
-        foreach $pid (split(" ", $pids)) {
-            if($pid != $prev) {
-                # no need to kill same pid twice!
-                logmsg sprintf("* kill pid for %s => %d\n",
-                               $server, $pid) if($verbose);
-                stopserver($pid);
+    my $verbose = $_[0];
+    #
+    # kill sockfilter processes for all pingpong servers
+    #
+    killallsockfilters($verbose);
+    #
+    # kill all server pids from %run hash clearing them
+    #
+    my $pidlist;
+    foreach my $server (keys %run) {
+        if($run{$server}) {
+            if($verbose) {
+                my $prev = 0;
+                my $pids = $run{$server};
+                foreach my $pid (split(' ', $pids)) {
+                    if($pid != $prev) {
+                        logmsg sprintf("* kill pid for %s => %d\n",
+                            $server, $pid);
+                        $prev = $pid;
+                    }
+                }
             }
-            $prev = $pid;
+            $pidlist .= "$run{$server} ";
+            $run{$server} = 0;
         }
-        delete $run{$server};
+        $runcert{$server} = 0 if($runcert{$server});
+    }
+    killpid($verbose, $pidlist);
+    #
+    # cleanup all server pid files
+    #
+    foreach my $server (keys %serverpidfile) {
+        my $pidfile = $serverpidfile{$server};
+        my $pid = processexists($pidfile);
+        if($pid > 0) {
+            logmsg "Warning: $server server unexpectedly alive\n";
+            killpid($verbose, $pid);
+        }
+        unlink($pidfile) if(-f $pidfile);
     }
-    ftpkillslaves($verbose);
 }
 
 #######################################################################
 # startservers() starts all the named servers
 #
 # Returns: string with error reason or blank for success
@@ -2543,35 +3151,43 @@
     my ($pid, $pid2);
     for(@what) {
         my (@whatlist) = split(/\s+/,$_);
         my $what = lc($whatlist[0]);
         $what =~ s/[^a-z0-9-]//g;
 
-        if($what eq "ftp") {
-            if(!$run{'ftp'}) {
-                ($pid, $pid2) = runftpserver("", $verbose);
+        my $certfile;
+        if($what =~ /^(ftp|http|imap|pop3|smtp)s(.*)$/) {
+            $certfile = ($whatlist[1]) ? $whatlist[1] : 'stunnel.pem';
+        }
+
+        if(($what eq "pop3") ||
+           ($what eq "ftp") ||
+           ($what eq "imap") ||
+           ($what eq "smtp")) {
+            if(!$run{$what}) {
+                ($pid, $pid2) = runpingpongserver($what, "", $verbose);
                 if($pid <= 0) {
-                    return "failed starting FTP server";
+                    return "failed starting ". uc($what) ." server";
                 }
-                printf ("* pid ftp => %d %d\n", $pid, $pid2) if($verbose);
-                $run{'ftp'}="$pid $pid2";
+                printf ("* pid $what => %d %d\n", $pid, $pid2) if($verbose);
+                $run{$what}="$pid $pid2";
             }
         }
         elsif($what eq "ftp2") {
             if(!$run{'ftp2'}) {
-                ($pid, $pid2) = runftpserver("2", $verbose);
+                ($pid, $pid2) = runpingpongserver("ftp", "2", $verbose);
                 if($pid <= 0) {
                     return "failed starting FTP2 server";
                 }
                 printf ("* pid ftp2 => %d %d\n", $pid, $pid2) if($verbose);
                 $run{'ftp2'}="$pid $pid2";
             }
         }
         elsif($what eq "ftp-ipv6") {
             if(!$run{'ftp-ipv6'}) {
-                ($pid, $pid2) = runftpserver("", $verbose, "ipv6");
+                ($pid, $pid2) = runpingpongserver("ftp", "", $verbose, "ipv6");
                 if($pid <= 0) {
                     return "failed starting FTP-IPv6 server";
                 }
                 logmsg sprintf("* pid ftp-ipv6 => %d %d\n", $pid,
                        $pid2) if($verbose);
                 $run{'ftp-ipv6'}="$pid $pid2";
@@ -2595,32 +3211,57 @@
                 }
                 logmsg sprintf("* pid http-ipv6 => %d %d\n", $pid, $pid2)
                     if($verbose);
                 $run{'http-ipv6'}="$pid $pid2";
             }
         }
+        elsif($what eq "rtsp") {
+            if(!$run{'rtsp'}) {
+                ($pid, $pid2) = runrtspserver($verbose);
+                if($pid <= 0) {
+                    return "failed starting RTSP server";
+                }
+                printf ("* pid rtsp => %d %d\n", $pid, $pid2) if($verbose);
+                $run{'rtsp'}="$pid $pid2";
+            }
+        }
+        elsif($what eq "rtsp-ipv6") {
+            if(!$run{'rtsp-ipv6'}) {
+                ($pid, $pid2) = runrtspserver($verbose, "IPv6");
+                if($pid <= 0) {
+                    return "failed starting RTSP-IPv6 server";
+                }
+                logmsg sprintf("* pid rtsp-ipv6 => %d %d\n", $pid, $pid2)
+                    if($verbose);
+                $run{'rtsp-ipv6'}="$pid $pid2";
+            }
+        }
+
         elsif($what eq "ftps") {
             if(!$stunnel) {
                 # we can't run ftps tests without stunnel
                 return "no stunnel";
             }
             if(!$ssl_version) {
                 # we can't run ftps tests if libcurl is SSL-less
                 return "curl lacks SSL support";
             }
-
+            if($runcert{'ftps'} && ($runcert{'ftps'} ne $certfile)) {
+                # stop server when running and using a different cert
+                stopserver('ftps');
+            }
             if(!$run{'ftp'}) {
-                ($pid, $pid2) = runftpserver("", $verbose);
+                ($pid, $pid2) = runpingpongserver("ftp", "", $verbose);
                 if($pid <= 0) {
                     return "failed starting FTP server";
                 }
                 printf ("* pid ftp => %d %d\n", $pid, $pid2) if($verbose);
                 $run{'ftp'}="$pid $pid2";
             }
             if(!$run{'ftps'}) {
-                ($pid, $pid2) = runftpsserver($verbose);
+                ($pid, $pid2) = runftpsserver($verbose, "", $certfile);
                 if($pid <= 0) {
                     return "failed starting FTPS server (stunnel)";
                 }
                 logmsg sprintf("* pid ftps => %d %d\n", $pid, $pid2)
                     if($verbose);
                 $run{'ftps'}="$pid $pid2";
@@ -2635,23 +3276,26 @@
                 return "no stunnel";
             }
             if(!$ssl_version) {
                 # we can't run ftps tests if libcurl is SSL-less
                 return "curl lacks SSL support";
             }
-
+            if($runcert{'https'} && ($runcert{'https'} ne $certfile)) {
+                # stop server when running and using a different cert
+                stopserver('https');
+            }
             if(!$run{'http'}) {
                 ($pid, $pid2) = runhttpserver($verbose);
                 if($pid <= 0) {
                     return "failed starting HTTP server";
                 }
                 printf ("* pid http => %d %d\n", $pid, $pid2) if($verbose);
                 $run{'http'}="$pid $pid2";
             }
-            if(1 || !$run{'https'}) {  # QD to restart always conf file may change
-                ($pid, $pid2) = runhttpsserver($verbose,"",$whatlist[1]);
+            if(!$run{'https'}) {
+                ($pid, $pid2) = runhttpsserver($verbose, "", $certfile);
                 if($pid <= 0) {
                     return "failed starting HTTPS server (stunnel)";
                 }
                 logmsg sprintf("* pid https => %d %d\n", $pid, $pid2)
                     if($verbose);
                 $run{'https'}="$pid $pid2";
@@ -2746,21 +3390,157 @@
     for (@what) {
 	my $proto = lc($_);
 	chomp $proto;
         $proto =~ s/\s.*//g;  # take first word
 	if (! grep /^$proto$/, @protocols) {
 	    if (substr($proto,0,5) ne "socks") {
-		    return "curl lacks $proto support";
+                return "curl lacks $proto support";
 	    }
 	}
     }
 
     return &startservers(@what);
 }
 
 #######################################################################
+# runtimestats displays test-suite run time statistics
+#
+sub runtimestats {
+    my $lasttest = $_[0];
+
+    return if(not $timestats);
+
+    logmsg "\nTest suite total running time breakdown per task...\n\n";
+
+    my @timesrvr;
+    my @timeprep;
+    my @timetool;
+    my @timelock;
+    my @timevrfy;
+    my @timetest;
+    my $timesrvrtot = 0.0;
+    my $timepreptot = 0.0;
+    my $timetooltot = 0.0;
+    my $timelocktot = 0.0;
+    my $timevrfytot = 0.0;
+    my $timetesttot = 0.0;
+    my $counter;
+
+    for my $testnum (1 .. $lasttest) {
+        if($timesrvrini{$testnum}) {
+            $timesrvrtot += $timesrvrend{$testnum} - $timesrvrini{$testnum};
+            $timepreptot +=
+                (($timetoolini{$testnum} - $timeprepini{$testnum}) -
+                 ($timesrvrend{$testnum} - $timesrvrini{$testnum}));
+            $timetooltot += $timetoolend{$testnum} - $timetoolini{$testnum};
+            $timelocktot += $timesrvrlog{$testnum} - $timetoolend{$testnum};
+            $timevrfytot += $timevrfyend{$testnum} - $timesrvrlog{$testnum};
+            $timetesttot += $timevrfyend{$testnum} - $timeprepini{$testnum};
+            push @timesrvr, sprintf("%06.3f  %04d",
+                $timesrvrend{$testnum} - $timesrvrini{$testnum}, $testnum);
+            push @timeprep, sprintf("%06.3f  %04d",
+                ($timetoolini{$testnum} - $timeprepini{$testnum}) -
+                ($timesrvrend{$testnum} - $timesrvrini{$testnum}), $testnum);
+            push @timetool, sprintf("%06.3f  %04d",
+                $timetoolend{$testnum} - $timetoolini{$testnum}, $testnum);
+            push @timelock, sprintf("%06.3f  %04d",
+                $timesrvrlog{$testnum} - $timetoolend{$testnum}, $testnum);
+            push @timevrfy, sprintf("%06.3f  %04d",
+                $timevrfyend{$testnum} - $timesrvrlog{$testnum}, $testnum);
+            push @timetest, sprintf("%06.3f  %04d",
+                $timevrfyend{$testnum} - $timeprepini{$testnum}, $testnum);
+        }
+    }
+
+    {
+        no warnings 'numeric';
+        @timesrvr = sort { $b <=> $a } @timesrvr;
+        @timeprep = sort { $b <=> $a } @timeprep;
+        @timetool = sort { $b <=> $a } @timetool;
+        @timelock = sort { $b <=> $a } @timelock;
+        @timevrfy = sort { $b <=> $a } @timevrfy;
+        @timetest = sort { $b <=> $a } @timetest;
+    }
+
+    logmsg "Spent ". sprintf("%08.3f ", $timesrvrtot) .
+           "seconds starting and verifying test harness servers.\n";
+    logmsg "Spent ". sprintf("%08.3f ", $timepreptot) .
+           "seconds reading definitions and doing test preparations.\n";
+    logmsg "Spent ". sprintf("%08.3f ", $timetooltot) .
+           "seconds actually running test tools.\n";
+    logmsg "Spent ". sprintf("%08.3f ", $timelocktot) .
+           "seconds awaiting server logs lock removal.\n";
+    logmsg "Spent ". sprintf("%08.3f ", $timevrfytot) .
+           "seconds verifying test results.\n";
+    logmsg "Spent ". sprintf("%08.3f ", $timetesttot) .
+           "seconds doing all of the above.\n";
+
+    $counter = 25;
+    logmsg "\nTest server starting and verification time per test ".
+        sprintf("(%s)...\n\n", (not $fullstats)?"top $counter":"full");
+    logmsg "-time-  test\n";
+    logmsg "------  ----\n";
+    foreach my $txt (@timesrvr) {
+        last if((not $fullstats) && (not $counter--));
+        logmsg "$txt\n";
+    }
+
+    $counter = 10;
+    logmsg "\nTest definition reading and preparation time per test ".
+        sprintf("(%s)...\n\n", (not $fullstats)?"top $counter":"full");
+    logmsg "-time-  test\n";
+    logmsg "------  ----\n";
+    foreach my $txt (@timeprep) {
+        last if((not $fullstats) && (not $counter--));
+        logmsg "$txt\n";
+    }
+
+    $counter = 25;
+    logmsg "\nTest tool execution time per test ".
+        sprintf("(%s)...\n\n", (not $fullstats)?"top $counter":"full");
+    logmsg "-time-  test\n";
+    logmsg "------  ----\n";
+    foreach my $txt (@timetool) {
+        last if((not $fullstats) && (not $counter--));
+        logmsg "$txt\n";
+    }
+
+    $counter = 15;
+    logmsg "\nTest server logs lock removal time per test ".
+        sprintf("(%s)...\n\n", (not $fullstats)?"top $counter":"full");
+    logmsg "-time-  test\n";
+    logmsg "------  ----\n";
+    foreach my $txt (@timelock) {
+        last if((not $fullstats) && (not $counter--));
+        logmsg "$txt\n";
+    }
+
+    $counter = 10;
+    logmsg "\nTest results verification time per test ".
+        sprintf("(%s)...\n\n", (not $fullstats)?"top $counter":"full");
+    logmsg "-time-  test\n";
+    logmsg "------  ----\n";
+    foreach my $txt (@timevrfy) {
+        last if((not $fullstats) && (not $counter--));
+        logmsg "$txt\n";
+    }
+
+    $counter = 50;
+    logmsg "\nTotal time per test ".
+        sprintf("(%s)...\n\n", (not $fullstats)?"top $counter":"full");
+    logmsg "-time-  test\n";
+    logmsg "------  ----\n";
+    foreach my $txt (@timetest) {
+        last if((not $fullstats) && (not $counter--));
+        logmsg "$txt\n";
+    }
+
+    logmsg "\n";
+}
+
+#######################################################################
 # Check options to this test program
 #
 
 my $number=0;
 my $fromnum=-1;
 my @testthis;
@@ -2826,12 +3606,40 @@
         $listonly=1;
     }
     elsif($ARGV[0] eq "-k") {
         # keep stdout and stderr files after tests
         $keepoutfiles=1;
     }
+    elsif($ARGV[0] eq "-r") {
+        # run time statistics needs Time::HiRes
+        if($Time::HiRes::VERSION) {
+            keys(%timeprepini) = 1000;
+            keys(%timesrvrini) = 1000;
+            keys(%timesrvrend) = 1000;
+            keys(%timetoolini) = 1000;
+            keys(%timetoolend) = 1000;
+            keys(%timesrvrlog) = 1000;
+            keys(%timevrfyend) = 1000;
+            $timestats=1;
+            $fullstats=0;
+        }
+    }
+    elsif($ARGV[0] eq "-rf") {
+        # run time statistics needs Time::HiRes
+        if($Time::HiRes::VERSION) {
+            keys(%timeprepini) = 1000;
+            keys(%timesrvrini) = 1000;
+            keys(%timesrvrend) = 1000;
+            keys(%timetoolini) = 1000;
+            keys(%timetoolend) = 1000;
+            keys(%timesrvrlog) = 1000;
+            keys(%timevrfyend) = 1000;
+            $timestats=1;
+            $fullstats=1;
+        }
+    }
     elsif(($ARGV[0] eq "-h") || ($ARGV[0] eq "--help")) {
         # show help text
         print <<EOHELP
 Usage: runtests.pl [options] [test selection(s)]
   -a       continue even if a test fails
   -bN      use base port number N for test servers (default $base)
@@ -2840,12 +3648,14 @@
   -g       run the test case with gdb
   -h       this help text
   -k       keep stdout and stderr files present after tests
   -l       list all test case names/descriptions
   -n       no valgrind
   -p       print log file contents when a test fails
+  -r       run time statistics
+  -rf      full run time statistics
   -s       short output
   -t[N]    torture (simulate memory alloc failures); N means fail Nth alloc
   -v       verbose output
   [num]    like "5 6 9" or " 5 to 22 " to run those tests only
   [!num]   like "!5 !6 !9" to disable those tests
   [keyword] like "IPv6" to select only tests containing the key word
@@ -2883,13 +3693,13 @@
     	print "Unknown option: $ARGV[0]\n";
     	exit;
     }
     shift @ARGV;
 } 
 
-if($testthis[0] ne "") {
+if(@testthis && ($testthis[0] ne "")) {
     $TESTCASES=join(" ", @testthis);
 }
 
 if($valgrind) {
     # we have found valgrind on the host, use it
 
@@ -2902,13 +3712,13 @@
     } else {
 
 	# since valgrind 2.1.x, '--tool' option is mandatory
 	# use it, if it is supported by the version installed on the system
 	runclient("valgrind --help 2>&1 | grep -- --tool > /dev/null 2>&1");
 	if (($? >> 8)==0) {
-	    $valgrind_tool="--tool=memcheck ";
+            $valgrind_tool="--tool=memcheck";
 	}
 	open(C, "<$CURL");
 	my $l = <C>;
 	if($l =~ /^\#\!/) {
 	    # A shell script. This is typically when built with libtool,
 	    $valgrind="../libtool --mode=execute $valgrind";
@@ -2917,14 +3727,17 @@
 
 	# valgrind 3 renamed the --logfile option to --log-file!!!
 	my $ver=join(' ', runclientoutput("valgrind --version"));
 	# cut off all but digits and dots
 	$ver =~ s/[^0-9.]//g;
 
-	if($ver >= 3) {
-	    $valgrind_logfile="--log-file";
+        if($ver =~ /^(\d+)/) {
+            $ver = $1;
+            if($ver >= 3) {
+                $valgrind_logfile="--log-file";
+            }
 	}
     }
 }
 
 if ($gdbthis) {
     # open the executable curl and read the first 4 bytes of it
@@ -2936,33 +3749,48 @@
 	# A shell script. This is typically when built with libtool,
 	$libtool = 1;
 	$gdb = "libtool --mode=execute gdb";
     }
 }
 
-$HTTPPORT =  $base + 0; # HTTP server port
-$HTTPSPORT = $base + 1; # HTTPS server port
-$FTPPORT =   $base + 2; # FTP server port
-$FTPSPORT =  $base + 3; # FTPS server port
-$HTTP6PORT = $base + 4; # HTTP IPv6 server port (different IP protocol
+$HTTPPORT =  $base++; # HTTP server port
+$HTTPSPORT = $base++; # HTTPS server port
+$FTPPORT =   $base++; # FTP server port
+$FTPSPORT =  $base++; # FTPS server port
+$HTTP6PORT = $base++; # HTTP IPv6 server port (different IP protocol
                         # but we follow the same port scheme anyway)
-$FTP2PORT =  $base + 5; # FTP server 2 port
-$FTP6PORT =  $base + 6; # FTP IPv6 port
-$TFTPPORT =  $base + 7; # TFTP (UDP) port
-$TFTP6PORT =  $base + 8; # TFTP IPv6 (UDP) port
-$SSHPORT =   $base + 9; # SSH (SCP/SFTP) port
-$SOCKSPORT =   $base + 10; # SOCKS port
+$FTP2PORT =  $base++; # FTP server 2 port
+$FTP6PORT =  $base++; # FTP IPv6 port
+$TFTPPORT =  $base++; # TFTP (UDP) port
+$TFTP6PORT = $base++; # TFTP IPv6 (UDP) port
+$SSHPORT =   $base++; # SSH (SCP/SFTP) port
+$SOCKSPORT = $base++; # SOCKS port
+$POP3PORT =  $base++;
+$POP36PORT = $base++;
+$IMAPPORT =  $base++;
+$IMAP6PORT = $base++;
+$SMTPPORT =  $base++;
+$SMTP6PORT = $base++;
+$RTSPPORT =  $base++;
+$RTSP6PORT = $base++;
 
 #######################################################################
 # clear and create logging directory:
 #
 
 cleardir($LOGDIR);
 mkdir($LOGDIR, 0777);
 
 #######################################################################
+# initialize some variables
+#
+
+get_disttests();
+init_serverpidfile_hash();
+
+#######################################################################
 # Output curl version and host info being tested
 #
 
 if(!$listonly) {
     checksystem();
 }
@@ -3038,16 +3866,23 @@
 		    logmsg " $line\n";
 		}
 		$linecount++;
 		$truncate = $linecount > 1000;
 	    }
         }
-        if (@tail) {
-            logmsg "=== File too long: lines here were removed\n";
-            # This won't work properly if time stamps are enabled in logmsg
-            logmsg join('',@tail[$#tail-200..$#tail]);
+        if(@tail) {
+            my $tailshow = 200;
+            my $tailskip = 0;
+            my $tailtotal = scalar @tail;
+            if($tailtotal > $tailshow) {
+                $tailskip = $tailtotal - $tailshow;
+                logmsg "=== File too long: $tailskip lines omitted here\n";
+            }
+            for($tailskip .. $tailtotal-1) {
+                logmsg "$tail[$_]";
+            }
         }
         close(SINGLE);
     }
 }
 
 sub displaylogs {
@@ -3086,13 +3921,13 @@
         if(($log =~ /^test\d+\.txt/) && ($log !~ /^test$testnum\.txt/)) {
             next; # skip testNnn.txt of other tests
         }
         if(($log =~ /^file\d+\.txt/) && ($log !~ /^file$testnum\.txt/)) {
             next; # skip fileNnn.txt of other tests
         }
-        if(($log =~ /^valgrind\d+/) && ($log !~ /^valgrind$testnum/)) {
+        if(($log =~ /^valgrind\d+/) && ($log !~ /^valgrind$testnum(\..*|)$/)) {
             next; # skip valgrindNnn of other tests
         }
         logmsg "=== Start of file $log\n";
         displaylogcontent("$LOGDIR/$log");
         logmsg "=== End of file $log\n";
     }
@@ -3103,13 +3938,13 @@
 #
 
 my $failed;
 my $testnum;
 my $ok=0;
 my $total=0;
-my $lasttest;
+my $lasttest=0;
 my @at = split(" ", $TESTCASES);
 my $count=0;
 
 $start = time();
 
 foreach $testnum (@at) {
@@ -3141,24 +3976,26 @@
         $ok++; # successful test counter
     }
 
     # loop for next test
 }
 
+my $sofar = time() - $start;
+
 #######################################################################
 # Close command log
 #
 close(CMDLOG);
 
 # Tests done, stop the servers
 stopservers($verbose);
 
-unlink($SOCKSPIDFILE);
-
 my $all = $total + $skipped;
 
+runtimestats($lasttest);
+
 if($total) {
     logmsg sprintf("TESTDONE: $ok tests out of $total reported OK: %d%%\n",
                    $ok/$total*100);
 
     if($ok != $total) {
         logmsg "TESTFAIL: These test cases failed: $failed\n";
@@ -3166,14 +4003,14 @@
 }
 else {
     logmsg "TESTFAIL: No tests were performed\n";
 }
 
 if($all) {
-    my $sofar = time()-$start;
-    logmsg "TESTDONE: $all tests were considered during $sofar seconds.\n";
+    logmsg "TESTDONE: $all tests were considered during ".
+        sprintf("%.0f", $sofar) ." seconds.\n";
 }
 
 if($skipped) {
     my $s=0;
     logmsg "TESTINFO: $skipped tests were skipped due to these restraints:\n";
 
@@ -3183,13 +4020,13 @@
 
         # now show all test case numbers that had this reason for being
         # skipped
         my $c=0;
         for(0 .. scalar @teststat) {
             my $t = $_;
-            if($teststat[$_] eq $r) {
+            if($teststat[$_] && ($teststat[$_] eq $r)) {
                 logmsg ", " if($c);
                 logmsg $_;
                 $c++;
             }
         }
         logmsg ")\n";
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests: secureserver.pl
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/getpart.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/getpart.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/getpart.c	2009-04-23 19:51:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/getpart.c	2010-02-02 20:40:53.000000000 +0800
@@ -2,28 +2,30 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: getpart.c,v 1.29 2009-04-21 11:46:17 yangtse Exp $
+ * $Id: getpart.c,v 1.30 2010-02-02 12:39:10 yangtse Exp $
  ***************************************************************************/
 
+#define CURL_NO_OLDIES
+
 #include "setup.h"
 
 #include "getpart.h"
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/Makefile.am	2009-07-23 04:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/Makefile.am	2009-11-06 03:12:20.000000000 +0800
@@ -15,39 +15,42 @@
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: Makefile.am,v 1.28 2009-07-14 13:25:15 gknauf Exp $
+# $Id: Makefile.am,v 1.29 2009-11-05 15:04:04 yangtse Exp $
 ###########################################################################
 AUTOMAKE_OPTIONS = foreign nostdinc
 
 # Specify our include paths here, and do it relative to $(top_srcdir) and
 # $(top_builddir), to ensure that these paths which belong to the library
 # being currently built and tested are searched before the library which
 # might possibly already be installed in the system.
 #
-# $(top_builddir)/include is for libcurl's generated curl/curlbuild.h file
+# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h
+# $(top_builddir)/include for generated curlbuild.h included from lib/setup.h
 # $(top_srcdir)/include is for libcurl's external include files
 # $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file
 # $(top_srcdir)/lib is for libcurl's lib/setup.h and other "borrowed" files
 # $(top_builddir)/ares is for in-tree c-ares's generated ares_build.h file
 # $(top_srcdir)/ares is for in-tree c-ares's external include files
 
 if USE_EMBEDDED_ARES
-INCLUDES = -I$(top_builddir)/include \
-           -I$(top_srcdir)/include   \
-           -I$(top_builddir)/lib     \
-           -I$(top_srcdir)/lib       \
-           -I$(top_builddir)/ares    \
+INCLUDES = -I$(top_builddir)/include/curl \
+           -I$(top_builddir)/include      \
+           -I$(top_srcdir)/include        \
+           -I$(top_builddir)/lib          \
+           -I$(top_srcdir)/lib            \
+           -I$(top_builddir)/ares         \
            -I$(top_srcdir)/ares
 else
-INCLUDES = -I$(top_builddir)/include \
-           -I$(top_srcdir)/include   \
-           -I$(top_builddir)/lib     \
+INCLUDES = -I$(top_builddir)/include/curl \
+           -I$(top_builddir)/include      \
+           -I$(top_srcdir)/include        \
+           -I$(top_builddir)/lib          \
            -I$(top_srcdir)/lib
 endif
 
 # Makefile.inc provides the source defines (noinst_PROGRAMS, useful, *_SOURCES, and *_LDADD)
 include Makefile.inc
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/Makefile.in	2009-11-04 20:26:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/Makefile.in	2010-02-05 05:42:22.000000000 +0800
@@ -36,13 +36,13 @@
 POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
 	$(srcdir)/Makefile.inc
 noinst_PROGRAMS = sws$(EXEEXT) getpart$(EXEEXT) sockfilt$(EXEEXT) \
-	resolve$(EXEEXT) tftpd$(EXEEXT)
+	resolve$(EXEEXT) tftpd$(EXEEXT) rtspd$(EXEEXT)
 subdir = tests/server
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/m4/curl-compilers.m4 \
 	$(top_srcdir)/m4/curl-confopts.m4 \
 	$(top_srcdir)/m4/curl-functions.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
@@ -64,12 +64,15 @@
 am_getpart_OBJECTS = testpart.$(OBJEXT) $(am__objects_1)
 getpart_OBJECTS = $(am_getpart_OBJECTS)
 getpart_DEPENDENCIES =
 am_resolve_OBJECTS = resolve.$(OBJEXT) util.$(OBJEXT) $(am__objects_1)
 resolve_OBJECTS = $(am_resolve_OBJECTS)
 resolve_DEPENDENCIES =
+am_rtspd_OBJECTS = rtspd.$(OBJEXT) util.$(OBJEXT) $(am__objects_1)
+rtspd_OBJECTS = $(am_rtspd_OBJECTS)
+rtspd_DEPENDENCIES =
 am_sockfilt_OBJECTS = sockfilt.$(OBJEXT) util.$(OBJEXT) \
 	$(am__objects_1) inet_pton.$(OBJEXT)
 sockfilt_OBJECTS = $(am_sockfilt_OBJECTS)
 sockfilt_DEPENDENCIES =
 am_sws_OBJECTS = sws.$(OBJEXT) util.$(OBJEXT) $(am__objects_1)
 sws_OBJECTS = $(am_sws_OBJECTS)
@@ -85,15 +88,15 @@
 LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
 	$(AM_CFLAGS) $(CFLAGS)
 CCLD = $(CC)
 LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
-SOURCES = $(getpart_SOURCES) $(resolve_SOURCES) $(sockfilt_SOURCES) \
-	$(sws_SOURCES) $(tftpd_SOURCES)
-DIST_SOURCES = $(getpart_SOURCES) $(resolve_SOURCES) \
+SOURCES = $(getpart_SOURCES) $(resolve_SOURCES) $(rtspd_SOURCES) \
+	$(sockfilt_SOURCES) $(sws_SOURCES) $(tftpd_SOURCES)
+DIST_SOURCES = $(getpart_SOURCES) $(resolve_SOURCES) $(rtspd_SOURCES) \
 	$(sockfilt_SOURCES) $(sws_SOURCES) $(tftpd_SOURCES)
 ETAGS = etags
 CTAGS = ctags
 DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
 ACLOCAL = @ACLOCAL@
 AMDEP_FALSE = @AMDEP_FALSE@
@@ -105,26 +108,31 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
+CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CROSSCOMPILING_FALSE = @CROSSCOMPILING_FALSE@
 CROSSCOMPILING_TRUE = @CROSSCOMPILING_TRUE@
 CURLDEBUG_FALSE = @CURLDEBUG_FALSE@
 CURLDEBUG_TRUE = @CURLDEBUG_TRUE@
 CURL_CA_BUNDLE = @CURL_CA_BUNDLE@
 CURL_DISABLE_DICT = @CURL_DISABLE_DICT@
 CURL_DISABLE_FILE = @CURL_DISABLE_FILE@
 CURL_DISABLE_FTP = @CURL_DISABLE_FTP@
 CURL_DISABLE_HTTP = @CURL_DISABLE_HTTP@
+CURL_DISABLE_IMAP = @CURL_DISABLE_IMAP@
 CURL_DISABLE_LDAP = @CURL_DISABLE_LDAP@
 CURL_DISABLE_LDAPS = @CURL_DISABLE_LDAPS@
+CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
+CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
+CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
 CURL_LIBS = @CURL_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -135,13 +143,12 @@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
-HAVE_ARES = @HAVE_ARES@
 HAVE_LIBZ = @HAVE_LIBZ@
 HAVE_LIBZ_FALSE = @HAVE_LIBZ_FALSE@
 HAVE_LIBZ_TRUE = @HAVE_LIBZ_TRUE@
 HAVE_PK11_CREATEGENERICOBJECT = @HAVE_PK11_CREATEGENERICOBJECT@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL_DATA = @INSTALL_DATA@
@@ -201,12 +208,13 @@
 STATICLIB_FALSE = @STATICLIB_FALSE@
 STATICLIB_TRUE = @STATICLIB_TRUE@
 STRIP = @STRIP@
 SUPPORT_FEATURES = @SUPPORT_FEATURES@
 SUPPORT_PROTOCOLS = @SUPPORT_PROTOCOLS@
 TEST_SERVER_LIBS = @TEST_SERVER_LIBS@
+USE_ARES = @USE_ARES@
 USE_EMBEDDED_ARES_FALSE = @USE_EMBEDDED_ARES_FALSE@
 USE_EMBEDDED_ARES_TRUE = @USE_EMBEDDED_ARES_TRUE@
 USE_GNUTLS = @USE_GNUTLS@
 USE_LIBSSH2 = @USE_LIBSSH2@
 USE_MANUAL_FALSE = @USE_MANUAL_FALSE@
 USE_MANUAL_TRUE = @USE_MANUAL_TRUE@
@@ -280,37 +288,40 @@
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: Makefile.am,v 1.28 2009-07-14 13:25:15 gknauf Exp $
+# $Id: Makefile.am,v 1.29 2009-11-05 15:04:04 yangtse Exp $
 ###########################################################################
 AUTOMAKE_OPTIONS = foreign nostdinc
-@USE_EMBEDDED_ARES_FALSE@INCLUDES = -I$(top_builddir)/include \
-@USE_EMBEDDED_ARES_FALSE@           -I$(top_srcdir)/include   \
-@USE_EMBEDDED_ARES_FALSE@           -I$(top_builddir)/lib     \
+@USE_EMBEDDED_ARES_FALSE@INCLUDES = -I$(top_builddir)/include/curl \
+@USE_EMBEDDED_ARES_FALSE@           -I$(top_builddir)/include      \
+@USE_EMBEDDED_ARES_FALSE@           -I$(top_srcdir)/include        \
+@USE_EMBEDDED_ARES_FALSE@           -I$(top_builddir)/lib          \
 @USE_EMBEDDED_ARES_FALSE@           -I$(top_srcdir)/lib
 
 
 # Specify our include paths here, and do it relative to $(top_srcdir) and
 # $(top_builddir), to ensure that these paths which belong to the library
 # being currently built and tested are searched before the library which
 # might possibly already be installed in the system.
 #
-# $(top_builddir)/include is for libcurl's generated curl/curlbuild.h file
+# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h
+# $(top_builddir)/include for generated curlbuild.h included from lib/setup.h
 # $(top_srcdir)/include is for libcurl's external include files
 # $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file
 # $(top_srcdir)/lib is for libcurl's lib/setup.h and other "borrowed" files
 # $(top_builddir)/ares is for in-tree c-ares's generated ares_build.h file
 # $(top_srcdir)/ares is for in-tree c-ares's external include files
-@USE_EMBEDDED_ARES_TRUE@INCLUDES = -I$(top_builddir)/include \
-@USE_EMBEDDED_ARES_TRUE@           -I$(top_srcdir)/include   \
-@USE_EMBEDDED_ARES_TRUE@           -I$(top_builddir)/lib     \
-@USE_EMBEDDED_ARES_TRUE@           -I$(top_srcdir)/lib       \
-@USE_EMBEDDED_ARES_TRUE@           -I$(top_builddir)/ares    \
+@USE_EMBEDDED_ARES_TRUE@INCLUDES = -I$(top_builddir)/include/curl \
+@USE_EMBEDDED_ARES_TRUE@           -I$(top_builddir)/include      \
+@USE_EMBEDDED_ARES_TRUE@           -I$(top_srcdir)/include        \
+@USE_EMBEDDED_ARES_TRUE@           -I$(top_builddir)/lib          \
+@USE_EMBEDDED_ARES_TRUE@           -I$(top_srcdir)/lib            \
+@USE_EMBEDDED_ARES_TRUE@           -I$(top_builddir)/ares         \
 @USE_EMBEDDED_ARES_TRUE@           -I$(top_srcdir)/ares
 
 useful = getpart.c getpart.h $(top_srcdir)/lib/strequal.c	\
  $(top_srcdir)/lib/base64.c $(top_srcdir)/lib/mprintf.c		\
  $(top_srcdir)/lib/memdebug.c $(top_srcdir)/lib/timeval.c
 
@@ -324,12 +335,14 @@
 sockfilt_LDADD = @TEST_SERVER_LIBS@
 getpart_SOURCES = testpart.c $(useful)
 # This is needed because of (unused) network debugging functions in memdebug.c
 getpart_LDADD = @TEST_SERVER_LIBS@
 tftpd_SOURCES = tftpd.c util.c util.h $(useful) tftp.h
 tftpd_LDADD = @TEST_SERVER_LIBS@
+rtspd_SOURCES = rtspd.c util.c util.h $(useful)
+rtspd_LDADD = @TEST_SERVER_LIBS@
 
 # Makefile.inc provides the source defines (noinst_PROGRAMS, useful, *_SOURCES, and *_LDADD)
 extra_DIST = base64.pl Makefile.inc
 all: all-am
 
 .SUFFIXES:
@@ -373,12 +386,15 @@
 getpart$(EXEEXT): $(getpart_OBJECTS) $(getpart_DEPENDENCIES) 
 	@rm -f getpart$(EXEEXT)
 	$(LINK) $(getpart_LDFLAGS) $(getpart_OBJECTS) $(getpart_LDADD) $(LIBS)
 resolve$(EXEEXT): $(resolve_OBJECTS) $(resolve_DEPENDENCIES) 
 	@rm -f resolve$(EXEEXT)
 	$(LINK) $(resolve_LDFLAGS) $(resolve_OBJECTS) $(resolve_LDADD) $(LIBS)
+rtspd$(EXEEXT): $(rtspd_OBJECTS) $(rtspd_DEPENDENCIES) 
+	@rm -f rtspd$(EXEEXT)
+	$(LINK) $(rtspd_LDFLAGS) $(rtspd_OBJECTS) $(rtspd_LDADD) $(LIBS)
 sockfilt$(EXEEXT): $(sockfilt_OBJECTS) $(sockfilt_DEPENDENCIES) 
 	@rm -f sockfilt$(EXEEXT)
 	$(LINK) $(sockfilt_LDFLAGS) $(sockfilt_OBJECTS) $(sockfilt_LDADD) $(LIBS)
 sws$(EXEEXT): $(sws_OBJECTS) $(sws_DEPENDENCIES) 
 	@rm -f sws$(EXEEXT)
 	$(LINK) $(sws_LDFLAGS) $(sws_OBJECTS) $(sws_LDADD) $(LIBS)
@@ -395,12 +411,13 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base64.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getpart.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inet_pton.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memdebug.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mprintf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resolve.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rtspd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sockfilt.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strequal.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sws.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testpart.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tftpd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timeval.Po@am__quote@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/Makefile.inc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/Makefile.inc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/Makefile.inc	2009-04-08 05:59:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/Makefile.inc	2010-02-02 06:53:01.000000000 +0800
@@ -1,7 +1,7 @@
-noinst_PROGRAMS = sws getpart sockfilt resolve tftpd
+noinst_PROGRAMS = sws getpart sockfilt resolve tftpd rtspd
 
 useful = getpart.c getpart.h $(top_srcdir)/lib/strequal.c	\
  $(top_srcdir)/lib/base64.c $(top_srcdir)/lib/mprintf.c		\
  $(top_srcdir)/lib/memdebug.c $(top_srcdir)/lib/timeval.c
 
 resolve_SOURCES= resolve.c util.c util.h $(useful)
@@ -17,6 +17,9 @@
 getpart_SOURCES= testpart.c $(useful)
 # This is needed because of (unused) network debugging functions in memdebug.c
 getpart_LDADD = @TEST_SERVER_LIBS@
 
 tftpd_SOURCES = tftpd.c util.c util.h $(useful) tftp.h
 tftpd_LDADD = @TEST_SERVER_LIBS@
+
+rtspd_SOURCES = rtspd.c util.c util.h $(useful)
+rtspd_LDADD = @TEST_SERVER_LIBS@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/resolve.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/resolve.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/resolve.c	2008-10-29 06:12:02.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/resolve.c	2010-02-02 20:40:53.000000000 +0800
@@ -2,37 +2,40 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: resolve.c,v 1.13 2008-10-28 20:03:22 danf Exp $
+ * $Id: resolve.c,v 1.14 2010-02-02 12:39:10 yangtse Exp $
  ***************************************************************************/
 
 /* Purpose
  *
  * Resolve the given name, using system name resolve functions (NOT any
  * function provided by libcurl). Used to see if the name exists and thus if
  * we can allow a test case to use it for testing.
  *
  * Like if 'localhost' actual exists etc.
  *
  */
+
+#define CURL_NO_OLDIES
+
 #include "setup.h" /* portability help from the lib directory */
 
 #ifdef HAVE_SIGNAL_H
 #include <signal.h>
 #endif
 #ifdef HAVE_UNISTD_H
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server: rtspd.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/sockfilt.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/sockfilt.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/sockfilt.c	2009-10-18 02:31:50.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/sockfilt.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,26 +2,26 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: sockfilt.c,v 1.65 2009-10-10 12:29:33 yangtse Exp $
+ * $Id: sockfilt.c,v 1.68 2010-02-04 17:17:19 yangtse Exp $
  ***************************************************************************/
 
 /* Purpose
  *
  * 1. Accept a TCP connection on a custom port (ipv4 or ipv6), or connect
  *    to a given (localhost) port.
@@ -77,12 +77,14 @@
  * signals might still be received, or that there might be systems on which it
  * is not possible to trap and ignore some of the above signals.  This implies
  * that for increased portability and reliability the program must be coded as
  * if no signal was being ignored or handled at all.  Enjoy it!
  */
 
+#define CURL_NO_OLDIES
+
 #include "setup.h" /* portability help from the lib directory */
 
 #ifdef HAVE_SIGNAL_H
 #include <signal.h>
 #endif
 #ifdef HAVE_UNISTD_H
@@ -755,13 +757,14 @@
     me6.sin6_port = htons(*listenport);
     rc = bind(sock, (struct sockaddr *) &me6, sizeof(me6));
   }
 #endif /* ENABLE_IPV6 */
   if(rc) {
     error = SOCKERRNO;
-    logmsg("Error binding socket: (%d) %s", error, strerror(error));
+    logmsg("Error binding socket on port %hu: (%d) %s",
+           *listenport, error, strerror(error));
     sclose(sock);
     return CURL_SOCKET_BAD;
   }
 
   if(!*listenport) {
     /* The system was supposed to choose a port number, figure out which
@@ -884,22 +887,40 @@
 #endif
       arg++;
     }
     else if(!strcmp("--port", argv[arg])) {
       arg++;
       if(argc>arg) {
-        port = (unsigned short)atoi(argv[arg]);
+        char *endptr;
+        long lnum = -1;
+        lnum = strtol(argv[arg], &endptr, 10);
+        if((endptr != argv[arg] + strlen(argv[arg])) ||
+           ((lnum != 0L) && ((lnum < 1025L) || (lnum > 65535L)))) {
+          fprintf(stderr, "sockfilt: invalid --port argument (%s)\n",
+                  argv[arg]);
+          return 0;
+        }
+        port = (unsigned short)(lnum & 0xFFFFL);
         arg++;
       }
     }
     else if(!strcmp("--connect", argv[arg])) {
       /* Asked to actively connect to the specified local port instead of
          doing a passive server-style listening. */
       arg++;
       if(argc>arg) {
-        connectport = (unsigned short)atoi(argv[arg]);
+        char *endptr;
+        long lnum = -1;
+        lnum = strtol(argv[arg], &endptr, 10);
+        if((endptr != argv[arg] + strlen(argv[arg])) ||
+           (lnum < 1025L) || (lnum > 65535L)) {
+          fprintf(stderr, "sockfilt: invalid --connect argument (%s)\n",
+                  argv[arg]);
+          return 0;
+        }
+        connectport = (unsigned short)(lnum & 0xFFFFL);
         arg++;
       }
     }
     else if(!strcmp("--addr", argv[arg])) {
       /* Set an IP address to use with --connect; otherwise use localhost */
       arg++;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/sws.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/sws.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/sws.c	2009-09-20 19:52:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/sws.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,34 +2,37 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: sws.c,v 1.136 2009-09-17 14:02:50 yangtse Exp $
+ * $Id: sws.c,v 1.148 2010-02-04 17:17:19 yangtse Exp $
  ***************************************************************************/
 
 /* sws.c: simple (silly?) web server
 
    This code was originally graciously donated to the project by Juergen
    Wilke. Thanks a bunch!
 
  */
+
+#define CURL_NO_OLDIES
+
 #include "setup.h" /* portability help from the lib directory */
 
 #ifdef HAVE_SIGNAL_H
 #include <signal.h>
 #endif
 #ifdef HAVE_UNISTD_H
@@ -71,12 +74,13 @@
 #endif
 
 #ifdef ENABLE_IPV6
 static bool use_ipv6 = FALSE;
 #endif
 static const char *ipv_inuse = "IPv4";
+static int serverlogslocked = 0;
 
 #define REQBUFSIZ 150000
 #define REQBUFSIZ_TXT "149999"
 
 static long prevtestno=-1;    /* previous test number we served */
 static long prevpartno=-1;    /* previous part number we served */
@@ -87,16 +91,16 @@
 #define RCMD_NORMALREQ 0 /* default request, use the tests file normally */
 #define RCMD_IDLE      1 /* told to sit idle */
 #define RCMD_STREAM    2 /* told to stream */
 
 struct httprequest {
   char reqbuf[REQBUFSIZ]; /* buffer area for the incoming request */
-  int checkindex; /* where to start checking of the request */
-  int offset;     /* size of the incoming request */
-  long testno;     /* test number found in the request */
-  long partno;     /* part number found in the request */
+  size_t checkindex; /* where to start checking of the request */
+  size_t offset;     /* size of the incoming request */
+  long testno;       /* test number found in the request */
+  long partno;       /* part number found in the request */
   bool open;      /* keep connection open info, as found in the request */
   bool auth_req;  /* authentication required, don't wait for body unless
                      there's an Authorization header */
   bool auth;      /* Authorization header present in the incoming request */
   size_t cl;      /* Content-Length of the incoming request */
   bool digest;    /* Authorization digest header found */
@@ -105,18 +109,18 @@
                      request/response */
   int skip;       /* if non-zero, the server is instructed to not read this
                      many bytes from a PUT/POST request. Ie the client sends N
                      bytes said in Content-Length, but the server only reads N
                      - skip bytes. */
   int rcmd;       /* doing a special command, see defines above */
-  int prot_version; /* HTTP version * 10 */
-  bool pipelining; /* true if request is pipelined */
+  int prot_version;  /* HTTP version * 10 */
+  bool pipelining;   /* true if request is pipelined */
 };
 
 static int ProcessRequest(struct httprequest *req);
-static void storerequest(char *reqbuf, ssize_t totalsize);
+static void storerequest(char *reqbuf, size_t totalsize);
 
 #define DEFAULT_PORT 8999
 
 #ifndef DEFAULT_LOGFILE
 #define DEFAULT_LOGFILE "log/sws.log"
 #endif
@@ -180,22 +184,122 @@
     "<TITLE>404 Not Found</TITLE>\n"
     "</HEAD><BODY>\n"
     "<H1>Not Found</H1>\n"
     "The requested URL was not found on this server.\n"
     "<P><HR><ADDRESS>" SWSVERSION "</ADDRESS>\n" "</BODY></HTML>\n";
 
-#ifndef WIN32
-#  if defined(SIGPIPE) && defined(HAVE_SIGNAL)
-static volatile int sigpipe;  /* Why? It's not used */
-static void sigpipe_handler(int sig)
+/* do-nothing macro replacement for systems which lack siginterrupt() */
+
+#ifndef HAVE_SIGINTERRUPT
+#define siginterrupt(x,y) do {} while(0)
+#endif
+
+/* vars used to keep around previous signal handlers */
+
+typedef RETSIGTYPE (*SIGHANDLER_T)(int);
+
+#ifdef SIGHUP
+static SIGHANDLER_T old_sighup_handler  = SIG_ERR;
+#endif
+
+#ifdef SIGPIPE
+static SIGHANDLER_T old_sigpipe_handler = SIG_ERR;
+#endif
+
+#ifdef SIGALRM
+static SIGHANDLER_T old_sigalrm_handler = SIG_ERR;
+#endif
+
+#ifdef SIGINT
+static SIGHANDLER_T old_sigint_handler  = SIG_ERR;
+#endif
+
+#ifdef SIGTERM
+static SIGHANDLER_T old_sigterm_handler = SIG_ERR;
+#endif
+
+/* var which if set indicates that the program should finish execution */
+
+SIG_ATOMIC_T got_exit_signal = 0;
+
+/* if next is set indicates the first signal handled in exit_signal_handler */
+
+static volatile int exit_signal = 0;
+
+/* signal handler that will be triggered to indicate that the program
+  should finish its execution in a controlled manner as soon as possible.
+  The first time this is called it will set got_exit_signal to one and
+  store in exit_signal the signal that triggered its execution. */
+
+static RETSIGTYPE exit_signal_handler(int signum)
+{
+  int old_errno = ERRNO;
+  if(got_exit_signal == 0) {
+    got_exit_signal = 1;
+    exit_signal = signum;
+  }
+  (void)signal(signum, exit_signal_handler);
+  SET_ERRNO(old_errno);
+}
+
+static void install_signal_handlers(void)
 {
-  (void)sig; /* prevent warning */
-  sigpipe = 1;
+#ifdef SIGHUP
+  /* ignore SIGHUP signal */
+  if((old_sighup_handler = signal(SIGHUP, SIG_IGN)) == SIG_ERR)
+    logmsg("cannot install SIGHUP handler: %s", strerror(ERRNO));
+#endif
+#ifdef SIGPIPE
+  /* ignore SIGPIPE signal */
+  if((old_sigpipe_handler = signal(SIGPIPE, SIG_IGN)) == SIG_ERR)
+    logmsg("cannot install SIGPIPE handler: %s", strerror(ERRNO));
+#endif
+#ifdef SIGALRM
+  /* ignore SIGALRM signal */
+  if((old_sigalrm_handler = signal(SIGALRM, SIG_IGN)) == SIG_ERR)
+    logmsg("cannot install SIGALRM handler: %s", strerror(ERRNO));
+#endif
+#ifdef SIGINT
+  /* handle SIGINT signal with our exit_signal_handler */
+  if((old_sigint_handler = signal(SIGINT, exit_signal_handler)) == SIG_ERR)
+    logmsg("cannot install SIGINT handler: %s", strerror(ERRNO));
+  else
+    siginterrupt(SIGINT, 1);
+#endif
+#ifdef SIGTERM
+  /* handle SIGTERM signal with our exit_signal_handler */
+  if((old_sigterm_handler = signal(SIGTERM, exit_signal_handler)) == SIG_ERR)
+    logmsg("cannot install SIGTERM handler: %s", strerror(ERRNO));
+  else
+    siginterrupt(SIGTERM, 1);
+#endif
 }
-#  endif
+
+static void restore_signal_handlers(void)
+{
+#ifdef SIGHUP
+  if(SIG_ERR != old_sighup_handler)
+    (void)signal(SIGHUP, old_sighup_handler);
+#endif
+#ifdef SIGPIPE
+  if(SIG_ERR != old_sigpipe_handler)
+    (void)signal(SIGPIPE, old_sigpipe_handler);
+#endif
+#ifdef SIGALRM
+  if(SIG_ERR != old_sigalrm_handler)
+    (void)signal(SIGALRM, old_sigalrm_handler);
+#endif
+#ifdef SIGINT
+  if(SIG_ERR != old_sigint_handler)
+    (void)signal(SIGINT, old_sigint_handler);
+#endif
+#ifdef SIGTERM
+  if(SIG_ERR != old_sigterm_handler)
+    (void)signal(SIGTERM, old_sigterm_handler);
 #endif
+}
 
 static int ProcessRequest(struct httprequest *req)
 {
   char *line=&req->reqbuf[req->checkindex];
   bool chunked = FALSE;
   static char request[REQUEST_KEYWORD_SIZE];
@@ -303,15 +406,18 @@
           }
           else if(!strncmp(CMD_STREAM, cmd, strlen(CMD_STREAM))) {
             logmsg("instructed to stream");
             req->rcmd = RCMD_STREAM;
           }
           else if(1 == sscanf(cmd, "pipe: %d", &num)) {
-            logmsg("instructed to allow a pipe size %d", num);
-            req->pipe = num-1; /* decrease by one since we don't count the
-                                  first request in this number */
+            logmsg("instructed to allow a pipe size of %d", num);
+            if(num < 0)
+              logmsg("negative pipe size ignored");
+            else if(num > 0)
+              req->pipe = num-1; /* decrease by one since we don't count the
+                                    first request in this number */
           }
           else if(1 == sscanf(cmd, "skip: %d", &num)) {
             logmsg("instructed to skip this number of bytes %d", num);
             req->skip = num;
           }
           else {
@@ -353,13 +459,13 @@
     }
   }
 
   if(!end) {
     /* we don't have a complete request yet! */
     logmsg("ProcessRequest returned without a complete request");
-    return 0;
+    return 0; /* not complete yet */
   }
   logmsg("ProcessRequest found a complete request");
 
   if(req->pipe)
     /* we do have a full set, advance the checkindex to after the end of the
        headers, for the pipelining case mostly */
@@ -374,12 +480,15 @@
    * header that might say "close". If it does, we close a connection when
    * this request is processed. Otherwise, we keep the connection alive for X
    * seconds.
    */
 
   do {
+    if(got_exit_signal)
+      return 1; /* done */
+
     if((req->cl==0) && curlx_strnequal("Content-Length:", line, 15)) {
       /* If we don't ignore content-length, we read it and we read the whole
          request including the body before we return. If we've been told to
          ignore the content-length, we will return as soon as all headers
          have been received */
       size_t cl = strtol(line+15, &line, 10);
@@ -461,12 +571,14 @@
        and GET/HEAD request, enable pipelining. */
     req->checkindex = (end - req->reqbuf) + strlen(END_OF_HEADERS);
     req->pipelining = TRUE;
   }
 
   while(req->pipe) {
+    if(got_exit_signal)
+      return 1; /* done */
     /* scan for more header ends within this chunk */
     line = &req->reqbuf[req->checkindex];
     end = strstr(line, END_OF_HEADERS);
     if(!end)
       break;
     req->checkindex += (end - line) + strlen(END_OF_HEADERS);
@@ -470,49 +582,42 @@
     if(!end)
       break;
     req->checkindex += (end - line) + strlen(END_OF_HEADERS);
     req->pipe--;
   }
 
-
   /* If authentication is required and no auth was provided, end now. This
      makes the server NOT wait for PUT/POST data and you can then make the
      test case send a rejection before any such data has been sent. Test case
      154 uses this.*/
   if(req->auth_req && !req->auth)
-    return 1;
+    return 1; /* done */
 
   if(req->cl > 0) {
     if(req->cl <= req->offset - (end - req->reqbuf) - strlen(END_OF_HEADERS))
       return 1; /* done */
     else
       return 0; /* not complete yet */
   }
 
   return 1; /* done */
 }
 
 /* store the entire request in a file */
-static void storerequest(char *reqbuf, ssize_t totalsize)
+static void storerequest(char *reqbuf, size_t totalsize)
 {
   int res;
   int error = 0;
-  ssize_t written;
-  ssize_t writeleft;
+  size_t written;
+  size_t writeleft;
   FILE *dump;
 
   if (reqbuf == NULL)
     return;
-
   if (totalsize == 0)
     return;
-  else if (totalsize < 0) {
-    logmsg("Invalid size (%zd bytes) for request input. Not written to %s",
-           totalsize, REQUEST_DUMP);
-    return;
-  }
 
   do {
     dump = fopen(REQUEST_DUMP, "ab");
   } while ((dump == NULL) && ((error = ERRNO) == EINTR));
   if (dump == NULL) {
     logmsg("Error opening file %s error: %d %s",
@@ -520,46 +625,50 @@
     logmsg("Failed to write request input to " REQUEST_DUMP);
     return;
   }
 
   writeleft = totalsize;
   do {
-    written = (ssize_t)fwrite((void *) &reqbuf[totalsize-writeleft],
-                              1, (size_t)writeleft, dump);
-    if (written > 0)
+    written = fwrite(&reqbuf[totalsize-writeleft],
+                     1, writeleft, dump);
+    if(got_exit_signal)
+      goto storerequest_cleanup;
+    if(written > 0)
       writeleft -= written;
   } while ((writeleft > 0) && ((error = ERRNO) == EINTR));
 
-  if (writeleft > 0) {
+  if(writeleft == 0)
+    logmsg("Wrote request (%zu bytes) input to " REQUEST_DUMP, totalsize);
+  else if(writeleft > 0) {
     logmsg("Error writing file %s error: %d %s",
            REQUEST_DUMP, error, strerror(error));
-    logmsg("Wrote only (%zd bytes) of (%zd bytes) request input to %s",
+    logmsg("Wrote only (%zu bytes) of (%zu bytes) request input to %s",
            totalsize-writeleft, totalsize, REQUEST_DUMP);
   }
 
+storerequest_cleanup:
+
   do {
     res = fclose(dump);
   } while(res && ((error = ERRNO) == EINTR));
   if(res)
     logmsg("Error closing file %s error: %d %s",
            REQUEST_DUMP, error, strerror(error));
-
-  if(!writeleft)
-    logmsg("Wrote request (%zd bytes) input to " REQUEST_DUMP,
-           totalsize);
 }
 
 /* return 0 on success, non-zero on failure */
 static int get_request(curl_socket_t sock, struct httprequest *req)
 {
+  int error;
   int fail = 0;
+  int done_processing = 0;
   char *reqbuf = req->reqbuf;
   ssize_t got = 0;
 
   char *pipereq = NULL;
-  int pipereq_length = 0;
+  size_t pipereq_length = 0;
 
   if(req->pipelining) {
     pipereq = reqbuf + req->checkindex;
     pipereq_length = req->offset - req->checkindex;
   }
 
@@ -580,13 +689,13 @@
   req->rcmd = RCMD_NORMALREQ;
   req->prot_version = 0;
   req->pipelining = FALSE;
 
   /*** end of httprequest init ***/
 
-  while (req->offset < REQBUFSIZ-1) {
+  while(!done_processing && (req->offset < REQBUFSIZ-1)) {
     if(pipereq_length && pipereq) {
       memmove(reqbuf, pipereq, pipereq_length);
       got = pipereq_length;
       pipereq_length = 0;
     }
     else {
@@ -595,36 +704,42 @@
            read what we're supposed to and NOT read the enire thing the client
            wants to send! */
         got = sread(sock, reqbuf + req->offset, req->cl);
       else
         got = sread(sock, reqbuf + req->offset, REQBUFSIZ-1 - req->offset);
     }
-    if (got <= 0) {
-      if (got < 0) {
-        logmsg("recv() returned error: %d", SOCKERRNO);
-        return DOCNUMBER_INTERNAL;
-      }
+    if(got_exit_signal)
+      return 1;
+    if(got == 0) {
       logmsg("Connection closed by client");
+      fail = 1;
+    }
+    else if(got < 0) {
+      error = SOCKERRNO;
+      logmsg("recv() returned error: (%d) %s", error, strerror(error));
+      fail = 1;
+    }
+    if(fail) {
+      /* dump the request received so far to the external file */
       reqbuf[req->offset] = '\0';
-
-      /* dump the request receivied so far to the external file */
       storerequest(reqbuf, req->offset);
-      return DOCNUMBER_INTERNAL;
+      return 1;
     }
 
     logmsg("Read %zd bytes", got);
 
-    req->offset += (int)got;
+    req->offset += (size_t)got;
     reqbuf[req->offset] = '\0';
 
-    if(ProcessRequest(req)) {
-      if(req->pipe--) {
-        logmsg("Waiting for another piped request");
-        continue;
-      }
-      break;
+    done_processing = ProcessRequest(req);
+    if(got_exit_signal)
+      return 1;
+    if(done_processing && req->pipe) {
+      logmsg("Waiting for another piped request");
+      done_processing = 0;
+      req->pipe--;
     }
   }
 
   if((req->offset == REQBUFSIZ-1) && (got > 0)) {
     logmsg("Request would overflow buffer, closing connection");
     /* dump request received so far to external file anyway */
@@ -639,12 +754,14 @@
   }
   else
     reqbuf[req->offset] = '\0';
 
   /* dump the request to an external file */
   storerequest(reqbuf, req->pipelining ? req->checkindex : req->offset);
+  if(got_exit_signal)
+    return 1;
 
   return fail; /* return 0 on success */
 }
 
 /* returns -1 on failure */
 static int send_doc(curl_socket_t sock, struct httprequest *req)
@@ -673,14 +790,16 @@
   default:
   case RCMD_NORMALREQ:
     break; /* continue with business as usual */
   case RCMD_STREAM:
 #define STREAMTHIS "a string to stream 01234567890\n"
     count = strlen(STREAMTHIS);
-    while(1) {
+    for (;;) {
       written = swrite(sock, STREAMTHIS, count);
+      if(got_exit_signal)
+        return -1;
       if(written != (ssize_t)count) {
         logmsg("Stopped streaming");
         break;
       }
     }
     return -1;
@@ -723,14 +842,12 @@
     case DOCNUMBER_404:
     default:
       logmsg("Replying to with a 404");
       buffer = doc404;
       break;
     }
-    ptr = NULL;
-    stream=NULL;
 
     count = strlen(buffer);
   }
   else {
     char *filename = test2file(req->testno);
 
@@ -748,12 +865,15 @@
     else {
       buffer = spitout(stream, "reply", partbuf, &count);
       ptr = (char *)buffer;
       fclose(stream);
     }
 
+    if(got_exit_signal)
+      return -1;
+
     /* re-open the same file again */
     stream=fopen(filename, "rb");
     if(!stream) {
       error = ERRNO;
       logmsg("fopen() failed with error: %d %s", error, strerror(error));
       logmsg("Error opening file: %s", filename);
@@ -764,20 +884,14 @@
       /* get the custom server control "commands" */
       cmd = (char *)spitout(stream, "reply", "postcmd", &cmdsize);
       fclose(stream);
     }
   }
 
-  dump = fopen(RESPONSE_DUMP, "ab"); /* b is for windows-preparing */
-  if(!dump) {
-    error = ERRNO;
-    logmsg("fopen() failed with error: %d %s", error, strerror(error));
-    logmsg("Error opening file: %s", RESPONSE_DUMP);
-    logmsg("couldn't create logfile: " RESPONSE_DUMP);
+  if(got_exit_signal)
     return -1;
-  }
 
   /* If the word 'swsclose' is present anywhere in the reply chunk, the
      connection will be closed after the data has been sent to the requesting
      client... */
   if(strstr(buffer, "swsclose") || !count) {
     persistant = FALSE;
@@ -787,12 +901,20 @@
     prevbounce = TRUE;
     logmsg("enable \"swsbounce\" in the next request");
   }
   else
     prevbounce = FALSE;
 
+  dump = fopen(RESPONSE_DUMP, "ab");
+  if(!dump) {
+    error = ERRNO;
+    logmsg("fopen() failed with error: %d %s", error, strerror(error));
+    logmsg("Error opening file: %s", RESPONSE_DUMP);
+    logmsg("couldn't create logfile: " RESPONSE_DUMP);
+    return -1;
+  }
 
   responsesize = count;
   do {
     /* Ok, we send no more than 200 bytes at a time, just to make sure that
        larger chunks are split up so that the client will need to do multiple
        recv() calls to get it and thus we exercise that code better */
@@ -805,25 +927,30 @@
       break;
     }
     else {
       logmsg("Sent off %zd bytes", written);
     }
     /* write to file as well */
-    fwrite(buffer, 1, written, dump);
+    fwrite(buffer, 1, (size_t)written, dump);
+    if(got_exit_signal)
+      break;
 
     count -= written;
     buffer += written;
   } while(count>0);
 
   do {
     res = fclose(dump);
   } while(res && ((error = ERRNO) == EINTR));
   if(res)
     logmsg("Error closing file %s error: %d %s",
            RESPONSE_DUMP, error, strerror(error));
 
+  if(got_exit_signal)
+    return -1;
+
   if(sendfailure) {
     logmsg("Sending response failed. Only (%zu bytes) of (%zu bytes) were sent",
            responsesize-count, responsesize);
     if(ptr)
       free(ptr);
     if(cmd)
@@ -836,19 +963,35 @@
 
   if(ptr)
     free(ptr);
 
   if(cmdsize > 0 ) {
     char command[32];
+    int quarters;
     int num;
     ptr=cmd;
     do {
       if(2 == sscanf(ptr, "%31s %d", command, &num)) {
         if(!strcmp("wait", command)) {
           logmsg("Told to sleep for %d seconds", num);
-          sleep(num); /* wait this many seconds */
+          quarters = num * 4;
+          while(quarters > 0) {
+            quarters--;
+            res = wait_ms(250);
+            if(got_exit_signal)
+              break;
+            if(res) {
+              /* should not happen */
+              error = SOCKERRNO;
+              logmsg("wait_ms() failed with error: (%d) %s",
+                     error, strerror(error));
+              break;
+            }
+          }
+          if(!quarters)
+            logmsg("Continuing after sleeping %d seconds", num);
         }
         else
           logmsg("Unknown command in reply command section");
       }
       ptr = strchr(ptr, '\n');
       if(ptr)
@@ -872,19 +1015,23 @@
 int main(int argc, char *argv[])
 {
   struct sockaddr_in me;
 #ifdef ENABLE_IPV6
   struct sockaddr_in6 me6;
 #endif /* ENABLE_IPV6 */
-  curl_socket_t sock, msgsock;
+  curl_socket_t sock = CURL_SOCKET_BAD;
+  curl_socket_t msgsock = CURL_SOCKET_BAD;
+  int wrotepidfile = 0;
   int flag;
   unsigned short port = DEFAULT_PORT;
   char *pidname= (char *)".http.pid";
   struct httprequest req;
   int rc;
+  int error;
   int arg=1;
+  long pid;
 #ifdef CURL_SWS_FORK_ENABLED
   bool use_fork = FALSE;
 #endif
 
   while(argc>arg) {
     if(!strcmp("--version", argv[arg])) {
@@ -904,12 +1051,24 @@
     }
     else if(!strcmp("--pidfile", argv[arg])) {
       arg++;
       if(argc>arg)
         pidname = argv[arg++];
     }
+    else if(!strcmp("--logfile", argv[arg])) {
+      arg++;
+      if(argc>arg)
+        serverlogfile = argv[arg++];
+    }
+    else if(!strcmp("--ipv4", argv[arg])) {
+#ifdef ENABLE_IPV6
+      ipv_inuse = "IPv4";
+      use_ipv6 = FALSE;
+#endif
+      arg++;
+    }
     else if(!strcmp("--ipv6", argv[arg])) {
 #ifdef ENABLE_IPV6
       ipv_inuse = "IPv6";
       use_ipv6 = TRUE;
 #endif
       arg++;
@@ -917,57 +1076,81 @@
 #ifdef CURL_SWS_FORK_ENABLED
     else if(!strcmp("--fork", argv[arg])) {
       use_fork=TRUE;
       arg++;
     }
 #endif
-    else if(argc>arg) {
-
-      if(atoi(argv[arg]))
-        port = (unsigned short)atoi(argv[arg++]);
-
-      if(argc>arg)
-        path = argv[arg++];
+    else if(!strcmp("--port", argv[arg])) {
+      arg++;
+      if(argc>arg) {
+        char *endptr;
+        long lnum = -1;
+        lnum = strtol(argv[arg], &endptr, 10);
+        if((endptr != argv[arg] + strlen(argv[arg])) ||
+           (lnum < 1025L) || (lnum > 65535L)) {
+          fprintf(stderr, "sws: invalid --port argument (%s)\n",
+                  argv[arg]);
+          return 0;
+        }
+        port = (unsigned short)(lnum & 0xFFFFL);
+        arg++;
+      }
+    }
+    else if(!strcmp("--srcdir", argv[arg])) {
+      arg++;
+      if(argc>arg) {
+        path = argv[arg];
+        arg++;
+      }
+    }
+    else {
+      puts("Usage: sws [option]\n"
+           " --version\n"
+           " --logfile [file]\n"
+           " --pidfile [file]\n"
+           " --ipv4\n"
+           " --ipv6\n"
+           " --port [port]\n"
+           " --srcdir [path]\n"
+           " --fork");
+      return 0;
     }
   }
 
 #ifdef WIN32
   win32_init();
   atexit(win32_cleanup);
-#else
-
-#ifdef SIGPIPE
-#ifdef HAVE_SIGNAL
-  signal(SIGPIPE, sigpipe_handler);
-#endif
-#ifdef HAVE_SIGINTERRUPT
-  siginterrupt(SIGPIPE, 1);
-#endif
-#endif
 #endif
 
+  install_signal_handlers();
+
+  pid = (long)getpid();
+
 #ifdef ENABLE_IPV6
   if(!use_ipv6)
 #endif
     sock = socket(AF_INET, SOCK_STREAM, 0);
 #ifdef ENABLE_IPV6
   else
     sock = socket(AF_INET6, SOCK_STREAM, 0);
 #endif
 
-  if (CURL_SOCKET_BAD == sock) {
-    logmsg("Error opening socket: %d", SOCKERRNO);
-    return 1;
+  if(CURL_SOCKET_BAD == sock) {
+    error = SOCKERRNO;
+    logmsg("Error creating socket: (%d) %s",
+           error, strerror(error));
+    goto sws_cleanup;
   }
 
   flag = 1;
   if (0 != setsockopt(sock, SOL_SOCKET, SO_REUSEADDR,
-            (void *) &flag, sizeof(flag))) {
-    logmsg("setsockopt(SO_REUSEADDR) failed: %d", SOCKERRNO);
-    sclose(sock);
-    return 1;
+            (void *)&flag, sizeof(flag))) {
+    error = SOCKERRNO;
+    logmsg("setsockopt(SO_REUSEADDR) failed with error: (%d) %s",
+           error, strerror(error));
+    goto sws_cleanup;
   }
 
 #ifdef ENABLE_IPV6
   if(!use_ipv6) {
 #endif
     memset(&me, 0, sizeof(me));
@@ -983,41 +1166,58 @@
     me6.sin6_addr = in6addr_any;
     me6.sin6_port = htons(port);
     rc = bind(sock, (struct sockaddr *) &me6, sizeof(me6));
   }
 #endif /* ENABLE_IPV6 */
   if(0 != rc) {
-    logmsg("Error binding socket: %d", SOCKERRNO);
-    sclose(sock);
-    return 1;
-  }
-
-  if(!write_pidfile(pidname)) {
-    sclose(sock);
-    return 1;
+    error = SOCKERRNO;
+    logmsg("Error binding socket on port %hu: (%d) %s",
+           port, error, strerror(error));
+    goto sws_cleanup;
   }
 
   logmsg("Running %s version on port %d", ipv_inuse, (int)port);
 
   /* start accepting connections */
   rc = listen(sock, 5);
   if(0 != rc) {
-    logmsg("listen() failed with error: %d", SOCKERRNO);
-    sclose(sock);
-    return 1;
-  }
+    error = SOCKERRNO;
+    logmsg("listen() failed with error: (%d) %s",
+           error, strerror(error));
+    goto sws_cleanup;
+  }
+
+  /*
+  ** As soon as this server writes its pid file the test harness will
+  ** attempt to connect to this server and initiate its verification.
+  */
+
+  wrotepidfile = write_pidfile(pidname);
+  if(!wrotepidfile)
+    goto sws_cleanup;
 
-  while (1) {
+  for (;;) {
     msgsock = accept(sock, NULL, NULL);
 
+    if(got_exit_signal)
+      break;
     if (CURL_SOCKET_BAD == msgsock) {
-      printf("MAJOR ERROR: accept() failed with error: %d\n", SOCKERRNO);
+      error = SOCKERRNO;
+      logmsg("MAJOR ERROR: accept() failed with error: (%d) %s",
+             error, strerror(error));
       break;
     }
 
+    /*
+    ** As soon as this server acepts a connection from the test harness it
+    ** must set the server logs advisor read lock to indicate that server
+    ** logs should not be read until this lock is removed by this server.
+    */
+
     set_advisor_read_lock(SERVERLOGS_LOCK);
+    serverlogslocked = 1;
 
 #ifdef CURL_SWS_FORK_ENABLED
     if(use_fork) {
       /* The fork enabled version just forks off the child and don't care
          about it anymore, so don't assume otherwise. Beware and don't do
          this at home. */
@@ -1051,12 +1251,15 @@
        to pipelining treatment the pipelining struct field must be initialized
        previously to FALSE every time a new connection arrives. */
 
     req.pipelining = FALSE;
 
     do {
+      if(got_exit_signal)
+        break;
+
       if(get_request(msgsock, &req))
         /* non-zero means error, break out of loop */
         break;
 
       if(prevbounce) {
         /* bounce treatment requested */
@@ -1070,12 +1273,14 @@
           prevtestno = -1;
           prevpartno = -1;
         }
       }
 
       send_doc(msgsock, &req);
+      if(got_exit_signal)
+        break;
 
       if((req.testno < 0) && (req.testno != DOCNUMBER_CONNECT)) {
         logmsg("special request received, no persistency");
         break;
       }
       if(!req.open) {
@@ -1085,25 +1290,61 @@
 
       if(req.open)
         logmsg("=> persistant connection request ended, awaits new request");
       /* if we got a CONNECT, loop and get another request as well! */
     } while(req.open || (req.testno == DOCNUMBER_CONNECT));
 
+    if(got_exit_signal)
+      break;
+
     logmsg("====> Client disconnect");
     sclose(msgsock);
+    msgsock = CURL_SOCKET_BAD;
 
-    clear_advisor_read_lock(SERVERLOGS_LOCK);
+    if(serverlogslocked) {
+      serverlogslocked = 0;
+      clear_advisor_read_lock(SERVERLOGS_LOCK);
+    }
 
     if (req.testno == DOCNUMBER_QUIT)
       break;
 #ifdef CURL_SWS_FORK_ENABLED
     }
 #endif
   }
 
-  sclose(sock);
+sws_cleanup:
+
+  if((msgsock != sock) && (msgsock != CURL_SOCKET_BAD))
+    sclose(msgsock);
+
+  if(sock != CURL_SOCKET_BAD)
+    sclose(sock);
+
+  if(got_exit_signal)
+    logmsg("signalled to die");
 
-  clear_advisor_read_lock(SERVERLOGS_LOCK);
+  if(wrotepidfile)
+    unlink(pidname);
+
+  if(serverlogslocked) {
+    serverlogslocked = 0;
+    clear_advisor_read_lock(SERVERLOGS_LOCK);
+  }
+
+  restore_signal_handlers();
+
+  if(got_exit_signal) {
+    logmsg("========> %s sws (port: %d pid: %ld) exits with signal (%d)",
+           ipv_inuse, (int)port, pid, exit_signal);
+    /*
+     * To properly set the return status of the process we
+     * must raise the same signal SIGINT or SIGTERM that we
+     * caught and let the old handler take care of it.
+     */
+    raise(exit_signal);
+  }
 
+  logmsg("========> sws quits");
   return 0;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/testpart.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/testpart.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/testpart.c	2008-02-29 05:17:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/testpart.c	2010-02-02 20:40:53.000000000 +0800
@@ -2,28 +2,30 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: testpart.c,v 1.2 2008-02-28 00:55:06 yangtse Exp $
+ * $Id: testpart.c,v 1.3 2010-02-02 12:39:10 yangtse Exp $
  ***************************************************************************/
 
+#define CURL_NO_OLDIES
+
 #include "setup.h"
 
 #include "getpart.h"
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/tftpd.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/tftpd.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/tftpd.c	2009-09-20 19:52:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/tftpd.c	2010-02-05 05:41:46.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * $Id: tftpd.c,v 1.55 2009-09-17 15:33:32 yangtse Exp $
+ * $Id: tftpd.c,v 1.64 2010-02-04 17:17:19 yangtse Exp $
  *
  * Trivial file transfer protocol server.
  *
  * This code includes many modifications by Jim Guyton <guyton@rand-unix>
  *
  * This source file was started based on netkit-tftpd 0.17
@@ -45,12 +45,14 @@
  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  * SUCH DAMAGE.
  */
 
+#define CURL_NO_OLDIES
+
 #include "setup.h" /* portability help from the lib directory */
 
 #ifdef HAVE_SYS_IOCTL_H
 #include <sys/ioctl.h>
 #endif
 #ifdef HAVE_SIGNAL_H
@@ -96,47 +98,87 @@
 #include "getpart.h"
 #include "util.h"
 
 /* include memdebug.h last */
 #include "memdebug.h"
 
-#ifdef ENABLE_IPV6
-static bool use_ipv6 = FALSE;
+/*****************************************************************************
+*                      STRUCT DECLARATIONS AND DEFINES                       *
+*****************************************************************************/
+
+#ifndef PKTSIZE
+#define PKTSIZE (SEGSIZE + 4)  /* SEGSIZE defined in arpa/tftp.h */
 #endif
-static const char *ipv_inuse = "IPv4";
 
 struct testcase {
   char *buffer;   /* holds the file data to send to the client */
   size_t bufsize; /* size of the data in buffer */
   char *rptr;     /* read pointer into the buffer */
   size_t rcount;  /* amount of data left to read of the file */
   long num;       /* test case number */
   int ofile;      /* file descriptor for output file when uploading to us */
 };
 
-static int synchnet(curl_socket_t);
-static struct tftphdr *r_init(void);
-static struct tftphdr *w_init(void);
-static int readit(struct testcase *test, struct tftphdr **dpp, int convert);
-static int writeit(struct testcase *test, struct tftphdr **dpp, int ct,
-                   int convert);
+struct formats {
+  const char *f_mode;
+  int f_convert;
+};
+
+struct errmsg {
+  int e_code;
+  const char *e_msg;
+};
+
+/*
+ * bf.counter values in range [-1 .. SEGSIZE] represents size of data in the
+ * bf.buf buffer. Additionally it can also hold flags BF_ALLOC or BF_FREE.
+ */
+
+struct bf {
+  int counter;            /* size of data in buffer, or flag */
+  char buf[PKTSIZE];      /* room for data packet */
+};
+
+#define BF_ALLOC -3       /* alloc'd but not yet filled */
+#define BF_FREE  -2       /* free */
 
 #define opcode_RRQ   1
 #define opcode_WRQ   2
 #define opcode_DATA  3
 #define opcode_ACK   4
 #define opcode_ERROR 5
 
-#define TIMEOUT         5
+#define TIMEOUT      5
 
-#define PKTSIZE SEGSIZE+4
+#undef MIN
+#define MIN(x,y) ((x)<(y)?(x):(y))
 
-struct formats {
-  const char *f_mode;
-  int f_convert;
+#ifndef DEFAULT_LOGFILE
+#define DEFAULT_LOGFILE "log/tftpd.log"
+#endif
+
+#define REQUEST_DUMP  "log/server.input"
+
+#define DEFAULT_PORT 8999 /* UDP */
+
+/*****************************************************************************
+*                              GLOBAL VARIABLES                              *
+*****************************************************************************/
+
+static struct errmsg errmsgs[] = {
+  { EUNDEF,       "Undefined error code" },
+  { ENOTFOUND,    "File not found" },
+  { EACCESS,      "Access violation" },
+  { ENOSPACE,     "Disk full or allocation exceeded" },
+  { EBADOP,       "Illegal TFTP operation" },
+  { EBADID,       "Unknown transfer ID" },
+  { EEXISTS,      "File already exists" },
+  { ENOUSER,      "No such user" },
+  { -1,           0 }
 };
+
 static struct formats formata[] = {
   { "netascii",   1 },
   { "octet",      0 },
   { NULL,         0 }
 };
 
@@ -137,63 +179,278 @@
 static struct formats formata[] = {
   { "netascii",   1 },
   { "octet",      0 },
   { NULL,         0 }
 };
 
-static int tftp(struct testcase *test, struct tftphdr *tp, ssize_t size);
-static void nak(int error);
-static void sendtftp(struct testcase *test, struct formats *pf);
-static void recvtftp(struct testcase *test, struct formats *pf);
-static int validate_access(struct testcase *test, const char *, int);
+static struct bf bfs[2];
+
+static int nextone;     /* index of next buffer to use */
+static int current;     /* index of buffer in use */
 
-static curl_socket_t peer;
-static int maxtimeout = 5*TIMEOUT;
+                           /* control flags for crlf conversions */
+static int newline = 0;    /* fillbuf: in middle of newline expansion */
+static int prevchar = -1;  /* putbuf: previous char (cr check) */
 
 static char buf[PKTSIZE];
 static char ackbuf[PKTSIZE];
+
 static struct sockaddr_in from;
 static curl_socklen_t fromlen;
 
-struct bf {
-  int counter;            /* size of data in buffer, or flag */
-  char buf[PKTSIZE];      /* room for data packet */
-};
-static struct bf bfs[2];
+static curl_socket_t peer = CURL_SOCKET_BAD;
 
-                                /* Values for bf.counter  */
-#define BF_ALLOC -3             /* alloc'd but not yet filled */
-#define BF_FREE  -2             /* free */
-/* [-1 .. SEGSIZE] = size of data in the data buffer */
+static int timeout;
+static int maxtimeout = 5 * TIMEOUT;
 
-static int nextone;     /* index of next buffer to use */
-static int current;     /* index of buffer in use */
+static unsigned short sendblock; /* block count used by sendtftp() */
+static struct tftphdr *sdp;      /* data buffer used by sendtftp() */
+static struct tftphdr *sap;      /* ack buffer  used by sendtftp() */
+
+static unsigned short recvblock; /* block count used by recvtftp() */
+static struct tftphdr *rdp;      /* data buffer used by recvtftp() */
+static struct tftphdr *rap;      /* ack buffer  used by recvtftp() */
 
-                           /* control flags for crlf conversions */
-static int newline = 0;    /* fillbuf: in middle of newline expansion */
-static int prevchar = -1;  /* putbuf: previous char (cr check) */
+#ifdef ENABLE_IPV6
+static bool use_ipv6 = FALSE;
+#endif
+static const char *ipv_inuse = "IPv4";
+
+const  char *serverlogfile = DEFAULT_LOGFILE;
+static char *pidname= (char *)".tftpd.pid";
+static int serverlogslocked = 0;
+static int wrotepidfile = 0;
+
+#ifdef HAVE_SIGSETJMP
+static sigjmp_buf timeoutbuf;
+#endif
+
+#if defined(HAVE_ALARM) && defined(SIGALRM)
+static int rexmtval = TIMEOUT;
+#endif
+
+/* do-nothing macro replacement for systems which lack siginterrupt() */
+
+#ifndef HAVE_SIGINTERRUPT
+#define siginterrupt(x,y) do {} while(0)
+#endif
+
+/* vars used to keep around previous signal handlers */
+
+typedef RETSIGTYPE (*SIGHANDLER_T)(int);
+
+#ifdef SIGHUP
+static SIGHANDLER_T old_sighup_handler  = SIG_ERR;
+#endif
+
+#ifdef SIGPIPE
+static SIGHANDLER_T old_sigpipe_handler = SIG_ERR;
+#endif
+
+#ifdef SIGINT
+static SIGHANDLER_T old_sigint_handler  = SIG_ERR;
+#endif
+
+#ifdef SIGTERM
+static SIGHANDLER_T old_sigterm_handler = SIG_ERR;
+#endif
+
+/* var which if set indicates that the program should finish execution */
+
+SIG_ATOMIC_T got_exit_signal = 0;
+
+/* if next is set indicates the first signal handled in exit_signal_handler */
+
+static volatile int exit_signal = 0;
+
+/*****************************************************************************
+*                            FUNCTION PROTOTYPES                             *
+*****************************************************************************/
 
-static void read_ahead(struct testcase *test,
-                       int convert /* if true, convert to ascii */);
-static ssize_t write_behind(struct testcase *test, int convert);
 static struct tftphdr *rw_init(int);
-static struct tftphdr *w_init(void) { return rw_init(0); } /* write-behind */
-static struct tftphdr *r_init(void) { return rw_init(1); } /* read-ahead */
 
-static struct tftphdr *
-rw_init(int x)              /* init for either read-ahead or write-behind */
-{                           /* zero for write-behind, one for read-head */
-  newline = 0;            /* init crlf flag */
+static struct tftphdr *w_init(void);
+
+static struct tftphdr *r_init(void);
+
+static int readit(struct testcase *test,
+                  struct tftphdr **dpp,
+                  int convert);
+
+static int writeit(struct testcase *test,
+                   struct tftphdr **dpp,
+                   int ct,
+                   int convert);
+
+static void read_ahead(struct testcase *test, int convert);
+
+static ssize_t write_behind(struct testcase *test, int convert);
+
+static int synchnet(curl_socket_t);
+
+static int do_tftp(struct testcase *test, struct tftphdr *tp, ssize_t size);
+
+static int validate_access(struct testcase *test, const char *fname, int mode);
+
+static void sendtftp(struct testcase *test, struct formats *pf);
+
+static void recvtftp(struct testcase *test, struct formats *pf);
+
+static void nak(int error);
+
+#if defined(HAVE_ALARM) && defined(SIGALRM)
+
+static void mysignal(int sig, void (*handler)(int));
+
+static void timer(int signum);
+
+static void justtimeout(int signum);
+
+#endif /* HAVE_ALARM && SIGALRM */
+
+static RETSIGTYPE exit_signal_handler(int signum);
+
+static void install_signal_handlers(void);
+
+static void restore_signal_handlers(void);
+
+/*****************************************************************************
+*                          FUNCTION IMPLEMENTATIONS                          *
+*****************************************************************************/
+
+#if defined(HAVE_ALARM) && defined(SIGALRM)
+
+/*
+ * Like signal(), but with well-defined semantics.
+ */
+static void mysignal(int sig, void (*handler)(int))
+{
+  struct sigaction sa;
+  memset(&sa, 0, sizeof(sa));
+  sa.sa_handler = handler;
+  sigaction(sig, &sa, NULL);
+}
+
+static void timer(int signum)
+{
+  (void)signum;
+
+  logmsg("alarm!");
+
+  timeout += rexmtval;
+  if(timeout >= maxtimeout) {
+    if(wrotepidfile) {
+      wrotepidfile = 0;
+      unlink(pidname);
+    }
+    if(serverlogslocked) {
+      serverlogslocked = 0;
+      clear_advisor_read_lock(SERVERLOGS_LOCK);
+    }
+    exit(1);
+  }
+#ifdef HAVE_SIGSETJMP
+  siglongjmp(timeoutbuf, 1);
+#endif
+}
+
+static void justtimeout(int signum)
+{
+  (void)signum;
+}
+
+#endif /* HAVE_ALARM && SIGALRM */
+
+/* signal handler that will be triggered to indicate that the program
+  should finish its execution in a controlled manner as soon as possible.
+  The first time this is called it will set got_exit_signal to one and
+  store in exit_signal the signal that triggered its execution. */
+
+static RETSIGTYPE exit_signal_handler(int signum)
+{
+  int old_errno = ERRNO;
+  if(got_exit_signal == 0) {
+    got_exit_signal = 1;
+    exit_signal = signum;
+  }
+  (void)signal(signum, exit_signal_handler);
+  SET_ERRNO(old_errno);
+}
+
+static void install_signal_handlers(void)
+{
+#ifdef SIGHUP
+  /* ignore SIGHUP signal */
+  if((old_sighup_handler = signal(SIGHUP, SIG_IGN)) == SIG_ERR)
+    logmsg("cannot install SIGHUP handler: %s", strerror(ERRNO));
+#endif
+#ifdef SIGPIPE
+  /* ignore SIGPIPE signal */
+  if((old_sigpipe_handler = signal(SIGPIPE, SIG_IGN)) == SIG_ERR)
+    logmsg("cannot install SIGPIPE handler: %s", strerror(ERRNO));
+#endif
+#ifdef SIGINT
+  /* handle SIGINT signal with our exit_signal_handler */
+  if((old_sigint_handler = signal(SIGINT, exit_signal_handler)) == SIG_ERR)
+    logmsg("cannot install SIGINT handler: %s", strerror(ERRNO));
+  else
+    siginterrupt(SIGINT, 1);
+#endif
+#ifdef SIGTERM
+  /* handle SIGTERM signal with our exit_signal_handler */
+  if((old_sigterm_handler = signal(SIGTERM, exit_signal_handler)) == SIG_ERR)
+    logmsg("cannot install SIGTERM handler: %s", strerror(ERRNO));
+  else
+    siginterrupt(SIGTERM, 1);
+#endif
+}
+
+static void restore_signal_handlers(void)
+{
+#ifdef SIGHUP
+  if(SIG_ERR != old_sighup_handler)
+    (void)signal(SIGHUP, old_sighup_handler);
+#endif
+#ifdef SIGPIPE
+  if(SIG_ERR != old_sigpipe_handler)
+    (void)signal(SIGPIPE, old_sigpipe_handler);
+#endif
+#ifdef SIGINT
+  if(SIG_ERR != old_sigint_handler)
+    (void)signal(SIGINT, old_sigint_handler);
+#endif
+#ifdef SIGTERM
+  if(SIG_ERR != old_sigterm_handler)
+    (void)signal(SIGTERM, old_sigterm_handler);
+#endif
+}
+
+/*
+ * init for either read-ahead or write-behind.
+ * zero for write-behind, one for read-head.
+ */
+static struct tftphdr *rw_init(int x)
+{
+  newline = 0;                    /* init crlf flag */
   prevchar = -1;
   bfs[0].counter =  BF_ALLOC;     /* pass out the first buffer */
   current = 0;
   bfs[1].counter = BF_FREE;
   nextone = x;                    /* ahead or behind? */
   return (struct tftphdr *)bfs[0].buf;
 }
 
+static struct tftphdr *w_init(void)
+{
+  return rw_init(0); /* write-behind */
+}
+
+static struct tftphdr *r_init(void)
+{
+  return rw_init(1); /* read-ahead */
+}
 
 /* Have emptied current buffer by sending to net and getting ack.
    Free it and return next buffer filled with data.
  */
 static int readit(struct testcase *test, struct tftphdr **dpp,
                   int convert /* if true, convert to ascii */)
@@ -208,15 +465,12 @@
     read_ahead(test, convert);    /* fill it */
 
   *dpp = (struct tftphdr *)b->buf;        /* set caller's ptr */
   return b->counter;
 }
 
-#undef MIN /* some systems have this defined already, some don't */
-#define MIN(x,y) ((x)<(y)?(x):(y));
-
 /*
  * fill the input buffer, doing ascii conversions if requested
  * conversions are  lf -> cr,lf  and cr -> cr, nul
  */
 static void read_ahead(struct testcase *test,
                        int convert /* if true, convert to ascii */)
@@ -375,13 +628,13 @@
 #endif
   int j = 0;
   char rbuf[PKTSIZE];
   struct sockaddr_in fromaddr;
   curl_socklen_t fromaddrlen;
 
-  while (1) {
+  for (;;) {
 #if defined(HAVE_IOCTLSOCKET)
     (void) ioctlsocket(f, FIONREAD, &i);
 #else
     (void) ioctl(f, FIONREAD, &i);
 #endif
     if (i) {
@@ -393,53 +646,33 @@
     else
       break;
   }
   return j;
 }
 
-#if defined(HAVE_ALARM) && defined(SIGALRM)
-/*
- * Like signal(), but with well-defined semantics.
- */
-static void mysignal(int sig, void (*handler)(int))
-{
-  struct sigaction sa;
-  memset(&sa, 0, sizeof(sa));
-  sa.sa_handler = handler;
-  sigaction(sig, &sa, NULL);
-}
-#endif
-
-#ifndef DEFAULT_LOGFILE
-#define DEFAULT_LOGFILE "log/tftpd.log"
-#endif
-
-#define DEFAULT_PORT 8999 /* UDP */
-const char *serverlogfile = DEFAULT_LOGFILE;
-
-#define REQUEST_DUMP  "log/server.input"
-
-
 int main(int argc, char **argv)
 {
   struct sockaddr_in me;
 #ifdef ENABLE_IPV6
   struct sockaddr_in6 me6;
 #endif /* ENABLE_IPV6 */
 
   struct tftphdr *tp;
   ssize_t n = 0;
   int arg = 1;
-  char *pidname= (char *)".tftpd.pid";
   unsigned short port = DEFAULT_PORT;
-  curl_socket_t sock;
+  curl_socket_t sock = CURL_SOCKET_BAD;
   int flag;
   int rc;
+  int error;
+  long pid;
   struct testcase test;
   int result = 0;
 
+  memset(&test, 0, sizeof(test));
+
   while(argc>arg) {
     if(!strcmp("--version", argv[arg])) {
       printf("tftpd IPv4%s\n",
 #ifdef ENABLE_IPV6
              "/IPv6"
 #else
@@ -450,98 +683,151 @@
     }
     else if(!strcmp("--pidfile", argv[arg])) {
       arg++;
       if(argc>arg)
         pidname = argv[arg++];
     }
+    else if(!strcmp("--logfile", argv[arg])) {
+      arg++;
+      if(argc>arg)
+        serverlogfile = argv[arg++];
+    }
+    else if(!strcmp("--ipv4", argv[arg])) {
+#ifdef ENABLE_IPV6
+      ipv_inuse = "IPv4";
+      use_ipv6 = FALSE;
+#endif
+      arg++;
+    }
     else if(!strcmp("--ipv6", argv[arg])) {
 #ifdef ENABLE_IPV6
       ipv_inuse = "IPv6";
       use_ipv6 = TRUE;
 #endif
       arg++;
     }
-    else if(argc>arg) {
-
-      if(atoi(argv[arg]))
-        port = (unsigned short)atoi(argv[arg++]);
-
-      if(argc>arg)
-        path = argv[arg++];
+    else if(!strcmp("--port", argv[arg])) {
+      arg++;
+      if(argc>arg) {
+        char *endptr;
+        long lnum = -1;
+        lnum = strtol(argv[arg], &endptr, 10);
+        if((endptr != argv[arg] + strlen(argv[arg])) ||
+           (lnum < 1025L) || (lnum > 65535L)) {
+          fprintf(stderr, "tftpd: invalid --port argument (%s)\n",
+                  argv[arg]);
+          return 0;
+        }
+        port = (unsigned short)(lnum & 0xFFFFL);
+        arg++;
+      }
+    }
+    else if(!strcmp("--srcdir", argv[arg])) {
+      arg++;
+      if(argc>arg) {
+        path = argv[arg];
+        arg++;
+      }
+    }
+    else {
+      puts("Usage: tftpd [option]\n"
+           " --version\n"
+           " --logfile [file]\n"
+           " --pidfile [file]\n"
+           " --ipv4\n"
+           " --ipv6\n"
+           " --port [port]\n"
+           " --srcdir [path]");
+      return 0;
     }
   }
 
 #ifdef WIN32
   win32_init();
   atexit(win32_cleanup);
 #endif
 
+  install_signal_handlers();
+
+  pid = (long)getpid();
+
 #ifdef ENABLE_IPV6
   if(!use_ipv6)
 #endif
     sock = socket(AF_INET, SOCK_DGRAM, 0);
 #ifdef ENABLE_IPV6
   else
     sock = socket(AF_INET6, SOCK_DGRAM, 0);
 #endif
 
   if(CURL_SOCKET_BAD == sock) {
-    perror("opening stream socket");
-    logmsg("Error opening socket");
-    return 1;
+    error = SOCKERRNO;
+    logmsg("Error creating socket: (%d) %s",
+           error, strerror(error));
+    result = 1;
+    goto tftpd_cleanup;
   }
 
   flag = 1;
-  if (setsockopt
-      (sock, SOL_SOCKET, SO_REUSEADDR, (const void *) &flag,
-       sizeof(int)) < 0) {
-    perror("setsockopt(SO_REUSEADDR)");
+  if (0 != setsockopt(sock, SOL_SOCKET, SO_REUSEADDR,
+            (void *)&flag, sizeof(flag))) {
+    error = SOCKERRNO;
+    logmsg("setsockopt(SO_REUSEADDR) failed with error: (%d) %s",
+           error, strerror(error));
+    result = 1;
+    goto tftpd_cleanup;
   }
 
 #ifdef ENABLE_IPV6
   if(!use_ipv6) {
 #endif
+    memset(&me, 0, sizeof(me));
     me.sin_family = AF_INET;
     me.sin_addr.s_addr = INADDR_ANY;
     me.sin_port = htons(port);
     rc = bind(sock, (struct sockaddr *) &me, sizeof(me));
 #ifdef ENABLE_IPV6
   }
   else {
-    memset(&me6, 0, sizeof(struct sockaddr_in6));
+    memset(&me6, 0, sizeof(me6));
     me6.sin6_family = AF_INET6;
     me6.sin6_addr = in6addr_any;
     me6.sin6_port = htons(port);
     rc = bind(sock, (struct sockaddr *) &me6, sizeof(me6));
   }
 #endif /* ENABLE_IPV6 */
-  if(rc < 0) {
-    perror("binding stream socket");
-    logmsg("Error binding socket");
-    sclose(sock);
-    return 1;
+  if(0 != rc) {
+    error = SOCKERRNO;
+    logmsg("Error binding socket on port %hu: (%d) %s",
+           port, error, strerror(error));
+    result = 1;
+    goto tftpd_cleanup;
   }
 
-  if(!write_pidfile(pidname)) {
-    sclose(sock);
-    return 1;
+  wrotepidfile = write_pidfile(pidname);
+  if(!wrotepidfile) {
+    result = 1;
+    goto tftpd_cleanup;
   }
 
   logmsg("Running %s version on port UDP/%d", ipv_inuse, (int)port);
 
-  do {
+  for (;;) {
     fromlen = sizeof(from);
     n = (ssize_t)recvfrom(sock, buf, sizeof(buf), 0,
                           (struct sockaddr *)&from, &fromlen);
+    if(got_exit_signal)
+      break;
     if (n < 0) {
       logmsg("recvfrom");
       result = 3;
       break;
     }
 
     set_advisor_read_lock(SERVERLOGS_LOCK);
+    serverlogslocked = 1;
 
     from.sin_family = AF_INET;
 
     peer = socket(AF_INET, SOCK_DGRAM, 0);
     if(CURL_SOCKET_BAD == peer) {
       logmsg("socket");
@@ -557,34 +843,80 @@
     maxtimeout = 5*TIMEOUT;
 
     tp = (struct tftphdr *)buf;
     tp->th_opcode = ntohs(tp->th_opcode);
     if (tp->th_opcode == opcode_RRQ || tp->th_opcode == opcode_WRQ) {
       memset(&test, 0, sizeof(test));
-      if (tftp(&test, tp, n) < 0)
+      if (do_tftp(&test, tp, n) < 0)
         break;
       if(test.buffer)
         free(test.buffer);
     }
     sclose(peer);
+    peer = CURL_SOCKET_BAD;
 
-    clear_advisor_read_lock(SERVERLOGS_LOCK);
+    if(test.ofile > 0) {
+      close(test.ofile);
+      test.ofile = 0;
+    }
+
+    if(got_exit_signal)
+      break;
+
+    if(serverlogslocked) {
+      serverlogslocked = 0;
+      clear_advisor_read_lock(SERVERLOGS_LOCK);
+    }
 
     logmsg("end of one transfer");
 
-  } while(1);
+  }
+
+tftpd_cleanup:
 
-  clear_advisor_read_lock(SERVERLOGS_LOCK);
+  if(test.ofile > 0)
+    close(test.ofile);
+
+  if((peer != sock) && (peer != CURL_SOCKET_BAD))
+    sclose(peer);
 
+  if(sock != CURL_SOCKET_BAD)
+    sclose(sock);
+
+  if(got_exit_signal)
+    logmsg("signalled to die");
+
+  if(wrotepidfile)
+    unlink(pidname);
+
+  if(serverlogslocked) {
+    serverlogslocked = 0;
+    clear_advisor_read_lock(SERVERLOGS_LOCK);
+  }
+
+  restore_signal_handlers();
+
+  if(got_exit_signal) {
+    logmsg("========> %s tftpd (port: %d pid: %ld) exits with signal (%d)",
+           ipv_inuse, (int)port, pid, exit_signal);
+    /*
+     * To properly set the return status of the process we
+     * must raise the same signal SIGINT or SIGTERM that we
+     * caught and let the old handler take care of it.
+     */
+    raise(exit_signal);
+  }
+
+  logmsg("========> tftpd quits");
   return result;
 }
 
 /*
  * Handle initial connection protocol.
  */
-static int tftp(struct testcase *test, struct tftphdr *tp, ssize_t size)
+static int do_tftp(struct testcase *test, struct tftphdr *tp, ssize_t size)
 {
   char *cp;
   int first = 1, ecode;
   struct formats *pf;
   char *filename, *mode = NULL;
   int error;
@@ -740,45 +1072,12 @@
   }
 
   logmsg("file opened and all is good");
   return 0;
 }
 
-static int timeout;
-#ifdef HAVE_SIGSETJMP
-static sigjmp_buf timeoutbuf;
-#endif
-
-#if defined(HAVE_ALARM) && defined(SIGALRM)
-static int rexmtval = TIMEOUT;
-
-static void timer(int signum)
-{
-  (void)signum;
-
-  logmsg("alarm!");
-
-  timeout += rexmtval;
-  if(timeout >= maxtimeout) {
-    clear_advisor_read_lock(SERVERLOGS_LOCK);
-    exit(1);
-  }
-#ifdef HAVE_SIGSETJMP
-  siglongjmp(timeoutbuf, 1);
-#endif
-}
-
-static void justtimeout(int signum)
-{
-  (void)signum;
-}
-#endif  /* HAVE_ALARM && SIGALRM */
-
-static unsigned short sendblock;
-static struct tftphdr *sdp;
-static struct tftphdr *sap; /* ack packet */
 /*
  * Send the requested file.
  */
 static void sendtftp(struct testcase *test, struct formats *pf)
 {
   int size;
@@ -812,12 +1111,14 @@
       alarm(rexmtval);        /* read the ack */
 #endif
       n = sread(peer, ackbuf, sizeof (ackbuf));
 #ifdef HAVE_ALARM
       alarm(0);
 #endif
+      if(got_exit_signal)
+        return;
       if (n < 0) {
         logmsg("read: fail");
         return;
       }
       sap->th_opcode = ntohs((u_short)sap->th_opcode);
       sap->th_block = ntohs((u_short)sap->th_block);
@@ -840,16 +1141,12 @@
 
     }
     sendblock++;
   } while (size == SEGSIZE);
 }
 
-
-static unsigned short recvblock;
-static struct tftphdr *rdp;
-static struct tftphdr *rap; /* ack buffer */
 /*
  * Receive a file.
  */
 static void recvtftp(struct testcase *test, struct formats *pf)
 {
   ssize_t n, size;
@@ -878,12 +1175,14 @@
       alarm(rexmtval);
 #endif
       n = sread(peer, rdp, PKTSIZE);
 #ifdef HAVE_ALARM
       alarm(0);
 #endif
+      if(got_exit_signal)
+        goto abort;
       if (n < 0) {                       /* really? */
         logmsg("read: fail\n");
         goto abort;
       }
       rdp->th_opcode = ntohs((u_short)rdp->th_opcode);
       rdp->th_block = ntohs((u_short)rdp->th_block);
@@ -919,37 +1218,23 @@
   alarm(rexmtval);
 #endif
   n = sread(peer, buf, sizeof(buf));     /* normally times out and quits */
 #ifdef HAVE_ALARM
   alarm(0);
 #endif
+  if(got_exit_signal)
+    goto abort;
   if (n >= 4 &&                          /* if read some data */
       rdp->th_opcode == opcode_DATA &&   /* and got a data block */
       recvblock == rdp->th_block) {      /* then my last ack was lost */
     (void) swrite(peer, ackbuf, 4);      /* resend final ack */
   }
 abort:
   return;
 }
 
-struct errmsg {
-  int e_code;
-  const char *e_msg;
-};
-static struct errmsg errmsgs[] = {
-  { EUNDEF,       "Undefined error code" },
-  { ENOTFOUND,    "File not found" },
-  { EACCESS,      "Access violation" },
-  { ENOSPACE,     "Disk full or allocation exceeded" },
-  { EBADOP,       "Illegal TFTP operation" },
-  { EBADID,       "Unknown transfer ID" },
-  { EEXISTS,      "File already exists" },
-  { ENOUSER,      "No such user" },
-  { -1,           0 }
-};
-
 /*
  * Send a nak packet (error message).  Error code passed in is one of the
  * standard TFTP codes, or a UNIX errno offset by 100.
  */
 static void nak(int error)
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/util.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/util.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/server/util.c	2008-10-02 15:54:36.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/server/util.c	2010-02-02 20:40:53.000000000 +0800
@@ -2,27 +2,30 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
  * copies of the Software, and permit persons to whom the Software is
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
- * $Id: util.c,v 1.27 2008-10-01 17:34:25 danf Exp $
+ * $Id: util.c,v 1.31 2010-02-02 12:39:10 yangtse Exp $
  ***************************************************************************/
+
+#define CURL_NO_OLDIES
+
 #include "setup.h" /* portability help from the lib directory */
 
 #ifdef HAVE_SIGNAL_H
 #include <signal.h>
 #endif
 #ifdef HAVE_UNISTD_H
@@ -83,13 +86,13 @@
     (int)now->tm_hour, (int)now->tm_min, (int)now->tm_sec, (long)tv.tv_usec);
 
   va_start(ap, msg);
   vsnprintf(buffer, sizeof(buffer), msg, ap);
   va_end(ap);
 
-  logfp = fopen(serverlogfile, "a");
+  logfp = fopen(serverlogfile, "ab");
   if(logfp) {
     fprintf(logfp, "%s %s\n", timebuf, buffer);
     fclose(logfp);
   }
   else {
     error = ERRNO;
@@ -200,13 +203,13 @@
     pending_tv.tv_usec = (pending_ms % 1000) * 1000;
     r = select(0, NULL, NULL, NULL, &pending_tv);
 #endif /* HAVE_POLL_FINE */
     if(r != -1)
       break;
     error = SOCKERRNO;
-    if(error == EINVAL)
+    if(error && (error != EINTR))
       break;
     pending_ms = timeout_ms - (int)curlx_tvdiff(curlx_tvnow(), initial_tv);
     if(pending_ms <= 0)
       break;
   } while(r == -1);
 #endif /* USE_WINSOCK */
@@ -218,13 +221,13 @@
 int write_pidfile(const char *filename)
 {
   FILE *pidfile;
   long pid;
 
   pid = (long)getpid();
-  pidfile = fopen(filename, "w");
+  pidfile = fopen(filename, "wb");
   if(!pidfile) {
     logmsg("Couldn't write pid file: %s %s", filename, strerror(ERRNO));
     return 0; /* fail */
   }
   fprintf(pidfile, "%ld\n", pid);
   fclose(pidfile);
@@ -257,12 +260,18 @@
 
 void clear_advisor_read_lock(const char *filename)
 {
   int error = 0;
   int res;
 
+  /*
+  ** Log all removal failures. Even those due to file not existing.
+  ** This allows to detect if unexpectedly the file has already been
+  ** removed by a process different than the one that should do this.
+  */
+
   do {
     res = unlink(filename);
   } while(res && ((error = ERRNO) == EINTR));
   if(res)
     logmsg("Error removing lock file %s error: %d %s",
            filename, error, strerror(error));
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests: serverhelp.pm
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/sshhelp.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/sshhelp.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/sshhelp.pm	2009-03-28 05:57:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/sshhelp.pm	2010-01-22 17:17:50.000000000 +0800
@@ -2,32 +2,32 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: sshhelp.pm,v 1.4 2008-02-08 13:54:02 yangtse Exp $
+# $Id: sshhelp.pm,v 1.6 2010-01-21 14:26:32 yangtse Exp $
 #***************************************************************************
 
 package sshhelp;
 
 use strict;
-#use warnings;
+use warnings;
 use Exporter;
 use File::Spec;
 
 
 #***************************************************************************
 # Global symbols allowed without explicit package name
@@ -87,12 +87,13 @@
     display_sshconfig
     display_sftpconfig
     display_sshdlog
     display_sshlog
     display_sftplog
     dump_array
+    exe_ext
     find_sshd
     find_ssh
     find_sftpsrv
     find_sftp
     find_sshkeygen
     logmsg
@@ -108,15 +109,15 @@
 $sftpsrvexe   = 'sftp-server' .exe_ext(); # base name and ext of sftp-server
 $sftpexe      = 'sftp'        .exe_ext(); # base name and ext of sftp client
 $sshkeygenexe = 'ssh-keygen'  .exe_ext(); # base name and ext of ssh-keygen
 $sshdconfig   = 'curl_sshd_config';       # ssh daemon config file
 $sshconfig    = 'curl_ssh_config';        # ssh client config file
 $sftpconfig   = 'curl_sftp_config';       # sftp client config file
-$sshdlog      = 'log/sshd.log';           # ssh daemon log file
-$sshlog       = 'log/ssh.log';            # ssh client log file
-$sftplog      = 'log/sftp.log';           # sftp client log file
+$sshdlog      = undef;                    # ssh daemon log file
+$sshlog       = undef;                    # ssh client log file
+$sftplog      = undef;                    # sftp client log file
 $sftpcmds     = 'curl_sftp_cmds';         # sftp client commands batch file
 $knownhosts   = 'curl_client_knownhosts'; # ssh knownhosts file
 $hstprvkeyf   = 'curl_host_dsa_key';      # host private key file
 $hstpubkeyf   = 'curl_host_dsa_key.pub';  # host public key file
 $cliprvkeyf   = 'curl_client_key';        # client private key file
 $clipubkeyf   = 'curl_client_key.pub';    # client public key file
@@ -237,28 +238,31 @@
 
 
 #***************************************************************************
 # Display contents of the ssh daemon log file
 #
 sub display_sshdlog {
+    die "error: \$sshdlog uninitialized" if(not defined $sshdlog);
     display_file($sshdlog);
 }
 
 
 #***************************************************************************
 # Display contents of the ssh client log file
 #
 sub display_sshlog {
+    die "error: \$sshlog uninitialized" if(not defined $sshlog);
     display_file($sshlog);
 }
 
 
 #***************************************************************************
 # Display contents of the sftp client log file
 #
 sub display_sftplog {
+    die "error: \$sftplog uninitialized" if(not defined $sftplog);
     display_file($sftplog);
 }
 
 
 #***************************************************************************
 # Find a file somewhere in the given path
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/sshserver.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/sshserver.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.19.7/tests/sshserver.pl	2009-03-28 05:57:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests/sshserver.pl	2010-01-16 23:44:56.000000000 +0800
@@ -3,42 +3,33 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
 # copies of the Software, and permit persons to whom the Software is
 # furnished to do so, under the terms of the COPYING file.
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
-# $Id: sshserver.pl,v 1.50 2008-04-04 14:47:32 yangtse Exp $
+# $Id: sshserver.pl,v 1.51 2010-01-15 18:55:01 yangtse Exp $
 #***************************************************************************
 
 # Starts sshd for use in the SCP, SFTP and SOCKS curl test harness tests.
 # Also creates the ssh configuration files needed for these tests.
 
-# Options:
-#
-# -v
-# -d
-# -u user
-# -l listen address
-# -p SCP/SFTP server port
-# -s SOCKS4/5 server port
-
 use strict;
-#use warnings;
+use warnings;
 use Cwd;
 
 #***************************************************************************
 # Variables and subs imported from sshhelp module
 #
 use sshhelp qw(
@@ -72,60 +63,130 @@
     find_sftp
     find_sshkeygen
     logmsg
     sshversioninfo
     );
 
+#***************************************************************************
+# Subs imported from serverhelp module
+#
+use serverhelp qw(
+    server_pidfilename
+    server_logfilename
+    );
+
 
 #***************************************************************************
 
 my $verbose = 0;              # set to 1 for debugging
 my $debugprotocol = 0;        # set to 1 for protocol debugging
 my $port = 8999;              # our default SCP/SFTP server port
 my $socksport = $port + 1;    # our default SOCKS4/5 server port
 my $listenaddr = '127.0.0.1'; # default address on which to listen
+my $ipvnum = 4;               # default IP version of listener address
+my $idnum = 1;                # dafault ssh daemon instance number
+my $proto = 'ssh';            # protocol the ssh daemon speaks
 my $path = getcwd();          # current working directory
+my $logdir = $path .'/log';   # directory for log files
 my $username = $ENV{USER};    # default user
+my $pidfile;                  # ssh daemon pid file
 
 my $error;
 my @cfgarr;
 
 
 #***************************************************************************
 # Parse command line options
 #
 while(@ARGV) {
-    if($ARGV[0] eq '-v') {
+    if($ARGV[0] eq '--verbose') {
         $verbose = 1;
     }
-    elsif($ARGV[0] eq '-d') {
+    elsif($ARGV[0] eq '--debugprotocol') {
         $verbose = 1;
         $debugprotocol = 1;
     }
-    elsif($ARGV[0] eq '-u') {
-        $username = $ARGV[1];
-        shift @ARGV;
-    }
-    elsif($ARGV[0] eq '-l') {
-        $listenaddr = $ARGV[1];
-        shift @ARGV;
-    }
-    elsif($ARGV[0] eq '-p') {
-        if($ARGV[1] =~ /^(\d+)$/) {
-            $port = $1;
+    elsif($ARGV[0] eq '--user') {
+        if($ARGV[1]) {
+            $username = $ARGV[1];
+            shift @ARGV;
+        }
+    }
+    elsif($ARGV[0] eq '--id') {
+        if($ARGV[1]) {
+            if($ARGV[1] =~ /^(\d+)$/) {
+                $idnum = $1 if($1 > 0);
+                shift @ARGV;
+            }
+        }
+    }
+    elsif($ARGV[0] eq '--ipv4') {
+        $ipvnum = 4;
+        $listenaddr = '127.0.0.1' if($listenaddr eq '::1');
+    }
+    elsif($ARGV[0] eq '--ipv6') {
+        $ipvnum = 6;
+        $listenaddr = '::1' if($listenaddr eq '127.0.0.1');
+    }
+    elsif($ARGV[0] eq '--addr') {
+        if($ARGV[1]) {
+            my $tmpstr = $ARGV[1];
+            if($tmpstr =~ /^(\d\d?\d?)\.(\d\d?\d?)\.(\d\d?\d?)\.(\d\d?\d?)$/) {
+                $listenaddr = "$1.$2.$3.$4" if($ipvnum == 4);
+                shift @ARGV;
+            }
+            elsif($ipvnum == 6) {
+                $listenaddr = $tmpstr;
+                $listenaddr =~ s/^\[(.*)\]$/$1/;
+                shift @ARGV;
+            }
+        }
+    }
+    elsif($ARGV[0] eq '--pidfile') {
+        if($ARGV[1]) {
+            $pidfile = "$path/". $ARGV[1];
+            shift @ARGV;
         }
-        shift @ARGV;
     }
-    elsif($ARGV[0] eq '-s') {
-        if($ARGV[1] =~ /^(\d+)$/) {
-            $socksport = $1;
+    elsif($ARGV[0] eq '--sshport') {
+        if($ARGV[1]) {
+            if($ARGV[1] =~ /^(\d+)$/) {
+                $port = $1;
+                shift @ARGV;
+            }
         }
-        shift @ARGV;
+    }
+    elsif($ARGV[0] eq '--socksport') {
+        if($ARGV[1]) {
+            if($ARGV[1] =~ /^(\d+)$/) {
+                $socksport = $1;
+                shift @ARGV;
+            }
+        }
+    }
+    else {
+        print STDERR "\nWarning: sshserver.pl unknown parameter: $ARGV[0]\n";
     }
     shift @ARGV;
-};
+}
+
+
+#***************************************************************************
+# Default ssh daemon pid file name
+#
+if(!$pidfile) {
+    $pidfile = "$path/". server_pidfilename($proto, $ipvnum, $idnum);
+}
+
+
+#***************************************************************************
+# ssh, socks and sftp server log file names
+#
+$sshdlog = server_logfilename($logdir, 'ssh', $ipvnum, $idnum);
+$sftplog = server_logfilename($logdir, 'sftp', $ipvnum, $idnum);
+$sshlog  = server_logfilename($logdir, 'socks', $ipvnum, $idnum);
 
 
 #***************************************************************************
 # Logging level for ssh server and client
 #
 my $loglevel = $debugprotocol?'DEBUG3':'DEBUG2';
@@ -417,13 +478,13 @@
 push @cfgarr, 'DenyGroups';
 push @cfgarr, 'AllowGroups';
 push @cfgarr, '#';
 push @cfgarr, "AuthorizedKeysFile $path/$clipubkeyf";
 push @cfgarr, "AuthorizedKeysFile2 $path/$clipubkeyf";
 push @cfgarr, "HostKey $path/$hstprvkeyf";
-push @cfgarr, "PidFile $path/.ssh.pid";
+push @cfgarr, "PidFile $pidfile";
 push @cfgarr, '#';
 push @cfgarr, "Port $port";
 push @cfgarr, "ListenAddress $listenaddr";
 push @cfgarr, 'Protocol 2';
 push @cfgarr, '#';
 push @cfgarr, 'AllowTcpForwarding yes';
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.20.0/tests: tftpserver.pl

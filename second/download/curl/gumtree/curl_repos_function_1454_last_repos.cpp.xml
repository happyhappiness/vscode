<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1454_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_getoff_all_pipelines<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">Curl_easy<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">data<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
                               <parameter><decl><type><name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">connectdata<pos:position pos:line="2" pos:column="50"/></name></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">conn<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">bool<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">recv_head<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><operator pos:line="4" pos:column="20">(<pos:position pos:line="4" pos:column="21"/></operator><name><name pos:line="4" pos:column="21">conn<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">readchannel_inuse<pos:position pos:line="4" pos:column="44"/></name></name> <operator pos:line="4" pos:column="45">&amp;&amp;<pos:position pos:line="4" pos:column="55"/></operator>
                    <call><name pos:line="5" pos:column="21">Curl_recvpipe_head<pos:position pos:line="5" pos:column="39"/></name><argument_list pos:line="5" pos:column="39">(<argument><expr><name pos:line="5" pos:column="40">data<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="46">conn<pos:position pos:line="5" pos:column="50"/></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call><operator pos:line="5" pos:column="51">)<pos:position pos:line="5" pos:column="52"/></operator></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">bool<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">send_head<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><operator pos:line="6" pos:column="20">(<pos:position pos:line="6" pos:column="21"/></operator><name><name pos:line="6" pos:column="21">conn<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">writechannel_inuse<pos:position pos:line="6" pos:column="45"/></name></name> <operator pos:line="6" pos:column="46">&amp;&amp;<pos:position pos:line="6" pos:column="56"/></operator>
                    <call><name pos:line="7" pos:column="21">Curl_sendpipe_head<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><name pos:line="7" pos:column="40">data<pos:position pos:line="7" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="46">conn<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call><operator pos:line="7" pos:column="51">)<pos:position pos:line="7" pos:column="52"/></operator></expr></init></decl>;<pos:position pos:line="7" pos:column="53"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><call><name pos:line="9" pos:column="6">Curl_removeHandleFromPipeline<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">data<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="42">&amp;<pos:position pos:line="9" pos:column="47"/></operator><name><name pos:line="9" pos:column="43">conn<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">-&gt;<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="49">recv_pipe<pos:position pos:line="9" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call> <operator pos:line="9" pos:column="60">&amp;&amp;<pos:position pos:line="9" pos:column="70"/></operator> <name pos:line="9" pos:column="63">recv_head<pos:position pos:line="9" pos:column="72"/></name></expr>)<pos:position pos:line="9" pos:column="73"/></condition><then pos:line="9" pos:column="73">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="5">Curl_pipeline_leave_read<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">conn<pos:position pos:line="10" pos:column="34"/></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt></block></then></if>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><call><name pos:line="11" pos:column="6">Curl_removeHandleFromPipeline<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">data<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="42">&amp;<pos:position pos:line="11" pos:column="47"/></operator><name><name pos:line="11" pos:column="43">conn<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">-&gt;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="49">send_pipe<pos:position pos:line="11" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call> <operator pos:line="11" pos:column="60">&amp;&amp;<pos:position pos:line="11" pos:column="70"/></operator> <name pos:line="11" pos:column="63">send_head<pos:position pos:line="11" pos:column="72"/></name></expr>)<pos:position pos:line="11" pos:column="73"/></condition><then pos:line="11" pos:column="73">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">Curl_pipeline_leave_write<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">conn<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt></block></then></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

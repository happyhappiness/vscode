<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1089_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">on_frame_recv<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">nghttp2_session<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">session<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">nghttp2_frame<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">frame<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">void<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">userp<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">connectdata<pos:position pos:line="4" pos:column="21"/></name></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">conn<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator>struct <name pos:line="4" pos:column="38">connectdata<pos:position pos:line="4" pos:column="49"/></name> <operator pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></operator><operator pos:line="4" pos:column="51">)<pos:position pos:line="4" pos:column="52"/></operator><name pos:line="4" pos:column="52">userp<pos:position pos:line="4" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="58"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">http_conn<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">httpc<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><operator pos:line="5" pos:column="29">&amp;<pos:position pos:line="5" pos:column="34"/></operator><name><name pos:line="5" pos:column="30">conn<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">-&gt;<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="36">proto<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">.<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="42">httpc<pos:position pos:line="5" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_easy<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">data_s<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><name pos:line="6" pos:column="30">NULL<pos:position pos:line="6" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">HTTP<pos:position pos:line="7" pos:column="14"/></name></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">stream<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">NULL<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="8" pos:column="3">static<pos:position pos:line="8" pos:column="9"/></specifier> <type><name pos:line="8" pos:column="10">int<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">lastStream<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><operator pos:line="8" pos:column="27">-<pos:position pos:line="8" pos:column="28"/></operator><literal type="number" pos:line="8" pos:column="28">1<pos:position pos:line="8" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">rv<pos:position pos:line="9" pos:column="9"/></name></decl>;<pos:position pos:line="9" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">left<pos:position pos:line="10" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="16">ncopy<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int32_t<pos:position pos:line="11" pos:column="10"/></name></type> <name pos:line="11" pos:column="11">stream_id<pos:position pos:line="11" pos:column="20"/></name> <init pos:line="11" pos:column="21">= <expr><name><name pos:line="11" pos:column="23">frame<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">hd<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">.<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">stream_id<pos:position pos:line="11" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="43"/></decl_stmt>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><operator pos:line="13" pos:column="6">!<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">stream_id<pos:position pos:line="13" pos:column="16"/></name></expr>)<pos:position pos:line="13" pos:column="17"/></condition><then pos:line="13" pos:column="17"> <block pos:line="13" pos:column="18">{
    <comment type="block" pos:line="14" pos:column="5">/* stream ID zero is for connection-oriented stuff */</comment>
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><name><name pos:line="15" pos:column="8">frame<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">hd<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">.<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">type<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">==<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="26">NGHTTP2_SETTINGS<pos:position pos:line="15" pos:column="42"/></name></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43"> <block pos:line="15" pos:column="44">{
      <decl_stmt><decl><type><name pos:line="16" pos:column="7">uint32_t<pos:position pos:line="16" pos:column="15"/></name></type> <name pos:line="16" pos:column="16">max_conn<pos:position pos:line="16" pos:column="24"/></name> <init pos:line="16" pos:column="25">= <expr><name><name pos:line="16" pos:column="27">httpc<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="34">settings<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">.<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="43">max_concurrent_streams<pos:position pos:line="16" pos:column="65"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="66"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">DEBUGF<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><call><name pos:line="17" pos:column="14">infof<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name><name pos:line="17" pos:column="20">conn<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">data<pos:position pos:line="17" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="32">"Got SETTINGS\n"<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="18" pos:column="7">httpc<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">settings<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">.<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="23">max_concurrent_streams<pos:position pos:line="18" pos:column="45"/></name></name> <operator pos:line="18" pos:column="46">=<pos:position pos:line="18" pos:column="47"/></operator>
        <call><name pos:line="19" pos:column="9">nghttp2_session_get_remote_settings<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">(
          <argument><expr><name pos:line="20" pos:column="11">session<pos:position pos:line="20" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="20">NGHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="21" pos:column="7">httpc<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">settings<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">.<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">enable_push<pos:position pos:line="21" pos:column="34"/></name></name> <operator pos:line="21" pos:column="35">=<pos:position pos:line="21" pos:column="36"/></operator>
        <call><name pos:line="22" pos:column="9">nghttp2_session_get_remote_settings<pos:position pos:line="22" pos:column="44"/></name><argument_list pos:line="22" pos:column="44">(
          <argument><expr><name pos:line="23" pos:column="11">session<pos:position pos:line="23" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="20">NGHTTP2_SETTINGS_ENABLE_PUSH<pos:position pos:line="23" pos:column="48"/></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">DEBUGF<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><call><name pos:line="24" pos:column="14">infof<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name><name pos:line="24" pos:column="20">conn<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">data<pos:position pos:line="24" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="32">"MAX_CONCURRENT_STREAMS == %d\n"<pos:position pos:line="24" pos:column="64"/></literal></expr></argument>,
                   <argument><expr><name><name pos:line="25" pos:column="20">httpc<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">-&gt;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="27">settings<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">.<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="36">max_concurrent_streams<pos:position pos:line="25" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">DEBUGF<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><call><name pos:line="26" pos:column="14">infof<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><name><name pos:line="26" pos:column="20">conn<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">-&gt;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="26">data<pos:position pos:line="26" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="32">"ENABLE_PUSH == %s\n"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>,
                   <argument><expr><ternary><condition><expr><name><name pos:line="27" pos:column="20">httpc<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">-&gt;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="27">settings<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">.<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="36">enable_push<pos:position pos:line="27" pos:column="47"/></name></name></expr>?<pos:position pos:line="27" pos:column="48"/></condition><then><expr><literal type="string" pos:line="27" pos:column="48">"TRUE"<pos:position pos:line="27" pos:column="54"/></literal></expr></then><else pos:line="27" pos:column="54">:<expr><literal type="string" pos:line="27" pos:column="55">"false"<pos:position pos:line="27" pos:column="62"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="65"/></expr_stmt>
      <if pos:line="28" pos:column="7">if<condition pos:line="28" pos:column="9">(<expr><name pos:line="28" pos:column="10">max_conn<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">!=<pos:position pos:line="28" pos:column="21"/></operator> <name><name pos:line="28" pos:column="22">httpc<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">-&gt;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="29">settings<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">.<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="38">max_concurrent_streams<pos:position pos:line="28" pos:column="60"/></name></name></expr>)<pos:position pos:line="28" pos:column="61"/></condition><then pos:line="28" pos:column="61"> <block pos:line="28" pos:column="62">{
        <comment type="block" pos:line="29" pos:column="9">/* only signal change if the value actually changed */</comment>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">infof<pos:position pos:line="30" pos:column="14"/></name><argument_list pos:line="30" pos:column="14">(<argument><expr><name><name pos:line="30" pos:column="15">conn<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">data<pos:position pos:line="30" pos:column="25"/></name></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="31" pos:column="15">"Connection state changed (MAX_CONCURRENT_STREAMS updated)!\n"<pos:position pos:line="31" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">Curl_multi_connchanged<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name><name pos:line="32" pos:column="32">conn<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">data<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">multi<pos:position pos:line="32" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>
      }<pos:position pos:line="33" pos:column="8"/></block></then></if>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <return pos:line="35" pos:column="5">return <expr><literal type="number" pos:line="35" pos:column="12">0<pos:position pos:line="35" pos:column="13"/></literal></expr>;<pos:position pos:line="35" pos:column="14"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="37" pos:column="3">data_s<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <call><name pos:line="37" pos:column="12">nghttp2_session_get_stream_user_data<pos:position pos:line="37" pos:column="48"/></name><argument_list pos:line="37" pos:column="48">(<argument><expr><name pos:line="37" pos:column="49">session<pos:position pos:line="37" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="58">stream_id<pos:position pos:line="37" pos:column="67"/></name></expr></argument>)<pos:position pos:line="37" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="69"/></expr_stmt>
  <if pos:line="38" pos:column="3">if<condition pos:line="38" pos:column="5">(<expr><name pos:line="38" pos:column="6">lastStream<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">!=<pos:position pos:line="38" pos:column="19"/></operator> <name pos:line="38" pos:column="20">stream_id<pos:position pos:line="38" pos:column="29"/></name></expr>)<pos:position pos:line="38" pos:column="30"/></condition><then pos:line="38" pos:column="30"> <block pos:line="38" pos:column="31">{
    <expr_stmt><expr><name pos:line="39" pos:column="5">lastStream<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <name pos:line="39" pos:column="18">stream_id<pos:position pos:line="39" pos:column="27"/></name></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>
  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><operator pos:line="41" pos:column="6">!<pos:position pos:line="41" pos:column="7"/></operator><name pos:line="41" pos:column="7">data_s<pos:position pos:line="41" pos:column="13"/></name></expr>)<pos:position pos:line="41" pos:column="14"/></condition><then pos:line="41" pos:column="14"> <block pos:line="41" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">DEBUGF<pos:position pos:line="42" pos:column="11"/></name><argument_list pos:line="42" pos:column="11">(<argument><expr><call><name pos:line="42" pos:column="12">infof<pos:position pos:line="42" pos:column="17"/></name><argument_list pos:line="42" pos:column="17">(<argument><expr><name><name pos:line="42" pos:column="18">conn<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">-&gt;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="24">data<pos:position pos:line="42" pos:column="28"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="43" pos:column="18">"No Curl_easy associated with stream: %x\n"<pos:position pos:line="43" pos:column="61"/></literal></expr></argument>,
                 <argument><expr><name pos:line="44" pos:column="18">stream_id<pos:position pos:line="44" pos:column="27"/></name></expr></argument>)<pos:position pos:line="44" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
    <return pos:line="45" pos:column="5">return <expr><literal type="number" pos:line="45" pos:column="12">0<pos:position pos:line="45" pos:column="13"/></literal></expr>;<pos:position pos:line="45" pos:column="14"/></return>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="48" pos:column="3">stream<pos:position pos:line="48" pos:column="9"/></name> <operator pos:line="48" pos:column="10">=<pos:position pos:line="48" pos:column="11"/></operator> <name><name pos:line="48" pos:column="12">data_s<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">-&gt;<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="20">req<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">.<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="24">protop<pos:position pos:line="48" pos:column="30"/></name></name></expr>;<pos:position pos:line="48" pos:column="31"/></expr_stmt>
  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">(<expr><operator pos:line="49" pos:column="6">!<pos:position pos:line="49" pos:column="7"/></operator><name pos:line="49" pos:column="7">stream<pos:position pos:line="49" pos:column="13"/></name></expr>)<pos:position pos:line="49" pos:column="14"/></condition><then pos:line="49" pos:column="14"> <block pos:line="49" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">DEBUGF<pos:position pos:line="50" pos:column="11"/></name><argument_list pos:line="50" pos:column="11">(<argument><expr><call><name pos:line="50" pos:column="12">infof<pos:position pos:line="50" pos:column="17"/></name><argument_list pos:line="50" pos:column="17">(<argument><expr><name><name pos:line="50" pos:column="18">conn<pos:position pos:line="50" pos:column="22"/></name><operator pos:line="50" pos:column="22">-&gt;<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="24">data<pos:position pos:line="50" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="30">"No proto pointer for stream: %x\n"<pos:position pos:line="50" pos:column="65"/></literal></expr></argument>,
                 <argument><expr><name pos:line="51" pos:column="18">stream_id<pos:position pos:line="51" pos:column="27"/></name></expr></argument>)<pos:position pos:line="51" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="30"/></expr_stmt>
    <return pos:line="52" pos:column="5">return <expr><name pos:line="52" pos:column="12">NGHTTP2_ERR_CALLBACK_FAILURE<pos:position pos:line="52" pos:column="40"/></name></expr>;<pos:position pos:line="52" pos:column="41"/></return>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="55" pos:column="3">DEBUGF<pos:position pos:line="55" pos:column="9"/></name><argument_list pos:line="55" pos:column="9">(<argument><expr><call><name pos:line="55" pos:column="10">infof<pos:position pos:line="55" pos:column="15"/></name><argument_list pos:line="55" pos:column="15">(<argument><expr><name pos:line="55" pos:column="16">data_s<pos:position pos:line="55" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="24">"on_frame_recv() header %x stream %x\n"<pos:position pos:line="55" pos:column="63"/></literal></expr></argument>,
               <argument><expr><name><name pos:line="56" pos:column="16">frame<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">-&gt;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="23">hd<pos:position pos:line="56" pos:column="25"/></name><operator pos:line="56" pos:column="25">.<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="26">type<pos:position pos:line="56" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="32">stream_id<pos:position pos:line="56" pos:column="41"/></name></expr></argument>)<pos:position pos:line="56" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="44"/></expr_stmt>

  <switch pos:line="58" pos:column="3">switch<condition pos:line="58" pos:column="9">(<expr><name><name pos:line="58" pos:column="10">frame<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">-&gt;<pos:position pos:line="58" pos:column="20"/></operator><name pos:line="58" pos:column="17">hd<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">.<pos:position pos:line="58" pos:column="20"/></operator><name pos:line="58" pos:column="20">type<pos:position pos:line="58" pos:column="24"/></name></name></expr>)<pos:position pos:line="58" pos:column="25"/></condition> <block pos:line="58" pos:column="26">{
  <case pos:line="59" pos:column="3">case <expr><name pos:line="59" pos:column="8">NGHTTP2_DATA<pos:position pos:line="59" pos:column="20"/></name></expr>:<pos:position pos:line="59" pos:column="21"/></case>
    <comment type="block" pos:line="60" pos:column="5">/* If body started on this stream, then receiving DATA is illegal. */</comment>
    <if pos:line="61" pos:column="5">if<condition pos:line="61" pos:column="7">(<expr><operator pos:line="61" pos:column="8">!<pos:position pos:line="61" pos:column="9"/></operator><name><name pos:line="61" pos:column="9">stream<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">-&gt;<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="17">bodystarted<pos:position pos:line="61" pos:column="28"/></name></name></expr>)<pos:position pos:line="61" pos:column="29"/></condition><then pos:line="61" pos:column="29"> <block pos:line="61" pos:column="30">{
      <expr_stmt><expr><name pos:line="62" pos:column="7">rv<pos:position pos:line="62" pos:column="9"/></name> <operator pos:line="62" pos:column="10">=<pos:position pos:line="62" pos:column="11"/></operator> <call><name pos:line="62" pos:column="12">nghttp2_submit_rst_stream<pos:position pos:line="62" pos:column="37"/></name><argument_list pos:line="62" pos:column="37">(<argument><expr><name pos:line="62" pos:column="38">session<pos:position pos:line="62" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="47">NGHTTP2_FLAG_NONE<pos:position pos:line="62" pos:column="64"/></name></expr></argument>,
                                     <argument><expr><name pos:line="63" pos:column="38">stream_id<pos:position pos:line="63" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="49">NGHTTP2_PROTOCOL_ERROR<pos:position pos:line="63" pos:column="71"/></name></expr></argument>)<pos:position pos:line="63" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="73"/></expr_stmt>

      <if pos:line="65" pos:column="7">if<condition pos:line="65" pos:column="9">(<expr><call><name pos:line="65" pos:column="10">nghttp2_is_fatal<pos:position pos:line="65" pos:column="26"/></name><argument_list pos:line="65" pos:column="26">(<argument><expr><name pos:line="65" pos:column="27">rv<pos:position pos:line="65" pos:column="29"/></name></expr></argument>)<pos:position pos:line="65" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="31"/></condition><then pos:line="65" pos:column="31"> <block pos:line="65" pos:column="32">{
        <return pos:line="66" pos:column="9">return <expr><name pos:line="66" pos:column="16">NGHTTP2_ERR_CALLBACK_FAILURE<pos:position pos:line="66" pos:column="44"/></name></expr>;<pos:position pos:line="66" pos:column="45"/></return>
      }<pos:position pos:line="67" pos:column="8"/></block></then></if>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>
    <break pos:line="69" pos:column="5">break;<pos:position pos:line="69" pos:column="11"/></break>
  <case pos:line="70" pos:column="3">case <expr><name pos:line="70" pos:column="8">NGHTTP2_HEADERS<pos:position pos:line="70" pos:column="23"/></name></expr>:<pos:position pos:line="70" pos:column="24"/></case>
    <if pos:line="71" pos:column="5">if<condition pos:line="71" pos:column="7">(<expr><name><name pos:line="71" pos:column="8">stream<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">-&gt;<pos:position pos:line="71" pos:column="19"/></operator><name pos:line="71" pos:column="16">bodystarted<pos:position pos:line="71" pos:column="27"/></name></name></expr>)<pos:position pos:line="71" pos:column="28"/></condition><then pos:line="71" pos:column="28"> <block pos:line="71" pos:column="29">{
      <comment type="block" pos:line="72" pos:column="7">/* Only valid HEADERS after body started is trailer HEADERS.  We
         buffer them in on_header callback. */</comment>
      <break pos:line="74" pos:column="7">break;<pos:position pos:line="74" pos:column="13"/></break>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="77" pos:column="5">/* nghttp2 guarantees that :status is received, and we store it to
       stream-&gt;status_code */</comment>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">DEBUGASSERT<pos:position pos:line="79" pos:column="16"/></name><argument_list pos:line="79" pos:column="16">(<argument><expr><name><name pos:line="79" pos:column="17">stream<pos:position pos:line="79" pos:column="23"/></name><operator pos:line="79" pos:column="23">-&gt;<pos:position pos:line="79" pos:column="28"/></operator><name pos:line="79" pos:column="25">status_code<pos:position pos:line="79" pos:column="36"/></name></name> <operator pos:line="79" pos:column="37">!=<pos:position pos:line="79" pos:column="39"/></operator> <operator pos:line="79" pos:column="40">-<pos:position pos:line="79" pos:column="41"/></operator><literal type="number" pos:line="79" pos:column="41">1<pos:position pos:line="79" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="44"/></expr_stmt>

    <comment type="block" pos:line="81" pos:column="5">/* Only final status code signals the end of header */</comment>
    <if pos:line="82" pos:column="5">if<condition pos:line="82" pos:column="7">(<expr><name><name pos:line="82" pos:column="8">stream<pos:position pos:line="82" pos:column="14"/></name><operator pos:line="82" pos:column="14">-&gt;<pos:position pos:line="82" pos:column="19"/></operator><name pos:line="82" pos:column="16">status_code<pos:position pos:line="82" pos:column="27"/></name></name> <operator pos:line="82" pos:column="28">/<pos:position pos:line="82" pos:column="29"/></operator> <literal type="number" pos:line="82" pos:column="30">100<pos:position pos:line="82" pos:column="33"/></literal> <operator pos:line="82" pos:column="34">!=<pos:position pos:line="82" pos:column="36"/></operator> <literal type="number" pos:line="82" pos:column="37">1<pos:position pos:line="82" pos:column="38"/></literal></expr>)<pos:position pos:line="82" pos:column="39"/></condition><then pos:line="82" pos:column="39"> <block pos:line="82" pos:column="40">{
      <expr_stmt><expr><name><name pos:line="83" pos:column="7">stream<pos:position pos:line="83" pos:column="13"/></name><operator pos:line="83" pos:column="13">-&gt;<pos:position pos:line="83" pos:column="18"/></operator><name pos:line="83" pos:column="15">bodystarted<pos:position pos:line="83" pos:column="26"/></name></name> <operator pos:line="83" pos:column="27">=<pos:position pos:line="83" pos:column="28"/></operator> <name pos:line="83" pos:column="29">TRUE<pos:position pos:line="83" pos:column="33"/></name></expr>;<pos:position pos:line="83" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="84" pos:column="7">stream<pos:position pos:line="84" pos:column="13"/></name><operator pos:line="84" pos:column="13">-&gt;<pos:position pos:line="84" pos:column="18"/></operator><name pos:line="84" pos:column="15">status_code<pos:position pos:line="84" pos:column="26"/></name></name> <operator pos:line="84" pos:column="27">=<pos:position pos:line="84" pos:column="28"/></operator> <operator pos:line="84" pos:column="29">-<pos:position pos:line="84" pos:column="30"/></operator><literal type="number" pos:line="84" pos:column="30">1<pos:position pos:line="84" pos:column="31"/></literal></expr>;<pos:position pos:line="84" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="87" pos:column="5">Curl_add_buffer<pos:position pos:line="87" pos:column="20"/></name><argument_list pos:line="87" pos:column="20">(<argument><expr><name><name pos:line="87" pos:column="21">stream<pos:position pos:line="87" pos:column="27"/></name><operator pos:line="87" pos:column="27">-&gt;<pos:position pos:line="87" pos:column="32"/></operator><name pos:line="87" pos:column="29">header_recvbuf<pos:position pos:line="87" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="45">"\r\n"<pos:position pos:line="87" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="53">2<pos:position pos:line="87" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><name pos:line="89" pos:column="5">left<pos:position pos:line="89" pos:column="9"/></name> <operator pos:line="89" pos:column="10">=<pos:position pos:line="89" pos:column="11"/></operator> <name><name pos:line="89" pos:column="12">stream<pos:position pos:line="89" pos:column="18"/></name><operator pos:line="89" pos:column="18">-&gt;<pos:position pos:line="89" pos:column="23"/></operator><name pos:line="89" pos:column="20">header_recvbuf<pos:position pos:line="89" pos:column="34"/></name><operator pos:line="89" pos:column="34">-&gt;<pos:position pos:line="89" pos:column="39"/></operator><name pos:line="89" pos:column="36">size_used<pos:position pos:line="89" pos:column="45"/></name></name> <operator pos:line="89" pos:column="46">-<pos:position pos:line="89" pos:column="47"/></operator> <name><name pos:line="89" pos:column="48">stream<pos:position pos:line="89" pos:column="54"/></name><operator pos:line="89" pos:column="54">-&gt;<pos:position pos:line="89" pos:column="59"/></operator><name pos:line="89" pos:column="56">nread_header_recvbuf<pos:position pos:line="89" pos:column="76"/></name></name></expr>;<pos:position pos:line="89" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><name pos:line="90" pos:column="5">ncopy<pos:position pos:line="90" pos:column="10"/></name> <operator pos:line="90" pos:column="11">=<pos:position pos:line="90" pos:column="12"/></operator> <call><name pos:line="90" pos:column="13">MIN<pos:position pos:line="90" pos:column="16"/></name><argument_list pos:line="90" pos:column="16">(<argument><expr><name><name pos:line="90" pos:column="17">stream<pos:position pos:line="90" pos:column="23"/></name><operator pos:line="90" pos:column="23">-&gt;<pos:position pos:line="90" pos:column="28"/></operator><name pos:line="90" pos:column="25">len<pos:position pos:line="90" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="30">left<pos:position pos:line="90" pos:column="34"/></name></expr></argument>)<pos:position pos:line="90" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="92" pos:column="5">memcpy<pos:position pos:line="92" pos:column="11"/></name><argument_list pos:line="92" pos:column="11">(<argument><expr><operator pos:line="92" pos:column="12">&amp;<pos:position pos:line="92" pos:column="17"/></operator><name><name pos:line="92" pos:column="13">stream<pos:position pos:line="92" pos:column="19"/></name><operator pos:line="92" pos:column="19">-&gt;<pos:position pos:line="92" pos:column="24"/></operator><name pos:line="92" pos:column="21">mem<pos:position pos:line="92" pos:column="24"/></name><index pos:line="92" pos:column="24">[<expr><name><name pos:line="92" pos:column="25">stream<pos:position pos:line="92" pos:column="31"/></name><operator pos:line="92" pos:column="31">-&gt;<pos:position pos:line="92" pos:column="36"/></operator><name pos:line="92" pos:column="33">memlen<pos:position pos:line="92" pos:column="39"/></name></name></expr>]<pos:position pos:line="92" pos:column="40"/></index></name></expr></argument>,
           <argument><expr><name><name pos:line="93" pos:column="12">stream<pos:position pos:line="93" pos:column="18"/></name><operator pos:line="93" pos:column="18">-&gt;<pos:position pos:line="93" pos:column="23"/></operator><name pos:line="93" pos:column="20">header_recvbuf<pos:position pos:line="93" pos:column="34"/></name><operator pos:line="93" pos:column="34">-&gt;<pos:position pos:line="93" pos:column="39"/></operator><name pos:line="93" pos:column="36">buffer<pos:position pos:line="93" pos:column="42"/></name></name> <operator pos:line="93" pos:column="43">+<pos:position pos:line="93" pos:column="44"/></operator> <name><name pos:line="93" pos:column="45">stream<pos:position pos:line="93" pos:column="51"/></name><operator pos:line="93" pos:column="51">-&gt;<pos:position pos:line="93" pos:column="56"/></operator><name pos:line="93" pos:column="53">nread_header_recvbuf<pos:position pos:line="93" pos:column="73"/></name></name></expr></argument>,
           <argument><expr><name pos:line="94" pos:column="12">ncopy<pos:position pos:line="94" pos:column="17"/></name></expr></argument>)<pos:position pos:line="94" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="95" pos:column="5">stream<pos:position pos:line="95" pos:column="11"/></name><operator pos:line="95" pos:column="11">-&gt;<pos:position pos:line="95" pos:column="16"/></operator><name pos:line="95" pos:column="13">nread_header_recvbuf<pos:position pos:line="95" pos:column="33"/></name></name> <operator pos:line="95" pos:column="34">+=<pos:position pos:line="95" pos:column="36"/></operator> <name pos:line="95" pos:column="37">ncopy<pos:position pos:line="95" pos:column="42"/></name></expr>;<pos:position pos:line="95" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="97" pos:column="5">DEBUGF<pos:position pos:line="97" pos:column="11"/></name><argument_list pos:line="97" pos:column="11">(<argument><expr><call><name pos:line="97" pos:column="12">infof<pos:position pos:line="97" pos:column="17"/></name><argument_list pos:line="97" pos:column="17">(<argument><expr><name pos:line="97" pos:column="18">data_s<pos:position pos:line="97" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="26">"Store %zu bytes headers from stream %u at %p\n"<pos:position pos:line="97" pos:column="74"/></literal></expr></argument>,
                 <argument><expr><name pos:line="98" pos:column="18">ncopy<pos:position pos:line="98" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="25">stream_id<pos:position pos:line="98" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="36">stream<pos:position pos:line="98" pos:column="42"/></name><operator pos:line="98" pos:column="42">-&gt;<pos:position pos:line="98" pos:column="47"/></operator><name pos:line="98" pos:column="44">mem<pos:position pos:line="98" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="98" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="50"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="100" pos:column="5">stream<pos:position pos:line="100" pos:column="11"/></name><operator pos:line="100" pos:column="11">-&gt;<pos:position pos:line="100" pos:column="16"/></operator><name pos:line="100" pos:column="13">len<pos:position pos:line="100" pos:column="16"/></name></name> <operator pos:line="100" pos:column="17">-=<pos:position pos:line="100" pos:column="19"/></operator> <name pos:line="100" pos:column="20">ncopy<pos:position pos:line="100" pos:column="25"/></name></expr>;<pos:position pos:line="100" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="101" pos:column="5">stream<pos:position pos:line="101" pos:column="11"/></name><operator pos:line="101" pos:column="11">-&gt;<pos:position pos:line="101" pos:column="16"/></operator><name pos:line="101" pos:column="13">memlen<pos:position pos:line="101" pos:column="19"/></name></name> <operator pos:line="101" pos:column="20">+=<pos:position pos:line="101" pos:column="22"/></operator> <name pos:line="101" pos:column="23">ncopy<pos:position pos:line="101" pos:column="28"/></name></expr>;<pos:position pos:line="101" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="103" pos:column="5">data_s<pos:position pos:line="103" pos:column="11"/></name><operator pos:line="103" pos:column="11">-&gt;<pos:position pos:line="103" pos:column="16"/></operator><name pos:line="103" pos:column="13">state<pos:position pos:line="103" pos:column="18"/></name><operator pos:line="103" pos:column="18">.<pos:position pos:line="103" pos:column="19"/></operator><name pos:line="103" pos:column="19">drain<pos:position pos:line="103" pos:column="24"/></name></name><operator pos:line="103" pos:column="24">++<pos:position pos:line="103" pos:column="26"/></operator></expr>;<pos:position pos:line="103" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="104" pos:column="5">httpc<pos:position pos:line="104" pos:column="10"/></name><operator pos:line="104" pos:column="10">-&gt;<pos:position pos:line="104" pos:column="15"/></operator><name pos:line="104" pos:column="12">drain_total<pos:position pos:line="104" pos:column="23"/></name></name><operator pos:line="104" pos:column="23">++<pos:position pos:line="104" pos:column="25"/></operator></expr>;<pos:position pos:line="104" pos:column="26"/></expr_stmt>
    <block pos:line="105" pos:column="5">{
      <comment type="block" pos:line="106" pos:column="7">/* get the pointer from userp again since it was re-assigned above */</comment>
      <decl_stmt><decl><type><name><name pos:line="107" pos:column="7">struct<pos:position pos:line="107" pos:column="13"/></name> <name pos:line="107" pos:column="14">connectdata<pos:position pos:line="107" pos:column="25"/></name></name> <modifier pos:line="107" pos:column="26">*<pos:position pos:line="107" pos:column="27"/></modifier></type><name pos:line="107" pos:column="27">conn_s<pos:position pos:line="107" pos:column="33"/></name> <init pos:line="107" pos:column="34">= <expr><operator pos:line="107" pos:column="36">(<pos:position pos:line="107" pos:column="37"/></operator>struct <name pos:line="107" pos:column="44">connectdata<pos:position pos:line="107" pos:column="55"/></name> <operator pos:line="107" pos:column="56">*<pos:position pos:line="107" pos:column="57"/></operator><operator pos:line="107" pos:column="57">)<pos:position pos:line="107" pos:column="58"/></operator><name pos:line="107" pos:column="58">userp<pos:position pos:line="107" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="107" pos:column="64"/></decl_stmt>

      <comment type="block" pos:line="109" pos:column="7">/* if we receive data for another handle, wake that up */</comment>
      <if pos:line="110" pos:column="7">if<condition pos:line="110" pos:column="9">(<expr><name><name pos:line="110" pos:column="10">conn_s<pos:position pos:line="110" pos:column="16"/></name><operator pos:line="110" pos:column="16">-&gt;<pos:position pos:line="110" pos:column="21"/></operator><name pos:line="110" pos:column="18">data<pos:position pos:line="110" pos:column="22"/></name></name> <operator pos:line="110" pos:column="23">!=<pos:position pos:line="110" pos:column="25"/></operator> <name pos:line="110" pos:column="26">data_s<pos:position pos:line="110" pos:column="32"/></name></expr>)<pos:position pos:line="110" pos:column="33"/></condition><then pos:line="110" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="111" pos:column="9">Curl_expire<pos:position pos:line="111" pos:column="20"/></name><argument_list pos:line="111" pos:column="20">(<argument><expr><name pos:line="111" pos:column="21">data_s<pos:position pos:line="111" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="29">0<pos:position pos:line="111" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="32">EXPIRE_RUN_NOW<pos:position pos:line="111" pos:column="46"/></name></expr></argument>)<pos:position pos:line="111" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="48"/></expr_stmt></block></then></if>
    }<pos:position pos:line="112" pos:column="6"/></block>
    <break pos:line="113" pos:column="5">break;<pos:position pos:line="113" pos:column="11"/></break>
  <case pos:line="114" pos:column="3">case <expr><name pos:line="114" pos:column="8">NGHTTP2_PUSH_PROMISE<pos:position pos:line="114" pos:column="28"/></name></expr>:<pos:position pos:line="114" pos:column="29"/></case>
    <expr_stmt><expr><name pos:line="115" pos:column="5">rv<pos:position pos:line="115" pos:column="7"/></name> <operator pos:line="115" pos:column="8">=<pos:position pos:line="115" pos:column="9"/></operator> <call><name pos:line="115" pos:column="10">push_promise<pos:position pos:line="115" pos:column="22"/></name><argument_list pos:line="115" pos:column="22">(<argument><expr><name pos:line="115" pos:column="23">data_s<pos:position pos:line="115" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="31">conn<pos:position pos:line="115" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="115" pos:column="37">&amp;<pos:position pos:line="115" pos:column="42"/></operator><name><name pos:line="115" pos:column="38">frame<pos:position pos:line="115" pos:column="43"/></name><operator pos:line="115" pos:column="43">-&gt;<pos:position pos:line="115" pos:column="48"/></operator><name pos:line="115" pos:column="45">push_promise<pos:position pos:line="115" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="59"/></expr_stmt>
    <if pos:line="116" pos:column="5">if<condition pos:line="116" pos:column="7">(<expr><name pos:line="116" pos:column="8">rv<pos:position pos:line="116" pos:column="10"/></name></expr>)<pos:position pos:line="116" pos:column="11"/></condition><then pos:line="116" pos:column="11"> <block pos:line="116" pos:column="12">{ <comment type="block" pos:line="116" pos:column="14">/* deny! */</comment>
      <expr_stmt><expr><name pos:line="117" pos:column="7">rv<pos:position pos:line="117" pos:column="9"/></name> <operator pos:line="117" pos:column="10">=<pos:position pos:line="117" pos:column="11"/></operator> <call><name pos:line="117" pos:column="12">nghttp2_submit_rst_stream<pos:position pos:line="117" pos:column="37"/></name><argument_list pos:line="117" pos:column="37">(<argument><expr><name pos:line="117" pos:column="38">session<pos:position pos:line="117" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="47">NGHTTP2_FLAG_NONE<pos:position pos:line="117" pos:column="64"/></name></expr></argument>,
                                     <argument><expr><name><name pos:line="118" pos:column="38">frame<pos:position pos:line="118" pos:column="43"/></name><operator pos:line="118" pos:column="43">-&gt;<pos:position pos:line="118" pos:column="48"/></operator><name pos:line="118" pos:column="45">push_promise<pos:position pos:line="118" pos:column="57"/></name><operator pos:line="118" pos:column="57">.<pos:position pos:line="118" pos:column="58"/></operator><name pos:line="118" pos:column="58">promised_stream_id<pos:position pos:line="118" pos:column="76"/></name></name></expr></argument>,
                                     <argument><expr><name pos:line="119" pos:column="38">NGHTTP2_CANCEL<pos:position pos:line="119" pos:column="52"/></name></expr></argument>)<pos:position pos:line="119" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="54"/></expr_stmt>
      <if pos:line="120" pos:column="7">if<condition pos:line="120" pos:column="9">(<expr><call><name pos:line="120" pos:column="10">nghttp2_is_fatal<pos:position pos:line="120" pos:column="26"/></name><argument_list pos:line="120" pos:column="26">(<argument><expr><name pos:line="120" pos:column="27">rv<pos:position pos:line="120" pos:column="29"/></name></expr></argument>)<pos:position pos:line="120" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="120" pos:column="31"/></condition><then pos:line="120" pos:column="31"> <block pos:line="120" pos:column="32">{
        <return pos:line="121" pos:column="9">return <expr><name pos:line="121" pos:column="16">rv<pos:position pos:line="121" pos:column="18"/></name></expr>;<pos:position pos:line="121" pos:column="19"/></return>
      }<pos:position pos:line="122" pos:column="8"/></block></then></if>
    }<pos:position pos:line="123" pos:column="6"/></block></then></if>
    <break pos:line="124" pos:column="5">break;<pos:position pos:line="124" pos:column="11"/></break>
  <default pos:line="125" pos:column="3">default:<pos:position pos:line="125" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="126" pos:column="5">DEBUGF<pos:position pos:line="126" pos:column="11"/></name><argument_list pos:line="126" pos:column="11">(<argument><expr><call><name pos:line="126" pos:column="12">infof<pos:position pos:line="126" pos:column="17"/></name><argument_list pos:line="126" pos:column="17">(<argument><expr><name><name pos:line="126" pos:column="18">conn<pos:position pos:line="126" pos:column="22"/></name><operator pos:line="126" pos:column="22">-&gt;<pos:position pos:line="126" pos:column="27"/></operator><name pos:line="126" pos:column="24">data<pos:position pos:line="126" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="30">"Got frame type %x for stream %u!\n"<pos:position pos:line="126" pos:column="66"/></literal></expr></argument>,
                 <argument><expr><name><name pos:line="127" pos:column="18">frame<pos:position pos:line="127" pos:column="23"/></name><operator pos:line="127" pos:column="23">-&gt;<pos:position pos:line="127" pos:column="28"/></operator><name pos:line="127" pos:column="25">hd<pos:position pos:line="127" pos:column="27"/></name><operator pos:line="127" pos:column="27">.<pos:position pos:line="127" pos:column="28"/></operator><name pos:line="127" pos:column="28">type<pos:position pos:line="127" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="34">stream_id<pos:position pos:line="127" pos:column="43"/></name></expr></argument>)<pos:position pos:line="127" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="127" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="46"/></expr_stmt>
    <break pos:line="128" pos:column="5">break;<pos:position pos:line="128" pos:column="11"/></break>
  }<pos:position pos:line="129" pos:column="4"/></block></switch>
  <return pos:line="130" pos:column="3">return <expr><literal type="number" pos:line="130" pos:column="10">0<pos:position pos:line="130" pos:column="11"/></literal></expr>;<pos:position pos:line="130" pos:column="12"/></return>
}<pos:position pos:line="131" pos:column="2"/></block></function></unit>

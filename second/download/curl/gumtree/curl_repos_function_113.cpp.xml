<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_113.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">curl_version<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">char<pos:position pos:line="3" pos:column="14"/></name></type> <name><name pos:line="3" pos:column="15">version<pos:position pos:line="3" pos:column="22"/></name><index pos:line="3" pos:column="22">[<expr><literal type="number" pos:line="3" pos:column="23">200<pos:position pos:line="3" pos:column="26"/></literal></expr>]<pos:position pos:line="3" pos:column="27"/></index></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ptr<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><call><name pos:line="5" pos:column="5">defined<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">USE_SSLEAY<pos:position pos:line="5" pos:column="23"/></name></expr></argument>)<pos:position pos:line="5" pos:column="24"/></argument_list></call></expr></cpp:if>
  <decl_stmt><decl><specifier pos:line="6" pos:column="3">static<pos:position pos:line="6" pos:column="9"/></specifier> <type><name pos:line="6" pos:column="10">char<pos:position pos:line="6" pos:column="14"/></name></type> <name><name pos:line="6" pos:column="15">sub<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><literal type="number" pos:line="6" pos:column="19">2<pos:position pos:line="6" pos:column="20"/></literal></expr>]<pos:position pos:line="6" pos:column="21"/></index></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">strcpy<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name pos:line="8" pos:column="10">version<pos:position pos:line="8" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="19">LIBCURL_NAME<pos:position pos:line="8" pos:column="31"/></name> <literal type="string" pos:line="8" pos:column="32">" "<pos:position pos:line="8" pos:column="35"/></literal> <name pos:line="8" pos:column="36">LIBCURL_VERSION<pos:position pos:line="8" pos:column="51"/></name></expr></argument> )<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">ptr<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">=<pos:position pos:line="9" pos:column="7"/></operator><call><name pos:line="9" pos:column="7">strchr<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">version<pos:position pos:line="9" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="23">'\0'<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">USE_SSLEAY<pos:position pos:line="11" pos:column="18"/></name></cpp:ifdef>

<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><operator pos:line="13" pos:column="5">(<pos:position pos:line="13" pos:column="6"/></operator><name pos:line="13" pos:column="6">SSLEAY_VERSION_NUMBER<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">&gt;=<pos:position pos:line="13" pos:column="33"/></operator> <literal type="number" pos:line="13" pos:column="31">0x900000<pos:position pos:line="13" pos:column="39"/></literal><operator pos:line="13" pos:column="39">)<pos:position pos:line="13" pos:column="40"/></operator></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">sprintf<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><name pos:line="14" pos:column="11">ptr<pos:position pos:line="14" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="16">" (SSL %lx.%lx.%lx)"<pos:position pos:line="14" pos:column="36"/></literal></expr></argument>,
          <argument><expr><operator pos:line="15" pos:column="11">(<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">SSLEAY_VERSION_NUMBER<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">&gt;&gt;<pos:position pos:line="15" pos:column="38"/></operator><literal type="number" pos:line="15" pos:column="35">28<pos:position pos:line="15" pos:column="37"/></literal><operator pos:line="15" pos:column="37">)<pos:position pos:line="15" pos:column="38"/></operator><operator pos:line="15" pos:column="38">&amp;<pos:position pos:line="15" pos:column="43"/></operator><literal type="number" pos:line="15" pos:column="39">0xff<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>,
          <argument><expr><operator pos:line="16" pos:column="11">(<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">SSLEAY_VERSION_NUMBER<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">&gt;&gt;<pos:position pos:line="16" pos:column="38"/></operator><literal type="number" pos:line="16" pos:column="35">20<pos:position pos:line="16" pos:column="37"/></literal><operator pos:line="16" pos:column="37">)<pos:position pos:line="16" pos:column="38"/></operator><operator pos:line="16" pos:column="38">&amp;<pos:position pos:line="16" pos:column="43"/></operator><literal type="number" pos:line="16" pos:column="39">0xff<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>,
          <argument><expr><operator pos:line="17" pos:column="11">(<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">SSLEAY_VERSION_NUMBER<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">&gt;&gt;<pos:position pos:line="17" pos:column="38"/></operator><literal type="number" pos:line="17" pos:column="35">12<pos:position pos:line="17" pos:column="37"/></literal><operator pos:line="17" pos:column="37">)<pos:position pos:line="17" pos:column="38"/></operator><operator pos:line="17" pos:column="38">&amp;<pos:position pos:line="17" pos:column="43"/></operator><literal type="number" pos:line="17" pos:column="39">0xf<pos:position pos:line="17" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
<cpp:else pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">else<pos:position pos:line="18" pos:column="6"/></cpp:directive></cpp:else>
  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><name pos:line="19" pos:column="6">SSLEAY_VERSION_NUMBER<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">&amp;<pos:position pos:line="19" pos:column="32"/></operator><literal type="number" pos:line="19" pos:column="28">0x0f<pos:position pos:line="19" pos:column="32"/></literal></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33"> <block pos:line="19" pos:column="34">{
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">sub<pos:position pos:line="20" pos:column="8"/></name><index pos:line="20" pos:column="8">[<expr><literal type="number" pos:line="20" pos:column="9">0<pos:position pos:line="20" pos:column="10"/></literal></expr>]<pos:position pos:line="20" pos:column="11"/></index></name><operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">SSLEAY_VERSION_NUMBER<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">&amp;<pos:position pos:line="20" pos:column="39"/></operator><literal type="number" pos:line="20" pos:column="35">0x0f<pos:position pos:line="20" pos:column="39"/></literal><operator pos:line="20" pos:column="39">)<pos:position pos:line="20" pos:column="40"/></operator> <operator pos:line="20" pos:column="41">+<pos:position pos:line="20" pos:column="42"/></operator> <literal type="char" pos:line="20" pos:column="43">'a'<pos:position pos:line="20" pos:column="46"/></literal> <operator pos:line="20" pos:column="47">-<pos:position pos:line="20" pos:column="48"/></operator><literal type="number" pos:line="20" pos:column="48">1<pos:position pos:line="20" pos:column="49"/></literal></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then>
  <else pos:line="22" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="5">sub<pos:position pos:line="23" pos:column="8"/></name><index pos:line="23" pos:column="8">[<expr><literal type="number" pos:line="23" pos:column="9">0<pos:position pos:line="23" pos:column="10"/></literal></expr>]<pos:position pos:line="23" pos:column="11"/></index></name><operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator><literal type="number" pos:line="23" pos:column="12">0<pos:position pos:line="23" pos:column="13"/></literal></expr>;<pos:position pos:line="23" pos:column="14"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">sprintf<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">ptr<pos:position pos:line="25" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="16">" (SSL %x.%x.%x%s)"<pos:position pos:line="25" pos:column="35"/></literal></expr></argument>,
          <argument><expr><operator pos:line="26" pos:column="11">(<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">SSLEAY_VERSION_NUMBER<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">&gt;&gt;<pos:position pos:line="26" pos:column="38"/></operator><literal type="number" pos:line="26" pos:column="35">12<pos:position pos:line="26" pos:column="37"/></literal><operator pos:line="26" pos:column="37">)<pos:position pos:line="26" pos:column="38"/></operator><operator pos:line="26" pos:column="38">&amp;<pos:position pos:line="26" pos:column="43"/></operator><literal type="number" pos:line="26" pos:column="39">0xff<pos:position pos:line="26" pos:column="43"/></literal></expr></argument>,
          <argument><expr><operator pos:line="27" pos:column="11">(<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">SSLEAY_VERSION_NUMBER<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">&gt;&gt;<pos:position pos:line="27" pos:column="38"/></operator><literal type="number" pos:line="27" pos:column="35">8<pos:position pos:line="27" pos:column="36"/></literal><operator pos:line="27" pos:column="36">)<pos:position pos:line="27" pos:column="37"/></operator><operator pos:line="27" pos:column="37">&amp;<pos:position pos:line="27" pos:column="42"/></operator><literal type="number" pos:line="27" pos:column="38">0xf<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>,
          <argument><expr><operator pos:line="28" pos:column="11">(<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="12">SSLEAY_VERSION_NUMBER<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">&gt;&gt;<pos:position pos:line="28" pos:column="38"/></operator><literal type="number" pos:line="28" pos:column="35">4<pos:position pos:line="28" pos:column="36"/></literal><operator pos:line="28" pos:column="36">)<pos:position pos:line="28" pos:column="37"/></operator><operator pos:line="28" pos:column="37">&amp;<pos:position pos:line="28" pos:column="42"/></operator><literal type="number" pos:line="28" pos:column="38">0xf<pos:position pos:line="28" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="43">sub<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>

<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><name pos:line="31" pos:column="3">ptr<pos:position pos:line="31" pos:column="6"/></name><operator pos:line="31" pos:column="6">=<pos:position pos:line="31" pos:column="7"/></operator><call><name pos:line="31" pos:column="7">strchr<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><name pos:line="31" pos:column="14">ptr<pos:position pos:line="31" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="31" pos:column="19">'\0'<pos:position pos:line="31" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">ifdef<pos:position pos:line="34" pos:column="7"/></cpp:directive> <name pos:line="34" pos:column="8">USE_ZLIB<pos:position pos:line="34" pos:column="16"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">sprintf<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><name pos:line="35" pos:column="11">ptr<pos:position pos:line="35" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="16">" (zlib %s)"<pos:position pos:line="35" pos:column="28"/></literal></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="30">zlibVersion<pos:position pos:line="35" pos:column="41"/></name><argument_list pos:line="35" pos:column="41">()<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="38" pos:column="3">return <expr><name pos:line="38" pos:column="10">version<pos:position pos:line="38" pos:column="17"/></name></expr>;<pos:position pos:line="38" pos:column="18"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

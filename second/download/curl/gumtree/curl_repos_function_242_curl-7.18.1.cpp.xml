<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_242_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLM<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">multi<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURL<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">easy<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">res<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">curl_global_init<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">CURL_GLOBAL_ALL<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call> <operator pos:line="7" pos:column="41">!=<pos:position pos:line="7" pos:column="43"/></operator> <name pos:line="7" pos:column="44">CURLE_OK<pos:position pos:line="7" pos:column="52"/></name></expr>)<pos:position pos:line="7" pos:column="53"/></condition><then pos:line="7" pos:column="53"> <block pos:line="7" pos:column="54">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">fprintf<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">stderr<pos:position pos:line="8" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="21">"curl_global_init() failed\n"<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="9" pos:column="30"/></name></expr>;<pos:position pos:line="9" pos:column="31"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">multi<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">curl_multi_init<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">()<pos:position pos:line="12" pos:column="33"/></argument_list></call><operator pos:line="12" pos:column="33">)<pos:position pos:line="12" pos:column="34"/></operator> <operator pos:line="12" pos:column="35">==<pos:position pos:line="12" pos:column="37"/></operator> <name pos:line="12" pos:column="38">NULL<pos:position pos:line="12" pos:column="42"/></name></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43"> <block pos:line="12" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">fprintf<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">stderr<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="21">"curl_multi_init() failed\n"<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">curl_global_cleanup<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">()<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="15" pos:column="30"/></name></expr>;<pos:position pos:line="15" pos:column="31"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">(<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">easy<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">curl_easy_init<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">()<pos:position pos:line="18" pos:column="31"/></argument_list></call><operator pos:line="18" pos:column="31">)<pos:position pos:line="18" pos:column="32"/></operator> <operator pos:line="18" pos:column="33">==<pos:position pos:line="18" pos:column="35"/></operator> <name pos:line="18" pos:column="36">NULL<pos:position pos:line="18" pos:column="40"/></name></expr>)<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41"> <block pos:line="18" pos:column="42">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">fprintf<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">stderr<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="21">"curl_easy_init() failed\n"<pos:position pos:line="19" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">curl_multi_cleanup<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">multi<pos:position pos:line="20" pos:column="29"/></name></expr></argument>)<pos:position pos:line="20" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">curl_global_cleanup<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">()<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">curl_multi_setopt<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">multi<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">CURLMOPT_PIPELINING<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="49">1<pos:position pos:line="25" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">curl_easy_setopt<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">easy<pos:position pos:line="27" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="26">CURLOPT_WRITEFUNCTION<pos:position pos:line="27" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="49">fwrite<pos:position pos:line="27" pos:column="55"/></name></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">curl_easy_setopt<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">easy<pos:position pos:line="28" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="26">CURLOPT_FAILONERROR<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="47">1<pos:position pos:line="28" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">curl_easy_setopt<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">easy<pos:position pos:line="29" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="26">CURLOPT_URL<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="39">URL<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><call><name pos:line="31" pos:column="7">curl_multi_add_handle<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><name pos:line="31" pos:column="29">multi<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="36">easy<pos:position pos:line="31" pos:column="40"/></name></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call> <operator pos:line="31" pos:column="42">!=<pos:position pos:line="31" pos:column="44"/></operator> <name pos:line="31" pos:column="45">CURLM_OK<pos:position pos:line="31" pos:column="53"/></name></expr>)<pos:position pos:line="31" pos:column="54"/></condition><then pos:line="31" pos:column="54"> <block pos:line="31" pos:column="55">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">printf<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><literal type="string" pos:line="32" pos:column="12">"curl_multi_add_handle() failed\n"<pos:position pos:line="32" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">res<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">=<pos:position pos:line="33" pos:column="10"/></operator> <name pos:line="33" pos:column="11">TEST_ERR_MAJOR_BAD<pos:position pos:line="33" pos:column="29"/></name></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="34" pos:column="4"/></block></then> <else pos:line="34" pos:column="5">else <block pos:line="34" pos:column="10">{
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><call><name pos:line="35" pos:column="9">perform<pos:position pos:line="35" pos:column="16"/></name><argument_list pos:line="35" pos:column="16">(<argument><expr><name pos:line="35" pos:column="17">multi<pos:position pos:line="35" pos:column="22"/></name></expr></argument>)<pos:position pos:line="35" pos:column="23"/></argument_list></call> <operator pos:line="35" pos:column="24">!=<pos:position pos:line="35" pos:column="26"/></operator> <name pos:line="35" pos:column="27">CURLM_OK<pos:position pos:line="35" pos:column="35"/></name></expr>)<pos:position pos:line="35" pos:column="36"/></condition><then pos:line="35" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="7">printf<pos:position pos:line="36" pos:column="13"/></name><argument_list pos:line="36" pos:column="13">(<argument><expr><literal type="string" pos:line="36" pos:column="14">"retrieve 1 failed\n"<pos:position pos:line="36" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">curl_multi_remove_handle<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">multi<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="37">easy<pos:position pos:line="38" pos:column="41"/></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">curl_easy_reset<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><name pos:line="40" pos:column="19">easy<pos:position pos:line="40" pos:column="23"/></name></expr></argument>)<pos:position pos:line="40" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="42" pos:column="3">curl_easy_setopt<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><name pos:line="42" pos:column="20">easy<pos:position pos:line="42" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="26">CURLOPT_FAILONERROR<pos:position pos:line="42" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="47">1<pos:position pos:line="42" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">curl_easy_setopt<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><name pos:line="43" pos:column="20">easy<pos:position pos:line="43" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="26">CURLOPT_URL<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="39">libtest_arg2<pos:position pos:line="43" pos:column="51"/></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt>

  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><call><name pos:line="45" pos:column="7">curl_multi_add_handle<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><name pos:line="45" pos:column="29">multi<pos:position pos:line="45" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="36">easy<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call> <operator pos:line="45" pos:column="42">!=<pos:position pos:line="45" pos:column="44"/></operator> <name pos:line="45" pos:column="45">CURLM_OK<pos:position pos:line="45" pos:column="53"/></name></expr>)<pos:position pos:line="45" pos:column="54"/></condition><then pos:line="45" pos:column="54"> <block pos:line="45" pos:column="55">{
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">printf<pos:position pos:line="46" pos:column="11"/></name><argument_list pos:line="46" pos:column="11">(<argument><expr><literal type="string" pos:line="46" pos:column="12">"curl_multi_add_handle() 2 failed\n"<pos:position pos:line="46" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">res<pos:position pos:line="47" pos:column="8"/></name> <operator pos:line="47" pos:column="9">=<pos:position pos:line="47" pos:column="10"/></operator> <name pos:line="47" pos:column="11">TEST_ERR_MAJOR_BAD<pos:position pos:line="47" pos:column="29"/></name></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></then> <else pos:line="48" pos:column="5">else <block pos:line="48" pos:column="10">{
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><call><name pos:line="49" pos:column="9">perform<pos:position pos:line="49" pos:column="16"/></name><argument_list pos:line="49" pos:column="16">(<argument><expr><name pos:line="49" pos:column="17">multi<pos:position pos:line="49" pos:column="22"/></name></expr></argument>)<pos:position pos:line="49" pos:column="23"/></argument_list></call> <operator pos:line="49" pos:column="24">!=<pos:position pos:line="49" pos:column="26"/></operator> <name pos:line="49" pos:column="27">CURLM_OK<pos:position pos:line="49" pos:column="35"/></name></expr>)<pos:position pos:line="49" pos:column="36"/></condition><then pos:line="49" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="7">printf<pos:position pos:line="50" pos:column="13"/></name><argument_list pos:line="50" pos:column="13">(<argument><expr><literal type="string" pos:line="50" pos:column="14">"retrieve 2 failed\n"<pos:position pos:line="50" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="37"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="52" pos:column="5">curl_multi_remove_handle<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name pos:line="52" pos:column="30">multi<pos:position pos:line="52" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="37">easy<pos:position pos:line="52" pos:column="41"/></name></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="53" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">curl_easy_cleanup<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name pos:line="54" pos:column="21">easy<pos:position pos:line="54" pos:column="25"/></name></expr></argument>)<pos:position pos:line="54" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">curl_multi_cleanup<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">(<argument><expr><name pos:line="55" pos:column="22">multi<pos:position pos:line="55" pos:column="27"/></name></expr></argument>)<pos:position pos:line="55" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">curl_global_cleanup<pos:position pos:line="56" pos:column="22"/></name><argument_list pos:line="56" pos:column="22">()<pos:position pos:line="56" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="58" pos:column="3">printf<pos:position pos:line="58" pos:column="9"/></name><argument_list pos:line="58" pos:column="9">(<argument><expr><literal type="string" pos:line="58" pos:column="10">"Finished!\n"<pos:position pos:line="58" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="25"/></expr_stmt>

  <return pos:line="60" pos:column="3">return <expr><name pos:line="60" pos:column="10">res<pos:position pos:line="60" pos:column="13"/></name></expr>;<pos:position pos:line="60" pos:column="14"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

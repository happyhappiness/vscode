<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_769_curl-7.35.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">tool_setopt_httppost<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">CURL<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">curl<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">Configurable<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">config<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">name<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">CURLoption<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">tag<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                              <parameter><decl><type><name><name pos:line="3" pos:column="31">struct<pos:position pos:line="3" pos:column="37"/></name> <name pos:line="3" pos:column="38">curl_httppost<pos:position pos:line="3" pos:column="51"/></name></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">post<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="58"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">ret<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">CURLE_OK<pos:position pos:line="5" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">escaped<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name pos:line="6" pos:column="19">NULL<pos:position pos:line="6" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">bool<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">skip<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><name pos:line="7" pos:column="15">FALSE<pos:position pos:line="7" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">ret<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">curl_easy_setopt<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">curl<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="32">tag<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="37">post<pos:position pos:line="9" pos:column="41"/></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">post<pos:position pos:line="10" pos:column="11"/></name></expr>)<pos:position pos:line="10" pos:column="12"/></condition><then pos:line="10" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="5">skip<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <name pos:line="11" pos:column="12">TRUE<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt></block></then></if>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name><name pos:line="13" pos:column="6">config<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">libcurl<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">&amp;&amp;<pos:position pos:line="13" pos:column="32"/></operator> <operator pos:line="13" pos:column="25">!<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">skip<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">&amp;&amp;<pos:position pos:line="13" pos:column="41"/></operator> <operator pos:line="13" pos:column="34">!<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="35">ret<pos:position pos:line="13" pos:column="38"/></name></expr>)<pos:position pos:line="13" pos:column="39"/></condition><then pos:line="13" pos:column="39"> <block pos:line="13" pos:column="40">{
    <decl_stmt><decl><type><name><name pos:line="14" pos:column="5">struct<pos:position pos:line="14" pos:column="11"/></name> <name pos:line="14" pos:column="12">curl_httppost<pos:position pos:line="14" pos:column="25"/></name></name> <modifier pos:line="14" pos:column="26">*<pos:position pos:line="14" pos:column="27"/></modifier></type><name pos:line="14" pos:column="27">pp<pos:position pos:line="14" pos:column="29"/></name></decl>, <modifier pos:line="14" pos:column="31">*<pos:position pos:line="14" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="14" pos:column="32">p<pos:position pos:line="14" pos:column="33"/></name></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">i<pos:position pos:line="15" pos:column="10"/></name></decl>;<pos:position pos:line="15" pos:column="11"/></decl_stmt>
    <comment type="block" pos:line="16" pos:column="5">/* May use several httppost lists, if multiple POST actions */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">i<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <operator pos:line="17" pos:column="9">++<pos:position pos:line="17" pos:column="11"/></operator> <name pos:line="17" pos:column="12">easysrc_form_count<pos:position pos:line="17" pos:column="30"/></name></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">DECL1<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><literal type="string" pos:line="18" pos:column="11">"struct curl_httppost *post%d;"<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">i<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">DATA1<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><literal type="string" pos:line="19" pos:column="11">"post%d = NULL;"<pos:position pos:line="19" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="29">i<pos:position pos:line="19" pos:column="30"/></name></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">CLEAN1<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="string" pos:line="20" pos:column="12">"curl_formfree(post%d);"<pos:position pos:line="20" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">i<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">CLEAN1<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="string" pos:line="21" pos:column="12">"post%d = NULL;"<pos:position pos:line="21" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="30">i<pos:position pos:line="21" pos:column="31"/></name></expr></argument>)<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><name pos:line="22" pos:column="8">i<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">==<pos:position pos:line="22" pos:column="12"/></operator> <literal type="number" pos:line="22" pos:column="13">1<pos:position pos:line="22" pos:column="14"/></literal></expr>)<pos:position pos:line="22" pos:column="15"/></condition><then pos:line="22" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="7">DECL0<pos:position pos:line="23" pos:column="12"/></name><argument_list pos:line="23" pos:column="12">(<argument><expr><literal type="string" pos:line="23" pos:column="13">"struct curl_httppost *postend;"<pos:position pos:line="23" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">DATA0<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><literal type="string" pos:line="24" pos:column="11">"postend = NULL;"<pos:position pos:line="24" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
    <for pos:line="25" pos:column="5">for<control pos:line="25" pos:column="8">(<init><expr><name pos:line="25" pos:column="9">p<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">post<pos:position pos:line="25" pos:column="15"/></name></expr>;<pos:position pos:line="25" pos:column="16"/></init> <condition><expr><name pos:line="25" pos:column="17">p<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></condition> <incr><expr><name pos:line="25" pos:column="20">p<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator><name><name pos:line="25" pos:column="22">p<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">next<pos:position pos:line="25" pos:column="29"/></name></name></expr></incr>)<pos:position pos:line="25" pos:column="30"/></control> <block pos:line="25" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">DATA1<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><literal type="string" pos:line="26" pos:column="13">"curl_formadd(&amp;post%d, &amp;postend,"<pos:position pos:line="26" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="48">i<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">DATA1<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><literal type="string" pos:line="27" pos:column="13">"             CURLFORM_COPYNAME, \"%s\","<pos:position pos:line="27" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="56">p<pos:position pos:line="27" pos:column="57"/></name><operator pos:line="27" pos:column="57">-&gt;<pos:position pos:line="27" pos:column="62"/></operator><name pos:line="27" pos:column="59">name<pos:position pos:line="27" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="65"/></expr_stmt>
      <for pos:line="28" pos:column="7">for<control pos:line="28" pos:column="10">(<init><expr><name pos:line="28" pos:column="11">pp<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">p<pos:position pos:line="28" pos:column="15"/></name></expr>;<pos:position pos:line="28" pos:column="16"/></init> <condition><expr><name pos:line="28" pos:column="17">pp<pos:position pos:line="28" pos:column="19"/></name></expr>;<pos:position pos:line="28" pos:column="20"/></condition> <incr><expr><name pos:line="28" pos:column="21">pp<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator><name><name pos:line="28" pos:column="24">pp<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">more<pos:position pos:line="28" pos:column="32"/></name></name></expr></incr>)<pos:position pos:line="28" pos:column="33"/></control> <block pos:line="28" pos:column="34">{
        <comment type="block" pos:line="29" pos:column="9">/* May be several files uploaded for one name;
         * these are linked through the 'more' pointer */</comment>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">Curl_safefree<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">escaped<pos:position pos:line="31" pos:column="30"/></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">escaped<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <call><name pos:line="32" pos:column="19">c_escape<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name><name pos:line="32" pos:column="28">pp<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">-&gt;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="32">contents<pos:position pos:line="32" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>
        <if pos:line="33" pos:column="9">if<condition pos:line="33" pos:column="11">(<expr><operator pos:line="33" pos:column="12">!<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">escaped<pos:position pos:line="33" pos:column="20"/></name></expr>)<pos:position pos:line="33" pos:column="21"/></condition><then pos:line="33" pos:column="21"> <block pos:line="33" pos:column="22">{
          <expr_stmt><expr><name pos:line="34" pos:column="11">ret<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <name pos:line="34" pos:column="17">CURLE_OUT_OF_MEMORY<pos:position pos:line="34" pos:column="36"/></name></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt>
          <goto pos:line="35" pos:column="11">goto <name pos:line="35" pos:column="16">nomem<pos:position pos:line="35" pos:column="21"/></name>;<pos:position pos:line="35" pos:column="22"/></goto>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
        <if pos:line="37" pos:column="9">if<condition pos:line="37" pos:column="11">(<expr><name><name pos:line="37" pos:column="12">pp<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">flags<pos:position pos:line="37" pos:column="21"/></name></name> <operator pos:line="37" pos:column="22">&amp;<pos:position pos:line="37" pos:column="27"/></operator> <name pos:line="37" pos:column="24">HTTPPOST_FILENAME<pos:position pos:line="37" pos:column="41"/></name></expr>)<pos:position pos:line="37" pos:column="42"/></condition><then pos:line="37" pos:column="42"> <block pos:line="37" pos:column="43">{
          <comment type="block" pos:line="38" pos:column="11">/* file upload as for -F @filename */</comment>
          <expr_stmt><expr><call><name pos:line="39" pos:column="11">DATA1<pos:position pos:line="39" pos:column="16"/></name><argument_list pos:line="39" pos:column="16">(<argument><expr><literal type="string" pos:line="39" pos:column="17">"             CURLFORM_FILE, \"%s\","<pos:position pos:line="39" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="56">escaped<pos:position pos:line="39" pos:column="63"/></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then>
        <elseif pos:line="41" pos:column="9">else <if pos:line="41" pos:column="14">if<condition pos:line="41" pos:column="16">(<expr><name><name pos:line="41" pos:column="17">pp<pos:position pos:line="41" pos:column="19"/></name><operator pos:line="41" pos:column="19">-&gt;<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="21">flags<pos:position pos:line="41" pos:column="26"/></name></name> <operator pos:line="41" pos:column="27">&amp;<pos:position pos:line="41" pos:column="32"/></operator> <name pos:line="41" pos:column="29">HTTPPOST_READFILE<pos:position pos:line="41" pos:column="46"/></name></expr>)<pos:position pos:line="41" pos:column="47"/></condition><then pos:line="41" pos:column="47"> <block pos:line="41" pos:column="48">{
          <comment type="block" pos:line="42" pos:column="11">/* content from file as for -F &lt;filename */</comment>
          <expr_stmt><expr><call><name pos:line="43" pos:column="11">DATA1<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><literal type="string" pos:line="43" pos:column="17">"             CURLFORM_FILECONTENT, \"%s\","<pos:position pos:line="43" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="63">escaped<pos:position pos:line="43" pos:column="70"/></name></expr></argument>)<pos:position pos:line="43" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if></elseif>
        <else pos:line="45" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="11">DATA1<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><literal type="string" pos:line="46" pos:column="17">"             CURLFORM_COPYCONTENTS, \"%s\","<pos:position pos:line="46" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="64">escaped<pos:position pos:line="46" pos:column="71"/></name></expr></argument>)<pos:position pos:line="46" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="73"/></expr_stmt></block></else></if>
        <if pos:line="47" pos:column="9">if<condition pos:line="47" pos:column="11">(<expr><name><name pos:line="47" pos:column="12">pp<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">showfilename<pos:position pos:line="47" pos:column="28"/></name></name></expr>)<pos:position pos:line="47" pos:column="29"/></condition><then pos:line="47" pos:column="29"> <block pos:line="47" pos:column="30">{
          <expr_stmt><expr><call><name pos:line="48" pos:column="11">Curl_safefree<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">escaped<pos:position pos:line="48" pos:column="32"/></name></expr></argument>)<pos:position pos:line="48" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt>
          <expr_stmt><expr><name pos:line="49" pos:column="11">escaped<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <call><name pos:line="49" pos:column="21">c_escape<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><name><name pos:line="49" pos:column="30">pp<pos:position pos:line="49" pos:column="32"/></name><operator pos:line="49" pos:column="32">-&gt;<pos:position pos:line="49" pos:column="37"/></operator><name pos:line="49" pos:column="34">showfilename<pos:position pos:line="49" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="48"/></expr_stmt>
          <if pos:line="50" pos:column="11">if<condition pos:line="50" pos:column="13">(<expr><operator pos:line="50" pos:column="14">!<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="15">escaped<pos:position pos:line="50" pos:column="22"/></name></expr>)<pos:position pos:line="50" pos:column="23"/></condition><then pos:line="50" pos:column="23"> <block pos:line="50" pos:column="24">{
            <expr_stmt><expr><name pos:line="51" pos:column="13">ret<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">=<pos:position pos:line="51" pos:column="18"/></operator> <name pos:line="51" pos:column="19">CURLE_OUT_OF_MEMORY<pos:position pos:line="51" pos:column="38"/></name></expr>;<pos:position pos:line="51" pos:column="39"/></expr_stmt>
            <goto pos:line="52" pos:column="13">goto <name pos:line="52" pos:column="18">nomem<pos:position pos:line="52" pos:column="23"/></name>;<pos:position pos:line="52" pos:column="24"/></goto>
          }<pos:position pos:line="53" pos:column="12"/></block></then></if>
          <expr_stmt><expr><call><name pos:line="54" pos:column="11">DATA1<pos:position pos:line="54" pos:column="16"/></name><argument_list pos:line="54" pos:column="16">(<argument><expr><literal type="string" pos:line="54" pos:column="17">"             CURLFORM_FILENAME, \"%s\","<pos:position pos:line="54" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="60">escaped<pos:position pos:line="54" pos:column="67"/></name></expr></argument>)<pos:position pos:line="54" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>
        <if pos:line="56" pos:column="9">if<condition pos:line="56" pos:column="11">(<expr><name><name pos:line="56" pos:column="12">pp<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">contenttype<pos:position pos:line="56" pos:column="27"/></name></name></expr>)<pos:position pos:line="56" pos:column="28"/></condition><then pos:line="56" pos:column="28"> <block pos:line="56" pos:column="29">{
          <expr_stmt><expr><call><name pos:line="57" pos:column="11">Curl_safefree<pos:position pos:line="57" pos:column="24"/></name><argument_list pos:line="57" pos:column="24">(<argument><expr><name pos:line="57" pos:column="25">escaped<pos:position pos:line="57" pos:column="32"/></name></expr></argument>)<pos:position pos:line="57" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="34"/></expr_stmt>
          <expr_stmt><expr><name pos:line="58" pos:column="11">escaped<pos:position pos:line="58" pos:column="18"/></name> <operator pos:line="58" pos:column="19">=<pos:position pos:line="58" pos:column="20"/></operator> <call><name pos:line="58" pos:column="21">c_escape<pos:position pos:line="58" pos:column="29"/></name><argument_list pos:line="58" pos:column="29">(<argument><expr><name><name pos:line="58" pos:column="30">pp<pos:position pos:line="58" pos:column="32"/></name><operator pos:line="58" pos:column="32">-&gt;<pos:position pos:line="58" pos:column="37"/></operator><name pos:line="58" pos:column="34">contenttype<pos:position pos:line="58" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="47"/></expr_stmt>
          <if pos:line="59" pos:column="11">if<condition pos:line="59" pos:column="13">(<expr><operator pos:line="59" pos:column="14">!<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">escaped<pos:position pos:line="59" pos:column="22"/></name></expr>)<pos:position pos:line="59" pos:column="23"/></condition><then pos:line="59" pos:column="23"> <block pos:line="59" pos:column="24">{
            <expr_stmt><expr><name pos:line="60" pos:column="13">ret<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">=<pos:position pos:line="60" pos:column="18"/></operator> <name pos:line="60" pos:column="19">CURLE_OUT_OF_MEMORY<pos:position pos:line="60" pos:column="38"/></name></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt>
            <goto pos:line="61" pos:column="13">goto <name pos:line="61" pos:column="18">nomem<pos:position pos:line="61" pos:column="23"/></name>;<pos:position pos:line="61" pos:column="24"/></goto>
          }<pos:position pos:line="62" pos:column="12"/></block></then></if>
          <expr_stmt><expr><call><name pos:line="63" pos:column="11">DATA1<pos:position pos:line="63" pos:column="16"/></name><argument_list pos:line="63" pos:column="16">(<argument><expr><literal type="string" pos:line="63" pos:column="17">"             CURLFORM_CONTENTTYPE, \"%s\","<pos:position pos:line="63" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="63">escaped<pos:position pos:line="63" pos:column="70"/></name></expr></argument>)<pos:position pos:line="63" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>
      }<pos:position pos:line="65" pos:column="8"/></block></for>
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">DATA0<pos:position pos:line="66" pos:column="12"/></name><argument_list pos:line="66" pos:column="12">(<argument><expr><literal type="string" pos:line="66" pos:column="13">"             CURLFORM_END);"<pos:position pos:line="66" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">CODE2<pos:position pos:line="68" pos:column="10"/></name><argument_list pos:line="68" pos:column="10">(<argument><expr><literal type="string" pos:line="68" pos:column="11">"curl_easy_setopt(hnd, %s, post%d);"<pos:position pos:line="68" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="49">name<pos:position pos:line="68" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="55">i<pos:position pos:line="68" pos:column="56"/></name></expr></argument>)<pos:position pos:line="68" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="58"/></expr_stmt>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>

 <label><name pos:line="71" pos:column="2">nomem<pos:position pos:line="71" pos:column="7"/></name>:<pos:position pos:line="71" pos:column="8"/></label>
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">Curl_safefree<pos:position pos:line="72" pos:column="16"/></name><argument_list pos:line="72" pos:column="16">(<argument><expr><name pos:line="72" pos:column="17">escaped<pos:position pos:line="72" pos:column="24"/></name></expr></argument>)<pos:position pos:line="72" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="26"/></expr_stmt>
  <return pos:line="73" pos:column="3">return <expr><name pos:line="73" pos:column="10">ret<pos:position pos:line="73" pos:column="13"/></name></expr>;<pos:position pos:line="73" pos:column="14"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

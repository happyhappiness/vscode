<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2727_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">gtls_recv<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">connectdata<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">conn<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="52">/* connection data */</comment>
                         <parameter><decl><type><name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">num<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>,                  <comment type="block" pos:line="2" pos:column="52">/* socketindex */</comment>
                         <parameter><decl><type><name pos:line="3" pos:column="26">char<pos:position pos:line="3" pos:column="30"/></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">buf<pos:position pos:line="3" pos:column="35"/></name></decl></parameter>,                <comment type="block" pos:line="3" pos:column="52">/* store read data here */</comment>
                         <parameter><decl><type><name pos:line="4" pos:column="26">size_t<pos:position pos:line="4" pos:column="32"/></name></type> <name pos:line="4" pos:column="33">buffersize<pos:position pos:line="4" pos:column="43"/></name></decl></parameter>,        <comment type="block" pos:line="4" pos:column="52">/* max amount to read */</comment>
                         <parameter><decl><type><name pos:line="5" pos:column="26">CURLcode<pos:position pos:line="5" pos:column="34"/></name> <modifier pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></modifier></type><name pos:line="5" pos:column="36">curlcode<pos:position pos:line="5" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="45"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">ssl_connect_data<pos:position pos:line="7" pos:column="26"/></name></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">connssl<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><operator pos:line="7" pos:column="38">&amp;<pos:position pos:line="7" pos:column="43"/></operator><name><name pos:line="7" pos:column="39">conn<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">ssl<pos:position pos:line="7" pos:column="48"/></name><index pos:line="7" pos:column="48">[<expr><name pos:line="7" pos:column="49">num<pos:position pos:line="7" pos:column="52"/></name></expr>]<pos:position pos:line="7" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="54"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">ssize_t<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">ret<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">ret<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">gnutls_record_recv<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name><name pos:line="10" pos:column="28">BACKEND<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-&gt;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="37">session<pos:position pos:line="10" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="46">buf<pos:position pos:line="10" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="51">buffersize<pos:position pos:line="10" pos:column="61"/></name></expr></argument>)<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="63"/></expr_stmt>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">(<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">ret<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">==<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">GNUTLS_E_AGAIN<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">)<pos:position pos:line="11" pos:column="29"/></operator> <operator pos:line="11" pos:column="30">||<pos:position pos:line="11" pos:column="32"/></operator> <operator pos:line="11" pos:column="33">(<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="34">ret<pos:position pos:line="11" pos:column="37"/></name> <operator pos:line="11" pos:column="38">==<pos:position pos:line="11" pos:column="40"/></operator> <name pos:line="11" pos:column="41">GNUTLS_E_INTERRUPTED<pos:position pos:line="11" pos:column="61"/></name><operator pos:line="11" pos:column="61">)<pos:position pos:line="11" pos:column="62"/></operator></expr>)<pos:position pos:line="11" pos:column="63"/></condition><then pos:line="11" pos:column="63"> <block pos:line="11" pos:column="64">{
    <expr_stmt><expr><operator pos:line="12" pos:column="5">*<pos:position pos:line="12" pos:column="6"/></operator><name pos:line="12" pos:column="6">curlcode<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">CURLE_AGAIN<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name pos:line="16" pos:column="6">ret<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">==<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">GNUTLS_E_REHANDSHAKE<pos:position pos:line="16" pos:column="33"/></name></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34"> <block pos:line="16" pos:column="35">{
    <comment type="block" pos:line="17" pos:column="5">/* BLOCKING call, this is bad but a work-around for now. Fixing this "the
       proper way" takes a whole lot of work. */</comment>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">CURLcode<pos:position pos:line="19" pos:column="13"/></name></type> <name pos:line="19" pos:column="14">result<pos:position pos:line="19" pos:column="20"/></name> <init pos:line="19" pos:column="21">= <expr><call><name pos:line="19" pos:column="23">handshake<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">conn<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">num<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="44">FALSE<pos:position pos:line="19" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="51">FALSE<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="58"/></decl_stmt>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><name pos:line="20" pos:column="8">result<pos:position pos:line="20" pos:column="14"/></name></expr>)<pos:position pos:line="20" pos:column="15"/></condition><then pos:line="20" pos:column="15">
      <comment type="block" pos:line="21" pos:column="7">/* handshake() writes error message on its own */</comment>
      <block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="7">*<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">curlcode<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">result<pos:position pos:line="22" pos:column="25"/></name></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt></block></then>
    <else pos:line="23" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="24" pos:column="7">*<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">curlcode<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">CURLE_AGAIN<pos:position pos:line="24" pos:column="30"/></name></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt></block></else></if> <comment type="block" pos:line="24" pos:column="32">/* then return as if this was a wouldblock */</comment>
    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">-<pos:position pos:line="25" pos:column="13"/></operator><literal type="number" pos:line="25" pos:column="13">1<pos:position pos:line="25" pos:column="14"/></literal></expr>;<pos:position pos:line="25" pos:column="15"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><name pos:line="28" pos:column="6">ret<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">&lt;<pos:position pos:line="28" pos:column="14"/></operator> <literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr>)<pos:position pos:line="28" pos:column="14"/></condition><then pos:line="28" pos:column="14"> <block pos:line="28" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">failf<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><name><name pos:line="29" pos:column="11">conn<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">-&gt;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="17">data<pos:position pos:line="29" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="23">"GnuTLS recv error (%d): %s"<pos:position pos:line="29" pos:column="51"/></literal></expr></argument>,

          <argument><expr><operator pos:line="31" pos:column="11">(<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">int<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">)<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">ret<pos:position pos:line="31" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="21">gnutls_strerror<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><operator pos:line="31" pos:column="37">(<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">int<pos:position pos:line="31" pos:column="41"/></name><operator pos:line="31" pos:column="41">)<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="42">ret<pos:position pos:line="31" pos:column="45"/></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="32" pos:column="5">*<pos:position pos:line="32" pos:column="6"/></operator><name pos:line="32" pos:column="6">curlcode<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <name pos:line="32" pos:column="17">CURLE_RECV_ERROR<pos:position pos:line="32" pos:column="33"/></name></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><operator pos:line="33" pos:column="12">-<pos:position pos:line="33" pos:column="13"/></operator><literal type="number" pos:line="33" pos:column="13">1<pos:position pos:line="33" pos:column="14"/></literal></expr>;<pos:position pos:line="33" pos:column="15"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <return pos:line="36" pos:column="3">return <expr><name pos:line="36" pos:column="10">ret<pos:position pos:line="36" pos:column="13"/></name></expr>;<pos:position pos:line="36" pos:column="14"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

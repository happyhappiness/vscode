<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2249_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_output_digest<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">connectdata<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">conn<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">bool<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">proxy<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>,
                            <parameter><decl><type><specifier pos:line="3" pos:column="29">const<pos:position pos:line="3" pos:column="34"/></specifier> <name pos:line="3" pos:column="35">unsigned<pos:position pos:line="3" pos:column="43"/></name> <name pos:line="3" pos:column="44">char<pos:position pos:line="3" pos:column="48"/></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type><name pos:line="3" pos:column="50">request<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>,
                            <parameter><decl><type><specifier pos:line="4" pos:column="29">const<pos:position pos:line="4" pos:column="34"/></specifier> <name pos:line="4" pos:column="35">unsigned<pos:position pos:line="4" pos:column="43"/></name> <name pos:line="4" pos:column="44">char<pos:position pos:line="4" pos:column="48"/></name> <modifier pos:line="4" pos:column="49">*<pos:position pos:line="4" pos:column="50"/></modifier></type><name pos:line="4" pos:column="50">uripath<pos:position pos:line="4" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="58"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">Curl_easy<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">data<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name><name pos:line="7" pos:column="28">conn<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">data<pos:position pos:line="7" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">unsigned<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">char<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">path<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><name pos:line="8" pos:column="25">NULL<pos:position pos:line="8" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">tmp<pos:position pos:line="9" pos:column="12"/></name> <init pos:line="9" pos:column="13">= <expr><name pos:line="9" pos:column="15">NULL<pos:position pos:line="9" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">response<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">len<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">bool<pos:position pos:line="12" pos:column="7"/></name></type> <name pos:line="12" pos:column="8">have_chlg<pos:position pos:line="12" pos:column="17"/></name></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* Point to the address of the pointer that holds the string to send to the
     server, which is for a plain host or for a HTTP proxy */</comment>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name> <modifier pos:line="16" pos:column="8">*<pos:position pos:line="16" pos:column="9"/></modifier><modifier pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></modifier></type><name pos:line="16" pos:column="10">allocuserpwd<pos:position pos:line="16" pos:column="22"/></name></decl>;<pos:position pos:line="16" pos:column="23"/></decl_stmt>

  <comment type="block" pos:line="18" pos:column="3">/* Point to the name and password for this */</comment>
  <decl_stmt><decl><type><specifier pos:line="19" pos:column="3">const<pos:position pos:line="19" pos:column="8"/></specifier> <name pos:line="19" pos:column="9">char<pos:position pos:line="19" pos:column="13"/></name> <modifier pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></modifier></type><name pos:line="19" pos:column="15">userp<pos:position pos:line="19" pos:column="20"/></name></decl>;<pos:position pos:line="19" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="20" pos:column="3">const<pos:position pos:line="20" pos:column="8"/></specifier> <name pos:line="20" pos:column="9">char<pos:position pos:line="20" pos:column="13"/></name> <modifier pos:line="20" pos:column="14">*<pos:position pos:line="20" pos:column="15"/></modifier></type><name pos:line="20" pos:column="15">passwdp<pos:position pos:line="20" pos:column="22"/></name></decl>;<pos:position pos:line="20" pos:column="23"/></decl_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* Point to the correct struct with this */</comment>
  <decl_stmt><decl><type><name><name pos:line="23" pos:column="3">struct<pos:position pos:line="23" pos:column="9"/></name> <name pos:line="23" pos:column="10">digestdata<pos:position pos:line="23" pos:column="20"/></name></name> <modifier pos:line="23" pos:column="21">*<pos:position pos:line="23" pos:column="22"/></modifier></type><name pos:line="23" pos:column="22">digest<pos:position pos:line="23" pos:column="28"/></name></decl>;<pos:position pos:line="23" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="24" pos:column="3">struct<pos:position pos:line="24" pos:column="9"/></name> <name pos:line="24" pos:column="10">auth<pos:position pos:line="24" pos:column="14"/></name></name> <modifier pos:line="24" pos:column="15">*<pos:position pos:line="24" pos:column="16"/></modifier></type><name pos:line="24" pos:column="16">authp<pos:position pos:line="24" pos:column="21"/></name></decl>;<pos:position pos:line="24" pos:column="22"/></decl_stmt>

  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><name pos:line="26" pos:column="6">proxy<pos:position pos:line="26" pos:column="11"/></name></expr>)<pos:position pos:line="26" pos:column="12"/></condition><then pos:line="26" pos:column="12"> <block pos:line="26" pos:column="13">{
    <expr_stmt><expr><name pos:line="27" pos:column="5">digest<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <operator pos:line="27" pos:column="14">&amp;<pos:position pos:line="27" pos:column="19"/></operator><name><name pos:line="27" pos:column="15">data<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">-&gt;<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="21">state<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">.<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="27">proxydigest<pos:position pos:line="27" pos:column="38"/></name></name></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">allocuserpwd<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <operator pos:line="28" pos:column="20">&amp;<pos:position pos:line="28" pos:column="25"/></operator><name><name pos:line="28" pos:column="21">conn<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">-&gt;<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="27">allocptr<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">.<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="36">proxyuserpwd<pos:position pos:line="28" pos:column="48"/></name></name></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">userp<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <name><name pos:line="29" pos:column="13">conn<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">http_proxy<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">.<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">user<pos:position pos:line="29" pos:column="34"/></name></name></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">passwdp<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <name><name pos:line="30" pos:column="15">conn<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">http_proxy<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">.<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">passwd<pos:position pos:line="30" pos:column="38"/></name></name></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">authp<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <operator pos:line="31" pos:column="13">&amp;<pos:position pos:line="31" pos:column="18"/></operator><name><name pos:line="31" pos:column="14">data<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">state<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">.<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="26">authproxy<pos:position pos:line="31" pos:column="35"/></name></name></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></then>
  <else pos:line="33" pos:column="3">else <block pos:line="33" pos:column="8">{
    <expr_stmt><expr><name pos:line="34" pos:column="5">digest<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <operator pos:line="34" pos:column="14">&amp;<pos:position pos:line="34" pos:column="19"/></operator><name><name pos:line="34" pos:column="15">data<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">-&gt;<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="21">state<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">.<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="27">digest<pos:position pos:line="34" pos:column="33"/></name></name></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">allocuserpwd<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <operator pos:line="35" pos:column="20">&amp;<pos:position pos:line="35" pos:column="25"/></operator><name><name pos:line="35" pos:column="21">conn<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">-&gt;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="27">allocptr<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">.<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="36">userpwd<pos:position pos:line="35" pos:column="43"/></name></name></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">userp<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <name><name pos:line="36" pos:column="13">conn<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">user<pos:position pos:line="36" pos:column="23"/></name></name></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">passwdp<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <name><name pos:line="37" pos:column="15">conn<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">-&gt;<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="21">passwd<pos:position pos:line="37" pos:column="27"/></name></name></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">authp<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <operator pos:line="38" pos:column="13">&amp;<pos:position pos:line="38" pos:column="18"/></operator><name><name pos:line="38" pos:column="14">data<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">-&gt;<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="20">state<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">.<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">authhost<pos:position pos:line="38" pos:column="34"/></name></name></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="41" pos:column="3">Curl_safefree<pos:position pos:line="41" pos:column="16"/></name><argument_list pos:line="41" pos:column="16">(<argument><expr><operator pos:line="41" pos:column="17">*<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">allocuserpwd<pos:position pos:line="41" pos:column="30"/></name></expr></argument>)<pos:position pos:line="41" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>

  <comment type="block" pos:line="43" pos:column="3">/* not set means empty */</comment>
  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><operator pos:line="44" pos:column="6">!<pos:position pos:line="44" pos:column="7"/></operator><name pos:line="44" pos:column="7">userp<pos:position pos:line="44" pos:column="12"/></name></expr>)<pos:position pos:line="44" pos:column="13"/></condition><then pos:line="44" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="5">userp<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">=<pos:position pos:line="45" pos:column="12"/></operator> <literal type="string" pos:line="45" pos:column="13">""<pos:position pos:line="45" pos:column="15"/></literal></expr>;<pos:position pos:line="45" pos:column="16"/></expr_stmt></block></then></if>

  <if pos:line="47" pos:column="3">if<condition pos:line="47" pos:column="5">(<expr><operator pos:line="47" pos:column="6">!<pos:position pos:line="47" pos:column="7"/></operator><name pos:line="47" pos:column="7">passwdp<pos:position pos:line="47" pos:column="14"/></name></expr>)<pos:position pos:line="47" pos:column="15"/></condition><then pos:line="47" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="5">passwdp<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <literal type="string" pos:line="48" pos:column="15">""<pos:position pos:line="48" pos:column="17"/></literal></expr>;<pos:position pos:line="48" pos:column="18"/></expr_stmt></block></then></if>

<cpp:if pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">if<pos:position pos:line="50" pos:column="4"/></cpp:directive> <expr><call><name pos:line="50" pos:column="5">defined<pos:position pos:line="50" pos:column="12"/></name><argument_list pos:line="50" pos:column="12">(<argument><expr><name pos:line="50" pos:column="13">USE_WINDOWS_SSPI<pos:position pos:line="50" pos:column="29"/></name></expr></argument>)<pos:position pos:line="50" pos:column="30"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><name pos:line="51" pos:column="3">have_chlg<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">=<pos:position pos:line="51" pos:column="14"/></operator> <ternary><condition><expr><name><name pos:line="51" pos:column="15">digest<pos:position pos:line="51" pos:column="21"/></name><operator pos:line="51" pos:column="21">-&gt;<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="23">input_token<pos:position pos:line="51" pos:column="34"/></name></name></expr> ?<pos:position pos:line="51" pos:column="36"/></condition><then pos:line="51" pos:column="36"> <expr><name pos:line="51" pos:column="37">TRUE<pos:position pos:line="51" pos:column="41"/></name></expr> <pos:position pos:line="51" pos:column="42"/></then><else pos:line="51" pos:column="42">: <expr><name pos:line="51" pos:column="44">FALSE<pos:position pos:line="51" pos:column="49"/></name></expr></else></ternary></expr>;<pos:position pos:line="51" pos:column="50"/></expr_stmt>
<cpp:else pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">else<pos:position pos:line="52" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="53" pos:column="3">have_chlg<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <ternary><condition><expr><name><name pos:line="53" pos:column="15">digest<pos:position pos:line="53" pos:column="21"/></name><operator pos:line="53" pos:column="21">-&gt;<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="23">nonce<pos:position pos:line="53" pos:column="28"/></name></name></expr> ?<pos:position pos:line="53" pos:column="30"/></condition><then pos:line="53" pos:column="30"> <expr><name pos:line="53" pos:column="31">TRUE<pos:position pos:line="53" pos:column="35"/></name></expr> <pos:position pos:line="53" pos:column="36"/></then><else pos:line="53" pos:column="36">: <expr><name pos:line="53" pos:column="38">FALSE<pos:position pos:line="53" pos:column="43"/></name></expr></else></ternary></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="56" pos:column="3">if<condition pos:line="56" pos:column="5">(<expr><operator pos:line="56" pos:column="6">!<pos:position pos:line="56" pos:column="7"/></operator><name pos:line="56" pos:column="7">have_chlg<pos:position pos:line="56" pos:column="16"/></name></expr>)<pos:position pos:line="56" pos:column="17"/></condition><then pos:line="56" pos:column="17"> <block pos:line="56" pos:column="18">{
    <expr_stmt><expr><name><name pos:line="57" pos:column="5">authp<pos:position pos:line="57" pos:column="10"/></name><operator pos:line="57" pos:column="10">-&gt;<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="12">done<pos:position pos:line="57" pos:column="16"/></name></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <name pos:line="57" pos:column="19">FALSE<pos:position pos:line="57" pos:column="24"/></name></expr>;<pos:position pos:line="57" pos:column="25"/></expr_stmt>
    <return pos:line="58" pos:column="5">return <expr><name pos:line="58" pos:column="12">CURLE_OK<pos:position pos:line="58" pos:column="20"/></name></expr>;<pos:position pos:line="58" pos:column="21"/></return>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="61" pos:column="3">/* So IE browsers &lt; v7 cut off the URI part at the query part when they
     evaluate the MD5 and some (IIS?) servers work with them so we may need to
     do the Digest IE-style. Note that the different ways cause different MD5
     sums to get sent.

     Apache servers can be set to do the Digest IE-style automatically using
     the BrowserMatch feature:
     https://httpd.apache.org/docs/2.2/mod/mod_auth_digest.html#msie

     Further details on Digest implementation differences:
     http://www.fngtps.com/2006/09/http-authentication
  */</comment>

  <if pos:line="74" pos:column="3">if<condition pos:line="74" pos:column="5">(<expr><name><name pos:line="74" pos:column="6">authp<pos:position pos:line="74" pos:column="11"/></name><operator pos:line="74" pos:column="11">-&gt;<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="13">iestyle<pos:position pos:line="74" pos:column="20"/></name></name></expr>)<pos:position pos:line="74" pos:column="21"/></condition><then pos:line="74" pos:column="21"> <block pos:line="74" pos:column="22">{
    <expr_stmt><expr><name pos:line="75" pos:column="5">tmp<pos:position pos:line="75" pos:column="8"/></name> <operator pos:line="75" pos:column="9">=<pos:position pos:line="75" pos:column="10"/></operator> <call><name pos:line="75" pos:column="11">strchr<pos:position pos:line="75" pos:column="17"/></name><argument_list pos:line="75" pos:column="17">(<argument><expr><operator pos:line="75" pos:column="18">(<pos:position pos:line="75" pos:column="19"/></operator><name pos:line="75" pos:column="19">char<pos:position pos:line="75" pos:column="23"/></name> <operator pos:line="75" pos:column="24">*<pos:position pos:line="75" pos:column="25"/></operator><operator pos:line="75" pos:column="25">)<pos:position pos:line="75" pos:column="26"/></operator><name pos:line="75" pos:column="26">uripath<pos:position pos:line="75" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="75" pos:column="35">'?'<pos:position pos:line="75" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="40"/></expr_stmt>
    <if pos:line="76" pos:column="5">if<condition pos:line="76" pos:column="7">(<expr><name pos:line="76" pos:column="8">tmp<pos:position pos:line="76" pos:column="11"/></name></expr>)<pos:position pos:line="76" pos:column="12"/></condition><then pos:line="76" pos:column="12"> <block pos:line="76" pos:column="13">{
      <decl_stmt><decl><type><name pos:line="77" pos:column="7">size_t<pos:position pos:line="77" pos:column="13"/></name></type> <name pos:line="77" pos:column="14">urilen<pos:position pos:line="77" pos:column="20"/></name> <init pos:line="77" pos:column="21">= <expr><name pos:line="77" pos:column="23">tmp<pos:position pos:line="77" pos:column="26"/></name> <operator pos:line="77" pos:column="27">-<pos:position pos:line="77" pos:column="28"/></operator> <operator pos:line="77" pos:column="29">(<pos:position pos:line="77" pos:column="30"/></operator><name pos:line="77" pos:column="30">char<pos:position pos:line="77" pos:column="34"/></name> <operator pos:line="77" pos:column="35">*<pos:position pos:line="77" pos:column="36"/></operator><operator pos:line="77" pos:column="36">)<pos:position pos:line="77" pos:column="37"/></operator><name pos:line="77" pos:column="37">uripath<pos:position pos:line="77" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="77" pos:column="45"/></decl_stmt>
      <expr_stmt><expr><name pos:line="78" pos:column="7">path<pos:position pos:line="78" pos:column="11"/></name> <operator pos:line="78" pos:column="12">=<pos:position pos:line="78" pos:column="13"/></operator> <operator pos:line="78" pos:column="14">(<pos:position pos:line="78" pos:column="15"/></operator><name pos:line="78" pos:column="15">unsigned<pos:position pos:line="78" pos:column="23"/></name> <name pos:line="78" pos:column="24">char<pos:position pos:line="78" pos:column="28"/></name> <operator pos:line="78" pos:column="29">*<pos:position pos:line="78" pos:column="30"/></operator><operator pos:line="78" pos:column="30">)<pos:position pos:line="78" pos:column="31"/></operator> <call><name pos:line="78" pos:column="32">aprintf<pos:position pos:line="78" pos:column="39"/></name><argument_list pos:line="78" pos:column="39">(<argument><expr><literal type="string" pos:line="78" pos:column="40">"%.*s"<pos:position pos:line="78" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="48">urilen<pos:position pos:line="78" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="56">uripath<pos:position pos:line="78" pos:column="63"/></name></expr></argument>)<pos:position pos:line="78" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>
  <if pos:line="81" pos:column="3">if<condition pos:line="81" pos:column="5">(<expr><operator pos:line="81" pos:column="6">!<pos:position pos:line="81" pos:column="7"/></operator><name pos:line="81" pos:column="7">tmp<pos:position pos:line="81" pos:column="10"/></name></expr>)<pos:position pos:line="81" pos:column="11"/></condition><then pos:line="81" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="5">path<pos:position pos:line="82" pos:column="9"/></name> <operator pos:line="82" pos:column="10">=<pos:position pos:line="82" pos:column="11"/></operator> <operator pos:line="82" pos:column="12">(<pos:position pos:line="82" pos:column="13"/></operator><name pos:line="82" pos:column="13">unsigned<pos:position pos:line="82" pos:column="21"/></name> <name pos:line="82" pos:column="22">char<pos:position pos:line="82" pos:column="26"/></name> <operator pos:line="82" pos:column="27">*<pos:position pos:line="82" pos:column="28"/></operator><operator pos:line="82" pos:column="28">)<pos:position pos:line="82" pos:column="29"/></operator> <call><name pos:line="82" pos:column="30">strdup<pos:position pos:line="82" pos:column="36"/></name><argument_list pos:line="82" pos:column="36">(<argument><expr><operator pos:line="82" pos:column="37">(<pos:position pos:line="82" pos:column="38"/></operator><name pos:line="82" pos:column="38">char<pos:position pos:line="82" pos:column="42"/></name> <operator pos:line="82" pos:column="43">*<pos:position pos:line="82" pos:column="44"/></operator><operator pos:line="82" pos:column="44">)<pos:position pos:line="82" pos:column="45"/></operator> <name pos:line="82" pos:column="46">uripath<pos:position pos:line="82" pos:column="53"/></name></expr></argument>)<pos:position pos:line="82" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="55"/></expr_stmt></block></then></if>

  <if pos:line="84" pos:column="3">if<condition pos:line="84" pos:column="5">(<expr><operator pos:line="84" pos:column="6">!<pos:position pos:line="84" pos:column="7"/></operator><name pos:line="84" pos:column="7">path<pos:position pos:line="84" pos:column="11"/></name></expr>)<pos:position pos:line="84" pos:column="12"/></condition><then pos:line="84" pos:column="12">
    <block type="pseudo"><return pos:line="85" pos:column="5">return <expr><name pos:line="85" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="85" pos:column="31"/></name></expr>;<pos:position pos:line="85" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="87" pos:column="3">result<pos:position pos:line="87" pos:column="9"/></name> <operator pos:line="87" pos:column="10">=<pos:position pos:line="87" pos:column="11"/></operator> <call><name pos:line="87" pos:column="12">Curl_auth_create_digest_http_message<pos:position pos:line="87" pos:column="48"/></name><argument_list pos:line="87" pos:column="48">(<argument><expr><name pos:line="87" pos:column="49">data<pos:position pos:line="87" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="55">userp<pos:position pos:line="87" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="62">passwdp<pos:position pos:line="87" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="71">request<pos:position pos:line="87" pos:column="78"/></name></expr></argument>,
                                                <argument><expr><name pos:line="88" pos:column="49">path<pos:position pos:line="88" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="55">digest<pos:position pos:line="88" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="63">&amp;<pos:position pos:line="88" pos:column="68"/></operator><name pos:line="88" pos:column="64">response<pos:position pos:line="88" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="74">&amp;<pos:position pos:line="88" pos:column="79"/></operator><name pos:line="88" pos:column="75">len<pos:position pos:line="88" pos:column="78"/></name></expr></argument>)<pos:position pos:line="88" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="80"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="89" pos:column="3">free<pos:position pos:line="89" pos:column="7"/></name><argument_list pos:line="89" pos:column="7">(<argument><expr><name pos:line="89" pos:column="8">path<pos:position pos:line="89" pos:column="12"/></name></expr></argument>)<pos:position pos:line="89" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="14"/></expr_stmt>
  <if pos:line="90" pos:column="3">if<condition pos:line="90" pos:column="5">(<expr><name pos:line="90" pos:column="6">result<pos:position pos:line="90" pos:column="12"/></name></expr>)<pos:position pos:line="90" pos:column="13"/></condition><then pos:line="90" pos:column="13">
    <block type="pseudo"><return pos:line="91" pos:column="5">return <expr><name pos:line="91" pos:column="12">result<pos:position pos:line="91" pos:column="18"/></name></expr>;<pos:position pos:line="91" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><operator pos:line="93" pos:column="3">*<pos:position pos:line="93" pos:column="4"/></operator><name pos:line="93" pos:column="4">allocuserpwd<pos:position pos:line="93" pos:column="16"/></name> <operator pos:line="93" pos:column="17">=<pos:position pos:line="93" pos:column="18"/></operator> <call><name pos:line="93" pos:column="19">aprintf<pos:position pos:line="93" pos:column="26"/></name><argument_list pos:line="93" pos:column="26">(<argument><expr><literal type="string" pos:line="93" pos:column="27">"%sAuthorization: Digest %s\r\n"<pos:position pos:line="93" pos:column="59"/></literal></expr></argument>,
                          <argument><expr><ternary><condition><expr><name pos:line="94" pos:column="27">proxy<pos:position pos:line="94" pos:column="32"/></name></expr> ?<pos:position pos:line="94" pos:column="34"/></condition><then pos:line="94" pos:column="34"> <expr><literal type="string" pos:line="94" pos:column="35">"Proxy-"<pos:position pos:line="94" pos:column="43"/></literal></expr> <pos:position pos:line="94" pos:column="44"/></then><else pos:line="94" pos:column="44">: <expr><literal type="string" pos:line="94" pos:column="46">""<pos:position pos:line="94" pos:column="48"/></literal></expr></else></ternary></expr></argument>,
                          <argument><expr><name pos:line="95" pos:column="27">response<pos:position pos:line="95" pos:column="35"/></name></expr></argument>)<pos:position pos:line="95" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="96" pos:column="3">free<pos:position pos:line="96" pos:column="7"/></name><argument_list pos:line="96" pos:column="7">(<argument><expr><name pos:line="96" pos:column="8">response<pos:position pos:line="96" pos:column="16"/></name></expr></argument>)<pos:position pos:line="96" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="18"/></expr_stmt>
  <if pos:line="97" pos:column="3">if<condition pos:line="97" pos:column="5">(<expr><operator pos:line="97" pos:column="6">!<pos:position pos:line="97" pos:column="7"/></operator><operator pos:line="97" pos:column="7">*<pos:position pos:line="97" pos:column="8"/></operator><name pos:line="97" pos:column="8">allocuserpwd<pos:position pos:line="97" pos:column="20"/></name></expr>)<pos:position pos:line="97" pos:column="21"/></condition><then pos:line="97" pos:column="21">
    <block type="pseudo"><return pos:line="98" pos:column="5">return <expr><name pos:line="98" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="98" pos:column="31"/></name></expr>;<pos:position pos:line="98" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="100" pos:column="3">authp<pos:position pos:line="100" pos:column="8"/></name><operator pos:line="100" pos:column="8">-&gt;<pos:position pos:line="100" pos:column="13"/></operator><name pos:line="100" pos:column="10">done<pos:position pos:line="100" pos:column="14"/></name></name> <operator pos:line="100" pos:column="15">=<pos:position pos:line="100" pos:column="16"/></operator> <name pos:line="100" pos:column="17">TRUE<pos:position pos:line="100" pos:column="21"/></name></expr>;<pos:position pos:line="100" pos:column="22"/></expr_stmt>

  <return pos:line="102" pos:column="3">return <expr><name pos:line="102" pos:column="10">CURLE_OK<pos:position pos:line="102" pos:column="18"/></name></expr>;<pos:position pos:line="102" pos:column="19"/></return>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

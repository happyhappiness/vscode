<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_359_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">curl_slist<pos:position pos:line="1" pos:column="18"/></name></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">curl_slist_append_ccsid<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">curl_slist<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type> <name pos:line="2" pos:column="45">list<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="3" pos:column="25">const<pos:position pos:line="3" pos:column="30"/></specifier> <name pos:line="3" pos:column="31">char<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type> <name pos:line="3" pos:column="38">data<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="44">unsigned<pos:position pos:line="3" pos:column="52"/></name> <name pos:line="3" pos:column="53">int<pos:position pos:line="3" pos:column="56"/></name></type> <name pos:line="3" pos:column="57">ccsid<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list>

<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type> <name pos:line="6" pos:column="10">s<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">s<pos:position pos:line="8" pos:column="4"/></name> <operator pos:line="8" pos:column="5">=<pos:position pos:line="8" pos:column="6"/></operator> <operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">char<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></operator><operator pos:line="8" pos:column="14">)<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">NULL<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">data<pos:position pos:line="10" pos:column="11"/></name></expr>)<pos:position pos:line="10" pos:column="12"/></condition><then pos:line="10" pos:column="12">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><call><name pos:line="11" pos:column="12">curl_slist_append<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">list<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="36">data<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">s<pos:position pos:line="13" pos:column="4"/></name> <operator pos:line="13" pos:column="5">=<pos:position pos:line="13" pos:column="6"/></operator> <call><name pos:line="13" pos:column="7">dynconvert<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">ASCII_CCSID<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="31">data<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="37">-<pos:position pos:line="13" pos:column="38"/></operator><literal type="number" pos:line="13" pos:column="38">1<pos:position pos:line="13" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="41">ccsid<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">s<pos:position pos:line="15" pos:column="8"/></name></expr>)<pos:position pos:line="15" pos:column="9"/></condition><then pos:line="15" pos:column="9">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator>struct <name pos:line="16" pos:column="20">curl_slist<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">*<pos:position pos:line="16" pos:column="32"/></operator><operator pos:line="16" pos:column="32">)<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">NULL<pos:position pos:line="16" pos:column="38"/></name></expr>;<pos:position pos:line="16" pos:column="39"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="18" pos:column="3">list<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">curl_slist_append<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">list<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">s<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">free<pos:position pos:line="19" pos:column="7"/></name><argument_list pos:line="19" pos:column="7">(<argument><expr><name pos:line="19" pos:column="8">s<pos:position pos:line="19" pos:column="9"/></name></expr></argument>)<pos:position pos:line="19" pos:column="10"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="11"/></expr_stmt>
  <return pos:line="20" pos:column="3">return <expr><name pos:line="20" pos:column="10">list<pos:position pos:line="20" pos:column="14"/></name></expr>;<pos:position pos:line="20" pos:column="15"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

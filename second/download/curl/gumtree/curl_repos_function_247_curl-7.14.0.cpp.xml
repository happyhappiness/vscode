<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_247_curl-7.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">strcpy_url<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">output<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">url<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* we must add this with whitespace-replacing */</comment>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">bool<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">left<pos:position pos:line="4" pos:column="12"/></name><init pos:line="4" pos:column="12">=<expr><name pos:line="4" pos:column="13">TRUE<pos:position pos:line="4" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">iptr<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">optr<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><name pos:line="6" pos:column="16">output<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <for pos:line="7" pos:column="3">for<control pos:line="7" pos:column="6">(<init><expr><name pos:line="7" pos:column="7">iptr<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">url<pos:position pos:line="7" pos:column="17"/></name></expr>;<pos:position pos:line="7" pos:column="18"/></init>    <comment type="block" pos:line="7" pos:column="22">/* read from here */</comment>
      <condition><expr><operator pos:line="8" pos:column="7">*<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">iptr<pos:position pos:line="8" pos:column="12"/></name></expr>;<pos:position pos:line="8" pos:column="13"/></condition>         <comment type="block" pos:line="8" pos:column="22">/* until zero byte */</comment>
      <incr><expr><name pos:line="9" pos:column="7">iptr<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">++<pos:position pos:line="9" pos:column="13"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="14"/></control> <block pos:line="9" pos:column="15">{
    <switch pos:line="10" pos:column="5">switch<condition pos:line="10" pos:column="11">(<expr><operator pos:line="10" pos:column="12">*<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">iptr<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition> <block pos:line="10" pos:column="19">{
    <case pos:line="11" pos:column="5">case <expr><literal type="char" pos:line="11" pos:column="10">'?'<pos:position pos:line="11" pos:column="13"/></literal></expr>:<pos:position pos:line="11" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="12" pos:column="7">left<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">FALSE<pos:position pos:line="12" pos:column="17"/></name></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
    <default pos:line="13" pos:column="5">default:<pos:position pos:line="13" pos:column="13"/></default>
      <expr_stmt><expr><operator pos:line="14" pos:column="7">*<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">optr<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">++<pos:position pos:line="14" pos:column="14"/></operator><operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator><operator pos:line="14" pos:column="15">*<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">iptr<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
      <break pos:line="15" pos:column="7">break;<pos:position pos:line="15" pos:column="13"/></break>
    <case pos:line="16" pos:column="5">case <expr><literal type="char" pos:line="16" pos:column="10">' '<pos:position pos:line="16" pos:column="13"/></literal></expr>:<pos:position pos:line="16" pos:column="14"/></case>
      <if pos:line="17" pos:column="7">if<condition pos:line="17" pos:column="9">(<expr><name pos:line="17" pos:column="10">left<pos:position pos:line="17" pos:column="14"/></name></expr>)<pos:position pos:line="17" pos:column="15"/></condition><then pos:line="17" pos:column="15"> <block pos:line="17" pos:column="16">{
        <expr_stmt><expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">optr<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">++<pos:position pos:line="18" pos:column="16"/></operator><operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator><literal type="char" pos:line="18" pos:column="17">'%'<pos:position pos:line="18" pos:column="20"/></literal></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt> <comment type="block" pos:line="18" pos:column="22">/* add a '%' */</comment>
        <expr_stmt><expr><operator pos:line="19" pos:column="9">*<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">optr<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">++<pos:position pos:line="19" pos:column="16"/></operator><operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator><literal type="char" pos:line="19" pos:column="17">'2'<pos:position pos:line="19" pos:column="20"/></literal></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt> <comment type="block" pos:line="19" pos:column="22">/* add a '2' */</comment>
        <expr_stmt><expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">optr<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">++<pos:position pos:line="20" pos:column="16"/></operator><operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator><literal type="char" pos:line="20" pos:column="17">'0'<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt> <comment type="block" pos:line="20" pos:column="22">/* add a '0' */</comment>
      }<pos:position pos:line="21" pos:column="8"/></block></then>
      <else pos:line="22" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><operator pos:line="23" pos:column="9">*<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">optr<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">++<pos:position pos:line="23" pos:column="16"/></operator><operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator><literal type="char" pos:line="23" pos:column="17">'+'<pos:position pos:line="23" pos:column="20"/></literal></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt></block></else></if> <comment type="block" pos:line="23" pos:column="22">/* add a '+' here */</comment>
      <break pos:line="24" pos:column="7">break;<pos:position pos:line="24" pos:column="13"/></break>
    }<pos:position pos:line="25" pos:column="6"/></block></switch>
  }<pos:position pos:line="26" pos:column="4"/></block></for>
  <expr_stmt><expr><operator pos:line="27" pos:column="3">*<pos:position pos:line="27" pos:column="4"/></operator><name pos:line="27" pos:column="4">optr<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator><literal type="number" pos:line="27" pos:column="9">0<pos:position pos:line="27" pos:column="10"/></literal></expr>;<pos:position pos:line="27" pos:column="11"/></expr_stmt> <comment type="block" pos:line="27" pos:column="12">/* zero terminate output buffer */</comment>

}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1721_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">rtmp_connect<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">connectdata<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">conn<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">bool<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">done<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">RTMP<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">r<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><name><name pos:line="3" pos:column="13">conn<pos:position pos:line="3" pos:column="17"/></name><operator pos:line="3" pos:column="17">-&gt;<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="19">proto<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">.<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="25">generic<pos:position pos:line="3" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">SET_RCVTIMEO<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">tv<pos:position pos:line="4" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="20">10<pos:position pos:line="4" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="6" pos:column="3">r<pos:position pos:line="6" pos:column="4"/></name><operator pos:line="6" pos:column="4">-&gt;<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="6">m_sb<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">.<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">sb_socket<pos:position pos:line="6" pos:column="20"/></name></name> <operator pos:line="6" pos:column="21">=<pos:position pos:line="6" pos:column="22"/></operator> <operator pos:line="6" pos:column="23">(<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">int<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">)<pos:position pos:line="6" pos:column="28"/></operator><name><name pos:line="6" pos:column="28">conn<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">sock<pos:position pos:line="6" pos:column="38"/></name><index pos:line="6" pos:column="38">[<expr><name pos:line="6" pos:column="39">FIRSTSOCKET<pos:position pos:line="6" pos:column="50"/></name></expr>]<pos:position pos:line="6" pos:column="51"/></index></name></expr>;<pos:position pos:line="6" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* We have to know if it's a write before we send the
   * connect request packet
   */</comment>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name><name pos:line="11" pos:column="6">conn<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">data<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">set<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">.<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">upload<pos:position pos:line="11" pos:column="28"/></name></name></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="5">r<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">Link<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">.<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">protocol<pos:position pos:line="12" pos:column="21"/></name></name> <operator pos:line="12" pos:column="22">|=<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="25">RTMP_FEATURE_WRITE<pos:position pos:line="12" pos:column="43"/></name></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="14" pos:column="3">/* For plain streams, use the buffer toggle trick to keep data flowing */</comment>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><operator pos:line="15" pos:column="7">(<pos:position pos:line="15" pos:column="8"/></operator><name><name pos:line="15" pos:column="8">r<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">Link<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">lFlags<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">&amp;<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="25">RTMP_LF_LIVE<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">)<pos:position pos:line="15" pos:column="38"/></operator> <operator pos:line="15" pos:column="39">&amp;&amp;<pos:position pos:line="15" pos:column="49"/></operator>
     <operator pos:line="16" pos:column="6">!<pos:position pos:line="16" pos:column="7"/></operator><operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><name><name pos:line="16" pos:column="8">r<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">-&gt;<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="11">Link<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">.<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">protocol<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">&amp;<pos:position pos:line="16" pos:column="30"/></operator> <name pos:line="16" pos:column="27">RTMP_FEATURE_HTTP<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">)<pos:position pos:line="16" pos:column="45"/></operator></expr>)<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="5">r<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">Link<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">.<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">lFlags<pos:position pos:line="17" pos:column="19"/></name></name> <operator pos:line="17" pos:column="20">|=<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">RTMP_LF_BUFX<pos:position pos:line="17" pos:column="35"/></name></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt></block></then></if>

  <expr_stmt><expr><operator pos:line="19" pos:column="3">(<pos:position pos:line="19" pos:column="4"/></operator><name pos:line="19" pos:column="4">void<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">)<pos:position pos:line="19" pos:column="9"/></operator><call><name pos:line="19" pos:column="9">curlx_nonblock<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name><name pos:line="19" pos:column="24">r<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">m_sb<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">.<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">sb_socket<pos:position pos:line="19" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">FALSE<pos:position pos:line="19" pos:column="48"/></name></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">setsockopt<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><name><name pos:line="20" pos:column="14">r<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">m_sb<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">.<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">sb_socket<pos:position pos:line="20" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="33">SOL_SOCKET<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">SO_RCVTIMEO<pos:position pos:line="20" pos:column="56"/></name></expr></argument>,
             <argument><expr><operator pos:line="21" pos:column="14">(<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">char<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">*<pos:position pos:line="21" pos:column="21"/></operator><operator pos:line="21" pos:column="21">)<pos:position pos:line="21" pos:column="22"/></operator><operator pos:line="21" pos:column="22">&amp;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="23">tv<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="27">sizeof<argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">tv<pos:position pos:line="21" pos:column="36"/></name></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>

  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">!<pos:position pos:line="23" pos:column="7"/></operator><call><name pos:line="23" pos:column="7">RTMP_Connect1<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">r<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="24">NULL<pos:position pos:line="23" pos:column="28"/></name></expr></argument>)<pos:position pos:line="23" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30">
    <block type="pseudo"><return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">CURLE_FAILED_INIT<pos:position pos:line="24" pos:column="29"/></name></expr>;<pos:position pos:line="24" pos:column="30"/></return></block></then></if>

  <comment type="block" pos:line="26" pos:column="3">/* Clients must send a periodic BytesReceived report to the server */</comment>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">r<pos:position pos:line="27" pos:column="4"/></name><operator pos:line="27" pos:column="4">-&gt;<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="6">m_bSendCounter<pos:position pos:line="27" pos:column="20"/></name></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <literal type="boolean" pos:line="27" pos:column="23">true<pos:position pos:line="27" pos:column="27"/></literal></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="29" pos:column="3">*<pos:position pos:line="29" pos:column="4"/></operator><name pos:line="29" pos:column="4">done<pos:position pos:line="29" pos:column="8"/></name> <operator pos:line="29" pos:column="9">=<pos:position pos:line="29" pos:column="10"/></operator> <name pos:line="29" pos:column="11">TRUE<pos:position pos:line="29" pos:column="15"/></name></expr>;<pos:position pos:line="29" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">conn<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">recv<pos:position pos:line="30" pos:column="13"/></name><index pos:line="30" pos:column="13">[<expr><name pos:line="30" pos:column="14">FIRSTSOCKET<pos:position pos:line="30" pos:column="25"/></name></expr>]<pos:position pos:line="30" pos:column="26"/></index></name> <operator pos:line="30" pos:column="27">=<pos:position pos:line="30" pos:column="28"/></operator> <name pos:line="30" pos:column="29">rtmp_recv<pos:position pos:line="30" pos:column="38"/></name></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">conn<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">-&gt;<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="9">send<pos:position pos:line="31" pos:column="13"/></name><index pos:line="31" pos:column="13">[<expr><name pos:line="31" pos:column="14">FIRSTSOCKET<pos:position pos:line="31" pos:column="25"/></name></expr>]<pos:position pos:line="31" pos:column="26"/></index></name> <operator pos:line="31" pos:column="27">=<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="29">rtmp_send<pos:position pos:line="31" pos:column="38"/></name></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
  <return pos:line="32" pos:column="3">return <expr><name pos:line="32" pos:column="10">CURLE_OK<pos:position pos:line="32" pos:column="18"/></name></expr>;<pos:position pos:line="32" pos:column="19"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_94_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">write_callback<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">buffer<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">size_t<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">size<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">size_t<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">nmemb<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">void<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">hsp<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">realsize<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">size<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="28">nmemb<pos:position pos:line="4" pos:column="33"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="35">p<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <for pos:line="5" pos:column="3">for<control pos:line="5" pos:column="6">(<init><expr><name pos:line="5" pos:column="7">p<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">=<pos:position pos:line="5" pos:column="10"/></operator> <literal type="number" pos:line="5" pos:column="11">0<pos:position pos:line="5" pos:column="12"/></literal></expr>;<pos:position pos:line="5" pos:column="13"/></init> <condition><expr><name pos:line="5" pos:column="14">p<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">&lt;<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="18">realsize<pos:position pos:line="5" pos:column="26"/></name></expr>;<pos:position pos:line="5" pos:column="27"/></condition> <incr><expr><name pos:line="5" pos:column="28">p<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">++<pos:position pos:line="5" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="32"/></control> <block pos:line="5" pos:column="33">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">html_parser_char_parse<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">hsp<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="33">(<pos:position pos:line="6" pos:column="34"/></operator><operator pos:line="6" pos:column="34">(<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="35">char<pos:position pos:line="6" pos:column="39"/></name> <operator pos:line="6" pos:column="40">*<pos:position pos:line="6" pos:column="41"/></operator><operator pos:line="6" pos:column="41">)<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="42">buffer<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">)<pos:position pos:line="6" pos:column="49"/></operator><index pos:line="6" pos:column="49">[<expr><name pos:line="6" pos:column="50">p<pos:position pos:line="6" pos:column="51"/></name></expr>]<pos:position pos:line="6" pos:column="52"/></index></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt>
    <if pos:line="7" pos:column="5">if<condition pos:line="7" pos:column="7">(<expr><call><name pos:line="7" pos:column="8">html_parser_cmp_tag<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">hsp<pos:position pos:line="7" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="33">"a"<pos:position pos:line="7" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="38">1<pos:position pos:line="7" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41">
      <block type="pseudo"><if pos:line="8" pos:column="7">if<condition pos:line="8" pos:column="9">(<expr><call><name pos:line="8" pos:column="10">html_parser_cmp_attr<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">hsp<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="36">"href"<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="44">4<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="47"/></condition><then pos:line="8" pos:column="47">
        <block type="pseudo"><if pos:line="9" pos:column="9">if<condition pos:line="9" pos:column="11">(<expr><call><name pos:line="9" pos:column="12">html_parser_is_in<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">hsp<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="35">HTML_VALUE_ENDED<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="53"/></condition><then pos:line="9" pos:column="53"> <block pos:line="9" pos:column="54">{
          <expr_stmt><expr><call><name pos:line="10" pos:column="11">html_parser_val<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">hsp<pos:position pos:line="10" pos:column="30"/></name></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call><index pos:line="10" pos:column="31">[<expr><call><name pos:line="10" pos:column="32">html_parser_val_length<pos:position pos:line="10" pos:column="54"/></name><argument_list pos:line="10" pos:column="54">(<argument><expr><name pos:line="10" pos:column="55">hsp<pos:position pos:line="10" pos:column="58"/></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>]<pos:position pos:line="10" pos:column="60"/></index> <operator pos:line="10" pos:column="61">=<pos:position pos:line="10" pos:column="62"/></operator> <literal type="char" pos:line="10" pos:column="63">'\0'<pos:position pos:line="10" pos:column="67"/></literal></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="11" pos:column="11">printf<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><literal type="string" pos:line="11" pos:column="18">"%s\n"<pos:position pos:line="11" pos:column="24"/></literal></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="26">html_parser_val<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">hsp<pos:position pos:line="11" pos:column="45"/></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if></block></then></if></block></then></if>
  }<pos:position pos:line="13" pos:column="4"/></block></for>
  <return pos:line="14" pos:column="3">return <expr><name pos:line="14" pos:column="10">realsize<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_296_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_output_ntlm<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">bool<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">proxy<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">domain<pos:position pos:line="4" pos:column="21"/></name><init pos:line="4" pos:column="21">=<expr><literal type="string" pos:line="4" pos:column="22">""<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt> <comment type="block" pos:line="4" pos:column="26">/* empty */</comment>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">host<pos:position pos:line="5" pos:column="19"/></name><init pos:line="5" pos:column="19">=<expr><literal type="string" pos:line="5" pos:column="20">""<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt> <comment type="block" pos:line="5" pos:column="24">/* empty */</comment>
<cpp:ifndef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifndef<pos:position pos:line="6" pos:column="8"/></cpp:directive> <name pos:line="6" pos:column="9">USE_WINDOWS_SSPI<pos:position pos:line="6" pos:column="25"/></name></cpp:ifndef>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">domlen<pos:position pos:line="7" pos:column="13"/></name><init pos:line="7" pos:column="13">=<expr><operator pos:line="7" pos:column="14">(<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">int<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">)<pos:position pos:line="7" pos:column="19"/></operator><call><name pos:line="7" pos:column="19">strlen<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><name pos:line="7" pos:column="26">domain<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">hostlen<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><operator pos:line="8" pos:column="17">(<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">int<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">)<pos:position pos:line="8" pos:column="22"/></operator><call><name pos:line="8" pos:column="22">strlen<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">host<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">hostoff<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt> <comment type="block" pos:line="9" pos:column="16">/* host name offset */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">domoff<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>  <comment type="block" pos:line="10" pos:column="16">/* domain name offset */</comment>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">size<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">base64<pos:position pos:line="13" pos:column="15"/></name><init pos:line="13" pos:column="15">=<expr><name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">unsigned<pos:position pos:line="14" pos:column="11"/></name> <name pos:line="14" pos:column="12">char<pos:position pos:line="14" pos:column="16"/></name></type> <name><name pos:line="14" pos:column="17">ntlmbuf<pos:position pos:line="14" pos:column="24"/></name><index pos:line="14" pos:column="24">[<expr><literal type="number" pos:line="14" pos:column="25">256<pos:position pos:line="14" pos:column="28"/></literal></expr>]<pos:position pos:line="14" pos:column="29"/></index></name></decl>;<pos:position pos:line="14" pos:column="30"/></decl_stmt> <comment type="block" pos:line="14" pos:column="31">/* enough, unless the host/domain is very long */</comment>

  <comment type="block" pos:line="16" pos:column="3">/* point to the address of the pointer that holds the string to sent to the
     server, which is for a plain host or for a HTTP proxy */</comment>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">char<pos:position pos:line="18" pos:column="7"/></name> <modifier pos:line="18" pos:column="8">*<pos:position pos:line="18" pos:column="9"/></modifier><modifier pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></modifier></type><name pos:line="18" pos:column="10">allocuserpwd<pos:position pos:line="18" pos:column="22"/></name></decl>;<pos:position pos:line="18" pos:column="23"/></decl_stmt>

  <comment type="block" pos:line="20" pos:column="3">/* point to the name and password for this */</comment>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">char<pos:position pos:line="21" pos:column="7"/></name> <modifier pos:line="21" pos:column="8">*<pos:position pos:line="21" pos:column="9"/></modifier></type><name pos:line="21" pos:column="9">userp<pos:position pos:line="21" pos:column="14"/></name></decl>;<pos:position pos:line="21" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">char<pos:position pos:line="22" pos:column="7"/></name> <modifier pos:line="22" pos:column="8">*<pos:position pos:line="22" pos:column="9"/></modifier></type><name pos:line="22" pos:column="9">passwdp<pos:position pos:line="22" pos:column="16"/></name></decl>;<pos:position pos:line="22" pos:column="17"/></decl_stmt>
  <comment type="block" pos:line="23" pos:column="3">/* point to the correct struct with this */</comment>
  <decl_stmt><decl><type><name><name pos:line="24" pos:column="3">struct<pos:position pos:line="24" pos:column="9"/></name> <name pos:line="24" pos:column="10">ntlmdata<pos:position pos:line="24" pos:column="18"/></name></name> <modifier pos:line="24" pos:column="19">*<pos:position pos:line="24" pos:column="20"/></modifier></type><name pos:line="24" pos:column="20">ntlm<pos:position pos:line="24" pos:column="24"/></name></decl>;<pos:position pos:line="24" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="25" pos:column="3">struct<pos:position pos:line="25" pos:column="9"/></name> <name pos:line="25" pos:column="10">auth<pos:position pos:line="25" pos:column="14"/></name></name> <modifier pos:line="25" pos:column="15">*<pos:position pos:line="25" pos:column="16"/></modifier></type><name pos:line="25" pos:column="16">authp<pos:position pos:line="25" pos:column="21"/></name></decl>;<pos:position pos:line="25" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">curlassert<pos:position pos:line="27" pos:column="13"/></name><argument_list pos:line="27" pos:column="13">(<argument><expr><name pos:line="27" pos:column="14">conn<pos:position pos:line="27" pos:column="18"/></name></expr></argument>)<pos:position pos:line="27" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">curlassert<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">(<argument><expr><name><name pos:line="28" pos:column="14">conn<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">data<pos:position pos:line="28" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>

  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><name pos:line="30" pos:column="6">proxy<pos:position pos:line="30" pos:column="11"/></name></expr>)<pos:position pos:line="30" pos:column="12"/></condition><then pos:line="30" pos:column="12"> <block pos:line="30" pos:column="13">{
    <expr_stmt><expr><name pos:line="31" pos:column="5">allocuserpwd<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <operator pos:line="31" pos:column="20">&amp;<pos:position pos:line="31" pos:column="25"/></operator><name><name pos:line="31" pos:column="21">conn<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">-&gt;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="27">allocptr<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">.<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="36">proxyuserpwd<pos:position pos:line="31" pos:column="48"/></name></name></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">userp<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <name><name pos:line="32" pos:column="13">conn<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">proxyuser<pos:position pos:line="32" pos:column="28"/></name></name></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">passwdp<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <name><name pos:line="33" pos:column="15">conn<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">proxypasswd<pos:position pos:line="33" pos:column="32"/></name></name></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">ntlm<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <operator pos:line="34" pos:column="12">&amp;<pos:position pos:line="34" pos:column="17"/></operator><name><name pos:line="34" pos:column="13">conn<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">-&gt;<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="19">proxyntlm<pos:position pos:line="34" pos:column="28"/></name></name></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">authp<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <operator pos:line="35" pos:column="13">&amp;<pos:position pos:line="35" pos:column="18"/></operator><name><name pos:line="35" pos:column="14">conn<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">-&gt;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="20">data<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">-&gt;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="26">state<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">.<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="32">authproxy<pos:position pos:line="35" pos:column="41"/></name></name></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></then>
  <else pos:line="37" pos:column="3">else <block pos:line="37" pos:column="8">{
    <expr_stmt><expr><name pos:line="38" pos:column="5">allocuserpwd<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <operator pos:line="38" pos:column="20">&amp;<pos:position pos:line="38" pos:column="25"/></operator><name><name pos:line="38" pos:column="21">conn<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">-&gt;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="27">allocptr<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">.<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="36">userpwd<pos:position pos:line="38" pos:column="43"/></name></name></expr>;<pos:position pos:line="38" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">userp<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <name><name pos:line="39" pos:column="13">conn<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">-&gt;<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="19">user<pos:position pos:line="39" pos:column="23"/></name></name></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="40" pos:column="5">passwdp<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <name><name pos:line="40" pos:column="15">conn<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">passwd<pos:position pos:line="40" pos:column="27"/></name></name></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">ntlm<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <operator pos:line="41" pos:column="12">&amp;<pos:position pos:line="41" pos:column="17"/></operator><name><name pos:line="41" pos:column="13">conn<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">-&gt;<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="19">ntlm<pos:position pos:line="41" pos:column="23"/></name></name></expr>;<pos:position pos:line="41" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">authp<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">=<pos:position pos:line="42" pos:column="12"/></operator> <operator pos:line="42" pos:column="13">&amp;<pos:position pos:line="42" pos:column="18"/></operator><name><name pos:line="42" pos:column="14">conn<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">-&gt;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="20">data<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">-&gt;<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="26">state<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">.<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="32">authhost<pos:position pos:line="42" pos:column="40"/></name></name></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">authp<pos:position pos:line="44" pos:column="8"/></name><operator pos:line="44" pos:column="8">-&gt;<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="10">done<pos:position pos:line="44" pos:column="14"/></name></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">FALSE<pos:position pos:line="44" pos:column="22"/></name></expr>;<pos:position pos:line="44" pos:column="23"/></expr_stmt>

  <comment type="block" pos:line="46" pos:column="3">/* not set means empty */</comment>
  <if pos:line="47" pos:column="3">if<condition pos:line="47" pos:column="5">(<expr><operator pos:line="47" pos:column="6">!<pos:position pos:line="47" pos:column="7"/></operator><name pos:line="47" pos:column="7">userp<pos:position pos:line="47" pos:column="12"/></name></expr>)<pos:position pos:line="47" pos:column="13"/></condition><then pos:line="47" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="5">userp<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">=<pos:position pos:line="48" pos:column="11"/></operator><operator pos:line="48" pos:column="11">(<pos:position pos:line="48" pos:column="12"/></operator><name pos:line="48" pos:column="12">char<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">*<pos:position pos:line="48" pos:column="18"/></operator><operator pos:line="48" pos:column="18">)<pos:position pos:line="48" pos:column="19"/></operator><literal type="string" pos:line="48" pos:column="19">""<pos:position pos:line="48" pos:column="21"/></literal></expr>;<pos:position pos:line="48" pos:column="22"/></expr_stmt></block></then></if>

  <if pos:line="50" pos:column="3">if<condition pos:line="50" pos:column="5">(<expr><operator pos:line="50" pos:column="6">!<pos:position pos:line="50" pos:column="7"/></operator><name pos:line="50" pos:column="7">passwdp<pos:position pos:line="50" pos:column="14"/></name></expr>)<pos:position pos:line="50" pos:column="15"/></condition><then pos:line="50" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="5">passwdp<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator><operator pos:line="51" pos:column="13">(<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">char<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">*<pos:position pos:line="51" pos:column="20"/></operator><operator pos:line="51" pos:column="20">)<pos:position pos:line="51" pos:column="21"/></operator><literal type="string" pos:line="51" pos:column="21">""<pos:position pos:line="51" pos:column="23"/></literal></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt></block></then></if>

  <switch pos:line="53" pos:column="3">switch<condition pos:line="53" pos:column="9">(<expr><name><name pos:line="53" pos:column="10">ntlm<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">-&gt;<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="16">state<pos:position pos:line="53" pos:column="21"/></name></name></expr>)<pos:position pos:line="53" pos:column="22"/></condition> <block pos:line="53" pos:column="23">{
  <case pos:line="54" pos:column="3">case <expr><name pos:line="54" pos:column="8">NTLMSTATE_TYPE1<pos:position pos:line="54" pos:column="23"/></name></expr>:<pos:position pos:line="54" pos:column="24"/></case>
  <default pos:line="55" pos:column="3">default:<pos:position pos:line="55" pos:column="11"/></default> <comment type="block" pos:line="55" pos:column="12">/* for the weird cases we (re)start here */</comment>
<cpp:ifdef pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">ifdef<pos:position pos:line="56" pos:column="7"/></cpp:directive> <name pos:line="56" pos:column="8">USE_WINDOWS_SSPI<pos:position pos:line="56" pos:column="24"/></name></cpp:ifdef>
  <block pos:line="57" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="58" pos:column="5">SecBuffer<pos:position pos:line="58" pos:column="14"/></name></type> <name pos:line="58" pos:column="15">buf<pos:position pos:line="58" pos:column="18"/></name></decl>;<pos:position pos:line="58" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="59" pos:column="5">SecBufferDesc<pos:position pos:line="59" pos:column="18"/></name></type> <name pos:line="59" pos:column="19">desc<pos:position pos:line="59" pos:column="23"/></name></decl>;<pos:position pos:line="59" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="60" pos:column="5">SECURITY_STATUS<pos:position pos:line="60" pos:column="20"/></name></type> <name pos:line="60" pos:column="21">status<pos:position pos:line="60" pos:column="27"/></name></decl>;<pos:position pos:line="60" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="61" pos:column="5">ULONG<pos:position pos:line="61" pos:column="10"/></name></type> <name pos:line="61" pos:column="11">attrs<pos:position pos:line="61" pos:column="16"/></name></decl>;<pos:position pos:line="61" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="62" pos:column="5">const<pos:position pos:line="62" pos:column="10"/></specifier> <name pos:line="62" pos:column="11">char<pos:position pos:line="62" pos:column="15"/></name> <modifier pos:line="62" pos:column="16">*<pos:position pos:line="62" pos:column="17"/></modifier></type><name pos:line="62" pos:column="17">user<pos:position pos:line="62" pos:column="21"/></name></decl>;<pos:position pos:line="62" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="63" pos:column="5">int<pos:position pos:line="63" pos:column="8"/></name></type> <name pos:line="63" pos:column="9">domlen<pos:position pos:line="63" pos:column="15"/></name></decl>;<pos:position pos:line="63" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="65" pos:column="5">ntlm_sspi_cleanup<pos:position pos:line="65" pos:column="22"/></name><argument_list pos:line="65" pos:column="22">(<argument><expr><name pos:line="65" pos:column="23">ntlm<pos:position pos:line="65" pos:column="27"/></name></expr></argument>)<pos:position pos:line="65" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name pos:line="67" pos:column="5">user<pos:position pos:line="67" pos:column="9"/></name> <operator pos:line="67" pos:column="10">=<pos:position pos:line="67" pos:column="11"/></operator> <call><name pos:line="67" pos:column="12">strchr<pos:position pos:line="67" pos:column="18"/></name><argument_list pos:line="67" pos:column="18">(<argument><expr><name pos:line="67" pos:column="19">userp<pos:position pos:line="67" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="67" pos:column="26">'\\'<pos:position pos:line="67" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="32"/></expr_stmt>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><operator pos:line="68" pos:column="9">!<pos:position pos:line="68" pos:column="10"/></operator><name pos:line="68" pos:column="10">user<pos:position pos:line="68" pos:column="14"/></name></expr>)<pos:position pos:line="68" pos:column="15"/></condition><then pos:line="68" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="7">user<pos:position pos:line="69" pos:column="11"/></name> <operator pos:line="69" pos:column="12">=<pos:position pos:line="69" pos:column="13"/></operator> <call><name pos:line="69" pos:column="14">strchr<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><name pos:line="69" pos:column="21">userp<pos:position pos:line="69" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="69" pos:column="28">'/'<pos:position pos:line="69" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="33"/></expr_stmt></block></then></if>

    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">user<pos:position pos:line="71" pos:column="13"/></name></expr>)<pos:position pos:line="71" pos:column="14"/></condition><then pos:line="71" pos:column="14"> <block pos:line="71" pos:column="15">{
      <expr_stmt><expr><name pos:line="72" pos:column="7">domain<pos:position pos:line="72" pos:column="13"/></name> <operator pos:line="72" pos:column="14">=<pos:position pos:line="72" pos:column="15"/></operator> <name pos:line="72" pos:column="16">userp<pos:position pos:line="72" pos:column="21"/></name></expr>;<pos:position pos:line="72" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="73" pos:column="7">domlen<pos:position pos:line="73" pos:column="13"/></name> <operator pos:line="73" pos:column="14">=<pos:position pos:line="73" pos:column="15"/></operator> <name pos:line="73" pos:column="16">user<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">-<pos:position pos:line="73" pos:column="22"/></operator> <name pos:line="73" pos:column="23">userp<pos:position pos:line="73" pos:column="28"/></name></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="74" pos:column="7">user<pos:position pos:line="74" pos:column="11"/></name><operator pos:line="74" pos:column="11">++<pos:position pos:line="74" pos:column="13"/></operator></expr>;<pos:position pos:line="74" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="75" pos:column="6"/></block></then>
    <else pos:line="76" pos:column="5">else <block pos:line="76" pos:column="10">{
      <expr_stmt><expr><name pos:line="77" pos:column="7">user<pos:position pos:line="77" pos:column="11"/></name> <operator pos:line="77" pos:column="12">=<pos:position pos:line="77" pos:column="13"/></operator> <name pos:line="77" pos:column="14">userp<pos:position pos:line="77" pos:column="19"/></name></expr>;<pos:position pos:line="77" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="78" pos:column="7">domain<pos:position pos:line="78" pos:column="13"/></name> <operator pos:line="78" pos:column="14">=<pos:position pos:line="78" pos:column="15"/></operator> <literal type="string" pos:line="78" pos:column="16">""<pos:position pos:line="78" pos:column="18"/></literal></expr>;<pos:position pos:line="78" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="79" pos:column="7">domlen<pos:position pos:line="79" pos:column="13"/></name> <operator pos:line="79" pos:column="14">=<pos:position pos:line="79" pos:column="15"/></operator> <literal type="number" pos:line="79" pos:column="16">0<pos:position pos:line="79" pos:column="17"/></literal></expr>;<pos:position pos:line="79" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></else></if>

    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><name pos:line="82" pos:column="9">user<pos:position pos:line="82" pos:column="13"/></name> <operator pos:line="82" pos:column="14">&amp;&amp;<pos:position pos:line="82" pos:column="24"/></operator> <operator pos:line="82" pos:column="17">*<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="18">user<pos:position pos:line="82" pos:column="22"/></name></expr>)<pos:position pos:line="82" pos:column="23"/></condition><then pos:line="82" pos:column="23"> <block pos:line="82" pos:column="24">{
      <comment type="block" pos:line="83" pos:column="7">/* note: initialize all of this before doing the mallocs so that
       * it can be cleaned up later without leaking memory.
       */</comment>
      <expr_stmt><expr><name><name pos:line="86" pos:column="7">ntlm<pos:position pos:line="86" pos:column="11"/></name><operator pos:line="86" pos:column="11">-&gt;<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="13">p_identity<pos:position pos:line="86" pos:column="23"/></name></name> <operator pos:line="86" pos:column="24">=<pos:position pos:line="86" pos:column="25"/></operator> <operator pos:line="86" pos:column="26">&amp;<pos:position pos:line="86" pos:column="31"/></operator><name><name pos:line="86" pos:column="27">ntlm<pos:position pos:line="86" pos:column="31"/></name><operator pos:line="86" pos:column="31">-&gt;<pos:position pos:line="86" pos:column="36"/></operator><name pos:line="86" pos:column="33">identity<pos:position pos:line="86" pos:column="41"/></name></name></expr>;<pos:position pos:line="86" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="87" pos:column="7">memset<pos:position pos:line="87" pos:column="13"/></name><argument_list pos:line="87" pos:column="13">(<argument><expr><name><name pos:line="87" pos:column="14">ntlm<pos:position pos:line="87" pos:column="18"/></name><operator pos:line="87" pos:column="18">-&gt;<pos:position pos:line="87" pos:column="23"/></operator><name pos:line="87" pos:column="20">p_identity<pos:position pos:line="87" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="32">0<pos:position pos:line="87" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="87" pos:column="35">sizeof<argument_list pos:line="87" pos:column="41">(<argument><expr><operator pos:line="87" pos:column="42">*<pos:position pos:line="87" pos:column="43"/></operator><name><name pos:line="87" pos:column="43">ntlm<pos:position pos:line="87" pos:column="47"/></name><operator pos:line="87" pos:column="47">-&gt;<pos:position pos:line="87" pos:column="52"/></operator><name pos:line="87" pos:column="49">p_identity<pos:position pos:line="87" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="87" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="62"/></expr_stmt>
      <if pos:line="88" pos:column="7">if <condition pos:line="88" pos:column="10">(<expr><operator pos:line="88" pos:column="11">(<pos:position pos:line="88" pos:column="12"/></operator><name><name pos:line="88" pos:column="12">ntlm<pos:position pos:line="88" pos:column="16"/></name><operator pos:line="88" pos:column="16">-&gt;<pos:position pos:line="88" pos:column="21"/></operator><name pos:line="88" pos:column="18">identity<pos:position pos:line="88" pos:column="26"/></name><operator pos:line="88" pos:column="26">.<pos:position pos:line="88" pos:column="27"/></operator><name pos:line="88" pos:column="27">User<pos:position pos:line="88" pos:column="31"/></name></name> <operator pos:line="88" pos:column="32">=<pos:position pos:line="88" pos:column="33"/></operator> <operator pos:line="88" pos:column="34">(<pos:position pos:line="88" pos:column="35"/></operator><name pos:line="88" pos:column="35">unsigned<pos:position pos:line="88" pos:column="43"/></name> <name pos:line="88" pos:column="44">char<pos:position pos:line="88" pos:column="48"/></name> <operator pos:line="88" pos:column="49">*<pos:position pos:line="88" pos:column="50"/></operator><operator pos:line="88" pos:column="50">)<pos:position pos:line="88" pos:column="51"/></operator><call><name pos:line="88" pos:column="51">strdup<pos:position pos:line="88" pos:column="57"/></name><argument_list pos:line="88" pos:column="57">(<argument><expr><name pos:line="88" pos:column="58">user<pos:position pos:line="88" pos:column="62"/></name></expr></argument>)<pos:position pos:line="88" pos:column="63"/></argument_list></call><operator pos:line="88" pos:column="63">)<pos:position pos:line="88" pos:column="64"/></operator> <operator pos:line="88" pos:column="65">==<pos:position pos:line="88" pos:column="67"/></operator> <name pos:line="88" pos:column="68">NULL<pos:position pos:line="88" pos:column="72"/></name></expr>)<pos:position pos:line="88" pos:column="73"/></condition><then pos:line="88" pos:column="73">
        <block type="pseudo"><return pos:line="89" pos:column="9">return <expr><name pos:line="89" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="89" pos:column="35"/></name></expr>;<pos:position pos:line="89" pos:column="36"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="90" pos:column="7">ntlm<pos:position pos:line="90" pos:column="11"/></name><operator pos:line="90" pos:column="11">-&gt;<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="13">identity<pos:position pos:line="90" pos:column="21"/></name><operator pos:line="90" pos:column="21">.<pos:position pos:line="90" pos:column="22"/></operator><name pos:line="90" pos:column="22">UserLength<pos:position pos:line="90" pos:column="32"/></name></name> <operator pos:line="90" pos:column="33">=<pos:position pos:line="90" pos:column="34"/></operator> <call><name pos:line="90" pos:column="35">strlen<pos:position pos:line="90" pos:column="41"/></name><argument_list pos:line="90" pos:column="41">(<argument><expr><name pos:line="90" pos:column="42">user<pos:position pos:line="90" pos:column="46"/></name></expr></argument>)<pos:position pos:line="90" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="48"/></expr_stmt>
      <if pos:line="91" pos:column="7">if <condition pos:line="91" pos:column="10">(<expr><operator pos:line="91" pos:column="11">(<pos:position pos:line="91" pos:column="12"/></operator><name><name pos:line="91" pos:column="12">ntlm<pos:position pos:line="91" pos:column="16"/></name><operator pos:line="91" pos:column="16">-&gt;<pos:position pos:line="91" pos:column="21"/></operator><name pos:line="91" pos:column="18">identity<pos:position pos:line="91" pos:column="26"/></name><operator pos:line="91" pos:column="26">.<pos:position pos:line="91" pos:column="27"/></operator><name pos:line="91" pos:column="27">Password<pos:position pos:line="91" pos:column="35"/></name></name> <operator pos:line="91" pos:column="36">=<pos:position pos:line="91" pos:column="37"/></operator> <operator pos:line="91" pos:column="38">(<pos:position pos:line="91" pos:column="39"/></operator><name pos:line="91" pos:column="39">unsigned<pos:position pos:line="91" pos:column="47"/></name> <name pos:line="91" pos:column="48">char<pos:position pos:line="91" pos:column="52"/></name> <operator pos:line="91" pos:column="53">*<pos:position pos:line="91" pos:column="54"/></operator><operator pos:line="91" pos:column="54">)<pos:position pos:line="91" pos:column="55"/></operator><call><name pos:line="91" pos:column="55">strdup<pos:position pos:line="91" pos:column="61"/></name><argument_list pos:line="91" pos:column="61">(<argument><expr><name pos:line="91" pos:column="62">passwdp<pos:position pos:line="91" pos:column="69"/></name></expr></argument>)<pos:position pos:line="91" pos:column="70"/></argument_list></call><operator pos:line="91" pos:column="70">)<pos:position pos:line="91" pos:column="71"/></operator> <operator pos:line="91" pos:column="72">==<pos:position pos:line="91" pos:column="74"/></operator> <name pos:line="91" pos:column="75">NULL<pos:position pos:line="91" pos:column="79"/></name></expr>)<pos:position pos:line="91" pos:column="80"/></condition><then pos:line="91" pos:column="80">
        <block type="pseudo"><return pos:line="92" pos:column="9">return <expr><name pos:line="92" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="92" pos:column="35"/></name></expr>;<pos:position pos:line="92" pos:column="36"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="93" pos:column="7">ntlm<pos:position pos:line="93" pos:column="11"/></name><operator pos:line="93" pos:column="11">-&gt;<pos:position pos:line="93" pos:column="16"/></operator><name pos:line="93" pos:column="13">identity<pos:position pos:line="93" pos:column="21"/></name><operator pos:line="93" pos:column="21">.<pos:position pos:line="93" pos:column="22"/></operator><name pos:line="93" pos:column="22">PasswordLength<pos:position pos:line="93" pos:column="36"/></name></name> <operator pos:line="93" pos:column="37">=<pos:position pos:line="93" pos:column="38"/></operator> <call><name pos:line="93" pos:column="39">strlen<pos:position pos:line="93" pos:column="45"/></name><argument_list pos:line="93" pos:column="45">(<argument><expr><name pos:line="93" pos:column="46">passwdp<pos:position pos:line="93" pos:column="53"/></name></expr></argument>)<pos:position pos:line="93" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="55"/></expr_stmt>
      <if pos:line="94" pos:column="7">if <condition pos:line="94" pos:column="10">(<expr><operator pos:line="94" pos:column="11">(<pos:position pos:line="94" pos:column="12"/></operator><name><name pos:line="94" pos:column="12">ntlm<pos:position pos:line="94" pos:column="16"/></name><operator pos:line="94" pos:column="16">-&gt;<pos:position pos:line="94" pos:column="21"/></operator><name pos:line="94" pos:column="18">identity<pos:position pos:line="94" pos:column="26"/></name><operator pos:line="94" pos:column="26">.<pos:position pos:line="94" pos:column="27"/></operator><name pos:line="94" pos:column="27">Domain<pos:position pos:line="94" pos:column="33"/></name></name> <operator pos:line="94" pos:column="34">=<pos:position pos:line="94" pos:column="35"/></operator> <call><name pos:line="94" pos:column="36">malloc<pos:position pos:line="94" pos:column="42"/></name><argument_list pos:line="94" pos:column="42">(<argument><expr><name pos:line="94" pos:column="43">domlen<pos:position pos:line="94" pos:column="49"/></name><operator pos:line="94" pos:column="49">+<pos:position pos:line="94" pos:column="50"/></operator><literal type="number" pos:line="94" pos:column="50">1<pos:position pos:line="94" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="52"/></argument_list></call><operator pos:line="94" pos:column="52">)<pos:position pos:line="94" pos:column="53"/></operator> <operator pos:line="94" pos:column="54">==<pos:position pos:line="94" pos:column="56"/></operator> <name pos:line="94" pos:column="57">NULL<pos:position pos:line="94" pos:column="61"/></name></expr>)<pos:position pos:line="94" pos:column="62"/></condition><then pos:line="94" pos:column="62">
        <block type="pseudo"><return pos:line="95" pos:column="9">return <expr><name pos:line="95" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="95" pos:column="35"/></name></expr>;<pos:position pos:line="95" pos:column="36"/></return></block></then></if>
      <expr_stmt><expr><call><name pos:line="96" pos:column="7">strncpy<pos:position pos:line="96" pos:column="14"/></name><argument_list pos:line="96" pos:column="14">(<argument><expr><operator pos:line="96" pos:column="15">(<pos:position pos:line="96" pos:column="16"/></operator><name pos:line="96" pos:column="16">char<pos:position pos:line="96" pos:column="20"/></name> <operator pos:line="96" pos:column="21">*<pos:position pos:line="96" pos:column="22"/></operator><operator pos:line="96" pos:column="22">)<pos:position pos:line="96" pos:column="23"/></operator><name><name pos:line="96" pos:column="23">ntlm<pos:position pos:line="96" pos:column="27"/></name><operator pos:line="96" pos:column="27">-&gt;<pos:position pos:line="96" pos:column="32"/></operator><name pos:line="96" pos:column="29">identity<pos:position pos:line="96" pos:column="37"/></name><operator pos:line="96" pos:column="37">.<pos:position pos:line="96" pos:column="38"/></operator><name pos:line="96" pos:column="38">Domain<pos:position pos:line="96" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="46">domain<pos:position pos:line="96" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="54">domlen<pos:position pos:line="96" pos:column="60"/></name></expr></argument>)<pos:position pos:line="96" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="97" pos:column="7">ntlm<pos:position pos:line="97" pos:column="11"/></name><operator pos:line="97" pos:column="11">-&gt;<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="13">identity<pos:position pos:line="97" pos:column="21"/></name><operator pos:line="97" pos:column="21">.<pos:position pos:line="97" pos:column="22"/></operator><name pos:line="97" pos:column="22">Domain<pos:position pos:line="97" pos:column="28"/></name><index pos:line="97" pos:column="28">[<expr><name pos:line="97" pos:column="29">domlen<pos:position pos:line="97" pos:column="35"/></name></expr>]<pos:position pos:line="97" pos:column="36"/></index></name> <operator pos:line="97" pos:column="37">=<pos:position pos:line="97" pos:column="38"/></operator> <literal type="char" pos:line="97" pos:column="39">'\0'<pos:position pos:line="97" pos:column="43"/></literal></expr>;<pos:position pos:line="97" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="98" pos:column="7">ntlm<pos:position pos:line="98" pos:column="11"/></name><operator pos:line="98" pos:column="11">-&gt;<pos:position pos:line="98" pos:column="16"/></operator><name pos:line="98" pos:column="13">identity<pos:position pos:line="98" pos:column="21"/></name><operator pos:line="98" pos:column="21">.<pos:position pos:line="98" pos:column="22"/></operator><name pos:line="98" pos:column="22">DomainLength<pos:position pos:line="98" pos:column="34"/></name></name> <operator pos:line="98" pos:column="35">=<pos:position pos:line="98" pos:column="36"/></operator> <name pos:line="98" pos:column="37">domlen<pos:position pos:line="98" pos:column="43"/></name></expr>;<pos:position pos:line="98" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="99" pos:column="7">ntlm<pos:position pos:line="99" pos:column="11"/></name><operator pos:line="99" pos:column="11">-&gt;<pos:position pos:line="99" pos:column="16"/></operator><name pos:line="99" pos:column="13">identity<pos:position pos:line="99" pos:column="21"/></name><operator pos:line="99" pos:column="21">.<pos:position pos:line="99" pos:column="22"/></operator><name pos:line="99" pos:column="22">Flags<pos:position pos:line="99" pos:column="27"/></name></name> <operator pos:line="99" pos:column="28">=<pos:position pos:line="99" pos:column="29"/></operator> <name pos:line="99" pos:column="30">SEC_WINNT_AUTH_IDENTITY_ANSI<pos:position pos:line="99" pos:column="58"/></name></expr>;<pos:position pos:line="99" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then>
    <else pos:line="101" pos:column="5">else <block pos:line="101" pos:column="10">{
      <expr_stmt><expr><name><name pos:line="102" pos:column="7">ntlm<pos:position pos:line="102" pos:column="11"/></name><operator pos:line="102" pos:column="11">-&gt;<pos:position pos:line="102" pos:column="16"/></operator><name pos:line="102" pos:column="13">p_identity<pos:position pos:line="102" pos:column="23"/></name></name> <operator pos:line="102" pos:column="24">=<pos:position pos:line="102" pos:column="25"/></operator> <name pos:line="102" pos:column="26">NULL<pos:position pos:line="102" pos:column="30"/></name></expr>;<pos:position pos:line="102" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="103" pos:column="6"/></block></else></if>

    <if pos:line="105" pos:column="5">if <condition pos:line="105" pos:column="8">(<expr><call><name pos:line="105" pos:column="9">AcquireCredentialsHandle<pos:position pos:line="105" pos:column="33"/></name><argument_list pos:line="105" pos:column="33">(
          <argument><expr><name pos:line="106" pos:column="11">NULL<pos:position pos:line="106" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="17">(<pos:position pos:line="106" pos:column="18"/></operator><name pos:line="106" pos:column="18">char<pos:position pos:line="106" pos:column="22"/></name> <operator pos:line="106" pos:column="23">*<pos:position pos:line="106" pos:column="24"/></operator><operator pos:line="106" pos:column="24">)<pos:position pos:line="106" pos:column="25"/></operator><literal type="string" pos:line="106" pos:column="25">"NTLM"<pos:position pos:line="106" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="33">SECPKG_CRED_OUTBOUND<pos:position pos:line="106" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="55">NULL<pos:position pos:line="106" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="61">ntlm<pos:position pos:line="106" pos:column="65"/></name><operator pos:line="106" pos:column="65">-&gt;<pos:position pos:line="106" pos:column="70"/></operator><name pos:line="106" pos:column="67">p_identity<pos:position pos:line="106" pos:column="77"/></name></name></expr></argument>,
          <argument><expr><name pos:line="107" pos:column="11">NULL<pos:position pos:line="107" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="17">NULL<pos:position pos:line="107" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="23">&amp;<pos:position pos:line="107" pos:column="28"/></operator><name><name pos:line="107" pos:column="24">ntlm<pos:position pos:line="107" pos:column="28"/></name><operator pos:line="107" pos:column="28">-&gt;<pos:position pos:line="107" pos:column="33"/></operator><name pos:line="107" pos:column="30">handle<pos:position pos:line="107" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="38">NULL<pos:position pos:line="107" pos:column="42"/></name></expr></argument>
        )<pos:position pos:line="108" pos:column="10"/></argument_list></call> <operator pos:line="108" pos:column="11">!=<pos:position pos:line="108" pos:column="13"/></operator> <name pos:line="108" pos:column="14">SEC_E_OK<pos:position pos:line="108" pos:column="22"/></name></expr>)<pos:position pos:line="108" pos:column="23"/></condition><then pos:line="108" pos:column="23"> <block pos:line="108" pos:column="24">{
      <return pos:line="109" pos:column="7">return <expr><name pos:line="109" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="109" pos:column="33"/></name></expr>;<pos:position pos:line="109" pos:column="34"/></return>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="112" pos:column="5">desc<pos:position pos:line="112" pos:column="9"/></name><operator pos:line="112" pos:column="9">.<pos:position pos:line="112" pos:column="10"/></operator><name pos:line="112" pos:column="10">ulVersion<pos:position pos:line="112" pos:column="19"/></name></name> <operator pos:line="112" pos:column="20">=<pos:position pos:line="112" pos:column="21"/></operator> <name pos:line="112" pos:column="22">SECBUFFER_VERSION<pos:position pos:line="112" pos:column="39"/></name></expr>;<pos:position pos:line="112" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="113" pos:column="5">desc<pos:position pos:line="113" pos:column="9"/></name><operator pos:line="113" pos:column="9">.<pos:position pos:line="113" pos:column="10"/></operator><name pos:line="113" pos:column="10">cBuffers<pos:position pos:line="113" pos:column="18"/></name></name>  <operator pos:line="113" pos:column="20">=<pos:position pos:line="113" pos:column="21"/></operator> <literal type="number" pos:line="113" pos:column="22">1<pos:position pos:line="113" pos:column="23"/></literal></expr>;<pos:position pos:line="113" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="114" pos:column="5">desc<pos:position pos:line="114" pos:column="9"/></name><operator pos:line="114" pos:column="9">.<pos:position pos:line="114" pos:column="10"/></operator><name pos:line="114" pos:column="10">pBuffers<pos:position pos:line="114" pos:column="18"/></name></name>  <operator pos:line="114" pos:column="20">=<pos:position pos:line="114" pos:column="21"/></operator> <operator pos:line="114" pos:column="22">&amp;<pos:position pos:line="114" pos:column="27"/></operator><name pos:line="114" pos:column="23">buf<pos:position pos:line="114" pos:column="26"/></name></expr>;<pos:position pos:line="114" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="115" pos:column="5">buf<pos:position pos:line="115" pos:column="8"/></name><operator pos:line="115" pos:column="8">.<pos:position pos:line="115" pos:column="9"/></operator><name pos:line="115" pos:column="9">cbBuffer<pos:position pos:line="115" pos:column="17"/></name></name>   <operator pos:line="115" pos:column="20">=<pos:position pos:line="115" pos:column="21"/></operator> <sizeof pos:line="115" pos:column="22">sizeof<argument_list pos:line="115" pos:column="28">(<argument><expr><name pos:line="115" pos:column="29">ntlmbuf<pos:position pos:line="115" pos:column="36"/></name></expr></argument>)<pos:position pos:line="115" pos:column="37"/></argument_list></sizeof></expr>;<pos:position pos:line="115" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="116" pos:column="5">buf<pos:position pos:line="116" pos:column="8"/></name><operator pos:line="116" pos:column="8">.<pos:position pos:line="116" pos:column="9"/></operator><name pos:line="116" pos:column="9">BufferType<pos:position pos:line="116" pos:column="19"/></name></name> <operator pos:line="116" pos:column="20">=<pos:position pos:line="116" pos:column="21"/></operator> <name pos:line="116" pos:column="22">SECBUFFER_TOKEN<pos:position pos:line="116" pos:column="37"/></name></expr>;<pos:position pos:line="116" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="117" pos:column="5">buf<pos:position pos:line="117" pos:column="8"/></name><operator pos:line="117" pos:column="8">.<pos:position pos:line="117" pos:column="9"/></operator><name pos:line="117" pos:column="9">pvBuffer<pos:position pos:line="117" pos:column="17"/></name></name>   <operator pos:line="117" pos:column="20">=<pos:position pos:line="117" pos:column="21"/></operator> <name pos:line="117" pos:column="22">ntlmbuf<pos:position pos:line="117" pos:column="29"/></name></expr>;<pos:position pos:line="117" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><name pos:line="119" pos:column="5">status<pos:position pos:line="119" pos:column="11"/></name> <operator pos:line="119" pos:column="12">=<pos:position pos:line="119" pos:column="13"/></operator> <call><name pos:line="119" pos:column="14">InitializeSecurityContext<pos:position pos:line="119" pos:column="39"/></name><argument_list pos:line="119" pos:column="39">(<argument><expr><operator pos:line="119" pos:column="40">&amp;<pos:position pos:line="119" pos:column="45"/></operator><name><name pos:line="119" pos:column="41">ntlm<pos:position pos:line="119" pos:column="45"/></name><operator pos:line="119" pos:column="45">-&gt;<pos:position pos:line="119" pos:column="50"/></operator><name pos:line="119" pos:column="47">handle<pos:position pos:line="119" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="55">NULL<pos:position pos:line="119" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="119" pos:column="61">(<pos:position pos:line="119" pos:column="62"/></operator><name pos:line="119" pos:column="62">char<pos:position pos:line="119" pos:column="66"/></name> <operator pos:line="119" pos:column="67">*<pos:position pos:line="119" pos:column="68"/></operator><operator pos:line="119" pos:column="68">)<pos:position pos:line="119" pos:column="69"/></operator> <name pos:line="119" pos:column="70">host<pos:position pos:line="119" pos:column="74"/></name></expr></argument>,
                                       <argument><expr><name pos:line="120" pos:column="40">ISC_REQ_CONFIDENTIALITY<pos:position pos:line="120" pos:column="63"/></name> <operator pos:line="120" pos:column="64">|<pos:position pos:line="120" pos:column="65"/></operator>
                                       <name pos:line="121" pos:column="40">ISC_REQ_REPLAY_DETECT<pos:position pos:line="121" pos:column="61"/></name> <operator pos:line="121" pos:column="62">|<pos:position pos:line="121" pos:column="63"/></operator>
                                       <name pos:line="122" pos:column="40">ISC_REQ_CONNECTION<pos:position pos:line="122" pos:column="58"/></name></expr></argument>,
                                       <argument><expr><literal type="number" pos:line="123" pos:column="40">0<pos:position pos:line="123" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="123" pos:column="43">SECURITY_NETWORK_DREP<pos:position pos:line="123" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="66">NULL<pos:position pos:line="123" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="72">0<pos:position pos:line="123" pos:column="73"/></literal></expr></argument>,
                                       <argument><expr><operator pos:line="124" pos:column="40">&amp;<pos:position pos:line="124" pos:column="45"/></operator><name><name pos:line="124" pos:column="41">ntlm<pos:position pos:line="124" pos:column="45"/></name><operator pos:line="124" pos:column="45">-&gt;<pos:position pos:line="124" pos:column="50"/></operator><name pos:line="124" pos:column="47">c_handle<pos:position pos:line="124" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="57">&amp;<pos:position pos:line="124" pos:column="62"/></operator><name pos:line="124" pos:column="58">desc<pos:position pos:line="124" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="64">&amp;<pos:position pos:line="124" pos:column="69"/></operator><name pos:line="124" pos:column="65">attrs<pos:position pos:line="124" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="72">NULL<pos:position pos:line="124" pos:column="76"/></name></expr></argument>
                                      )<pos:position pos:line="125" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="41"/></expr_stmt>

    <if pos:line="127" pos:column="5">if <condition pos:line="127" pos:column="8">(<expr><name pos:line="127" pos:column="9">status<pos:position pos:line="127" pos:column="15"/></name> <operator pos:line="127" pos:column="16">==<pos:position pos:line="127" pos:column="18"/></operator> <name pos:line="127" pos:column="19">SEC_I_COMPLETE_AND_CONTINUE<pos:position pos:line="127" pos:column="46"/></name> <operator pos:line="127" pos:column="47">||<pos:position pos:line="127" pos:column="49"/></operator>
        <name pos:line="128" pos:column="9">status<pos:position pos:line="128" pos:column="15"/></name> <operator pos:line="128" pos:column="16">==<pos:position pos:line="128" pos:column="18"/></operator> <name pos:line="128" pos:column="19">SEC_I_CONTINUE_NEEDED<pos:position pos:line="128" pos:column="40"/></name></expr>)<pos:position pos:line="128" pos:column="41"/></condition><then pos:line="128" pos:column="41"> <block pos:line="128" pos:column="42">{
      <expr_stmt><expr><call><name pos:line="129" pos:column="7">CompleteAuthToken<pos:position pos:line="129" pos:column="24"/></name><argument_list pos:line="129" pos:column="24">(<argument><expr><operator pos:line="129" pos:column="25">&amp;<pos:position pos:line="129" pos:column="30"/></operator><name><name pos:line="129" pos:column="26">ntlm<pos:position pos:line="129" pos:column="30"/></name><operator pos:line="129" pos:column="30">-&gt;<pos:position pos:line="129" pos:column="35"/></operator><name pos:line="129" pos:column="32">c_handle<pos:position pos:line="129" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="129" pos:column="42">&amp;<pos:position pos:line="129" pos:column="47"/></operator><name pos:line="129" pos:column="43">desc<pos:position pos:line="129" pos:column="47"/></name></expr></argument>)<pos:position pos:line="129" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="130" pos:column="6"/></block></then>
    <elseif pos:line="131" pos:column="5">else <if pos:line="131" pos:column="10">if <condition pos:line="131" pos:column="13">(<expr><name pos:line="131" pos:column="14">status<pos:position pos:line="131" pos:column="20"/></name> <operator pos:line="131" pos:column="21">!=<pos:position pos:line="131" pos:column="23"/></operator> <name pos:line="131" pos:column="24">SEC_E_OK<pos:position pos:line="131" pos:column="32"/></name></expr>)<pos:position pos:line="131" pos:column="33"/></condition><then pos:line="131" pos:column="33"> <block pos:line="131" pos:column="34">{
      <expr_stmt><expr><call><name pos:line="132" pos:column="7">FreeCredentialsHandle<pos:position pos:line="132" pos:column="28"/></name><argument_list pos:line="132" pos:column="28">(<argument><expr><operator pos:line="132" pos:column="29">&amp;<pos:position pos:line="132" pos:column="34"/></operator><name><name pos:line="132" pos:column="30">ntlm<pos:position pos:line="132" pos:column="34"/></name><operator pos:line="132" pos:column="34">-&gt;<pos:position pos:line="132" pos:column="39"/></operator><name pos:line="132" pos:column="36">handle<pos:position pos:line="132" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="44"/></expr_stmt>
      <return pos:line="133" pos:column="7">return <expr><name pos:line="133" pos:column="14">CURLE_RECV_ERROR<pos:position pos:line="133" pos:column="30"/></name></expr>;<pos:position pos:line="133" pos:column="31"/></return>
    }<pos:position pos:line="134" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name><name pos:line="136" pos:column="5">ntlm<pos:position pos:line="136" pos:column="9"/></name><operator pos:line="136" pos:column="9">-&gt;<pos:position pos:line="136" pos:column="14"/></operator><name pos:line="136" pos:column="11">has_handles<pos:position pos:line="136" pos:column="22"/></name></name> <operator pos:line="136" pos:column="23">=<pos:position pos:line="136" pos:column="24"/></operator> <literal type="number" pos:line="136" pos:column="25">1<pos:position pos:line="136" pos:column="26"/></literal></expr>;<pos:position pos:line="136" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="137" pos:column="5">size<pos:position pos:line="137" pos:column="9"/></name> <operator pos:line="137" pos:column="10">=<pos:position pos:line="137" pos:column="11"/></operator> <name><name pos:line="137" pos:column="12">buf<pos:position pos:line="137" pos:column="15"/></name><operator pos:line="137" pos:column="15">.<pos:position pos:line="137" pos:column="16"/></operator><name pos:line="137" pos:column="16">cbBuffer<pos:position pos:line="137" pos:column="24"/></name></name></expr>;<pos:position pos:line="137" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="138" pos:column="4"/></block>
<cpp:else pos:line="139" pos:column="1">#<cpp:directive pos:line="139" pos:column="2">else<pos:position pos:line="139" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="140" pos:column="5">hostoff<pos:position pos:line="140" pos:column="12"/></name> <operator pos:line="140" pos:column="13">=<pos:position pos:line="140" pos:column="14"/></operator> <literal type="number" pos:line="140" pos:column="15">32<pos:position pos:line="140" pos:column="17"/></literal></expr>;<pos:position pos:line="140" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="141" pos:column="5">domoff<pos:position pos:line="141" pos:column="11"/></name> <operator pos:line="141" pos:column="12">=<pos:position pos:line="141" pos:column="13"/></operator> <name pos:line="141" pos:column="14">hostoff<pos:position pos:line="141" pos:column="21"/></name> <operator pos:line="141" pos:column="22">+<pos:position pos:line="141" pos:column="23"/></operator> <name pos:line="141" pos:column="24">hostlen<pos:position pos:line="141" pos:column="31"/></name></expr>;<pos:position pos:line="141" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="143" pos:column="5">/* Create and send a type-1 message:

    Index Description          Content
    0     NTLMSSP Signature    Null-terminated ASCII "NTLMSSP"
                               (0x4e544c4d53535000)
    8     NTLM Message Type    long (0x01000000)
    12    Flags                long
    16    Supplied Domain      security buffer(*)
    24    Supplied Workstation security buffer(*)
    32    start of data block

    */</comment>

    <expr_stmt><expr><call><name pos:line="156" pos:column="5">snprintf<pos:position pos:line="156" pos:column="13"/></name><argument_list pos:line="156" pos:column="13">(<argument><expr><operator pos:line="156" pos:column="14">(<pos:position pos:line="156" pos:column="15"/></operator><name pos:line="156" pos:column="15">char<pos:position pos:line="156" pos:column="19"/></name> <operator pos:line="156" pos:column="20">*<pos:position pos:line="156" pos:column="21"/></operator><operator pos:line="156" pos:column="21">)<pos:position pos:line="156" pos:column="22"/></operator><name pos:line="156" pos:column="22">ntlmbuf<pos:position pos:line="156" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="156" pos:column="31">sizeof<argument_list pos:line="156" pos:column="37">(<argument><expr><name pos:line="156" pos:column="38">ntlmbuf<pos:position pos:line="156" pos:column="45"/></name></expr></argument>)<pos:position pos:line="156" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="48">"NTLMSSP%c"<pos:position pos:line="156" pos:column="59"/></literal>
             <literal type="string" pos:line="157" pos:column="14">"\x01%c%c%c"<pos:position pos:line="157" pos:column="26"/></literal> <comment type="block" pos:line="157" pos:column="27">/* 32-bit type = 1 */</comment>
             <literal type="string" pos:line="158" pos:column="14">"%c%c%c%c"<pos:position pos:line="158" pos:column="24"/></literal>   <comment type="block" pos:line="158" pos:column="27">/* 32-bit NTLM flag field */</comment>
             <literal type="string" pos:line="159" pos:column="14">"%c%c"<pos:position pos:line="159" pos:column="20"/></literal>  <comment type="block" pos:line="159" pos:column="22">/* domain length */</comment>
             <literal type="string" pos:line="160" pos:column="14">"%c%c"<pos:position pos:line="160" pos:column="20"/></literal>  <comment type="block" pos:line="160" pos:column="22">/* domain allocated space */</comment>
             <literal type="string" pos:line="161" pos:column="14">"%c%c"<pos:position pos:line="161" pos:column="20"/></literal>  <comment type="block" pos:line="161" pos:column="22">/* domain name offset */</comment>
             <literal type="string" pos:line="162" pos:column="14">"%c%c"<pos:position pos:line="162" pos:column="20"/></literal>  <comment type="block" pos:line="162" pos:column="22">/* 2 zeroes */</comment>
             <literal type="string" pos:line="163" pos:column="14">"%c%c"<pos:position pos:line="163" pos:column="20"/></literal>  <comment type="block" pos:line="163" pos:column="22">/* host length */</comment>
             <literal type="string" pos:line="164" pos:column="14">"%c%c"<pos:position pos:line="164" pos:column="20"/></literal>  <comment type="block" pos:line="164" pos:column="22">/* host allocated space */</comment>
             <literal type="string" pos:line="165" pos:column="14">"%c%c"<pos:position pos:line="165" pos:column="20"/></literal>  <comment type="block" pos:line="165" pos:column="22">/* host name offset */</comment>
             <literal type="string" pos:line="166" pos:column="14">"%c%c"<pos:position pos:line="166" pos:column="20"/></literal>  <comment type="block" pos:line="166" pos:column="22">/* 2 zeroes */</comment>
             <literal type="string" pos:line="167" pos:column="14">"%s"<pos:position pos:line="167" pos:column="18"/></literal>   <comment type="block" pos:line="167" pos:column="21">/* host name */</comment>
             <literal type="string" pos:line="168" pos:column="14">"%s"<pos:position pos:line="168" pos:column="18"/></literal></expr></argument>,  <comment type="block" pos:line="168" pos:column="21">/* domain string */</comment>
             <argument><expr><literal type="number" pos:line="169" pos:column="14">0<pos:position pos:line="169" pos:column="15"/></literal></expr></argument>,     <comment type="block" pos:line="169" pos:column="21">/* trailing zero */</comment>
             <argument><expr><literal type="number" pos:line="170" pos:column="14">0<pos:position pos:line="170" pos:column="15"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="170" pos:column="16">0<pos:position pos:line="170" pos:column="17"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="170" pos:column="18">0<pos:position pos:line="170" pos:column="19"/></literal></expr></argument>, <comment type="block" pos:line="170" pos:column="21">/* part of type-1 long */</comment>

             <argument><expr><call><name pos:line="172" pos:column="14">LONGQUARTET<pos:position pos:line="172" pos:column="25"/></name><argument_list pos:line="172" pos:column="25">(
               <argument><expr><name pos:line="173" pos:column="16">NTLMFLAG_NEGOTIATE_OEM<pos:position pos:line="173" pos:column="38"/></name><operator pos:line="173" pos:column="38">|<pos:position pos:line="173" pos:column="39"/></operator>      <comment type="block" pos:line="173" pos:column="45">/*   2 */</comment>
               <name pos:line="174" pos:column="16">NTLMFLAG_NEGOTIATE_NTLM_KEY<pos:position pos:line="174" pos:column="43"/></name></expr></argument>  <comment type="block" pos:line="174" pos:column="45">/* 200 */</comment>
               <comment type="block" pos:line="175" pos:column="16">/* equals 0x0202 */</comment>
               )<pos:position pos:line="176" pos:column="17"/></argument_list></call></expr></argument>,
             <argument><expr><call><name pos:line="177" pos:column="14">SHORTPAIR<pos:position pos:line="177" pos:column="23"/></name><argument_list pos:line="177" pos:column="23">(<argument><expr><name pos:line="177" pos:column="24">domlen<pos:position pos:line="177" pos:column="30"/></name></expr></argument>)<pos:position pos:line="177" pos:column="31"/></argument_list></call></expr></argument>,
             <argument><expr><call><name pos:line="178" pos:column="14">SHORTPAIR<pos:position pos:line="178" pos:column="23"/></name><argument_list pos:line="178" pos:column="23">(<argument><expr><name pos:line="178" pos:column="24">domlen<pos:position pos:line="178" pos:column="30"/></name></expr></argument>)<pos:position pos:line="178" pos:column="31"/></argument_list></call></expr></argument>,
             <argument><expr><call><name pos:line="179" pos:column="14">SHORTPAIR<pos:position pos:line="179" pos:column="23"/></name><argument_list pos:line="179" pos:column="23">(<argument><expr><name pos:line="179" pos:column="24">domoff<pos:position pos:line="179" pos:column="30"/></name></expr></argument>)<pos:position pos:line="179" pos:column="31"/></argument_list></call></expr></argument>,
             <argument><expr><literal type="number" pos:line="180" pos:column="14">0<pos:position pos:line="180" pos:column="15"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="180" pos:column="16">0<pos:position pos:line="180" pos:column="17"/></literal></expr></argument>,
             <argument><expr><call><name pos:line="181" pos:column="14">SHORTPAIR<pos:position pos:line="181" pos:column="23"/></name><argument_list pos:line="181" pos:column="23">(<argument><expr><name pos:line="181" pos:column="24">hostlen<pos:position pos:line="181" pos:column="31"/></name></expr></argument>)<pos:position pos:line="181" pos:column="32"/></argument_list></call></expr></argument>,
             <argument><expr><call><name pos:line="182" pos:column="14">SHORTPAIR<pos:position pos:line="182" pos:column="23"/></name><argument_list pos:line="182" pos:column="23">(<argument><expr><name pos:line="182" pos:column="24">hostlen<pos:position pos:line="182" pos:column="31"/></name></expr></argument>)<pos:position pos:line="182" pos:column="32"/></argument_list></call></expr></argument>,
             <argument><expr><call><name pos:line="183" pos:column="14">SHORTPAIR<pos:position pos:line="183" pos:column="23"/></name><argument_list pos:line="183" pos:column="23">(<argument><expr><name pos:line="183" pos:column="24">hostoff<pos:position pos:line="183" pos:column="31"/></name></expr></argument>)<pos:position pos:line="183" pos:column="32"/></argument_list></call></expr></argument>,
             <argument><expr><literal type="number" pos:line="184" pos:column="14">0<pos:position pos:line="184" pos:column="15"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="184" pos:column="16">0<pos:position pos:line="184" pos:column="17"/></literal></expr></argument>,
             <argument><expr><name pos:line="185" pos:column="14">host<pos:position pos:line="185" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="20">domain<pos:position pos:line="185" pos:column="26"/></name></expr></argument>)<pos:position pos:line="185" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="187" pos:column="5">/* initial packet length */</comment>
    <expr_stmt><expr><name pos:line="188" pos:column="5">size<pos:position pos:line="188" pos:column="9"/></name> <operator pos:line="188" pos:column="10">=<pos:position pos:line="188" pos:column="11"/></operator> <literal type="number" pos:line="188" pos:column="12">32<pos:position pos:line="188" pos:column="14"/></literal> <operator pos:line="188" pos:column="15">+<pos:position pos:line="188" pos:column="16"/></operator> <name pos:line="188" pos:column="17">hostlen<pos:position pos:line="188" pos:column="24"/></name> <operator pos:line="188" pos:column="25">+<pos:position pos:line="188" pos:column="26"/></operator> <name pos:line="188" pos:column="27">domlen<pos:position pos:line="188" pos:column="33"/></name></expr>;<pos:position pos:line="188" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="189" pos:column="1">#<cpp:directive pos:line="189" pos:column="2">endif<pos:position pos:line="189" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="191" pos:column="5">/* now keeper of the base64 encoded package size */</comment>
    <expr_stmt><expr><name pos:line="192" pos:column="5">size<pos:position pos:line="192" pos:column="9"/></name> <operator pos:line="192" pos:column="10">=<pos:position pos:line="192" pos:column="11"/></operator> <call><name pos:line="192" pos:column="12">Curl_base64_encode<pos:position pos:line="192" pos:column="30"/></name><argument_list pos:line="192" pos:column="30">(<argument><expr><operator pos:line="192" pos:column="31">(<pos:position pos:line="192" pos:column="32"/></operator><name pos:line="192" pos:column="32">char<pos:position pos:line="192" pos:column="36"/></name> <operator pos:line="192" pos:column="37">*<pos:position pos:line="192" pos:column="38"/></operator><operator pos:line="192" pos:column="38">)<pos:position pos:line="192" pos:column="39"/></operator><name pos:line="192" pos:column="39">ntlmbuf<pos:position pos:line="192" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="48">size<pos:position pos:line="192" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="192" pos:column="54">&amp;<pos:position pos:line="192" pos:column="59"/></operator><name pos:line="192" pos:column="55">base64<pos:position pos:line="192" pos:column="61"/></name></expr></argument>)<pos:position pos:line="192" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="63"/></expr_stmt>

    <if pos:line="194" pos:column="5">if<condition pos:line="194" pos:column="7">(<expr><name pos:line="194" pos:column="8">size<pos:position pos:line="194" pos:column="12"/></name> <operator pos:line="194" pos:column="13">&gt;<pos:position pos:line="194" pos:column="17"/></operator><literal type="number" pos:line="194" pos:column="14">0<pos:position pos:line="194" pos:column="15"/></literal></expr> )<pos:position pos:line="194" pos:column="17"/></condition><then pos:line="194" pos:column="17"> <block pos:line="194" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="195" pos:column="7">Curl_safefree<pos:position pos:line="195" pos:column="20"/></name><argument_list pos:line="195" pos:column="20">(<argument><expr><operator pos:line="195" pos:column="21">*<pos:position pos:line="195" pos:column="22"/></operator><name pos:line="195" pos:column="22">allocuserpwd<pos:position pos:line="195" pos:column="34"/></name></expr></argument>)<pos:position pos:line="195" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="196" pos:column="7">*<pos:position pos:line="196" pos:column="8"/></operator><name pos:line="196" pos:column="8">allocuserpwd<pos:position pos:line="196" pos:column="20"/></name> <operator pos:line="196" pos:column="21">=<pos:position pos:line="196" pos:column="22"/></operator> <call><name pos:line="196" pos:column="23">aprintf<pos:position pos:line="196" pos:column="30"/></name><argument_list pos:line="196" pos:column="30">(<argument><expr><literal type="string" pos:line="196" pos:column="31">"%sAuthorization: NTLM %s\r\n"<pos:position pos:line="196" pos:column="61"/></literal></expr></argument>,
                              <argument><expr><ternary><condition><expr><name pos:line="197" pos:column="31">proxy<pos:position pos:line="197" pos:column="36"/></name></expr>?<pos:position pos:line="197" pos:column="37"/></condition><then><expr><literal type="string" pos:line="197" pos:column="37">"Proxy-"<pos:position pos:line="197" pos:column="45"/></literal></expr></then><else pos:line="197" pos:column="45">:<expr><literal type="string" pos:line="197" pos:column="46">""<pos:position pos:line="197" pos:column="48"/></literal></expr></else></ternary></expr></argument>,
                              <argument><expr><name pos:line="198" pos:column="31">base64<pos:position pos:line="198" pos:column="37"/></name></expr></argument>)<pos:position pos:line="198" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="199" pos:column="7">free<pos:position pos:line="199" pos:column="11"/></name><argument_list pos:line="199" pos:column="11">(<argument><expr><name pos:line="199" pos:column="12">base64<pos:position pos:line="199" pos:column="18"/></name></expr></argument>)<pos:position pos:line="199" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="200" pos:column="6"/></block></then>
    <else pos:line="201" pos:column="5">else
      <block type="pseudo"><return pos:line="202" pos:column="7">return <expr><name pos:line="202" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="202" pos:column="33"/></name></expr>;<pos:position pos:line="202" pos:column="34"/></return></block></else></if> <comment type="block" pos:line="202" pos:column="35">/* FIX TODO */</comment>

    <break pos:line="204" pos:column="5">break;<pos:position pos:line="204" pos:column="11"/></break>

  <case pos:line="206" pos:column="3">case <expr><name pos:line="206" pos:column="8">NTLMSTATE_TYPE2<pos:position pos:line="206" pos:column="23"/></name></expr>:<pos:position pos:line="206" pos:column="24"/></case>
    <comment type="block" pos:line="207" pos:column="5">/* We received the type-2 already, create a type-3 message:

    Index   Description            Content
    0       NTLMSSP Signature      Null-terminated ASCII "NTLMSSP"
                                   (0x4e544c4d53535000)
    8       NTLM Message Type      long (0x03000000)
    12      LM/LMv2 Response       security buffer(*)
    20      NTLM/NTLMv2 Response   security buffer(*)
    28      Domain Name            security buffer(*)
    36      User Name              security buffer(*)
    44      Workstation Name       security buffer(*)
    (52)    Session Key (optional) security buffer(*)
    (60)    Flags (optional)       long
    52 (64) start of data block

    */</comment>

  <block pos:line="224" pos:column="3">{
<cpp:ifdef pos:line="225" pos:column="1">#<cpp:directive pos:line="225" pos:column="2">ifdef<pos:position pos:line="225" pos:column="7"/></cpp:directive> <name pos:line="225" pos:column="8">USE_WINDOWS_SSPI<pos:position pos:line="225" pos:column="24"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="226" pos:column="5">SecBuffer<pos:position pos:line="226" pos:column="14"/></name></type> <name pos:line="226" pos:column="15">type_2<pos:position pos:line="226" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="226" pos:column="23">type_3<pos:position pos:line="226" pos:column="29"/></name></decl>;<pos:position pos:line="226" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="227" pos:column="5">SecBufferDesc<pos:position pos:line="227" pos:column="18"/></name></type> <name pos:line="227" pos:column="19">type_2_desc<pos:position pos:line="227" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="227" pos:column="32">type_3_desc<pos:position pos:line="227" pos:column="43"/></name></decl>;<pos:position pos:line="227" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="228" pos:column="5">SECURITY_STATUS<pos:position pos:line="228" pos:column="20"/></name></type> <name pos:line="228" pos:column="21">status<pos:position pos:line="228" pos:column="27"/></name></decl>;<pos:position pos:line="228" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="229" pos:column="5">ULONG<pos:position pos:line="229" pos:column="10"/></name></type> <name pos:line="229" pos:column="11">attrs<pos:position pos:line="229" pos:column="16"/></name></decl>;<pos:position pos:line="229" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="231" pos:column="5">type_2_desc<pos:position pos:line="231" pos:column="16"/></name><operator pos:line="231" pos:column="16">.<pos:position pos:line="231" pos:column="17"/></operator><name pos:line="231" pos:column="17">ulVersion<pos:position pos:line="231" pos:column="26"/></name></name>  <operator pos:line="231" pos:column="28">=<pos:position pos:line="231" pos:column="29"/></operator> <name><name pos:line="231" pos:column="30">type_3_desc<pos:position pos:line="231" pos:column="41"/></name><operator pos:line="231" pos:column="41">.<pos:position pos:line="231" pos:column="42"/></operator><name pos:line="231" pos:column="42">ulVersion<pos:position pos:line="231" pos:column="51"/></name></name>  <operator pos:line="231" pos:column="53">=<pos:position pos:line="231" pos:column="54"/></operator> <name pos:line="231" pos:column="55">SECBUFFER_VERSION<pos:position pos:line="231" pos:column="72"/></name></expr>;<pos:position pos:line="231" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="232" pos:column="5">type_2_desc<pos:position pos:line="232" pos:column="16"/></name><operator pos:line="232" pos:column="16">.<pos:position pos:line="232" pos:column="17"/></operator><name pos:line="232" pos:column="17">cBuffers<pos:position pos:line="232" pos:column="25"/></name></name>   <operator pos:line="232" pos:column="28">=<pos:position pos:line="232" pos:column="29"/></operator> <name><name pos:line="232" pos:column="30">type_3_desc<pos:position pos:line="232" pos:column="41"/></name><operator pos:line="232" pos:column="41">.<pos:position pos:line="232" pos:column="42"/></operator><name pos:line="232" pos:column="42">cBuffers<pos:position pos:line="232" pos:column="50"/></name></name>   <operator pos:line="232" pos:column="53">=<pos:position pos:line="232" pos:column="54"/></operator> <literal type="number" pos:line="232" pos:column="55">1<pos:position pos:line="232" pos:column="56"/></literal></expr>;<pos:position pos:line="232" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="233" pos:column="5">type_2_desc<pos:position pos:line="233" pos:column="16"/></name><operator pos:line="233" pos:column="16">.<pos:position pos:line="233" pos:column="17"/></operator><name pos:line="233" pos:column="17">pBuffers<pos:position pos:line="233" pos:column="25"/></name></name>   <operator pos:line="233" pos:column="28">=<pos:position pos:line="233" pos:column="29"/></operator> <operator pos:line="233" pos:column="30">&amp;<pos:position pos:line="233" pos:column="35"/></operator><name pos:line="233" pos:column="31">type_2<pos:position pos:line="233" pos:column="37"/></name></expr>;<pos:position pos:line="233" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="234" pos:column="5">type_3_desc<pos:position pos:line="234" pos:column="16"/></name><operator pos:line="234" pos:column="16">.<pos:position pos:line="234" pos:column="17"/></operator><name pos:line="234" pos:column="17">pBuffers<pos:position pos:line="234" pos:column="25"/></name></name>   <operator pos:line="234" pos:column="28">=<pos:position pos:line="234" pos:column="29"/></operator> <operator pos:line="234" pos:column="30">&amp;<pos:position pos:line="234" pos:column="35"/></operator><name pos:line="234" pos:column="31">type_3<pos:position pos:line="234" pos:column="37"/></name></expr>;<pos:position pos:line="234" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="236" pos:column="5">type_2<pos:position pos:line="236" pos:column="11"/></name><operator pos:line="236" pos:column="11">.<pos:position pos:line="236" pos:column="12"/></operator><name pos:line="236" pos:column="12">BufferType<pos:position pos:line="236" pos:column="22"/></name></name> <operator pos:line="236" pos:column="23">=<pos:position pos:line="236" pos:column="24"/></operator> <name pos:line="236" pos:column="25">SECBUFFER_TOKEN<pos:position pos:line="236" pos:column="40"/></name></expr>;<pos:position pos:line="236" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="237" pos:column="5">type_2<pos:position pos:line="237" pos:column="11"/></name><operator pos:line="237" pos:column="11">.<pos:position pos:line="237" pos:column="12"/></operator><name pos:line="237" pos:column="12">pvBuffer<pos:position pos:line="237" pos:column="20"/></name></name>   <operator pos:line="237" pos:column="23">=<pos:position pos:line="237" pos:column="24"/></operator> <name><name pos:line="237" pos:column="25">ntlm<pos:position pos:line="237" pos:column="29"/></name><operator pos:line="237" pos:column="29">-&gt;<pos:position pos:line="237" pos:column="34"/></operator><name pos:line="237" pos:column="31">type_2<pos:position pos:line="237" pos:column="37"/></name></name></expr>;<pos:position pos:line="237" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="238" pos:column="5">type_2<pos:position pos:line="238" pos:column="11"/></name><operator pos:line="238" pos:column="11">.<pos:position pos:line="238" pos:column="12"/></operator><name pos:line="238" pos:column="12">cbBuffer<pos:position pos:line="238" pos:column="20"/></name></name>   <operator pos:line="238" pos:column="23">=<pos:position pos:line="238" pos:column="24"/></operator> <name><name pos:line="238" pos:column="25">ntlm<pos:position pos:line="238" pos:column="29"/></name><operator pos:line="238" pos:column="29">-&gt;<pos:position pos:line="238" pos:column="34"/></operator><name pos:line="238" pos:column="31">n_type_2<pos:position pos:line="238" pos:column="39"/></name></name></expr>;<pos:position pos:line="238" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="239" pos:column="5">type_3<pos:position pos:line="239" pos:column="11"/></name><operator pos:line="239" pos:column="11">.<pos:position pos:line="239" pos:column="12"/></operator><name pos:line="239" pos:column="12">BufferType<pos:position pos:line="239" pos:column="22"/></name></name> <operator pos:line="239" pos:column="23">=<pos:position pos:line="239" pos:column="24"/></operator> <name pos:line="239" pos:column="25">SECBUFFER_TOKEN<pos:position pos:line="239" pos:column="40"/></name></expr>;<pos:position pos:line="239" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="240" pos:column="5">type_3<pos:position pos:line="240" pos:column="11"/></name><operator pos:line="240" pos:column="11">.<pos:position pos:line="240" pos:column="12"/></operator><name pos:line="240" pos:column="12">pvBuffer<pos:position pos:line="240" pos:column="20"/></name></name>   <operator pos:line="240" pos:column="23">=<pos:position pos:line="240" pos:column="24"/></operator> <name pos:line="240" pos:column="25">ntlmbuf<pos:position pos:line="240" pos:column="32"/></name></expr>;<pos:position pos:line="240" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="241" pos:column="5">type_3<pos:position pos:line="241" pos:column="11"/></name><operator pos:line="241" pos:column="11">.<pos:position pos:line="241" pos:column="12"/></operator><name pos:line="241" pos:column="12">cbBuffer<pos:position pos:line="241" pos:column="20"/></name></name>   <operator pos:line="241" pos:column="23">=<pos:position pos:line="241" pos:column="24"/></operator> <sizeof pos:line="241" pos:column="25">sizeof<argument_list pos:line="241" pos:column="31">(<argument><expr><name pos:line="241" pos:column="32">ntlmbuf<pos:position pos:line="241" pos:column="39"/></name></expr></argument>)<pos:position pos:line="241" pos:column="40"/></argument_list></sizeof></expr>;<pos:position pos:line="241" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name pos:line="243" pos:column="5">status<pos:position pos:line="243" pos:column="11"/></name> <operator pos:line="243" pos:column="12">=<pos:position pos:line="243" pos:column="13"/></operator> <call><name pos:line="243" pos:column="14">InitializeSecurityContext<pos:position pos:line="243" pos:column="39"/></name><argument_list pos:line="243" pos:column="39">(<argument><expr><operator pos:line="243" pos:column="40">&amp;<pos:position pos:line="243" pos:column="45"/></operator><name><name pos:line="243" pos:column="41">ntlm<pos:position pos:line="243" pos:column="45"/></name><operator pos:line="243" pos:column="45">-&gt;<pos:position pos:line="243" pos:column="50"/></operator><name pos:line="243" pos:column="47">handle<pos:position pos:line="243" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="243" pos:column="55">&amp;<pos:position pos:line="243" pos:column="60"/></operator><name><name pos:line="243" pos:column="56">ntlm<pos:position pos:line="243" pos:column="60"/></name><operator pos:line="243" pos:column="60">-&gt;<pos:position pos:line="243" pos:column="65"/></operator><name pos:line="243" pos:column="62">c_handle<pos:position pos:line="243" pos:column="70"/></name></name></expr></argument>,
                                       <argument><expr><operator pos:line="244" pos:column="40">(<pos:position pos:line="244" pos:column="41"/></operator><name pos:line="244" pos:column="41">char<pos:position pos:line="244" pos:column="45"/></name> <operator pos:line="244" pos:column="46">*<pos:position pos:line="244" pos:column="47"/></operator><operator pos:line="244" pos:column="47">)<pos:position pos:line="244" pos:column="48"/></operator> <name pos:line="244" pos:column="49">host<pos:position pos:line="244" pos:column="53"/></name></expr></argument>,
                                       <argument><expr><name pos:line="245" pos:column="40">ISC_REQ_CONFIDENTIALITY<pos:position pos:line="245" pos:column="63"/></name> <operator pos:line="245" pos:column="64">|<pos:position pos:line="245" pos:column="65"/></operator>
                                       <name pos:line="246" pos:column="40">ISC_REQ_REPLAY_DETECT<pos:position pos:line="246" pos:column="61"/></name> <operator pos:line="246" pos:column="62">|<pos:position pos:line="246" pos:column="63"/></operator>
                                       <name pos:line="247" pos:column="40">ISC_REQ_CONNECTION<pos:position pos:line="247" pos:column="58"/></name></expr></argument>,
                                       <argument><expr><literal type="number" pos:line="248" pos:column="40">0<pos:position pos:line="248" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="248" pos:column="43">SECURITY_NETWORK_DREP<pos:position pos:line="248" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="248" pos:column="66">&amp;<pos:position pos:line="248" pos:column="71"/></operator><name pos:line="248" pos:column="67">type_2_desc<pos:position pos:line="248" pos:column="78"/></name></expr></argument>,
                                       <argument><expr><literal type="number" pos:line="249" pos:column="40">0<pos:position pos:line="249" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="249" pos:column="43">&amp;<pos:position pos:line="249" pos:column="48"/></operator><name><name pos:line="249" pos:column="44">ntlm<pos:position pos:line="249" pos:column="48"/></name><operator pos:line="249" pos:column="48">-&gt;<pos:position pos:line="249" pos:column="53"/></operator><name pos:line="249" pos:column="50">c_handle<pos:position pos:line="249" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="249" pos:column="60">&amp;<pos:position pos:line="249" pos:column="65"/></operator><name pos:line="249" pos:column="61">type_3_desc<pos:position pos:line="249" pos:column="72"/></name></expr></argument>,
                                       <argument><expr><operator pos:line="250" pos:column="40">&amp;<pos:position pos:line="250" pos:column="45"/></operator><name pos:line="250" pos:column="41">attrs<pos:position pos:line="250" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="48">NULL<pos:position pos:line="250" pos:column="52"/></name></expr></argument>)<pos:position pos:line="250" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="54"/></expr_stmt>

    <if pos:line="252" pos:column="5">if <condition pos:line="252" pos:column="8">(<expr><name pos:line="252" pos:column="9">status<pos:position pos:line="252" pos:column="15"/></name> <operator pos:line="252" pos:column="16">!=<pos:position pos:line="252" pos:column="18"/></operator> <name pos:line="252" pos:column="19">SEC_E_OK<pos:position pos:line="252" pos:column="27"/></name></expr>)<pos:position pos:line="252" pos:column="28"/></condition><then pos:line="252" pos:column="28">
      <block type="pseudo"><return pos:line="253" pos:column="7">return <expr><name pos:line="253" pos:column="14">CURLE_RECV_ERROR<pos:position pos:line="253" pos:column="30"/></name></expr>;<pos:position pos:line="253" pos:column="31"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="255" pos:column="5">size<pos:position pos:line="255" pos:column="9"/></name> <operator pos:line="255" pos:column="10">=<pos:position pos:line="255" pos:column="11"/></operator> <name><name pos:line="255" pos:column="12">type_3<pos:position pos:line="255" pos:column="18"/></name><operator pos:line="255" pos:column="18">.<pos:position pos:line="255" pos:column="19"/></operator><name pos:line="255" pos:column="19">cbBuffer<pos:position pos:line="255" pos:column="27"/></name></name></expr>;<pos:position pos:line="255" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="257" pos:column="5">ntlm_sspi_cleanup<pos:position pos:line="257" pos:column="22"/></name><argument_list pos:line="257" pos:column="22">(<argument><expr><name pos:line="257" pos:column="23">ntlm<pos:position pos:line="257" pos:column="27"/></name></expr></argument>)<pos:position pos:line="257" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="29"/></expr_stmt>

<cpp:else pos:line="259" pos:column="1">#<cpp:directive pos:line="259" pos:column="2">else<pos:position pos:line="259" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="260" pos:column="5">int<pos:position pos:line="260" pos:column="8"/></name></type> <name pos:line="260" pos:column="9">lmrespoff<pos:position pos:line="260" pos:column="18"/></name></decl>;<pos:position pos:line="260" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="261" pos:column="5">int<pos:position pos:line="261" pos:column="8"/></name></type> <name pos:line="261" pos:column="9">ntrespoff<pos:position pos:line="261" pos:column="18"/></name></decl>;<pos:position pos:line="261" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="262" pos:column="5">int<pos:position pos:line="262" pos:column="8"/></name></type> <name pos:line="262" pos:column="9">useroff<pos:position pos:line="262" pos:column="16"/></name></decl>;<pos:position pos:line="262" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="263" pos:column="5">unsigned<pos:position pos:line="263" pos:column="13"/></name> <name pos:line="263" pos:column="14">char<pos:position pos:line="263" pos:column="18"/></name></type> <name><name pos:line="263" pos:column="19">lmresp<pos:position pos:line="263" pos:column="25"/></name><index pos:line="263" pos:column="25">[<expr><literal type="number" pos:line="263" pos:column="26">0x18<pos:position pos:line="263" pos:column="30"/></literal></expr>]<pos:position pos:line="263" pos:column="31"/></index></name></decl>;<pos:position pos:line="263" pos:column="32"/></decl_stmt> <comment type="block" pos:line="263" pos:column="33">/* fixed-size */</comment>
<cpp:ifdef pos:line="264" pos:column="1">#<cpp:directive pos:line="264" pos:column="2">ifdef<pos:position pos:line="264" pos:column="7"/></cpp:directive> <name pos:line="264" pos:column="8">USE_NTRESPONSES<pos:position pos:line="264" pos:column="23"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="265" pos:column="5">unsigned<pos:position pos:line="265" pos:column="13"/></name> <name pos:line="265" pos:column="14">char<pos:position pos:line="265" pos:column="18"/></name></type> <name><name pos:line="265" pos:column="19">ntresp<pos:position pos:line="265" pos:column="25"/></name><index pos:line="265" pos:column="25">[<expr><literal type="number" pos:line="265" pos:column="26">0x18<pos:position pos:line="265" pos:column="30"/></literal></expr>]<pos:position pos:line="265" pos:column="31"/></index></name></decl>;<pos:position pos:line="265" pos:column="32"/></decl_stmt> <comment type="block" pos:line="265" pos:column="33">/* fixed-size */</comment>
<cpp:endif pos:line="266" pos:column="1">#<cpp:directive pos:line="266" pos:column="2">endif<pos:position pos:line="266" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><specifier pos:line="267" pos:column="5">const<pos:position pos:line="267" pos:column="10"/></specifier> <name pos:line="267" pos:column="11">char<pos:position pos:line="267" pos:column="15"/></name> <modifier pos:line="267" pos:column="16">*<pos:position pos:line="267" pos:column="17"/></modifier></type><name pos:line="267" pos:column="17">user<pos:position pos:line="267" pos:column="21"/></name></decl>;<pos:position pos:line="267" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="268" pos:column="5">int<pos:position pos:line="268" pos:column="8"/></name></type> <name pos:line="268" pos:column="9">userlen<pos:position pos:line="268" pos:column="16"/></name></decl>;<pos:position pos:line="268" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name pos:line="270" pos:column="5">user<pos:position pos:line="270" pos:column="9"/></name> <operator pos:line="270" pos:column="10">=<pos:position pos:line="270" pos:column="11"/></operator> <call><name pos:line="270" pos:column="12">strchr<pos:position pos:line="270" pos:column="18"/></name><argument_list pos:line="270" pos:column="18">(<argument><expr><name pos:line="270" pos:column="19">userp<pos:position pos:line="270" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="270" pos:column="26">'\\'<pos:position pos:line="270" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="270" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="32"/></expr_stmt>
    <if pos:line="271" pos:column="5">if<condition pos:line="271" pos:column="7">(<expr><operator pos:line="271" pos:column="8">!<pos:position pos:line="271" pos:column="9"/></operator><name pos:line="271" pos:column="9">user<pos:position pos:line="271" pos:column="13"/></name></expr>)<pos:position pos:line="271" pos:column="14"/></condition><then pos:line="271" pos:column="14">
      <block type="pseudo"><expr_stmt><expr><name pos:line="272" pos:column="7">user<pos:position pos:line="272" pos:column="11"/></name> <operator pos:line="272" pos:column="12">=<pos:position pos:line="272" pos:column="13"/></operator> <call><name pos:line="272" pos:column="14">strchr<pos:position pos:line="272" pos:column="20"/></name><argument_list pos:line="272" pos:column="20">(<argument><expr><name pos:line="272" pos:column="21">userp<pos:position pos:line="272" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="272" pos:column="28">'/'<pos:position pos:line="272" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="272" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="33"/></expr_stmt></block></then></if>

    <if pos:line="274" pos:column="5">if <condition pos:line="274" pos:column="8">(<expr><name pos:line="274" pos:column="9">user<pos:position pos:line="274" pos:column="13"/></name></expr>)<pos:position pos:line="274" pos:column="14"/></condition><then pos:line="274" pos:column="14"> <block pos:line="274" pos:column="15">{
      <expr_stmt><expr><name pos:line="275" pos:column="7">domain<pos:position pos:line="275" pos:column="13"/></name> <operator pos:line="275" pos:column="14">=<pos:position pos:line="275" pos:column="15"/></operator> <name pos:line="275" pos:column="16">userp<pos:position pos:line="275" pos:column="21"/></name></expr>;<pos:position pos:line="275" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="276" pos:column="7">domlen<pos:position pos:line="276" pos:column="13"/></name> <operator pos:line="276" pos:column="14">=<pos:position pos:line="276" pos:column="15"/></operator> <call pos:line="276" pos:column="16">(<name pos:line="276" pos:column="17">int<pos:position pos:line="276" pos:column="20"/></name>)<argument_list pos:line="276" pos:column="21">(<argument><expr><name pos:line="276" pos:column="22">user<pos:position pos:line="276" pos:column="26"/></name> <operator pos:line="276" pos:column="27">-<pos:position pos:line="276" pos:column="28"/></operator> <name pos:line="276" pos:column="29">domain<pos:position pos:line="276" pos:column="35"/></name></expr></argument>)<pos:position pos:line="276" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name pos:line="277" pos:column="7">user<pos:position pos:line="277" pos:column="11"/></name><operator pos:line="277" pos:column="11">++<pos:position pos:line="277" pos:column="13"/></operator></expr>;<pos:position pos:line="277" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="278" pos:column="6"/></block></then>
    <else pos:line="279" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="280" pos:column="7">user<pos:position pos:line="280" pos:column="11"/></name> <operator pos:line="280" pos:column="12">=<pos:position pos:line="280" pos:column="13"/></operator> <name pos:line="280" pos:column="14">userp<pos:position pos:line="280" pos:column="19"/></name></expr>;<pos:position pos:line="280" pos:column="20"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name pos:line="281" pos:column="5">userlen<pos:position pos:line="281" pos:column="12"/></name> <operator pos:line="281" pos:column="13">=<pos:position pos:line="281" pos:column="14"/></operator> <operator pos:line="281" pos:column="15">(<pos:position pos:line="281" pos:column="16"/></operator><name pos:line="281" pos:column="16">int<pos:position pos:line="281" pos:column="19"/></name><operator pos:line="281" pos:column="19">)<pos:position pos:line="281" pos:column="20"/></operator><call><name pos:line="281" pos:column="20">strlen<pos:position pos:line="281" pos:column="26"/></name><argument_list pos:line="281" pos:column="26">(<argument><expr><name pos:line="281" pos:column="27">user<pos:position pos:line="281" pos:column="31"/></name></expr></argument>)<pos:position pos:line="281" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="283" pos:column="5">mkhash<pos:position pos:line="283" pos:column="11"/></name><argument_list pos:line="283" pos:column="11">(<argument><expr><name pos:line="283" pos:column="12">passwdp<pos:position pos:line="283" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="283" pos:column="21">&amp;<pos:position pos:line="283" pos:column="26"/></operator><name><name pos:line="283" pos:column="22">ntlm<pos:position pos:line="283" pos:column="26"/></name><operator pos:line="283" pos:column="26">-&gt;<pos:position pos:line="283" pos:column="31"/></operator><name pos:line="283" pos:column="28">nonce<pos:position pos:line="283" pos:column="33"/></name><index pos:line="283" pos:column="33">[<expr><literal type="number" pos:line="283" pos:column="34">0<pos:position pos:line="283" pos:column="35"/></literal></expr>]<pos:position pos:line="283" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="38">lmresp<pos:position pos:line="283" pos:column="44"/></name></expr></argument>
<cpp:ifdef pos:line="284" pos:column="1">#<cpp:directive pos:line="284" pos:column="2">ifdef<pos:position pos:line="284" pos:column="7"/></cpp:directive> <name pos:line="284" pos:column="8">USE_NTRESPONSES<pos:position pos:line="284" pos:column="23"/></name></cpp:ifdef>
           , <argument><expr><name pos:line="285" pos:column="14">ntresp<pos:position pos:line="285" pos:column="20"/></name></expr></argument>
<cpp:endif pos:line="286" pos:column="1">#<cpp:directive pos:line="286" pos:column="2">endif<pos:position pos:line="286" pos:column="7"/></cpp:directive></cpp:endif>
      )<pos:position pos:line="287" pos:column="8"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="9"/></expr_stmt>

    <expr_stmt><expr><name pos:line="289" pos:column="5">domoff<pos:position pos:line="289" pos:column="11"/></name> <operator pos:line="289" pos:column="12">=<pos:position pos:line="289" pos:column="13"/></operator> <literal type="number" pos:line="289" pos:column="14">64<pos:position pos:line="289" pos:column="16"/></literal></expr>;<pos:position pos:line="289" pos:column="17"/></expr_stmt> <comment type="block" pos:line="289" pos:column="18">/* always */</comment>
    <expr_stmt><expr><name pos:line="290" pos:column="5">useroff<pos:position pos:line="290" pos:column="12"/></name> <operator pos:line="290" pos:column="13">=<pos:position pos:line="290" pos:column="14"/></operator> <name pos:line="290" pos:column="15">domoff<pos:position pos:line="290" pos:column="21"/></name> <operator pos:line="290" pos:column="22">+<pos:position pos:line="290" pos:column="23"/></operator> <name pos:line="290" pos:column="24">domlen<pos:position pos:line="290" pos:column="30"/></name></expr>;<pos:position pos:line="290" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="291" pos:column="5">hostoff<pos:position pos:line="291" pos:column="12"/></name> <operator pos:line="291" pos:column="13">=<pos:position pos:line="291" pos:column="14"/></operator> <name pos:line="291" pos:column="15">useroff<pos:position pos:line="291" pos:column="22"/></name> <operator pos:line="291" pos:column="23">+<pos:position pos:line="291" pos:column="24"/></operator> <name pos:line="291" pos:column="25">userlen<pos:position pos:line="291" pos:column="32"/></name></expr>;<pos:position pos:line="291" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="292" pos:column="5">lmrespoff<pos:position pos:line="292" pos:column="14"/></name> <operator pos:line="292" pos:column="15">=<pos:position pos:line="292" pos:column="16"/></operator> <name pos:line="292" pos:column="17">hostoff<pos:position pos:line="292" pos:column="24"/></name> <operator pos:line="292" pos:column="25">+<pos:position pos:line="292" pos:column="26"/></operator> <name pos:line="292" pos:column="27">hostlen<pos:position pos:line="292" pos:column="34"/></name></expr>;<pos:position pos:line="292" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="293" pos:column="5">ntrespoff<pos:position pos:line="293" pos:column="14"/></name> <operator pos:line="293" pos:column="15">=<pos:position pos:line="293" pos:column="16"/></operator> <name pos:line="293" pos:column="17">lmrespoff<pos:position pos:line="293" pos:column="26"/></name> <operator pos:line="293" pos:column="27">+<pos:position pos:line="293" pos:column="28"/></operator> <literal type="number" pos:line="293" pos:column="29">0x18<pos:position pos:line="293" pos:column="33"/></literal></expr>;<pos:position pos:line="293" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="295" pos:column="5">/* Create the big type-3 message binary blob */</comment>
    <expr_stmt><expr><name pos:line="296" pos:column="5">size<pos:position pos:line="296" pos:column="9"/></name> <operator pos:line="296" pos:column="10">=<pos:position pos:line="296" pos:column="11"/></operator> <call><name pos:line="296" pos:column="12">snprintf<pos:position pos:line="296" pos:column="20"/></name><argument_list pos:line="296" pos:column="20">(<argument><expr><operator pos:line="296" pos:column="21">(<pos:position pos:line="296" pos:column="22"/></operator><name pos:line="296" pos:column="22">char<pos:position pos:line="296" pos:column="26"/></name> <operator pos:line="296" pos:column="27">*<pos:position pos:line="296" pos:column="28"/></operator><operator pos:line="296" pos:column="28">)<pos:position pos:line="296" pos:column="29"/></operator><name pos:line="296" pos:column="29">ntlmbuf<pos:position pos:line="296" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="296" pos:column="38">sizeof<argument_list pos:line="296" pos:column="44">(<argument><expr><name pos:line="296" pos:column="45">ntlmbuf<pos:position pos:line="296" pos:column="52"/></name></expr></argument>)<pos:position pos:line="296" pos:column="53"/></argument_list></sizeof></expr></argument>,
                    <argument><expr><literal type="string" pos:line="297" pos:column="21">"NTLMSSP%c"<pos:position pos:line="297" pos:column="32"/></literal>
                    <literal type="string" pos:line="298" pos:column="21">"\x03%c%c%c"<pos:position pos:line="298" pos:column="33"/></literal> <comment type="block" pos:line="298" pos:column="34">/* type-3, 32 bits */</comment>

                    <literal type="string" pos:line="300" pos:column="21">"%c%c%c%c"<pos:position pos:line="300" pos:column="31"/></literal> <comment type="block" pos:line="300" pos:column="32">/* LanManager length + allocated space */</comment>
                    <literal type="string" pos:line="301" pos:column="21">"%c%c"<pos:position pos:line="301" pos:column="27"/></literal> <comment type="block" pos:line="301" pos:column="28">/* LanManager offset */</comment>
                    <literal type="string" pos:line="302" pos:column="21">"%c%c"<pos:position pos:line="302" pos:column="27"/></literal> <comment type="block" pos:line="302" pos:column="28">/* 2 zeroes */</comment>

                    <literal type="string" pos:line="304" pos:column="21">"%c%c"<pos:position pos:line="304" pos:column="27"/></literal> <comment type="block" pos:line="304" pos:column="28">/* NT-response length */</comment>
                    <literal type="string" pos:line="305" pos:column="21">"%c%c"<pos:position pos:line="305" pos:column="27"/></literal> <comment type="block" pos:line="305" pos:column="28">/* NT-response allocated space */</comment>
                    <literal type="string" pos:line="306" pos:column="21">"%c%c"<pos:position pos:line="306" pos:column="27"/></literal> <comment type="block" pos:line="306" pos:column="28">/* NT-response offset */</comment>
                    <literal type="string" pos:line="307" pos:column="21">"%c%c"<pos:position pos:line="307" pos:column="27"/></literal> <comment type="block" pos:line="307" pos:column="28">/* 2 zeroes */</comment>

                    <literal type="string" pos:line="309" pos:column="21">"%c%c"<pos:position pos:line="309" pos:column="27"/></literal>  <comment type="block" pos:line="309" pos:column="29">/* domain length */</comment>
                    <literal type="string" pos:line="310" pos:column="21">"%c%c"<pos:position pos:line="310" pos:column="27"/></literal>  <comment type="block" pos:line="310" pos:column="29">/* domain allocated space */</comment>
                    <literal type="string" pos:line="311" pos:column="21">"%c%c"<pos:position pos:line="311" pos:column="27"/></literal>  <comment type="block" pos:line="311" pos:column="29">/* domain name offset */</comment>
                    <literal type="string" pos:line="312" pos:column="21">"%c%c"<pos:position pos:line="312" pos:column="27"/></literal>  <comment type="block" pos:line="312" pos:column="29">/* 2 zeroes */</comment>

                    <literal type="string" pos:line="314" pos:column="21">"%c%c"<pos:position pos:line="314" pos:column="27"/></literal>  <comment type="block" pos:line="314" pos:column="29">/* user length */</comment>
                    <literal type="string" pos:line="315" pos:column="21">"%c%c"<pos:position pos:line="315" pos:column="27"/></literal>  <comment type="block" pos:line="315" pos:column="29">/* user allocated space */</comment>
                    <literal type="string" pos:line="316" pos:column="21">"%c%c"<pos:position pos:line="316" pos:column="27"/></literal>  <comment type="block" pos:line="316" pos:column="29">/* user offset */</comment>
                    <literal type="string" pos:line="317" pos:column="21">"%c%c"<pos:position pos:line="317" pos:column="27"/></literal>  <comment type="block" pos:line="317" pos:column="29">/* 2 zeroes */</comment>

                    <literal type="string" pos:line="319" pos:column="21">"%c%c"<pos:position pos:line="319" pos:column="27"/></literal>  <comment type="block" pos:line="319" pos:column="29">/* host length */</comment>
                    <literal type="string" pos:line="320" pos:column="21">"%c%c"<pos:position pos:line="320" pos:column="27"/></literal>  <comment type="block" pos:line="320" pos:column="29">/* host allocated space */</comment>
                    <literal type="string" pos:line="321" pos:column="21">"%c%c"<pos:position pos:line="321" pos:column="27"/></literal>  <comment type="block" pos:line="321" pos:column="29">/* host offset */</comment>
                    <literal type="string" pos:line="322" pos:column="21">"%c%c%c%c%c%c"<pos:position pos:line="322" pos:column="35"/></literal>  <comment type="block" pos:line="322" pos:column="37">/* 6 zeroes */</comment>

                    <literal type="string" pos:line="324" pos:column="21">"\xff\xff"<pos:position pos:line="324" pos:column="31"/></literal>  <comment type="block" pos:line="324" pos:column="33">/* message length */</comment>
                    <literal type="string" pos:line="325" pos:column="21">"%c%c"<pos:position pos:line="325" pos:column="27"/></literal>  <comment type="block" pos:line="325" pos:column="29">/* 2 zeroes */</comment>

                    <literal type="string" pos:line="327" pos:column="21">"\x01\x82"<pos:position pos:line="327" pos:column="31"/></literal> <comment type="block" pos:line="327" pos:column="32">/* flags */</comment>
                    <literal type="string" pos:line="328" pos:column="21">"%c%c"<pos:position pos:line="328" pos:column="27"/></literal></expr></argument>  <comment type="block" pos:line="328" pos:column="29">/* 2 zeroes */</comment>

                    <comment type="block" pos:line="330" pos:column="21">/* domain string */</comment>
                    <comment type="block" pos:line="331" pos:column="21">/* user string */</comment>
                    <comment type="block" pos:line="332" pos:column="21">/* host string */</comment>
                    <comment type="block" pos:line="333" pos:column="21">/* LanManager response */</comment>
                    <comment type="block" pos:line="334" pos:column="21">/* NT response */</comment>
                    ,
                    <argument><expr><literal type="number" pos:line="336" pos:column="21">0<pos:position pos:line="336" pos:column="22"/></literal></expr></argument>, <comment type="block" pos:line="336" pos:column="24">/* zero termination */</comment>
                    <argument><expr><literal type="number" pos:line="337" pos:column="21">0<pos:position pos:line="337" pos:column="22"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="337" pos:column="23">0<pos:position pos:line="337" pos:column="24"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="337" pos:column="25">0<pos:position pos:line="337" pos:column="26"/></literal></expr></argument>, <comment type="block" pos:line="337" pos:column="28">/* type-3 long, the 24 upper bits */</comment>

                    <argument><expr><call><name pos:line="339" pos:column="21">SHORTPAIR<pos:position pos:line="339" pos:column="30"/></name><argument_list pos:line="339" pos:column="30">(<argument><expr><literal type="number" pos:line="339" pos:column="31">0x18<pos:position pos:line="339" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="339" pos:column="36"/></argument_list></call></expr></argument>,  <comment type="block" pos:line="339" pos:column="39">/* LanManager response length, twice */</comment>
                    <argument><expr><call><name pos:line="340" pos:column="21">SHORTPAIR<pos:position pos:line="340" pos:column="30"/></name><argument_list pos:line="340" pos:column="30">(<argument><expr><literal type="number" pos:line="340" pos:column="31">0x18<pos:position pos:line="340" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="340" pos:column="36"/></argument_list></call></expr></argument>,
                    <argument><expr><call><name pos:line="341" pos:column="21">SHORTPAIR<pos:position pos:line="341" pos:column="30"/></name><argument_list pos:line="341" pos:column="30">(<argument><expr><name pos:line="341" pos:column="31">lmrespoff<pos:position pos:line="341" pos:column="40"/></name></expr></argument>)<pos:position pos:line="341" pos:column="41"/></argument_list></call></expr></argument>,
                    <argument><expr><literal type="number" pos:line="342" pos:column="21">0x0<pos:position pos:line="342" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="342" pos:column="26">0x0<pos:position pos:line="342" pos:column="29"/></literal></expr></argument>,

<cpp:ifdef pos:line="344" pos:column="1">#<cpp:directive pos:line="344" pos:column="2">ifdef<pos:position pos:line="344" pos:column="7"/></cpp:directive> <name pos:line="344" pos:column="8">USE_NTRESPONSES<pos:position pos:line="344" pos:column="23"/></name></cpp:ifdef>
                    <argument><expr><call><name pos:line="345" pos:column="21">SHORTPAIR<pos:position pos:line="345" pos:column="30"/></name><argument_list pos:line="345" pos:column="30">(<argument><expr><literal type="number" pos:line="345" pos:column="31">0x18<pos:position pos:line="345" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="345" pos:column="36"/></argument_list></call></expr></argument>,  <comment type="block" pos:line="345" pos:column="39">/* NT-response length, twice */</comment>
                    <argument><expr><call><name pos:line="346" pos:column="21">SHORTPAIR<pos:position pos:line="346" pos:column="30"/></name><argument_list pos:line="346" pos:column="30">(<argument><expr><literal type="number" pos:line="346" pos:column="31">0x18<pos:position pos:line="346" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="346" pos:column="36"/></argument_list></call></expr></argument>,
<cpp:else pos:line="347" pos:column="1">#<cpp:directive pos:line="347" pos:column="2">else<pos:position pos:line="347" pos:column="6"/></cpp:directive></cpp:else>
                    <argument><expr><literal type="number" pos:line="348" pos:column="21">0x0<pos:position pos:line="348" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="348" pos:column="26">0x0<pos:position pos:line="348" pos:column="29"/></literal></expr></argument>,
                    <argument><expr><literal type="number" pos:line="349" pos:column="21">0x0<pos:position pos:line="349" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="349" pos:column="26">0x0<pos:position pos:line="349" pos:column="29"/></literal></expr></argument>,
<cpp:endif pos:line="350" pos:column="1">#<cpp:directive pos:line="350" pos:column="2">endif<pos:position pos:line="350" pos:column="7"/></cpp:directive></cpp:endif>
                    <argument><expr><call><name pos:line="351" pos:column="21">SHORTPAIR<pos:position pos:line="351" pos:column="30"/></name><argument_list pos:line="351" pos:column="30">(<argument><expr><name pos:line="351" pos:column="31">ntrespoff<pos:position pos:line="351" pos:column="40"/></name></expr></argument>)<pos:position pos:line="351" pos:column="41"/></argument_list></call></expr></argument>,
                    <argument><expr><literal type="number" pos:line="352" pos:column="21">0x0<pos:position pos:line="352" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="352" pos:column="26">0x0<pos:position pos:line="352" pos:column="29"/></literal></expr></argument>,

                    <argument><expr><call><name pos:line="354" pos:column="21">SHORTPAIR<pos:position pos:line="354" pos:column="30"/></name><argument_list pos:line="354" pos:column="30">(<argument><expr><name pos:line="354" pos:column="31">domlen<pos:position pos:line="354" pos:column="37"/></name></expr></argument>)<pos:position pos:line="354" pos:column="38"/></argument_list></call></expr></argument>,
                    <argument><expr><call><name pos:line="355" pos:column="21">SHORTPAIR<pos:position pos:line="355" pos:column="30"/></name><argument_list pos:line="355" pos:column="30">(<argument><expr><name pos:line="355" pos:column="31">domlen<pos:position pos:line="355" pos:column="37"/></name></expr></argument>)<pos:position pos:line="355" pos:column="38"/></argument_list></call></expr></argument>,
                    <argument><expr><call><name pos:line="356" pos:column="21">SHORTPAIR<pos:position pos:line="356" pos:column="30"/></name><argument_list pos:line="356" pos:column="30">(<argument><expr><name pos:line="356" pos:column="31">domoff<pos:position pos:line="356" pos:column="37"/></name></expr></argument>)<pos:position pos:line="356" pos:column="38"/></argument_list></call></expr></argument>,
                    <argument><expr><literal type="number" pos:line="357" pos:column="21">0x0<pos:position pos:line="357" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="357" pos:column="26">0x0<pos:position pos:line="357" pos:column="29"/></literal></expr></argument>,

                    <argument><expr><call><name pos:line="359" pos:column="21">SHORTPAIR<pos:position pos:line="359" pos:column="30"/></name><argument_list pos:line="359" pos:column="30">(<argument><expr><name pos:line="359" pos:column="31">userlen<pos:position pos:line="359" pos:column="38"/></name></expr></argument>)<pos:position pos:line="359" pos:column="39"/></argument_list></call></expr></argument>,
                    <argument><expr><call><name pos:line="360" pos:column="21">SHORTPAIR<pos:position pos:line="360" pos:column="30"/></name><argument_list pos:line="360" pos:column="30">(<argument><expr><name pos:line="360" pos:column="31">userlen<pos:position pos:line="360" pos:column="38"/></name></expr></argument>)<pos:position pos:line="360" pos:column="39"/></argument_list></call></expr></argument>,
                    <argument><expr><call><name pos:line="361" pos:column="21">SHORTPAIR<pos:position pos:line="361" pos:column="30"/></name><argument_list pos:line="361" pos:column="30">(<argument><expr><name pos:line="361" pos:column="31">useroff<pos:position pos:line="361" pos:column="38"/></name></expr></argument>)<pos:position pos:line="361" pos:column="39"/></argument_list></call></expr></argument>,
                    <argument><expr><literal type="number" pos:line="362" pos:column="21">0x0<pos:position pos:line="362" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="362" pos:column="26">0x0<pos:position pos:line="362" pos:column="29"/></literal></expr></argument>,

                    <argument><expr><call><name pos:line="364" pos:column="21">SHORTPAIR<pos:position pos:line="364" pos:column="30"/></name><argument_list pos:line="364" pos:column="30">(<argument><expr><name pos:line="364" pos:column="31">hostlen<pos:position pos:line="364" pos:column="38"/></name></expr></argument>)<pos:position pos:line="364" pos:column="39"/></argument_list></call></expr></argument>,
                    <argument><expr><call><name pos:line="365" pos:column="21">SHORTPAIR<pos:position pos:line="365" pos:column="30"/></name><argument_list pos:line="365" pos:column="30">(<argument><expr><name pos:line="365" pos:column="31">hostlen<pos:position pos:line="365" pos:column="38"/></name></expr></argument>)<pos:position pos:line="365" pos:column="39"/></argument_list></call></expr></argument>,
                    <argument><expr><call><name pos:line="366" pos:column="21">SHORTPAIR<pos:position pos:line="366" pos:column="30"/></name><argument_list pos:line="366" pos:column="30">(<argument><expr><name pos:line="366" pos:column="31">hostoff<pos:position pos:line="366" pos:column="38"/></name></expr></argument>)<pos:position pos:line="366" pos:column="39"/></argument_list></call></expr></argument>,
                    <argument><expr><literal type="number" pos:line="367" pos:column="21">0x0<pos:position pos:line="367" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="367" pos:column="26">0x0<pos:position pos:line="367" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="367" pos:column="31">0x0<pos:position pos:line="367" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="367" pos:column="36">0x0<pos:position pos:line="367" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="367" pos:column="41">0x0<pos:position pos:line="367" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="367" pos:column="46">0x0<pos:position pos:line="367" pos:column="49"/></literal></expr></argument>,

                    <argument><expr><literal type="number" pos:line="369" pos:column="21">0x0<pos:position pos:line="369" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="369" pos:column="26">0x0<pos:position pos:line="369" pos:column="29"/></literal></expr></argument>,

                    <argument><expr><literal type="number" pos:line="371" pos:column="21">0x0<pos:position pos:line="371" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="371" pos:column="26">0x0<pos:position pos:line="371" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="371" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="371" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="373" pos:column="5">/* size is now 64 */</comment>
    <expr_stmt><expr><name pos:line="374" pos:column="5">size<pos:position pos:line="374" pos:column="9"/></name><operator pos:line="374" pos:column="9">=<pos:position pos:line="374" pos:column="10"/></operator><literal type="number" pos:line="374" pos:column="10">64<pos:position pos:line="374" pos:column="12"/></literal></expr>;<pos:position pos:line="374" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="375" pos:column="5">ntlmbuf<pos:position pos:line="375" pos:column="12"/></name><index pos:line="375" pos:column="12">[<expr><literal type="number" pos:line="375" pos:column="13">62<pos:position pos:line="375" pos:column="15"/></literal></expr>]<pos:position pos:line="375" pos:column="16"/></index></name><operator pos:line="375" pos:column="16">=<pos:position pos:line="375" pos:column="17"/></operator><name><name pos:line="375" pos:column="17">ntlmbuf<pos:position pos:line="375" pos:column="24"/></name><index pos:line="375" pos:column="24">[<expr><literal type="number" pos:line="375" pos:column="25">63<pos:position pos:line="375" pos:column="27"/></literal></expr>]<pos:position pos:line="375" pos:column="28"/></index></name><operator pos:line="375" pos:column="28">=<pos:position pos:line="375" pos:column="29"/></operator><literal type="number" pos:line="375" pos:column="29">0<pos:position pos:line="375" pos:column="30"/></literal></expr>;<pos:position pos:line="375" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="377" pos:column="5">memcpy<pos:position pos:line="377" pos:column="11"/></name><argument_list pos:line="377" pos:column="11">(<argument><expr><operator pos:line="377" pos:column="12">&amp;<pos:position pos:line="377" pos:column="17"/></operator><name><name pos:line="377" pos:column="13">ntlmbuf<pos:position pos:line="377" pos:column="20"/></name><index pos:line="377" pos:column="20">[<expr><name pos:line="377" pos:column="21">size<pos:position pos:line="377" pos:column="25"/></name></expr>]<pos:position pos:line="377" pos:column="26"/></index></name></expr></argument>, <argument><expr><name pos:line="377" pos:column="28">domain<pos:position pos:line="377" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="377" pos:column="36">domlen<pos:position pos:line="377" pos:column="42"/></name></expr></argument>)<pos:position pos:line="377" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="377" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="378" pos:column="5">size<pos:position pos:line="378" pos:column="9"/></name> <operator pos:line="378" pos:column="10">+=<pos:position pos:line="378" pos:column="12"/></operator> <name pos:line="378" pos:column="13">domlen<pos:position pos:line="378" pos:column="19"/></name></expr>;<pos:position pos:line="378" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="380" pos:column="5">memcpy<pos:position pos:line="380" pos:column="11"/></name><argument_list pos:line="380" pos:column="11">(<argument><expr><operator pos:line="380" pos:column="12">&amp;<pos:position pos:line="380" pos:column="17"/></operator><name><name pos:line="380" pos:column="13">ntlmbuf<pos:position pos:line="380" pos:column="20"/></name><index pos:line="380" pos:column="20">[<expr><name pos:line="380" pos:column="21">size<pos:position pos:line="380" pos:column="25"/></name></expr>]<pos:position pos:line="380" pos:column="26"/></index></name></expr></argument>, <argument><expr><name pos:line="380" pos:column="28">user<pos:position pos:line="380" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="380" pos:column="34">userlen<pos:position pos:line="380" pos:column="41"/></name></expr></argument>)<pos:position pos:line="380" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="380" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="381" pos:column="5">size<pos:position pos:line="381" pos:column="9"/></name> <operator pos:line="381" pos:column="10">+=<pos:position pos:line="381" pos:column="12"/></operator> <name pos:line="381" pos:column="13">userlen<pos:position pos:line="381" pos:column="20"/></name></expr>;<pos:position pos:line="381" pos:column="21"/></expr_stmt>

    <comment type="block" pos:line="383" pos:column="5">/* we append the binary hashes to the end of the blob */</comment>
    <if pos:line="384" pos:column="5">if<condition pos:line="384" pos:column="7">(<expr><name pos:line="384" pos:column="8">size<pos:position pos:line="384" pos:column="12"/></name> <operator pos:line="384" pos:column="13">&lt;<pos:position pos:line="384" pos:column="17"/></operator> <operator pos:line="384" pos:column="15">(<pos:position pos:line="384" pos:column="16"/></operator><operator pos:line="384" pos:column="16">(<pos:position pos:line="384" pos:column="17"/></operator><name pos:line="384" pos:column="17">int<pos:position pos:line="384" pos:column="20"/></name><operator pos:line="384" pos:column="20">)<pos:position pos:line="384" pos:column="21"/></operator><sizeof pos:line="384" pos:column="21">sizeof<argument_list pos:line="384" pos:column="27">(<argument><expr><name pos:line="384" pos:column="28">ntlmbuf<pos:position pos:line="384" pos:column="35"/></name></expr></argument>)<pos:position pos:line="384" pos:column="36"/></argument_list></sizeof> <operator pos:line="384" pos:column="37">-<pos:position pos:line="384" pos:column="38"/></operator> <literal type="number" pos:line="384" pos:column="39">0x18<pos:position pos:line="384" pos:column="43"/></literal><operator pos:line="384" pos:column="43">)<pos:position pos:line="384" pos:column="44"/></operator></expr>)<pos:position pos:line="384" pos:column="45"/></condition><then pos:line="384" pos:column="45"> <block pos:line="384" pos:column="46">{
      <expr_stmt><expr><call><name pos:line="385" pos:column="7">memcpy<pos:position pos:line="385" pos:column="13"/></name><argument_list pos:line="385" pos:column="13">(<argument><expr><operator pos:line="385" pos:column="14">&amp;<pos:position pos:line="385" pos:column="19"/></operator><name><name pos:line="385" pos:column="15">ntlmbuf<pos:position pos:line="385" pos:column="22"/></name><index pos:line="385" pos:column="22">[<expr><name pos:line="385" pos:column="23">size<pos:position pos:line="385" pos:column="27"/></name></expr>]<pos:position pos:line="385" pos:column="28"/></index></name></expr></argument>, <argument><expr><name pos:line="385" pos:column="30">lmresp<pos:position pos:line="385" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="385" pos:column="38">0x18<pos:position pos:line="385" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="385" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="385" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name pos:line="386" pos:column="7">size<pos:position pos:line="386" pos:column="11"/></name> <operator pos:line="386" pos:column="12">+=<pos:position pos:line="386" pos:column="14"/></operator> <literal type="number" pos:line="386" pos:column="15">0x18<pos:position pos:line="386" pos:column="19"/></literal></expr>;<pos:position pos:line="386" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="387" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="389" pos:column="1">#<cpp:directive pos:line="389" pos:column="2">ifdef<pos:position pos:line="389" pos:column="7"/></cpp:directive> <name pos:line="389" pos:column="8">USE_NTRESPONSES<pos:position pos:line="389" pos:column="23"/></name></cpp:ifdef>
    <if pos:line="390" pos:column="5">if<condition pos:line="390" pos:column="7">(<expr><name pos:line="390" pos:column="8">size<pos:position pos:line="390" pos:column="12"/></name> <operator pos:line="390" pos:column="13">&lt;<pos:position pos:line="390" pos:column="17"/></operator> <operator pos:line="390" pos:column="15">(<pos:position pos:line="390" pos:column="16"/></operator><operator pos:line="390" pos:column="16">(<pos:position pos:line="390" pos:column="17"/></operator><name pos:line="390" pos:column="17">int<pos:position pos:line="390" pos:column="20"/></name><operator pos:line="390" pos:column="20">)<pos:position pos:line="390" pos:column="21"/></operator><sizeof pos:line="390" pos:column="21">sizeof<argument_list pos:line="390" pos:column="27">(<argument><expr><name pos:line="390" pos:column="28">ntlmbuf<pos:position pos:line="390" pos:column="35"/></name></expr></argument>)<pos:position pos:line="390" pos:column="36"/></argument_list></sizeof> <operator pos:line="390" pos:column="37">-<pos:position pos:line="390" pos:column="38"/></operator> <literal type="number" pos:line="390" pos:column="39">0x18<pos:position pos:line="390" pos:column="43"/></literal><operator pos:line="390" pos:column="43">)<pos:position pos:line="390" pos:column="44"/></operator></expr>)<pos:position pos:line="390" pos:column="45"/></condition><then pos:line="390" pos:column="45"> <block pos:line="390" pos:column="46">{
      <expr_stmt><expr><call><name pos:line="391" pos:column="7">memcpy<pos:position pos:line="391" pos:column="13"/></name><argument_list pos:line="391" pos:column="13">(<argument><expr><operator pos:line="391" pos:column="14">&amp;<pos:position pos:line="391" pos:column="19"/></operator><name><name pos:line="391" pos:column="15">ntlmbuf<pos:position pos:line="391" pos:column="22"/></name><index pos:line="391" pos:column="22">[<expr><name pos:line="391" pos:column="23">size<pos:position pos:line="391" pos:column="27"/></name></expr>]<pos:position pos:line="391" pos:column="28"/></index></name></expr></argument>, <argument><expr><name pos:line="391" pos:column="30">ntresp<pos:position pos:line="391" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="391" pos:column="38">0x18<pos:position pos:line="391" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="391" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="391" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name pos:line="392" pos:column="7">size<pos:position pos:line="392" pos:column="11"/></name> <operator pos:line="392" pos:column="12">+=<pos:position pos:line="392" pos:column="14"/></operator> <literal type="number" pos:line="392" pos:column="15">0x18<pos:position pos:line="392" pos:column="19"/></literal></expr>;<pos:position pos:line="392" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="393" pos:column="6"/></block></then></if>
<cpp:endif pos:line="394" pos:column="1">#<cpp:directive pos:line="394" pos:column="2">endif<pos:position pos:line="394" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="396" pos:column="5">ntlmbuf<pos:position pos:line="396" pos:column="12"/></name><index pos:line="396" pos:column="12">[<expr><literal type="number" pos:line="396" pos:column="13">56<pos:position pos:line="396" pos:column="15"/></literal></expr>]<pos:position pos:line="396" pos:column="16"/></index></name> <operator pos:line="396" pos:column="17">=<pos:position pos:line="396" pos:column="18"/></operator> <call pos:line="396" pos:column="19">(<name pos:line="396" pos:column="20">unsigned<pos:position pos:line="396" pos:column="28"/></name> <name pos:line="396" pos:column="29">char<pos:position pos:line="396" pos:column="33"/></name>)<argument_list pos:line="396" pos:column="34">(<argument><expr><name pos:line="396" pos:column="35">size<pos:position pos:line="396" pos:column="39"/></name> <operator pos:line="396" pos:column="40">&amp;<pos:position pos:line="396" pos:column="45"/></operator> <literal type="number" pos:line="396" pos:column="42">0xff<pos:position pos:line="396" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="396" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="396" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="397" pos:column="5">ntlmbuf<pos:position pos:line="397" pos:column="12"/></name><index pos:line="397" pos:column="12">[<expr><literal type="number" pos:line="397" pos:column="13">57<pos:position pos:line="397" pos:column="15"/></literal></expr>]<pos:position pos:line="397" pos:column="16"/></index></name> <operator pos:line="397" pos:column="17">=<pos:position pos:line="397" pos:column="18"/></operator> <call pos:line="397" pos:column="19">(<name pos:line="397" pos:column="20">unsigned<pos:position pos:line="397" pos:column="28"/></name> <name pos:line="397" pos:column="29">char<pos:position pos:line="397" pos:column="33"/></name>)<argument_list pos:line="397" pos:column="34">(<argument><expr><name pos:line="397" pos:column="35">size<pos:position pos:line="397" pos:column="39"/></name> <operator pos:line="397" pos:column="40">&gt;&gt;<pos:position pos:line="397" pos:column="45"/></operator> <literal type="number" pos:line="397" pos:column="43">8<pos:position pos:line="397" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="397" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="46"/></expr_stmt>

<cpp:endif pos:line="399" pos:column="1">#<cpp:directive pos:line="399" pos:column="2">endif<pos:position pos:line="399" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="401" pos:column="5">/* convert the binary blob into base64 */</comment>
    <expr_stmt><expr><name pos:line="402" pos:column="5">size<pos:position pos:line="402" pos:column="9"/></name> <operator pos:line="402" pos:column="10">=<pos:position pos:line="402" pos:column="11"/></operator> <call><name pos:line="402" pos:column="12">Curl_base64_encode<pos:position pos:line="402" pos:column="30"/></name><argument_list pos:line="402" pos:column="30">(<argument><expr><operator pos:line="402" pos:column="31">(<pos:position pos:line="402" pos:column="32"/></operator><name pos:line="402" pos:column="32">char<pos:position pos:line="402" pos:column="36"/></name> <operator pos:line="402" pos:column="37">*<pos:position pos:line="402" pos:column="38"/></operator><operator pos:line="402" pos:column="38">)<pos:position pos:line="402" pos:column="39"/></operator><name pos:line="402" pos:column="39">ntlmbuf<pos:position pos:line="402" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="402" pos:column="48">size<pos:position pos:line="402" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="402" pos:column="54">&amp;<pos:position pos:line="402" pos:column="59"/></operator><name pos:line="402" pos:column="55">base64<pos:position pos:line="402" pos:column="61"/></name></expr></argument>)<pos:position pos:line="402" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="402" pos:column="63"/></expr_stmt>

    <if pos:line="404" pos:column="5">if<condition pos:line="404" pos:column="7">(<expr><name pos:line="404" pos:column="8">size<pos:position pos:line="404" pos:column="12"/></name> <operator pos:line="404" pos:column="13">&gt;<pos:position pos:line="404" pos:column="17"/></operator><literal type="number" pos:line="404" pos:column="14">0<pos:position pos:line="404" pos:column="15"/></literal></expr> )<pos:position pos:line="404" pos:column="17"/></condition><then pos:line="404" pos:column="17"> <block pos:line="404" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="405" pos:column="7">Curl_safefree<pos:position pos:line="405" pos:column="20"/></name><argument_list pos:line="405" pos:column="20">(<argument><expr><operator pos:line="405" pos:column="21">*<pos:position pos:line="405" pos:column="22"/></operator><name pos:line="405" pos:column="22">allocuserpwd<pos:position pos:line="405" pos:column="34"/></name></expr></argument>)<pos:position pos:line="405" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="406" pos:column="7">*<pos:position pos:line="406" pos:column="8"/></operator><name pos:line="406" pos:column="8">allocuserpwd<pos:position pos:line="406" pos:column="20"/></name> <operator pos:line="406" pos:column="21">=<pos:position pos:line="406" pos:column="22"/></operator> <call><name pos:line="406" pos:column="23">aprintf<pos:position pos:line="406" pos:column="30"/></name><argument_list pos:line="406" pos:column="30">(<argument><expr><literal type="string" pos:line="406" pos:column="31">"%sAuthorization: NTLM %s\r\n"<pos:position pos:line="406" pos:column="61"/></literal></expr></argument>,
                              <argument><expr><ternary><condition><expr><name pos:line="407" pos:column="31">proxy<pos:position pos:line="407" pos:column="36"/></name></expr>?<pos:position pos:line="407" pos:column="37"/></condition><then><expr><literal type="string" pos:line="407" pos:column="37">"Proxy-"<pos:position pos:line="407" pos:column="45"/></literal></expr></then><else pos:line="407" pos:column="45">:<expr><literal type="string" pos:line="407" pos:column="46">""<pos:position pos:line="407" pos:column="48"/></literal></expr></else></ternary></expr></argument>,
                              <argument><expr><name pos:line="408" pos:column="31">base64<pos:position pos:line="408" pos:column="37"/></name></expr></argument>)<pos:position pos:line="408" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="408" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="409" pos:column="7">free<pos:position pos:line="409" pos:column="11"/></name><argument_list pos:line="409" pos:column="11">(<argument><expr><name pos:line="409" pos:column="12">base64<pos:position pos:line="409" pos:column="18"/></name></expr></argument>)<pos:position pos:line="409" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="409" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="410" pos:column="6"/></block></then>
    <else pos:line="411" pos:column="5">else
      <block type="pseudo"><return pos:line="412" pos:column="7">return <expr><name pos:line="412" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="412" pos:column="33"/></name></expr>;<pos:position pos:line="412" pos:column="34"/></return></block></else></if> <comment type="block" pos:line="412" pos:column="35">/* FIX TODO */</comment>

    <expr_stmt><expr><name><name pos:line="414" pos:column="5">ntlm<pos:position pos:line="414" pos:column="9"/></name><operator pos:line="414" pos:column="9">-&gt;<pos:position pos:line="414" pos:column="14"/></operator><name pos:line="414" pos:column="11">state<pos:position pos:line="414" pos:column="16"/></name></name> <operator pos:line="414" pos:column="17">=<pos:position pos:line="414" pos:column="18"/></operator> <name pos:line="414" pos:column="19">NTLMSTATE_TYPE3<pos:position pos:line="414" pos:column="34"/></name></expr>;<pos:position pos:line="414" pos:column="35"/></expr_stmt> <comment type="block" pos:line="414" pos:column="36">/* we sent a type-3 */</comment>
    <expr_stmt><expr><name><name pos:line="415" pos:column="5">authp<pos:position pos:line="415" pos:column="10"/></name><operator pos:line="415" pos:column="10">-&gt;<pos:position pos:line="415" pos:column="15"/></operator><name pos:line="415" pos:column="12">done<pos:position pos:line="415" pos:column="16"/></name></name> <operator pos:line="415" pos:column="17">=<pos:position pos:line="415" pos:column="18"/></operator> <name pos:line="415" pos:column="19">TRUE<pos:position pos:line="415" pos:column="23"/></name></expr>;<pos:position pos:line="415" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="416" pos:column="4"/></block>
  <break pos:line="417" pos:column="3">break;<pos:position pos:line="417" pos:column="9"/></break>

  <case pos:line="419" pos:column="3">case <expr><name pos:line="419" pos:column="8">NTLMSTATE_TYPE3<pos:position pos:line="419" pos:column="23"/></name></expr>:<pos:position pos:line="419" pos:column="24"/></case>
    <comment type="block" pos:line="420" pos:column="5">/* connection is already authenticated,
     * don't send a header in future requests */</comment>
    <if pos:line="422" pos:column="5">if<condition pos:line="422" pos:column="7">(<expr><operator pos:line="422" pos:column="8">*<pos:position pos:line="422" pos:column="9"/></operator><name pos:line="422" pos:column="9">allocuserpwd<pos:position pos:line="422" pos:column="21"/></name></expr>)<pos:position pos:line="422" pos:column="22"/></condition><then pos:line="422" pos:column="22"> <block pos:line="422" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="423" pos:column="7">free<pos:position pos:line="423" pos:column="11"/></name><argument_list pos:line="423" pos:column="11">(<argument><expr><operator pos:line="423" pos:column="12">*<pos:position pos:line="423" pos:column="13"/></operator><name pos:line="423" pos:column="13">allocuserpwd<pos:position pos:line="423" pos:column="25"/></name></expr></argument>)<pos:position pos:line="423" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="423" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="424" pos:column="7">*<pos:position pos:line="424" pos:column="8"/></operator><name pos:line="424" pos:column="8">allocuserpwd<pos:position pos:line="424" pos:column="20"/></name><operator pos:line="424" pos:column="20">=<pos:position pos:line="424" pos:column="21"/></operator><name pos:line="424" pos:column="21">NULL<pos:position pos:line="424" pos:column="25"/></name></expr>;<pos:position pos:line="424" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="425" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="426" pos:column="5">authp<pos:position pos:line="426" pos:column="10"/></name><operator pos:line="426" pos:column="10">-&gt;<pos:position pos:line="426" pos:column="15"/></operator><name pos:line="426" pos:column="12">done<pos:position pos:line="426" pos:column="16"/></name></name> <operator pos:line="426" pos:column="17">=<pos:position pos:line="426" pos:column="18"/></operator> <name pos:line="426" pos:column="19">TRUE<pos:position pos:line="426" pos:column="23"/></name></expr>;<pos:position pos:line="426" pos:column="24"/></expr_stmt>
    <break pos:line="427" pos:column="5">break;<pos:position pos:line="427" pos:column="11"/></break>
  }<pos:position pos:line="428" pos:column="4"/></block></switch>

  <return pos:line="430" pos:column="3">return <expr><name pos:line="430" pos:column="10">CURLE_OK<pos:position pos:line="430" pos:column="18"/></name></expr>;<pos:position pos:line="430" pos:column="19"/></return>
}<pos:position pos:line="431" pos:column="2"/></block></function></unit>

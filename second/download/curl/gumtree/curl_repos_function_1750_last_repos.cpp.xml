<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1750_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">Curl_printable_address<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">Curl_addrinfo<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">ai<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">buf<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">size_t<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">bufsize<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">sockaddr_in<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">sa4<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">in_addr<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">ipaddr4<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">ENABLE_IPV6<pos:position pos:line="6" pos:column="19"/></name></cpp:ifdef>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">sockaddr_in6<pos:position pos:line="7" pos:column="28"/></name></name> <modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier></type><name pos:line="7" pos:column="30">sa6<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">in6_addr<pos:position pos:line="8" pos:column="24"/></name></name> <modifier pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></modifier></type><name pos:line="8" pos:column="26">ipaddr6<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>

  <switch pos:line="11" pos:column="3">switch<condition pos:line="11" pos:column="9">(<expr><name><name pos:line="11" pos:column="10">ai<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">ai_family<pos:position pos:line="11" pos:column="23"/></name></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition> <block pos:line="11" pos:column="25">{
    <case pos:line="12" pos:column="5">case <expr><name pos:line="12" pos:column="10">AF_INET<pos:position pos:line="12" pos:column="17"/></name></expr>:<pos:position pos:line="12" pos:column="18"/></case>
      <expr_stmt><expr><name pos:line="13" pos:column="7">sa4<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><specifier pos:line="13" pos:column="14">const<pos:position pos:line="13" pos:column="19"/></specifier> <name pos:line="13" pos:column="20">void<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></operator><operator pos:line="13" pos:column="26">)<pos:position pos:line="13" pos:column="27"/></operator><name><name pos:line="13" pos:column="27">ai<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">ai_addr<pos:position pos:line="13" pos:column="38"/></name></name></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name pos:line="14" pos:column="7">ipaddr4<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <operator pos:line="14" pos:column="17">&amp;<pos:position pos:line="14" pos:column="22"/></operator><name><name pos:line="14" pos:column="18">sa4<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">sin_addr<pos:position pos:line="14" pos:column="31"/></name></name></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
      <return pos:line="15" pos:column="7">return <expr><call><name pos:line="15" pos:column="14">Curl_inet_ntop<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name><name pos:line="15" pos:column="29">ai<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">ai_family<pos:position pos:line="15" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="44">(<pos:position pos:line="15" pos:column="45"/></operator><specifier pos:line="15" pos:column="45">const<pos:position pos:line="15" pos:column="50"/></specifier> <name pos:line="15" pos:column="51">void<pos:position pos:line="15" pos:column="55"/></name> <operator pos:line="15" pos:column="56">*<pos:position pos:line="15" pos:column="57"/></operator><operator pos:line="15" pos:column="57">)<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="58">ipaddr4<pos:position pos:line="15" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="67">buf<pos:position pos:line="15" pos:column="70"/></name></expr></argument>,
                            <argument><expr><name pos:line="16" pos:column="29">bufsize<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></return>
<cpp:ifdef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifdef<pos:position pos:line="17" pos:column="7"/></cpp:directive> <name pos:line="17" pos:column="8">ENABLE_IPV6<pos:position pos:line="17" pos:column="19"/></name></cpp:ifdef>
    <case pos:line="18" pos:column="5">case <expr><name pos:line="18" pos:column="10">AF_INET6<pos:position pos:line="18" pos:column="18"/></name></expr>:<pos:position pos:line="18" pos:column="19"/></case>
      <expr_stmt><expr><name pos:line="19" pos:column="7">sa6<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><specifier pos:line="19" pos:column="14">const<pos:position pos:line="19" pos:column="19"/></specifier> <name pos:line="19" pos:column="20">void<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">*<pos:position pos:line="19" pos:column="26"/></operator><operator pos:line="19" pos:column="26">)<pos:position pos:line="19" pos:column="27"/></operator><name><name pos:line="19" pos:column="27">ai<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">ai_addr<pos:position pos:line="19" pos:column="38"/></name></name></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name pos:line="20" pos:column="7">ipaddr6<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <operator pos:line="20" pos:column="17">&amp;<pos:position pos:line="20" pos:column="22"/></operator><name><name pos:line="20" pos:column="18">sa6<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">sin6_addr<pos:position pos:line="20" pos:column="32"/></name></name></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
      <return pos:line="21" pos:column="7">return <expr><call><name pos:line="21" pos:column="14">Curl_inet_ntop<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name><name pos:line="21" pos:column="29">ai<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">ai_family<pos:position pos:line="21" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="44">(<pos:position pos:line="21" pos:column="45"/></operator><specifier pos:line="21" pos:column="45">const<pos:position pos:line="21" pos:column="50"/></specifier> <name pos:line="21" pos:column="51">void<pos:position pos:line="21" pos:column="55"/></name> <operator pos:line="21" pos:column="56">*<pos:position pos:line="21" pos:column="57"/></operator><operator pos:line="21" pos:column="57">)<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="58">ipaddr6<pos:position pos:line="21" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="67">buf<pos:position pos:line="21" pos:column="70"/></name></expr></argument>,
                            <argument><expr><name pos:line="22" pos:column="29">bufsize<pos:position pos:line="22" pos:column="36"/></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></return>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
    <default pos:line="24" pos:column="5">default:<pos:position pos:line="24" pos:column="13"/></default>
      <break pos:line="25" pos:column="7">break;<pos:position pos:line="25" pos:column="13"/></break>
  }<pos:position pos:line="26" pos:column="4"/></block></switch>
  <return pos:line="27" pos:column="3">return <expr><name pos:line="27" pos:column="10">NULL<pos:position pos:line="27" pos:column="14"/></name></expr>;<pos:position pos:line="27" pos:column="15"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

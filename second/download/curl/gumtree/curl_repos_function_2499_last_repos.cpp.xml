<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2499_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">pkp_pin_peer_pubkey<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">Curl_easy<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">data<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">SSLContextRef<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">ctx<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
                                    <parameter><decl><type><specifier pos:line="3" pos:column="37">const<pos:position pos:line="3" pos:column="42"/></specifier> <name pos:line="3" pos:column="43">char<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">pinnedpubkey<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list>
<block pos:line="4" pos:column="1">{  <comment type="block" pos:line="4" pos:column="4">/* Scratch */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">pubkeylen<pos:position pos:line="5" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="21">realpubkeylen<pos:position pos:line="5" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="36">spkiHeaderLength<pos:position pos:line="5" pos:column="52"/></name> <init pos:line="5" pos:column="53">= <expr><literal type="number" pos:line="5" pos:column="55">24<pos:position pos:line="5" pos:column="57"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="58"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">pubkey<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">NULL<pos:position pos:line="6" pos:column="31"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="34">realpubkey<pos:position pos:line="6" pos:column="44"/></name> <init pos:line="6" pos:column="45">= <expr><name pos:line="6" pos:column="47">NULL<pos:position pos:line="6" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">char<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">spkiHeader<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><name pos:line="7" pos:column="37">NULL<pos:position pos:line="7" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CFDataRef<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">publicKeyBits<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name pos:line="8" pos:column="29">NULL<pos:position pos:line="8" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Result is returned to caller */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">CURLcode<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">result<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><name pos:line="11" pos:column="21">CURLE_SSL_PINNEDPUBKEYNOTMATCH<pos:position pos:line="11" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="52"/></decl_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* if a path wasn't specified, don't pin */</comment>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><operator pos:line="14" pos:column="6">!<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">pinnedpubkey<pos:position pos:line="14" pos:column="19"/></name></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">CURLE_OK<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></return></block></then></if>


  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><operator pos:line="18" pos:column="6">!<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">ctx<pos:position pos:line="18" pos:column="10"/></name></expr>)<pos:position pos:line="18" pos:column="11"/></condition><then pos:line="18" pos:column="11">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">result<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></return></block></then></if>

  <do pos:line="21" pos:column="3">do <block pos:line="21" pos:column="6">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">SecTrustRef<pos:position pos:line="22" pos:column="16"/></name></type> <name pos:line="22" pos:column="17">trust<pos:position pos:line="22" pos:column="22"/></name></decl>;<pos:position pos:line="22" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">OSStatus<pos:position pos:line="23" pos:column="13"/></name></type> <name pos:line="23" pos:column="14">ret<pos:position pos:line="23" pos:column="17"/></name> <init pos:line="23" pos:column="18">= <expr><call><name pos:line="23" pos:column="20">SSLCopyPeerTrust<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name pos:line="23" pos:column="37">ctx<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="42">&amp;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="43">trust<pos:position pos:line="23" pos:column="48"/></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="50"/></decl_stmt>
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><name pos:line="24" pos:column="8">ret<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">!=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">noErr<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">||<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="24">trust<pos:position pos:line="24" pos:column="29"/></name> <operator pos:line="24" pos:column="30">==<pos:position pos:line="24" pos:column="32"/></operator> <name pos:line="24" pos:column="33">NULL<pos:position pos:line="24" pos:column="37"/></name></expr>)<pos:position pos:line="24" pos:column="38"/></condition><then pos:line="24" pos:column="38">
      <block type="pseudo"><break pos:line="25" pos:column="7">break;<pos:position pos:line="25" pos:column="13"/></break></block></then></if>

    <decl_stmt><decl><type><name pos:line="27" pos:column="5">SecKeyRef<pos:position pos:line="27" pos:column="14"/></name></type> <name pos:line="27" pos:column="15">keyRef<pos:position pos:line="27" pos:column="21"/></name> <init pos:line="27" pos:column="22">= <expr><call><name pos:line="27" pos:column="24">SecTrustCopyPublicKey<pos:position pos:line="27" pos:column="45"/></name><argument_list pos:line="27" pos:column="45">(<argument><expr><name pos:line="27" pos:column="46">trust<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="53"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">CFRelease<pos:position pos:line="28" pos:column="14"/></name><argument_list pos:line="28" pos:column="14">(<argument><expr><name pos:line="28" pos:column="15">trust<pos:position pos:line="28" pos:column="20"/></name></expr></argument>)<pos:position pos:line="28" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><name pos:line="29" pos:column="8">keyRef<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">==<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">NULL<pos:position pos:line="29" pos:column="22"/></name></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23">
      <block type="pseudo"><break pos:line="30" pos:column="7">break;<pos:position pos:line="30" pos:column="13"/></break></block></then></if>

<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef<pos:position pos:line="32" pos:column="7"/></cpp:directive> <name pos:line="32" pos:column="8">DARWIN_SSL_PINNEDPUBKEY_V1<pos:position pos:line="32" pos:column="34"/></name></cpp:ifdef>

    <expr_stmt><expr><name pos:line="34" pos:column="5">publicKeyBits<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <call><name pos:line="34" pos:column="21">SecKeyCopyExternalRepresentation<pos:position pos:line="34" pos:column="53"/></name><argument_list pos:line="34" pos:column="53">(<argument><expr><name pos:line="34" pos:column="54">keyRef<pos:position pos:line="34" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="62">NULL<pos:position pos:line="34" pos:column="66"/></name></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">CFRelease<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">keyRef<pos:position pos:line="35" pos:column="21"/></name></expr></argument>)<pos:position pos:line="35" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">(<expr><name pos:line="36" pos:column="8">publicKeyBits<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">==<pos:position pos:line="36" pos:column="24"/></operator> <name pos:line="36" pos:column="25">NULL<pos:position pos:line="36" pos:column="29"/></name></expr>)<pos:position pos:line="36" pos:column="30"/></condition><then pos:line="36" pos:column="30">
      <block type="pseudo"><break pos:line="37" pos:column="7">break;<pos:position pos:line="37" pos:column="13"/></break></block></then></if>

<cpp:elif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">elif<pos:position pos:line="39" pos:column="6"/></cpp:directive> <expr><name pos:line="39" pos:column="7">DARWIN_SSL_PINNEDPUBKEY_V2<pos:position pos:line="39" pos:column="33"/></name></expr></cpp:elif>

    <decl_stmt><decl><type><name pos:line="41" pos:column="5">OSStatus<pos:position pos:line="41" pos:column="13"/></name></type> <name pos:line="41" pos:column="14">success<pos:position pos:line="41" pos:column="21"/></name> <init pos:line="41" pos:column="22">= <expr><call><name pos:line="41" pos:column="24">SecItemExport<pos:position pos:line="41" pos:column="37"/></name><argument_list pos:line="41" pos:column="37">(<argument><expr><name pos:line="41" pos:column="38">keyRef<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="46">kSecFormatOpenSSL<pos:position pos:line="41" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="65">0<pos:position pos:line="41" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="68">NULL<pos:position pos:line="41" pos:column="72"/></name></expr></argument>,
                                     <argument><expr><operator pos:line="42" pos:column="38">&amp;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="39">publicKeyBits<pos:position pos:line="42" pos:column="52"/></name></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="54"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">CFRelease<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><name pos:line="43" pos:column="15">keyRef<pos:position pos:line="43" pos:column="21"/></name></expr></argument>)<pos:position pos:line="43" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
    <if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><name pos:line="44" pos:column="8">success<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">!=<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">errSecSuccess<pos:position pos:line="44" pos:column="32"/></name> <operator pos:line="44" pos:column="33">||<pos:position pos:line="44" pos:column="35"/></operator> <name pos:line="44" pos:column="36">publicKeyBits<pos:position pos:line="44" pos:column="49"/></name> <operator pos:line="44" pos:column="50">==<pos:position pos:line="44" pos:column="52"/></operator> <name pos:line="44" pos:column="53">NULL<pos:position pos:line="44" pos:column="57"/></name></expr>)<pos:position pos:line="44" pos:column="58"/></condition><then pos:line="44" pos:column="58">
      <block type="pseudo"><break pos:line="45" pos:column="7">break;<pos:position pos:line="45" pos:column="13"/></break></block></then></if>

<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif<pos:position pos:line="47" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="47" pos:column="8">/* DARWIN_SSL_PINNEDPUBKEY_V2 */</comment>

    <expr_stmt><expr><name pos:line="49" pos:column="5">pubkeylen<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">=<pos:position pos:line="49" pos:column="16"/></operator> <call><name pos:line="49" pos:column="17">CFDataGetLength<pos:position pos:line="49" pos:column="32"/></name><argument_list pos:line="49" pos:column="32">(<argument><expr><name pos:line="49" pos:column="33">publicKeyBits<pos:position pos:line="49" pos:column="46"/></name></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="50" pos:column="5">pubkey<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <operator pos:line="50" pos:column="14">(<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="15">unsigned<pos:position pos:line="50" pos:column="23"/></name> <name pos:line="50" pos:column="24">char<pos:position pos:line="50" pos:column="28"/></name> <operator pos:line="50" pos:column="29">*<pos:position pos:line="50" pos:column="30"/></operator><operator pos:line="50" pos:column="30">)<pos:position pos:line="50" pos:column="31"/></operator><call><name pos:line="50" pos:column="31">CFDataGetBytePtr<pos:position pos:line="50" pos:column="47"/></name><argument_list pos:line="50" pos:column="47">(<argument><expr><name pos:line="50" pos:column="48">publicKeyBits<pos:position pos:line="50" pos:column="61"/></name></expr></argument>)<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt>

    <switch pos:line="52" pos:column="5">switch<condition pos:line="52" pos:column="11">(<expr><name pos:line="52" pos:column="12">pubkeylen<pos:position pos:line="52" pos:column="21"/></name></expr>)<pos:position pos:line="52" pos:column="22"/></condition> <block pos:line="52" pos:column="23">{
      <case pos:line="53" pos:column="7">case <expr><literal type="number" pos:line="53" pos:column="12">526<pos:position pos:line="53" pos:column="15"/></literal></expr>:<pos:position pos:line="53" pos:column="16"/></case>
        <comment type="block" pos:line="54" pos:column="9">/* 4096 bit RSA pubkeylen == 526 */</comment>
        <expr_stmt><expr><name pos:line="55" pos:column="9">spkiHeader<pos:position pos:line="55" pos:column="19"/></name> <operator pos:line="55" pos:column="20">=<pos:position pos:line="55" pos:column="21"/></operator> <name pos:line="55" pos:column="22">rsa4096SpkiHeader<pos:position pos:line="55" pos:column="39"/></name></expr>;<pos:position pos:line="55" pos:column="40"/></expr_stmt>
        <break pos:line="56" pos:column="9">break;<pos:position pos:line="56" pos:column="15"/></break>
      <case pos:line="57" pos:column="7">case <expr><literal type="number" pos:line="57" pos:column="12">270<pos:position pos:line="57" pos:column="15"/></literal></expr>:<pos:position pos:line="57" pos:column="16"/></case>
        <comment type="block" pos:line="58" pos:column="9">/* 2048 bit RSA pubkeylen == 270 */</comment>
        <expr_stmt><expr><name pos:line="59" pos:column="9">spkiHeader<pos:position pos:line="59" pos:column="19"/></name> <operator pos:line="59" pos:column="20">=<pos:position pos:line="59" pos:column="21"/></operator> <name pos:line="59" pos:column="22">rsa2048SpkiHeader<pos:position pos:line="59" pos:column="39"/></name></expr>;<pos:position pos:line="59" pos:column="40"/></expr_stmt>
        <break pos:line="60" pos:column="9">break;<pos:position pos:line="60" pos:column="15"/></break>
<cpp:ifdef pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">ifdef<pos:position pos:line="61" pos:column="7"/></cpp:directive> <name pos:line="61" pos:column="8">DARWIN_SSL_PINNEDPUBKEY_V1<pos:position pos:line="61" pos:column="34"/></name></cpp:ifdef>
      <case pos:line="62" pos:column="7">case <expr><literal type="number" pos:line="62" pos:column="12">65<pos:position pos:line="62" pos:column="14"/></literal></expr>:<pos:position pos:line="62" pos:column="15"/></case>
        <comment type="block" pos:line="63" pos:column="9">/* ecDSA secp256r1 pubkeylen == 65 */</comment>
        <expr_stmt><expr><name pos:line="64" pos:column="9">spkiHeader<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">=<pos:position pos:line="64" pos:column="21"/></operator> <name pos:line="64" pos:column="22">ecDsaSecp256r1SpkiHeader<pos:position pos:line="64" pos:column="46"/></name></expr>;<pos:position pos:line="64" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name pos:line="65" pos:column="9">spkiHeaderLength<pos:position pos:line="65" pos:column="25"/></name> <operator pos:line="65" pos:column="26">=<pos:position pos:line="65" pos:column="27"/></operator> <literal type="number" pos:line="65" pos:column="28">26<pos:position pos:line="65" pos:column="30"/></literal></expr>;<pos:position pos:line="65" pos:column="31"/></expr_stmt>
        <break pos:line="66" pos:column="9">break;<pos:position pos:line="66" pos:column="15"/></break>
      <case pos:line="67" pos:column="7">case <expr><literal type="number" pos:line="67" pos:column="12">97<pos:position pos:line="67" pos:column="14"/></literal></expr>:<pos:position pos:line="67" pos:column="15"/></case>
        <comment type="block" pos:line="68" pos:column="9">/* ecDSA secp384r1 pubkeylen == 97 */</comment>
        <expr_stmt><expr><name pos:line="69" pos:column="9">spkiHeader<pos:position pos:line="69" pos:column="19"/></name> <operator pos:line="69" pos:column="20">=<pos:position pos:line="69" pos:column="21"/></operator> <name pos:line="69" pos:column="22">ecDsaSecp384r1SpkiHeader<pos:position pos:line="69" pos:column="46"/></name></expr>;<pos:position pos:line="69" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name pos:line="70" pos:column="9">spkiHeaderLength<pos:position pos:line="70" pos:column="25"/></name> <operator pos:line="70" pos:column="26">=<pos:position pos:line="70" pos:column="27"/></operator> <literal type="number" pos:line="70" pos:column="28">23<pos:position pos:line="70" pos:column="30"/></literal></expr>;<pos:position pos:line="70" pos:column="31"/></expr_stmt>
        <break pos:line="71" pos:column="9">break;<pos:position pos:line="71" pos:column="15"/></break>
      <default pos:line="72" pos:column="7">default:<pos:position pos:line="72" pos:column="15"/></default>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">infof<pos:position pos:line="73" pos:column="14"/></name><argument_list pos:line="73" pos:column="14">(<argument><expr><name pos:line="73" pos:column="15">data<pos:position pos:line="73" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="21">"SSL: unhandled public key length: %d\n"<pos:position pos:line="73" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="63">pubkeylen<pos:position pos:line="73" pos:column="72"/></name></expr></argument>)<pos:position pos:line="73" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="74"/></expr_stmt>
<cpp:elif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">elif<pos:position pos:line="74" pos:column="6"/></cpp:directive> <expr><name pos:line="74" pos:column="7">DARWIN_SSL_PINNEDPUBKEY_V2<pos:position pos:line="74" pos:column="33"/></name></expr></cpp:elif>
      <default pos:line="75" pos:column="7">default:<pos:position pos:line="75" pos:column="15"/></default>
        <comment type="block" pos:line="76" pos:column="9">/* ecDSA secp256r1 pubkeylen == 91 header already included?
         * ecDSA secp384r1 header already included too
         * we assume rest of algorithms do same, so do nothing
         */</comment>
        <expr_stmt><expr><name pos:line="80" pos:column="9">result<pos:position pos:line="80" pos:column="15"/></name> <operator pos:line="80" pos:column="16">=<pos:position pos:line="80" pos:column="17"/></operator> <call><name pos:line="80" pos:column="18">Curl_pin_peer_pubkey<pos:position pos:line="80" pos:column="38"/></name><argument_list pos:line="80" pos:column="38">(<argument><expr><name pos:line="80" pos:column="39">data<pos:position pos:line="80" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="45">pinnedpubkey<pos:position pos:line="80" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="59">pubkey<pos:position pos:line="80" pos:column="65"/></name></expr></argument>,
                                    <argument><expr><name pos:line="81" pos:column="37">pubkeylen<pos:position pos:line="81" pos:column="46"/></name></expr></argument>)<pos:position pos:line="81" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">endif<pos:position pos:line="82" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="82" pos:column="8">/* DARWIN_SSL_PINNEDPUBKEY_V2 */</comment>
        <continue pos:line="83" pos:column="9">continue;<pos:position pos:line="83" pos:column="18"/></continue> <comment type="block" pos:line="83" pos:column="19">/* break from loop */</comment>
    }<pos:position pos:line="84" pos:column="6"/></block></switch>

    <expr_stmt><expr><name pos:line="86" pos:column="5">realpubkeylen<pos:position pos:line="86" pos:column="18"/></name> <operator pos:line="86" pos:column="19">=<pos:position pos:line="86" pos:column="20"/></operator> <name pos:line="86" pos:column="21">pubkeylen<pos:position pos:line="86" pos:column="30"/></name> <operator pos:line="86" pos:column="31">+<pos:position pos:line="86" pos:column="32"/></operator> <name pos:line="86" pos:column="33">spkiHeaderLength<pos:position pos:line="86" pos:column="49"/></name></expr>;<pos:position pos:line="86" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="87" pos:column="5">realpubkey<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">=<pos:position pos:line="87" pos:column="17"/></operator> <call><name pos:line="87" pos:column="18">malloc<pos:position pos:line="87" pos:column="24"/></name><argument_list pos:line="87" pos:column="24">(<argument><expr><name pos:line="87" pos:column="25">realpubkeylen<pos:position pos:line="87" pos:column="38"/></name></expr></argument>)<pos:position pos:line="87" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="40"/></expr_stmt>
    <if pos:line="88" pos:column="5">if<condition pos:line="88" pos:column="7">(<expr><operator pos:line="88" pos:column="8">!<pos:position pos:line="88" pos:column="9"/></operator><name pos:line="88" pos:column="9">realpubkey<pos:position pos:line="88" pos:column="19"/></name></expr>)<pos:position pos:line="88" pos:column="20"/></condition><then pos:line="88" pos:column="20">
      <block type="pseudo"><break pos:line="89" pos:column="7">break;<pos:position pos:line="89" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><call><name pos:line="91" pos:column="5">memcpy<pos:position pos:line="91" pos:column="11"/></name><argument_list pos:line="91" pos:column="11">(<argument><expr><name pos:line="91" pos:column="12">realpubkey<pos:position pos:line="91" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="24">spkiHeader<pos:position pos:line="91" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="36">spkiHeaderLength<pos:position pos:line="91" pos:column="52"/></name></expr></argument>)<pos:position pos:line="91" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">memcpy<pos:position pos:line="92" pos:column="11"/></name><argument_list pos:line="92" pos:column="11">(<argument><expr><name pos:line="92" pos:column="12">realpubkey<pos:position pos:line="92" pos:column="22"/></name> <operator pos:line="92" pos:column="23">+<pos:position pos:line="92" pos:column="24"/></operator> <name pos:line="92" pos:column="25">spkiHeaderLength<pos:position pos:line="92" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="43">pubkey<pos:position pos:line="92" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="51">pubkeylen<pos:position pos:line="92" pos:column="60"/></name></expr></argument>)<pos:position pos:line="92" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="62"/></expr_stmt>

    <expr_stmt><expr><name pos:line="94" pos:column="5">result<pos:position pos:line="94" pos:column="11"/></name> <operator pos:line="94" pos:column="12">=<pos:position pos:line="94" pos:column="13"/></operator> <call><name pos:line="94" pos:column="14">Curl_pin_peer_pubkey<pos:position pos:line="94" pos:column="34"/></name><argument_list pos:line="94" pos:column="34">(<argument><expr><name pos:line="94" pos:column="35">data<pos:position pos:line="94" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="41">pinnedpubkey<pos:position pos:line="94" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="55">realpubkey<pos:position pos:line="94" pos:column="65"/></name></expr></argument>,
                                  <argument><expr><name pos:line="95" pos:column="35">realpubkeylen<pos:position pos:line="95" pos:column="48"/></name></expr></argument>)<pos:position pos:line="95" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="50"/></expr_stmt>

  }<pos:position pos:line="97" pos:column="4"/></block> while<condition pos:line="97" pos:column="10">(<expr><literal type="number" pos:line="97" pos:column="11">0<pos:position pos:line="97" pos:column="12"/></literal></expr>)<pos:position pos:line="97" pos:column="13"/></condition>;<pos:position pos:line="97" pos:column="14"/></do>

  <expr_stmt><expr><call><name pos:line="99" pos:column="3">Curl_safefree<pos:position pos:line="99" pos:column="16"/></name><argument_list pos:line="99" pos:column="16">(<argument><expr><name pos:line="99" pos:column="17">realpubkey<pos:position pos:line="99" pos:column="27"/></name></expr></argument>)<pos:position pos:line="99" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="29"/></expr_stmt>
  <if pos:line="100" pos:column="3">if<condition pos:line="100" pos:column="5">(<expr><name pos:line="100" pos:column="6">publicKeyBits<pos:position pos:line="100" pos:column="19"/></name> <operator pos:line="100" pos:column="20">!=<pos:position pos:line="100" pos:column="22"/></operator> <name pos:line="100" pos:column="23">NULL<pos:position pos:line="100" pos:column="27"/></name></expr>)<pos:position pos:line="100" pos:column="28"/></condition><then pos:line="100" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="101" pos:column="5">CFRelease<pos:position pos:line="101" pos:column="14"/></name><argument_list pos:line="101" pos:column="14">(<argument><expr><name pos:line="101" pos:column="15">publicKeyBits<pos:position pos:line="101" pos:column="28"/></name></expr></argument>)<pos:position pos:line="101" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="30"/></expr_stmt></block></then></if>

  <return pos:line="103" pos:column="3">return <expr><name pos:line="103" pos:column="10">result<pos:position pos:line="103" pos:column="16"/></name></expr>;<pos:position pos:line="103" pos:column="17"/></return>
}<pos:position pos:line="104" pos:column="2"/></block></function></unit>

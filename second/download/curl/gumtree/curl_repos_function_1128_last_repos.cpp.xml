<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1128_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">rtsp_done<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">CURLcode<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">status<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">bool<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">premature<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">RTSP<pos:position pos:line="5" pos:column="14"/></name></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">rtsp<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name><name pos:line="5" pos:column="23">data<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">req<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">.<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">protop<pos:position pos:line="5" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">httpStatus<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">long<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">CSeq_sent<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">long<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">CSeq_recv<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Bypass HTTP empty-reply checks on receive */</comment>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name><name pos:line="11" pos:column="6">data<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">set<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">.<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">rtspreq<pos:position pos:line="11" pos:column="23"/></name></name> <operator pos:line="11" pos:column="24">==<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">RTSPREQ_RECEIVE<pos:position pos:line="11" pos:column="42"/></name></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43">
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">premature<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">TRUE<pos:position pos:line="12" pos:column="21"/></name></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">httpStatus<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">Curl_http_done<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">conn<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="37">status<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">premature<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name pos:line="16" pos:column="6">rtsp<pos:position pos:line="16" pos:column="10"/></name></expr>)<pos:position pos:line="16" pos:column="11"/></condition><then pos:line="16" pos:column="11"> <block pos:line="16" pos:column="12">{
    <comment type="block" pos:line="17" pos:column="5">/* Check the sequence numbers */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">CSeq_sent<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <name><name pos:line="18" pos:column="17">rtsp<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">CSeq_sent<pos:position pos:line="18" pos:column="32"/></name></name></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">CSeq_recv<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <name><name pos:line="19" pos:column="17">rtsp<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">CSeq_recv<pos:position pos:line="19" pos:column="32"/></name></name></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><operator pos:line="20" pos:column="8">(<pos:position pos:line="20" pos:column="9"/></operator><name><name pos:line="20" pos:column="9">data<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">set<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">.<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">rtspreq<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">!=<pos:position pos:line="20" pos:column="29"/></operator> <name pos:line="20" pos:column="30">RTSPREQ_RECEIVE<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">)<pos:position pos:line="20" pos:column="46"/></operator> <operator pos:line="20" pos:column="47">&amp;&amp;<pos:position pos:line="20" pos:column="57"/></operator> <operator pos:line="20" pos:column="50">(<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="51">CSeq_sent<pos:position pos:line="20" pos:column="60"/></name> <operator pos:line="20" pos:column="61">!=<pos:position pos:line="20" pos:column="63"/></operator> <name pos:line="20" pos:column="64">CSeq_recv<pos:position pos:line="20" pos:column="73"/></name><operator pos:line="20" pos:column="73">)<pos:position pos:line="20" pos:column="74"/></operator></expr>)<pos:position pos:line="20" pos:column="75"/></condition><then pos:line="20" pos:column="75"> <block pos:line="20" pos:column="76">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">failf<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><name pos:line="21" pos:column="13">data<pos:position pos:line="21" pos:column="17"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="22" pos:column="13">"The CSeq of this request %ld did not match the response %ld"<pos:position pos:line="22" pos:column="74"/></literal></expr></argument>,
            <argument><expr><name pos:line="23" pos:column="13">CSeq_sent<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="24">CSeq_recv<pos:position pos:line="23" pos:column="33"/></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
      <return pos:line="24" pos:column="7">return <expr><name pos:line="24" pos:column="14">CURLE_RTSP_CSEQ_ERROR<pos:position pos:line="24" pos:column="35"/></name></expr>;<pos:position pos:line="24" pos:column="36"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name><name pos:line="26" pos:column="8">data<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">set<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">.<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">rtspreq<pos:position pos:line="26" pos:column="25"/></name></name> <operator pos:line="26" pos:column="26">==<pos:position pos:line="26" pos:column="28"/></operator> <name pos:line="26" pos:column="29">RTSPREQ_RECEIVE<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">&amp;&amp;<pos:position pos:line="26" pos:column="55"/></operator>
            <operator pos:line="27" pos:column="13">(<pos:position pos:line="27" pos:column="14"/></operator><name><name pos:line="27" pos:column="14">conn<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">proto<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">.<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">rtspc<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">.<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">rtp_channel<pos:position pos:line="27" pos:column="43"/></name></name> <operator pos:line="27" pos:column="44">==<pos:position pos:line="27" pos:column="46"/></operator> <operator pos:line="27" pos:column="47">-<pos:position pos:line="27" pos:column="48"/></operator><literal type="number" pos:line="27" pos:column="48">1<pos:position pos:line="27" pos:column="49"/></literal><operator pos:line="27" pos:column="49">)<pos:position pos:line="27" pos:column="50"/></operator></expr>)<pos:position pos:line="27" pos:column="51"/></condition><then pos:line="27" pos:column="51"> <block pos:line="27" pos:column="52">{
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">infof<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><name pos:line="28" pos:column="13">data<pos:position pos:line="28" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="19">"Got an RTP Receive with a CSeq of %ld\n"<pos:position pos:line="28" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="62">CSeq_recv<pos:position pos:line="28" pos:column="71"/></name></expr></argument>)<pos:position pos:line="28" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="73"/></expr_stmt>
      <comment type="block" pos:line="29" pos:column="7">/* TODO CPC: Server -&gt; Client logic here */</comment>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <return pos:line="33" pos:column="3">return <expr><name pos:line="33" pos:column="10">httpStatus<pos:position pos:line="33" pos:column="20"/></name></expr>;<pos:position pos:line="33" pos:column="21"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

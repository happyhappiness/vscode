<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_212.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">curl_unescape<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">string<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">length<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">alloc<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><operator pos:line="3" pos:column="15">(<pos:position pos:line="3" pos:column="16"/></operator><ternary><condition><expr><name pos:line="3" pos:column="16">length<pos:position pos:line="3" pos:column="22"/></name></expr>?<pos:position pos:line="3" pos:column="23"/></condition><then><expr><name pos:line="3" pos:column="23">length<pos:position pos:line="3" pos:column="29"/></name></expr></then><else pos:line="3" pos:column="29">:<expr><operator pos:line="3" pos:column="30">(<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="31">int<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">)<pos:position pos:line="3" pos:column="35"/></operator><call><name pos:line="3" pos:column="35">strlen<pos:position pos:line="3" pos:column="41"/></name><argument_list pos:line="3" pos:column="41">(<argument><expr><name pos:line="3" pos:column="42">string<pos:position pos:line="3" pos:column="48"/></name></expr></argument>)<pos:position pos:line="3" pos:column="49"/></argument_list></call></expr></else></ternary><operator pos:line="3" pos:column="49">)<pos:position pos:line="3" pos:column="50"/></operator><operator pos:line="3" pos:column="50">+<pos:position pos:line="3" pos:column="51"/></operator><literal type="number" pos:line="3" pos:column="51">1<pos:position pos:line="3" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ns<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><call><name pos:line="4" pos:column="14">malloc<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">alloc<pos:position pos:line="4" pos:column="26"/></name></expr></argument>)<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">in<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">strindex<pos:position pos:line="6" pos:column="15"/></name><init pos:line="6" pos:column="15">=<expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">long<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">hex<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">( <expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">ns<pos:position pos:line="9" pos:column="10"/></name></expr> )<pos:position pos:line="9" pos:column="12"/></condition><then pos:line="9" pos:column="12">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">NULL<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></return></block></then></if>

  <while pos:line="12" pos:column="3">while<condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">--<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">alloc<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&gt;<pos:position pos:line="12" pos:column="21"/></operator> <literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr>)<pos:position pos:line="12" pos:column="21"/></condition> <block pos:line="12" pos:column="22">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">in<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <operator pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">string<pos:position pos:line="13" pos:column="17"/></name></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><operator pos:line="14" pos:column="8">(<pos:position pos:line="14" pos:column="9"/></operator><literal type="char" pos:line="14" pos:column="9">'%'<pos:position pos:line="14" pos:column="12"/></literal> <operator pos:line="14" pos:column="13">==<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">in<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">)<pos:position pos:line="14" pos:column="19"/></operator> <operator pos:line="14" pos:column="20">&amp;&amp;<pos:position pos:line="14" pos:column="30"/></operator> <call><name pos:line="14" pos:column="23">ishex<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name><name pos:line="14" pos:column="29">string<pos:position pos:line="14" pos:column="35"/></name><index pos:line="14" pos:column="35">[<expr><literal type="number" pos:line="14" pos:column="36">1<pos:position pos:line="14" pos:column="37"/></literal></expr>]<pos:position pos:line="14" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call> <operator pos:line="14" pos:column="40">&amp;&amp;<pos:position pos:line="14" pos:column="50"/></operator> <call><name pos:line="14" pos:column="43">ishex<pos:position pos:line="14" pos:column="48"/></name><argument_list pos:line="14" pos:column="48">(<argument><expr><name><name pos:line="14" pos:column="49">string<pos:position pos:line="14" pos:column="55"/></name><index pos:line="14" pos:column="55">[<expr><literal type="number" pos:line="14" pos:column="56">2<pos:position pos:line="14" pos:column="57"/></literal></expr>]<pos:position pos:line="14" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="60"/></condition><then pos:line="14" pos:column="60"> <block pos:line="14" pos:column="61">{
      <comment type="block" pos:line="15" pos:column="7">/* this is two hexadecimal digits following a '%' */</comment>
      <decl_stmt><decl><type><name pos:line="16" pos:column="7">char<pos:position pos:line="16" pos:column="11"/></name></type> <name><name pos:line="16" pos:column="12">hexstr<pos:position pos:line="16" pos:column="18"/></name><index pos:line="16" pos:column="18">[<expr><literal type="number" pos:line="16" pos:column="19">3<pos:position pos:line="16" pos:column="20"/></literal></expr>]<pos:position pos:line="16" pos:column="21"/></index></name></decl>;<pos:position pos:line="16" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="17" pos:column="7">char<pos:position pos:line="17" pos:column="11"/></name> <modifier pos:line="17" pos:column="12">*<pos:position pos:line="17" pos:column="13"/></modifier></type><name pos:line="17" pos:column="13">ptr<pos:position pos:line="17" pos:column="16"/></name></decl>;<pos:position pos:line="17" pos:column="17"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="18" pos:column="7">hexstr<pos:position pos:line="18" pos:column="13"/></name><index pos:line="18" pos:column="13">[<expr><literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr>]<pos:position pos:line="18" pos:column="16"/></index></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name><name pos:line="18" pos:column="19">string<pos:position pos:line="18" pos:column="25"/></name><index pos:line="18" pos:column="25">[<expr><literal type="number" pos:line="18" pos:column="26">1<pos:position pos:line="18" pos:column="27"/></literal></expr>]<pos:position pos:line="18" pos:column="28"/></index></name></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="19" pos:column="7">hexstr<pos:position pos:line="19" pos:column="13"/></name><index pos:line="19" pos:column="13">[<expr><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal></expr>]<pos:position pos:line="19" pos:column="16"/></index></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <name><name pos:line="19" pos:column="19">string<pos:position pos:line="19" pos:column="25"/></name><index pos:line="19" pos:column="25">[<expr><literal type="number" pos:line="19" pos:column="26">2<pos:position pos:line="19" pos:column="27"/></literal></expr>]<pos:position pos:line="19" pos:column="28"/></index></name></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="20" pos:column="7">hexstr<pos:position pos:line="20" pos:column="13"/></name><index pos:line="20" pos:column="13">[<expr><literal type="number" pos:line="20" pos:column="14">2<pos:position pos:line="20" pos:column="15"/></literal></expr>]<pos:position pos:line="20" pos:column="16"/></index></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <literal type="number" pos:line="20" pos:column="19">0<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>

      <expr_stmt><expr><name pos:line="22" pos:column="7">hex<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <call><name pos:line="22" pos:column="13">strtol<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">hexstr<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="28">&amp;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="29">ptr<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="34">16<pos:position pos:line="22" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>

      <expr_stmt><expr><name pos:line="24" pos:column="7">in<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">unsigned<pos:position pos:line="24" pos:column="21"/></name> <name pos:line="24" pos:column="22">char<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">)<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">hex<pos:position pos:line="24" pos:column="30"/></name></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt> <comment type="block" pos:line="24" pos:column="32">/* this long is never bigger than 255 anyway */</comment>
      <expr_stmt><expr><name pos:line="25" pos:column="7">string<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">+=<pos:position pos:line="25" pos:column="15"/></operator><literal type="number" pos:line="25" pos:column="15">2<pos:position pos:line="25" pos:column="16"/></literal></expr>;<pos:position pos:line="25" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="26" pos:column="7">alloc<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-=<pos:position pos:line="26" pos:column="14"/></operator><literal type="number" pos:line="26" pos:column="14">2<pos:position pos:line="26" pos:column="15"/></literal></expr>;<pos:position pos:line="26" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="29" pos:column="5">ns<pos:position pos:line="29" pos:column="7"/></name><index pos:line="29" pos:column="7">[<expr><name pos:line="29" pos:column="8">strindex<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">++<pos:position pos:line="29" pos:column="18"/></operator></expr>]<pos:position pos:line="29" pos:column="19"/></index></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="22">in<pos:position pos:line="29" pos:column="24"/></name></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">string<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">++<pos:position pos:line="30" pos:column="13"/></operator></expr>;<pos:position pos:line="30" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></while>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">ns<pos:position pos:line="32" pos:column="5"/></name><index pos:line="32" pos:column="5">[<expr><name pos:line="32" pos:column="6">strindex<pos:position pos:line="32" pos:column="14"/></name></expr>]<pos:position pos:line="32" pos:column="15"/></index></name><operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></expr_stmt> <comment type="block" pos:line="32" pos:column="19">/* terminate it */</comment>
  <return pos:line="33" pos:column="3">return <expr><name pos:line="33" pos:column="10">ns<pos:position pos:line="33" pos:column="12"/></name></expr>;<pos:position pos:line="33" pos:column="13"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

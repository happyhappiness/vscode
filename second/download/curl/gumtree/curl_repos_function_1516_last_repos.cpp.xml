<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1516_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">tftp_send_first<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">tftp_state_data_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">state<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">tftp_event_t<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">event<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">sbytes<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ssize_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">senddata<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">mode<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="string" pos:line="5" pos:column="22">"octet"<pos:position pos:line="5" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">filename<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">buf<pos:position pos:line="7" pos:column="11"/></name><index pos:line="7" pos:column="11">[<expr><literal type="number" pos:line="7" pos:column="12">64<pos:position pos:line="7" pos:column="14"/></literal></expr>]<pos:position pos:line="7" pos:column="15"/></index></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">Curl_easy<pos:position pos:line="8" pos:column="19"/></name></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">data<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name><name pos:line="8" pos:column="28">state<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">-&gt;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="35">conn<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">data<pos:position pos:line="8" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">CURLcode<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">result<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name pos:line="9" pos:column="21">CURLE_OK<pos:position pos:line="9" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* Set ascii mode if -B flag was used */</comment>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name><name pos:line="12" pos:column="6">data<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">set<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">.<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">prefer_ascii<pos:position pos:line="12" pos:column="28"/></name></name></expr>)<pos:position pos:line="12" pos:column="29"/></condition><then pos:line="12" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="5">mode<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <literal type="string" pos:line="13" pos:column="12">"netascii"<pos:position pos:line="13" pos:column="22"/></literal></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt></block></then></if>

  <switch pos:line="15" pos:column="3">switch<condition pos:line="15" pos:column="9">(<expr><name pos:line="15" pos:column="10">event<pos:position pos:line="15" pos:column="15"/></name></expr>)<pos:position pos:line="15" pos:column="16"/></condition> <block pos:line="15" pos:column="17">{

  <case pos:line="17" pos:column="3">case <expr><name pos:line="17" pos:column="8">TFTP_EVENT_INIT<pos:position pos:line="17" pos:column="23"/></name></expr>:<pos:position pos:line="17" pos:column="24"/></case>    <comment type="block" pos:line="17" pos:column="28">/* Send the first packet out */</comment>
  <case pos:line="18" pos:column="3">case <expr><name pos:line="18" pos:column="8">TFTP_EVENT_TIMEOUT<pos:position pos:line="18" pos:column="26"/></name></expr>:<pos:position pos:line="18" pos:column="27"/></case> <comment type="block" pos:line="18" pos:column="28">/* Resend the first packet out */</comment>
    <comment type="block" pos:line="19" pos:column="5">/* Increment the retry counter, quit if over the limit */</comment>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">state<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">retries<pos:position pos:line="20" pos:column="19"/></name></name><operator pos:line="20" pos:column="19">++<pos:position pos:line="20" pos:column="21"/></operator></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><name><name pos:line="21" pos:column="8">state<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">retries<pos:position pos:line="21" pos:column="22"/></name></name><operator pos:line="21" pos:column="22">&gt;<pos:position pos:line="21" pos:column="26"/></operator><name><name pos:line="21" pos:column="23">state<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">retry_max<pos:position pos:line="21" pos:column="39"/></name></name></expr>)<pos:position pos:line="21" pos:column="40"/></condition><then pos:line="21" pos:column="40"> <block pos:line="21" pos:column="41">{
      <expr_stmt><expr><name><name pos:line="22" pos:column="7">state<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">error<pos:position pos:line="22" pos:column="19"/></name></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">TFTP_ERR_NORESPONSE<pos:position pos:line="22" pos:column="41"/></name></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="23" pos:column="7">state<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">state<pos:position pos:line="23" pos:column="19"/></name></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">TFTP_STATE_FIN<pos:position pos:line="23" pos:column="36"/></name></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
      <return pos:line="24" pos:column="7">return <expr><name pos:line="24" pos:column="14">result<pos:position pos:line="24" pos:column="20"/></name></expr>;<pos:position pos:line="24" pos:column="21"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><name><name pos:line="27" pos:column="8">data<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">set<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">.<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">upload<pos:position pos:line="27" pos:column="24"/></name></name></expr>)<pos:position pos:line="27" pos:column="25"/></condition><then pos:line="27" pos:column="25"> <block pos:line="27" pos:column="26">{
      <comment type="block" pos:line="28" pos:column="7">/* If we are uploading, send an WRQ */</comment>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">setpacketevent<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><operator pos:line="29" pos:column="22">&amp;<pos:position pos:line="29" pos:column="27"/></operator><name><name pos:line="29" pos:column="23">state<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">-&gt;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="30">spacket<pos:position pos:line="29" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="39">TFTP_EVENT_WRQ<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="30" pos:column="7">state<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">conn<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">-&gt;<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="20">data<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">req<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">.<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="30">upload_fromhere<pos:position pos:line="30" pos:column="45"/></name></name> <operator pos:line="30" pos:column="46">=<pos:position pos:line="30" pos:column="47"/></operator>
        <operator pos:line="31" pos:column="9">(<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">char<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">*<pos:position pos:line="31" pos:column="16"/></operator><operator pos:line="31" pos:column="16">)<pos:position pos:line="31" pos:column="17"/></operator><name><name pos:line="31" pos:column="17">state<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">-&gt;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="24">spacket<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">.<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="32">data<pos:position pos:line="31" pos:column="36"/></name></name> <operator pos:line="31" pos:column="37">+<pos:position pos:line="31" pos:column="38"/></operator> <literal type="number" pos:line="31" pos:column="39">4<pos:position pos:line="31" pos:column="40"/></literal></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
      <if pos:line="32" pos:column="7">if<condition pos:line="32" pos:column="9">(<expr><name><name pos:line="32" pos:column="10">data<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">state<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">.<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">infilesize<pos:position pos:line="32" pos:column="32"/></name></name> <operator pos:line="32" pos:column="33">!=<pos:position pos:line="32" pos:column="35"/></operator> <operator pos:line="32" pos:column="36">-<pos:position pos:line="32" pos:column="37"/></operator><literal type="number" pos:line="32" pos:column="37">1<pos:position pos:line="32" pos:column="38"/></literal></expr>)<pos:position pos:line="32" pos:column="39"/></condition><then pos:line="32" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="9">Curl_pgrsSetUploadSize<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">data<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="38">data<pos:position pos:line="33" pos:column="42"/></name><operator pos:line="33" pos:column="42">-&gt;<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="44">state<pos:position pos:line="33" pos:column="49"/></name><operator pos:line="33" pos:column="49">.<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="50">infilesize<pos:position pos:line="33" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt></block></then></if>
    }<pos:position pos:line="34" pos:column="6"/></block></then>
    <else pos:line="35" pos:column="5">else <block pos:line="35" pos:column="10">{
      <comment type="block" pos:line="36" pos:column="7">/* If we are downloading, send an RRQ */</comment>
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">setpacketevent<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><operator pos:line="37" pos:column="22">&amp;<pos:position pos:line="37" pos:column="27"/></operator><name><name pos:line="37" pos:column="23">state<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">-&gt;<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="30">spacket<pos:position pos:line="37" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="39">TFTP_EVENT_RRQ<pos:position pos:line="37" pos:column="53"/></name></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>
    <comment type="block" pos:line="39" pos:column="5">/* As RFC3617 describes the separator slash is not actually part of the
       file name so we skip the always-present first letter of the path
       string. */</comment>
    <expr_stmt><expr><name pos:line="42" pos:column="5">result<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">Curl_urldecode<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">data<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="35">&amp;<pos:position pos:line="42" pos:column="40"/></operator><name><name pos:line="42" pos:column="36">state<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">-&gt;<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="43">conn<pos:position pos:line="42" pos:column="47"/></name><operator pos:line="42" pos:column="47">-&gt;<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="49">data<pos:position pos:line="42" pos:column="53"/></name><operator pos:line="42" pos:column="53">-&gt;<pos:position pos:line="42" pos:column="58"/></operator><name pos:line="42" pos:column="55">state<pos:position pos:line="42" pos:column="60"/></name><operator pos:line="42" pos:column="60">.<pos:position pos:line="42" pos:column="61"/></operator><name pos:line="42" pos:column="61">path<pos:position pos:line="42" pos:column="65"/></name><index pos:line="42" pos:column="65">[<expr><literal type="number" pos:line="42" pos:column="66">1<pos:position pos:line="42" pos:column="67"/></literal></expr>]<pos:position pos:line="42" pos:column="68"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="70">0<pos:position pos:line="42" pos:column="71"/></literal></expr></argument>,
                            <argument><expr><operator pos:line="43" pos:column="29">&amp;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="30">filename<pos:position pos:line="43" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="40">NULL<pos:position pos:line="43" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="46">FALSE<pos:position pos:line="43" pos:column="51"/></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt>
    <if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><name pos:line="44" pos:column="8">result<pos:position pos:line="44" pos:column="14"/></name></expr>)<pos:position pos:line="44" pos:column="15"/></condition><then pos:line="44" pos:column="15">
      <block type="pseudo"><return pos:line="45" pos:column="7">return <expr><name pos:line="45" pos:column="14">result<pos:position pos:line="45" pos:column="20"/></name></expr>;<pos:position pos:line="45" pos:column="21"/></return></block></then></if>

    <if pos:line="47" pos:column="5">if<condition pos:line="47" pos:column="7">(<expr><call><name pos:line="47" pos:column="8">strlen<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><name pos:line="47" pos:column="15">filename<pos:position pos:line="47" pos:column="23"/></name></expr></argument>)<pos:position pos:line="47" pos:column="24"/></argument_list></call> <operator pos:line="47" pos:column="25">&gt;<pos:position pos:line="47" pos:column="29"/></operator> <operator pos:line="47" pos:column="27">(<pos:position pos:line="47" pos:column="28"/></operator><name><name pos:line="47" pos:column="28">state<pos:position pos:line="47" pos:column="33"/></name><operator pos:line="47" pos:column="33">-&gt;<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="35">blksize<pos:position pos:line="47" pos:column="42"/></name></name> <operator pos:line="47" pos:column="43">-<pos:position pos:line="47" pos:column="44"/></operator> <call><name pos:line="47" pos:column="45">strlen<pos:position pos:line="47" pos:column="51"/></name><argument_list pos:line="47" pos:column="51">(<argument><expr><name pos:line="47" pos:column="52">mode<pos:position pos:line="47" pos:column="56"/></name></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call> <operator pos:line="47" pos:column="58">-<pos:position pos:line="47" pos:column="59"/></operator> <literal type="number" pos:line="47" pos:column="60">4<pos:position pos:line="47" pos:column="61"/></literal><operator pos:line="47" pos:column="61">)<pos:position pos:line="47" pos:column="62"/></operator></expr>)<pos:position pos:line="47" pos:column="63"/></condition><then pos:line="47" pos:column="63"> <block pos:line="47" pos:column="64">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">failf<pos:position pos:line="48" pos:column="12"/></name><argument_list pos:line="48" pos:column="12">(<argument><expr><name pos:line="48" pos:column="13">data<pos:position pos:line="48" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="19">"TFTP file name too long\n"<pos:position pos:line="48" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">free<pos:position pos:line="49" pos:column="11"/></name><argument_list pos:line="49" pos:column="11">(<argument><expr><name pos:line="49" pos:column="12">filename<pos:position pos:line="49" pos:column="20"/></name></expr></argument>)<pos:position pos:line="49" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="22"/></expr_stmt>
      <return pos:line="50" pos:column="7">return <expr><name pos:line="50" pos:column="14">CURLE_TFTP_ILLEGAL<pos:position pos:line="50" pos:column="32"/></name></expr>;<pos:position pos:line="50" pos:column="33"/></return> <comment type="block" pos:line="50" pos:column="34">/* too long file name field */</comment>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="53" pos:column="5">snprintf<pos:position pos:line="53" pos:column="13"/></name><argument_list pos:line="53" pos:column="13">(<argument><expr><operator pos:line="53" pos:column="14">(<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="15">char<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">*<pos:position pos:line="53" pos:column="21"/></operator><operator pos:line="53" pos:column="21">)<pos:position pos:line="53" pos:column="22"/></operator><name><name pos:line="53" pos:column="22">state<pos:position pos:line="53" pos:column="27"/></name><operator pos:line="53" pos:column="27">-&gt;<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="29">spacket<pos:position pos:line="53" pos:column="36"/></name><operator pos:line="53" pos:column="36">.<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="37">data<pos:position pos:line="53" pos:column="41"/></name></name> <operator pos:line="53" pos:column="42">+<pos:position pos:line="53" pos:column="43"/></operator> <literal type="number" pos:line="53" pos:column="44">2<pos:position pos:line="53" pos:column="45"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="54" pos:column="14">state<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">-&gt;<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="21">blksize<pos:position pos:line="54" pos:column="28"/></name></name></expr></argument>,
             <argument><expr><literal type="string" pos:line="55" pos:column="14">"%s%c%s%c"<pos:position pos:line="55" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="26">filename<pos:position pos:line="55" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="55" pos:column="36">'\0'<pos:position pos:line="55" pos:column="40"/></literal></expr></argument>,  <argument><expr><name pos:line="55" pos:column="43">mode<pos:position pos:line="55" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="55" pos:column="49">'\0'<pos:position pos:line="55" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="56" pos:column="5">sbytes<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <literal type="number" pos:line="56" pos:column="14">4<pos:position pos:line="56" pos:column="15"/></literal> <operator pos:line="56" pos:column="16">+<pos:position pos:line="56" pos:column="17"/></operator> <call><name pos:line="56" pos:column="18">strlen<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">filename<pos:position pos:line="56" pos:column="33"/></name></expr></argument>)<pos:position pos:line="56" pos:column="34"/></argument_list></call> <operator pos:line="56" pos:column="35">+<pos:position pos:line="56" pos:column="36"/></operator> <call><name pos:line="56" pos:column="37">strlen<pos:position pos:line="56" pos:column="43"/></name><argument_list pos:line="56" pos:column="43">(<argument><expr><name pos:line="56" pos:column="44">mode<pos:position pos:line="56" pos:column="48"/></name></expr></argument>)<pos:position pos:line="56" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="58" pos:column="5">/* optional addition of TFTP options */</comment>
    <if pos:line="59" pos:column="5">if<condition pos:line="59" pos:column="7">(<expr><operator pos:line="59" pos:column="8">!<pos:position pos:line="59" pos:column="9"/></operator><name><name pos:line="59" pos:column="9">data<pos:position pos:line="59" pos:column="13"/></name><operator pos:line="59" pos:column="13">-&gt;<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="15">set<pos:position pos:line="59" pos:column="18"/></name><operator pos:line="59" pos:column="18">.<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="19">tftp_no_options<pos:position pos:line="59" pos:column="34"/></name></name></expr>)<pos:position pos:line="59" pos:column="35"/></condition><then pos:line="59" pos:column="35"> <block pos:line="59" pos:column="36">{
      <comment type="block" pos:line="60" pos:column="7">/* add tsize option */</comment>
      <if pos:line="61" pos:column="7">if<condition pos:line="61" pos:column="9">(<expr><name><name pos:line="61" pos:column="10">data<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">-&gt;<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="16">set<pos:position pos:line="61" pos:column="19"/></name><operator pos:line="61" pos:column="19">.<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="20">upload<pos:position pos:line="61" pos:column="26"/></name></name> <operator pos:line="61" pos:column="27">&amp;&amp;<pos:position pos:line="61" pos:column="37"/></operator> <operator pos:line="61" pos:column="30">(<pos:position pos:line="61" pos:column="31"/></operator><name><name pos:line="61" pos:column="31">data<pos:position pos:line="61" pos:column="35"/></name><operator pos:line="61" pos:column="35">-&gt;<pos:position pos:line="61" pos:column="40"/></operator><name pos:line="61" pos:column="37">state<pos:position pos:line="61" pos:column="42"/></name><operator pos:line="61" pos:column="42">.<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="43">infilesize<pos:position pos:line="61" pos:column="53"/></name></name> <operator pos:line="61" pos:column="54">!=<pos:position pos:line="61" pos:column="56"/></operator> <operator pos:line="61" pos:column="57">-<pos:position pos:line="61" pos:column="58"/></operator><literal type="number" pos:line="61" pos:column="58">1<pos:position pos:line="61" pos:column="59"/></literal><operator pos:line="61" pos:column="59">)<pos:position pos:line="61" pos:column="60"/></operator></expr>)<pos:position pos:line="61" pos:column="61"/></condition><then pos:line="61" pos:column="61">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="9">snprintf<pos:position pos:line="62" pos:column="17"/></name><argument_list pos:line="62" pos:column="17">(<argument><expr><name pos:line="62" pos:column="18">buf<pos:position pos:line="62" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="23">sizeof<argument_list pos:line="62" pos:column="29">(<argument><expr><name pos:line="62" pos:column="30">buf<pos:position pos:line="62" pos:column="33"/></name></expr></argument>)<pos:position pos:line="62" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="36">"%"<pos:position pos:line="62" pos:column="39"/></literal> <name pos:line="62" pos:column="40">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="62" pos:column="62"/></name></expr></argument>,
                 <argument><expr><name><name pos:line="63" pos:column="18">data<pos:position pos:line="63" pos:column="22"/></name><operator pos:line="63" pos:column="22">-&gt;<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="24">state<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">.<pos:position pos:line="63" pos:column="30"/></operator><name pos:line="63" pos:column="30">infilesize<pos:position pos:line="63" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="42"/></expr_stmt></block></then>
      <else pos:line="64" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="9">strcpy<pos:position pos:line="65" pos:column="15"/></name><argument_list pos:line="65" pos:column="15">(<argument><expr><name pos:line="65" pos:column="16">buf<pos:position pos:line="65" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="21">"0"<pos:position pos:line="65" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="26"/></expr_stmt></block></else></if> <comment type="block" pos:line="65" pos:column="27">/* the destination is large enough */</comment>

      <expr_stmt><expr><name pos:line="67" pos:column="7">sbytes<pos:position pos:line="67" pos:column="13"/></name> <operator pos:line="67" pos:column="14">+=<pos:position pos:line="67" pos:column="16"/></operator> <call><name pos:line="67" pos:column="17">tftp_option_add<pos:position pos:line="67" pos:column="32"/></name><argument_list pos:line="67" pos:column="32">(<argument><expr><name pos:line="67" pos:column="33">state<pos:position pos:line="67" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="40">sbytes<pos:position pos:line="67" pos:column="46"/></name></expr></argument>,
                                <argument><expr><operator pos:line="68" pos:column="33">(<pos:position pos:line="68" pos:column="34"/></operator><name pos:line="68" pos:column="34">char<pos:position pos:line="68" pos:column="38"/></name> <operator pos:line="68" pos:column="39">*<pos:position pos:line="68" pos:column="40"/></operator><operator pos:line="68" pos:column="40">)<pos:position pos:line="68" pos:column="41"/></operator><name><name pos:line="68" pos:column="41">state<pos:position pos:line="68" pos:column="46"/></name><operator pos:line="68" pos:column="46">-&gt;<pos:position pos:line="68" pos:column="51"/></operator><name pos:line="68" pos:column="48">spacket<pos:position pos:line="68" pos:column="55"/></name><operator pos:line="68" pos:column="55">.<pos:position pos:line="68" pos:column="56"/></operator><name pos:line="68" pos:column="56">data<pos:position pos:line="68" pos:column="60"/></name></name> <operator pos:line="68" pos:column="61">+<pos:position pos:line="68" pos:column="62"/></operator> <name pos:line="68" pos:column="63">sbytes<pos:position pos:line="68" pos:column="69"/></name></expr></argument>,
                                <argument><expr><name pos:line="69" pos:column="33">TFTP_OPTION_TSIZE<pos:position pos:line="69" pos:column="50"/></name></expr></argument>)<pos:position pos:line="69" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name pos:line="70" pos:column="7">sbytes<pos:position pos:line="70" pos:column="13"/></name> <operator pos:line="70" pos:column="14">+=<pos:position pos:line="70" pos:column="16"/></operator> <call><name pos:line="70" pos:column="17">tftp_option_add<pos:position pos:line="70" pos:column="32"/></name><argument_list pos:line="70" pos:column="32">(<argument><expr><name pos:line="70" pos:column="33">state<pos:position pos:line="70" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="40">sbytes<pos:position pos:line="70" pos:column="46"/></name></expr></argument>,
                                <argument><expr><operator pos:line="71" pos:column="33">(<pos:position pos:line="71" pos:column="34"/></operator><name pos:line="71" pos:column="34">char<pos:position pos:line="71" pos:column="38"/></name> <operator pos:line="71" pos:column="39">*<pos:position pos:line="71" pos:column="40"/></operator><operator pos:line="71" pos:column="40">)<pos:position pos:line="71" pos:column="41"/></operator><name><name pos:line="71" pos:column="41">state<pos:position pos:line="71" pos:column="46"/></name><operator pos:line="71" pos:column="46">-&gt;<pos:position pos:line="71" pos:column="51"/></operator><name pos:line="71" pos:column="48">spacket<pos:position pos:line="71" pos:column="55"/></name><operator pos:line="71" pos:column="55">.<pos:position pos:line="71" pos:column="56"/></operator><name pos:line="71" pos:column="56">data<pos:position pos:line="71" pos:column="60"/></name></name> <operator pos:line="71" pos:column="61">+<pos:position pos:line="71" pos:column="62"/></operator> <name pos:line="71" pos:column="63">sbytes<pos:position pos:line="71" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="71">buf<pos:position pos:line="71" pos:column="74"/></name></expr></argument>)<pos:position pos:line="71" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="76"/></expr_stmt>
      <comment type="block" pos:line="72" pos:column="7">/* add blksize option */</comment>
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">snprintf<pos:position pos:line="73" pos:column="15"/></name><argument_list pos:line="73" pos:column="15">(<argument><expr><name pos:line="73" pos:column="16">buf<pos:position pos:line="73" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="21">sizeof<argument_list pos:line="73" pos:column="27">(<argument><expr><name pos:line="73" pos:column="28">buf<pos:position pos:line="73" pos:column="31"/></name></expr></argument>)<pos:position pos:line="73" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="34">"%d"<pos:position pos:line="73" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="40">state<pos:position pos:line="73" pos:column="45"/></name><operator pos:line="73" pos:column="45">-&gt;<pos:position pos:line="73" pos:column="50"/></operator><name pos:line="73" pos:column="47">requested_blksize<pos:position pos:line="73" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="66"/></expr_stmt>
      <expr_stmt><expr><name pos:line="74" pos:column="7">sbytes<pos:position pos:line="74" pos:column="13"/></name> <operator pos:line="74" pos:column="14">+=<pos:position pos:line="74" pos:column="16"/></operator> <call><name pos:line="74" pos:column="17">tftp_option_add<pos:position pos:line="74" pos:column="32"/></name><argument_list pos:line="74" pos:column="32">(<argument><expr><name pos:line="74" pos:column="33">state<pos:position pos:line="74" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="40">sbytes<pos:position pos:line="74" pos:column="46"/></name></expr></argument>,
                                <argument><expr><operator pos:line="75" pos:column="33">(<pos:position pos:line="75" pos:column="34"/></operator><name pos:line="75" pos:column="34">char<pos:position pos:line="75" pos:column="38"/></name> <operator pos:line="75" pos:column="39">*<pos:position pos:line="75" pos:column="40"/></operator><operator pos:line="75" pos:column="40">)<pos:position pos:line="75" pos:column="41"/></operator><name><name pos:line="75" pos:column="41">state<pos:position pos:line="75" pos:column="46"/></name><operator pos:line="75" pos:column="46">-&gt;<pos:position pos:line="75" pos:column="51"/></operator><name pos:line="75" pos:column="48">spacket<pos:position pos:line="75" pos:column="55"/></name><operator pos:line="75" pos:column="55">.<pos:position pos:line="75" pos:column="56"/></operator><name pos:line="75" pos:column="56">data<pos:position pos:line="75" pos:column="60"/></name></name> <operator pos:line="75" pos:column="61">+<pos:position pos:line="75" pos:column="62"/></operator> <name pos:line="75" pos:column="63">sbytes<pos:position pos:line="75" pos:column="69"/></name></expr></argument>,
                                <argument><expr><name pos:line="76" pos:column="33">TFTP_OPTION_BLKSIZE<pos:position pos:line="76" pos:column="52"/></name></expr></argument>)<pos:position pos:line="76" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name pos:line="77" pos:column="7">sbytes<pos:position pos:line="77" pos:column="13"/></name> <operator pos:line="77" pos:column="14">+=<pos:position pos:line="77" pos:column="16"/></operator> <call><name pos:line="77" pos:column="17">tftp_option_add<pos:position pos:line="77" pos:column="32"/></name><argument_list pos:line="77" pos:column="32">(<argument><expr><name pos:line="77" pos:column="33">state<pos:position pos:line="77" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="40">sbytes<pos:position pos:line="77" pos:column="46"/></name></expr></argument>,
                                <argument><expr><operator pos:line="78" pos:column="33">(<pos:position pos:line="78" pos:column="34"/></operator><name pos:line="78" pos:column="34">char<pos:position pos:line="78" pos:column="38"/></name> <operator pos:line="78" pos:column="39">*<pos:position pos:line="78" pos:column="40"/></operator><operator pos:line="78" pos:column="40">)<pos:position pos:line="78" pos:column="41"/></operator><name><name pos:line="78" pos:column="41">state<pos:position pos:line="78" pos:column="46"/></name><operator pos:line="78" pos:column="46">-&gt;<pos:position pos:line="78" pos:column="51"/></operator><name pos:line="78" pos:column="48">spacket<pos:position pos:line="78" pos:column="55"/></name><operator pos:line="78" pos:column="55">.<pos:position pos:line="78" pos:column="56"/></operator><name pos:line="78" pos:column="56">data<pos:position pos:line="78" pos:column="60"/></name></name> <operator pos:line="78" pos:column="61">+<pos:position pos:line="78" pos:column="62"/></operator> <name pos:line="78" pos:column="63">sbytes<pos:position pos:line="78" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="71">buf<pos:position pos:line="78" pos:column="74"/></name></expr></argument>)<pos:position pos:line="78" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="76"/></expr_stmt>

      <comment type="block" pos:line="80" pos:column="7">/* add timeout option */</comment>
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">snprintf<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">(<argument><expr><name pos:line="81" pos:column="16">buf<pos:position pos:line="81" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="81" pos:column="21">sizeof<argument_list pos:line="81" pos:column="27">(<argument><expr><name pos:line="81" pos:column="28">buf<pos:position pos:line="81" pos:column="31"/></name></expr></argument>)<pos:position pos:line="81" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="34">"%d"<pos:position pos:line="81" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="40">state<pos:position pos:line="81" pos:column="45"/></name><operator pos:line="81" pos:column="45">-&gt;<pos:position pos:line="81" pos:column="50"/></operator><name pos:line="81" pos:column="47">retry_time<pos:position pos:line="81" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><name pos:line="82" pos:column="7">sbytes<pos:position pos:line="82" pos:column="13"/></name> <operator pos:line="82" pos:column="14">+=<pos:position pos:line="82" pos:column="16"/></operator> <call><name pos:line="82" pos:column="17">tftp_option_add<pos:position pos:line="82" pos:column="32"/></name><argument_list pos:line="82" pos:column="32">(<argument><expr><name pos:line="82" pos:column="33">state<pos:position pos:line="82" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="40">sbytes<pos:position pos:line="82" pos:column="46"/></name></expr></argument>,
                                <argument><expr><operator pos:line="83" pos:column="33">(<pos:position pos:line="83" pos:column="34"/></operator><name pos:line="83" pos:column="34">char<pos:position pos:line="83" pos:column="38"/></name> <operator pos:line="83" pos:column="39">*<pos:position pos:line="83" pos:column="40"/></operator><operator pos:line="83" pos:column="40">)<pos:position pos:line="83" pos:column="41"/></operator><name><name pos:line="83" pos:column="41">state<pos:position pos:line="83" pos:column="46"/></name><operator pos:line="83" pos:column="46">-&gt;<pos:position pos:line="83" pos:column="51"/></operator><name pos:line="83" pos:column="48">spacket<pos:position pos:line="83" pos:column="55"/></name><operator pos:line="83" pos:column="55">.<pos:position pos:line="83" pos:column="56"/></operator><name pos:line="83" pos:column="56">data<pos:position pos:line="83" pos:column="60"/></name></name> <operator pos:line="83" pos:column="61">+<pos:position pos:line="83" pos:column="62"/></operator> <name pos:line="83" pos:column="63">sbytes<pos:position pos:line="83" pos:column="69"/></name></expr></argument>,
                                <argument><expr><name pos:line="84" pos:column="33">TFTP_OPTION_INTERVAL<pos:position pos:line="84" pos:column="53"/></name></expr></argument>)<pos:position pos:line="84" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="85" pos:column="7">sbytes<pos:position pos:line="85" pos:column="13"/></name> <operator pos:line="85" pos:column="14">+=<pos:position pos:line="85" pos:column="16"/></operator> <call><name pos:line="85" pos:column="17">tftp_option_add<pos:position pos:line="85" pos:column="32"/></name><argument_list pos:line="85" pos:column="32">(<argument><expr><name pos:line="85" pos:column="33">state<pos:position pos:line="85" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="40">sbytes<pos:position pos:line="85" pos:column="46"/></name></expr></argument>,
                                <argument><expr><operator pos:line="86" pos:column="33">(<pos:position pos:line="86" pos:column="34"/></operator><name pos:line="86" pos:column="34">char<pos:position pos:line="86" pos:column="38"/></name> <operator pos:line="86" pos:column="39">*<pos:position pos:line="86" pos:column="40"/></operator><operator pos:line="86" pos:column="40">)<pos:position pos:line="86" pos:column="41"/></operator><name><name pos:line="86" pos:column="41">state<pos:position pos:line="86" pos:column="46"/></name><operator pos:line="86" pos:column="46">-&gt;<pos:position pos:line="86" pos:column="51"/></operator><name pos:line="86" pos:column="48">spacket<pos:position pos:line="86" pos:column="55"/></name><operator pos:line="86" pos:column="55">.<pos:position pos:line="86" pos:column="56"/></operator><name pos:line="86" pos:column="56">data<pos:position pos:line="86" pos:column="60"/></name></name> <operator pos:line="86" pos:column="61">+<pos:position pos:line="86" pos:column="62"/></operator> <name pos:line="86" pos:column="63">sbytes<pos:position pos:line="86" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="71">buf<pos:position pos:line="86" pos:column="74"/></name></expr></argument>)<pos:position pos:line="86" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="89" pos:column="5">/* the typecase for the 3rd argument is mostly for systems that do
       not have a size_t argument, like older unixes that want an 'int' */</comment>
    <expr_stmt><expr><name pos:line="91" pos:column="5">senddata<pos:position pos:line="91" pos:column="13"/></name> <operator pos:line="91" pos:column="14">=<pos:position pos:line="91" pos:column="15"/></operator> <call><name pos:line="91" pos:column="16">sendto<pos:position pos:line="91" pos:column="22"/></name><argument_list pos:line="91" pos:column="22">(<argument><expr><name><name pos:line="91" pos:column="23">state<pos:position pos:line="91" pos:column="28"/></name><operator pos:line="91" pos:column="28">-&gt;<pos:position pos:line="91" pos:column="33"/></operator><name pos:line="91" pos:column="30">sockfd<pos:position pos:line="91" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="38">(<pos:position pos:line="91" pos:column="39"/></operator><name pos:line="91" pos:column="39">void<pos:position pos:line="91" pos:column="43"/></name> <operator pos:line="91" pos:column="44">*<pos:position pos:line="91" pos:column="45"/></operator><operator pos:line="91" pos:column="45">)<pos:position pos:line="91" pos:column="46"/></operator><name><name pos:line="91" pos:column="46">state<pos:position pos:line="91" pos:column="51"/></name><operator pos:line="91" pos:column="51">-&gt;<pos:position pos:line="91" pos:column="56"/></operator><name pos:line="91" pos:column="53">spacket<pos:position pos:line="91" pos:column="60"/></name><operator pos:line="91" pos:column="60">.<pos:position pos:line="91" pos:column="61"/></operator><name pos:line="91" pos:column="61">data<pos:position pos:line="91" pos:column="65"/></name></name></expr></argument>,
                      <argument><expr><operator pos:line="92" pos:column="23">(<pos:position pos:line="92" pos:column="24"/></operator><name pos:line="92" pos:column="24">SEND_TYPE_ARG3<pos:position pos:line="92" pos:column="38"/></name><operator pos:line="92" pos:column="38">)<pos:position pos:line="92" pos:column="39"/></operator><name pos:line="92" pos:column="39">sbytes<pos:position pos:line="92" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="47">0<pos:position pos:line="92" pos:column="48"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="93" pos:column="23">state<pos:position pos:line="93" pos:column="28"/></name><operator pos:line="93" pos:column="28">-&gt;<pos:position pos:line="93" pos:column="33"/></operator><name pos:line="93" pos:column="30">conn<pos:position pos:line="93" pos:column="34"/></name><operator pos:line="93" pos:column="34">-&gt;<pos:position pos:line="93" pos:column="39"/></operator><name pos:line="93" pos:column="36">ip_addr<pos:position pos:line="93" pos:column="43"/></name><operator pos:line="93" pos:column="43">-&gt;<pos:position pos:line="93" pos:column="48"/></operator><name pos:line="93" pos:column="45">ai_addr<pos:position pos:line="93" pos:column="52"/></name></name></expr></argument>,
                      <argument><expr><name><name pos:line="94" pos:column="23">state<pos:position pos:line="94" pos:column="28"/></name><operator pos:line="94" pos:column="28">-&gt;<pos:position pos:line="94" pos:column="33"/></operator><name pos:line="94" pos:column="30">conn<pos:position pos:line="94" pos:column="34"/></name><operator pos:line="94" pos:column="34">-&gt;<pos:position pos:line="94" pos:column="39"/></operator><name pos:line="94" pos:column="36">ip_addr<pos:position pos:line="94" pos:column="43"/></name><operator pos:line="94" pos:column="43">-&gt;<pos:position pos:line="94" pos:column="48"/></operator><name pos:line="94" pos:column="45">ai_addrlen<pos:position pos:line="94" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="57"/></expr_stmt>
    <if pos:line="95" pos:column="5">if<condition pos:line="95" pos:column="7">(<expr><name pos:line="95" pos:column="8">senddata<pos:position pos:line="95" pos:column="16"/></name> <operator pos:line="95" pos:column="17">!=<pos:position pos:line="95" pos:column="19"/></operator> <operator pos:line="95" pos:column="20">(<pos:position pos:line="95" pos:column="21"/></operator><name pos:line="95" pos:column="21">ssize_t<pos:position pos:line="95" pos:column="28"/></name><operator pos:line="95" pos:column="28">)<pos:position pos:line="95" pos:column="29"/></operator><name pos:line="95" pos:column="29">sbytes<pos:position pos:line="95" pos:column="35"/></name></expr>)<pos:position pos:line="95" pos:column="36"/></condition><then pos:line="95" pos:column="36"> <block pos:line="95" pos:column="37">{
      <expr_stmt><expr><call><name pos:line="96" pos:column="7">failf<pos:position pos:line="96" pos:column="12"/></name><argument_list pos:line="96" pos:column="12">(<argument><expr><name pos:line="96" pos:column="13">data<pos:position pos:line="96" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="19">"%s"<pos:position pos:line="96" pos:column="23"/></literal></expr></argument>, <argument><expr><call><name pos:line="96" pos:column="25">Curl_strerror<pos:position pos:line="96" pos:column="38"/></name><argument_list pos:line="96" pos:column="38">(<argument><expr><name><name pos:line="96" pos:column="39">state<pos:position pos:line="96" pos:column="44"/></name><operator pos:line="96" pos:column="44">-&gt;<pos:position pos:line="96" pos:column="49"/></operator><name pos:line="96" pos:column="46">conn<pos:position pos:line="96" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="52">SOCKERRNO<pos:position pos:line="96" pos:column="61"/></name></expr></argument>)<pos:position pos:line="96" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="97" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">free<pos:position pos:line="98" pos:column="9"/></name><argument_list pos:line="98" pos:column="9">(<argument><expr><name pos:line="98" pos:column="10">filename<pos:position pos:line="98" pos:column="18"/></name></expr></argument>)<pos:position pos:line="98" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="20"/></expr_stmt>
    <break pos:line="99" pos:column="5">break;<pos:position pos:line="99" pos:column="11"/></break>

  <case pos:line="101" pos:column="3">case <expr><name pos:line="101" pos:column="8">TFTP_EVENT_OACK<pos:position pos:line="101" pos:column="23"/></name></expr>:<pos:position pos:line="101" pos:column="24"/></case>
    <if pos:line="102" pos:column="5">if<condition pos:line="102" pos:column="7">(<expr><name><name pos:line="102" pos:column="8">data<pos:position pos:line="102" pos:column="12"/></name><operator pos:line="102" pos:column="12">-&gt;<pos:position pos:line="102" pos:column="17"/></operator><name pos:line="102" pos:column="14">set<pos:position pos:line="102" pos:column="17"/></name><operator pos:line="102" pos:column="17">.<pos:position pos:line="102" pos:column="18"/></operator><name pos:line="102" pos:column="18">upload<pos:position pos:line="102" pos:column="24"/></name></name></expr>)<pos:position pos:line="102" pos:column="25"/></condition><then pos:line="102" pos:column="25"> <block pos:line="102" pos:column="26">{
      <expr_stmt><expr><name pos:line="103" pos:column="7">result<pos:position pos:line="103" pos:column="13"/></name> <operator pos:line="103" pos:column="14">=<pos:position pos:line="103" pos:column="15"/></operator> <call><name pos:line="103" pos:column="16">tftp_connect_for_tx<pos:position pos:line="103" pos:column="35"/></name><argument_list pos:line="103" pos:column="35">(<argument><expr><name pos:line="103" pos:column="36">state<pos:position pos:line="103" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="43">event<pos:position pos:line="103" pos:column="48"/></name></expr></argument>)<pos:position pos:line="103" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="104" pos:column="6"/></block></then>
    <else pos:line="105" pos:column="5">else <block pos:line="105" pos:column="10">{
      <expr_stmt><expr><name pos:line="106" pos:column="7">result<pos:position pos:line="106" pos:column="13"/></name> <operator pos:line="106" pos:column="14">=<pos:position pos:line="106" pos:column="15"/></operator> <call><name pos:line="106" pos:column="16">tftp_connect_for_rx<pos:position pos:line="106" pos:column="35"/></name><argument_list pos:line="106" pos:column="35">(<argument><expr><name pos:line="106" pos:column="36">state<pos:position pos:line="106" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="43">event<pos:position pos:line="106" pos:column="48"/></name></expr></argument>)<pos:position pos:line="106" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="107" pos:column="6"/></block></else></if>
    <break pos:line="108" pos:column="5">break;<pos:position pos:line="108" pos:column="11"/></break>

  <case pos:line="110" pos:column="3">case <expr><name pos:line="110" pos:column="8">TFTP_EVENT_ACK<pos:position pos:line="110" pos:column="22"/></name></expr>:<pos:position pos:line="110" pos:column="23"/></case> <comment type="block" pos:line="110" pos:column="24">/* Connected for transmit */</comment>
    <expr_stmt><expr><name pos:line="111" pos:column="5">result<pos:position pos:line="111" pos:column="11"/></name> <operator pos:line="111" pos:column="12">=<pos:position pos:line="111" pos:column="13"/></operator> <call><name pos:line="111" pos:column="14">tftp_connect_for_tx<pos:position pos:line="111" pos:column="33"/></name><argument_list pos:line="111" pos:column="33">(<argument><expr><name pos:line="111" pos:column="34">state<pos:position pos:line="111" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="41">event<pos:position pos:line="111" pos:column="46"/></name></expr></argument>)<pos:position pos:line="111" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="48"/></expr_stmt>
    <break pos:line="112" pos:column="5">break;<pos:position pos:line="112" pos:column="11"/></break>

  <case pos:line="114" pos:column="3">case <expr><name pos:line="114" pos:column="8">TFTP_EVENT_DATA<pos:position pos:line="114" pos:column="23"/></name></expr>:<pos:position pos:line="114" pos:column="24"/></case> <comment type="block" pos:line="114" pos:column="25">/* Connected for receive */</comment>
    <expr_stmt><expr><name pos:line="115" pos:column="5">result<pos:position pos:line="115" pos:column="11"/></name> <operator pos:line="115" pos:column="12">=<pos:position pos:line="115" pos:column="13"/></operator> <call><name pos:line="115" pos:column="14">tftp_connect_for_rx<pos:position pos:line="115" pos:column="33"/></name><argument_list pos:line="115" pos:column="33">(<argument><expr><name pos:line="115" pos:column="34">state<pos:position pos:line="115" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="41">event<pos:position pos:line="115" pos:column="46"/></name></expr></argument>)<pos:position pos:line="115" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="48"/></expr_stmt>
    <break pos:line="116" pos:column="5">break;<pos:position pos:line="116" pos:column="11"/></break>

  <case pos:line="118" pos:column="3">case <expr><name pos:line="118" pos:column="8">TFTP_EVENT_ERROR<pos:position pos:line="118" pos:column="24"/></name></expr>:<pos:position pos:line="118" pos:column="25"/></case>
    <expr_stmt><expr><name><name pos:line="119" pos:column="5">state<pos:position pos:line="119" pos:column="10"/></name><operator pos:line="119" pos:column="10">-&gt;<pos:position pos:line="119" pos:column="15"/></operator><name pos:line="119" pos:column="12">state<pos:position pos:line="119" pos:column="17"/></name></name> <operator pos:line="119" pos:column="18">=<pos:position pos:line="119" pos:column="19"/></operator> <name pos:line="119" pos:column="20">TFTP_STATE_FIN<pos:position pos:line="119" pos:column="34"/></name></expr>;<pos:position pos:line="119" pos:column="35"/></expr_stmt>
    <break pos:line="120" pos:column="5">break;<pos:position pos:line="120" pos:column="11"/></break>

  <default pos:line="122" pos:column="3">default:<pos:position pos:line="122" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="123" pos:column="5">failf<pos:position pos:line="123" pos:column="10"/></name><argument_list pos:line="123" pos:column="10">(<argument><expr><name><name pos:line="123" pos:column="11">state<pos:position pos:line="123" pos:column="16"/></name><operator pos:line="123" pos:column="16">-&gt;<pos:position pos:line="123" pos:column="21"/></operator><name pos:line="123" pos:column="18">conn<pos:position pos:line="123" pos:column="22"/></name><operator pos:line="123" pos:column="22">-&gt;<pos:position pos:line="123" pos:column="27"/></operator><name pos:line="123" pos:column="24">data<pos:position pos:line="123" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="30">"tftp_send_first: internal error"<pos:position pos:line="123" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="65"/></expr_stmt>
    <break pos:line="124" pos:column="5">break;<pos:position pos:line="124" pos:column="11"/></break>
  }<pos:position pos:line="125" pos:column="4"/></block></switch>

  <return pos:line="127" pos:column="3">return <expr><name pos:line="127" pos:column="10">result<pos:position pos:line="127" pos:column="16"/></name></expr>;<pos:position pos:line="127" pos:column="17"/></return>
}<pos:position pos:line="128" pos:column="2"/></block></function></unit>

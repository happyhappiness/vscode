<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_54_curl-7.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_perform<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">SessionHandle<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">data<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">res<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">connectdata<pos:position pos:line="4" pos:column="21"/></name></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">conn<pos:position pos:line="4" pos:column="27"/></name><init pos:line="4" pos:column="27">=<expr><name pos:line="4" pos:column="28">NULL<pos:position pos:line="4" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">bool<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">port<pos:position pos:line="5" pos:column="12"/></name><init pos:line="5" pos:column="12">=<expr><name pos:line="5" pos:column="13">TRUE<pos:position pos:line="5" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt> <comment type="block" pos:line="5" pos:column="19">/* allow data-&gt;set.use_port to set port to use */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">newurl<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt> <comment type="block" pos:line="6" pos:column="24">/* possibly a new URL to follow to! */</comment>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><operator pos:line="8" pos:column="6">!<pos:position pos:line="8" pos:column="7"/></operator><name><name pos:line="8" pos:column="7">data<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">change<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">.<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">url<pos:position pos:line="8" pos:column="23"/></name></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24">
    <comment type="block" pos:line="9" pos:column="5">/* we can't do anything wihout URL */</comment>
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">CURLE_URL_MALFORMAT<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></return></block></then></if>

<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">USE_SSLEAY<pos:position pos:line="12" pos:column="18"/></name></cpp:ifdef>
  <comment type="block" pos:line="13" pos:column="3">/* Init the SSL session ID cache here. We do it here since we want to
     do it after the *_setopt() calls (that could change the size) but
     before any transfer. */</comment>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">Curl_SSL_InitSessions<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">data<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="31">data<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">-&gt;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="37">set<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">.<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="41">ssl<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">.<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="45">numsessions<pos:position pos:line="16" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name><name pos:line="19" pos:column="3">data<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">set<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">.<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">followlocation<pos:position pos:line="19" pos:column="27"/></name></name><operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator><literal type="number" pos:line="19" pos:column="28">0<pos:position pos:line="19" pos:column="29"/></literal></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt> <comment type="block" pos:line="19" pos:column="31">/* reset the location-follow counter */</comment>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">data<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">state<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">.<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">this_is_a_follow<pos:position pos:line="20" pos:column="31"/></name></name> <operator pos:line="20" pos:column="32">=<pos:position pos:line="20" pos:column="33"/></operator> <name pos:line="20" pos:column="34">FALSE<pos:position pos:line="20" pos:column="39"/></name></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt> <comment type="block" pos:line="20" pos:column="41">/* reset this */</comment>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">Curl_initinfo<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">data<pos:position pos:line="22" pos:column="21"/></name></expr></argument>)<pos:position pos:line="22" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt> <comment type="block" pos:line="22" pos:column="24">/* reset session-specific information "variables" */</comment>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">Curl_pgrsStartNow<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">data<pos:position pos:line="24" pos:column="25"/></name></expr></argument>)<pos:position pos:line="24" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>

  <do pos:line="26" pos:column="3">do <block pos:line="26" pos:column="6">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">Curl_pgrsTime<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">(<argument><expr><name pos:line="27" pos:column="19">data<pos:position pos:line="27" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="25">TIMER_STARTSINGLE<pos:position pos:line="27" pos:column="42"/></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">res<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <call><name pos:line="28" pos:column="11">Curl_connect<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">data<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="30">&amp;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="31">conn<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="37">port<pos:position pos:line="28" pos:column="41"/></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>
    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><name pos:line="29" pos:column="8">res<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">==<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">CURLE_OK<pos:position pos:line="29" pos:column="23"/></name></expr>)<pos:position pos:line="29" pos:column="24"/></condition><then pos:line="29" pos:column="24"> <block pos:line="29" pos:column="25">{
      <expr_stmt><expr><name pos:line="30" pos:column="7">res<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <call><name pos:line="30" pos:column="13">Curl_do<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">conn<pos:position pos:line="30" pos:column="25"/></name></expr></argument>)<pos:position pos:line="30" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
      <if pos:line="31" pos:column="7">if<condition pos:line="31" pos:column="9">(<expr><name pos:line="31" pos:column="10">res<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">==<pos:position pos:line="31" pos:column="16"/></operator> <name pos:line="31" pos:column="17">CURLE_OK<pos:position pos:line="31" pos:column="25"/></name></expr>)<pos:position pos:line="31" pos:column="26"/></condition><then pos:line="31" pos:column="26"> <block pos:line="31" pos:column="27">{
        <if pos:line="32" pos:column="9">if<condition pos:line="32" pos:column="11">(<expr><name><name pos:line="32" pos:column="12">conn<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">-&gt;<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="18">protocol<pos:position pos:line="32" pos:column="26"/></name></name><operator pos:line="32" pos:column="26">&amp;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="27">PROT_FTPS<pos:position pos:line="32" pos:column="36"/></name></expr>)<pos:position pos:line="32" pos:column="37"/></condition><then pos:line="32" pos:column="37">
          <comment type="block" pos:line="33" pos:column="11">/* FTPS, disable ssl while transfering data */</comment>
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="11">conn<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">ssl<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">.<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="21">use<pos:position pos:line="34" pos:column="24"/></name></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <name pos:line="34" pos:column="27">FALSE<pos:position pos:line="34" pos:column="32"/></name></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="35" pos:column="9">res<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <call><name pos:line="35" pos:column="15">Transfer<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">conn<pos:position pos:line="35" pos:column="28"/></name></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt> <comment type="block" pos:line="35" pos:column="31">/* now fetch that URL please */</comment>
        <if pos:line="36" pos:column="9">if<condition pos:line="36" pos:column="11">(<expr><name><name pos:line="36" pos:column="12">conn<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">-&gt;<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="18">protocol<pos:position pos:line="36" pos:column="26"/></name></name><operator pos:line="36" pos:column="26">&amp;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="27">PROT_FTPS<pos:position pos:line="36" pos:column="36"/></name></expr>)<pos:position pos:line="36" pos:column="37"/></condition><then pos:line="36" pos:column="37">
          <comment type="block" pos:line="37" pos:column="11">/* FTPS, enable ssl again after havving transferred data */</comment>
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="11">conn<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">-&gt;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="17">ssl<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">.<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">use<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">TRUE<pos:position pos:line="38" pos:column="31"/></name></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt></block></then></if>

        <if pos:line="40" pos:column="9">if<condition pos:line="40" pos:column="11">(<expr><name pos:line="40" pos:column="12">res<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">==<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="19">CURLE_OK<pos:position pos:line="40" pos:column="27"/></name></expr>)<pos:position pos:line="40" pos:column="28"/></condition><then pos:line="40" pos:column="28"> <block pos:line="40" pos:column="29">{
          <comment type="block" pos:line="41" pos:column="11">/*
           * We must duplicate the new URL here as the connection data
           * may be free()ed in the Curl_done() function.
           */</comment>
          <expr_stmt><expr><name pos:line="45" pos:column="11">newurl<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <ternary><condition><expr><name><name pos:line="45" pos:column="20">conn<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">-&gt;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="26">newurl<pos:position pos:line="45" pos:column="32"/></name></name></expr>?<pos:position pos:line="45" pos:column="33"/></condition><then><expr><call><name pos:line="45" pos:column="33">strdup<pos:position pos:line="45" pos:column="39"/></name><argument_list pos:line="45" pos:column="39">(<argument><expr><name><name pos:line="45" pos:column="40">conn<pos:position pos:line="45" pos:column="44"/></name><operator pos:line="45" pos:column="44">-&gt;<pos:position pos:line="45" pos:column="49"/></operator><name pos:line="45" pos:column="46">newurl<pos:position pos:line="45" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="53"/></argument_list></call></expr></then><else pos:line="45" pos:column="53">:<expr><name pos:line="45" pos:column="54">NULL<pos:position pos:line="45" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="45" pos:column="59"/></expr_stmt>

          <expr_stmt><expr><name pos:line="47" pos:column="11">res<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">=<pos:position pos:line="47" pos:column="16"/></operator> <call><name pos:line="47" pos:column="17">Curl_done<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><name pos:line="47" pos:column="27">conn<pos:position pos:line="47" pos:column="31"/></name></expr></argument>)<pos:position pos:line="47" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>
      }<pos:position pos:line="49" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="51" pos:column="7">/*
       * Important: 'conn' cannot be used here, since it may have been closed
       * in 'Curl_done' or other functions.
       */</comment>

      <if pos:line="56" pos:column="7">if<condition pos:line="56" pos:column="9">(<expr><operator pos:line="56" pos:column="10">(<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="11">res<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">==<pos:position pos:line="56" pos:column="17"/></operator> <name pos:line="56" pos:column="18">CURLE_OK<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">)<pos:position pos:line="56" pos:column="27"/></operator> <operator pos:line="56" pos:column="28">&amp;&amp;<pos:position pos:line="56" pos:column="38"/></operator> <name pos:line="56" pos:column="31">newurl<pos:position pos:line="56" pos:column="37"/></name></expr>)<pos:position pos:line="56" pos:column="38"/></condition><then pos:line="56" pos:column="38"> <block pos:line="56" pos:column="39">{
        <comment type="block" pos:line="57" pos:column="9">/* Location: redirect
 
           This is assumed to happen for HTTP(S) only!
        */</comment>
        <decl_stmt><decl><type><name pos:line="61" pos:column="9">char<pos:position pos:line="61" pos:column="13"/></name></type> <name><name pos:line="61" pos:column="14">prot<pos:position pos:line="61" pos:column="18"/></name><index pos:line="61" pos:column="18">[<expr><literal type="number" pos:line="61" pos:column="19">16<pos:position pos:line="61" pos:column="21"/></literal></expr>]<pos:position pos:line="61" pos:column="22"/></index></name></decl>;<pos:position pos:line="61" pos:column="23"/></decl_stmt> <comment type="block" pos:line="61" pos:column="24">/* URL protocol string storage */</comment>
        <decl_stmt><decl><type><name pos:line="62" pos:column="9">char<pos:position pos:line="62" pos:column="13"/></name></type> <name pos:line="62" pos:column="14">letter<pos:position pos:line="62" pos:column="20"/></name></decl>;<pos:position pos:line="62" pos:column="21"/></decl_stmt>   <comment type="block" pos:line="62" pos:column="24">/* used for a silly sscanf */</comment>

        <expr_stmt><expr><name pos:line="64" pos:column="9">port<pos:position pos:line="64" pos:column="13"/></name><operator pos:line="64" pos:column="13">=<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="14">TRUE<pos:position pos:line="64" pos:column="18"/></name></expr>;<pos:position pos:line="64" pos:column="19"/></expr_stmt> <comment type="block" pos:line="64" pos:column="20">/* by default we use the user set port number even after
                      a Location: */</comment>

	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name><name pos:line="67" pos:column="13">data<pos:position pos:line="67" pos:column="17"/></name><operator pos:line="67" pos:column="17">-&gt;<pos:position pos:line="67" pos:column="22"/></operator><name pos:line="67" pos:column="19">set<pos:position pos:line="67" pos:column="22"/></name><operator pos:line="67" pos:column="22">.<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="23">maxredirs<pos:position pos:line="67" pos:column="32"/></name></name> <operator pos:line="67" pos:column="33">&amp;&amp;<pos:position pos:line="67" pos:column="43"/></operator> <operator pos:line="67" pos:column="36">(<pos:position pos:line="67" pos:column="37"/></operator><name><name pos:line="67" pos:column="37">data<pos:position pos:line="67" pos:column="41"/></name><operator pos:line="67" pos:column="41">-&gt;<pos:position pos:line="67" pos:column="46"/></operator><name pos:line="67" pos:column="43">set<pos:position pos:line="67" pos:column="46"/></name><operator pos:line="67" pos:column="46">.<pos:position pos:line="67" pos:column="47"/></operator><name pos:line="67" pos:column="47">followlocation<pos:position pos:line="67" pos:column="61"/></name></name> <operator pos:line="67" pos:column="62">&gt;=<pos:position pos:line="67" pos:column="67"/></operator> <name><name pos:line="67" pos:column="65">data<pos:position pos:line="67" pos:column="69"/></name><operator pos:line="67" pos:column="69">-&gt;<pos:position pos:line="67" pos:column="74"/></operator><name pos:line="67" pos:column="71">set<pos:position pos:line="67" pos:column="74"/></name><operator pos:line="67" pos:column="74">.<pos:position pos:line="67" pos:column="75"/></operator><name pos:line="67" pos:column="75">maxredirs<pos:position pos:line="67" pos:column="84"/></name></name><operator pos:line="67" pos:column="84">)<pos:position pos:line="67" pos:column="85"/></operator></expr>)<pos:position pos:line="67" pos:column="86"/></condition><then pos:line="67" pos:column="86"> <block pos:line="67" pos:column="87">{
	  <expr_stmt><expr><call><name pos:line="68" pos:column="11">failf<pos:position pos:line="68" pos:column="16"/></name><argument_list pos:line="68" pos:column="16">(<argument><expr><name pos:line="68" pos:column="17">data<pos:position pos:line="68" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="68" pos:column="22">"Maximum (%d) redirects followed"<pos:position pos:line="68" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="57">data<pos:position pos:line="68" pos:column="61"/></name><operator pos:line="68" pos:column="61">-&gt;<pos:position pos:line="68" pos:column="66"/></operator><name pos:line="68" pos:column="63">set<pos:position pos:line="68" pos:column="66"/></name><operator pos:line="68" pos:column="66">.<pos:position pos:line="68" pos:column="67"/></operator><name pos:line="68" pos:column="67">maxredirs<pos:position pos:line="68" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="78"/></expr_stmt>
          <expr_stmt><expr><name pos:line="69" pos:column="11">res<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">=<pos:position pos:line="69" pos:column="15"/></operator><name pos:line="69" pos:column="15">CURLE_TOO_MANY_REDIRECTS<pos:position pos:line="69" pos:column="39"/></name></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt>
	  <break pos:line="70" pos:column="11">break;<pos:position pos:line="70" pos:column="17"/></break>
	}<pos:position pos:line="71" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="73" pos:column="9">/* mark the next request as a followed location: */</comment>
        <expr_stmt><expr><name><name pos:line="74" pos:column="9">data<pos:position pos:line="74" pos:column="13"/></name><operator pos:line="74" pos:column="13">-&gt;<pos:position pos:line="74" pos:column="18"/></operator><name pos:line="74" pos:column="15">state<pos:position pos:line="74" pos:column="20"/></name><operator pos:line="74" pos:column="20">.<pos:position pos:line="74" pos:column="21"/></operator><name pos:line="74" pos:column="21">this_is_a_follow<pos:position pos:line="74" pos:column="37"/></name></name> <operator pos:line="74" pos:column="38">=<pos:position pos:line="74" pos:column="39"/></operator> <name pos:line="74" pos:column="40">TRUE<pos:position pos:line="74" pos:column="44"/></name></expr>;<pos:position pos:line="74" pos:column="45"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="76" pos:column="9">data<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">-&gt;<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="15">set<pos:position pos:line="76" pos:column="18"/></name><operator pos:line="76" pos:column="18">.<pos:position pos:line="76" pos:column="19"/></operator><name pos:line="76" pos:column="19">followlocation<pos:position pos:line="76" pos:column="33"/></name></name><operator pos:line="76" pos:column="33">++<pos:position pos:line="76" pos:column="35"/></operator></expr>;<pos:position pos:line="76" pos:column="36"/></expr_stmt> <comment type="block" pos:line="76" pos:column="37">/* count location-followers */</comment>

        <if pos:line="78" pos:column="9">if<condition pos:line="78" pos:column="11">(<expr><name><name pos:line="78" pos:column="12">data<pos:position pos:line="78" pos:column="16"/></name><operator pos:line="78" pos:column="16">-&gt;<pos:position pos:line="78" pos:column="21"/></operator><name pos:line="78" pos:column="18">set<pos:position pos:line="78" pos:column="21"/></name><operator pos:line="78" pos:column="21">.<pos:position pos:line="78" pos:column="22"/></operator><name pos:line="78" pos:column="22">http_auto_referer<pos:position pos:line="78" pos:column="39"/></name></name></expr>)<pos:position pos:line="78" pos:column="40"/></condition><then pos:line="78" pos:column="40"> <block pos:line="78" pos:column="41">{
          <comment type="block" pos:line="79" pos:column="11">/* We are asked to automatically set the previous URL as the
             referer when we get the next URL. We pick the -&gt;url field,
             which may or may not be 100% correct */</comment>

          <if pos:line="83" pos:column="11">if<condition pos:line="83" pos:column="13">(<expr><name><name pos:line="83" pos:column="14">data<pos:position pos:line="83" pos:column="18"/></name><operator pos:line="83" pos:column="18">-&gt;<pos:position pos:line="83" pos:column="23"/></operator><name pos:line="83" pos:column="20">change<pos:position pos:line="83" pos:column="26"/></name><operator pos:line="83" pos:column="26">.<pos:position pos:line="83" pos:column="27"/></operator><name pos:line="83" pos:column="27">referer_alloc<pos:position pos:line="83" pos:column="40"/></name></name></expr>)<pos:position pos:line="83" pos:column="41"/></condition><then pos:line="83" pos:column="41">
            <comment type="block" pos:line="84" pos:column="13">/* If we already have an allocated referer, free this first */</comment>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="13">free<pos:position pos:line="85" pos:column="17"/></name><argument_list pos:line="85" pos:column="17">(<argument><expr><name><name pos:line="85" pos:column="18">data<pos:position pos:line="85" pos:column="22"/></name><operator pos:line="85" pos:column="22">-&gt;<pos:position pos:line="85" pos:column="27"/></operator><name pos:line="85" pos:column="24">change<pos:position pos:line="85" pos:column="30"/></name><operator pos:line="85" pos:column="30">.<pos:position pos:line="85" pos:column="31"/></operator><name pos:line="85" pos:column="31">referer<pos:position pos:line="85" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="40"/></expr_stmt></block></then></if>

          <expr_stmt><expr><name><name pos:line="87" pos:column="11">data<pos:position pos:line="87" pos:column="15"/></name><operator pos:line="87" pos:column="15">-&gt;<pos:position pos:line="87" pos:column="20"/></operator><name pos:line="87" pos:column="17">change<pos:position pos:line="87" pos:column="23"/></name><operator pos:line="87" pos:column="23">.<pos:position pos:line="87" pos:column="24"/></operator><name pos:line="87" pos:column="24">referer<pos:position pos:line="87" pos:column="31"/></name></name> <operator pos:line="87" pos:column="32">=<pos:position pos:line="87" pos:column="33"/></operator> <call><name pos:line="87" pos:column="34">strdup<pos:position pos:line="87" pos:column="40"/></name><argument_list pos:line="87" pos:column="40">(<argument><expr><name><name pos:line="87" pos:column="41">data<pos:position pos:line="87" pos:column="45"/></name><operator pos:line="87" pos:column="45">-&gt;<pos:position pos:line="87" pos:column="50"/></operator><name pos:line="87" pos:column="47">change<pos:position pos:line="87" pos:column="53"/></name><operator pos:line="87" pos:column="53">.<pos:position pos:line="87" pos:column="54"/></operator><name pos:line="87" pos:column="54">url<pos:position pos:line="87" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="59"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="88" pos:column="11">data<pos:position pos:line="88" pos:column="15"/></name><operator pos:line="88" pos:column="15">-&gt;<pos:position pos:line="88" pos:column="20"/></operator><name pos:line="88" pos:column="17">change<pos:position pos:line="88" pos:column="23"/></name><operator pos:line="88" pos:column="23">.<pos:position pos:line="88" pos:column="24"/></operator><name pos:line="88" pos:column="24">referer_alloc<pos:position pos:line="88" pos:column="37"/></name></name> <operator pos:line="88" pos:column="38">=<pos:position pos:line="88" pos:column="39"/></operator> <name pos:line="88" pos:column="40">TRUE<pos:position pos:line="88" pos:column="44"/></name></expr>;<pos:position pos:line="88" pos:column="45"/></expr_stmt> <comment type="block" pos:line="88" pos:column="46">/* yes, free this later */</comment>
        }<pos:position pos:line="89" pos:column="10"/></block></then></if>

        <if pos:line="91" pos:column="9">if<condition pos:line="91" pos:column="11">(<expr><literal type="number" pos:line="91" pos:column="12">2<pos:position pos:line="91" pos:column="13"/></literal> <operator pos:line="91" pos:column="14">!=<pos:position pos:line="91" pos:column="16"/></operator> <call><name pos:line="91" pos:column="17">sscanf<pos:position pos:line="91" pos:column="23"/></name><argument_list pos:line="91" pos:column="23">(<argument><expr><name pos:line="91" pos:column="24">newurl<pos:position pos:line="91" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="32">"%15[^:]://%c"<pos:position pos:line="91" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="48">prot<pos:position pos:line="91" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="54">&amp;<pos:position pos:line="91" pos:column="59"/></operator><name pos:line="91" pos:column="55">letter<pos:position pos:line="91" pos:column="61"/></name></expr></argument>)<pos:position pos:line="91" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="63"/></condition><then pos:line="91" pos:column="63"> <block pos:line="91" pos:column="64">{
          <comment type="block" format="doxygen" pos:line="92" pos:column="11">/***
           *DANG* this is an RFC 2068 violation. The URL is supposed
           to be absolute and this doesn't seem to be that!
           ***
           Instead, we have to TRY to append this new path to the old URL
           to the right of the host part. Oh crap, this is doomed to cause
           problems in the future...
          */</comment>
          <decl_stmt><decl><type><name pos:line="100" pos:column="11">char<pos:position pos:line="100" pos:column="15"/></name> <modifier pos:line="100" pos:column="16">*<pos:position pos:line="100" pos:column="17"/></modifier></type><name pos:line="100" pos:column="17">protsep<pos:position pos:line="100" pos:column="24"/></name></decl>;<pos:position pos:line="100" pos:column="25"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="101" pos:column="11">char<pos:position pos:line="101" pos:column="15"/></name> <modifier pos:line="101" pos:column="16">*<pos:position pos:line="101" pos:column="17"/></modifier></type><name pos:line="101" pos:column="17">pathsep<pos:position pos:line="101" pos:column="24"/></name></decl>;<pos:position pos:line="101" pos:column="25"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="102" pos:column="11">char<pos:position pos:line="102" pos:column="15"/></name> <modifier pos:line="102" pos:column="16">*<pos:position pos:line="102" pos:column="17"/></modifier></type><name pos:line="102" pos:column="17">newest<pos:position pos:line="102" pos:column="23"/></name></decl>;<pos:position pos:line="102" pos:column="24"/></decl_stmt>

          <comment type="block" pos:line="104" pos:column="11">/* we must make our own copy of the URL to play with, as it may
             point to read-only data */</comment>
          <decl_stmt><decl><type><name pos:line="106" pos:column="11">char<pos:position pos:line="106" pos:column="15"/></name> <modifier pos:line="106" pos:column="16">*<pos:position pos:line="106" pos:column="17"/></modifier></type><name pos:line="106" pos:column="17">url_clone<pos:position pos:line="106" pos:column="26"/></name><init pos:line="106" pos:column="26">=<expr><call><name pos:line="106" pos:column="27">strdup<pos:position pos:line="106" pos:column="33"/></name><argument_list pos:line="106" pos:column="33">(<argument><expr><name><name pos:line="106" pos:column="34">data<pos:position pos:line="106" pos:column="38"/></name><operator pos:line="106" pos:column="38">-&gt;<pos:position pos:line="106" pos:column="43"/></operator><name pos:line="106" pos:column="40">change<pos:position pos:line="106" pos:column="46"/></name><operator pos:line="106" pos:column="46">.<pos:position pos:line="106" pos:column="47"/></operator><name pos:line="106" pos:column="47">url<pos:position pos:line="106" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="106" pos:column="52"/></decl_stmt>

          <if pos:line="108" pos:column="11">if<condition pos:line="108" pos:column="13">(<expr><operator pos:line="108" pos:column="14">!<pos:position pos:line="108" pos:column="15"/></operator><name pos:line="108" pos:column="15">url_clone<pos:position pos:line="108" pos:column="24"/></name></expr>)<pos:position pos:line="108" pos:column="25"/></condition><then pos:line="108" pos:column="25">
            <block type="pseudo"><return pos:line="109" pos:column="13">return <expr><name pos:line="109" pos:column="20">CURLE_OUT_OF_MEMORY<pos:position pos:line="109" pos:column="39"/></name></expr>;<pos:position pos:line="109" pos:column="40"/></return></block></then></if>

          <comment type="block" pos:line="111" pos:column="11">/* protsep points to the start of the host name */</comment>
          <expr_stmt><expr><name pos:line="112" pos:column="11">protsep<pos:position pos:line="112" pos:column="18"/></name><operator pos:line="112" pos:column="18">=<pos:position pos:line="112" pos:column="19"/></operator><call><name pos:line="112" pos:column="19">strstr<pos:position pos:line="112" pos:column="25"/></name><argument_list pos:line="112" pos:column="25">(<argument><expr><name pos:line="112" pos:column="26">url_clone<pos:position pos:line="112" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="37">"//"<pos:position pos:line="112" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="43"/></expr_stmt>
          <if pos:line="113" pos:column="11">if<condition pos:line="113" pos:column="13">(<expr><operator pos:line="113" pos:column="14">!<pos:position pos:line="113" pos:column="15"/></operator><name pos:line="113" pos:column="15">protsep<pos:position pos:line="113" pos:column="22"/></name></expr>)<pos:position pos:line="113" pos:column="23"/></condition><then pos:line="113" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><name pos:line="114" pos:column="13">protsep<pos:position pos:line="114" pos:column="20"/></name><operator pos:line="114" pos:column="20">=<pos:position pos:line="114" pos:column="21"/></operator><name pos:line="114" pos:column="21">url_clone<pos:position pos:line="114" pos:column="30"/></name></expr>;<pos:position pos:line="114" pos:column="31"/></expr_stmt></block></then>
          <else pos:line="115" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="116" pos:column="13">protsep<pos:position pos:line="116" pos:column="20"/></name><operator pos:line="116" pos:column="20">+=<pos:position pos:line="116" pos:column="22"/></operator><literal type="number" pos:line="116" pos:column="22">2<pos:position pos:line="116" pos:column="23"/></literal></expr>;<pos:position pos:line="116" pos:column="24"/></expr_stmt></block></else></if> <comment type="block" pos:line="116" pos:column="25">/* pass the slashes */</comment>

          <if pos:line="118" pos:column="11">if<condition pos:line="118" pos:column="13">(<expr><literal type="char" pos:line="118" pos:column="14">'/'<pos:position pos:line="118" pos:column="17"/></literal> <operator pos:line="118" pos:column="18">!=<pos:position pos:line="118" pos:column="20"/></operator> <name><name pos:line="118" pos:column="21">newurl<pos:position pos:line="118" pos:column="27"/></name><index pos:line="118" pos:column="27">[<expr><literal type="number" pos:line="118" pos:column="28">0<pos:position pos:line="118" pos:column="29"/></literal></expr>]<pos:position pos:line="118" pos:column="30"/></index></name></expr>)<pos:position pos:line="118" pos:column="31"/></condition><then pos:line="118" pos:column="31"> <block pos:line="118" pos:column="32">{
            <comment type="block" pos:line="119" pos:column="13">/* First we need to find out if there's a ?-letter in the URL,
               and cut it and the right-side of that off */</comment>
            <expr_stmt><expr><name pos:line="121" pos:column="13">pathsep<pos:position pos:line="121" pos:column="20"/></name> <operator pos:line="121" pos:column="21">=<pos:position pos:line="121" pos:column="22"/></operator> <call><name pos:line="121" pos:column="23">strrchr<pos:position pos:line="121" pos:column="30"/></name><argument_list pos:line="121" pos:column="30">(<argument><expr><name pos:line="121" pos:column="31">protsep<pos:position pos:line="121" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="121" pos:column="40">'?'<pos:position pos:line="121" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="45"/></expr_stmt>
            <if pos:line="122" pos:column="13">if<condition pos:line="122" pos:column="15">(<expr><name pos:line="122" pos:column="16">pathsep<pos:position pos:line="122" pos:column="23"/></name></expr>)<pos:position pos:line="122" pos:column="24"/></condition><then pos:line="122" pos:column="24">
              <block type="pseudo"><expr_stmt><expr><operator pos:line="123" pos:column="15">*<pos:position pos:line="123" pos:column="16"/></operator><name pos:line="123" pos:column="16">pathsep<pos:position pos:line="123" pos:column="23"/></name><operator pos:line="123" pos:column="23">=<pos:position pos:line="123" pos:column="24"/></operator><literal type="number" pos:line="123" pos:column="24">0<pos:position pos:line="123" pos:column="25"/></literal></expr>;<pos:position pos:line="123" pos:column="26"/></expr_stmt></block></then></if>

            <comment type="block" pos:line="125" pos:column="13">/* we have a relative path to append to the last slash if
               there's one available */</comment>
            <expr_stmt><expr><name pos:line="127" pos:column="13">pathsep<pos:position pos:line="127" pos:column="20"/></name> <operator pos:line="127" pos:column="21">=<pos:position pos:line="127" pos:column="22"/></operator> <call><name pos:line="127" pos:column="23">strrchr<pos:position pos:line="127" pos:column="30"/></name><argument_list pos:line="127" pos:column="30">(<argument><expr><name pos:line="127" pos:column="31">protsep<pos:position pos:line="127" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="127" pos:column="40">'/'<pos:position pos:line="127" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="45"/></expr_stmt>
            <if pos:line="128" pos:column="13">if<condition pos:line="128" pos:column="15">(<expr><name pos:line="128" pos:column="16">pathsep<pos:position pos:line="128" pos:column="23"/></name></expr>)<pos:position pos:line="128" pos:column="24"/></condition><then pos:line="128" pos:column="24">
              <block type="pseudo"><expr_stmt><expr><operator pos:line="129" pos:column="15">*<pos:position pos:line="129" pos:column="16"/></operator><name pos:line="129" pos:column="16">pathsep<pos:position pos:line="129" pos:column="23"/></name><operator pos:line="129" pos:column="23">=<pos:position pos:line="129" pos:column="24"/></operator><literal type="number" pos:line="129" pos:column="24">0<pos:position pos:line="129" pos:column="25"/></literal></expr>;<pos:position pos:line="129" pos:column="26"/></expr_stmt></block></then></if>
          }<pos:position pos:line="130" pos:column="12"/></block></then>
          <else pos:line="131" pos:column="11">else <block pos:line="131" pos:column="16">{
            <comment type="block" pos:line="132" pos:column="13">/* We got a new absolute path for this server, cut off from the
               first slash */</comment>
            <expr_stmt><expr><name pos:line="134" pos:column="13">pathsep<pos:position pos:line="134" pos:column="20"/></name> <operator pos:line="134" pos:column="21">=<pos:position pos:line="134" pos:column="22"/></operator> <call><name pos:line="134" pos:column="23">strchr<pos:position pos:line="134" pos:column="29"/></name><argument_list pos:line="134" pos:column="29">(<argument><expr><name pos:line="134" pos:column="30">protsep<pos:position pos:line="134" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="134" pos:column="39">'/'<pos:position pos:line="134" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="44"/></expr_stmt>
            <if pos:line="135" pos:column="13">if<condition pos:line="135" pos:column="15">(<expr><name pos:line="135" pos:column="16">pathsep<pos:position pos:line="135" pos:column="23"/></name></expr>)<pos:position pos:line="135" pos:column="24"/></condition><then pos:line="135" pos:column="24">
              <block type="pseudo"><expr_stmt><expr><operator pos:line="136" pos:column="15">*<pos:position pos:line="136" pos:column="16"/></operator><name pos:line="136" pos:column="16">pathsep<pos:position pos:line="136" pos:column="23"/></name><operator pos:line="136" pos:column="23">=<pos:position pos:line="136" pos:column="24"/></operator><literal type="number" pos:line="136" pos:column="24">0<pos:position pos:line="136" pos:column="25"/></literal></expr>;<pos:position pos:line="136" pos:column="26"/></expr_stmt></block></then></if>
          }<pos:position pos:line="137" pos:column="12"/></block></else></if>

          <expr_stmt><expr><name pos:line="139" pos:column="11">newest<pos:position pos:line="139" pos:column="17"/></name><operator pos:line="139" pos:column="17">=<pos:position pos:line="139" pos:column="18"/></operator><operator pos:line="139" pos:column="18">(<pos:position pos:line="139" pos:column="19"/></operator><name pos:line="139" pos:column="19">char<pos:position pos:line="139" pos:column="23"/></name> <operator pos:line="139" pos:column="24">*<pos:position pos:line="139" pos:column="25"/></operator><operator pos:line="139" pos:column="25">)<pos:position pos:line="139" pos:column="26"/></operator><call><name pos:line="139" pos:column="26">malloc<pos:position pos:line="139" pos:column="32"/></name><argument_list pos:line="139" pos:column="32">( <argument><expr><call><name pos:line="139" pos:column="34">strlen<pos:position pos:line="139" pos:column="40"/></name><argument_list pos:line="139" pos:column="40">(<argument><expr><name pos:line="139" pos:column="41">url_clone<pos:position pos:line="139" pos:column="50"/></name></expr></argument>)<pos:position pos:line="139" pos:column="51"/></argument_list></call> <operator pos:line="139" pos:column="52">+<pos:position pos:line="139" pos:column="53"/></operator>
                                 <literal type="number" pos:line="140" pos:column="34">1<pos:position pos:line="140" pos:column="35"/></literal> <operator pos:line="140" pos:column="36">+<pos:position pos:line="140" pos:column="37"/></operator> <comment type="block" pos:line="140" pos:column="38">/* possible slash */</comment>
                                 <call><name pos:line="141" pos:column="34">strlen<pos:position pos:line="141" pos:column="40"/></name><argument_list pos:line="141" pos:column="40">(<argument><expr><name pos:line="141" pos:column="41">newurl<pos:position pos:line="141" pos:column="47"/></name></expr></argument>)<pos:position pos:line="141" pos:column="48"/></argument_list></call> <operator pos:line="141" pos:column="49">+<pos:position pos:line="141" pos:column="50"/></operator> <literal type="number" pos:line="141" pos:column="51">1<pos:position pos:line="141" pos:column="52"/></literal></expr></argument><comment type="block" pos:line="141" pos:column="52">/* zero byte */</comment>)<pos:position pos:line="141" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="69"/></expr_stmt>

          <if pos:line="143" pos:column="11">if<condition pos:line="143" pos:column="13">(<expr><operator pos:line="143" pos:column="14">!<pos:position pos:line="143" pos:column="15"/></operator><name pos:line="143" pos:column="15">newest<pos:position pos:line="143" pos:column="21"/></name></expr>)<pos:position pos:line="143" pos:column="22"/></condition><then pos:line="143" pos:column="22">
            <block type="pseudo"><return pos:line="144" pos:column="13">return <expr><name pos:line="144" pos:column="20">CURLE_OUT_OF_MEMORY<pos:position pos:line="144" pos:column="39"/></name></expr>;<pos:position pos:line="144" pos:column="40"/></return></block></then></if>
          <expr_stmt><expr><call><name pos:line="145" pos:column="11">sprintf<pos:position pos:line="145" pos:column="18"/></name><argument_list pos:line="145" pos:column="18">(<argument><expr><name pos:line="145" pos:column="19">newest<pos:position pos:line="145" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="27">"%s%s%s"<pos:position pos:line="145" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="145" pos:column="37">url_clone<pos:position pos:line="145" pos:column="46"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="145" pos:column="48">(<pos:position pos:line="145" pos:column="49"/></operator><literal type="char" pos:line="145" pos:column="49">'/'<pos:position pos:line="145" pos:column="52"/></literal> <operator pos:line="145" pos:column="53">==<pos:position pos:line="145" pos:column="55"/></operator> <name><name pos:line="145" pos:column="56">newurl<pos:position pos:line="145" pos:column="62"/></name><index pos:line="145" pos:column="62">[<expr><literal type="number" pos:line="145" pos:column="63">0<pos:position pos:line="145" pos:column="64"/></literal></expr>]<pos:position pos:line="145" pos:column="65"/></index></name><operator pos:line="145" pos:column="65">)<pos:position pos:line="145" pos:column="66"/></operator></expr>?<pos:position pos:line="145" pos:column="67"/></condition><then><expr><literal type="string" pos:line="145" pos:column="67">""<pos:position pos:line="145" pos:column="69"/></literal></expr></then><else pos:line="145" pos:column="69">:<expr><literal type="string" pos:line="145" pos:column="70">"/"<pos:position pos:line="145" pos:column="73"/></literal></expr></else></ternary></expr></argument>,
                  <argument><expr><name pos:line="146" pos:column="19">newurl<pos:position pos:line="146" pos:column="25"/></name></expr></argument>)<pos:position pos:line="146" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="27"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="147" pos:column="11">free<pos:position pos:line="147" pos:column="15"/></name><argument_list pos:line="147" pos:column="15">(<argument><expr><name pos:line="147" pos:column="16">newurl<pos:position pos:line="147" pos:column="22"/></name></expr></argument>)<pos:position pos:line="147" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="24"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="148" pos:column="11">free<pos:position pos:line="148" pos:column="15"/></name><argument_list pos:line="148" pos:column="15">(<argument><expr><name pos:line="148" pos:column="16">url_clone<pos:position pos:line="148" pos:column="25"/></name></expr></argument>)<pos:position pos:line="148" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="27"/></expr_stmt>
          <expr_stmt><expr><name pos:line="149" pos:column="11">newurl<pos:position pos:line="149" pos:column="17"/></name> <operator pos:line="149" pos:column="18">=<pos:position pos:line="149" pos:column="19"/></operator> <name pos:line="149" pos:column="20">newest<pos:position pos:line="149" pos:column="26"/></name></expr>;<pos:position pos:line="149" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="150" pos:column="10"/></block></then>
        <else pos:line="151" pos:column="9">else <block pos:line="151" pos:column="14">{
          <comment type="block" pos:line="152" pos:column="11">/* This is an absolute URL, don't use the custom port number */</comment>
          <expr_stmt><expr><name pos:line="153" pos:column="11">port<pos:position pos:line="153" pos:column="15"/></name> <operator pos:line="153" pos:column="16">=<pos:position pos:line="153" pos:column="17"/></operator> <name pos:line="153" pos:column="18">FALSE<pos:position pos:line="153" pos:column="23"/></name></expr>;<pos:position pos:line="153" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="154" pos:column="10"/></block></else></if>

        <if pos:line="156" pos:column="9">if<condition pos:line="156" pos:column="11">(<expr><name><name pos:line="156" pos:column="12">data<pos:position pos:line="156" pos:column="16"/></name><operator pos:line="156" pos:column="16">-&gt;<pos:position pos:line="156" pos:column="21"/></operator><name pos:line="156" pos:column="18">change<pos:position pos:line="156" pos:column="24"/></name><operator pos:line="156" pos:column="24">.<pos:position pos:line="156" pos:column="25"/></operator><name pos:line="156" pos:column="25">url_alloc<pos:position pos:line="156" pos:column="34"/></name></name></expr>)<pos:position pos:line="156" pos:column="35"/></condition><then pos:line="156" pos:column="35">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="157" pos:column="11">free<pos:position pos:line="157" pos:column="15"/></name><argument_list pos:line="157" pos:column="15">(<argument><expr><name><name pos:line="157" pos:column="16">data<pos:position pos:line="157" pos:column="20"/></name><operator pos:line="157" pos:column="20">-&gt;<pos:position pos:line="157" pos:column="25"/></operator><name pos:line="157" pos:column="22">change<pos:position pos:line="157" pos:column="28"/></name><operator pos:line="157" pos:column="28">.<pos:position pos:line="157" pos:column="29"/></operator><name pos:line="157" pos:column="29">url<pos:position pos:line="157" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="34"/></expr_stmt></block></then>
        <else pos:line="158" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="159" pos:column="11">data<pos:position pos:line="159" pos:column="15"/></name><operator pos:line="159" pos:column="15">-&gt;<pos:position pos:line="159" pos:column="20"/></operator><name pos:line="159" pos:column="17">change<pos:position pos:line="159" pos:column="23"/></name><operator pos:line="159" pos:column="23">.<pos:position pos:line="159" pos:column="24"/></operator><name pos:line="159" pos:column="24">url_alloc<pos:position pos:line="159" pos:column="33"/></name></name> <operator pos:line="159" pos:column="34">=<pos:position pos:line="159" pos:column="35"/></operator> <name pos:line="159" pos:column="36">TRUE<pos:position pos:line="159" pos:column="40"/></name></expr>;<pos:position pos:line="159" pos:column="41"/></expr_stmt></block></else></if> <comment type="block" pos:line="159" pos:column="42">/* the URL is allocated */</comment>
      
        <comment type="block" pos:line="161" pos:column="9">/* TBD: set the URL with curl_setopt() */</comment>
        <expr_stmt><expr><name><name pos:line="162" pos:column="9">data<pos:position pos:line="162" pos:column="13"/></name><operator pos:line="162" pos:column="13">-&gt;<pos:position pos:line="162" pos:column="18"/></operator><name pos:line="162" pos:column="15">change<pos:position pos:line="162" pos:column="21"/></name><operator pos:line="162" pos:column="21">.<pos:position pos:line="162" pos:column="22"/></operator><name pos:line="162" pos:column="22">url<pos:position pos:line="162" pos:column="25"/></name></name> <operator pos:line="162" pos:column="26">=<pos:position pos:line="162" pos:column="27"/></operator> <name pos:line="162" pos:column="28">newurl<pos:position pos:line="162" pos:column="34"/></name></expr>;<pos:position pos:line="162" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="163" pos:column="9">newurl<pos:position pos:line="163" pos:column="15"/></name> <operator pos:line="163" pos:column="16">=<pos:position pos:line="163" pos:column="17"/></operator> <name pos:line="163" pos:column="18">NULL<pos:position pos:line="163" pos:column="22"/></name></expr>;<pos:position pos:line="163" pos:column="23"/></expr_stmt> <comment type="block" pos:line="163" pos:column="24">/* don't free! */</comment>

        <expr_stmt><expr><call><name pos:line="165" pos:column="9">infof<pos:position pos:line="165" pos:column="14"/></name><argument_list pos:line="165" pos:column="14">(<argument><expr><name pos:line="165" pos:column="15">data<pos:position pos:line="165" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="21">"Follows Location: to new URL: '%s'\n"<pos:position pos:line="165" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="61">data<pos:position pos:line="165" pos:column="65"/></name><operator pos:line="165" pos:column="65">-&gt;<pos:position pos:line="165" pos:column="70"/></operator><name pos:line="165" pos:column="67">change<pos:position pos:line="165" pos:column="73"/></name><operator pos:line="165" pos:column="73">.<pos:position pos:line="165" pos:column="74"/></operator><name pos:line="165" pos:column="74">url<pos:position pos:line="165" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="165" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="79"/></expr_stmt>

        <comment type="block" pos:line="167" pos:column="9">/*
         * We get here when the HTTP code is 300-399. We need to perform
         * differently based on exactly what return code there was.
         * Discussed on the curl mailing list and posted about on the 26th
         * of January 2001.
         */</comment>
        <switch pos:line="173" pos:column="9">switch<condition pos:line="173" pos:column="15">(<expr><name><name pos:line="173" pos:column="16">data<pos:position pos:line="173" pos:column="20"/></name><operator pos:line="173" pos:column="20">-&gt;<pos:position pos:line="173" pos:column="25"/></operator><name pos:line="173" pos:column="22">info<pos:position pos:line="173" pos:column="26"/></name><operator pos:line="173" pos:column="26">.<pos:position pos:line="173" pos:column="27"/></operator><name pos:line="173" pos:column="27">httpcode<pos:position pos:line="173" pos:column="35"/></name></name></expr>)<pos:position pos:line="173" pos:column="36"/></condition> <block pos:line="173" pos:column="37">{
        <case pos:line="174" pos:column="9">case <expr><literal type="number" pos:line="174" pos:column="14">300<pos:position pos:line="174" pos:column="17"/></literal></expr>:<pos:position pos:line="174" pos:column="18"/></case> <comment type="block" pos:line="174" pos:column="19">/* Multiple Choices */</comment>
        <case pos:line="175" pos:column="9">case <expr><literal type="number" pos:line="175" pos:column="14">301<pos:position pos:line="175" pos:column="17"/></literal></expr>:<pos:position pos:line="175" pos:column="18"/></case> <comment type="block" pos:line="175" pos:column="19">/* Moved Permanently */</comment>
        <case pos:line="176" pos:column="9">case <expr><literal type="number" pos:line="176" pos:column="14">306<pos:position pos:line="176" pos:column="17"/></literal></expr>:<pos:position pos:line="176" pos:column="18"/></case> <comment type="block" pos:line="176" pos:column="19">/* Not used */</comment>
        <case pos:line="177" pos:column="9">case <expr><literal type="number" pos:line="177" pos:column="14">307<pos:position pos:line="177" pos:column="17"/></literal></expr>:<pos:position pos:line="177" pos:column="18"/></case> <comment type="block" pos:line="177" pos:column="19">/* Temporary Redirect */</comment>
        <default pos:line="178" pos:column="9">default:<pos:position pos:line="178" pos:column="17"/></default>  <comment type="block" pos:line="178" pos:column="19">/* for all unknown ones */</comment>
          <comment type="block" pos:line="179" pos:column="11">/* These are explicitly mention since I've checked RFC2616 and they
           * seem to be OK to POST to.
           */</comment>
          <break pos:line="182" pos:column="11">break;<pos:position pos:line="182" pos:column="17"/></break>
        <case pos:line="183" pos:column="9">case <expr><literal type="number" pos:line="183" pos:column="14">302<pos:position pos:line="183" pos:column="17"/></literal></expr>:<pos:position pos:line="183" pos:column="18"/></case> <comment type="block" pos:line="183" pos:column="19">/* Found */</comment>
          <comment type="block" pos:line="184" pos:column="11">/* (From 10.3.3)

            Note: RFC 1945 and RFC 2068 specify that the client is not allowed
            to change the method on the redirected request.  However, most
            existing user agent implementations treat 302 as if it were a 303
            response, performing a GET on the Location field-value regardless
            of the original request method. The status codes 303 and 307 have
            been added for servers that wish to make unambiguously clear which
            kind of reaction is expected of the client.

            (From 10.3.4)

            Note: Many pre-HTTP/1.1 user agents do not understand the 303
            status. When interoperability with such clients is a concern, the
            302 status code may be used instead, since most user agents react
            to a 302 response as described here for 303.             
          */</comment>
        <case pos:line="201" pos:column="9">case <expr><literal type="number" pos:line="201" pos:column="14">303<pos:position pos:line="201" pos:column="17"/></literal></expr>:<pos:position pos:line="201" pos:column="18"/></case> <comment type="block" pos:line="201" pos:column="19">/* See Other */</comment>
          <comment type="block" pos:line="202" pos:column="11">/* Disable both types of POSTs, since doing a second POST when
           * following isn't what anyone would want! */</comment>
          <expr_stmt><expr><name><name pos:line="204" pos:column="11">data<pos:position pos:line="204" pos:column="15"/></name><operator pos:line="204" pos:column="15">-&gt;<pos:position pos:line="204" pos:column="20"/></operator><name pos:line="204" pos:column="17">set<pos:position pos:line="204" pos:column="20"/></name><operator pos:line="204" pos:column="20">.<pos:position pos:line="204" pos:column="21"/></operator><name pos:line="204" pos:column="21">httpreq<pos:position pos:line="204" pos:column="28"/></name></name> <operator pos:line="204" pos:column="29">=<pos:position pos:line="204" pos:column="30"/></operator> <name pos:line="204" pos:column="31">HTTPREQ_GET<pos:position pos:line="204" pos:column="42"/></name></expr>;<pos:position pos:line="204" pos:column="43"/></expr_stmt> <comment type="block" pos:line="204" pos:column="44">/* enforce GET request */</comment>
          <expr_stmt><expr><call><name pos:line="205" pos:column="11">infof<pos:position pos:line="205" pos:column="16"/></name><argument_list pos:line="205" pos:column="16">(<argument><expr><name pos:line="205" pos:column="17">data<pos:position pos:line="205" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="205" pos:column="23">"Disables POST, goes with GET\n"<pos:position pos:line="205" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="205" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="57"/></expr_stmt>
          <break pos:line="206" pos:column="11">break;<pos:position pos:line="206" pos:column="17"/></break>
        <case pos:line="207" pos:column="9">case <expr><literal type="number" pos:line="207" pos:column="14">304<pos:position pos:line="207" pos:column="17"/></literal></expr>:<pos:position pos:line="207" pos:column="18"/></case> <comment type="block" pos:line="207" pos:column="19">/* Not Modified */</comment>
          <comment type="block" pos:line="208" pos:column="11">/* 304 means we did a conditional request and it was "Not modified".
           * We shouldn't get any Location: header in this response!
           */</comment>
          <break pos:line="211" pos:column="11">break;<pos:position pos:line="211" pos:column="17"/></break>
        <case pos:line="212" pos:column="9">case <expr><literal type="number" pos:line="212" pos:column="14">305<pos:position pos:line="212" pos:column="17"/></literal></expr>:<pos:position pos:line="212" pos:column="18"/></case> <comment type="block" pos:line="212" pos:column="19">/* Use Proxy */</comment>
          <comment type="block" pos:line="213" pos:column="11">/* (quote from RFC2616, section 10.3.6):
           * "The requested resource MUST be accessed through the proxy given
           * by the Location field. The Location field gives the URI of the
           * proxy.  The recipient is expected to repeat this single request
           * via the proxy. 305 responses MUST only be generated by origin
           * servers."
           */</comment>
          <break pos:line="220" pos:column="11">break;<pos:position pos:line="220" pos:column="17"/></break>
        }<pos:position pos:line="221" pos:column="10"/></block></switch>
        <continue pos:line="222" pos:column="9">continue;<pos:position pos:line="222" pos:column="18"/></continue>
      }<pos:position pos:line="223" pos:column="8"/></block></then></if>
    }<pos:position pos:line="224" pos:column="6"/></block></then></if>
    <break pos:line="225" pos:column="5">break;<pos:position pos:line="225" pos:column="11"/></break> <comment type="block" pos:line="225" pos:column="12">/* it only reaches here when this shouldn't loop */</comment>

  }<pos:position pos:line="227" pos:column="4"/></block> while<condition pos:line="227" pos:column="10">(<expr><literal type="number" pos:line="227" pos:column="11">1<pos:position pos:line="227" pos:column="12"/></literal></expr>)<pos:position pos:line="227" pos:column="13"/></condition>;<pos:position pos:line="227" pos:column="14"/></do> <comment type="block" pos:line="227" pos:column="15">/* loop if Location: */</comment>

  <if pos:line="229" pos:column="3">if<condition pos:line="229" pos:column="5">(<expr><name pos:line="229" pos:column="6">newurl<pos:position pos:line="229" pos:column="12"/></name></expr>)<pos:position pos:line="229" pos:column="13"/></condition><then pos:line="229" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="230" pos:column="5">free<pos:position pos:line="230" pos:column="9"/></name><argument_list pos:line="230" pos:column="9">(<argument><expr><name pos:line="230" pos:column="10">newurl<pos:position pos:line="230" pos:column="16"/></name></expr></argument>)<pos:position pos:line="230" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="18"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="232" pos:column="3">/* make sure the alarm is switched off! */</comment>
  <if pos:line="233" pos:column="3">if<condition pos:line="233" pos:column="5">(<expr><name><name pos:line="233" pos:column="6">data<pos:position pos:line="233" pos:column="10"/></name><operator pos:line="233" pos:column="10">-&gt;<pos:position pos:line="233" pos:column="15"/></operator><name pos:line="233" pos:column="12">set<pos:position pos:line="233" pos:column="15"/></name><operator pos:line="233" pos:column="15">.<pos:position pos:line="233" pos:column="16"/></operator><name pos:line="233" pos:column="16">timeout<pos:position pos:line="233" pos:column="23"/></name></name> <operator pos:line="233" pos:column="24">||<pos:position pos:line="233" pos:column="26"/></operator> <name><name pos:line="233" pos:column="27">data<pos:position pos:line="233" pos:column="31"/></name><operator pos:line="233" pos:column="31">-&gt;<pos:position pos:line="233" pos:column="36"/></operator><name pos:line="233" pos:column="33">set<pos:position pos:line="233" pos:column="36"/></name><operator pos:line="233" pos:column="36">.<pos:position pos:line="233" pos:column="37"/></operator><name pos:line="233" pos:column="37">connecttimeout<pos:position pos:line="233" pos:column="51"/></name></name></expr>)<pos:position pos:line="233" pos:column="52"/></condition><then pos:line="233" pos:column="52">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="234" pos:column="5">myalarm<pos:position pos:line="234" pos:column="12"/></name><argument_list pos:line="234" pos:column="12">(<argument><expr><literal type="number" pos:line="234" pos:column="13">0<pos:position pos:line="234" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="234" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="16"/></expr_stmt></block></then></if>

  <return pos:line="236" pos:column="3">return <expr><name pos:line="236" pos:column="10">res<pos:position pos:line="236" pos:column="13"/></name></expr>;<pos:position pos:line="236" pos:column="14"/></return>
}<pos:position pos:line="237" pos:column="2"/></block></function></unit>

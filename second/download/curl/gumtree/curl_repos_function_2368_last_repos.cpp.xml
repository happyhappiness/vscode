<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2368_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">Curl_ossl_cleanup<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><operator pos:line="3" pos:column="5">(<pos:position pos:line="3" pos:column="6"/></operator><name pos:line="3" pos:column="6">OPENSSL_VERSION_NUMBER<pos:position pos:line="3" pos:column="28"/></name> <operator pos:line="3" pos:column="29">&gt;=<pos:position pos:line="3" pos:column="34"/></operator> <literal type="number" pos:line="3" pos:column="32">0x10100000L<pos:position pos:line="3" pos:column="43"/></literal><operator pos:line="3" pos:column="43">)<pos:position pos:line="3" pos:column="44"/></operator> <operator pos:line="3" pos:column="45">&amp;&amp;<pos:position pos:line="3" pos:column="55"/></operator> \
    <operator pos:line="4" pos:column="5">!<pos:position pos:line="4" pos:column="6"/></operator><call><name pos:line="4" pos:column="6">defined<pos:position pos:line="4" pos:column="13"/></name><argument_list pos:line="4" pos:column="13">(<argument><expr><name pos:line="4" pos:column="14">LIBRESSL_VERSION_NUMBER<pos:position pos:line="4" pos:column="37"/></name></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="5" pos:column="3">/* OpenSSL 1.1 deprecates all these cleanup functions and
     turns them into no-ops in OpenSSL 1.0 compatibility mode */</comment>
<cpp:else pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">else<pos:position pos:line="7" pos:column="6"/></cpp:directive></cpp:else>
  <comment type="block" pos:line="8" pos:column="3">/* Free ciphers and digests lists */</comment>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">EVP_cleanup<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">()<pos:position pos:line="9" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">HAVE_ENGINE_CLEANUP<pos:position pos:line="11" pos:column="27"/></name></cpp:ifdef>
  <comment type="block" pos:line="12" pos:column="3">/* Free engine list */</comment>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">ENGINE_cleanup<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">()<pos:position pos:line="13" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="16" pos:column="3">/* Free OpenSSL error strings */</comment>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">ERR_free_strings<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">()<pos:position pos:line="17" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* Free thread local error state, destroying hash upon zero refcount */</comment>
<cpp:ifdef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifdef<pos:position pos:line="20" pos:column="7"/></cpp:directive> <name pos:line="20" pos:column="8">HAVE_ERR_REMOVE_THREAD_STATE<pos:position pos:line="20" pos:column="36"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">ERR_remove_thread_state<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">NULL<pos:position pos:line="21" pos:column="31"/></name></expr></argument>)<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
<cpp:else pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">else<pos:position pos:line="22" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">ERR_remove_state<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><literal type="number" pos:line="23" pos:column="20">0<pos:position pos:line="23" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="26" pos:column="3">/* Free all memory allocated by all configuration modules */</comment>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">CONF_modules_free<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">()<pos:position pos:line="27" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>

<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">HAVE_SSL_COMP_FREE_COMPRESSION_METHODS<pos:position pos:line="29" pos:column="46"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">SSL_COMP_free_compression_methods<pos:position pos:line="30" pos:column="36"/></name><argument_list pos:line="30" pos:column="36">()<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">ifdef<pos:position pos:line="34" pos:column="7"/></cpp:directive> <name pos:line="34" pos:column="8">ENABLE_SSLKEYLOGFILE<pos:position pos:line="34" pos:column="28"/></name></cpp:ifdef>
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><name pos:line="35" pos:column="6">keylog_file_fp<pos:position pos:line="35" pos:column="20"/></name></expr>)<pos:position pos:line="35" pos:column="21"/></condition><then pos:line="35" pos:column="21"> <block pos:line="35" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">fclose<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><name pos:line="36" pos:column="12">keylog_file_fp<pos:position pos:line="36" pos:column="26"/></name></expr></argument>)<pos:position pos:line="36" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">keylog_file_fp<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <name pos:line="37" pos:column="22">NULL<pos:position pos:line="37" pos:column="26"/></name></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

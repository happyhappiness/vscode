<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_316_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_base64_decode<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">str<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">void<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">data<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">base64Decode<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><operator pos:line="5" pos:column="16">(<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">unsigned<pos:position pos:line="5" pos:column="25"/></name> <name pos:line="5" pos:column="26">char<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></operator><operator pos:line="5" pos:column="32">)<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">data<pos:position pos:line="5" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="39">(<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">char<pos:position pos:line="5" pos:column="44"/></name> <operator pos:line="5" pos:column="45">*<pos:position pos:line="5" pos:column="46"/></operator><operator pos:line="5" pos:column="46">)<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="47">str<pos:position pos:line="5" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="52">&amp;<pos:position pos:line="5" pos:column="57"/></operator><name pos:line="5" pos:column="53">ret<pos:position pos:line="5" pos:column="56"/></name></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="58"/></expr_stmt>
  <return pos:line="6" pos:column="3">return <expr><name pos:line="6" pos:column="10">ret<pos:position pos:line="6" pos:column="13"/></name></expr>;<pos:position pos:line="6" pos:column="14"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

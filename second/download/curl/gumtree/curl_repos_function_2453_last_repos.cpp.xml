<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2453_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">Curl_gskit_connect<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">connectdata<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">conn<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">sockindex<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">bool<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">done<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="6" pos:column="3">conn<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">-&gt;<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="9">ssl<pos:position pos:line="6" pos:column="12"/></name><index pos:line="6" pos:column="12">[<expr><name pos:line="6" pos:column="13">sockindex<pos:position pos:line="6" pos:column="22"/></name></expr>]<pos:position pos:line="6" pos:column="23"/></index></name><operator pos:line="6" pos:column="23">.<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">connecting_state<pos:position pos:line="6" pos:column="40"/></name> <operator pos:line="6" pos:column="41">=<pos:position pos:line="6" pos:column="42"/></operator> <name pos:line="6" pos:column="43">ssl_connect_1<pos:position pos:line="6" pos:column="56"/></name></expr>;<pos:position pos:line="6" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">result<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <call><name pos:line="7" pos:column="12">gskit_connect_common<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">(<argument><expr><name pos:line="7" pos:column="33">conn<pos:position pos:line="7" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="39">sockindex<pos:position pos:line="7" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="50">FALSE<pos:position pos:line="7" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="57">&amp;<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="58">done<pos:position pos:line="7" pos:column="62"/></name></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="64"/></expr_stmt>
  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name pos:line="8" pos:column="6">result<pos:position pos:line="8" pos:column="12"/></name></expr>)<pos:position pos:line="8" pos:column="13"/></condition><then pos:line="8" pos:column="13">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">result<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">DEBUGASSERT<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">done<pos:position pos:line="11" pos:column="19"/></name></expr></argument>)<pos:position pos:line="11" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>

  <return pos:line="13" pos:column="3">return <expr><name pos:line="13" pos:column="10">CURLE_OK<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

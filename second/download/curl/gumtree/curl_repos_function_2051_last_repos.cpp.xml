<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2051_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_fnmatch<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">void<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">ptr<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">pattern<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">string<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><operator pos:line="3" pos:column="3">(<pos:position pos:line="3" pos:column="4"/></operator><name pos:line="3" pos:column="4">void<pos:position pos:line="3" pos:column="8"/></name><operator pos:line="3" pos:column="8">)<pos:position pos:line="3" pos:column="9"/></operator><name pos:line="3" pos:column="9">ptr<pos:position pos:line="3" pos:column="12"/></name></expr>;<pos:position pos:line="3" pos:column="13"/></expr_stmt> <comment type="block" pos:line="3" pos:column="14">/* the argument is specified by the curl_fnmatch_callback
                prototype, but not used by Curl_fnmatch() */</comment>
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><operator pos:line="5" pos:column="6">!<pos:position pos:line="5" pos:column="7"/></operator><name pos:line="5" pos:column="7">pattern<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">||<pos:position pos:line="5" pos:column="17"/></operator> <operator pos:line="5" pos:column="18">!<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">string<pos:position pos:line="5" pos:column="25"/></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26"> <block pos:line="5" pos:column="27">{
    <return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">CURL_FNMATCH_FAIL<pos:position pos:line="6" pos:column="29"/></name></expr>;<pos:position pos:line="6" pos:column="30"/></return>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>
  <return pos:line="8" pos:column="3">return <expr><call><name pos:line="8" pos:column="10">loop<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><operator pos:line="8" pos:column="15">(<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">unsigned<pos:position pos:line="8" pos:column="24"/></name> <name pos:line="8" pos:column="25">char<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></operator><operator pos:line="8" pos:column="31">)<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="32">pattern<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="41">(<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="42">unsigned<pos:position pos:line="8" pos:column="50"/></name> <name pos:line="8" pos:column="51">char<pos:position pos:line="8" pos:column="55"/></name> <operator pos:line="8" pos:column="56">*<pos:position pos:line="8" pos:column="57"/></operator><operator pos:line="8" pos:column="57">)<pos:position pos:line="8" pos:column="58"/></operator><name pos:line="8" pos:column="58">string<pos:position pos:line="8" pos:column="64"/></name></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="66"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

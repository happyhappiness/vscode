<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1004_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">trynextip<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">int<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">sockindex<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="3" pos:column="27">int<pos:position pos:line="3" pos:column="30"/></name></type> <name pos:line="3" pos:column="31">tempindex<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="41"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">other<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">tempindex<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">^<pos:position pos:line="5" pos:column="32"/></operator> <literal type="number" pos:line="5" pos:column="33">1<pos:position pos:line="5" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">CURLE_COULDNT_CONNECT<pos:position pos:line="6" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* First clean up after the failed socket.
     Don't close it yet to ensure that the next IP's socket gets a different
     file descriptor, which can prevent bugs when the curl_multi_socket_action
     interface is used with certain select() replacements such as kqueue. */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">curl_socket_t<pos:position pos:line="12" pos:column="16"/></name></type> <name pos:line="12" pos:column="17">fd_to_close<pos:position pos:line="12" pos:column="28"/></name> <init pos:line="12" pos:column="29">= <expr><name><name pos:line="12" pos:column="31">conn<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">tempsock<pos:position pos:line="12" pos:column="45"/></name><index pos:line="12" pos:column="45">[<expr><name pos:line="12" pos:column="46">tempindex<pos:position pos:line="12" pos:column="55"/></name></expr>]<pos:position pos:line="12" pos:column="56"/></index></name></expr></init></decl>;<pos:position pos:line="12" pos:column="57"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">conn<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">tempsock<pos:position pos:line="13" pos:column="17"/></name><index pos:line="13" pos:column="17">[<expr><name pos:line="13" pos:column="18">tempindex<pos:position pos:line="13" pos:column="27"/></name></expr>]<pos:position pos:line="13" pos:column="28"/></index></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <name pos:line="13" pos:column="31">CURL_SOCKET_BAD<pos:position pos:line="13" pos:column="46"/></name></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">sockindex<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">FIRSTSOCKET<pos:position pos:line="15" pos:column="30"/></name></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31"> <block pos:line="15" pos:column="32">{
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">Curl_addrinfo<pos:position pos:line="16" pos:column="18"/></name> <modifier pos:line="16" pos:column="19">*<pos:position pos:line="16" pos:column="20"/></modifier></type><name pos:line="16" pos:column="20">ai<pos:position pos:line="16" pos:column="22"/></name> <init pos:line="16" pos:column="23">= <expr><name pos:line="16" pos:column="25">NULL<pos:position pos:line="16" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">family<pos:position pos:line="17" pos:column="15"/></name> <init pos:line="17" pos:column="16">= <expr><name pos:line="17" pos:column="18">AF_UNSPEC<pos:position pos:line="17" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>

    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><name><name pos:line="19" pos:column="8">conn<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">tempaddr<pos:position pos:line="19" pos:column="22"/></name><index pos:line="19" pos:column="22">[<expr><name pos:line="19" pos:column="23">tempindex<pos:position pos:line="19" pos:column="32"/></name></expr>]<pos:position pos:line="19" pos:column="33"/></index></name></expr>)<pos:position pos:line="19" pos:column="34"/></condition><then pos:line="19" pos:column="34"> <block pos:line="19" pos:column="35">{
      <comment type="block" pos:line="20" pos:column="7">/* find next address in the same protocol family */</comment>
      <expr_stmt><expr><name pos:line="21" pos:column="7">family<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <name><name pos:line="21" pos:column="16">conn<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">tempaddr<pos:position pos:line="21" pos:column="30"/></name><index pos:line="21" pos:column="30">[<expr><name pos:line="21" pos:column="31">tempindex<pos:position pos:line="21" pos:column="40"/></name></expr>]<pos:position pos:line="21" pos:column="41"/></index></name><operator pos:line="21" pos:column="41">-&gt;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="43">ai_family<pos:position pos:line="21" pos:column="52"/></name></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name pos:line="22" pos:column="7">ai<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <name><name pos:line="22" pos:column="12">conn<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">tempaddr<pos:position pos:line="22" pos:column="26"/></name><index pos:line="22" pos:column="26">[<expr><name pos:line="22" pos:column="27">tempindex<pos:position pos:line="22" pos:column="36"/></name></expr>]<pos:position pos:line="22" pos:column="37"/></index></name><operator pos:line="22" pos:column="37">-&gt;<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="39">ai_next<pos:position pos:line="22" pos:column="46"/></name></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then>
<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">ENABLE_IPV6<pos:position pos:line="24" pos:column="19"/></name></cpp:ifdef>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if<condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">conn<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">tempaddr<pos:position pos:line="25" pos:column="27"/></name><index pos:line="25" pos:column="27">[<expr><literal type="number" pos:line="25" pos:column="28">0<pos:position pos:line="25" pos:column="29"/></literal></expr>]<pos:position pos:line="25" pos:column="30"/></index></name></expr>)<pos:position pos:line="25" pos:column="31"/></condition><then pos:line="25" pos:column="31"> <block pos:line="25" pos:column="32">{
      <comment type="block" pos:line="26" pos:column="7">/* happy eyeballs - try the other protocol family */</comment>
      <decl_stmt><decl><type><name pos:line="27" pos:column="7">int<pos:position pos:line="27" pos:column="10"/></name></type> <name pos:line="27" pos:column="11">firstfamily<pos:position pos:line="27" pos:column="22"/></name> <init pos:line="27" pos:column="23">= <expr><name><name pos:line="27" pos:column="25">conn<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">tempaddr<pos:position pos:line="27" pos:column="39"/></name><index pos:line="27" pos:column="39">[<expr><literal type="number" pos:line="27" pos:column="40">0<pos:position pos:line="27" pos:column="41"/></literal></expr>]<pos:position pos:line="27" pos:column="42"/></index></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">ai_family<pos:position pos:line="27" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="54"/></decl_stmt>
      <expr_stmt><expr><name pos:line="28" pos:column="7">family<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <ternary><condition><expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">firstfamily<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">==<pos:position pos:line="28" pos:column="31"/></operator> <name pos:line="28" pos:column="32">AF_INET<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">)<pos:position pos:line="28" pos:column="40"/></operator></expr> ?<pos:position pos:line="28" pos:column="42"/></condition><then pos:line="28" pos:column="42"> <expr><name pos:line="28" pos:column="43">AF_INET6<pos:position pos:line="28" pos:column="51"/></name></expr> <pos:position pos:line="28" pos:column="52"/></then><else pos:line="28" pos:column="52">: <expr><name pos:line="28" pos:column="54">AF_INET<pos:position pos:line="28" pos:column="61"/></name></expr></else></ternary></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><name pos:line="29" pos:column="7">ai<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <name><name pos:line="29" pos:column="12">conn<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">tempaddr<pos:position pos:line="29" pos:column="26"/></name><index pos:line="29" pos:column="26">[<expr><literal type="number" pos:line="29" pos:column="27">0<pos:position pos:line="29" pos:column="28"/></literal></expr>]<pos:position pos:line="29" pos:column="29"/></index></name><operator pos:line="29" pos:column="29">-&gt;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="31">ai_next<pos:position pos:line="29" pos:column="38"/></name></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if></elseif></if>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>

    <while pos:line="33" pos:column="5">while<condition pos:line="33" pos:column="10">(<expr><name pos:line="33" pos:column="11">ai<pos:position pos:line="33" pos:column="13"/></name></expr>)<pos:position pos:line="33" pos:column="14"/></condition> <block pos:line="33" pos:column="15">{
      <if pos:line="34" pos:column="7">if<condition pos:line="34" pos:column="9">(<expr><name><name pos:line="34" pos:column="10">conn<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">-&gt;<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="16">tempaddr<pos:position pos:line="34" pos:column="24"/></name><index pos:line="34" pos:column="24">[<expr><name pos:line="34" pos:column="25">other<pos:position pos:line="34" pos:column="30"/></name></expr>]<pos:position pos:line="34" pos:column="31"/></index></name></expr>)<pos:position pos:line="34" pos:column="32"/></condition><then pos:line="34" pos:column="32"> <block pos:line="34" pos:column="33">{
        <comment type="block" pos:line="35" pos:column="9">/* we can safely skip addresses of the other protocol family */</comment>
        <while pos:line="36" pos:column="9">while<condition pos:line="36" pos:column="14">(<expr><name pos:line="36" pos:column="15">ai<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">&amp;&amp;<pos:position pos:line="36" pos:column="28"/></operator> <name><name pos:line="36" pos:column="21">ai<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">ai_family<pos:position pos:line="36" pos:column="34"/></name></name> <operator pos:line="36" pos:column="35">!=<pos:position pos:line="36" pos:column="37"/></operator> <name pos:line="36" pos:column="38">family<pos:position pos:line="36" pos:column="44"/></name></expr>)<pos:position pos:line="36" pos:column="45"/></condition>
          <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="11">ai<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <name><name pos:line="37" pos:column="16">ai<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">ai_next<pos:position pos:line="37" pos:column="27"/></name></name></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt></block></while>
      }<pos:position pos:line="38" pos:column="8"/></block></then></if>

      <if pos:line="40" pos:column="7">if<condition pos:line="40" pos:column="9">(<expr><name pos:line="40" pos:column="10">ai<pos:position pos:line="40" pos:column="12"/></name></expr>)<pos:position pos:line="40" pos:column="13"/></condition><then pos:line="40" pos:column="13"> <block pos:line="40" pos:column="14">{
        <expr_stmt><expr><name pos:line="41" pos:column="9">result<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <call><name pos:line="41" pos:column="18">singleipconnect<pos:position pos:line="41" pos:column="33"/></name><argument_list pos:line="41" pos:column="33">(<argument><expr><name pos:line="41" pos:column="34">conn<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="40">ai<pos:position pos:line="41" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="44">&amp;<pos:position pos:line="41" pos:column="49"/></operator><name><name pos:line="41" pos:column="45">conn<pos:position pos:line="41" pos:column="49"/></name><operator pos:line="41" pos:column="49">-&gt;<pos:position pos:line="41" pos:column="54"/></operator><name pos:line="41" pos:column="51">tempsock<pos:position pos:line="41" pos:column="59"/></name><index pos:line="41" pos:column="59">[<expr><name pos:line="41" pos:column="60">tempindex<pos:position pos:line="41" pos:column="69"/></name></expr>]<pos:position pos:line="41" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="72"/></expr_stmt>
        <if pos:line="42" pos:column="9">if<condition pos:line="42" pos:column="11">(<expr><name pos:line="42" pos:column="12">result<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">==<pos:position pos:line="42" pos:column="21"/></operator> <name pos:line="42" pos:column="22">CURLE_COULDNT_CONNECT<pos:position pos:line="42" pos:column="43"/></name></expr>)<pos:position pos:line="42" pos:column="44"/></condition><then pos:line="42" pos:column="44"> <block pos:line="42" pos:column="45">{
          <expr_stmt><expr><name pos:line="43" pos:column="11">ai<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <name><name pos:line="43" pos:column="16">ai<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">ai_next<pos:position pos:line="43" pos:column="27"/></name></name></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>
          <continue pos:line="44" pos:column="11">continue;<pos:position pos:line="44" pos:column="20"/></continue>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="47" pos:column="9">conn<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">tempaddr<pos:position pos:line="47" pos:column="23"/></name><index pos:line="47" pos:column="23">[<expr><name pos:line="47" pos:column="24">tempindex<pos:position pos:line="47" pos:column="33"/></name></expr>]<pos:position pos:line="47" pos:column="34"/></index></name> <operator pos:line="47" pos:column="35">=<pos:position pos:line="47" pos:column="36"/></operator> <name pos:line="47" pos:column="37">ai<pos:position pos:line="47" pos:column="39"/></name></expr>;<pos:position pos:line="47" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="48" pos:column="8"/></block></then></if>
      <break pos:line="49" pos:column="7">break;<pos:position pos:line="49" pos:column="13"/></break>
    }<pos:position pos:line="50" pos:column="6"/></block></while>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <if pos:line="53" pos:column="3">if<condition pos:line="53" pos:column="5">(<expr><name pos:line="53" pos:column="6">fd_to_close<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">!=<pos:position pos:line="53" pos:column="20"/></operator> <name pos:line="53" pos:column="21">CURL_SOCKET_BAD<pos:position pos:line="53" pos:column="36"/></name></expr>)<pos:position pos:line="53" pos:column="37"/></condition><then pos:line="53" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="5">Curl_closesocket<pos:position pos:line="54" pos:column="21"/></name><argument_list pos:line="54" pos:column="21">(<argument><expr><name pos:line="54" pos:column="22">conn<pos:position pos:line="54" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="28">fd_to_close<pos:position pos:line="54" pos:column="39"/></name></expr></argument>)<pos:position pos:line="54" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="41"/></expr_stmt></block></then></if>

  <return pos:line="56" pos:column="3">return <expr><name pos:line="56" pos:column="10">result<pos:position pos:line="56" pos:column="16"/></name></expr>;<pos:position pos:line="56" pos:column="17"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

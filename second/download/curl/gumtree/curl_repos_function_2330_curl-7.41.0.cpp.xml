<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2330_curl-7.41.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">polarssl_connect_step1<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name><name pos:line="2" pos:column="24">struct<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">connectdata<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">conn<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="3" pos:column="22">int<pos:position pos:line="3" pos:column="25"/></name></type> <name pos:line="3" pos:column="26">sockindex<pos:position pos:line="3" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="36"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">SessionHandle<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">data<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name><name pos:line="5" pos:column="32">conn<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">data<pos:position pos:line="5" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">ssl_connect_data<pos:position pos:line="6" pos:column="26"/></name></name><modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type> <name pos:line="6" pos:column="28">connssl<pos:position pos:line="6" pos:column="35"/></name> <init pos:line="6" pos:column="36">= <expr><operator pos:line="6" pos:column="38">&amp;<pos:position pos:line="6" pos:column="43"/></operator><name><name pos:line="6" pos:column="39">conn<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">-&gt;<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="45">ssl<pos:position pos:line="6" pos:column="48"/></name><index pos:line="6" pos:column="48">[<expr><name pos:line="6" pos:column="49">sockindex<pos:position pos:line="6" pos:column="58"/></name></expr>]<pos:position pos:line="6" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="60"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">bool<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">sni<pos:position pos:line="8" pos:column="11"/></name> <init pos:line="8" pos:column="12">= <expr><name pos:line="8" pos:column="14">TRUE<pos:position pos:line="8" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt> <comment type="block" pos:line="8" pos:column="20">/* default is SNI enabled */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">ret<pos:position pos:line="9" pos:column="10"/></name> <init pos:line="9" pos:column="11">= <expr><operator pos:line="9" pos:column="13">-<pos:position pos:line="9" pos:column="14"/></operator><literal type="number" pos:line="9" pos:column="14">1<pos:position pos:line="9" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">ENABLE_IPV6<pos:position pos:line="10" pos:column="19"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">in6_addr<pos:position pos:line="11" pos:column="18"/></name></name></type> <name pos:line="11" pos:column="19">addr<pos:position pos:line="11" pos:column="23"/></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name><name pos:line="13" pos:column="3">struct<pos:position pos:line="13" pos:column="9"/></name> <name pos:line="13" pos:column="10">in_addr<pos:position pos:line="13" pos:column="17"/></name></name></type> <name pos:line="13" pos:column="18">addr<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">void<pos:position pos:line="15" pos:column="7"/></name> <modifier pos:line="15" pos:column="8">*<pos:position pos:line="15" pos:column="9"/></modifier></type><name pos:line="15" pos:column="9">old_session<pos:position pos:line="15" pos:column="20"/></name> <init pos:line="15" pos:column="21">= <expr><name pos:line="15" pos:column="23">NULL<pos:position pos:line="15" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">size_t<pos:position pos:line="16" pos:column="9"/></name></type> <name pos:line="16" pos:column="10">old_session_size<pos:position pos:line="16" pos:column="26"/></name> <init pos:line="16" pos:column="27">= <expr><literal type="number" pos:line="16" pos:column="29">0<pos:position pos:line="16" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name></type> <name><name pos:line="17" pos:column="8">errorbuf<pos:position pos:line="17" pos:column="16"/></name><index pos:line="17" pos:column="16">[<expr><literal type="number" pos:line="17" pos:column="17">128<pos:position pos:line="17" pos:column="20"/></literal></expr>]<pos:position pos:line="17" pos:column="21"/></index></name></decl>;<pos:position pos:line="17" pos:column="22"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">errorbuf<pos:position pos:line="18" pos:column="11"/></name><index pos:line="18" pos:column="11">[<expr><literal type="number" pos:line="18" pos:column="12">0<pos:position pos:line="18" pos:column="13"/></literal></expr>]<pos:position pos:line="18" pos:column="14"/></index></name><operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator><literal type="number" pos:line="18" pos:column="15">0<pos:position pos:line="18" pos:column="16"/></literal></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>

  <comment type="block" pos:line="20" pos:column="3">/* PolarSSL only supports SSLv3 and TLSv1 */</comment>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><name><name pos:line="21" pos:column="6">data<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">set<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">.<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">ssl<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">.<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">version<pos:position pos:line="21" pos:column="27"/></name></name> <operator pos:line="21" pos:column="28">==<pos:position pos:line="21" pos:column="30"/></operator> <name pos:line="21" pos:column="31">CURL_SSLVERSION_SSLv2<pos:position pos:line="21" pos:column="52"/></name></expr>)<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53"> <block pos:line="21" pos:column="54">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">failf<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><name pos:line="22" pos:column="11">data<pos:position pos:line="22" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="17">"PolarSSL does not support SSLv2"<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="23" pos:column="35"/></name></expr>;<pos:position pos:line="23" pos:column="36"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then>
  <elseif pos:line="25" pos:column="3">else <if pos:line="25" pos:column="8">if<condition pos:line="25" pos:column="10">(<expr><name><name pos:line="25" pos:column="11">data<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">set<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">.<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">ssl<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">.<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">version<pos:position pos:line="25" pos:column="32"/></name></name> <operator pos:line="25" pos:column="33">==<pos:position pos:line="25" pos:column="35"/></operator> <name pos:line="25" pos:column="36">CURL_SSLVERSION_SSLv3<pos:position pos:line="25" pos:column="57"/></name></expr>)<pos:position pos:line="25" pos:column="58"/></condition><then pos:line="25" pos:column="58">
    <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="5">sni<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <name pos:line="26" pos:column="11">FALSE<pos:position pos:line="26" pos:column="16"/></name></expr>;<pos:position pos:line="26" pos:column="17"/></expr_stmt></block></then></if></elseif></if> <comment type="block" pos:line="26" pos:column="18">/* SSLv3 has no SNI */</comment>

<cpp:ifdef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifdef<pos:position pos:line="28" pos:column="7"/></cpp:directive> <name pos:line="28" pos:column="8">THREADING_SUPPORT<pos:position pos:line="28" pos:column="25"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">entropy_init_mutex<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><operator pos:line="29" pos:column="22">&amp;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="23">entropy<pos:position pos:line="29" pos:column="30"/></name></expr></argument>)<pos:position pos:line="29" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt>

  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><operator pos:line="31" pos:column="6">(<pos:position pos:line="31" pos:column="7"/></operator><name pos:line="31" pos:column="7">ret<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <call><name pos:line="31" pos:column="13">ctr_drbg_init<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><operator pos:line="31" pos:column="27">&amp;<pos:position pos:line="31" pos:column="32"/></operator><name><name pos:line="31" pos:column="28">connssl<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">-&gt;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="37">ctr_drbg<pos:position pos:line="31" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="47">entropy_func_mutex<pos:position pos:line="31" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="67">&amp;<pos:position pos:line="31" pos:column="72"/></operator><name pos:line="31" pos:column="68">entropy<pos:position pos:line="31" pos:column="75"/></name></expr></argument>,
                               <argument><expr><name><name pos:line="32" pos:column="32">connssl<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">-&gt;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="41">ssn<pos:position pos:line="32" pos:column="44"/></name><operator pos:line="32" pos:column="44">.<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="45">id<pos:position pos:line="32" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="49">connssl<pos:position pos:line="32" pos:column="56"/></name><operator pos:line="32" pos:column="56">-&gt;<pos:position pos:line="32" pos:column="61"/></operator><name pos:line="32" pos:column="58">ssn<pos:position pos:line="32" pos:column="61"/></name><operator pos:line="32" pos:column="61">.<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="62">length<pos:position pos:line="32" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="69"/></argument_list></call><operator pos:line="32" pos:column="69">)<pos:position pos:line="32" pos:column="70"/></operator> <operator pos:line="32" pos:column="71">!=<pos:position pos:line="32" pos:column="73"/></operator> <literal type="number" pos:line="32" pos:column="74">0<pos:position pos:line="32" pos:column="75"/></literal></expr>)<pos:position pos:line="32" pos:column="76"/></condition><then pos:line="32" pos:column="76"> <block pos:line="32" pos:column="77">{
<cpp:ifdef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifdef<pos:position pos:line="33" pos:column="7"/></cpp:directive> <name pos:line="33" pos:column="8">POLARSSL_ERROR_C<pos:position pos:line="33" pos:column="24"/></name></cpp:ifdef>
     <expr_stmt><expr><call><name pos:line="34" pos:column="6">error_strerror<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">ret<pos:position pos:line="34" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="26">errorbuf<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="36">sizeof<argument_list pos:line="34" pos:column="42">(<argument><expr><name pos:line="34" pos:column="43">errorbuf<pos:position pos:line="34" pos:column="51"/></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="54"/></expr_stmt>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="35" pos:column="8">/* POLARSSL_ERROR_C */</comment>
     <expr_stmt><expr><call><name pos:line="36" pos:column="6">failf<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><name pos:line="36" pos:column="12">data<pos:position pos:line="36" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="18">"Failed - PolarSSL: ctr_drbg_init returned (-0x%04X) %s\n"<pos:position pos:line="36" pos:column="76"/></literal></expr></argument>,
                                                            <argument><expr><operator pos:line="37" pos:column="61">-<pos:position pos:line="37" pos:column="62"/></operator><name pos:line="37" pos:column="62">ret<pos:position pos:line="37" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="67">errorbuf<pos:position pos:line="37" pos:column="75"/></name></expr></argument>)<pos:position pos:line="37" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>
<cpp:else pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">else<pos:position pos:line="39" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">entropy_init<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><operator pos:line="40" pos:column="16">&amp;<pos:position pos:line="40" pos:column="21"/></operator><name><name pos:line="40" pos:column="17">connssl<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">entropy<pos:position pos:line="40" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>

  <if pos:line="42" pos:column="3">if<condition pos:line="42" pos:column="5">(<expr><operator pos:line="42" pos:column="6">(<pos:position pos:line="42" pos:column="7"/></operator><name pos:line="42" pos:column="7">ret<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">=<pos:position pos:line="42" pos:column="12"/></operator> <call><name pos:line="42" pos:column="13">ctr_drbg_init<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><operator pos:line="42" pos:column="27">&amp;<pos:position pos:line="42" pos:column="32"/></operator><name><name pos:line="42" pos:column="28">connssl<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">-&gt;<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="37">ctr_drbg<pos:position pos:line="42" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="47">entropy_func<pos:position pos:line="42" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="61">&amp;<pos:position pos:line="42" pos:column="66"/></operator><name><name pos:line="42" pos:column="62">connssl<pos:position pos:line="42" pos:column="69"/></name><operator pos:line="42" pos:column="69">-&gt;<pos:position pos:line="42" pos:column="74"/></operator><name pos:line="42" pos:column="71">entropy<pos:position pos:line="42" pos:column="78"/></name></name></expr></argument>,
                                <argument><expr><name><name pos:line="43" pos:column="33">connssl<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">-&gt;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="42">ssn<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">.<pos:position pos:line="43" pos:column="46"/></operator><name pos:line="43" pos:column="46">id<pos:position pos:line="43" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="50">connssl<pos:position pos:line="43" pos:column="57"/></name><operator pos:line="43" pos:column="57">-&gt;<pos:position pos:line="43" pos:column="62"/></operator><name pos:line="43" pos:column="59">ssn<pos:position pos:line="43" pos:column="62"/></name><operator pos:line="43" pos:column="62">.<pos:position pos:line="43" pos:column="63"/></operator><name pos:line="43" pos:column="63">length<pos:position pos:line="43" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></call><operator pos:line="43" pos:column="70">)<pos:position pos:line="43" pos:column="71"/></operator> <operator pos:line="43" pos:column="72">!=<pos:position pos:line="43" pos:column="74"/></operator> <literal type="number" pos:line="43" pos:column="75">0<pos:position pos:line="43" pos:column="76"/></literal></expr>)<pos:position pos:line="43" pos:column="77"/></condition><then pos:line="43" pos:column="77"> <block pos:line="43" pos:column="78">{
<cpp:ifdef pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">ifdef<pos:position pos:line="44" pos:column="7"/></cpp:directive> <name pos:line="44" pos:column="8">POLARSSL_ERROR_C<pos:position pos:line="44" pos:column="24"/></name></cpp:ifdef>
     <expr_stmt><expr><call><name pos:line="45" pos:column="6">error_strerror<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><name pos:line="45" pos:column="21">ret<pos:position pos:line="45" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="26">errorbuf<pos:position pos:line="45" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="36">sizeof<argument_list pos:line="45" pos:column="42">(<argument><expr><name pos:line="45" pos:column="43">errorbuf<pos:position pos:line="45" pos:column="51"/></name></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="54"/></expr_stmt>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="46" pos:column="8">/* POLARSSL_ERROR_C */</comment>
     <expr_stmt><expr><call><name pos:line="47" pos:column="6">failf<pos:position pos:line="47" pos:column="11"/></name><argument_list pos:line="47" pos:column="11">(<argument><expr><name pos:line="47" pos:column="12">data<pos:position pos:line="47" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="18">"Failed - PolarSSL: ctr_drbg_init returned (-0x%04X) %s\n"<pos:position pos:line="47" pos:column="76"/></literal></expr></argument>,
                                                            <argument><expr><operator pos:line="48" pos:column="61">-<pos:position pos:line="48" pos:column="62"/></operator><name pos:line="48" pos:column="62">ret<pos:position pos:line="48" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="67">errorbuf<pos:position pos:line="48" pos:column="75"/></name></expr></argument>)<pos:position pos:line="48" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="50" pos:column="8">/* THREADING_SUPPORT */</comment>

  <comment type="block" pos:line="52" pos:column="3">/* Load the trusted CA */</comment>
  <expr_stmt><expr><call><name pos:line="53" pos:column="3">memset<pos:position pos:line="53" pos:column="9"/></name><argument_list pos:line="53" pos:column="9">(<argument><expr><operator pos:line="53" pos:column="10">&amp;<pos:position pos:line="53" pos:column="15"/></operator><name><name pos:line="53" pos:column="11">connssl<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">-&gt;<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="20">cacert<pos:position pos:line="53" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="28">0<pos:position pos:line="53" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="31">sizeof<argument_list pos:line="53" pos:column="37">(<argument><expr><name pos:line="53" pos:column="38">x509_crt<pos:position pos:line="53" pos:column="46"/></name></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="49"/></expr_stmt>

  <if pos:line="55" pos:column="3">if<condition pos:line="55" pos:column="5">(<expr><name><name pos:line="55" pos:column="6">data<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">-&gt;<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="12">set<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">.<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="16">str<pos:position pos:line="55" pos:column="19"/></name><index pos:line="55" pos:column="19">[<expr><name pos:line="55" pos:column="20">STRING_SSL_CAFILE<pos:position pos:line="55" pos:column="37"/></name></expr>]<pos:position pos:line="55" pos:column="38"/></index></name></expr>)<pos:position pos:line="55" pos:column="39"/></condition><then pos:line="55" pos:column="39"> <block pos:line="55" pos:column="40">{
    <expr_stmt><expr><name pos:line="56" pos:column="5">ret<pos:position pos:line="56" pos:column="8"/></name> <operator pos:line="56" pos:column="9">=<pos:position pos:line="56" pos:column="10"/></operator> <call><name pos:line="56" pos:column="11">x509_crt_parse_file<pos:position pos:line="56" pos:column="30"/></name><argument_list pos:line="56" pos:column="30">(<argument><expr><operator pos:line="56" pos:column="31">&amp;<pos:position pos:line="56" pos:column="36"/></operator><name><name pos:line="56" pos:column="32">connssl<pos:position pos:line="56" pos:column="39"/></name><operator pos:line="56" pos:column="39">-&gt;<pos:position pos:line="56" pos:column="44"/></operator><name pos:line="56" pos:column="41">cacert<pos:position pos:line="56" pos:column="47"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="57" pos:column="31">data<pos:position pos:line="57" pos:column="35"/></name><operator pos:line="57" pos:column="35">-&gt;<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="37">set<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">.<pos:position pos:line="57" pos:column="41"/></operator><name pos:line="57" pos:column="41">str<pos:position pos:line="57" pos:column="44"/></name><index pos:line="57" pos:column="44">[<expr><name pos:line="57" pos:column="45">STRING_SSL_CAFILE<pos:position pos:line="57" pos:column="62"/></name></expr>]<pos:position pos:line="57" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="57" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="65"/></expr_stmt>

    <if pos:line="59" pos:column="5">if<condition pos:line="59" pos:column="7">(<expr><name pos:line="59" pos:column="8">ret<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">&lt;<pos:position pos:line="59" pos:column="15"/></operator><literal type="number" pos:line="59" pos:column="12">0<pos:position pos:line="59" pos:column="13"/></literal></expr>)<pos:position pos:line="59" pos:column="14"/></condition><then pos:line="59" pos:column="14"> <block pos:line="59" pos:column="15">{
<cpp:ifdef pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">ifdef<pos:position pos:line="60" pos:column="7"/></cpp:directive> <name pos:line="60" pos:column="8">POLARSSL_ERROR_C<pos:position pos:line="60" pos:column="24"/></name></cpp:ifdef>
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">error_strerror<pos:position pos:line="61" pos:column="21"/></name><argument_list pos:line="61" pos:column="21">(<argument><expr><name pos:line="61" pos:column="22">ret<pos:position pos:line="61" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="27">errorbuf<pos:position pos:line="61" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="37">sizeof<argument_list pos:line="61" pos:column="43">(<argument><expr><name pos:line="61" pos:column="44">errorbuf<pos:position pos:line="61" pos:column="52"/></name></expr></argument>)<pos:position pos:line="61" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif<pos:position pos:line="62" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="62" pos:column="8">/* POLARSSL_ERROR_C */</comment>
      <expr_stmt><expr><call><name pos:line="63" pos:column="7">failf<pos:position pos:line="63" pos:column="12"/></name><argument_list pos:line="63" pos:column="12">(<argument><expr><name pos:line="63" pos:column="13">data<pos:position pos:line="63" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="19">"Error reading ca cert file %s - PolarSSL: (-0x%04X) %s"<pos:position pos:line="63" pos:column="75"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="64" pos:column="13">data<pos:position pos:line="64" pos:column="17"/></name><operator pos:line="64" pos:column="17">-&gt;<pos:position pos:line="64" pos:column="22"/></operator><name pos:line="64" pos:column="19">set<pos:position pos:line="64" pos:column="22"/></name><operator pos:line="64" pos:column="22">.<pos:position pos:line="64" pos:column="23"/></operator><name pos:line="64" pos:column="23">str<pos:position pos:line="64" pos:column="26"/></name><index pos:line="64" pos:column="26">[<expr><name pos:line="64" pos:column="27">STRING_SSL_CAFILE<pos:position pos:line="64" pos:column="44"/></name></expr>]<pos:position pos:line="64" pos:column="45"/></index></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="47">-<pos:position pos:line="64" pos:column="48"/></operator><name pos:line="64" pos:column="48">ret<pos:position pos:line="64" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="53">errorbuf<pos:position pos:line="64" pos:column="61"/></name></expr></argument>)<pos:position pos:line="64" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="63"/></expr_stmt>

      <if pos:line="66" pos:column="7">if<condition pos:line="66" pos:column="9">(<expr><name><name pos:line="66" pos:column="10">data<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">set<pos:position pos:line="66" pos:column="19"/></name><operator pos:line="66" pos:column="19">.<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="20">ssl<pos:position pos:line="66" pos:column="23"/></name><operator pos:line="66" pos:column="23">.<pos:position pos:line="66" pos:column="24"/></operator><name pos:line="66" pos:column="24">verifypeer<pos:position pos:line="66" pos:column="34"/></name></name></expr>)<pos:position pos:line="66" pos:column="35"/></condition><then pos:line="66" pos:column="35">
        <block type="pseudo"><return pos:line="67" pos:column="9">return <expr><name pos:line="67" pos:column="16">CURLE_SSL_CACERT_BADFILE<pos:position pos:line="67" pos:column="40"/></name></expr>;<pos:position pos:line="67" pos:column="41"/></return></block></then></if>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>

  <if pos:line="71" pos:column="3">if<condition pos:line="71" pos:column="5">(<expr><name><name pos:line="71" pos:column="6">data<pos:position pos:line="71" pos:column="10"/></name><operator pos:line="71" pos:column="10">-&gt;<pos:position pos:line="71" pos:column="15"/></operator><name pos:line="71" pos:column="12">set<pos:position pos:line="71" pos:column="15"/></name><operator pos:line="71" pos:column="15">.<pos:position pos:line="71" pos:column="16"/></operator><name pos:line="71" pos:column="16">str<pos:position pos:line="71" pos:column="19"/></name><index pos:line="71" pos:column="19">[<expr><name pos:line="71" pos:column="20">STRING_SSL_CAPATH<pos:position pos:line="71" pos:column="37"/></name></expr>]<pos:position pos:line="71" pos:column="38"/></index></name></expr>)<pos:position pos:line="71" pos:column="39"/></condition><then pos:line="71" pos:column="39"> <block pos:line="71" pos:column="40">{
    <expr_stmt><expr><name pos:line="72" pos:column="5">ret<pos:position pos:line="72" pos:column="8"/></name> <operator pos:line="72" pos:column="9">=<pos:position pos:line="72" pos:column="10"/></operator> <call><name pos:line="72" pos:column="11">x509_crt_parse_path<pos:position pos:line="72" pos:column="30"/></name><argument_list pos:line="72" pos:column="30">(<argument><expr><operator pos:line="72" pos:column="31">&amp;<pos:position pos:line="72" pos:column="36"/></operator><name><name pos:line="72" pos:column="32">connssl<pos:position pos:line="72" pos:column="39"/></name><operator pos:line="72" pos:column="39">-&gt;<pos:position pos:line="72" pos:column="44"/></operator><name pos:line="72" pos:column="41">cacert<pos:position pos:line="72" pos:column="47"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="73" pos:column="31">data<pos:position pos:line="73" pos:column="35"/></name><operator pos:line="73" pos:column="35">-&gt;<pos:position pos:line="73" pos:column="40"/></operator><name pos:line="73" pos:column="37">set<pos:position pos:line="73" pos:column="40"/></name><operator pos:line="73" pos:column="40">.<pos:position pos:line="73" pos:column="41"/></operator><name pos:line="73" pos:column="41">str<pos:position pos:line="73" pos:column="44"/></name><index pos:line="73" pos:column="44">[<expr><name pos:line="73" pos:column="45">STRING_SSL_CAPATH<pos:position pos:line="73" pos:column="62"/></name></expr>]<pos:position pos:line="73" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="73" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="65"/></expr_stmt>

    <if pos:line="75" pos:column="5">if<condition pos:line="75" pos:column="7">(<expr><name pos:line="75" pos:column="8">ret<pos:position pos:line="75" pos:column="11"/></name><operator pos:line="75" pos:column="11">&lt;<pos:position pos:line="75" pos:column="15"/></operator><literal type="number" pos:line="75" pos:column="12">0<pos:position pos:line="75" pos:column="13"/></literal></expr>)<pos:position pos:line="75" pos:column="14"/></condition><then pos:line="75" pos:column="14"> <block pos:line="75" pos:column="15">{
<cpp:ifdef pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">ifdef<pos:position pos:line="76" pos:column="7"/></cpp:directive> <name pos:line="76" pos:column="8">POLARSSL_ERROR_C<pos:position pos:line="76" pos:column="24"/></name></cpp:ifdef>
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">error_strerror<pos:position pos:line="77" pos:column="21"/></name><argument_list pos:line="77" pos:column="21">(<argument><expr><name pos:line="77" pos:column="22">ret<pos:position pos:line="77" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="27">errorbuf<pos:position pos:line="77" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="37">sizeof<argument_list pos:line="77" pos:column="43">(<argument><expr><name pos:line="77" pos:column="44">errorbuf<pos:position pos:line="77" pos:column="52"/></name></expr></argument>)<pos:position pos:line="77" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="77" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif<pos:position pos:line="78" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="78" pos:column="8">/* POLARSSL_ERROR_C */</comment>
      <expr_stmt><expr><call><name pos:line="79" pos:column="7">failf<pos:position pos:line="79" pos:column="12"/></name><argument_list pos:line="79" pos:column="12">(<argument><expr><name pos:line="79" pos:column="13">data<pos:position pos:line="79" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="19">"Error reading ca cert path %s - PolarSSL: (-0x%04X) %s"<pos:position pos:line="79" pos:column="75"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="80" pos:column="13">data<pos:position pos:line="80" pos:column="17"/></name><operator pos:line="80" pos:column="17">-&gt;<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="19">set<pos:position pos:line="80" pos:column="22"/></name><operator pos:line="80" pos:column="22">.<pos:position pos:line="80" pos:column="23"/></operator><name pos:line="80" pos:column="23">str<pos:position pos:line="80" pos:column="26"/></name><index pos:line="80" pos:column="26">[<expr><name pos:line="80" pos:column="27">STRING_SSL_CAPATH<pos:position pos:line="80" pos:column="44"/></name></expr>]<pos:position pos:line="80" pos:column="45"/></index></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="47">-<pos:position pos:line="80" pos:column="48"/></operator><name pos:line="80" pos:column="48">ret<pos:position pos:line="80" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="53">errorbuf<pos:position pos:line="80" pos:column="61"/></name></expr></argument>)<pos:position pos:line="80" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="63"/></expr_stmt>

      <if pos:line="82" pos:column="7">if<condition pos:line="82" pos:column="9">(<expr><name><name pos:line="82" pos:column="10">data<pos:position pos:line="82" pos:column="14"/></name><operator pos:line="82" pos:column="14">-&gt;<pos:position pos:line="82" pos:column="19"/></operator><name pos:line="82" pos:column="16">set<pos:position pos:line="82" pos:column="19"/></name><operator pos:line="82" pos:column="19">.<pos:position pos:line="82" pos:column="20"/></operator><name pos:line="82" pos:column="20">ssl<pos:position pos:line="82" pos:column="23"/></name><operator pos:line="82" pos:column="23">.<pos:position pos:line="82" pos:column="24"/></operator><name pos:line="82" pos:column="24">verifypeer<pos:position pos:line="82" pos:column="34"/></name></name></expr>)<pos:position pos:line="82" pos:column="35"/></condition><then pos:line="82" pos:column="35">
        <block type="pseudo"><return pos:line="83" pos:column="9">return <expr><name pos:line="83" pos:column="16">CURLE_SSL_CACERT_BADFILE<pos:position pos:line="83" pos:column="40"/></name></expr>;<pos:position pos:line="83" pos:column="41"/></return></block></then></if>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
  }<pos:position pos:line="85" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="87" pos:column="3">/* Load the client certificate */</comment>
  <expr_stmt><expr><call><name pos:line="88" pos:column="3">memset<pos:position pos:line="88" pos:column="9"/></name><argument_list pos:line="88" pos:column="9">(<argument><expr><operator pos:line="88" pos:column="10">&amp;<pos:position pos:line="88" pos:column="15"/></operator><name><name pos:line="88" pos:column="11">connssl<pos:position pos:line="88" pos:column="18"/></name><operator pos:line="88" pos:column="18">-&gt;<pos:position pos:line="88" pos:column="23"/></operator><name pos:line="88" pos:column="20">clicert<pos:position pos:line="88" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="29">0<pos:position pos:line="88" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="88" pos:column="32">sizeof<argument_list pos:line="88" pos:column="38">(<argument><expr><name pos:line="88" pos:column="39">x509_crt<pos:position pos:line="88" pos:column="47"/></name></expr></argument>)<pos:position pos:line="88" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="88" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="50"/></expr_stmt>

  <if pos:line="90" pos:column="3">if<condition pos:line="90" pos:column="5">(<expr><name><name pos:line="90" pos:column="6">data<pos:position pos:line="90" pos:column="10"/></name><operator pos:line="90" pos:column="10">-&gt;<pos:position pos:line="90" pos:column="15"/></operator><name pos:line="90" pos:column="12">set<pos:position pos:line="90" pos:column="15"/></name><operator pos:line="90" pos:column="15">.<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="16">str<pos:position pos:line="90" pos:column="19"/></name><index pos:line="90" pos:column="19">[<expr><name pos:line="90" pos:column="20">STRING_CERT<pos:position pos:line="90" pos:column="31"/></name></expr>]<pos:position pos:line="90" pos:column="32"/></index></name></expr>)<pos:position pos:line="90" pos:column="33"/></condition><then pos:line="90" pos:column="33"> <block pos:line="90" pos:column="34">{
    <expr_stmt><expr><name pos:line="91" pos:column="5">ret<pos:position pos:line="91" pos:column="8"/></name> <operator pos:line="91" pos:column="9">=<pos:position pos:line="91" pos:column="10"/></operator> <call><name pos:line="91" pos:column="11">x509_crt_parse_file<pos:position pos:line="91" pos:column="30"/></name><argument_list pos:line="91" pos:column="30">(<argument><expr><operator pos:line="91" pos:column="31">&amp;<pos:position pos:line="91" pos:column="36"/></operator><name><name pos:line="91" pos:column="32">connssl<pos:position pos:line="91" pos:column="39"/></name><operator pos:line="91" pos:column="39">-&gt;<pos:position pos:line="91" pos:column="44"/></operator><name pos:line="91" pos:column="41">clicert<pos:position pos:line="91" pos:column="48"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="92" pos:column="31">data<pos:position pos:line="92" pos:column="35"/></name><operator pos:line="92" pos:column="35">-&gt;<pos:position pos:line="92" pos:column="40"/></operator><name pos:line="92" pos:column="37">set<pos:position pos:line="92" pos:column="40"/></name><operator pos:line="92" pos:column="40">.<pos:position pos:line="92" pos:column="41"/></operator><name pos:line="92" pos:column="41">str<pos:position pos:line="92" pos:column="44"/></name><index pos:line="92" pos:column="44">[<expr><name pos:line="92" pos:column="45">STRING_CERT<pos:position pos:line="92" pos:column="56"/></name></expr>]<pos:position pos:line="92" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="92" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="59"/></expr_stmt>

    <if pos:line="94" pos:column="5">if<condition pos:line="94" pos:column="7">(<expr><name pos:line="94" pos:column="8">ret<pos:position pos:line="94" pos:column="11"/></name></expr>)<pos:position pos:line="94" pos:column="12"/></condition><then pos:line="94" pos:column="12"> <block pos:line="94" pos:column="13">{
<cpp:ifdef pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">ifdef<pos:position pos:line="95" pos:column="7"/></cpp:directive> <name pos:line="95" pos:column="8">POLARSSL_ERROR_C<pos:position pos:line="95" pos:column="24"/></name></cpp:ifdef>
      <expr_stmt><expr><call><name pos:line="96" pos:column="7">error_strerror<pos:position pos:line="96" pos:column="21"/></name><argument_list pos:line="96" pos:column="21">(<argument><expr><name pos:line="96" pos:column="22">ret<pos:position pos:line="96" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="27">errorbuf<pos:position pos:line="96" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="96" pos:column="37">sizeof<argument_list pos:line="96" pos:column="43">(<argument><expr><name pos:line="96" pos:column="44">errorbuf<pos:position pos:line="96" pos:column="52"/></name></expr></argument>)<pos:position pos:line="96" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="96" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">endif<pos:position pos:line="97" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="97" pos:column="8">/* POLARSSL_ERROR_C */</comment>
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">failf<pos:position pos:line="98" pos:column="12"/></name><argument_list pos:line="98" pos:column="12">(<argument><expr><name pos:line="98" pos:column="13">data<pos:position pos:line="98" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="19">"Error reading client cert file %s - PolarSSL: (-0x%04X) %s"<pos:position pos:line="98" pos:column="79"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="99" pos:column="13">data<pos:position pos:line="99" pos:column="17"/></name><operator pos:line="99" pos:column="17">-&gt;<pos:position pos:line="99" pos:column="22"/></operator><name pos:line="99" pos:column="19">set<pos:position pos:line="99" pos:column="22"/></name><operator pos:line="99" pos:column="22">.<pos:position pos:line="99" pos:column="23"/></operator><name pos:line="99" pos:column="23">str<pos:position pos:line="99" pos:column="26"/></name><index pos:line="99" pos:column="26">[<expr><name pos:line="99" pos:column="27">STRING_CERT<pos:position pos:line="99" pos:column="38"/></name></expr>]<pos:position pos:line="99" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="41">-<pos:position pos:line="99" pos:column="42"/></operator><name pos:line="99" pos:column="42">ret<pos:position pos:line="99" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="47">errorbuf<pos:position pos:line="99" pos:column="55"/></name></expr></argument>)<pos:position pos:line="99" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="57"/></expr_stmt>

      <return pos:line="101" pos:column="7">return <expr><name pos:line="101" pos:column="14">CURLE_SSL_CERTPROBLEM<pos:position pos:line="101" pos:column="35"/></name></expr>;<pos:position pos:line="101" pos:column="36"/></return>
    }<pos:position pos:line="102" pos:column="6"/></block></then></if>
  }<pos:position pos:line="103" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="105" pos:column="3">/* Load the client private key */</comment>
  <if pos:line="106" pos:column="3">if<condition pos:line="106" pos:column="5">(<expr><name><name pos:line="106" pos:column="6">data<pos:position pos:line="106" pos:column="10"/></name><operator pos:line="106" pos:column="10">-&gt;<pos:position pos:line="106" pos:column="15"/></operator><name pos:line="106" pos:column="12">set<pos:position pos:line="106" pos:column="15"/></name><operator pos:line="106" pos:column="15">.<pos:position pos:line="106" pos:column="16"/></operator><name pos:line="106" pos:column="16">str<pos:position pos:line="106" pos:column="19"/></name><index pos:line="106" pos:column="19">[<expr><name pos:line="106" pos:column="20">STRING_KEY<pos:position pos:line="106" pos:column="30"/></name></expr>]<pos:position pos:line="106" pos:column="31"/></index></name></expr>)<pos:position pos:line="106" pos:column="32"/></condition><then pos:line="106" pos:column="32"> <block pos:line="106" pos:column="33">{
    <decl_stmt><decl><type><name pos:line="107" pos:column="5">pk_context<pos:position pos:line="107" pos:column="15"/></name></type> <name pos:line="107" pos:column="16">pk<pos:position pos:line="107" pos:column="18"/></name></decl>;<pos:position pos:line="107" pos:column="19"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="108" pos:column="5">pk_init<pos:position pos:line="108" pos:column="12"/></name><argument_list pos:line="108" pos:column="12">(<argument><expr><operator pos:line="108" pos:column="13">&amp;<pos:position pos:line="108" pos:column="18"/></operator><name pos:line="108" pos:column="14">pk<pos:position pos:line="108" pos:column="16"/></name></expr></argument>)<pos:position pos:line="108" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="109" pos:column="5">ret<pos:position pos:line="109" pos:column="8"/></name> <operator pos:line="109" pos:column="9">=<pos:position pos:line="109" pos:column="10"/></operator> <call><name pos:line="109" pos:column="11">pk_parse_keyfile<pos:position pos:line="109" pos:column="27"/></name><argument_list pos:line="109" pos:column="27">(<argument><expr><operator pos:line="109" pos:column="28">&amp;<pos:position pos:line="109" pos:column="33"/></operator><name pos:line="109" pos:column="29">pk<pos:position pos:line="109" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="33">data<pos:position pos:line="109" pos:column="37"/></name><operator pos:line="109" pos:column="37">-&gt;<pos:position pos:line="109" pos:column="42"/></operator><name pos:line="109" pos:column="39">set<pos:position pos:line="109" pos:column="42"/></name><operator pos:line="109" pos:column="42">.<pos:position pos:line="109" pos:column="43"/></operator><name pos:line="109" pos:column="43">str<pos:position pos:line="109" pos:column="46"/></name><index pos:line="109" pos:column="46">[<expr><name pos:line="109" pos:column="47">STRING_KEY<pos:position pos:line="109" pos:column="57"/></name></expr>]<pos:position pos:line="109" pos:column="58"/></index></name></expr></argument>,
                           <argument><expr><name><name pos:line="110" pos:column="28">data<pos:position pos:line="110" pos:column="32"/></name><operator pos:line="110" pos:column="32">-&gt;<pos:position pos:line="110" pos:column="37"/></operator><name pos:line="110" pos:column="34">set<pos:position pos:line="110" pos:column="37"/></name><operator pos:line="110" pos:column="37">.<pos:position pos:line="110" pos:column="38"/></operator><name pos:line="110" pos:column="38">str<pos:position pos:line="110" pos:column="41"/></name><index pos:line="110" pos:column="41">[<expr><name pos:line="110" pos:column="42">STRING_KEY_PASSWD<pos:position pos:line="110" pos:column="59"/></name></expr>]<pos:position pos:line="110" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="110" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="62"/></expr_stmt>
    <if pos:line="111" pos:column="5">if<condition pos:line="111" pos:column="7">(<expr><name pos:line="111" pos:column="8">ret<pos:position pos:line="111" pos:column="11"/></name> <operator pos:line="111" pos:column="12">==<pos:position pos:line="111" pos:column="14"/></operator> <literal type="number" pos:line="111" pos:column="15">0<pos:position pos:line="111" pos:column="16"/></literal> <operator pos:line="111" pos:column="17">&amp;&amp;<pos:position pos:line="111" pos:column="27"/></operator> <operator pos:line="111" pos:column="20">!<pos:position pos:line="111" pos:column="21"/></operator><call><name pos:line="111" pos:column="21">pk_can_do<pos:position pos:line="111" pos:column="30"/></name><argument_list pos:line="111" pos:column="30">(<argument><expr><operator pos:line="111" pos:column="31">&amp;<pos:position pos:line="111" pos:column="36"/></operator><name pos:line="111" pos:column="32">pk<pos:position pos:line="111" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="36">POLARSSL_PK_RSA<pos:position pos:line="111" pos:column="51"/></name></expr></argument>)<pos:position pos:line="111" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="53"/></condition><then pos:line="111" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="112" pos:column="7">ret<pos:position pos:line="112" pos:column="10"/></name> <operator pos:line="112" pos:column="11">=<pos:position pos:line="112" pos:column="12"/></operator> <name pos:line="112" pos:column="13">POLARSSL_ERR_PK_TYPE_MISMATCH<pos:position pos:line="112" pos:column="42"/></name></expr>;<pos:position pos:line="112" pos:column="43"/></expr_stmt></block></then></if>
    <if pos:line="113" pos:column="5">if<condition pos:line="113" pos:column="7">(<expr><name pos:line="113" pos:column="8">ret<pos:position pos:line="113" pos:column="11"/></name> <operator pos:line="113" pos:column="12">==<pos:position pos:line="113" pos:column="14"/></operator> <literal type="number" pos:line="113" pos:column="15">0<pos:position pos:line="113" pos:column="16"/></literal></expr>)<pos:position pos:line="113" pos:column="17"/></condition><then pos:line="113" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="7">rsa_copy<pos:position pos:line="114" pos:column="15"/></name><argument_list pos:line="114" pos:column="15">(<argument><expr><operator pos:line="114" pos:column="16">&amp;<pos:position pos:line="114" pos:column="21"/></operator><name><name pos:line="114" pos:column="17">connssl<pos:position pos:line="114" pos:column="24"/></name><operator pos:line="114" pos:column="24">-&gt;<pos:position pos:line="114" pos:column="29"/></operator><name pos:line="114" pos:column="26">rsa<pos:position pos:line="114" pos:column="29"/></name></name></expr></argument>, <argument><expr><call><name pos:line="114" pos:column="31">pk_rsa<pos:position pos:line="114" pos:column="37"/></name><argument_list pos:line="114" pos:column="37">(<argument><expr><name pos:line="114" pos:column="38">pk<pos:position pos:line="114" pos:column="40"/></name></expr></argument>)<pos:position pos:line="114" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="114" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="43"/></expr_stmt></block></then>
    <else pos:line="115" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="7">rsa_free<pos:position pos:line="116" pos:column="15"/></name><argument_list pos:line="116" pos:column="15">(<argument><expr><operator pos:line="116" pos:column="16">&amp;<pos:position pos:line="116" pos:column="21"/></operator><name><name pos:line="116" pos:column="17">connssl<pos:position pos:line="116" pos:column="24"/></name><operator pos:line="116" pos:column="24">-&gt;<pos:position pos:line="116" pos:column="29"/></operator><name pos:line="116" pos:column="26">rsa<pos:position pos:line="116" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="31"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="117" pos:column="5">pk_free<pos:position pos:line="117" pos:column="12"/></name><argument_list pos:line="117" pos:column="12">(<argument><expr><operator pos:line="117" pos:column="13">&amp;<pos:position pos:line="117" pos:column="18"/></operator><name pos:line="117" pos:column="14">pk<pos:position pos:line="117" pos:column="16"/></name></expr></argument>)<pos:position pos:line="117" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="18"/></expr_stmt>

    <if pos:line="119" pos:column="5">if<condition pos:line="119" pos:column="7">(<expr><name pos:line="119" pos:column="8">ret<pos:position pos:line="119" pos:column="11"/></name></expr>)<pos:position pos:line="119" pos:column="12"/></condition><then pos:line="119" pos:column="12"> <block pos:line="119" pos:column="13">{
<cpp:ifdef pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">ifdef<pos:position pos:line="120" pos:column="7"/></cpp:directive> <name pos:line="120" pos:column="8">POLARSSL_ERROR_C<pos:position pos:line="120" pos:column="24"/></name></cpp:ifdef>
      <expr_stmt><expr><call><name pos:line="121" pos:column="7">error_strerror<pos:position pos:line="121" pos:column="21"/></name><argument_list pos:line="121" pos:column="21">(<argument><expr><name pos:line="121" pos:column="22">ret<pos:position pos:line="121" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="27">errorbuf<pos:position pos:line="121" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="121" pos:column="37">sizeof<argument_list pos:line="121" pos:column="43">(<argument><expr><name pos:line="121" pos:column="44">errorbuf<pos:position pos:line="121" pos:column="52"/></name></expr></argument>)<pos:position pos:line="121" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="121" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">endif<pos:position pos:line="122" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="122" pos:column="8">/* POLARSSL_ERROR_C */</comment>
      <expr_stmt><expr><call><name pos:line="123" pos:column="7">failf<pos:position pos:line="123" pos:column="12"/></name><argument_list pos:line="123" pos:column="12">(<argument><expr><name pos:line="123" pos:column="13">data<pos:position pos:line="123" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="19">"Error reading private key %s - PolarSSL: (-0x%04X) %s"<pos:position pos:line="123" pos:column="74"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="124" pos:column="13">data<pos:position pos:line="124" pos:column="17"/></name><operator pos:line="124" pos:column="17">-&gt;<pos:position pos:line="124" pos:column="22"/></operator><name pos:line="124" pos:column="19">set<pos:position pos:line="124" pos:column="22"/></name><operator pos:line="124" pos:column="22">.<pos:position pos:line="124" pos:column="23"/></operator><name pos:line="124" pos:column="23">str<pos:position pos:line="124" pos:column="26"/></name><index pos:line="124" pos:column="26">[<expr><name pos:line="124" pos:column="27">STRING_KEY<pos:position pos:line="124" pos:column="37"/></name></expr>]<pos:position pos:line="124" pos:column="38"/></index></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="40">-<pos:position pos:line="124" pos:column="41"/></operator><name pos:line="124" pos:column="41">ret<pos:position pos:line="124" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="46">errorbuf<pos:position pos:line="124" pos:column="54"/></name></expr></argument>)<pos:position pos:line="124" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="56"/></expr_stmt>

      <return pos:line="126" pos:column="7">return <expr><name pos:line="126" pos:column="14">CURLE_SSL_CERTPROBLEM<pos:position pos:line="126" pos:column="35"/></name></expr>;<pos:position pos:line="126" pos:column="36"/></return>
    }<pos:position pos:line="127" pos:column="6"/></block></then></if>
  }<pos:position pos:line="128" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="130" pos:column="3">/* Load the CRL */</comment>
  <expr_stmt><expr><call><name pos:line="131" pos:column="3">memset<pos:position pos:line="131" pos:column="9"/></name><argument_list pos:line="131" pos:column="9">(<argument><expr><operator pos:line="131" pos:column="10">&amp;<pos:position pos:line="131" pos:column="15"/></operator><name><name pos:line="131" pos:column="11">connssl<pos:position pos:line="131" pos:column="18"/></name><operator pos:line="131" pos:column="18">-&gt;<pos:position pos:line="131" pos:column="23"/></operator><name pos:line="131" pos:column="20">crl<pos:position pos:line="131" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="131" pos:column="25">0<pos:position pos:line="131" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="131" pos:column="28">sizeof<argument_list pos:line="131" pos:column="34">(<argument><expr><name pos:line="131" pos:column="35">x509_crl<pos:position pos:line="131" pos:column="43"/></name></expr></argument>)<pos:position pos:line="131" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="131" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="46"/></expr_stmt>

  <if pos:line="133" pos:column="3">if<condition pos:line="133" pos:column="5">(<expr><name><name pos:line="133" pos:column="6">data<pos:position pos:line="133" pos:column="10"/></name><operator pos:line="133" pos:column="10">-&gt;<pos:position pos:line="133" pos:column="15"/></operator><name pos:line="133" pos:column="12">set<pos:position pos:line="133" pos:column="15"/></name><operator pos:line="133" pos:column="15">.<pos:position pos:line="133" pos:column="16"/></operator><name pos:line="133" pos:column="16">str<pos:position pos:line="133" pos:column="19"/></name><index pos:line="133" pos:column="19">[<expr><name pos:line="133" pos:column="20">STRING_SSL_CRLFILE<pos:position pos:line="133" pos:column="38"/></name></expr>]<pos:position pos:line="133" pos:column="39"/></index></name></expr>)<pos:position pos:line="133" pos:column="40"/></condition><then pos:line="133" pos:column="40"> <block pos:line="133" pos:column="41">{
    <expr_stmt><expr><name pos:line="134" pos:column="5">ret<pos:position pos:line="134" pos:column="8"/></name> <operator pos:line="134" pos:column="9">=<pos:position pos:line="134" pos:column="10"/></operator> <call><name pos:line="134" pos:column="11">x509_crl_parse_file<pos:position pos:line="134" pos:column="30"/></name><argument_list pos:line="134" pos:column="30">(<argument><expr><operator pos:line="134" pos:column="31">&amp;<pos:position pos:line="134" pos:column="36"/></operator><name><name pos:line="134" pos:column="32">connssl<pos:position pos:line="134" pos:column="39"/></name><operator pos:line="134" pos:column="39">-&gt;<pos:position pos:line="134" pos:column="44"/></operator><name pos:line="134" pos:column="41">crl<pos:position pos:line="134" pos:column="44"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="135" pos:column="31">data<pos:position pos:line="135" pos:column="35"/></name><operator pos:line="135" pos:column="35">-&gt;<pos:position pos:line="135" pos:column="40"/></operator><name pos:line="135" pos:column="37">set<pos:position pos:line="135" pos:column="40"/></name><operator pos:line="135" pos:column="40">.<pos:position pos:line="135" pos:column="41"/></operator><name pos:line="135" pos:column="41">str<pos:position pos:line="135" pos:column="44"/></name><index pos:line="135" pos:column="44">[<expr><name pos:line="135" pos:column="45">STRING_SSL_CRLFILE<pos:position pos:line="135" pos:column="63"/></name></expr>]<pos:position pos:line="135" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="135" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="66"/></expr_stmt>

    <if pos:line="137" pos:column="5">if<condition pos:line="137" pos:column="7">(<expr><name pos:line="137" pos:column="8">ret<pos:position pos:line="137" pos:column="11"/></name></expr>)<pos:position pos:line="137" pos:column="12"/></condition><then pos:line="137" pos:column="12"> <block pos:line="137" pos:column="13">{
<cpp:ifdef pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">ifdef<pos:position pos:line="138" pos:column="7"/></cpp:directive> <name pos:line="138" pos:column="8">POLARSSL_ERROR_C<pos:position pos:line="138" pos:column="24"/></name></cpp:ifdef>
      <expr_stmt><expr><call><name pos:line="139" pos:column="7">error_strerror<pos:position pos:line="139" pos:column="21"/></name><argument_list pos:line="139" pos:column="21">(<argument><expr><name pos:line="139" pos:column="22">ret<pos:position pos:line="139" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="27">errorbuf<pos:position pos:line="139" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="139" pos:column="37">sizeof<argument_list pos:line="139" pos:column="43">(<argument><expr><name pos:line="139" pos:column="44">errorbuf<pos:position pos:line="139" pos:column="52"/></name></expr></argument>)<pos:position pos:line="139" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="139" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">endif<pos:position pos:line="140" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="140" pos:column="8">/* POLARSSL_ERROR_C */</comment>
      <expr_stmt><expr><call><name pos:line="141" pos:column="7">failf<pos:position pos:line="141" pos:column="12"/></name><argument_list pos:line="141" pos:column="12">(<argument><expr><name pos:line="141" pos:column="13">data<pos:position pos:line="141" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="19">"Error reading CRL file %s - PolarSSL: (-0x%04X) %s"<pos:position pos:line="141" pos:column="71"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="142" pos:column="13">data<pos:position pos:line="142" pos:column="17"/></name><operator pos:line="142" pos:column="17">-&gt;<pos:position pos:line="142" pos:column="22"/></operator><name pos:line="142" pos:column="19">set<pos:position pos:line="142" pos:column="22"/></name><operator pos:line="142" pos:column="22">.<pos:position pos:line="142" pos:column="23"/></operator><name pos:line="142" pos:column="23">str<pos:position pos:line="142" pos:column="26"/></name><index pos:line="142" pos:column="26">[<expr><name pos:line="142" pos:column="27">STRING_SSL_CRLFILE<pos:position pos:line="142" pos:column="45"/></name></expr>]<pos:position pos:line="142" pos:column="46"/></index></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="48">-<pos:position pos:line="142" pos:column="49"/></operator><name pos:line="142" pos:column="49">ret<pos:position pos:line="142" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="54">errorbuf<pos:position pos:line="142" pos:column="62"/></name></expr></argument>)<pos:position pos:line="142" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="64"/></expr_stmt>

      <return pos:line="144" pos:column="7">return <expr><name pos:line="144" pos:column="14">CURLE_SSL_CRL_BADFILE<pos:position pos:line="144" pos:column="35"/></name></expr>;<pos:position pos:line="144" pos:column="36"/></return>
    }<pos:position pos:line="145" pos:column="6"/></block></then></if>
  }<pos:position pos:line="146" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="148" pos:column="3">infof<pos:position pos:line="148" pos:column="8"/></name><argument_list pos:line="148" pos:column="8">(<argument><expr><name pos:line="148" pos:column="9">data<pos:position pos:line="148" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="15">"PolarSSL: Connecting to %s:%d\n"<pos:position pos:line="148" pos:column="48"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="149" pos:column="9">conn<pos:position pos:line="149" pos:column="13"/></name><operator pos:line="149" pos:column="13">-&gt;<pos:position pos:line="149" pos:column="18"/></operator><name pos:line="149" pos:column="15">host<pos:position pos:line="149" pos:column="19"/></name><operator pos:line="149" pos:column="19">.<pos:position pos:line="149" pos:column="20"/></operator><name pos:line="149" pos:column="20">name<pos:position pos:line="149" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="149" pos:column="26">conn<pos:position pos:line="149" pos:column="30"/></name><operator pos:line="149" pos:column="30">-&gt;<pos:position pos:line="149" pos:column="35"/></operator><name pos:line="149" pos:column="32">remote_port<pos:position pos:line="149" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="149" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="45"/></expr_stmt>

  <if pos:line="151" pos:column="3">if<condition pos:line="151" pos:column="5">(<expr><call><name pos:line="151" pos:column="6">ssl_init<pos:position pos:line="151" pos:column="14"/></name><argument_list pos:line="151" pos:column="14">(<argument><expr><operator pos:line="151" pos:column="15">&amp;<pos:position pos:line="151" pos:column="20"/></operator><name><name pos:line="151" pos:column="16">connssl<pos:position pos:line="151" pos:column="23"/></name><operator pos:line="151" pos:column="23">-&gt;<pos:position pos:line="151" pos:column="28"/></operator><name pos:line="151" pos:column="25">ssl<pos:position pos:line="151" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="151" pos:column="30"/></condition><then pos:line="151" pos:column="30"> <block pos:line="151" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="152" pos:column="5">failf<pos:position pos:line="152" pos:column="10"/></name><argument_list pos:line="152" pos:column="10">(<argument><expr><name pos:line="152" pos:column="11">data<pos:position pos:line="152" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="17">"PolarSSL: ssl_init failed"<pos:position pos:line="152" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="46"/></expr_stmt>
    <return pos:line="153" pos:column="5">return <expr><name pos:line="153" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="153" pos:column="35"/></name></expr>;<pos:position pos:line="153" pos:column="36"/></return>
  }<pos:position pos:line="154" pos:column="4"/></block></then></if>

  <switch pos:line="156" pos:column="3">switch<condition pos:line="156" pos:column="9">(<expr><name><name pos:line="156" pos:column="10">data<pos:position pos:line="156" pos:column="14"/></name><operator pos:line="156" pos:column="14">-&gt;<pos:position pos:line="156" pos:column="19"/></operator><name pos:line="156" pos:column="16">set<pos:position pos:line="156" pos:column="19"/></name><operator pos:line="156" pos:column="19">.<pos:position pos:line="156" pos:column="20"/></operator><name pos:line="156" pos:column="20">ssl<pos:position pos:line="156" pos:column="23"/></name><operator pos:line="156" pos:column="23">.<pos:position pos:line="156" pos:column="24"/></operator><name pos:line="156" pos:column="24">version<pos:position pos:line="156" pos:column="31"/></name></name></expr>)<pos:position pos:line="156" pos:column="32"/></condition> <block pos:line="156" pos:column="33">{
  <default pos:line="157" pos:column="3">default:<pos:position pos:line="157" pos:column="11"/></default>
  <case pos:line="158" pos:column="3">case <expr><name pos:line="158" pos:column="8">CURL_SSLVERSION_DEFAULT<pos:position pos:line="158" pos:column="31"/></name></expr>:<pos:position pos:line="158" pos:column="32"/></case>
  <case pos:line="159" pos:column="3">case <expr><name pos:line="159" pos:column="8">CURL_SSLVERSION_TLSv1<pos:position pos:line="159" pos:column="29"/></name></expr>:<pos:position pos:line="159" pos:column="30"/></case>
    <expr_stmt><expr><call><name pos:line="160" pos:column="5">ssl_set_min_version<pos:position pos:line="160" pos:column="24"/></name><argument_list pos:line="160" pos:column="24">(<argument><expr><operator pos:line="160" pos:column="25">&amp;<pos:position pos:line="160" pos:column="30"/></operator><name><name pos:line="160" pos:column="26">connssl<pos:position pos:line="160" pos:column="33"/></name><operator pos:line="160" pos:column="33">-&gt;<pos:position pos:line="160" pos:column="38"/></operator><name pos:line="160" pos:column="35">ssl<pos:position pos:line="160" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="40">SSL_MAJOR_VERSION_3<pos:position pos:line="160" pos:column="59"/></name></expr></argument>,
                        <argument><expr><name pos:line="161" pos:column="25">SSL_MINOR_VERSION_1<pos:position pos:line="161" pos:column="44"/></name></expr></argument>)<pos:position pos:line="161" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="46"/></expr_stmt>
    <break pos:line="162" pos:column="5">break;<pos:position pos:line="162" pos:column="11"/></break>
  <case pos:line="163" pos:column="3">case <expr><name pos:line="163" pos:column="8">CURL_SSLVERSION_SSLv3<pos:position pos:line="163" pos:column="29"/></name></expr>:<pos:position pos:line="163" pos:column="30"/></case>
    <expr_stmt><expr><call><name pos:line="164" pos:column="5">ssl_set_min_version<pos:position pos:line="164" pos:column="24"/></name><argument_list pos:line="164" pos:column="24">(<argument><expr><operator pos:line="164" pos:column="25">&amp;<pos:position pos:line="164" pos:column="30"/></operator><name><name pos:line="164" pos:column="26">connssl<pos:position pos:line="164" pos:column="33"/></name><operator pos:line="164" pos:column="33">-&gt;<pos:position pos:line="164" pos:column="38"/></operator><name pos:line="164" pos:column="35">ssl<pos:position pos:line="164" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="40">SSL_MAJOR_VERSION_3<pos:position pos:line="164" pos:column="59"/></name></expr></argument>,
                        <argument><expr><name pos:line="165" pos:column="25">SSL_MINOR_VERSION_0<pos:position pos:line="165" pos:column="44"/></name></expr></argument>)<pos:position pos:line="165" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="166" pos:column="5">ssl_set_max_version<pos:position pos:line="166" pos:column="24"/></name><argument_list pos:line="166" pos:column="24">(<argument><expr><operator pos:line="166" pos:column="25">&amp;<pos:position pos:line="166" pos:column="30"/></operator><name><name pos:line="166" pos:column="26">connssl<pos:position pos:line="166" pos:column="33"/></name><operator pos:line="166" pos:column="33">-&gt;<pos:position pos:line="166" pos:column="38"/></operator><name pos:line="166" pos:column="35">ssl<pos:position pos:line="166" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="40">SSL_MAJOR_VERSION_3<pos:position pos:line="166" pos:column="59"/></name></expr></argument>,
                        <argument><expr><name pos:line="167" pos:column="25">SSL_MINOR_VERSION_0<pos:position pos:line="167" pos:column="44"/></name></expr></argument>)<pos:position pos:line="167" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="168" pos:column="5">infof<pos:position pos:line="168" pos:column="10"/></name><argument_list pos:line="168" pos:column="10">(<argument><expr><name pos:line="168" pos:column="11">data<pos:position pos:line="168" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="17">"PolarSSL: Forced min. SSL Version to be SSLv3\n"<pos:position pos:line="168" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="68"/></expr_stmt>
    <break pos:line="169" pos:column="5">break;<pos:position pos:line="169" pos:column="11"/></break>
  <case pos:line="170" pos:column="3">case <expr><name pos:line="170" pos:column="8">CURL_SSLVERSION_TLSv1_0<pos:position pos:line="170" pos:column="31"/></name></expr>:<pos:position pos:line="170" pos:column="32"/></case>
    <expr_stmt><expr><call><name pos:line="171" pos:column="5">ssl_set_min_version<pos:position pos:line="171" pos:column="24"/></name><argument_list pos:line="171" pos:column="24">(<argument><expr><operator pos:line="171" pos:column="25">&amp;<pos:position pos:line="171" pos:column="30"/></operator><name><name pos:line="171" pos:column="26">connssl<pos:position pos:line="171" pos:column="33"/></name><operator pos:line="171" pos:column="33">-&gt;<pos:position pos:line="171" pos:column="38"/></operator><name pos:line="171" pos:column="35">ssl<pos:position pos:line="171" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="40">SSL_MAJOR_VERSION_3<pos:position pos:line="171" pos:column="59"/></name></expr></argument>,
                        <argument><expr><name pos:line="172" pos:column="25">SSL_MINOR_VERSION_1<pos:position pos:line="172" pos:column="44"/></name></expr></argument>)<pos:position pos:line="172" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="173" pos:column="5">ssl_set_max_version<pos:position pos:line="173" pos:column="24"/></name><argument_list pos:line="173" pos:column="24">(<argument><expr><operator pos:line="173" pos:column="25">&amp;<pos:position pos:line="173" pos:column="30"/></operator><name><name pos:line="173" pos:column="26">connssl<pos:position pos:line="173" pos:column="33"/></name><operator pos:line="173" pos:column="33">-&gt;<pos:position pos:line="173" pos:column="38"/></operator><name pos:line="173" pos:column="35">ssl<pos:position pos:line="173" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="40">SSL_MAJOR_VERSION_3<pos:position pos:line="173" pos:column="59"/></name></expr></argument>,
                        <argument><expr><name pos:line="174" pos:column="25">SSL_MINOR_VERSION_1<pos:position pos:line="174" pos:column="44"/></name></expr></argument>)<pos:position pos:line="174" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="175" pos:column="5">infof<pos:position pos:line="175" pos:column="10"/></name><argument_list pos:line="175" pos:column="10">(<argument><expr><name pos:line="175" pos:column="11">data<pos:position pos:line="175" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="17">"PolarSSL: Forced min. SSL Version to be TLS 1.0\n"<pos:position pos:line="175" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="70"/></expr_stmt>
    <break pos:line="176" pos:column="5">break;<pos:position pos:line="176" pos:column="11"/></break>
  <case pos:line="177" pos:column="3">case <expr><name pos:line="177" pos:column="8">CURL_SSLVERSION_TLSv1_1<pos:position pos:line="177" pos:column="31"/></name></expr>:<pos:position pos:line="177" pos:column="32"/></case>
    <expr_stmt><expr><call><name pos:line="178" pos:column="5">ssl_set_min_version<pos:position pos:line="178" pos:column="24"/></name><argument_list pos:line="178" pos:column="24">(<argument><expr><operator pos:line="178" pos:column="25">&amp;<pos:position pos:line="178" pos:column="30"/></operator><name><name pos:line="178" pos:column="26">connssl<pos:position pos:line="178" pos:column="33"/></name><operator pos:line="178" pos:column="33">-&gt;<pos:position pos:line="178" pos:column="38"/></operator><name pos:line="178" pos:column="35">ssl<pos:position pos:line="178" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="40">SSL_MAJOR_VERSION_3<pos:position pos:line="178" pos:column="59"/></name></expr></argument>,
                        <argument><expr><name pos:line="179" pos:column="25">SSL_MINOR_VERSION_2<pos:position pos:line="179" pos:column="44"/></name></expr></argument>)<pos:position pos:line="179" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="180" pos:column="5">ssl_set_max_version<pos:position pos:line="180" pos:column="24"/></name><argument_list pos:line="180" pos:column="24">(<argument><expr><operator pos:line="180" pos:column="25">&amp;<pos:position pos:line="180" pos:column="30"/></operator><name><name pos:line="180" pos:column="26">connssl<pos:position pos:line="180" pos:column="33"/></name><operator pos:line="180" pos:column="33">-&gt;<pos:position pos:line="180" pos:column="38"/></operator><name pos:line="180" pos:column="35">ssl<pos:position pos:line="180" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="40">SSL_MAJOR_VERSION_3<pos:position pos:line="180" pos:column="59"/></name></expr></argument>,
                        <argument><expr><name pos:line="181" pos:column="25">SSL_MINOR_VERSION_2<pos:position pos:line="181" pos:column="44"/></name></expr></argument>)<pos:position pos:line="181" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="182" pos:column="5">infof<pos:position pos:line="182" pos:column="10"/></name><argument_list pos:line="182" pos:column="10">(<argument><expr><name pos:line="182" pos:column="11">data<pos:position pos:line="182" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="17">"PolarSSL: Forced min. SSL Version to be TLS 1.1\n"<pos:position pos:line="182" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="70"/></expr_stmt>
    <break pos:line="183" pos:column="5">break;<pos:position pos:line="183" pos:column="11"/></break>
  <case pos:line="184" pos:column="3">case <expr><name pos:line="184" pos:column="8">CURL_SSLVERSION_TLSv1_2<pos:position pos:line="184" pos:column="31"/></name></expr>:<pos:position pos:line="184" pos:column="32"/></case>
    <expr_stmt><expr><call><name pos:line="185" pos:column="5">ssl_set_min_version<pos:position pos:line="185" pos:column="24"/></name><argument_list pos:line="185" pos:column="24">(<argument><expr><operator pos:line="185" pos:column="25">&amp;<pos:position pos:line="185" pos:column="30"/></operator><name><name pos:line="185" pos:column="26">connssl<pos:position pos:line="185" pos:column="33"/></name><operator pos:line="185" pos:column="33">-&gt;<pos:position pos:line="185" pos:column="38"/></operator><name pos:line="185" pos:column="35">ssl<pos:position pos:line="185" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="40">SSL_MAJOR_VERSION_3<pos:position pos:line="185" pos:column="59"/></name></expr></argument>,
                        <argument><expr><name pos:line="186" pos:column="25">SSL_MINOR_VERSION_3<pos:position pos:line="186" pos:column="44"/></name></expr></argument>)<pos:position pos:line="186" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="187" pos:column="5">ssl_set_max_version<pos:position pos:line="187" pos:column="24"/></name><argument_list pos:line="187" pos:column="24">(<argument><expr><operator pos:line="187" pos:column="25">&amp;<pos:position pos:line="187" pos:column="30"/></operator><name><name pos:line="187" pos:column="26">connssl<pos:position pos:line="187" pos:column="33"/></name><operator pos:line="187" pos:column="33">-&gt;<pos:position pos:line="187" pos:column="38"/></operator><name pos:line="187" pos:column="35">ssl<pos:position pos:line="187" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="40">SSL_MAJOR_VERSION_3<pos:position pos:line="187" pos:column="59"/></name></expr></argument>,
                        <argument><expr><name pos:line="188" pos:column="25">SSL_MINOR_VERSION_3<pos:position pos:line="188" pos:column="44"/></name></expr></argument>)<pos:position pos:line="188" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="189" pos:column="5">infof<pos:position pos:line="189" pos:column="10"/></name><argument_list pos:line="189" pos:column="10">(<argument><expr><name pos:line="189" pos:column="11">data<pos:position pos:line="189" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="189" pos:column="17">"PolarSSL: Forced min. SSL Version to be TLS 1.2\n"<pos:position pos:line="189" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="189" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="70"/></expr_stmt>
    <break pos:line="190" pos:column="5">break;<pos:position pos:line="190" pos:column="11"/></break>
  }<pos:position pos:line="191" pos:column="4"/></block></switch>

  <expr_stmt><expr><call><name pos:line="193" pos:column="3">ssl_set_endpoint<pos:position pos:line="193" pos:column="19"/></name><argument_list pos:line="193" pos:column="19">(<argument><expr><operator pos:line="193" pos:column="20">&amp;<pos:position pos:line="193" pos:column="25"/></operator><name><name pos:line="193" pos:column="21">connssl<pos:position pos:line="193" pos:column="28"/></name><operator pos:line="193" pos:column="28">-&gt;<pos:position pos:line="193" pos:column="33"/></operator><name pos:line="193" pos:column="30">ssl<pos:position pos:line="193" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="35">SSL_IS_CLIENT<pos:position pos:line="193" pos:column="48"/></name></expr></argument>)<pos:position pos:line="193" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="194" pos:column="3">ssl_set_authmode<pos:position pos:line="194" pos:column="19"/></name><argument_list pos:line="194" pos:column="19">(<argument><expr><operator pos:line="194" pos:column="20">&amp;<pos:position pos:line="194" pos:column="25"/></operator><name><name pos:line="194" pos:column="21">connssl<pos:position pos:line="194" pos:column="28"/></name><operator pos:line="194" pos:column="28">-&gt;<pos:position pos:line="194" pos:column="33"/></operator><name pos:line="194" pos:column="30">ssl<pos:position pos:line="194" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="35">SSL_VERIFY_OPTIONAL<pos:position pos:line="194" pos:column="54"/></name></expr></argument>)<pos:position pos:line="194" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="56"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="196" pos:column="3">ssl_set_rng<pos:position pos:line="196" pos:column="14"/></name><argument_list pos:line="196" pos:column="14">(<argument><expr><operator pos:line="196" pos:column="15">&amp;<pos:position pos:line="196" pos:column="20"/></operator><name><name pos:line="196" pos:column="16">connssl<pos:position pos:line="196" pos:column="23"/></name><operator pos:line="196" pos:column="23">-&gt;<pos:position pos:line="196" pos:column="28"/></operator><name pos:line="196" pos:column="25">ssl<pos:position pos:line="196" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="196" pos:column="30">ctr_drbg_random<pos:position pos:line="196" pos:column="45"/></name></expr></argument>,
              <argument><expr><operator pos:line="197" pos:column="15">&amp;<pos:position pos:line="197" pos:column="20"/></operator><name><name pos:line="197" pos:column="16">connssl<pos:position pos:line="197" pos:column="23"/></name><operator pos:line="197" pos:column="23">-&gt;<pos:position pos:line="197" pos:column="28"/></operator><name pos:line="197" pos:column="25">ctr_drbg<pos:position pos:line="197" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="197" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="198" pos:column="3">ssl_set_bio<pos:position pos:line="198" pos:column="14"/></name><argument_list pos:line="198" pos:column="14">(<argument><expr><operator pos:line="198" pos:column="15">&amp;<pos:position pos:line="198" pos:column="20"/></operator><name><name pos:line="198" pos:column="16">connssl<pos:position pos:line="198" pos:column="23"/></name><operator pos:line="198" pos:column="23">-&gt;<pos:position pos:line="198" pos:column="28"/></operator><name pos:line="198" pos:column="25">ssl<pos:position pos:line="198" pos:column="28"/></name></name></expr></argument>,
              <argument><expr><name pos:line="199" pos:column="15">net_recv<pos:position pos:line="199" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="199" pos:column="25">&amp;<pos:position pos:line="199" pos:column="30"/></operator><name><name pos:line="199" pos:column="26">conn<pos:position pos:line="199" pos:column="30"/></name><operator pos:line="199" pos:column="30">-&gt;<pos:position pos:line="199" pos:column="35"/></operator><name pos:line="199" pos:column="32">sock<pos:position pos:line="199" pos:column="36"/></name><index pos:line="199" pos:column="36">[<expr><name pos:line="199" pos:column="37">sockindex<pos:position pos:line="199" pos:column="46"/></name></expr>]<pos:position pos:line="199" pos:column="47"/></index></name></expr></argument>,
              <argument><expr><name pos:line="200" pos:column="15">net_send<pos:position pos:line="200" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="200" pos:column="25">&amp;<pos:position pos:line="200" pos:column="30"/></operator><name><name pos:line="200" pos:column="26">conn<pos:position pos:line="200" pos:column="30"/></name><operator pos:line="200" pos:column="30">-&gt;<pos:position pos:line="200" pos:column="35"/></operator><name pos:line="200" pos:column="32">sock<pos:position pos:line="200" pos:column="36"/></name><index pos:line="200" pos:column="36">[<expr><name pos:line="200" pos:column="37">sockindex<pos:position pos:line="200" pos:column="46"/></name></expr>]<pos:position pos:line="200" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="200" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="49"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="202" pos:column="3">ssl_set_ciphersuites<pos:position pos:line="202" pos:column="23"/></name><argument_list pos:line="202" pos:column="23">(<argument><expr><operator pos:line="202" pos:column="24">&amp;<pos:position pos:line="202" pos:column="29"/></operator><name><name pos:line="202" pos:column="25">connssl<pos:position pos:line="202" pos:column="32"/></name><operator pos:line="202" pos:column="32">-&gt;<pos:position pos:line="202" pos:column="37"/></operator><name pos:line="202" pos:column="34">ssl<pos:position pos:line="202" pos:column="37"/></name></name></expr></argument>, <argument><expr><call><name pos:line="202" pos:column="39">ssl_list_ciphersuites<pos:position pos:line="202" pos:column="60"/></name><argument_list pos:line="202" pos:column="60">()<pos:position pos:line="202" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="202" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="64"/></expr_stmt>
  <if pos:line="203" pos:column="3">if<condition pos:line="203" pos:column="5">(<expr><operator pos:line="203" pos:column="6">!<pos:position pos:line="203" pos:column="7"/></operator><call><name pos:line="203" pos:column="7">Curl_ssl_getsessionid<pos:position pos:line="203" pos:column="28"/></name><argument_list pos:line="203" pos:column="28">(<argument><expr><name pos:line="203" pos:column="29">conn<pos:position pos:line="203" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="203" pos:column="35">&amp;<pos:position pos:line="203" pos:column="40"/></operator><name pos:line="203" pos:column="36">old_session<pos:position pos:line="203" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="203" pos:column="49">&amp;<pos:position pos:line="203" pos:column="54"/></operator><name pos:line="203" pos:column="50">old_session_size<pos:position pos:line="203" pos:column="66"/></name></expr></argument>)<pos:position pos:line="203" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="203" pos:column="68"/></condition><then pos:line="203" pos:column="68"> <block pos:line="203" pos:column="69">{
    <expr_stmt><expr><call><name pos:line="204" pos:column="5">memcpy<pos:position pos:line="204" pos:column="11"/></name><argument_list pos:line="204" pos:column="11">(<argument><expr><operator pos:line="204" pos:column="12">&amp;<pos:position pos:line="204" pos:column="17"/></operator><name><name pos:line="204" pos:column="13">connssl<pos:position pos:line="204" pos:column="20"/></name><operator pos:line="204" pos:column="20">-&gt;<pos:position pos:line="204" pos:column="25"/></operator><name pos:line="204" pos:column="22">ssn<pos:position pos:line="204" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="27">old_session<pos:position pos:line="204" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="40">old_session_size<pos:position pos:line="204" pos:column="56"/></name></expr></argument>)<pos:position pos:line="204" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="205" pos:column="5">infof<pos:position pos:line="205" pos:column="10"/></name><argument_list pos:line="205" pos:column="10">(<argument><expr><name pos:line="205" pos:column="11">data<pos:position pos:line="205" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="205" pos:column="17">"PolarSSL re-using session\n"<pos:position pos:line="205" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="205" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="206" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="208" pos:column="3">ssl_set_session<pos:position pos:line="208" pos:column="18"/></name><argument_list pos:line="208" pos:column="18">(<argument><expr><operator pos:line="208" pos:column="19">&amp;<pos:position pos:line="208" pos:column="24"/></operator><name><name pos:line="208" pos:column="20">connssl<pos:position pos:line="208" pos:column="27"/></name><operator pos:line="208" pos:column="27">-&gt;<pos:position pos:line="208" pos:column="32"/></operator><name pos:line="208" pos:column="29">ssl<pos:position pos:line="208" pos:column="32"/></name></name></expr></argument>,
                  <argument><expr><operator pos:line="209" pos:column="19">&amp;<pos:position pos:line="209" pos:column="24"/></operator><name><name pos:line="209" pos:column="20">connssl<pos:position pos:line="209" pos:column="27"/></name><operator pos:line="209" pos:column="27">-&gt;<pos:position pos:line="209" pos:column="32"/></operator><name pos:line="209" pos:column="29">ssn<pos:position pos:line="209" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="209" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="211" pos:column="3">ssl_set_ca_chain<pos:position pos:line="211" pos:column="19"/></name><argument_list pos:line="211" pos:column="19">(<argument><expr><operator pos:line="211" pos:column="20">&amp;<pos:position pos:line="211" pos:column="25"/></operator><name><name pos:line="211" pos:column="21">connssl<pos:position pos:line="211" pos:column="28"/></name><operator pos:line="211" pos:column="28">-&gt;<pos:position pos:line="211" pos:column="33"/></operator><name pos:line="211" pos:column="30">ssl<pos:position pos:line="211" pos:column="33"/></name></name></expr></argument>,
                   <argument><expr><operator pos:line="212" pos:column="20">&amp;<pos:position pos:line="212" pos:column="25"/></operator><name><name pos:line="212" pos:column="21">connssl<pos:position pos:line="212" pos:column="28"/></name><operator pos:line="212" pos:column="28">-&gt;<pos:position pos:line="212" pos:column="33"/></operator><name pos:line="212" pos:column="30">cacert<pos:position pos:line="212" pos:column="36"/></name></name></expr></argument>,
                   <argument><expr><operator pos:line="213" pos:column="20">&amp;<pos:position pos:line="213" pos:column="25"/></operator><name><name pos:line="213" pos:column="21">connssl<pos:position pos:line="213" pos:column="28"/></name><operator pos:line="213" pos:column="28">-&gt;<pos:position pos:line="213" pos:column="33"/></operator><name pos:line="213" pos:column="30">crl<pos:position pos:line="213" pos:column="33"/></name></name></expr></argument>,
                   <argument><expr><name><name pos:line="214" pos:column="20">conn<pos:position pos:line="214" pos:column="24"/></name><operator pos:line="214" pos:column="24">-&gt;<pos:position pos:line="214" pos:column="29"/></operator><name pos:line="214" pos:column="26">host<pos:position pos:line="214" pos:column="30"/></name><operator pos:line="214" pos:column="30">.<pos:position pos:line="214" pos:column="31"/></operator><name pos:line="214" pos:column="31">name<pos:position pos:line="214" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="214" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="216" pos:column="3">ssl_set_own_cert_rsa<pos:position pos:line="216" pos:column="23"/></name><argument_list pos:line="216" pos:column="23">(<argument><expr><operator pos:line="216" pos:column="24">&amp;<pos:position pos:line="216" pos:column="29"/></operator><name><name pos:line="216" pos:column="25">connssl<pos:position pos:line="216" pos:column="32"/></name><operator pos:line="216" pos:column="32">-&gt;<pos:position pos:line="216" pos:column="37"/></operator><name pos:line="216" pos:column="34">ssl<pos:position pos:line="216" pos:column="37"/></name></name></expr></argument>,
                       <argument><expr><operator pos:line="217" pos:column="24">&amp;<pos:position pos:line="217" pos:column="29"/></operator><name><name pos:line="217" pos:column="25">connssl<pos:position pos:line="217" pos:column="32"/></name><operator pos:line="217" pos:column="32">-&gt;<pos:position pos:line="217" pos:column="37"/></operator><name pos:line="217" pos:column="34">clicert<pos:position pos:line="217" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="217" pos:column="43">&amp;<pos:position pos:line="217" pos:column="48"/></operator><name><name pos:line="217" pos:column="44">connssl<pos:position pos:line="217" pos:column="51"/></name><operator pos:line="217" pos:column="51">-&gt;<pos:position pos:line="217" pos:column="56"/></operator><name pos:line="217" pos:column="53">rsa<pos:position pos:line="217" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="217" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="58"/></expr_stmt>

  <if pos:line="219" pos:column="3">if<condition pos:line="219" pos:column="5">(<expr><operator pos:line="219" pos:column="6">!<pos:position pos:line="219" pos:column="7"/></operator><call><name pos:line="219" pos:column="7">Curl_inet_pton<pos:position pos:line="219" pos:column="21"/></name><argument_list pos:line="219" pos:column="21">(<argument><expr><name pos:line="219" pos:column="22">AF_INET<pos:position pos:line="219" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="219" pos:column="31">conn<pos:position pos:line="219" pos:column="35"/></name><operator pos:line="219" pos:column="35">-&gt;<pos:position pos:line="219" pos:column="40"/></operator><name pos:line="219" pos:column="37">host<pos:position pos:line="219" pos:column="41"/></name><operator pos:line="219" pos:column="41">.<pos:position pos:line="219" pos:column="42"/></operator><name pos:line="219" pos:column="42">name<pos:position pos:line="219" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="219" pos:column="48">&amp;<pos:position pos:line="219" pos:column="53"/></operator><name pos:line="219" pos:column="49">addr<pos:position pos:line="219" pos:column="53"/></name></expr></argument>)<pos:position pos:line="219" pos:column="54"/></argument_list></call> <operator pos:line="219" pos:column="55">&amp;&amp;<pos:position pos:line="219" pos:column="65"/></operator>
<cpp:ifdef pos:line="220" pos:column="1">#<cpp:directive pos:line="220" pos:column="2">ifdef<pos:position pos:line="220" pos:column="7"/></cpp:directive> <name pos:line="220" pos:column="8">ENABLE_IPV6<pos:position pos:line="220" pos:column="19"/></name></cpp:ifdef>
     <operator pos:line="221" pos:column="6">!<pos:position pos:line="221" pos:column="7"/></operator><call><name pos:line="221" pos:column="7">Curl_inet_pton<pos:position pos:line="221" pos:column="21"/></name><argument_list pos:line="221" pos:column="21">(<argument><expr><name pos:line="221" pos:column="22">AF_INET6<pos:position pos:line="221" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="221" pos:column="32">conn<pos:position pos:line="221" pos:column="36"/></name><operator pos:line="221" pos:column="36">-&gt;<pos:position pos:line="221" pos:column="41"/></operator><name pos:line="221" pos:column="38">host<pos:position pos:line="221" pos:column="42"/></name><operator pos:line="221" pos:column="42">.<pos:position pos:line="221" pos:column="43"/></operator><name pos:line="221" pos:column="43">name<pos:position pos:line="221" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="221" pos:column="49">&amp;<pos:position pos:line="221" pos:column="54"/></operator><name pos:line="221" pos:column="50">addr<pos:position pos:line="221" pos:column="54"/></name></expr></argument>)<pos:position pos:line="221" pos:column="55"/></argument_list></call> <operator pos:line="221" pos:column="56">&amp;&amp;<pos:position pos:line="221" pos:column="66"/></operator>
<cpp:endif pos:line="222" pos:column="1">#<cpp:directive pos:line="222" pos:column="2">endif<pos:position pos:line="222" pos:column="7"/></cpp:directive></cpp:endif>
     <name pos:line="223" pos:column="6">sni<pos:position pos:line="223" pos:column="9"/></name> <operator pos:line="223" pos:column="10">&amp;&amp;<pos:position pos:line="223" pos:column="20"/></operator> <call><name pos:line="223" pos:column="13">ssl_set_hostname<pos:position pos:line="223" pos:column="29"/></name><argument_list pos:line="223" pos:column="29">(<argument><expr><operator pos:line="223" pos:column="30">&amp;<pos:position pos:line="223" pos:column="35"/></operator><name><name pos:line="223" pos:column="31">connssl<pos:position pos:line="223" pos:column="38"/></name><operator pos:line="223" pos:column="38">-&gt;<pos:position pos:line="223" pos:column="43"/></operator><name pos:line="223" pos:column="40">ssl<pos:position pos:line="223" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="223" pos:column="45">conn<pos:position pos:line="223" pos:column="49"/></name><operator pos:line="223" pos:column="49">-&gt;<pos:position pos:line="223" pos:column="54"/></operator><name pos:line="223" pos:column="51">host<pos:position pos:line="223" pos:column="55"/></name><operator pos:line="223" pos:column="55">.<pos:position pos:line="223" pos:column="56"/></operator><name pos:line="223" pos:column="56">name<pos:position pos:line="223" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="223" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="223" pos:column="62"/></condition><then pos:line="223" pos:column="62"> <block pos:line="223" pos:column="63">{
     <expr_stmt><expr><call><name pos:line="224" pos:column="6">infof<pos:position pos:line="224" pos:column="11"/></name><argument_list pos:line="224" pos:column="11">(<argument><expr><name pos:line="224" pos:column="12">data<pos:position pos:line="224" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="224" pos:column="18">"WARNING: failed to configure "<pos:position pos:line="224" pos:column="49"/></literal>
                 <literal type="string" pos:line="225" pos:column="18">"server name indication (SNI) TLS extension\n"<pos:position pos:line="225" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="225" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="66"/></expr_stmt>
  }<pos:position pos:line="226" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="228" pos:column="1">#<cpp:directive pos:line="228" pos:column="2">ifdef<pos:position pos:line="228" pos:column="7"/></cpp:directive> <name pos:line="228" pos:column="8">HAS_ALPN<pos:position pos:line="228" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="229" pos:column="3">if<condition pos:line="229" pos:column="5">(<expr><name><name pos:line="229" pos:column="6">data<pos:position pos:line="229" pos:column="10"/></name><operator pos:line="229" pos:column="10">-&gt;<pos:position pos:line="229" pos:column="15"/></operator><name pos:line="229" pos:column="12">set<pos:position pos:line="229" pos:column="15"/></name><operator pos:line="229" pos:column="15">.<pos:position pos:line="229" pos:column="16"/></operator><name pos:line="229" pos:column="16">httpversion<pos:position pos:line="229" pos:column="27"/></name></name> <operator pos:line="229" pos:column="28">==<pos:position pos:line="229" pos:column="30"/></operator> <name pos:line="229" pos:column="31">CURL_HTTP_VERSION_2_0<pos:position pos:line="229" pos:column="52"/></name></expr>)<pos:position pos:line="229" pos:column="53"/></condition><then pos:line="229" pos:column="53"> <block pos:line="229" pos:column="54">{
    <if pos:line="230" pos:column="5">if<condition pos:line="230" pos:column="7">(<expr><name><name pos:line="230" pos:column="8">data<pos:position pos:line="230" pos:column="12"/></name><operator pos:line="230" pos:column="12">-&gt;<pos:position pos:line="230" pos:column="17"/></operator><name pos:line="230" pos:column="14">set<pos:position pos:line="230" pos:column="17"/></name><operator pos:line="230" pos:column="17">.<pos:position pos:line="230" pos:column="18"/></operator><name pos:line="230" pos:column="18">ssl_enable_alpn<pos:position pos:line="230" pos:column="33"/></name></name></expr>)<pos:position pos:line="230" pos:column="34"/></condition><then pos:line="230" pos:column="34"> <block pos:line="230" pos:column="35">{
      <decl_stmt><decl><specifier pos:line="231" pos:column="7">static<pos:position pos:line="231" pos:column="13"/></specifier> <type><specifier pos:line="231" pos:column="14">const<pos:position pos:line="231" pos:column="19"/></specifier> <name pos:line="231" pos:column="20">char<pos:position pos:line="231" pos:column="24"/></name><modifier pos:line="231" pos:column="24">*<pos:position pos:line="231" pos:column="25"/></modifier></type> <name><name pos:line="231" pos:column="26">protocols<pos:position pos:line="231" pos:column="35"/></name><index pos:line="231" pos:column="35">[]<pos:position pos:line="231" pos:column="37"/></index></name> <init pos:line="231" pos:column="38">= <expr><block pos:line="231" pos:column="40">{
        <expr><name pos:line="232" pos:column="9">NGHTTP2_PROTO_VERSION_ID<pos:position pos:line="232" pos:column="33"/></name></expr>, <expr><name pos:line="232" pos:column="35">ALPN_HTTP_1_1<pos:position pos:line="232" pos:column="48"/></name></expr>, <expr><name pos:line="232" pos:column="50">NULL<pos:position pos:line="232" pos:column="54"/></name></expr>
      }<pos:position pos:line="233" pos:column="8"/></block></expr></init></decl>;<pos:position pos:line="233" pos:column="9"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="234" pos:column="7">ssl_set_alpn_protocols<pos:position pos:line="234" pos:column="29"/></name><argument_list pos:line="234" pos:column="29">(<argument><expr><operator pos:line="234" pos:column="30">&amp;<pos:position pos:line="234" pos:column="35"/></operator><name><name pos:line="234" pos:column="31">connssl<pos:position pos:line="234" pos:column="38"/></name><operator pos:line="234" pos:column="38">-&gt;<pos:position pos:line="234" pos:column="43"/></operator><name pos:line="234" pos:column="40">ssl<pos:position pos:line="234" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="45">protocols<pos:position pos:line="234" pos:column="54"/></name></expr></argument>)<pos:position pos:line="234" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="235" pos:column="7">infof<pos:position pos:line="235" pos:column="12"/></name><argument_list pos:line="235" pos:column="12">(<argument><expr><name pos:line="235" pos:column="13">data<pos:position pos:line="235" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="235" pos:column="19">"ALPN, offering %s, %s\n"<pos:position pos:line="235" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="235" pos:column="46">protocols<pos:position pos:line="235" pos:column="55"/></name><index pos:line="235" pos:column="55">[<expr><literal type="number" pos:line="235" pos:column="56">0<pos:position pos:line="235" pos:column="57"/></literal></expr>]<pos:position pos:line="235" pos:column="58"/></index></name></expr></argument>,
            <argument><expr><name><name pos:line="236" pos:column="13">protocols<pos:position pos:line="236" pos:column="22"/></name><index pos:line="236" pos:column="22">[<expr><literal type="number" pos:line="236" pos:column="23">1<pos:position pos:line="236" pos:column="24"/></literal></expr>]<pos:position pos:line="236" pos:column="25"/></index></name></expr></argument>)<pos:position pos:line="236" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="237" pos:column="7">connssl<pos:position pos:line="237" pos:column="14"/></name><operator pos:line="237" pos:column="14">-&gt;<pos:position pos:line="237" pos:column="19"/></operator><name pos:line="237" pos:column="16">asked_for_h2<pos:position pos:line="237" pos:column="28"/></name></name> <operator pos:line="237" pos:column="29">=<pos:position pos:line="237" pos:column="30"/></operator> <name pos:line="237" pos:column="31">TRUE<pos:position pos:line="237" pos:column="35"/></name></expr>;<pos:position pos:line="237" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="238" pos:column="6"/></block></then></if>
  }<pos:position pos:line="239" pos:column="4"/></block></then></if>
<cpp:endif pos:line="240" pos:column="1">#<cpp:directive pos:line="240" pos:column="2">endif<pos:position pos:line="240" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="242" pos:column="1">#<cpp:directive pos:line="242" pos:column="2">ifdef<pos:position pos:line="242" pos:column="7"/></cpp:directive> <name pos:line="242" pos:column="8">POLARSSL_DEBUG<pos:position pos:line="242" pos:column="22"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="243" pos:column="3">ssl_set_dbg<pos:position pos:line="243" pos:column="14"/></name><argument_list pos:line="243" pos:column="14">(<argument><expr><operator pos:line="243" pos:column="15">&amp;<pos:position pos:line="243" pos:column="20"/></operator><name><name pos:line="243" pos:column="16">connssl<pos:position pos:line="243" pos:column="23"/></name><operator pos:line="243" pos:column="23">-&gt;<pos:position pos:line="243" pos:column="28"/></operator><name pos:line="243" pos:column="25">ssl<pos:position pos:line="243" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="30">polarssl_debug<pos:position pos:line="243" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="46">data<pos:position pos:line="243" pos:column="50"/></name></expr></argument>)<pos:position pos:line="243" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="244" pos:column="1">#<cpp:directive pos:line="244" pos:column="2">endif<pos:position pos:line="244" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name><name pos:line="246" pos:column="3">connssl<pos:position pos:line="246" pos:column="10"/></name><operator pos:line="246" pos:column="10">-&gt;<pos:position pos:line="246" pos:column="15"/></operator><name pos:line="246" pos:column="12">connecting_state<pos:position pos:line="246" pos:column="28"/></name></name> <operator pos:line="246" pos:column="29">=<pos:position pos:line="246" pos:column="30"/></operator> <name pos:line="246" pos:column="31">ssl_connect_2<pos:position pos:line="246" pos:column="44"/></name></expr>;<pos:position pos:line="246" pos:column="45"/></expr_stmt>

  <return pos:line="248" pos:column="3">return <expr><name pos:line="248" pos:column="10">CURLE_OK<pos:position pos:line="248" pos:column="18"/></name></expr>;<pos:position pos:line="248" pos:column="19"/></return>
}<pos:position pos:line="249" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_331.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dprintf_formatf<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(
  <parameter><decl><type><name pos:line="2" pos:column="3">void<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">data<pos:position pos:line="2" pos:column="13"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="15">/* untouched by format(), just sent to the stream() function in
                 the second argument */</comment>
  <comment type="block" pos:line="4" pos:column="3">/* function pointer called for each output character */</comment>
  <parameter><function_decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> (<modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier><name pos:line="5" pos:column="9">stream<pos:position pos:line="5" pos:column="15"/></name>)<parameter_list pos:line="5" pos:column="16">(<parameter><decl><type><name pos:line="5" pos:column="17">int<pos:position pos:line="5" pos:column="20"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="22">FILE<pos:position pos:line="5" pos:column="26"/></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type></decl></parameter>)<pos:position pos:line="5" pos:column="29"/></parameter_list></function_decl></parameter>,
  <parameter><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">format<pos:position pos:line="6" pos:column="21"/></name></decl></parameter>,    <comment type="block" pos:line="6" pos:column="26">/* %-formatted string */</comment>
  <parameter><decl><type><name pos:line="7" pos:column="3">va_list<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">ap_save<pos:position pos:line="7" pos:column="18"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="19"/></parameter_list> <comment type="block" pos:line="7" pos:column="20">/* list of parameters */</comment>
<block pos:line="8" pos:column="1">{
  <comment type="block" pos:line="9" pos:column="3">/* Base-36 digits for numbers.  */</comment>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">digits<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><name pos:line="10" pos:column="24">lower_digits<pos:position pos:line="10" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* Pointer into the format string.  */</comment>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">f<pos:position pos:line="13" pos:column="10"/></name></decl>;<pos:position pos:line="13" pos:column="11"/></decl_stmt>

  <comment type="block" pos:line="15" pos:column="3">/* Number of characters written.  */</comment>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">done<pos:position pos:line="16" pos:column="11"/></name> <init pos:line="16" pos:column="12">= <expr><literal type="number" pos:line="16" pos:column="14">0<pos:position pos:line="16" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="18" pos:column="3">long<pos:position pos:line="18" pos:column="7"/></name></type> <name pos:line="18" pos:column="8">param<pos:position pos:line="18" pos:column="13"/></name></decl>;<pos:position pos:line="18" pos:column="14"/></decl_stmt> <comment type="block" pos:line="18" pos:column="15">/* current parameter to read */</comment>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">long<pos:position pos:line="19" pos:column="7"/></name></type> <name pos:line="19" pos:column="8">param_num<pos:position pos:line="19" pos:column="17"/></name><init pos:line="19" pos:column="17">=<expr><literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="20"/></decl_stmt> <comment type="block" pos:line="19" pos:column="21">/* parameter counter */</comment>

  <decl_stmt><decl><type><name pos:line="21" pos:column="3">va_stack_t<pos:position pos:line="21" pos:column="13"/></name></type> <name><name pos:line="21" pos:column="14">vto<pos:position pos:line="21" pos:column="17"/></name><index pos:line="21" pos:column="17">[<expr><name pos:line="21" pos:column="18">MAX_PARAMETERS<pos:position pos:line="21" pos:column="32"/></name></expr>]<pos:position pos:line="21" pos:column="33"/></index></name></decl>;<pos:position pos:line="21" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">char<pos:position pos:line="22" pos:column="7"/></name> <modifier pos:line="22" pos:column="8">*<pos:position pos:line="22" pos:column="9"/></modifier></type><name><name pos:line="22" pos:column="9">endpos<pos:position pos:line="22" pos:column="15"/></name><index pos:line="22" pos:column="15">[<expr><name pos:line="22" pos:column="16">MAX_PARAMETERS<pos:position pos:line="22" pos:column="30"/></name></expr>]<pos:position pos:line="22" pos:column="31"/></index></name></decl>;<pos:position pos:line="22" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">char<pos:position pos:line="23" pos:column="7"/></name> <modifier pos:line="23" pos:column="8">*<pos:position pos:line="23" pos:column="9"/></modifier><modifier pos:line="23" pos:column="9">*<pos:position pos:line="23" pos:column="10"/></modifier></type><name pos:line="23" pos:column="10">end<pos:position pos:line="23" pos:column="13"/></name></decl>;<pos:position pos:line="23" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="25" pos:column="3">char<pos:position pos:line="25" pos:column="7"/></name></type> <name><name pos:line="25" pos:column="8">work<pos:position pos:line="25" pos:column="12"/></name><index pos:line="25" pos:column="12">[<expr><name pos:line="25" pos:column="13">BUFFSIZE<pos:position pos:line="25" pos:column="21"/></name></expr>]<pos:position pos:line="25" pos:column="22"/></index></name></decl>;<pos:position pos:line="25" pos:column="23"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="27" pos:column="3">va_stack_t<pos:position pos:line="27" pos:column="13"/></name> <modifier pos:line="27" pos:column="14">*<pos:position pos:line="27" pos:column="15"/></modifier></type><name pos:line="27" pos:column="15">p<pos:position pos:line="27" pos:column="16"/></name></decl>;<pos:position pos:line="27" pos:column="17"/></decl_stmt>

  <comment type="block" pos:line="29" pos:column="3">/* Do the actual %-code parsing */</comment>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">dprintf_Pass1<pos:position pos:line="30" pos:column="16"/></name><argument_list pos:line="30" pos:column="16">(<argument><expr><operator pos:line="30" pos:column="17">(<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">char<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">*<pos:position pos:line="30" pos:column="24"/></operator><operator pos:line="30" pos:column="24">)<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">format<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="33">vto<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">endpos<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">ap_save<pos:position pos:line="30" pos:column="53"/></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><name pos:line="32" pos:column="3">end<pos:position pos:line="32" pos:column="6"/></name> <operator pos:line="32" pos:column="7">=<pos:position pos:line="32" pos:column="8"/></operator> <operator pos:line="32" pos:column="9">&amp;<pos:position pos:line="32" pos:column="14"/></operator><name><name pos:line="32" pos:column="10">endpos<pos:position pos:line="32" pos:column="16"/></name><index pos:line="32" pos:column="16">[<expr><literal type="number" pos:line="32" pos:column="17">0<pos:position pos:line="32" pos:column="18"/></literal></expr>]<pos:position pos:line="32" pos:column="19"/></index></name></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt> <comment type="block" pos:line="32" pos:column="21">/* the initial end-position from the list dprintf_Pass1()
                       created for us */</comment>

  <expr_stmt><expr><name pos:line="35" pos:column="3">f<pos:position pos:line="35" pos:column="4"/></name> <operator pos:line="35" pos:column="5">=<pos:position pos:line="35" pos:column="6"/></operator> <operator pos:line="35" pos:column="7">(<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">char<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">*<pos:position pos:line="35" pos:column="14"/></operator><operator pos:line="35" pos:column="14">)<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">format<pos:position pos:line="35" pos:column="21"/></name></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
  <while pos:line="36" pos:column="3">while <condition pos:line="36" pos:column="9">(<expr><operator pos:line="36" pos:column="10">*<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">f<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">!=<pos:position pos:line="36" pos:column="15"/></operator> <literal type="char" pos:line="36" pos:column="16">'\0'<pos:position pos:line="36" pos:column="20"/></literal></expr>)<pos:position pos:line="36" pos:column="21"/></condition> <block pos:line="36" pos:column="22">{
    <comment type="block" pos:line="37" pos:column="5">/* Format spec modifiers.  */</comment>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">char<pos:position pos:line="38" pos:column="9"/></name></type> <name pos:line="38" pos:column="10">alt<pos:position pos:line="38" pos:column="13"/></name></decl>;<pos:position pos:line="38" pos:column="14"/></decl_stmt>

    <comment type="block" pos:line="40" pos:column="5">/* Width of a field.  */</comment>
    <decl_stmt><decl><type><name pos:line="41" pos:column="5">long<pos:position pos:line="41" pos:column="9"/></name></type> <name pos:line="41" pos:column="10">width<pos:position pos:line="41" pos:column="15"/></name></decl>;<pos:position pos:line="41" pos:column="16"/></decl_stmt>

    <comment type="block" pos:line="43" pos:column="5">/* Precision of a field.  */</comment>
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">long<pos:position pos:line="44" pos:column="9"/></name></type> <name pos:line="44" pos:column="10">prec<pos:position pos:line="44" pos:column="14"/></name></decl>;<pos:position pos:line="44" pos:column="15"/></decl_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* Decimal integer is negative.  */</comment>
    <decl_stmt><decl><type><name pos:line="47" pos:column="5">char<pos:position pos:line="47" pos:column="9"/></name></type> <name pos:line="47" pos:column="10">is_neg<pos:position pos:line="47" pos:column="16"/></name></decl>;<pos:position pos:line="47" pos:column="17"/></decl_stmt>

    <comment type="block" pos:line="49" pos:column="5">/* Base of a number to be written.  */</comment>
    <decl_stmt><decl><type><name pos:line="50" pos:column="5">long<pos:position pos:line="50" pos:column="9"/></name></type> <name pos:line="50" pos:column="10">base<pos:position pos:line="50" pos:column="14"/></name></decl>;<pos:position pos:line="50" pos:column="15"/></decl_stmt>

    <comment type="block" pos:line="52" pos:column="5">/* Integral values to be written.  */</comment>
<cpp:ifdef pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">ifdef<pos:position pos:line="53" pos:column="7"/></cpp:directive> <name pos:line="53" pos:column="8">ENABLE_64BIT<pos:position pos:line="53" pos:column="20"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="54" pos:column="5">unsigned<pos:position pos:line="54" pos:column="13"/></name> <name pos:line="54" pos:column="14">LONG_LONG<pos:position pos:line="54" pos:column="23"/></name></type> <name pos:line="54" pos:column="24">num<pos:position pos:line="54" pos:column="27"/></name></decl>;<pos:position pos:line="54" pos:column="28"/></decl_stmt>
<cpp:else pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">else<pos:position pos:line="55" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="56" pos:column="5">unsigned<pos:position pos:line="56" pos:column="13"/></name> <name pos:line="56" pos:column="14">long<pos:position pos:line="56" pos:column="18"/></name></type> <name pos:line="56" pos:column="19">num<pos:position pos:line="56" pos:column="22"/></name></decl>;<pos:position pos:line="56" pos:column="23"/></decl_stmt>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="58" pos:column="5">long<pos:position pos:line="58" pos:column="9"/></name></type> <name pos:line="58" pos:column="10">signed_num<pos:position pos:line="58" pos:column="20"/></name></decl>;<pos:position pos:line="58" pos:column="21"/></decl_stmt>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><operator pos:line="60" pos:column="9">*<pos:position pos:line="60" pos:column="10"/></operator><name pos:line="60" pos:column="10">f<pos:position pos:line="60" pos:column="11"/></name> <operator pos:line="60" pos:column="12">!=<pos:position pos:line="60" pos:column="14"/></operator> <literal type="char" pos:line="60" pos:column="15">'%'<pos:position pos:line="60" pos:column="18"/></literal></expr>)<pos:position pos:line="60" pos:column="19"/></condition><then pos:line="60" pos:column="19"> <block pos:line="60" pos:column="20">{
      <comment type="block" pos:line="61" pos:column="7">/* This isn't a format spec, so write everything out until the next one
         OR end of string is reached.  */</comment>
      <do pos:line="63" pos:column="7">do <block pos:line="63" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">OUTCHAR<pos:position pos:line="64" pos:column="16"/></name><argument_list pos:line="64" pos:column="16">(<argument><expr><operator pos:line="64" pos:column="17">*<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="18">f<pos:position pos:line="64" pos:column="19"/></name></expr></argument>)<pos:position pos:line="64" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="65" pos:column="8"/></block> while<condition pos:line="65" pos:column="14">(<expr><operator pos:line="65" pos:column="15">*<pos:position pos:line="65" pos:column="16"/></operator><operator pos:line="65" pos:column="16">++<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="18">f<pos:position pos:line="65" pos:column="19"/></name> <operator pos:line="65" pos:column="20">&amp;&amp;<pos:position pos:line="65" pos:column="30"/></operator> <operator pos:line="65" pos:column="23">(<pos:position pos:line="65" pos:column="24"/></operator><literal type="char" pos:line="65" pos:column="24">'%'<pos:position pos:line="65" pos:column="27"/></literal> <operator pos:line="65" pos:column="28">!=<pos:position pos:line="65" pos:column="30"/></operator> <operator pos:line="65" pos:column="31">*<pos:position pos:line="65" pos:column="32"/></operator><name pos:line="65" pos:column="32">f<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">)<pos:position pos:line="65" pos:column="34"/></operator></expr>)<pos:position pos:line="65" pos:column="35"/></condition>;<pos:position pos:line="65" pos:column="36"/></do>
      <continue pos:line="66" pos:column="7">continue;<pos:position pos:line="66" pos:column="16"/></continue>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="69" pos:column="5">++<pos:position pos:line="69" pos:column="7"/></operator><name pos:line="69" pos:column="7">f<pos:position pos:line="69" pos:column="8"/></name></expr>;<pos:position pos:line="69" pos:column="9"/></expr_stmt>

    <comment type="block" pos:line="71" pos:column="5">/* Check for "%%".  Note that although the ANSI standard lists
       '%' as a conversion specifier, it says "The complete format
       specification shall be `%%'," so we can avoid all the width
       and precision processing.  */</comment>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><operator pos:line="75" pos:column="9">*<pos:position pos:line="75" pos:column="10"/></operator><name pos:line="75" pos:column="10">f<pos:position pos:line="75" pos:column="11"/></name> <operator pos:line="75" pos:column="12">==<pos:position pos:line="75" pos:column="14"/></operator> <literal type="char" pos:line="75" pos:column="15">'%'<pos:position pos:line="75" pos:column="18"/></literal></expr>)<pos:position pos:line="75" pos:column="19"/></condition><then pos:line="75" pos:column="19"> <block pos:line="75" pos:column="20">{
      <expr_stmt><expr><operator pos:line="76" pos:column="7">++<pos:position pos:line="76" pos:column="9"/></operator><name pos:line="76" pos:column="9">f<pos:position pos:line="76" pos:column="10"/></name></expr>;<pos:position pos:line="76" pos:column="11"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">OUTCHAR<pos:position pos:line="77" pos:column="14"/></name><argument_list pos:line="77" pos:column="14">(<argument><expr><literal type="char" pos:line="77" pos:column="15">'%'<pos:position pos:line="77" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="20"/></expr_stmt>
      <continue pos:line="78" pos:column="7">continue;<pos:position pos:line="78" pos:column="16"/></continue>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="81" pos:column="5">/* If this is a positional parameter, the position must follow imediately
       after the %, thus create a %&lt;num&gt;$ sequence */</comment>
    <expr_stmt><expr><name pos:line="83" pos:column="5">param<pos:position pos:line="83" pos:column="10"/></name><operator pos:line="83" pos:column="10">=<pos:position pos:line="83" pos:column="11"/></operator><call><name pos:line="83" pos:column="11">dprintf_DollarString<pos:position pos:line="83" pos:column="31"/></name><argument_list pos:line="83" pos:column="31">(<argument><expr><name pos:line="83" pos:column="32">f<pos:position pos:line="83" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="35">&amp;<pos:position pos:line="83" pos:column="40"/></operator><name pos:line="83" pos:column="36">f<pos:position pos:line="83" pos:column="37"/></name></expr></argument>)<pos:position pos:line="83" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="39"/></expr_stmt>

    <if pos:line="85" pos:column="5">if<condition pos:line="85" pos:column="7">(<expr><operator pos:line="85" pos:column="8">!<pos:position pos:line="85" pos:column="9"/></operator><name pos:line="85" pos:column="9">param<pos:position pos:line="85" pos:column="14"/></name></expr>)<pos:position pos:line="85" pos:column="15"/></condition><then pos:line="85" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="7">param<pos:position pos:line="86" pos:column="12"/></name> <operator pos:line="86" pos:column="13">=<pos:position pos:line="86" pos:column="14"/></operator> <name pos:line="86" pos:column="15">param_num<pos:position pos:line="86" pos:column="24"/></name></expr>;<pos:position pos:line="86" pos:column="25"/></expr_stmt></block></then>
    <else pos:line="87" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="88" pos:column="7">--<pos:position pos:line="88" pos:column="9"/></operator><name pos:line="88" pos:column="9">param<pos:position pos:line="88" pos:column="14"/></name></expr>;<pos:position pos:line="88" pos:column="15"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="90" pos:column="5">param_num<pos:position pos:line="90" pos:column="14"/></name><operator pos:line="90" pos:column="14">++<pos:position pos:line="90" pos:column="16"/></operator></expr>;<pos:position pos:line="90" pos:column="17"/></expr_stmt> <comment type="block" pos:line="90" pos:column="18">/* increase this always to allow "%2$s %1$s %s" and then the
                    third %s will pick the 3rd argument */</comment>

    <expr_stmt><expr><name pos:line="93" pos:column="5">p<pos:position pos:line="93" pos:column="6"/></name> <operator pos:line="93" pos:column="7">=<pos:position pos:line="93" pos:column="8"/></operator> <operator pos:line="93" pos:column="9">&amp;<pos:position pos:line="93" pos:column="14"/></operator><name><name pos:line="93" pos:column="10">vto<pos:position pos:line="93" pos:column="13"/></name><index pos:line="93" pos:column="13">[<expr><name pos:line="93" pos:column="14">param<pos:position pos:line="93" pos:column="19"/></name></expr>]<pos:position pos:line="93" pos:column="20"/></index></name></expr>;<pos:position pos:line="93" pos:column="21"/></expr_stmt>

    <comment type="block" pos:line="95" pos:column="5">/* pick up the specified width */</comment>
    <if pos:line="96" pos:column="5">if<condition pos:line="96" pos:column="7">(<expr><name><name pos:line="96" pos:column="8">p<pos:position pos:line="96" pos:column="9"/></name><operator pos:line="96" pos:column="9">-&gt;<pos:position pos:line="96" pos:column="14"/></operator><name pos:line="96" pos:column="11">flags<pos:position pos:line="96" pos:column="16"/></name></name> <operator pos:line="96" pos:column="17">&amp;<pos:position pos:line="96" pos:column="22"/></operator> <name pos:line="96" pos:column="19">FLAGS_WIDTHPARAM<pos:position pos:line="96" pos:column="35"/></name></expr>)<pos:position pos:line="96" pos:column="36"/></condition><then pos:line="96" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="7">width<pos:position pos:line="97" pos:column="12"/></name> <operator pos:line="97" pos:column="13">=<pos:position pos:line="97" pos:column="14"/></operator> <name><name pos:line="97" pos:column="15">vto<pos:position pos:line="97" pos:column="18"/></name><index pos:line="97" pos:column="18">[<expr><name><name pos:line="97" pos:column="19">p<pos:position pos:line="97" pos:column="20"/></name><operator pos:line="97" pos:column="20">-&gt;<pos:position pos:line="97" pos:column="25"/></operator><name pos:line="97" pos:column="22">width<pos:position pos:line="97" pos:column="27"/></name></name></expr>]<pos:position pos:line="97" pos:column="28"/></index></name><operator pos:line="97" pos:column="28">.<pos:position pos:line="97" pos:column="29"/></operator><name><name pos:line="97" pos:column="29">data<pos:position pos:line="97" pos:column="33"/></name><operator pos:line="97" pos:column="33">.<pos:position pos:line="97" pos:column="34"/></operator><name pos:line="97" pos:column="34">num<pos:position pos:line="97" pos:column="37"/></name></name></expr>;<pos:position pos:line="97" pos:column="38"/></expr_stmt></block></then>
    <else pos:line="98" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="7">width<pos:position pos:line="99" pos:column="12"/></name> <operator pos:line="99" pos:column="13">=<pos:position pos:line="99" pos:column="14"/></operator> <name><name pos:line="99" pos:column="15">p<pos:position pos:line="99" pos:column="16"/></name><operator pos:line="99" pos:column="16">-&gt;<pos:position pos:line="99" pos:column="21"/></operator><name pos:line="99" pos:column="18">width<pos:position pos:line="99" pos:column="23"/></name></name></expr>;<pos:position pos:line="99" pos:column="24"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="101" pos:column="5">/* pick up the specified precision */</comment>
    <if pos:line="102" pos:column="5">if<condition pos:line="102" pos:column="7">(<expr><name><name pos:line="102" pos:column="8">p<pos:position pos:line="102" pos:column="9"/></name><operator pos:line="102" pos:column="9">-&gt;<pos:position pos:line="102" pos:column="14"/></operator><name pos:line="102" pos:column="11">flags<pos:position pos:line="102" pos:column="16"/></name></name> <operator pos:line="102" pos:column="17">&amp;<pos:position pos:line="102" pos:column="22"/></operator> <name pos:line="102" pos:column="19">FLAGS_PRECPARAM<pos:position pos:line="102" pos:column="34"/></name></expr>)<pos:position pos:line="102" pos:column="35"/></condition><then pos:line="102" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><name pos:line="103" pos:column="7">prec<pos:position pos:line="103" pos:column="11"/></name> <operator pos:line="103" pos:column="12">=<pos:position pos:line="103" pos:column="13"/></operator> <name><name pos:line="103" pos:column="14">vto<pos:position pos:line="103" pos:column="17"/></name><index pos:line="103" pos:column="17">[<expr><name><name pos:line="103" pos:column="18">p<pos:position pos:line="103" pos:column="19"/></name><operator pos:line="103" pos:column="19">-&gt;<pos:position pos:line="103" pos:column="24"/></operator><name pos:line="103" pos:column="21">precision<pos:position pos:line="103" pos:column="30"/></name></name></expr>]<pos:position pos:line="103" pos:column="31"/></index></name><operator pos:line="103" pos:column="31">.<pos:position pos:line="103" pos:column="32"/></operator><name><name pos:line="103" pos:column="32">data<pos:position pos:line="103" pos:column="36"/></name><operator pos:line="103" pos:column="36">.<pos:position pos:line="103" pos:column="37"/></operator><name pos:line="103" pos:column="37">num<pos:position pos:line="103" pos:column="40"/></name></name></expr>;<pos:position pos:line="103" pos:column="41"/></expr_stmt></block></then>
    <elseif pos:line="104" pos:column="5">else <if pos:line="104" pos:column="10">if<condition pos:line="104" pos:column="12">(<expr><name><name pos:line="104" pos:column="13">p<pos:position pos:line="104" pos:column="14"/></name><operator pos:line="104" pos:column="14">-&gt;<pos:position pos:line="104" pos:column="19"/></operator><name pos:line="104" pos:column="16">flags<pos:position pos:line="104" pos:column="21"/></name></name> <operator pos:line="104" pos:column="22">&amp;<pos:position pos:line="104" pos:column="27"/></operator> <name pos:line="104" pos:column="24">FLAGS_PREC<pos:position pos:line="104" pos:column="34"/></name></expr>)<pos:position pos:line="104" pos:column="35"/></condition><then pos:line="104" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><name pos:line="105" pos:column="7">prec<pos:position pos:line="105" pos:column="11"/></name> <operator pos:line="105" pos:column="12">=<pos:position pos:line="105" pos:column="13"/></operator> <name><name pos:line="105" pos:column="14">p<pos:position pos:line="105" pos:column="15"/></name><operator pos:line="105" pos:column="15">-&gt;<pos:position pos:line="105" pos:column="20"/></operator><name pos:line="105" pos:column="17">precision<pos:position pos:line="105" pos:column="26"/></name></name></expr>;<pos:position pos:line="105" pos:column="27"/></expr_stmt></block></then></if></elseif>
    <else pos:line="106" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="107" pos:column="7">prec<pos:position pos:line="107" pos:column="11"/></name> <operator pos:line="107" pos:column="12">=<pos:position pos:line="107" pos:column="13"/></operator> <operator pos:line="107" pos:column="14">-<pos:position pos:line="107" pos:column="15"/></operator><literal type="number" pos:line="107" pos:column="15">1<pos:position pos:line="107" pos:column="16"/></literal></expr>;<pos:position pos:line="107" pos:column="17"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="109" pos:column="5">alt<pos:position pos:line="109" pos:column="8"/></name> <operator pos:line="109" pos:column="9">=<pos:position pos:line="109" pos:column="10"/></operator> <ternary><condition><expr><operator pos:line="109" pos:column="11">(<pos:position pos:line="109" pos:column="12"/></operator><name><name pos:line="109" pos:column="12">p<pos:position pos:line="109" pos:column="13"/></name><operator pos:line="109" pos:column="13">-&gt;<pos:position pos:line="109" pos:column="18"/></operator><name pos:line="109" pos:column="15">flags<pos:position pos:line="109" pos:column="20"/></name></name> <operator pos:line="109" pos:column="21">&amp;<pos:position pos:line="109" pos:column="26"/></operator> <name pos:line="109" pos:column="23">FLAGS_ALT<pos:position pos:line="109" pos:column="32"/></name><operator pos:line="109" pos:column="32">)<pos:position pos:line="109" pos:column="33"/></operator></expr>?<pos:position pos:line="109" pos:column="34"/></condition><then><expr><name pos:line="109" pos:column="34">TRUE<pos:position pos:line="109" pos:column="38"/></name></expr></then><else pos:line="109" pos:column="38">:<expr><name pos:line="109" pos:column="39">FALSE<pos:position pos:line="109" pos:column="44"/></name></expr></else></ternary></expr>;<pos:position pos:line="109" pos:column="45"/></expr_stmt>

    <switch pos:line="111" pos:column="5">switch <condition pos:line="111" pos:column="12">(<expr><name><name pos:line="111" pos:column="13">p<pos:position pos:line="111" pos:column="14"/></name><operator pos:line="111" pos:column="14">-&gt;<pos:position pos:line="111" pos:column="19"/></operator><name pos:line="111" pos:column="16">type<pos:position pos:line="111" pos:column="20"/></name></name></expr>)<pos:position pos:line="111" pos:column="21"/></condition> <block pos:line="111" pos:column="22">{
    <case pos:line="112" pos:column="5">case <expr><name pos:line="112" pos:column="10">FORMAT_INT<pos:position pos:line="112" pos:column="20"/></name></expr>:<pos:position pos:line="112" pos:column="21"/></case>
      <expr_stmt><expr><name pos:line="113" pos:column="7">num<pos:position pos:line="113" pos:column="10"/></name> <operator pos:line="113" pos:column="11">=<pos:position pos:line="113" pos:column="12"/></operator> <name><name pos:line="113" pos:column="13">p<pos:position pos:line="113" pos:column="14"/></name><operator pos:line="113" pos:column="14">-&gt;<pos:position pos:line="113" pos:column="19"/></operator><name pos:line="113" pos:column="16">data<pos:position pos:line="113" pos:column="20"/></name><operator pos:line="113" pos:column="20">.<pos:position pos:line="113" pos:column="21"/></operator><name pos:line="113" pos:column="21">num<pos:position pos:line="113" pos:column="24"/></name></name></expr>;<pos:position pos:line="113" pos:column="25"/></expr_stmt>
      <if pos:line="114" pos:column="7">if<condition pos:line="114" pos:column="9">(<expr><name><name pos:line="114" pos:column="10">p<pos:position pos:line="114" pos:column="11"/></name><operator pos:line="114" pos:column="11">-&gt;<pos:position pos:line="114" pos:column="16"/></operator><name pos:line="114" pos:column="13">flags<pos:position pos:line="114" pos:column="18"/></name></name> <operator pos:line="114" pos:column="19">&amp;<pos:position pos:line="114" pos:column="24"/></operator> <name pos:line="114" pos:column="21">FLAGS_CHAR<pos:position pos:line="114" pos:column="31"/></name></expr>)<pos:position pos:line="114" pos:column="32"/></condition><then pos:line="114" pos:column="32"> <block pos:line="114" pos:column="33">{
        <comment type="block" pos:line="115" pos:column="9">/* Character.  */</comment>
        <if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><operator pos:line="116" pos:column="13">!<pos:position pos:line="116" pos:column="14"/></operator><operator pos:line="116" pos:column="14">(<pos:position pos:line="116" pos:column="15"/></operator><name><name pos:line="116" pos:column="15">p<pos:position pos:line="116" pos:column="16"/></name><operator pos:line="116" pos:column="16">-&gt;<pos:position pos:line="116" pos:column="21"/></operator><name pos:line="116" pos:column="18">flags<pos:position pos:line="116" pos:column="23"/></name></name> <operator pos:line="116" pos:column="24">&amp;<pos:position pos:line="116" pos:column="29"/></operator> <name pos:line="116" pos:column="26">FLAGS_LEFT<pos:position pos:line="116" pos:column="36"/></name><operator pos:line="116" pos:column="36">)<pos:position pos:line="116" pos:column="37"/></operator></expr>)<pos:position pos:line="116" pos:column="38"/></condition><then pos:line="116" pos:column="38">
          <block type="pseudo"><while pos:line="117" pos:column="11">while <condition pos:line="117" pos:column="17">(<expr><operator pos:line="117" pos:column="18">--<pos:position pos:line="117" pos:column="20"/></operator><name pos:line="117" pos:column="20">width<pos:position pos:line="117" pos:column="25"/></name> <operator pos:line="117" pos:column="26">&gt;<pos:position pos:line="117" pos:column="30"/></operator> <literal type="number" pos:line="117" pos:column="28">0<pos:position pos:line="117" pos:column="29"/></literal></expr>)<pos:position pos:line="117" pos:column="30"/></condition>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="118" pos:column="13">OUTCHAR<pos:position pos:line="118" pos:column="20"/></name><argument_list pos:line="118" pos:column="20">(<argument><expr><literal type="char" pos:line="118" pos:column="21">' '<pos:position pos:line="118" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="26"/></expr_stmt></block></while></block></then></if>
        <expr_stmt><expr><call><name pos:line="119" pos:column="9">OUTCHAR<pos:position pos:line="119" pos:column="16"/></name><argument_list pos:line="119" pos:column="16">(<argument><expr><operator pos:line="119" pos:column="17">(<pos:position pos:line="119" pos:column="18"/></operator><name pos:line="119" pos:column="18">char<pos:position pos:line="119" pos:column="22"/></name><operator pos:line="119" pos:column="22">)<pos:position pos:line="119" pos:column="23"/></operator> <name pos:line="119" pos:column="24">num<pos:position pos:line="119" pos:column="27"/></name></expr></argument>)<pos:position pos:line="119" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="29"/></expr_stmt>
        <if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><name><name pos:line="120" pos:column="13">p<pos:position pos:line="120" pos:column="14"/></name><operator pos:line="120" pos:column="14">-&gt;<pos:position pos:line="120" pos:column="19"/></operator><name pos:line="120" pos:column="16">flags<pos:position pos:line="120" pos:column="21"/></name></name> <operator pos:line="120" pos:column="22">&amp;<pos:position pos:line="120" pos:column="27"/></operator> <name pos:line="120" pos:column="24">FLAGS_LEFT<pos:position pos:line="120" pos:column="34"/></name></expr>)<pos:position pos:line="120" pos:column="35"/></condition><then pos:line="120" pos:column="35">
          <block type="pseudo"><while pos:line="121" pos:column="11">while <condition pos:line="121" pos:column="17">(<expr><operator pos:line="121" pos:column="18">--<pos:position pos:line="121" pos:column="20"/></operator><name pos:line="121" pos:column="20">width<pos:position pos:line="121" pos:column="25"/></name> <operator pos:line="121" pos:column="26">&gt;<pos:position pos:line="121" pos:column="30"/></operator> <literal type="number" pos:line="121" pos:column="28">0<pos:position pos:line="121" pos:column="29"/></literal></expr>)<pos:position pos:line="121" pos:column="30"/></condition>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="122" pos:column="13">OUTCHAR<pos:position pos:line="122" pos:column="20"/></name><argument_list pos:line="122" pos:column="20">(<argument><expr><literal type="char" pos:line="122" pos:column="21">' '<pos:position pos:line="122" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="26"/></expr_stmt></block></while></block></then></if>
        <break pos:line="123" pos:column="9">break;<pos:position pos:line="123" pos:column="15"/></break>
      }<pos:position pos:line="124" pos:column="8"/></block></then></if>
      <if pos:line="125" pos:column="7">if<condition pos:line="125" pos:column="9">(<expr><name><name pos:line="125" pos:column="10">p<pos:position pos:line="125" pos:column="11"/></name><operator pos:line="125" pos:column="11">-&gt;<pos:position pos:line="125" pos:column="16"/></operator><name pos:line="125" pos:column="13">flags<pos:position pos:line="125" pos:column="18"/></name></name> <operator pos:line="125" pos:column="19">&amp;<pos:position pos:line="125" pos:column="24"/></operator> <name pos:line="125" pos:column="21">FLAGS_UNSIGNED<pos:position pos:line="125" pos:column="35"/></name></expr>)<pos:position pos:line="125" pos:column="36"/></condition><then pos:line="125" pos:column="36"> <block pos:line="125" pos:column="37">{
        <comment type="block" pos:line="126" pos:column="9">/* Decimal unsigned integer.  */</comment>
        <expr_stmt><expr><name pos:line="127" pos:column="9">base<pos:position pos:line="127" pos:column="13"/></name> <operator pos:line="127" pos:column="14">=<pos:position pos:line="127" pos:column="15"/></operator> <literal type="number" pos:line="127" pos:column="16">10<pos:position pos:line="127" pos:column="18"/></literal></expr>;<pos:position pos:line="127" pos:column="19"/></expr_stmt>
        <goto pos:line="128" pos:column="9">goto <name pos:line="128" pos:column="14">unsigned_number<pos:position pos:line="128" pos:column="29"/></name>;<pos:position pos:line="128" pos:column="30"/></goto>
      }<pos:position pos:line="129" pos:column="8"/></block></then></if>
      <if pos:line="130" pos:column="7">if<condition pos:line="130" pos:column="9">(<expr><name><name pos:line="130" pos:column="10">p<pos:position pos:line="130" pos:column="11"/></name><operator pos:line="130" pos:column="11">-&gt;<pos:position pos:line="130" pos:column="16"/></operator><name pos:line="130" pos:column="13">flags<pos:position pos:line="130" pos:column="18"/></name></name> <operator pos:line="130" pos:column="19">&amp;<pos:position pos:line="130" pos:column="24"/></operator> <name pos:line="130" pos:column="21">FLAGS_OCTAL<pos:position pos:line="130" pos:column="32"/></name></expr>)<pos:position pos:line="130" pos:column="33"/></condition><then pos:line="130" pos:column="33"> <block pos:line="130" pos:column="34">{
        <comment type="block" pos:line="131" pos:column="9">/* Octal unsigned integer.  */</comment>
        <expr_stmt><expr><name pos:line="132" pos:column="9">base<pos:position pos:line="132" pos:column="13"/></name> <operator pos:line="132" pos:column="14">=<pos:position pos:line="132" pos:column="15"/></operator> <literal type="number" pos:line="132" pos:column="16">8<pos:position pos:line="132" pos:column="17"/></literal></expr>;<pos:position pos:line="132" pos:column="18"/></expr_stmt>
        <goto pos:line="133" pos:column="9">goto <name pos:line="133" pos:column="14">unsigned_number<pos:position pos:line="133" pos:column="29"/></name>;<pos:position pos:line="133" pos:column="30"/></goto>
      }<pos:position pos:line="134" pos:column="8"/></block></then></if>
      <if pos:line="135" pos:column="7">if<condition pos:line="135" pos:column="9">(<expr><name><name pos:line="135" pos:column="10">p<pos:position pos:line="135" pos:column="11"/></name><operator pos:line="135" pos:column="11">-&gt;<pos:position pos:line="135" pos:column="16"/></operator><name pos:line="135" pos:column="13">flags<pos:position pos:line="135" pos:column="18"/></name></name> <operator pos:line="135" pos:column="19">&amp;<pos:position pos:line="135" pos:column="24"/></operator> <name pos:line="135" pos:column="21">FLAGS_HEX<pos:position pos:line="135" pos:column="30"/></name></expr>)<pos:position pos:line="135" pos:column="31"/></condition><then pos:line="135" pos:column="31"> <block pos:line="135" pos:column="32">{
        <comment type="block" pos:line="136" pos:column="9">/* Hexadecimal unsigned integer.  */</comment>

        <expr_stmt><expr><name pos:line="138" pos:column="9">digits<pos:position pos:line="138" pos:column="15"/></name> <operator pos:line="138" pos:column="16">=<pos:position pos:line="138" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="138" pos:column="18">(<pos:position pos:line="138" pos:column="19"/></operator><name><name pos:line="138" pos:column="19">p<pos:position pos:line="138" pos:column="20"/></name><operator pos:line="138" pos:column="20">-&gt;<pos:position pos:line="138" pos:column="25"/></operator><name pos:line="138" pos:column="22">flags<pos:position pos:line="138" pos:column="27"/></name></name> <operator pos:line="138" pos:column="28">&amp;<pos:position pos:line="138" pos:column="33"/></operator> <name pos:line="138" pos:column="30">FLAGS_UPPER<pos:position pos:line="138" pos:column="41"/></name><operator pos:line="138" pos:column="41">)<pos:position pos:line="138" pos:column="42"/></operator></expr>?<pos:position pos:line="138" pos:column="43"/></condition><then pos:line="138" pos:column="43"> <expr><name pos:line="138" pos:column="44">upper_digits<pos:position pos:line="138" pos:column="56"/></name></expr> <pos:position pos:line="138" pos:column="57"/></then><else pos:line="138" pos:column="57">: <expr><name pos:line="138" pos:column="59">lower_digits<pos:position pos:line="138" pos:column="71"/></name></expr></else></ternary></expr>;<pos:position pos:line="138" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name pos:line="139" pos:column="9">base<pos:position pos:line="139" pos:column="13"/></name> <operator pos:line="139" pos:column="14">=<pos:position pos:line="139" pos:column="15"/></operator> <literal type="number" pos:line="139" pos:column="16">16<pos:position pos:line="139" pos:column="18"/></literal></expr>;<pos:position pos:line="139" pos:column="19"/></expr_stmt>
        <goto pos:line="140" pos:column="9">goto <name pos:line="140" pos:column="14">unsigned_number<pos:position pos:line="140" pos:column="29"/></name>;<pos:position pos:line="140" pos:column="30"/></goto>
      }<pos:position pos:line="141" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="143" pos:column="7">/* Decimal integer.  */</comment>
      <expr_stmt><expr><name pos:line="144" pos:column="7">base<pos:position pos:line="144" pos:column="11"/></name> <operator pos:line="144" pos:column="12">=<pos:position pos:line="144" pos:column="13"/></operator> <literal type="number" pos:line="144" pos:column="14">10<pos:position pos:line="144" pos:column="16"/></literal></expr>;<pos:position pos:line="144" pos:column="17"/></expr_stmt>

<cpp:ifdef pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">ifdef<pos:position pos:line="146" pos:column="7"/></cpp:directive> <name pos:line="146" pos:column="8">ENABLE_64BIT<pos:position pos:line="146" pos:column="20"/></name></cpp:ifdef>
      <if pos:line="147" pos:column="7">if<condition pos:line="147" pos:column="9">(<expr><name><name pos:line="147" pos:column="10">p<pos:position pos:line="147" pos:column="11"/></name><operator pos:line="147" pos:column="11">-&gt;<pos:position pos:line="147" pos:column="16"/></operator><name pos:line="147" pos:column="13">flags<pos:position pos:line="147" pos:column="18"/></name></name> <operator pos:line="147" pos:column="19">&amp;<pos:position pos:line="147" pos:column="24"/></operator> <name pos:line="147" pos:column="21">FLAGS_LONGLONG<pos:position pos:line="147" pos:column="35"/></name></expr>)<pos:position pos:line="147" pos:column="36"/></condition><then pos:line="147" pos:column="36"> <block pos:line="147" pos:column="37">{
        <comment type="block" pos:line="148" pos:column="9">/* long long */</comment>
        <expr_stmt><expr><name pos:line="149" pos:column="9">is_neg<pos:position pos:line="149" pos:column="15"/></name> <operator pos:line="149" pos:column="16">=<pos:position pos:line="149" pos:column="17"/></operator> <name><name pos:line="149" pos:column="18">p<pos:position pos:line="149" pos:column="19"/></name><operator pos:line="149" pos:column="19">-&gt;<pos:position pos:line="149" pos:column="24"/></operator><name pos:line="149" pos:column="21">data<pos:position pos:line="149" pos:column="25"/></name><operator pos:line="149" pos:column="25">.<pos:position pos:line="149" pos:column="26"/></operator><name pos:line="149" pos:column="26">lnum<pos:position pos:line="149" pos:column="30"/></name></name> <operator pos:line="149" pos:column="31">&lt;<pos:position pos:line="149" pos:column="35"/></operator> <literal type="number" pos:line="149" pos:column="33">0<pos:position pos:line="149" pos:column="34"/></literal></expr>;<pos:position pos:line="149" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="150" pos:column="9">num<pos:position pos:line="150" pos:column="12"/></name> <operator pos:line="150" pos:column="13">=<pos:position pos:line="150" pos:column="14"/></operator> <ternary><condition><expr><name pos:line="150" pos:column="15">is_neg<pos:position pos:line="150" pos:column="21"/></name></expr> ?<pos:position pos:line="150" pos:column="23"/></condition><then pos:line="150" pos:column="23"> <expr><operator pos:line="150" pos:column="24">(<pos:position pos:line="150" pos:column="25"/></operator><operator pos:line="150" pos:column="25">-<pos:position pos:line="150" pos:column="26"/></operator> <name><name pos:line="150" pos:column="27">p<pos:position pos:line="150" pos:column="28"/></name><operator pos:line="150" pos:column="28">-&gt;<pos:position pos:line="150" pos:column="33"/></operator><name pos:line="150" pos:column="30">data<pos:position pos:line="150" pos:column="34"/></name><operator pos:line="150" pos:column="34">.<pos:position pos:line="150" pos:column="35"/></operator><name pos:line="150" pos:column="35">lnum<pos:position pos:line="150" pos:column="39"/></name></name><operator pos:line="150" pos:column="39">)<pos:position pos:line="150" pos:column="40"/></operator></expr> <pos:position pos:line="150" pos:column="41"/></then><else pos:line="150" pos:column="41">: <expr><name><name pos:line="150" pos:column="43">p<pos:position pos:line="150" pos:column="44"/></name><operator pos:line="150" pos:column="44">-&gt;<pos:position pos:line="150" pos:column="49"/></operator><name pos:line="150" pos:column="46">data<pos:position pos:line="150" pos:column="50"/></name><operator pos:line="150" pos:column="50">.<pos:position pos:line="150" pos:column="51"/></operator><name pos:line="150" pos:column="51">lnum<pos:position pos:line="150" pos:column="55"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="150" pos:column="56"/></expr_stmt>
      }<pos:position pos:line="151" pos:column="8"/></block></then>
      <else pos:line="152" pos:column="7">else
<cpp:endif pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">endif<pos:position pos:line="153" pos:column="7"/></cpp:directive></cpp:endif>
      <block pos:line="154" pos:column="7">{
        <expr_stmt><expr><name pos:line="155" pos:column="9">signed_num<pos:position pos:line="155" pos:column="19"/></name> <operator pos:line="155" pos:column="20">=<pos:position pos:line="155" pos:column="21"/></operator> <operator pos:line="155" pos:column="22">(<pos:position pos:line="155" pos:column="23"/></operator><name pos:line="155" pos:column="23">long<pos:position pos:line="155" pos:column="27"/></name><operator pos:line="155" pos:column="27">)<pos:position pos:line="155" pos:column="28"/></operator> <name pos:line="155" pos:column="29">num<pos:position pos:line="155" pos:column="32"/></name></expr>;<pos:position pos:line="155" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="156" pos:column="9">is_neg<pos:position pos:line="156" pos:column="15"/></name> <operator pos:line="156" pos:column="16">=<pos:position pos:line="156" pos:column="17"/></operator> <name pos:line="156" pos:column="18">signed_num<pos:position pos:line="156" pos:column="28"/></name> <operator pos:line="156" pos:column="29">&lt;<pos:position pos:line="156" pos:column="33"/></operator> <literal type="number" pos:line="156" pos:column="31">0<pos:position pos:line="156" pos:column="32"/></literal></expr>;<pos:position pos:line="156" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="157" pos:column="9">num<pos:position pos:line="157" pos:column="12"/></name> <operator pos:line="157" pos:column="13">=<pos:position pos:line="157" pos:column="14"/></operator> <ternary><condition><expr><name pos:line="157" pos:column="15">is_neg<pos:position pos:line="157" pos:column="21"/></name></expr> ?<pos:position pos:line="157" pos:column="23"/></condition><then pos:line="157" pos:column="23"> <expr><operator pos:line="157" pos:column="24">(<pos:position pos:line="157" pos:column="25"/></operator><operator pos:line="157" pos:column="25">-<pos:position pos:line="157" pos:column="26"/></operator> <name pos:line="157" pos:column="27">signed_num<pos:position pos:line="157" pos:column="37"/></name><operator pos:line="157" pos:column="37">)<pos:position pos:line="157" pos:column="38"/></operator></expr> <pos:position pos:line="157" pos:column="39"/></then><else pos:line="157" pos:column="39">: <expr><name pos:line="157" pos:column="41">signed_num<pos:position pos:line="157" pos:column="51"/></name></expr></else></ternary></expr>;<pos:position pos:line="157" pos:column="52"/></expr_stmt>
      }<pos:position pos:line="158" pos:column="8"/></block></else></if>
      <goto pos:line="159" pos:column="7">goto <name pos:line="159" pos:column="12">number<pos:position pos:line="159" pos:column="18"/></name>;<pos:position pos:line="159" pos:column="19"/></goto>

      <label><name pos:line="161" pos:column="7">unsigned_number<pos:position pos:line="161" pos:column="22"/></name>:<pos:position pos:line="161" pos:column="23"/></label>
      <comment type="block" pos:line="162" pos:column="7">/* Unsigned number of base BASE.  */</comment>
      <expr_stmt><expr><name pos:line="163" pos:column="7">is_neg<pos:position pos:line="163" pos:column="13"/></name> <operator pos:line="163" pos:column="14">=<pos:position pos:line="163" pos:column="15"/></operator> <literal type="number" pos:line="163" pos:column="16">0<pos:position pos:line="163" pos:column="17"/></literal></expr>;<pos:position pos:line="163" pos:column="18"/></expr_stmt>

      <label><name pos:line="165" pos:column="7">number<pos:position pos:line="165" pos:column="13"/></name>:<pos:position pos:line="165" pos:column="14"/></label>
      <comment type="block" pos:line="166" pos:column="7">/* Number of base BASE.  */</comment>
      <block pos:line="167" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="168" pos:column="9">char<pos:position pos:line="168" pos:column="13"/></name> <modifier pos:line="168" pos:column="14">*<pos:position pos:line="168" pos:column="15"/></modifier></type><name pos:line="168" pos:column="15">workend<pos:position pos:line="168" pos:column="22"/></name> <init pos:line="168" pos:column="23">= <expr><operator pos:line="168" pos:column="25">&amp;<pos:position pos:line="168" pos:column="30"/></operator><name><name pos:line="168" pos:column="26">work<pos:position pos:line="168" pos:column="30"/></name><index pos:line="168" pos:column="30">[<expr><sizeof pos:line="168" pos:column="31">sizeof<argument_list pos:line="168" pos:column="37">(<argument><expr><name pos:line="168" pos:column="38">work<pos:position pos:line="168" pos:column="42"/></name></expr></argument>)<pos:position pos:line="168" pos:column="43"/></argument_list></sizeof> <operator pos:line="168" pos:column="44">-<pos:position pos:line="168" pos:column="45"/></operator> <literal type="number" pos:line="168" pos:column="46">1<pos:position pos:line="168" pos:column="47"/></literal></expr>]<pos:position pos:line="168" pos:column="48"/></index></name></expr></init></decl>;<pos:position pos:line="168" pos:column="49"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="169" pos:column="9">char<pos:position pos:line="169" pos:column="13"/></name> <modifier pos:line="169" pos:column="14">*<pos:position pos:line="169" pos:column="15"/></modifier></type><name pos:line="169" pos:column="15">w<pos:position pos:line="169" pos:column="16"/></name></decl>;<pos:position pos:line="169" pos:column="17"/></decl_stmt>

        <comment type="block" pos:line="171" pos:column="9">/* Supply a default precision if none was given.  */</comment>
        <if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><name pos:line="172" pos:column="13">prec<pos:position pos:line="172" pos:column="17"/></name> <operator pos:line="172" pos:column="18">==<pos:position pos:line="172" pos:column="20"/></operator> <operator pos:line="172" pos:column="21">-<pos:position pos:line="172" pos:column="22"/></operator><literal type="number" pos:line="172" pos:column="22">1<pos:position pos:line="172" pos:column="23"/></literal></expr>)<pos:position pos:line="172" pos:column="24"/></condition><then pos:line="172" pos:column="24">
          <block type="pseudo"><expr_stmt><expr><name pos:line="173" pos:column="11">prec<pos:position pos:line="173" pos:column="15"/></name> <operator pos:line="173" pos:column="16">=<pos:position pos:line="173" pos:column="17"/></operator> <literal type="number" pos:line="173" pos:column="18">1<pos:position pos:line="173" pos:column="19"/></literal></expr>;<pos:position pos:line="173" pos:column="20"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="175" pos:column="9">/* Put the number in WORK.  */</comment>
        <expr_stmt><expr><name pos:line="176" pos:column="9">w<pos:position pos:line="176" pos:column="10"/></name> <operator pos:line="176" pos:column="11">=<pos:position pos:line="176" pos:column="12"/></operator> <name pos:line="176" pos:column="13">workend<pos:position pos:line="176" pos:column="20"/></name></expr>;<pos:position pos:line="176" pos:column="21"/></expr_stmt>
        <while pos:line="177" pos:column="9">while <condition pos:line="177" pos:column="15">(<expr><name pos:line="177" pos:column="16">num<pos:position pos:line="177" pos:column="19"/></name> <operator pos:line="177" pos:column="20">&gt;<pos:position pos:line="177" pos:column="24"/></operator> <literal type="number" pos:line="177" pos:column="22">0<pos:position pos:line="177" pos:column="23"/></literal></expr>)<pos:position pos:line="177" pos:column="24"/></condition> <block pos:line="177" pos:column="25">{
          <expr_stmt><expr><operator pos:line="178" pos:column="11">*<pos:position pos:line="178" pos:column="12"/></operator><name pos:line="178" pos:column="12">w<pos:position pos:line="178" pos:column="13"/></name><operator pos:line="178" pos:column="13">--<pos:position pos:line="178" pos:column="15"/></operator> <operator pos:line="178" pos:column="16">=<pos:position pos:line="178" pos:column="17"/></operator> <name><name pos:line="178" pos:column="18">digits<pos:position pos:line="178" pos:column="24"/></name><index pos:line="178" pos:column="24">[<expr><name pos:line="178" pos:column="25">num<pos:position pos:line="178" pos:column="28"/></name> <operator pos:line="178" pos:column="29">%<pos:position pos:line="178" pos:column="30"/></operator> <name pos:line="178" pos:column="31">base<pos:position pos:line="178" pos:column="35"/></name></expr>]<pos:position pos:line="178" pos:column="36"/></index></name></expr>;<pos:position pos:line="178" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><name pos:line="179" pos:column="11">num<pos:position pos:line="179" pos:column="14"/></name> <operator pos:line="179" pos:column="15">/=<pos:position pos:line="179" pos:column="17"/></operator> <name pos:line="179" pos:column="18">base<pos:position pos:line="179" pos:column="22"/></name></expr>;<pos:position pos:line="179" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="180" pos:column="10"/></block></while>
        <expr_stmt><expr><name pos:line="181" pos:column="9">width<pos:position pos:line="181" pos:column="14"/></name> <operator pos:line="181" pos:column="15">-=<pos:position pos:line="181" pos:column="17"/></operator> <call pos:line="181" pos:column="18">(<name pos:line="181" pos:column="19">long<pos:position pos:line="181" pos:column="23"/></name>)<argument_list pos:line="181" pos:column="24">(<argument><expr><name pos:line="181" pos:column="25">workend<pos:position pos:line="181" pos:column="32"/></name> <operator pos:line="181" pos:column="33">-<pos:position pos:line="181" pos:column="34"/></operator> <name pos:line="181" pos:column="35">w<pos:position pos:line="181" pos:column="36"/></name></expr></argument>)<pos:position pos:line="181" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="182" pos:column="9">prec<pos:position pos:line="182" pos:column="13"/></name> <operator pos:line="182" pos:column="14">-=<pos:position pos:line="182" pos:column="16"/></operator> <call pos:line="182" pos:column="17">(<name pos:line="182" pos:column="18">long<pos:position pos:line="182" pos:column="22"/></name>)<argument_list pos:line="182" pos:column="23">(<argument><expr><name pos:line="182" pos:column="24">workend<pos:position pos:line="182" pos:column="31"/></name> <operator pos:line="182" pos:column="32">-<pos:position pos:line="182" pos:column="33"/></operator> <name pos:line="182" pos:column="34">w<pos:position pos:line="182" pos:column="35"/></name></expr></argument>)<pos:position pos:line="182" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="37"/></expr_stmt>

        <if pos:line="184" pos:column="9">if <condition pos:line="184" pos:column="12">(<expr><name pos:line="184" pos:column="13">alt<pos:position pos:line="184" pos:column="16"/></name> <operator pos:line="184" pos:column="17">&amp;&amp;<pos:position pos:line="184" pos:column="27"/></operator> <name pos:line="184" pos:column="20">base<pos:position pos:line="184" pos:column="24"/></name> <operator pos:line="184" pos:column="25">==<pos:position pos:line="184" pos:column="27"/></operator> <literal type="number" pos:line="184" pos:column="28">8<pos:position pos:line="184" pos:column="29"/></literal> <operator pos:line="184" pos:column="30">&amp;&amp;<pos:position pos:line="184" pos:column="40"/></operator> <name pos:line="184" pos:column="33">prec<pos:position pos:line="184" pos:column="37"/></name> <operator pos:line="184" pos:column="38">&lt;=<pos:position pos:line="184" pos:column="43"/></operator> <literal type="number" pos:line="184" pos:column="41">0<pos:position pos:line="184" pos:column="42"/></literal></expr>)<pos:position pos:line="184" pos:column="43"/></condition><then pos:line="184" pos:column="43"> <block pos:line="184" pos:column="44">{
          <expr_stmt><expr><operator pos:line="185" pos:column="11">*<pos:position pos:line="185" pos:column="12"/></operator><name pos:line="185" pos:column="12">w<pos:position pos:line="185" pos:column="13"/></name><operator pos:line="185" pos:column="13">--<pos:position pos:line="185" pos:column="15"/></operator> <operator pos:line="185" pos:column="16">=<pos:position pos:line="185" pos:column="17"/></operator> <literal type="char" pos:line="185" pos:column="18">'0'<pos:position pos:line="185" pos:column="21"/></literal></expr>;<pos:position pos:line="185" pos:column="22"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="186" pos:column="11">--<pos:position pos:line="186" pos:column="13"/></operator><name pos:line="186" pos:column="13">width<pos:position pos:line="186" pos:column="18"/></name></expr>;<pos:position pos:line="186" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="187" pos:column="10"/></block></then></if>

        <if pos:line="189" pos:column="9">if <condition pos:line="189" pos:column="12">(<expr><name pos:line="189" pos:column="13">prec<pos:position pos:line="189" pos:column="17"/></name> <operator pos:line="189" pos:column="18">&gt;<pos:position pos:line="189" pos:column="22"/></operator> <literal type="number" pos:line="189" pos:column="20">0<pos:position pos:line="189" pos:column="21"/></literal></expr>)<pos:position pos:line="189" pos:column="22"/></condition><then pos:line="189" pos:column="22"> <block pos:line="189" pos:column="23">{
          <expr_stmt><expr><name pos:line="190" pos:column="11">width<pos:position pos:line="190" pos:column="16"/></name> <operator pos:line="190" pos:column="17">-=<pos:position pos:line="190" pos:column="19"/></operator> <name pos:line="190" pos:column="20">prec<pos:position pos:line="190" pos:column="24"/></name></expr>;<pos:position pos:line="190" pos:column="25"/></expr_stmt>
          <while pos:line="191" pos:column="11">while <condition pos:line="191" pos:column="17">(<expr><name pos:line="191" pos:column="18">prec<pos:position pos:line="191" pos:column="22"/></name><operator pos:line="191" pos:column="22">--<pos:position pos:line="191" pos:column="24"/></operator> <operator pos:line="191" pos:column="25">&gt;<pos:position pos:line="191" pos:column="29"/></operator> <literal type="number" pos:line="191" pos:column="27">0<pos:position pos:line="191" pos:column="28"/></literal></expr>)<pos:position pos:line="191" pos:column="29"/></condition>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="192" pos:column="13">*<pos:position pos:line="192" pos:column="14"/></operator><name pos:line="192" pos:column="14">w<pos:position pos:line="192" pos:column="15"/></name><operator pos:line="192" pos:column="15">--<pos:position pos:line="192" pos:column="17"/></operator> <operator pos:line="192" pos:column="18">=<pos:position pos:line="192" pos:column="19"/></operator> <literal type="char" pos:line="192" pos:column="20">'0'<pos:position pos:line="192" pos:column="23"/></literal></expr>;<pos:position pos:line="192" pos:column="24"/></expr_stmt></block></while>
        }<pos:position pos:line="193" pos:column="10"/></block></then></if>

        <if pos:line="195" pos:column="9">if <condition pos:line="195" pos:column="12">(<expr><name pos:line="195" pos:column="13">alt<pos:position pos:line="195" pos:column="16"/></name> <operator pos:line="195" pos:column="17">&amp;&amp;<pos:position pos:line="195" pos:column="27"/></operator> <name pos:line="195" pos:column="20">base<pos:position pos:line="195" pos:column="24"/></name> <operator pos:line="195" pos:column="25">==<pos:position pos:line="195" pos:column="27"/></operator> <literal type="number" pos:line="195" pos:column="28">16<pos:position pos:line="195" pos:column="30"/></literal></expr>)<pos:position pos:line="195" pos:column="31"/></condition><then pos:line="195" pos:column="31">
          <block type="pseudo"><expr_stmt><expr><name pos:line="196" pos:column="11">width<pos:position pos:line="196" pos:column="16"/></name> <operator pos:line="196" pos:column="17">-=<pos:position pos:line="196" pos:column="19"/></operator> <literal type="number" pos:line="196" pos:column="20">2<pos:position pos:line="196" pos:column="21"/></literal></expr>;<pos:position pos:line="196" pos:column="22"/></expr_stmt></block></then></if>

        <if pos:line="198" pos:column="9">if <condition pos:line="198" pos:column="12">(<expr><name pos:line="198" pos:column="13">is_neg<pos:position pos:line="198" pos:column="19"/></name> <operator pos:line="198" pos:column="20">||<pos:position pos:line="198" pos:column="22"/></operator> <operator pos:line="198" pos:column="23">(<pos:position pos:line="198" pos:column="24"/></operator><name><name pos:line="198" pos:column="24">p<pos:position pos:line="198" pos:column="25"/></name><operator pos:line="198" pos:column="25">-&gt;<pos:position pos:line="198" pos:column="30"/></operator><name pos:line="198" pos:column="27">flags<pos:position pos:line="198" pos:column="32"/></name></name> <operator pos:line="198" pos:column="33">&amp;<pos:position pos:line="198" pos:column="38"/></operator> <name pos:line="198" pos:column="35">FLAGS_SHOWSIGN<pos:position pos:line="198" pos:column="49"/></name><operator pos:line="198" pos:column="49">)<pos:position pos:line="198" pos:column="50"/></operator> <operator pos:line="198" pos:column="51">||<pos:position pos:line="198" pos:column="53"/></operator> <operator pos:line="198" pos:column="54">(<pos:position pos:line="198" pos:column="55"/></operator><name><name pos:line="198" pos:column="55">p<pos:position pos:line="198" pos:column="56"/></name><operator pos:line="198" pos:column="56">-&gt;<pos:position pos:line="198" pos:column="61"/></operator><name pos:line="198" pos:column="58">flags<pos:position pos:line="198" pos:column="63"/></name></name> <operator pos:line="198" pos:column="64">&amp;<pos:position pos:line="198" pos:column="69"/></operator> <name pos:line="198" pos:column="66">FLAGS_SPACE<pos:position pos:line="198" pos:column="77"/></name><operator pos:line="198" pos:column="77">)<pos:position pos:line="198" pos:column="78"/></operator></expr>)<pos:position pos:line="198" pos:column="79"/></condition><then pos:line="198" pos:column="79">
          <block type="pseudo"><expr_stmt><expr><operator pos:line="199" pos:column="11">--<pos:position pos:line="199" pos:column="13"/></operator><name pos:line="199" pos:column="13">width<pos:position pos:line="199" pos:column="18"/></name></expr>;<pos:position pos:line="199" pos:column="19"/></expr_stmt></block></then></if>

        <if pos:line="201" pos:column="9">if <condition pos:line="201" pos:column="12">(<expr><operator pos:line="201" pos:column="13">!<pos:position pos:line="201" pos:column="14"/></operator><operator pos:line="201" pos:column="14">(<pos:position pos:line="201" pos:column="15"/></operator><name><name pos:line="201" pos:column="15">p<pos:position pos:line="201" pos:column="16"/></name><operator pos:line="201" pos:column="16">-&gt;<pos:position pos:line="201" pos:column="21"/></operator><name pos:line="201" pos:column="18">flags<pos:position pos:line="201" pos:column="23"/></name></name> <operator pos:line="201" pos:column="24">&amp;<pos:position pos:line="201" pos:column="29"/></operator> <name pos:line="201" pos:column="26">FLAGS_LEFT<pos:position pos:line="201" pos:column="36"/></name><operator pos:line="201" pos:column="36">)<pos:position pos:line="201" pos:column="37"/></operator> <operator pos:line="201" pos:column="38">&amp;&amp;<pos:position pos:line="201" pos:column="48"/></operator> <operator pos:line="201" pos:column="41">!<pos:position pos:line="201" pos:column="42"/></operator><operator pos:line="201" pos:column="42">(<pos:position pos:line="201" pos:column="43"/></operator><name><name pos:line="201" pos:column="43">p<pos:position pos:line="201" pos:column="44"/></name><operator pos:line="201" pos:column="44">-&gt;<pos:position pos:line="201" pos:column="49"/></operator><name pos:line="201" pos:column="46">flags<pos:position pos:line="201" pos:column="51"/></name></name> <operator pos:line="201" pos:column="52">&amp;<pos:position pos:line="201" pos:column="57"/></operator> <name pos:line="201" pos:column="54">FLAGS_PAD_NIL<pos:position pos:line="201" pos:column="67"/></name><operator pos:line="201" pos:column="67">)<pos:position pos:line="201" pos:column="68"/></operator></expr>)<pos:position pos:line="201" pos:column="69"/></condition><then pos:line="201" pos:column="69">
          <block type="pseudo"><while pos:line="202" pos:column="11">while <condition pos:line="202" pos:column="17">(<expr><name pos:line="202" pos:column="18">width<pos:position pos:line="202" pos:column="23"/></name><operator pos:line="202" pos:column="23">--<pos:position pos:line="202" pos:column="25"/></operator> <operator pos:line="202" pos:column="26">&gt;<pos:position pos:line="202" pos:column="30"/></operator> <literal type="number" pos:line="202" pos:column="28">0<pos:position pos:line="202" pos:column="29"/></literal></expr>)<pos:position pos:line="202" pos:column="30"/></condition>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="203" pos:column="13">OUTCHAR<pos:position pos:line="203" pos:column="20"/></name><argument_list pos:line="203" pos:column="20">(<argument><expr><literal type="char" pos:line="203" pos:column="21">' '<pos:position pos:line="203" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="26"/></expr_stmt></block></while></block></then></if>

        <if pos:line="205" pos:column="9">if <condition pos:line="205" pos:column="12">(<expr><name pos:line="205" pos:column="13">is_neg<pos:position pos:line="205" pos:column="19"/></name></expr>)<pos:position pos:line="205" pos:column="20"/></condition><then pos:line="205" pos:column="20">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="206" pos:column="11">OUTCHAR<pos:position pos:line="206" pos:column="18"/></name><argument_list pos:line="206" pos:column="18">(<argument><expr><literal type="char" pos:line="206" pos:column="19">'-'<pos:position pos:line="206" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="206" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="24"/></expr_stmt></block></then>
        <elseif pos:line="207" pos:column="9">else <if pos:line="207" pos:column="14">if <condition pos:line="207" pos:column="17">(<expr><name><name pos:line="207" pos:column="18">p<pos:position pos:line="207" pos:column="19"/></name><operator pos:line="207" pos:column="19">-&gt;<pos:position pos:line="207" pos:column="24"/></operator><name pos:line="207" pos:column="21">flags<pos:position pos:line="207" pos:column="26"/></name></name> <operator pos:line="207" pos:column="27">&amp;<pos:position pos:line="207" pos:column="32"/></operator> <name pos:line="207" pos:column="29">FLAGS_SHOWSIGN<pos:position pos:line="207" pos:column="43"/></name></expr>)<pos:position pos:line="207" pos:column="44"/></condition><then pos:line="207" pos:column="44">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="208" pos:column="11">OUTCHAR<pos:position pos:line="208" pos:column="18"/></name><argument_list pos:line="208" pos:column="18">(<argument><expr><literal type="char" pos:line="208" pos:column="19">'+'<pos:position pos:line="208" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="24"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="209" pos:column="9">else <if pos:line="209" pos:column="14">if <condition pos:line="209" pos:column="17">(<expr><name><name pos:line="209" pos:column="18">p<pos:position pos:line="209" pos:column="19"/></name><operator pos:line="209" pos:column="19">-&gt;<pos:position pos:line="209" pos:column="24"/></operator><name pos:line="209" pos:column="21">flags<pos:position pos:line="209" pos:column="26"/></name></name> <operator pos:line="209" pos:column="27">&amp;<pos:position pos:line="209" pos:column="32"/></operator> <name pos:line="209" pos:column="29">FLAGS_SPACE<pos:position pos:line="209" pos:column="40"/></name></expr>)<pos:position pos:line="209" pos:column="41"/></condition><then pos:line="209" pos:column="41">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="210" pos:column="11">OUTCHAR<pos:position pos:line="210" pos:column="18"/></name><argument_list pos:line="210" pos:column="18">(<argument><expr><literal type="char" pos:line="210" pos:column="19">' '<pos:position pos:line="210" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="210" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="24"/></expr_stmt></block></then></if></elseif></if>

        <if pos:line="212" pos:column="9">if <condition pos:line="212" pos:column="12">(<expr><name pos:line="212" pos:column="13">alt<pos:position pos:line="212" pos:column="16"/></name> <operator pos:line="212" pos:column="17">&amp;&amp;<pos:position pos:line="212" pos:column="27"/></operator> <name pos:line="212" pos:column="20">base<pos:position pos:line="212" pos:column="24"/></name> <operator pos:line="212" pos:column="25">==<pos:position pos:line="212" pos:column="27"/></operator> <literal type="number" pos:line="212" pos:column="28">16<pos:position pos:line="212" pos:column="30"/></literal></expr>)<pos:position pos:line="212" pos:column="31"/></condition><then pos:line="212" pos:column="31"> <block pos:line="212" pos:column="32">{
          <expr_stmt><expr><call><name pos:line="213" pos:column="11">OUTCHAR<pos:position pos:line="213" pos:column="18"/></name><argument_list pos:line="213" pos:column="18">(<argument><expr><literal type="char" pos:line="213" pos:column="19">'0'<pos:position pos:line="213" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="24"/></expr_stmt>
          <if pos:line="214" pos:column="11">if<condition pos:line="214" pos:column="13">(<expr><name><name pos:line="214" pos:column="14">p<pos:position pos:line="214" pos:column="15"/></name><operator pos:line="214" pos:column="15">-&gt;<pos:position pos:line="214" pos:column="20"/></operator><name pos:line="214" pos:column="17">flags<pos:position pos:line="214" pos:column="22"/></name></name> <operator pos:line="214" pos:column="23">&amp;<pos:position pos:line="214" pos:column="28"/></operator> <name pos:line="214" pos:column="25">FLAGS_UPPER<pos:position pos:line="214" pos:column="36"/></name></expr>)<pos:position pos:line="214" pos:column="37"/></condition><then pos:line="214" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="215" pos:column="13">OUTCHAR<pos:position pos:line="215" pos:column="20"/></name><argument_list pos:line="215" pos:column="20">(<argument><expr><literal type="char" pos:line="215" pos:column="21">'X'<pos:position pos:line="215" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="26"/></expr_stmt></block></then>
          <else pos:line="216" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="217" pos:column="13">OUTCHAR<pos:position pos:line="217" pos:column="20"/></name><argument_list pos:line="217" pos:column="20">(<argument><expr><literal type="char" pos:line="217" pos:column="21">'x'<pos:position pos:line="217" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="26"/></expr_stmt></block></else></if>
        }<pos:position pos:line="218" pos:column="10"/></block></then></if>

        <if pos:line="220" pos:column="9">if <condition pos:line="220" pos:column="12">(<expr><operator pos:line="220" pos:column="13">!<pos:position pos:line="220" pos:column="14"/></operator><operator pos:line="220" pos:column="14">(<pos:position pos:line="220" pos:column="15"/></operator><name><name pos:line="220" pos:column="15">p<pos:position pos:line="220" pos:column="16"/></name><operator pos:line="220" pos:column="16">-&gt;<pos:position pos:line="220" pos:column="21"/></operator><name pos:line="220" pos:column="18">flags<pos:position pos:line="220" pos:column="23"/></name></name> <operator pos:line="220" pos:column="24">&amp;<pos:position pos:line="220" pos:column="29"/></operator> <name pos:line="220" pos:column="26">FLAGS_LEFT<pos:position pos:line="220" pos:column="36"/></name><operator pos:line="220" pos:column="36">)<pos:position pos:line="220" pos:column="37"/></operator> <operator pos:line="220" pos:column="38">&amp;&amp;<pos:position pos:line="220" pos:column="48"/></operator> <operator pos:line="220" pos:column="41">(<pos:position pos:line="220" pos:column="42"/></operator><name><name pos:line="220" pos:column="42">p<pos:position pos:line="220" pos:column="43"/></name><operator pos:line="220" pos:column="43">-&gt;<pos:position pos:line="220" pos:column="48"/></operator><name pos:line="220" pos:column="45">flags<pos:position pos:line="220" pos:column="50"/></name></name> <operator pos:line="220" pos:column="51">&amp;<pos:position pos:line="220" pos:column="56"/></operator> <name pos:line="220" pos:column="53">FLAGS_PAD_NIL<pos:position pos:line="220" pos:column="66"/></name><operator pos:line="220" pos:column="66">)<pos:position pos:line="220" pos:column="67"/></operator></expr>)<pos:position pos:line="220" pos:column="68"/></condition><then pos:line="220" pos:column="68">
          <block type="pseudo"><while pos:line="221" pos:column="11">while <condition pos:line="221" pos:column="17">(<expr><name pos:line="221" pos:column="18">width<pos:position pos:line="221" pos:column="23"/></name><operator pos:line="221" pos:column="23">--<pos:position pos:line="221" pos:column="25"/></operator> <operator pos:line="221" pos:column="26">&gt;<pos:position pos:line="221" pos:column="30"/></operator> <literal type="number" pos:line="221" pos:column="28">0<pos:position pos:line="221" pos:column="29"/></literal></expr>)<pos:position pos:line="221" pos:column="30"/></condition>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="222" pos:column="13">OUTCHAR<pos:position pos:line="222" pos:column="20"/></name><argument_list pos:line="222" pos:column="20">(<argument><expr><literal type="char" pos:line="222" pos:column="21">'0'<pos:position pos:line="222" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="222" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="26"/></expr_stmt></block></while></block></then></if>

        <comment type="block" pos:line="224" pos:column="9">/* Write the number.  */</comment>
        <while pos:line="225" pos:column="9">while <condition pos:line="225" pos:column="15">(<expr><operator pos:line="225" pos:column="16">++<pos:position pos:line="225" pos:column="18"/></operator><name pos:line="225" pos:column="18">w<pos:position pos:line="225" pos:column="19"/></name> <operator pos:line="225" pos:column="20">&lt;=<pos:position pos:line="225" pos:column="25"/></operator> <name pos:line="225" pos:column="23">workend<pos:position pos:line="225" pos:column="30"/></name></expr>)<pos:position pos:line="225" pos:column="31"/></condition> <block pos:line="225" pos:column="32">{
          <expr_stmt><expr><call><name pos:line="226" pos:column="11">OUTCHAR<pos:position pos:line="226" pos:column="18"/></name><argument_list pos:line="226" pos:column="18">(<argument><expr><operator pos:line="226" pos:column="19">*<pos:position pos:line="226" pos:column="20"/></operator><name pos:line="226" pos:column="20">w<pos:position pos:line="226" pos:column="21"/></name></expr></argument>)<pos:position pos:line="226" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="227" pos:column="10"/></block></while>

        <if pos:line="229" pos:column="9">if <condition pos:line="229" pos:column="12">(<expr><name><name pos:line="229" pos:column="13">p<pos:position pos:line="229" pos:column="14"/></name><operator pos:line="229" pos:column="14">-&gt;<pos:position pos:line="229" pos:column="19"/></operator><name pos:line="229" pos:column="16">flags<pos:position pos:line="229" pos:column="21"/></name></name> <operator pos:line="229" pos:column="22">&amp;<pos:position pos:line="229" pos:column="27"/></operator> <name pos:line="229" pos:column="24">FLAGS_LEFT<pos:position pos:line="229" pos:column="34"/></name></expr>)<pos:position pos:line="229" pos:column="35"/></condition><then pos:line="229" pos:column="35">
          <block type="pseudo"><while pos:line="230" pos:column="11">while <condition pos:line="230" pos:column="17">(<expr><name pos:line="230" pos:column="18">width<pos:position pos:line="230" pos:column="23"/></name><operator pos:line="230" pos:column="23">--<pos:position pos:line="230" pos:column="25"/></operator> <operator pos:line="230" pos:column="26">&gt;<pos:position pos:line="230" pos:column="30"/></operator> <literal type="number" pos:line="230" pos:column="28">0<pos:position pos:line="230" pos:column="29"/></literal></expr>)<pos:position pos:line="230" pos:column="30"/></condition>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="231" pos:column="13">OUTCHAR<pos:position pos:line="231" pos:column="20"/></name><argument_list pos:line="231" pos:column="20">(<argument><expr><literal type="char" pos:line="231" pos:column="21">' '<pos:position pos:line="231" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="231" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="26"/></expr_stmt></block></while></block></then></if>
      }<pos:position pos:line="232" pos:column="8"/></block>
      <break pos:line="233" pos:column="7">break;<pos:position pos:line="233" pos:column="13"/></break>

    <case pos:line="235" pos:column="5">case <expr><name pos:line="235" pos:column="10">FORMAT_STRING<pos:position pos:line="235" pos:column="23"/></name></expr>:<pos:position pos:line="235" pos:column="24"/></case>
            <comment type="block" pos:line="236" pos:column="13">/* String.  */</comment>
      <block pos:line="237" pos:column="7">{
        <decl_stmt><decl><specifier pos:line="238" pos:column="9">static<pos:position pos:line="238" pos:column="15"/></specifier> <type><specifier pos:line="238" pos:column="16">const<pos:position pos:line="238" pos:column="21"/></specifier> <name pos:line="238" pos:column="22">char<pos:position pos:line="238" pos:column="26"/></name></type> <name><name pos:line="238" pos:column="27">null<pos:position pos:line="238" pos:column="31"/></name><index pos:line="238" pos:column="31">[]<pos:position pos:line="238" pos:column="33"/></index></name> <init pos:line="238" pos:column="34">= <expr><literal type="string" pos:line="238" pos:column="36">"(nil)"<pos:position pos:line="238" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="238" pos:column="44"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="239" pos:column="9">const<pos:position pos:line="239" pos:column="14"/></specifier> <name pos:line="239" pos:column="15">char<pos:position pos:line="239" pos:column="19"/></name> <modifier pos:line="239" pos:column="20">*<pos:position pos:line="239" pos:column="21"/></modifier></type><name pos:line="239" pos:column="21">str<pos:position pos:line="239" pos:column="24"/></name></decl>;<pos:position pos:line="239" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="240" pos:column="9">size_t<pos:position pos:line="240" pos:column="15"/></name></type> <name pos:line="240" pos:column="16">len<pos:position pos:line="240" pos:column="19"/></name></decl>;<pos:position pos:line="240" pos:column="20"/></decl_stmt>

        <expr_stmt><expr><name pos:line="242" pos:column="9">str<pos:position pos:line="242" pos:column="12"/></name> <operator pos:line="242" pos:column="13">=<pos:position pos:line="242" pos:column="14"/></operator> <operator pos:line="242" pos:column="15">(<pos:position pos:line="242" pos:column="16"/></operator><name pos:line="242" pos:column="16">char<pos:position pos:line="242" pos:column="20"/></name> <operator pos:line="242" pos:column="21">*<pos:position pos:line="242" pos:column="22"/></operator><operator pos:line="242" pos:column="22">)<pos:position pos:line="242" pos:column="23"/></operator> <name><name pos:line="242" pos:column="24">p<pos:position pos:line="242" pos:column="25"/></name><operator pos:line="242" pos:column="25">-&gt;<pos:position pos:line="242" pos:column="30"/></operator><name pos:line="242" pos:column="27">data<pos:position pos:line="242" pos:column="31"/></name><operator pos:line="242" pos:column="31">.<pos:position pos:line="242" pos:column="32"/></operator><name pos:line="242" pos:column="32">str<pos:position pos:line="242" pos:column="35"/></name></name></expr>;<pos:position pos:line="242" pos:column="36"/></expr_stmt>
        <if pos:line="243" pos:column="9">if <condition pos:line="243" pos:column="12">( <expr><name pos:line="243" pos:column="14">str<pos:position pos:line="243" pos:column="17"/></name> <operator pos:line="243" pos:column="18">==<pos:position pos:line="243" pos:column="20"/></operator> <name pos:line="243" pos:column="21">NULL<pos:position pos:line="243" pos:column="25"/></name></expr>)<pos:position pos:line="243" pos:column="26"/></condition><then pos:line="243" pos:column="26"> <block pos:line="243" pos:column="27">{
          <comment type="block" pos:line="244" pos:column="11">/* Write null[] if there's space.  */</comment>
          <if pos:line="245" pos:column="11">if <condition pos:line="245" pos:column="14">(<expr><name pos:line="245" pos:column="15">prec<pos:position pos:line="245" pos:column="19"/></name> <operator pos:line="245" pos:column="20">==<pos:position pos:line="245" pos:column="22"/></operator> <operator pos:line="245" pos:column="23">-<pos:position pos:line="245" pos:column="24"/></operator><literal type="number" pos:line="245" pos:column="24">1<pos:position pos:line="245" pos:column="25"/></literal> <operator pos:line="245" pos:column="26">||<pos:position pos:line="245" pos:column="28"/></operator> <name pos:line="245" pos:column="29">prec<pos:position pos:line="245" pos:column="33"/></name> <operator pos:line="245" pos:column="34">&gt;=<pos:position pos:line="245" pos:column="39"/></operator> <operator pos:line="245" pos:column="37">(<pos:position pos:line="245" pos:column="38"/></operator><name pos:line="245" pos:column="38">long<pos:position pos:line="245" pos:column="42"/></name><operator pos:line="245" pos:column="42">)<pos:position pos:line="245" pos:column="43"/></operator> <sizeof pos:line="245" pos:column="44">sizeof<argument_list pos:line="245" pos:column="50">(<argument><expr><name pos:line="245" pos:column="51">null<pos:position pos:line="245" pos:column="55"/></name></expr></argument>)<pos:position pos:line="245" pos:column="56"/></argument_list></sizeof> <operator pos:line="245" pos:column="57">-<pos:position pos:line="245" pos:column="58"/></operator> <literal type="number" pos:line="245" pos:column="59">1<pos:position pos:line="245" pos:column="60"/></literal></expr>)<pos:position pos:line="245" pos:column="61"/></condition><then pos:line="245" pos:column="61"> <block pos:line="245" pos:column="62">{
            <expr_stmt><expr><name pos:line="246" pos:column="13">str<pos:position pos:line="246" pos:column="16"/></name> <operator pos:line="246" pos:column="17">=<pos:position pos:line="246" pos:column="18"/></operator> <name pos:line="246" pos:column="19">null<pos:position pos:line="246" pos:column="23"/></name></expr>;<pos:position pos:line="246" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name pos:line="247" pos:column="13">len<pos:position pos:line="247" pos:column="16"/></name> <operator pos:line="247" pos:column="17">=<pos:position pos:line="247" pos:column="18"/></operator> <sizeof pos:line="247" pos:column="19">sizeof<argument_list pos:line="247" pos:column="25">(<argument><expr><name pos:line="247" pos:column="26">null<pos:position pos:line="247" pos:column="30"/></name></expr></argument>)<pos:position pos:line="247" pos:column="31"/></argument_list></sizeof> <operator pos:line="247" pos:column="32">-<pos:position pos:line="247" pos:column="33"/></operator> <literal type="number" pos:line="247" pos:column="34">1<pos:position pos:line="247" pos:column="35"/></literal></expr>;<pos:position pos:line="247" pos:column="36"/></expr_stmt>
            <comment type="block" pos:line="248" pos:column="13">/* Disable quotes around (nil) */</comment>
            <expr_stmt><expr><name><name pos:line="249" pos:column="13">p<pos:position pos:line="249" pos:column="14"/></name><operator pos:line="249" pos:column="14">-&gt;<pos:position pos:line="249" pos:column="19"/></operator><name pos:line="249" pos:column="16">flags<pos:position pos:line="249" pos:column="21"/></name></name> <operator pos:line="249" pos:column="22">&amp;=<pos:position pos:line="249" pos:column="28"/></operator> <operator pos:line="249" pos:column="25">(<pos:position pos:line="249" pos:column="26"/></operator><operator pos:line="249" pos:column="26">~<pos:position pos:line="249" pos:column="27"/></operator><name pos:line="249" pos:column="27">FLAGS_ALT<pos:position pos:line="249" pos:column="36"/></name><operator pos:line="249" pos:column="36">)<pos:position pos:line="249" pos:column="37"/></operator></expr>;<pos:position pos:line="249" pos:column="38"/></expr_stmt>
          }<pos:position pos:line="250" pos:column="12"/></block></then>
          <else pos:line="251" pos:column="11">else <block pos:line="251" pos:column="16">{
            <expr_stmt><expr><name pos:line="252" pos:column="13">str<pos:position pos:line="252" pos:column="16"/></name> <operator pos:line="252" pos:column="17">=<pos:position pos:line="252" pos:column="18"/></operator> <literal type="string" pos:line="252" pos:column="19">""<pos:position pos:line="252" pos:column="21"/></literal></expr>;<pos:position pos:line="252" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><name pos:line="253" pos:column="13">len<pos:position pos:line="253" pos:column="16"/></name> <operator pos:line="253" pos:column="17">=<pos:position pos:line="253" pos:column="18"/></operator> <literal type="number" pos:line="253" pos:column="19">0<pos:position pos:line="253" pos:column="20"/></literal></expr>;<pos:position pos:line="253" pos:column="21"/></expr_stmt>
          }<pos:position pos:line="254" pos:column="12"/></block></else></if>
        }<pos:position pos:line="255" pos:column="10"/></block></then>
        <else pos:line="256" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name pos:line="257" pos:column="11">len<pos:position pos:line="257" pos:column="14"/></name> <operator pos:line="257" pos:column="15">=<pos:position pos:line="257" pos:column="16"/></operator> <call><name pos:line="257" pos:column="17">strlen<pos:position pos:line="257" pos:column="23"/></name><argument_list pos:line="257" pos:column="23">(<argument><expr><name pos:line="257" pos:column="24">str<pos:position pos:line="257" pos:column="27"/></name></expr></argument>)<pos:position pos:line="257" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="29"/></expr_stmt></block></else></if>

        <if pos:line="259" pos:column="9">if <condition pos:line="259" pos:column="12">(<expr><name pos:line="259" pos:column="13">prec<pos:position pos:line="259" pos:column="17"/></name> <operator pos:line="259" pos:column="18">!=<pos:position pos:line="259" pos:column="20"/></operator> <operator pos:line="259" pos:column="21">-<pos:position pos:line="259" pos:column="22"/></operator><literal type="number" pos:line="259" pos:column="22">1<pos:position pos:line="259" pos:column="23"/></literal> <operator pos:line="259" pos:column="24">&amp;&amp;<pos:position pos:line="259" pos:column="34"/></operator> <operator pos:line="259" pos:column="27">(<pos:position pos:line="259" pos:column="28"/></operator><name pos:line="259" pos:column="28">size_t<pos:position pos:line="259" pos:column="34"/></name><operator pos:line="259" pos:column="34">)<pos:position pos:line="259" pos:column="35"/></operator> <name pos:line="259" pos:column="36">prec<pos:position pos:line="259" pos:column="40"/></name> <operator pos:line="259" pos:column="41">&lt;<pos:position pos:line="259" pos:column="45"/></operator> <name pos:line="259" pos:column="43">len<pos:position pos:line="259" pos:column="46"/></name></expr>)<pos:position pos:line="259" pos:column="47"/></condition><then pos:line="259" pos:column="47">
          <block type="pseudo"><expr_stmt><expr><name pos:line="260" pos:column="11">len<pos:position pos:line="260" pos:column="14"/></name> <operator pos:line="260" pos:column="15">=<pos:position pos:line="260" pos:column="16"/></operator> <name pos:line="260" pos:column="17">prec<pos:position pos:line="260" pos:column="21"/></name></expr>;<pos:position pos:line="260" pos:column="22"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="261" pos:column="9">width<pos:position pos:line="261" pos:column="14"/></name> <operator pos:line="261" pos:column="15">-=<pos:position pos:line="261" pos:column="17"/></operator> <operator pos:line="261" pos:column="18">(<pos:position pos:line="261" pos:column="19"/></operator><name pos:line="261" pos:column="19">long<pos:position pos:line="261" pos:column="23"/></name><operator pos:line="261" pos:column="23">)<pos:position pos:line="261" pos:column="24"/></operator><name pos:line="261" pos:column="24">len<pos:position pos:line="261" pos:column="27"/></name></expr>;<pos:position pos:line="261" pos:column="28"/></expr_stmt>

        <if pos:line="263" pos:column="9">if <condition pos:line="263" pos:column="12">(<expr><name><name pos:line="263" pos:column="13">p<pos:position pos:line="263" pos:column="14"/></name><operator pos:line="263" pos:column="14">-&gt;<pos:position pos:line="263" pos:column="19"/></operator><name pos:line="263" pos:column="16">flags<pos:position pos:line="263" pos:column="21"/></name></name> <operator pos:line="263" pos:column="22">&amp;<pos:position pos:line="263" pos:column="27"/></operator> <name pos:line="263" pos:column="24">FLAGS_ALT<pos:position pos:line="263" pos:column="33"/></name></expr>)<pos:position pos:line="263" pos:column="34"/></condition><then pos:line="263" pos:column="34">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="264" pos:column="11">OUTCHAR<pos:position pos:line="264" pos:column="18"/></name><argument_list pos:line="264" pos:column="18">(<argument><expr><literal type="char" pos:line="264" pos:column="19">'"'<pos:position pos:line="264" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="264" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="24"/></expr_stmt></block></then></if>

        <if pos:line="266" pos:column="9">if <condition pos:line="266" pos:column="12">(<expr><operator pos:line="266" pos:column="13">!<pos:position pos:line="266" pos:column="14"/></operator><operator pos:line="266" pos:column="14">(<pos:position pos:line="266" pos:column="15"/></operator><name><name pos:line="266" pos:column="15">p<pos:position pos:line="266" pos:column="16"/></name><operator pos:line="266" pos:column="16">-&gt;<pos:position pos:line="266" pos:column="21"/></operator><name pos:line="266" pos:column="18">flags<pos:position pos:line="266" pos:column="23"/></name></name><operator pos:line="266" pos:column="23">&amp;<pos:position pos:line="266" pos:column="28"/></operator><name pos:line="266" pos:column="24">FLAGS_LEFT<pos:position pos:line="266" pos:column="34"/></name><operator pos:line="266" pos:column="34">)<pos:position pos:line="266" pos:column="35"/></operator></expr>)<pos:position pos:line="266" pos:column="36"/></condition><then pos:line="266" pos:column="36">
          <block type="pseudo"><while pos:line="267" pos:column="11">while <condition pos:line="267" pos:column="17">(<expr><name pos:line="267" pos:column="18">width<pos:position pos:line="267" pos:column="23"/></name><operator pos:line="267" pos:column="23">--<pos:position pos:line="267" pos:column="25"/></operator> <operator pos:line="267" pos:column="26">&gt;<pos:position pos:line="267" pos:column="30"/></operator> <literal type="number" pos:line="267" pos:column="28">0<pos:position pos:line="267" pos:column="29"/></literal></expr>)<pos:position pos:line="267" pos:column="30"/></condition>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="268" pos:column="13">OUTCHAR<pos:position pos:line="268" pos:column="20"/></name><argument_list pos:line="268" pos:column="20">(<argument><expr><literal type="char" pos:line="268" pos:column="21">' '<pos:position pos:line="268" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="268" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="26"/></expr_stmt></block></while></block></then></if>

        <while pos:line="270" pos:column="9">while <condition pos:line="270" pos:column="15">(<expr><name pos:line="270" pos:column="16">len<pos:position pos:line="270" pos:column="19"/></name><operator pos:line="270" pos:column="19">--<pos:position pos:line="270" pos:column="21"/></operator> <operator pos:line="270" pos:column="22">&gt;<pos:position pos:line="270" pos:column="26"/></operator> <literal type="number" pos:line="270" pos:column="24">0<pos:position pos:line="270" pos:column="25"/></literal></expr>)<pos:position pos:line="270" pos:column="26"/></condition>
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="271" pos:column="11">OUTCHAR<pos:position pos:line="271" pos:column="18"/></name><argument_list pos:line="271" pos:column="18">(<argument><expr><operator pos:line="271" pos:column="19">*<pos:position pos:line="271" pos:column="20"/></operator><name pos:line="271" pos:column="20">str<pos:position pos:line="271" pos:column="23"/></name><operator pos:line="271" pos:column="23">++<pos:position pos:line="271" pos:column="25"/></operator></expr></argument>)<pos:position pos:line="271" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="27"/></expr_stmt></block></while>
        <if pos:line="272" pos:column="9">if <condition pos:line="272" pos:column="12">(<expr><name><name pos:line="272" pos:column="13">p<pos:position pos:line="272" pos:column="14"/></name><operator pos:line="272" pos:column="14">-&gt;<pos:position pos:line="272" pos:column="19"/></operator><name pos:line="272" pos:column="16">flags<pos:position pos:line="272" pos:column="21"/></name></name><operator pos:line="272" pos:column="21">&amp;<pos:position pos:line="272" pos:column="26"/></operator><name pos:line="272" pos:column="22">FLAGS_LEFT<pos:position pos:line="272" pos:column="32"/></name></expr>)<pos:position pos:line="272" pos:column="33"/></condition><then pos:line="272" pos:column="33">
          <block type="pseudo"><while pos:line="273" pos:column="11">while <condition pos:line="273" pos:column="17">(<expr><name pos:line="273" pos:column="18">width<pos:position pos:line="273" pos:column="23"/></name><operator pos:line="273" pos:column="23">--<pos:position pos:line="273" pos:column="25"/></operator> <operator pos:line="273" pos:column="26">&gt;<pos:position pos:line="273" pos:column="30"/></operator> <literal type="number" pos:line="273" pos:column="28">0<pos:position pos:line="273" pos:column="29"/></literal></expr>)<pos:position pos:line="273" pos:column="30"/></condition>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="274" pos:column="13">OUTCHAR<pos:position pos:line="274" pos:column="20"/></name><argument_list pos:line="274" pos:column="20">(<argument><expr><literal type="char" pos:line="274" pos:column="21">' '<pos:position pos:line="274" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="274" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="26"/></expr_stmt></block></while></block></then></if>

        <if pos:line="276" pos:column="9">if <condition pos:line="276" pos:column="12">(<expr><name><name pos:line="276" pos:column="13">p<pos:position pos:line="276" pos:column="14"/></name><operator pos:line="276" pos:column="14">-&gt;<pos:position pos:line="276" pos:column="19"/></operator><name pos:line="276" pos:column="16">flags<pos:position pos:line="276" pos:column="21"/></name></name> <operator pos:line="276" pos:column="22">&amp;<pos:position pos:line="276" pos:column="27"/></operator> <name pos:line="276" pos:column="24">FLAGS_ALT<pos:position pos:line="276" pos:column="33"/></name></expr>)<pos:position pos:line="276" pos:column="34"/></condition><then pos:line="276" pos:column="34">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="277" pos:column="11">OUTCHAR<pos:position pos:line="277" pos:column="18"/></name><argument_list pos:line="277" pos:column="18">(<argument><expr><literal type="char" pos:line="277" pos:column="19">'"'<pos:position pos:line="277" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="277" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="24"/></expr_stmt></block></then></if>
      }<pos:position pos:line="278" pos:column="8"/></block>
      <break pos:line="279" pos:column="7">break;<pos:position pos:line="279" pos:column="13"/></break>

    <case pos:line="281" pos:column="5">case <expr><name pos:line="281" pos:column="10">FORMAT_PTR<pos:position pos:line="281" pos:column="20"/></name></expr>:<pos:position pos:line="281" pos:column="21"/></case>
      <comment type="block" pos:line="282" pos:column="7">/* Generic pointer.  */</comment>
      <block pos:line="283" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="284" pos:column="9">void<pos:position pos:line="284" pos:column="13"/></name> <modifier pos:line="284" pos:column="14">*<pos:position pos:line="284" pos:column="15"/></modifier></type><name pos:line="284" pos:column="15">ptr<pos:position pos:line="284" pos:column="18"/></name></decl>;<pos:position pos:line="284" pos:column="19"/></decl_stmt>
        <expr_stmt><expr><name pos:line="285" pos:column="9">ptr<pos:position pos:line="285" pos:column="12"/></name> <operator pos:line="285" pos:column="13">=<pos:position pos:line="285" pos:column="14"/></operator> <operator pos:line="285" pos:column="15">(<pos:position pos:line="285" pos:column="16"/></operator><name pos:line="285" pos:column="16">void<pos:position pos:line="285" pos:column="20"/></name> <operator pos:line="285" pos:column="21">*<pos:position pos:line="285" pos:column="22"/></operator><operator pos:line="285" pos:column="22">)<pos:position pos:line="285" pos:column="23"/></operator> <name><name pos:line="285" pos:column="24">p<pos:position pos:line="285" pos:column="25"/></name><operator pos:line="285" pos:column="25">-&gt;<pos:position pos:line="285" pos:column="30"/></operator><name pos:line="285" pos:column="27">data<pos:position pos:line="285" pos:column="31"/></name><operator pos:line="285" pos:column="31">.<pos:position pos:line="285" pos:column="32"/></operator><name pos:line="285" pos:column="32">ptr<pos:position pos:line="285" pos:column="35"/></name></name></expr>;<pos:position pos:line="285" pos:column="36"/></expr_stmt>
        <if pos:line="286" pos:column="9">if <condition pos:line="286" pos:column="12">(<expr><name pos:line="286" pos:column="13">ptr<pos:position pos:line="286" pos:column="16"/></name> <operator pos:line="286" pos:column="17">!=<pos:position pos:line="286" pos:column="19"/></operator> <name pos:line="286" pos:column="20">NULL<pos:position pos:line="286" pos:column="24"/></name></expr>)<pos:position pos:line="286" pos:column="25"/></condition><then pos:line="286" pos:column="25"> <block pos:line="286" pos:column="26">{
          <comment type="block" pos:line="287" pos:column="11">/* If the pointer is not NULL, write it as a %#x spec.  */</comment>
          <expr_stmt><expr><name pos:line="288" pos:column="11">base<pos:position pos:line="288" pos:column="15"/></name> <operator pos:line="288" pos:column="16">=<pos:position pos:line="288" pos:column="17"/></operator> <literal type="number" pos:line="288" pos:column="18">16<pos:position pos:line="288" pos:column="20"/></literal></expr>;<pos:position pos:line="288" pos:column="21"/></expr_stmt>
          <expr_stmt><expr><name pos:line="289" pos:column="11">digits<pos:position pos:line="289" pos:column="17"/></name> <operator pos:line="289" pos:column="18">=<pos:position pos:line="289" pos:column="19"/></operator> <ternary><condition><expr><operator pos:line="289" pos:column="20">(<pos:position pos:line="289" pos:column="21"/></operator><name><name pos:line="289" pos:column="21">p<pos:position pos:line="289" pos:column="22"/></name><operator pos:line="289" pos:column="22">-&gt;<pos:position pos:line="289" pos:column="27"/></operator><name pos:line="289" pos:column="24">flags<pos:position pos:line="289" pos:column="29"/></name></name> <operator pos:line="289" pos:column="30">&amp;<pos:position pos:line="289" pos:column="35"/></operator> <name pos:line="289" pos:column="32">FLAGS_UPPER<pos:position pos:line="289" pos:column="43"/></name><operator pos:line="289" pos:column="43">)<pos:position pos:line="289" pos:column="44"/></operator></expr>?<pos:position pos:line="289" pos:column="45"/></condition><then pos:line="289" pos:column="45"> <expr><name pos:line="289" pos:column="46">upper_digits<pos:position pos:line="289" pos:column="58"/></name></expr> <pos:position pos:line="289" pos:column="59"/></then><else pos:line="289" pos:column="59">: <expr><name pos:line="289" pos:column="61">lower_digits<pos:position pos:line="289" pos:column="73"/></name></expr></else></ternary></expr>;<pos:position pos:line="289" pos:column="74"/></expr_stmt>
          <expr_stmt><expr><name pos:line="290" pos:column="11">alt<pos:position pos:line="290" pos:column="14"/></name> <operator pos:line="290" pos:column="15">=<pos:position pos:line="290" pos:column="16"/></operator> <literal type="number" pos:line="290" pos:column="17">1<pos:position pos:line="290" pos:column="18"/></literal></expr>;<pos:position pos:line="290" pos:column="19"/></expr_stmt>
          <expr_stmt><expr><name pos:line="291" pos:column="11">num<pos:position pos:line="291" pos:column="14"/></name> <operator pos:line="291" pos:column="15">=<pos:position pos:line="291" pos:column="16"/></operator> <operator pos:line="291" pos:column="17">(<pos:position pos:line="291" pos:column="18"/></operator><name pos:line="291" pos:column="18">size_t<pos:position pos:line="291" pos:column="24"/></name><operator pos:line="291" pos:column="24">)<pos:position pos:line="291" pos:column="25"/></operator> <name pos:line="291" pos:column="26">ptr<pos:position pos:line="291" pos:column="29"/></name></expr>;<pos:position pos:line="291" pos:column="30"/></expr_stmt>
          <expr_stmt><expr><name pos:line="292" pos:column="11">is_neg<pos:position pos:line="292" pos:column="17"/></name> <operator pos:line="292" pos:column="18">=<pos:position pos:line="292" pos:column="19"/></operator> <literal type="number" pos:line="292" pos:column="20">0<pos:position pos:line="292" pos:column="21"/></literal></expr>;<pos:position pos:line="292" pos:column="22"/></expr_stmt>
          <goto pos:line="293" pos:column="11">goto <name pos:line="293" pos:column="16">number<pos:position pos:line="293" pos:column="22"/></name>;<pos:position pos:line="293" pos:column="23"/></goto>
        }<pos:position pos:line="294" pos:column="10"/></block></then>
        <else pos:line="295" pos:column="9">else <block pos:line="295" pos:column="14">{
          <comment type="block" pos:line="296" pos:column="11">/* Write "(nil)" for a nil pointer.  */</comment>
          <decl_stmt><decl><specifier pos:line="297" pos:column="11">static<pos:position pos:line="297" pos:column="17"/></specifier> <type><specifier pos:line="297" pos:column="18">const<pos:position pos:line="297" pos:column="23"/></specifier> <name pos:line="297" pos:column="24">char<pos:position pos:line="297" pos:column="28"/></name></type> <name><name pos:line="297" pos:column="29">strnil<pos:position pos:line="297" pos:column="35"/></name><index pos:line="297" pos:column="35">[]<pos:position pos:line="297" pos:column="37"/></index></name> <init pos:line="297" pos:column="38">= <expr><literal type="string" pos:line="297" pos:column="40">"(nil)"<pos:position pos:line="297" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="297" pos:column="48"/></decl_stmt>
          <decl_stmt><decl><type><specifier pos:line="298" pos:column="11">const<pos:position pos:line="298" pos:column="16"/></specifier> <name pos:line="298" pos:column="17">char<pos:position pos:line="298" pos:column="21"/></name> <modifier pos:line="298" pos:column="22">*<pos:position pos:line="298" pos:column="23"/></modifier></type><name pos:line="298" pos:column="23">point<pos:position pos:line="298" pos:column="28"/></name></decl>;<pos:position pos:line="298" pos:column="29"/></decl_stmt>

          <expr_stmt><expr><name pos:line="300" pos:column="11">width<pos:position pos:line="300" pos:column="16"/></name> <operator pos:line="300" pos:column="17">-=<pos:position pos:line="300" pos:column="19"/></operator> <sizeof pos:line="300" pos:column="20">sizeof<argument_list pos:line="300" pos:column="26">(<argument><expr><name pos:line="300" pos:column="27">strnil<pos:position pos:line="300" pos:column="33"/></name></expr></argument>)<pos:position pos:line="300" pos:column="34"/></argument_list></sizeof> <operator pos:line="300" pos:column="35">-<pos:position pos:line="300" pos:column="36"/></operator> <literal type="number" pos:line="300" pos:column="37">1<pos:position pos:line="300" pos:column="38"/></literal></expr>;<pos:position pos:line="300" pos:column="39"/></expr_stmt>
          <if pos:line="301" pos:column="11">if <condition pos:line="301" pos:column="14">(<expr><name><name pos:line="301" pos:column="15">p<pos:position pos:line="301" pos:column="16"/></name><operator pos:line="301" pos:column="16">-&gt;<pos:position pos:line="301" pos:column="21"/></operator><name pos:line="301" pos:column="18">flags<pos:position pos:line="301" pos:column="23"/></name></name> <operator pos:line="301" pos:column="24">&amp;<pos:position pos:line="301" pos:column="29"/></operator> <name pos:line="301" pos:column="26">FLAGS_LEFT<pos:position pos:line="301" pos:column="36"/></name></expr>)<pos:position pos:line="301" pos:column="37"/></condition><then pos:line="301" pos:column="37">
            <block type="pseudo"><while pos:line="302" pos:column="13">while <condition pos:line="302" pos:column="19">(<expr><name pos:line="302" pos:column="20">width<pos:position pos:line="302" pos:column="25"/></name><operator pos:line="302" pos:column="25">--<pos:position pos:line="302" pos:column="27"/></operator> <operator pos:line="302" pos:column="28">&gt;<pos:position pos:line="302" pos:column="32"/></operator> <literal type="number" pos:line="302" pos:column="30">0<pos:position pos:line="302" pos:column="31"/></literal></expr>)<pos:position pos:line="302" pos:column="32"/></condition>
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="303" pos:column="15">OUTCHAR<pos:position pos:line="303" pos:column="22"/></name><argument_list pos:line="303" pos:column="22">(<argument><expr><literal type="char" pos:line="303" pos:column="23">' '<pos:position pos:line="303" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="303" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="28"/></expr_stmt></block></while></block></then></if>
          <for pos:line="304" pos:column="11">for <control pos:line="304" pos:column="15">(<init><expr><name pos:line="304" pos:column="16">point<pos:position pos:line="304" pos:column="21"/></name> <operator pos:line="304" pos:column="22">=<pos:position pos:line="304" pos:column="23"/></operator> <name pos:line="304" pos:column="24">strnil<pos:position pos:line="304" pos:column="30"/></name></expr>;<pos:position pos:line="304" pos:column="31"/></init> <condition><expr><operator pos:line="304" pos:column="32">*<pos:position pos:line="304" pos:column="33"/></operator><name pos:line="304" pos:column="33">point<pos:position pos:line="304" pos:column="38"/></name> <operator pos:line="304" pos:column="39">!=<pos:position pos:line="304" pos:column="41"/></operator> <literal type="char" pos:line="304" pos:column="42">'\0'<pos:position pos:line="304" pos:column="46"/></literal></expr>;<pos:position pos:line="304" pos:column="47"/></condition> <incr><expr><operator pos:line="304" pos:column="48">++<pos:position pos:line="304" pos:column="50"/></operator><name pos:line="304" pos:column="50">point<pos:position pos:line="304" pos:column="55"/></name></expr></incr>)<pos:position pos:line="304" pos:column="56"/></control>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="305" pos:column="13">OUTCHAR<pos:position pos:line="305" pos:column="20"/></name><argument_list pos:line="305" pos:column="20">(<argument><expr><operator pos:line="305" pos:column="21">*<pos:position pos:line="305" pos:column="22"/></operator><name pos:line="305" pos:column="22">point<pos:position pos:line="305" pos:column="27"/></name></expr></argument>)<pos:position pos:line="305" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="29"/></expr_stmt></block></for>
          <if pos:line="306" pos:column="11">if <condition pos:line="306" pos:column="14">(<expr><operator pos:line="306" pos:column="15">!<pos:position pos:line="306" pos:column="16"/></operator> <operator pos:line="306" pos:column="17">(<pos:position pos:line="306" pos:column="18"/></operator><name><name pos:line="306" pos:column="18">p<pos:position pos:line="306" pos:column="19"/></name><operator pos:line="306" pos:column="19">-&gt;<pos:position pos:line="306" pos:column="24"/></operator><name pos:line="306" pos:column="21">flags<pos:position pos:line="306" pos:column="26"/></name></name> <operator pos:line="306" pos:column="27">&amp;<pos:position pos:line="306" pos:column="32"/></operator> <name pos:line="306" pos:column="29">FLAGS_LEFT<pos:position pos:line="306" pos:column="39"/></name><operator pos:line="306" pos:column="39">)<pos:position pos:line="306" pos:column="40"/></operator></expr>)<pos:position pos:line="306" pos:column="41"/></condition><then pos:line="306" pos:column="41">
            <block type="pseudo"><while pos:line="307" pos:column="13">while <condition pos:line="307" pos:column="19">(<expr><name pos:line="307" pos:column="20">width<pos:position pos:line="307" pos:column="25"/></name><operator pos:line="307" pos:column="25">--<pos:position pos:line="307" pos:column="27"/></operator> <operator pos:line="307" pos:column="28">&gt;<pos:position pos:line="307" pos:column="32"/></operator> <literal type="number" pos:line="307" pos:column="30">0<pos:position pos:line="307" pos:column="31"/></literal></expr>)<pos:position pos:line="307" pos:column="32"/></condition>
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="308" pos:column="15">OUTCHAR<pos:position pos:line="308" pos:column="22"/></name><argument_list pos:line="308" pos:column="22">(<argument><expr><literal type="char" pos:line="308" pos:column="23">' '<pos:position pos:line="308" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="308" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="28"/></expr_stmt></block></while></block></then></if>
        }<pos:position pos:line="309" pos:column="10"/></block></else></if>
      }<pos:position pos:line="310" pos:column="8"/></block>
      <break pos:line="311" pos:column="7">break;<pos:position pos:line="311" pos:column="13"/></break>

    <case pos:line="313" pos:column="5">case <expr><name pos:line="313" pos:column="10">FORMAT_DOUBLE<pos:position pos:line="313" pos:column="23"/></name></expr>:<pos:position pos:line="313" pos:column="24"/></case>
      <block pos:line="314" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="315" pos:column="9">char<pos:position pos:line="315" pos:column="13"/></name></type> <name><name pos:line="315" pos:column="14">formatbuf<pos:position pos:line="315" pos:column="23"/></name><index pos:line="315" pos:column="23">[<expr><literal type="number" pos:line="315" pos:column="24">32<pos:position pos:line="315" pos:column="26"/></literal></expr>]<pos:position pos:line="315" pos:column="27"/></index></name><init pos:line="315" pos:column="27">=<expr><literal type="string" pos:line="315" pos:column="28">"%"<pos:position pos:line="315" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="315" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="316" pos:column="9">char<pos:position pos:line="316" pos:column="13"/></name> <modifier pos:line="316" pos:column="14">*<pos:position pos:line="316" pos:column="15"/></modifier></type><name pos:line="316" pos:column="15">fptr<pos:position pos:line="316" pos:column="19"/></name></decl>;<pos:position pos:line="316" pos:column="20"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="317" pos:column="9">size_t<pos:position pos:line="317" pos:column="15"/></name></type> <name pos:line="317" pos:column="16">left<pos:position pos:line="317" pos:column="20"/></name> <init pos:line="317" pos:column="21">= <expr><sizeof pos:line="317" pos:column="23">sizeof<argument_list pos:line="317" pos:column="29">(<argument><expr><name pos:line="317" pos:column="30">formatbuf<pos:position pos:line="317" pos:column="39"/></name></expr></argument>)<pos:position pos:line="317" pos:column="40"/></argument_list></sizeof><operator pos:line="317" pos:column="40">-<pos:position pos:line="317" pos:column="41"/></operator><call><name pos:line="317" pos:column="41">strlen<pos:position pos:line="317" pos:column="47"/></name><argument_list pos:line="317" pos:column="47">(<argument><expr><name pos:line="317" pos:column="48">formatbuf<pos:position pos:line="317" pos:column="57"/></name></expr></argument>)<pos:position pos:line="317" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="317" pos:column="59"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="318" pos:column="9">int<pos:position pos:line="318" pos:column="12"/></name></type> <name pos:line="318" pos:column="13">len<pos:position pos:line="318" pos:column="16"/></name></decl>;<pos:position pos:line="318" pos:column="17"/></decl_stmt>

        <expr_stmt><expr><name pos:line="320" pos:column="9">width<pos:position pos:line="320" pos:column="14"/></name> <operator pos:line="320" pos:column="15">=<pos:position pos:line="320" pos:column="16"/></operator> <operator pos:line="320" pos:column="17">-<pos:position pos:line="320" pos:column="18"/></operator><literal type="number" pos:line="320" pos:column="18">1<pos:position pos:line="320" pos:column="19"/></literal></expr>;<pos:position pos:line="320" pos:column="20"/></expr_stmt>
        <if pos:line="321" pos:column="9">if <condition pos:line="321" pos:column="12">(<expr><name><name pos:line="321" pos:column="13">p<pos:position pos:line="321" pos:column="14"/></name><operator pos:line="321" pos:column="14">-&gt;<pos:position pos:line="321" pos:column="19"/></operator><name pos:line="321" pos:column="16">flags<pos:position pos:line="321" pos:column="21"/></name></name> <operator pos:line="321" pos:column="22">&amp;<pos:position pos:line="321" pos:column="27"/></operator> <name pos:line="321" pos:column="24">FLAGS_WIDTH<pos:position pos:line="321" pos:column="35"/></name></expr>)<pos:position pos:line="321" pos:column="36"/></condition><then pos:line="321" pos:column="36">
          <block type="pseudo"><expr_stmt><expr><name pos:line="322" pos:column="11">width<pos:position pos:line="322" pos:column="16"/></name> <operator pos:line="322" pos:column="17">=<pos:position pos:line="322" pos:column="18"/></operator> <name><name pos:line="322" pos:column="19">p<pos:position pos:line="322" pos:column="20"/></name><operator pos:line="322" pos:column="20">-&gt;<pos:position pos:line="322" pos:column="25"/></operator><name pos:line="322" pos:column="22">width<pos:position pos:line="322" pos:column="27"/></name></name></expr>;<pos:position pos:line="322" pos:column="28"/></expr_stmt></block></then>
        <elseif pos:line="323" pos:column="9">else <if pos:line="323" pos:column="14">if <condition pos:line="323" pos:column="17">(<expr><name><name pos:line="323" pos:column="18">p<pos:position pos:line="323" pos:column="19"/></name><operator pos:line="323" pos:column="19">-&gt;<pos:position pos:line="323" pos:column="24"/></operator><name pos:line="323" pos:column="21">flags<pos:position pos:line="323" pos:column="26"/></name></name> <operator pos:line="323" pos:column="27">&amp;<pos:position pos:line="323" pos:column="32"/></operator> <name pos:line="323" pos:column="29">FLAGS_WIDTHPARAM<pos:position pos:line="323" pos:column="45"/></name></expr>)<pos:position pos:line="323" pos:column="46"/></condition><then pos:line="323" pos:column="46">
          <block type="pseudo"><expr_stmt><expr><name pos:line="324" pos:column="11">width<pos:position pos:line="324" pos:column="16"/></name> <operator pos:line="324" pos:column="17">=<pos:position pos:line="324" pos:column="18"/></operator> <name><name pos:line="324" pos:column="19">vto<pos:position pos:line="324" pos:column="22"/></name><index pos:line="324" pos:column="22">[<expr><name><name pos:line="324" pos:column="23">p<pos:position pos:line="324" pos:column="24"/></name><operator pos:line="324" pos:column="24">-&gt;<pos:position pos:line="324" pos:column="29"/></operator><name pos:line="324" pos:column="26">width<pos:position pos:line="324" pos:column="31"/></name></name></expr>]<pos:position pos:line="324" pos:column="32"/></index></name><operator pos:line="324" pos:column="32">.<pos:position pos:line="324" pos:column="33"/></operator><name><name pos:line="324" pos:column="33">data<pos:position pos:line="324" pos:column="37"/></name><operator pos:line="324" pos:column="37">.<pos:position pos:line="324" pos:column="38"/></operator><name pos:line="324" pos:column="38">num<pos:position pos:line="324" pos:column="41"/></name></name></expr>;<pos:position pos:line="324" pos:column="42"/></expr_stmt></block></then></if></elseif></if>

        <expr_stmt><expr><name pos:line="326" pos:column="9">prec<pos:position pos:line="326" pos:column="13"/></name> <operator pos:line="326" pos:column="14">=<pos:position pos:line="326" pos:column="15"/></operator> <operator pos:line="326" pos:column="16">-<pos:position pos:line="326" pos:column="17"/></operator><literal type="number" pos:line="326" pos:column="17">1<pos:position pos:line="326" pos:column="18"/></literal></expr>;<pos:position pos:line="326" pos:column="19"/></expr_stmt>
        <if pos:line="327" pos:column="9">if <condition pos:line="327" pos:column="12">(<expr><name><name pos:line="327" pos:column="13">p<pos:position pos:line="327" pos:column="14"/></name><operator pos:line="327" pos:column="14">-&gt;<pos:position pos:line="327" pos:column="19"/></operator><name pos:line="327" pos:column="16">flags<pos:position pos:line="327" pos:column="21"/></name></name> <operator pos:line="327" pos:column="22">&amp;<pos:position pos:line="327" pos:column="27"/></operator> <name pos:line="327" pos:column="24">FLAGS_PREC<pos:position pos:line="327" pos:column="34"/></name></expr>)<pos:position pos:line="327" pos:column="35"/></condition><then pos:line="327" pos:column="35">
          <block type="pseudo"><expr_stmt><expr><name pos:line="328" pos:column="11">prec<pos:position pos:line="328" pos:column="15"/></name> <operator pos:line="328" pos:column="16">=<pos:position pos:line="328" pos:column="17"/></operator> <name><name pos:line="328" pos:column="18">p<pos:position pos:line="328" pos:column="19"/></name><operator pos:line="328" pos:column="19">-&gt;<pos:position pos:line="328" pos:column="24"/></operator><name pos:line="328" pos:column="21">precision<pos:position pos:line="328" pos:column="30"/></name></name></expr>;<pos:position pos:line="328" pos:column="31"/></expr_stmt></block></then>
        <elseif pos:line="329" pos:column="9">else <if pos:line="329" pos:column="14">if <condition pos:line="329" pos:column="17">(<expr><name><name pos:line="329" pos:column="18">p<pos:position pos:line="329" pos:column="19"/></name><operator pos:line="329" pos:column="19">-&gt;<pos:position pos:line="329" pos:column="24"/></operator><name pos:line="329" pos:column="21">flags<pos:position pos:line="329" pos:column="26"/></name></name> <operator pos:line="329" pos:column="27">&amp;<pos:position pos:line="329" pos:column="32"/></operator> <name pos:line="329" pos:column="29">FLAGS_PRECPARAM<pos:position pos:line="329" pos:column="44"/></name></expr>)<pos:position pos:line="329" pos:column="45"/></condition><then pos:line="329" pos:column="45">
          <block type="pseudo"><expr_stmt><expr><name pos:line="330" pos:column="11">prec<pos:position pos:line="330" pos:column="15"/></name> <operator pos:line="330" pos:column="16">=<pos:position pos:line="330" pos:column="17"/></operator> <name><name pos:line="330" pos:column="18">vto<pos:position pos:line="330" pos:column="21"/></name><index pos:line="330" pos:column="21">[<expr><name><name pos:line="330" pos:column="22">p<pos:position pos:line="330" pos:column="23"/></name><operator pos:line="330" pos:column="23">-&gt;<pos:position pos:line="330" pos:column="28"/></operator><name pos:line="330" pos:column="25">precision<pos:position pos:line="330" pos:column="34"/></name></name></expr>]<pos:position pos:line="330" pos:column="35"/></index></name><operator pos:line="330" pos:column="35">.<pos:position pos:line="330" pos:column="36"/></operator><name><name pos:line="330" pos:column="36">data<pos:position pos:line="330" pos:column="40"/></name><operator pos:line="330" pos:column="40">.<pos:position pos:line="330" pos:column="41"/></operator><name pos:line="330" pos:column="41">num<pos:position pos:line="330" pos:column="44"/></name></name></expr>;<pos:position pos:line="330" pos:column="45"/></expr_stmt></block></then></if></elseif></if>

        <if pos:line="332" pos:column="9">if <condition pos:line="332" pos:column="12">(<expr><name><name pos:line="332" pos:column="13">p<pos:position pos:line="332" pos:column="14"/></name><operator pos:line="332" pos:column="14">-&gt;<pos:position pos:line="332" pos:column="19"/></operator><name pos:line="332" pos:column="16">flags<pos:position pos:line="332" pos:column="21"/></name></name> <operator pos:line="332" pos:column="22">&amp;<pos:position pos:line="332" pos:column="27"/></operator> <name pos:line="332" pos:column="24">FLAGS_LEFT<pos:position pos:line="332" pos:column="34"/></name></expr>)<pos:position pos:line="332" pos:column="35"/></condition><then pos:line="332" pos:column="35">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="333" pos:column="11">strcat<pos:position pos:line="333" pos:column="17"/></name><argument_list pos:line="333" pos:column="17">(<argument><expr><name pos:line="333" pos:column="18">formatbuf<pos:position pos:line="333" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="333" pos:column="29">"-"<pos:position pos:line="333" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="333" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="34"/></expr_stmt></block></then></if>
        <if pos:line="334" pos:column="9">if <condition pos:line="334" pos:column="12">(<expr><name><name pos:line="334" pos:column="13">p<pos:position pos:line="334" pos:column="14"/></name><operator pos:line="334" pos:column="14">-&gt;<pos:position pos:line="334" pos:column="19"/></operator><name pos:line="334" pos:column="16">flags<pos:position pos:line="334" pos:column="21"/></name></name> <operator pos:line="334" pos:column="22">&amp;<pos:position pos:line="334" pos:column="27"/></operator> <name pos:line="334" pos:column="24">FLAGS_SHOWSIGN<pos:position pos:line="334" pos:column="38"/></name></expr>)<pos:position pos:line="334" pos:column="39"/></condition><then pos:line="334" pos:column="39">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="335" pos:column="11">strcat<pos:position pos:line="335" pos:column="17"/></name><argument_list pos:line="335" pos:column="17">(<argument><expr><name pos:line="335" pos:column="18">formatbuf<pos:position pos:line="335" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="335" pos:column="29">"+"<pos:position pos:line="335" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="335" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="34"/></expr_stmt></block></then></if>
        <if pos:line="336" pos:column="9">if <condition pos:line="336" pos:column="12">(<expr><name><name pos:line="336" pos:column="13">p<pos:position pos:line="336" pos:column="14"/></name><operator pos:line="336" pos:column="14">-&gt;<pos:position pos:line="336" pos:column="19"/></operator><name pos:line="336" pos:column="16">flags<pos:position pos:line="336" pos:column="21"/></name></name> <operator pos:line="336" pos:column="22">&amp;<pos:position pos:line="336" pos:column="27"/></operator> <name pos:line="336" pos:column="24">FLAGS_SPACE<pos:position pos:line="336" pos:column="35"/></name></expr>)<pos:position pos:line="336" pos:column="36"/></condition><then pos:line="336" pos:column="36">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="337" pos:column="11">strcat<pos:position pos:line="337" pos:column="17"/></name><argument_list pos:line="337" pos:column="17">(<argument><expr><name pos:line="337" pos:column="18">formatbuf<pos:position pos:line="337" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="337" pos:column="29">" "<pos:position pos:line="337" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="337" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="34"/></expr_stmt></block></then></if>
        <if pos:line="338" pos:column="9">if <condition pos:line="338" pos:column="12">(<expr><name><name pos:line="338" pos:column="13">p<pos:position pos:line="338" pos:column="14"/></name><operator pos:line="338" pos:column="14">-&gt;<pos:position pos:line="338" pos:column="19"/></operator><name pos:line="338" pos:column="16">flags<pos:position pos:line="338" pos:column="21"/></name></name> <operator pos:line="338" pos:column="22">&amp;<pos:position pos:line="338" pos:column="27"/></operator> <name pos:line="338" pos:column="24">FLAGS_ALT<pos:position pos:line="338" pos:column="33"/></name></expr>)<pos:position pos:line="338" pos:column="34"/></condition><then pos:line="338" pos:column="34">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="339" pos:column="11">strcat<pos:position pos:line="339" pos:column="17"/></name><argument_list pos:line="339" pos:column="17">(<argument><expr><name pos:line="339" pos:column="18">formatbuf<pos:position pos:line="339" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="339" pos:column="29">"#"<pos:position pos:line="339" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="339" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="34"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="341" pos:column="9">fptr<pos:position pos:line="341" pos:column="13"/></name><operator pos:line="341" pos:column="13">=<pos:position pos:line="341" pos:column="14"/></operator><operator pos:line="341" pos:column="14">&amp;<pos:position pos:line="341" pos:column="19"/></operator><name><name pos:line="341" pos:column="15">formatbuf<pos:position pos:line="341" pos:column="24"/></name><index pos:line="341" pos:column="24">[<expr><call><name pos:line="341" pos:column="25">strlen<pos:position pos:line="341" pos:column="31"/></name><argument_list pos:line="341" pos:column="31">(<argument><expr><name pos:line="341" pos:column="32">formatbuf<pos:position pos:line="341" pos:column="41"/></name></expr></argument>)<pos:position pos:line="341" pos:column="42"/></argument_list></call></expr>]<pos:position pos:line="341" pos:column="43"/></index></name></expr>;<pos:position pos:line="341" pos:column="44"/></expr_stmt>

        <if pos:line="343" pos:column="9">if<condition pos:line="343" pos:column="11">(<expr><name pos:line="343" pos:column="12">width<pos:position pos:line="343" pos:column="17"/></name> <operator pos:line="343" pos:column="18">&gt;=<pos:position pos:line="343" pos:column="23"/></operator> <literal type="number" pos:line="343" pos:column="21">0<pos:position pos:line="343" pos:column="22"/></literal></expr>)<pos:position pos:line="343" pos:column="23"/></condition><then pos:line="343" pos:column="23"> <block pos:line="343" pos:column="24">{
          <comment type="block" pos:line="344" pos:column="11">/* RECURSIVE USAGE */</comment>
          <expr_stmt><expr><name pos:line="345" pos:column="11">len<pos:position pos:line="345" pos:column="14"/></name> <operator pos:line="345" pos:column="15">=<pos:position pos:line="345" pos:column="16"/></operator> <call><name pos:line="345" pos:column="17">curl_msnprintf<pos:position pos:line="345" pos:column="31"/></name><argument_list pos:line="345" pos:column="31">(<argument><expr><name pos:line="345" pos:column="32">fptr<pos:position pos:line="345" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="345" pos:column="38">left<pos:position pos:line="345" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="345" pos:column="44">"%ld"<pos:position pos:line="345" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="345" pos:column="51">width<pos:position pos:line="345" pos:column="56"/></name></expr></argument>)<pos:position pos:line="345" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="58"/></expr_stmt>
          <expr_stmt><expr><name pos:line="346" pos:column="11">fptr<pos:position pos:line="346" pos:column="15"/></name> <operator pos:line="346" pos:column="16">+=<pos:position pos:line="346" pos:column="18"/></operator> <name pos:line="346" pos:column="19">len<pos:position pos:line="346" pos:column="22"/></name></expr>;<pos:position pos:line="346" pos:column="23"/></expr_stmt>
          <expr_stmt><expr><name pos:line="347" pos:column="11">left<pos:position pos:line="347" pos:column="15"/></name> <operator pos:line="347" pos:column="16">-=<pos:position pos:line="347" pos:column="18"/></operator> <name pos:line="347" pos:column="19">len<pos:position pos:line="347" pos:column="22"/></name></expr>;<pos:position pos:line="347" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="348" pos:column="10"/></block></then></if>
        <if pos:line="349" pos:column="9">if<condition pos:line="349" pos:column="11">(<expr><name pos:line="349" pos:column="12">prec<pos:position pos:line="349" pos:column="16"/></name> <operator pos:line="349" pos:column="17">&gt;=<pos:position pos:line="349" pos:column="22"/></operator> <literal type="number" pos:line="349" pos:column="20">0<pos:position pos:line="349" pos:column="21"/></literal></expr>)<pos:position pos:line="349" pos:column="22"/></condition><then pos:line="349" pos:column="22"> <block pos:line="349" pos:column="23">{
          <comment type="block" pos:line="350" pos:column="11">/* RECURSIVE USAGE */</comment>
          <expr_stmt><expr><name pos:line="351" pos:column="11">len<pos:position pos:line="351" pos:column="14"/></name> <operator pos:line="351" pos:column="15">=<pos:position pos:line="351" pos:column="16"/></operator> <call><name pos:line="351" pos:column="17">curl_msnprintf<pos:position pos:line="351" pos:column="31"/></name><argument_list pos:line="351" pos:column="31">(<argument><expr><name pos:line="351" pos:column="32">fptr<pos:position pos:line="351" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="351" pos:column="38">left<pos:position pos:line="351" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="351" pos:column="44">".%ld"<pos:position pos:line="351" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="351" pos:column="52">prec<pos:position pos:line="351" pos:column="56"/></name></expr></argument>)<pos:position pos:line="351" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="58"/></expr_stmt>
          <expr_stmt><expr><name pos:line="352" pos:column="11">fptr<pos:position pos:line="352" pos:column="15"/></name> <operator pos:line="352" pos:column="16">+=<pos:position pos:line="352" pos:column="18"/></operator> <name pos:line="352" pos:column="19">len<pos:position pos:line="352" pos:column="22"/></name></expr>;<pos:position pos:line="352" pos:column="23"/></expr_stmt>
          <expr_stmt><expr><name pos:line="353" pos:column="11">left<pos:position pos:line="353" pos:column="15"/></name> <operator pos:line="353" pos:column="16">-=<pos:position pos:line="353" pos:column="18"/></operator> <name pos:line="353" pos:column="19">len<pos:position pos:line="353" pos:column="22"/></name></expr>;<pos:position pos:line="353" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="354" pos:column="10"/></block></then></if>
        <if pos:line="355" pos:column="9">if <condition pos:line="355" pos:column="12">(<expr><name><name pos:line="355" pos:column="13">p<pos:position pos:line="355" pos:column="14"/></name><operator pos:line="355" pos:column="14">-&gt;<pos:position pos:line="355" pos:column="19"/></operator><name pos:line="355" pos:column="16">flags<pos:position pos:line="355" pos:column="21"/></name></name> <operator pos:line="355" pos:column="22">&amp;<pos:position pos:line="355" pos:column="27"/></operator> <name pos:line="355" pos:column="24">FLAGS_LONG<pos:position pos:line="355" pos:column="34"/></name></expr>)<pos:position pos:line="355" pos:column="35"/></condition><then pos:line="355" pos:column="35">
          <block type="pseudo"><expr_stmt><expr><operator pos:line="356" pos:column="11">*<pos:position pos:line="356" pos:column="12"/></operator><name pos:line="356" pos:column="12">fptr<pos:position pos:line="356" pos:column="16"/></name><operator pos:line="356" pos:column="16">++<pos:position pos:line="356" pos:column="18"/></operator> <operator pos:line="356" pos:column="19">=<pos:position pos:line="356" pos:column="20"/></operator> <literal type="char" pos:line="356" pos:column="21">'l'<pos:position pos:line="356" pos:column="24"/></literal></expr>;<pos:position pos:line="356" pos:column="25"/></expr_stmt></block></then></if>

        <if pos:line="358" pos:column="9">if <condition pos:line="358" pos:column="12">(<expr><name><name pos:line="358" pos:column="13">p<pos:position pos:line="358" pos:column="14"/></name><operator pos:line="358" pos:column="14">-&gt;<pos:position pos:line="358" pos:column="19"/></operator><name pos:line="358" pos:column="16">flags<pos:position pos:line="358" pos:column="21"/></name></name> <operator pos:line="358" pos:column="22">&amp;<pos:position pos:line="358" pos:column="27"/></operator> <name pos:line="358" pos:column="24">FLAGS_FLOATE<pos:position pos:line="358" pos:column="36"/></name></expr>)<pos:position pos:line="358" pos:column="37"/></condition><then pos:line="358" pos:column="37">
          <block type="pseudo"><expr_stmt><expr><operator pos:line="359" pos:column="11">*<pos:position pos:line="359" pos:column="12"/></operator><name pos:line="359" pos:column="12">fptr<pos:position pos:line="359" pos:column="16"/></name><operator pos:line="359" pos:column="16">++<pos:position pos:line="359" pos:column="18"/></operator> <operator pos:line="359" pos:column="19">=<pos:position pos:line="359" pos:column="20"/></operator> <ternary><condition><expr><name><name pos:line="359" pos:column="21">p<pos:position pos:line="359" pos:column="22"/></name><operator pos:line="359" pos:column="22">-&gt;<pos:position pos:line="359" pos:column="27"/></operator><name pos:line="359" pos:column="24">flags<pos:position pos:line="359" pos:column="29"/></name></name><operator pos:line="359" pos:column="29">&amp;<pos:position pos:line="359" pos:column="34"/></operator><name pos:line="359" pos:column="30">FLAGS_UPPER<pos:position pos:line="359" pos:column="41"/></name></expr> ?<pos:position pos:line="359" pos:column="43"/></condition><then pos:line="359" pos:column="43"> <expr><literal type="char" pos:line="359" pos:column="44">'E'<pos:position pos:line="359" pos:column="47"/></literal></expr></then><else pos:line="359" pos:column="47">:<expr><literal type="char" pos:line="359" pos:column="48">'e'<pos:position pos:line="359" pos:column="51"/></literal></expr></else></ternary></expr>;<pos:position pos:line="359" pos:column="52"/></expr_stmt></block></then>
        <elseif pos:line="360" pos:column="9">else <if pos:line="360" pos:column="14">if <condition pos:line="360" pos:column="17">(<expr><name><name pos:line="360" pos:column="18">p<pos:position pos:line="360" pos:column="19"/></name><operator pos:line="360" pos:column="19">-&gt;<pos:position pos:line="360" pos:column="24"/></operator><name pos:line="360" pos:column="21">flags<pos:position pos:line="360" pos:column="26"/></name></name> <operator pos:line="360" pos:column="27">&amp;<pos:position pos:line="360" pos:column="32"/></operator> <name pos:line="360" pos:column="29">FLAGS_FLOATG<pos:position pos:line="360" pos:column="41"/></name></expr>)<pos:position pos:line="360" pos:column="42"/></condition><then pos:line="360" pos:column="42">
          <block type="pseudo"><expr_stmt><expr><operator pos:line="361" pos:column="11">*<pos:position pos:line="361" pos:column="12"/></operator><name pos:line="361" pos:column="12">fptr<pos:position pos:line="361" pos:column="16"/></name><operator pos:line="361" pos:column="16">++<pos:position pos:line="361" pos:column="18"/></operator> <operator pos:line="361" pos:column="19">=<pos:position pos:line="361" pos:column="20"/></operator> <ternary><condition><expr><name><name pos:line="361" pos:column="21">p<pos:position pos:line="361" pos:column="22"/></name><operator pos:line="361" pos:column="22">-&gt;<pos:position pos:line="361" pos:column="27"/></operator><name pos:line="361" pos:column="24">flags<pos:position pos:line="361" pos:column="29"/></name></name> <operator pos:line="361" pos:column="30">&amp;<pos:position pos:line="361" pos:column="35"/></operator> <name pos:line="361" pos:column="32">FLAGS_UPPER<pos:position pos:line="361" pos:column="43"/></name></expr> ?<pos:position pos:line="361" pos:column="45"/></condition><then pos:line="361" pos:column="45"> <expr><literal type="char" pos:line="361" pos:column="46">'G'<pos:position pos:line="361" pos:column="49"/></literal></expr> <pos:position pos:line="361" pos:column="50"/></then><else pos:line="361" pos:column="50">: <expr><literal type="char" pos:line="361" pos:column="52">'g'<pos:position pos:line="361" pos:column="55"/></literal></expr></else></ternary></expr>;<pos:position pos:line="361" pos:column="56"/></expr_stmt></block></then></if></elseif>
        <else pos:line="362" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><operator pos:line="363" pos:column="11">*<pos:position pos:line="363" pos:column="12"/></operator><name pos:line="363" pos:column="12">fptr<pos:position pos:line="363" pos:column="16"/></name><operator pos:line="363" pos:column="16">++<pos:position pos:line="363" pos:column="18"/></operator> <operator pos:line="363" pos:column="19">=<pos:position pos:line="363" pos:column="20"/></operator> <literal type="char" pos:line="363" pos:column="21">'f'<pos:position pos:line="363" pos:column="24"/></literal></expr>;<pos:position pos:line="363" pos:column="25"/></expr_stmt></block></else></if>

        <expr_stmt><expr><operator pos:line="365" pos:column="9">*<pos:position pos:line="365" pos:column="10"/></operator><name pos:line="365" pos:column="10">fptr<pos:position pos:line="365" pos:column="14"/></name> <operator pos:line="365" pos:column="15">=<pos:position pos:line="365" pos:column="16"/></operator> <literal type="number" pos:line="365" pos:column="17">0<pos:position pos:line="365" pos:column="18"/></literal></expr>;<pos:position pos:line="365" pos:column="19"/></expr_stmt> <comment type="block" pos:line="365" pos:column="20">/* and a final zero termination */</comment>

        <comment type="block" pos:line="367" pos:column="9">/* NOTE NOTE NOTE!! Not all sprintf() implementations returns number
           of output characters */</comment>
        <expr_stmt><expr><call pos:line="369" pos:column="9">(<name pos:line="369" pos:column="10">sprintf<pos:position pos:line="369" pos:column="17"/></name>)<argument_list pos:line="369" pos:column="18">(<argument><expr><name pos:line="369" pos:column="19">work<pos:position pos:line="369" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="369" pos:column="25">formatbuf<pos:position pos:line="369" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="369" pos:column="36">p<pos:position pos:line="369" pos:column="37"/></name><operator pos:line="369" pos:column="37">-&gt;<pos:position pos:line="369" pos:column="42"/></operator><name pos:line="369" pos:column="39">data<pos:position pos:line="369" pos:column="43"/></name><operator pos:line="369" pos:column="43">.<pos:position pos:line="369" pos:column="44"/></operator><name pos:line="369" pos:column="44">dnum<pos:position pos:line="369" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="369" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="369" pos:column="50"/></expr_stmt>

        <for pos:line="371" pos:column="9">for<control pos:line="371" pos:column="12">(<init><expr><name pos:line="371" pos:column="13">fptr<pos:position pos:line="371" pos:column="17"/></name><operator pos:line="371" pos:column="17">=<pos:position pos:line="371" pos:column="18"/></operator><name pos:line="371" pos:column="18">work<pos:position pos:line="371" pos:column="22"/></name></expr>;<pos:position pos:line="371" pos:column="23"/></init> <condition><expr><operator pos:line="371" pos:column="24">*<pos:position pos:line="371" pos:column="25"/></operator><name pos:line="371" pos:column="25">fptr<pos:position pos:line="371" pos:column="29"/></name></expr>;<pos:position pos:line="371" pos:column="30"/></condition> <incr><expr><name pos:line="371" pos:column="31">fptr<pos:position pos:line="371" pos:column="35"/></name><operator pos:line="371" pos:column="35">++<pos:position pos:line="371" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="371" pos:column="38"/></control>
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="372" pos:column="11">OUTCHAR<pos:position pos:line="372" pos:column="18"/></name><argument_list pos:line="372" pos:column="18">(<argument><expr><operator pos:line="372" pos:column="19">*<pos:position pos:line="372" pos:column="20"/></operator><name pos:line="372" pos:column="20">fptr<pos:position pos:line="372" pos:column="24"/></name></expr></argument>)<pos:position pos:line="372" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="26"/></expr_stmt></block></for>
      }<pos:position pos:line="373" pos:column="8"/></block>
      <break pos:line="374" pos:column="7">break;<pos:position pos:line="374" pos:column="13"/></break>

    <case pos:line="376" pos:column="5">case <expr><name pos:line="376" pos:column="10">FORMAT_INTPTR<pos:position pos:line="376" pos:column="23"/></name></expr>:<pos:position pos:line="376" pos:column="24"/></case>
      <comment type="block" pos:line="377" pos:column="7">/* Answer the count of characters written.  */</comment>
<cpp:ifdef pos:line="378" pos:column="1">#<cpp:directive pos:line="378" pos:column="2">ifdef<pos:position pos:line="378" pos:column="7"/></cpp:directive> <name pos:line="378" pos:column="8">ENABLE_64BIT<pos:position pos:line="378" pos:column="20"/></name></cpp:ifdef>
      <if pos:line="379" pos:column="7">if <condition pos:line="379" pos:column="10">(<expr><name><name pos:line="379" pos:column="11">p<pos:position pos:line="379" pos:column="12"/></name><operator pos:line="379" pos:column="12">-&gt;<pos:position pos:line="379" pos:column="17"/></operator><name pos:line="379" pos:column="14">flags<pos:position pos:line="379" pos:column="19"/></name></name> <operator pos:line="379" pos:column="20">&amp;<pos:position pos:line="379" pos:column="25"/></operator> <name pos:line="379" pos:column="22">FLAGS_LONGLONG<pos:position pos:line="379" pos:column="36"/></name></expr>)<pos:position pos:line="379" pos:column="37"/></condition><then pos:line="379" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="380" pos:column="9">*<pos:position pos:line="380" pos:column="10"/></operator><operator pos:line="380" pos:column="10">(<pos:position pos:line="380" pos:column="11"/></operator><name pos:line="380" pos:column="11">LONG_LONG<pos:position pos:line="380" pos:column="20"/></name> <operator pos:line="380" pos:column="21">*<pos:position pos:line="380" pos:column="22"/></operator><operator pos:line="380" pos:column="22">)<pos:position pos:line="380" pos:column="23"/></operator> <name><name pos:line="380" pos:column="24">p<pos:position pos:line="380" pos:column="25"/></name><operator pos:line="380" pos:column="25">-&gt;<pos:position pos:line="380" pos:column="30"/></operator><name pos:line="380" pos:column="27">data<pos:position pos:line="380" pos:column="31"/></name><operator pos:line="380" pos:column="31">.<pos:position pos:line="380" pos:column="32"/></operator><name pos:line="380" pos:column="32">ptr<pos:position pos:line="380" pos:column="35"/></name></name> <operator pos:line="380" pos:column="36">=<pos:position pos:line="380" pos:column="37"/></operator> <operator pos:line="380" pos:column="38">(<pos:position pos:line="380" pos:column="39"/></operator><name pos:line="380" pos:column="39">LONG_LONG<pos:position pos:line="380" pos:column="48"/></name><operator pos:line="380" pos:column="48">)<pos:position pos:line="380" pos:column="49"/></operator><name pos:line="380" pos:column="49">done<pos:position pos:line="380" pos:column="53"/></name></expr>;<pos:position pos:line="380" pos:column="54"/></expr_stmt></block></then>
      <elseif pos:line="381" pos:column="7">else
<cpp:endif pos:line="382" pos:column="1">#<cpp:directive pos:line="382" pos:column="2">endif<pos:position pos:line="382" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="383" pos:column="9">if <condition pos:line="383" pos:column="12">(<expr><name><name pos:line="383" pos:column="13">p<pos:position pos:line="383" pos:column="14"/></name><operator pos:line="383" pos:column="14">-&gt;<pos:position pos:line="383" pos:column="19"/></operator><name pos:line="383" pos:column="16">flags<pos:position pos:line="383" pos:column="21"/></name></name> <operator pos:line="383" pos:column="22">&amp;<pos:position pos:line="383" pos:column="27"/></operator> <name pos:line="383" pos:column="24">FLAGS_LONG<pos:position pos:line="383" pos:column="34"/></name></expr>)<pos:position pos:line="383" pos:column="35"/></condition><then pos:line="383" pos:column="35">
          <block type="pseudo"><expr_stmt><expr><operator pos:line="384" pos:column="11">*<pos:position pos:line="384" pos:column="12"/></operator><operator pos:line="384" pos:column="12">(<pos:position pos:line="384" pos:column="13"/></operator><name pos:line="384" pos:column="13">long<pos:position pos:line="384" pos:column="17"/></name> <operator pos:line="384" pos:column="18">*<pos:position pos:line="384" pos:column="19"/></operator><operator pos:line="384" pos:column="19">)<pos:position pos:line="384" pos:column="20"/></operator> <name><name pos:line="384" pos:column="21">p<pos:position pos:line="384" pos:column="22"/></name><operator pos:line="384" pos:column="22">-&gt;<pos:position pos:line="384" pos:column="27"/></operator><name pos:line="384" pos:column="24">data<pos:position pos:line="384" pos:column="28"/></name><operator pos:line="384" pos:column="28">.<pos:position pos:line="384" pos:column="29"/></operator><name pos:line="384" pos:column="29">ptr<pos:position pos:line="384" pos:column="32"/></name></name> <operator pos:line="384" pos:column="33">=<pos:position pos:line="384" pos:column="34"/></operator> <operator pos:line="384" pos:column="35">(<pos:position pos:line="384" pos:column="36"/></operator><name pos:line="384" pos:column="36">long<pos:position pos:line="384" pos:column="40"/></name><operator pos:line="384" pos:column="40">)<pos:position pos:line="384" pos:column="41"/></operator><name pos:line="384" pos:column="41">done<pos:position pos:line="384" pos:column="45"/></name></expr>;<pos:position pos:line="384" pos:column="46"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="385" pos:column="7">else <if pos:line="385" pos:column="12">if <condition pos:line="385" pos:column="15">(<expr><operator pos:line="385" pos:column="16">!<pos:position pos:line="385" pos:column="17"/></operator><operator pos:line="385" pos:column="17">(<pos:position pos:line="385" pos:column="18"/></operator><name><name pos:line="385" pos:column="18">p<pos:position pos:line="385" pos:column="19"/></name><operator pos:line="385" pos:column="19">-&gt;<pos:position pos:line="385" pos:column="24"/></operator><name pos:line="385" pos:column="21">flags<pos:position pos:line="385" pos:column="26"/></name></name> <operator pos:line="385" pos:column="27">&amp;<pos:position pos:line="385" pos:column="32"/></operator> <name pos:line="385" pos:column="29">FLAGS_SHORT<pos:position pos:line="385" pos:column="40"/></name><operator pos:line="385" pos:column="40">)<pos:position pos:line="385" pos:column="41"/></operator></expr>)<pos:position pos:line="385" pos:column="42"/></condition><then pos:line="385" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="386" pos:column="9">*<pos:position pos:line="386" pos:column="10"/></operator><operator pos:line="386" pos:column="10">(<pos:position pos:line="386" pos:column="11"/></operator><name pos:line="386" pos:column="11">int<pos:position pos:line="386" pos:column="14"/></name> <operator pos:line="386" pos:column="15">*<pos:position pos:line="386" pos:column="16"/></operator><operator pos:line="386" pos:column="16">)<pos:position pos:line="386" pos:column="17"/></operator> <name><name pos:line="386" pos:column="18">p<pos:position pos:line="386" pos:column="19"/></name><operator pos:line="386" pos:column="19">-&gt;<pos:position pos:line="386" pos:column="24"/></operator><name pos:line="386" pos:column="21">data<pos:position pos:line="386" pos:column="25"/></name><operator pos:line="386" pos:column="25">.<pos:position pos:line="386" pos:column="26"/></operator><name pos:line="386" pos:column="26">ptr<pos:position pos:line="386" pos:column="29"/></name></name> <operator pos:line="386" pos:column="30">=<pos:position pos:line="386" pos:column="31"/></operator> <operator pos:line="386" pos:column="32">(<pos:position pos:line="386" pos:column="33"/></operator><name pos:line="386" pos:column="33">int<pos:position pos:line="386" pos:column="36"/></name><operator pos:line="386" pos:column="36">)<pos:position pos:line="386" pos:column="37"/></operator><name pos:line="386" pos:column="37">done<pos:position pos:line="386" pos:column="41"/></name></expr>;<pos:position pos:line="386" pos:column="42"/></expr_stmt></block></then></if></elseif>
      <else pos:line="387" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><operator pos:line="388" pos:column="9">*<pos:position pos:line="388" pos:column="10"/></operator><operator pos:line="388" pos:column="10">(<pos:position pos:line="388" pos:column="11"/></operator><name pos:line="388" pos:column="11">short<pos:position pos:line="388" pos:column="16"/></name> <operator pos:line="388" pos:column="17">*<pos:position pos:line="388" pos:column="18"/></operator><operator pos:line="388" pos:column="18">)<pos:position pos:line="388" pos:column="19"/></operator> <name><name pos:line="388" pos:column="20">p<pos:position pos:line="388" pos:column="21"/></name><operator pos:line="388" pos:column="21">-&gt;<pos:position pos:line="388" pos:column="26"/></operator><name pos:line="388" pos:column="23">data<pos:position pos:line="388" pos:column="27"/></name><operator pos:line="388" pos:column="27">.<pos:position pos:line="388" pos:column="28"/></operator><name pos:line="388" pos:column="28">ptr<pos:position pos:line="388" pos:column="31"/></name></name> <operator pos:line="388" pos:column="32">=<pos:position pos:line="388" pos:column="33"/></operator> <operator pos:line="388" pos:column="34">(<pos:position pos:line="388" pos:column="35"/></operator><name pos:line="388" pos:column="35">short<pos:position pos:line="388" pos:column="40"/></name><operator pos:line="388" pos:column="40">)<pos:position pos:line="388" pos:column="41"/></operator><name pos:line="388" pos:column="41">done<pos:position pos:line="388" pos:column="45"/></name></expr>;<pos:position pos:line="388" pos:column="46"/></expr_stmt></block></else></if>
      <break pos:line="389" pos:column="7">break;<pos:position pos:line="389" pos:column="13"/></break>

    <default pos:line="391" pos:column="5">default:<pos:position pos:line="391" pos:column="13"/></default>
      <break pos:line="392" pos:column="7">break;<pos:position pos:line="392" pos:column="13"/></break>
    }<pos:position pos:line="393" pos:column="6"/></block></switch>
    <expr_stmt><expr><name pos:line="394" pos:column="5">f<pos:position pos:line="394" pos:column="6"/></name> <operator pos:line="394" pos:column="7">=<pos:position pos:line="394" pos:column="8"/></operator> <operator pos:line="394" pos:column="9">*<pos:position pos:line="394" pos:column="10"/></operator><name pos:line="394" pos:column="10">end<pos:position pos:line="394" pos:column="13"/></name><operator pos:line="394" pos:column="13">++<pos:position pos:line="394" pos:column="15"/></operator></expr>;<pos:position pos:line="394" pos:column="16"/></expr_stmt> <comment type="block" pos:line="394" pos:column="17">/* goto end of %-code */</comment>

  }<pos:position pos:line="396" pos:column="4"/></block></while>
  <return pos:line="397" pos:column="3">return <expr><name pos:line="397" pos:column="10">done<pos:position pos:line="397" pos:column="14"/></name></expr>;<pos:position pos:line="397" pos:column="15"/></return>
}<pos:position pos:line="398" pos:column="2"/></block></function></unit>

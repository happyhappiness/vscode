<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1236_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">get_pathname<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier><modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">cpp<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier><modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">path<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">cp<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><operator pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">cpp<pos:position pos:line="4" pos:column="24"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="27">end<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">quot<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">int<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">i<pos:position pos:line="6" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="19">j<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="7" pos:column="3">static<pos:position pos:line="7" pos:column="9"/></specifier> <type><specifier pos:line="7" pos:column="10">const<pos:position pos:line="7" pos:column="15"/></specifier> <name pos:line="7" pos:column="16">char<pos:position pos:line="7" pos:column="20"/></name></type> <name><name pos:line="7" pos:column="21">WHITESPACE<pos:position pos:line="7" pos:column="31"/></name><index pos:line="7" pos:column="31">[]<pos:position pos:line="7" pos:column="33"/></index></name> <init pos:line="7" pos:column="34">= <expr><literal type="string" pos:line="7" pos:column="36">" \t\r\n"<pos:position pos:line="7" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">cp<pos:position pos:line="9" pos:column="5"/></name> <operator pos:line="9" pos:column="6">+=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">strspn<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">cp<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="20">WHITESPACE<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><operator pos:line="10" pos:column="7">*<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">cp<pos:position pos:line="10" pos:column="10"/></name></expr>)<pos:position pos:line="10" pos:column="11"/></condition><then pos:line="10" pos:column="11"> <block pos:line="10" pos:column="12">{
    <expr_stmt><expr><operator pos:line="11" pos:column="5">*<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">cpp<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <name pos:line="11" pos:column="12">cp<pos:position pos:line="11" pos:column="14"/></name></expr>;<pos:position pos:line="11" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="12" pos:column="5">*<pos:position pos:line="12" pos:column="6"/></operator><name pos:line="12" pos:column="6">path<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">NULL<pos:position pos:line="12" pos:column="17"/></name></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">CURLE_QUOTE_ERROR<pos:position pos:line="13" pos:column="29"/></name></expr>;<pos:position pos:line="13" pos:column="30"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="16" pos:column="3">*<pos:position pos:line="16" pos:column="4"/></operator><name pos:line="16" pos:column="4">path<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <call><name pos:line="16" pos:column="11">malloc<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><call><name pos:line="16" pos:column="18">strlen<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">cp<pos:position pos:line="16" pos:column="27"/></name></expr></argument>)<pos:position pos:line="16" pos:column="28"/></argument_list></call> <operator pos:line="16" pos:column="29">+<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="31">1<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><operator pos:line="17" pos:column="6">*<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">path<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">==<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">NULL<pos:position pos:line="17" pos:column="19"/></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition><then pos:line="17" pos:column="20">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="20" pos:column="3">/* Check for quoted filenames */</comment>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><operator pos:line="21" pos:column="6">*<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">cp<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">==<pos:position pos:line="21" pos:column="12"/></operator> <literal type="char" pos:line="21" pos:column="13">'\"'<pos:position pos:line="21" pos:column="17"/></literal> <operator pos:line="21" pos:column="18">||<pos:position pos:line="21" pos:column="20"/></operator> <operator pos:line="21" pos:column="21">*<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">cp<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">==<pos:position pos:line="21" pos:column="27"/></operator> <literal type="char" pos:line="21" pos:column="28">'\''<pos:position pos:line="21" pos:column="32"/></literal></expr>)<pos:position pos:line="21" pos:column="33"/></condition><then pos:line="21" pos:column="33"> <block pos:line="21" pos:column="34">{
    <expr_stmt><expr><name pos:line="22" pos:column="5">quot<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <operator pos:line="22" pos:column="12">*<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">cp<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">++<pos:position pos:line="22" pos:column="17"/></operator></expr>;<pos:position pos:line="22" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="24" pos:column="5">/* Search for terminating quote, unescape some chars */</comment>
    <for pos:line="25" pos:column="5">for<control pos:line="25" pos:column="8">(<init><expr><name pos:line="25" pos:column="9">i<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <name pos:line="25" pos:column="13">j<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <literal type="number" pos:line="25" pos:column="17">0<pos:position pos:line="25" pos:column="18"/></literal></expr>;<pos:position pos:line="25" pos:column="19"/></init> <condition><expr><name pos:line="25" pos:column="20">i<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">&lt;=<pos:position pos:line="25" pos:column="27"/></operator> <call><name pos:line="25" pos:column="25">strlen<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name pos:line="25" pos:column="32">cp<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></condition> <incr><expr><name pos:line="25" pos:column="37">i<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">++<pos:position pos:line="25" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="41"/></control> <block pos:line="25" pos:column="42">{
      <if pos:line="26" pos:column="7">if<condition pos:line="26" pos:column="9">(<expr><name><name pos:line="26" pos:column="10">cp<pos:position pos:line="26" pos:column="12"/></name><index pos:line="26" pos:column="12">[<expr><name pos:line="26" pos:column="13">i<pos:position pos:line="26" pos:column="14"/></name></expr>]<pos:position pos:line="26" pos:column="15"/></index></name> <operator pos:line="26" pos:column="16">==<pos:position pos:line="26" pos:column="18"/></operator> <name pos:line="26" pos:column="19">quot<pos:position pos:line="26" pos:column="23"/></name></expr>)<pos:position pos:line="26" pos:column="24"/></condition><then pos:line="26" pos:column="24"> <block pos:line="26" pos:column="25">{  <comment type="block" pos:line="26" pos:column="28">/* Found quote */</comment>
        <expr_stmt><expr><name pos:line="27" pos:column="9">i<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">++<pos:position pos:line="27" pos:column="12"/></operator></expr>;<pos:position pos:line="27" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="28" pos:column="9">(<pos:position pos:line="28" pos:column="10"/></operator><operator pos:line="28" pos:column="10">*<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="11">path<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">)<pos:position pos:line="28" pos:column="16"/></operator><index pos:line="28" pos:column="16">[<expr><name pos:line="28" pos:column="17">j<pos:position pos:line="28" pos:column="18"/></name></expr>]<pos:position pos:line="28" pos:column="19"/></index> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <literal type="char" pos:line="28" pos:column="22">'\0'<pos:position pos:line="28" pos:column="26"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
        <break pos:line="29" pos:column="9">break;<pos:position pos:line="29" pos:column="15"/></break>
      }<pos:position pos:line="30" pos:column="8"/></block></then></if>
      <if pos:line="31" pos:column="7">if<condition pos:line="31" pos:column="9">(<expr><name><name pos:line="31" pos:column="10">cp<pos:position pos:line="31" pos:column="12"/></name><index pos:line="31" pos:column="12">[<expr><name pos:line="31" pos:column="13">i<pos:position pos:line="31" pos:column="14"/></name></expr>]<pos:position pos:line="31" pos:column="15"/></index></name> <operator pos:line="31" pos:column="16">==<pos:position pos:line="31" pos:column="18"/></operator> <literal type="char" pos:line="31" pos:column="19">'\0'<pos:position pos:line="31" pos:column="23"/></literal></expr>)<pos:position pos:line="31" pos:column="24"/></condition><then pos:line="31" pos:column="24"> <block pos:line="31" pos:column="25">{  <comment type="block" pos:line="31" pos:column="28">/* End of string */</comment>
        <comment type="block" pos:line="32" pos:column="9">/*error("Unterminated quote");*/</comment>
        <goto pos:line="33" pos:column="9">goto <name pos:line="33" pos:column="14">fail<pos:position pos:line="33" pos:column="18"/></name>;<pos:position pos:line="33" pos:column="19"/></goto>
      }<pos:position pos:line="34" pos:column="8"/></block></then></if>
      <if pos:line="35" pos:column="7">if<condition pos:line="35" pos:column="9">(<expr><name><name pos:line="35" pos:column="10">cp<pos:position pos:line="35" pos:column="12"/></name><index pos:line="35" pos:column="12">[<expr><name pos:line="35" pos:column="13">i<pos:position pos:line="35" pos:column="14"/></name></expr>]<pos:position pos:line="35" pos:column="15"/></index></name> <operator pos:line="35" pos:column="16">==<pos:position pos:line="35" pos:column="18"/></operator> <literal type="char" pos:line="35" pos:column="19">'\\'<pos:position pos:line="35" pos:column="23"/></literal></expr>)<pos:position pos:line="35" pos:column="24"/></condition><then pos:line="35" pos:column="24"> <block pos:line="35" pos:column="25">{  <comment type="block" pos:line="35" pos:column="28">/* Escaped characters */</comment>
        <expr_stmt><expr><name pos:line="36" pos:column="9">i<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">++<pos:position pos:line="36" pos:column="12"/></operator></expr>;<pos:position pos:line="36" pos:column="13"/></expr_stmt>
        <if pos:line="37" pos:column="9">if<condition pos:line="37" pos:column="11">(<expr><name><name pos:line="37" pos:column="12">cp<pos:position pos:line="37" pos:column="14"/></name><index pos:line="37" pos:column="14">[<expr><name pos:line="37" pos:column="15">i<pos:position pos:line="37" pos:column="16"/></name></expr>]<pos:position pos:line="37" pos:column="17"/></index></name> <operator pos:line="37" pos:column="18">!=<pos:position pos:line="37" pos:column="20"/></operator> <literal type="char" pos:line="37" pos:column="21">'\''<pos:position pos:line="37" pos:column="25"/></literal> <operator pos:line="37" pos:column="26">&amp;&amp;<pos:position pos:line="37" pos:column="36"/></operator> <name><name pos:line="37" pos:column="29">cp<pos:position pos:line="37" pos:column="31"/></name><index pos:line="37" pos:column="31">[<expr><name pos:line="37" pos:column="32">i<pos:position pos:line="37" pos:column="33"/></name></expr>]<pos:position pos:line="37" pos:column="34"/></index></name> <operator pos:line="37" pos:column="35">!=<pos:position pos:line="37" pos:column="37"/></operator> <literal type="char" pos:line="37" pos:column="38">'\"'<pos:position pos:line="37" pos:column="42"/></literal> <operator pos:line="37" pos:column="43">&amp;&amp;<pos:position pos:line="37" pos:column="53"/></operator>
            <name><name pos:line="38" pos:column="13">cp<pos:position pos:line="38" pos:column="15"/></name><index pos:line="38" pos:column="15">[<expr><name pos:line="38" pos:column="16">i<pos:position pos:line="38" pos:column="17"/></name></expr>]<pos:position pos:line="38" pos:column="18"/></index></name> <operator pos:line="38" pos:column="19">!=<pos:position pos:line="38" pos:column="21"/></operator> <literal type="char" pos:line="38" pos:column="22">'\\'<pos:position pos:line="38" pos:column="26"/></literal></expr>)<pos:position pos:line="38" pos:column="27"/></condition><then pos:line="38" pos:column="27"> <block pos:line="38" pos:column="28">{
          <comment type="block" pos:line="39" pos:column="11">/*error("Bad escaped character '\\%c'",
              cp[i]);*/</comment>
          <goto pos:line="41" pos:column="11">goto <name pos:line="41" pos:column="16">fail<pos:position pos:line="41" pos:column="20"/></name>;<pos:position pos:line="41" pos:column="21"/></goto>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
      }<pos:position pos:line="43" pos:column="8"/></block></then></if>
      <expr_stmt><expr><operator pos:line="44" pos:column="7">(<pos:position pos:line="44" pos:column="8"/></operator><operator pos:line="44" pos:column="8">*<pos:position pos:line="44" pos:column="9"/></operator><name pos:line="44" pos:column="9">path<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">)<pos:position pos:line="44" pos:column="14"/></operator><index pos:line="44" pos:column="14">[<expr><name pos:line="44" pos:column="15">j<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">++<pos:position pos:line="44" pos:column="18"/></operator></expr>]<pos:position pos:line="44" pos:column="19"/></index> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <name><name pos:line="44" pos:column="22">cp<pos:position pos:line="44" pos:column="24"/></name><index pos:line="44" pos:column="24">[<expr><name pos:line="44" pos:column="25">i<pos:position pos:line="44" pos:column="26"/></name></expr>]<pos:position pos:line="44" pos:column="27"/></index></name></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></for>

    <if pos:line="47" pos:column="5">if<condition pos:line="47" pos:column="7">(<expr><name pos:line="47" pos:column="8">j<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">==<pos:position pos:line="47" pos:column="12"/></operator> <literal type="number" pos:line="47" pos:column="13">0<pos:position pos:line="47" pos:column="14"/></literal></expr>)<pos:position pos:line="47" pos:column="15"/></condition><then pos:line="47" pos:column="15"> <block pos:line="47" pos:column="16">{
      <comment type="block" pos:line="48" pos:column="7">/*error("Empty quotes");*/</comment>
      <goto pos:line="49" pos:column="7">goto <name pos:line="49" pos:column="12">fail<pos:position pos:line="49" pos:column="16"/></name>;<pos:position pos:line="49" pos:column="17"/></goto>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="51" pos:column="5">*<pos:position pos:line="51" pos:column="6"/></operator><name pos:line="51" pos:column="6">cpp<pos:position pos:line="51" pos:column="9"/></name> <operator pos:line="51" pos:column="10">=<pos:position pos:line="51" pos:column="11"/></operator> <name pos:line="51" pos:column="12">cp<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">+<pos:position pos:line="51" pos:column="16"/></operator> <name pos:line="51" pos:column="17">i<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">+<pos:position pos:line="51" pos:column="20"/></operator> <call><name pos:line="51" pos:column="21">strspn<pos:position pos:line="51" pos:column="27"/></name><argument_list pos:line="51" pos:column="27">(<argument><expr><name pos:line="51" pos:column="28">cp<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">+<pos:position pos:line="51" pos:column="32"/></operator> <name pos:line="51" pos:column="33">i<pos:position pos:line="51" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="36">WHITESPACE<pos:position pos:line="51" pos:column="46"/></name></expr></argument>)<pos:position pos:line="51" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="52" pos:column="4"/></block></then>
  <else pos:line="53" pos:column="3">else <block pos:line="53" pos:column="8">{
    <comment type="block" pos:line="54" pos:column="5">/* Read to end of filename */</comment>
    <expr_stmt><expr><name pos:line="55" pos:column="5">end<pos:position pos:line="55" pos:column="8"/></name> <operator pos:line="55" pos:column="9">=<pos:position pos:line="55" pos:column="10"/></operator> <call><name pos:line="55" pos:column="11">strpbrk<pos:position pos:line="55" pos:column="18"/></name><argument_list pos:line="55" pos:column="18">(<argument><expr><name pos:line="55" pos:column="19">cp<pos:position pos:line="55" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="23">WHITESPACE<pos:position pos:line="55" pos:column="33"/></name></expr></argument>)<pos:position pos:line="55" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>
    <if pos:line="56" pos:column="5">if<condition pos:line="56" pos:column="7">(<expr><name pos:line="56" pos:column="8">end<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">==<pos:position pos:line="56" pos:column="14"/></operator> <name pos:line="56" pos:column="15">NULL<pos:position pos:line="56" pos:column="19"/></name></expr>)<pos:position pos:line="56" pos:column="20"/></condition><then pos:line="56" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="7">end<pos:position pos:line="57" pos:column="10"/></name> <operator pos:line="57" pos:column="11">=<pos:position pos:line="57" pos:column="12"/></operator> <call><name pos:line="57" pos:column="13">strchr<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><name pos:line="57" pos:column="20">cp<pos:position pos:line="57" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="57" pos:column="24">'\0'<pos:position pos:line="57" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="30"/></expr_stmt></block></then></if>
    <expr_stmt><expr><operator pos:line="58" pos:column="5">*<pos:position pos:line="58" pos:column="6"/></operator><name pos:line="58" pos:column="6">cpp<pos:position pos:line="58" pos:column="9"/></name> <operator pos:line="58" pos:column="10">=<pos:position pos:line="58" pos:column="11"/></operator> <name pos:line="58" pos:column="12">end<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">+<pos:position pos:line="58" pos:column="17"/></operator> <call><name pos:line="58" pos:column="18">strspn<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><name pos:line="58" pos:column="25">end<pos:position pos:line="58" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="30">WHITESPACE<pos:position pos:line="58" pos:column="40"/></name></expr></argument>)<pos:position pos:line="58" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="60" pos:column="5">memcpy<pos:position pos:line="60" pos:column="11"/></name><argument_list pos:line="60" pos:column="11">(<argument><expr><operator pos:line="60" pos:column="12">*<pos:position pos:line="60" pos:column="13"/></operator><name pos:line="60" pos:column="13">path<pos:position pos:line="60" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="19">cp<pos:position pos:line="60" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="23">end<pos:position pos:line="60" pos:column="26"/></name> <operator pos:line="60" pos:column="27">-<pos:position pos:line="60" pos:column="28"/></operator> <name pos:line="60" pos:column="29">cp<pos:position pos:line="60" pos:column="31"/></name></expr></argument>)<pos:position pos:line="60" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="61" pos:column="5">(<pos:position pos:line="61" pos:column="6"/></operator><operator pos:line="61" pos:column="6">*<pos:position pos:line="61" pos:column="7"/></operator><name pos:line="61" pos:column="7">path<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">)<pos:position pos:line="61" pos:column="12"/></operator><index pos:line="61" pos:column="12">[<expr><name pos:line="61" pos:column="13">end<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">-<pos:position pos:line="61" pos:column="18"/></operator> <name pos:line="61" pos:column="19">cp<pos:position pos:line="61" pos:column="21"/></name></expr>]<pos:position pos:line="61" pos:column="22"/></index> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <literal type="char" pos:line="61" pos:column="25">'\0'<pos:position pos:line="61" pos:column="29"/></literal></expr>;<pos:position pos:line="61" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="62" pos:column="4"/></block></else></if>
  <return pos:line="63" pos:column="3">return <expr><name pos:line="63" pos:column="10">CURLE_OK<pos:position pos:line="63" pos:column="18"/></name></expr>;<pos:position pos:line="63" pos:column="19"/></return>

  <label><name pos:line="65" pos:column="3">fail<pos:position pos:line="65" pos:column="7"/></name>:<pos:position pos:line="65" pos:column="8"/></label>
  <expr_stmt><expr><call><name pos:line="66" pos:column="3">Curl_safefree<pos:position pos:line="66" pos:column="16"/></name><argument_list pos:line="66" pos:column="16">(<argument><expr><operator pos:line="66" pos:column="17">*<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="18">path<pos:position pos:line="66" pos:column="22"/></name></expr></argument>)<pos:position pos:line="66" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="24"/></expr_stmt>
  <return pos:line="67" pos:column="3">return <expr><name pos:line="67" pos:column="10">CURLE_QUOTE_ERROR<pos:position pos:line="67" pos:column="27"/></name></expr>;<pos:position pos:line="67" pos:column="28"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

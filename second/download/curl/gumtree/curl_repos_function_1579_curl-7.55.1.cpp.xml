<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1579_curl-7.55.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">waitconnect_getsock<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">connectdata<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">conn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">curl_socket_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">sock<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="3" pos:column="32">int<pos:position pos:line="3" pos:column="35"/></name></type> <name pos:line="3" pos:column="36">numsocks<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="45"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">s<pos:position pos:line="6" pos:column="8"/></name><init pos:line="6" pos:column="8">=<expr><literal type="number" pos:line="6" pos:column="9">0<pos:position pos:line="6" pos:column="10"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rc<pos:position pos:line="7" pos:column="9"/></name><init pos:line="7" pos:column="9">=<expr><literal type="number" pos:line="7" pos:column="10">0<pos:position pos:line="7" pos:column="11"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">!<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">numsocks<pos:position pos:line="9" pos:column="15"/></name></expr>)<pos:position pos:line="9" pos:column="16"/></condition><then pos:line="9" pos:column="16">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">GETSOCK_BLANK<pos:position pos:line="10" pos:column="25"/></name></expr>;<pos:position pos:line="10" pos:column="26"/></return></block></then></if>

<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">USE_SSL<pos:position pos:line="12" pos:column="15"/></name></cpp:ifdef>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><call><name pos:line="13" pos:column="6">CONNECT_FIRSTSOCKET_PROXY_SSL<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">()<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><call><name pos:line="14" pos:column="12">Curl_ssl_getsock<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">conn<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">sock<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">numsocks<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="51"/></return></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>

  <for pos:line="17" pos:column="3">for<control pos:line="17" pos:column="6">(<init><expr><name pos:line="17" pos:column="7">i<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator><literal type="number" pos:line="17" pos:column="9">0<pos:position pos:line="17" pos:column="10"/></literal></expr>;<pos:position pos:line="17" pos:column="11"/></init> <condition><expr><name pos:line="17" pos:column="12">i<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">&lt;<pos:position pos:line="17" pos:column="17"/></operator><literal type="number" pos:line="17" pos:column="14">2<pos:position pos:line="17" pos:column="15"/></literal></expr>;<pos:position pos:line="17" pos:column="16"/></condition> <incr><expr><name pos:line="17" pos:column="17">i<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">++<pos:position pos:line="17" pos:column="20"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="21"/></control> <block pos:line="17" pos:column="22">{
    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><name><name pos:line="18" pos:column="8">conn<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">tempsock<pos:position pos:line="18" pos:column="22"/></name><index pos:line="18" pos:column="22">[<expr><name pos:line="18" pos:column="23">i<pos:position pos:line="18" pos:column="24"/></name></expr>]<pos:position pos:line="18" pos:column="25"/></index></name> <operator pos:line="18" pos:column="26">!=<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">CURL_SOCKET_BAD<pos:position pos:line="18" pos:column="44"/></name></expr>)<pos:position pos:line="18" pos:column="45"/></condition><then pos:line="18" pos:column="45"> <block pos:line="18" pos:column="46">{
      <expr_stmt><expr><name><name pos:line="19" pos:column="7">sock<pos:position pos:line="19" pos:column="11"/></name><index pos:line="19" pos:column="11">[<expr><name pos:line="19" pos:column="12">s<pos:position pos:line="19" pos:column="13"/></name></expr>]<pos:position pos:line="19" pos:column="14"/></index></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <name><name pos:line="19" pos:column="17">conn<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">tempsock<pos:position pos:line="19" pos:column="31"/></name><index pos:line="19" pos:column="31">[<expr><name pos:line="19" pos:column="32">i<pos:position pos:line="19" pos:column="33"/></name></expr>]<pos:position pos:line="19" pos:column="34"/></index></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="20" pos:column="7">rc<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">|=<pos:position pos:line="20" pos:column="12"/></operator> <call><name pos:line="20" pos:column="13">GETSOCK_WRITESOCK<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">s<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">++<pos:position pos:line="20" pos:column="34"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
  }<pos:position pos:line="22" pos:column="4"/></block></for>

  <return pos:line="24" pos:column="3">return <expr><name pos:line="24" pos:column="10">rc<pos:position pos:line="24" pos:column="12"/></name></expr>;<pos:position pos:line="24" pos:column="13"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

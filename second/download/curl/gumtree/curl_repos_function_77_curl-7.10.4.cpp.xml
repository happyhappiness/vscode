<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_77_curl-7.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parseconfig<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">filename<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
		       <parameter><decl><type><name><name pos:line="2" pos:column="24">struct<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">Configurable<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">config<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">res<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">file<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">filebuffer<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><literal type="number" pos:line="6" pos:column="19">512<pos:position pos:line="6" pos:column="22"/></literal></expr>]<pos:position pos:line="6" pos:column="23"/></index></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">bool<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">usedarg<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">home<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
  
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">filename<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">||<pos:position pos:line="10" pos:column="18"/></operator> <operator pos:line="10" pos:column="19">!<pos:position pos:line="10" pos:column="20"/></operator><operator pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">filename<pos:position pos:line="10" pos:column="29"/></name></expr>)<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30"> <block pos:line="10" pos:column="31">{
    <comment type="block" pos:line="11" pos:column="5">/* NULL or no file name attempts to load .curlrc from the homedir! */</comment>

<cpp:define pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">define<pos:position pos:line="13" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="13" pos:column="9">CURLRC<pos:position pos:line="13" pos:column="15"/></name></cpp:macro> <cpp:value pos:line="13" pos:column="16">DOT_CHAR "curlrc"<pos:position pos:line="13" pos:column="33"/></cpp:value></cpp:define>

    <expr_stmt><expr><name pos:line="15" pos:column="5">filename<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">CURLRC<pos:position pos:line="15" pos:column="22"/></name></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>          <comment type="block" pos:line="15" pos:column="33">/* sensible default */</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">home<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">curl_getenv<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="string" pos:line="16" pos:column="24">"HOME"<pos:position pos:line="16" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt> <comment type="block" pos:line="16" pos:column="33">/* portable environment reader */</comment>
    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><name pos:line="17" pos:column="8">home<pos:position pos:line="17" pos:column="12"/></name></expr>)<pos:position pos:line="17" pos:column="13"/></condition><then pos:line="17" pos:column="13"> <block pos:line="17" pos:column="14">{
      <if pos:line="18" pos:column="7">if<condition pos:line="18" pos:column="9">(<expr><call><name pos:line="18" pos:column="10">strlen<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">home<pos:position pos:line="18" pos:column="21"/></name></expr></argument>)<pos:position pos:line="18" pos:column="22"/></argument_list></call><operator pos:line="18" pos:column="22">&lt;<pos:position pos:line="18" pos:column="26"/></operator><operator pos:line="18" pos:column="23">(<pos:position pos:line="18" pos:column="24"/></operator><sizeof pos:line="18" pos:column="24">sizeof<argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">filebuffer<pos:position pos:line="18" pos:column="41"/></name></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></sizeof><operator pos:line="18" pos:column="42">-<pos:position pos:line="18" pos:column="43"/></operator><call><name pos:line="18" pos:column="43">strlen<pos:position pos:line="18" pos:column="49"/></name><argument_list pos:line="18" pos:column="49">(<argument><expr><name pos:line="18" pos:column="50">CURLRC<pos:position pos:line="18" pos:column="56"/></name></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call><operator pos:line="18" pos:column="57">)<pos:position pos:line="18" pos:column="58"/></operator></expr>)<pos:position pos:line="18" pos:column="59"/></condition><then pos:line="18" pos:column="59"> <block pos:line="18" pos:column="60">{

        <expr_stmt><expr><call><name pos:line="20" pos:column="9">snprintf<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">filebuffer<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="30">sizeof<argument_list pos:line="20" pos:column="36">(<argument><expr><name pos:line="20" pos:column="37">filebuffer<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></sizeof></expr></argument>,
                 <argument><expr><literal type="string" pos:line="21" pos:column="18">"%s%s%s"<pos:position pos:line="21" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="28">home<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">DIR_CHAR<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">CURLRC<pos:position pos:line="21" pos:column="50"/></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>

        <expr_stmt><expr><name pos:line="23" pos:column="9">filename<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">filebuffer<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="24" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">free<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">home<pos:position pos:line="25" pos:column="16"/></name></expr></argument>)<pos:position pos:line="25" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt> <comment type="block" pos:line="25" pos:column="19">/* we've used it, now free it */</comment>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">(<expr><call><name pos:line="29" pos:column="6">strcmp<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name pos:line="29" pos:column="13">filename<pos:position pos:line="29" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="29" pos:column="22">"-"<pos:position pos:line="29" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="5">file<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator> <call><name pos:line="30" pos:column="12">fopen<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><name pos:line="30" pos:column="18">filename<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="28">"r"<pos:position pos:line="30" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt></block></then>
  <else pos:line="31" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="5">file<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">=<pos:position pos:line="32" pos:column="11"/></operator> <name pos:line="32" pos:column="12">stdin<pos:position pos:line="32" pos:column="17"/></name></expr>;<pos:position pos:line="32" pos:column="18"/></expr_stmt></block></else></if>
  
  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><name pos:line="34" pos:column="6">file<pos:position pos:line="34" pos:column="10"/></name></expr>)<pos:position pos:line="34" pos:column="11"/></condition><then pos:line="34" pos:column="11"> <block pos:line="34" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">char<pos:position pos:line="35" pos:column="9"/></name> <modifier pos:line="35" pos:column="10">*<pos:position pos:line="35" pos:column="11"/></modifier></type><name pos:line="35" pos:column="11">line<pos:position pos:line="35" pos:column="15"/></name></decl>;<pos:position pos:line="35" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">char<pos:position pos:line="36" pos:column="9"/></name> <modifier pos:line="36" pos:column="10">*<pos:position pos:line="36" pos:column="11"/></modifier></type><name pos:line="36" pos:column="11">aline<pos:position pos:line="36" pos:column="16"/></name></decl>;<pos:position pos:line="36" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">char<pos:position pos:line="37" pos:column="9"/></name> <modifier pos:line="37" pos:column="10">*<pos:position pos:line="37" pos:column="11"/></modifier></type><name pos:line="37" pos:column="11">option<pos:position pos:line="37" pos:column="17"/></name></decl>;<pos:position pos:line="37" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">char<pos:position pos:line="38" pos:column="9"/></name> <modifier pos:line="38" pos:column="10">*<pos:position pos:line="38" pos:column="11"/></modifier></type><name pos:line="38" pos:column="11">param<pos:position pos:line="38" pos:column="16"/></name></decl>;<pos:position pos:line="38" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">int<pos:position pos:line="39" pos:column="8"/></name></type> <name pos:line="39" pos:column="9">lineno<pos:position pos:line="39" pos:column="15"/></name><init pos:line="39" pos:column="15">=<expr><literal type="number" pos:line="39" pos:column="16">0<pos:position pos:line="39" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">bool<pos:position pos:line="40" pos:column="9"/></name></type> <name pos:line="40" pos:column="10">alloced_param<pos:position pos:line="40" pos:column="23"/></name></decl>;<pos:position pos:line="40" pos:column="24"/></decl_stmt>

<cpp:define pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">define<pos:position pos:line="42" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="42" pos:column="9">isseparator<pos:position pos:line="42" pos:column="20"/></name><parameter_list pos:line="42" pos:column="20">(<parameter><type><name pos:line="42" pos:column="21">x<pos:position pos:line="42" pos:column="22"/></name></type></parameter>)<pos:position pos:line="42" pos:column="23"/></parameter_list></cpp:macro> <cpp:value pos:line="42" pos:column="24">(((x)=='=') || ((x) == ':'))<pos:position pos:line="42" pos:column="52"/></cpp:value></cpp:define>

    <while pos:line="44" pos:column="5">while <condition pos:line="44" pos:column="11">(<expr><name pos:line="44" pos:column="12">NULL<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">!=<pos:position pos:line="44" pos:column="19"/></operator> <operator pos:line="44" pos:column="20">(<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="21">aline<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">=<pos:position pos:line="44" pos:column="28"/></operator> <call><name pos:line="44" pos:column="29">my_get_line<pos:position pos:line="44" pos:column="40"/></name><argument_list pos:line="44" pos:column="40">(<argument><expr><name pos:line="44" pos:column="41">file<pos:position pos:line="44" pos:column="45"/></name></expr></argument>)<pos:position pos:line="44" pos:column="46"/></argument_list></call><operator pos:line="44" pos:column="46">)<pos:position pos:line="44" pos:column="47"/></operator></expr>)<pos:position pos:line="44" pos:column="48"/></condition> <block pos:line="44" pos:column="49">{
      <expr_stmt><expr><name pos:line="45" pos:column="7">lineno<pos:position pos:line="45" pos:column="13"/></name><operator pos:line="45" pos:column="13">++<pos:position pos:line="45" pos:column="15"/></operator></expr>;<pos:position pos:line="45" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><name pos:line="46" pos:column="7">line<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <name pos:line="46" pos:column="14">aline<pos:position pos:line="46" pos:column="19"/></name></expr>;<pos:position pos:line="46" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="47" pos:column="7">alloced_param<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="21">FALSE<pos:position pos:line="47" pos:column="26"/></name></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>

      <comment type="block" pos:line="49" pos:column="7">/* lines with # in the fist column is a comment! */</comment>
      <while pos:line="50" pos:column="7">while<condition pos:line="50" pos:column="12">(<expr><call><name pos:line="50" pos:column="13">isspace<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><operator pos:line="50" pos:column="21">(<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="22">int<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">)<pos:position pos:line="50" pos:column="26"/></operator><operator pos:line="50" pos:column="26">*<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="27">line<pos:position pos:line="50" pos:column="31"/></name></expr></argument>)<pos:position pos:line="50" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="33"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="9">line<pos:position pos:line="51" pos:column="13"/></name><operator pos:line="51" pos:column="13">++<pos:position pos:line="51" pos:column="15"/></operator></expr>;<pos:position pos:line="51" pos:column="16"/></expr_stmt></block></while>

      <switch pos:line="53" pos:column="7">switch<condition pos:line="53" pos:column="13">(<expr><operator pos:line="53" pos:column="14">*<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="15">line<pos:position pos:line="53" pos:column="19"/></name></expr>)<pos:position pos:line="53" pos:column="20"/></condition> <block pos:line="53" pos:column="21">{
      <case pos:line="54" pos:column="7">case <expr><literal type="char" pos:line="54" pos:column="12">'#'<pos:position pos:line="54" pos:column="15"/></literal></expr>:<pos:position pos:line="54" pos:column="16"/></case>
      <case pos:line="55" pos:column="7">case <expr><literal type="char" pos:line="55" pos:column="12">'/'<pos:position pos:line="55" pos:column="15"/></literal></expr>:<pos:position pos:line="55" pos:column="16"/></case>
      <case pos:line="56" pos:column="7">case <expr><literal type="char" pos:line="56" pos:column="12">'\r'<pos:position pos:line="56" pos:column="16"/></literal></expr>:<pos:position pos:line="56" pos:column="17"/></case>
      <case pos:line="57" pos:column="7">case <expr><literal type="char" pos:line="57" pos:column="12">'\n'<pos:position pos:line="57" pos:column="16"/></literal></expr>:<pos:position pos:line="57" pos:column="17"/></case>
      <case pos:line="58" pos:column="7">case <expr><literal type="char" pos:line="58" pos:column="12">'*'<pos:position pos:line="58" pos:column="15"/></literal></expr>:<pos:position pos:line="58" pos:column="16"/></case>
      <case pos:line="59" pos:column="7">case <expr><literal type="char" pos:line="59" pos:column="12">'\0'<pos:position pos:line="59" pos:column="16"/></literal></expr>:<pos:position pos:line="59" pos:column="17"/></case>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">free<pos:position pos:line="60" pos:column="13"/></name><argument_list pos:line="60" pos:column="13">(<argument><expr><name pos:line="60" pos:column="14">aline<pos:position pos:line="60" pos:column="19"/></name></expr></argument>)<pos:position pos:line="60" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="21"/></expr_stmt>
        <continue pos:line="61" pos:column="9">continue;<pos:position pos:line="61" pos:column="18"/></continue>
      }<pos:position pos:line="62" pos:column="8"/></block></switch>

      <comment type="block" pos:line="64" pos:column="7">/* the option keywords starts here */</comment>
      <expr_stmt><expr><name pos:line="65" pos:column="7">option<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">=<pos:position pos:line="65" pos:column="15"/></operator> <name pos:line="65" pos:column="16">line<pos:position pos:line="65" pos:column="20"/></name></expr>;<pos:position pos:line="65" pos:column="21"/></expr_stmt>
      <while pos:line="66" pos:column="7">while<condition pos:line="66" pos:column="12">(<expr><operator pos:line="66" pos:column="13">*<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="14">line<pos:position pos:line="66" pos:column="18"/></name> <operator pos:line="66" pos:column="19">&amp;&amp;<pos:position pos:line="66" pos:column="29"/></operator> <operator pos:line="66" pos:column="22">!<pos:position pos:line="66" pos:column="23"/></operator><call><name pos:line="66" pos:column="23">isspace<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><operator pos:line="66" pos:column="31">(<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="32">int<pos:position pos:line="66" pos:column="35"/></name><operator pos:line="66" pos:column="35">)<pos:position pos:line="66" pos:column="36"/></operator><operator pos:line="66" pos:column="36">*<pos:position pos:line="66" pos:column="37"/></operator><name pos:line="66" pos:column="37">line<pos:position pos:line="66" pos:column="41"/></name></expr></argument>)<pos:position pos:line="66" pos:column="42"/></argument_list></call> <operator pos:line="66" pos:column="43">&amp;&amp;<pos:position pos:line="66" pos:column="53"/></operator> <operator pos:line="66" pos:column="46">!<pos:position pos:line="66" pos:column="47"/></operator><call><name pos:line="66" pos:column="47">isseparator<pos:position pos:line="66" pos:column="58"/></name><argument_list pos:line="66" pos:column="58">(<argument><expr><operator pos:line="66" pos:column="59">*<pos:position pos:line="66" pos:column="60"/></operator><name pos:line="66" pos:column="60">line<pos:position pos:line="66" pos:column="64"/></name></expr></argument>)<pos:position pos:line="66" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="66"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="9">line<pos:position pos:line="67" pos:column="13"/></name><operator pos:line="67" pos:column="13">++<pos:position pos:line="67" pos:column="15"/></operator></expr>;<pos:position pos:line="67" pos:column="16"/></expr_stmt></block></while>
      <comment type="block" pos:line="68" pos:column="7">/* ... and has ended here */</comment>

      <expr_stmt><expr><operator pos:line="70" pos:column="7">*<pos:position pos:line="70" pos:column="8"/></operator><name pos:line="70" pos:column="8">line<pos:position pos:line="70" pos:column="12"/></name><operator pos:line="70" pos:column="12">++<pos:position pos:line="70" pos:column="14"/></operator><operator pos:line="70" pos:column="14">=<pos:position pos:line="70" pos:column="15"/></operator><literal type="number" pos:line="70" pos:column="15">0<pos:position pos:line="70" pos:column="16"/></literal></expr>;<pos:position pos:line="70" pos:column="17"/></expr_stmt> <comment type="block" pos:line="70" pos:column="18">/* zero terminate, we have a local copy of the data */</comment>

<cpp:ifdef pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">ifdef<pos:position pos:line="72" pos:column="7"/></cpp:directive> <name pos:line="72" pos:column="8">DEBUG_CONFIG<pos:position pos:line="72" pos:column="20"/></name></cpp:ifdef>
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">fprintf<pos:position pos:line="73" pos:column="14"/></name><argument_list pos:line="73" pos:column="14">(<argument><expr><name pos:line="73" pos:column="15">stderr<pos:position pos:line="73" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="23">"GOT: %s\n"<pos:position pos:line="73" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="36">option<pos:position pos:line="73" pos:column="42"/></name></expr></argument>)<pos:position pos:line="73" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif<pos:position pos:line="74" pos:column="7"/></cpp:directive></cpp:endif>

      <comment type="block" pos:line="76" pos:column="7">/* pass spaces and separator(s) */</comment>
      <while pos:line="77" pos:column="7">while<condition pos:line="77" pos:column="12">(<expr><call><name pos:line="77" pos:column="13">isspace<pos:position pos:line="77" pos:column="20"/></name><argument_list pos:line="77" pos:column="20">(<argument><expr><operator pos:line="77" pos:column="21">(<pos:position pos:line="77" pos:column="22"/></operator><name pos:line="77" pos:column="22">int<pos:position pos:line="77" pos:column="25"/></name><operator pos:line="77" pos:column="25">)<pos:position pos:line="77" pos:column="26"/></operator><operator pos:line="77" pos:column="26">*<pos:position pos:line="77" pos:column="27"/></operator><name pos:line="77" pos:column="27">line<pos:position pos:line="77" pos:column="31"/></name></expr></argument>)<pos:position pos:line="77" pos:column="32"/></argument_list></call> <operator pos:line="77" pos:column="33">||<pos:position pos:line="77" pos:column="35"/></operator> <call><name pos:line="77" pos:column="36">isseparator<pos:position pos:line="77" pos:column="47"/></name><argument_list pos:line="77" pos:column="47">(<argument><expr><operator pos:line="77" pos:column="48">*<pos:position pos:line="77" pos:column="49"/></operator><name pos:line="77" pos:column="49">line<pos:position pos:line="77" pos:column="53"/></name></expr></argument>)<pos:position pos:line="77" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="55"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="9">line<pos:position pos:line="78" pos:column="13"/></name><operator pos:line="78" pos:column="13">++<pos:position pos:line="78" pos:column="15"/></operator></expr>;<pos:position pos:line="78" pos:column="16"/></expr_stmt></block></while>
      
      <comment type="block" pos:line="80" pos:column="7">/* the parameter starts here (unless quoted) */</comment>
      <if pos:line="81" pos:column="7">if<condition pos:line="81" pos:column="9">(<expr><operator pos:line="81" pos:column="10">*<pos:position pos:line="81" pos:column="11"/></operator><name pos:line="81" pos:column="11">line<pos:position pos:line="81" pos:column="15"/></name> <operator pos:line="81" pos:column="16">==<pos:position pos:line="81" pos:column="18"/></operator> <literal type="char" pos:line="81" pos:column="19">'\"'<pos:position pos:line="81" pos:column="23"/></literal></expr>)<pos:position pos:line="81" pos:column="24"/></condition><then pos:line="81" pos:column="24"> <block pos:line="81" pos:column="25">{
        <decl_stmt><decl><type><name pos:line="82" pos:column="9">char<pos:position pos:line="82" pos:column="13"/></name> <modifier pos:line="82" pos:column="14">*<pos:position pos:line="82" pos:column="15"/></modifier></type><name pos:line="82" pos:column="15">ptr<pos:position pos:line="82" pos:column="18"/></name></decl>;<pos:position pos:line="82" pos:column="19"/></decl_stmt>
        <comment type="block" pos:line="83" pos:column="9">/* quoted parameter, do the qoute dance */</comment>
        <expr_stmt><expr><name pos:line="84" pos:column="9">line<pos:position pos:line="84" pos:column="13"/></name><operator pos:line="84" pos:column="13">++<pos:position pos:line="84" pos:column="15"/></operator></expr>;<pos:position pos:line="84" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name pos:line="85" pos:column="9">param<pos:position pos:line="85" pos:column="14"/></name><operator pos:line="85" pos:column="14">=<pos:position pos:line="85" pos:column="15"/></operator><call><name pos:line="85" pos:column="15">strdup<pos:position pos:line="85" pos:column="21"/></name><argument_list pos:line="85" pos:column="21">(<argument><expr><name pos:line="85" pos:column="22">line<pos:position pos:line="85" pos:column="26"/></name></expr></argument>)<pos:position pos:line="85" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="28"/></expr_stmt> <comment type="block" pos:line="85" pos:column="29">/* parameter */</comment>
        <expr_stmt><expr><name pos:line="86" pos:column="9">alloced_param<pos:position pos:line="86" pos:column="22"/></name><operator pos:line="86" pos:column="22">=<pos:position pos:line="86" pos:column="23"/></operator><name pos:line="86" pos:column="23">TRUE<pos:position pos:line="86" pos:column="27"/></name></expr>;<pos:position pos:line="86" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><name pos:line="88" pos:column="9">ptr<pos:position pos:line="88" pos:column="12"/></name><operator pos:line="88" pos:column="12">=<pos:position pos:line="88" pos:column="13"/></operator><name pos:line="88" pos:column="13">param<pos:position pos:line="88" pos:column="18"/></name></expr>;<pos:position pos:line="88" pos:column="19"/></expr_stmt>
        <while pos:line="89" pos:column="9">while<condition pos:line="89" pos:column="14">(<expr><operator pos:line="89" pos:column="15">*<pos:position pos:line="89" pos:column="16"/></operator><name pos:line="89" pos:column="16">line<pos:position pos:line="89" pos:column="20"/></name> <operator pos:line="89" pos:column="21">&amp;&amp;<pos:position pos:line="89" pos:column="31"/></operator> <operator pos:line="89" pos:column="24">(<pos:position pos:line="89" pos:column="25"/></operator><operator pos:line="89" pos:column="25">*<pos:position pos:line="89" pos:column="26"/></operator><name pos:line="89" pos:column="26">line<pos:position pos:line="89" pos:column="30"/></name> <operator pos:line="89" pos:column="31">!=<pos:position pos:line="89" pos:column="33"/></operator> <literal type="char" pos:line="89" pos:column="34">'\"'<pos:position pos:line="89" pos:column="38"/></literal><operator pos:line="89" pos:column="38">)<pos:position pos:line="89" pos:column="39"/></operator></expr>)<pos:position pos:line="89" pos:column="40"/></condition> <block pos:line="89" pos:column="41">{
          <if pos:line="90" pos:column="11">if<condition pos:line="90" pos:column="13">(<expr><operator pos:line="90" pos:column="14">*<pos:position pos:line="90" pos:column="15"/></operator><name pos:line="90" pos:column="15">line<pos:position pos:line="90" pos:column="19"/></name> <operator pos:line="90" pos:column="20">==<pos:position pos:line="90" pos:column="22"/></operator> <literal type="char" pos:line="90" pos:column="23">'\\'<pos:position pos:line="90" pos:column="27"/></literal></expr>)<pos:position pos:line="90" pos:column="28"/></condition><then pos:line="90" pos:column="28"> <block pos:line="90" pos:column="29">{
            <decl_stmt><decl><type><name pos:line="91" pos:column="13">char<pos:position pos:line="91" pos:column="17"/></name></type> <name pos:line="91" pos:column="18">out<pos:position pos:line="91" pos:column="21"/></name></decl>;<pos:position pos:line="91" pos:column="22"/></decl_stmt>
            <expr_stmt><expr><name pos:line="92" pos:column="13">line<pos:position pos:line="92" pos:column="17"/></name><operator pos:line="92" pos:column="17">++<pos:position pos:line="92" pos:column="19"/></operator></expr>;<pos:position pos:line="92" pos:column="20"/></expr_stmt>

            <comment type="block" pos:line="94" pos:column="13">/* default is to output the letter after the backslah */</comment>
            <switch pos:line="95" pos:column="13">switch<condition pos:line="95" pos:column="19">(<expr><name pos:line="95" pos:column="20">out<pos:position pos:line="95" pos:column="23"/></name> <operator pos:line="95" pos:column="24">=<pos:position pos:line="95" pos:column="25"/></operator> <operator pos:line="95" pos:column="26">*<pos:position pos:line="95" pos:column="27"/></operator><name pos:line="95" pos:column="27">line<pos:position pos:line="95" pos:column="31"/></name></expr>)<pos:position pos:line="95" pos:column="32"/></condition> <block pos:line="95" pos:column="33">{
            <case pos:line="96" pos:column="13">case <expr><literal type="char" pos:line="96" pos:column="18">'\0'<pos:position pos:line="96" pos:column="22"/></literal></expr>:<pos:position pos:line="96" pos:column="23"/></case>
              <continue pos:line="97" pos:column="15">continue;<pos:position pos:line="97" pos:column="24"/></continue> <comment type="block" pos:line="97" pos:column="25">/* this'll break out of the loop */</comment>
            <case pos:line="98" pos:column="13">case <expr><literal type="char" pos:line="98" pos:column="18">'t'<pos:position pos:line="98" pos:column="21"/></literal></expr>:<pos:position pos:line="98" pos:column="22"/></case>
              <expr_stmt><expr><name pos:line="99" pos:column="15">out<pos:position pos:line="99" pos:column="18"/></name><operator pos:line="99" pos:column="18">=<pos:position pos:line="99" pos:column="19"/></operator><literal type="char" pos:line="99" pos:column="19">'\t'<pos:position pos:line="99" pos:column="23"/></literal></expr>;<pos:position pos:line="99" pos:column="24"/></expr_stmt>
              <break pos:line="100" pos:column="15">break;<pos:position pos:line="100" pos:column="21"/></break>
            <case pos:line="101" pos:column="13">case <expr><literal type="char" pos:line="101" pos:column="18">'n'<pos:position pos:line="101" pos:column="21"/></literal></expr>:<pos:position pos:line="101" pos:column="22"/></case>
              <expr_stmt><expr><name pos:line="102" pos:column="15">out<pos:position pos:line="102" pos:column="18"/></name><operator pos:line="102" pos:column="18">=<pos:position pos:line="102" pos:column="19"/></operator><literal type="char" pos:line="102" pos:column="19">'\n'<pos:position pos:line="102" pos:column="23"/></literal></expr>;<pos:position pos:line="102" pos:column="24"/></expr_stmt>
              <break pos:line="103" pos:column="15">break;<pos:position pos:line="103" pos:column="21"/></break>
            <case pos:line="104" pos:column="13">case <expr><literal type="char" pos:line="104" pos:column="18">'r'<pos:position pos:line="104" pos:column="21"/></literal></expr>:<pos:position pos:line="104" pos:column="22"/></case>
              <expr_stmt><expr><name pos:line="105" pos:column="15">out<pos:position pos:line="105" pos:column="18"/></name><operator pos:line="105" pos:column="18">=<pos:position pos:line="105" pos:column="19"/></operator><literal type="char" pos:line="105" pos:column="19">'\r'<pos:position pos:line="105" pos:column="23"/></literal></expr>;<pos:position pos:line="105" pos:column="24"/></expr_stmt>
              <break pos:line="106" pos:column="15">break;<pos:position pos:line="106" pos:column="21"/></break>
            <case pos:line="107" pos:column="13">case <expr><literal type="char" pos:line="107" pos:column="18">'v'<pos:position pos:line="107" pos:column="21"/></literal></expr>:<pos:position pos:line="107" pos:column="22"/></case>
              <expr_stmt><expr><name pos:line="108" pos:column="15">out<pos:position pos:line="108" pos:column="18"/></name><operator pos:line="108" pos:column="18">=<pos:position pos:line="108" pos:column="19"/></operator><literal type="char" pos:line="108" pos:column="19">'\v'<pos:position pos:line="108" pos:column="23"/></literal></expr>;<pos:position pos:line="108" pos:column="24"/></expr_stmt>
              <break pos:line="109" pos:column="15">break;<pos:position pos:line="109" pos:column="21"/></break>
            }<pos:position pos:line="110" pos:column="14"/></block></switch>
            <expr_stmt><expr><operator pos:line="111" pos:column="13">*<pos:position pos:line="111" pos:column="14"/></operator><name pos:line="111" pos:column="14">ptr<pos:position pos:line="111" pos:column="17"/></name><operator pos:line="111" pos:column="17">++<pos:position pos:line="111" pos:column="19"/></operator><operator pos:line="111" pos:column="19">=<pos:position pos:line="111" pos:column="20"/></operator><name pos:line="111" pos:column="20">out<pos:position pos:line="111" pos:column="23"/></name></expr>;<pos:position pos:line="111" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name pos:line="112" pos:column="13">line<pos:position pos:line="112" pos:column="17"/></name><operator pos:line="112" pos:column="17">++<pos:position pos:line="112" pos:column="19"/></operator></expr>;<pos:position pos:line="112" pos:column="20"/></expr_stmt>
          }<pos:position pos:line="113" pos:column="12"/></block></then>
          <else pos:line="114" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><operator pos:line="115" pos:column="13">*<pos:position pos:line="115" pos:column="14"/></operator><name pos:line="115" pos:column="14">ptr<pos:position pos:line="115" pos:column="17"/></name><operator pos:line="115" pos:column="17">++<pos:position pos:line="115" pos:column="19"/></operator><operator pos:line="115" pos:column="19">=<pos:position pos:line="115" pos:column="20"/></operator><operator pos:line="115" pos:column="20">*<pos:position pos:line="115" pos:column="21"/></operator><name pos:line="115" pos:column="21">line<pos:position pos:line="115" pos:column="25"/></name><operator pos:line="115" pos:column="25">++<pos:position pos:line="115" pos:column="27"/></operator></expr>;<pos:position pos:line="115" pos:column="28"/></expr_stmt></block></else></if>
        }<pos:position pos:line="116" pos:column="10"/></block></while>
        <expr_stmt><expr><operator pos:line="117" pos:column="9">*<pos:position pos:line="117" pos:column="10"/></operator><name pos:line="117" pos:column="10">ptr<pos:position pos:line="117" pos:column="13"/></name><operator pos:line="117" pos:column="13">=<pos:position pos:line="117" pos:column="14"/></operator><literal type="number" pos:line="117" pos:column="14">0<pos:position pos:line="117" pos:column="15"/></literal></expr>;<pos:position pos:line="117" pos:column="16"/></expr_stmt> <comment type="block" pos:line="117" pos:column="17">/* always zero terminate */</comment>

      }<pos:position pos:line="119" pos:column="8"/></block></then>
      <else pos:line="120" pos:column="7">else <block pos:line="120" pos:column="12">{
        <expr_stmt><expr><name pos:line="121" pos:column="9">param<pos:position pos:line="121" pos:column="14"/></name><operator pos:line="121" pos:column="14">=<pos:position pos:line="121" pos:column="15"/></operator><name pos:line="121" pos:column="15">line<pos:position pos:line="121" pos:column="19"/></name></expr>;<pos:position pos:line="121" pos:column="20"/></expr_stmt> <comment type="block" pos:line="121" pos:column="21">/* parameter starts here */</comment>
        <while pos:line="122" pos:column="9">while<condition pos:line="122" pos:column="14">(<expr><operator pos:line="122" pos:column="15">*<pos:position pos:line="122" pos:column="16"/></operator><name pos:line="122" pos:column="16">line<pos:position pos:line="122" pos:column="20"/></name> <operator pos:line="122" pos:column="21">&amp;&amp;<pos:position pos:line="122" pos:column="31"/></operator> <operator pos:line="122" pos:column="24">!<pos:position pos:line="122" pos:column="25"/></operator><call><name pos:line="122" pos:column="25">isspace<pos:position pos:line="122" pos:column="32"/></name><argument_list pos:line="122" pos:column="32">(<argument><expr><operator pos:line="122" pos:column="33">(<pos:position pos:line="122" pos:column="34"/></operator><name pos:line="122" pos:column="34">int<pos:position pos:line="122" pos:column="37"/></name><operator pos:line="122" pos:column="37">)<pos:position pos:line="122" pos:column="38"/></operator><operator pos:line="122" pos:column="38">*<pos:position pos:line="122" pos:column="39"/></operator><name pos:line="122" pos:column="39">line<pos:position pos:line="122" pos:column="43"/></name></expr></argument>)<pos:position pos:line="122" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="45"/></condition>
          <block type="pseudo"><expr_stmt><expr><name pos:line="123" pos:column="11">line<pos:position pos:line="123" pos:column="15"/></name><operator pos:line="123" pos:column="15">++<pos:position pos:line="123" pos:column="17"/></operator></expr>;<pos:position pos:line="123" pos:column="18"/></expr_stmt></block></while>
        <expr_stmt><expr><operator pos:line="124" pos:column="9">*<pos:position pos:line="124" pos:column="10"/></operator><name pos:line="124" pos:column="10">line<pos:position pos:line="124" pos:column="14"/></name><operator pos:line="124" pos:column="14">=<pos:position pos:line="124" pos:column="15"/></operator><literal type="number" pos:line="124" pos:column="15">0<pos:position pos:line="124" pos:column="16"/></literal></expr>;<pos:position pos:line="124" pos:column="17"/></expr_stmt> <comment type="block" pos:line="124" pos:column="18">/* zero terminate */</comment>
      }<pos:position pos:line="125" pos:column="8"/></block></else></if>
<cpp:ifdef pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">ifdef<pos:position pos:line="126" pos:column="7"/></cpp:directive> <name pos:line="126" pos:column="8">DEBUG_CONFIG<pos:position pos:line="126" pos:column="20"/></name></cpp:ifdef>
      <expr_stmt><expr><call><name pos:line="127" pos:column="7">fprintf<pos:position pos:line="127" pos:column="14"/></name><argument_list pos:line="127" pos:column="14">(<argument><expr><name pos:line="127" pos:column="15">stderr<pos:position pos:line="127" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="23">"PARAM: \"%s\"\n"<pos:position pos:line="127" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="127" pos:column="42">param<pos:position pos:line="127" pos:column="47"/></name></expr></argument>)<pos:position pos:line="127" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="128" pos:column="1">#<cpp:directive pos:line="128" pos:column="2">endif<pos:position pos:line="128" pos:column="7"/></cpp:directive></cpp:endif>
      <expr_stmt><expr><name pos:line="129" pos:column="7">res<pos:position pos:line="129" pos:column="10"/></name> <operator pos:line="129" pos:column="11">=<pos:position pos:line="129" pos:column="12"/></operator> <call><name pos:line="129" pos:column="13">getparameter<pos:position pos:line="129" pos:column="25"/></name><argument_list pos:line="129" pos:column="25">(<argument><expr><name pos:line="129" pos:column="26">option<pos:position pos:line="129" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="34">param<pos:position pos:line="129" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="129" pos:column="41">&amp;<pos:position pos:line="129" pos:column="46"/></operator><name pos:line="129" pos:column="42">usedarg<pos:position pos:line="129" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="51">config<pos:position pos:line="129" pos:column="57"/></name></expr></argument>)<pos:position pos:line="129" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="59"/></expr_stmt>

      <if pos:line="131" pos:column="7">if<condition pos:line="131" pos:column="9">(<expr><operator pos:line="131" pos:column="10">*<pos:position pos:line="131" pos:column="11"/></operator><name pos:line="131" pos:column="11">param<pos:position pos:line="131" pos:column="16"/></name> <operator pos:line="131" pos:column="17">&amp;&amp;<pos:position pos:line="131" pos:column="27"/></operator> <operator pos:line="131" pos:column="20">!<pos:position pos:line="131" pos:column="21"/></operator><name pos:line="131" pos:column="21">usedarg<pos:position pos:line="131" pos:column="28"/></name></expr>)<pos:position pos:line="131" pos:column="29"/></condition><then pos:line="131" pos:column="29">
        <comment type="block" pos:line="132" pos:column="9">/* we passed in a parameter that wasn't used! */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="133" pos:column="9">res<pos:position pos:line="133" pos:column="12"/></name> <operator pos:line="133" pos:column="13">=<pos:position pos:line="133" pos:column="14"/></operator> <name pos:line="133" pos:column="15">PARAM_GOT_EXTRA_PARAMETER<pos:position pos:line="133" pos:column="40"/></name></expr>;<pos:position pos:line="133" pos:column="41"/></expr_stmt></block></then></if>

      <if pos:line="135" pos:column="7">if<condition pos:line="135" pos:column="9">(<expr><name pos:line="135" pos:column="10">res<pos:position pos:line="135" pos:column="13"/></name> <operator pos:line="135" pos:column="14">!=<pos:position pos:line="135" pos:column="16"/></operator> <name pos:line="135" pos:column="17">PARAM_OK<pos:position pos:line="135" pos:column="25"/></name></expr>)<pos:position pos:line="135" pos:column="26"/></condition><then pos:line="135" pos:column="26"> <block pos:line="135" pos:column="27">{
        <comment type="block" pos:line="136" pos:column="9">/* the help request isn't really an error */</comment>
        <if pos:line="137" pos:column="9">if<condition pos:line="137" pos:column="11">(<expr><operator pos:line="137" pos:column="12">!<pos:position pos:line="137" pos:column="13"/></operator><call><name pos:line="137" pos:column="13">strcmp<pos:position pos:line="137" pos:column="19"/></name><argument_list pos:line="137" pos:column="19">(<argument><expr><name pos:line="137" pos:column="20">filename<pos:position pos:line="137" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="30">"-"<pos:position pos:line="137" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="137" pos:column="35"/></condition><then pos:line="137" pos:column="35"> <block pos:line="137" pos:column="36">{
          <expr_stmt><expr><name pos:line="138" pos:column="11">filename<pos:position pos:line="138" pos:column="19"/></name><operator pos:line="138" pos:column="19">=<pos:position pos:line="138" pos:column="20"/></operator><operator pos:line="138" pos:column="20">(<pos:position pos:line="138" pos:column="21"/></operator><name pos:line="138" pos:column="21">char<pos:position pos:line="138" pos:column="25"/></name> <operator pos:line="138" pos:column="26">*<pos:position pos:line="138" pos:column="27"/></operator><operator pos:line="138" pos:column="27">)<pos:position pos:line="138" pos:column="28"/></operator><literal type="string" pos:line="138" pos:column="28">"&lt;stdin&gt;"<pos:position pos:line="138" pos:column="43"/></literal></expr>;<pos:position pos:line="138" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="139" pos:column="10"/></block></then></if>
        <if pos:line="140" pos:column="9">if<condition pos:line="140" pos:column="11">(<expr><name pos:line="140" pos:column="12">PARAM_HELP_REQUESTED<pos:position pos:line="140" pos:column="32"/></name> <operator pos:line="140" pos:column="33">!=<pos:position pos:line="140" pos:column="35"/></operator> <name pos:line="140" pos:column="36">res<pos:position pos:line="140" pos:column="39"/></name></expr>)<pos:position pos:line="140" pos:column="40"/></condition><then pos:line="140" pos:column="40"> <block pos:line="140" pos:column="41">{
          <decl_stmt><decl><type><specifier pos:line="141" pos:column="11">const<pos:position pos:line="141" pos:column="16"/></specifier> <name pos:line="141" pos:column="17">char<pos:position pos:line="141" pos:column="21"/></name> <modifier pos:line="141" pos:column="22">*<pos:position pos:line="141" pos:column="23"/></modifier></type><name pos:line="141" pos:column="23">reason<pos:position pos:line="141" pos:column="29"/></name></decl>;<pos:position pos:line="141" pos:column="30"/></decl_stmt>
          <switch pos:line="142" pos:column="11">switch<condition pos:line="142" pos:column="17">(<expr><name pos:line="142" pos:column="18">res<pos:position pos:line="142" pos:column="21"/></name></expr>)<pos:position pos:line="142" pos:column="22"/></condition> <block pos:line="142" pos:column="23">{
          <default pos:line="143" pos:column="11">default:<pos:position pos:line="143" pos:column="19"/></default>
          <case pos:line="144" pos:column="11">case <expr><name pos:line="144" pos:column="16">PARAM_GOT_EXTRA_PARAMETER<pos:position pos:line="144" pos:column="41"/></name></expr>:<pos:position pos:line="144" pos:column="42"/></case>
            <expr_stmt><expr><name pos:line="145" pos:column="13">reason<pos:position pos:line="145" pos:column="19"/></name> <operator pos:line="145" pos:column="20">=<pos:position pos:line="145" pos:column="21"/></operator> <literal type="string" pos:line="145" pos:column="22">"had unsupported trailing garbage"<pos:position pos:line="145" pos:column="56"/></literal></expr>;<pos:position pos:line="145" pos:column="57"/></expr_stmt>
            <break pos:line="146" pos:column="13">break;<pos:position pos:line="146" pos:column="19"/></break>
          <case pos:line="147" pos:column="11">case <expr><name pos:line="147" pos:column="16">PARAM_OPTION_UNKNOWN<pos:position pos:line="147" pos:column="36"/></name></expr>:<pos:position pos:line="147" pos:column="37"/></case>
            <expr_stmt><expr><name pos:line="148" pos:column="13">reason<pos:position pos:line="148" pos:column="19"/></name> <operator pos:line="148" pos:column="20">=<pos:position pos:line="148" pos:column="21"/></operator> <literal type="string" pos:line="148" pos:column="22">"is unknown"<pos:position pos:line="148" pos:column="34"/></literal></expr>;<pos:position pos:line="148" pos:column="35"/></expr_stmt>
            <break pos:line="149" pos:column="13">break;<pos:position pos:line="149" pos:column="19"/></break>
          <case pos:line="150" pos:column="11">case <expr><name pos:line="150" pos:column="16">PARAM_OPTION_AMBIGUOUS<pos:position pos:line="150" pos:column="38"/></name></expr>:<pos:position pos:line="150" pos:column="39"/></case>
            <expr_stmt><expr><name pos:line="151" pos:column="13">reason<pos:position pos:line="151" pos:column="19"/></name> <operator pos:line="151" pos:column="20">=<pos:position pos:line="151" pos:column="21"/></operator> <literal type="string" pos:line="151" pos:column="22">"is ambiguous"<pos:position pos:line="151" pos:column="36"/></literal></expr>;<pos:position pos:line="151" pos:column="37"/></expr_stmt>
            <break pos:line="152" pos:column="13">break;<pos:position pos:line="152" pos:column="19"/></break>
          <case pos:line="153" pos:column="11">case <expr><name pos:line="153" pos:column="16">PARAM_REQUIRES_PARAMETER<pos:position pos:line="153" pos:column="40"/></name></expr>:<pos:position pos:line="153" pos:column="41"/></case>
            <expr_stmt><expr><name pos:line="154" pos:column="13">reason<pos:position pos:line="154" pos:column="19"/></name> <operator pos:line="154" pos:column="20">=<pos:position pos:line="154" pos:column="21"/></operator> <literal type="string" pos:line="154" pos:column="22">"requires parameter"<pos:position pos:line="154" pos:column="42"/></literal></expr>;<pos:position pos:line="154" pos:column="43"/></expr_stmt>
            <break pos:line="155" pos:column="13">break;<pos:position pos:line="155" pos:column="19"/></break>
          <case pos:line="156" pos:column="11">case <expr><name pos:line="156" pos:column="16">PARAM_BAD_USE<pos:position pos:line="156" pos:column="29"/></name></expr>:<pos:position pos:line="156" pos:column="30"/></case>
            <expr_stmt><expr><name pos:line="157" pos:column="13">reason<pos:position pos:line="157" pos:column="19"/></name> <operator pos:line="157" pos:column="20">=<pos:position pos:line="157" pos:column="21"/></operator> <literal type="string" pos:line="157" pos:column="22">"is badly used here"<pos:position pos:line="157" pos:column="42"/></literal></expr>;<pos:position pos:line="157" pos:column="43"/></expr_stmt>
            <break pos:line="158" pos:column="13">break;<pos:position pos:line="158" pos:column="19"/></break>
          }<pos:position pos:line="159" pos:column="12"/></block></switch>
          <expr_stmt><expr><call><name pos:line="160" pos:column="11">fprintf<pos:position pos:line="160" pos:column="18"/></name><argument_list pos:line="160" pos:column="18">(<argument><expr><name pos:line="160" pos:column="19">stderr<pos:position pos:line="160" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="27">"%s:%d: warning: '%s' %s\n"<pos:position pos:line="160" pos:column="54"/></literal></expr></argument>,
                  <argument><expr><name pos:line="161" pos:column="19">filename<pos:position pos:line="161" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="29">lineno<pos:position pos:line="161" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="37">option<pos:position pos:line="161" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="45">reason<pos:position pos:line="161" pos:column="51"/></name></expr></argument>)<pos:position pos:line="161" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="162" pos:column="10"/></block></then></if>
      }<pos:position pos:line="163" pos:column="8"/></block></then></if>

      <if pos:line="165" pos:column="7">if<condition pos:line="165" pos:column="9">(<expr><name pos:line="165" pos:column="10">alloced_param<pos:position pos:line="165" pos:column="23"/></name></expr>)<pos:position pos:line="165" pos:column="24"/></condition><then pos:line="165" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="166" pos:column="9">free<pos:position pos:line="166" pos:column="13"/></name><argument_list pos:line="166" pos:column="13">(<argument><expr><name pos:line="166" pos:column="14">param<pos:position pos:line="166" pos:column="19"/></name></expr></argument>)<pos:position pos:line="166" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="21"/></expr_stmt></block></then></if>

      <expr_stmt><expr><call><name pos:line="168" pos:column="7">free<pos:position pos:line="168" pos:column="11"/></name><argument_list pos:line="168" pos:column="11">(<argument><expr><name pos:line="168" pos:column="12">aline<pos:position pos:line="168" pos:column="17"/></name></expr></argument>)<pos:position pos:line="168" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="169" pos:column="6"/></block></while>
    <if pos:line="170" pos:column="5">if<condition pos:line="170" pos:column="7">(<expr><name pos:line="170" pos:column="8">file<pos:position pos:line="170" pos:column="12"/></name> <operator pos:line="170" pos:column="13">!=<pos:position pos:line="170" pos:column="15"/></operator> <name pos:line="170" pos:column="16">stdin<pos:position pos:line="170" pos:column="21"/></name></expr>)<pos:position pos:line="170" pos:column="22"/></condition><then pos:line="170" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="171" pos:column="7">fclose<pos:position pos:line="171" pos:column="13"/></name><argument_list pos:line="171" pos:column="13">(<argument><expr><name pos:line="171" pos:column="14">file<pos:position pos:line="171" pos:column="18"/></name></expr></argument>)<pos:position pos:line="171" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="20"/></expr_stmt></block></then></if>
  }<pos:position pos:line="172" pos:column="4"/></block></then></if>
  <return pos:line="173" pos:column="3">return <expr><literal type="number" pos:line="173" pos:column="10">0<pos:position pos:line="173" pos:column="11"/></literal></expr>;<pos:position pos:line="173" pos:column="12"/></return>
}<pos:position pos:line="174" pos:column="2"/></block></function></unit>

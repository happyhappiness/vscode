<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_227_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">multi_timer_cb<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">CURLM<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">multi<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">long<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">timeout_ms<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">GlobalInfo<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">g<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">fprintf<pos:position pos:line="3" pos:column="10"/></name><argument_list pos:line="3" pos:column="10">(<argument><expr><name pos:line="3" pos:column="11">MSG_OUT<pos:position pos:line="3" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="20">"\nmulti_timer_cb: timeout_ms %ld"<pos:position pos:line="3" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="56">timeout_ms<pos:position pos:line="3" pos:column="66"/></name></expr></argument>)<pos:position pos:line="3" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="68"/></expr_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* cancel running timer */</comment>
  <expr_stmt><expr><call><name><name pos:line="6" pos:column="3">timer<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">.<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">cancel<pos:position pos:line="6" pos:column="15"/></name></name><argument_list pos:line="6" pos:column="15">()<pos:position pos:line="6" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="18"/></expr_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name pos:line="8" pos:column="6">timeout_ms<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">&gt;<pos:position pos:line="8" pos:column="21"/></operator> <literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21"> <block pos:line="8" pos:column="22">{
    <comment type="block" pos:line="9" pos:column="5">/* update timer */</comment>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">timer<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">.<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">expires_from_now<pos:position pos:line="10" pos:column="27"/></name></name><argument_list pos:line="10" pos:column="27">(<argument><expr><call><name><name pos:line="10" pos:column="28">boost<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">::<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">posix_time<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">::<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="47">millisec<pos:position pos:line="10" pos:column="55"/></name></name><argument_list pos:line="10" pos:column="55">(<argument><expr><name pos:line="10" pos:column="56">timeout_ms<pos:position pos:line="10" pos:column="66"/></name></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">timer<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">.<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">async_wait<pos:position pos:line="11" pos:column="21"/></name></name><argument_list pos:line="11" pos:column="21">(<argument><expr><call><name><name pos:line="11" pos:column="22">boost<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">::<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">bind<pos:position pos:line="11" pos:column="33"/></name></name><argument_list pos:line="11" pos:column="33">(<argument><expr><operator pos:line="11" pos:column="34">&amp;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="35">timer_cb<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">_1<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">g<pos:position pos:line="11" pos:column="50"/></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then>
  <elseif pos:line="13" pos:column="3">else <if pos:line="13" pos:column="8">if<condition pos:line="13" pos:column="10">(<expr><name pos:line="13" pos:column="11">timeout_ms<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">==<pos:position pos:line="13" pos:column="24"/></operator> <literal type="number" pos:line="13" pos:column="25">0<pos:position pos:line="13" pos:column="26"/></literal></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27"> <block pos:line="13" pos:column="28">{
    <comment type="block" pos:line="14" pos:column="5">/* call timeout function immediately */</comment>
    <decl_stmt><decl><type><name><name pos:line="15" pos:column="5">boost<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">::<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">system<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">::<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">error_code<pos:position pos:line="15" pos:column="30"/></name></name></type> <name pos:line="15" pos:column="31">error<pos:position pos:line="15" pos:column="36"/></name></decl>;<pos:position pos:line="15" pos:column="37"/></decl_stmt> <comment type="block" pos:line="15" pos:column="38">/*success*/</comment>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">timer_cb<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name pos:line="16" pos:column="14">error<pos:position pos:line="16" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="21">g<pos:position pos:line="16" pos:column="22"/></name></expr></argument>)<pos:position pos:line="16" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="19" pos:column="3">return <expr><literal type="number" pos:line="19" pos:column="10">0<pos:position pos:line="19" pos:column="11"/></literal></expr>;<pos:position pos:line="19" pos:column="12"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

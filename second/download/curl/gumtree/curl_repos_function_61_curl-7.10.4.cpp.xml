<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_61_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">strdup<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">str<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="24"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">len<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">newstr<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">len<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <call><name pos:line="6" pos:column="9">strlen<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">str<pos:position pos:line="6" pos:column="19"/></name></expr></argument>)<pos:position pos:line="6" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">newstr<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">char<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></operator><operator pos:line="7" pos:column="19">)<pos:position pos:line="7" pos:column="20"/></operator> <call><name pos:line="7" pos:column="21">malloc<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><operator pos:line="7" pos:column="28">(<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">len<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">+<pos:position pos:line="7" pos:column="33"/></operator><literal type="number" pos:line="7" pos:column="33">1<pos:position pos:line="7" pos:column="34"/></literal><operator pos:line="7" pos:column="34">)<pos:position pos:line="7" pos:column="35"/></operator><operator pos:line="7" pos:column="35">*<pos:position pos:line="7" pos:column="36"/></operator><sizeof pos:line="7" pos:column="36">sizeof<argument_list pos:line="7" pos:column="42">(<argument><expr><name pos:line="7" pos:column="43">char<pos:position pos:line="7" pos:column="47"/></name></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="50"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">newstr<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">char<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></operator><operator pos:line="9" pos:column="19">)<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">NULL<pos:position pos:line="9" pos:column="24"/></name></expr>;<pos:position pos:line="9" pos:column="25"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">strcpy<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><name pos:line="11" pos:column="10">newstr<pos:position pos:line="11" pos:column="16"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="17">str<pos:position pos:line="11" pos:column="20"/></name></expr></argument>)<pos:position pos:line="11" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>

  <return pos:line="13" pos:column="3">return <expr><name pos:line="13" pos:column="10">newstr<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></return>

}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1199_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">imap_parse_custom_request<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">connectdata<pos:position pos:line="1" pos:column="61"/></name></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">conn<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">IMAP<pos:position pos:line="5" pos:column="14"/></name></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">imap<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name><name pos:line="5" pos:column="23">data<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">req<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">.<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">protop<pos:position pos:line="5" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">custom<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><name><name pos:line="6" pos:column="24">data<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">set<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">.<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="34">str<pos:position pos:line="6" pos:column="37"/></name><index pos:line="6" pos:column="37">[<expr><name pos:line="6" pos:column="38">STRING_CUSTOMREQUEST<pos:position pos:line="6" pos:column="58"/></name></expr>]<pos:position pos:line="6" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="60"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name pos:line="8" pos:column="6">custom<pos:position pos:line="8" pos:column="12"/></name></expr>)<pos:position pos:line="8" pos:column="13"/></condition><then pos:line="8" pos:column="13"> <block pos:line="8" pos:column="14">{
    <comment type="block" pos:line="9" pos:column="5">/* URL decode the custom request */</comment>
    <expr_stmt><expr><name pos:line="10" pos:column="5">result<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">Curl_urldecode<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">data<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="35">custom<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="43">0<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="46">&amp;<pos:position pos:line="10" pos:column="51"/></operator><name><name pos:line="10" pos:column="47">imap<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">-&gt;<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="53">custom<pos:position pos:line="10" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="61">NULL<pos:position pos:line="10" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="67">TRUE<pos:position pos:line="10" pos:column="71"/></name></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="73"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* Extract the parameters if specified */</comment>
    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">(<expr><operator pos:line="13" pos:column="8">!<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">result<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16"> <block pos:line="13" pos:column="17">{
      <decl_stmt><decl><type><specifier pos:line="14" pos:column="7">const<pos:position pos:line="14" pos:column="12"/></specifier> <name pos:line="14" pos:column="13">char<pos:position pos:line="14" pos:column="17"/></name> <modifier pos:line="14" pos:column="18">*<pos:position pos:line="14" pos:column="19"/></modifier></type><name pos:line="14" pos:column="19">params<pos:position pos:line="14" pos:column="25"/></name> <init pos:line="14" pos:column="26">= <expr><name><name pos:line="14" pos:column="28">imap<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">custom<pos:position pos:line="14" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="41"/></decl_stmt>

      <while pos:line="16" pos:column="7">while<condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">*<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">params<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">&amp;&amp;<pos:position pos:line="16" pos:column="31"/></operator> <operator pos:line="16" pos:column="24">*<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">params<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">!=<pos:position pos:line="16" pos:column="34"/></operator> <literal type="char" pos:line="16" pos:column="35">' '<pos:position pos:line="16" pos:column="38"/></literal></expr>)<pos:position pos:line="16" pos:column="39"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="9">params<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">++<pos:position pos:line="17" pos:column="17"/></operator></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt></block></while>

      <if pos:line="19" pos:column="7">if<condition pos:line="19" pos:column="9">(<expr><operator pos:line="19" pos:column="10">*<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">params<pos:position pos:line="19" pos:column="17"/></name></expr>)<pos:position pos:line="19" pos:column="18"/></condition><then pos:line="19" pos:column="18"> <block pos:line="19" pos:column="19">{
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">imap<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">custom_params<pos:position pos:line="20" pos:column="28"/></name></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <call><name pos:line="20" pos:column="31">strdup<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">params<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">imap<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">custom<pos:position pos:line="21" pos:column="21"/></name><index pos:line="21" pos:column="21">[<expr><name pos:line="21" pos:column="22">params<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">-<pos:position pos:line="21" pos:column="30"/></operator> <name><name pos:line="21" pos:column="31">imap<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">custom<pos:position pos:line="21" pos:column="43"/></name></name></expr>]<pos:position pos:line="21" pos:column="44"/></index></name> <operator pos:line="21" pos:column="45">=<pos:position pos:line="21" pos:column="46"/></operator> <literal type="char" pos:line="21" pos:column="47">'\0'<pos:position pos:line="21" pos:column="51"/></literal></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>

        <if pos:line="23" pos:column="9">if<condition pos:line="23" pos:column="11">(<expr><operator pos:line="23" pos:column="12">!<pos:position pos:line="23" pos:column="13"/></operator><name><name pos:line="23" pos:column="13">imap<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">custom_params<pos:position pos:line="23" pos:column="32"/></name></name></expr>)<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33">
          <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="11">result<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <name pos:line="24" pos:column="20">CURLE_OUT_OF_MEMORY<pos:position pos:line="24" pos:column="39"/></name></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt></block></then></if>
      }<pos:position pos:line="25" pos:column="8"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <return pos:line="29" pos:column="3">return <expr><name pos:line="29" pos:column="10">result<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

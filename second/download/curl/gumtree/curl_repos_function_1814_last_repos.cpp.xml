<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1814_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">octet2str<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">beg<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">end<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">n<pos:position pos:line="3" pos:column="11"/></name> <init pos:line="3" pos:column="12">= <expr><name pos:line="3" pos:column="14">end<pos:position pos:line="3" pos:column="17"/></name> <operator pos:line="3" pos:column="18">-<pos:position pos:line="3" pos:column="19"/></operator> <name pos:line="3" pos:column="20">beg<pos:position pos:line="3" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">buf<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* Convert an ASN.1 octet string to a printable string.
     Return the dynamically allocated string, or NULL if an error occurs. */</comment>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">n<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">&lt;=<pos:position pos:line="9" pos:column="13"/></operator> <operator pos:line="9" pos:column="11">(<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">CURL_SIZE_T_MAX<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">-<pos:position pos:line="9" pos:column="29"/></operator> <literal type="number" pos:line="9" pos:column="30">1<pos:position pos:line="9" pos:column="31"/></literal><operator pos:line="9" pos:column="31">)<pos:position pos:line="9" pos:column="32"/></operator> <operator pos:line="9" pos:column="33">/<pos:position pos:line="9" pos:column="34"/></operator> <literal type="number" pos:line="9" pos:column="35">3<pos:position pos:line="9" pos:column="36"/></literal></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37"> <block pos:line="9" pos:column="38">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">buf<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">malloc<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><literal type="number" pos:line="10" pos:column="18">3<pos:position pos:line="10" pos:column="19"/></literal> <operator pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">n<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">+<pos:position pos:line="10" pos:column="25"/></operator> <literal type="number" pos:line="10" pos:column="26">1<pos:position pos:line="10" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
    <if pos:line="11" pos:column="5">if<condition pos:line="11" pos:column="7">(<expr><name pos:line="11" pos:column="8">buf<pos:position pos:line="11" pos:column="11"/></name></expr>)<pos:position pos:line="11" pos:column="12"/></condition><then pos:line="11" pos:column="12">
      <block type="pseudo"><for pos:line="12" pos:column="7">for<control pos:line="12" pos:column="10">(<init><expr><name pos:line="12" pos:column="11">n<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <literal type="number" pos:line="12" pos:column="15">0<pos:position pos:line="12" pos:column="16"/></literal></expr>;<pos:position pos:line="12" pos:column="17"/></init> <condition><expr><name pos:line="12" pos:column="18">beg<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">&lt;<pos:position pos:line="12" pos:column="26"/></operator> <name pos:line="12" pos:column="24">end<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></condition> <incr><expr><name pos:line="12" pos:column="29">n<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">+=<pos:position pos:line="12" pos:column="33"/></operator> <literal type="number" pos:line="12" pos:column="34">3<pos:position pos:line="12" pos:column="35"/></literal></expr></incr>)<pos:position pos:line="12" pos:column="36"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="9">snprintf<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">buf<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">+<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">n<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="27">4<pos:position pos:line="13" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="30">"%02x:"<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="39">*<pos:position pos:line="13" pos:column="40"/></operator><operator pos:line="13" pos:column="40">(<pos:position pos:line="13" pos:column="41"/></operator><specifier pos:line="13" pos:column="41">const<pos:position pos:line="13" pos:column="46"/></specifier> <name pos:line="13" pos:column="47">unsigned<pos:position pos:line="13" pos:column="55"/></name> <name pos:line="13" pos:column="56">char<pos:position pos:line="13" pos:column="60"/></name> <operator pos:line="13" pos:column="61">*<pos:position pos:line="13" pos:column="62"/></operator><operator pos:line="13" pos:column="62">)<pos:position pos:line="13" pos:column="63"/></operator> <name pos:line="13" pos:column="64">beg<pos:position pos:line="13" pos:column="67"/></name><operator pos:line="13" pos:column="67">++<pos:position pos:line="13" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="71"/></expr_stmt></block></for></block></then></if>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
  <return pos:line="15" pos:column="3">return <expr><name pos:line="15" pos:column="10">buf<pos:position pos:line="15" pos:column="13"/></name></expr>;<pos:position pos:line="15" pos:column="14"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_399_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">addFd<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name><name pos:line="1" pos:column="19">struct<pos:position pos:line="1" pos:column="25"/></name> <name pos:line="1" pos:column="26">Sockets<pos:position pos:line="1" pos:column="33"/></name></name><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">sockets<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">curl_socket_t<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">fd<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="62">const<pos:position pos:line="1" pos:column="67"/></specifier> <name pos:line="1" pos:column="68">char<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">what<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" format="doxygen" pos:line="3" pos:column="3">/**
   * To ensure we only have each file descriptor once, we remove it then add
   * it again.
   */</comment>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">fprintf<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">stderr<pos:position pos:line="7" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"Add socket fd %d for %s\n"<pos:position pos:line="7" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="48">(<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="49">int<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">)<pos:position pos:line="7" pos:column="53"/></operator> <name pos:line="7" pos:column="54">fd<pos:position pos:line="7" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="58">what<pos:position pos:line="7" pos:column="62"/></name></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">removeFd<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">sockets<pos:position pos:line="8" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="21">fd<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
  <comment type="block" pos:line="9" pos:column="3">/*
   * Allocate array storage when required.
   */</comment>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><operator pos:line="12" pos:column="6">!<pos:position pos:line="12" pos:column="7"/></operator><name><name pos:line="12" pos:column="7">sockets<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">sockets<pos:position pos:line="12" pos:column="23"/></name></name></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24"> <block pos:line="12" pos:column="25">{
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">sockets<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">sockets<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <call><name pos:line="13" pos:column="24">malloc<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><sizeof pos:line="13" pos:column="31">sizeof<argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">curl_socket_t<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></sizeof> <operator pos:line="13" pos:column="53">*<pos:position pos:line="13" pos:column="54"/></operator> <literal type="number" pos:line="13" pos:column="55">20U<pos:position pos:line="13" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><operator pos:line="14" pos:column="8">!<pos:position pos:line="14" pos:column="9"/></operator><name><name pos:line="14" pos:column="9">sockets<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">sockets<pos:position pos:line="14" pos:column="25"/></name></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
      <block type="pseudo"><return pos:line="15" pos:column="7">return;<pos:position pos:line="15" pos:column="14"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">sockets<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">max_count<pos:position pos:line="16" pos:column="23"/></name></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <literal type="number" pos:line="16" pos:column="26">20<pos:position pos:line="16" pos:column="28"/></literal></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then>
  <elseif pos:line="18" pos:column="3">else <if pos:line="18" pos:column="8">if<condition pos:line="18" pos:column="10">(<expr><name><name pos:line="18" pos:column="11">sockets<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">count<pos:position pos:line="18" pos:column="25"/></name></name> <operator pos:line="18" pos:column="26">+<pos:position pos:line="18" pos:column="27"/></operator> <literal type="number" pos:line="18" pos:column="28">1<pos:position pos:line="18" pos:column="29"/></literal> <operator pos:line="18" pos:column="30">&gt;<pos:position pos:line="18" pos:column="34"/></operator> <name><name pos:line="18" pos:column="32">sockets<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">max_count<pos:position pos:line="18" pos:column="50"/></name></name></expr>)<pos:position pos:line="18" pos:column="51"/></condition><then pos:line="18" pos:column="51"> <block pos:line="18" pos:column="52">{
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">curl_socket_t<pos:position pos:line="19" pos:column="18"/></name> <modifier pos:line="19" pos:column="19">*<pos:position pos:line="19" pos:column="20"/></modifier></type><name pos:line="19" pos:column="20">oldptr<pos:position pos:line="19" pos:column="26"/></name> <init pos:line="19" pos:column="27">= <expr><name><name pos:line="19" pos:column="29">sockets<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">sockets<pos:position pos:line="19" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="19" pos:column="46"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">sockets<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">sockets<pos:position pos:line="20" pos:column="21"/></name></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <call><name pos:line="20" pos:column="24">realloc<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">oldptr<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="40">sizeof<argument_list pos:line="20" pos:column="46">(<argument><expr><name pos:line="20" pos:column="47">curl_socket_t<pos:position pos:line="20" pos:column="60"/></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></sizeof> <operator pos:line="20" pos:column="62">*<pos:position pos:line="20" pos:column="63"/></operator>
                               <operator pos:line="21" pos:column="32">(<pos:position pos:line="21" pos:column="33"/></operator><name><name pos:line="21" pos:column="33">sockets<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">-&gt;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="42">max_count<pos:position pos:line="21" pos:column="51"/></name></name> <operator pos:line="21" pos:column="52">+<pos:position pos:line="21" pos:column="53"/></operator> <literal type="number" pos:line="21" pos:column="54">20<pos:position pos:line="21" pos:column="56"/></literal><operator pos:line="21" pos:column="56">)<pos:position pos:line="21" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>
    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><operator pos:line="22" pos:column="8">!<pos:position pos:line="22" pos:column="9"/></operator><name><name pos:line="22" pos:column="9">sockets<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">sockets<pos:position pos:line="22" pos:column="25"/></name></name></expr>)<pos:position pos:line="22" pos:column="26"/></condition><then pos:line="22" pos:column="26"> <block pos:line="22" pos:column="27">{
      <comment type="block" pos:line="23" pos:column="7">/* cleanup in test_cleanup */</comment>
      <expr_stmt><expr><name><name pos:line="24" pos:column="7">sockets<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">sockets<pos:position pos:line="24" pos:column="23"/></name></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <name pos:line="24" pos:column="26">oldptr<pos:position pos:line="24" pos:column="32"/></name></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
      <return pos:line="25" pos:column="7">return;<pos:position pos:line="25" pos:column="14"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">sockets<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">max_count<pos:position pos:line="27" pos:column="23"/></name></name> <operator pos:line="27" pos:column="24">+=<pos:position pos:line="27" pos:column="26"/></operator> <literal type="number" pos:line="27" pos:column="27">20<pos:position pos:line="27" pos:column="29"/></literal></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if></elseif></if>
  <comment type="block" pos:line="29" pos:column="3">/*
   * Add file descriptor to array.
   */</comment>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">sockets<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">sockets<pos:position pos:line="32" pos:column="19"/></name><index pos:line="32" pos:column="19">[<expr><name><name pos:line="32" pos:column="20">sockets<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">count<pos:position pos:line="32" pos:column="34"/></name></name></expr>]<pos:position pos:line="32" pos:column="35"/></index></name> <operator pos:line="32" pos:column="36">=<pos:position pos:line="32" pos:column="37"/></operator> <name pos:line="32" pos:column="38">fd<pos:position pos:line="32" pos:column="40"/></name></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="33" pos:column="3">++<pos:position pos:line="33" pos:column="5"/></operator><name><name pos:line="33" pos:column="5">sockets<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">count<pos:position pos:line="33" pos:column="19"/></name></name></expr>;<pos:position pos:line="33" pos:column="20"/></expr_stmt>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_983_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">customrequest_helper<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">OperationConfig<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">config<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">HttpReq<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">req<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">method<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* this mirrors the HttpReq enum in tool_sdecls.h */</comment>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name><name pos:line="5" pos:column="15">dflt<pos:position pos:line="5" pos:column="19"/></name><index pos:line="5" pos:column="19">[]<pos:position pos:line="5" pos:column="21"/></index></name><init pos:line="5" pos:column="21">= <expr><block pos:line="5" pos:column="23">{
    <expr><literal type="string" pos:line="6" pos:column="5">"GET"<pos:position pos:line="6" pos:column="10"/></literal></expr>,
    <expr><literal type="string" pos:line="7" pos:column="5">"GET"<pos:position pos:line="7" pos:column="10"/></literal></expr>,
    <expr><literal type="string" pos:line="8" pos:column="5">"HEAD"<pos:position pos:line="8" pos:column="11"/></literal></expr>,
    <expr><literal type="string" pos:line="9" pos:column="5">"POST"<pos:position pos:line="9" pos:column="11"/></literal></expr>,
    <expr><literal type="string" pos:line="10" pos:column="5">"POST"<pos:position pos:line="10" pos:column="11"/></literal></expr>
  }<pos:position pos:line="11" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="11" pos:column="5"/></decl_stmt>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><operator pos:line="13" pos:column="6">!<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">method<pos:position pos:line="13" pos:column="13"/></name></expr>)<pos:position pos:line="13" pos:column="14"/></condition><then pos:line="13" pos:column="14">
    <block type="pseudo"><empty_stmt pos:line="14" pos:column="5">;<pos:position pos:line="14" pos:column="6"/></empty_stmt></block></then>
  <elseif pos:line="15" pos:column="3">else <if pos:line="15" pos:column="8">if<condition pos:line="15" pos:column="10">(<expr><call><name pos:line="15" pos:column="11">curl_strequal<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">method<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="33">dflt<pos:position pos:line="15" pos:column="37"/></name><index pos:line="15" pos:column="37">[<expr><name pos:line="15" pos:column="38">req<pos:position pos:line="15" pos:column="41"/></name></expr>]<pos:position pos:line="15" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="44"/></condition><then pos:line="15" pos:column="44"> <block pos:line="15" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">notef<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><name><name pos:line="16" pos:column="11">config<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">global<pos:position pos:line="16" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="27">"Unnecessary use of -X or --request, %s is already "<pos:position pos:line="16" pos:column="79"/></literal>
          <literal type="string" pos:line="17" pos:column="11">"inferred.\n"<pos:position pos:line="17" pos:column="24"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="26">dflt<pos:position pos:line="17" pos:column="30"/></name><index pos:line="17" pos:column="30">[<expr><name pos:line="17" pos:column="31">req<pos:position pos:line="17" pos:column="34"/></name></expr>]<pos:position pos:line="17" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="19" pos:column="3">else <if pos:line="19" pos:column="8">if<condition pos:line="19" pos:column="10">(<expr><call><name pos:line="19" pos:column="11">curl_strequal<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">method<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="33">"head"<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="41"/></condition><then pos:line="19" pos:column="41"> <block pos:line="19" pos:column="42">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">warnf<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><name><name pos:line="20" pos:column="11">config<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">global<pos:position pos:line="20" pos:column="25"/></name></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="21" pos:column="11">"Setting custom HTTP method to HEAD with -X/--request may not work "<pos:position pos:line="21" pos:column="79"/></literal>
          <literal type="string" pos:line="22" pos:column="11">"the way you want. Consider using -I/--head instead.\n"<pos:position pos:line="22" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if></elseif></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

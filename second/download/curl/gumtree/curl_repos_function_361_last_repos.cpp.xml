<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_361_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">convert_version_info_string<pos:position pos:line="2" pos:column="28"/></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type> <name pos:line="2" pos:column="44">stringp<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="3" pos:column="29">char<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type> <name pos:line="3" pos:column="38">bufp<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="44">int<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type> <name pos:line="3" pos:column="50">left<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="56">unsigned<pos:position pos:line="3" pos:column="64"/></name> <name pos:line="3" pos:column="65">int<pos:position pos:line="3" pos:column="68"/></name></type> <name pos:line="3" pos:column="69">ccsid<pos:position pos:line="3" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="75"/></parameter_list>

<block pos:line="5" pos:column="1">{
  <comment type="block" pos:line="6" pos:column="3">/* Helper for curl_version_info_ccsid(): convert a string if defined.
     Result is stored in the `*left'-byte buffer at `*bufp'.
     `*bufp' and `*left' are updated accordingly.
     Return 0 if ok, else -1. */</comment>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">*<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">stringp<pos:position pos:line="11" pos:column="14"/></name></expr>)<pos:position pos:line="11" pos:column="15"/></condition><then pos:line="11" pos:column="15"> <block pos:line="11" pos:column="16">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">l<pos:position pos:line="12" pos:column="10"/></name> <init pos:line="12" pos:column="11">= <expr><call><name pos:line="12" pos:column="13">convert<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><operator pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">bufp<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="29">left<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">ccsid<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="42">*<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="43">stringp<pos:position pos:line="12" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="52">-<pos:position pos:line="12" pos:column="53"/></operator><literal type="number" pos:line="12" pos:column="53">1<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="56">ASCII_CCSID<pos:position pos:line="12" pos:column="67"/></name></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="69"/></decl_stmt>

    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><name pos:line="14" pos:column="8">l<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">&lt;=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal></expr>)<pos:position pos:line="14" pos:column="15"/></condition><then pos:line="14" pos:column="15">
      <block type="pseudo"><return pos:line="15" pos:column="7">return <expr><operator pos:line="15" pos:column="14">-<pos:position pos:line="15" pos:column="15"/></operator><literal type="number" pos:line="15" pos:column="15">1<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></return></block></then></if>

    <expr_stmt><expr><operator pos:line="17" pos:column="5">*<pos:position pos:line="17" pos:column="6"/></operator><name pos:line="17" pos:column="6">stringp<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <operator pos:line="17" pos:column="16">*<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">bufp<pos:position pos:line="17" pos:column="21"/></name></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="18" pos:column="5">*<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">bufp<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">+=<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">l<pos:position pos:line="18" pos:column="15"/></name></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="19" pos:column="5">*<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">left<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">-=<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">l<pos:position pos:line="19" pos:column="15"/></name></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

  <return pos:line="22" pos:column="3">return <expr><literal type="number" pos:line="22" pos:column="10">0<pos:position pos:line="22" pos:column="11"/></literal></expr>;<pos:position pos:line="22" pos:column="12"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

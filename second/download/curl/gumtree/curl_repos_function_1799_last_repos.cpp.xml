<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1799_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">hostmatch<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">hostname<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">pattern<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">pattern_label_end<pos:position pos:line="3" pos:column="32"/></name></decl>, <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="35">pattern_wildcard<pos:position pos:line="3" pos:column="51"/></name></decl>, <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="54">hostname_label_end<pos:position pos:line="3" pos:column="72"/></name></decl>;<pos:position pos:line="3" pos:column="73"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">wildcard_enabled<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">prefixlen<pos:position pos:line="5" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="21">suffixlen<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">in_addr<pos:position pos:line="6" pos:column="17"/></name></name></type> <name pos:line="6" pos:column="18">ignored<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">ENABLE_IPV6<pos:position pos:line="7" pos:column="19"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">sockaddr_in6<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">si6<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="11" pos:column="3">/* normalize pattern and hostname by stripping off trailing dots */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">len<pos:position pos:line="12" pos:column="13"/></name> <init pos:line="12" pos:column="14">= <expr><call><name pos:line="12" pos:column="16">strlen<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">hostname<pos:position pos:line="12" pos:column="31"/></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name><name pos:line="13" pos:column="6">hostname<pos:position pos:line="13" pos:column="14"/></name><index pos:line="13" pos:column="14">[<expr><name pos:line="13" pos:column="15">len<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-<pos:position pos:line="13" pos:column="19"/></operator><literal type="number" pos:line="13" pos:column="19">1<pos:position pos:line="13" pos:column="20"/></literal></expr>]<pos:position pos:line="13" pos:column="21"/></index></name><operator pos:line="13" pos:column="21">==<pos:position pos:line="13" pos:column="23"/></operator><literal type="char" pos:line="13" pos:column="23">'.'<pos:position pos:line="13" pos:column="26"/></literal></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="5">hostname<pos:position pos:line="14" pos:column="13"/></name><index pos:line="14" pos:column="13">[<expr><name pos:line="14" pos:column="14">len<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-<pos:position pos:line="14" pos:column="18"/></operator><literal type="number" pos:line="14" pos:column="18">1<pos:position pos:line="14" pos:column="19"/></literal></expr>]<pos:position pos:line="14" pos:column="20"/></index></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <literal type="number" pos:line="14" pos:column="23">0<pos:position pos:line="14" pos:column="24"/></literal></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name pos:line="15" pos:column="3">len<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <call><name pos:line="15" pos:column="9">strlen<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">pattern<pos:position pos:line="15" pos:column="23"/></name></expr></argument>)<pos:position pos:line="15" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name><name pos:line="16" pos:column="6">pattern<pos:position pos:line="16" pos:column="13"/></name><index pos:line="16" pos:column="13">[<expr><name pos:line="16" pos:column="14">len<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-<pos:position pos:line="16" pos:column="18"/></operator><literal type="number" pos:line="16" pos:column="18">1<pos:position pos:line="16" pos:column="19"/></literal></expr>]<pos:position pos:line="16" pos:column="20"/></index></name><operator pos:line="16" pos:column="20">==<pos:position pos:line="16" pos:column="22"/></operator><literal type="char" pos:line="16" pos:column="22">'.'<pos:position pos:line="16" pos:column="25"/></literal></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="5">pattern<pos:position pos:line="17" pos:column="12"/></name><index pos:line="17" pos:column="12">[<expr><name pos:line="17" pos:column="13">len<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-<pos:position pos:line="17" pos:column="17"/></operator><literal type="number" pos:line="17" pos:column="17">1<pos:position pos:line="17" pos:column="18"/></literal></expr>]<pos:position pos:line="17" pos:column="19"/></index></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <literal type="number" pos:line="17" pos:column="22">0<pos:position pos:line="17" pos:column="23"/></literal></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">pattern_wildcard<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <call><name pos:line="19" pos:column="22">strchr<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">pattern<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="38">'*'<pos:position pos:line="19" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name pos:line="20" pos:column="6">pattern_wildcard<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">==<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="26">NULL<pos:position pos:line="20" pos:column="30"/></name></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><ternary><condition><expr><call><name pos:line="21" pos:column="12">strcasecompare<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">pattern<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="36">hostname<pos:position pos:line="21" pos:column="44"/></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr> ?<pos:position pos:line="21" pos:column="47"/></condition><then pos:line="21" pos:column="47">
      <expr><name pos:line="22" pos:column="7">CURL_HOST_MATCH<pos:position pos:line="22" pos:column="22"/></name></expr> <pos:position pos:line="22" pos:column="23"/></then><else pos:line="22" pos:column="23">: <expr><name pos:line="22" pos:column="25">CURL_HOST_NOMATCH<pos:position pos:line="22" pos:column="42"/></name></expr></else></ternary></expr>;<pos:position pos:line="22" pos:column="43"/></return></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* detect IP address as hostname and fail the match if so */</comment>
  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><call><name pos:line="25" pos:column="6">Curl_inet_pton<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">AF_INET<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="30">hostname<pos:position pos:line="25" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="40">&amp;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="41">ignored<pos:position pos:line="25" pos:column="48"/></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call> <operator pos:line="25" pos:column="50">&gt;<pos:position pos:line="25" pos:column="54"/></operator> <literal type="number" pos:line="25" pos:column="52">0<pos:position pos:line="25" pos:column="53"/></literal></expr>)<pos:position pos:line="25" pos:column="54"/></condition><then pos:line="25" pos:column="54">
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">CURL_HOST_NOMATCH<pos:position pos:line="26" pos:column="29"/></name></expr>;<pos:position pos:line="26" pos:column="30"/></return></block></then></if>
<cpp:ifdef pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">ifdef<pos:position pos:line="27" pos:column="7"/></cpp:directive> <name pos:line="27" pos:column="8">ENABLE_IPV6<pos:position pos:line="27" pos:column="19"/></name></cpp:ifdef>
  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><call><name pos:line="28" pos:column="6">Curl_inet_pton<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">AF_INET6<pos:position pos:line="28" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="31">hostname<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="41">&amp;<pos:position pos:line="28" pos:column="46"/></operator><name><name pos:line="28" pos:column="42">si6<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">.<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="46">sin6_addr<pos:position pos:line="28" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call> <operator pos:line="28" pos:column="57">&gt;<pos:position pos:line="28" pos:column="61"/></operator> <literal type="number" pos:line="28" pos:column="59">0<pos:position pos:line="28" pos:column="60"/></literal></expr>)<pos:position pos:line="28" pos:column="61"/></condition><then pos:line="28" pos:column="61">
    <block type="pseudo"><return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">CURL_HOST_NOMATCH<pos:position pos:line="29" pos:column="29"/></name></expr>;<pos:position pos:line="29" pos:column="30"/></return></block></then></if>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="32" pos:column="3">/* We require at least 2 dots in pattern to avoid too wide wildcard
     match. */</comment>
  <expr_stmt><expr><name pos:line="34" pos:column="3">wildcard_enabled<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <literal type="number" pos:line="34" pos:column="22">1<pos:position pos:line="34" pos:column="23"/></literal></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="35" pos:column="3">pattern_label_end<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <call><name pos:line="35" pos:column="23">strchr<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">pattern<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="35" pos:column="39">'.'<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
  <if pos:line="36" pos:column="3">if<condition pos:line="36" pos:column="5">(<expr><name pos:line="36" pos:column="6">pattern_label_end<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">==<pos:position pos:line="36" pos:column="26"/></operator> <name pos:line="36" pos:column="27">NULL<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">||<pos:position pos:line="36" pos:column="34"/></operator> <call><name pos:line="36" pos:column="35">strchr<pos:position pos:line="36" pos:column="41"/></name><argument_list pos:line="36" pos:column="41">(<argument><expr><name pos:line="36" pos:column="42">pattern_label_end<pos:position pos:line="36" pos:column="59"/></name> <operator pos:line="36" pos:column="60">+<pos:position pos:line="36" pos:column="61"/></operator> <literal type="number" pos:line="36" pos:column="62">1<pos:position pos:line="36" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="36" pos:column="65">'.'<pos:position pos:line="36" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></call> <operator pos:line="36" pos:column="70">==<pos:position pos:line="36" pos:column="72"/></operator> <name pos:line="36" pos:column="73">NULL<pos:position pos:line="36" pos:column="77"/></name> <operator pos:line="36" pos:column="78">||<pos:position pos:line="36" pos:column="80"/></operator>
     <name pos:line="37" pos:column="6">pattern_wildcard<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">&gt;<pos:position pos:line="37" pos:column="27"/></operator> <name pos:line="37" pos:column="25">pattern_label_end<pos:position pos:line="37" pos:column="42"/></name> <operator pos:line="37" pos:column="43">||<pos:position pos:line="37" pos:column="45"/></operator>
     <call><name pos:line="38" pos:column="6">strncasecompare<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">pattern<pos:position pos:line="38" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="31">"xn--"<pos:position pos:line="38" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="39">4<pos:position pos:line="38" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="42"/></condition><then pos:line="38" pos:column="42"> <block pos:line="38" pos:column="43">{
    <expr_stmt><expr><name pos:line="39" pos:column="5">wildcard_enabled<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">=<pos:position pos:line="39" pos:column="23"/></operator> <literal type="number" pos:line="39" pos:column="24">0<pos:position pos:line="39" pos:column="25"/></literal></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>
  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><operator pos:line="41" pos:column="6">!<pos:position pos:line="41" pos:column="7"/></operator><name pos:line="41" pos:column="7">wildcard_enabled<pos:position pos:line="41" pos:column="23"/></name></expr>)<pos:position pos:line="41" pos:column="24"/></condition><then pos:line="41" pos:column="24">
    <block type="pseudo"><return pos:line="42" pos:column="5">return <expr><ternary><condition><expr><call><name pos:line="42" pos:column="12">strcasecompare<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><name pos:line="42" pos:column="27">pattern<pos:position pos:line="42" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="36">hostname<pos:position pos:line="42" pos:column="44"/></name></expr></argument>)<pos:position pos:line="42" pos:column="45"/></argument_list></call></expr> ?<pos:position pos:line="42" pos:column="47"/></condition><then pos:line="42" pos:column="47">
      <expr><name pos:line="43" pos:column="7">CURL_HOST_MATCH<pos:position pos:line="43" pos:column="22"/></name></expr> <pos:position pos:line="43" pos:column="23"/></then><else pos:line="43" pos:column="23">: <expr><name pos:line="43" pos:column="25">CURL_HOST_NOMATCH<pos:position pos:line="43" pos:column="42"/></name></expr></else></ternary></expr>;<pos:position pos:line="43" pos:column="43"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="45" pos:column="3">hostname_label_end<pos:position pos:line="45" pos:column="21"/></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <call><name pos:line="45" pos:column="24">strchr<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">hostname<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="45" pos:column="41">'.'<pos:position pos:line="45" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="46"/></expr_stmt>
  <if pos:line="46" pos:column="3">if<condition pos:line="46" pos:column="5">(<expr><name pos:line="46" pos:column="6">hostname_label_end<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">==<pos:position pos:line="46" pos:column="27"/></operator> <name pos:line="46" pos:column="28">NULL<pos:position pos:line="46" pos:column="32"/></name> <operator pos:line="46" pos:column="33">||<pos:position pos:line="46" pos:column="35"/></operator>
     <operator pos:line="47" pos:column="6">!<pos:position pos:line="47" pos:column="7"/></operator><call><name pos:line="47" pos:column="7">strcasecompare<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">pattern_label_end<pos:position pos:line="47" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="41">hostname_label_end<pos:position pos:line="47" pos:column="59"/></name></expr></argument>)<pos:position pos:line="47" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="61"/></condition><then pos:line="47" pos:column="61">
    <block type="pseudo"><return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">CURL_HOST_NOMATCH<pos:position pos:line="48" pos:column="29"/></name></expr>;<pos:position pos:line="48" pos:column="30"/></return></block></then></if>

  <comment type="block" pos:line="50" pos:column="3">/* The wildcard must match at least one character, so the left-most
     label of the hostname is at least as large as the left-most label
     of the pattern. */</comment>
  <if pos:line="53" pos:column="3">if<condition pos:line="53" pos:column="5">(<expr><name pos:line="53" pos:column="6">hostname_label_end<pos:position pos:line="53" pos:column="24"/></name> <operator pos:line="53" pos:column="25">-<pos:position pos:line="53" pos:column="26"/></operator> <name pos:line="53" pos:column="27">hostname<pos:position pos:line="53" pos:column="35"/></name> <operator pos:line="53" pos:column="36">&lt;<pos:position pos:line="53" pos:column="40"/></operator> <name pos:line="53" pos:column="38">pattern_label_end<pos:position pos:line="53" pos:column="55"/></name> <operator pos:line="53" pos:column="56">-<pos:position pos:line="53" pos:column="57"/></operator> <name pos:line="53" pos:column="58">pattern<pos:position pos:line="53" pos:column="65"/></name></expr>)<pos:position pos:line="53" pos:column="66"/></condition><then pos:line="53" pos:column="66">
    <block type="pseudo"><return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">CURL_HOST_NOMATCH<pos:position pos:line="54" pos:column="29"/></name></expr>;<pos:position pos:line="54" pos:column="30"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="56" pos:column="3">prefixlen<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <name pos:line="56" pos:column="15">pattern_wildcard<pos:position pos:line="56" pos:column="31"/></name> <operator pos:line="56" pos:column="32">-<pos:position pos:line="56" pos:column="33"/></operator> <name pos:line="56" pos:column="34">pattern<pos:position pos:line="56" pos:column="41"/></name></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name pos:line="57" pos:column="3">suffixlen<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <name pos:line="57" pos:column="15">pattern_label_end<pos:position pos:line="57" pos:column="32"/></name> <operator pos:line="57" pos:column="33">-<pos:position pos:line="57" pos:column="34"/></operator> <operator pos:line="57" pos:column="35">(<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="36">pattern_wildcard<pos:position pos:line="57" pos:column="52"/></name> <operator pos:line="57" pos:column="53">+<pos:position pos:line="57" pos:column="54"/></operator> <literal type="number" pos:line="57" pos:column="55">1<pos:position pos:line="57" pos:column="56"/></literal><operator pos:line="57" pos:column="56">)<pos:position pos:line="57" pos:column="57"/></operator></expr>;<pos:position pos:line="57" pos:column="58"/></expr_stmt>
  <return pos:line="58" pos:column="3">return <expr><ternary><condition><expr><call><name pos:line="58" pos:column="10">strncasecompare<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><name pos:line="58" pos:column="26">pattern<pos:position pos:line="58" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="35">hostname<pos:position pos:line="58" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="45">prefixlen<pos:position pos:line="58" pos:column="54"/></name></expr></argument>)<pos:position pos:line="58" pos:column="55"/></argument_list></call> <operator pos:line="58" pos:column="56">&amp;&amp;<pos:position pos:line="58" pos:column="66"/></operator>
    <call><name pos:line="59" pos:column="5">strncasecompare<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><name pos:line="59" pos:column="21">pattern_wildcard<pos:position pos:line="59" pos:column="37"/></name> <operator pos:line="59" pos:column="38">+<pos:position pos:line="59" pos:column="39"/></operator> <literal type="number" pos:line="59" pos:column="40">1<pos:position pos:line="59" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="43">hostname_label_end<pos:position pos:line="59" pos:column="61"/></name> <operator pos:line="59" pos:column="62">-<pos:position pos:line="59" pos:column="63"/></operator> <name pos:line="59" pos:column="64">suffixlen<pos:position pos:line="59" pos:column="73"/></name></expr></argument>,
                    <argument><expr><name pos:line="60" pos:column="21">suffixlen<pos:position pos:line="60" pos:column="30"/></name></expr></argument>)<pos:position pos:line="60" pos:column="31"/></argument_list></call></expr> ?<pos:position pos:line="60" pos:column="33"/></condition><then pos:line="60" pos:column="33">
    <expr><name pos:line="61" pos:column="5">CURL_HOST_MATCH<pos:position pos:line="61" pos:column="20"/></name></expr> <pos:position pos:line="61" pos:column="21"/></then><else pos:line="61" pos:column="21">: <expr><name pos:line="61" pos:column="23">CURL_HOST_NOMATCH<pos:position pos:line="61" pos:column="40"/></name></expr></else></ternary></expr>;<pos:position pos:line="61" pos:column="41"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

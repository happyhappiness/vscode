<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1085_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">curl_pushheader_bynum<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">curl_pushheaders<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">h<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">size_t<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">num<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* Verify that we got a good easy handle in the push header struct, mostly to
     detect rubbish input fast(er). */</comment>
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><operator pos:line="5" pos:column="6">!<pos:position pos:line="5" pos:column="7"/></operator><name pos:line="5" pos:column="7">h<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">||<pos:position pos:line="5" pos:column="11"/></operator> <operator pos:line="5" pos:column="12">!<pos:position pos:line="5" pos:column="13"/></operator><call><name pos:line="5" pos:column="13">GOOD_EASY_HANDLE<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><name><name pos:line="5" pos:column="30">h<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">data<pos:position pos:line="5" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="39"/></condition><then pos:line="5" pos:column="39">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">NULL<pos:position pos:line="6" pos:column="16"/></name></expr>;<pos:position pos:line="6" pos:column="17"/></return></block></then>
  <else pos:line="7" pos:column="3">else <block pos:line="7" pos:column="8">{
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">HTTP<pos:position pos:line="8" pos:column="16"/></name></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">stream<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><name><name pos:line="8" pos:column="27">h<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">data<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">req<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">.<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="40">protop<pos:position pos:line="8" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
    <if pos:line="9" pos:column="5">if<condition pos:line="9" pos:column="7">(<expr><name pos:line="9" pos:column="8">num<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">&lt;<pos:position pos:line="9" pos:column="16"/></operator> <name><name pos:line="9" pos:column="14">stream<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">push_headers_used<pos:position pos:line="9" pos:column="39"/></name></name></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40">
      <block type="pseudo"><return pos:line="10" pos:column="7">return <expr><name><name pos:line="10" pos:column="14">stream<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">push_headers<pos:position pos:line="10" pos:column="34"/></name><index pos:line="10" pos:column="34">[<expr><name pos:line="10" pos:column="35">num<pos:position pos:line="10" pos:column="38"/></name></expr>]<pos:position pos:line="10" pos:column="39"/></index></name></expr>;<pos:position pos:line="10" pos:column="40"/></return></block></then></if>
  }<pos:position pos:line="11" pos:column="4"/></block></else></if>
  <return pos:line="12" pos:column="3">return <expr><name pos:line="12" pos:column="10">NULL<pos:position pos:line="12" pos:column="14"/></name></expr>;<pos:position pos:line="12" pos:column="15"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

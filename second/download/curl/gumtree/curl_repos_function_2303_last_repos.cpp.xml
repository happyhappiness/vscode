<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2303_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ntlm_print_hex<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">FILE<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">handle<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">buf<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">size_t<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">len<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">p<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">buf<pos:position pos:line="3" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="5" pos:column="3">(<pos:position pos:line="5" pos:column="4"/></operator><name pos:line="5" pos:column="4">void<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">)<pos:position pos:line="5" pos:column="9"/></operator> <name pos:line="5" pos:column="10">handle<pos:position pos:line="5" pos:column="16"/></name></expr>;<pos:position pos:line="5" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">fprintf<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">stderr<pos:position pos:line="7" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"0x"<pos:position pos:line="7" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
  <while pos:line="8" pos:column="3">while<condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">len<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">--<pos:position pos:line="8" pos:column="14"/></operator> <operator pos:line="8" pos:column="15">&gt;<pos:position pos:line="8" pos:column="19"/></operator> <literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal></expr>)<pos:position pos:line="8" pos:column="19"/></condition>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="5">fprintf<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">stderr<pos:position pos:line="9" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="21">"%02.2x"<pos:position pos:line="9" pos:column="29"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="31">(<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">unsigned<pos:position pos:line="9" pos:column="40"/></name> <name pos:line="9" pos:column="41">int<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">)<pos:position pos:line="9" pos:column="45"/></operator><operator pos:line="9" pos:column="45">*<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="46">p<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">++<pos:position pos:line="9" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="51"/></expr_stmt></block></while>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

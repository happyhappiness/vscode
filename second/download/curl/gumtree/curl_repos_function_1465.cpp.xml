<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1465.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLMcode<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">curl_multi_cleanup<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">CURLM<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">multi_handle<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Curl_multi<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">multi<pos:position pos:line="3" pos:column="27"/></name><init pos:line="3" pos:column="27">=<expr><operator pos:line="3" pos:column="28">(<pos:position pos:line="3" pos:column="29"/></operator>struct <name pos:line="3" pos:column="36">Curl_multi<pos:position pos:line="3" pos:column="46"/></name> <operator pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></operator><operator pos:line="3" pos:column="48">)<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="49">multi_handle<pos:position pos:line="3" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="62"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">SessionHandle<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">data<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">SessionHandle<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">nextdata<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><call><name pos:line="7" pos:column="6">GOOD_MULTI_HANDLE<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">multi<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31"> <block pos:line="7" pos:column="32">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">bool<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">restore_pipe<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><name pos:line="8" pos:column="25">FALSE<pos:position pos:line="8" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">SIGPIPE_VARIABLE<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">pipe_st<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="11" pos:column="5">multi<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">type<pos:position pos:line="11" pos:column="16"/></name></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt> <comment type="block" pos:line="11" pos:column="22">/* not good anymore */</comment>

    <comment type="block" pos:line="13" pos:column="5">/* Close all the connections in the connection cache */</comment>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">close_all_connections<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">multi<pos:position pos:line="14" pos:column="32"/></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>

    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><name><name pos:line="16" pos:column="8">multi<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">closure_handle<pos:position pos:line="16" pos:column="29"/></name></name></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30"> <block pos:line="16" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">sigpipe_ignore<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name><name pos:line="17" pos:column="22">multi<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">-&gt;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="29">closure_handle<pos:position pos:line="17" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="45">&amp;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="46">pipe_st<pos:position pos:line="17" pos:column="53"/></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="18" pos:column="7">restore_pipe<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">TRUE<pos:position pos:line="18" pos:column="26"/></name></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="20" pos:column="7">multi<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">closure_handle<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">dns<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">.<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">hostcache<pos:position pos:line="20" pos:column="43"/></name></name> <operator pos:line="20" pos:column="44">=<pos:position pos:line="20" pos:column="45"/></operator> <name><name pos:line="20" pos:column="46">multi<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">-&gt;<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="53">hostcache<pos:position pos:line="20" pos:column="62"/></name></name></expr>;<pos:position pos:line="20" pos:column="63"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">Curl_hostcache_clean<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name><name pos:line="21" pos:column="28">multi<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">-&gt;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="35">closure_handle<pos:position pos:line="21" pos:column="49"/></name></name></expr></argument>,
                           <argument><expr><name><name pos:line="22" pos:column="28">multi<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">closure_handle<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">-&gt;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="51">dns<pos:position pos:line="22" pos:column="54"/></name><operator pos:line="22" pos:column="54">.<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="55">hostcache<pos:position pos:line="22" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="66"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="24" pos:column="7">Curl_close<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><name><name pos:line="24" pos:column="18">multi<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">-&gt;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="25">closure_handle<pos:position pos:line="24" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">Curl_hash_destroy<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name><name pos:line="27" pos:column="23">multi<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">-&gt;<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="30">sockhash<pos:position pos:line="27" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">Curl_conncache_destroy<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name><name pos:line="28" pos:column="28">multi<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">-&gt;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="35">conn_cache<pos:position pos:line="28" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">Curl_llist_destroy<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name><name pos:line="29" pos:column="24">multi<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">-&gt;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="31">msglist<pos:position pos:line="29" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="40">NULL<pos:position pos:line="29" pos:column="44"/></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">Curl_llist_destroy<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name><name pos:line="30" pos:column="24">multi<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">pending<pos:position pos:line="30" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">NULL<pos:position pos:line="30" pos:column="44"/></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>

    <comment type="block" pos:line="32" pos:column="5">/* remove all easy handles */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">data<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <name><name pos:line="33" pos:column="12">multi<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">easyp<pos:position pos:line="33" pos:column="24"/></name></name></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>
    <while pos:line="34" pos:column="5">while<condition pos:line="34" pos:column="10">(<expr><name pos:line="34" pos:column="11">data<pos:position pos:line="34" pos:column="15"/></name></expr>)<pos:position pos:line="34" pos:column="16"/></condition> <block pos:line="34" pos:column="17">{
      <expr_stmt><expr><name pos:line="35" pos:column="7">nextdata<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator><name><name pos:line="35" pos:column="16">data<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">next<pos:position pos:line="35" pos:column="26"/></name></name></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
      <if pos:line="36" pos:column="7">if<condition pos:line="36" pos:column="9">(<expr><name><name pos:line="36" pos:column="10">data<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">dns<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">.<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="20">hostcachetype<pos:position pos:line="36" pos:column="33"/></name></name> <operator pos:line="36" pos:column="34">==<pos:position pos:line="36" pos:column="36"/></operator> <name pos:line="36" pos:column="37">HCACHE_MULTI<pos:position pos:line="36" pos:column="49"/></name></expr>)<pos:position pos:line="36" pos:column="50"/></condition><then pos:line="36" pos:column="50"> <block pos:line="36" pos:column="51">{
        <comment type="block" pos:line="37" pos:column="9">/* clear out the usage of the shared DNS cache */</comment>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">Curl_hostcache_clean<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">data<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="36">data<pos:position pos:line="38" pos:column="40"/></name><operator pos:line="38" pos:column="40">-&gt;<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="42">dns<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">.<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="46">hostcache<pos:position pos:line="38" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">data<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">dns<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">.<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="19">hostcache<pos:position pos:line="39" pos:column="28"/></name></name> <operator pos:line="39" pos:column="29">=<pos:position pos:line="39" pos:column="30"/></operator> <name pos:line="39" pos:column="31">NULL<pos:position pos:line="39" pos:column="35"/></name></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">data<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">dns<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">.<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="19">hostcachetype<pos:position pos:line="40" pos:column="32"/></name></name> <operator pos:line="40" pos:column="33">=<pos:position pos:line="40" pos:column="34"/></operator> <name pos:line="40" pos:column="35">HCACHE_NONE<pos:position pos:line="40" pos:column="46"/></name></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt>
      }<pos:position pos:line="41" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="43" pos:column="7">/* Clear the pointer to the connection cache */</comment>
      <expr_stmt><expr><name><name pos:line="44" pos:column="7">data<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">-&gt;<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="13">state<pos:position pos:line="44" pos:column="18"/></name><operator pos:line="44" pos:column="18">.<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="19">conn_cache<pos:position pos:line="44" pos:column="29"/></name></name> <operator pos:line="44" pos:column="30">=<pos:position pos:line="44" pos:column="31"/></operator> <name pos:line="44" pos:column="32">NULL<pos:position pos:line="44" pos:column="36"/></name></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="45" pos:column="7">data<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">multi<pos:position pos:line="45" pos:column="18"/></name></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <name pos:line="45" pos:column="21">NULL<pos:position pos:line="45" pos:column="25"/></name></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt> <comment type="block" pos:line="45" pos:column="27">/* clear the association */</comment>

      <expr_stmt><expr><name pos:line="47" pos:column="7">data<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <name pos:line="47" pos:column="14">nextdata<pos:position pos:line="47" pos:column="22"/></name></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="50" pos:column="5">Curl_hash_destroy<pos:position pos:line="50" pos:column="22"/></name><argument_list pos:line="50" pos:column="22">(<argument><expr><name><name pos:line="50" pos:column="23">multi<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">-&gt;<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="30">hostcache<pos:position pos:line="50" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="52" pos:column="5">/* Free the blacklists by setting them to NULL */</comment>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">Curl_pipeline_set_site_blacklist<pos:position pos:line="53" pos:column="37"/></name><argument_list pos:line="53" pos:column="37">(<argument><expr><name pos:line="53" pos:column="38">NULL<pos:position pos:line="53" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="44">&amp;<pos:position pos:line="53" pos:column="49"/></operator><name><name pos:line="53" pos:column="45">multi<pos:position pos:line="53" pos:column="50"/></name><operator pos:line="53" pos:column="50">-&gt;<pos:position pos:line="53" pos:column="55"/></operator><name pos:line="53" pos:column="52">pipelining_site_bl<pos:position pos:line="53" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">Curl_pipeline_set_server_blacklist<pos:position pos:line="54" pos:column="39"/></name><argument_list pos:line="54" pos:column="39">(<argument><expr><name pos:line="54" pos:column="40">NULL<pos:position pos:line="54" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="46">&amp;<pos:position pos:line="54" pos:column="51"/></operator><name><name pos:line="54" pos:column="47">multi<pos:position pos:line="54" pos:column="52"/></name><operator pos:line="54" pos:column="52">-&gt;<pos:position pos:line="54" pos:column="57"/></operator><name pos:line="54" pos:column="54">pipelining_server_bl<pos:position pos:line="54" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="76"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="56" pos:column="5">free<pos:position pos:line="56" pos:column="9"/></name><argument_list pos:line="56" pos:column="9">(<argument><expr><name pos:line="56" pos:column="10">multi<pos:position pos:line="56" pos:column="15"/></name></expr></argument>)<pos:position pos:line="56" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="17"/></expr_stmt>
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">(<expr><name pos:line="57" pos:column="8">restore_pipe<pos:position pos:line="57" pos:column="20"/></name></expr>)<pos:position pos:line="57" pos:column="21"/></condition><then pos:line="57" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="7">sigpipe_restore<pos:position pos:line="58" pos:column="22"/></name><argument_list pos:line="58" pos:column="22">(<argument><expr><operator pos:line="58" pos:column="23">&amp;<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="24">pipe_st<pos:position pos:line="58" pos:column="31"/></name></expr></argument>)<pos:position pos:line="58" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="33"/></expr_stmt></block></then></if>

    <return pos:line="60" pos:column="5">return <expr><name pos:line="60" pos:column="12">CURLM_OK<pos:position pos:line="60" pos:column="20"/></name></expr>;<pos:position pos:line="60" pos:column="21"/></return>
  }<pos:position pos:line="61" pos:column="4"/></block></then>
  <else pos:line="62" pos:column="3">else
    <block type="pseudo"><return pos:line="63" pos:column="5">return <expr><name pos:line="63" pos:column="12">CURLM_BAD_HANDLE<pos:position pos:line="63" pos:column="28"/></name></expr>;<pos:position pos:line="63" pos:column="29"/></return></block></else></if>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_915_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">char<pos:position pos:line="2" pos:column="5"/></name> <modifier pos:line="2" pos:column="6">*<pos:position pos:line="2" pos:column="7"/></modifier></type><name pos:line="2" pos:column="7">GetEnv<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">variable<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">_WIN32_WCE<pos:position pos:line="4" pos:column="18"/></name></cpp:ifdef>
  <return pos:line="5" pos:column="3">return <expr><name pos:line="5" pos:column="10">NULL<pos:position pos:line="5" pos:column="14"/></name></expr>;<pos:position pos:line="5" pos:column="15"/></return>
<cpp:else pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">else<pos:position pos:line="6" pos:column="6"/></cpp:directive></cpp:else>
<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">WIN32<pos:position pos:line="7" pos:column="13"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">env<pos:position pos:line="8" pos:column="11"/></name><index pos:line="8" pos:column="11">[<expr><name pos:line="8" pos:column="12">MAX_PATH<pos:position pos:line="8" pos:column="20"/></name></expr>]<pos:position pos:line="8" pos:column="21"/></index></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt> <comment type="block" pos:line="8" pos:column="23">/* MAX_PATH is from windef.h */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">temp<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><call><name pos:line="9" pos:column="16">getenv<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">variable<pos:position pos:line="9" pos:column="31"/></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">env<pos:position pos:line="10" pos:column="6"/></name><index pos:line="10" pos:column="6">[<expr><literal type="number" pos:line="10" pos:column="7">0<pos:position pos:line="10" pos:column="8"/></literal></expr>]<pos:position pos:line="10" pos:column="9"/></index></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <literal type="char" pos:line="10" pos:column="12">'\0'<pos:position pos:line="10" pos:column="16"/></literal></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">temp<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">!=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">NULL<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">ExpandEnvironmentStrings<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">temp<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">env<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="41">sizeof<argument_list pos:line="12" pos:column="47">(<argument><expr><name pos:line="12" pos:column="48">env<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt></block></then></if>
  <return pos:line="13" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="13" pos:column="10">(<pos:position pos:line="13" pos:column="11"/></operator><name><name pos:line="13" pos:column="11">env<pos:position pos:line="13" pos:column="14"/></name><index pos:line="13" pos:column="14">[<expr><literal type="number" pos:line="13" pos:column="15">0<pos:position pos:line="13" pos:column="16"/></literal></expr>]<pos:position pos:line="13" pos:column="17"/></index></name> <operator pos:line="13" pos:column="18">!=<pos:position pos:line="13" pos:column="20"/></operator> <literal type="char" pos:line="13" pos:column="21">'\0'<pos:position pos:line="13" pos:column="25"/></literal><operator pos:line="13" pos:column="25">)<pos:position pos:line="13" pos:column="26"/></operator></expr>?<pos:position pos:line="13" pos:column="27"/></condition><then><expr><call><name pos:line="13" pos:column="27">strdup<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">env<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr></then><else pos:line="13" pos:column="38">:<expr><name pos:line="13" pos:column="39">NULL<pos:position pos:line="13" pos:column="43"/></name></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="44"/></return>
<cpp:else pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">else<pos:position pos:line="14" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">char<pos:position pos:line="15" pos:column="7"/></name> <modifier pos:line="15" pos:column="8">*<pos:position pos:line="15" pos:column="9"/></modifier></type><name pos:line="15" pos:column="9">env<pos:position pos:line="15" pos:column="12"/></name> <init pos:line="15" pos:column="13">= <expr><call><name pos:line="15" pos:column="15">getenv<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">variable<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="32"/></decl_stmt>
<cpp:ifdef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifdef<pos:position pos:line="16" pos:column="7"/></cpp:directive> <name pos:line="16" pos:column="8">VMS<pos:position pos:line="16" pos:column="11"/></name></cpp:ifdef>
  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name pos:line="17" pos:column="6">env<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">&amp;&amp;<pos:position pos:line="17" pos:column="20"/></operator> <call><name pos:line="17" pos:column="13">strcmp<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><literal type="string" pos:line="17" pos:column="20">"HOME"<pos:position pos:line="17" pos:column="26"/></literal></expr></argument>,<argument><expr><name pos:line="17" pos:column="27">variable<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call> <operator pos:line="17" pos:column="37">==<pos:position pos:line="17" pos:column="39"/></operator> <literal type="number" pos:line="17" pos:column="40">0<pos:position pos:line="17" pos:column="41"/></literal></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42">
    <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="5">env<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">decc$translate_vms<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">env<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt></block></then></if>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="20" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="20" pos:column="10">(<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">env<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">&amp;&amp;<pos:position pos:line="20" pos:column="25"/></operator> <name><name pos:line="20" pos:column="18">env<pos:position pos:line="20" pos:column="21"/></name><index pos:line="20" pos:column="21">[<expr><literal type="number" pos:line="20" pos:column="22">0<pos:position pos:line="20" pos:column="23"/></literal></expr>]<pos:position pos:line="20" pos:column="24"/></index></name><operator pos:line="20" pos:column="24">)<pos:position pos:line="20" pos:column="25"/></operator></expr>?<pos:position pos:line="20" pos:column="26"/></condition><then><expr><call><name pos:line="20" pos:column="26">strdup<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">env<pos:position pos:line="20" pos:column="36"/></name></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr></then><else pos:line="20" pos:column="37">:<expr><name pos:line="20" pos:column="38">NULL<pos:position pos:line="20" pos:column="42"/></name></expr></else></ternary></expr>;<pos:position pos:line="20" pos:column="43"/></return>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

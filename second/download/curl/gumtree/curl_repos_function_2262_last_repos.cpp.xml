<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2262_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">events_timer<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">Curl_multi<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">multi<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,    <comment type="block" pos:line="1" pos:column="54">/* multi handle */</comment>
                        <parameter><decl><type><name pos:line="2" pos:column="25">long<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">timeout_ms<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="42">/* see above */</comment>
                        <parameter><decl><type><name pos:line="3" pos:column="25">void<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">userp<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="37"/></parameter_list>    <comment type="block" pos:line="3" pos:column="41">/* private callback pointer */</comment>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">events<pos:position pos:line="5" pos:column="16"/></name></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">ev<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">userp<pos:position pos:line="5" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <expr_stmt><expr><operator pos:line="6" pos:column="3">(<pos:position pos:line="6" pos:column="4"/></operator><name pos:line="6" pos:column="4">void<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">)<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">multi<pos:position pos:line="6" pos:column="14"/></name></expr>;<pos:position pos:line="6" pos:column="15"/></expr_stmt>
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><name pos:line="7" pos:column="6">timeout_ms<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">==<pos:position pos:line="7" pos:column="19"/></operator> <operator pos:line="7" pos:column="20">-<pos:position pos:line="7" pos:column="21"/></operator><literal type="number" pos:line="7" pos:column="21">1<pos:position pos:line="7" pos:column="22"/></literal></expr>)<pos:position pos:line="7" pos:column="23"/></condition><then pos:line="7" pos:column="23">
    <comment type="block" pos:line="8" pos:column="5">/* timeout removed */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">timeout_ms<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt></block></then>
  <elseif pos:line="10" pos:column="3">else <if pos:line="10" pos:column="8">if<condition pos:line="10" pos:column="10">(<expr><name pos:line="10" pos:column="11">timeout_ms<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">==<pos:position pos:line="10" pos:column="24"/></operator> <literal type="number" pos:line="10" pos:column="25">0<pos:position pos:line="10" pos:column="26"/></literal></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27">
    <comment type="block" pos:line="11" pos:column="5">/* timeout is already reached! */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">timeout_ms<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="number" pos:line="12" pos:column="18">1<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt></block></then></if></elseif></if> <comment type="block" pos:line="12" pos:column="21">/* trigger asap */</comment>

  <expr_stmt><expr><name><name pos:line="14" pos:column="3">ev<pos:position pos:line="14" pos:column="5"/></name><operator pos:line="14" pos:column="5">-&gt;<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="7">ms<pos:position pos:line="14" pos:column="9"/></name></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <name pos:line="14" pos:column="12">timeout_ms<pos:position pos:line="14" pos:column="22"/></name></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">ev<pos:position pos:line="15" pos:column="5"/></name><operator pos:line="15" pos:column="5">-&gt;<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="7">msbump<pos:position pos:line="15" pos:column="13"/></name></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">TRUE<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
  <return pos:line="16" pos:column="3">return <expr><literal type="number" pos:line="16" pos:column="10">0<pos:position pos:line="16" pos:column="11"/></literal></expr>;<pos:position pos:line="16" pos:column="12"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

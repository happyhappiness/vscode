<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1307_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">void<pos:position pos:line="2" pos:column="5"/></name></type> <name pos:line="2" pos:column="6">destroy_thread_sync_data<pos:position pos:line="2" pos:column="30"/></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">thread_sync_data<pos:position pos:line="2" pos:column="54"/></name></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type> <name pos:line="2" pos:column="57">tsd<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><name><name pos:line="4" pos:column="6">tsd<pos:position pos:line="4" pos:column="9"/></name><operator pos:line="4" pos:column="9">-&gt;<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="11">mtx<pos:position pos:line="4" pos:column="14"/></name></name></expr>)<pos:position pos:line="4" pos:column="15"/></condition><then pos:line="4" pos:column="15"> <block pos:line="4" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Curl_mutex_destroy<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name><name pos:line="5" pos:column="24">tsd<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">mtx<pos:position pos:line="5" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">free<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><name><name pos:line="6" pos:column="10">tsd<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">mtx<pos:position pos:line="6" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">free<pos:position pos:line="9" pos:column="7"/></name><argument_list pos:line="9" pos:column="7">(<argument><expr><name><name pos:line="9" pos:column="8">tsd<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">hostname<pos:position pos:line="9" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name><name pos:line="11" pos:column="6">tsd<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">-&gt;<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="11">res<pos:position pos:line="11" pos:column="14"/></name></name></expr>)<pos:position pos:line="11" pos:column="15"/></condition><then pos:line="11" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">Curl_freeaddrinfo<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name><name pos:line="12" pos:column="23">tsd<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">res<pos:position pos:line="12" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">memset<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">(<argument><expr><name pos:line="14" pos:column="10">tsd<pos:position pos:line="14" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="15">0<pos:position pos:line="14" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="18">sizeof<argument_list pos:line="14" pos:column="24">(<argument><expr><operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">tsd<pos:position pos:line="14" pos:column="29"/></name></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

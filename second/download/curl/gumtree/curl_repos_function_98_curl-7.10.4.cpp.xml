<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_98_curl-7.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">socketerror<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">sockfd<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">err<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><literal type="number" pos:line="4" pos:column="13">0<pos:position pos:line="4" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">socklen_t<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">errSize<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><sizeof pos:line="5" pos:column="23">sizeof<argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">err<pos:position pos:line="5" pos:column="33"/></name></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">( <expr><operator pos:line="7" pos:column="7">-<pos:position pos:line="7" pos:column="8"/></operator><literal type="number" pos:line="7" pos:column="8">1<pos:position pos:line="7" pos:column="9"/></literal> <operator pos:line="7" pos:column="10">==<pos:position pos:line="7" pos:column="12"/></operator> <call><name pos:line="7" pos:column="13">getsockopt<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">sockfd<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="32">SOL_SOCKET<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="44">SO_ERROR<pos:position pos:line="7" pos:column="52"/></name></expr></argument>,
                       <argument><expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">void<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></operator><operator pos:line="8" pos:column="31">)<pos:position pos:line="8" pos:column="32"/></operator><operator pos:line="8" pos:column="32">&amp;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="33">err<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="38">&amp;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="39">errSize<pos:position pos:line="8" pos:column="46"/></name></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="48"/></condition><then pos:line="8" pos:column="48">
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">err<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call><name pos:line="9" pos:column="11">ourerrno<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">()<pos:position pos:line="9" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt></block></then></if>
  
  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">err<pos:position pos:line="11" pos:column="13"/></name></expr>;<pos:position pos:line="11" pos:column="14"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

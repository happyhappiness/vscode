<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_201_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">loop<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">CURLM<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">cm<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type> <name pos:line="1" pos:column="40">url<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name><modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type> <name pos:line="1" pos:column="57">userpwd<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                <parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">curl_slist<pos:position pos:line="2" pos:column="34"/></name></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">headers<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLMsg<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">msg<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">long<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">L<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">M<pos:position pos:line="6" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="10">Q<pos:position pos:line="6" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="13">U<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><operator pos:line="6" pos:column="17">-<pos:position pos:line="6" pos:column="18"/></operator><literal type="number" pos:line="6" pos:column="18">1<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">fd_set<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">R<pos:position pos:line="7" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="13">W<pos:position pos:line="7" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="16">E<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">timeval<pos:position pos:line="8" pos:column="17"/></name></name></type> <name pos:line="8" pos:column="18">T<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">init<pos:position pos:line="10" pos:column="7"/></name><argument_list pos:line="10" pos:column="7">(<argument><expr><name pos:line="10" pos:column="8">cm<pos:position pos:line="10" pos:column="10"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="12">url<pos:position pos:line="10" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="17">userpwd<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="26">headers<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>

  <while pos:line="12" pos:column="3">while <condition pos:line="12" pos:column="9">(<expr><name pos:line="12" pos:column="10">U<pos:position pos:line="12" pos:column="11"/></name></expr>)<pos:position pos:line="12" pos:column="12"/></condition> <block pos:line="12" pos:column="13">{
    <while pos:line="13" pos:column="5">while <condition pos:line="13" pos:column="11">(<expr><name pos:line="13" pos:column="12">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="13" pos:column="36"/></name> <operator pos:line="13" pos:column="37">==<pos:position pos:line="13" pos:column="39"/></operator> <call><name pos:line="13" pos:column="40">curl_multi_perform<pos:position pos:line="13" pos:column="58"/></name><argument_list pos:line="13" pos:column="58">(<argument><expr><name pos:line="13" pos:column="59">cm<pos:position pos:line="13" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="63">&amp;<pos:position pos:line="13" pos:column="68"/></operator><name pos:line="13" pos:column="64">U<pos:position pos:line="13" pos:column="65"/></name></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="67"/></condition><block type="pseudo"><empty_stmt pos:line="13" pos:column="67">;<pos:position pos:line="13" pos:column="68"/></empty_stmt></block></while>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">U<pos:position pos:line="15" pos:column="10"/></name></expr>)<pos:position pos:line="15" pos:column="11"/></condition><then pos:line="15" pos:column="11"> <block pos:line="15" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">FD_ZERO<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><operator pos:line="16" pos:column="15">&amp;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="16">R<pos:position pos:line="16" pos:column="17"/></name></expr></argument>)<pos:position pos:line="16" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">FD_ZERO<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><operator pos:line="17" pos:column="15">&amp;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="16">W<pos:position pos:line="17" pos:column="17"/></name></expr></argument>)<pos:position pos:line="17" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">FD_ZERO<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><operator pos:line="18" pos:column="15">&amp;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="16">E<pos:position pos:line="18" pos:column="17"/></name></expr></argument>)<pos:position pos:line="18" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>

      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><call><name pos:line="20" pos:column="11">curl_multi_fdset<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">cm<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="32">&amp;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="33">R<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="36">&amp;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="37">W<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="40">&amp;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="41">E<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="44">&amp;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="45">M<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="48"/></condition><then pos:line="20" pos:column="48"> <block pos:line="20" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">fprintf<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">(<argument><expr><name pos:line="21" pos:column="17">stderr<pos:position pos:line="21" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="25">"E: curl_multi_fdset\n"<pos:position pos:line="21" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">EXIT_FAILURE<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></return>
      }<pos:position pos:line="23" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="25" pos:column="7">/* In a real-world program you OF COURSE check the return that maxfd is
         bigger than -1 so that the call to select() below makes sense! */</comment>

      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><call><name pos:line="28" pos:column="11">curl_multi_timeout<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">cm<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="34">&amp;<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="35">L<pos:position pos:line="28" pos:column="36"/></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="38"/></condition><then pos:line="28" pos:column="38"> <block pos:line="28" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">fprintf<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">stderr<pos:position pos:line="29" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="25">"E: curl_multi_timeout\n"<pos:position pos:line="29" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
        <return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">EXIT_FAILURE<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></return>
      }<pos:position pos:line="31" pos:column="8"/></block></then></if>

      <if pos:line="33" pos:column="7">if<condition pos:line="33" pos:column="9">(<expr><name pos:line="33" pos:column="10">L<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">!=<pos:position pos:line="33" pos:column="14"/></operator> <operator pos:line="33" pos:column="15">-<pos:position pos:line="33" pos:column="16"/></operator><literal type="number" pos:line="33" pos:column="16">1<pos:position pos:line="33" pos:column="17"/></literal></expr>)<pos:position pos:line="33" pos:column="18"/></condition><then pos:line="33" pos:column="18"> <block pos:line="33" pos:column="19">{
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">T<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">.<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="11">tv_sec<pos:position pos:line="34" pos:column="17"/></name></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">L<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">/<pos:position pos:line="34" pos:column="22"/></operator><literal type="number" pos:line="34" pos:column="22">1000<pos:position pos:line="34" pos:column="26"/></literal></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">T<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">.<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">tv_usec<pos:position pos:line="35" pos:column="18"/></name></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <operator pos:line="35" pos:column="21">(<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">L<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">%<pos:position pos:line="35" pos:column="24"/></operator><literal type="number" pos:line="35" pos:column="24">1000<pos:position pos:line="35" pos:column="28"/></literal><operator pos:line="35" pos:column="28">)<pos:position pos:line="35" pos:column="29"/></operator><operator pos:line="35" pos:column="29">*<pos:position pos:line="35" pos:column="30"/></operator><literal type="number" pos:line="35" pos:column="30">1000<pos:position pos:line="35" pos:column="34"/></literal></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="36" pos:column="8"/></block></then>
      <else pos:line="37" pos:column="7">else <block pos:line="37" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">T<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">.<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="11">tv_sec<pos:position pos:line="38" pos:column="17"/></name></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <literal type="number" pos:line="38" pos:column="20">5<pos:position pos:line="38" pos:column="21"/></literal></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">T<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">.<pos:position pos:line="39" pos:column="11"/></operator><name pos:line="39" pos:column="11">tv_usec<pos:position pos:line="39" pos:column="18"/></name></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <literal type="number" pos:line="39" pos:column="21">0<pos:position pos:line="39" pos:column="22"/></literal></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="40" pos:column="8"/></block></else></if>

      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><literal type="number" pos:line="42" pos:column="11">0<pos:position pos:line="42" pos:column="12"/></literal> <operator pos:line="42" pos:column="13">&gt;<pos:position pos:line="42" pos:column="17"/></operator> <call><name pos:line="42" pos:column="15">select<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">M<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">+<pos:position pos:line="42" pos:column="24"/></operator><literal type="number" pos:line="42" pos:column="24">1<pos:position pos:line="42" pos:column="25"/></literal></expr></argument>, <argument><expr><operator pos:line="42" pos:column="27">&amp;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="28">R<pos:position pos:line="42" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="31">&amp;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="32">W<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="35">&amp;<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="36">E<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="39">&amp;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="40">T<pos:position pos:line="42" pos:column="41"/></name></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="43"/></condition><then pos:line="42" pos:column="43"> <block pos:line="42" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">fprintf<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><name pos:line="43" pos:column="17">stderr<pos:position pos:line="43" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="25">"E: select\n"<pos:position pos:line="43" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt>
        <return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">EXIT_FAILURE<pos:position pos:line="44" pos:column="28"/></name></expr>;<pos:position pos:line="44" pos:column="29"/></return>
      }<pos:position pos:line="45" pos:column="8"/></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <while pos:line="48" pos:column="5">while <condition pos:line="48" pos:column="11">(<expr><operator pos:line="48" pos:column="12">(<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="13">msg<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <call><name pos:line="48" pos:column="19">curl_multi_info_read<pos:position pos:line="48" pos:column="39"/></name><argument_list pos:line="48" pos:column="39">(<argument><expr><name pos:line="48" pos:column="40">cm<pos:position pos:line="48" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="44">&amp;<pos:position pos:line="48" pos:column="49"/></operator><name pos:line="48" pos:column="45">Q<pos:position pos:line="48" pos:column="46"/></name></expr></argument>)<pos:position pos:line="48" pos:column="47"/></argument_list></call><operator pos:line="48" pos:column="47">)<pos:position pos:line="48" pos:column="48"/></operator></expr>)<pos:position pos:line="48" pos:column="49"/></condition> <block pos:line="48" pos:column="50">{
      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><name><name pos:line="49" pos:column="11">msg<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">-&gt;<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="16">msg<pos:position pos:line="49" pos:column="19"/></name></name> <operator pos:line="49" pos:column="20">==<pos:position pos:line="49" pos:column="22"/></operator> <name pos:line="49" pos:column="23">CURLMSG_DONE<pos:position pos:line="49" pos:column="35"/></name></expr>)<pos:position pos:line="49" pos:column="36"/></condition><then pos:line="49" pos:column="36"> <block pos:line="49" pos:column="37">{
        <decl_stmt><decl><type><name pos:line="50" pos:column="9">CURL<pos:position pos:line="50" pos:column="13"/></name> <modifier pos:line="50" pos:column="14">*<pos:position pos:line="50" pos:column="15"/></modifier></type><name pos:line="50" pos:column="15">e<pos:position pos:line="50" pos:column="16"/></name> <init pos:line="50" pos:column="17">= <expr><name><name pos:line="50" pos:column="19">msg<pos:position pos:line="50" pos:column="22"/></name><operator pos:line="50" pos:column="22">-&gt;<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="24">easy_handle<pos:position pos:line="50" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="50" pos:column="36"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">fprintf<pos:position pos:line="51" pos:column="16"/></name><argument_list pos:line="51" pos:column="16">(<argument><expr><name pos:line="51" pos:column="17">stderr<pos:position pos:line="51" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="25">"R: %d - %s\n"<pos:position pos:line="51" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="51" pos:column="41">(<pos:position pos:line="51" pos:column="42"/></operator><name pos:line="51" pos:column="42">int<pos:position pos:line="51" pos:column="45"/></name><operator pos:line="51" pos:column="45">)<pos:position pos:line="51" pos:column="46"/></operator><name><name pos:line="51" pos:column="46">msg<pos:position pos:line="51" pos:column="49"/></name><operator pos:line="51" pos:column="49">-&gt;<pos:position pos:line="51" pos:column="54"/></operator><name pos:line="51" pos:column="51">data<pos:position pos:line="51" pos:column="55"/></name><operator pos:line="51" pos:column="55">.<pos:position pos:line="51" pos:column="56"/></operator><name pos:line="51" pos:column="56">result<pos:position pos:line="51" pos:column="62"/></name></name></expr></argument>,
                <argument><expr><call><name pos:line="52" pos:column="17">curl_easy_strerror<pos:position pos:line="52" pos:column="35"/></name><argument_list pos:line="52" pos:column="35">(<argument><expr><name><name pos:line="52" pos:column="36">msg<pos:position pos:line="52" pos:column="39"/></name><operator pos:line="52" pos:column="39">-&gt;<pos:position pos:line="52" pos:column="44"/></operator><name pos:line="52" pos:column="41">data<pos:position pos:line="52" pos:column="45"/></name><operator pos:line="52" pos:column="45">.<pos:position pos:line="52" pos:column="46"/></operator><name pos:line="52" pos:column="46">result<pos:position pos:line="52" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">curl_multi_remove_handle<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><name pos:line="53" pos:column="34">cm<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="38">e<pos:position pos:line="53" pos:column="39"/></name></expr></argument>)<pos:position pos:line="53" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">curl_easy_cleanup<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><name pos:line="54" pos:column="27">e<pos:position pos:line="54" pos:column="28"/></name></expr></argument>)<pos:position pos:line="54" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="55" pos:column="8"/></block></then>
      <else pos:line="56" pos:column="7">else <block pos:line="56" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">fprintf<pos:position pos:line="57" pos:column="16"/></name><argument_list pos:line="57" pos:column="16">(<argument><expr><name pos:line="57" pos:column="17">stderr<pos:position pos:line="57" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="25">"E: CURLMsg (%d)\n"<pos:position pos:line="57" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="46">(<pos:position pos:line="57" pos:column="47"/></operator><name pos:line="57" pos:column="47">int<pos:position pos:line="57" pos:column="50"/></name><operator pos:line="57" pos:column="50">)<pos:position pos:line="57" pos:column="51"/></operator><name><name pos:line="57" pos:column="51">msg<pos:position pos:line="57" pos:column="54"/></name><operator pos:line="57" pos:column="54">-&gt;<pos:position pos:line="57" pos:column="59"/></operator><name pos:line="57" pos:column="56">msg<pos:position pos:line="57" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="61"/></expr_stmt>
      }<pos:position pos:line="58" pos:column="8"/></block></else></if>
    }<pos:position pos:line="59" pos:column="6"/></block></while>
  }<pos:position pos:line="60" pos:column="4"/></block></while>

  <return pos:line="62" pos:column="3">return <expr><literal type="number" pos:line="62" pos:column="10">1<pos:position pos:line="62" pos:column="11"/></literal></expr>;<pos:position pos:line="62" pos:column="12"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

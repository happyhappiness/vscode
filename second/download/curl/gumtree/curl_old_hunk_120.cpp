"              This is done by first doing a request and checking the response-\n"
"              headers, thus inducing an extra network round-trip. This is used\n"
"              instead  of  setting a specific authentication method, which you\n"
"              can do with --basic, --digest, --ntlm, and  --negotiate.  (Added\n"
"              in 7.10.6)\n"
"\n"
"              If  this option is used several times, the following occurrences\n"
"              make no difference.\n"
"\n"
"       -b/--cookie <name=data>\n"
, stdout);
 fputs(
"              (HTTP) Pass the data to the HTTP server as a cookie. It is  sup-\n"
"              posedly  the data previously received from the server in a \"Set-\n"
"              Cookie:\" line.  The data should be in the format  \"NAME1=VALUE1;\n"
"              NAME2=VALUE2\".\n"
"\n"
"              If  no  '=' letter is used in the line, it is treated as a file-\n"
"              name to use to read previously stored cookie lines  from,  which\n"
, stdout);
 fputs(
"              should  be used in this session if they match. Using this method\n"
"              also activates the \"cookie parser\" which will make  curl  record\n"
"              incoming cookies too, which may be handy if you're using this in\n"
"              combination with the -L/--location option. The  file  format  of\n"
"              the  file  to  read cookies from should be plain HTTP headers or\n"
"              the Netscape/Mozilla cookie file format.\n"
"\n"
, stdout);
 fputs(
"              NOTE that the file specified with -b/--cookie is  only  used  as\n"
"              input.  No cookies will be stored in the file. To store cookies,\n"
"              use the -c/--cookie-jar option or you could even save  the  HTTP\n"
"              headers to a file using -D/--dump-header!\n"
"\n"
"              If  this  option is set more than once, the last one will be the\n"
"              one that's used.\n"
"\n"
"       -B/--use-ascii\n"
, stdout);
 fputs(
"              Use ASCII transfer when getting an FTP file or  LDAP  info.  For\n"
"              FTP,  this  can  also be enforced by using an URL that ends with\n"
"              \";type=A\". This option causes data sent to stdout to be in  text\n"
"              mode for win32 systems.\n"
"\n"
"              If  this option is used twice, the second one will disable ASCII\n"
"              usage.\n"
"\n"
"       --basic\n"
"              (HTTP) Tells curl to use HTTP Basic authentication. This is  the\n"
, stdout);
 fputs(
"              default  and this option is usually pointless, unless you use it\n"
"              to override a  previously  set  option  that  sets  a  different\n"
"              authentication  method  (such  as --ntlm, --digest and --negoti-\n"
"              ate). (Added in 7.10.6)\n"
"\n"
"              If this option is used several times, the following  occurrences\n"
"              make no difference.\n"
"\n"
"       --ciphers <list of ciphers>\n"
, stdout);
 fputs(
"              (SSL) Specifies which ciphers to use in the connection. The list\n"
"              of ciphers must be using valid ciphers. Read up  on  SSL  cipher\n"
"              list           details           on           this          URL:\n"
"              http://www.openssl.org/docs/apps/ciphers.html\n"
"\n"
"              If this option is used several times, the last one will override\n"
"              the others.\n"
"\n"
"       --compressed\n"
, stdout);
 fputs(
"              (HTTP) Request a compressed response using one of the algorithms\n"
"              libcurl supports, and return the uncompressed document.  If this\n"
"              option  is  used  and  the server sends an unsupported encoding,\n"
"              Curl will report an error.\n"
"\n"
"              If this option is used several times, each occurrence will  tog-\n"
"              gle it on/off.\n"
"\n"
"       --connect-timeout <seconds>\n"
, stdout);
 fputs(
"              Maximum  time  in  seconds  that you allow the connection to the\n"
"              server to take.  This only limits  the  connection  phase,  once\n"
"              curl  has  connected this option is of no more use. See also the\n"
"              -m/--max-time option.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       -c/--cookie-jar <file name>\n"
"              Specify to which file you want curl to write all cookies after a\n"
, stdout);
 fputs(
"              completed operation. Curl writes  all  cookies  previously  read\n"
"              from  a  specified  file  as  well  as all cookies received from\n"
"              remote server(s). If no cookies are known, no file will be writ-\n"
"              ten.  The  file  will  be written using the Netscape cookie file\n"
"              format. If you set the file name to  a  single  dash,  \"-\",  the\n"
"              cookies will be written to stdout.\n"
"\n"
, stdout);
 fputs(
"              NOTE If the cookie jar can't be created or written to, the whole\n"
"              curl operation won't fail or even report an error clearly. Using\n"
"              -v  will  get  a warning displayed, but that is the only visible\n"
"              feedback you get about this possibly lethal situation.\n"
"\n"
"              If this option is used several times,  the  last  specfied  file\n"
"              name will be used.\n"
"\n"
"       -C/--continue-at <offset>\n"
, stdout);
 fputs(
"              Continue/Resume  a  previous  file transfer at the given offset.\n"
"              The given offset is the exact  number  of  bytes  that  will  be\n"
"              skipped  counted from the beginning of the source file before it\n"
"              is transfered to the destination.  If used with uploads, the ftp\n"
"              server command SIZE will not be used by curl.\n"
"\n"
"              Use  \"-C  -\" to tell curl to automatically find out where/how to\n"
, stdout);
 fputs(
"              resume the transfer. It then uses the given  output/input  files\n"
"              to figure that out.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --create-dirs\n"
"              When used in conjunction with the -o option,  curl  will  create\n"
"              the  necessary  local directory hierarchy as needed. This option\n"
"              creates the dirs mentioned with the -o option, nothing else.  If\n"
, stdout);
 fputs(
"              the  -o file name uses no dir or if the dirs it mentions already\n"
"              exist, no dir will be created.\n"
"\n"
"              To create remote directories when using FTP,  try  --ftp-create-\n"
"              dirs.\n"
"\n"
"       --crlf (FTP) Convert LF to CRLF in upload. Useful for MVS (OS/390).\n"
"\n"
"              If this option is used twice, the second will again disable crlf\n"
"              converting.\n"
"\n"
"       -d/--data <data>\n"
, stdout);
 fputs(
"              (HTTP) Sends the specified data in a POST request  to  the  HTTP\n"
"              server,  in  a way that can emulate as if a user has filled in a\n"
"              HTML form and pressed the submit button. Note that the  data  is\n"
"              sent  exactly  as  specified  with no extra processing (with all\n"
"              newlines cut off).  The data is expected  to  be  \"url-encoded\".\n"
"              This  will  cause  curl to pass the data to the server using the\n"
, stdout);
 fputs(
"              content-type   application/x-www-form-urlencoded.   Compare   to\n"
"              -F/--form.  If  this  option  is used more than once on the same\n"
"              command line, the data pieces specified will be merged  together\n"
"              with  a  separating  &-letter.  Thus,  using  '-d name=daniel -d\n"
"              skill=lousy'  would  generate  a  post  chunk  that  looks  like\n"
"              'name=daniel&skill=lousy'.\n"
"\n"
, stdout);
 fputs(
"              If  you  start  the data with the letter @, the rest should be a\n"
"              file name to read the data from, or - if you want curl  to  read\n"
"              the  data  from stdin.  The contents of the file must already be\n"
"              url-encoded. Multiple files can also be specified. Posting  data\n"
"              from  a file named 'foobar' would thus be done with --data @foo-\n"
"              bar\".\n"
"\n"
"              To post data purely binary, you should instead use  the  --data-\n"
, stdout);
 fputs(
"              binary option.\n"
"\n"
"              -d/--data is the same as --data-ascii.\n"
"\n"
"              If  this  option  is  used several times, the ones following the\n"
"              first will append data.\n"
"\n"
"       --data-ascii <data>\n"
"              (HTTP) This is an alias for the -d/--data option.\n"
"\n"
"              If this option is used several times,  the  ones  following  the\n"
"              first will append data.\n"
"\n"
"       --data-binary <data>\n"
, stdout);
 fputs(
"              (HTTP) This posts data in a similar manner as --data-ascii does,\n"
"              although when using this option the entire context of the posted\n"
"              data  is  kept  as-is. If you want to post a binary file without\n"
"              the strip-newlines feature of the --data-ascii option,  this  is\n"
"              for you.\n"
"\n"
"              If  this  option  is  used several times, the ones following the\n"
"              first will append data.\n"
"\n"
"       --digest\n"
, stdout);
 fputs(
"              (HTTP) Enables HTTP Digest authentication. This is a authentica-\n"
"              tion that prevents the password from being sent over the wire in\n"
"              clear text. Use this in combination with  the  normal  -u/--user\n"
"              option to set user name and password. See also --ntlm, --negoti-\n"
"              ate and --anyauth for related options. (Added in curl 7.10.6)\n"
"\n"
"              If this option is used several times, the following  occurrences\n"
, stdout);
 fputs(
"              make no difference.\n"
"\n"
"       --disable-eprt\n"
"              (FTP) Tell curl to disable the use of the EPRT and LPRT commands\n"
"              when doing active FTP transfers. Curl will normally always first\n"
"              attempt  to use EPRT, then LPRT before using PORT, but with this\n"
"              option, it will use PORT right away. EPRT and  LPRT  are  exten-\n"
"              sions  to the original FTP protocol, may not work on all servers\n"
, stdout);
 fputs(
"              but enable more functionality in a better way  than  the  tradi-\n"
"              tional PORT command. (Aded in 7.10.5)\n"
"\n"
"              If  this option is used several times, each occurrence will tog-\n"
"              gle this on/off.\n"
"\n"
"       --disable-epsv\n"
"              (FTP) Tell curl to disable the use  of  the  EPSV  command  when\n"
"              doing  passive  FTP  transfers.  Curl will normally always first\n"
, stdout);
 fputs(
"              attempt to use EPSV before PASV, but with this option,  it  will\n"
"              not try using EPSV.\n"
"\n"
"              If  this option is used several times, each occurrence will tog-\n"
"              gle this on/off.\n"
"\n"
"       -D/--dump-header <file>\n"
"              Write the protocol headers to the specified file.\n"
"\n"
"              This option is handy to use when you want to store  the  headers\n"
"              that  a  HTTP  site sends to you. Cookies from the headers could\n"
, stdout);
 fputs(
"              then be read in a second curl invoke by  using  the  -b/--cookie\n"
"              option!  The  -c/--cookie-jar  option is however a better way to\n"
"              store cookies.\n"
"\n"
"              When used on FTP, the ftp server response lines  are  considered\n"
"              being \"headers\" and thus are saved there.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       -e/--referer <URL>\n"
, stdout);
 fputs(
"              (HTTP) Sends the \"Referer Page\" information to the HTTP  server.\n"
"              This  can also be set with the -H/--header flag of course.  When\n"
"              used with -L/--location you can append \";auto\"  to  the  referer\n"
"              URL to make curl automatically set the previous URL when it fol-\n"
"              lows a Location: header. The \";auto\" string can be  used  alone,\n"
"              even if you don't set an initial referer.\n"
"\n"
, stdout);
 fputs(
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --environment\n"
"              (RISC OS ONLY) Sets a range of environment variables, using  the\n"
"              names the -w option supports, to easier allow extraction of use-\n"
"              ful information after having run curl.\n"
"\n"
"              If this option is used several times, each occurrence will  tog-\n"
"              gle this on/off.\n"
"\n"
"       --egd-file <file>\n"
, stdout);
 fputs(
"              (HTTPS)  Specify  the  path name to the Entropy Gathering Daemon\n"
"              socket. The socket is used to seed the  random  engine  for  SSL\n"
"              connections. See also the --random-file option.\n"
"\n"
"       -E/--cert <certificate[:password]>\n"
"              (HTTPS)  Tells  curl  to use the specified certificate file when\n"
"              getting a file with HTTPS. The certificate must be in  PEM  for-\n"
"              mat.   If  the  optional  password  isn't  specified, it will be\n"
, stdout);
 fputs(
"              queried for on the terminal. Note that this certificate  is  the\n"
"              private key and the private certificate concatenated!\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --cert-type <type>\n"
"              (SSL) Tells curl what certificate type the provided  certificate\n"
"              is in. PEM, DER and ENG are recognized types.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
, stdout);
 fputs(
"       --cacert <CA certificate>\n"
"              (HTTPS) Tells curl to use the specified certificate file to ver-\n"
"              ify the peer. The file may contain multiple CA certificates. The\n"
"              certificate(s) must be in PEM format.\n"
"\n"
"              curl recognizes the environment variable named  'CURL_CA_BUNDLE'\n"
"              if  that  is set, and uses the given path as a path to a CA cert\n"

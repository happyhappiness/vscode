<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_235_curl-7.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handleSock5Proxy<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">char<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">proxy_name<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">proxy_password<pos:position pos:line="3" pos:column="31"/></name></decl></parameter>,
    <parameter><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">connectdata<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">conn<pos:position pos:line="4" pos:column="29"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">sock<pos:position pos:line="5" pos:column="13"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="14"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">unsigned<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">char<pos:position pos:line="7" pos:column="16"/></name></type> <name><name pos:line="7" pos:column="17">socksreq<pos:position pos:line="7" pos:column="25"/></name><index pos:line="7" pos:column="25">[<expr><literal type="number" pos:line="7" pos:column="26">600<pos:position pos:line="7" pos:column="29"/></literal></expr>]<pos:position pos:line="7" pos:column="30"/></index></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt> <comment type="block" pos:line="7" pos:column="32">/* room for large user/pw (255 max each) */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">ssize_t<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">actualread<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">ssize_t<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">written<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">CURLcode<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">result<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">Curl_nonblock<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">sock<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="23">FALSE<pos:position pos:line="12" pos:column="28"/></name></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="14" pos:column="3">socksreq<pos:position pos:line="14" pos:column="11"/></name><index pos:line="14" pos:column="11">[<expr><literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>]<pos:position pos:line="14" pos:column="14"/></index></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <literal type="number" pos:line="14" pos:column="17">5<pos:position pos:line="14" pos:column="18"/></literal></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt> <comment type="block" pos:line="14" pos:column="20">/* version */</comment>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">socksreq<pos:position pos:line="15" pos:column="11"/></name><index pos:line="15" pos:column="11">[<expr><literal type="number" pos:line="15" pos:column="12">1<pos:position pos:line="15" pos:column="13"/></literal></expr>]<pos:position pos:line="15" pos:column="14"/></index></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <call pos:line="15" pos:column="17">(<name pos:line="15" pos:column="18">char<pos:position pos:line="15" pos:column="22"/></name>)<argument_list pos:line="15" pos:column="23">(<argument><expr><ternary><condition><expr><name><name pos:line="15" pos:column="24">proxy_name<pos:position pos:line="15" pos:column="34"/></name><index pos:line="15" pos:column="34">[<expr><literal type="number" pos:line="15" pos:column="35">0<pos:position pos:line="15" pos:column="36"/></literal></expr>]<pos:position pos:line="15" pos:column="37"/></index></name></expr> ?<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39"> <expr><literal type="number" pos:line="15" pos:column="40">2<pos:position pos:line="15" pos:column="41"/></literal></expr> <pos:position pos:line="15" pos:column="42"/></then><else pos:line="15" pos:column="42">: <expr><literal type="number" pos:line="15" pos:column="44">1<pos:position pos:line="15" pos:column="45"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="47"/></expr_stmt> <comment type="block" pos:line="15" pos:column="48">/* number of methods (below) */</comment>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">socksreq<pos:position pos:line="16" pos:column="11"/></name><index pos:line="16" pos:column="11">[<expr><literal type="number" pos:line="16" pos:column="12">2<pos:position pos:line="16" pos:column="13"/></literal></expr>]<pos:position pos:line="16" pos:column="14"/></index></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="17">0<pos:position pos:line="16" pos:column="18"/></literal></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt> <comment type="block" pos:line="16" pos:column="20">/* no authentication */</comment>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">socksreq<pos:position pos:line="17" pos:column="11"/></name><index pos:line="17" pos:column="11">[<expr><literal type="number" pos:line="17" pos:column="12">3<pos:position pos:line="17" pos:column="13"/></literal></expr>]<pos:position pos:line="17" pos:column="14"/></index></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <literal type="number" pos:line="17" pos:column="17">2<pos:position pos:line="17" pos:column="18"/></literal></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt> <comment type="block" pos:line="17" pos:column="20">/* username/password */</comment>

  <expr_stmt><expr><name pos:line="19" pos:column="3">result<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">Curl_write<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">conn<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="29">sock<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="35">(<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">char<pos:position pos:line="19" pos:column="40"/></name> <operator pos:line="19" pos:column="41">*<pos:position pos:line="19" pos:column="42"/></operator><operator pos:line="19" pos:column="42">)<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="43">socksreq<pos:position pos:line="19" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="53">(<pos:position pos:line="19" pos:column="54"/></operator><literal type="number" pos:line="19" pos:column="54">2<pos:position pos:line="19" pos:column="55"/></literal> <operator pos:line="19" pos:column="56">+<pos:position pos:line="19" pos:column="57"/></operator> <operator pos:line="19" pos:column="58">(<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="59">int<pos:position pos:line="19" pos:column="62"/></name><operator pos:line="19" pos:column="62">)<pos:position pos:line="19" pos:column="63"/></operator><name><name pos:line="19" pos:column="63">socksreq<pos:position pos:line="19" pos:column="71"/></name><index pos:line="19" pos:column="71">[<expr><literal type="number" pos:line="19" pos:column="72">1<pos:position pos:line="19" pos:column="73"/></literal></expr>]<pos:position pos:line="19" pos:column="74"/></index></name><operator pos:line="19" pos:column="74">)<pos:position pos:line="19" pos:column="75"/></operator></expr></argument>,
                      <argument><expr><operator pos:line="20" pos:column="23">&amp;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="24">written<pos:position pos:line="20" pos:column="31"/></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">(<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">result<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">!=<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">CURLE_OK<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">)<pos:position pos:line="21" pos:column="27"/></operator> <operator pos:line="21" pos:column="28">||<pos:position pos:line="21" pos:column="30"/></operator> <operator pos:line="21" pos:column="31">(<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="32">written<pos:position pos:line="21" pos:column="39"/></name> <operator pos:line="21" pos:column="40">!=<pos:position pos:line="21" pos:column="42"/></operator> <operator pos:line="21" pos:column="43">(<pos:position pos:line="21" pos:column="44"/></operator><literal type="number" pos:line="21" pos:column="44">2<pos:position pos:line="21" pos:column="45"/></literal> <operator pos:line="21" pos:column="46">+<pos:position pos:line="21" pos:column="47"/></operator> <operator pos:line="21" pos:column="48">(<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="49">int<pos:position pos:line="21" pos:column="52"/></name><operator pos:line="21" pos:column="52">)<pos:position pos:line="21" pos:column="53"/></operator><name><name pos:line="21" pos:column="53">socksreq<pos:position pos:line="21" pos:column="61"/></name><index pos:line="21" pos:column="61">[<expr><literal type="number" pos:line="21" pos:column="62">1<pos:position pos:line="21" pos:column="63"/></literal></expr>]<pos:position pos:line="21" pos:column="64"/></index></name><operator pos:line="21" pos:column="64">)<pos:position pos:line="21" pos:column="65"/></operator><operator pos:line="21" pos:column="65">)<pos:position pos:line="21" pos:column="66"/></operator></expr>)<pos:position pos:line="21" pos:column="67"/></condition><then pos:line="21" pos:column="67"> <block pos:line="21" pos:column="68">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">failf<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><name><name pos:line="22" pos:column="11">conn<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">data<pos:position pos:line="22" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"Unable to send initial SOCKS5 request."<pos:position pos:line="22" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><literal type="number" pos:line="23" pos:column="12">1<pos:position pos:line="23" pos:column="13"/></literal></expr>;<pos:position pos:line="23" pos:column="14"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="26" pos:column="3">result<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator><call><name pos:line="26" pos:column="10">Curl_read<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">conn<pos:position pos:line="26" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="26">sock<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="32">(<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="33">char<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">*<pos:position pos:line="26" pos:column="39"/></operator><operator pos:line="26" pos:column="39">)<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="40">socksreq<pos:position pos:line="26" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="50">2<pos:position pos:line="26" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="53">&amp;<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="54">actualread<pos:position pos:line="26" pos:column="64"/></name></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="66"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><operator pos:line="27" pos:column="7">(<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">result<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">!=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">CURLE_OK<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">)<pos:position pos:line="27" pos:column="27"/></operator> <operator pos:line="27" pos:column="28">||<pos:position pos:line="27" pos:column="30"/></operator> <operator pos:line="27" pos:column="31">(<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">actualread<pos:position pos:line="27" pos:column="42"/></name> <operator pos:line="27" pos:column="43">!=<pos:position pos:line="27" pos:column="45"/></operator> <literal type="number" pos:line="27" pos:column="46">2<pos:position pos:line="27" pos:column="47"/></literal><operator pos:line="27" pos:column="47">)<pos:position pos:line="27" pos:column="48"/></operator></expr>)<pos:position pos:line="27" pos:column="49"/></condition><then pos:line="27" pos:column="49"> <block pos:line="27" pos:column="50">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">failf<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><name><name pos:line="28" pos:column="11">conn<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">data<pos:position pos:line="28" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="23">"Unable to receive initial SOCKS5 response."<pos:position pos:line="28" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="69"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><literal type="number" pos:line="29" pos:column="12">1<pos:position pos:line="29" pos:column="13"/></literal></expr>;<pos:position pos:line="29" pos:column="14"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name><name pos:line="32" pos:column="7">socksreq<pos:position pos:line="32" pos:column="15"/></name><index pos:line="32" pos:column="15">[<expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>]<pos:position pos:line="32" pos:column="18"/></index></name> <operator pos:line="32" pos:column="19">!=<pos:position pos:line="32" pos:column="21"/></operator> <literal type="number" pos:line="32" pos:column="22">5<pos:position pos:line="32" pos:column="23"/></literal></expr>)<pos:position pos:line="32" pos:column="24"/></condition><then pos:line="32" pos:column="24"> <block pos:line="32" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">failf<pos:position pos:line="33" pos:column="10"/></name><argument_list pos:line="33" pos:column="10">(<argument><expr><name><name pos:line="33" pos:column="11">conn<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">data<pos:position pos:line="33" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="23">"Received invalid version in initial SOCKS5 response."<pos:position pos:line="33" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="79"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><literal type="number" pos:line="34" pos:column="12">1<pos:position pos:line="34" pos:column="13"/></literal></expr>;<pos:position pos:line="34" pos:column="14"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name><name pos:line="36" pos:column="7">socksreq<pos:position pos:line="36" pos:column="15"/></name><index pos:line="36" pos:column="15">[<expr><literal type="number" pos:line="36" pos:column="16">1<pos:position pos:line="36" pos:column="17"/></literal></expr>]<pos:position pos:line="36" pos:column="18"/></index></name> <operator pos:line="36" pos:column="19">==<pos:position pos:line="36" pos:column="21"/></operator> <literal type="number" pos:line="36" pos:column="22">0<pos:position pos:line="36" pos:column="23"/></literal></expr>)<pos:position pos:line="36" pos:column="24"/></condition><then pos:line="36" pos:column="24"> <block pos:line="36" pos:column="25">{
    <comment type="block" pos:line="37" pos:column="5">/* Nothing to do, no authentication needed */</comment>
    <empty_stmt pos:line="38" pos:column="5">;<pos:position pos:line="38" pos:column="6"/></empty_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></then>
  <elseif pos:line="40" pos:column="3">else <if pos:line="40" pos:column="8">if <condition pos:line="40" pos:column="11">(<expr><name><name pos:line="40" pos:column="12">socksreq<pos:position pos:line="40" pos:column="20"/></name><index pos:line="40" pos:column="20">[<expr><literal type="number" pos:line="40" pos:column="21">1<pos:position pos:line="40" pos:column="22"/></literal></expr>]<pos:position pos:line="40" pos:column="23"/></index></name> <operator pos:line="40" pos:column="24">==<pos:position pos:line="40" pos:column="26"/></operator> <literal type="number" pos:line="40" pos:column="27">2<pos:position pos:line="40" pos:column="28"/></literal></expr>)<pos:position pos:line="40" pos:column="29"/></condition><then pos:line="40" pos:column="29"> <block pos:line="40" pos:column="30">{
    <comment type="block" pos:line="41" pos:column="5">/* Needs user name and password */</comment>
    <decl_stmt><decl><type><name pos:line="42" pos:column="5">int<pos:position pos:line="42" pos:column="8"/></name></type> <name pos:line="42" pos:column="9">userlen<pos:position pos:line="42" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="42" pos:column="18">pwlen<pos:position pos:line="42" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="42" pos:column="25">len<pos:position pos:line="42" pos:column="28"/></name></decl>;<pos:position pos:line="42" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><name pos:line="44" pos:column="5">userlen<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <call><name pos:line="44" pos:column="15">strlen<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">proxy_name<pos:position pos:line="44" pos:column="32"/></name></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">pwlen<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">=<pos:position pos:line="45" pos:column="12"/></operator> <call><name pos:line="45" pos:column="13">strlen<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">(<argument><expr><name pos:line="45" pos:column="20">proxy_password<pos:position pos:line="45" pos:column="34"/></name></expr></argument>)<pos:position pos:line="45" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="47" pos:column="5">/*   username/password request looks like
     * +----+------+----------+------+----------+
     * |VER | ULEN |  UNAME   | PLEN |  PASSWD  |
     * +----+------+----------+------+----------+
     * | 1  |  1   | 1 to 255 |  1   | 1 to 255 |
     * +----+------+----------+------+----------+
     */</comment>
    <expr_stmt><expr><name pos:line="54" pos:column="5">len<pos:position pos:line="54" pos:column="8"/></name> <operator pos:line="54" pos:column="9">=<pos:position pos:line="54" pos:column="10"/></operator> <literal type="number" pos:line="54" pos:column="11">0<pos:position pos:line="54" pos:column="12"/></literal></expr>;<pos:position pos:line="54" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">socksreq<pos:position pos:line="55" pos:column="13"/></name><index pos:line="55" pos:column="13">[<expr><name pos:line="55" pos:column="14">len<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">++<pos:position pos:line="55" pos:column="19"/></operator></expr>]<pos:position pos:line="55" pos:column="20"/></index></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <literal type="number" pos:line="55" pos:column="23">1<pos:position pos:line="55" pos:column="24"/></literal></expr>;<pos:position pos:line="55" pos:column="25"/></expr_stmt>    <comment type="block" pos:line="55" pos:column="29">/* username/pw subnegotiation version */</comment>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">socksreq<pos:position pos:line="56" pos:column="13"/></name><index pos:line="56" pos:column="13">[<expr><name pos:line="56" pos:column="14">len<pos:position pos:line="56" pos:column="17"/></name><operator pos:line="56" pos:column="17">++<pos:position pos:line="56" pos:column="19"/></operator></expr>]<pos:position pos:line="56" pos:column="20"/></index></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <operator pos:line="56" pos:column="23">(<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="24">char<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">)<pos:position pos:line="56" pos:column="29"/></operator> <name pos:line="56" pos:column="30">userlen<pos:position pos:line="56" pos:column="37"/></name></expr>;<pos:position pos:line="56" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">memcpy<pos:position pos:line="57" pos:column="11"/></name><argument_list pos:line="57" pos:column="11">(<argument><expr><name pos:line="57" pos:column="12">socksreq<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">+<pos:position pos:line="57" pos:column="22"/></operator> <name pos:line="57" pos:column="23">len<pos:position pos:line="57" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="28">proxy_name<pos:position pos:line="57" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="40">(<pos:position pos:line="57" pos:column="41"/></operator><name pos:line="57" pos:column="41">int<pos:position pos:line="57" pos:column="44"/></name><operator pos:line="57" pos:column="44">)<pos:position pos:line="57" pos:column="45"/></operator> <name pos:line="57" pos:column="46">userlen<pos:position pos:line="57" pos:column="53"/></name></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="58" pos:column="5">len<pos:position pos:line="58" pos:column="8"/></name> <operator pos:line="58" pos:column="9">+=<pos:position pos:line="58" pos:column="11"/></operator> <name pos:line="58" pos:column="12">userlen<pos:position pos:line="58" pos:column="19"/></name></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">socksreq<pos:position pos:line="59" pos:column="13"/></name><index pos:line="59" pos:column="13">[<expr><name pos:line="59" pos:column="14">len<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">++<pos:position pos:line="59" pos:column="19"/></operator></expr>]<pos:position pos:line="59" pos:column="20"/></index></name> <operator pos:line="59" pos:column="21">=<pos:position pos:line="59" pos:column="22"/></operator> <operator pos:line="59" pos:column="23">(<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="24">char<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">)<pos:position pos:line="59" pos:column="29"/></operator> <name pos:line="59" pos:column="30">pwlen<pos:position pos:line="59" pos:column="35"/></name></expr>;<pos:position pos:line="59" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">memcpy<pos:position pos:line="60" pos:column="11"/></name><argument_list pos:line="60" pos:column="11">(<argument><expr><name pos:line="60" pos:column="12">socksreq<pos:position pos:line="60" pos:column="20"/></name> <operator pos:line="60" pos:column="21">+<pos:position pos:line="60" pos:column="22"/></operator> <name pos:line="60" pos:column="23">len<pos:position pos:line="60" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="28">proxy_password<pos:position pos:line="60" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="44">(<pos:position pos:line="60" pos:column="45"/></operator><name pos:line="60" pos:column="45">int<pos:position pos:line="60" pos:column="48"/></name><operator pos:line="60" pos:column="48">)<pos:position pos:line="60" pos:column="49"/></operator> <name pos:line="60" pos:column="50">pwlen<pos:position pos:line="60" pos:column="55"/></name></expr></argument>)<pos:position pos:line="60" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="61" pos:column="5">len<pos:position pos:line="61" pos:column="8"/></name> <operator pos:line="61" pos:column="9">+=<pos:position pos:line="61" pos:column="11"/></operator> <name pos:line="61" pos:column="12">pwlen<pos:position pos:line="61" pos:column="17"/></name></expr>;<pos:position pos:line="61" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="63" pos:column="5">result<pos:position pos:line="63" pos:column="11"/></name> <operator pos:line="63" pos:column="12">=<pos:position pos:line="63" pos:column="13"/></operator> <call><name pos:line="63" pos:column="14">Curl_write<pos:position pos:line="63" pos:column="24"/></name><argument_list pos:line="63" pos:column="24">(<argument><expr><name pos:line="63" pos:column="25">conn<pos:position pos:line="63" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="31">sock<pos:position pos:line="63" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="37">(<pos:position pos:line="63" pos:column="38"/></operator><name pos:line="63" pos:column="38">char<pos:position pos:line="63" pos:column="42"/></name> <operator pos:line="63" pos:column="43">*<pos:position pos:line="63" pos:column="44"/></operator><operator pos:line="63" pos:column="44">)<pos:position pos:line="63" pos:column="45"/></operator><name pos:line="63" pos:column="45">socksreq<pos:position pos:line="63" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="55">len<pos:position pos:line="63" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="60">&amp;<pos:position pos:line="63" pos:column="65"/></operator><name pos:line="63" pos:column="61">written<pos:position pos:line="63" pos:column="68"/></name></expr></argument>)<pos:position pos:line="63" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="70"/></expr_stmt>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><operator pos:line="64" pos:column="9">(<pos:position pos:line="64" pos:column="10"/></operator><name pos:line="64" pos:column="10">result<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">!=<pos:position pos:line="64" pos:column="19"/></operator> <name pos:line="64" pos:column="20">CURLE_OK<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">)<pos:position pos:line="64" pos:column="29"/></operator> <operator pos:line="64" pos:column="30">||<pos:position pos:line="64" pos:column="32"/></operator> <operator pos:line="64" pos:column="33">(<pos:position pos:line="64" pos:column="34"/></operator><name pos:line="64" pos:column="34">len<pos:position pos:line="64" pos:column="37"/></name> <operator pos:line="64" pos:column="38">!=<pos:position pos:line="64" pos:column="40"/></operator> <name pos:line="64" pos:column="41">written<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">)<pos:position pos:line="64" pos:column="49"/></operator></expr>)<pos:position pos:line="64" pos:column="50"/></condition><then pos:line="64" pos:column="50"> <block pos:line="64" pos:column="51">{
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">failf<pos:position pos:line="65" pos:column="12"/></name><argument_list pos:line="65" pos:column="12">(<argument><expr><name><name pos:line="65" pos:column="13">conn<pos:position pos:line="65" pos:column="17"/></name><operator pos:line="65" pos:column="17">-&gt;<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="19">data<pos:position pos:line="65" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="25">"Failed to send SOCKS5 sub-negotiation request."<pos:position pos:line="65" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="75"/></expr_stmt>
      <return pos:line="66" pos:column="7">return <expr><literal type="number" pos:line="66" pos:column="14">1<pos:position pos:line="66" pos:column="15"/></literal></expr>;<pos:position pos:line="66" pos:column="16"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="69" pos:column="5">result<pos:position pos:line="69" pos:column="11"/></name><operator pos:line="69" pos:column="11">=<pos:position pos:line="69" pos:column="12"/></operator><call><name pos:line="69" pos:column="12">Curl_read<pos:position pos:line="69" pos:column="21"/></name><argument_list pos:line="69" pos:column="21">(<argument><expr><name pos:line="69" pos:column="22">conn<pos:position pos:line="69" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="28">sock<pos:position pos:line="69" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="34">(<pos:position pos:line="69" pos:column="35"/></operator><name pos:line="69" pos:column="35">char<pos:position pos:line="69" pos:column="39"/></name> <operator pos:line="69" pos:column="40">*<pos:position pos:line="69" pos:column="41"/></operator><operator pos:line="69" pos:column="41">)<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="42">socksreq<pos:position pos:line="69" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="52">2<pos:position pos:line="69" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="69" pos:column="55">&amp;<pos:position pos:line="69" pos:column="60"/></operator><name pos:line="69" pos:column="56">actualread<pos:position pos:line="69" pos:column="66"/></name></expr></argument>)<pos:position pos:line="69" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="68"/></expr_stmt>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><operator pos:line="70" pos:column="9">(<pos:position pos:line="70" pos:column="10"/></operator><name pos:line="70" pos:column="10">result<pos:position pos:line="70" pos:column="16"/></name> <operator pos:line="70" pos:column="17">!=<pos:position pos:line="70" pos:column="19"/></operator> <name pos:line="70" pos:column="20">CURLE_OK<pos:position pos:line="70" pos:column="28"/></name><operator pos:line="70" pos:column="28">)<pos:position pos:line="70" pos:column="29"/></operator> <operator pos:line="70" pos:column="30">||<pos:position pos:line="70" pos:column="32"/></operator> <operator pos:line="70" pos:column="33">(<pos:position pos:line="70" pos:column="34"/></operator><name pos:line="70" pos:column="34">actualread<pos:position pos:line="70" pos:column="44"/></name> <operator pos:line="70" pos:column="45">!=<pos:position pos:line="70" pos:column="47"/></operator> <literal type="number" pos:line="70" pos:column="48">2<pos:position pos:line="70" pos:column="49"/></literal><operator pos:line="70" pos:column="49">)<pos:position pos:line="70" pos:column="50"/></operator></expr>)<pos:position pos:line="70" pos:column="51"/></condition><then pos:line="70" pos:column="51"> <block pos:line="70" pos:column="52">{
      <expr_stmt><expr><call><name pos:line="71" pos:column="7">failf<pos:position pos:line="71" pos:column="12"/></name><argument_list pos:line="71" pos:column="12">(<argument><expr><name><name pos:line="71" pos:column="13">conn<pos:position pos:line="71" pos:column="17"/></name><operator pos:line="71" pos:column="17">-&gt;<pos:position pos:line="71" pos:column="22"/></operator><name pos:line="71" pos:column="19">data<pos:position pos:line="71" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="25">"Unable to receive SOCKS5 sub-negotiation response."<pos:position pos:line="71" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="79"/></expr_stmt>
      <return pos:line="72" pos:column="7">return <expr><literal type="number" pos:line="72" pos:column="14">1<pos:position pos:line="72" pos:column="15"/></literal></expr>;<pos:position pos:line="72" pos:column="16"/></return>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><operator pos:line="75" pos:column="9">(<pos:position pos:line="75" pos:column="10"/></operator><name><name pos:line="75" pos:column="10">socksreq<pos:position pos:line="75" pos:column="18"/></name><index pos:line="75" pos:column="18">[<expr><literal type="number" pos:line="75" pos:column="19">0<pos:position pos:line="75" pos:column="20"/></literal></expr>]<pos:position pos:line="75" pos:column="21"/></index></name> <operator pos:line="75" pos:column="22">!=<pos:position pos:line="75" pos:column="24"/></operator> <literal type="number" pos:line="75" pos:column="25">5<pos:position pos:line="75" pos:column="26"/></literal><operator pos:line="75" pos:column="26">)<pos:position pos:line="75" pos:column="27"/></operator> <operator pos:line="75" pos:column="28">||<pos:position pos:line="75" pos:column="30"/></operator> <comment type="block" pos:line="75" pos:column="31">/* version */</comment>
        <operator pos:line="76" pos:column="9">(<pos:position pos:line="76" pos:column="10"/></operator><name><name pos:line="76" pos:column="10">socksreq<pos:position pos:line="76" pos:column="18"/></name><index pos:line="76" pos:column="18">[<expr><literal type="number" pos:line="76" pos:column="19">1<pos:position pos:line="76" pos:column="20"/></literal></expr>]<pos:position pos:line="76" pos:column="21"/></index></name> <operator pos:line="76" pos:column="22">!=<pos:position pos:line="76" pos:column="24"/></operator> <literal type="number" pos:line="76" pos:column="25">0<pos:position pos:line="76" pos:column="26"/></literal><operator pos:line="76" pos:column="26">)<pos:position pos:line="76" pos:column="27"/></operator></expr>)<pos:position pos:line="76" pos:column="28"/></condition><then pos:line="76" pos:column="28"> <block pos:line="76" pos:column="29">{ <comment type="block" pos:line="76" pos:column="31">/* status */</comment>
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">failf<pos:position pos:line="77" pos:column="12"/></name><argument_list pos:line="77" pos:column="12">(<argument><expr><name><name pos:line="77" pos:column="13">conn<pos:position pos:line="77" pos:column="17"/></name><operator pos:line="77" pos:column="17">-&gt;<pos:position pos:line="77" pos:column="22"/></operator><name pos:line="77" pos:column="19">data<pos:position pos:line="77" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="25">"User was rejected by the SOCKS5 server (%d %d)."<pos:position pos:line="77" pos:column="74"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="78" pos:column="13">socksreq<pos:position pos:line="78" pos:column="21"/></name><index pos:line="78" pos:column="21">[<expr><literal type="number" pos:line="78" pos:column="22">0<pos:position pos:line="78" pos:column="23"/></literal></expr>]<pos:position pos:line="78" pos:column="24"/></index></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="26">socksreq<pos:position pos:line="78" pos:column="34"/></name><index pos:line="78" pos:column="34">[<expr><literal type="number" pos:line="78" pos:column="35">1<pos:position pos:line="78" pos:column="36"/></literal></expr>]<pos:position pos:line="78" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="78" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="39"/></expr_stmt>
      <return pos:line="79" pos:column="7">return <expr><literal type="number" pos:line="79" pos:column="14">1<pos:position pos:line="79" pos:column="15"/></literal></expr>;<pos:position pos:line="79" pos:column="16"/></return>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="82" pos:column="5">/* Everything is good so far, user was authenticated! */</comment>
  }<pos:position pos:line="83" pos:column="4"/></block></then></if></elseif>
  <else pos:line="84" pos:column="3">else <block pos:line="84" pos:column="8">{
    <comment type="block" pos:line="85" pos:column="5">/* error */</comment>
    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><name><name pos:line="86" pos:column="9">socksreq<pos:position pos:line="86" pos:column="17"/></name><index pos:line="86" pos:column="17">[<expr><literal type="number" pos:line="86" pos:column="18">1<pos:position pos:line="86" pos:column="19"/></literal></expr>]<pos:position pos:line="86" pos:column="20"/></index></name> <operator pos:line="86" pos:column="21">==<pos:position pos:line="86" pos:column="23"/></operator> <literal type="number" pos:line="86" pos:column="24">1<pos:position pos:line="86" pos:column="25"/></literal></expr>)<pos:position pos:line="86" pos:column="26"/></condition><then pos:line="86" pos:column="26"> <block pos:line="86" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="87" pos:column="7">failf<pos:position pos:line="87" pos:column="12"/></name><argument_list pos:line="87" pos:column="12">(<argument><expr><name><name pos:line="87" pos:column="13">conn<pos:position pos:line="87" pos:column="17"/></name><operator pos:line="87" pos:column="17">-&gt;<pos:position pos:line="87" pos:column="22"/></operator><name pos:line="87" pos:column="19">data<pos:position pos:line="87" pos:column="23"/></name></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="88" pos:column="13">"SOCKS5 GSSAPI per-message authentication is not supported."<pos:position pos:line="88" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="75"/></expr_stmt>
      <return pos:line="89" pos:column="7">return <expr><literal type="number" pos:line="89" pos:column="14">1<pos:position pos:line="89" pos:column="15"/></literal></expr>;<pos:position pos:line="89" pos:column="16"/></return>
    }<pos:position pos:line="90" pos:column="6"/></block></then>
    <elseif pos:line="91" pos:column="5">else <if pos:line="91" pos:column="10">if <condition pos:line="91" pos:column="13">(<expr><name><name pos:line="91" pos:column="14">socksreq<pos:position pos:line="91" pos:column="22"/></name><index pos:line="91" pos:column="22">[<expr><literal type="number" pos:line="91" pos:column="23">1<pos:position pos:line="91" pos:column="24"/></literal></expr>]<pos:position pos:line="91" pos:column="25"/></index></name> <operator pos:line="91" pos:column="26">==<pos:position pos:line="91" pos:column="28"/></operator> <literal type="number" pos:line="91" pos:column="29">255<pos:position pos:line="91" pos:column="32"/></literal></expr>)<pos:position pos:line="91" pos:column="33"/></condition><then pos:line="91" pos:column="33"> <block pos:line="91" pos:column="34">{
      <if pos:line="92" pos:column="7">if <condition pos:line="92" pos:column="10">(<expr><name><name pos:line="92" pos:column="11">proxy_name<pos:position pos:line="92" pos:column="21"/></name><index pos:line="92" pos:column="21">[<expr><literal type="number" pos:line="92" pos:column="22">0<pos:position pos:line="92" pos:column="23"/></literal></expr>]<pos:position pos:line="92" pos:column="24"/></index></name> <operator pos:line="92" pos:column="25">==<pos:position pos:line="92" pos:column="27"/></operator> <literal type="number" pos:line="92" pos:column="28">0<pos:position pos:line="92" pos:column="29"/></literal></expr>)<pos:position pos:line="92" pos:column="30"/></condition><then pos:line="92" pos:column="30"> <block pos:line="92" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">failf<pos:position pos:line="93" pos:column="14"/></name><argument_list pos:line="93" pos:column="14">(<argument><expr><name><name pos:line="93" pos:column="15">conn<pos:position pos:line="93" pos:column="19"/></name><operator pos:line="93" pos:column="19">-&gt;<pos:position pos:line="93" pos:column="24"/></operator><name pos:line="93" pos:column="21">data<pos:position pos:line="93" pos:column="25"/></name></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="94" pos:column="15">"No authentication method was acceptable. (It is quite likely"<pos:position pos:line="94" pos:column="77"/></literal>
              <literal type="string" pos:line="95" pos:column="15">" that the SOCKS5 server wanted a username/password, since none"<pos:position pos:line="95" pos:column="79"/></literal>
              <literal type="string" pos:line="96" pos:column="15">" was supplied to the server on this connection.)"<pos:position pos:line="96" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="67"/></expr_stmt>
      }<pos:position pos:line="97" pos:column="8"/></block></then>
      <else pos:line="98" pos:column="7">else <block pos:line="98" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="99" pos:column="9">failf<pos:position pos:line="99" pos:column="14"/></name><argument_list pos:line="99" pos:column="14">(<argument><expr><name><name pos:line="99" pos:column="15">conn<pos:position pos:line="99" pos:column="19"/></name><operator pos:line="99" pos:column="19">-&gt;<pos:position pos:line="99" pos:column="24"/></operator><name pos:line="99" pos:column="21">data<pos:position pos:line="99" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="27">"No authentication method was acceptable."<pos:position pos:line="99" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="71"/></expr_stmt>
      }<pos:position pos:line="100" pos:column="8"/></block></else></if>
      <return pos:line="101" pos:column="7">return <expr><literal type="number" pos:line="101" pos:column="14">1<pos:position pos:line="101" pos:column="15"/></literal></expr>;<pos:position pos:line="101" pos:column="16"/></return>
    }<pos:position pos:line="102" pos:column="6"/></block></then></if></elseif>
    <else pos:line="103" pos:column="5">else <block pos:line="103" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="104" pos:column="7">failf<pos:position pos:line="104" pos:column="12"/></name><argument_list pos:line="104" pos:column="12">(<argument><expr><name><name pos:line="104" pos:column="13">conn<pos:position pos:line="104" pos:column="17"/></name><operator pos:line="104" pos:column="17">-&gt;<pos:position pos:line="104" pos:column="22"/></operator><name pos:line="104" pos:column="19">data<pos:position pos:line="104" pos:column="23"/></name></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="105" pos:column="13">"Undocumented SOCKS5 mode attempted to be used by server."<pos:position pos:line="105" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="73"/></expr_stmt>
      <return pos:line="106" pos:column="7">return <expr><literal type="number" pos:line="106" pos:column="14">1<pos:position pos:line="106" pos:column="15"/></literal></expr>;<pos:position pos:line="106" pos:column="16"/></return>
    }<pos:position pos:line="107" pos:column="6"/></block></else></if>
  }<pos:position pos:line="108" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="110" pos:column="3">/* Authentication is complete, now specify destination to the proxy */</comment>
  <expr_stmt><expr><name><name pos:line="111" pos:column="3">socksreq<pos:position pos:line="111" pos:column="11"/></name><index pos:line="111" pos:column="11">[<expr><literal type="number" pos:line="111" pos:column="12">0<pos:position pos:line="111" pos:column="13"/></literal></expr>]<pos:position pos:line="111" pos:column="14"/></index></name> <operator pos:line="111" pos:column="15">=<pos:position pos:line="111" pos:column="16"/></operator> <literal type="number" pos:line="111" pos:column="17">5<pos:position pos:line="111" pos:column="18"/></literal></expr>;<pos:position pos:line="111" pos:column="19"/></expr_stmt> <comment type="block" pos:line="111" pos:column="20">/* version (SOCKS5) */</comment>
  <expr_stmt><expr><name><name pos:line="112" pos:column="3">socksreq<pos:position pos:line="112" pos:column="11"/></name><index pos:line="112" pos:column="11">[<expr><literal type="number" pos:line="112" pos:column="12">1<pos:position pos:line="112" pos:column="13"/></literal></expr>]<pos:position pos:line="112" pos:column="14"/></index></name> <operator pos:line="112" pos:column="15">=<pos:position pos:line="112" pos:column="16"/></operator> <literal type="number" pos:line="112" pos:column="17">1<pos:position pos:line="112" pos:column="18"/></literal></expr>;<pos:position pos:line="112" pos:column="19"/></expr_stmt> <comment type="block" pos:line="112" pos:column="20">/* connect */</comment>
  <expr_stmt><expr><name><name pos:line="113" pos:column="3">socksreq<pos:position pos:line="113" pos:column="11"/></name><index pos:line="113" pos:column="11">[<expr><literal type="number" pos:line="113" pos:column="12">2<pos:position pos:line="113" pos:column="13"/></literal></expr>]<pos:position pos:line="113" pos:column="14"/></index></name> <operator pos:line="113" pos:column="15">=<pos:position pos:line="113" pos:column="16"/></operator> <literal type="number" pos:line="113" pos:column="17">0<pos:position pos:line="113" pos:column="18"/></literal></expr>;<pos:position pos:line="113" pos:column="19"/></expr_stmt> <comment type="block" pos:line="113" pos:column="20">/* must be zero */</comment>
  <expr_stmt><expr><name><name pos:line="114" pos:column="3">socksreq<pos:position pos:line="114" pos:column="11"/></name><index pos:line="114" pos:column="11">[<expr><literal type="number" pos:line="114" pos:column="12">3<pos:position pos:line="114" pos:column="13"/></literal></expr>]<pos:position pos:line="114" pos:column="14"/></index></name> <operator pos:line="114" pos:column="15">=<pos:position pos:line="114" pos:column="16"/></operator> <literal type="number" pos:line="114" pos:column="17">1<pos:position pos:line="114" pos:column="18"/></literal></expr>;<pos:position pos:line="114" pos:column="19"/></expr_stmt> <comment type="block" pos:line="114" pos:column="20">/* IPv4 = 1 */</comment>

  <block pos:line="116" pos:column="3">{
<cpp:ifndef pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">ifndef<pos:position pos:line="117" pos:column="8"/></cpp:directive> <name pos:line="117" pos:column="9">ENABLE_IPV6<pos:position pos:line="117" pos:column="20"/></name></cpp:ifndef>
    <decl_stmt><decl><type><name><name pos:line="118" pos:column="5">struct<pos:position pos:line="118" pos:column="11"/></name> <name pos:line="118" pos:column="12">Curl_dns_entry<pos:position pos:line="118" pos:column="26"/></name></name> <modifier pos:line="118" pos:column="27">*<pos:position pos:line="118" pos:column="28"/></modifier></type><name pos:line="118" pos:column="28">dns<pos:position pos:line="118" pos:column="31"/></name></decl>;<pos:position pos:line="118" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="119" pos:column="5">Curl_addrinfo<pos:position pos:line="119" pos:column="18"/></name> <modifier pos:line="119" pos:column="19">*<pos:position pos:line="119" pos:column="20"/></modifier></type><name pos:line="119" pos:column="20">hp<pos:position pos:line="119" pos:column="22"/></name><init pos:line="119" pos:column="22">=<expr><name pos:line="119" pos:column="23">NULL<pos:position pos:line="119" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="119" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><name pos:line="120" pos:column="5">dns<pos:position pos:line="120" pos:column="8"/></name> <operator pos:line="120" pos:column="9">=<pos:position pos:line="120" pos:column="10"/></operator> <call><name pos:line="120" pos:column="11">Curl_resolv<pos:position pos:line="120" pos:column="22"/></name><argument_list pos:line="120" pos:column="22">(<argument><expr><name><name pos:line="120" pos:column="23">conn<pos:position pos:line="120" pos:column="27"/></name><operator pos:line="120" pos:column="27">-&gt;<pos:position pos:line="120" pos:column="32"/></operator><name pos:line="120" pos:column="29">data<pos:position pos:line="120" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="35">conn<pos:position pos:line="120" pos:column="39"/></name><operator pos:line="120" pos:column="39">-&gt;<pos:position pos:line="120" pos:column="44"/></operator><name pos:line="120" pos:column="41">hostname<pos:position pos:line="120" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="51">conn<pos:position pos:line="120" pos:column="55"/></name><operator pos:line="120" pos:column="55">-&gt;<pos:position pos:line="120" pos:column="60"/></operator><name pos:line="120" pos:column="57">remote_port<pos:position pos:line="120" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="70"/></expr_stmt>
    <comment type="block" pos:line="121" pos:column="5">/*
     * We cannot use 'hostent' as a struct that Curl_resolv() returns.  It
     * returns a Curl_addrinfo pointer that may not always look the same.
     */</comment>
    <if pos:line="125" pos:column="5">if<condition pos:line="125" pos:column="7">(<expr><name pos:line="125" pos:column="8">dns<pos:position pos:line="125" pos:column="11"/></name></expr>)<pos:position pos:line="125" pos:column="12"/></condition><then pos:line="125" pos:column="12">
      <block type="pseudo"><expr_stmt><expr><name pos:line="126" pos:column="7">hp<pos:position pos:line="126" pos:column="9"/></name><operator pos:line="126" pos:column="9">=<pos:position pos:line="126" pos:column="10"/></operator><name><name pos:line="126" pos:column="10">dns<pos:position pos:line="126" pos:column="13"/></name><operator pos:line="126" pos:column="13">-&gt;<pos:position pos:line="126" pos:column="18"/></operator><name pos:line="126" pos:column="15">addr<pos:position pos:line="126" pos:column="19"/></name></name></expr>;<pos:position pos:line="126" pos:column="20"/></expr_stmt></block></then></if>
    <if pos:line="127" pos:column="5">if <condition pos:line="127" pos:column="8">(<expr><name pos:line="127" pos:column="9">hp<pos:position pos:line="127" pos:column="11"/></name> <operator pos:line="127" pos:column="12">&amp;&amp;<pos:position pos:line="127" pos:column="22"/></operator> <name><name pos:line="127" pos:column="15">hp<pos:position pos:line="127" pos:column="17"/></name><operator pos:line="127" pos:column="17">-&gt;<pos:position pos:line="127" pos:column="22"/></operator><name pos:line="127" pos:column="19">h_addr_list<pos:position pos:line="127" pos:column="30"/></name><index pos:line="127" pos:column="30">[<expr><literal type="number" pos:line="127" pos:column="31">0<pos:position pos:line="127" pos:column="32"/></literal></expr>]<pos:position pos:line="127" pos:column="33"/></index></name></expr>)<pos:position pos:line="127" pos:column="34"/></condition><then pos:line="127" pos:column="34"> <block pos:line="127" pos:column="35">{
      <expr_stmt><expr><name><name pos:line="128" pos:column="7">socksreq<pos:position pos:line="128" pos:column="15"/></name><index pos:line="128" pos:column="15">[<expr><literal type="number" pos:line="128" pos:column="16">4<pos:position pos:line="128" pos:column="17"/></literal></expr>]<pos:position pos:line="128" pos:column="18"/></index></name> <operator pos:line="128" pos:column="19">=<pos:position pos:line="128" pos:column="20"/></operator> <operator pos:line="128" pos:column="21">(<pos:position pos:line="128" pos:column="22"/></operator><operator pos:line="128" pos:column="22">(<pos:position pos:line="128" pos:column="23"/></operator><name pos:line="128" pos:column="23">char<pos:position pos:line="128" pos:column="27"/></name><operator pos:line="128" pos:column="27">*<pos:position pos:line="128" pos:column="28"/></operator><operator pos:line="128" pos:column="28">)<pos:position pos:line="128" pos:column="29"/></operator><name><name pos:line="128" pos:column="29">hp<pos:position pos:line="128" pos:column="31"/></name><operator pos:line="128" pos:column="31">-&gt;<pos:position pos:line="128" pos:column="36"/></operator><name pos:line="128" pos:column="33">h_addr_list<pos:position pos:line="128" pos:column="44"/></name><index pos:line="128" pos:column="44">[<expr><literal type="number" pos:line="128" pos:column="45">0<pos:position pos:line="128" pos:column="46"/></literal></expr>]<pos:position pos:line="128" pos:column="47"/></index></name><operator pos:line="128" pos:column="47">)<pos:position pos:line="128" pos:column="48"/></operator><index pos:line="128" pos:column="48">[<expr><literal type="number" pos:line="128" pos:column="49">0<pos:position pos:line="128" pos:column="50"/></literal></expr>]<pos:position pos:line="128" pos:column="51"/></index></expr>;<pos:position pos:line="128" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="129" pos:column="7">socksreq<pos:position pos:line="129" pos:column="15"/></name><index pos:line="129" pos:column="15">[<expr><literal type="number" pos:line="129" pos:column="16">5<pos:position pos:line="129" pos:column="17"/></literal></expr>]<pos:position pos:line="129" pos:column="18"/></index></name> <operator pos:line="129" pos:column="19">=<pos:position pos:line="129" pos:column="20"/></operator> <operator pos:line="129" pos:column="21">(<pos:position pos:line="129" pos:column="22"/></operator><operator pos:line="129" pos:column="22">(<pos:position pos:line="129" pos:column="23"/></operator><name pos:line="129" pos:column="23">char<pos:position pos:line="129" pos:column="27"/></name><operator pos:line="129" pos:column="27">*<pos:position pos:line="129" pos:column="28"/></operator><operator pos:line="129" pos:column="28">)<pos:position pos:line="129" pos:column="29"/></operator><name><name pos:line="129" pos:column="29">hp<pos:position pos:line="129" pos:column="31"/></name><operator pos:line="129" pos:column="31">-&gt;<pos:position pos:line="129" pos:column="36"/></operator><name pos:line="129" pos:column="33">h_addr_list<pos:position pos:line="129" pos:column="44"/></name><index pos:line="129" pos:column="44">[<expr><literal type="number" pos:line="129" pos:column="45">0<pos:position pos:line="129" pos:column="46"/></literal></expr>]<pos:position pos:line="129" pos:column="47"/></index></name><operator pos:line="129" pos:column="47">)<pos:position pos:line="129" pos:column="48"/></operator><index pos:line="129" pos:column="48">[<expr><literal type="number" pos:line="129" pos:column="49">1<pos:position pos:line="129" pos:column="50"/></literal></expr>]<pos:position pos:line="129" pos:column="51"/></index></expr>;<pos:position pos:line="129" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="130" pos:column="7">socksreq<pos:position pos:line="130" pos:column="15"/></name><index pos:line="130" pos:column="15">[<expr><literal type="number" pos:line="130" pos:column="16">6<pos:position pos:line="130" pos:column="17"/></literal></expr>]<pos:position pos:line="130" pos:column="18"/></index></name> <operator pos:line="130" pos:column="19">=<pos:position pos:line="130" pos:column="20"/></operator> <operator pos:line="130" pos:column="21">(<pos:position pos:line="130" pos:column="22"/></operator><operator pos:line="130" pos:column="22">(<pos:position pos:line="130" pos:column="23"/></operator><name pos:line="130" pos:column="23">char<pos:position pos:line="130" pos:column="27"/></name><operator pos:line="130" pos:column="27">*<pos:position pos:line="130" pos:column="28"/></operator><operator pos:line="130" pos:column="28">)<pos:position pos:line="130" pos:column="29"/></operator><name><name pos:line="130" pos:column="29">hp<pos:position pos:line="130" pos:column="31"/></name><operator pos:line="130" pos:column="31">-&gt;<pos:position pos:line="130" pos:column="36"/></operator><name pos:line="130" pos:column="33">h_addr_list<pos:position pos:line="130" pos:column="44"/></name><index pos:line="130" pos:column="44">[<expr><literal type="number" pos:line="130" pos:column="45">0<pos:position pos:line="130" pos:column="46"/></literal></expr>]<pos:position pos:line="130" pos:column="47"/></index></name><operator pos:line="130" pos:column="47">)<pos:position pos:line="130" pos:column="48"/></operator><index pos:line="130" pos:column="48">[<expr><literal type="number" pos:line="130" pos:column="49">2<pos:position pos:line="130" pos:column="50"/></literal></expr>]<pos:position pos:line="130" pos:column="51"/></index></expr>;<pos:position pos:line="130" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="131" pos:column="7">socksreq<pos:position pos:line="131" pos:column="15"/></name><index pos:line="131" pos:column="15">[<expr><literal type="number" pos:line="131" pos:column="16">7<pos:position pos:line="131" pos:column="17"/></literal></expr>]<pos:position pos:line="131" pos:column="18"/></index></name> <operator pos:line="131" pos:column="19">=<pos:position pos:line="131" pos:column="20"/></operator> <operator pos:line="131" pos:column="21">(<pos:position pos:line="131" pos:column="22"/></operator><operator pos:line="131" pos:column="22">(<pos:position pos:line="131" pos:column="23"/></operator><name pos:line="131" pos:column="23">char<pos:position pos:line="131" pos:column="27"/></name><operator pos:line="131" pos:column="27">*<pos:position pos:line="131" pos:column="28"/></operator><operator pos:line="131" pos:column="28">)<pos:position pos:line="131" pos:column="29"/></operator><name><name pos:line="131" pos:column="29">hp<pos:position pos:line="131" pos:column="31"/></name><operator pos:line="131" pos:column="31">-&gt;<pos:position pos:line="131" pos:column="36"/></operator><name pos:line="131" pos:column="33">h_addr_list<pos:position pos:line="131" pos:column="44"/></name><index pos:line="131" pos:column="44">[<expr><literal type="number" pos:line="131" pos:column="45">0<pos:position pos:line="131" pos:column="46"/></literal></expr>]<pos:position pos:line="131" pos:column="47"/></index></name><operator pos:line="131" pos:column="47">)<pos:position pos:line="131" pos:column="48"/></operator><index pos:line="131" pos:column="48">[<expr><literal type="number" pos:line="131" pos:column="49">3<pos:position pos:line="131" pos:column="50"/></literal></expr>]<pos:position pos:line="131" pos:column="51"/></index></expr>;<pos:position pos:line="131" pos:column="52"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="133" pos:column="7">Curl_resolv_unlock<pos:position pos:line="133" pos:column="25"/></name><argument_list pos:line="133" pos:column="25">(<argument><expr><name><name pos:line="133" pos:column="26">conn<pos:position pos:line="133" pos:column="30"/></name><operator pos:line="133" pos:column="30">-&gt;<pos:position pos:line="133" pos:column="35"/></operator><name pos:line="133" pos:column="32">data<pos:position pos:line="133" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="38">dns<pos:position pos:line="133" pos:column="41"/></name></expr></argument>)<pos:position pos:line="133" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="43"/></expr_stmt> <comment type="block" pos:line="133" pos:column="44">/* not used anymore from now on */</comment>
    }<pos:position pos:line="134" pos:column="6"/></block></then>
    <else pos:line="135" pos:column="5">else <block pos:line="135" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="136" pos:column="7">failf<pos:position pos:line="136" pos:column="12"/></name><argument_list pos:line="136" pos:column="12">(<argument><expr><name><name pos:line="136" pos:column="13">conn<pos:position pos:line="136" pos:column="17"/></name><operator pos:line="136" pos:column="17">-&gt;<pos:position pos:line="136" pos:column="22"/></operator><name pos:line="136" pos:column="19">data<pos:position pos:line="136" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="25">"Failed to resolve \"%s\" for SOCKS5 connect."<pos:position pos:line="136" pos:column="71"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="137" pos:column="13">conn<pos:position pos:line="137" pos:column="17"/></name><operator pos:line="137" pos:column="17">-&gt;<pos:position pos:line="137" pos:column="22"/></operator><name pos:line="137" pos:column="19">hostname<pos:position pos:line="137" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="137" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="29"/></expr_stmt>
      <return pos:line="138" pos:column="7">return <expr><literal type="number" pos:line="138" pos:column="14">1<pos:position pos:line="138" pos:column="15"/></literal></expr>;<pos:position pos:line="138" pos:column="16"/></return>
    }<pos:position pos:line="139" pos:column="6"/></block></else></if>
<cpp:else pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">else<pos:position pos:line="140" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="141" pos:column="5">failf<pos:position pos:line="141" pos:column="10"/></name><argument_list pos:line="141" pos:column="10">(<argument><expr><name><name pos:line="141" pos:column="11">conn<pos:position pos:line="141" pos:column="15"/></name><operator pos:line="141" pos:column="15">-&gt;<pos:position pos:line="141" pos:column="20"/></operator><name pos:line="141" pos:column="17">data<pos:position pos:line="141" pos:column="21"/></name></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="142" pos:column="11">"%s:%d has an internal error an needs to be fixed to work"<pos:position pos:line="142" pos:column="69"/></literal></expr></argument>,
          <argument><expr><name pos:line="143" pos:column="11">__FILE__<pos:position pos:line="143" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="21">__LINE__<pos:position pos:line="143" pos:column="29"/></name></expr></argument>)<pos:position pos:line="143" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="31"/></expr_stmt>
    <return pos:line="144" pos:column="5">return <expr><literal type="number" pos:line="144" pos:column="12">1<pos:position pos:line="144" pos:column="13"/></literal></expr>;<pos:position pos:line="144" pos:column="14"/></return>
<cpp:endif pos:line="145" pos:column="1">#<cpp:directive pos:line="145" pos:column="2">endif<pos:position pos:line="145" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="146" pos:column="4"/></block>

  <expr_stmt><expr><operator pos:line="148" pos:column="3">*<pos:position pos:line="148" pos:column="4"/></operator><operator pos:line="148" pos:column="4">(<pos:position pos:line="148" pos:column="5"/></operator><operator pos:line="148" pos:column="5">(<pos:position pos:line="148" pos:column="6"/></operator><name pos:line="148" pos:column="6">unsigned<pos:position pos:line="148" pos:column="14"/></name> <name pos:line="148" pos:column="15">short<pos:position pos:line="148" pos:column="20"/></name><operator pos:line="148" pos:column="20">*<pos:position pos:line="148" pos:column="21"/></operator><operator pos:line="148" pos:column="21">)<pos:position pos:line="148" pos:column="22"/></operator><operator pos:line="148" pos:column="22">&amp;<pos:position pos:line="148" pos:column="27"/></operator><name><name pos:line="148" pos:column="23">socksreq<pos:position pos:line="148" pos:column="31"/></name><index pos:line="148" pos:column="31">[<expr><literal type="number" pos:line="148" pos:column="32">8<pos:position pos:line="148" pos:column="33"/></literal></expr>]<pos:position pos:line="148" pos:column="34"/></index></name><operator pos:line="148" pos:column="34">)<pos:position pos:line="148" pos:column="35"/></operator> <operator pos:line="148" pos:column="36">=<pos:position pos:line="148" pos:column="37"/></operator> <call><name pos:line="148" pos:column="38">htons<pos:position pos:line="148" pos:column="43"/></name><argument_list pos:line="148" pos:column="43">(<argument><expr><name><name pos:line="148" pos:column="44">conn<pos:position pos:line="148" pos:column="48"/></name><operator pos:line="148" pos:column="48">-&gt;<pos:position pos:line="148" pos:column="53"/></operator><name pos:line="148" pos:column="50">remote_port<pos:position pos:line="148" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="63"/></expr_stmt>

  <block pos:line="150" pos:column="3">{
    <decl_stmt><decl><type><specifier pos:line="151" pos:column="5">const<pos:position pos:line="151" pos:column="10"/></specifier> <name pos:line="151" pos:column="11">int<pos:position pos:line="151" pos:column="14"/></name></type> <name pos:line="151" pos:column="15">packetsize<pos:position pos:line="151" pos:column="25"/></name> <init pos:line="151" pos:column="26">= <expr><literal type="number" pos:line="151" pos:column="28">10<pos:position pos:line="151" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="151" pos:column="31"/></decl_stmt>

    <expr_stmt><expr><name pos:line="153" pos:column="5">result<pos:position pos:line="153" pos:column="11"/></name> <operator pos:line="153" pos:column="12">=<pos:position pos:line="153" pos:column="13"/></operator> <call><name pos:line="153" pos:column="14">Curl_write<pos:position pos:line="153" pos:column="24"/></name><argument_list pos:line="153" pos:column="24">(<argument><expr><name pos:line="153" pos:column="25">conn<pos:position pos:line="153" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="31">sock<pos:position pos:line="153" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="153" pos:column="37">(<pos:position pos:line="153" pos:column="38"/></operator><name pos:line="153" pos:column="38">char<pos:position pos:line="153" pos:column="42"/></name> <operator pos:line="153" pos:column="43">*<pos:position pos:line="153" pos:column="44"/></operator><operator pos:line="153" pos:column="44">)<pos:position pos:line="153" pos:column="45"/></operator><name pos:line="153" pos:column="45">socksreq<pos:position pos:line="153" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="55">packetsize<pos:position pos:line="153" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="153" pos:column="67">&amp;<pos:position pos:line="153" pos:column="72"/></operator><name pos:line="153" pos:column="68">written<pos:position pos:line="153" pos:column="75"/></name></expr></argument>)<pos:position pos:line="153" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="77"/></expr_stmt>
    <if pos:line="154" pos:column="5">if <condition pos:line="154" pos:column="8">(<expr><operator pos:line="154" pos:column="9">(<pos:position pos:line="154" pos:column="10"/></operator><name pos:line="154" pos:column="10">result<pos:position pos:line="154" pos:column="16"/></name> <operator pos:line="154" pos:column="17">!=<pos:position pos:line="154" pos:column="19"/></operator> <name pos:line="154" pos:column="20">CURLE_OK<pos:position pos:line="154" pos:column="28"/></name><operator pos:line="154" pos:column="28">)<pos:position pos:line="154" pos:column="29"/></operator> <operator pos:line="154" pos:column="30">||<pos:position pos:line="154" pos:column="32"/></operator> <operator pos:line="154" pos:column="33">(<pos:position pos:line="154" pos:column="34"/></operator><name pos:line="154" pos:column="34">written<pos:position pos:line="154" pos:column="41"/></name> <operator pos:line="154" pos:column="42">!=<pos:position pos:line="154" pos:column="44"/></operator> <name pos:line="154" pos:column="45">packetsize<pos:position pos:line="154" pos:column="55"/></name><operator pos:line="154" pos:column="55">)<pos:position pos:line="154" pos:column="56"/></operator></expr>)<pos:position pos:line="154" pos:column="57"/></condition><then pos:line="154" pos:column="57"> <block pos:line="154" pos:column="58">{
      <expr_stmt><expr><call><name pos:line="155" pos:column="7">failf<pos:position pos:line="155" pos:column="12"/></name><argument_list pos:line="155" pos:column="12">(<argument><expr><name><name pos:line="155" pos:column="13">conn<pos:position pos:line="155" pos:column="17"/></name><operator pos:line="155" pos:column="17">-&gt;<pos:position pos:line="155" pos:column="22"/></operator><name pos:line="155" pos:column="19">data<pos:position pos:line="155" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="25">"Failed to send SOCKS5 connect request."<pos:position pos:line="155" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="67"/></expr_stmt>
      <return pos:line="156" pos:column="7">return <expr><literal type="number" pos:line="156" pos:column="14">1<pos:position pos:line="156" pos:column="15"/></literal></expr>;<pos:position pos:line="156" pos:column="16"/></return>
    }<pos:position pos:line="157" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="159" pos:column="5">result<pos:position pos:line="159" pos:column="11"/></name> <operator pos:line="159" pos:column="12">=<pos:position pos:line="159" pos:column="13"/></operator> <call><name pos:line="159" pos:column="14">Curl_read<pos:position pos:line="159" pos:column="23"/></name><argument_list pos:line="159" pos:column="23">(<argument><expr><name pos:line="159" pos:column="24">conn<pos:position pos:line="159" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="30">sock<pos:position pos:line="159" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="159" pos:column="36">(<pos:position pos:line="159" pos:column="37"/></operator><name pos:line="159" pos:column="37">char<pos:position pos:line="159" pos:column="41"/></name> <operator pos:line="159" pos:column="42">*<pos:position pos:line="159" pos:column="43"/></operator><operator pos:line="159" pos:column="43">)<pos:position pos:line="159" pos:column="44"/></operator><name pos:line="159" pos:column="44">socksreq<pos:position pos:line="159" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="54">packetsize<pos:position pos:line="159" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="159" pos:column="66">&amp;<pos:position pos:line="159" pos:column="71"/></operator><name pos:line="159" pos:column="67">actualread<pos:position pos:line="159" pos:column="77"/></name></expr></argument>)<pos:position pos:line="159" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="79"/></expr_stmt>
    <if pos:line="160" pos:column="5">if <condition pos:line="160" pos:column="8">(<expr><operator pos:line="160" pos:column="9">(<pos:position pos:line="160" pos:column="10"/></operator><name pos:line="160" pos:column="10">result<pos:position pos:line="160" pos:column="16"/></name> <operator pos:line="160" pos:column="17">!=<pos:position pos:line="160" pos:column="19"/></operator> <name pos:line="160" pos:column="20">CURLE_OK<pos:position pos:line="160" pos:column="28"/></name><operator pos:line="160" pos:column="28">)<pos:position pos:line="160" pos:column="29"/></operator> <operator pos:line="160" pos:column="30">||<pos:position pos:line="160" pos:column="32"/></operator> <operator pos:line="160" pos:column="33">(<pos:position pos:line="160" pos:column="34"/></operator><name pos:line="160" pos:column="34">actualread<pos:position pos:line="160" pos:column="44"/></name> <operator pos:line="160" pos:column="45">!=<pos:position pos:line="160" pos:column="47"/></operator> <name pos:line="160" pos:column="48">packetsize<pos:position pos:line="160" pos:column="58"/></name><operator pos:line="160" pos:column="58">)<pos:position pos:line="160" pos:column="59"/></operator></expr>)<pos:position pos:line="160" pos:column="60"/></condition><then pos:line="160" pos:column="60"> <block pos:line="160" pos:column="61">{
      <expr_stmt><expr><call><name pos:line="161" pos:column="7">failf<pos:position pos:line="161" pos:column="12"/></name><argument_list pos:line="161" pos:column="12">(<argument><expr><name><name pos:line="161" pos:column="13">conn<pos:position pos:line="161" pos:column="17"/></name><operator pos:line="161" pos:column="17">-&gt;<pos:position pos:line="161" pos:column="22"/></operator><name pos:line="161" pos:column="19">data<pos:position pos:line="161" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="25">"Failed to receive SOCKS5 connect request ack."<pos:position pos:line="161" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="74"/></expr_stmt>
      <return pos:line="162" pos:column="7">return <expr><literal type="number" pos:line="162" pos:column="14">1<pos:position pos:line="162" pos:column="15"/></literal></expr>;<pos:position pos:line="162" pos:column="16"/></return>
    }<pos:position pos:line="163" pos:column="6"/></block></then></if>

    <if pos:line="165" pos:column="5">if <condition pos:line="165" pos:column="8">(<expr><name><name pos:line="165" pos:column="9">socksreq<pos:position pos:line="165" pos:column="17"/></name><index pos:line="165" pos:column="17">[<expr><literal type="number" pos:line="165" pos:column="18">0<pos:position pos:line="165" pos:column="19"/></literal></expr>]<pos:position pos:line="165" pos:column="20"/></index></name> <operator pos:line="165" pos:column="21">!=<pos:position pos:line="165" pos:column="23"/></operator> <literal type="number" pos:line="165" pos:column="24">5<pos:position pos:line="165" pos:column="25"/></literal></expr>)<pos:position pos:line="165" pos:column="26"/></condition><then pos:line="165" pos:column="26"> <block pos:line="165" pos:column="27">{ <comment type="block" pos:line="165" pos:column="29">/* version */</comment>
      <expr_stmt><expr><call><name pos:line="166" pos:column="7">failf<pos:position pos:line="166" pos:column="12"/></name><argument_list pos:line="166" pos:column="12">(<argument><expr><name><name pos:line="166" pos:column="13">conn<pos:position pos:line="166" pos:column="17"/></name><operator pos:line="166" pos:column="17">-&gt;<pos:position pos:line="166" pos:column="22"/></operator><name pos:line="166" pos:column="19">data<pos:position pos:line="166" pos:column="23"/></name></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="167" pos:column="13">"SOCKS5 reply has wrong version, version should be 5."<pos:position pos:line="167" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="69"/></expr_stmt>
      <return pos:line="168" pos:column="7">return <expr><literal type="number" pos:line="168" pos:column="14">1<pos:position pos:line="168" pos:column="15"/></literal></expr>;<pos:position pos:line="168" pos:column="16"/></return>
    }<pos:position pos:line="169" pos:column="6"/></block></then></if>
    <if pos:line="170" pos:column="5">if <condition pos:line="170" pos:column="8">(<expr><name><name pos:line="170" pos:column="9">socksreq<pos:position pos:line="170" pos:column="17"/></name><index pos:line="170" pos:column="17">[<expr><literal type="number" pos:line="170" pos:column="18">1<pos:position pos:line="170" pos:column="19"/></literal></expr>]<pos:position pos:line="170" pos:column="20"/></index></name> <operator pos:line="170" pos:column="21">!=<pos:position pos:line="170" pos:column="23"/></operator> <literal type="number" pos:line="170" pos:column="24">0<pos:position pos:line="170" pos:column="25"/></literal></expr>)<pos:position pos:line="170" pos:column="26"/></condition><then pos:line="170" pos:column="26"> <block pos:line="170" pos:column="27">{ <comment type="block" pos:line="170" pos:column="29">/* Anything besides 0 is an error */</comment>
        <expr_stmt><expr><call><name pos:line="171" pos:column="9">failf<pos:position pos:line="171" pos:column="14"/></name><argument_list pos:line="171" pos:column="14">(<argument><expr><name><name pos:line="171" pos:column="15">conn<pos:position pos:line="171" pos:column="19"/></name><operator pos:line="171" pos:column="19">-&gt;<pos:position pos:line="171" pos:column="24"/></operator><name pos:line="171" pos:column="21">data<pos:position pos:line="171" pos:column="25"/></name></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="172" pos:column="15">"Can't complete SOCKS5 connection to %d.%d.%d.%d:%d. (%d)"<pos:position pos:line="172" pos:column="73"/></literal></expr></argument>,
              <argument><expr><operator pos:line="173" pos:column="15">(<pos:position pos:line="173" pos:column="16"/></operator><name pos:line="173" pos:column="16">unsigned<pos:position pos:line="173" pos:column="24"/></name> <name pos:line="173" pos:column="25">char<pos:position pos:line="173" pos:column="29"/></name><operator pos:line="173" pos:column="29">)<pos:position pos:line="173" pos:column="30"/></operator><name><name pos:line="173" pos:column="30">socksreq<pos:position pos:line="173" pos:column="38"/></name><index pos:line="173" pos:column="38">[<expr><literal type="number" pos:line="173" pos:column="39">4<pos:position pos:line="173" pos:column="40"/></literal></expr>]<pos:position pos:line="173" pos:column="41"/></index></name></expr></argument>, <argument><expr><operator pos:line="173" pos:column="43">(<pos:position pos:line="173" pos:column="44"/></operator><name pos:line="173" pos:column="44">unsigned<pos:position pos:line="173" pos:column="52"/></name> <name pos:line="173" pos:column="53">char<pos:position pos:line="173" pos:column="57"/></name><operator pos:line="173" pos:column="57">)<pos:position pos:line="173" pos:column="58"/></operator><name><name pos:line="173" pos:column="58">socksreq<pos:position pos:line="173" pos:column="66"/></name><index pos:line="173" pos:column="66">[<expr><literal type="number" pos:line="173" pos:column="67">5<pos:position pos:line="173" pos:column="68"/></literal></expr>]<pos:position pos:line="173" pos:column="69"/></index></name></expr></argument>,
              <argument><expr><operator pos:line="174" pos:column="15">(<pos:position pos:line="174" pos:column="16"/></operator><name pos:line="174" pos:column="16">unsigned<pos:position pos:line="174" pos:column="24"/></name> <name pos:line="174" pos:column="25">char<pos:position pos:line="174" pos:column="29"/></name><operator pos:line="174" pos:column="29">)<pos:position pos:line="174" pos:column="30"/></operator><name><name pos:line="174" pos:column="30">socksreq<pos:position pos:line="174" pos:column="38"/></name><index pos:line="174" pos:column="38">[<expr><literal type="number" pos:line="174" pos:column="39">6<pos:position pos:line="174" pos:column="40"/></literal></expr>]<pos:position pos:line="174" pos:column="41"/></index></name></expr></argument>, <argument><expr><operator pos:line="174" pos:column="43">(<pos:position pos:line="174" pos:column="44"/></operator><name pos:line="174" pos:column="44">unsigned<pos:position pos:line="174" pos:column="52"/></name> <name pos:line="174" pos:column="53">char<pos:position pos:line="174" pos:column="57"/></name><operator pos:line="174" pos:column="57">)<pos:position pos:line="174" pos:column="58"/></operator><name><name pos:line="174" pos:column="58">socksreq<pos:position pos:line="174" pos:column="66"/></name><index pos:line="174" pos:column="66">[<expr><literal type="number" pos:line="174" pos:column="67">7<pos:position pos:line="174" pos:column="68"/></literal></expr>]<pos:position pos:line="174" pos:column="69"/></index></name></expr></argument>,
              <argument><expr><operator pos:line="175" pos:column="15">(<pos:position pos:line="175" pos:column="16"/></operator><name pos:line="175" pos:column="16">unsigned<pos:position pos:line="175" pos:column="24"/></name> <name pos:line="175" pos:column="25">int<pos:position pos:line="175" pos:column="28"/></name><operator pos:line="175" pos:column="28">)<pos:position pos:line="175" pos:column="29"/></operator><call><name pos:line="175" pos:column="29">ntohs<pos:position pos:line="175" pos:column="34"/></name><argument_list pos:line="175" pos:column="34">(<argument><expr><operator pos:line="175" pos:column="35">*<pos:position pos:line="175" pos:column="36"/></operator><operator pos:line="175" pos:column="36">(<pos:position pos:line="175" pos:column="37"/></operator><name pos:line="175" pos:column="37">unsigned<pos:position pos:line="175" pos:column="45"/></name> <name pos:line="175" pos:column="46">short<pos:position pos:line="175" pos:column="51"/></name><operator pos:line="175" pos:column="51">*<pos:position pos:line="175" pos:column="52"/></operator><operator pos:line="175" pos:column="52">)<pos:position pos:line="175" pos:column="53"/></operator><operator pos:line="175" pos:column="53">(<pos:position pos:line="175" pos:column="54"/></operator><operator pos:line="175" pos:column="54">&amp;<pos:position pos:line="175" pos:column="59"/></operator><name><name pos:line="175" pos:column="55">socksreq<pos:position pos:line="175" pos:column="63"/></name><index pos:line="175" pos:column="63">[<expr><literal type="number" pos:line="175" pos:column="64">8<pos:position pos:line="175" pos:column="65"/></literal></expr>]<pos:position pos:line="175" pos:column="66"/></index></name><operator pos:line="175" pos:column="66">)<pos:position pos:line="175" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="175" pos:column="68"/></argument_list></call></expr></argument>,
              <argument><expr><name><name pos:line="176" pos:column="15">socksreq<pos:position pos:line="176" pos:column="23"/></name><index pos:line="176" pos:column="23">[<expr><literal type="number" pos:line="176" pos:column="24">1<pos:position pos:line="176" pos:column="25"/></literal></expr>]<pos:position pos:line="176" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="176" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="28"/></expr_stmt>
        <return pos:line="177" pos:column="9">return <expr><literal type="number" pos:line="177" pos:column="16">1<pos:position pos:line="177" pos:column="17"/></literal></expr>;<pos:position pos:line="177" pos:column="18"/></return>
    }<pos:position pos:line="178" pos:column="6"/></block></then></if>
  }<pos:position pos:line="179" pos:column="4"/></block>

  <expr_stmt><expr><call><name pos:line="181" pos:column="3">Curl_nonblock<pos:position pos:line="181" pos:column="16"/></name><argument_list pos:line="181" pos:column="16">(<argument><expr><name pos:line="181" pos:column="17">sock<pos:position pos:line="181" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="23">TRUE<pos:position pos:line="181" pos:column="27"/></name></expr></argument>)<pos:position pos:line="181" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="29"/></expr_stmt>
  <return pos:line="182" pos:column="3">return <expr><literal type="number" pos:line="182" pos:column="10">0<pos:position pos:line="182" pos:column="11"/></literal></expr>;<pos:position pos:line="182" pos:column="12"/></return> <comment type="block" pos:line="182" pos:column="13">/* Proxy was successful! */</comment>
}<pos:position pos:line="183" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1795.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">wc_statemach<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">connectdata<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">conn<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">WildcardData<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier> <specifier pos:line="3" pos:column="25">const<pos:position pos:line="3" pos:column="30"/></specifier></type> <name pos:line="3" pos:column="31">wildcard<pos:position pos:line="3" pos:column="39"/></name> <init pos:line="3" pos:column="40">= <expr><operator pos:line="3" pos:column="42">&amp;<pos:position pos:line="3" pos:column="47"/></operator><operator pos:line="3" pos:column="43">(<pos:position pos:line="3" pos:column="44"/></operator><name><name pos:line="3" pos:column="44">conn<pos:position pos:line="3" pos:column="48"/></name><operator pos:line="3" pos:column="48">-&gt;<pos:position pos:line="3" pos:column="53"/></operator><name pos:line="3" pos:column="50">data<pos:position pos:line="3" pos:column="54"/></name><operator pos:line="3" pos:column="54">-&gt;<pos:position pos:line="3" pos:column="59"/></operator><name pos:line="3" pos:column="56">wildcard<pos:position pos:line="3" pos:column="64"/></name></name><operator pos:line="3" pos:column="64">)<pos:position pos:line="3" pos:column="65"/></operator></expr></init></decl>;<pos:position pos:line="3" pos:column="66"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

  <switch pos:line="6" pos:column="3">switch <condition pos:line="6" pos:column="10">(<expr><name><name pos:line="6" pos:column="11">wildcard<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">state<pos:position pos:line="6" pos:column="26"/></name></name></expr>)<pos:position pos:line="6" pos:column="27"/></condition> <block pos:line="6" pos:column="28">{
  <case pos:line="7" pos:column="3">case <expr><name pos:line="7" pos:column="8">CURLWC_INIT<pos:position pos:line="7" pos:column="19"/></name></expr>:<pos:position pos:line="7" pos:column="20"/></case>
    <expr_stmt><expr><name pos:line="8" pos:column="5">result<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">init_wc_data<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">conn<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
    <if pos:line="9" pos:column="5">if<condition pos:line="9" pos:column="7">(<expr><name><name pos:line="9" pos:column="8">wildcard<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">state<pos:position pos:line="9" pos:column="23"/></name></name> <operator pos:line="9" pos:column="24">==<pos:position pos:line="9" pos:column="26"/></operator> <name pos:line="9" pos:column="27">CURLWC_CLEAN<pos:position pos:line="9" pos:column="39"/></name></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40">
      <comment type="block" pos:line="10" pos:column="7">/* only listing! */</comment>
      <block type="pseudo"><break pos:line="11" pos:column="7">break;<pos:position pos:line="11" pos:column="13"/></break></block></then>
    <else pos:line="12" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="7">wildcard<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">state<pos:position pos:line="13" pos:column="22"/></name></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <ternary><condition><expr><name pos:line="13" pos:column="25">result<pos:position pos:line="13" pos:column="31"/></name></expr> ?<pos:position pos:line="13" pos:column="33"/></condition><then pos:line="13" pos:column="33"> <expr><name pos:line="13" pos:column="34">CURLWC_ERROR<pos:position pos:line="13" pos:column="46"/></name></expr> <pos:position pos:line="13" pos:column="47"/></then><else pos:line="13" pos:column="47">: <expr><name pos:line="13" pos:column="49">CURLWC_MATCHING<pos:position pos:line="13" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt></block></else></if>
    <break pos:line="14" pos:column="5">break;<pos:position pos:line="14" pos:column="11"/></break>

  <case pos:line="16" pos:column="3">case <expr><name pos:line="16" pos:column="8">CURLWC_MATCHING<pos:position pos:line="16" pos:column="23"/></name></expr>:<pos:position pos:line="16" pos:column="24"/></case> <block pos:line="16" pos:column="25">{
    <comment type="block" pos:line="17" pos:column="5">/* In this state is LIST response successfully parsed, so lets restore
       previous WRITEFUNCTION callback and WRITEDATA pointer */</comment>
    <decl_stmt><decl><type><name><name pos:line="19" pos:column="5">struct<pos:position pos:line="19" pos:column="11"/></name> <name pos:line="19" pos:column="12">ftp_wc_tmpdata<pos:position pos:line="19" pos:column="26"/></name></name> <modifier pos:line="19" pos:column="27">*<pos:position pos:line="19" pos:column="28"/></modifier></type><name pos:line="19" pos:column="28">ftp_tmp<pos:position pos:line="19" pos:column="35"/></name> <init pos:line="19" pos:column="36">= <expr><name><name pos:line="19" pos:column="38">wildcard<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">-&gt;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="48">tmp<pos:position pos:line="19" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="19" pos:column="52"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">conn<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">data<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">set<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">.<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">fwrite_func<pos:position pos:line="20" pos:column="32"/></name></name> <operator pos:line="20" pos:column="33">=<pos:position pos:line="20" pos:column="34"/></operator> <name><name pos:line="20" pos:column="35">ftp_tmp<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">backup<pos:position pos:line="20" pos:column="50"/></name><operator pos:line="20" pos:column="50">.<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="51">write_function<pos:position pos:line="20" pos:column="65"/></name></name></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">conn<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">-&gt;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="11">data<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">set<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">.<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">out<pos:position pos:line="21" pos:column="24"/></name></name> <operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator> <name><name pos:line="21" pos:column="27">ftp_tmp<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">backup<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">.<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="43">file_descriptor<pos:position pos:line="21" pos:column="58"/></name></name></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">ftp_tmp<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">backup<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">.<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">write_function<pos:position pos:line="22" pos:column="35"/></name></name> <operator pos:line="22" pos:column="36">=<pos:position pos:line="22" pos:column="37"/></operator> <name pos:line="22" pos:column="38">ZERO_NULL<pos:position pos:line="22" pos:column="47"/></name></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">ftp_tmp<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">backup<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">.<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">file_descriptor<pos:position pos:line="23" pos:column="36"/></name></name> <operator pos:line="23" pos:column="37">=<pos:position pos:line="23" pos:column="38"/></operator> <name pos:line="23" pos:column="39">NULL<pos:position pos:line="23" pos:column="43"/></name></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">wildcard<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">state<pos:position pos:line="24" pos:column="20"/></name></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">CURLWC_DOWNLOADING<pos:position pos:line="24" pos:column="41"/></name></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>

    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><call><name pos:line="26" pos:column="8">Curl_ftp_parselist_geterror<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><name><name pos:line="26" pos:column="36">ftp_tmp<pos:position pos:line="26" pos:column="43"/></name><operator pos:line="26" pos:column="43">-&gt;<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="45">parser<pos:position pos:line="26" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53"> <block pos:line="26" pos:column="54">{
      <comment type="block" pos:line="27" pos:column="7">/* error found in LIST parsing */</comment>
      <expr_stmt><expr><name><name pos:line="28" pos:column="7">wildcard<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">state<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <name pos:line="28" pos:column="25">CURLWC_CLEAN<pos:position pos:line="28" pos:column="37"/></name></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
      <return pos:line="29" pos:column="7">return <expr><call><name pos:line="29" pos:column="14">wc_statemach<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><name pos:line="29" pos:column="27">conn<pos:position pos:line="29" pos:column="31"/></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if<condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">wildcard<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">filelist<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">size<pos:position pos:line="31" pos:column="37"/></name></name> <operator pos:line="31" pos:column="38">==<pos:position pos:line="31" pos:column="40"/></operator> <literal type="number" pos:line="31" pos:column="41">0<pos:position pos:line="31" pos:column="42"/></literal></expr>)<pos:position pos:line="31" pos:column="43"/></condition><then pos:line="31" pos:column="43"> <block pos:line="31" pos:column="44">{
      <comment type="block" pos:line="32" pos:column="7">/* no corresponding file */</comment>
      <expr_stmt><expr><name><name pos:line="33" pos:column="7">wildcard<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">state<pos:position pos:line="33" pos:column="22"/></name></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">CURLWC_CLEAN<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
      <return pos:line="34" pos:column="7">return <expr><name pos:line="34" pos:column="14">CURLE_REMOTE_FILE_NOT_FOUND<pos:position pos:line="34" pos:column="41"/></name></expr>;<pos:position pos:line="34" pos:column="42"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if></elseif></if>
    <return pos:line="36" pos:column="5">return <expr><call><name pos:line="36" pos:column="12">wc_statemach<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">conn<pos:position pos:line="36" pos:column="29"/></name></expr></argument>)<pos:position pos:line="36" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="31"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block>

  <case pos:line="39" pos:column="3">case <expr><name pos:line="39" pos:column="8">CURLWC_DOWNLOADING<pos:position pos:line="39" pos:column="26"/></name></expr>:<pos:position pos:line="39" pos:column="27"/></case> <block pos:line="39" pos:column="28">{
    <comment type="block" pos:line="40" pos:column="5">/* filelist has at least one file, lets get first one */</comment>
    <decl_stmt><decl><type><name><name pos:line="41" pos:column="5">struct<pos:position pos:line="41" pos:column="11"/></name> <name pos:line="41" pos:column="12">ftp_conn<pos:position pos:line="41" pos:column="20"/></name></name> <modifier pos:line="41" pos:column="21">*<pos:position pos:line="41" pos:column="22"/></modifier></type><name pos:line="41" pos:column="22">ftpc<pos:position pos:line="41" pos:column="26"/></name> <init pos:line="41" pos:column="27">= <expr><operator pos:line="41" pos:column="29">&amp;<pos:position pos:line="41" pos:column="34"/></operator><name><name pos:line="41" pos:column="30">conn<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">-&gt;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="36">proto<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">.<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="42">ftpc<pos:position pos:line="41" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="41" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="42" pos:column="5">struct<pos:position pos:line="42" pos:column="11"/></name> <name pos:line="42" pos:column="12">curl_fileinfo<pos:position pos:line="42" pos:column="25"/></name></name> <modifier pos:line="42" pos:column="26">*<pos:position pos:line="42" pos:column="27"/></modifier></type><name pos:line="42" pos:column="27">finfo<pos:position pos:line="42" pos:column="32"/></name> <init pos:line="42" pos:column="33">= <expr><name><name pos:line="42" pos:column="35">wildcard<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">-&gt;<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="45">filelist<pos:position pos:line="42" pos:column="53"/></name><operator pos:line="42" pos:column="53">-&gt;<pos:position pos:line="42" pos:column="58"/></operator><name pos:line="42" pos:column="55">head<pos:position pos:line="42" pos:column="59"/></name><operator pos:line="42" pos:column="59">-&gt;<pos:position pos:line="42" pos:column="64"/></operator><name pos:line="42" pos:column="61">ptr<pos:position pos:line="42" pos:column="64"/></name></name></expr></init></decl>;<pos:position pos:line="42" pos:column="65"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="44" pos:column="5">char<pos:position pos:line="44" pos:column="9"/></name> <modifier pos:line="44" pos:column="10">*<pos:position pos:line="44" pos:column="11"/></modifier></type><name pos:line="44" pos:column="11">tmp_path<pos:position pos:line="44" pos:column="19"/></name> <init pos:line="44" pos:column="20">= <expr><call><name pos:line="44" pos:column="22">aprintf<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><literal type="string" pos:line="44" pos:column="30">"%s%s"<pos:position pos:line="44" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="38">wildcard<pos:position pos:line="44" pos:column="46"/></name><operator pos:line="44" pos:column="46">-&gt;<pos:position pos:line="44" pos:column="51"/></operator><name pos:line="44" pos:column="48">path<pos:position pos:line="44" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="54">finfo<pos:position pos:line="44" pos:column="59"/></name><operator pos:line="44" pos:column="59">-&gt;<pos:position pos:line="44" pos:column="64"/></operator><name pos:line="44" pos:column="61">filename<pos:position pos:line="44" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="44" pos:column="71"/></decl_stmt>
    <if pos:line="45" pos:column="5">if<condition pos:line="45" pos:column="7">(<expr><operator pos:line="45" pos:column="8">!<pos:position pos:line="45" pos:column="9"/></operator><name pos:line="45" pos:column="9">tmp_path<pos:position pos:line="45" pos:column="17"/></name></expr>)<pos:position pos:line="45" pos:column="18"/></condition><then pos:line="45" pos:column="18">
      <block type="pseudo"><return pos:line="46" pos:column="7">return <expr><name pos:line="46" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="46" pos:column="33"/></name></expr>;<pos:position pos:line="46" pos:column="34"/></return></block></then></if>

    <comment type="block" pos:line="48" pos:column="5">/* switch default "state.pathbuffer" and tmp_path, good to see
       ftp_parse_url_path function to understand this trick */</comment>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">Curl_safefree<pos:position pos:line="50" pos:column="18"/></name><argument_list pos:line="50" pos:column="18">(<argument><expr><name><name pos:line="50" pos:column="19">conn<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">-&gt;<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="25">data<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="31">state<pos:position pos:line="50" pos:column="36"/></name><operator pos:line="50" pos:column="36">.<pos:position pos:line="50" pos:column="37"/></operator><name pos:line="50" pos:column="37">pathbuffer<pos:position pos:line="50" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">conn<pos:position pos:line="51" pos:column="9"/></name><operator pos:line="51" pos:column="9">-&gt;<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="11">data<pos:position pos:line="51" pos:column="15"/></name><operator pos:line="51" pos:column="15">-&gt;<pos:position pos:line="51" pos:column="20"/></operator><name pos:line="51" pos:column="17">state<pos:position pos:line="51" pos:column="22"/></name><operator pos:line="51" pos:column="22">.<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="23">pathbuffer<pos:position pos:line="51" pos:column="33"/></name></name> <operator pos:line="51" pos:column="34">=<pos:position pos:line="51" pos:column="35"/></operator> <name pos:line="51" pos:column="36">tmp_path<pos:position pos:line="51" pos:column="44"/></name></expr>;<pos:position pos:line="51" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">conn<pos:position pos:line="52" pos:column="9"/></name><operator pos:line="52" pos:column="9">-&gt;<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="11">data<pos:position pos:line="52" pos:column="15"/></name><operator pos:line="52" pos:column="15">-&gt;<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="17">state<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">.<pos:position pos:line="52" pos:column="23"/></operator><name pos:line="52" pos:column="23">path<pos:position pos:line="52" pos:column="27"/></name></name> <operator pos:line="52" pos:column="28">=<pos:position pos:line="52" pos:column="29"/></operator> <name pos:line="52" pos:column="30">tmp_path<pos:position pos:line="52" pos:column="38"/></name></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="54" pos:column="5">infof<pos:position pos:line="54" pos:column="10"/></name><argument_list pos:line="54" pos:column="10">(<argument><expr><name><name pos:line="54" pos:column="11">conn<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">-&gt;<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="17">data<pos:position pos:line="54" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="23">"Wildcard - START of \"%s\"\n"<pos:position pos:line="54" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="55">finfo<pos:position pos:line="54" pos:column="60"/></name><operator pos:line="54" pos:column="60">-&gt;<pos:position pos:line="54" pos:column="65"/></operator><name pos:line="54" pos:column="62">filename<pos:position pos:line="54" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="72"/></expr_stmt>
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><name><name pos:line="55" pos:column="8">conn<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">-&gt;<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="14">data<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">-&gt;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="20">set<pos:position pos:line="55" pos:column="23"/></name><operator pos:line="55" pos:column="23">.<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="24">chunk_bgn<pos:position pos:line="55" pos:column="33"/></name></name></expr>)<pos:position pos:line="55" pos:column="34"/></condition><then pos:line="55" pos:column="34"> <block pos:line="55" pos:column="35">{
      <decl_stmt><decl><type><name pos:line="56" pos:column="7">long<pos:position pos:line="56" pos:column="11"/></name></type> <name pos:line="56" pos:column="12">userresponse<pos:position pos:line="56" pos:column="24"/></name> <init pos:line="56" pos:column="25">= <expr><call><name><name pos:line="56" pos:column="27">conn<pos:position pos:line="56" pos:column="31"/></name><operator pos:line="56" pos:column="31">-&gt;<pos:position pos:line="56" pos:column="36"/></operator><name pos:line="56" pos:column="33">data<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">-&gt;<pos:position pos:line="56" pos:column="42"/></operator><name pos:line="56" pos:column="39">set<pos:position pos:line="56" pos:column="42"/></name><operator pos:line="56" pos:column="42">.<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="43">chunk_bgn<pos:position pos:line="56" pos:column="52"/></name></name><argument_list pos:line="56" pos:column="52">(
          <argument><expr><name pos:line="57" pos:column="11">finfo<pos:position pos:line="57" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="18">wildcard<pos:position pos:line="57" pos:column="26"/></name><operator pos:line="57" pos:column="26">-&gt;<pos:position pos:line="57" pos:column="31"/></operator><name pos:line="57" pos:column="28">customptr<pos:position pos:line="57" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="39">(<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="40">int<pos:position pos:line="57" pos:column="43"/></name><operator pos:line="57" pos:column="43">)<pos:position pos:line="57" pos:column="44"/></operator><name><name pos:line="57" pos:column="44">wildcard<pos:position pos:line="57" pos:column="52"/></name><operator pos:line="57" pos:column="52">-&gt;<pos:position pos:line="57" pos:column="57"/></operator><name pos:line="57" pos:column="54">filelist<pos:position pos:line="57" pos:column="62"/></name><operator pos:line="57" pos:column="62">-&gt;<pos:position pos:line="57" pos:column="67"/></operator><name pos:line="57" pos:column="64">size<pos:position pos:line="57" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="57" pos:column="70"/></decl_stmt>
      <switch pos:line="58" pos:column="7">switch<condition pos:line="58" pos:column="13">(<expr><name pos:line="58" pos:column="14">userresponse<pos:position pos:line="58" pos:column="26"/></name></expr>)<pos:position pos:line="58" pos:column="27"/></condition> <block pos:line="58" pos:column="28">{
      <case pos:line="59" pos:column="7">case <expr><name pos:line="59" pos:column="12">CURL_CHUNK_BGN_FUNC_SKIP<pos:position pos:line="59" pos:column="36"/></name></expr>:<pos:position pos:line="59" pos:column="37"/></case>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">infof<pos:position pos:line="60" pos:column="14"/></name><argument_list pos:line="60" pos:column="14">(<argument><expr><name><name pos:line="60" pos:column="15">conn<pos:position pos:line="60" pos:column="19"/></name><operator pos:line="60" pos:column="19">-&gt;<pos:position pos:line="60" pos:column="24"/></operator><name pos:line="60" pos:column="21">data<pos:position pos:line="60" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="27">"Wildcard - \"%s\" skipped by user\n"<pos:position pos:line="60" pos:column="64"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="61" pos:column="15">finfo<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">-&gt;<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="22">filename<pos:position pos:line="61" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">wildcard<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">-&gt;<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="19">state<pos:position pos:line="62" pos:column="24"/></name></name> <operator pos:line="62" pos:column="25">=<pos:position pos:line="62" pos:column="26"/></operator> <name pos:line="62" pos:column="27">CURLWC_SKIP<pos:position pos:line="62" pos:column="38"/></name></expr>;<pos:position pos:line="62" pos:column="39"/></expr_stmt>
        <return pos:line="63" pos:column="9">return <expr><call><name pos:line="63" pos:column="16">wc_statemach<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><name pos:line="63" pos:column="29">conn<pos:position pos:line="63" pos:column="33"/></name></expr></argument>)<pos:position pos:line="63" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="35"/></return>
      <case pos:line="64" pos:column="7">case <expr><name pos:line="64" pos:column="12">CURL_CHUNK_BGN_FUNC_FAIL<pos:position pos:line="64" pos:column="36"/></name></expr>:<pos:position pos:line="64" pos:column="37"/></case>
        <return pos:line="65" pos:column="9">return <expr><name pos:line="65" pos:column="16">CURLE_CHUNK_FAILED<pos:position pos:line="65" pos:column="34"/></name></expr>;<pos:position pos:line="65" pos:column="35"/></return>
      }<pos:position pos:line="66" pos:column="8"/></block></switch>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <if pos:line="69" pos:column="5">if<condition pos:line="69" pos:column="7">(<expr><name><name pos:line="69" pos:column="8">finfo<pos:position pos:line="69" pos:column="13"/></name><operator pos:line="69" pos:column="13">-&gt;<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="15">filetype<pos:position pos:line="69" pos:column="23"/></name></name> <operator pos:line="69" pos:column="24">!=<pos:position pos:line="69" pos:column="26"/></operator> <name pos:line="69" pos:column="27">CURLFILETYPE_FILE<pos:position pos:line="69" pos:column="44"/></name></expr>)<pos:position pos:line="69" pos:column="45"/></condition><then pos:line="69" pos:column="45"> <block pos:line="69" pos:column="46">{
      <expr_stmt><expr><name><name pos:line="70" pos:column="7">wildcard<pos:position pos:line="70" pos:column="15"/></name><operator pos:line="70" pos:column="15">-&gt;<pos:position pos:line="70" pos:column="20"/></operator><name pos:line="70" pos:column="17">state<pos:position pos:line="70" pos:column="22"/></name></name> <operator pos:line="70" pos:column="23">=<pos:position pos:line="70" pos:column="24"/></operator> <name pos:line="70" pos:column="25">CURLWC_SKIP<pos:position pos:line="70" pos:column="36"/></name></expr>;<pos:position pos:line="70" pos:column="37"/></expr_stmt>
      <return pos:line="71" pos:column="7">return <expr><call><name pos:line="71" pos:column="14">wc_statemach<pos:position pos:line="71" pos:column="26"/></name><argument_list pos:line="71" pos:column="26">(<argument><expr><name pos:line="71" pos:column="27">conn<pos:position pos:line="71" pos:column="31"/></name></expr></argument>)<pos:position pos:line="71" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="33"/></return>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>

    <if pos:line="74" pos:column="5">if<condition pos:line="74" pos:column="7">(<expr><name><name pos:line="74" pos:column="8">finfo<pos:position pos:line="74" pos:column="13"/></name><operator pos:line="74" pos:column="13">-&gt;<pos:position pos:line="74" pos:column="18"/></operator><name pos:line="74" pos:column="15">flags<pos:position pos:line="74" pos:column="20"/></name></name> <operator pos:line="74" pos:column="21">&amp;<pos:position pos:line="74" pos:column="26"/></operator> <name pos:line="74" pos:column="23">CURLFINFOFLAG_KNOWN_SIZE<pos:position pos:line="74" pos:column="47"/></name></expr>)<pos:position pos:line="74" pos:column="48"/></condition><then pos:line="74" pos:column="48">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="75" pos:column="7">ftpc<pos:position pos:line="75" pos:column="11"/></name><operator pos:line="75" pos:column="11">-&gt;<pos:position pos:line="75" pos:column="16"/></operator><name pos:line="75" pos:column="13">known_filesize<pos:position pos:line="75" pos:column="27"/></name></name> <operator pos:line="75" pos:column="28">=<pos:position pos:line="75" pos:column="29"/></operator> <name><name pos:line="75" pos:column="30">finfo<pos:position pos:line="75" pos:column="35"/></name><operator pos:line="75" pos:column="35">-&gt;<pos:position pos:line="75" pos:column="40"/></operator><name pos:line="75" pos:column="37">size<pos:position pos:line="75" pos:column="41"/></name></name></expr>;<pos:position pos:line="75" pos:column="42"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="77" pos:column="5">result<pos:position pos:line="77" pos:column="11"/></name> <operator pos:line="77" pos:column="12">=<pos:position pos:line="77" pos:column="13"/></operator> <call><name pos:line="77" pos:column="14">ftp_parse_url_path<pos:position pos:line="77" pos:column="32"/></name><argument_list pos:line="77" pos:column="32">(<argument><expr><name pos:line="77" pos:column="33">conn<pos:position pos:line="77" pos:column="37"/></name></expr></argument>)<pos:position pos:line="77" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="39"/></expr_stmt>
    <if pos:line="78" pos:column="5">if<condition pos:line="78" pos:column="7">(<expr><name pos:line="78" pos:column="8">result<pos:position pos:line="78" pos:column="14"/></name></expr>)<pos:position pos:line="78" pos:column="15"/></condition><then pos:line="78" pos:column="15">
      <block type="pseudo"><return pos:line="79" pos:column="7">return <expr><name pos:line="79" pos:column="14">result<pos:position pos:line="79" pos:column="20"/></name></expr>;<pos:position pos:line="79" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="81" pos:column="5">/* we don't need the Curl_fileinfo of first file anymore */</comment>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">Curl_llist_remove<pos:position pos:line="82" pos:column="22"/></name><argument_list pos:line="82" pos:column="22">(<argument><expr><name><name pos:line="82" pos:column="23">wildcard<pos:position pos:line="82" pos:column="31"/></name><operator pos:line="82" pos:column="31">-&gt;<pos:position pos:line="82" pos:column="36"/></operator><name pos:line="82" pos:column="33">filelist<pos:position pos:line="82" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="43">wildcard<pos:position pos:line="82" pos:column="51"/></name><operator pos:line="82" pos:column="51">-&gt;<pos:position pos:line="82" pos:column="56"/></operator><name pos:line="82" pos:column="53">filelist<pos:position pos:line="82" pos:column="61"/></name><operator pos:line="82" pos:column="61">-&gt;<pos:position pos:line="82" pos:column="66"/></operator><name pos:line="82" pos:column="63">head<pos:position pos:line="82" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="69">NULL<pos:position pos:line="82" pos:column="73"/></name></expr></argument>)<pos:position pos:line="82" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="75"/></expr_stmt>

    <if pos:line="84" pos:column="5">if<condition pos:line="84" pos:column="7">(<expr><name><name pos:line="84" pos:column="8">wildcard<pos:position pos:line="84" pos:column="16"/></name><operator pos:line="84" pos:column="16">-&gt;<pos:position pos:line="84" pos:column="21"/></operator><name pos:line="84" pos:column="18">filelist<pos:position pos:line="84" pos:column="26"/></name><operator pos:line="84" pos:column="26">-&gt;<pos:position pos:line="84" pos:column="31"/></operator><name pos:line="84" pos:column="28">size<pos:position pos:line="84" pos:column="32"/></name></name> <operator pos:line="84" pos:column="33">==<pos:position pos:line="84" pos:column="35"/></operator> <literal type="number" pos:line="84" pos:column="36">0<pos:position pos:line="84" pos:column="37"/></literal></expr>)<pos:position pos:line="84" pos:column="38"/></condition><then pos:line="84" pos:column="38"> <block pos:line="84" pos:column="39">{ <comment type="block" pos:line="84" pos:column="41">/* remains only one file to down. */</comment>
      <expr_stmt><expr><name><name pos:line="85" pos:column="7">wildcard<pos:position pos:line="85" pos:column="15"/></name><operator pos:line="85" pos:column="15">-&gt;<pos:position pos:line="85" pos:column="20"/></operator><name pos:line="85" pos:column="17">state<pos:position pos:line="85" pos:column="22"/></name></name> <operator pos:line="85" pos:column="23">=<pos:position pos:line="85" pos:column="24"/></operator> <name pos:line="85" pos:column="25">CURLWC_CLEAN<pos:position pos:line="85" pos:column="37"/></name></expr>;<pos:position pos:line="85" pos:column="38"/></expr_stmt>
      <comment type="block" pos:line="86" pos:column="7">/* after that will be ftp_do called once again and no transfer
         will be done because of CURLWC_CLEAN state */</comment>
      <return pos:line="88" pos:column="7">return <expr><name pos:line="88" pos:column="14">CURLE_OK<pos:position pos:line="88" pos:column="22"/></name></expr>;<pos:position pos:line="88" pos:column="23"/></return>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>
  }<pos:position pos:line="90" pos:column="4"/></block> <break pos:line="90" pos:column="5">break;<pos:position pos:line="90" pos:column="11"/></break>

  <case pos:line="92" pos:column="3">case <expr><name pos:line="92" pos:column="8">CURLWC_SKIP<pos:position pos:line="92" pos:column="19"/></name></expr>:<pos:position pos:line="92" pos:column="20"/></case> <block pos:line="92" pos:column="21">{
    <if pos:line="93" pos:column="5">if<condition pos:line="93" pos:column="7">(<expr><name><name pos:line="93" pos:column="8">conn<pos:position pos:line="93" pos:column="12"/></name><operator pos:line="93" pos:column="12">-&gt;<pos:position pos:line="93" pos:column="17"/></operator><name pos:line="93" pos:column="14">data<pos:position pos:line="93" pos:column="18"/></name><operator pos:line="93" pos:column="18">-&gt;<pos:position pos:line="93" pos:column="23"/></operator><name pos:line="93" pos:column="20">set<pos:position pos:line="93" pos:column="23"/></name><operator pos:line="93" pos:column="23">.<pos:position pos:line="93" pos:column="24"/></operator><name pos:line="93" pos:column="24">chunk_end<pos:position pos:line="93" pos:column="33"/></name></name></expr>)<pos:position pos:line="93" pos:column="34"/></condition><then pos:line="93" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="94" pos:column="7">conn<pos:position pos:line="94" pos:column="11"/></name><operator pos:line="94" pos:column="11">-&gt;<pos:position pos:line="94" pos:column="16"/></operator><name pos:line="94" pos:column="13">data<pos:position pos:line="94" pos:column="17"/></name><operator pos:line="94" pos:column="17">-&gt;<pos:position pos:line="94" pos:column="22"/></operator><name pos:line="94" pos:column="19">set<pos:position pos:line="94" pos:column="22"/></name><operator pos:line="94" pos:column="22">.<pos:position pos:line="94" pos:column="23"/></operator><name pos:line="94" pos:column="23">chunk_end<pos:position pos:line="94" pos:column="32"/></name></name><argument_list pos:line="94" pos:column="32">(<argument><expr><name><name pos:line="94" pos:column="33">conn<pos:position pos:line="94" pos:column="37"/></name><operator pos:line="94" pos:column="37">-&gt;<pos:position pos:line="94" pos:column="42"/></operator><name pos:line="94" pos:column="39">data<pos:position pos:line="94" pos:column="43"/></name><operator pos:line="94" pos:column="43">-&gt;<pos:position pos:line="94" pos:column="48"/></operator><name pos:line="94" pos:column="45">wildcard<pos:position pos:line="94" pos:column="53"/></name><operator pos:line="94" pos:column="53">.<pos:position pos:line="94" pos:column="54"/></operator><name pos:line="94" pos:column="54">customptr<pos:position pos:line="94" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="65"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">Curl_llist_remove<pos:position pos:line="95" pos:column="22"/></name><argument_list pos:line="95" pos:column="22">(<argument><expr><name><name pos:line="95" pos:column="23">wildcard<pos:position pos:line="95" pos:column="31"/></name><operator pos:line="95" pos:column="31">-&gt;<pos:position pos:line="95" pos:column="36"/></operator><name pos:line="95" pos:column="33">filelist<pos:position pos:line="95" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="43">wildcard<pos:position pos:line="95" pos:column="51"/></name><operator pos:line="95" pos:column="51">-&gt;<pos:position pos:line="95" pos:column="56"/></operator><name pos:line="95" pos:column="53">filelist<pos:position pos:line="95" pos:column="61"/></name><operator pos:line="95" pos:column="61">-&gt;<pos:position pos:line="95" pos:column="66"/></operator><name pos:line="95" pos:column="63">head<pos:position pos:line="95" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="69">NULL<pos:position pos:line="95" pos:column="73"/></name></expr></argument>)<pos:position pos:line="95" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="96" pos:column="5">wildcard<pos:position pos:line="96" pos:column="13"/></name><operator pos:line="96" pos:column="13">-&gt;<pos:position pos:line="96" pos:column="18"/></operator><name pos:line="96" pos:column="15">state<pos:position pos:line="96" pos:column="20"/></name></name> <operator pos:line="96" pos:column="21">=<pos:position pos:line="96" pos:column="22"/></operator> <ternary><condition><expr><operator pos:line="96" pos:column="23">(<pos:position pos:line="96" pos:column="24"/></operator><name><name pos:line="96" pos:column="24">wildcard<pos:position pos:line="96" pos:column="32"/></name><operator pos:line="96" pos:column="32">-&gt;<pos:position pos:line="96" pos:column="37"/></operator><name pos:line="96" pos:column="34">filelist<pos:position pos:line="96" pos:column="42"/></name><operator pos:line="96" pos:column="42">-&gt;<pos:position pos:line="96" pos:column="47"/></operator><name pos:line="96" pos:column="44">size<pos:position pos:line="96" pos:column="48"/></name></name> <operator pos:line="96" pos:column="49">==<pos:position pos:line="96" pos:column="51"/></operator> <literal type="number" pos:line="96" pos:column="52">0<pos:position pos:line="96" pos:column="53"/></literal><operator pos:line="96" pos:column="53">)<pos:position pos:line="96" pos:column="54"/></operator></expr> ?<pos:position pos:line="96" pos:column="56"/></condition><then pos:line="96" pos:column="56">
                      <expr><name pos:line="97" pos:column="23">CURLWC_CLEAN<pos:position pos:line="97" pos:column="35"/></name></expr> <pos:position pos:line="97" pos:column="36"/></then><else pos:line="97" pos:column="36">: <expr><name pos:line="97" pos:column="38">CURLWC_DOWNLOADING<pos:position pos:line="97" pos:column="56"/></name></expr></else></ternary></expr>;<pos:position pos:line="97" pos:column="57"/></expr_stmt>
    <return pos:line="98" pos:column="5">return <expr><call><name pos:line="98" pos:column="12">wc_statemach<pos:position pos:line="98" pos:column="24"/></name><argument_list pos:line="98" pos:column="24">(<argument><expr><name pos:line="98" pos:column="25">conn<pos:position pos:line="98" pos:column="29"/></name></expr></argument>)<pos:position pos:line="98" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="31"/></return>
  }<pos:position pos:line="99" pos:column="4"/></block>

  <case pos:line="101" pos:column="3">case <expr><name pos:line="101" pos:column="8">CURLWC_CLEAN<pos:position pos:line="101" pos:column="20"/></name></expr>:<pos:position pos:line="101" pos:column="21"/></case> <block pos:line="101" pos:column="22">{
    <decl_stmt><decl><type><name><name pos:line="102" pos:column="5">struct<pos:position pos:line="102" pos:column="11"/></name> <name pos:line="102" pos:column="12">ftp_wc_tmpdata<pos:position pos:line="102" pos:column="26"/></name></name> <modifier pos:line="102" pos:column="27">*<pos:position pos:line="102" pos:column="28"/></modifier></type><name pos:line="102" pos:column="28">ftp_tmp<pos:position pos:line="102" pos:column="35"/></name> <init pos:line="102" pos:column="36">= <expr><name><name pos:line="102" pos:column="38">wildcard<pos:position pos:line="102" pos:column="46"/></name><operator pos:line="102" pos:column="46">-&gt;<pos:position pos:line="102" pos:column="51"/></operator><name pos:line="102" pos:column="48">tmp<pos:position pos:line="102" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="102" pos:column="52"/></decl_stmt>
    <expr_stmt><expr><name pos:line="103" pos:column="5">result<pos:position pos:line="103" pos:column="11"/></name> <operator pos:line="103" pos:column="12">=<pos:position pos:line="103" pos:column="13"/></operator> <name pos:line="103" pos:column="14">CURLE_OK<pos:position pos:line="103" pos:column="22"/></name></expr>;<pos:position pos:line="103" pos:column="23"/></expr_stmt>
    <if pos:line="104" pos:column="5">if<condition pos:line="104" pos:column="7">(<expr><name pos:line="104" pos:column="8">ftp_tmp<pos:position pos:line="104" pos:column="15"/></name></expr>)<pos:position pos:line="104" pos:column="16"/></condition><then pos:line="104" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><name pos:line="105" pos:column="7">result<pos:position pos:line="105" pos:column="13"/></name> <operator pos:line="105" pos:column="14">=<pos:position pos:line="105" pos:column="15"/></operator> <call><name pos:line="105" pos:column="16">Curl_ftp_parselist_geterror<pos:position pos:line="105" pos:column="43"/></name><argument_list pos:line="105" pos:column="43">(<argument><expr><name><name pos:line="105" pos:column="44">ftp_tmp<pos:position pos:line="105" pos:column="51"/></name><operator pos:line="105" pos:column="51">-&gt;<pos:position pos:line="105" pos:column="56"/></operator><name pos:line="105" pos:column="53">parser<pos:position pos:line="105" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="61"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="107" pos:column="5">wildcard<pos:position pos:line="107" pos:column="13"/></name><operator pos:line="107" pos:column="13">-&gt;<pos:position pos:line="107" pos:column="18"/></operator><name pos:line="107" pos:column="15">state<pos:position pos:line="107" pos:column="20"/></name></name> <operator pos:line="107" pos:column="21">=<pos:position pos:line="107" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="107" pos:column="23">result<pos:position pos:line="107" pos:column="29"/></name></expr> ?<pos:position pos:line="107" pos:column="31"/></condition><then pos:line="107" pos:column="31"> <expr><name pos:line="107" pos:column="32">CURLWC_ERROR<pos:position pos:line="107" pos:column="44"/></name></expr> <pos:position pos:line="107" pos:column="45"/></then><else pos:line="107" pos:column="45">: <expr><name pos:line="107" pos:column="47">CURLWC_DONE<pos:position pos:line="107" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="107" pos:column="59"/></expr_stmt>
  }<pos:position pos:line="108" pos:column="4"/></block> <break pos:line="108" pos:column="5">break;<pos:position pos:line="108" pos:column="11"/></break>

  <case pos:line="110" pos:column="3">case <expr><name pos:line="110" pos:column="8">CURLWC_DONE<pos:position pos:line="110" pos:column="19"/></name></expr>:<pos:position pos:line="110" pos:column="20"/></case>
  <case pos:line="111" pos:column="3">case <expr><name pos:line="111" pos:column="8">CURLWC_ERROR<pos:position pos:line="111" pos:column="20"/></name></expr>:<pos:position pos:line="111" pos:column="21"/></case>
    <break pos:line="112" pos:column="5">break;<pos:position pos:line="112" pos:column="11"/></break>
  }<pos:position pos:line="113" pos:column="4"/></block></switch>

  <return pos:line="115" pos:column="3">return <expr><name pos:line="115" pos:column="10">result<pos:position pos:line="115" pos:column="16"/></name></expr>;<pos:position pos:line="115" pos:column="17"/></return>
}<pos:position pos:line="116" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_415_curl-7.41.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">hexdump<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">unsigned<pos:position pos:line="1" pos:column="23"/></name> <name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">buffer<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">size_t<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">len<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">char<pos:position pos:line="3" pos:column="14"/></name></type> <name><name pos:line="3" pos:column="15">dump<pos:position pos:line="3" pos:column="19"/></name><index pos:line="3" pos:column="19">[<expr><literal type="number" pos:line="3" pos:column="20">200<pos:position pos:line="3" pos:column="23"/></literal><operator pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></operator><literal type="number" pos:line="3" pos:column="24">3<pos:position pos:line="3" pos:column="25"/></literal><operator pos:line="3" pos:column="25">+<pos:position pos:line="3" pos:column="26"/></operator><literal type="number" pos:line="3" pos:column="26">1<pos:position pos:line="3" pos:column="27"/></literal></expr>]<pos:position pos:line="3" pos:column="28"/></index></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">p<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><name pos:line="4" pos:column="13">dump<pos:position pos:line="4" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">i<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name pos:line="6" pos:column="6">len<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">&gt;<pos:position pos:line="6" pos:column="14"/></operator> <literal type="number" pos:line="6" pos:column="12">200<pos:position pos:line="6" pos:column="15"/></literal></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">NULL<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></return></block></then></if>
  <for pos:line="8" pos:column="3">for<control pos:line="8" pos:column="6">(<init><expr><name pos:line="8" pos:column="7">i<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator><literal type="number" pos:line="8" pos:column="9">0<pos:position pos:line="8" pos:column="10"/></literal></expr>;<pos:position pos:line="8" pos:column="11"/></init> <condition><expr><name pos:line="8" pos:column="12">i<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">&lt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">len<pos:position pos:line="8" pos:column="17"/></name></expr>;<pos:position pos:line="8" pos:column="18"/></condition> <incr><expr><name pos:line="8" pos:column="19">i<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">++<pos:position pos:line="8" pos:column="22"/></operator></expr><operator pos:line="8" pos:column="22">,<pos:position pos:line="8" pos:column="23"/></operator> <expr><name pos:line="8" pos:column="24">p<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">+=<pos:position pos:line="8" pos:column="28"/></operator> <literal type="number" pos:line="8" pos:column="29">3<pos:position pos:line="8" pos:column="30"/></literal></expr></incr>)<pos:position pos:line="8" pos:column="31"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="5">snprintf<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">p<pos:position pos:line="9" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="17">4<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="20">"%02x "<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="29">buffer<pos:position pos:line="9" pos:column="35"/></name><index pos:line="9" pos:column="35">[<expr><name pos:line="9" pos:column="36">i<pos:position pos:line="9" pos:column="37"/></name></expr>]<pos:position pos:line="9" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt></block></for>
  <return pos:line="10" pos:column="3">return <expr><name pos:line="10" pos:column="10">dump<pos:position pos:line="10" pos:column="14"/></name></expr>;<pos:position pos:line="10" pos:column="15"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

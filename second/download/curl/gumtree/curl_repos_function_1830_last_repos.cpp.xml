<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1830_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">do_pubkey_field<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">Curl_easy<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">data<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">certnum<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                            <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">label<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">curl_asn1Element<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">elem<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">output<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* Generate a certificate information record for the public key. */</comment>

  <expr_stmt><expr><name pos:line="8" pos:column="3">output<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">Curl_ASN1tostr<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">elem<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="33">0<pos:position pos:line="8" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">output<pos:position pos:line="9" pos:column="12"/></name></expr>)<pos:position pos:line="9" pos:column="13"/></condition><then pos:line="9" pos:column="13"> <block pos:line="9" pos:column="14">{
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><name><name pos:line="10" pos:column="8">data<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">set<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">.<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">ssl<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">.<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">certinfo<pos:position pos:line="10" pos:column="30"/></name></name></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="7">Curl_ssl_push_certinfo<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">data<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="36">certnum<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">label<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">output<pos:position pos:line="11" pos:column="58"/></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="60"/></expr_stmt></block></then></if>
    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">(<expr><operator pos:line="12" pos:column="8">!<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="9">certnum<pos:position pos:line="12" pos:column="16"/></name></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="7">infof<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">data<pos:position pos:line="13" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="19">"   %s: %s\n"<pos:position pos:line="13" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">label<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="41">output<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">free<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">(<argument><expr><operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">char<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></operator><operator pos:line="14" pos:column="17">)<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">output<pos:position pos:line="14" pos:column="25"/></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

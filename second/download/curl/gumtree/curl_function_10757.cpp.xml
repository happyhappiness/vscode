<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_function_10757.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">long<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">proto2num<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name><name pos:line="1" pos:column="16">struct<pos:position pos:line="1" pos:column="22"/></name> <name pos:line="1" pos:column="23">OperationConfig<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">config<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">long<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">val<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">str<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">buffer<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">sep<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="string" pos:line="4" pos:column="21">","<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">token<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

  <struct><specifier pos:line="7" pos:column="3">static<pos:position pos:line="7" pos:column="9"/></specifier> struct <name pos:line="7" pos:column="17">sprotos<pos:position pos:line="7" pos:column="24"/></name> <block pos:line="7" pos:column="25">{<public type="default" pos:line="7" pos:column="26">
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">name<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">long<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">bit<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>
  <pos:position pos:line="10" pos:column="3"/></public>}<pos:position pos:line="10" pos:column="4"/></block> <decl pos:line="10" pos:column="5">const <name><name pos:line="10" pos:column="11">protos<pos:position pos:line="10" pos:column="17"/></name><index pos:line="10" pos:column="17">[]<pos:position pos:line="10" pos:column="19"/></index></name> <init pos:line="10" pos:column="20">= <expr><block pos:line="10" pos:column="22">{
    <expr><block pos:line="11" pos:column="5">{ <expr><literal type="string" pos:line="11" pos:column="7">"all"<pos:position pos:line="11" pos:column="12"/></literal></expr>, <expr><name pos:line="11" pos:column="14">CURLPROTO_ALL<pos:position pos:line="11" pos:column="27"/></name></expr> }<pos:position pos:line="11" pos:column="29"/></block></expr>,
    <expr><block pos:line="12" pos:column="5">{ <expr><literal type="string" pos:line="12" pos:column="7">"http"<pos:position pos:line="12" pos:column="13"/></literal></expr>, <expr><name pos:line="12" pos:column="15">CURLPROTO_HTTP<pos:position pos:line="12" pos:column="29"/></name></expr> }<pos:position pos:line="12" pos:column="31"/></block></expr>,
    <expr><block pos:line="13" pos:column="5">{ <expr><literal type="string" pos:line="13" pos:column="7">"https"<pos:position pos:line="13" pos:column="14"/></literal></expr>, <expr><name pos:line="13" pos:column="16">CURLPROTO_HTTPS<pos:position pos:line="13" pos:column="31"/></name></expr> }<pos:position pos:line="13" pos:column="33"/></block></expr>,
    <expr><block pos:line="14" pos:column="5">{ <expr><literal type="string" pos:line="14" pos:column="7">"ftp"<pos:position pos:line="14" pos:column="12"/></literal></expr>, <expr><name pos:line="14" pos:column="14">CURLPROTO_FTP<pos:position pos:line="14" pos:column="27"/></name></expr> }<pos:position pos:line="14" pos:column="29"/></block></expr>,
    <expr><block pos:line="15" pos:column="5">{ <expr><literal type="string" pos:line="15" pos:column="7">"ftps"<pos:position pos:line="15" pos:column="13"/></literal></expr>, <expr><name pos:line="15" pos:column="15">CURLPROTO_FTPS<pos:position pos:line="15" pos:column="29"/></name></expr> }<pos:position pos:line="15" pos:column="31"/></block></expr>,
    <expr><block pos:line="16" pos:column="5">{ <expr><literal type="string" pos:line="16" pos:column="7">"scp"<pos:position pos:line="16" pos:column="12"/></literal></expr>, <expr><name pos:line="16" pos:column="14">CURLPROTO_SCP<pos:position pos:line="16" pos:column="27"/></name></expr> }<pos:position pos:line="16" pos:column="29"/></block></expr>,
    <expr><block pos:line="17" pos:column="5">{ <expr><literal type="string" pos:line="17" pos:column="7">"sftp"<pos:position pos:line="17" pos:column="13"/></literal></expr>, <expr><name pos:line="17" pos:column="15">CURLPROTO_SFTP<pos:position pos:line="17" pos:column="29"/></name></expr> }<pos:position pos:line="17" pos:column="31"/></block></expr>,
    <expr><block pos:line="18" pos:column="5">{ <expr><literal type="string" pos:line="18" pos:column="7">"telnet"<pos:position pos:line="18" pos:column="15"/></literal></expr>, <expr><name pos:line="18" pos:column="17">CURLPROTO_TELNET<pos:position pos:line="18" pos:column="33"/></name></expr> }<pos:position pos:line="18" pos:column="35"/></block></expr>,
    <expr><block pos:line="19" pos:column="5">{ <expr><literal type="string" pos:line="19" pos:column="7">"ldap"<pos:position pos:line="19" pos:column="13"/></literal></expr>, <expr><name pos:line="19" pos:column="15">CURLPROTO_LDAP<pos:position pos:line="19" pos:column="29"/></name></expr> }<pos:position pos:line="19" pos:column="31"/></block></expr>,
    <expr><block pos:line="20" pos:column="5">{ <expr><literal type="string" pos:line="20" pos:column="7">"ldaps"<pos:position pos:line="20" pos:column="14"/></literal></expr>, <expr><name pos:line="20" pos:column="16">CURLPROTO_LDAPS<pos:position pos:line="20" pos:column="31"/></name></expr> }<pos:position pos:line="20" pos:column="33"/></block></expr>,
    <expr><block pos:line="21" pos:column="5">{ <expr><literal type="string" pos:line="21" pos:column="7">"dict"<pos:position pos:line="21" pos:column="13"/></literal></expr>, <expr><name pos:line="21" pos:column="15">CURLPROTO_DICT<pos:position pos:line="21" pos:column="29"/></name></expr> }<pos:position pos:line="21" pos:column="31"/></block></expr>,
    <expr><block pos:line="22" pos:column="5">{ <expr><literal type="string" pos:line="22" pos:column="7">"file"<pos:position pos:line="22" pos:column="13"/></literal></expr>, <expr><name pos:line="22" pos:column="15">CURLPROTO_FILE<pos:position pos:line="22" pos:column="29"/></name></expr> }<pos:position pos:line="22" pos:column="31"/></block></expr>,
    <expr><block pos:line="23" pos:column="5">{ <expr><literal type="string" pos:line="23" pos:column="7">"tftp"<pos:position pos:line="23" pos:column="13"/></literal></expr>, <expr><name pos:line="23" pos:column="15">CURLPROTO_TFTP<pos:position pos:line="23" pos:column="29"/></name></expr> }<pos:position pos:line="23" pos:column="31"/></block></expr>,
    <expr><block pos:line="24" pos:column="5">{ <expr><literal type="string" pos:line="24" pos:column="7">"imap"<pos:position pos:line="24" pos:column="13"/></literal></expr>, <expr><name pos:line="24" pos:column="15">CURLPROTO_IMAP<pos:position pos:line="24" pos:column="29"/></name></expr> }<pos:position pos:line="24" pos:column="31"/></block></expr>,
    <expr><block pos:line="25" pos:column="5">{ <expr><literal type="string" pos:line="25" pos:column="7">"imaps"<pos:position pos:line="25" pos:column="14"/></literal></expr>, <expr><name pos:line="25" pos:column="16">CURLPROTO_IMAPS<pos:position pos:line="25" pos:column="31"/></name></expr> }<pos:position pos:line="25" pos:column="33"/></block></expr>,
    <expr><block pos:line="26" pos:column="5">{ <expr><literal type="string" pos:line="26" pos:column="7">"pop3"<pos:position pos:line="26" pos:column="13"/></literal></expr>, <expr><name pos:line="26" pos:column="15">CURLPROTO_POP3<pos:position pos:line="26" pos:column="29"/></name></expr> }<pos:position pos:line="26" pos:column="31"/></block></expr>,
    <expr><block pos:line="27" pos:column="5">{ <expr><literal type="string" pos:line="27" pos:column="7">"pop3s"<pos:position pos:line="27" pos:column="14"/></literal></expr>, <expr><name pos:line="27" pos:column="16">CURLPROTO_POP3S<pos:position pos:line="27" pos:column="31"/></name></expr> }<pos:position pos:line="27" pos:column="33"/></block></expr>,
    <expr><block pos:line="28" pos:column="5">{ <expr><literal type="string" pos:line="28" pos:column="7">"smtp"<pos:position pos:line="28" pos:column="13"/></literal></expr>, <expr><name pos:line="28" pos:column="15">CURLPROTO_SMTP<pos:position pos:line="28" pos:column="29"/></name></expr> }<pos:position pos:line="28" pos:column="31"/></block></expr>,
    <expr><block pos:line="29" pos:column="5">{ <expr><literal type="string" pos:line="29" pos:column="7">"smtps"<pos:position pos:line="29" pos:column="14"/></literal></expr>, <expr><name pos:line="29" pos:column="16">CURLPROTO_SMTPS<pos:position pos:line="29" pos:column="31"/></name></expr> }<pos:position pos:line="29" pos:column="33"/></block></expr>,
    <expr><block pos:line="30" pos:column="5">{ <expr><literal type="string" pos:line="30" pos:column="7">"rtsp"<pos:position pos:line="30" pos:column="13"/></literal></expr>, <expr><name pos:line="30" pos:column="15">CURLPROTO_RTSP<pos:position pos:line="30" pos:column="29"/></name></expr> }<pos:position pos:line="30" pos:column="31"/></block></expr>,
    <expr><block pos:line="31" pos:column="5">{ <expr><literal type="string" pos:line="31" pos:column="7">"gopher"<pos:position pos:line="31" pos:column="15"/></literal></expr>, <expr><name pos:line="31" pos:column="17">CURLPROTO_GOPHER<pos:position pos:line="31" pos:column="33"/></name></expr> }<pos:position pos:line="31" pos:column="35"/></block></expr>,
    <expr><block pos:line="32" pos:column="5">{ <expr><literal type="string" pos:line="32" pos:column="7">"smb"<pos:position pos:line="32" pos:column="12"/></literal></expr>, <expr><name pos:line="32" pos:column="14">CURLPROTO_SMB<pos:position pos:line="32" pos:column="27"/></name></expr> }<pos:position pos:line="32" pos:column="29"/></block></expr>,
    <expr><block pos:line="33" pos:column="5">{ <expr><literal type="string" pos:line="33" pos:column="7">"smbs"<pos:position pos:line="33" pos:column="13"/></literal></expr>, <expr><name pos:line="33" pos:column="15">CURLPROTO_SMBS<pos:position pos:line="33" pos:column="29"/></name></expr> }<pos:position pos:line="33" pos:column="31"/></block></expr>,
    <expr><block pos:line="34" pos:column="5">{ <expr><name pos:line="34" pos:column="7">NULL<pos:position pos:line="34" pos:column="11"/></name></expr>, <expr><literal type="number" pos:line="34" pos:column="13">0<pos:position pos:line="34" pos:column="14"/></literal></expr> }<pos:position pos:line="34" pos:column="16"/></block></expr>
  }<pos:position pos:line="35" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="35" pos:column="5"/></struct>

  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">(<expr><operator pos:line="37" pos:column="6">!<pos:position pos:line="37" pos:column="7"/></operator><name pos:line="37" pos:column="7">str<pos:position pos:line="37" pos:column="10"/></name></expr>)<pos:position pos:line="37" pos:column="11"/></condition><then pos:line="37" pos:column="11">
    <block type="pseudo"><return pos:line="38" pos:column="5">return <expr><literal type="number" pos:line="38" pos:column="12">1<pos:position pos:line="38" pos:column="13"/></literal></expr>;<pos:position pos:line="38" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="40" pos:column="3">buffer<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <call><name pos:line="40" pos:column="12">strdup<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><name pos:line="40" pos:column="19">str<pos:position pos:line="40" pos:column="22"/></name></expr></argument>)<pos:position pos:line="40" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt> <comment type="block" pos:line="40" pos:column="25">/* because strtok corrupts it */</comment>
  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><operator pos:line="41" pos:column="6">!<pos:position pos:line="41" pos:column="7"/></operator><name pos:line="41" pos:column="7">buffer<pos:position pos:line="41" pos:column="13"/></name></expr>)<pos:position pos:line="41" pos:column="14"/></condition><then pos:line="41" pos:column="14">
    <block type="pseudo"><return pos:line="42" pos:column="5">return <expr><literal type="number" pos:line="42" pos:column="12">1<pos:position pos:line="42" pos:column="13"/></literal></expr>;<pos:position pos:line="42" pos:column="14"/></return></block></then></if>

  <for pos:line="44" pos:column="3">for<control pos:line="44" pos:column="6">(<init><expr><name pos:line="44" pos:column="7">token<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <call><name pos:line="44" pos:column="15">strtok<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">buffer<pos:position pos:line="44" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="30">sep<pos:position pos:line="44" pos:column="33"/></name></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="35"/></init>
      <condition><expr><name pos:line="45" pos:column="7">token<pos:position pos:line="45" pos:column="12"/></name></expr>;<pos:position pos:line="45" pos:column="13"/></condition>
      <incr><expr><name pos:line="46" pos:column="7">token<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <call><name pos:line="46" pos:column="15">strtok<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">NULL<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="28">sep<pos:position pos:line="46" pos:column="31"/></name></expr></argument>)<pos:position pos:line="46" pos:column="32"/></argument_list></call></expr></incr>)<pos:position pos:line="46" pos:column="33"/></control> <block pos:line="46" pos:column="34">{
    <enum pos:line="47" pos:column="5">enum <name pos:line="47" pos:column="10">e_action<pos:position pos:line="47" pos:column="18"/></name> <block pos:line="47" pos:column="19">{ <decl><name pos:line="47" pos:column="21">allow<pos:position pos:line="47" pos:column="26"/></name></decl>, <decl><name pos:line="47" pos:column="28">deny<pos:position pos:line="47" pos:column="32"/></name></decl>, <decl><name pos:line="47" pos:column="34">set<pos:position pos:line="47" pos:column="37"/></name></decl> }<pos:position pos:line="47" pos:column="39"/></block> <decl><name pos:line="47" pos:column="40">action<pos:position pos:line="47" pos:column="46"/></name> <init pos:line="47" pos:column="47">= <expr><name pos:line="47" pos:column="49">allow<pos:position pos:line="47" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="47" pos:column="55"/></enum>

    <decl_stmt><decl><type><name><name pos:line="49" pos:column="5">struct<pos:position pos:line="49" pos:column="11"/></name> <name pos:line="49" pos:column="12">sprotos<pos:position pos:line="49" pos:column="19"/></name></name> <specifier pos:line="49" pos:column="20">const<pos:position pos:line="49" pos:column="25"/></specifier> <modifier pos:line="49" pos:column="26">*<pos:position pos:line="49" pos:column="27"/></modifier></type><name pos:line="49" pos:column="27">pp<pos:position pos:line="49" pos:column="29"/></name></decl>;<pos:position pos:line="49" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="51" pos:column="5">/* Process token modifiers */</comment>
    <while pos:line="52" pos:column="5">while<condition pos:line="52" pos:column="10">(<expr><operator pos:line="52" pos:column="11">!<pos:position pos:line="52" pos:column="12"/></operator><call><name pos:line="52" pos:column="12">ISALNUM<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><operator pos:line="52" pos:column="20">*<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="21">token<pos:position pos:line="52" pos:column="26"/></name></expr></argument>)<pos:position pos:line="52" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="28"/></condition> <block pos:line="52" pos:column="29">{ <comment type="block" pos:line="52" pos:column="31">/* may be NULL if token is all modifiers */</comment>
      <switch pos:line="53" pos:column="7">switch <condition pos:line="53" pos:column="14">(<expr><operator pos:line="53" pos:column="15">*<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="16">token<pos:position pos:line="53" pos:column="21"/></name><operator pos:line="53" pos:column="21">++<pos:position pos:line="53" pos:column="23"/></operator></expr>)<pos:position pos:line="53" pos:column="24"/></condition> <block pos:line="53" pos:column="25">{
      <case pos:line="54" pos:column="7">case <expr><literal type="char" pos:line="54" pos:column="12">'='<pos:position pos:line="54" pos:column="15"/></literal></expr>:<pos:position pos:line="54" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="55" pos:column="9">action<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <name pos:line="55" pos:column="18">set<pos:position pos:line="55" pos:column="21"/></name></expr>;<pos:position pos:line="55" pos:column="22"/></expr_stmt>
        <break pos:line="56" pos:column="9">break;<pos:position pos:line="56" pos:column="15"/></break>
      <case pos:line="57" pos:column="7">case <expr><literal type="char" pos:line="57" pos:column="12">'-'<pos:position pos:line="57" pos:column="15"/></literal></expr>:<pos:position pos:line="57" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="58" pos:column="9">action<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <name pos:line="58" pos:column="18">deny<pos:position pos:line="58" pos:column="22"/></name></expr>;<pos:position pos:line="58" pos:column="23"/></expr_stmt>
        <break pos:line="59" pos:column="9">break;<pos:position pos:line="59" pos:column="15"/></break>
      <case pos:line="60" pos:column="7">case <expr><literal type="char" pos:line="60" pos:column="12">'+'<pos:position pos:line="60" pos:column="15"/></literal></expr>:<pos:position pos:line="60" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="61" pos:column="9">action<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <name pos:line="61" pos:column="18">allow<pos:position pos:line="61" pos:column="23"/></name></expr>;<pos:position pos:line="61" pos:column="24"/></expr_stmt>
        <break pos:line="62" pos:column="9">break;<pos:position pos:line="62" pos:column="15"/></break>
      <default pos:line="63" pos:column="7">default:<pos:position pos:line="63" pos:column="15"/></default> <comment type="block" pos:line="63" pos:column="16">/* Includes case of terminating NULL */</comment>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">Curl_safefree<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><name pos:line="64" pos:column="23">buffer<pos:position pos:line="64" pos:column="29"/></name></expr></argument>)<pos:position pos:line="64" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="31"/></expr_stmt>
        <return pos:line="65" pos:column="9">return <expr><literal type="number" pos:line="65" pos:column="16">1<pos:position pos:line="65" pos:column="17"/></literal></expr>;<pos:position pos:line="65" pos:column="18"/></return>
      }<pos:position pos:line="66" pos:column="8"/></block></switch>
    }<pos:position pos:line="67" pos:column="6"/></block></while>

    <for pos:line="69" pos:column="5">for<control pos:line="69" pos:column="8">(<init><expr><name pos:line="69" pos:column="9">pp<pos:position pos:line="69" pos:column="11"/></name><operator pos:line="69" pos:column="11">=<pos:position pos:line="69" pos:column="12"/></operator><name pos:line="69" pos:column="12">protos<pos:position pos:line="69" pos:column="18"/></name></expr>;<pos:position pos:line="69" pos:column="19"/></init> <condition><expr><name><name pos:line="69" pos:column="20">pp<pos:position pos:line="69" pos:column="22"/></name><operator pos:line="69" pos:column="22">-&gt;<pos:position pos:line="69" pos:column="27"/></operator><name pos:line="69" pos:column="24">name<pos:position pos:line="69" pos:column="28"/></name></name></expr>;<pos:position pos:line="69" pos:column="29"/></condition> <incr><expr><name pos:line="69" pos:column="30">pp<pos:position pos:line="69" pos:column="32"/></name><operator pos:line="69" pos:column="32">++<pos:position pos:line="69" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="69" pos:column="35"/></control> <block pos:line="69" pos:column="36">{
      <if pos:line="70" pos:column="7">if<condition pos:line="70" pos:column="9">(<expr><call><name pos:line="70" pos:column="10">curlx_raw_equal<pos:position pos:line="70" pos:column="25"/></name><argument_list pos:line="70" pos:column="25">(<argument><expr><name pos:line="70" pos:column="26">token<pos:position pos:line="70" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="33">pp<pos:position pos:line="70" pos:column="35"/></name><operator pos:line="70" pos:column="35">-&gt;<pos:position pos:line="70" pos:column="40"/></operator><name pos:line="70" pos:column="37">name<pos:position pos:line="70" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="43"/></condition><then pos:line="70" pos:column="43"> <block pos:line="70" pos:column="44">{
        <switch pos:line="71" pos:column="9">switch <condition pos:line="71" pos:column="16">(<expr><name pos:line="71" pos:column="17">action<pos:position pos:line="71" pos:column="23"/></name></expr>)<pos:position pos:line="71" pos:column="24"/></condition> <block pos:line="71" pos:column="25">{
        <case pos:line="72" pos:column="9">case <expr><name pos:line="72" pos:column="14">deny<pos:position pos:line="72" pos:column="18"/></name></expr>:<pos:position pos:line="72" pos:column="19"/></case>
          <expr_stmt><expr><operator pos:line="73" pos:column="11">*<pos:position pos:line="73" pos:column="12"/></operator><name pos:line="73" pos:column="12">val<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">&amp;=<pos:position pos:line="73" pos:column="22"/></operator> <operator pos:line="73" pos:column="19">~<pos:position pos:line="73" pos:column="20"/></operator><operator pos:line="73" pos:column="20">(<pos:position pos:line="73" pos:column="21"/></operator><name><name pos:line="73" pos:column="21">pp<pos:position pos:line="73" pos:column="23"/></name><operator pos:line="73" pos:column="23">-&gt;<pos:position pos:line="73" pos:column="28"/></operator><name pos:line="73" pos:column="25">bit<pos:position pos:line="73" pos:column="28"/></name></name><operator pos:line="73" pos:column="28">)<pos:position pos:line="73" pos:column="29"/></operator></expr>;<pos:position pos:line="73" pos:column="30"/></expr_stmt>
          <break pos:line="74" pos:column="11">break;<pos:position pos:line="74" pos:column="17"/></break>
        <case pos:line="75" pos:column="9">case <expr><name pos:line="75" pos:column="14">allow<pos:position pos:line="75" pos:column="19"/></name></expr>:<pos:position pos:line="75" pos:column="20"/></case>
          <expr_stmt><expr><operator pos:line="76" pos:column="11">*<pos:position pos:line="76" pos:column="12"/></operator><name pos:line="76" pos:column="12">val<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">|=<pos:position pos:line="76" pos:column="18"/></operator> <name><name pos:line="76" pos:column="19">pp<pos:position pos:line="76" pos:column="21"/></name><operator pos:line="76" pos:column="21">-&gt;<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="23">bit<pos:position pos:line="76" pos:column="26"/></name></name></expr>;<pos:position pos:line="76" pos:column="27"/></expr_stmt>
          <break pos:line="77" pos:column="11">break;<pos:position pos:line="77" pos:column="17"/></break>
        <case pos:line="78" pos:column="9">case <expr><name pos:line="78" pos:column="14">set<pos:position pos:line="78" pos:column="17"/></name></expr>:<pos:position pos:line="78" pos:column="18"/></case>
          <expr_stmt><expr><operator pos:line="79" pos:column="11">*<pos:position pos:line="79" pos:column="12"/></operator><name pos:line="79" pos:column="12">val<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">=<pos:position pos:line="79" pos:column="17"/></operator> <name><name pos:line="79" pos:column="18">pp<pos:position pos:line="79" pos:column="20"/></name><operator pos:line="79" pos:column="20">-&gt;<pos:position pos:line="79" pos:column="25"/></operator><name pos:line="79" pos:column="22">bit<pos:position pos:line="79" pos:column="25"/></name></name></expr>;<pos:position pos:line="79" pos:column="26"/></expr_stmt>
          <break pos:line="80" pos:column="11">break;<pos:position pos:line="80" pos:column="17"/></break>
        }<pos:position pos:line="81" pos:column="10"/></block></switch>
        <break pos:line="82" pos:column="9">break;<pos:position pos:line="82" pos:column="15"/></break>
      }<pos:position pos:line="83" pos:column="8"/></block></then></if>
    }<pos:position pos:line="84" pos:column="6"/></block></for>

    <if pos:line="86" pos:column="5">if<condition pos:line="86" pos:column="7">(<expr><operator pos:line="86" pos:column="8">!<pos:position pos:line="86" pos:column="9"/></operator><operator pos:line="86" pos:column="9">(<pos:position pos:line="86" pos:column="10"/></operator><name><name pos:line="86" pos:column="10">pp<pos:position pos:line="86" pos:column="12"/></name><operator pos:line="86" pos:column="12">-&gt;<pos:position pos:line="86" pos:column="17"/></operator><name pos:line="86" pos:column="14">name<pos:position pos:line="86" pos:column="18"/></name></name><operator pos:line="86" pos:column="18">)<pos:position pos:line="86" pos:column="19"/></operator></expr>)<pos:position pos:line="86" pos:column="20"/></condition><then pos:line="86" pos:column="20"> <block pos:line="86" pos:column="21">{ <comment type="block" pos:line="86" pos:column="23">/* unknown protocol */</comment>
      <comment type="block" pos:line="87" pos:column="7">/* If they have specified only this protocol, we say treat it as
         if no protocols are allowed */</comment>
      <if pos:line="89" pos:column="7">if<condition pos:line="89" pos:column="9">(<expr><name pos:line="89" pos:column="10">action<pos:position pos:line="89" pos:column="16"/></name> <operator pos:line="89" pos:column="17">==<pos:position pos:line="89" pos:column="19"/></operator> <name pos:line="89" pos:column="20">set<pos:position pos:line="89" pos:column="23"/></name></expr>)<pos:position pos:line="89" pos:column="24"/></condition><then pos:line="89" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="90" pos:column="9">*<pos:position pos:line="90" pos:column="10"/></operator><name pos:line="90" pos:column="10">val<pos:position pos:line="90" pos:column="13"/></name> <operator pos:line="90" pos:column="14">=<pos:position pos:line="90" pos:column="15"/></operator> <literal type="number" pos:line="90" pos:column="16">0<pos:position pos:line="90" pos:column="17"/></literal></expr>;<pos:position pos:line="90" pos:column="18"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">warnf<pos:position pos:line="91" pos:column="12"/></name><argument_list pos:line="91" pos:column="12">(<argument><expr><name pos:line="91" pos:column="13">config<pos:position pos:line="91" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="21">"unrecognized protocol '%s'\n"<pos:position pos:line="91" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="53">token<pos:position pos:line="91" pos:column="58"/></name></expr></argument>)<pos:position pos:line="91" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>
  }<pos:position pos:line="93" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="94" pos:column="3">Curl_safefree<pos:position pos:line="94" pos:column="16"/></name><argument_list pos:line="94" pos:column="16">(<argument><expr><name pos:line="94" pos:column="17">buffer<pos:position pos:line="94" pos:column="23"/></name></expr></argument>)<pos:position pos:line="94" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="25"/></expr_stmt>
  <return pos:line="95" pos:column="3">return <expr><literal type="number" pos:line="95" pos:column="10">0<pos:position pos:line="95" pos:column="11"/></literal></expr>;<pos:position pos:line="95" pos:column="12"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

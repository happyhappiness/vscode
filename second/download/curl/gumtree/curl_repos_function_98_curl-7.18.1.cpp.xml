<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_98_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">fifo_cb<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">int<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">fd<pos:position pos:line="1" pos:column="20"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="22">short<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">event<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">arg<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <block pos:line="1" pos:column="46">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">s<pos:position pos:line="2" pos:column="9"/></name><index pos:line="2" pos:column="9">[<expr><literal type="number" pos:line="2" pos:column="10">1024<pos:position pos:line="2" pos:column="14"/></literal></expr>]<pos:position pos:line="2" pos:column="15"/></index></name></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">long<pos:position pos:line="3" pos:column="7"/></name> <name pos:line="3" pos:column="8">int<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">rv<pos:position pos:line="3" pos:column="14"/></name><init pos:line="3" pos:column="14">=<expr><literal type="number" pos:line="3" pos:column="15">0<pos:position pos:line="3" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">n<pos:position pos:line="4" pos:column="8"/></name><init pos:line="4" pos:column="8">=<expr><literal type="number" pos:line="4" pos:column="9">0<pos:position pos:line="4" pos:column="10"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">GlobalInfo<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">g<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><operator pos:line="5" pos:column="19">(<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">GlobalInfo<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></operator><operator pos:line="5" pos:column="32">)<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">arg<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

  <do pos:line="7" pos:column="3">do <block pos:line="7" pos:column="6">{
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">s<pos:position pos:line="8" pos:column="6"/></name><index pos:line="8" pos:column="6">[<expr><literal type="number" pos:line="8" pos:column="7">0<pos:position pos:line="8" pos:column="8"/></literal></expr>]<pos:position pos:line="8" pos:column="9"/></index></name><operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator><literal type="char" pos:line="8" pos:column="10">'\0'<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">rv<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator><call><name pos:line="9" pos:column="8">fscanf<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><name><name pos:line="9" pos:column="15">g<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">input<pos:position pos:line="9" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="25">"%1023s%n"<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="37">s<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="40">&amp;<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="41">n<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">s<pos:position pos:line="10" pos:column="6"/></name><index pos:line="10" pos:column="6">[<expr><name pos:line="10" pos:column="7">n<pos:position pos:line="10" pos:column="8"/></name></expr>]<pos:position pos:line="10" pos:column="9"/></index></name><operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator><literal type="char" pos:line="10" pos:column="10">'\0'<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">( <expr><name pos:line="11" pos:column="10">n<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">&amp;&amp;<pos:position pos:line="11" pos:column="22"/></operator> <name><name pos:line="11" pos:column="15">s<pos:position pos:line="11" pos:column="16"/></name><index pos:line="11" pos:column="16">[<expr><literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr>]<pos:position pos:line="11" pos:column="19"/></index></name></expr> )<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21"> <block pos:line="11" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">new_conn<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">s<pos:position pos:line="12" pos:column="17"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="18">arg<pos:position pos:line="12" pos:column="21"/></name></expr></argument>)<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>  <comment type="block" pos:line="12" pos:column="25">/* if we read a URL, go get it! */</comment>
    }<pos:position pos:line="13" pos:column="6"/></block></then> <else pos:line="13" pos:column="7">else <block type="pseudo"><break pos:line="13" pos:column="12">break;<pos:position pos:line="13" pos:column="18"/></break></block></else></if>
  }<pos:position pos:line="14" pos:column="4"/></block> while <condition pos:line="14" pos:column="11">( <expr><name pos:line="14" pos:column="13">rv<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">!=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">EOF<pos:position pos:line="14" pos:column="22"/></name></expr>)<pos:position pos:line="14" pos:column="23"/></condition>;<pos:position pos:line="14" pos:column="24"/></do>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_257.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_output_negotiate<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">connectdata<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">conn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">negotiatedata<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">neg_ctx<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><operator pos:line="3" pos:column="35">&amp;<pos:position pos:line="3" pos:column="40"/></operator><name><name pos:line="3" pos:column="36">conn<pos:position pos:line="3" pos:column="40"/></name><operator pos:line="3" pos:column="40">-&gt;<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="42">data<pos:position pos:line="3" pos:column="46"/></name><operator pos:line="3" pos:column="46">-&gt;<pos:position pos:line="3" pos:column="51"/></operator><name pos:line="3" pos:column="48">state<pos:position pos:line="3" pos:column="53"/></name><operator pos:line="3" pos:column="53">.<pos:position pos:line="3" pos:column="54"/></operator><name pos:line="3" pos:column="54">negotiate<pos:position pos:line="3" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="64"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">OM_uint32<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">minor_status<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">encoded<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name pos:line="5" pos:column="19">NULL<pos:position pos:line="5" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">len<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">HAVE_SPNEGO<pos:position pos:line="8" pos:column="19"/></name></cpp:ifdef> <comment type="block" pos:line="8" pos:column="20">/* Handle SPNEGO */</comment>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><call><name pos:line="9" pos:column="7">checkprefix<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><literal type="string" pos:line="9" pos:column="19">"Negotiate"<pos:position pos:line="9" pos:column="30"/></literal></expr></argument>,<argument><expr><name><name pos:line="9" pos:column="31">neg_ctx<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">protocol<pos:position pos:line="9" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50"> <block pos:line="9" pos:column="51">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">ASN1_OBJECT<pos:position pos:line="10" pos:column="16"/></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type>   <name pos:line="10" pos:column="21">object<pos:position pos:line="10" pos:column="27"/></name>            <init pos:line="10" pos:column="39">= <expr><name pos:line="10" pos:column="41">NULL<pos:position pos:line="10" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type>             <name pos:line="11" pos:column="21">rc<pos:position pos:line="11" pos:column="23"/></name>                <init pos:line="11" pos:column="39">= <expr><literal type="number" pos:line="11" pos:column="41">1<pos:position pos:line="11" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">unsigned<pos:position pos:line="12" pos:column="13"/></name> <name pos:line="12" pos:column="14">char<pos:position pos:line="12" pos:column="18"/></name> <modifier pos:line="12" pos:column="19">*<pos:position pos:line="12" pos:column="20"/></modifier></type> <name pos:line="12" pos:column="21">spnegoToken<pos:position pos:line="12" pos:column="32"/></name>       <init pos:line="12" pos:column="39">= <expr><name pos:line="12" pos:column="41">NULL<pos:position pos:line="12" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">size_t<pos:position pos:line="13" pos:column="11"/></name></type>          <name pos:line="13" pos:column="21">spnegoTokenLength<pos:position pos:line="13" pos:column="38"/></name> <init pos:line="13" pos:column="39">= <expr><literal type="number" pos:line="13" pos:column="41">0<pos:position pos:line="13" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">unsigned<pos:position pos:line="14" pos:column="13"/></name> <name pos:line="14" pos:column="14">char<pos:position pos:line="14" pos:column="18"/></name> <modifier pos:line="14" pos:column="19">*<pos:position pos:line="14" pos:column="20"/></modifier></type> <name pos:line="14" pos:column="21">responseToken<pos:position pos:line="14" pos:column="34"/></name>       <init pos:line="14" pos:column="41">= <expr><name pos:line="14" pos:column="43">NULL<pos:position pos:line="14" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">size_t<pos:position pos:line="15" pos:column="11"/></name></type>          <name pos:line="15" pos:column="21">responseTokenLength<pos:position pos:line="15" pos:column="40"/></name> <init pos:line="15" pos:column="41">= <expr><literal type="number" pos:line="15" pos:column="43">0<pos:position pos:line="15" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="45"/></decl_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">responseToken<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <call><name pos:line="17" pos:column="21">malloc<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name><name pos:line="17" pos:column="28">neg_ctx<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">output_token<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">.<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="50">length<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">( <expr><name pos:line="18" pos:column="10">responseToken<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">==<pos:position pos:line="18" pos:column="26"/></operator> <name pos:line="18" pos:column="27">NULL<pos:position pos:line="18" pos:column="31"/></name></expr>)<pos:position pos:line="18" pos:column="32"/></condition><then pos:line="18" pos:column="32">
      <block type="pseudo"><return pos:line="19" pos:column="7">return <expr><name pos:line="19" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="19" pos:column="33"/></name></expr>;<pos:position pos:line="19" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">memcpy<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name pos:line="20" pos:column="12">responseToken<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="27">neg_ctx<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">-&gt;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="36">output_token<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">.<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="49">value<pos:position pos:line="20" pos:column="54"/></name></name></expr></argument>,
           <argument><expr><name><name pos:line="21" pos:column="12">neg_ctx<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">output_token<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">.<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">length<pos:position pos:line="21" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">responseTokenLength<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <name><name pos:line="22" pos:column="27">neg_ctx<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">output_token<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">.<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="49">length<pos:position pos:line="22" pos:column="55"/></name></name></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><name pos:line="24" pos:column="5">object<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator><call><name pos:line="24" pos:column="12">OBJ_txt2obj<pos:position pos:line="24" pos:column="23"/></name> <argument_list pos:line="24" pos:column="24">(<argument><expr><literal type="string" pos:line="24" pos:column="25">"1.2.840.113554.1.2.2"<pos:position pos:line="24" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="49">1<pos:position pos:line="24" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><call><name pos:line="25" pos:column="10">makeSpnegoInitialToken<pos:position pos:line="25" pos:column="32"/></name> <argument_list pos:line="25" pos:column="33">(<argument><expr><name pos:line="25" pos:column="34">object<pos:position pos:line="25" pos:column="40"/></name></expr></argument>,
                                 <argument><expr><name pos:line="26" pos:column="34">responseToken<pos:position pos:line="26" pos:column="47"/></name></expr></argument>,
                                 <argument><expr><name pos:line="27" pos:column="34">responseTokenLength<pos:position pos:line="27" pos:column="53"/></name></expr></argument>,
                                 <argument><expr><operator pos:line="28" pos:column="34">&amp;<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="35">spnegoToken<pos:position pos:line="28" pos:column="46"/></name></expr></argument>,
                                 <argument><expr><operator pos:line="29" pos:column="34">&amp;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="35">spnegoTokenLength<pos:position pos:line="29" pos:column="52"/></name></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="54"/></condition><then pos:line="29" pos:column="54"> <block pos:line="29" pos:column="55">{
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">free<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><name pos:line="30" pos:column="12">responseToken<pos:position pos:line="30" pos:column="25"/></name></expr></argument>)<pos:position pos:line="30" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name pos:line="31" pos:column="7">responseToken<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">NULL<pos:position pos:line="31" pos:column="27"/></name></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">infof<pos:position pos:line="32" pos:column="12"/></name><argument_list pos:line="32" pos:column="12">(<argument><expr><name><name pos:line="32" pos:column="13">conn<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">data<pos:position pos:line="32" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="25">"Make SPNEGO Initial Token failed\n"<pos:position pos:line="32" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then>
    <else pos:line="34" pos:column="5">else <block pos:line="34" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">free<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">(<argument><expr><name><name pos:line="35" pos:column="12">neg_ctx<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">output_token<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">.<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">value<pos:position pos:line="35" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="36" pos:column="7">responseToken<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">NULL<pos:position pos:line="36" pos:column="27"/></name></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="37" pos:column="7">neg_ctx<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">output_token<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">.<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="29">value<pos:position pos:line="37" pos:column="34"/></name></name> <operator pos:line="37" pos:column="35">=<pos:position pos:line="37" pos:column="36"/></operator> <call><name pos:line="37" pos:column="37">malloc<pos:position pos:line="37" pos:column="43"/></name><argument_list pos:line="37" pos:column="43">(<argument><expr><name pos:line="37" pos:column="44">spnegoTokenLength<pos:position pos:line="37" pos:column="61"/></name></expr></argument>)<pos:position pos:line="37" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="63"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">memcpy<pos:position pos:line="38" pos:column="13"/></name><argument_list pos:line="38" pos:column="13">(<argument><expr><name><name pos:line="38" pos:column="14">neg_ctx<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">-&gt;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="23">output_token<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">.<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="36">value<pos:position pos:line="38" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="43">spnegoToken<pos:position pos:line="38" pos:column="54"/></name></expr></argument>,<argument><expr><name pos:line="38" pos:column="55">spnegoTokenLength<pos:position pos:line="38" pos:column="72"/></name></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="74"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="39" pos:column="7">neg_ctx<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">-&gt;<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="16">output_token<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">.<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="29">length<pos:position pos:line="39" pos:column="35"/></name></name> <operator pos:line="39" pos:column="36">=<pos:position pos:line="39" pos:column="37"/></operator> <name pos:line="39" pos:column="38">spnegoTokenLength<pos:position pos:line="39" pos:column="55"/></name></expr>;<pos:position pos:line="39" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">free<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><name pos:line="40" pos:column="12">spnegoToken<pos:position pos:line="40" pos:column="23"/></name></expr></argument>)<pos:position pos:line="40" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="41" pos:column="7">spnegoToken<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">NULL<pos:position pos:line="41" pos:column="25"/></name></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">infof<pos:position pos:line="42" pos:column="12"/></name><argument_list pos:line="42" pos:column="12">(<argument><expr><name><name pos:line="42" pos:column="13">conn<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">-&gt;<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="19">data<pos:position pos:line="42" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="25">"Make SPNEGO Initial Token succeeded\n"<pos:position pos:line="42" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></else></if>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><name pos:line="46" pos:column="3">len<pos:position pos:line="46" pos:column="6"/></name> <operator pos:line="46" pos:column="7">=<pos:position pos:line="46" pos:column="8"/></operator> <call><name pos:line="46" pos:column="9">Curl_base64_encode<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name><name pos:line="46" pos:column="28">neg_ctx<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">-&gt;<pos:position pos:line="46" pos:column="40"/></operator><name pos:line="46" pos:column="37">output_token<pos:position pos:line="46" pos:column="49"/></name><operator pos:line="46" pos:column="49">.<pos:position pos:line="46" pos:column="50"/></operator><name pos:line="46" pos:column="50">value<pos:position pos:line="46" pos:column="55"/></name></name></expr></argument>,
                           <argument><expr><name><name pos:line="47" pos:column="28">neg_ctx<pos:position pos:line="47" pos:column="35"/></name><operator pos:line="47" pos:column="35">-&gt;<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="37">output_token<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">.<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="50">length<pos:position pos:line="47" pos:column="56"/></name></name></expr></argument>,
                           <argument><expr><operator pos:line="48" pos:column="28">&amp;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="29">encoded<pos:position pos:line="48" pos:column="36"/></name></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name pos:line="50" pos:column="7">len<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">&lt;<pos:position pos:line="50" pos:column="15"/></operator> <literal type="number" pos:line="50" pos:column="13">0<pos:position pos:line="50" pos:column="14"/></literal></expr>)<pos:position pos:line="50" pos:column="15"/></condition><then pos:line="50" pos:column="15">
    <block type="pseudo"><return pos:line="51" pos:column="5">return <expr><name pos:line="51" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="51" pos:column="31"/></name></expr>;<pos:position pos:line="51" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="53" pos:column="3">conn<pos:position pos:line="53" pos:column="7"/></name><operator pos:line="53" pos:column="7">-&gt;<pos:position pos:line="53" pos:column="12"/></operator><name pos:line="53" pos:column="9">allocptr<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">.<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="18">userpwd<pos:position pos:line="53" pos:column="25"/></name></name> <operator pos:line="53" pos:column="26">=<pos:position pos:line="53" pos:column="27"/></operator>
    <call><name pos:line="54" pos:column="5">aprintf<pos:position pos:line="54" pos:column="12"/></name><argument_list pos:line="54" pos:column="12">(<argument><expr><literal type="string" pos:line="54" pos:column="13">"Authorization: %s %s\r\n"<pos:position pos:line="54" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="41">neg_ctx<pos:position pos:line="54" pos:column="48"/></name><operator pos:line="54" pos:column="48">-&gt;<pos:position pos:line="54" pos:column="53"/></operator><name pos:line="54" pos:column="50">protocol<pos:position pos:line="54" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="60">encoded<pos:position pos:line="54" pos:column="67"/></name></expr></argument>)<pos:position pos:line="54" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="69"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">free<pos:position pos:line="55" pos:column="7"/></name><argument_list pos:line="55" pos:column="7">(<argument><expr><name pos:line="55" pos:column="8">encoded<pos:position pos:line="55" pos:column="15"/></name></expr></argument>)<pos:position pos:line="55" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">gss_release_buffer<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><operator pos:line="56" pos:column="22">&amp;<pos:position pos:line="56" pos:column="27"/></operator><name pos:line="56" pos:column="23">minor_status<pos:position pos:line="56" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="37">&amp;<pos:position pos:line="56" pos:column="42"/></operator><name><name pos:line="56" pos:column="38">neg_ctx<pos:position pos:line="56" pos:column="45"/></name><operator pos:line="56" pos:column="45">-&gt;<pos:position pos:line="56" pos:column="50"/></operator><name pos:line="56" pos:column="47">output_token<pos:position pos:line="56" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="61"/></expr_stmt>
  <return pos:line="57" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="57" pos:column="10">(<pos:position pos:line="57" pos:column="11"/></operator><name><name pos:line="57" pos:column="11">conn<pos:position pos:line="57" pos:column="15"/></name><operator pos:line="57" pos:column="15">-&gt;<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="17">allocptr<pos:position pos:line="57" pos:column="25"/></name><operator pos:line="57" pos:column="25">.<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="26">userpwd<pos:position pos:line="57" pos:column="33"/></name></name> <operator pos:line="57" pos:column="34">==<pos:position pos:line="57" pos:column="36"/></operator> <name pos:line="57" pos:column="37">NULL<pos:position pos:line="57" pos:column="41"/></name><operator pos:line="57" pos:column="41">)<pos:position pos:line="57" pos:column="42"/></operator></expr> ?<pos:position pos:line="57" pos:column="44"/></condition><then pos:line="57" pos:column="44"> <expr><name pos:line="57" pos:column="45">CURLE_OUT_OF_MEMORY<pos:position pos:line="57" pos:column="64"/></name></expr> <pos:position pos:line="57" pos:column="65"/></then><else pos:line="57" pos:column="65">: <expr><name pos:line="57" pos:column="67">CURLE_OK<pos:position pos:line="57" pos:column="75"/></name></expr></else></ternary></expr>;<pos:position pos:line="57" pos:column="76"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

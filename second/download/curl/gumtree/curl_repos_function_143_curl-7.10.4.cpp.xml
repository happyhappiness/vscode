<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_143_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type>
<name pos:line="2" pos:column="1">Curl_SSLConnect<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">connectdata<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">conn<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">retcode<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">CURLE_OK<pos:position pos:line="4" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">USE_SSLEAY<pos:position pos:line="6" pos:column="18"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">SessionHandle<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">data<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><name><name pos:line="7" pos:column="32">conn<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">data<pos:position pos:line="7" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">err<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">what<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type> <name pos:line="10" pos:column="10">str<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">SSL_METHOD<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">req_method<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">SSL_SESSION<pos:position pos:line="12" pos:column="14"/></name> <modifier pos:line="12" pos:column="15">*<pos:position pos:line="12" pos:column="16"/></modifier></type><name pos:line="12" pos:column="16">ssl_sessionid<pos:position pos:line="12" pos:column="29"/></name><init pos:line="12" pos:column="29">=<expr><name pos:line="12" pos:column="30">NULL<pos:position pos:line="12" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">ASN1_TIME<pos:position pos:line="13" pos:column="12"/></name> <modifier pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></modifier></type><name pos:line="13" pos:column="14">certdate<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>

  <comment type="block" pos:line="15" pos:column="3">/* mark this is being ssl enabled from here on out. */</comment>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">conn<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">ssl<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">.<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">use<pos:position pos:line="16" pos:column="16"/></name></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">TRUE<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><operator pos:line="18" pos:column="6">!<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">ssl_seeded<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">||<pos:position pos:line="18" pos:column="20"/></operator> <name><name pos:line="18" pos:column="21">data<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">set<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">.<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">ssl<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">.<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">random_file<pos:position pos:line="18" pos:column="46"/></name></name> <operator pos:line="18" pos:column="47">||<pos:position pos:line="18" pos:column="49"/></operator> <name><name pos:line="18" pos:column="50">data<pos:position pos:line="18" pos:column="54"/></name><operator pos:line="18" pos:column="54">-&gt;<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="56">set<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">.<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="60">ssl<pos:position pos:line="18" pos:column="63"/></name><operator pos:line="18" pos:column="63">.<pos:position pos:line="18" pos:column="64"/></operator><name pos:line="18" pos:column="64">egdsocket<pos:position pos:line="18" pos:column="73"/></name></name></expr>)<pos:position pos:line="18" pos:column="74"/></condition><then pos:line="18" pos:column="74"> <block pos:line="18" pos:column="75">{
    <comment type="block" pos:line="19" pos:column="5">/* Make funny stuff to get random input */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">random_the_seed<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name pos:line="20" pos:column="21">data<pos:position pos:line="20" pos:column="25"/></name></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">ssl_seeded<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">TRUE<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="25" pos:column="3">/* check to see if we've been told to use an explicit SSL/TLS version */</comment>
  <switch pos:line="26" pos:column="3">switch<condition pos:line="26" pos:column="9">(<expr><name><name pos:line="26" pos:column="10">data<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">set<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">.<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">ssl<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">.<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="24">version<pos:position pos:line="26" pos:column="31"/></name></name></expr>)<pos:position pos:line="26" pos:column="32"/></condition> <block pos:line="26" pos:column="33">{
  <default pos:line="27" pos:column="3">default:<pos:position pos:line="27" pos:column="11"/></default>
  <case pos:line="28" pos:column="3">case <expr><name pos:line="28" pos:column="8">CURL_SSLVERSION_DEFAULT<pos:position pos:line="28" pos:column="31"/></name></expr>:<pos:position pos:line="28" pos:column="32"/></case>
    <comment type="block" pos:line="29" pos:column="5">/* we try to figure out version */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">req_method<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">SSLv23_client_method<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">()<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
    <break pos:line="31" pos:column="5">break;<pos:position pos:line="31" pos:column="11"/></break>
  <case pos:line="32" pos:column="3">case <expr><name pos:line="32" pos:column="8">CURL_SSLVERSION_TLSv1<pos:position pos:line="32" pos:column="29"/></name></expr>:<pos:position pos:line="32" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="33" pos:column="5">req_method<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">TLSv1_client_method<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">()<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
    <break pos:line="34" pos:column="5">break;<pos:position pos:line="34" pos:column="11"/></break>
  <case pos:line="35" pos:column="3">case <expr><name pos:line="35" pos:column="8">CURL_SSLVERSION_SSLv2<pos:position pos:line="35" pos:column="29"/></name></expr>:<pos:position pos:line="35" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="36" pos:column="5">req_method<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <call><name pos:line="36" pos:column="18">SSLv2_client_method<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">()<pos:position pos:line="36" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
    <break pos:line="37" pos:column="5">break;<pos:position pos:line="37" pos:column="11"/></break>
  <case pos:line="38" pos:column="3">case <expr><name pos:line="38" pos:column="8">CURL_SSLVERSION_SSLv3<pos:position pos:line="38" pos:column="29"/></name></expr>:<pos:position pos:line="38" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="39" pos:column="5">req_method<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">SSLv3_client_method<pos:position pos:line="39" pos:column="37"/></name><argument_list pos:line="39" pos:column="37">()<pos:position pos:line="39" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="40"/></expr_stmt>
    <break pos:line="40" pos:column="5">break;<pos:position pos:line="40" pos:column="11"/></break>
  }<pos:position pos:line="41" pos:column="4"/></block></switch>
    
  <expr_stmt><expr><name><name pos:line="43" pos:column="3">conn<pos:position pos:line="43" pos:column="7"/></name><operator pos:line="43" pos:column="7">-&gt;<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="9">ssl<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">.<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="13">ctx<pos:position pos:line="43" pos:column="16"/></name></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <call><name pos:line="43" pos:column="19">SSL_CTX_new<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">req_method<pos:position pos:line="43" pos:column="41"/></name></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>

  <if pos:line="45" pos:column="3">if<condition pos:line="45" pos:column="5">(<expr><operator pos:line="45" pos:column="6">!<pos:position pos:line="45" pos:column="7"/></operator><name><name pos:line="45" pos:column="7">conn<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">ssl<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">.<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="17">ctx<pos:position pos:line="45" pos:column="20"/></name></name></expr>)<pos:position pos:line="45" pos:column="21"/></condition><then pos:line="45" pos:column="21"> <block pos:line="45" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">failf<pos:position pos:line="46" pos:column="10"/></name><argument_list pos:line="46" pos:column="10">(<argument><expr><name pos:line="46" pos:column="11">data<pos:position pos:line="46" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="17">"SSL: couldn't create a context!"<pos:position pos:line="46" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="52"/></expr_stmt>
    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="47" pos:column="31"/></name></expr>;<pos:position pos:line="47" pos:column="32"/></return>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>
    
  <if pos:line="50" pos:column="3">if<condition pos:line="50" pos:column="5">(<expr><name><name pos:line="50" pos:column="6">data<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">set<pos:position pos:line="50" pos:column="15"/></name><operator pos:line="50" pos:column="15">.<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="16">cert<pos:position pos:line="50" pos:column="20"/></name></name></expr>)<pos:position pos:line="50" pos:column="21"/></condition><then pos:line="50" pos:column="21"> <block pos:line="50" pos:column="22">{
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">!<pos:position pos:line="51" pos:column="10"/></operator><call><name pos:line="51" pos:column="10">cert_stuff<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">(<argument><expr><name pos:line="51" pos:column="21">conn<pos:position pos:line="51" pos:column="25"/></name></expr></argument>,
                    <argument><expr><name><name pos:line="52" pos:column="21">data<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">-&gt;<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="27">set<pos:position pos:line="52" pos:column="30"/></name><operator pos:line="52" pos:column="30">.<pos:position pos:line="52" pos:column="31"/></operator><name pos:line="52" pos:column="31">cert<pos:position pos:line="52" pos:column="35"/></name></name></expr></argument>,
                    <argument><expr><name><name pos:line="53" pos:column="21">data<pos:position pos:line="53" pos:column="25"/></name><operator pos:line="53" pos:column="25">-&gt;<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="27">set<pos:position pos:line="53" pos:column="30"/></name><operator pos:line="53" pos:column="30">.<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="31">cert_type<pos:position pos:line="53" pos:column="40"/></name></name></expr></argument>,
                    <argument><expr><name><name pos:line="54" pos:column="21">data<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">-&gt;<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="27">set<pos:position pos:line="54" pos:column="30"/></name><operator pos:line="54" pos:column="30">.<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="31">key<pos:position pos:line="54" pos:column="34"/></name></name></expr></argument>,
                    <argument><expr><name><name pos:line="55" pos:column="21">data<pos:position pos:line="55" pos:column="25"/></name><operator pos:line="55" pos:column="25">-&gt;<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="27">set<pos:position pos:line="55" pos:column="30"/></name><operator pos:line="55" pos:column="30">.<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="31">key_type<pos:position pos:line="55" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="41"/></condition><then pos:line="55" pos:column="41"> <block pos:line="55" pos:column="42">{
      <comment type="block" pos:line="56" pos:column="7">/* failf() is already done in cert_stuff() */</comment>
      <return pos:line="57" pos:column="7">return <expr><name pos:line="57" pos:column="14">CURLE_SSL_CERTPROBLEM<pos:position pos:line="57" pos:column="35"/></name></expr>;<pos:position pos:line="57" pos:column="36"/></return>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if>

  <if pos:line="61" pos:column="3">if<condition pos:line="61" pos:column="5">(<expr><name><name pos:line="61" pos:column="6">data<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">-&gt;<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="12">set<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">.<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="16">ssl<pos:position pos:line="61" pos:column="19"/></name><operator pos:line="61" pos:column="19">.<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="20">cipher_list<pos:position pos:line="61" pos:column="31"/></name></name></expr>)<pos:position pos:line="61" pos:column="32"/></condition><then pos:line="61" pos:column="32"> <block pos:line="61" pos:column="33">{
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><operator pos:line="62" pos:column="9">!<pos:position pos:line="62" pos:column="10"/></operator><call><name pos:line="62" pos:column="10">SSL_CTX_set_cipher_list<pos:position pos:line="62" pos:column="33"/></name><argument_list pos:line="62" pos:column="33">(<argument><expr><name><name pos:line="62" pos:column="34">conn<pos:position pos:line="62" pos:column="38"/></name><operator pos:line="62" pos:column="38">-&gt;<pos:position pos:line="62" pos:column="43"/></operator><name pos:line="62" pos:column="40">ssl<pos:position pos:line="62" pos:column="43"/></name><operator pos:line="62" pos:column="43">.<pos:position pos:line="62" pos:column="44"/></operator><name pos:line="62" pos:column="44">ctx<pos:position pos:line="62" pos:column="47"/></name></name></expr></argument>,
                                 <argument><expr><name><name pos:line="63" pos:column="34">data<pos:position pos:line="63" pos:column="38"/></name><operator pos:line="63" pos:column="38">-&gt;<pos:position pos:line="63" pos:column="43"/></operator><name pos:line="63" pos:column="40">set<pos:position pos:line="63" pos:column="43"/></name><operator pos:line="63" pos:column="43">.<pos:position pos:line="63" pos:column="44"/></operator><name pos:line="63" pos:column="44">ssl<pos:position pos:line="63" pos:column="47"/></name><operator pos:line="63" pos:column="47">.<pos:position pos:line="63" pos:column="48"/></operator><name pos:line="63" pos:column="48">cipher_list<pos:position pos:line="63" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="61"/></condition><then pos:line="63" pos:column="61"> <block pos:line="63" pos:column="62">{
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">failf<pos:position pos:line="64" pos:column="12"/></name><argument_list pos:line="64" pos:column="12">(<argument><expr><name pos:line="64" pos:column="13">data<pos:position pos:line="64" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="19">"failed setting cipher list"<pos:position pos:line="64" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt>
      <return pos:line="65" pos:column="7">return <expr><name pos:line="65" pos:column="14">CURLE_SSL_CIPHER<pos:position pos:line="65" pos:column="30"/></name></expr>;<pos:position pos:line="65" pos:column="31"/></return>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if>

  <if pos:line="69" pos:column="3">if<condition pos:line="69" pos:column="5">(<expr><name><name pos:line="69" pos:column="6">data<pos:position pos:line="69" pos:column="10"/></name><operator pos:line="69" pos:column="10">-&gt;<pos:position pos:line="69" pos:column="15"/></operator><name pos:line="69" pos:column="12">set<pos:position pos:line="69" pos:column="15"/></name><operator pos:line="69" pos:column="15">.<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="16">ssl<pos:position pos:line="69" pos:column="19"/></name><operator pos:line="69" pos:column="19">.<pos:position pos:line="69" pos:column="20"/></operator><name pos:line="69" pos:column="20">verifypeer<pos:position pos:line="69" pos:column="30"/></name></name></expr>)<pos:position pos:line="69" pos:column="31"/></condition><then><block pos:line="69" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">SSL_CTX_set_verify<pos:position pos:line="70" pos:column="23"/></name><argument_list pos:line="70" pos:column="23">(<argument><expr><name><name pos:line="70" pos:column="24">conn<pos:position pos:line="70" pos:column="28"/></name><operator pos:line="70" pos:column="28">-&gt;<pos:position pos:line="70" pos:column="33"/></operator><name pos:line="70" pos:column="30">ssl<pos:position pos:line="70" pos:column="33"/></name><operator pos:line="70" pos:column="33">.<pos:position pos:line="70" pos:column="34"/></operator><name pos:line="70" pos:column="34">ctx<pos:position pos:line="70" pos:column="37"/></name></name></expr></argument>,
                       <argument><expr><name pos:line="71" pos:column="24">SSL_VERIFY_PEER<pos:position pos:line="71" pos:column="39"/></name><operator pos:line="71" pos:column="39">|<pos:position pos:line="71" pos:column="40"/></operator><name pos:line="71" pos:column="40">SSL_VERIFY_FAIL_IF_NO_PEER_CERT<pos:position pos:line="71" pos:column="71"/></name><operator pos:line="71" pos:column="71">|<pos:position pos:line="71" pos:column="72"/></operator>
                       <name pos:line="72" pos:column="24">SSL_VERIFY_CLIENT_ONCE<pos:position pos:line="72" pos:column="46"/></name></expr></argument>,
                       <argument><expr><name pos:line="73" pos:column="24">cert_verify_callback<pos:position pos:line="73" pos:column="44"/></name></expr></argument>)<pos:position pos:line="73" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="46"/></expr_stmt>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><operator pos:line="74" pos:column="9">(<pos:position pos:line="74" pos:column="10"/></operator><name><name pos:line="74" pos:column="10">data<pos:position pos:line="74" pos:column="14"/></name><operator pos:line="74" pos:column="14">-&gt;<pos:position pos:line="74" pos:column="19"/></operator><name pos:line="74" pos:column="16">set<pos:position pos:line="74" pos:column="19"/></name><operator pos:line="74" pos:column="19">.<pos:position pos:line="74" pos:column="20"/></operator><name pos:line="74" pos:column="20">ssl<pos:position pos:line="74" pos:column="23"/></name><operator pos:line="74" pos:column="23">.<pos:position pos:line="74" pos:column="24"/></operator><name pos:line="74" pos:column="24">CAfile<pos:position pos:line="74" pos:column="30"/></name></name> <operator pos:line="74" pos:column="31">||<pos:position pos:line="74" pos:column="33"/></operator> <name><name pos:line="74" pos:column="34">data<pos:position pos:line="74" pos:column="38"/></name><operator pos:line="74" pos:column="38">-&gt;<pos:position pos:line="74" pos:column="43"/></operator><name pos:line="74" pos:column="40">set<pos:position pos:line="74" pos:column="43"/></name><operator pos:line="74" pos:column="43">.<pos:position pos:line="74" pos:column="44"/></operator><name pos:line="74" pos:column="44">ssl<pos:position pos:line="74" pos:column="47"/></name><operator pos:line="74" pos:column="47">.<pos:position pos:line="74" pos:column="48"/></operator><name pos:line="74" pos:column="48">CApath<pos:position pos:line="74" pos:column="54"/></name></name><operator pos:line="74" pos:column="54">)<pos:position pos:line="74" pos:column="55"/></operator> <operator pos:line="74" pos:column="56">&amp;&amp;<pos:position pos:line="74" pos:column="66"/></operator>
        <operator pos:line="75" pos:column="9">!<pos:position pos:line="75" pos:column="10"/></operator><call><name pos:line="75" pos:column="10">SSL_CTX_load_verify_locations<pos:position pos:line="75" pos:column="39"/></name><argument_list pos:line="75" pos:column="39">(<argument><expr><name><name pos:line="75" pos:column="40">conn<pos:position pos:line="75" pos:column="44"/></name><operator pos:line="75" pos:column="44">-&gt;<pos:position pos:line="75" pos:column="49"/></operator><name pos:line="75" pos:column="46">ssl<pos:position pos:line="75" pos:column="49"/></name><operator pos:line="75" pos:column="49">.<pos:position pos:line="75" pos:column="50"/></operator><name pos:line="75" pos:column="50">ctx<pos:position pos:line="75" pos:column="53"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="76" pos:column="40">data<pos:position pos:line="76" pos:column="44"/></name><operator pos:line="76" pos:column="44">-&gt;<pos:position pos:line="76" pos:column="49"/></operator><name pos:line="76" pos:column="46">set<pos:position pos:line="76" pos:column="49"/></name><operator pos:line="76" pos:column="49">.<pos:position pos:line="76" pos:column="50"/></operator><name pos:line="76" pos:column="50">ssl<pos:position pos:line="76" pos:column="53"/></name><operator pos:line="76" pos:column="53">.<pos:position pos:line="76" pos:column="54"/></operator><name pos:line="76" pos:column="54">CAfile<pos:position pos:line="76" pos:column="60"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="77" pos:column="40">data<pos:position pos:line="77" pos:column="44"/></name><operator pos:line="77" pos:column="44">-&gt;<pos:position pos:line="77" pos:column="49"/></operator><name pos:line="77" pos:column="46">set<pos:position pos:line="77" pos:column="49"/></name><operator pos:line="77" pos:column="49">.<pos:position pos:line="77" pos:column="50"/></operator><name pos:line="77" pos:column="50">ssl<pos:position pos:line="77" pos:column="53"/></name><operator pos:line="77" pos:column="53">.<pos:position pos:line="77" pos:column="54"/></operator><name pos:line="77" pos:column="54">CApath<pos:position pos:line="77" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="62"/></condition><then pos:line="77" pos:column="62"> <block pos:line="77" pos:column="63">{
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">failf<pos:position pos:line="78" pos:column="12"/></name><argument_list pos:line="78" pos:column="12">(<argument><expr><name pos:line="78" pos:column="13">data<pos:position pos:line="78" pos:column="17"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="78" pos:column="18">"error setting certificate verify locations"<pos:position pos:line="78" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="64"/></expr_stmt>
      <return pos:line="79" pos:column="7">return <expr><name pos:line="79" pos:column="14">CURLE_SSL_CACERT<pos:position pos:line="79" pos:column="30"/></name></expr>;<pos:position pos:line="79" pos:column="31"/></return>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
  }<pos:position pos:line="81" pos:column="4"/></block></then>
  <else pos:line="82" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="5">SSL_CTX_set_verify<pos:position pos:line="83" pos:column="23"/></name><argument_list pos:line="83" pos:column="23">(<argument><expr><name><name pos:line="83" pos:column="24">conn<pos:position pos:line="83" pos:column="28"/></name><operator pos:line="83" pos:column="28">-&gt;<pos:position pos:line="83" pos:column="33"/></operator><name pos:line="83" pos:column="30">ssl<pos:position pos:line="83" pos:column="33"/></name><operator pos:line="83" pos:column="33">.<pos:position pos:line="83" pos:column="34"/></operator><name pos:line="83" pos:column="34">ctx<pos:position pos:line="83" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="39">SSL_VERIFY_NONE<pos:position pos:line="83" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="56">cert_verify_callback<pos:position pos:line="83" pos:column="76"/></name></expr></argument>)<pos:position pos:line="83" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="78"/></expr_stmt></block></else></if>


  <comment type="block" pos:line="86" pos:column="3">/* Lets make an SSL structure */</comment>
  <expr_stmt><expr><name><name pos:line="87" pos:column="3">conn<pos:position pos:line="87" pos:column="7"/></name><operator pos:line="87" pos:column="7">-&gt;<pos:position pos:line="87" pos:column="12"/></operator><name pos:line="87" pos:column="9">ssl<pos:position pos:line="87" pos:column="12"/></name><operator pos:line="87" pos:column="12">.<pos:position pos:line="87" pos:column="13"/></operator><name pos:line="87" pos:column="13">handle<pos:position pos:line="87" pos:column="19"/></name></name> <operator pos:line="87" pos:column="20">=<pos:position pos:line="87" pos:column="21"/></operator> <call><name pos:line="87" pos:column="22">SSL_new<pos:position pos:line="87" pos:column="29"/></name> <argument_list pos:line="87" pos:column="30">(<argument><expr><name><name pos:line="87" pos:column="31">conn<pos:position pos:line="87" pos:column="35"/></name><operator pos:line="87" pos:column="35">-&gt;<pos:position pos:line="87" pos:column="40"/></operator><name pos:line="87" pos:column="37">ssl<pos:position pos:line="87" pos:column="40"/></name><operator pos:line="87" pos:column="40">.<pos:position pos:line="87" pos:column="41"/></operator><name pos:line="87" pos:column="41">ctx<pos:position pos:line="87" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="88" pos:column="3">SSL_set_connect_state<pos:position pos:line="88" pos:column="24"/></name> <argument_list pos:line="88" pos:column="25">(<argument><expr><name><name pos:line="88" pos:column="26">conn<pos:position pos:line="88" pos:column="30"/></name><operator pos:line="88" pos:column="30">-&gt;<pos:position pos:line="88" pos:column="35"/></operator><name pos:line="88" pos:column="32">ssl<pos:position pos:line="88" pos:column="35"/></name><operator pos:line="88" pos:column="35">.<pos:position pos:line="88" pos:column="36"/></operator><name pos:line="88" pos:column="36">handle<pos:position pos:line="88" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="90" pos:column="3">conn<pos:position pos:line="90" pos:column="7"/></name><operator pos:line="90" pos:column="7">-&gt;<pos:position pos:line="90" pos:column="12"/></operator><name pos:line="90" pos:column="9">ssl<pos:position pos:line="90" pos:column="12"/></name><operator pos:line="90" pos:column="12">.<pos:position pos:line="90" pos:column="13"/></operator><name pos:line="90" pos:column="13">server_cert<pos:position pos:line="90" pos:column="24"/></name></name> <operator pos:line="90" pos:column="25">=<pos:position pos:line="90" pos:column="26"/></operator> <literal type="number" pos:line="90" pos:column="27">0x0<pos:position pos:line="90" pos:column="30"/></literal></expr>;<pos:position pos:line="90" pos:column="31"/></expr_stmt>

  <if pos:line="92" pos:column="3">if<condition pos:line="92" pos:column="5">(<expr><operator pos:line="92" pos:column="6">!<pos:position pos:line="92" pos:column="7"/></operator><name><name pos:line="92" pos:column="7">conn<pos:position pos:line="92" pos:column="11"/></name><operator pos:line="92" pos:column="11">-&gt;<pos:position pos:line="92" pos:column="16"/></operator><name pos:line="92" pos:column="13">bits<pos:position pos:line="92" pos:column="17"/></name><operator pos:line="92" pos:column="17">.<pos:position pos:line="92" pos:column="18"/></operator><name pos:line="92" pos:column="18">reuse<pos:position pos:line="92" pos:column="23"/></name></name></expr>)<pos:position pos:line="92" pos:column="24"/></condition><then pos:line="92" pos:column="24"> <block pos:line="92" pos:column="25">{
    <comment type="block" pos:line="93" pos:column="5">/* We're not re-using a connection, check if there's a cached ID we
       can/should use here! */</comment>
    <if pos:line="95" pos:column="5">if<condition pos:line="95" pos:column="7">(<expr><operator pos:line="95" pos:column="8">!<pos:position pos:line="95" pos:column="9"/></operator><call><name pos:line="95" pos:column="9">Get_SSL_Session<pos:position pos:line="95" pos:column="24"/></name><argument_list pos:line="95" pos:column="24">(<argument><expr><name pos:line="95" pos:column="25">conn<pos:position pos:line="95" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="31">&amp;<pos:position pos:line="95" pos:column="36"/></operator><name pos:line="95" pos:column="32">ssl_sessionid<pos:position pos:line="95" pos:column="45"/></name></expr></argument>)<pos:position pos:line="95" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="47"/></condition><then pos:line="95" pos:column="47"> <block pos:line="95" pos:column="48">{
      <comment type="block" pos:line="96" pos:column="7">/* we got a session id, use it! */</comment>
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">SSL_set_session<pos:position pos:line="97" pos:column="22"/></name><argument_list pos:line="97" pos:column="22">(<argument><expr><name><name pos:line="97" pos:column="23">conn<pos:position pos:line="97" pos:column="27"/></name><operator pos:line="97" pos:column="27">-&gt;<pos:position pos:line="97" pos:column="32"/></operator><name pos:line="97" pos:column="29">ssl<pos:position pos:line="97" pos:column="32"/></name><operator pos:line="97" pos:column="32">.<pos:position pos:line="97" pos:column="33"/></operator><name pos:line="97" pos:column="33">handle<pos:position pos:line="97" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="41">ssl_sessionid<pos:position pos:line="97" pos:column="54"/></name></expr></argument>)<pos:position pos:line="97" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="56"/></expr_stmt>
      <comment type="block" pos:line="98" pos:column="7">/* Informational message */</comment>
      <expr_stmt><expr><call><name pos:line="99" pos:column="7">infof<pos:position pos:line="99" pos:column="12"/></name> <argument_list pos:line="99" pos:column="13">(<argument><expr><name pos:line="99" pos:column="14">data<pos:position pos:line="99" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="20">"SSL re-using session ID\n"<pos:position pos:line="99" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>
  }<pos:position pos:line="101" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="103" pos:column="3">/* pass the raw socket into the SSL layers */</comment>
  <expr_stmt><expr><call><name pos:line="104" pos:column="3">SSL_set_fd<pos:position pos:line="104" pos:column="13"/></name><argument_list pos:line="104" pos:column="13">(<argument><expr><name><name pos:line="104" pos:column="14">conn<pos:position pos:line="104" pos:column="18"/></name><operator pos:line="104" pos:column="18">-&gt;<pos:position pos:line="104" pos:column="23"/></operator><name pos:line="104" pos:column="20">ssl<pos:position pos:line="104" pos:column="23"/></name><operator pos:line="104" pos:column="23">.<pos:position pos:line="104" pos:column="24"/></operator><name pos:line="104" pos:column="24">handle<pos:position pos:line="104" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="32">conn<pos:position pos:line="104" pos:column="36"/></name><operator pos:line="104" pos:column="36">-&gt;<pos:position pos:line="104" pos:column="41"/></operator><name pos:line="104" pos:column="38">firstsocket<pos:position pos:line="104" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="51"/></expr_stmt>

  <do pos:line="106" pos:column="3">do <block pos:line="106" pos:column="6">{
    <decl_stmt><decl><type><name pos:line="107" pos:column="5">fd_set<pos:position pos:line="107" pos:column="11"/></name></type> <name pos:line="107" pos:column="12">writefd<pos:position pos:line="107" pos:column="19"/></name></decl>;<pos:position pos:line="107" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="108" pos:column="5">fd_set<pos:position pos:line="108" pos:column="11"/></name></type> <name pos:line="108" pos:column="12">readfd<pos:position pos:line="108" pos:column="18"/></name></decl>;<pos:position pos:line="108" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="109" pos:column="5">struct<pos:position pos:line="109" pos:column="11"/></name> <name pos:line="109" pos:column="12">timeval<pos:position pos:line="109" pos:column="19"/></name></name></type> <name pos:line="109" pos:column="20">interval<pos:position pos:line="109" pos:column="28"/></name></decl>;<pos:position pos:line="109" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="110" pos:column="5">long<pos:position pos:line="110" pos:column="9"/></name></type> <name pos:line="110" pos:column="10">timeout_ms<pos:position pos:line="110" pos:column="20"/></name></decl>;<pos:position pos:line="110" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="112" pos:column="5">/* Find out if any timeout is set. If not, use 300 seconds.
       Otherwise, figure out the most strict timeout of the two possible one
       and then how much time that has elapsed to know how much time we
       allow for the connect call */</comment>
    <if pos:line="116" pos:column="5">if<condition pos:line="116" pos:column="7">(<expr><name><name pos:line="116" pos:column="8">data<pos:position pos:line="116" pos:column="12"/></name><operator pos:line="116" pos:column="12">-&gt;<pos:position pos:line="116" pos:column="17"/></operator><name pos:line="116" pos:column="14">set<pos:position pos:line="116" pos:column="17"/></name><operator pos:line="116" pos:column="17">.<pos:position pos:line="116" pos:column="18"/></operator><name pos:line="116" pos:column="18">timeout<pos:position pos:line="116" pos:column="25"/></name></name> <operator pos:line="116" pos:column="26">||<pos:position pos:line="116" pos:column="28"/></operator> <name><name pos:line="116" pos:column="29">data<pos:position pos:line="116" pos:column="33"/></name><operator pos:line="116" pos:column="33">-&gt;<pos:position pos:line="116" pos:column="38"/></operator><name pos:line="116" pos:column="35">set<pos:position pos:line="116" pos:column="38"/></name><operator pos:line="116" pos:column="38">.<pos:position pos:line="116" pos:column="39"/></operator><name pos:line="116" pos:column="39">connecttimeout<pos:position pos:line="116" pos:column="53"/></name></name></expr>)<pos:position pos:line="116" pos:column="54"/></condition><then pos:line="116" pos:column="54"> <block pos:line="116" pos:column="55">{
      <decl_stmt><decl><type><name pos:line="117" pos:column="7">double<pos:position pos:line="117" pos:column="13"/></name></type> <name pos:line="117" pos:column="14">has_passed<pos:position pos:line="117" pos:column="24"/></name></decl>;<pos:position pos:line="117" pos:column="25"/></decl_stmt>

      <comment type="block" pos:line="119" pos:column="7">/* Evaluate in milliseconds how much time that has passed */</comment>
      <expr_stmt><expr><name pos:line="120" pos:column="7">has_passed<pos:position pos:line="120" pos:column="17"/></name> <operator pos:line="120" pos:column="18">=<pos:position pos:line="120" pos:column="19"/></operator> <call><name pos:line="120" pos:column="20">Curl_tvdiff<pos:position pos:line="120" pos:column="31"/></name><argument_list pos:line="120" pos:column="31">(<argument><expr><call><name pos:line="120" pos:column="32">Curl_tvnow<pos:position pos:line="120" pos:column="42"/></name><argument_list pos:line="120" pos:column="42">()<pos:position pos:line="120" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="46">data<pos:position pos:line="120" pos:column="50"/></name><operator pos:line="120" pos:column="50">-&gt;<pos:position pos:line="120" pos:column="55"/></operator><name pos:line="120" pos:column="52">progress<pos:position pos:line="120" pos:column="60"/></name><operator pos:line="120" pos:column="60">.<pos:position pos:line="120" pos:column="61"/></operator><name pos:line="120" pos:column="61">start<pos:position pos:line="120" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="68"/></expr_stmt>

<cpp:ifndef pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">ifndef<pos:position pos:line="122" pos:column="8"/></cpp:directive> <name pos:line="122" pos:column="9">min<pos:position pos:line="122" pos:column="12"/></name></cpp:ifndef>
<cpp:define pos:line="123" pos:column="1">#<cpp:directive pos:line="123" pos:column="2">define<pos:position pos:line="123" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="123" pos:column="9">min<pos:position pos:line="123" pos:column="12"/></name><parameter_list pos:line="123" pos:column="12">(<parameter><type><name pos:line="123" pos:column="13">a<pos:position pos:line="123" pos:column="14"/></name></type></parameter>, <parameter><type><name pos:line="123" pos:column="16">b<pos:position pos:line="123" pos:column="17"/></name></type></parameter>)<pos:position pos:line="123" pos:column="18"/></parameter_list></cpp:macro>   <cpp:value pos:line="123" pos:column="21">((a) &lt; (b) ? (a) : (b))<pos:position pos:line="123" pos:column="44"/></cpp:value></cpp:define>
<cpp:endif pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">endif<pos:position pos:line="124" pos:column="7"/></cpp:directive></cpp:endif>

      <comment type="block" pos:line="126" pos:column="7">/* get the most strict timeout of the ones converted to milliseconds */</comment>
      <if pos:line="127" pos:column="7">if<condition pos:line="127" pos:column="9">(<expr><name><name pos:line="127" pos:column="10">data<pos:position pos:line="127" pos:column="14"/></name><operator pos:line="127" pos:column="14">-&gt;<pos:position pos:line="127" pos:column="19"/></operator><name pos:line="127" pos:column="16">set<pos:position pos:line="127" pos:column="19"/></name><operator pos:line="127" pos:column="19">.<pos:position pos:line="127" pos:column="20"/></operator><name pos:line="127" pos:column="20">timeout<pos:position pos:line="127" pos:column="27"/></name></name> <operator pos:line="127" pos:column="28">&amp;&amp;<pos:position pos:line="127" pos:column="38"/></operator>
         <operator pos:line="128" pos:column="10">(<pos:position pos:line="128" pos:column="11"/></operator><name><name pos:line="128" pos:column="11">data<pos:position pos:line="128" pos:column="15"/></name><operator pos:line="128" pos:column="15">-&gt;<pos:position pos:line="128" pos:column="20"/></operator><name pos:line="128" pos:column="17">set<pos:position pos:line="128" pos:column="20"/></name><operator pos:line="128" pos:column="20">.<pos:position pos:line="128" pos:column="21"/></operator><name pos:line="128" pos:column="21">timeout<pos:position pos:line="128" pos:column="28"/></name></name><operator pos:line="128" pos:column="28">&gt;<pos:position pos:line="128" pos:column="32"/></operator><name><name pos:line="128" pos:column="29">data<pos:position pos:line="128" pos:column="33"/></name><operator pos:line="128" pos:column="33">-&gt;<pos:position pos:line="128" pos:column="38"/></operator><name pos:line="128" pos:column="35">set<pos:position pos:line="128" pos:column="38"/></name><operator pos:line="128" pos:column="38">.<pos:position pos:line="128" pos:column="39"/></operator><name pos:line="128" pos:column="39">connecttimeout<pos:position pos:line="128" pos:column="53"/></name></name><operator pos:line="128" pos:column="53">)<pos:position pos:line="128" pos:column="54"/></operator></expr>)<pos:position pos:line="128" pos:column="55"/></condition><then pos:line="128" pos:column="55">
        <block type="pseudo"><expr_stmt><expr><name pos:line="129" pos:column="9">timeout_ms<pos:position pos:line="129" pos:column="19"/></name> <operator pos:line="129" pos:column="20">=<pos:position pos:line="129" pos:column="21"/></operator> <name><name pos:line="129" pos:column="22">data<pos:position pos:line="129" pos:column="26"/></name><operator pos:line="129" pos:column="26">-&gt;<pos:position pos:line="129" pos:column="31"/></operator><name pos:line="129" pos:column="28">set<pos:position pos:line="129" pos:column="31"/></name><operator pos:line="129" pos:column="31">.<pos:position pos:line="129" pos:column="32"/></operator><name pos:line="129" pos:column="32">timeout<pos:position pos:line="129" pos:column="39"/></name></name><operator pos:line="129" pos:column="39">*<pos:position pos:line="129" pos:column="40"/></operator><literal type="number" pos:line="129" pos:column="40">1000<pos:position pos:line="129" pos:column="44"/></literal></expr>;<pos:position pos:line="129" pos:column="45"/></expr_stmt></block></then>
      <else pos:line="130" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="131" pos:column="9">timeout_ms<pos:position pos:line="131" pos:column="19"/></name> <operator pos:line="131" pos:column="20">=<pos:position pos:line="131" pos:column="21"/></operator> <name><name pos:line="131" pos:column="22">data<pos:position pos:line="131" pos:column="26"/></name><operator pos:line="131" pos:column="26">-&gt;<pos:position pos:line="131" pos:column="31"/></operator><name pos:line="131" pos:column="28">set<pos:position pos:line="131" pos:column="31"/></name><operator pos:line="131" pos:column="31">.<pos:position pos:line="131" pos:column="32"/></operator><name pos:line="131" pos:column="32">connecttimeout<pos:position pos:line="131" pos:column="46"/></name></name><operator pos:line="131" pos:column="46">*<pos:position pos:line="131" pos:column="47"/></operator><literal type="number" pos:line="131" pos:column="47">1000<pos:position pos:line="131" pos:column="51"/></literal></expr>;<pos:position pos:line="131" pos:column="52"/></expr_stmt></block></else></if>
      
      <comment type="block" pos:line="133" pos:column="7">/* subtract the passed time */</comment>
      <expr_stmt><expr><name pos:line="134" pos:column="7">timeout_ms<pos:position pos:line="134" pos:column="17"/></name> <operator pos:line="134" pos:column="18">-=<pos:position pos:line="134" pos:column="20"/></operator> <operator pos:line="134" pos:column="21">(<pos:position pos:line="134" pos:column="22"/></operator><name pos:line="134" pos:column="22">long<pos:position pos:line="134" pos:column="26"/></name><operator pos:line="134" pos:column="26">)<pos:position pos:line="134" pos:column="27"/></operator><name pos:line="134" pos:column="27">has_passed<pos:position pos:line="134" pos:column="37"/></name></expr>;<pos:position pos:line="134" pos:column="38"/></expr_stmt>
      
      <if pos:line="136" pos:column="7">if<condition pos:line="136" pos:column="9">(<expr><name pos:line="136" pos:column="10">timeout_ms<pos:position pos:line="136" pos:column="20"/></name> <operator pos:line="136" pos:column="21">&lt;<pos:position pos:line="136" pos:column="25"/></operator> <literal type="number" pos:line="136" pos:column="23">0<pos:position pos:line="136" pos:column="24"/></literal></expr>)<pos:position pos:line="136" pos:column="25"/></condition><then pos:line="136" pos:column="25"> <block pos:line="136" pos:column="26">{
        <comment type="block" pos:line="137" pos:column="9">/* a precaution, no need to continue if time already is up */</comment>
        <expr_stmt><expr><call><name pos:line="138" pos:column="9">failf<pos:position pos:line="138" pos:column="14"/></name><argument_list pos:line="138" pos:column="14">(<argument><expr><name pos:line="138" pos:column="15">data<pos:position pos:line="138" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="21">"SSL connection timeout"<pos:position pos:line="138" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="47"/></expr_stmt>
        <return pos:line="139" pos:column="9">return <expr><name pos:line="139" pos:column="16">CURLE_OPERATION_TIMEOUTED<pos:position pos:line="139" pos:column="41"/></name></expr>;<pos:position pos:line="139" pos:column="42"/></return>
      }<pos:position pos:line="140" pos:column="8"/></block></then></if>
    }<pos:position pos:line="141" pos:column="6"/></block></then>
    <else pos:line="142" pos:column="5">else
      <comment type="block" pos:line="143" pos:column="7">/* no particular time-out has been set */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="144" pos:column="7">timeout_ms<pos:position pos:line="144" pos:column="17"/></name><operator pos:line="144" pos:column="17">=<pos:position pos:line="144" pos:column="18"/></operator><literal type="number" pos:line="144" pos:column="18">300000<pos:position pos:line="144" pos:column="24"/></literal></expr>;<pos:position pos:line="144" pos:column="25"/></expr_stmt></block></else></if> <comment type="block" pos:line="144" pos:column="26">/* milliseconds, default to five minutes */</comment>


    <expr_stmt><expr><call><name pos:line="147" pos:column="5">FD_ZERO<pos:position pos:line="147" pos:column="12"/></name><argument_list pos:line="147" pos:column="12">(<argument><expr><operator pos:line="147" pos:column="13">&amp;<pos:position pos:line="147" pos:column="18"/></operator><name pos:line="147" pos:column="14">writefd<pos:position pos:line="147" pos:column="21"/></name></expr></argument>)<pos:position pos:line="147" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="148" pos:column="5">FD_ZERO<pos:position pos:line="148" pos:column="12"/></name><argument_list pos:line="148" pos:column="12">(<argument><expr><operator pos:line="148" pos:column="13">&amp;<pos:position pos:line="148" pos:column="18"/></operator><name pos:line="148" pos:column="14">readfd<pos:position pos:line="148" pos:column="20"/></name></expr></argument>)<pos:position pos:line="148" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name pos:line="150" pos:column="5">err<pos:position pos:line="150" pos:column="8"/></name> <operator pos:line="150" pos:column="9">=<pos:position pos:line="150" pos:column="10"/></operator> <call><name pos:line="150" pos:column="11">SSL_connect<pos:position pos:line="150" pos:column="22"/></name><argument_list pos:line="150" pos:column="22">(<argument><expr><name><name pos:line="150" pos:column="23">conn<pos:position pos:line="150" pos:column="27"/></name><operator pos:line="150" pos:column="27">-&gt;<pos:position pos:line="150" pos:column="32"/></operator><name pos:line="150" pos:column="29">ssl<pos:position pos:line="150" pos:column="32"/></name><operator pos:line="150" pos:column="32">.<pos:position pos:line="150" pos:column="33"/></operator><name pos:line="150" pos:column="33">handle<pos:position pos:line="150" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="150" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="152" pos:column="5">/* 1  is fine
       0  is "not successful but was shut down controlled"
       &lt;0 is "handshake was not successful, because a fatal error occurred" */</comment>
    <if pos:line="155" pos:column="5">if<condition pos:line="155" pos:column="7">(<expr><literal type="number" pos:line="155" pos:column="8">1<pos:position pos:line="155" pos:column="9"/></literal> <operator pos:line="155" pos:column="10">!=<pos:position pos:line="155" pos:column="12"/></operator> <name pos:line="155" pos:column="13">err<pos:position pos:line="155" pos:column="16"/></name></expr>)<pos:position pos:line="155" pos:column="17"/></condition><then pos:line="155" pos:column="17"> <block pos:line="155" pos:column="18">{
      <decl_stmt><decl><type><name pos:line="156" pos:column="7">int<pos:position pos:line="156" pos:column="10"/></name></type> <name pos:line="156" pos:column="11">detail<pos:position pos:line="156" pos:column="17"/></name> <init pos:line="156" pos:column="18">= <expr><call><name pos:line="156" pos:column="20">SSL_get_error<pos:position pos:line="156" pos:column="33"/></name><argument_list pos:line="156" pos:column="33">(<argument><expr><name><name pos:line="156" pos:column="34">conn<pos:position pos:line="156" pos:column="38"/></name><operator pos:line="156" pos:column="38">-&gt;<pos:position pos:line="156" pos:column="43"/></operator><name pos:line="156" pos:column="40">ssl<pos:position pos:line="156" pos:column="43"/></name><operator pos:line="156" pos:column="43">.<pos:position pos:line="156" pos:column="44"/></operator><name pos:line="156" pos:column="44">handle<pos:position pos:line="156" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="52">err<pos:position pos:line="156" pos:column="55"/></name></expr></argument>)<pos:position pos:line="156" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="156" pos:column="57"/></decl_stmt>

      <if pos:line="158" pos:column="7">if<condition pos:line="158" pos:column="9">(<expr><name pos:line="158" pos:column="10">SSL_ERROR_WANT_READ<pos:position pos:line="158" pos:column="29"/></name> <operator pos:line="158" pos:column="30">==<pos:position pos:line="158" pos:column="32"/></operator> <name pos:line="158" pos:column="33">detail<pos:position pos:line="158" pos:column="39"/></name></expr>)<pos:position pos:line="158" pos:column="40"/></condition><then pos:line="158" pos:column="40">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="159" pos:column="9">FD_SET<pos:position pos:line="159" pos:column="15"/></name><argument_list pos:line="159" pos:column="15">(<argument><expr><name><name pos:line="159" pos:column="16">conn<pos:position pos:line="159" pos:column="20"/></name><operator pos:line="159" pos:column="20">-&gt;<pos:position pos:line="159" pos:column="25"/></operator><name pos:line="159" pos:column="22">firstsocket<pos:position pos:line="159" pos:column="33"/></name></name></expr></argument>, <argument><expr><operator pos:line="159" pos:column="35">&amp;<pos:position pos:line="159" pos:column="40"/></operator><name pos:line="159" pos:column="36">readfd<pos:position pos:line="159" pos:column="42"/></name></expr></argument>)<pos:position pos:line="159" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="44"/></expr_stmt></block></then>
      <elseif pos:line="160" pos:column="7">else <if pos:line="160" pos:column="12">if<condition pos:line="160" pos:column="14">(<expr><name pos:line="160" pos:column="15">SSL_ERROR_WANT_WRITE<pos:position pos:line="160" pos:column="35"/></name> <operator pos:line="160" pos:column="36">==<pos:position pos:line="160" pos:column="38"/></operator> <name pos:line="160" pos:column="39">detail<pos:position pos:line="160" pos:column="45"/></name></expr>)<pos:position pos:line="160" pos:column="46"/></condition><then pos:line="160" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="161" pos:column="9">FD_SET<pos:position pos:line="161" pos:column="15"/></name><argument_list pos:line="161" pos:column="15">(<argument><expr><name><name pos:line="161" pos:column="16">conn<pos:position pos:line="161" pos:column="20"/></name><operator pos:line="161" pos:column="20">-&gt;<pos:position pos:line="161" pos:column="25"/></operator><name pos:line="161" pos:column="22">firstsocket<pos:position pos:line="161" pos:column="33"/></name></name></expr></argument>, <argument><expr><operator pos:line="161" pos:column="35">&amp;<pos:position pos:line="161" pos:column="40"/></operator><name pos:line="161" pos:column="36">writefd<pos:position pos:line="161" pos:column="43"/></name></expr></argument>)<pos:position pos:line="161" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="45"/></expr_stmt></block></then></if></elseif>
      <else pos:line="162" pos:column="7">else <block pos:line="162" pos:column="12">{
        <comment type="block" pos:line="163" pos:column="9">/* untreated error */</comment>
        <decl_stmt><decl><type><name pos:line="164" pos:column="9">char<pos:position pos:line="164" pos:column="13"/></name></type> <name><name pos:line="164" pos:column="14">error_buffer<pos:position pos:line="164" pos:column="26"/></name><index pos:line="164" pos:column="26">[<expr><literal type="number" pos:line="164" pos:column="27">120<pos:position pos:line="164" pos:column="30"/></literal></expr>]<pos:position pos:line="164" pos:column="31"/></index></name></decl>;<pos:position pos:line="164" pos:column="32"/></decl_stmt> <comment type="block" pos:line="164" pos:column="33">/* OpenSSL documents that this must be at least
                                   120 bytes long. */</comment>
        <comment type="block" pos:line="166" pos:column="9">/* detail is already set to the SSL error above */</comment>
        <expr_stmt><expr><call><name pos:line="167" pos:column="9">failf<pos:position pos:line="167" pos:column="14"/></name><argument_list pos:line="167" pos:column="14">(<argument><expr><name pos:line="167" pos:column="15">data<pos:position pos:line="167" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="21">"SSL: %s"<pos:position pos:line="167" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="167" pos:column="32">ERR_error_string<pos:position pos:line="167" pos:column="48"/></name><argument_list pos:line="167" pos:column="48">(<argument><expr><name pos:line="167" pos:column="49">detail<pos:position pos:line="167" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="57">error_buffer<pos:position pos:line="167" pos:column="69"/></name></expr></argument>)<pos:position pos:line="167" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="167" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="72"/></expr_stmt>

        <comment type="block" pos:line="169" pos:column="9">/* OpenSSL 0.9.6 and later has a function named
           ERRO_error_string_n() that takes the size of the buffer as a third
           argument, and we should possibly switch to using that one in the
           future. */</comment>
        <return pos:line="173" pos:column="9">return <expr><name pos:line="173" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="173" pos:column="39"/></name></expr>;<pos:position pos:line="173" pos:column="40"/></return>
      }<pos:position pos:line="174" pos:column="8"/></block></else></if>
    }<pos:position pos:line="175" pos:column="6"/></block></then>
    <else pos:line="176" pos:column="5">else
      <comment type="block" pos:line="177" pos:column="7">/* we have been connected fine, get out of the connect loop */</comment>
      <block type="pseudo"><break pos:line="178" pos:column="7">break;<pos:position pos:line="178" pos:column="13"/></break></block></else></if>

    <expr_stmt><expr><name><name pos:line="180" pos:column="5">interval<pos:position pos:line="180" pos:column="13"/></name><operator pos:line="180" pos:column="13">.<pos:position pos:line="180" pos:column="14"/></operator><name pos:line="180" pos:column="14">tv_sec<pos:position pos:line="180" pos:column="20"/></name></name> <operator pos:line="180" pos:column="21">=<pos:position pos:line="180" pos:column="22"/></operator> <name pos:line="180" pos:column="23">timeout_ms<pos:position pos:line="180" pos:column="33"/></name><operator pos:line="180" pos:column="33">/<pos:position pos:line="180" pos:column="34"/></operator><literal type="number" pos:line="180" pos:column="34">1000<pos:position pos:line="180" pos:column="38"/></literal></expr>;<pos:position pos:line="180" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="181" pos:column="5">timeout_ms<pos:position pos:line="181" pos:column="15"/></name> <operator pos:line="181" pos:column="16">-=<pos:position pos:line="181" pos:column="18"/></operator> <name><name pos:line="181" pos:column="19">interval<pos:position pos:line="181" pos:column="27"/></name><operator pos:line="181" pos:column="27">.<pos:position pos:line="181" pos:column="28"/></operator><name pos:line="181" pos:column="28">tv_sec<pos:position pos:line="181" pos:column="34"/></name></name><operator pos:line="181" pos:column="34">*<pos:position pos:line="181" pos:column="35"/></operator><literal type="number" pos:line="181" pos:column="35">1000<pos:position pos:line="181" pos:column="39"/></literal></expr>;<pos:position pos:line="181" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="183" pos:column="5">interval<pos:position pos:line="183" pos:column="13"/></name><operator pos:line="183" pos:column="13">.<pos:position pos:line="183" pos:column="14"/></operator><name pos:line="183" pos:column="14">tv_usec<pos:position pos:line="183" pos:column="21"/></name></name> <operator pos:line="183" pos:column="22">=<pos:position pos:line="183" pos:column="23"/></operator> <name pos:line="183" pos:column="24">timeout_ms<pos:position pos:line="183" pos:column="34"/></name><operator pos:line="183" pos:column="34">*<pos:position pos:line="183" pos:column="35"/></operator><literal type="number" pos:line="183" pos:column="35">1000<pos:position pos:line="183" pos:column="39"/></literal></expr>;<pos:position pos:line="183" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name pos:line="185" pos:column="5">what<pos:position pos:line="185" pos:column="9"/></name> <operator pos:line="185" pos:column="10">=<pos:position pos:line="185" pos:column="11"/></operator> <call><name pos:line="185" pos:column="12">select<pos:position pos:line="185" pos:column="18"/></name><argument_list pos:line="185" pos:column="18">(<argument><expr><name><name pos:line="185" pos:column="19">conn<pos:position pos:line="185" pos:column="23"/></name><operator pos:line="185" pos:column="23">-&gt;<pos:position pos:line="185" pos:column="28"/></operator><name pos:line="185" pos:column="25">firstsocket<pos:position pos:line="185" pos:column="36"/></name></name><operator pos:line="185" pos:column="36">+<pos:position pos:line="185" pos:column="37"/></operator><literal type="number" pos:line="185" pos:column="37">1<pos:position pos:line="185" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="185" pos:column="40">&amp;<pos:position pos:line="185" pos:column="45"/></operator><name pos:line="185" pos:column="41">readfd<pos:position pos:line="185" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="185" pos:column="49">&amp;<pos:position pos:line="185" pos:column="54"/></operator><name pos:line="185" pos:column="50">writefd<pos:position pos:line="185" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="59">NULL<pos:position pos:line="185" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="185" pos:column="65">&amp;<pos:position pos:line="185" pos:column="70"/></operator><name pos:line="185" pos:column="66">interval<pos:position pos:line="185" pos:column="74"/></name></expr></argument>)<pos:position pos:line="185" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="76"/></expr_stmt>
    <if pos:line="186" pos:column="5">if<condition pos:line="186" pos:column="7">(<expr><name pos:line="186" pos:column="8">what<pos:position pos:line="186" pos:column="12"/></name> <operator pos:line="186" pos:column="13">&gt;<pos:position pos:line="186" pos:column="17"/></operator> <literal type="number" pos:line="186" pos:column="15">0<pos:position pos:line="186" pos:column="16"/></literal></expr>)<pos:position pos:line="186" pos:column="17"/></condition><then pos:line="186" pos:column="17">
      <comment type="block" pos:line="187" pos:column="7">/* reabable or writable, go loop yourself */</comment>
      <block type="pseudo"><continue pos:line="188" pos:column="7">continue;<pos:position pos:line="188" pos:column="16"/></continue></block></then>
    <elseif pos:line="189" pos:column="5">else <if pos:line="189" pos:column="10">if<condition pos:line="189" pos:column="12">(<expr><literal type="number" pos:line="189" pos:column="13">0<pos:position pos:line="189" pos:column="14"/></literal> <operator pos:line="189" pos:column="15">==<pos:position pos:line="189" pos:column="17"/></operator> <name pos:line="189" pos:column="18">what<pos:position pos:line="189" pos:column="22"/></name></expr>)<pos:position pos:line="189" pos:column="23"/></condition><then pos:line="189" pos:column="23"> <block pos:line="189" pos:column="24">{
      <comment type="block" pos:line="190" pos:column="7">/* timeout */</comment>
      <expr_stmt><expr><call><name pos:line="191" pos:column="7">failf<pos:position pos:line="191" pos:column="12"/></name><argument_list pos:line="191" pos:column="12">(<argument><expr><name pos:line="191" pos:column="13">data<pos:position pos:line="191" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="19">"SSL connection timeout"<pos:position pos:line="191" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="45"/></expr_stmt>
      <return pos:line="192" pos:column="7">return <expr><name pos:line="192" pos:column="14">CURLE_OPERATION_TIMEOUTED<pos:position pos:line="192" pos:column="39"/></name></expr>;<pos:position pos:line="192" pos:column="40"/></return>
    }<pos:position pos:line="193" pos:column="6"/></block></then></if></elseif>
    <else pos:line="194" pos:column="5">else
      <block type="pseudo"><break pos:line="195" pos:column="7">break;<pos:position pos:line="195" pos:column="13"/></break></block></else></if> <comment type="block" pos:line="195" pos:column="14">/* get out of loop */</comment>
  }<pos:position pos:line="196" pos:column="4"/></block> while<condition pos:line="196" pos:column="10">(<expr><literal type="number" pos:line="196" pos:column="11">1<pos:position pos:line="196" pos:column="12"/></literal></expr>)<pos:position pos:line="196" pos:column="13"/></condition>;<pos:position pos:line="196" pos:column="14"/></do>

  <comment type="block" pos:line="198" pos:column="3">/* Informational message */</comment>
  <expr_stmt><expr><call><name pos:line="199" pos:column="3">infof<pos:position pos:line="199" pos:column="8"/></name> <argument_list pos:line="199" pos:column="9">(<argument><expr><name pos:line="199" pos:column="10">data<pos:position pos:line="199" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="199" pos:column="16">"SSL connection using %s\n"<pos:position pos:line="199" pos:column="43"/></literal></expr></argument>,
         <argument><expr><call><name pos:line="200" pos:column="10">SSL_get_cipher<pos:position pos:line="200" pos:column="24"/></name><argument_list pos:line="200" pos:column="24">(<argument><expr><name><name pos:line="200" pos:column="25">conn<pos:position pos:line="200" pos:column="29"/></name><operator pos:line="200" pos:column="29">-&gt;<pos:position pos:line="200" pos:column="34"/></operator><name pos:line="200" pos:column="31">ssl<pos:position pos:line="200" pos:column="34"/></name><operator pos:line="200" pos:column="34">.<pos:position pos:line="200" pos:column="35"/></operator><name pos:line="200" pos:column="35">handle<pos:position pos:line="200" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="200" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="200" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="44"/></expr_stmt>

  <if pos:line="202" pos:column="3">if<condition pos:line="202" pos:column="5">(<expr><operator pos:line="202" pos:column="6">!<pos:position pos:line="202" pos:column="7"/></operator><name pos:line="202" pos:column="7">ssl_sessionid<pos:position pos:line="202" pos:column="20"/></name></expr>)<pos:position pos:line="202" pos:column="21"/></condition><then pos:line="202" pos:column="21"> <block pos:line="202" pos:column="22">{
    <comment type="block" pos:line="203" pos:column="5">/* Since this is not a cached session ID, then we want to stach this one
       in the cache! */</comment>
    <expr_stmt><expr><call><name pos:line="205" pos:column="5">Store_SSL_Session<pos:position pos:line="205" pos:column="22"/></name><argument_list pos:line="205" pos:column="22">(<argument><expr><name pos:line="205" pos:column="23">conn<pos:position pos:line="205" pos:column="27"/></name></expr></argument>)<pos:position pos:line="205" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="206" pos:column="4"/></block></then></if>

  
  <comment type="block" pos:line="209" pos:column="3">/* Get server's certificate (note: beware of dynamic allocation) - opt */</comment>
  <comment type="block" pos:line="210" pos:column="3">/* major serious hack alert -- we should check certificates
   * to authenticate the server; otherwise we risk man-in-the-middle
   * attack
   */</comment>

  <expr_stmt><expr><name><name pos:line="215" pos:column="3">conn<pos:position pos:line="215" pos:column="7"/></name><operator pos:line="215" pos:column="7">-&gt;<pos:position pos:line="215" pos:column="12"/></operator><name pos:line="215" pos:column="9">ssl<pos:position pos:line="215" pos:column="12"/></name><operator pos:line="215" pos:column="12">.<pos:position pos:line="215" pos:column="13"/></operator><name pos:line="215" pos:column="13">server_cert<pos:position pos:line="215" pos:column="24"/></name></name> <operator pos:line="215" pos:column="25">=<pos:position pos:line="215" pos:column="26"/></operator> <call><name pos:line="215" pos:column="27">SSL_get_peer_certificate<pos:position pos:line="215" pos:column="51"/></name> <argument_list pos:line="215" pos:column="52">(<argument><expr><name><name pos:line="215" pos:column="53">conn<pos:position pos:line="215" pos:column="57"/></name><operator pos:line="215" pos:column="57">-&gt;<pos:position pos:line="215" pos:column="62"/></operator><name pos:line="215" pos:column="59">ssl<pos:position pos:line="215" pos:column="62"/></name><operator pos:line="215" pos:column="62">.<pos:position pos:line="215" pos:column="63"/></operator><name pos:line="215" pos:column="63">handle<pos:position pos:line="215" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="215" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="71"/></expr_stmt>
  <if pos:line="216" pos:column="3">if<condition pos:line="216" pos:column="5">(<expr><operator pos:line="216" pos:column="6">!<pos:position pos:line="216" pos:column="7"/></operator><name><name pos:line="216" pos:column="7">conn<pos:position pos:line="216" pos:column="11"/></name><operator pos:line="216" pos:column="11">-&gt;<pos:position pos:line="216" pos:column="16"/></operator><name pos:line="216" pos:column="13">ssl<pos:position pos:line="216" pos:column="16"/></name><operator pos:line="216" pos:column="16">.<pos:position pos:line="216" pos:column="17"/></operator><name pos:line="216" pos:column="17">server_cert<pos:position pos:line="216" pos:column="28"/></name></name></expr>)<pos:position pos:line="216" pos:column="29"/></condition><then pos:line="216" pos:column="29"> <block pos:line="216" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="217" pos:column="5">failf<pos:position pos:line="217" pos:column="10"/></name><argument_list pos:line="217" pos:column="10">(<argument><expr><name pos:line="217" pos:column="11">data<pos:position pos:line="217" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="217" pos:column="17">"SSL: couldn't get peer certificate!"<pos:position pos:line="217" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="56"/></expr_stmt>
    <return pos:line="218" pos:column="5">return <expr><name pos:line="218" pos:column="12">CURLE_SSL_PEER_CERTIFICATE<pos:position pos:line="218" pos:column="38"/></name></expr>;<pos:position pos:line="218" pos:column="39"/></return>
  }<pos:position pos:line="219" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="220" pos:column="3">infof<pos:position pos:line="220" pos:column="8"/></name> <argument_list pos:line="220" pos:column="9">(<argument><expr><name pos:line="220" pos:column="10">data<pos:position pos:line="220" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="220" pos:column="16">"Server certificate:\n"<pos:position pos:line="220" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="220" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="41"/></expr_stmt>
  
  <expr_stmt><expr><name pos:line="222" pos:column="3">str<pos:position pos:line="222" pos:column="6"/></name> <operator pos:line="222" pos:column="7">=<pos:position pos:line="222" pos:column="8"/></operator> <call><name pos:line="222" pos:column="9">X509_NAME_oneline<pos:position pos:line="222" pos:column="26"/></name> <argument_list pos:line="222" pos:column="27">(<argument><expr><call><name pos:line="222" pos:column="28">X509_get_subject_name<pos:position pos:line="222" pos:column="49"/></name> <argument_list pos:line="222" pos:column="50">(<argument><expr><name><name pos:line="222" pos:column="51">conn<pos:position pos:line="222" pos:column="55"/></name><operator pos:line="222" pos:column="55">-&gt;<pos:position pos:line="222" pos:column="60"/></operator><name pos:line="222" pos:column="57">ssl<pos:position pos:line="222" pos:column="60"/></name><operator pos:line="222" pos:column="60">.<pos:position pos:line="222" pos:column="61"/></operator><name pos:line="222" pos:column="61">server_cert<pos:position pos:line="222" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="222" pos:column="73"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="223" pos:column="28">NULL<pos:position pos:line="223" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="223" pos:column="34">0<pos:position pos:line="223" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="223" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="37"/></expr_stmt>
  <if pos:line="224" pos:column="3">if<condition pos:line="224" pos:column="5">(<expr><operator pos:line="224" pos:column="6">!<pos:position pos:line="224" pos:column="7"/></operator><name pos:line="224" pos:column="7">str<pos:position pos:line="224" pos:column="10"/></name></expr>)<pos:position pos:line="224" pos:column="11"/></condition><then pos:line="224" pos:column="11"> <block pos:line="224" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="225" pos:column="5">failf<pos:position pos:line="225" pos:column="10"/></name><argument_list pos:line="225" pos:column="10">(<argument><expr><name pos:line="225" pos:column="11">data<pos:position pos:line="225" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="225" pos:column="17">"SSL: couldn't get X509-subject!"<pos:position pos:line="225" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="225" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="226" pos:column="5">X509_free<pos:position pos:line="226" pos:column="14"/></name><argument_list pos:line="226" pos:column="14">(<argument><expr><name><name pos:line="226" pos:column="15">conn<pos:position pos:line="226" pos:column="19"/></name><operator pos:line="226" pos:column="19">-&gt;<pos:position pos:line="226" pos:column="24"/></operator><name pos:line="226" pos:column="21">ssl<pos:position pos:line="226" pos:column="24"/></name><operator pos:line="226" pos:column="24">.<pos:position pos:line="226" pos:column="25"/></operator><name pos:line="226" pos:column="25">server_cert<pos:position pos:line="226" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="226" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="38"/></expr_stmt>
    <return pos:line="227" pos:column="5">return <expr><name pos:line="227" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="227" pos:column="35"/></name></expr>;<pos:position pos:line="227" pos:column="36"/></return>
  }<pos:position pos:line="228" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="229" pos:column="3">infof<pos:position pos:line="229" pos:column="8"/></name><argument_list pos:line="229" pos:column="8">(<argument><expr><name pos:line="229" pos:column="9">data<pos:position pos:line="229" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="229" pos:column="15">"\t subject: %s\n"<pos:position pos:line="229" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="229" pos:column="35">str<pos:position pos:line="229" pos:column="38"/></name></expr></argument>)<pos:position pos:line="229" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="230" pos:column="3">CRYPTO_free<pos:position pos:line="230" pos:column="14"/></name><argument_list pos:line="230" pos:column="14">(<argument><expr><name pos:line="230" pos:column="15">str<pos:position pos:line="230" pos:column="18"/></name></expr></argument>)<pos:position pos:line="230" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><name pos:line="232" pos:column="3">certdate<pos:position pos:line="232" pos:column="11"/></name> <operator pos:line="232" pos:column="12">=<pos:position pos:line="232" pos:column="13"/></operator> <call><name pos:line="232" pos:column="14">X509_get_notBefore<pos:position pos:line="232" pos:column="32"/></name><argument_list pos:line="232" pos:column="32">(<argument><expr><name><name pos:line="232" pos:column="33">conn<pos:position pos:line="232" pos:column="37"/></name><operator pos:line="232" pos:column="37">-&gt;<pos:position pos:line="232" pos:column="42"/></operator><name pos:line="232" pos:column="39">ssl<pos:position pos:line="232" pos:column="42"/></name><operator pos:line="232" pos:column="42">.<pos:position pos:line="232" pos:column="43"/></operator><name pos:line="232" pos:column="43">server_cert<pos:position pos:line="232" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="232" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="233" pos:column="3">Curl_ASN1_UTCTIME_output<pos:position pos:line="233" pos:column="27"/></name><argument_list pos:line="233" pos:column="27">(<argument><expr><name pos:line="233" pos:column="28">conn<pos:position pos:line="233" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="233" pos:column="34">"\t start date: "<pos:position pos:line="233" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="233" pos:column="53">certdate<pos:position pos:line="233" pos:column="61"/></name></expr></argument>)<pos:position pos:line="233" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="63"/></expr_stmt>

  <expr_stmt><expr><name pos:line="235" pos:column="3">certdate<pos:position pos:line="235" pos:column="11"/></name> <operator pos:line="235" pos:column="12">=<pos:position pos:line="235" pos:column="13"/></operator> <call><name pos:line="235" pos:column="14">X509_get_notAfter<pos:position pos:line="235" pos:column="31"/></name><argument_list pos:line="235" pos:column="31">(<argument><expr><name><name pos:line="235" pos:column="32">conn<pos:position pos:line="235" pos:column="36"/></name><operator pos:line="235" pos:column="36">-&gt;<pos:position pos:line="235" pos:column="41"/></operator><name pos:line="235" pos:column="38">ssl<pos:position pos:line="235" pos:column="41"/></name><operator pos:line="235" pos:column="41">.<pos:position pos:line="235" pos:column="42"/></operator><name pos:line="235" pos:column="42">server_cert<pos:position pos:line="235" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="235" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="236" pos:column="3">Curl_ASN1_UTCTIME_output<pos:position pos:line="236" pos:column="27"/></name><argument_list pos:line="236" pos:column="27">(<argument><expr><name pos:line="236" pos:column="28">conn<pos:position pos:line="236" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="236" pos:column="34">"\t expire date: "<pos:position pos:line="236" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="236" pos:column="54">certdate<pos:position pos:line="236" pos:column="62"/></name></expr></argument>)<pos:position pos:line="236" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="64"/></expr_stmt>

  <if pos:line="238" pos:column="3">if <condition pos:line="238" pos:column="6">(<expr><name><name pos:line="238" pos:column="7">data<pos:position pos:line="238" pos:column="11"/></name><operator pos:line="238" pos:column="11">-&gt;<pos:position pos:line="238" pos:column="16"/></operator><name pos:line="238" pos:column="13">set<pos:position pos:line="238" pos:column="16"/></name><operator pos:line="238" pos:column="16">.<pos:position pos:line="238" pos:column="17"/></operator><name pos:line="238" pos:column="17">ssl<pos:position pos:line="238" pos:column="20"/></name><operator pos:line="238" pos:column="20">.<pos:position pos:line="238" pos:column="21"/></operator><name pos:line="238" pos:column="21">verifyhost<pos:position pos:line="238" pos:column="31"/></name></name></expr>)<pos:position pos:line="238" pos:column="32"/></condition><then pos:line="238" pos:column="32"> <block pos:line="238" pos:column="33">{
    <decl_stmt><decl><type><name pos:line="239" pos:column="5">char<pos:position pos:line="239" pos:column="9"/></name></type> <name><name pos:line="239" pos:column="10">peer_CN<pos:position pos:line="239" pos:column="17"/></name><index pos:line="239" pos:column="17">[<expr><literal type="number" pos:line="239" pos:column="18">257<pos:position pos:line="239" pos:column="21"/></literal></expr>]<pos:position pos:line="239" pos:column="22"/></index></name></decl>;<pos:position pos:line="239" pos:column="23"/></decl_stmt>
    <if pos:line="240" pos:column="5">if <condition pos:line="240" pos:column="8">(<expr><call><name pos:line="240" pos:column="9">X509_NAME_get_text_by_NID<pos:position pos:line="240" pos:column="34"/></name><argument_list pos:line="240" pos:column="34">(<argument><expr><call><name pos:line="240" pos:column="35">X509_get_subject_name<pos:position pos:line="240" pos:column="56"/></name><argument_list pos:line="240" pos:column="56">(<argument><expr><name><name pos:line="240" pos:column="57">conn<pos:position pos:line="240" pos:column="61"/></name><operator pos:line="240" pos:column="61">-&gt;<pos:position pos:line="240" pos:column="66"/></operator><name pos:line="240" pos:column="63">ssl<pos:position pos:line="240" pos:column="66"/></name><operator pos:line="240" pos:column="66">.<pos:position pos:line="240" pos:column="67"/></operator><name pos:line="240" pos:column="67">server_cert<pos:position pos:line="240" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="240" pos:column="79"/></argument_list></call></expr></argument>,
                                  <argument><expr><name pos:line="241" pos:column="35">NID_commonName<pos:position pos:line="241" pos:column="49"/></name></expr></argument>,
                                  <argument><expr><name pos:line="242" pos:column="35">peer_CN<pos:position pos:line="242" pos:column="42"/></name></expr></argument>,
                                  <argument><expr><sizeof pos:line="243" pos:column="35">sizeof<argument_list pos:line="243" pos:column="41">(<argument><expr><name pos:line="243" pos:column="42">peer_CN<pos:position pos:line="243" pos:column="49"/></name></expr></argument>)<pos:position pos:line="243" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="243" pos:column="51"/></argument_list></call> <operator pos:line="243" pos:column="52">&lt;<pos:position pos:line="243" pos:column="56"/></operator> <literal type="number" pos:line="243" pos:column="54">0<pos:position pos:line="243" pos:column="55"/></literal></expr>)<pos:position pos:line="243" pos:column="56"/></condition><then pos:line="243" pos:column="56"> <block pos:line="243" pos:column="57">{
      <expr_stmt><expr><call><name pos:line="244" pos:column="7">failf<pos:position pos:line="244" pos:column="12"/></name><argument_list pos:line="244" pos:column="12">(<argument><expr><name pos:line="244" pos:column="13">data<pos:position pos:line="244" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="244" pos:column="19">"SSL: unable to obtain common name from peer certificate"<pos:position pos:line="244" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="244" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="78"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="245" pos:column="7">X509_free<pos:position pos:line="245" pos:column="16"/></name><argument_list pos:line="245" pos:column="16">(<argument><expr><name><name pos:line="245" pos:column="17">conn<pos:position pos:line="245" pos:column="21"/></name><operator pos:line="245" pos:column="21">-&gt;<pos:position pos:line="245" pos:column="26"/></operator><name pos:line="245" pos:column="23">ssl<pos:position pos:line="245" pos:column="26"/></name><operator pos:line="245" pos:column="26">.<pos:position pos:line="245" pos:column="27"/></operator><name pos:line="245" pos:column="27">server_cert<pos:position pos:line="245" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="245" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="40"/></expr_stmt>
      <return pos:line="246" pos:column="7">return <expr><name pos:line="246" pos:column="14">CURLE_SSL_PEER_CERTIFICATE<pos:position pos:line="246" pos:column="40"/></name></expr>;<pos:position pos:line="246" pos:column="41"/></return>
    }<pos:position pos:line="247" pos:column="6"/></block></then></if>

    <if pos:line="249" pos:column="5">if <condition pos:line="249" pos:column="8">(<expr><operator pos:line="249" pos:column="9">!<pos:position pos:line="249" pos:column="10"/></operator><call><name pos:line="249" pos:column="10">cert_hostcheck<pos:position pos:line="249" pos:column="24"/></name><argument_list pos:line="249" pos:column="24">(<argument><expr><name pos:line="249" pos:column="25">peer_CN<pos:position pos:line="249" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="249" pos:column="34">conn<pos:position pos:line="249" pos:column="38"/></name><operator pos:line="249" pos:column="38">-&gt;<pos:position pos:line="249" pos:column="43"/></operator><name pos:line="249" pos:column="40">hostname<pos:position pos:line="249" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="249" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="249" pos:column="50"/></condition><then pos:line="249" pos:column="50"> <block pos:line="249" pos:column="51">{
      <if pos:line="250" pos:column="7">if <condition pos:line="250" pos:column="10">(<expr><name><name pos:line="250" pos:column="11">data<pos:position pos:line="250" pos:column="15"/></name><operator pos:line="250" pos:column="15">-&gt;<pos:position pos:line="250" pos:column="20"/></operator><name pos:line="250" pos:column="17">set<pos:position pos:line="250" pos:column="20"/></name><operator pos:line="250" pos:column="20">.<pos:position pos:line="250" pos:column="21"/></operator><name pos:line="250" pos:column="21">ssl<pos:position pos:line="250" pos:column="24"/></name><operator pos:line="250" pos:column="24">.<pos:position pos:line="250" pos:column="25"/></operator><name pos:line="250" pos:column="25">verifyhost<pos:position pos:line="250" pos:column="35"/></name></name> <operator pos:line="250" pos:column="36">&gt;<pos:position pos:line="250" pos:column="40"/></operator> <literal type="number" pos:line="250" pos:column="38">1<pos:position pos:line="250" pos:column="39"/></literal></expr>)<pos:position pos:line="250" pos:column="40"/></condition><then pos:line="250" pos:column="40"> <block pos:line="250" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="251" pos:column="9">failf<pos:position pos:line="251" pos:column="14"/></name><argument_list pos:line="251" pos:column="14">(<argument><expr><name pos:line="251" pos:column="15">data<pos:position pos:line="251" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="251" pos:column="21">"SSL: certificate subject name '%s' does not match "<pos:position pos:line="251" pos:column="73"/></literal>
              <literal type="string" pos:line="252" pos:column="15">"target host name '%s'"<pos:position pos:line="252" pos:column="38"/></literal></expr></argument>,
              <argument><expr><name pos:line="253" pos:column="15">peer_CN<pos:position pos:line="253" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="253" pos:column="24">conn<pos:position pos:line="253" pos:column="28"/></name><operator pos:line="253" pos:column="28">-&gt;<pos:position pos:line="253" pos:column="33"/></operator><name pos:line="253" pos:column="30">hostname<pos:position pos:line="253" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="253" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="254" pos:column="9">X509_free<pos:position pos:line="254" pos:column="18"/></name><argument_list pos:line="254" pos:column="18">(<argument><expr><name><name pos:line="254" pos:column="19">conn<pos:position pos:line="254" pos:column="23"/></name><operator pos:line="254" pos:column="23">-&gt;<pos:position pos:line="254" pos:column="28"/></operator><name pos:line="254" pos:column="25">ssl<pos:position pos:line="254" pos:column="28"/></name><operator pos:line="254" pos:column="28">.<pos:position pos:line="254" pos:column="29"/></operator><name pos:line="254" pos:column="29">server_cert<pos:position pos:line="254" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="254" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="42"/></expr_stmt>
        <return pos:line="255" pos:column="9">return <expr><name pos:line="255" pos:column="16">CURLE_SSL_PEER_CERTIFICATE<pos:position pos:line="255" pos:column="42"/></name></expr>;<pos:position pos:line="255" pos:column="43"/></return>
      }<pos:position pos:line="256" pos:column="8"/></block></then>
      <else pos:line="257" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="258" pos:column="9">infof<pos:position pos:line="258" pos:column="14"/></name><argument_list pos:line="258" pos:column="14">(<argument><expr><name pos:line="258" pos:column="15">data<pos:position pos:line="258" pos:column="19"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="259" pos:column="15">"\t common name: %s (does not match '%s')\n"<pos:position pos:line="259" pos:column="59"/></literal></expr></argument>,
              <argument><expr><name pos:line="260" pos:column="15">peer_CN<pos:position pos:line="260" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="260" pos:column="24">conn<pos:position pos:line="260" pos:column="28"/></name><operator pos:line="260" pos:column="28">-&gt;<pos:position pos:line="260" pos:column="33"/></operator><name pos:line="260" pos:column="30">hostname<pos:position pos:line="260" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="260" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="40"/></expr_stmt></block></else></if>
    }<pos:position pos:line="261" pos:column="6"/></block></then>
    <else pos:line="262" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="263" pos:column="7">infof<pos:position pos:line="263" pos:column="12"/></name><argument_list pos:line="263" pos:column="12">(<argument><expr><name pos:line="263" pos:column="13">data<pos:position pos:line="263" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="263" pos:column="19">"\t common name: %s (matched)\n"<pos:position pos:line="263" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="263" pos:column="53">peer_CN<pos:position pos:line="263" pos:column="60"/></name></expr></argument>)<pos:position pos:line="263" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="62"/></expr_stmt></block></else></if>
  }<pos:position pos:line="264" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="266" pos:column="3">str<pos:position pos:line="266" pos:column="6"/></name> <operator pos:line="266" pos:column="7">=<pos:position pos:line="266" pos:column="8"/></operator> <call><name pos:line="266" pos:column="9">X509_NAME_oneline<pos:position pos:line="266" pos:column="26"/></name> <argument_list pos:line="266" pos:column="27">(<argument><expr><call><name pos:line="266" pos:column="28">X509_get_issuer_name<pos:position pos:line="266" pos:column="48"/></name>  <argument_list pos:line="266" pos:column="50">(<argument><expr><name><name pos:line="266" pos:column="51">conn<pos:position pos:line="266" pos:column="55"/></name><operator pos:line="266" pos:column="55">-&gt;<pos:position pos:line="266" pos:column="60"/></operator><name pos:line="266" pos:column="57">ssl<pos:position pos:line="266" pos:column="60"/></name><operator pos:line="266" pos:column="60">.<pos:position pos:line="266" pos:column="61"/></operator><name pos:line="266" pos:column="61">server_cert<pos:position pos:line="266" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="266" pos:column="73"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="267" pos:column="28">NULL<pos:position pos:line="267" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="267" pos:column="34">0<pos:position pos:line="267" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="267" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="37"/></expr_stmt>
  <if pos:line="268" pos:column="3">if<condition pos:line="268" pos:column="5">(<expr><operator pos:line="268" pos:column="6">!<pos:position pos:line="268" pos:column="7"/></operator><name pos:line="268" pos:column="7">str<pos:position pos:line="268" pos:column="10"/></name></expr>)<pos:position pos:line="268" pos:column="11"/></condition><then pos:line="268" pos:column="11"> <block pos:line="268" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="269" pos:column="5">failf<pos:position pos:line="269" pos:column="10"/></name><argument_list pos:line="269" pos:column="10">(<argument><expr><name pos:line="269" pos:column="11">data<pos:position pos:line="269" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="269" pos:column="17">"SSL: couldn't get X509-issuer name!"<pos:position pos:line="269" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="269" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="269" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="270" pos:column="5">X509_free<pos:position pos:line="270" pos:column="14"/></name><argument_list pos:line="270" pos:column="14">(<argument><expr><name><name pos:line="270" pos:column="15">conn<pos:position pos:line="270" pos:column="19"/></name><operator pos:line="270" pos:column="19">-&gt;<pos:position pos:line="270" pos:column="24"/></operator><name pos:line="270" pos:column="21">ssl<pos:position pos:line="270" pos:column="24"/></name><operator pos:line="270" pos:column="24">.<pos:position pos:line="270" pos:column="25"/></operator><name pos:line="270" pos:column="25">server_cert<pos:position pos:line="270" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="270" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="38"/></expr_stmt>
    <return pos:line="271" pos:column="5">return <expr><name pos:line="271" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="271" pos:column="35"/></name></expr>;<pos:position pos:line="271" pos:column="36"/></return>
  }<pos:position pos:line="272" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="273" pos:column="3">infof<pos:position pos:line="273" pos:column="8"/></name><argument_list pos:line="273" pos:column="8">(<argument><expr><name pos:line="273" pos:column="9">data<pos:position pos:line="273" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="273" pos:column="15">"\t issuer: %s\n"<pos:position pos:line="273" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="273" pos:column="34">str<pos:position pos:line="273" pos:column="37"/></name></expr></argument>)<pos:position pos:line="273" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="274" pos:column="3">CRYPTO_free<pos:position pos:line="274" pos:column="14"/></name><argument_list pos:line="274" pos:column="14">(<argument><expr><name pos:line="274" pos:column="15">str<pos:position pos:line="274" pos:column="18"/></name></expr></argument>)<pos:position pos:line="274" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="20"/></expr_stmt>

  <comment type="block" pos:line="276" pos:column="3">/* We could do all sorts of certificate verification stuff here before
     deallocating the certificate. */</comment>

  <if pos:line="279" pos:column="3">if<condition pos:line="279" pos:column="5">(<expr><name><name pos:line="279" pos:column="6">data<pos:position pos:line="279" pos:column="10"/></name><operator pos:line="279" pos:column="10">-&gt;<pos:position pos:line="279" pos:column="15"/></operator><name pos:line="279" pos:column="12">set<pos:position pos:line="279" pos:column="15"/></name><operator pos:line="279" pos:column="15">.<pos:position pos:line="279" pos:column="16"/></operator><name pos:line="279" pos:column="16">ssl<pos:position pos:line="279" pos:column="19"/></name><operator pos:line="279" pos:column="19">.<pos:position pos:line="279" pos:column="20"/></operator><name pos:line="279" pos:column="20">verifypeer<pos:position pos:line="279" pos:column="30"/></name></name></expr>)<pos:position pos:line="279" pos:column="31"/></condition><then pos:line="279" pos:column="31"> <block pos:line="279" pos:column="32">{
    <expr_stmt><expr><name><name pos:line="280" pos:column="5">data<pos:position pos:line="280" pos:column="9"/></name><operator pos:line="280" pos:column="9">-&gt;<pos:position pos:line="280" pos:column="14"/></operator><name pos:line="280" pos:column="11">set<pos:position pos:line="280" pos:column="14"/></name><operator pos:line="280" pos:column="14">.<pos:position pos:line="280" pos:column="15"/></operator><name pos:line="280" pos:column="15">ssl<pos:position pos:line="280" pos:column="18"/></name><operator pos:line="280" pos:column="18">.<pos:position pos:line="280" pos:column="19"/></operator><name pos:line="280" pos:column="19">certverifyresult<pos:position pos:line="280" pos:column="35"/></name></name><operator pos:line="280" pos:column="35">=<pos:position pos:line="280" pos:column="36"/></operator><call><name pos:line="280" pos:column="36">SSL_get_verify_result<pos:position pos:line="280" pos:column="57"/></name><argument_list pos:line="280" pos:column="57">(<argument><expr><name><name pos:line="280" pos:column="58">conn<pos:position pos:line="280" pos:column="62"/></name><operator pos:line="280" pos:column="62">-&gt;<pos:position pos:line="280" pos:column="67"/></operator><name pos:line="280" pos:column="64">ssl<pos:position pos:line="280" pos:column="67"/></name><operator pos:line="280" pos:column="67">.<pos:position pos:line="280" pos:column="68"/></operator><name pos:line="280" pos:column="68">handle<pos:position pos:line="280" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="280" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="76"/></expr_stmt>
    <if pos:line="281" pos:column="5">if <condition pos:line="281" pos:column="8">(<expr><name><name pos:line="281" pos:column="9">data<pos:position pos:line="281" pos:column="13"/></name><operator pos:line="281" pos:column="13">-&gt;<pos:position pos:line="281" pos:column="18"/></operator><name pos:line="281" pos:column="15">set<pos:position pos:line="281" pos:column="18"/></name><operator pos:line="281" pos:column="18">.<pos:position pos:line="281" pos:column="19"/></operator><name pos:line="281" pos:column="19">ssl<pos:position pos:line="281" pos:column="22"/></name><operator pos:line="281" pos:column="22">.<pos:position pos:line="281" pos:column="23"/></operator><name pos:line="281" pos:column="23">certverifyresult<pos:position pos:line="281" pos:column="39"/></name></name> <operator pos:line="281" pos:column="40">!=<pos:position pos:line="281" pos:column="42"/></operator> <name pos:line="281" pos:column="43">X509_V_OK<pos:position pos:line="281" pos:column="52"/></name></expr>)<pos:position pos:line="281" pos:column="53"/></condition><then pos:line="281" pos:column="53"> <block pos:line="281" pos:column="54">{
      <expr_stmt><expr><call><name pos:line="282" pos:column="7">failf<pos:position pos:line="282" pos:column="12"/></name><argument_list pos:line="282" pos:column="12">(<argument><expr><name pos:line="282" pos:column="13">data<pos:position pos:line="282" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="282" pos:column="19">"SSL certificate verify result: %d"<pos:position pos:line="282" pos:column="54"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="283" pos:column="13">data<pos:position pos:line="283" pos:column="17"/></name><operator pos:line="283" pos:column="17">-&gt;<pos:position pos:line="283" pos:column="22"/></operator><name pos:line="283" pos:column="19">set<pos:position pos:line="283" pos:column="22"/></name><operator pos:line="283" pos:column="22">.<pos:position pos:line="283" pos:column="23"/></operator><name pos:line="283" pos:column="23">ssl<pos:position pos:line="283" pos:column="26"/></name><operator pos:line="283" pos:column="26">.<pos:position pos:line="283" pos:column="27"/></operator><name pos:line="283" pos:column="27">certverifyresult<pos:position pos:line="283" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="283" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name pos:line="284" pos:column="7">retcode<pos:position pos:line="284" pos:column="14"/></name> <operator pos:line="284" pos:column="15">=<pos:position pos:line="284" pos:column="16"/></operator> <name pos:line="284" pos:column="17">CURLE_SSL_PEER_CERTIFICATE<pos:position pos:line="284" pos:column="43"/></name></expr>;<pos:position pos:line="284" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="285" pos:column="6"/></block></then></if>
  }<pos:position pos:line="286" pos:column="4"/></block></then>
  <else pos:line="287" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="288" pos:column="5">data<pos:position pos:line="288" pos:column="9"/></name><operator pos:line="288" pos:column="9">-&gt;<pos:position pos:line="288" pos:column="14"/></operator><name pos:line="288" pos:column="11">set<pos:position pos:line="288" pos:column="14"/></name><operator pos:line="288" pos:column="14">.<pos:position pos:line="288" pos:column="15"/></operator><name pos:line="288" pos:column="15">ssl<pos:position pos:line="288" pos:column="18"/></name><operator pos:line="288" pos:column="18">.<pos:position pos:line="288" pos:column="19"/></operator><name pos:line="288" pos:column="19">certverifyresult<pos:position pos:line="288" pos:column="35"/></name></name><operator pos:line="288" pos:column="35">=<pos:position pos:line="288" pos:column="36"/></operator><literal type="number" pos:line="288" pos:column="36">0<pos:position pos:line="288" pos:column="37"/></literal></expr>;<pos:position pos:line="288" pos:column="38"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="290" pos:column="3">X509_free<pos:position pos:line="290" pos:column="12"/></name><argument_list pos:line="290" pos:column="12">(<argument><expr><name><name pos:line="290" pos:column="13">conn<pos:position pos:line="290" pos:column="17"/></name><operator pos:line="290" pos:column="17">-&gt;<pos:position pos:line="290" pos:column="22"/></operator><name pos:line="290" pos:column="19">ssl<pos:position pos:line="290" pos:column="22"/></name><operator pos:line="290" pos:column="22">.<pos:position pos:line="290" pos:column="23"/></operator><name pos:line="290" pos:column="23">server_cert<pos:position pos:line="290" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="290" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="36"/></expr_stmt>
<cpp:else pos:line="291" pos:column="1">#<cpp:directive pos:line="291" pos:column="2">else<pos:position pos:line="291" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="291" pos:column="7">/* USE_SSLEAY */</comment>
  <comment type="block" pos:line="292" pos:column="3">/* this is for "-ansi -Wall -pedantic" to stop complaining!   (rabe) */</comment>
  <expr_stmt><expr><operator pos:line="293" pos:column="3">(<pos:position pos:line="293" pos:column="4"/></operator><name pos:line="293" pos:column="4">void<pos:position pos:line="293" pos:column="8"/></name><operator pos:line="293" pos:column="8">)<pos:position pos:line="293" pos:column="9"/></operator> <name pos:line="293" pos:column="10">conn<pos:position pos:line="293" pos:column="14"/></name></expr>;<pos:position pos:line="293" pos:column="15"/></expr_stmt>
<cpp:endif pos:line="294" pos:column="1">#<cpp:directive pos:line="294" pos:column="2">endif<pos:position pos:line="294" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="295" pos:column="3">return <expr><name pos:line="295" pos:column="10">retcode<pos:position pos:line="295" pos:column="17"/></name></expr>;<pos:position pos:line="295" pos:column="18"/></return>
}<pos:position pos:line="296" pos:column="2"/></block></function></unit>

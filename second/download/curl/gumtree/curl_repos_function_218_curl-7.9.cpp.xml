<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_218_curl-7.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">Curl_sec_write<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name><name pos:line="2" pos:column="16">struct<pos:position pos:line="2" pos:column="22"/></name> <name pos:line="2" pos:column="23">connectdata<pos:position pos:line="2" pos:column="34"/></name></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">conn<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">int<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">fd<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">buffer<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">int<pos:position pos:line="2" pos:column="67"/></name></type> <name pos:line="2" pos:column="68">length<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">len<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><name><name pos:line="4" pos:column="13">conn<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">-&gt;<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="19">buffer_size<pos:position pos:line="4" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">tx<pos:position pos:line="5" pos:column="9"/></name> <init pos:line="5" pos:column="10">= <expr><literal type="number" pos:line="5" pos:column="12">0<pos:position pos:line="5" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
      
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><name><name pos:line="7" pos:column="6">conn<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">data_prot<pos:position pos:line="7" pos:column="21"/></name></name> <operator pos:line="7" pos:column="22">==<pos:position pos:line="7" pos:column="24"/></operator> <name pos:line="7" pos:column="25">prot_clear<pos:position pos:line="7" pos:column="35"/></name></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><call><name pos:line="8" pos:column="12">write<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">fd<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="22">buffer<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="30">length<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="10" pos:column="3">len<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">-=<pos:position pos:line="10" pos:column="9"/></operator> <call pos:line="10" pos:column="10">(<name><name pos:line="10" pos:column="11">conn<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">mech<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">overhead<pos:position pos:line="10" pos:column="31"/></name></name>)<argument_list pos:line="10" pos:column="32">(<argument><expr><name><name pos:line="10" pos:column="33">conn<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">-&gt;<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="39">app_data<pos:position pos:line="10" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="49">conn<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">-&gt;<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="55">data_prot<pos:position pos:line="10" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="66">len<pos:position pos:line="10" pos:column="69"/></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="71"/></expr_stmt>
  <while pos:line="11" pos:column="3">while<condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">length<pos:position pos:line="11" pos:column="15"/></name></expr>)<pos:position pos:line="11" pos:column="16"/></condition><block pos:line="11" pos:column="16">{
    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">(<expr><name pos:line="12" pos:column="8">length<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">&lt;<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="17">len<pos:position pos:line="12" pos:column="20"/></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="7">len<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <name pos:line="13" pos:column="13">length<pos:position pos:line="13" pos:column="19"/></name></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">sec_send<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><name pos:line="14" pos:column="14">conn<pos:position pos:line="14" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="20">fd<pos:position pos:line="14" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="24">buffer<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="32">len<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">length<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">-=<pos:position pos:line="15" pos:column="14"/></operator> <name pos:line="15" pos:column="15">len<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">buffer<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">+=<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">len<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">tx<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">+=<pos:position pos:line="17" pos:column="10"/></operator> <name pos:line="17" pos:column="11">len<pos:position pos:line="17" pos:column="14"/></name></expr>;<pos:position pos:line="17" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></while>
  <return pos:line="19" pos:column="3">return <expr><name pos:line="19" pos:column="10">tx<pos:position pos:line="19" pos:column="12"/></name></expr>;<pos:position pos:line="19" pos:column="13"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2473_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">Curl_schannel_shutdown<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">connectdata<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">conn<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">sockindex<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* See https://msdn.microsoft.com/en-us/library/windows/desktop/aa380138.aspx
   * Shutting Down an Schannel Connection
   */</comment>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_easy<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name><name pos:line="6" pos:column="28">conn<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">data<pos:position pos:line="6" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">ssl_connect_data<pos:position pos:line="7" pos:column="26"/></name></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">connssl<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><operator pos:line="7" pos:column="38">&amp;<pos:position pos:line="7" pos:column="43"/></operator><name><name pos:line="7" pos:column="39">conn<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">ssl<pos:position pos:line="7" pos:column="48"/></name><index pos:line="7" pos:column="48">[<expr><name pos:line="7" pos:column="49">sockindex<pos:position pos:line="7" pos:column="58"/></name></expr>]<pos:position pos:line="7" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier> <specifier pos:line="8" pos:column="10">const<pos:position pos:line="8" pos:column="15"/></specifier></type> <name pos:line="8" pos:column="16">hostname<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><ternary><condition><expr><call><name pos:line="8" pos:column="27">SSL_IS_PROXY<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">()<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr> ?<pos:position pos:line="8" pos:column="43"/></condition><then pos:line="8" pos:column="43"> <expr><name><name pos:line="8" pos:column="44">conn<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">-&gt;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="50">http_proxy<pos:position pos:line="8" pos:column="60"/></name><operator pos:line="8" pos:column="60">.<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="61">host<pos:position pos:line="8" pos:column="65"/></name><operator pos:line="8" pos:column="65">.<pos:position pos:line="8" pos:column="66"/></operator><name pos:line="8" pos:column="66">name<pos:position pos:line="8" pos:column="70"/></name></name></expr> <pos:position pos:line="8" pos:column="71"/></then><else pos:line="8" pos:column="71">:
    <expr><name><name pos:line="9" pos:column="5">conn<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">-&gt;<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="11">host<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">name<pos:position pos:line="9" pos:column="20"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">infof<pos:position pos:line="11" pos:column="8"/></name><argument_list pos:line="11" pos:column="8">(<argument><expr><name pos:line="11" pos:column="9">data<pos:position pos:line="11" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="15">"schannel: shutting down SSL/TLS connection with %s port %hu\n"<pos:position pos:line="11" pos:column="78"/></literal></expr></argument>,
        <argument><expr><name pos:line="12" pos:column="9">hostname<pos:position pos:line="12" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="19">conn<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">remote_port<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name><name pos:line="14" pos:column="6">BACKEND<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">cred<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">&amp;&amp;<pos:position pos:line="14" pos:column="30"/></operator> <name><name pos:line="14" pos:column="23">BACKEND<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">ctxt<pos:position pos:line="14" pos:column="36"/></name></name></expr>)<pos:position pos:line="14" pos:column="37"/></condition><then pos:line="14" pos:column="37"> <block pos:line="14" pos:column="38">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">SecBufferDesc<pos:position pos:line="15" pos:column="18"/></name></type> <name pos:line="15" pos:column="19">BuffDesc<pos:position pos:line="15" pos:column="27"/></name></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">SecBuffer<pos:position pos:line="16" pos:column="14"/></name></type> <name pos:line="16" pos:column="15">Buffer<pos:position pos:line="16" pos:column="21"/></name></decl>;<pos:position pos:line="16" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">SECURITY_STATUS<pos:position pos:line="17" pos:column="20"/></name></type> <name pos:line="17" pos:column="21">sspi_status<pos:position pos:line="17" pos:column="32"/></name></decl>;<pos:position pos:line="17" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">SecBuffer<pos:position pos:line="18" pos:column="14"/></name></type> <name pos:line="18" pos:column="15">outbuf<pos:position pos:line="18" pos:column="21"/></name></decl>;<pos:position pos:line="18" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">SecBufferDesc<pos:position pos:line="19" pos:column="18"/></name></type> <name pos:line="19" pos:column="19">outbuf_desc<pos:position pos:line="19" pos:column="30"/></name></decl>;<pos:position pos:line="19" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">CURLcode<pos:position pos:line="20" pos:column="13"/></name></type> <name pos:line="20" pos:column="14">result<pos:position pos:line="20" pos:column="20"/></name></decl>;<pos:position pos:line="20" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">TCHAR<pos:position pos:line="21" pos:column="10"/></name> <modifier pos:line="21" pos:column="11">*<pos:position pos:line="21" pos:column="12"/></modifier></type><name pos:line="21" pos:column="12">host_name<pos:position pos:line="21" pos:column="21"/></name></decl>;<pos:position pos:line="21" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">DWORD<pos:position pos:line="22" pos:column="10"/></name></type> <name pos:line="22" pos:column="11">dwshut<pos:position pos:line="22" pos:column="17"/></name> <init pos:line="22" pos:column="18">= <expr><name pos:line="22" pos:column="20">SCHANNEL_SHUTDOWN<pos:position pos:line="22" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="38"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">InitSecBuffer<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><operator pos:line="24" pos:column="19">&amp;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="20">Buffer<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="28">SECBUFFER_TOKEN<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="45">&amp;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="46">dwshut<pos:position pos:line="24" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="54">sizeof<argument_list pos:line="24" pos:column="60">(<argument><expr><name pos:line="24" pos:column="61">dwshut<pos:position pos:line="24" pos:column="67"/></name></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">InitSecBufferDesc<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><operator pos:line="25" pos:column="23">&amp;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="24">BuffDesc<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="34">&amp;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="35">Buffer<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="43">1<pos:position pos:line="25" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><name pos:line="27" pos:column="5">sspi_status<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <call><name><name pos:line="27" pos:column="19">s_pSecFn<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">ApplyControlToken<pos:position pos:line="27" pos:column="46"/></name></name><argument_list pos:line="27" pos:column="46">(<argument><expr><operator pos:line="27" pos:column="47">&amp;<pos:position pos:line="27" pos:column="52"/></operator><name><name pos:line="27" pos:column="48">BACKEND<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">ctxt<pos:position pos:line="27" pos:column="61"/></name><operator pos:line="27" pos:column="61">-&gt;<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="63">ctxt_handle<pos:position pos:line="27" pos:column="74"/></name></name></expr></argument>,
                                              <argument><expr><operator pos:line="28" pos:column="47">&amp;<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="48">BuffDesc<pos:position pos:line="28" pos:column="56"/></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>

    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><name pos:line="30" pos:column="8">sspi_status<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">!=<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">SEC_E_OK<pos:position pos:line="30" pos:column="31"/></name></expr>)<pos:position pos:line="30" pos:column="32"/></condition><then pos:line="30" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="7">failf<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><name pos:line="31" pos:column="13">data<pos:position pos:line="31" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="19">"schannel: ApplyControlToken failure: %s"<pos:position pos:line="31" pos:column="60"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="32" pos:column="13">Curl_sspi_strerror<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">conn<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="38">sspi_status<pos:position pos:line="32" pos:column="49"/></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="34" pos:column="5">host_name<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <call><name pos:line="34" pos:column="17">Curl_convert_UTF8_to_tchar<pos:position pos:line="34" pos:column="43"/></name><argument_list pos:line="34" pos:column="43">(<argument><expr><name pos:line="34" pos:column="44">hostname<pos:position pos:line="34" pos:column="52"/></name></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="54"/></expr_stmt>
    <if pos:line="35" pos:column="5">if<condition pos:line="35" pos:column="7">(<expr><operator pos:line="35" pos:column="8">!<pos:position pos:line="35" pos:column="9"/></operator><name pos:line="35" pos:column="9">host_name<pos:position pos:line="35" pos:column="18"/></name></expr>)<pos:position pos:line="35" pos:column="19"/></condition><then pos:line="35" pos:column="19">
      <block type="pseudo"><return pos:line="36" pos:column="7">return <expr><name pos:line="36" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="36" pos:column="33"/></name></expr>;<pos:position pos:line="36" pos:column="34"/></return></block></then></if>

    <comment type="block" pos:line="38" pos:column="5">/* setup output buffer */</comment>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">InitSecBuffer<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><operator pos:line="39" pos:column="19">&amp;<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="20">outbuf<pos:position pos:line="39" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="28">SECBUFFER_EMPTY<pos:position pos:line="39" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="45">NULL<pos:position pos:line="39" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="51">0<pos:position pos:line="39" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">InitSecBufferDesc<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><operator pos:line="40" pos:column="23">&amp;<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="24">outbuf_desc<pos:position pos:line="40" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="37">&amp;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="38">outbuf<pos:position pos:line="40" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="46">1<pos:position pos:line="40" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><name pos:line="42" pos:column="5">sspi_status<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <call><name><name pos:line="42" pos:column="19">s_pSecFn<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">-&gt;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="29">InitializeSecurityContext<pos:position pos:line="42" pos:column="54"/></name></name><argument_list pos:line="42" pos:column="54">(
      <argument><expr><operator pos:line="43" pos:column="7">&amp;<pos:position pos:line="43" pos:column="12"/></operator><name><name pos:line="43" pos:column="8">BACKEND<pos:position pos:line="43" pos:column="15"/></name><operator pos:line="43" pos:column="15">-&gt;<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="17">cred<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">-&gt;<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="23">cred_handle<pos:position pos:line="43" pos:column="34"/></name></name></expr></argument>,
      <argument><expr><operator pos:line="44" pos:column="7">&amp;<pos:position pos:line="44" pos:column="12"/></operator><name><name pos:line="44" pos:column="8">BACKEND<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">-&gt;<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="17">ctxt<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">-&gt;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="23">ctxt_handle<pos:position pos:line="44" pos:column="34"/></name></name></expr></argument>,
      <argument><expr><name pos:line="45" pos:column="7">host_name<pos:position pos:line="45" pos:column="16"/></name></expr></argument>,
      <argument><expr><name><name pos:line="46" pos:column="7">BACKEND<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">-&gt;<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="16">req_flags<pos:position pos:line="46" pos:column="25"/></name></name></expr></argument>,
      <argument><expr><literal type="number" pos:line="47" pos:column="7">0<pos:position pos:line="47" pos:column="8"/></literal></expr></argument>,
      <argument><expr><literal type="number" pos:line="48" pos:column="7">0<pos:position pos:line="48" pos:column="8"/></literal></expr></argument>,
      <argument><expr><name pos:line="49" pos:column="7">NULL<pos:position pos:line="49" pos:column="11"/></name></expr></argument>,
      <argument><expr><literal type="number" pos:line="50" pos:column="7">0<pos:position pos:line="50" pos:column="8"/></literal></expr></argument>,
      <argument><expr><operator pos:line="51" pos:column="7">&amp;<pos:position pos:line="51" pos:column="12"/></operator><name><name pos:line="51" pos:column="8">BACKEND<pos:position pos:line="51" pos:column="15"/></name><operator pos:line="51" pos:column="15">-&gt;<pos:position pos:line="51" pos:column="20"/></operator><name pos:line="51" pos:column="17">ctxt<pos:position pos:line="51" pos:column="21"/></name><operator pos:line="51" pos:column="21">-&gt;<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="23">ctxt_handle<pos:position pos:line="51" pos:column="34"/></name></name></expr></argument>,
      <argument><expr><operator pos:line="52" pos:column="7">&amp;<pos:position pos:line="52" pos:column="12"/></operator><name pos:line="52" pos:column="8">outbuf_desc<pos:position pos:line="52" pos:column="19"/></name></expr></argument>,
      <argument><expr><operator pos:line="53" pos:column="7">&amp;<pos:position pos:line="53" pos:column="12"/></operator><name><name pos:line="53" pos:column="8">BACKEND<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">-&gt;<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="17">ret_flags<pos:position pos:line="53" pos:column="26"/></name></name></expr></argument>,
      <argument><expr><operator pos:line="54" pos:column="7">&amp;<pos:position pos:line="54" pos:column="12"/></operator><name><name pos:line="54" pos:column="8">BACKEND<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">-&gt;<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="17">ctxt<pos:position pos:line="54" pos:column="21"/></name><operator pos:line="54" pos:column="21">-&gt;<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="23">time_stamp<pos:position pos:line="54" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="56" pos:column="5">Curl_unicodefree<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name pos:line="56" pos:column="22">host_name<pos:position pos:line="56" pos:column="31"/></name></expr></argument>)<pos:position pos:line="56" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt>

    <if pos:line="58" pos:column="5">if<condition pos:line="58" pos:column="7">(<expr><operator pos:line="58" pos:column="8">(<pos:position pos:line="58" pos:column="9"/></operator><name pos:line="58" pos:column="9">sspi_status<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">==<pos:position pos:line="58" pos:column="23"/></operator> <name pos:line="58" pos:column="24">SEC_E_OK<pos:position pos:line="58" pos:column="32"/></name><operator pos:line="58" pos:column="32">)<pos:position pos:line="58" pos:column="33"/></operator> <operator pos:line="58" pos:column="34">||<pos:position pos:line="58" pos:column="36"/></operator> <operator pos:line="58" pos:column="37">(<pos:position pos:line="58" pos:column="38"/></operator><name pos:line="58" pos:column="38">sspi_status<pos:position pos:line="58" pos:column="49"/></name> <operator pos:line="58" pos:column="50">==<pos:position pos:line="58" pos:column="52"/></operator> <name pos:line="58" pos:column="53">SEC_I_CONTEXT_EXPIRED<pos:position pos:line="58" pos:column="74"/></name><operator pos:line="58" pos:column="74">)<pos:position pos:line="58" pos:column="75"/></operator></expr>)<pos:position pos:line="58" pos:column="76"/></condition><then pos:line="58" pos:column="76"> <block pos:line="58" pos:column="77">{
      <comment type="block" pos:line="59" pos:column="7">/* send close message which is in output buffer */</comment>
      <decl_stmt><decl><type><name pos:line="60" pos:column="7">ssize_t<pos:position pos:line="60" pos:column="14"/></name></type> <name pos:line="60" pos:column="15">written<pos:position pos:line="60" pos:column="22"/></name></decl>;<pos:position pos:line="60" pos:column="23"/></decl_stmt>
      <expr_stmt><expr><name pos:line="61" pos:column="7">result<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator> <call><name pos:line="61" pos:column="16">Curl_write_plain<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><name pos:line="61" pos:column="33">conn<pos:position pos:line="61" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="39">conn<pos:position pos:line="61" pos:column="43"/></name><operator pos:line="61" pos:column="43">-&gt;<pos:position pos:line="61" pos:column="48"/></operator><name pos:line="61" pos:column="45">sock<pos:position pos:line="61" pos:column="49"/></name><index pos:line="61" pos:column="49">[<expr><name pos:line="61" pos:column="50">sockindex<pos:position pos:line="61" pos:column="59"/></name></expr>]<pos:position pos:line="61" pos:column="60"/></index></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="62">outbuf<pos:position pos:line="61" pos:column="68"/></name><operator pos:line="61" pos:column="68">.<pos:position pos:line="61" pos:column="69"/></operator><name pos:line="61" pos:column="69">pvBuffer<pos:position pos:line="61" pos:column="77"/></name></name></expr></argument>,
                                <argument><expr><name><name pos:line="62" pos:column="33">outbuf<pos:position pos:line="62" pos:column="39"/></name><operator pos:line="62" pos:column="39">.<pos:position pos:line="62" pos:column="40"/></operator><name pos:line="62" pos:column="40">cbBuffer<pos:position pos:line="62" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="50">&amp;<pos:position pos:line="62" pos:column="55"/></operator><name pos:line="62" pos:column="51">written<pos:position pos:line="62" pos:column="58"/></name></expr></argument>)<pos:position pos:line="62" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="60"/></expr_stmt>

      <expr_stmt><expr><call><name><name pos:line="64" pos:column="7">s_pSecFn<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">-&gt;<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="17">FreeContextBuffer<pos:position pos:line="64" pos:column="34"/></name></name><argument_list pos:line="64" pos:column="34">(<argument><expr><name><name pos:line="64" pos:column="35">outbuf<pos:position pos:line="64" pos:column="41"/></name><operator pos:line="64" pos:column="41">.<pos:position pos:line="64" pos:column="42"/></operator><name pos:line="64" pos:column="42">pvBuffer<pos:position pos:line="64" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="52"/></expr_stmt>
      <if pos:line="65" pos:column="7">if<condition pos:line="65" pos:column="9">(<expr><operator pos:line="65" pos:column="10">(<pos:position pos:line="65" pos:column="11"/></operator><name pos:line="65" pos:column="11">result<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">!=<pos:position pos:line="65" pos:column="20"/></operator> <name pos:line="65" pos:column="21">CURLE_OK<pos:position pos:line="65" pos:column="29"/></name><operator pos:line="65" pos:column="29">)<pos:position pos:line="65" pos:column="30"/></operator> <operator pos:line="65" pos:column="31">||<pos:position pos:line="65" pos:column="33"/></operator> <operator pos:line="65" pos:column="34">(<pos:position pos:line="65" pos:column="35"/></operator><name><name pos:line="65" pos:column="35">outbuf<pos:position pos:line="65" pos:column="41"/></name><operator pos:line="65" pos:column="41">.<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="42">cbBuffer<pos:position pos:line="65" pos:column="50"/></name></name> <operator pos:line="65" pos:column="51">!=<pos:position pos:line="65" pos:column="53"/></operator> <operator pos:line="65" pos:column="54">(<pos:position pos:line="65" pos:column="55"/></operator><name pos:line="65" pos:column="55">size_t<pos:position pos:line="65" pos:column="61"/></name><operator pos:line="65" pos:column="61">)<pos:position pos:line="65" pos:column="62"/></operator> <name pos:line="65" pos:column="63">written<pos:position pos:line="65" pos:column="70"/></name><operator pos:line="65" pos:column="70">)<pos:position pos:line="65" pos:column="71"/></operator></expr>)<pos:position pos:line="65" pos:column="72"/></condition><then pos:line="65" pos:column="72"> <block pos:line="65" pos:column="73">{
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">infof<pos:position pos:line="66" pos:column="14"/></name><argument_list pos:line="66" pos:column="14">(<argument><expr><name pos:line="66" pos:column="15">data<pos:position pos:line="66" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="21">"schannel: failed to send close msg: %s"<pos:position pos:line="66" pos:column="61"/></literal>
              <literal type="string" pos:line="67" pos:column="15">" (bytes written: %zd)\n"<pos:position pos:line="67" pos:column="40"/></literal></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="42">curl_easy_strerror<pos:position pos:line="67" pos:column="60"/></name><argument_list pos:line="67" pos:column="60">(<argument><expr><name pos:line="67" pos:column="61">result<pos:position pos:line="67" pos:column="67"/></name></expr></argument>)<pos:position pos:line="67" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="67" pos:column="70">written<pos:position pos:line="67" pos:column="77"/></name></expr></argument>)<pos:position pos:line="67" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="79"/></expr_stmt>
      }<pos:position pos:line="68" pos:column="8"/></block></then></if>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="72" pos:column="3">/* free SSPI Schannel API security context handle */</comment>
  <if pos:line="73" pos:column="3">if<condition pos:line="73" pos:column="5">(<expr><name><name pos:line="73" pos:column="6">BACKEND<pos:position pos:line="73" pos:column="13"/></name><operator pos:line="73" pos:column="13">-&gt;<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="15">ctxt<pos:position pos:line="73" pos:column="19"/></name></name></expr>)<pos:position pos:line="73" pos:column="20"/></condition><then pos:line="73" pos:column="20"> <block pos:line="73" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">infof<pos:position pos:line="74" pos:column="10"/></name><argument_list pos:line="74" pos:column="10">(<argument><expr><name pos:line="74" pos:column="11">data<pos:position pos:line="74" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="17">"schannel: clear security context handle\n"<pos:position pos:line="74" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="75" pos:column="5">s_pSecFn<pos:position pos:line="75" pos:column="13"/></name><operator pos:line="75" pos:column="13">-&gt;<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="15">DeleteSecurityContext<pos:position pos:line="75" pos:column="36"/></name></name><argument_list pos:line="75" pos:column="36">(<argument><expr><operator pos:line="75" pos:column="37">&amp;<pos:position pos:line="75" pos:column="42"/></operator><name><name pos:line="75" pos:column="38">BACKEND<pos:position pos:line="75" pos:column="45"/></name><operator pos:line="75" pos:column="45">-&gt;<pos:position pos:line="75" pos:column="50"/></operator><name pos:line="75" pos:column="47">ctxt<pos:position pos:line="75" pos:column="51"/></name><operator pos:line="75" pos:column="51">-&gt;<pos:position pos:line="75" pos:column="56"/></operator><name pos:line="75" pos:column="53">ctxt_handle<pos:position pos:line="75" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">Curl_safefree<pos:position pos:line="76" pos:column="18"/></name><argument_list pos:line="76" pos:column="18">(<argument><expr><name><name pos:line="76" pos:column="19">BACKEND<pos:position pos:line="76" pos:column="26"/></name><operator pos:line="76" pos:column="26">-&gt;<pos:position pos:line="76" pos:column="31"/></operator><name pos:line="76" pos:column="28">ctxt<pos:position pos:line="76" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="77" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="79" pos:column="3">/* free SSPI Schannel API credential handle */</comment>
  <if pos:line="80" pos:column="3">if<condition pos:line="80" pos:column="5">(<expr><name><name pos:line="80" pos:column="6">BACKEND<pos:position pos:line="80" pos:column="13"/></name><operator pos:line="80" pos:column="13">-&gt;<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="15">cred<pos:position pos:line="80" pos:column="19"/></name></name></expr>)<pos:position pos:line="80" pos:column="20"/></condition><then pos:line="80" pos:column="20"> <block pos:line="80" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">Curl_ssl_sessionid_lock<pos:position pos:line="81" pos:column="28"/></name><argument_list pos:line="81" pos:column="28">(<argument><expr><name pos:line="81" pos:column="29">conn<pos:position pos:line="81" pos:column="33"/></name></expr></argument>)<pos:position pos:line="81" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">Curl_schannel_session_free<pos:position pos:line="82" pos:column="31"/></name><argument_list pos:line="82" pos:column="31">(<argument><expr><name><name pos:line="82" pos:column="32">BACKEND<pos:position pos:line="82" pos:column="39"/></name><operator pos:line="82" pos:column="39">-&gt;<pos:position pos:line="82" pos:column="44"/></operator><name pos:line="82" pos:column="41">cred<pos:position pos:line="82" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">Curl_ssl_sessionid_unlock<pos:position pos:line="83" pos:column="30"/></name><argument_list pos:line="83" pos:column="30">(<argument><expr><name pos:line="83" pos:column="31">conn<pos:position pos:line="83" pos:column="35"/></name></expr></argument>)<pos:position pos:line="83" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="84" pos:column="5">BACKEND<pos:position pos:line="84" pos:column="12"/></name><operator pos:line="84" pos:column="12">-&gt;<pos:position pos:line="84" pos:column="17"/></operator><name pos:line="84" pos:column="14">cred<pos:position pos:line="84" pos:column="18"/></name></name> <operator pos:line="84" pos:column="19">=<pos:position pos:line="84" pos:column="20"/></operator> <name pos:line="84" pos:column="21">NULL<pos:position pos:line="84" pos:column="25"/></name></expr>;<pos:position pos:line="84" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="85" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="87" pos:column="3">/* free internal buffer for received encrypted data */</comment>
  <if pos:line="88" pos:column="3">if<condition pos:line="88" pos:column="5">(<expr><name><name pos:line="88" pos:column="6">BACKEND<pos:position pos:line="88" pos:column="13"/></name><operator pos:line="88" pos:column="13">-&gt;<pos:position pos:line="88" pos:column="18"/></operator><name pos:line="88" pos:column="15">encdata_buffer<pos:position pos:line="88" pos:column="29"/></name></name> <operator pos:line="88" pos:column="30">!=<pos:position pos:line="88" pos:column="32"/></operator> <name pos:line="88" pos:column="33">NULL<pos:position pos:line="88" pos:column="37"/></name></expr>)<pos:position pos:line="88" pos:column="38"/></condition><then pos:line="88" pos:column="38"> <block pos:line="88" pos:column="39">{
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">Curl_safefree<pos:position pos:line="89" pos:column="18"/></name><argument_list pos:line="89" pos:column="18">(<argument><expr><name><name pos:line="89" pos:column="19">BACKEND<pos:position pos:line="89" pos:column="26"/></name><operator pos:line="89" pos:column="26">-&gt;<pos:position pos:line="89" pos:column="31"/></operator><name pos:line="89" pos:column="28">encdata_buffer<pos:position pos:line="89" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="90" pos:column="5">BACKEND<pos:position pos:line="90" pos:column="12"/></name><operator pos:line="90" pos:column="12">-&gt;<pos:position pos:line="90" pos:column="17"/></operator><name pos:line="90" pos:column="14">encdata_length<pos:position pos:line="90" pos:column="28"/></name></name> <operator pos:line="90" pos:column="29">=<pos:position pos:line="90" pos:column="30"/></operator> <literal type="number" pos:line="90" pos:column="31">0<pos:position pos:line="90" pos:column="32"/></literal></expr>;<pos:position pos:line="90" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="91" pos:column="5">BACKEND<pos:position pos:line="91" pos:column="12"/></name><operator pos:line="91" pos:column="12">-&gt;<pos:position pos:line="91" pos:column="17"/></operator><name pos:line="91" pos:column="14">encdata_offset<pos:position pos:line="91" pos:column="28"/></name></name> <operator pos:line="91" pos:column="29">=<pos:position pos:line="91" pos:column="30"/></operator> <literal type="number" pos:line="91" pos:column="31">0<pos:position pos:line="91" pos:column="32"/></literal></expr>;<pos:position pos:line="91" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="92" pos:column="5">BACKEND<pos:position pos:line="92" pos:column="12"/></name><operator pos:line="92" pos:column="12">-&gt;<pos:position pos:line="92" pos:column="17"/></operator><name pos:line="92" pos:column="14">encdata_is_incomplete<pos:position pos:line="92" pos:column="35"/></name></name> <operator pos:line="92" pos:column="36">=<pos:position pos:line="92" pos:column="37"/></operator> <literal type="boolean" pos:line="92" pos:column="38">false<pos:position pos:line="92" pos:column="43"/></literal></expr>;<pos:position pos:line="92" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="93" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="95" pos:column="3">/* free internal buffer for received decrypted data */</comment>
  <if pos:line="96" pos:column="3">if<condition pos:line="96" pos:column="5">(<expr><name><name pos:line="96" pos:column="6">BACKEND<pos:position pos:line="96" pos:column="13"/></name><operator pos:line="96" pos:column="13">-&gt;<pos:position pos:line="96" pos:column="18"/></operator><name pos:line="96" pos:column="15">decdata_buffer<pos:position pos:line="96" pos:column="29"/></name></name> <operator pos:line="96" pos:column="30">!=<pos:position pos:line="96" pos:column="32"/></operator> <name pos:line="96" pos:column="33">NULL<pos:position pos:line="96" pos:column="37"/></name></expr>)<pos:position pos:line="96" pos:column="38"/></condition><then pos:line="96" pos:column="38"> <block pos:line="96" pos:column="39">{
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">Curl_safefree<pos:position pos:line="97" pos:column="18"/></name><argument_list pos:line="97" pos:column="18">(<argument><expr><name><name pos:line="97" pos:column="19">BACKEND<pos:position pos:line="97" pos:column="26"/></name><operator pos:line="97" pos:column="26">-&gt;<pos:position pos:line="97" pos:column="31"/></operator><name pos:line="97" pos:column="28">decdata_buffer<pos:position pos:line="97" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="98" pos:column="5">BACKEND<pos:position pos:line="98" pos:column="12"/></name><operator pos:line="98" pos:column="12">-&gt;<pos:position pos:line="98" pos:column="17"/></operator><name pos:line="98" pos:column="14">decdata_length<pos:position pos:line="98" pos:column="28"/></name></name> <operator pos:line="98" pos:column="29">=<pos:position pos:line="98" pos:column="30"/></operator> <literal type="number" pos:line="98" pos:column="31">0<pos:position pos:line="98" pos:column="32"/></literal></expr>;<pos:position pos:line="98" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="99" pos:column="5">BACKEND<pos:position pos:line="99" pos:column="12"/></name><operator pos:line="99" pos:column="12">-&gt;<pos:position pos:line="99" pos:column="17"/></operator><name pos:line="99" pos:column="14">decdata_offset<pos:position pos:line="99" pos:column="28"/></name></name> <operator pos:line="99" pos:column="29">=<pos:position pos:line="99" pos:column="30"/></operator> <literal type="number" pos:line="99" pos:column="31">0<pos:position pos:line="99" pos:column="32"/></literal></expr>;<pos:position pos:line="99" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="100" pos:column="4"/></block></then></if>

  <return pos:line="102" pos:column="3">return <expr><name pos:line="102" pos:column="10">CURLE_OK<pos:position pos:line="102" pos:column="18"/></name></expr>;<pos:position pos:line="102" pos:column="19"/></return>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

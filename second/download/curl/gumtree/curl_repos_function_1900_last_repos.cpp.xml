<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1900_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_state_use_pasv<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">connectdata<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">conn<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">ftp_conn<pos:position pos:line="3" pos:column="18"/></name></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">ftpc<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><operator pos:line="3" pos:column="27">&amp;<pos:position pos:line="3" pos:column="32"/></operator><name><name pos:line="3" pos:column="28">conn<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">proto<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">.<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="40">ftpc<pos:position pos:line="3" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <comment type="block" pos:line="5" pos:column="3">/*
    Here's the excecutive summary on what to do:

    PASV is RFC959, expect:
    227 Entering Passive Mode (a1,a2,a3,a4,p1,p2)

    LPSV is RFC1639, expect:
    228 Entering Long Passive Mode (4,4,a1,a2,a3,a4,2,p1,p2)

    EPSV is RFC2428, expect:
    229 Entering Extended Passive Mode (|||port|)

  */</comment>

  <decl_stmt><decl><specifier pos:line="19" pos:column="3">static<pos:position pos:line="19" pos:column="9"/></specifier> <type><specifier pos:line="19" pos:column="10">const<pos:position pos:line="19" pos:column="15"/></specifier> <name pos:line="19" pos:column="16">char<pos:position pos:line="19" pos:column="20"/></name></type> <name><name pos:line="19" pos:column="21">mode<pos:position pos:line="19" pos:column="25"/></name><index pos:line="19" pos:column="25">[]<pos:position pos:line="19" pos:column="27"/></index><index pos:line="19" pos:column="27">[<expr><literal type="number" pos:line="19" pos:column="28">5<pos:position pos:line="19" pos:column="29"/></literal></expr>]<pos:position pos:line="19" pos:column="30"/></index></name> <init pos:line="19" pos:column="31">= <expr><block pos:line="19" pos:column="33">{ <expr><literal type="string" pos:line="19" pos:column="35">"EPSV"<pos:position pos:line="19" pos:column="41"/></literal></expr>, <expr><literal type="string" pos:line="19" pos:column="43">"PASV"<pos:position pos:line="19" pos:column="49"/></literal></expr> }<pos:position pos:line="19" pos:column="51"/></block></expr></init></decl>;<pos:position pos:line="19" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">int<pos:position pos:line="20" pos:column="6"/></name></type> <name pos:line="20" pos:column="7">modeoff<pos:position pos:line="20" pos:column="14"/></name></decl>;<pos:position pos:line="20" pos:column="15"/></decl_stmt>

<cpp:ifdef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifdef<pos:position pos:line="22" pos:column="7"/></cpp:directive> <name pos:line="22" pos:column="8">PF_INET6<pos:position pos:line="22" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">!<pos:position pos:line="23" pos:column="7"/></operator><name><name pos:line="23" pos:column="7">conn<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">bits<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">.<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">ftp_use_epsv<pos:position pos:line="23" pos:column="30"/></name></name> <operator pos:line="23" pos:column="31">&amp;&amp;<pos:position pos:line="23" pos:column="41"/></operator> <name><name pos:line="23" pos:column="34">conn<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">-&gt;<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="40">bits<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">.<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="45">ipv6<pos:position pos:line="23" pos:column="49"/></name></name></expr>)<pos:position pos:line="23" pos:column="50"/></condition><then pos:line="23" pos:column="50">
    <comment type="block" pos:line="24" pos:column="5">/* EPSV is disabled but we are connected to a IPv6 host, so we ignore the
       request and enable EPSV again! */</comment>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="5">conn<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">bits<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">.<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="16">ftp_use_epsv<pos:position pos:line="26" pos:column="28"/></name></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <name pos:line="26" pos:column="31">TRUE<pos:position pos:line="26" pos:column="35"/></name></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt></block></then></if>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="29" pos:column="3">modeoff<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <ternary><condition><expr><name><name pos:line="29" pos:column="13">conn<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">bits<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">.<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">ftp_use_epsv<pos:position pos:line="29" pos:column="36"/></name></name></expr>?<pos:position pos:line="29" pos:column="37"/></condition><then><expr><literal type="number" pos:line="29" pos:column="37">0<pos:position pos:line="29" pos:column="38"/></literal></expr></then><else pos:line="29" pos:column="38">:<expr><literal type="number" pos:line="29" pos:column="39">1<pos:position pos:line="29" pos:column="40"/></literal></expr></else></ternary></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="31" pos:column="3">PPSENDF<pos:position pos:line="31" pos:column="10"/></name><argument_list pos:line="31" pos:column="10">(<argument><expr><operator pos:line="31" pos:column="11">&amp;<pos:position pos:line="31" pos:column="16"/></operator><name><name pos:line="31" pos:column="12">ftpc<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">pp<pos:position pos:line="31" pos:column="20"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="22">"%s"<pos:position pos:line="31" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="28">mode<pos:position pos:line="31" pos:column="32"/></name><index pos:line="31" pos:column="32">[<expr><name pos:line="31" pos:column="33">modeoff<pos:position pos:line="31" pos:column="40"/></name></expr>]<pos:position pos:line="31" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="33" pos:column="3">ftpc<pos:position pos:line="33" pos:column="7"/></name><operator pos:line="33" pos:column="7">-&gt;<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="9">count1<pos:position pos:line="33" pos:column="15"/></name></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <name pos:line="33" pos:column="18">modeoff<pos:position pos:line="33" pos:column="25"/></name></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">state<pos:position pos:line="34" pos:column="8"/></name><argument_list pos:line="34" pos:column="8">(<argument><expr><name pos:line="34" pos:column="9">conn<pos:position pos:line="34" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="15">FTP_PASV<pos:position pos:line="34" pos:column="23"/></name></expr></argument>)<pos:position pos:line="34" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">infof<pos:position pos:line="35" pos:column="8"/></name><argument_list pos:line="35" pos:column="8">(<argument><expr><name><name pos:line="35" pos:column="9">conn<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">data<pos:position pos:line="35" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="21">"Connect data stream passively\n"<pos:position pos:line="35" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>

  <return pos:line="37" pos:column="3">return <expr><name pos:line="37" pos:column="10">result<pos:position pos:line="37" pos:column="16"/></name></expr>;<pos:position pos:line="37" pos:column="17"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

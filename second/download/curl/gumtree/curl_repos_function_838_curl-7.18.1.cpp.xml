<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_838_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_poll<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name><name pos:line="1" pos:column="15">struct<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">pollfd<pos:position pos:line="1" pos:column="28"/></name></name></type> <name><name pos:line="1" pos:column="29">ufds<pos:position pos:line="1" pos:column="33"/></name><index pos:line="1" pos:column="33">[]<pos:position pos:line="1" pos:column="35"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">unsigned<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">nfds<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">timeout_ms<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifndef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifndef<pos:position pos:line="3" pos:column="8"/></cpp:directive> <name pos:line="3" pos:column="9">HAVE_POLL_FINE<pos:position pos:line="3" pos:column="23"/></name></cpp:ifndef>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">timeval<pos:position pos:line="4" pos:column="17"/></name></name></type> <name pos:line="4" pos:column="18">pending_tv<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">timeval<pos:position pos:line="5" pos:column="17"/></name></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">ptimeout<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">fd_set<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">fds_read<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">fd_set<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">fds_write<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">fd_set<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">fds_err<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">curl_socket_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">maxfd<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">timeval<pos:position pos:line="11" pos:column="17"/></name></name></type> <name pos:line="11" pos:column="18">initial_tv<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><block pos:line="11" pos:column="31">{<expr><literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal></expr>,<expr><literal type="number" pos:line="11" pos:column="34">0<pos:position pos:line="11" pos:column="35"/></literal></expr>}<pos:position pos:line="11" pos:column="36"/></block></expr></init></decl>;<pos:position pos:line="11" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">bool<pos:position pos:line="12" pos:column="7"/></name></type> <name pos:line="12" pos:column="8">fds_none<pos:position pos:line="12" pos:column="16"/></name> <init pos:line="12" pos:column="17">= <expr><name pos:line="12" pos:column="19">TRUE<pos:position pos:line="12" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">unsigned<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">int<pos:position pos:line="13" pos:column="15"/></name></type> <name pos:line="13" pos:column="16">i<pos:position pos:line="13" pos:column="17"/></name></decl>;<pos:position pos:line="13" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">pending_ms<pos:position pos:line="14" pos:column="17"/></name> <init pos:line="14" pos:column="18">= <expr><literal type="number" pos:line="14" pos:column="20">0<pos:position pos:line="14" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">error<pos:position pos:line="15" pos:column="12"/></name></decl>;<pos:position pos:line="15" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">r<pos:position pos:line="16" pos:column="8"/></name></decl>;<pos:position pos:line="16" pos:column="9"/></decl_stmt>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><name pos:line="18" pos:column="6">ufds<pos:position pos:line="18" pos:column="10"/></name></expr>)<pos:position pos:line="18" pos:column="11"/></condition><then pos:line="18" pos:column="11"> <block pos:line="18" pos:column="12">{
    <for pos:line="19" pos:column="5">for <control pos:line="19" pos:column="9">(<init><expr><name pos:line="19" pos:column="10">i<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <literal type="number" pos:line="19" pos:column="14">0<pos:position pos:line="19" pos:column="15"/></literal></expr>;<pos:position pos:line="19" pos:column="16"/></init> <condition><expr><name pos:line="19" pos:column="17">i<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">&lt;<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="21">nfds<pos:position pos:line="19" pos:column="25"/></name></expr>;<pos:position pos:line="19" pos:column="26"/></condition> <incr><expr><name pos:line="19" pos:column="27">i<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">++<pos:position pos:line="19" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="31"/></control> <block pos:line="19" pos:column="32">{
      <if pos:line="20" pos:column="7">if<condition pos:line="20" pos:column="9">(<expr><name><name pos:line="20" pos:column="10">ufds<pos:position pos:line="20" pos:column="14"/></name><index pos:line="20" pos:column="14">[<expr><name pos:line="20" pos:column="15">i<pos:position pos:line="20" pos:column="16"/></name></expr>]<pos:position pos:line="20" pos:column="17"/></index></name><operator pos:line="20" pos:column="17">.<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">fd<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">!=<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="24">CURL_SOCKET_BAD<pos:position pos:line="20" pos:column="39"/></name></expr>)<pos:position pos:line="20" pos:column="40"/></condition><then pos:line="20" pos:column="40"> <block pos:line="20" pos:column="41">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">fds_none<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">FALSE<pos:position pos:line="21" pos:column="25"/></name></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
        <break pos:line="22" pos:column="9">break;<pos:position pos:line="22" pos:column="15"/></break>
      }<pos:position pos:line="23" pos:column="8"/></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></for>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>
  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><name pos:line="26" pos:column="6">fds_none<pos:position pos:line="26" pos:column="14"/></name></expr>)<pos:position pos:line="26" pos:column="15"/></condition><then pos:line="26" pos:column="15"> <block pos:line="26" pos:column="16">{
    <expr_stmt><expr><name pos:line="27" pos:column="5">r<pos:position pos:line="27" pos:column="6"/></name> <operator pos:line="27" pos:column="7">=<pos:position pos:line="27" pos:column="8"/></operator> <call><name pos:line="27" pos:column="9">wait_ms<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">timeout_ms<pos:position pos:line="27" pos:column="27"/></name></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">r<pos:position pos:line="28" pos:column="13"/></name></expr>;<pos:position pos:line="28" pos:column="14"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* Avoid initial timestamp, avoid gettimeofday() call, when elapsed
     time in this function does not need to be measured. This happens
     when function is called with a zero timeout or a negative timeout
     value indicating a blocking call should be performed. */</comment>

  <if pos:line="36" pos:column="3">if<condition pos:line="36" pos:column="5">(<expr><name pos:line="36" pos:column="6">timeout_ms<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">&gt;<pos:position pos:line="36" pos:column="21"/></operator> <literal type="number" pos:line="36" pos:column="19">0<pos:position pos:line="36" pos:column="20"/></literal></expr>)<pos:position pos:line="36" pos:column="21"/></condition><then pos:line="36" pos:column="21"> <block pos:line="36" pos:column="22">{
    <expr_stmt><expr><name pos:line="37" pos:column="5">pending_ms<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <name pos:line="37" pos:column="18">timeout_ms<pos:position pos:line="37" pos:column="28"/></name></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">initial_tv<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <call><name pos:line="38" pos:column="18">curlx_tvnow<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">()<pos:position pos:line="38" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">ifdef<pos:position pos:line="41" pos:column="7"/></cpp:directive> <name pos:line="41" pos:column="8">HAVE_POLL_FINE<pos:position pos:line="41" pos:column="22"/></name></cpp:ifdef>

  <do pos:line="43" pos:column="3">do <block pos:line="43" pos:column="6">{
    <if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><name pos:line="44" pos:column="8">timeout_ms<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">&lt;<pos:position pos:line="44" pos:column="23"/></operator> <literal type="number" pos:line="44" pos:column="21">0<pos:position pos:line="44" pos:column="22"/></literal></expr>)<pos:position pos:line="44" pos:column="23"/></condition><then pos:line="44" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="7">pending_ms<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <operator pos:line="45" pos:column="20">-<pos:position pos:line="45" pos:column="21"/></operator><literal type="number" pos:line="45" pos:column="21">1<pos:position pos:line="45" pos:column="22"/></literal></expr>;<pos:position pos:line="45" pos:column="23"/></expr_stmt></block></then>
    <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if<condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">!<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">timeout_ms<pos:position pos:line="46" pos:column="24"/></name></expr>)<pos:position pos:line="46" pos:column="25"/></condition><then pos:line="46" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="7">pending_ms<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <literal type="number" pos:line="47" pos:column="20">0<pos:position pos:line="47" pos:column="21"/></literal></expr>;<pos:position pos:line="47" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
    <expr_stmt><expr><name pos:line="48" pos:column="5">r<pos:position pos:line="48" pos:column="6"/></name> <operator pos:line="48" pos:column="7">=<pos:position pos:line="48" pos:column="8"/></operator> <call><name pos:line="48" pos:column="9">poll<pos:position pos:line="48" pos:column="13"/></name><argument_list pos:line="48" pos:column="13">(<argument><expr><name pos:line="48" pos:column="14">ufds<pos:position pos:line="48" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="20">nfds<pos:position pos:line="48" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="26">pending_ms<pos:position pos:line="48" pos:column="36"/></name></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
    <if pos:line="49" pos:column="5">if<condition pos:line="49" pos:column="7">(<expr><name pos:line="49" pos:column="8">r<pos:position pos:line="49" pos:column="9"/></name> <operator pos:line="49" pos:column="10">!=<pos:position pos:line="49" pos:column="12"/></operator> <operator pos:line="49" pos:column="13">-<pos:position pos:line="49" pos:column="14"/></operator><literal type="number" pos:line="49" pos:column="14">1<pos:position pos:line="49" pos:column="15"/></literal></expr>)<pos:position pos:line="49" pos:column="16"/></condition><then pos:line="49" pos:column="16">
      <block type="pseudo"><break pos:line="50" pos:column="7">break;<pos:position pos:line="50" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="51" pos:column="5">error<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <name pos:line="51" pos:column="13">SOCKERRNO<pos:position pos:line="51" pos:column="22"/></name></expr>;<pos:position pos:line="51" pos:column="23"/></expr_stmt>
    <if pos:line="52" pos:column="5">if<condition pos:line="52" pos:column="7">(<expr><name pos:line="52" pos:column="8">error<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">&amp;&amp;<pos:position pos:line="52" pos:column="24"/></operator> <name pos:line="52" pos:column="17">error_not_EINTR<pos:position pos:line="52" pos:column="32"/></name></expr>)<pos:position pos:line="52" pos:column="33"/></condition><then pos:line="52" pos:column="33">
      <block type="pseudo"><break pos:line="53" pos:column="7">break;<pos:position pos:line="53" pos:column="13"/></break></block></then></if>
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><name pos:line="54" pos:column="8">timeout_ms<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">&gt;<pos:position pos:line="54" pos:column="23"/></operator> <literal type="number" pos:line="54" pos:column="21">0<pos:position pos:line="54" pos:column="22"/></literal></expr>)<pos:position pos:line="54" pos:column="23"/></condition><then pos:line="54" pos:column="23"> <block pos:line="54" pos:column="24">{
      <expr_stmt><expr><name pos:line="55" pos:column="7">pending_ms<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <name pos:line="55" pos:column="20">timeout_ms<pos:position pos:line="55" pos:column="30"/></name> <operator pos:line="55" pos:column="31">-<pos:position pos:line="55" pos:column="32"/></operator> <name pos:line="55" pos:column="33">elapsed_ms<pos:position pos:line="55" pos:column="43"/></name></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt>
      <if pos:line="56" pos:column="7">if<condition pos:line="56" pos:column="9">(<expr><name pos:line="56" pos:column="10">pending_ms<pos:position pos:line="56" pos:column="20"/></name> <operator pos:line="56" pos:column="21">&lt;=<pos:position pos:line="56" pos:column="26"/></operator> <literal type="number" pos:line="56" pos:column="24">0<pos:position pos:line="56" pos:column="25"/></literal></expr>)<pos:position pos:line="56" pos:column="26"/></condition><then pos:line="56" pos:column="26">
        <block type="pseudo"><break pos:line="57" pos:column="9">break;<pos:position pos:line="57" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>
  }<pos:position pos:line="59" pos:column="4"/></block> while<condition pos:line="59" pos:column="10">(<expr><name pos:line="59" pos:column="11">r<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">==<pos:position pos:line="59" pos:column="15"/></operator> <operator pos:line="59" pos:column="16">-<pos:position pos:line="59" pos:column="17"/></operator><literal type="number" pos:line="59" pos:column="17">1<pos:position pos:line="59" pos:column="18"/></literal></expr>)<pos:position pos:line="59" pos:column="19"/></condition>;<pos:position pos:line="59" pos:column="20"/></do>

<cpp:else pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">else<pos:position pos:line="61" pos:column="6"/></cpp:directive></cpp:else>  <comment type="block" pos:line="61" pos:column="8">/* HAVE_POLL_FINE */</comment>

  <expr_stmt><expr><call><name pos:line="63" pos:column="3">FD_ZERO<pos:position pos:line="63" pos:column="10"/></name><argument_list pos:line="63" pos:column="10">(<argument><expr><operator pos:line="63" pos:column="11">&amp;<pos:position pos:line="63" pos:column="16"/></operator><name pos:line="63" pos:column="12">fds_read<pos:position pos:line="63" pos:column="20"/></name></expr></argument>)<pos:position pos:line="63" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">FD_ZERO<pos:position pos:line="64" pos:column="10"/></name><argument_list pos:line="64" pos:column="10">(<argument><expr><operator pos:line="64" pos:column="11">&amp;<pos:position pos:line="64" pos:column="16"/></operator><name pos:line="64" pos:column="12">fds_write<pos:position pos:line="64" pos:column="21"/></name></expr></argument>)<pos:position pos:line="64" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">FD_ZERO<pos:position pos:line="65" pos:column="10"/></name><argument_list pos:line="65" pos:column="10">(<argument><expr><operator pos:line="65" pos:column="11">&amp;<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="12">fds_err<pos:position pos:line="65" pos:column="19"/></name></expr></argument>)<pos:position pos:line="65" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="66" pos:column="3">maxfd<pos:position pos:line="66" pos:column="8"/></name> <operator pos:line="66" pos:column="9">=<pos:position pos:line="66" pos:column="10"/></operator> <operator pos:line="66" pos:column="11">(<pos:position pos:line="66" pos:column="12"/></operator><name pos:line="66" pos:column="12">curl_socket_t<pos:position pos:line="66" pos:column="25"/></name><operator pos:line="66" pos:column="25">)<pos:position pos:line="66" pos:column="26"/></operator><operator pos:line="66" pos:column="26">-<pos:position pos:line="66" pos:column="27"/></operator><literal type="number" pos:line="66" pos:column="27">1<pos:position pos:line="66" pos:column="28"/></literal></expr>;<pos:position pos:line="66" pos:column="29"/></expr_stmt>

  <for pos:line="68" pos:column="3">for <control pos:line="68" pos:column="7">(<init><expr><name pos:line="68" pos:column="8">i<pos:position pos:line="68" pos:column="9"/></name> <operator pos:line="68" pos:column="10">=<pos:position pos:line="68" pos:column="11"/></operator> <literal type="number" pos:line="68" pos:column="12">0<pos:position pos:line="68" pos:column="13"/></literal></expr>;<pos:position pos:line="68" pos:column="14"/></init> <condition><expr><name pos:line="68" pos:column="15">i<pos:position pos:line="68" pos:column="16"/></name> <operator pos:line="68" pos:column="17">&lt;<pos:position pos:line="68" pos:column="21"/></operator> <name pos:line="68" pos:column="19">nfds<pos:position pos:line="68" pos:column="23"/></name></expr>;<pos:position pos:line="68" pos:column="24"/></condition> <incr><expr><name pos:line="68" pos:column="25">i<pos:position pos:line="68" pos:column="26"/></name><operator pos:line="68" pos:column="26">++<pos:position pos:line="68" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="68" pos:column="29"/></control> <block pos:line="68" pos:column="30">{
    <expr_stmt><expr><name><name pos:line="69" pos:column="5">ufds<pos:position pos:line="69" pos:column="9"/></name><index pos:line="69" pos:column="9">[<expr><name pos:line="69" pos:column="10">i<pos:position pos:line="69" pos:column="11"/></name></expr>]<pos:position pos:line="69" pos:column="12"/></index></name><operator pos:line="69" pos:column="12">.<pos:position pos:line="69" pos:column="13"/></operator><name pos:line="69" pos:column="13">revents<pos:position pos:line="69" pos:column="20"/></name> <operator pos:line="69" pos:column="21">=<pos:position pos:line="69" pos:column="22"/></operator> <literal type="number" pos:line="69" pos:column="23">0<pos:position pos:line="69" pos:column="24"/></literal></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>
    <if pos:line="70" pos:column="5">if<condition pos:line="70" pos:column="7">(<expr><name><name pos:line="70" pos:column="8">ufds<pos:position pos:line="70" pos:column="12"/></name><index pos:line="70" pos:column="12">[<expr><name pos:line="70" pos:column="13">i<pos:position pos:line="70" pos:column="14"/></name></expr>]<pos:position pos:line="70" pos:column="15"/></index></name><operator pos:line="70" pos:column="15">.<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="16">fd<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">==<pos:position pos:line="70" pos:column="21"/></operator> <name pos:line="70" pos:column="22">CURL_SOCKET_BAD<pos:position pos:line="70" pos:column="37"/></name></expr>)<pos:position pos:line="70" pos:column="38"/></condition><then pos:line="70" pos:column="38">
      <block type="pseudo"><continue pos:line="71" pos:column="7">continue;<pos:position pos:line="71" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">VERIFY_SOCK<pos:position pos:line="72" pos:column="16"/></name><argument_list pos:line="72" pos:column="16">(<argument><expr><name><name pos:line="72" pos:column="17">ufds<pos:position pos:line="72" pos:column="21"/></name><index pos:line="72" pos:column="21">[<expr><name pos:line="72" pos:column="22">i<pos:position pos:line="72" pos:column="23"/></name></expr>]<pos:position pos:line="72" pos:column="24"/></index></name><operator pos:line="72" pos:column="24">.<pos:position pos:line="72" pos:column="25"/></operator><name pos:line="72" pos:column="25">fd<pos:position pos:line="72" pos:column="27"/></name></expr></argument>)<pos:position pos:line="72" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="29"/></expr_stmt>
    <if pos:line="73" pos:column="5">if<condition pos:line="73" pos:column="7">(<expr><name><name pos:line="73" pos:column="8">ufds<pos:position pos:line="73" pos:column="12"/></name><index pos:line="73" pos:column="12">[<expr><name pos:line="73" pos:column="13">i<pos:position pos:line="73" pos:column="14"/></name></expr>]<pos:position pos:line="73" pos:column="15"/></index></name><operator pos:line="73" pos:column="15">.<pos:position pos:line="73" pos:column="16"/></operator><name pos:line="73" pos:column="16">events<pos:position pos:line="73" pos:column="22"/></name> <operator pos:line="73" pos:column="23">&amp;<pos:position pos:line="73" pos:column="28"/></operator> <operator pos:line="73" pos:column="25">(<pos:position pos:line="73" pos:column="26"/></operator><name pos:line="73" pos:column="26">POLLIN<pos:position pos:line="73" pos:column="32"/></name><operator pos:line="73" pos:column="32">|<pos:position pos:line="73" pos:column="33"/></operator><name pos:line="73" pos:column="33">POLLOUT<pos:position pos:line="73" pos:column="40"/></name><operator pos:line="73" pos:column="40">|<pos:position pos:line="73" pos:column="41"/></operator><name pos:line="73" pos:column="41">POLLPRI<pos:position pos:line="73" pos:column="48"/></name><operator pos:line="73" pos:column="48">|<pos:position pos:line="73" pos:column="49"/></operator>
                          <name pos:line="74" pos:column="27">POLLRDNORM<pos:position pos:line="74" pos:column="37"/></name><operator pos:line="74" pos:column="37">|<pos:position pos:line="74" pos:column="38"/></operator><name pos:line="74" pos:column="38">POLLWRNORM<pos:position pos:line="74" pos:column="48"/></name><operator pos:line="74" pos:column="48">|<pos:position pos:line="74" pos:column="49"/></operator><name pos:line="74" pos:column="49">POLLRDBAND<pos:position pos:line="74" pos:column="59"/></name><operator pos:line="74" pos:column="59">)<pos:position pos:line="74" pos:column="60"/></operator></expr>)<pos:position pos:line="74" pos:column="61"/></condition><then pos:line="74" pos:column="61"> <block pos:line="74" pos:column="62">{
      <if pos:line="75" pos:column="7">if<condition pos:line="75" pos:column="9">(<expr><name><name pos:line="75" pos:column="10">ufds<pos:position pos:line="75" pos:column="14"/></name><index pos:line="75" pos:column="14">[<expr><name pos:line="75" pos:column="15">i<pos:position pos:line="75" pos:column="16"/></name></expr>]<pos:position pos:line="75" pos:column="17"/></index></name><operator pos:line="75" pos:column="17">.<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="18">fd<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">&gt;<pos:position pos:line="75" pos:column="25"/></operator> <name pos:line="75" pos:column="23">maxfd<pos:position pos:line="75" pos:column="28"/></name></expr>)<pos:position pos:line="75" pos:column="29"/></condition><then pos:line="75" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="9">maxfd<pos:position pos:line="76" pos:column="14"/></name> <operator pos:line="76" pos:column="15">=<pos:position pos:line="76" pos:column="16"/></operator> <name><name pos:line="76" pos:column="17">ufds<pos:position pos:line="76" pos:column="21"/></name><index pos:line="76" pos:column="21">[<expr><name pos:line="76" pos:column="22">i<pos:position pos:line="76" pos:column="23"/></name></expr>]<pos:position pos:line="76" pos:column="24"/></index></name><operator pos:line="76" pos:column="24">.<pos:position pos:line="76" pos:column="25"/></operator><name pos:line="76" pos:column="25">fd<pos:position pos:line="76" pos:column="27"/></name></expr>;<pos:position pos:line="76" pos:column="28"/></expr_stmt></block></then></if>
      <if pos:line="77" pos:column="7">if<condition pos:line="77" pos:column="9">(<expr><name><name pos:line="77" pos:column="10">ufds<pos:position pos:line="77" pos:column="14"/></name><index pos:line="77" pos:column="14">[<expr><name pos:line="77" pos:column="15">i<pos:position pos:line="77" pos:column="16"/></name></expr>]<pos:position pos:line="77" pos:column="17"/></index></name><operator pos:line="77" pos:column="17">.<pos:position pos:line="77" pos:column="18"/></operator><name pos:line="77" pos:column="18">events<pos:position pos:line="77" pos:column="24"/></name> <operator pos:line="77" pos:column="25">&amp;<pos:position pos:line="77" pos:column="30"/></operator> <operator pos:line="77" pos:column="27">(<pos:position pos:line="77" pos:column="28"/></operator><name pos:line="77" pos:column="28">POLLRDNORM<pos:position pos:line="77" pos:column="38"/></name><operator pos:line="77" pos:column="38">|<pos:position pos:line="77" pos:column="39"/></operator><name pos:line="77" pos:column="39">POLLIN<pos:position pos:line="77" pos:column="45"/></name><operator pos:line="77" pos:column="45">)<pos:position pos:line="77" pos:column="46"/></operator></expr>)<pos:position pos:line="77" pos:column="47"/></condition><then pos:line="77" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="9">FD_SET<pos:position pos:line="78" pos:column="15"/></name><argument_list pos:line="78" pos:column="15">(<argument><expr><name><name pos:line="78" pos:column="16">ufds<pos:position pos:line="78" pos:column="20"/></name><index pos:line="78" pos:column="20">[<expr><name pos:line="78" pos:column="21">i<pos:position pos:line="78" pos:column="22"/></name></expr>]<pos:position pos:line="78" pos:column="23"/></index></name><operator pos:line="78" pos:column="23">.<pos:position pos:line="78" pos:column="24"/></operator><name pos:line="78" pos:column="24">fd<pos:position pos:line="78" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="28">&amp;<pos:position pos:line="78" pos:column="33"/></operator><name pos:line="78" pos:column="29">fds_read<pos:position pos:line="78" pos:column="37"/></name></expr></argument>)<pos:position pos:line="78" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="39"/></expr_stmt></block></then></if>
      <if pos:line="79" pos:column="7">if<condition pos:line="79" pos:column="9">(<expr><name><name pos:line="79" pos:column="10">ufds<pos:position pos:line="79" pos:column="14"/></name><index pos:line="79" pos:column="14">[<expr><name pos:line="79" pos:column="15">i<pos:position pos:line="79" pos:column="16"/></name></expr>]<pos:position pos:line="79" pos:column="17"/></index></name><operator pos:line="79" pos:column="17">.<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="18">events<pos:position pos:line="79" pos:column="24"/></name> <operator pos:line="79" pos:column="25">&amp;<pos:position pos:line="79" pos:column="30"/></operator> <operator pos:line="79" pos:column="27">(<pos:position pos:line="79" pos:column="28"/></operator><name pos:line="79" pos:column="28">POLLWRNORM<pos:position pos:line="79" pos:column="38"/></name><operator pos:line="79" pos:column="38">|<pos:position pos:line="79" pos:column="39"/></operator><name pos:line="79" pos:column="39">POLLOUT<pos:position pos:line="79" pos:column="46"/></name><operator pos:line="79" pos:column="46">)<pos:position pos:line="79" pos:column="47"/></operator></expr>)<pos:position pos:line="79" pos:column="48"/></condition><then pos:line="79" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="80" pos:column="9">FD_SET<pos:position pos:line="80" pos:column="15"/></name><argument_list pos:line="80" pos:column="15">(<argument><expr><name><name pos:line="80" pos:column="16">ufds<pos:position pos:line="80" pos:column="20"/></name><index pos:line="80" pos:column="20">[<expr><name pos:line="80" pos:column="21">i<pos:position pos:line="80" pos:column="22"/></name></expr>]<pos:position pos:line="80" pos:column="23"/></index></name><operator pos:line="80" pos:column="23">.<pos:position pos:line="80" pos:column="24"/></operator><name pos:line="80" pos:column="24">fd<pos:position pos:line="80" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="28">&amp;<pos:position pos:line="80" pos:column="33"/></operator><name pos:line="80" pos:column="29">fds_write<pos:position pos:line="80" pos:column="38"/></name></expr></argument>)<pos:position pos:line="80" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="40"/></expr_stmt></block></then></if>
      <if pos:line="81" pos:column="7">if<condition pos:line="81" pos:column="9">(<expr><name><name pos:line="81" pos:column="10">ufds<pos:position pos:line="81" pos:column="14"/></name><index pos:line="81" pos:column="14">[<expr><name pos:line="81" pos:column="15">i<pos:position pos:line="81" pos:column="16"/></name></expr>]<pos:position pos:line="81" pos:column="17"/></index></name><operator pos:line="81" pos:column="17">.<pos:position pos:line="81" pos:column="18"/></operator><name pos:line="81" pos:column="18">events<pos:position pos:line="81" pos:column="24"/></name> <operator pos:line="81" pos:column="25">&amp;<pos:position pos:line="81" pos:column="30"/></operator> <operator pos:line="81" pos:column="27">(<pos:position pos:line="81" pos:column="28"/></operator><name pos:line="81" pos:column="28">POLLRDBAND<pos:position pos:line="81" pos:column="38"/></name><operator pos:line="81" pos:column="38">|<pos:position pos:line="81" pos:column="39"/></operator><name pos:line="81" pos:column="39">POLLPRI<pos:position pos:line="81" pos:column="46"/></name><operator pos:line="81" pos:column="46">)<pos:position pos:line="81" pos:column="47"/></operator></expr>)<pos:position pos:line="81" pos:column="48"/></condition><then pos:line="81" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="9">FD_SET<pos:position pos:line="82" pos:column="15"/></name><argument_list pos:line="82" pos:column="15">(<argument><expr><name><name pos:line="82" pos:column="16">ufds<pos:position pos:line="82" pos:column="20"/></name><index pos:line="82" pos:column="20">[<expr><name pos:line="82" pos:column="21">i<pos:position pos:line="82" pos:column="22"/></name></expr>]<pos:position pos:line="82" pos:column="23"/></index></name><operator pos:line="82" pos:column="23">.<pos:position pos:line="82" pos:column="24"/></operator><name pos:line="82" pos:column="24">fd<pos:position pos:line="82" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="28">&amp;<pos:position pos:line="82" pos:column="33"/></operator><name pos:line="82" pos:column="29">fds_err<pos:position pos:line="82" pos:column="36"/></name></expr></argument>)<pos:position pos:line="82" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="38"/></expr_stmt></block></then></if>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>
  }<pos:position pos:line="84" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="86" pos:column="3">ptimeout<pos:position pos:line="86" pos:column="11"/></name> <operator pos:line="86" pos:column="12">=<pos:position pos:line="86" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="86" pos:column="14">(<pos:position pos:line="86" pos:column="15"/></operator><name pos:line="86" pos:column="15">timeout_ms<pos:position pos:line="86" pos:column="25"/></name> <operator pos:line="86" pos:column="26">&lt;<pos:position pos:line="86" pos:column="30"/></operator> <literal type="number" pos:line="86" pos:column="28">0<pos:position pos:line="86" pos:column="29"/></literal><operator pos:line="86" pos:column="29">)<pos:position pos:line="86" pos:column="30"/></operator></expr> ?<pos:position pos:line="86" pos:column="32"/></condition><then pos:line="86" pos:column="32"> <expr><name pos:line="86" pos:column="33">NULL<pos:position pos:line="86" pos:column="37"/></name></expr> <pos:position pos:line="86" pos:column="38"/></then><else pos:line="86" pos:column="38">: <expr><operator pos:line="86" pos:column="40">&amp;<pos:position pos:line="86" pos:column="45"/></operator><name pos:line="86" pos:column="41">pending_tv<pos:position pos:line="86" pos:column="51"/></name></expr></else></ternary></expr>;<pos:position pos:line="86" pos:column="52"/></expr_stmt>

  <do pos:line="88" pos:column="3">do <block pos:line="88" pos:column="6">{
    <if pos:line="89" pos:column="5">if<condition pos:line="89" pos:column="7">(<expr><name pos:line="89" pos:column="8">timeout_ms<pos:position pos:line="89" pos:column="18"/></name> <operator pos:line="89" pos:column="19">&gt;<pos:position pos:line="89" pos:column="23"/></operator> <literal type="number" pos:line="89" pos:column="21">0<pos:position pos:line="89" pos:column="22"/></literal></expr>)<pos:position pos:line="89" pos:column="23"/></condition><then pos:line="89" pos:column="23"> <block pos:line="89" pos:column="24">{
      <expr_stmt><expr><name><name pos:line="90" pos:column="7">pending_tv<pos:position pos:line="90" pos:column="17"/></name><operator pos:line="90" pos:column="17">.<pos:position pos:line="90" pos:column="18"/></operator><name pos:line="90" pos:column="18">tv_sec<pos:position pos:line="90" pos:column="24"/></name></name> <operator pos:line="90" pos:column="25">=<pos:position pos:line="90" pos:column="26"/></operator> <name pos:line="90" pos:column="27">pending_ms<pos:position pos:line="90" pos:column="37"/></name> <operator pos:line="90" pos:column="38">/<pos:position pos:line="90" pos:column="39"/></operator> <literal type="number" pos:line="90" pos:column="40">1000<pos:position pos:line="90" pos:column="44"/></literal></expr>;<pos:position pos:line="90" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="91" pos:column="7">pending_tv<pos:position pos:line="91" pos:column="17"/></name><operator pos:line="91" pos:column="17">.<pos:position pos:line="91" pos:column="18"/></operator><name pos:line="91" pos:column="18">tv_usec<pos:position pos:line="91" pos:column="25"/></name></name> <operator pos:line="91" pos:column="26">=<pos:position pos:line="91" pos:column="27"/></operator> <operator pos:line="91" pos:column="28">(<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="29">pending_ms<pos:position pos:line="91" pos:column="39"/></name> <operator pos:line="91" pos:column="40">%<pos:position pos:line="91" pos:column="41"/></operator> <literal type="number" pos:line="91" pos:column="42">1000<pos:position pos:line="91" pos:column="46"/></literal><operator pos:line="91" pos:column="46">)<pos:position pos:line="91" pos:column="47"/></operator> <operator pos:line="91" pos:column="48">*<pos:position pos:line="91" pos:column="49"/></operator> <literal type="number" pos:line="91" pos:column="50">1000<pos:position pos:line="91" pos:column="54"/></literal></expr>;<pos:position pos:line="91" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></then>
    <elseif pos:line="93" pos:column="5">else <if pos:line="93" pos:column="10">if<condition pos:line="93" pos:column="12">(<expr><operator pos:line="93" pos:column="13">!<pos:position pos:line="93" pos:column="14"/></operator><name pos:line="93" pos:column="14">timeout_ms<pos:position pos:line="93" pos:column="24"/></name></expr>)<pos:position pos:line="93" pos:column="25"/></condition><then pos:line="93" pos:column="25"> <block pos:line="93" pos:column="26">{
      <expr_stmt><expr><name><name pos:line="94" pos:column="7">pending_tv<pos:position pos:line="94" pos:column="17"/></name><operator pos:line="94" pos:column="17">.<pos:position pos:line="94" pos:column="18"/></operator><name pos:line="94" pos:column="18">tv_sec<pos:position pos:line="94" pos:column="24"/></name></name> <operator pos:line="94" pos:column="25">=<pos:position pos:line="94" pos:column="26"/></operator> <literal type="number" pos:line="94" pos:column="27">0<pos:position pos:line="94" pos:column="28"/></literal></expr>;<pos:position pos:line="94" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="95" pos:column="7">pending_tv<pos:position pos:line="95" pos:column="17"/></name><operator pos:line="95" pos:column="17">.<pos:position pos:line="95" pos:column="18"/></operator><name pos:line="95" pos:column="18">tv_usec<pos:position pos:line="95" pos:column="25"/></name></name> <operator pos:line="95" pos:column="26">=<pos:position pos:line="95" pos:column="27"/></operator> <literal type="number" pos:line="95" pos:column="28">0<pos:position pos:line="95" pos:column="29"/></literal></expr>;<pos:position pos:line="95" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><name pos:line="97" pos:column="5">r<pos:position pos:line="97" pos:column="6"/></name> <operator pos:line="97" pos:column="7">=<pos:position pos:line="97" pos:column="8"/></operator> <call><name pos:line="97" pos:column="9">select<pos:position pos:line="97" pos:column="15"/></name><argument_list pos:line="97" pos:column="15">(<argument><expr><operator pos:line="97" pos:column="16">(<pos:position pos:line="97" pos:column="17"/></operator><name pos:line="97" pos:column="17">int<pos:position pos:line="97" pos:column="20"/></name><operator pos:line="97" pos:column="20">)<pos:position pos:line="97" pos:column="21"/></operator><name pos:line="97" pos:column="21">maxfd<pos:position pos:line="97" pos:column="26"/></name> <operator pos:line="97" pos:column="27">+<pos:position pos:line="97" pos:column="28"/></operator> <literal type="number" pos:line="97" pos:column="29">1<pos:position pos:line="97" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="97" pos:column="32">&amp;<pos:position pos:line="97" pos:column="37"/></operator><name pos:line="97" pos:column="33">fds_read<pos:position pos:line="97" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="43">&amp;<pos:position pos:line="97" pos:column="48"/></operator><name pos:line="97" pos:column="44">fds_write<pos:position pos:line="97" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="55">&amp;<pos:position pos:line="97" pos:column="60"/></operator><name pos:line="97" pos:column="56">fds_err<pos:position pos:line="97" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="65">ptimeout<pos:position pos:line="97" pos:column="73"/></name></expr></argument>)<pos:position pos:line="97" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="75"/></expr_stmt>
    <if pos:line="98" pos:column="5">if<condition pos:line="98" pos:column="7">(<expr><name pos:line="98" pos:column="8">r<pos:position pos:line="98" pos:column="9"/></name> <operator pos:line="98" pos:column="10">!=<pos:position pos:line="98" pos:column="12"/></operator> <operator pos:line="98" pos:column="13">-<pos:position pos:line="98" pos:column="14"/></operator><literal type="number" pos:line="98" pos:column="14">1<pos:position pos:line="98" pos:column="15"/></literal></expr>)<pos:position pos:line="98" pos:column="16"/></condition><then pos:line="98" pos:column="16">
      <block type="pseudo"><break pos:line="99" pos:column="7">break;<pos:position pos:line="99" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="100" pos:column="5">error<pos:position pos:line="100" pos:column="10"/></name> <operator pos:line="100" pos:column="11">=<pos:position pos:line="100" pos:column="12"/></operator> <name pos:line="100" pos:column="13">SOCKERRNO<pos:position pos:line="100" pos:column="22"/></name></expr>;<pos:position pos:line="100" pos:column="23"/></expr_stmt>
    <if pos:line="101" pos:column="5">if<condition pos:line="101" pos:column="7">(<expr><name pos:line="101" pos:column="8">error<pos:position pos:line="101" pos:column="13"/></name> <operator pos:line="101" pos:column="14">&amp;&amp;<pos:position pos:line="101" pos:column="24"/></operator> <name pos:line="101" pos:column="17">error_not_EINTR<pos:position pos:line="101" pos:column="32"/></name></expr>)<pos:position pos:line="101" pos:column="33"/></condition><then pos:line="101" pos:column="33">
      <block type="pseudo"><break pos:line="102" pos:column="7">break;<pos:position pos:line="102" pos:column="13"/></break></block></then></if>
    <if pos:line="103" pos:column="5">if<condition pos:line="103" pos:column="7">(<expr><name pos:line="103" pos:column="8">timeout_ms<pos:position pos:line="103" pos:column="18"/></name> <operator pos:line="103" pos:column="19">&gt;<pos:position pos:line="103" pos:column="23"/></operator> <literal type="number" pos:line="103" pos:column="21">0<pos:position pos:line="103" pos:column="22"/></literal></expr>)<pos:position pos:line="103" pos:column="23"/></condition><then pos:line="103" pos:column="23"> <block pos:line="103" pos:column="24">{
      <expr_stmt><expr><name pos:line="104" pos:column="7">pending_ms<pos:position pos:line="104" pos:column="17"/></name> <operator pos:line="104" pos:column="18">=<pos:position pos:line="104" pos:column="19"/></operator> <name pos:line="104" pos:column="20">timeout_ms<pos:position pos:line="104" pos:column="30"/></name> <operator pos:line="104" pos:column="31">-<pos:position pos:line="104" pos:column="32"/></operator> <name pos:line="104" pos:column="33">elapsed_ms<pos:position pos:line="104" pos:column="43"/></name></expr>;<pos:position pos:line="104" pos:column="44"/></expr_stmt>
      <if pos:line="105" pos:column="7">if<condition pos:line="105" pos:column="9">(<expr><name pos:line="105" pos:column="10">pending_ms<pos:position pos:line="105" pos:column="20"/></name> <operator pos:line="105" pos:column="21">&lt;=<pos:position pos:line="105" pos:column="26"/></operator> <literal type="number" pos:line="105" pos:column="24">0<pos:position pos:line="105" pos:column="25"/></literal></expr>)<pos:position pos:line="105" pos:column="26"/></condition><then pos:line="105" pos:column="26">
        <block type="pseudo"><break pos:line="106" pos:column="9">break;<pos:position pos:line="106" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if>
  }<pos:position pos:line="108" pos:column="4"/></block> while<condition pos:line="108" pos:column="10">(<expr><name pos:line="108" pos:column="11">r<pos:position pos:line="108" pos:column="12"/></name> <operator pos:line="108" pos:column="13">==<pos:position pos:line="108" pos:column="15"/></operator> <operator pos:line="108" pos:column="16">-<pos:position pos:line="108" pos:column="17"/></operator><literal type="number" pos:line="108" pos:column="17">1<pos:position pos:line="108" pos:column="18"/></literal></expr>)<pos:position pos:line="108" pos:column="19"/></condition>;<pos:position pos:line="108" pos:column="20"/></do>

  <if pos:line="110" pos:column="3">if<condition pos:line="110" pos:column="5">(<expr><name pos:line="110" pos:column="6">r<pos:position pos:line="110" pos:column="7"/></name> <operator pos:line="110" pos:column="8">&lt;<pos:position pos:line="110" pos:column="12"/></operator> <literal type="number" pos:line="110" pos:column="10">0<pos:position pos:line="110" pos:column="11"/></literal></expr>)<pos:position pos:line="110" pos:column="12"/></condition><then pos:line="110" pos:column="12">
    <block type="pseudo"><return pos:line="111" pos:column="5">return <expr><operator pos:line="111" pos:column="12">-<pos:position pos:line="111" pos:column="13"/></operator><literal type="number" pos:line="111" pos:column="13">1<pos:position pos:line="111" pos:column="14"/></literal></expr>;<pos:position pos:line="111" pos:column="15"/></return></block></then></if>
  <if pos:line="112" pos:column="3">if<condition pos:line="112" pos:column="5">(<expr><name pos:line="112" pos:column="6">r<pos:position pos:line="112" pos:column="7"/></name> <operator pos:line="112" pos:column="8">==<pos:position pos:line="112" pos:column="10"/></operator> <literal type="number" pos:line="112" pos:column="11">0<pos:position pos:line="112" pos:column="12"/></literal></expr>)<pos:position pos:line="112" pos:column="13"/></condition><then pos:line="112" pos:column="13">
    <block type="pseudo"><return pos:line="113" pos:column="5">return <expr><literal type="number" pos:line="113" pos:column="12">0<pos:position pos:line="113" pos:column="13"/></literal></expr>;<pos:position pos:line="113" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="115" pos:column="3">r<pos:position pos:line="115" pos:column="4"/></name> <operator pos:line="115" pos:column="5">=<pos:position pos:line="115" pos:column="6"/></operator> <literal type="number" pos:line="115" pos:column="7">0<pos:position pos:line="115" pos:column="8"/></literal></expr>;<pos:position pos:line="115" pos:column="9"/></expr_stmt>
  <for pos:line="116" pos:column="3">for <control pos:line="116" pos:column="7">(<init><expr><name pos:line="116" pos:column="8">i<pos:position pos:line="116" pos:column="9"/></name> <operator pos:line="116" pos:column="10">=<pos:position pos:line="116" pos:column="11"/></operator> <literal type="number" pos:line="116" pos:column="12">0<pos:position pos:line="116" pos:column="13"/></literal></expr>;<pos:position pos:line="116" pos:column="14"/></init> <condition><expr><name pos:line="116" pos:column="15">i<pos:position pos:line="116" pos:column="16"/></name> <operator pos:line="116" pos:column="17">&lt;<pos:position pos:line="116" pos:column="21"/></operator> <name pos:line="116" pos:column="19">nfds<pos:position pos:line="116" pos:column="23"/></name></expr>;<pos:position pos:line="116" pos:column="24"/></condition> <incr><expr><name pos:line="116" pos:column="25">i<pos:position pos:line="116" pos:column="26"/></name><operator pos:line="116" pos:column="26">++<pos:position pos:line="116" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="116" pos:column="29"/></control> <block pos:line="116" pos:column="30">{
    <expr_stmt><expr><name><name pos:line="117" pos:column="5">ufds<pos:position pos:line="117" pos:column="9"/></name><index pos:line="117" pos:column="9">[<expr><name pos:line="117" pos:column="10">i<pos:position pos:line="117" pos:column="11"/></name></expr>]<pos:position pos:line="117" pos:column="12"/></index></name><operator pos:line="117" pos:column="12">.<pos:position pos:line="117" pos:column="13"/></operator><name pos:line="117" pos:column="13">revents<pos:position pos:line="117" pos:column="20"/></name> <operator pos:line="117" pos:column="21">=<pos:position pos:line="117" pos:column="22"/></operator> <literal type="number" pos:line="117" pos:column="23">0<pos:position pos:line="117" pos:column="24"/></literal></expr>;<pos:position pos:line="117" pos:column="25"/></expr_stmt>
    <if pos:line="118" pos:column="5">if<condition pos:line="118" pos:column="7">(<expr><name><name pos:line="118" pos:column="8">ufds<pos:position pos:line="118" pos:column="12"/></name><index pos:line="118" pos:column="12">[<expr><name pos:line="118" pos:column="13">i<pos:position pos:line="118" pos:column="14"/></name></expr>]<pos:position pos:line="118" pos:column="15"/></index></name><operator pos:line="118" pos:column="15">.<pos:position pos:line="118" pos:column="16"/></operator><name pos:line="118" pos:column="16">fd<pos:position pos:line="118" pos:column="18"/></name> <operator pos:line="118" pos:column="19">==<pos:position pos:line="118" pos:column="21"/></operator> <name pos:line="118" pos:column="22">CURL_SOCKET_BAD<pos:position pos:line="118" pos:column="37"/></name></expr>)<pos:position pos:line="118" pos:column="38"/></condition><then pos:line="118" pos:column="38">
      <block type="pseudo"><continue pos:line="119" pos:column="7">continue;<pos:position pos:line="119" pos:column="16"/></continue></block></then></if>
    <if pos:line="120" pos:column="5">if<condition pos:line="120" pos:column="7">(<expr><call><name pos:line="120" pos:column="8">FD_ISSET<pos:position pos:line="120" pos:column="16"/></name><argument_list pos:line="120" pos:column="16">(<argument><expr><name><name pos:line="120" pos:column="17">ufds<pos:position pos:line="120" pos:column="21"/></name><index pos:line="120" pos:column="21">[<expr><name pos:line="120" pos:column="22">i<pos:position pos:line="120" pos:column="23"/></name></expr>]<pos:position pos:line="120" pos:column="24"/></index></name><operator pos:line="120" pos:column="24">.<pos:position pos:line="120" pos:column="25"/></operator><name pos:line="120" pos:column="25">fd<pos:position pos:line="120" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="120" pos:column="29">&amp;<pos:position pos:line="120" pos:column="34"/></operator><name pos:line="120" pos:column="30">fds_read<pos:position pos:line="120" pos:column="38"/></name></expr></argument>)<pos:position pos:line="120" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="120" pos:column="40"/></condition><then pos:line="120" pos:column="40">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="121" pos:column="7">ufds<pos:position pos:line="121" pos:column="11"/></name><index pos:line="121" pos:column="11">[<expr><name pos:line="121" pos:column="12">i<pos:position pos:line="121" pos:column="13"/></name></expr>]<pos:position pos:line="121" pos:column="14"/></index></name><operator pos:line="121" pos:column="14">.<pos:position pos:line="121" pos:column="15"/></operator><name pos:line="121" pos:column="15">revents<pos:position pos:line="121" pos:column="22"/></name> <operator pos:line="121" pos:column="23">|=<pos:position pos:line="121" pos:column="25"/></operator> <name pos:line="121" pos:column="26">POLLIN<pos:position pos:line="121" pos:column="32"/></name></expr>;<pos:position pos:line="121" pos:column="33"/></expr_stmt></block></then></if>
    <if pos:line="122" pos:column="5">if<condition pos:line="122" pos:column="7">(<expr><call><name pos:line="122" pos:column="8">FD_ISSET<pos:position pos:line="122" pos:column="16"/></name><argument_list pos:line="122" pos:column="16">(<argument><expr><name><name pos:line="122" pos:column="17">ufds<pos:position pos:line="122" pos:column="21"/></name><index pos:line="122" pos:column="21">[<expr><name pos:line="122" pos:column="22">i<pos:position pos:line="122" pos:column="23"/></name></expr>]<pos:position pos:line="122" pos:column="24"/></index></name><operator pos:line="122" pos:column="24">.<pos:position pos:line="122" pos:column="25"/></operator><name pos:line="122" pos:column="25">fd<pos:position pos:line="122" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="29">&amp;<pos:position pos:line="122" pos:column="34"/></operator><name pos:line="122" pos:column="30">fds_write<pos:position pos:line="122" pos:column="39"/></name></expr></argument>)<pos:position pos:line="122" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="41"/></condition><then pos:line="122" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="123" pos:column="7">ufds<pos:position pos:line="123" pos:column="11"/></name><index pos:line="123" pos:column="11">[<expr><name pos:line="123" pos:column="12">i<pos:position pos:line="123" pos:column="13"/></name></expr>]<pos:position pos:line="123" pos:column="14"/></index></name><operator pos:line="123" pos:column="14">.<pos:position pos:line="123" pos:column="15"/></operator><name pos:line="123" pos:column="15">revents<pos:position pos:line="123" pos:column="22"/></name> <operator pos:line="123" pos:column="23">|=<pos:position pos:line="123" pos:column="25"/></operator> <name pos:line="123" pos:column="26">POLLOUT<pos:position pos:line="123" pos:column="33"/></name></expr>;<pos:position pos:line="123" pos:column="34"/></expr_stmt></block></then></if>
    <if pos:line="124" pos:column="5">if<condition pos:line="124" pos:column="7">(<expr><call><name pos:line="124" pos:column="8">FD_ISSET<pos:position pos:line="124" pos:column="16"/></name><argument_list pos:line="124" pos:column="16">(<argument><expr><name><name pos:line="124" pos:column="17">ufds<pos:position pos:line="124" pos:column="21"/></name><index pos:line="124" pos:column="21">[<expr><name pos:line="124" pos:column="22">i<pos:position pos:line="124" pos:column="23"/></name></expr>]<pos:position pos:line="124" pos:column="24"/></index></name><operator pos:line="124" pos:column="24">.<pos:position pos:line="124" pos:column="25"/></operator><name pos:line="124" pos:column="25">fd<pos:position pos:line="124" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="29">&amp;<pos:position pos:line="124" pos:column="34"/></operator><name pos:line="124" pos:column="30">fds_err<pos:position pos:line="124" pos:column="37"/></name></expr></argument>)<pos:position pos:line="124" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="124" pos:column="39"/></condition><then pos:line="124" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="125" pos:column="7">ufds<pos:position pos:line="125" pos:column="11"/></name><index pos:line="125" pos:column="11">[<expr><name pos:line="125" pos:column="12">i<pos:position pos:line="125" pos:column="13"/></name></expr>]<pos:position pos:line="125" pos:column="14"/></index></name><operator pos:line="125" pos:column="14">.<pos:position pos:line="125" pos:column="15"/></operator><name pos:line="125" pos:column="15">revents<pos:position pos:line="125" pos:column="22"/></name> <operator pos:line="125" pos:column="23">|=<pos:position pos:line="125" pos:column="25"/></operator> <name pos:line="125" pos:column="26">POLLPRI<pos:position pos:line="125" pos:column="33"/></name></expr>;<pos:position pos:line="125" pos:column="34"/></expr_stmt></block></then></if>
    <if pos:line="126" pos:column="5">if<condition pos:line="126" pos:column="7">(<expr><name><name pos:line="126" pos:column="8">ufds<pos:position pos:line="126" pos:column="12"/></name><index pos:line="126" pos:column="12">[<expr><name pos:line="126" pos:column="13">i<pos:position pos:line="126" pos:column="14"/></name></expr>]<pos:position pos:line="126" pos:column="15"/></index></name><operator pos:line="126" pos:column="15">.<pos:position pos:line="126" pos:column="16"/></operator><name pos:line="126" pos:column="16">revents<pos:position pos:line="126" pos:column="23"/></name> <operator pos:line="126" pos:column="24">!=<pos:position pos:line="126" pos:column="26"/></operator> <literal type="number" pos:line="126" pos:column="27">0<pos:position pos:line="126" pos:column="28"/></literal></expr>)<pos:position pos:line="126" pos:column="29"/></condition><then pos:line="126" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><name pos:line="127" pos:column="7">r<pos:position pos:line="127" pos:column="8"/></name><operator pos:line="127" pos:column="8">++<pos:position pos:line="127" pos:column="10"/></operator></expr>;<pos:position pos:line="127" pos:column="11"/></expr_stmt></block></then></if>
  }<pos:position pos:line="128" pos:column="4"/></block></for>

<cpp:endif pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">endif<pos:position pos:line="130" pos:column="7"/></cpp:directive></cpp:endif>  <comment type="block" pos:line="130" pos:column="9">/* HAVE_POLL_FINE */</comment>

  <return pos:line="132" pos:column="3">return <expr><name pos:line="132" pos:column="10">r<pos:position pos:line="132" pos:column="11"/></name></expr>;<pos:position pos:line="132" pos:column="12"/></return>
}<pos:position pos:line="133" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_675_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_http<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">connectdata<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">conn<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">bool<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">done<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SessionHandle<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name><init pos:line="3" pos:column="29">=<expr><name><name pos:line="3" pos:column="30">conn<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">-&gt;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="36">data<pos:position pos:line="3" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">buf<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name><name pos:line="4" pos:column="15">data<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="21">state<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">.<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">buffer<pos:position pos:line="4" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt> <comment type="block" pos:line="4" pos:column="35">/* this is a short cut to the buffer */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name><init pos:line="5" pos:column="18">=<expr><name pos:line="5" pos:column="19">CURLE_OK<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">HTTP<pos:position pos:line="6" pos:column="14"/></name></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">http<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">ppath<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><name><name pos:line="7" pos:column="17">data<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">state<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">.<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">path<pos:position pos:line="7" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">ftp_typecode<pos:position pos:line="8" pos:column="20"/></name><index pos:line="8" pos:column="20">[<expr><sizeof pos:line="8" pos:column="21">sizeof<argument_list pos:line="8" pos:column="27">(<argument><expr><literal type="string" pos:line="8" pos:column="28">";type=?"<pos:position pos:line="8" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></sizeof></expr>]<pos:position pos:line="8" pos:column="39"/></index></name> <init pos:line="8" pos:column="40">= <expr><literal type="string" pos:line="8" pos:column="42">""<pos:position pos:line="8" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">host<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name><name pos:line="9" pos:column="16">conn<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">host<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">.<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">name<pos:position pos:line="9" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">te<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><literal type="string" pos:line="10" pos:column="20">""<pos:position pos:line="10" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt> <comment type="block" pos:line="10" pos:column="24">/* transfer-encoding */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">ptr<pos:position pos:line="11" pos:column="12"/></name></decl>;<pos:position pos:line="11" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">request<pos:position pos:line="12" pos:column="16"/></name></decl>;<pos:position pos:line="12" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">Curl_HttpReq<pos:position pos:line="13" pos:column="15"/></name></type> <name pos:line="13" pos:column="16">httpreq<pos:position pos:line="13" pos:column="23"/></name> <init pos:line="13" pos:column="24">= <expr><name><name pos:line="13" pos:column="26">data<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">set<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">.<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">httpreq<pos:position pos:line="13" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">addcookies<pos:position pos:line="14" pos:column="19"/></name> <init pos:line="14" pos:column="20">= <expr><name pos:line="14" pos:column="22">NULL<pos:position pos:line="14" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">curl_off_t<pos:position pos:line="15" pos:column="13"/></name></type> <name pos:line="15" pos:column="14">included_body<pos:position pos:line="15" pos:column="27"/></name> <init pos:line="15" pos:column="28">= <expr><literal type="number" pos:line="15" pos:column="30">0<pos:position pos:line="15" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="16" pos:column="3">const<pos:position pos:line="16" pos:column="8"/></specifier> <name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">httpstring<pos:position pos:line="16" pos:column="25"/></name></decl>;<pos:position pos:line="16" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">send_buffer<pos:position pos:line="17" pos:column="14"/></name> <modifier pos:line="17" pos:column="15">*<pos:position pos:line="17" pos:column="16"/></modifier></type><name pos:line="17" pos:column="16">req_buffer<pos:position pos:line="17" pos:column="26"/></name></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">curl_off_t<pos:position pos:line="18" pos:column="13"/></name></type> <name pos:line="18" pos:column="14">postsize<pos:position pos:line="18" pos:column="22"/></name></decl>;<pos:position pos:line="18" pos:column="23"/></decl_stmt> <comment type="block" pos:line="18" pos:column="24">/* off_t type to be able to hold a large file size */</comment>


  <comment type="block" pos:line="21" pos:column="3">/* Always consider the DO phase done after this function call, even if there
     may be parts of the request that is not yet sent, since we can deal with
     the rest of the request in the PERFORM phase. */</comment>
  <expr_stmt><expr><operator pos:line="24" pos:column="3">*<pos:position pos:line="24" pos:column="4"/></operator><name pos:line="24" pos:column="4">done<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <name pos:line="24" pos:column="11">TRUE<pos:position pos:line="24" pos:column="15"/></name></expr>;<pos:position pos:line="24" pos:column="16"/></expr_stmt>

  <comment type="block" pos:line="26" pos:column="3">/* If there already is a protocol-specific struct allocated for this
     sessionhandle, deal with it */</comment>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">Curl_reset_reqproto<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">conn<pos:position pos:line="28" pos:column="27"/></name></expr></argument>)<pos:position pos:line="28" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>

  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><operator pos:line="30" pos:column="6">!<pos:position pos:line="30" pos:column="7"/></operator><name><name pos:line="30" pos:column="7">data<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">state<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">.<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="19">proto<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">.<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">http<pos:position pos:line="30" pos:column="29"/></name></name></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30"> <block pos:line="30" pos:column="31">{
    <comment type="block" pos:line="31" pos:column="5">/* Only allocate this struct if we don't already have it! */</comment>

    <expr_stmt><expr><name pos:line="33" pos:column="5">http<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator>struct <name pos:line="33" pos:column="20">HTTP<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">*<pos:position pos:line="33" pos:column="26"/></operator><operator pos:line="33" pos:column="26">)<pos:position pos:line="33" pos:column="27"/></operator><call><name pos:line="33" pos:column="27">calloc<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><sizeof pos:line="33" pos:column="34">sizeof<argument_list pos:line="33" pos:column="40">(<argument><expr pos:line="33" pos:column="41">struct <name pos:line="33" pos:column="48">HTTP<pos:position pos:line="33" pos:column="52"/></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="55">1<pos:position pos:line="33" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt>
    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">(<expr><operator pos:line="34" pos:column="8">!<pos:position pos:line="34" pos:column="9"/></operator><name pos:line="34" pos:column="9">http<pos:position pos:line="34" pos:column="13"/></name></expr>)<pos:position pos:line="34" pos:column="14"/></condition><then pos:line="34" pos:column="14">
      <block type="pseudo"><return pos:line="35" pos:column="7">return <expr><name pos:line="35" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="35" pos:column="33"/></name></expr>;<pos:position pos:line="35" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">data<pos:position pos:line="36" pos:column="9"/></name><operator pos:line="36" pos:column="9">-&gt;<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="11">state<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">.<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">proto<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">.<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="23">http<pos:position pos:line="36" pos:column="27"/></name></name> <operator pos:line="36" pos:column="28">=<pos:position pos:line="36" pos:column="29"/></operator> <name pos:line="36" pos:column="30">http<pos:position pos:line="36" pos:column="34"/></name></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></then>
  <else pos:line="38" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="5">http<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <name><name pos:line="39" pos:column="12">data<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="18">state<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">.<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">proto<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">.<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">http<pos:position pos:line="39" pos:column="34"/></name></name></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt></block></else></if>

  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">( <expr><operator pos:line="41" pos:column="7">(<pos:position pos:line="41" pos:column="8"/></operator><name><name pos:line="41" pos:column="8">conn<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">protocol<pos:position pos:line="41" pos:column="22"/></name></name><operator pos:line="41" pos:column="22">&amp;<pos:position pos:line="41" pos:column="27"/></operator><operator pos:line="41" pos:column="23">(<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="24">PROT_HTTP<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">|<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="34">PROT_FTP<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">)<pos:position pos:line="41" pos:column="43"/></operator><operator pos:line="41" pos:column="43">)<pos:position pos:line="41" pos:column="44"/></operator> <operator pos:line="41" pos:column="45">&amp;&amp;<pos:position pos:line="41" pos:column="55"/></operator>
       <name><name pos:line="42" pos:column="8">data<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">-&gt;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="14">set<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">.<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">upload<pos:position pos:line="42" pos:column="24"/></name></name></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25"> <block pos:line="42" pos:column="26">{
    <expr_stmt><expr><name pos:line="43" pos:column="5">httpreq<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <name pos:line="43" pos:column="15">HTTPREQ_PUT<pos:position pos:line="43" pos:column="26"/></name></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="46" pos:column="3">/* Now set the 'request' pointer to the proper request string */</comment>
  <if pos:line="47" pos:column="3">if<condition pos:line="47" pos:column="5">(<expr><name><name pos:line="47" pos:column="6">data<pos:position pos:line="47" pos:column="10"/></name><operator pos:line="47" pos:column="10">-&gt;<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="12">set<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">.<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="16">str<pos:position pos:line="47" pos:column="19"/></name><index pos:line="47" pos:column="19">[<expr><name pos:line="47" pos:column="20">STRING_CUSTOMREQUEST<pos:position pos:line="47" pos:column="40"/></name></expr>]<pos:position pos:line="47" pos:column="41"/></index></name></expr>)<pos:position pos:line="47" pos:column="42"/></condition><then pos:line="47" pos:column="42">
    <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="5">request<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <name><name pos:line="48" pos:column="15">data<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">-&gt;<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="21">set<pos:position pos:line="48" pos:column="24"/></name><operator pos:line="48" pos:column="24">.<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="25">str<pos:position pos:line="48" pos:column="28"/></name><index pos:line="48" pos:column="28">[<expr><name pos:line="48" pos:column="29">STRING_CUSTOMREQUEST<pos:position pos:line="48" pos:column="49"/></name></expr>]<pos:position pos:line="48" pos:column="50"/></index></name></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt></block></then>
  <else pos:line="49" pos:column="3">else <block pos:line="49" pos:column="8">{
    <if pos:line="50" pos:column="5">if<condition pos:line="50" pos:column="7">(<expr><name><name pos:line="50" pos:column="8">data<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">-&gt;<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="14">set<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">.<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">opt_no_body<pos:position pos:line="50" pos:column="29"/></name></name></expr>)<pos:position pos:line="50" pos:column="30"/></condition><then pos:line="50" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="7">request<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">=<pos:position pos:line="51" pos:column="16"/></operator> <operator pos:line="51" pos:column="17">(<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="18">char<pos:position pos:line="51" pos:column="22"/></name> <operator pos:line="51" pos:column="23">*<pos:position pos:line="51" pos:column="24"/></operator><operator pos:line="51" pos:column="24">)<pos:position pos:line="51" pos:column="25"/></operator><literal type="string" pos:line="51" pos:column="25">"HEAD"<pos:position pos:line="51" pos:column="31"/></literal></expr>;<pos:position pos:line="51" pos:column="32"/></expr_stmt></block></then>
    <else pos:line="52" pos:column="5">else <block pos:line="52" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">DEBUGASSERT<pos:position pos:line="53" pos:column="18"/></name><argument_list pos:line="53" pos:column="18">(<argument><expr><operator pos:line="53" pos:column="19">(<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="20">httpreq<pos:position pos:line="53" pos:column="27"/></name> <operator pos:line="53" pos:column="28">&gt;<pos:position pos:line="53" pos:column="32"/></operator> <name pos:line="53" pos:column="30">HTTPREQ_NONE<pos:position pos:line="53" pos:column="42"/></name><operator pos:line="53" pos:column="42">)<pos:position pos:line="53" pos:column="43"/></operator> <operator pos:line="53" pos:column="44">&amp;&amp;<pos:position pos:line="53" pos:column="54"/></operator> <operator pos:line="53" pos:column="47">(<pos:position pos:line="53" pos:column="48"/></operator><name pos:line="53" pos:column="48">httpreq<pos:position pos:line="53" pos:column="55"/></name> <operator pos:line="53" pos:column="56">&lt;<pos:position pos:line="53" pos:column="60"/></operator> <name pos:line="53" pos:column="58">HTTPREQ_LAST<pos:position pos:line="53" pos:column="70"/></name><operator pos:line="53" pos:column="70">)<pos:position pos:line="53" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="53" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="73"/></expr_stmt>
      <switch pos:line="54" pos:column="7">switch<condition pos:line="54" pos:column="13">(<expr><name pos:line="54" pos:column="14">httpreq<pos:position pos:line="54" pos:column="21"/></name></expr>)<pos:position pos:line="54" pos:column="22"/></condition> <block pos:line="54" pos:column="23">{
      <case pos:line="55" pos:column="7">case <expr><name pos:line="55" pos:column="12">HTTPREQ_POST<pos:position pos:line="55" pos:column="24"/></name></expr>:<pos:position pos:line="55" pos:column="25"/></case>
      <case pos:line="56" pos:column="7">case <expr><name pos:line="56" pos:column="12">HTTPREQ_POST_FORM<pos:position pos:line="56" pos:column="29"/></name></expr>:<pos:position pos:line="56" pos:column="30"/></case>
        <expr_stmt><expr><name pos:line="57" pos:column="9">request<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <operator pos:line="57" pos:column="19">(<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="20">char<pos:position pos:line="57" pos:column="24"/></name> <operator pos:line="57" pos:column="25">*<pos:position pos:line="57" pos:column="26"/></operator><operator pos:line="57" pos:column="26">)<pos:position pos:line="57" pos:column="27"/></operator><literal type="string" pos:line="57" pos:column="27">"POST"<pos:position pos:line="57" pos:column="33"/></literal></expr>;<pos:position pos:line="57" pos:column="34"/></expr_stmt>
        <break pos:line="58" pos:column="9">break;<pos:position pos:line="58" pos:column="15"/></break>
      <case pos:line="59" pos:column="7">case <expr><name pos:line="59" pos:column="12">HTTPREQ_PUT<pos:position pos:line="59" pos:column="23"/></name></expr>:<pos:position pos:line="59" pos:column="24"/></case>
        <expr_stmt><expr><name pos:line="60" pos:column="9">request<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">=<pos:position pos:line="60" pos:column="18"/></operator> <operator pos:line="60" pos:column="19">(<pos:position pos:line="60" pos:column="20"/></operator><name pos:line="60" pos:column="20">char<pos:position pos:line="60" pos:column="24"/></name> <operator pos:line="60" pos:column="25">*<pos:position pos:line="60" pos:column="26"/></operator><operator pos:line="60" pos:column="26">)<pos:position pos:line="60" pos:column="27"/></operator><literal type="string" pos:line="60" pos:column="27">"PUT"<pos:position pos:line="60" pos:column="32"/></literal></expr>;<pos:position pos:line="60" pos:column="33"/></expr_stmt>
        <break pos:line="61" pos:column="9">break;<pos:position pos:line="61" pos:column="15"/></break>
      <default pos:line="62" pos:column="7">default:<pos:position pos:line="62" pos:column="15"/></default> <comment type="block" pos:line="62" pos:column="16">/* this should never happen */</comment>
      <case pos:line="63" pos:column="7">case <expr><name pos:line="63" pos:column="12">HTTPREQ_GET<pos:position pos:line="63" pos:column="23"/></name></expr>:<pos:position pos:line="63" pos:column="24"/></case>
        <expr_stmt><expr><name pos:line="64" pos:column="9">request<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">=<pos:position pos:line="64" pos:column="18"/></operator> <operator pos:line="64" pos:column="19">(<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="20">char<pos:position pos:line="64" pos:column="24"/></name> <operator pos:line="64" pos:column="25">*<pos:position pos:line="64" pos:column="26"/></operator><operator pos:line="64" pos:column="26">)<pos:position pos:line="64" pos:column="27"/></operator><literal type="string" pos:line="64" pos:column="27">"GET"<pos:position pos:line="64" pos:column="32"/></literal></expr>;<pos:position pos:line="64" pos:column="33"/></expr_stmt>
        <break pos:line="65" pos:column="9">break;<pos:position pos:line="65" pos:column="15"/></break>
      <case pos:line="66" pos:column="7">case <expr><name pos:line="66" pos:column="12">HTTPREQ_HEAD<pos:position pos:line="66" pos:column="24"/></name></expr>:<pos:position pos:line="66" pos:column="25"/></case>
        <expr_stmt><expr><name pos:line="67" pos:column="9">request<pos:position pos:line="67" pos:column="16"/></name> <operator pos:line="67" pos:column="17">=<pos:position pos:line="67" pos:column="18"/></operator> <operator pos:line="67" pos:column="19">(<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="20">char<pos:position pos:line="67" pos:column="24"/></name> <operator pos:line="67" pos:column="25">*<pos:position pos:line="67" pos:column="26"/></operator><operator pos:line="67" pos:column="26">)<pos:position pos:line="67" pos:column="27"/></operator><literal type="string" pos:line="67" pos:column="27">"HEAD"<pos:position pos:line="67" pos:column="33"/></literal></expr>;<pos:position pos:line="67" pos:column="34"/></expr_stmt>
        <break pos:line="68" pos:column="9">break;<pos:position pos:line="68" pos:column="15"/></break>
      }<pos:position pos:line="69" pos:column="8"/></block></switch>
    }<pos:position pos:line="70" pos:column="6"/></block></else></if>
  }<pos:position pos:line="71" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="73" pos:column="3">/* The User-Agent string might have been allocated in url.c already, because
     it might have been used in the proxy connect, but if we have got a header
     with the user-agent string specified, we erase the previously made string
     here. */</comment>
  <if pos:line="77" pos:column="3">if<condition pos:line="77" pos:column="5">(<expr><call><name pos:line="77" pos:column="6">checkheaders<pos:position pos:line="77" pos:column="18"/></name><argument_list pos:line="77" pos:column="18">(<argument><expr><name pos:line="77" pos:column="19">data<pos:position pos:line="77" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="25">"User-Agent:"<pos:position pos:line="77" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="39"/></argument_list></call> <operator pos:line="77" pos:column="40">&amp;&amp;<pos:position pos:line="77" pos:column="50"/></operator> <name><name pos:line="77" pos:column="43">conn<pos:position pos:line="77" pos:column="47"/></name><operator pos:line="77" pos:column="47">-&gt;<pos:position pos:line="77" pos:column="52"/></operator><name pos:line="77" pos:column="49">allocptr<pos:position pos:line="77" pos:column="57"/></name><operator pos:line="77" pos:column="57">.<pos:position pos:line="77" pos:column="58"/></operator><name pos:line="77" pos:column="58">uagent<pos:position pos:line="77" pos:column="64"/></name></name></expr>)<pos:position pos:line="77" pos:column="65"/></condition><then pos:line="77" pos:column="65"> <block pos:line="77" pos:column="66">{
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">free<pos:position pos:line="78" pos:column="9"/></name><argument_list pos:line="78" pos:column="9">(<argument><expr><name><name pos:line="78" pos:column="10">conn<pos:position pos:line="78" pos:column="14"/></name><operator pos:line="78" pos:column="14">-&gt;<pos:position pos:line="78" pos:column="19"/></operator><name pos:line="78" pos:column="16">allocptr<pos:position pos:line="78" pos:column="24"/></name><operator pos:line="78" pos:column="24">.<pos:position pos:line="78" pos:column="25"/></operator><name pos:line="78" pos:column="25">uagent<pos:position pos:line="78" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="79" pos:column="5">conn<pos:position pos:line="79" pos:column="9"/></name><operator pos:line="79" pos:column="9">-&gt;<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="11">allocptr<pos:position pos:line="79" pos:column="19"/></name><operator pos:line="79" pos:column="19">.<pos:position pos:line="79" pos:column="20"/></operator><name pos:line="79" pos:column="20">uagent<pos:position pos:line="79" pos:column="26"/></name></name><operator pos:line="79" pos:column="26">=<pos:position pos:line="79" pos:column="27"/></operator><name pos:line="79" pos:column="27">NULL<pos:position pos:line="79" pos:column="31"/></name></expr>;<pos:position pos:line="79" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="82" pos:column="3">/* setup the authentication headers */</comment>
  <expr_stmt><expr><name pos:line="83" pos:column="3">result<pos:position pos:line="83" pos:column="9"/></name> <operator pos:line="83" pos:column="10">=<pos:position pos:line="83" pos:column="11"/></operator> <call><name pos:line="83" pos:column="12">http_output_auth<pos:position pos:line="83" pos:column="28"/></name><argument_list pos:line="83" pos:column="28">(<argument><expr><name pos:line="83" pos:column="29">conn<pos:position pos:line="83" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="35">request<pos:position pos:line="83" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="44">ppath<pos:position pos:line="83" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="51">FALSE<pos:position pos:line="83" pos:column="56"/></name></expr></argument>)<pos:position pos:line="83" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="58"/></expr_stmt>
  <if pos:line="84" pos:column="3">if<condition pos:line="84" pos:column="5">(<expr><name pos:line="84" pos:column="6">result<pos:position pos:line="84" pos:column="12"/></name></expr>)<pos:position pos:line="84" pos:column="13"/></condition><then pos:line="84" pos:column="13">
    <block type="pseudo"><return pos:line="85" pos:column="5">return <expr><name pos:line="85" pos:column="12">result<pos:position pos:line="85" pos:column="18"/></name></expr>;<pos:position pos:line="85" pos:column="19"/></return></block></then></if>

  <if pos:line="87" pos:column="3">if<condition pos:line="87" pos:column="5">(<expr><operator pos:line="87" pos:column="6">(<pos:position pos:line="87" pos:column="7"/></operator><name><name pos:line="87" pos:column="7">data<pos:position pos:line="87" pos:column="11"/></name><operator pos:line="87" pos:column="11">-&gt;<pos:position pos:line="87" pos:column="16"/></operator><name pos:line="87" pos:column="13">state<pos:position pos:line="87" pos:column="18"/></name><operator pos:line="87" pos:column="18">.<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="19">authhost<pos:position pos:line="87" pos:column="27"/></name><operator pos:line="87" pos:column="27">.<pos:position pos:line="87" pos:column="28"/></operator><name pos:line="87" pos:column="28">multi<pos:position pos:line="87" pos:column="33"/></name></name> <operator pos:line="87" pos:column="34">||<pos:position pos:line="87" pos:column="36"/></operator> <name><name pos:line="87" pos:column="37">data<pos:position pos:line="87" pos:column="41"/></name><operator pos:line="87" pos:column="41">-&gt;<pos:position pos:line="87" pos:column="46"/></operator><name pos:line="87" pos:column="43">state<pos:position pos:line="87" pos:column="48"/></name><operator pos:line="87" pos:column="48">.<pos:position pos:line="87" pos:column="49"/></operator><name pos:line="87" pos:column="49">authproxy<pos:position pos:line="87" pos:column="58"/></name><operator pos:line="87" pos:column="58">.<pos:position pos:line="87" pos:column="59"/></operator><name pos:line="87" pos:column="59">multi<pos:position pos:line="87" pos:column="64"/></name></name><operator pos:line="87" pos:column="64">)<pos:position pos:line="87" pos:column="65"/></operator> <operator pos:line="87" pos:column="66">&amp;&amp;<pos:position pos:line="87" pos:column="76"/></operator>
     <operator pos:line="88" pos:column="6">(<pos:position pos:line="88" pos:column="7"/></operator><name pos:line="88" pos:column="7">httpreq<pos:position pos:line="88" pos:column="14"/></name> <operator pos:line="88" pos:column="15">!=<pos:position pos:line="88" pos:column="17"/></operator> <name pos:line="88" pos:column="18">HTTPREQ_GET<pos:position pos:line="88" pos:column="29"/></name><operator pos:line="88" pos:column="29">)<pos:position pos:line="88" pos:column="30"/></operator> <operator pos:line="88" pos:column="31">&amp;&amp;<pos:position pos:line="88" pos:column="41"/></operator>
     <operator pos:line="89" pos:column="6">(<pos:position pos:line="89" pos:column="7"/></operator><name pos:line="89" pos:column="7">httpreq<pos:position pos:line="89" pos:column="14"/></name> <operator pos:line="89" pos:column="15">!=<pos:position pos:line="89" pos:column="17"/></operator> <name pos:line="89" pos:column="18">HTTPREQ_HEAD<pos:position pos:line="89" pos:column="30"/></name><operator pos:line="89" pos:column="30">)<pos:position pos:line="89" pos:column="31"/></operator></expr>)<pos:position pos:line="89" pos:column="32"/></condition><then pos:line="89" pos:column="32"> <block pos:line="89" pos:column="33">{
    <comment type="block" pos:line="90" pos:column="5">/* Auth is required and we are not authenticated yet. Make a PUT or POST
       with content-length zero as a "probe". */</comment>
    <expr_stmt><expr><name><name pos:line="92" pos:column="5">conn<pos:position pos:line="92" pos:column="9"/></name><operator pos:line="92" pos:column="9">-&gt;<pos:position pos:line="92" pos:column="14"/></operator><name pos:line="92" pos:column="11">bits<pos:position pos:line="92" pos:column="15"/></name><operator pos:line="92" pos:column="15">.<pos:position pos:line="92" pos:column="16"/></operator><name pos:line="92" pos:column="16">authneg<pos:position pos:line="92" pos:column="23"/></name></name> <operator pos:line="92" pos:column="24">=<pos:position pos:line="92" pos:column="25"/></operator> <name pos:line="92" pos:column="26">TRUE<pos:position pos:line="92" pos:column="30"/></name></expr>;<pos:position pos:line="92" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="93" pos:column="4"/></block></then>
  <else pos:line="94" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="95" pos:column="5">conn<pos:position pos:line="95" pos:column="9"/></name><operator pos:line="95" pos:column="9">-&gt;<pos:position pos:line="95" pos:column="14"/></operator><name pos:line="95" pos:column="11">bits<pos:position pos:line="95" pos:column="15"/></name><operator pos:line="95" pos:column="15">.<pos:position pos:line="95" pos:column="16"/></operator><name pos:line="95" pos:column="16">authneg<pos:position pos:line="95" pos:column="23"/></name></name> <operator pos:line="95" pos:column="24">=<pos:position pos:line="95" pos:column="25"/></operator> <name pos:line="95" pos:column="26">FALSE<pos:position pos:line="95" pos:column="31"/></name></expr>;<pos:position pos:line="95" pos:column="32"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="97" pos:column="3">Curl_safefree<pos:position pos:line="97" pos:column="16"/></name><argument_list pos:line="97" pos:column="16">(<argument><expr><name><name pos:line="97" pos:column="17">conn<pos:position pos:line="97" pos:column="21"/></name><operator pos:line="97" pos:column="21">-&gt;<pos:position pos:line="97" pos:column="26"/></operator><name pos:line="97" pos:column="23">allocptr<pos:position pos:line="97" pos:column="31"/></name><operator pos:line="97" pos:column="31">.<pos:position pos:line="97" pos:column="32"/></operator><name pos:line="97" pos:column="32">ref<pos:position pos:line="97" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="37"/></expr_stmt>
  <if pos:line="98" pos:column="3">if<condition pos:line="98" pos:column="5">(<expr><name><name pos:line="98" pos:column="6">data<pos:position pos:line="98" pos:column="10"/></name><operator pos:line="98" pos:column="10">-&gt;<pos:position pos:line="98" pos:column="15"/></operator><name pos:line="98" pos:column="12">change<pos:position pos:line="98" pos:column="18"/></name><operator pos:line="98" pos:column="18">.<pos:position pos:line="98" pos:column="19"/></operator><name pos:line="98" pos:column="19">referer<pos:position pos:line="98" pos:column="26"/></name></name> <operator pos:line="98" pos:column="27">&amp;&amp;<pos:position pos:line="98" pos:column="37"/></operator> <operator pos:line="98" pos:column="30">!<pos:position pos:line="98" pos:column="31"/></operator><call><name pos:line="98" pos:column="31">checkheaders<pos:position pos:line="98" pos:column="43"/></name><argument_list pos:line="98" pos:column="43">(<argument><expr><name pos:line="98" pos:column="44">data<pos:position pos:line="98" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="50">"Referer:"<pos:position pos:line="98" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="62"/></condition><then pos:line="98" pos:column="62">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="99" pos:column="5">conn<pos:position pos:line="99" pos:column="9"/></name><operator pos:line="99" pos:column="9">-&gt;<pos:position pos:line="99" pos:column="14"/></operator><name pos:line="99" pos:column="11">allocptr<pos:position pos:line="99" pos:column="19"/></name><operator pos:line="99" pos:column="19">.<pos:position pos:line="99" pos:column="20"/></operator><name pos:line="99" pos:column="20">ref<pos:position pos:line="99" pos:column="23"/></name></name> <operator pos:line="99" pos:column="24">=<pos:position pos:line="99" pos:column="25"/></operator> <call><name pos:line="99" pos:column="26">aprintf<pos:position pos:line="99" pos:column="33"/></name><argument_list pos:line="99" pos:column="33">(<argument><expr><literal type="string" pos:line="99" pos:column="34">"Referer: %s\r\n"<pos:position pos:line="99" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="53">data<pos:position pos:line="99" pos:column="57"/></name><operator pos:line="99" pos:column="57">-&gt;<pos:position pos:line="99" pos:column="62"/></operator><name pos:line="99" pos:column="59">change<pos:position pos:line="99" pos:column="65"/></name><operator pos:line="99" pos:column="65">.<pos:position pos:line="99" pos:column="66"/></operator><name pos:line="99" pos:column="66">referer<pos:position pos:line="99" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="75"/></expr_stmt></block></then>
  <else pos:line="100" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="101" pos:column="5">conn<pos:position pos:line="101" pos:column="9"/></name><operator pos:line="101" pos:column="9">-&gt;<pos:position pos:line="101" pos:column="14"/></operator><name pos:line="101" pos:column="11">allocptr<pos:position pos:line="101" pos:column="19"/></name><operator pos:line="101" pos:column="19">.<pos:position pos:line="101" pos:column="20"/></operator><name pos:line="101" pos:column="20">ref<pos:position pos:line="101" pos:column="23"/></name></name> <operator pos:line="101" pos:column="24">=<pos:position pos:line="101" pos:column="25"/></operator> <name pos:line="101" pos:column="26">NULL<pos:position pos:line="101" pos:column="30"/></name></expr>;<pos:position pos:line="101" pos:column="31"/></expr_stmt></block></else></if>

  <if pos:line="103" pos:column="3">if<condition pos:line="103" pos:column="5">(<expr><name><name pos:line="103" pos:column="6">data<pos:position pos:line="103" pos:column="10"/></name><operator pos:line="103" pos:column="10">-&gt;<pos:position pos:line="103" pos:column="15"/></operator><name pos:line="103" pos:column="12">set<pos:position pos:line="103" pos:column="15"/></name><operator pos:line="103" pos:column="15">.<pos:position pos:line="103" pos:column="16"/></operator><name pos:line="103" pos:column="16">str<pos:position pos:line="103" pos:column="19"/></name><index pos:line="103" pos:column="19">[<expr><name pos:line="103" pos:column="20">STRING_COOKIE<pos:position pos:line="103" pos:column="33"/></name></expr>]<pos:position pos:line="103" pos:column="34"/></index></name> <operator pos:line="103" pos:column="35">&amp;&amp;<pos:position pos:line="103" pos:column="45"/></operator> <operator pos:line="103" pos:column="38">!<pos:position pos:line="103" pos:column="39"/></operator><call><name pos:line="103" pos:column="39">checkheaders<pos:position pos:line="103" pos:column="51"/></name><argument_list pos:line="103" pos:column="51">(<argument><expr><name pos:line="103" pos:column="52">data<pos:position pos:line="103" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="58">"Cookie:"<pos:position pos:line="103" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="69"/></condition><then pos:line="103" pos:column="69">
    <block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="5">addcookies<pos:position pos:line="104" pos:column="15"/></name> <operator pos:line="104" pos:column="16">=<pos:position pos:line="104" pos:column="17"/></operator> <name><name pos:line="104" pos:column="18">data<pos:position pos:line="104" pos:column="22"/></name><operator pos:line="104" pos:column="22">-&gt;<pos:position pos:line="104" pos:column="27"/></operator><name pos:line="104" pos:column="24">set<pos:position pos:line="104" pos:column="27"/></name><operator pos:line="104" pos:column="27">.<pos:position pos:line="104" pos:column="28"/></operator><name pos:line="104" pos:column="28">str<pos:position pos:line="104" pos:column="31"/></name><index pos:line="104" pos:column="31">[<expr><name pos:line="104" pos:column="32">STRING_COOKIE<pos:position pos:line="104" pos:column="45"/></name></expr>]<pos:position pos:line="104" pos:column="46"/></index></name></expr>;<pos:position pos:line="104" pos:column="47"/></expr_stmt></block></then></if>

  <if pos:line="106" pos:column="3">if<condition pos:line="106" pos:column="5">(<expr><operator pos:line="106" pos:column="6">!<pos:position pos:line="106" pos:column="7"/></operator><call><name pos:line="106" pos:column="7">checkheaders<pos:position pos:line="106" pos:column="19"/></name><argument_list pos:line="106" pos:column="19">(<argument><expr><name pos:line="106" pos:column="20">data<pos:position pos:line="106" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="26">"Accept-Encoding:"<pos:position pos:line="106" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="45"/></argument_list></call> <operator pos:line="106" pos:column="46">&amp;&amp;<pos:position pos:line="106" pos:column="56"/></operator>
     <name><name pos:line="107" pos:column="6">data<pos:position pos:line="107" pos:column="10"/></name><operator pos:line="107" pos:column="10">-&gt;<pos:position pos:line="107" pos:column="15"/></operator><name pos:line="107" pos:column="12">set<pos:position pos:line="107" pos:column="15"/></name><operator pos:line="107" pos:column="15">.<pos:position pos:line="107" pos:column="16"/></operator><name pos:line="107" pos:column="16">str<pos:position pos:line="107" pos:column="19"/></name><index pos:line="107" pos:column="19">[<expr><name pos:line="107" pos:column="20">STRING_ENCODING<pos:position pos:line="107" pos:column="35"/></name></expr>]<pos:position pos:line="107" pos:column="36"/></index></name></expr>)<pos:position pos:line="107" pos:column="37"/></condition><then pos:line="107" pos:column="37"> <block pos:line="107" pos:column="38">{
    <expr_stmt><expr><call><name pos:line="108" pos:column="5">Curl_safefree<pos:position pos:line="108" pos:column="18"/></name><argument_list pos:line="108" pos:column="18">(<argument><expr><name><name pos:line="108" pos:column="19">conn<pos:position pos:line="108" pos:column="23"/></name><operator pos:line="108" pos:column="23">-&gt;<pos:position pos:line="108" pos:column="28"/></operator><name pos:line="108" pos:column="25">allocptr<pos:position pos:line="108" pos:column="33"/></name><operator pos:line="108" pos:column="33">.<pos:position pos:line="108" pos:column="34"/></operator><name pos:line="108" pos:column="34">accept_encoding<pos:position pos:line="108" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="109" pos:column="5">conn<pos:position pos:line="109" pos:column="9"/></name><operator pos:line="109" pos:column="9">-&gt;<pos:position pos:line="109" pos:column="14"/></operator><name pos:line="109" pos:column="11">allocptr<pos:position pos:line="109" pos:column="19"/></name><operator pos:line="109" pos:column="19">.<pos:position pos:line="109" pos:column="20"/></operator><name pos:line="109" pos:column="20">accept_encoding<pos:position pos:line="109" pos:column="35"/></name></name> <operator pos:line="109" pos:column="36">=<pos:position pos:line="109" pos:column="37"/></operator>
      <call><name pos:line="110" pos:column="7">aprintf<pos:position pos:line="110" pos:column="14"/></name><argument_list pos:line="110" pos:column="14">(<argument><expr><literal type="string" pos:line="110" pos:column="15">"Accept-Encoding: %s\r\n"<pos:position pos:line="110" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="42">data<pos:position pos:line="110" pos:column="46"/></name><operator pos:line="110" pos:column="46">-&gt;<pos:position pos:line="110" pos:column="51"/></operator><name pos:line="110" pos:column="48">set<pos:position pos:line="110" pos:column="51"/></name><operator pos:line="110" pos:column="51">.<pos:position pos:line="110" pos:column="52"/></operator><name pos:line="110" pos:column="52">str<pos:position pos:line="110" pos:column="55"/></name><index pos:line="110" pos:column="55">[<expr><name pos:line="110" pos:column="56">STRING_ENCODING<pos:position pos:line="110" pos:column="71"/></name></expr>]<pos:position pos:line="110" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="110" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="74"/></expr_stmt>
    <if pos:line="111" pos:column="5">if<condition pos:line="111" pos:column="7">(<expr><operator pos:line="111" pos:column="8">!<pos:position pos:line="111" pos:column="9"/></operator><name><name pos:line="111" pos:column="9">conn<pos:position pos:line="111" pos:column="13"/></name><operator pos:line="111" pos:column="13">-&gt;<pos:position pos:line="111" pos:column="18"/></operator><name pos:line="111" pos:column="15">allocptr<pos:position pos:line="111" pos:column="23"/></name><operator pos:line="111" pos:column="23">.<pos:position pos:line="111" pos:column="24"/></operator><name pos:line="111" pos:column="24">accept_encoding<pos:position pos:line="111" pos:column="39"/></name></name></expr>)<pos:position pos:line="111" pos:column="40"/></condition><then pos:line="111" pos:column="40">
      <block type="pseudo"><return pos:line="112" pos:column="7">return <expr><name pos:line="112" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="112" pos:column="33"/></name></expr>;<pos:position pos:line="112" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="113" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="115" pos:column="3">ptr<pos:position pos:line="115" pos:column="6"/></name> <operator pos:line="115" pos:column="7">=<pos:position pos:line="115" pos:column="8"/></operator> <call><name pos:line="115" pos:column="9">checkheaders<pos:position pos:line="115" pos:column="21"/></name><argument_list pos:line="115" pos:column="21">(<argument><expr><name pos:line="115" pos:column="22">data<pos:position pos:line="115" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="28">"Transfer-Encoding:"<pos:position pos:line="115" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="50"/></expr_stmt>
  <if pos:line="116" pos:column="3">if<condition pos:line="116" pos:column="5">(<expr><name pos:line="116" pos:column="6">ptr<pos:position pos:line="116" pos:column="9"/></name></expr>)<pos:position pos:line="116" pos:column="10"/></condition><then pos:line="116" pos:column="10"> <block pos:line="116" pos:column="11">{
    <comment type="block" pos:line="117" pos:column="5">/* Some kind of TE is requested, check if 'chunked' is chosen */</comment>
    <expr_stmt><expr><name><name pos:line="118" pos:column="5">data<pos:position pos:line="118" pos:column="9"/></name><operator pos:line="118" pos:column="9">-&gt;<pos:position pos:line="118" pos:column="14"/></operator><name pos:line="118" pos:column="11">req<pos:position pos:line="118" pos:column="14"/></name><operator pos:line="118" pos:column="14">.<pos:position pos:line="118" pos:column="15"/></operator><name pos:line="118" pos:column="15">upload_chunky<pos:position pos:line="118" pos:column="28"/></name></name> <operator pos:line="118" pos:column="29">=<pos:position pos:line="118" pos:column="30"/></operator>
      <call><name pos:line="119" pos:column="7">Curl_compareheader<pos:position pos:line="119" pos:column="25"/></name><argument_list pos:line="119" pos:column="25">(<argument><expr><name pos:line="119" pos:column="26">ptr<pos:position pos:line="119" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="31">"Transfer-Encoding:"<pos:position pos:line="119" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="53">"chunked"<pos:position pos:line="119" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="120" pos:column="4"/></block></then>
  <else pos:line="121" pos:column="3">else <block pos:line="121" pos:column="8">{
    <if pos:line="122" pos:column="5">if<condition pos:line="122" pos:column="7">(<expr><operator pos:line="122" pos:column="8">(<pos:position pos:line="122" pos:column="9"/></operator><name><name pos:line="122" pos:column="9">conn<pos:position pos:line="122" pos:column="13"/></name><operator pos:line="122" pos:column="13">-&gt;<pos:position pos:line="122" pos:column="18"/></operator><name pos:line="122" pos:column="15">protocol<pos:position pos:line="122" pos:column="23"/></name></name><operator pos:line="122" pos:column="23">&amp;<pos:position pos:line="122" pos:column="28"/></operator><name pos:line="122" pos:column="24">PROT_HTTP<pos:position pos:line="122" pos:column="33"/></name><operator pos:line="122" pos:column="33">)<pos:position pos:line="122" pos:column="34"/></operator> <operator pos:line="122" pos:column="35">&amp;&amp;<pos:position pos:line="122" pos:column="45"/></operator>
        <name><name pos:line="123" pos:column="9">data<pos:position pos:line="123" pos:column="13"/></name><operator pos:line="123" pos:column="13">-&gt;<pos:position pos:line="123" pos:column="18"/></operator><name pos:line="123" pos:column="15">set<pos:position pos:line="123" pos:column="18"/></name><operator pos:line="123" pos:column="18">.<pos:position pos:line="123" pos:column="19"/></operator><name pos:line="123" pos:column="19">upload<pos:position pos:line="123" pos:column="25"/></name></name> <operator pos:line="123" pos:column="26">&amp;&amp;<pos:position pos:line="123" pos:column="36"/></operator>
        <operator pos:line="124" pos:column="9">(<pos:position pos:line="124" pos:column="10"/></operator><name><name pos:line="124" pos:column="10">data<pos:position pos:line="124" pos:column="14"/></name><operator pos:line="124" pos:column="14">-&gt;<pos:position pos:line="124" pos:column="19"/></operator><name pos:line="124" pos:column="16">set<pos:position pos:line="124" pos:column="19"/></name><operator pos:line="124" pos:column="19">.<pos:position pos:line="124" pos:column="20"/></operator><name pos:line="124" pos:column="20">infilesize<pos:position pos:line="124" pos:column="30"/></name></name> <operator pos:line="124" pos:column="31">==<pos:position pos:line="124" pos:column="33"/></operator> <operator pos:line="124" pos:column="34">-<pos:position pos:line="124" pos:column="35"/></operator><literal type="number" pos:line="124" pos:column="35">1<pos:position pos:line="124" pos:column="36"/></literal><operator pos:line="124" pos:column="36">)<pos:position pos:line="124" pos:column="37"/></operator> <operator pos:line="124" pos:column="38">&amp;&amp;<pos:position pos:line="124" pos:column="48"/></operator>
        <operator pos:line="125" pos:column="9">(<pos:position pos:line="125" pos:column="10"/></operator><name><name pos:line="125" pos:column="10">data<pos:position pos:line="125" pos:column="14"/></name><operator pos:line="125" pos:column="14">-&gt;<pos:position pos:line="125" pos:column="19"/></operator><name pos:line="125" pos:column="16">set<pos:position pos:line="125" pos:column="19"/></name><operator pos:line="125" pos:column="19">.<pos:position pos:line="125" pos:column="20"/></operator><name pos:line="125" pos:column="20">httpversion<pos:position pos:line="125" pos:column="31"/></name></name> <operator pos:line="125" pos:column="32">!=<pos:position pos:line="125" pos:column="34"/></operator> <name pos:line="125" pos:column="35">CURL_HTTP_VERSION_1_0<pos:position pos:line="125" pos:column="56"/></name><operator pos:line="125" pos:column="56">)<pos:position pos:line="125" pos:column="57"/></operator></expr>)<pos:position pos:line="125" pos:column="58"/></condition><then pos:line="125" pos:column="58"> <block pos:line="125" pos:column="59">{
      <comment type="block" pos:line="126" pos:column="7">/* HTTP, upload, unknown file size and not HTTP 1.0 */</comment>
      <expr_stmt><expr><name><name pos:line="127" pos:column="7">data<pos:position pos:line="127" pos:column="11"/></name><operator pos:line="127" pos:column="11">-&gt;<pos:position pos:line="127" pos:column="16"/></operator><name pos:line="127" pos:column="13">req<pos:position pos:line="127" pos:column="16"/></name><operator pos:line="127" pos:column="16">.<pos:position pos:line="127" pos:column="17"/></operator><name pos:line="127" pos:column="17">upload_chunky<pos:position pos:line="127" pos:column="30"/></name></name> <operator pos:line="127" pos:column="31">=<pos:position pos:line="127" pos:column="32"/></operator> <name pos:line="127" pos:column="33">TRUE<pos:position pos:line="127" pos:column="37"/></name></expr>;<pos:position pos:line="127" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="128" pos:column="6"/></block></then>
    <else pos:line="129" pos:column="5">else <block pos:line="129" pos:column="10">{
      <comment type="block" pos:line="130" pos:column="7">/* else, no chunky upload */</comment>
      <expr_stmt><expr><name><name pos:line="131" pos:column="7">data<pos:position pos:line="131" pos:column="11"/></name><operator pos:line="131" pos:column="11">-&gt;<pos:position pos:line="131" pos:column="16"/></operator><name pos:line="131" pos:column="13">req<pos:position pos:line="131" pos:column="16"/></name><operator pos:line="131" pos:column="16">.<pos:position pos:line="131" pos:column="17"/></operator><name pos:line="131" pos:column="17">upload_chunky<pos:position pos:line="131" pos:column="30"/></name></name> <operator pos:line="131" pos:column="31">=<pos:position pos:line="131" pos:column="32"/></operator> <name pos:line="131" pos:column="33">FALSE<pos:position pos:line="131" pos:column="38"/></name></expr>;<pos:position pos:line="131" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="132" pos:column="6"/></block></else></if>

    <if pos:line="134" pos:column="5">if<condition pos:line="134" pos:column="7">(<expr><name><name pos:line="134" pos:column="8">data<pos:position pos:line="134" pos:column="12"/></name><operator pos:line="134" pos:column="12">-&gt;<pos:position pos:line="134" pos:column="17"/></operator><name pos:line="134" pos:column="14">req<pos:position pos:line="134" pos:column="17"/></name><operator pos:line="134" pos:column="17">.<pos:position pos:line="134" pos:column="18"/></operator><name pos:line="134" pos:column="18">upload_chunky<pos:position pos:line="134" pos:column="31"/></name></name></expr>)<pos:position pos:line="134" pos:column="32"/></condition><then pos:line="134" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><name pos:line="135" pos:column="7">te<pos:position pos:line="135" pos:column="9"/></name> <operator pos:line="135" pos:column="10">=<pos:position pos:line="135" pos:column="11"/></operator> <literal type="string" pos:line="135" pos:column="12">"Transfer-Encoding: chunked\r\n"<pos:position pos:line="135" pos:column="44"/></literal></expr>;<pos:position pos:line="135" pos:column="45"/></expr_stmt></block></then></if>
  }<pos:position pos:line="136" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="138" pos:column="3">Curl_safefree<pos:position pos:line="138" pos:column="16"/></name><argument_list pos:line="138" pos:column="16">(<argument><expr><name><name pos:line="138" pos:column="17">conn<pos:position pos:line="138" pos:column="21"/></name><operator pos:line="138" pos:column="21">-&gt;<pos:position pos:line="138" pos:column="26"/></operator><name pos:line="138" pos:column="23">allocptr<pos:position pos:line="138" pos:column="31"/></name><operator pos:line="138" pos:column="31">.<pos:position pos:line="138" pos:column="32"/></operator><name pos:line="138" pos:column="32">host<pos:position pos:line="138" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="138" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><name pos:line="140" pos:column="3">ptr<pos:position pos:line="140" pos:column="6"/></name> <operator pos:line="140" pos:column="7">=<pos:position pos:line="140" pos:column="8"/></operator> <call><name pos:line="140" pos:column="9">checkheaders<pos:position pos:line="140" pos:column="21"/></name><argument_list pos:line="140" pos:column="21">(<argument><expr><name pos:line="140" pos:column="22">data<pos:position pos:line="140" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="28">"Host:"<pos:position pos:line="140" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="37"/></expr_stmt>
  <if pos:line="141" pos:column="3">if<condition pos:line="141" pos:column="5">(<expr><name pos:line="141" pos:column="6">ptr<pos:position pos:line="141" pos:column="9"/></name> <operator pos:line="141" pos:column="10">&amp;&amp;<pos:position pos:line="141" pos:column="20"/></operator> <operator pos:line="141" pos:column="13">(<pos:position pos:line="141" pos:column="14"/></operator><operator pos:line="141" pos:column="14">!<pos:position pos:line="141" pos:column="15"/></operator><name><name pos:line="141" pos:column="15">data<pos:position pos:line="141" pos:column="19"/></name><operator pos:line="141" pos:column="19">-&gt;<pos:position pos:line="141" pos:column="24"/></operator><name pos:line="141" pos:column="21">state<pos:position pos:line="141" pos:column="26"/></name><operator pos:line="141" pos:column="26">.<pos:position pos:line="141" pos:column="27"/></operator><name pos:line="141" pos:column="27">this_is_a_follow<pos:position pos:line="141" pos:column="43"/></name></name> <operator pos:line="141" pos:column="44">||<pos:position pos:line="141" pos:column="46"/></operator>
             <call><name pos:line="142" pos:column="14">curl_strequal<pos:position pos:line="142" pos:column="27"/></name><argument_list pos:line="142" pos:column="27">(<argument><expr><name><name pos:line="142" pos:column="28">data<pos:position pos:line="142" pos:column="32"/></name><operator pos:line="142" pos:column="32">-&gt;<pos:position pos:line="142" pos:column="37"/></operator><name pos:line="142" pos:column="34">state<pos:position pos:line="142" pos:column="39"/></name><operator pos:line="142" pos:column="39">.<pos:position pos:line="142" pos:column="40"/></operator><name pos:line="142" pos:column="40">first_host<pos:position pos:line="142" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="52">conn<pos:position pos:line="142" pos:column="56"/></name><operator pos:line="142" pos:column="56">-&gt;<pos:position pos:line="142" pos:column="61"/></operator><name pos:line="142" pos:column="58">host<pos:position pos:line="142" pos:column="62"/></name><operator pos:line="142" pos:column="62">.<pos:position pos:line="142" pos:column="63"/></operator><name pos:line="142" pos:column="63">name<pos:position pos:line="142" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="68"/></argument_list></call><operator pos:line="142" pos:column="68">)<pos:position pos:line="142" pos:column="69"/></operator></expr>)<pos:position pos:line="142" pos:column="70"/></condition><then pos:line="142" pos:column="70"> <block pos:line="142" pos:column="71">{
<cpp:if pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">if<pos:position pos:line="143" pos:column="4"/></cpp:directive> <expr><operator pos:line="143" pos:column="5">!<pos:position pos:line="143" pos:column="6"/></operator><call><name pos:line="143" pos:column="6">defined<pos:position pos:line="143" pos:column="13"/></name><argument_list pos:line="143" pos:column="13">(<argument><expr><name pos:line="143" pos:column="14">CURL_DISABLE_COOKIES<pos:position pos:line="143" pos:column="34"/></name></expr></argument>)<pos:position pos:line="143" pos:column="35"/></argument_list></call></expr></cpp:if>
    <comment type="block" pos:line="144" pos:column="5">/* If we have a given custom Host: header, we extract the host name in
       order to possibly use it for cookie reasons later on. We only allow the
       custom Host: header if this is NOT a redirect, as setting Host: in the
       redirected request is being out on thin ice. Except if the host name
       is the same as the first one! */</comment>
    <decl_stmt><decl><type><name pos:line="149" pos:column="5">char<pos:position pos:line="149" pos:column="9"/></name> <modifier pos:line="149" pos:column="10">*<pos:position pos:line="149" pos:column="11"/></modifier></type><name pos:line="149" pos:column="11">start<pos:position pos:line="149" pos:column="16"/></name> <init pos:line="149" pos:column="17">= <expr><name pos:line="149" pos:column="19">ptr<pos:position pos:line="149" pos:column="22"/></name><operator pos:line="149" pos:column="22">+<pos:position pos:line="149" pos:column="23"/></operator><call><name pos:line="149" pos:column="23">strlen<pos:position pos:line="149" pos:column="29"/></name><argument_list pos:line="149" pos:column="29">(<argument><expr><literal type="string" pos:line="149" pos:column="30">"Host:"<pos:position pos:line="149" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="149" pos:column="39"/></decl_stmt>
    <while pos:line="150" pos:column="5">while<condition pos:line="150" pos:column="10">(<expr><operator pos:line="150" pos:column="11">*<pos:position pos:line="150" pos:column="12"/></operator><name pos:line="150" pos:column="12">start<pos:position pos:line="150" pos:column="17"/></name> <operator pos:line="150" pos:column="18">&amp;&amp;<pos:position pos:line="150" pos:column="28"/></operator> <call><name pos:line="150" pos:column="21">ISSPACE<pos:position pos:line="150" pos:column="28"/></name><argument_list pos:line="150" pos:column="28">(<argument><expr><operator pos:line="150" pos:column="29">*<pos:position pos:line="150" pos:column="30"/></operator><name pos:line="150" pos:column="30">start<pos:position pos:line="150" pos:column="35"/></name></expr></argument> )<pos:position pos:line="150" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="150" pos:column="38"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="151" pos:column="7">start<pos:position pos:line="151" pos:column="12"/></name><operator pos:line="151" pos:column="12">++<pos:position pos:line="151" pos:column="14"/></operator></expr>;<pos:position pos:line="151" pos:column="15"/></expr_stmt></block></while>
    <expr_stmt><expr><name pos:line="152" pos:column="5">ptr<pos:position pos:line="152" pos:column="8"/></name> <operator pos:line="152" pos:column="9">=<pos:position pos:line="152" pos:column="10"/></operator> <name pos:line="152" pos:column="11">start<pos:position pos:line="152" pos:column="16"/></name></expr>;<pos:position pos:line="152" pos:column="17"/></expr_stmt> <comment type="block" pos:line="152" pos:column="18">/* start host-scanning here */</comment>

    <comment type="block" pos:line="154" pos:column="5">/* scan through the string to find the end (space or colon) */</comment>
    <while pos:line="155" pos:column="5">while<condition pos:line="155" pos:column="10">(<expr><operator pos:line="155" pos:column="11">*<pos:position pos:line="155" pos:column="12"/></operator><name pos:line="155" pos:column="12">ptr<pos:position pos:line="155" pos:column="15"/></name> <operator pos:line="155" pos:column="16">&amp;&amp;<pos:position pos:line="155" pos:column="26"/></operator> <operator pos:line="155" pos:column="19">!<pos:position pos:line="155" pos:column="20"/></operator><call><name pos:line="155" pos:column="20">ISSPACE<pos:position pos:line="155" pos:column="27"/></name><argument_list pos:line="155" pos:column="27">(<argument><expr><operator pos:line="155" pos:column="28">*<pos:position pos:line="155" pos:column="29"/></operator><name pos:line="155" pos:column="29">ptr<pos:position pos:line="155" pos:column="32"/></name></expr></argument>)<pos:position pos:line="155" pos:column="33"/></argument_list></call> <operator pos:line="155" pos:column="34">&amp;&amp;<pos:position pos:line="155" pos:column="44"/></operator> <operator pos:line="155" pos:column="37">!<pos:position pos:line="155" pos:column="38"/></operator><operator pos:line="155" pos:column="38">(<pos:position pos:line="155" pos:column="39"/></operator><literal type="char" pos:line="155" pos:column="39">':'<pos:position pos:line="155" pos:column="42"/></literal><operator pos:line="155" pos:column="42">==<pos:position pos:line="155" pos:column="44"/></operator><operator pos:line="155" pos:column="44">*<pos:position pos:line="155" pos:column="45"/></operator><name pos:line="155" pos:column="45">ptr<pos:position pos:line="155" pos:column="48"/></name><operator pos:line="155" pos:column="48">)<pos:position pos:line="155" pos:column="49"/></operator></expr>)<pos:position pos:line="155" pos:column="50"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="156" pos:column="7">ptr<pos:position pos:line="156" pos:column="10"/></name><operator pos:line="156" pos:column="10">++<pos:position pos:line="156" pos:column="12"/></operator></expr>;<pos:position pos:line="156" pos:column="13"/></expr_stmt></block></while>

    <if pos:line="158" pos:column="5">if<condition pos:line="158" pos:column="7">(<expr><name pos:line="158" pos:column="8">ptr<pos:position pos:line="158" pos:column="11"/></name> <operator pos:line="158" pos:column="12">!=<pos:position pos:line="158" pos:column="14"/></operator> <name pos:line="158" pos:column="15">start<pos:position pos:line="158" pos:column="20"/></name></expr>)<pos:position pos:line="158" pos:column="21"/></condition><then pos:line="158" pos:column="21"> <block pos:line="158" pos:column="22">{
      <decl_stmt><decl><type><name pos:line="159" pos:column="7">size_t<pos:position pos:line="159" pos:column="13"/></name></type> <name pos:line="159" pos:column="14">len<pos:position pos:line="159" pos:column="17"/></name><init pos:line="159" pos:column="17">=<expr><name pos:line="159" pos:column="18">ptr<pos:position pos:line="159" pos:column="21"/></name><operator pos:line="159" pos:column="21">-<pos:position pos:line="159" pos:column="22"/></operator><name pos:line="159" pos:column="22">start<pos:position pos:line="159" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="159" pos:column="28"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="160" pos:column="7">Curl_safefree<pos:position pos:line="160" pos:column="20"/></name><argument_list pos:line="160" pos:column="20">(<argument><expr><name><name pos:line="160" pos:column="21">conn<pos:position pos:line="160" pos:column="25"/></name><operator pos:line="160" pos:column="25">-&gt;<pos:position pos:line="160" pos:column="30"/></operator><name pos:line="160" pos:column="27">allocptr<pos:position pos:line="160" pos:column="35"/></name><operator pos:line="160" pos:column="35">.<pos:position pos:line="160" pos:column="36"/></operator><name pos:line="160" pos:column="36">cookiehost<pos:position pos:line="160" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="160" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="161" pos:column="7">conn<pos:position pos:line="161" pos:column="11"/></name><operator pos:line="161" pos:column="11">-&gt;<pos:position pos:line="161" pos:column="16"/></operator><name pos:line="161" pos:column="13">allocptr<pos:position pos:line="161" pos:column="21"/></name><operator pos:line="161" pos:column="21">.<pos:position pos:line="161" pos:column="22"/></operator><name pos:line="161" pos:column="22">cookiehost<pos:position pos:line="161" pos:column="32"/></name></name> <operator pos:line="161" pos:column="33">=<pos:position pos:line="161" pos:column="34"/></operator> <call><name pos:line="161" pos:column="35">malloc<pos:position pos:line="161" pos:column="41"/></name><argument_list pos:line="161" pos:column="41">(<argument><expr><name pos:line="161" pos:column="42">len<pos:position pos:line="161" pos:column="45"/></name><operator pos:line="161" pos:column="45">+<pos:position pos:line="161" pos:column="46"/></operator><literal type="number" pos:line="161" pos:column="46">1<pos:position pos:line="161" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="49"/></expr_stmt>
      <if pos:line="162" pos:column="7">if<condition pos:line="162" pos:column="9">(<expr><operator pos:line="162" pos:column="10">!<pos:position pos:line="162" pos:column="11"/></operator><name><name pos:line="162" pos:column="11">conn<pos:position pos:line="162" pos:column="15"/></name><operator pos:line="162" pos:column="15">-&gt;<pos:position pos:line="162" pos:column="20"/></operator><name pos:line="162" pos:column="17">allocptr<pos:position pos:line="162" pos:column="25"/></name><operator pos:line="162" pos:column="25">.<pos:position pos:line="162" pos:column="26"/></operator><name pos:line="162" pos:column="26">cookiehost<pos:position pos:line="162" pos:column="36"/></name></name></expr>)<pos:position pos:line="162" pos:column="37"/></condition><then pos:line="162" pos:column="37">
        <block type="pseudo"><return pos:line="163" pos:column="9">return <expr><name pos:line="163" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="163" pos:column="35"/></name></expr>;<pos:position pos:line="163" pos:column="36"/></return></block></then></if>
      <expr_stmt><expr><call><name pos:line="164" pos:column="7">memcpy<pos:position pos:line="164" pos:column="13"/></name><argument_list pos:line="164" pos:column="13">(<argument><expr><name><name pos:line="164" pos:column="14">conn<pos:position pos:line="164" pos:column="18"/></name><operator pos:line="164" pos:column="18">-&gt;<pos:position pos:line="164" pos:column="23"/></operator><name pos:line="164" pos:column="20">allocptr<pos:position pos:line="164" pos:column="28"/></name><operator pos:line="164" pos:column="28">.<pos:position pos:line="164" pos:column="29"/></operator><name pos:line="164" pos:column="29">cookiehost<pos:position pos:line="164" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="41">start<pos:position pos:line="164" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="48">len<pos:position pos:line="164" pos:column="51"/></name></expr></argument>)<pos:position pos:line="164" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="165" pos:column="7">conn<pos:position pos:line="165" pos:column="11"/></name><operator pos:line="165" pos:column="11">-&gt;<pos:position pos:line="165" pos:column="16"/></operator><name pos:line="165" pos:column="13">allocptr<pos:position pos:line="165" pos:column="21"/></name><operator pos:line="165" pos:column="21">.<pos:position pos:line="165" pos:column="22"/></operator><name pos:line="165" pos:column="22">cookiehost<pos:position pos:line="165" pos:column="32"/></name><index pos:line="165" pos:column="32">[<expr><name pos:line="165" pos:column="33">len<pos:position pos:line="165" pos:column="36"/></name></expr>]<pos:position pos:line="165" pos:column="37"/></index></name><operator pos:line="165" pos:column="37">=<pos:position pos:line="165" pos:column="38"/></operator><literal type="number" pos:line="165" pos:column="38">0<pos:position pos:line="165" pos:column="39"/></literal></expr>;<pos:position pos:line="165" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="166" pos:column="6"/></block></then></if>
<cpp:endif pos:line="167" pos:column="1">#<cpp:directive pos:line="167" pos:column="2">endif<pos:position pos:line="167" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="169" pos:column="5">conn<pos:position pos:line="169" pos:column="9"/></name><operator pos:line="169" pos:column="9">-&gt;<pos:position pos:line="169" pos:column="14"/></operator><name pos:line="169" pos:column="11">allocptr<pos:position pos:line="169" pos:column="19"/></name><operator pos:line="169" pos:column="19">.<pos:position pos:line="169" pos:column="20"/></operator><name pos:line="169" pos:column="20">host<pos:position pos:line="169" pos:column="24"/></name></name> <operator pos:line="169" pos:column="25">=<pos:position pos:line="169" pos:column="26"/></operator> <name pos:line="169" pos:column="27">NULL<pos:position pos:line="169" pos:column="31"/></name></expr>;<pos:position pos:line="169" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="170" pos:column="4"/></block></then>
  <else pos:line="171" pos:column="3">else <block pos:line="171" pos:column="8">{
    <comment type="block" pos:line="172" pos:column="5">/* When building Host: headers, we must put the host name within
       [brackets] if the host name is a plain IPv6-address. RFC2732-style. */</comment>

    <if pos:line="175" pos:column="5">if<condition pos:line="175" pos:column="7">(<expr><operator pos:line="175" pos:column="8">(<pos:position pos:line="175" pos:column="9"/></operator><operator pos:line="175" pos:column="9">(<pos:position pos:line="175" pos:column="10"/></operator><name><name pos:line="175" pos:column="10">conn<pos:position pos:line="175" pos:column="14"/></name><operator pos:line="175" pos:column="14">-&gt;<pos:position pos:line="175" pos:column="19"/></operator><name pos:line="175" pos:column="16">protocol<pos:position pos:line="175" pos:column="24"/></name></name><operator pos:line="175" pos:column="24">&amp;<pos:position pos:line="175" pos:column="29"/></operator><name pos:line="175" pos:column="25">PROT_HTTPS<pos:position pos:line="175" pos:column="35"/></name><operator pos:line="175" pos:column="35">)<pos:position pos:line="175" pos:column="36"/></operator> <operator pos:line="175" pos:column="37">&amp;&amp;<pos:position pos:line="175" pos:column="47"/></operator> <operator pos:line="175" pos:column="40">(<pos:position pos:line="175" pos:column="41"/></operator><name><name pos:line="175" pos:column="41">conn<pos:position pos:line="175" pos:column="45"/></name><operator pos:line="175" pos:column="45">-&gt;<pos:position pos:line="175" pos:column="50"/></operator><name pos:line="175" pos:column="47">remote_port<pos:position pos:line="175" pos:column="58"/></name></name> <operator pos:line="175" pos:column="59">==<pos:position pos:line="175" pos:column="61"/></operator> <name pos:line="175" pos:column="62">PORT_HTTPS<pos:position pos:line="175" pos:column="72"/></name><operator pos:line="175" pos:column="72">)<pos:position pos:line="175" pos:column="73"/></operator><operator pos:line="175" pos:column="73">)<pos:position pos:line="175" pos:column="74"/></operator> <operator pos:line="175" pos:column="75">||<pos:position pos:line="175" pos:column="77"/></operator>
       <operator pos:line="176" pos:column="8">(<pos:position pos:line="176" pos:column="9"/></operator><operator pos:line="176" pos:column="9">!<pos:position pos:line="176" pos:column="10"/></operator><operator pos:line="176" pos:column="10">(<pos:position pos:line="176" pos:column="11"/></operator><name><name pos:line="176" pos:column="11">conn<pos:position pos:line="176" pos:column="15"/></name><operator pos:line="176" pos:column="15">-&gt;<pos:position pos:line="176" pos:column="20"/></operator><name pos:line="176" pos:column="17">protocol<pos:position pos:line="176" pos:column="25"/></name></name><operator pos:line="176" pos:column="25">&amp;<pos:position pos:line="176" pos:column="30"/></operator><name pos:line="176" pos:column="26">PROT_HTTPS<pos:position pos:line="176" pos:column="36"/></name><operator pos:line="176" pos:column="36">)<pos:position pos:line="176" pos:column="37"/></operator> <operator pos:line="176" pos:column="38">&amp;&amp;<pos:position pos:line="176" pos:column="48"/></operator> <operator pos:line="176" pos:column="41">(<pos:position pos:line="176" pos:column="42"/></operator><name><name pos:line="176" pos:column="42">conn<pos:position pos:line="176" pos:column="46"/></name><operator pos:line="176" pos:column="46">-&gt;<pos:position pos:line="176" pos:column="51"/></operator><name pos:line="176" pos:column="48">remote_port<pos:position pos:line="176" pos:column="59"/></name></name> <operator pos:line="176" pos:column="60">==<pos:position pos:line="176" pos:column="62"/></operator> <name pos:line="176" pos:column="63">PORT_HTTP<pos:position pos:line="176" pos:column="72"/></name><operator pos:line="176" pos:column="72">)<pos:position pos:line="176" pos:column="73"/></operator><operator pos:line="176" pos:column="73">)<pos:position pos:line="176" pos:column="74"/></operator></expr> )<pos:position pos:line="176" pos:column="76"/></condition><then pos:line="176" pos:column="76">
      <comment type="block" pos:line="177" pos:column="7">/* if(HTTPS on port 443) OR (non-HTTPS on port 80) then don't include
         the port number in the host string */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="179" pos:column="7">conn<pos:position pos:line="179" pos:column="11"/></name><operator pos:line="179" pos:column="11">-&gt;<pos:position pos:line="179" pos:column="16"/></operator><name pos:line="179" pos:column="13">allocptr<pos:position pos:line="179" pos:column="21"/></name><operator pos:line="179" pos:column="21">.<pos:position pos:line="179" pos:column="22"/></operator><name pos:line="179" pos:column="22">host<pos:position pos:line="179" pos:column="26"/></name></name> <operator pos:line="179" pos:column="27">=<pos:position pos:line="179" pos:column="28"/></operator> <call><name pos:line="179" pos:column="29">aprintf<pos:position pos:line="179" pos:column="36"/></name><argument_list pos:line="179" pos:column="36">(<argument><expr><literal type="string" pos:line="179" pos:column="37">"Host: %s%s%s\r\n"<pos:position pos:line="179" pos:column="55"/></literal></expr></argument>,
                                    <argument><expr><ternary><condition><expr><name><name pos:line="180" pos:column="37">conn<pos:position pos:line="180" pos:column="41"/></name><operator pos:line="180" pos:column="41">-&gt;<pos:position pos:line="180" pos:column="46"/></operator><name pos:line="180" pos:column="43">bits<pos:position pos:line="180" pos:column="47"/></name><operator pos:line="180" pos:column="47">.<pos:position pos:line="180" pos:column="48"/></operator><name pos:line="180" pos:column="48">ipv6_ip<pos:position pos:line="180" pos:column="55"/></name></name></expr>?<pos:position pos:line="180" pos:column="56"/></condition><then><expr><literal type="string" pos:line="180" pos:column="56">"["<pos:position pos:line="180" pos:column="59"/></literal></expr></then><else pos:line="180" pos:column="59">:<expr><literal type="string" pos:line="180" pos:column="60">""<pos:position pos:line="180" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
                                    <argument><expr><name pos:line="181" pos:column="37">host<pos:position pos:line="181" pos:column="41"/></name></expr></argument>,
                                    <argument><expr><ternary><condition><expr><name><name pos:line="182" pos:column="37">conn<pos:position pos:line="182" pos:column="41"/></name><operator pos:line="182" pos:column="41">-&gt;<pos:position pos:line="182" pos:column="46"/></operator><name pos:line="182" pos:column="43">bits<pos:position pos:line="182" pos:column="47"/></name><operator pos:line="182" pos:column="47">.<pos:position pos:line="182" pos:column="48"/></operator><name pos:line="182" pos:column="48">ipv6_ip<pos:position pos:line="182" pos:column="55"/></name></name></expr>?<pos:position pos:line="182" pos:column="56"/></condition><then><expr><literal type="string" pos:line="182" pos:column="56">"]"<pos:position pos:line="182" pos:column="59"/></literal></expr></then><else pos:line="182" pos:column="59">:<expr><literal type="string" pos:line="182" pos:column="60">""<pos:position pos:line="182" pos:column="62"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="182" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="64"/></expr_stmt></block></then>
    <else pos:line="183" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="184" pos:column="7">conn<pos:position pos:line="184" pos:column="11"/></name><operator pos:line="184" pos:column="11">-&gt;<pos:position pos:line="184" pos:column="16"/></operator><name pos:line="184" pos:column="13">allocptr<pos:position pos:line="184" pos:column="21"/></name><operator pos:line="184" pos:column="21">.<pos:position pos:line="184" pos:column="22"/></operator><name pos:line="184" pos:column="22">host<pos:position pos:line="184" pos:column="26"/></name></name> <operator pos:line="184" pos:column="27">=<pos:position pos:line="184" pos:column="28"/></operator> <call><name pos:line="184" pos:column="29">aprintf<pos:position pos:line="184" pos:column="36"/></name><argument_list pos:line="184" pos:column="36">(<argument><expr><literal type="string" pos:line="184" pos:column="37">"Host: %s%s%s:%d\r\n"<pos:position pos:line="184" pos:column="58"/></literal></expr></argument>,
                                    <argument><expr><ternary><condition><expr><name><name pos:line="185" pos:column="37">conn<pos:position pos:line="185" pos:column="41"/></name><operator pos:line="185" pos:column="41">-&gt;<pos:position pos:line="185" pos:column="46"/></operator><name pos:line="185" pos:column="43">bits<pos:position pos:line="185" pos:column="47"/></name><operator pos:line="185" pos:column="47">.<pos:position pos:line="185" pos:column="48"/></operator><name pos:line="185" pos:column="48">ipv6_ip<pos:position pos:line="185" pos:column="55"/></name></name></expr>?<pos:position pos:line="185" pos:column="56"/></condition><then><expr><literal type="string" pos:line="185" pos:column="56">"["<pos:position pos:line="185" pos:column="59"/></literal></expr></then><else pos:line="185" pos:column="59">:<expr><literal type="string" pos:line="185" pos:column="60">""<pos:position pos:line="185" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
                                    <argument><expr><name pos:line="186" pos:column="37">host<pos:position pos:line="186" pos:column="41"/></name></expr></argument>,
                                    <argument><expr><ternary><condition><expr><name><name pos:line="187" pos:column="37">conn<pos:position pos:line="187" pos:column="41"/></name><operator pos:line="187" pos:column="41">-&gt;<pos:position pos:line="187" pos:column="46"/></operator><name pos:line="187" pos:column="43">bits<pos:position pos:line="187" pos:column="47"/></name><operator pos:line="187" pos:column="47">.<pos:position pos:line="187" pos:column="48"/></operator><name pos:line="187" pos:column="48">ipv6_ip<pos:position pos:line="187" pos:column="55"/></name></name></expr>?<pos:position pos:line="187" pos:column="56"/></condition><then><expr><literal type="string" pos:line="187" pos:column="56">"]"<pos:position pos:line="187" pos:column="59"/></literal></expr></then><else pos:line="187" pos:column="59">:<expr><literal type="string" pos:line="187" pos:column="60">""<pos:position pos:line="187" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
                                    <argument><expr><name><name pos:line="188" pos:column="37">conn<pos:position pos:line="188" pos:column="41"/></name><operator pos:line="188" pos:column="41">-&gt;<pos:position pos:line="188" pos:column="46"/></operator><name pos:line="188" pos:column="43">remote_port<pos:position pos:line="188" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="188" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="56"/></expr_stmt></block></else></if>

    <if pos:line="190" pos:column="5">if<condition pos:line="190" pos:column="7">(<expr><operator pos:line="190" pos:column="8">!<pos:position pos:line="190" pos:column="9"/></operator><name><name pos:line="190" pos:column="9">conn<pos:position pos:line="190" pos:column="13"/></name><operator pos:line="190" pos:column="13">-&gt;<pos:position pos:line="190" pos:column="18"/></operator><name pos:line="190" pos:column="15">allocptr<pos:position pos:line="190" pos:column="23"/></name><operator pos:line="190" pos:column="23">.<pos:position pos:line="190" pos:column="24"/></operator><name pos:line="190" pos:column="24">host<pos:position pos:line="190" pos:column="28"/></name></name></expr>)<pos:position pos:line="190" pos:column="29"/></condition><then pos:line="190" pos:column="29">
      <comment type="block" pos:line="191" pos:column="7">/* without Host: we can't make a nice request */</comment>
      <block type="pseudo"><return pos:line="192" pos:column="7">return <expr><name pos:line="192" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="192" pos:column="33"/></name></expr>;<pos:position pos:line="192" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="193" pos:column="4"/></block></else></if>

  <if pos:line="195" pos:column="3">if<condition pos:line="195" pos:column="5">(<expr><name><name pos:line="195" pos:column="6">conn<pos:position pos:line="195" pos:column="10"/></name><operator pos:line="195" pos:column="10">-&gt;<pos:position pos:line="195" pos:column="15"/></operator><name pos:line="195" pos:column="12">bits<pos:position pos:line="195" pos:column="16"/></name><operator pos:line="195" pos:column="16">.<pos:position pos:line="195" pos:column="17"/></operator><name pos:line="195" pos:column="17">httpproxy<pos:position pos:line="195" pos:column="26"/></name></name> <operator pos:line="195" pos:column="27">&amp;&amp;<pos:position pos:line="195" pos:column="37"/></operator> <operator pos:line="195" pos:column="30">!<pos:position pos:line="195" pos:column="31"/></operator><name><name pos:line="195" pos:column="31">conn<pos:position pos:line="195" pos:column="35"/></name><operator pos:line="195" pos:column="35">-&gt;<pos:position pos:line="195" pos:column="40"/></operator><name pos:line="195" pos:column="37">bits<pos:position pos:line="195" pos:column="41"/></name><operator pos:line="195" pos:column="41">.<pos:position pos:line="195" pos:column="42"/></operator><name pos:line="195" pos:column="42">tunnel_proxy<pos:position pos:line="195" pos:column="54"/></name></name></expr>)<pos:position pos:line="195" pos:column="55"/></condition><then pos:line="195" pos:column="55">  <block pos:line="195" pos:column="57">{
    <comment type="block" pos:line="196" pos:column="5">/* Using a proxy but does not tunnel through it */</comment>

    <comment type="block" pos:line="198" pos:column="5">/* The path sent to the proxy is in fact the entire URL. But if the remote
       host is a IDN-name, we must make sure that the request we produce only
       uses the encoded host name! */</comment>
    <if pos:line="201" pos:column="5">if<condition pos:line="201" pos:column="7">(<expr><name><name pos:line="201" pos:column="8">conn<pos:position pos:line="201" pos:column="12"/></name><operator pos:line="201" pos:column="12">-&gt;<pos:position pos:line="201" pos:column="17"/></operator><name pos:line="201" pos:column="14">host<pos:position pos:line="201" pos:column="18"/></name><operator pos:line="201" pos:column="18">.<pos:position pos:line="201" pos:column="19"/></operator><name pos:line="201" pos:column="19">dispname<pos:position pos:line="201" pos:column="27"/></name></name> <operator pos:line="201" pos:column="28">!=<pos:position pos:line="201" pos:column="30"/></operator> <name><name pos:line="201" pos:column="31">conn<pos:position pos:line="201" pos:column="35"/></name><operator pos:line="201" pos:column="35">-&gt;<pos:position pos:line="201" pos:column="40"/></operator><name pos:line="201" pos:column="37">host<pos:position pos:line="201" pos:column="41"/></name><operator pos:line="201" pos:column="41">.<pos:position pos:line="201" pos:column="42"/></operator><name pos:line="201" pos:column="42">name<pos:position pos:line="201" pos:column="46"/></name></name></expr>)<pos:position pos:line="201" pos:column="47"/></condition><then pos:line="201" pos:column="47"> <block pos:line="201" pos:column="48">{
      <decl_stmt><decl><type><name pos:line="202" pos:column="7">char<pos:position pos:line="202" pos:column="11"/></name> <modifier pos:line="202" pos:column="12">*<pos:position pos:line="202" pos:column="13"/></modifier></type><name pos:line="202" pos:column="13">url<pos:position pos:line="202" pos:column="16"/></name> <init pos:line="202" pos:column="17">= <expr><name><name pos:line="202" pos:column="19">data<pos:position pos:line="202" pos:column="23"/></name><operator pos:line="202" pos:column="23">-&gt;<pos:position pos:line="202" pos:column="28"/></operator><name pos:line="202" pos:column="25">change<pos:position pos:line="202" pos:column="31"/></name><operator pos:line="202" pos:column="31">.<pos:position pos:line="202" pos:column="32"/></operator><name pos:line="202" pos:column="32">url<pos:position pos:line="202" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="202" pos:column="36"/></decl_stmt>
      <expr_stmt><expr><name pos:line="203" pos:column="7">ptr<pos:position pos:line="203" pos:column="10"/></name> <operator pos:line="203" pos:column="11">=<pos:position pos:line="203" pos:column="12"/></operator> <call><name pos:line="203" pos:column="13">strstr<pos:position pos:line="203" pos:column="19"/></name><argument_list pos:line="203" pos:column="19">(<argument><expr><name pos:line="203" pos:column="20">url<pos:position pos:line="203" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="203" pos:column="25">conn<pos:position pos:line="203" pos:column="29"/></name><operator pos:line="203" pos:column="29">-&gt;<pos:position pos:line="203" pos:column="34"/></operator><name pos:line="203" pos:column="31">host<pos:position pos:line="203" pos:column="35"/></name><operator pos:line="203" pos:column="35">.<pos:position pos:line="203" pos:column="36"/></operator><name pos:line="203" pos:column="36">dispname<pos:position pos:line="203" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="203" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="46"/></expr_stmt>
      <if pos:line="204" pos:column="7">if<condition pos:line="204" pos:column="9">(<expr><name pos:line="204" pos:column="10">ptr<pos:position pos:line="204" pos:column="13"/></name></expr>)<pos:position pos:line="204" pos:column="14"/></condition><then pos:line="204" pos:column="14"> <block pos:line="204" pos:column="15">{
        <comment type="block" pos:line="205" pos:column="9">/* This is where the display name starts in the URL, now replace this
           part with the encoded name. TODO: This method of replacing the host
           name is rather crude as I believe there's a slight risk that the
           user has entered a user name or password that contain the host name
           string. */</comment>
        <decl_stmt><decl><type><name pos:line="210" pos:column="9">size_t<pos:position pos:line="210" pos:column="15"/></name></type> <name pos:line="210" pos:column="16">currlen<pos:position pos:line="210" pos:column="23"/></name> <init pos:line="210" pos:column="24">= <expr><call><name pos:line="210" pos:column="26">strlen<pos:position pos:line="210" pos:column="32"/></name><argument_list pos:line="210" pos:column="32">(<argument><expr><name><name pos:line="210" pos:column="33">conn<pos:position pos:line="210" pos:column="37"/></name><operator pos:line="210" pos:column="37">-&gt;<pos:position pos:line="210" pos:column="42"/></operator><name pos:line="210" pos:column="39">host<pos:position pos:line="210" pos:column="43"/></name><operator pos:line="210" pos:column="43">.<pos:position pos:line="210" pos:column="44"/></operator><name pos:line="210" pos:column="44">dispname<pos:position pos:line="210" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="210" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="210" pos:column="54"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="211" pos:column="9">size_t<pos:position pos:line="211" pos:column="15"/></name></type> <name pos:line="211" pos:column="16">newlen<pos:position pos:line="211" pos:column="22"/></name> <init pos:line="211" pos:column="23">= <expr><call><name pos:line="211" pos:column="25">strlen<pos:position pos:line="211" pos:column="31"/></name><argument_list pos:line="211" pos:column="31">(<argument><expr><name><name pos:line="211" pos:column="32">conn<pos:position pos:line="211" pos:column="36"/></name><operator pos:line="211" pos:column="36">-&gt;<pos:position pos:line="211" pos:column="41"/></operator><name pos:line="211" pos:column="38">host<pos:position pos:line="211" pos:column="42"/></name><operator pos:line="211" pos:column="42">.<pos:position pos:line="211" pos:column="43"/></operator><name pos:line="211" pos:column="43">name<pos:position pos:line="211" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="211" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="211" pos:column="49"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="212" pos:column="9">size_t<pos:position pos:line="212" pos:column="15"/></name></type> <name pos:line="212" pos:column="16">urllen<pos:position pos:line="212" pos:column="22"/></name> <init pos:line="212" pos:column="23">= <expr><call><name pos:line="212" pos:column="25">strlen<pos:position pos:line="212" pos:column="31"/></name><argument_list pos:line="212" pos:column="31">(<argument><expr><name pos:line="212" pos:column="32">url<pos:position pos:line="212" pos:column="35"/></name></expr></argument>)<pos:position pos:line="212" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="212" pos:column="37"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="214" pos:column="9">char<pos:position pos:line="214" pos:column="13"/></name> <modifier pos:line="214" pos:column="14">*<pos:position pos:line="214" pos:column="15"/></modifier></type><name pos:line="214" pos:column="15">newurl<pos:position pos:line="214" pos:column="21"/></name></decl>;<pos:position pos:line="214" pos:column="22"/></decl_stmt>

        <expr_stmt><expr><name pos:line="216" pos:column="9">newurl<pos:position pos:line="216" pos:column="15"/></name> <operator pos:line="216" pos:column="16">=<pos:position pos:line="216" pos:column="17"/></operator> <call><name pos:line="216" pos:column="18">malloc<pos:position pos:line="216" pos:column="24"/></name><argument_list pos:line="216" pos:column="24">(<argument><expr><name pos:line="216" pos:column="25">urllen<pos:position pos:line="216" pos:column="31"/></name> <operator pos:line="216" pos:column="32">+<pos:position pos:line="216" pos:column="33"/></operator> <name pos:line="216" pos:column="34">newlen<pos:position pos:line="216" pos:column="40"/></name> <operator pos:line="216" pos:column="41">-<pos:position pos:line="216" pos:column="42"/></operator> <name pos:line="216" pos:column="43">currlen<pos:position pos:line="216" pos:column="50"/></name> <operator pos:line="216" pos:column="51">+<pos:position pos:line="216" pos:column="52"/></operator> <literal type="number" pos:line="216" pos:column="53">1<pos:position pos:line="216" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="56"/></expr_stmt>
        <if pos:line="217" pos:column="9">if<condition pos:line="217" pos:column="11">(<expr><name pos:line="217" pos:column="12">newurl<pos:position pos:line="217" pos:column="18"/></name></expr>)<pos:position pos:line="217" pos:column="19"/></condition><then pos:line="217" pos:column="19"> <block pos:line="217" pos:column="20">{
          <comment type="block" pos:line="218" pos:column="11">/* copy the part before the host name */</comment>
          <expr_stmt><expr><call><name pos:line="219" pos:column="11">memcpy<pos:position pos:line="219" pos:column="17"/></name><argument_list pos:line="219" pos:column="17">(<argument><expr><name pos:line="219" pos:column="18">newurl<pos:position pos:line="219" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="26">url<pos:position pos:line="219" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="31">ptr<pos:position pos:line="219" pos:column="34"/></name> <operator pos:line="219" pos:column="35">-<pos:position pos:line="219" pos:column="36"/></operator> <name pos:line="219" pos:column="37">url<pos:position pos:line="219" pos:column="40"/></name></expr></argument>)<pos:position pos:line="219" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="42"/></expr_stmt>
          <comment type="block" pos:line="220" pos:column="11">/* append the new host name instead of the old */</comment>
          <expr_stmt><expr><call><name pos:line="221" pos:column="11">memcpy<pos:position pos:line="221" pos:column="17"/></name><argument_list pos:line="221" pos:column="17">(<argument><expr><name pos:line="221" pos:column="18">newurl<pos:position pos:line="221" pos:column="24"/></name> <operator pos:line="221" pos:column="25">+<pos:position pos:line="221" pos:column="26"/></operator> <operator pos:line="221" pos:column="27">(<pos:position pos:line="221" pos:column="28"/></operator><name pos:line="221" pos:column="28">ptr<pos:position pos:line="221" pos:column="31"/></name> <operator pos:line="221" pos:column="32">-<pos:position pos:line="221" pos:column="33"/></operator> <name pos:line="221" pos:column="34">url<pos:position pos:line="221" pos:column="37"/></name><operator pos:line="221" pos:column="37">)<pos:position pos:line="221" pos:column="38"/></operator></expr></argument>, <argument><expr><name><name pos:line="221" pos:column="40">conn<pos:position pos:line="221" pos:column="44"/></name><operator pos:line="221" pos:column="44">-&gt;<pos:position pos:line="221" pos:column="49"/></operator><name pos:line="221" pos:column="46">host<pos:position pos:line="221" pos:column="50"/></name><operator pos:line="221" pos:column="50">.<pos:position pos:line="221" pos:column="51"/></operator><name pos:line="221" pos:column="51">name<pos:position pos:line="221" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="57">newlen<pos:position pos:line="221" pos:column="63"/></name></expr></argument>)<pos:position pos:line="221" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="65"/></expr_stmt>
          <comment type="block" pos:line="222" pos:column="11">/* append the piece after the host name */</comment>
          <expr_stmt><expr><call><name pos:line="223" pos:column="11">memcpy<pos:position pos:line="223" pos:column="17"/></name><argument_list pos:line="223" pos:column="17">(<argument><expr><name pos:line="223" pos:column="18">newurl<pos:position pos:line="223" pos:column="24"/></name> <operator pos:line="223" pos:column="25">+<pos:position pos:line="223" pos:column="26"/></operator> <name pos:line="223" pos:column="27">newlen<pos:position pos:line="223" pos:column="33"/></name> <operator pos:line="223" pos:column="34">+<pos:position pos:line="223" pos:column="35"/></operator> <operator pos:line="223" pos:column="36">(<pos:position pos:line="223" pos:column="37"/></operator><name pos:line="223" pos:column="37">ptr<pos:position pos:line="223" pos:column="40"/></name> <operator pos:line="223" pos:column="41">-<pos:position pos:line="223" pos:column="42"/></operator> <name pos:line="223" pos:column="43">url<pos:position pos:line="223" pos:column="46"/></name><operator pos:line="223" pos:column="46">)<pos:position pos:line="223" pos:column="47"/></operator></expr></argument>,
                 <argument><expr><name pos:line="224" pos:column="18">ptr<pos:position pos:line="224" pos:column="21"/></name> <operator pos:line="224" pos:column="22">+<pos:position pos:line="224" pos:column="23"/></operator> <name pos:line="224" pos:column="24">currlen<pos:position pos:line="224" pos:column="31"/></name></expr></argument>, <comment type="block" pos:line="224" pos:column="33">/* copy the trailing zero byte too */</comment>
                 <argument><expr><name pos:line="225" pos:column="18">urllen<pos:position pos:line="225" pos:column="24"/></name> <operator pos:line="225" pos:column="25">-<pos:position pos:line="225" pos:column="26"/></operator> <operator pos:line="225" pos:column="27">(<pos:position pos:line="225" pos:column="28"/></operator><name pos:line="225" pos:column="28">ptr<pos:position pos:line="225" pos:column="31"/></name><operator pos:line="225" pos:column="31">-<pos:position pos:line="225" pos:column="32"/></operator><name pos:line="225" pos:column="32">url<pos:position pos:line="225" pos:column="35"/></name><operator pos:line="225" pos:column="35">)<pos:position pos:line="225" pos:column="36"/></operator> <operator pos:line="225" pos:column="37">-<pos:position pos:line="225" pos:column="38"/></operator> <name pos:line="225" pos:column="39">currlen<pos:position pos:line="225" pos:column="46"/></name> <operator pos:line="225" pos:column="47">+<pos:position pos:line="225" pos:column="48"/></operator> <literal type="number" pos:line="225" pos:column="49">1<pos:position pos:line="225" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="225" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="52"/></expr_stmt>
          <if pos:line="226" pos:column="11">if<condition pos:line="226" pos:column="13">(<expr><name><name pos:line="226" pos:column="14">data<pos:position pos:line="226" pos:column="18"/></name><operator pos:line="226" pos:column="18">-&gt;<pos:position pos:line="226" pos:column="23"/></operator><name pos:line="226" pos:column="20">change<pos:position pos:line="226" pos:column="26"/></name><operator pos:line="226" pos:column="26">.<pos:position pos:line="226" pos:column="27"/></operator><name pos:line="226" pos:column="27">url_alloc<pos:position pos:line="226" pos:column="36"/></name></name></expr>)<pos:position pos:line="226" pos:column="37"/></condition><then pos:line="226" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="227" pos:column="13">free<pos:position pos:line="227" pos:column="17"/></name><argument_list pos:line="227" pos:column="17">(<argument><expr><name><name pos:line="227" pos:column="18">data<pos:position pos:line="227" pos:column="22"/></name><operator pos:line="227" pos:column="22">-&gt;<pos:position pos:line="227" pos:column="27"/></operator><name pos:line="227" pos:column="24">change<pos:position pos:line="227" pos:column="30"/></name><operator pos:line="227" pos:column="30">.<pos:position pos:line="227" pos:column="31"/></operator><name pos:line="227" pos:column="31">url<pos:position pos:line="227" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="227" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="36"/></expr_stmt></block></then></if>
          <expr_stmt><expr><name><name pos:line="228" pos:column="11">data<pos:position pos:line="228" pos:column="15"/></name><operator pos:line="228" pos:column="15">-&gt;<pos:position pos:line="228" pos:column="20"/></operator><name pos:line="228" pos:column="17">change<pos:position pos:line="228" pos:column="23"/></name><operator pos:line="228" pos:column="23">.<pos:position pos:line="228" pos:column="24"/></operator><name pos:line="228" pos:column="24">url<pos:position pos:line="228" pos:column="27"/></name></name> <operator pos:line="228" pos:column="28">=<pos:position pos:line="228" pos:column="29"/></operator> <name pos:line="228" pos:column="30">newurl<pos:position pos:line="228" pos:column="36"/></name></expr>;<pos:position pos:line="228" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="229" pos:column="11">data<pos:position pos:line="229" pos:column="15"/></name><operator pos:line="229" pos:column="15">-&gt;<pos:position pos:line="229" pos:column="20"/></operator><name pos:line="229" pos:column="17">change<pos:position pos:line="229" pos:column="23"/></name><operator pos:line="229" pos:column="23">.<pos:position pos:line="229" pos:column="24"/></operator><name pos:line="229" pos:column="24">url_alloc<pos:position pos:line="229" pos:column="33"/></name></name> <operator pos:line="229" pos:column="34">=<pos:position pos:line="229" pos:column="35"/></operator> <name pos:line="229" pos:column="36">TRUE<pos:position pos:line="229" pos:column="40"/></name></expr>;<pos:position pos:line="229" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="230" pos:column="10"/></block></then>
        <else pos:line="231" pos:column="9">else
          <block type="pseudo"><return pos:line="232" pos:column="11">return <expr><name pos:line="232" pos:column="18">CURLE_OUT_OF_MEMORY<pos:position pos:line="232" pos:column="37"/></name></expr>;<pos:position pos:line="232" pos:column="38"/></return></block></else></if>
      }<pos:position pos:line="233" pos:column="8"/></block></then></if>
    }<pos:position pos:line="234" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="235" pos:column="5">ppath<pos:position pos:line="235" pos:column="10"/></name> <operator pos:line="235" pos:column="11">=<pos:position pos:line="235" pos:column="12"/></operator> <name><name pos:line="235" pos:column="13">data<pos:position pos:line="235" pos:column="17"/></name><operator pos:line="235" pos:column="17">-&gt;<pos:position pos:line="235" pos:column="22"/></operator><name pos:line="235" pos:column="19">change<pos:position pos:line="235" pos:column="25"/></name><operator pos:line="235" pos:column="25">.<pos:position pos:line="235" pos:column="26"/></operator><name pos:line="235" pos:column="26">url<pos:position pos:line="235" pos:column="29"/></name></name></expr>;<pos:position pos:line="235" pos:column="30"/></expr_stmt>
    <if pos:line="236" pos:column="5">if <condition pos:line="236" pos:column="8">(<expr><name><name pos:line="236" pos:column="9">data<pos:position pos:line="236" pos:column="13"/></name><operator pos:line="236" pos:column="13">-&gt;<pos:position pos:line="236" pos:column="18"/></operator><name pos:line="236" pos:column="15">set<pos:position pos:line="236" pos:column="18"/></name><operator pos:line="236" pos:column="18">.<pos:position pos:line="236" pos:column="19"/></operator><name pos:line="236" pos:column="19">proxy_transfer_mode<pos:position pos:line="236" pos:column="38"/></name></name></expr>)<pos:position pos:line="236" pos:column="39"/></condition><then pos:line="236" pos:column="39"> <block pos:line="236" pos:column="40">{
      <comment type="block" pos:line="237" pos:column="7">/* when doing ftp, append ;type=&lt;a|i&gt; if not present */</comment>
      <if pos:line="238" pos:column="7">if<condition pos:line="238" pos:column="9">(<expr><call><name pos:line="238" pos:column="10">checkprefix<pos:position pos:line="238" pos:column="21"/></name><argument_list pos:line="238" pos:column="21">(<argument><expr><literal type="string" pos:line="238" pos:column="22">"ftp://"<pos:position pos:line="238" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="238" pos:column="32">ppath<pos:position pos:line="238" pos:column="37"/></name></expr></argument>)<pos:position pos:line="238" pos:column="38"/></argument_list></call> <operator pos:line="238" pos:column="39">||<pos:position pos:line="238" pos:column="41"/></operator> <call><name pos:line="238" pos:column="42">checkprefix<pos:position pos:line="238" pos:column="53"/></name><argument_list pos:line="238" pos:column="53">(<argument><expr><literal type="string" pos:line="238" pos:column="54">"ftps://"<pos:position pos:line="238" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="238" pos:column="65">ppath<pos:position pos:line="238" pos:column="70"/></name></expr></argument>)<pos:position pos:line="238" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="238" pos:column="72"/></condition><then pos:line="238" pos:column="72"> <block pos:line="238" pos:column="73">{
        <decl_stmt><decl><type><name pos:line="239" pos:column="9">char<pos:position pos:line="239" pos:column="13"/></name> <modifier pos:line="239" pos:column="14">*<pos:position pos:line="239" pos:column="15"/></modifier></type><name pos:line="239" pos:column="15">p<pos:position pos:line="239" pos:column="16"/></name> <init pos:line="239" pos:column="17">= <expr><call><name pos:line="239" pos:column="19">strstr<pos:position pos:line="239" pos:column="25"/></name><argument_list pos:line="239" pos:column="25">(<argument><expr><name pos:line="239" pos:column="26">ppath<pos:position pos:line="239" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="239" pos:column="33">";type="<pos:position pos:line="239" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="239" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="239" pos:column="43"/></decl_stmt>
        <if pos:line="240" pos:column="9">if<condition pos:line="240" pos:column="11">(<expr><name pos:line="240" pos:column="12">p<pos:position pos:line="240" pos:column="13"/></name> <operator pos:line="240" pos:column="14">&amp;&amp;<pos:position pos:line="240" pos:column="24"/></operator> <name><name pos:line="240" pos:column="17">p<pos:position pos:line="240" pos:column="18"/></name><index pos:line="240" pos:column="18">[<expr><literal type="number" pos:line="240" pos:column="19">6<pos:position pos:line="240" pos:column="20"/></literal></expr>]<pos:position pos:line="240" pos:column="21"/></index></name> <operator pos:line="240" pos:column="22">&amp;&amp;<pos:position pos:line="240" pos:column="32"/></operator> <name><name pos:line="240" pos:column="25">p<pos:position pos:line="240" pos:column="26"/></name><index pos:line="240" pos:column="26">[<expr><literal type="number" pos:line="240" pos:column="27">7<pos:position pos:line="240" pos:column="28"/></literal></expr>]<pos:position pos:line="240" pos:column="29"/></index></name> <operator pos:line="240" pos:column="30">==<pos:position pos:line="240" pos:column="32"/></operator> <literal type="number" pos:line="240" pos:column="33">0<pos:position pos:line="240" pos:column="34"/></literal></expr>)<pos:position pos:line="240" pos:column="35"/></condition><then pos:line="240" pos:column="35"> <block pos:line="240" pos:column="36">{
          <switch pos:line="241" pos:column="11">switch <condition pos:line="241" pos:column="18">(<expr><call><name pos:line="241" pos:column="19">toupper<pos:position pos:line="241" pos:column="26"/></name><argument_list pos:line="241" pos:column="26">(<argument><expr><call pos:line="241" pos:column="27">(<name pos:line="241" pos:column="28">int<pos:position pos:line="241" pos:column="31"/></name>)<argument_list pos:line="241" pos:column="32">(<argument><expr><operator pos:line="241" pos:column="33">(<pos:position pos:line="241" pos:column="34"/></operator><name pos:line="241" pos:column="34">unsigned<pos:position pos:line="241" pos:column="42"/></name> <name pos:line="241" pos:column="43">char<pos:position pos:line="241" pos:column="47"/></name><operator pos:line="241" pos:column="47">)<pos:position pos:line="241" pos:column="48"/></operator><name><name pos:line="241" pos:column="48">p<pos:position pos:line="241" pos:column="49"/></name><index pos:line="241" pos:column="49">[<expr><literal type="number" pos:line="241" pos:column="50">6<pos:position pos:line="241" pos:column="51"/></literal></expr>]<pos:position pos:line="241" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="241" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="241" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="241" pos:column="55"/></condition> <block pos:line="241" pos:column="56">{
          <case pos:line="242" pos:column="11">case <expr><literal type="char" pos:line="242" pos:column="16">'A'<pos:position pos:line="242" pos:column="19"/></literal></expr>:<pos:position pos:line="242" pos:column="20"/></case>
          <case pos:line="243" pos:column="11">case <expr><literal type="char" pos:line="243" pos:column="16">'D'<pos:position pos:line="243" pos:column="19"/></literal></expr>:<pos:position pos:line="243" pos:column="20"/></case>
          <case pos:line="244" pos:column="11">case <expr><literal type="char" pos:line="244" pos:column="16">'I'<pos:position pos:line="244" pos:column="19"/></literal></expr>:<pos:position pos:line="244" pos:column="20"/></case>
            <break pos:line="245" pos:column="13">break;<pos:position pos:line="245" pos:column="19"/></break>
          <default pos:line="246" pos:column="11">default:<pos:position pos:line="246" pos:column="19"/></default>
            <expr_stmt><expr><name pos:line="247" pos:column="13">p<pos:position pos:line="247" pos:column="14"/></name> <operator pos:line="247" pos:column="15">=<pos:position pos:line="247" pos:column="16"/></operator> <name pos:line="247" pos:column="17">NULL<pos:position pos:line="247" pos:column="21"/></name></expr>;<pos:position pos:line="247" pos:column="22"/></expr_stmt>
          }<pos:position pos:line="248" pos:column="12"/></block></switch>
        }<pos:position pos:line="249" pos:column="10"/></block></then></if>
        <if pos:line="250" pos:column="9">if<condition pos:line="250" pos:column="11">(<expr><operator pos:line="250" pos:column="12">!<pos:position pos:line="250" pos:column="13"/></operator><name pos:line="250" pos:column="13">p<pos:position pos:line="250" pos:column="14"/></name></expr>)<pos:position pos:line="250" pos:column="15"/></condition><then pos:line="250" pos:column="15">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="251" pos:column="11">snprintf<pos:position pos:line="251" pos:column="19"/></name><argument_list pos:line="251" pos:column="19">(<argument><expr><name pos:line="251" pos:column="20">ftp_typecode<pos:position pos:line="251" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="251" pos:column="34">sizeof<argument_list pos:line="251" pos:column="40">(<argument><expr><name pos:line="251" pos:column="41">ftp_typecode<pos:position pos:line="251" pos:column="53"/></name></expr></argument>)<pos:position pos:line="251" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="251" pos:column="56">";type=%c"<pos:position pos:line="251" pos:column="66"/></literal></expr></argument>,
                   <argument><expr><ternary><condition><expr><name><name pos:line="252" pos:column="20">data<pos:position pos:line="252" pos:column="24"/></name><operator pos:line="252" pos:column="24">-&gt;<pos:position pos:line="252" pos:column="29"/></operator><name pos:line="252" pos:column="26">set<pos:position pos:line="252" pos:column="29"/></name><operator pos:line="252" pos:column="29">.<pos:position pos:line="252" pos:column="30"/></operator><name pos:line="252" pos:column="30">prefer_ascii<pos:position pos:line="252" pos:column="42"/></name></name></expr> ?<pos:position pos:line="252" pos:column="44"/></condition><then pos:line="252" pos:column="44"> <expr><literal type="char" pos:line="252" pos:column="45">'a'<pos:position pos:line="252" pos:column="48"/></literal></expr> <pos:position pos:line="252" pos:column="49"/></then><else pos:line="252" pos:column="49">: <expr><literal type="char" pos:line="252" pos:column="51">'i'<pos:position pos:line="252" pos:column="54"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="252" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="56"/></expr_stmt></block></then></if>
      }<pos:position pos:line="253" pos:column="8"/></block></then></if>
    }<pos:position pos:line="254" pos:column="6"/></block></then></if>
  }<pos:position pos:line="255" pos:column="4"/></block></then></if>
  <if pos:line="256" pos:column="3">if<condition pos:line="256" pos:column="5">(<expr><name pos:line="256" pos:column="6">HTTPREQ_POST_FORM<pos:position pos:line="256" pos:column="23"/></name> <operator pos:line="256" pos:column="24">==<pos:position pos:line="256" pos:column="26"/></operator> <name pos:line="256" pos:column="27">httpreq<pos:position pos:line="256" pos:column="34"/></name></expr>)<pos:position pos:line="256" pos:column="35"/></condition><then pos:line="256" pos:column="35"> <block pos:line="256" pos:column="36">{
    <comment type="block" pos:line="257" pos:column="5">/* we must build the whole darned post sequence first, so that we have
       a size of the whole shebang before we start to send it */</comment>
     <expr_stmt><expr><name pos:line="259" pos:column="6">result<pos:position pos:line="259" pos:column="12"/></name> <operator pos:line="259" pos:column="13">=<pos:position pos:line="259" pos:column="14"/></operator> <call><name pos:line="259" pos:column="15">Curl_getFormData<pos:position pos:line="259" pos:column="31"/></name><argument_list pos:line="259" pos:column="31">(<argument><expr><operator pos:line="259" pos:column="32">&amp;<pos:position pos:line="259" pos:column="37"/></operator><name><name pos:line="259" pos:column="33">http<pos:position pos:line="259" pos:column="37"/></name><operator pos:line="259" pos:column="37">-&gt;<pos:position pos:line="259" pos:column="42"/></operator><name pos:line="259" pos:column="39">sendit<pos:position pos:line="259" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="259" pos:column="47">data<pos:position pos:line="259" pos:column="51"/></name><operator pos:line="259" pos:column="51">-&gt;<pos:position pos:line="259" pos:column="56"/></operator><name pos:line="259" pos:column="53">set<pos:position pos:line="259" pos:column="56"/></name><operator pos:line="259" pos:column="56">.<pos:position pos:line="259" pos:column="57"/></operator><name pos:line="259" pos:column="57">httppost<pos:position pos:line="259" pos:column="65"/></name></name></expr></argument>,
                               <argument><expr><call><name pos:line="260" pos:column="32">checkheaders<pos:position pos:line="260" pos:column="44"/></name><argument_list pos:line="260" pos:column="44">(<argument><expr><name pos:line="260" pos:column="45">data<pos:position pos:line="260" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="260" pos:column="51">"Content-Type:"<pos:position pos:line="260" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="260" pos:column="67"/></argument_list></call></expr></argument>,
                               <argument><expr><operator pos:line="261" pos:column="32">&amp;<pos:position pos:line="261" pos:column="37"/></operator><name><name pos:line="261" pos:column="33">http<pos:position pos:line="261" pos:column="37"/></name><operator pos:line="261" pos:column="37">-&gt;<pos:position pos:line="261" pos:column="42"/></operator><name pos:line="261" pos:column="39">postsize<pos:position pos:line="261" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="261" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="49"/></expr_stmt>
     <if pos:line="262" pos:column="6">if<condition pos:line="262" pos:column="8">(<expr><name pos:line="262" pos:column="9">CURLE_OK<pos:position pos:line="262" pos:column="17"/></name> <operator pos:line="262" pos:column="18">!=<pos:position pos:line="262" pos:column="20"/></operator> <name pos:line="262" pos:column="21">result<pos:position pos:line="262" pos:column="27"/></name></expr>)<pos:position pos:line="262" pos:column="28"/></condition><then pos:line="262" pos:column="28"> <block pos:line="262" pos:column="29">{
       <comment type="block" pos:line="263" pos:column="8">/* Curl_getFormData() doesn't use failf() */</comment>
       <expr_stmt><expr><call><name pos:line="264" pos:column="8">failf<pos:position pos:line="264" pos:column="13"/></name><argument_list pos:line="264" pos:column="13">(<argument><expr><name pos:line="264" pos:column="14">data<pos:position pos:line="264" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="264" pos:column="20">"failed creating formpost data"<pos:position pos:line="264" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="264" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="53"/></expr_stmt>
       <return pos:line="265" pos:column="8">return <expr><name pos:line="265" pos:column="15">result<pos:position pos:line="265" pos:column="21"/></name></expr>;<pos:position pos:line="265" pos:column="22"/></return>
     }<pos:position pos:line="266" pos:column="7"/></block></then></if>
  }<pos:position pos:line="267" pos:column="4"/></block></then></if>


  <expr_stmt><expr><name><name pos:line="270" pos:column="3">http<pos:position pos:line="270" pos:column="7"/></name><operator pos:line="270" pos:column="7">-&gt;<pos:position pos:line="270" pos:column="12"/></operator><name pos:line="270" pos:column="9">p_pragma<pos:position pos:line="270" pos:column="17"/></name></name> <operator pos:line="270" pos:column="18">=<pos:position pos:line="270" pos:column="19"/></operator>
    <ternary><condition><expr><operator pos:line="271" pos:column="5">(<pos:position pos:line="271" pos:column="6"/></operator><operator pos:line="271" pos:column="6">!<pos:position pos:line="271" pos:column="7"/></operator><call><name pos:line="271" pos:column="7">checkheaders<pos:position pos:line="271" pos:column="19"/></name><argument_list pos:line="271" pos:column="19">(<argument><expr><name pos:line="271" pos:column="20">data<pos:position pos:line="271" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="271" pos:column="26">"Pragma:"<pos:position pos:line="271" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="271" pos:column="36"/></argument_list></call> <operator pos:line="271" pos:column="37">&amp;&amp;<pos:position pos:line="271" pos:column="47"/></operator>
     <operator pos:line="272" pos:column="6">(<pos:position pos:line="272" pos:column="7"/></operator><name><name pos:line="272" pos:column="7">conn<pos:position pos:line="272" pos:column="11"/></name><operator pos:line="272" pos:column="11">-&gt;<pos:position pos:line="272" pos:column="16"/></operator><name pos:line="272" pos:column="13">bits<pos:position pos:line="272" pos:column="17"/></name><operator pos:line="272" pos:column="17">.<pos:position pos:line="272" pos:column="18"/></operator><name pos:line="272" pos:column="18">httpproxy<pos:position pos:line="272" pos:column="27"/></name></name> <operator pos:line="272" pos:column="28">&amp;&amp;<pos:position pos:line="272" pos:column="38"/></operator> <operator pos:line="272" pos:column="31">!<pos:position pos:line="272" pos:column="32"/></operator><name><name pos:line="272" pos:column="32">conn<pos:position pos:line="272" pos:column="36"/></name><operator pos:line="272" pos:column="36">-&gt;<pos:position pos:line="272" pos:column="41"/></operator><name pos:line="272" pos:column="38">bits<pos:position pos:line="272" pos:column="42"/></name><operator pos:line="272" pos:column="42">.<pos:position pos:line="272" pos:column="43"/></operator><name pos:line="272" pos:column="43">tunnel_proxy<pos:position pos:line="272" pos:column="55"/></name></name><operator pos:line="272" pos:column="55">)<pos:position pos:line="272" pos:column="56"/></operator> <operator pos:line="272" pos:column="57">)<pos:position pos:line="272" pos:column="58"/></operator></expr>?<pos:position pos:line="272" pos:column="59"/></condition><then pos:line="272" pos:column="59">
    <expr><literal type="string" pos:line="273" pos:column="5">"Pragma: no-cache\r\n"<pos:position pos:line="273" pos:column="27"/></literal></expr></then><else pos:line="273" pos:column="27">:<expr><name pos:line="273" pos:column="28">NULL<pos:position pos:line="273" pos:column="32"/></name></expr></else></ternary></expr>;<pos:position pos:line="273" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="275" pos:column="3">http<pos:position pos:line="275" pos:column="7"/></name><operator pos:line="275" pos:column="7">-&gt;<pos:position pos:line="275" pos:column="12"/></operator><name pos:line="275" pos:column="9">p_accept<pos:position pos:line="275" pos:column="17"/></name></name> <operator pos:line="275" pos:column="18">=<pos:position pos:line="275" pos:column="19"/></operator> <ternary><condition><expr><call><name pos:line="275" pos:column="20">checkheaders<pos:position pos:line="275" pos:column="32"/></name><argument_list pos:line="275" pos:column="32">(<argument><expr><name pos:line="275" pos:column="33">data<pos:position pos:line="275" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="275" pos:column="39">"Accept:"<pos:position pos:line="275" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="275" pos:column="49"/></argument_list></call></expr>?<pos:position pos:line="275" pos:column="50"/></condition><then><expr><name pos:line="275" pos:column="50">NULL<pos:position pos:line="275" pos:column="54"/></name></expr></then><else pos:line="275" pos:column="54">:<expr><literal type="string" pos:line="275" pos:column="55">"Accept: */*\r\n"<pos:position pos:line="275" pos:column="72"/></literal></expr></else></ternary></expr>;<pos:position pos:line="275" pos:column="73"/></expr_stmt>

  <if pos:line="277" pos:column="3">if<condition pos:line="277" pos:column="5">(<expr><operator pos:line="277" pos:column="6">(<pos:position pos:line="277" pos:column="7"/></operator> <operator pos:line="277" pos:column="8">(<pos:position pos:line="277" pos:column="9"/></operator><name pos:line="277" pos:column="9">HTTPREQ_POST<pos:position pos:line="277" pos:column="21"/></name> <operator pos:line="277" pos:column="22">==<pos:position pos:line="277" pos:column="24"/></operator> <name pos:line="277" pos:column="25">httpreq<pos:position pos:line="277" pos:column="32"/></name><operator pos:line="277" pos:column="32">)<pos:position pos:line="277" pos:column="33"/></operator> <operator pos:line="277" pos:column="34">||<pos:position pos:line="277" pos:column="36"/></operator>
       <operator pos:line="278" pos:column="8">(<pos:position pos:line="278" pos:column="9"/></operator><name pos:line="278" pos:column="9">HTTPREQ_POST_FORM<pos:position pos:line="278" pos:column="26"/></name> <operator pos:line="278" pos:column="27">==<pos:position pos:line="278" pos:column="29"/></operator> <name pos:line="278" pos:column="30">httpreq<pos:position pos:line="278" pos:column="37"/></name><operator pos:line="278" pos:column="37">)<pos:position pos:line="278" pos:column="38"/></operator> <operator pos:line="278" pos:column="39">||<pos:position pos:line="278" pos:column="41"/></operator>
       <operator pos:line="279" pos:column="8">(<pos:position pos:line="279" pos:column="9"/></operator><name pos:line="279" pos:column="9">HTTPREQ_PUT<pos:position pos:line="279" pos:column="20"/></name> <operator pos:line="279" pos:column="21">==<pos:position pos:line="279" pos:column="23"/></operator> <name pos:line="279" pos:column="24">httpreq<pos:position pos:line="279" pos:column="31"/></name><operator pos:line="279" pos:column="31">)<pos:position pos:line="279" pos:column="32"/></operator> <operator pos:line="279" pos:column="33">)<pos:position pos:line="279" pos:column="34"/></operator> <operator pos:line="279" pos:column="35">&amp;&amp;<pos:position pos:line="279" pos:column="45"/></operator>
     <name><name pos:line="280" pos:column="6">data<pos:position pos:line="280" pos:column="10"/></name><operator pos:line="280" pos:column="10">-&gt;<pos:position pos:line="280" pos:column="15"/></operator><name pos:line="280" pos:column="12">state<pos:position pos:line="280" pos:column="17"/></name><operator pos:line="280" pos:column="17">.<pos:position pos:line="280" pos:column="18"/></operator><name pos:line="280" pos:column="18">resume_from<pos:position pos:line="280" pos:column="29"/></name></name></expr>)<pos:position pos:line="280" pos:column="30"/></condition><then pos:line="280" pos:column="30"> <block pos:line="280" pos:column="31">{
    <comment type="block" format="doxygen" pos:line="281" pos:column="5">/**********************************************************************
     * Resuming upload in HTTP means that we PUT or POST and that we have
     * got a resume_from value set. The resume value has already created
     * a Range: header that will be passed along. We need to "fast forward"
     * the file the given number of bytes and decrease the assume upload
     * file size before we continue this venture in the dark lands of HTTP.
     *********************************************************************/</comment>

    <if pos:line="289" pos:column="5">if<condition pos:line="289" pos:column="7">(<expr><name><name pos:line="289" pos:column="8">data<pos:position pos:line="289" pos:column="12"/></name><operator pos:line="289" pos:column="12">-&gt;<pos:position pos:line="289" pos:column="17"/></operator><name pos:line="289" pos:column="14">state<pos:position pos:line="289" pos:column="19"/></name><operator pos:line="289" pos:column="19">.<pos:position pos:line="289" pos:column="20"/></operator><name pos:line="289" pos:column="20">resume_from<pos:position pos:line="289" pos:column="31"/></name></name> <operator pos:line="289" pos:column="32">&lt;<pos:position pos:line="289" pos:column="36"/></operator> <literal type="number" pos:line="289" pos:column="34">0<pos:position pos:line="289" pos:column="35"/></literal></expr> )<pos:position pos:line="289" pos:column="37"/></condition><then pos:line="289" pos:column="37"> <block pos:line="289" pos:column="38">{
      <comment type="block" pos:line="290" pos:column="7">/*
       * This is meant to get the size of the present remote-file by itself.
       * We don't support this now. Bail out!
       */</comment>
       <expr_stmt><expr><name><name pos:line="294" pos:column="8">data<pos:position pos:line="294" pos:column="12"/></name><operator pos:line="294" pos:column="12">-&gt;<pos:position pos:line="294" pos:column="17"/></operator><name pos:line="294" pos:column="14">state<pos:position pos:line="294" pos:column="19"/></name><operator pos:line="294" pos:column="19">.<pos:position pos:line="294" pos:column="20"/></operator><name pos:line="294" pos:column="20">resume_from<pos:position pos:line="294" pos:column="31"/></name></name> <operator pos:line="294" pos:column="32">=<pos:position pos:line="294" pos:column="33"/></operator> <literal type="number" pos:line="294" pos:column="34">0<pos:position pos:line="294" pos:column="35"/></literal></expr>;<pos:position pos:line="294" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="295" pos:column="6"/></block></then></if>

    <if pos:line="297" pos:column="5">if<condition pos:line="297" pos:column="7">(<expr><name><name pos:line="297" pos:column="8">data<pos:position pos:line="297" pos:column="12"/></name><operator pos:line="297" pos:column="12">-&gt;<pos:position pos:line="297" pos:column="17"/></operator><name pos:line="297" pos:column="14">state<pos:position pos:line="297" pos:column="19"/></name><operator pos:line="297" pos:column="19">.<pos:position pos:line="297" pos:column="20"/></operator><name pos:line="297" pos:column="20">resume_from<pos:position pos:line="297" pos:column="31"/></name></name> <operator pos:line="297" pos:column="32">&amp;&amp;<pos:position pos:line="297" pos:column="42"/></operator> <operator pos:line="297" pos:column="35">!<pos:position pos:line="297" pos:column="36"/></operator><name><name pos:line="297" pos:column="36">data<pos:position pos:line="297" pos:column="40"/></name><operator pos:line="297" pos:column="40">-&gt;<pos:position pos:line="297" pos:column="45"/></operator><name pos:line="297" pos:column="42">state<pos:position pos:line="297" pos:column="47"/></name><operator pos:line="297" pos:column="47">.<pos:position pos:line="297" pos:column="48"/></operator><name pos:line="297" pos:column="48">this_is_a_follow<pos:position pos:line="297" pos:column="64"/></name></name></expr>)<pos:position pos:line="297" pos:column="65"/></condition><then pos:line="297" pos:column="65"> <block pos:line="297" pos:column="66">{
      <comment type="block" pos:line="298" pos:column="7">/* do we still game? */</comment>

      <comment type="block" pos:line="300" pos:column="7">/* Now, let's read off the proper amount of bytes from the
         input. */</comment>
      <if pos:line="302" pos:column="7">if<condition pos:line="302" pos:column="9">(<expr><name><name pos:line="302" pos:column="10">conn<pos:position pos:line="302" pos:column="14"/></name><operator pos:line="302" pos:column="14">-&gt;<pos:position pos:line="302" pos:column="19"/></operator><name pos:line="302" pos:column="16">seek_func<pos:position pos:line="302" pos:column="25"/></name></name></expr>)<pos:position pos:line="302" pos:column="26"/></condition><then pos:line="302" pos:column="26"> <block pos:line="302" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="303" pos:column="9">curl_off_t<pos:position pos:line="303" pos:column="19"/></name></type> <name pos:line="303" pos:column="20">readthisamountnow<pos:position pos:line="303" pos:column="37"/></name> <init pos:line="303" pos:column="38">= <expr><name><name pos:line="303" pos:column="40">data<pos:position pos:line="303" pos:column="44"/></name><operator pos:line="303" pos:column="44">-&gt;<pos:position pos:line="303" pos:column="49"/></operator><name pos:line="303" pos:column="46">state<pos:position pos:line="303" pos:column="51"/></name><operator pos:line="303" pos:column="51">.<pos:position pos:line="303" pos:column="52"/></operator><name pos:line="303" pos:column="52">resume_from<pos:position pos:line="303" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="303" pos:column="64"/></decl_stmt>

        <if pos:line="305" pos:column="9">if<condition pos:line="305" pos:column="11">(<expr><call><name><name pos:line="305" pos:column="12">conn<pos:position pos:line="305" pos:column="16"/></name><operator pos:line="305" pos:column="16">-&gt;<pos:position pos:line="305" pos:column="21"/></operator><name pos:line="305" pos:column="18">seek_func<pos:position pos:line="305" pos:column="27"/></name></name><argument_list pos:line="305" pos:column="27">(<argument><expr><name><name pos:line="305" pos:column="28">conn<pos:position pos:line="305" pos:column="32"/></name><operator pos:line="305" pos:column="32">-&gt;<pos:position pos:line="305" pos:column="37"/></operator><name pos:line="305" pos:column="34">seek_client<pos:position pos:line="305" pos:column="45"/></name></name></expr></argument>,
                           <argument><expr><name pos:line="306" pos:column="28">readthisamountnow<pos:position pos:line="306" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="306" pos:column="47">SEEK_SET<pos:position pos:line="306" pos:column="55"/></name></expr></argument>)<pos:position pos:line="306" pos:column="56"/></argument_list></call> <operator pos:line="306" pos:column="57">!=<pos:position pos:line="306" pos:column="59"/></operator> <literal type="number" pos:line="306" pos:column="60">0<pos:position pos:line="306" pos:column="61"/></literal></expr>)<pos:position pos:line="306" pos:column="62"/></condition><then pos:line="306" pos:column="62"> <block pos:line="306" pos:column="63">{
          <expr_stmt><expr><call><name pos:line="307" pos:column="11">failf<pos:position pos:line="307" pos:column="16"/></name><argument_list pos:line="307" pos:column="16">(<argument><expr><name pos:line="307" pos:column="17">data<pos:position pos:line="307" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="307" pos:column="23">"Could not seek stream"<pos:position pos:line="307" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="307" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="48"/></expr_stmt>
          <return pos:line="308" pos:column="11">return <expr><name pos:line="308" pos:column="18">CURLE_READ_ERROR<pos:position pos:line="308" pos:column="34"/></name></expr>;<pos:position pos:line="308" pos:column="35"/></return>
        }<pos:position pos:line="309" pos:column="10"/></block></then></if>
      }<pos:position pos:line="310" pos:column="8"/></block></then>
      <else pos:line="311" pos:column="7">else <block pos:line="311" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="312" pos:column="9">curl_off_t<pos:position pos:line="312" pos:column="19"/></name></type> <name pos:line="312" pos:column="20">passed<pos:position pos:line="312" pos:column="26"/></name><init pos:line="312" pos:column="26">=<expr><literal type="number" pos:line="312" pos:column="27">0<pos:position pos:line="312" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="312" pos:column="29"/></decl_stmt>

        <do pos:line="314" pos:column="9">do <block pos:line="314" pos:column="12">{
          <decl_stmt><decl><type><name pos:line="315" pos:column="11">size_t<pos:position pos:line="315" pos:column="17"/></name></type> <name pos:line="315" pos:column="18">readthisamountnow<pos:position pos:line="315" pos:column="35"/></name> <init pos:line="315" pos:column="36">= <expr><call pos:line="315" pos:column="38">(<name pos:line="315" pos:column="39">size_t<pos:position pos:line="315" pos:column="45"/></name>)<argument_list pos:line="315" pos:column="46">(<argument><expr><name><name pos:line="315" pos:column="47">data<pos:position pos:line="315" pos:column="51"/></name><operator pos:line="315" pos:column="51">-&gt;<pos:position pos:line="315" pos:column="56"/></operator><name pos:line="315" pos:column="53">state<pos:position pos:line="315" pos:column="58"/></name><operator pos:line="315" pos:column="58">.<pos:position pos:line="315" pos:column="59"/></operator><name pos:line="315" pos:column="59">resume_from<pos:position pos:line="315" pos:column="70"/></name></name> <operator pos:line="315" pos:column="71">-<pos:position pos:line="315" pos:column="72"/></operator> <name pos:line="315" pos:column="73">passed<pos:position pos:line="315" pos:column="79"/></name></expr></argument>)<pos:position pos:line="315" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="315" pos:column="81"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="316" pos:column="11">size_t<pos:position pos:line="316" pos:column="17"/></name></type> <name pos:line="316" pos:column="18">actuallyread<pos:position pos:line="316" pos:column="30"/></name></decl>;<pos:position pos:line="316" pos:column="31"/></decl_stmt>

          <if pos:line="318" pos:column="11">if<condition pos:line="318" pos:column="13">(<expr><name pos:line="318" pos:column="14">readthisamountnow<pos:position pos:line="318" pos:column="31"/></name> <operator pos:line="318" pos:column="32">&gt;<pos:position pos:line="318" pos:column="36"/></operator> <name pos:line="318" pos:column="34">BUFSIZE<pos:position pos:line="318" pos:column="41"/></name></expr>)<pos:position pos:line="318" pos:column="42"/></condition><then pos:line="318" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="319" pos:column="13">readthisamountnow<pos:position pos:line="319" pos:column="30"/></name> <operator pos:line="319" pos:column="31">=<pos:position pos:line="319" pos:column="32"/></operator> <name pos:line="319" pos:column="33">BUFSIZE<pos:position pos:line="319" pos:column="40"/></name></expr>;<pos:position pos:line="319" pos:column="41"/></expr_stmt></block></then></if>

          <expr_stmt><expr><name pos:line="321" pos:column="11">actuallyread<pos:position pos:line="321" pos:column="23"/></name> <operator pos:line="321" pos:column="24">=<pos:position pos:line="321" pos:column="25"/></operator> <call><name><name pos:line="321" pos:column="26">data<pos:position pos:line="321" pos:column="30"/></name><operator pos:line="321" pos:column="30">-&gt;<pos:position pos:line="321" pos:column="35"/></operator><name pos:line="321" pos:column="32">set<pos:position pos:line="321" pos:column="35"/></name><operator pos:line="321" pos:column="35">.<pos:position pos:line="321" pos:column="36"/></operator><name pos:line="321" pos:column="36">fread_func<pos:position pos:line="321" pos:column="46"/></name></name><argument_list pos:line="321" pos:column="46">(<argument><expr><name><name pos:line="321" pos:column="47">data<pos:position pos:line="321" pos:column="51"/></name><operator pos:line="321" pos:column="51">-&gt;<pos:position pos:line="321" pos:column="56"/></operator><name pos:line="321" pos:column="53">state<pos:position pos:line="321" pos:column="58"/></name><operator pos:line="321" pos:column="58">.<pos:position pos:line="321" pos:column="59"/></operator><name pos:line="321" pos:column="59">buffer<pos:position pos:line="321" pos:column="65"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="321" pos:column="67">1<pos:position pos:line="321" pos:column="68"/></literal></expr></argument>,
                                              <argument><expr><operator pos:line="322" pos:column="47">(<pos:position pos:line="322" pos:column="48"/></operator><name pos:line="322" pos:column="48">size_t<pos:position pos:line="322" pos:column="54"/></name><operator pos:line="322" pos:column="54">)<pos:position pos:line="322" pos:column="55"/></operator><name pos:line="322" pos:column="55">readthisamountnow<pos:position pos:line="322" pos:column="72"/></name></expr></argument>,
                                              <argument><expr><name><name pos:line="323" pos:column="47">data<pos:position pos:line="323" pos:column="51"/></name><operator pos:line="323" pos:column="51">-&gt;<pos:position pos:line="323" pos:column="56"/></operator><name pos:line="323" pos:column="53">set<pos:position pos:line="323" pos:column="56"/></name><operator pos:line="323" pos:column="56">.<pos:position pos:line="323" pos:column="57"/></operator><name pos:line="323" pos:column="57">in<pos:position pos:line="323" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="323" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="61"/></expr_stmt>

          <expr_stmt><expr><name pos:line="325" pos:column="11">passed<pos:position pos:line="325" pos:column="17"/></name> <operator pos:line="325" pos:column="18">+=<pos:position pos:line="325" pos:column="20"/></operator> <name pos:line="325" pos:column="21">actuallyread<pos:position pos:line="325" pos:column="33"/></name></expr>;<pos:position pos:line="325" pos:column="34"/></expr_stmt>
          <if pos:line="326" pos:column="11">if<condition pos:line="326" pos:column="13">(<expr><name pos:line="326" pos:column="14">actuallyread<pos:position pos:line="326" pos:column="26"/></name> <operator pos:line="326" pos:column="27">!=<pos:position pos:line="326" pos:column="29"/></operator> <name pos:line="326" pos:column="30">readthisamountnow<pos:position pos:line="326" pos:column="47"/></name></expr>)<pos:position pos:line="326" pos:column="48"/></condition><then pos:line="326" pos:column="48"> <block pos:line="326" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="327" pos:column="13">failf<pos:position pos:line="327" pos:column="18"/></name><argument_list pos:line="327" pos:column="18">(<argument><expr><name pos:line="327" pos:column="19">data<pos:position pos:line="327" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="327" pos:column="25">"Could only read %"<pos:position pos:line="327" pos:column="44"/></literal> <name pos:line="327" pos:column="45">FORMAT_OFF_T<pos:position pos:line="327" pos:column="57"/></name>
                  <literal type="string" pos:line="328" pos:column="19">" bytes from the input"<pos:position pos:line="328" pos:column="42"/></literal></expr></argument>,
                  <argument><expr><name pos:line="329" pos:column="19">passed<pos:position pos:line="329" pos:column="25"/></name></expr></argument>)<pos:position pos:line="329" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="329" pos:column="27"/></expr_stmt>
            <return pos:line="330" pos:column="13">return <expr><name pos:line="330" pos:column="20">CURLE_READ_ERROR<pos:position pos:line="330" pos:column="36"/></name></expr>;<pos:position pos:line="330" pos:column="37"/></return>
          }<pos:position pos:line="331" pos:column="12"/></block></then></if>
        }<pos:position pos:line="332" pos:column="10"/></block> while<condition pos:line="332" pos:column="16">(<expr><name pos:line="332" pos:column="17">passed<pos:position pos:line="332" pos:column="23"/></name> <operator pos:line="332" pos:column="24">!=<pos:position pos:line="332" pos:column="26"/></operator> <name><name pos:line="332" pos:column="27">data<pos:position pos:line="332" pos:column="31"/></name><operator pos:line="332" pos:column="31">-&gt;<pos:position pos:line="332" pos:column="36"/></operator><name pos:line="332" pos:column="33">state<pos:position pos:line="332" pos:column="38"/></name><operator pos:line="332" pos:column="38">.<pos:position pos:line="332" pos:column="39"/></operator><name pos:line="332" pos:column="39">resume_from<pos:position pos:line="332" pos:column="50"/></name></name></expr>)<pos:position pos:line="332" pos:column="51"/></condition>;<pos:position pos:line="332" pos:column="52"/></do> <comment type="block" pos:line="332" pos:column="53">/* loop until done */</comment>
      }<pos:position pos:line="333" pos:column="8"/></block></else></if>

      <comment type="block" pos:line="335" pos:column="7">/* now, decrease the size of the read */</comment>
      <if pos:line="336" pos:column="7">if<condition pos:line="336" pos:column="9">(<expr><name><name pos:line="336" pos:column="10">data<pos:position pos:line="336" pos:column="14"/></name><operator pos:line="336" pos:column="14">-&gt;<pos:position pos:line="336" pos:column="19"/></operator><name pos:line="336" pos:column="16">set<pos:position pos:line="336" pos:column="19"/></name><operator pos:line="336" pos:column="19">.<pos:position pos:line="336" pos:column="20"/></operator><name pos:line="336" pos:column="20">infilesize<pos:position pos:line="336" pos:column="30"/></name></name><operator pos:line="336" pos:column="30">&gt;<pos:position pos:line="336" pos:column="34"/></operator><literal type="number" pos:line="336" pos:column="31">0<pos:position pos:line="336" pos:column="32"/></literal></expr>)<pos:position pos:line="336" pos:column="33"/></condition><then pos:line="336" pos:column="33"> <block pos:line="336" pos:column="34">{
        <expr_stmt><expr><name><name pos:line="337" pos:column="9">data<pos:position pos:line="337" pos:column="13"/></name><operator pos:line="337" pos:column="13">-&gt;<pos:position pos:line="337" pos:column="18"/></operator><name pos:line="337" pos:column="15">set<pos:position pos:line="337" pos:column="18"/></name><operator pos:line="337" pos:column="18">.<pos:position pos:line="337" pos:column="19"/></operator><name pos:line="337" pos:column="19">infilesize<pos:position pos:line="337" pos:column="29"/></name></name> <operator pos:line="337" pos:column="30">-=<pos:position pos:line="337" pos:column="32"/></operator> <name><name pos:line="337" pos:column="33">data<pos:position pos:line="337" pos:column="37"/></name><operator pos:line="337" pos:column="37">-&gt;<pos:position pos:line="337" pos:column="42"/></operator><name pos:line="337" pos:column="39">state<pos:position pos:line="337" pos:column="44"/></name><operator pos:line="337" pos:column="44">.<pos:position pos:line="337" pos:column="45"/></operator><name pos:line="337" pos:column="45">resume_from<pos:position pos:line="337" pos:column="56"/></name></name></expr>;<pos:position pos:line="337" pos:column="57"/></expr_stmt>

        <if pos:line="339" pos:column="9">if<condition pos:line="339" pos:column="11">(<expr><name><name pos:line="339" pos:column="12">data<pos:position pos:line="339" pos:column="16"/></name><operator pos:line="339" pos:column="16">-&gt;<pos:position pos:line="339" pos:column="21"/></operator><name pos:line="339" pos:column="18">set<pos:position pos:line="339" pos:column="21"/></name><operator pos:line="339" pos:column="21">.<pos:position pos:line="339" pos:column="22"/></operator><name pos:line="339" pos:column="22">infilesize<pos:position pos:line="339" pos:column="32"/></name></name> <operator pos:line="339" pos:column="33">&lt;=<pos:position pos:line="339" pos:column="38"/></operator> <literal type="number" pos:line="339" pos:column="36">0<pos:position pos:line="339" pos:column="37"/></literal></expr>)<pos:position pos:line="339" pos:column="38"/></condition><then pos:line="339" pos:column="38"> <block pos:line="339" pos:column="39">{
          <expr_stmt><expr><call><name pos:line="340" pos:column="11">failf<pos:position pos:line="340" pos:column="16"/></name><argument_list pos:line="340" pos:column="16">(<argument><expr><name pos:line="340" pos:column="17">data<pos:position pos:line="340" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="340" pos:column="23">"File already completely uploaded"<pos:position pos:line="340" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="340" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="59"/></expr_stmt>
          <return pos:line="341" pos:column="11">return <expr><name pos:line="341" pos:column="18">CURLE_PARTIAL_FILE<pos:position pos:line="341" pos:column="36"/></name></expr>;<pos:position pos:line="341" pos:column="37"/></return>
        }<pos:position pos:line="342" pos:column="10"/></block></then></if>
      }<pos:position pos:line="343" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="344" pos:column="7">/* we've passed, proceed as normal */</comment>
    }<pos:position pos:line="345" pos:column="6"/></block></then></if>
  }<pos:position pos:line="346" pos:column="4"/></block></then></if>
  <if pos:line="347" pos:column="3">if<condition pos:line="347" pos:column="5">(<expr><name><name pos:line="347" pos:column="6">data<pos:position pos:line="347" pos:column="10"/></name><operator pos:line="347" pos:column="10">-&gt;<pos:position pos:line="347" pos:column="15"/></operator><name pos:line="347" pos:column="12">state<pos:position pos:line="347" pos:column="17"/></name><operator pos:line="347" pos:column="17">.<pos:position pos:line="347" pos:column="18"/></operator><name pos:line="347" pos:column="18">use_range<pos:position pos:line="347" pos:column="27"/></name></name></expr>)<pos:position pos:line="347" pos:column="28"/></condition><then pos:line="347" pos:column="28"> <block pos:line="347" pos:column="29">{
    <comment type="block" pos:line="348" pos:column="5">/*
     * A range is selected. We use different headers whether we're downloading
     * or uploading and we always let customized headers override our internal
     * ones if any such are specified.
     */</comment>
    <if pos:line="353" pos:column="5">if<condition pos:line="353" pos:column="7">(<expr><operator pos:line="353" pos:column="8">(<pos:position pos:line="353" pos:column="9"/></operator><name pos:line="353" pos:column="9">httpreq<pos:position pos:line="353" pos:column="16"/></name> <operator pos:line="353" pos:column="17">==<pos:position pos:line="353" pos:column="19"/></operator> <name pos:line="353" pos:column="20">HTTPREQ_GET<pos:position pos:line="353" pos:column="31"/></name><operator pos:line="353" pos:column="31">)<pos:position pos:line="353" pos:column="32"/></operator> <operator pos:line="353" pos:column="33">&amp;&amp;<pos:position pos:line="353" pos:column="43"/></operator>
       <operator pos:line="354" pos:column="8">!<pos:position pos:line="354" pos:column="9"/></operator><call><name pos:line="354" pos:column="9">checkheaders<pos:position pos:line="354" pos:column="21"/></name><argument_list pos:line="354" pos:column="21">(<argument><expr><name pos:line="354" pos:column="22">data<pos:position pos:line="354" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="354" pos:column="28">"Range:"<pos:position pos:line="354" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="354" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="354" pos:column="38"/></condition><then pos:line="354" pos:column="38"> <block pos:line="354" pos:column="39">{
      <comment type="block" pos:line="355" pos:column="7">/* if a line like this was already allocated, free the previous one */</comment>
      <if pos:line="356" pos:column="7">if<condition pos:line="356" pos:column="9">(<expr><name><name pos:line="356" pos:column="10">conn<pos:position pos:line="356" pos:column="14"/></name><operator pos:line="356" pos:column="14">-&gt;<pos:position pos:line="356" pos:column="19"/></operator><name pos:line="356" pos:column="16">allocptr<pos:position pos:line="356" pos:column="24"/></name><operator pos:line="356" pos:column="24">.<pos:position pos:line="356" pos:column="25"/></operator><name pos:line="356" pos:column="25">rangeline<pos:position pos:line="356" pos:column="34"/></name></name></expr>)<pos:position pos:line="356" pos:column="35"/></condition><then pos:line="356" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="357" pos:column="9">free<pos:position pos:line="357" pos:column="13"/></name><argument_list pos:line="357" pos:column="13">(<argument><expr><name><name pos:line="357" pos:column="14">conn<pos:position pos:line="357" pos:column="18"/></name><operator pos:line="357" pos:column="18">-&gt;<pos:position pos:line="357" pos:column="23"/></operator><name pos:line="357" pos:column="20">allocptr<pos:position pos:line="357" pos:column="28"/></name><operator pos:line="357" pos:column="28">.<pos:position pos:line="357" pos:column="29"/></operator><name pos:line="357" pos:column="29">rangeline<pos:position pos:line="357" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="357" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="357" pos:column="40"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name><name pos:line="358" pos:column="7">conn<pos:position pos:line="358" pos:column="11"/></name><operator pos:line="358" pos:column="11">-&gt;<pos:position pos:line="358" pos:column="16"/></operator><name pos:line="358" pos:column="13">allocptr<pos:position pos:line="358" pos:column="21"/></name><operator pos:line="358" pos:column="21">.<pos:position pos:line="358" pos:column="22"/></operator><name pos:line="358" pos:column="22">rangeline<pos:position pos:line="358" pos:column="31"/></name></name> <operator pos:line="358" pos:column="32">=<pos:position pos:line="358" pos:column="33"/></operator> <call><name pos:line="358" pos:column="34">aprintf<pos:position pos:line="358" pos:column="41"/></name><argument_list pos:line="358" pos:column="41">(<argument><expr><literal type="string" pos:line="358" pos:column="42">"Range: bytes=%s\r\n"<pos:position pos:line="358" pos:column="63"/></literal></expr></argument>,
                                         <argument><expr><name><name pos:line="359" pos:column="42">data<pos:position pos:line="359" pos:column="46"/></name><operator pos:line="359" pos:column="46">-&gt;<pos:position pos:line="359" pos:column="51"/></operator><name pos:line="359" pos:column="48">state<pos:position pos:line="359" pos:column="53"/></name><operator pos:line="359" pos:column="53">.<pos:position pos:line="359" pos:column="54"/></operator><name pos:line="359" pos:column="54">range<pos:position pos:line="359" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="359" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="360" pos:column="6"/></block></then>
    <elseif pos:line="361" pos:column="5">else <if pos:line="361" pos:column="10">if<condition pos:line="361" pos:column="12">(<expr><operator pos:line="361" pos:column="13">(<pos:position pos:line="361" pos:column="14"/></operator><name pos:line="361" pos:column="14">httpreq<pos:position pos:line="361" pos:column="21"/></name> <operator pos:line="361" pos:column="22">!=<pos:position pos:line="361" pos:column="24"/></operator> <name pos:line="361" pos:column="25">HTTPREQ_GET<pos:position pos:line="361" pos:column="36"/></name><operator pos:line="361" pos:column="36">)<pos:position pos:line="361" pos:column="37"/></operator> <operator pos:line="361" pos:column="38">&amp;&amp;<pos:position pos:line="361" pos:column="48"/></operator>
            <operator pos:line="362" pos:column="13">!<pos:position pos:line="362" pos:column="14"/></operator><call><name pos:line="362" pos:column="14">checkheaders<pos:position pos:line="362" pos:column="26"/></name><argument_list pos:line="362" pos:column="26">(<argument><expr><name pos:line="362" pos:column="27">data<pos:position pos:line="362" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="362" pos:column="33">"Content-Range:"<pos:position pos:line="362" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="362" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="362" pos:column="51"/></condition><then pos:line="362" pos:column="51"> <block pos:line="362" pos:column="52">{

      <comment type="block" pos:line="364" pos:column="7">/* if a line like this was already allocated, free the previous one */</comment>
      <if pos:line="365" pos:column="7">if<condition pos:line="365" pos:column="9">(<expr><name><name pos:line="365" pos:column="10">conn<pos:position pos:line="365" pos:column="14"/></name><operator pos:line="365" pos:column="14">-&gt;<pos:position pos:line="365" pos:column="19"/></operator><name pos:line="365" pos:column="16">allocptr<pos:position pos:line="365" pos:column="24"/></name><operator pos:line="365" pos:column="24">.<pos:position pos:line="365" pos:column="25"/></operator><name pos:line="365" pos:column="25">rangeline<pos:position pos:line="365" pos:column="34"/></name></name></expr>)<pos:position pos:line="365" pos:column="35"/></condition><then pos:line="365" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="366" pos:column="9">free<pos:position pos:line="366" pos:column="13"/></name><argument_list pos:line="366" pos:column="13">(<argument><expr><name><name pos:line="366" pos:column="14">conn<pos:position pos:line="366" pos:column="18"/></name><operator pos:line="366" pos:column="18">-&gt;<pos:position pos:line="366" pos:column="23"/></operator><name pos:line="366" pos:column="20">allocptr<pos:position pos:line="366" pos:column="28"/></name><operator pos:line="366" pos:column="28">.<pos:position pos:line="366" pos:column="29"/></operator><name pos:line="366" pos:column="29">rangeline<pos:position pos:line="366" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="366" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="40"/></expr_stmt></block></then></if>

      <if pos:line="368" pos:column="7">if<condition pos:line="368" pos:column="9">(<expr><name><name pos:line="368" pos:column="10">data<pos:position pos:line="368" pos:column="14"/></name><operator pos:line="368" pos:column="14">-&gt;<pos:position pos:line="368" pos:column="19"/></operator><name pos:line="368" pos:column="16">state<pos:position pos:line="368" pos:column="21"/></name><operator pos:line="368" pos:column="21">.<pos:position pos:line="368" pos:column="22"/></operator><name pos:line="368" pos:column="22">resume_from<pos:position pos:line="368" pos:column="33"/></name></name></expr>)<pos:position pos:line="368" pos:column="34"/></condition><then pos:line="368" pos:column="34"> <block pos:line="368" pos:column="35">{
        <comment type="block" pos:line="369" pos:column="9">/* This is because "resume" was selected */</comment>
        <decl_stmt><decl><type><name pos:line="370" pos:column="9">curl_off_t<pos:position pos:line="370" pos:column="19"/></name></type> <name pos:line="370" pos:column="20">total_expected_size<pos:position pos:line="370" pos:column="39"/></name><init pos:line="370" pos:column="39">=
          <expr><name><name pos:line="371" pos:column="11">data<pos:position pos:line="371" pos:column="15"/></name><operator pos:line="371" pos:column="15">-&gt;<pos:position pos:line="371" pos:column="20"/></operator><name pos:line="371" pos:column="17">state<pos:position pos:line="371" pos:column="22"/></name><operator pos:line="371" pos:column="22">.<pos:position pos:line="371" pos:column="23"/></operator><name pos:line="371" pos:column="23">resume_from<pos:position pos:line="371" pos:column="34"/></name></name> <operator pos:line="371" pos:column="35">+<pos:position pos:line="371" pos:column="36"/></operator> <name><name pos:line="371" pos:column="37">data<pos:position pos:line="371" pos:column="41"/></name><operator pos:line="371" pos:column="41">-&gt;<pos:position pos:line="371" pos:column="46"/></operator><name pos:line="371" pos:column="43">set<pos:position pos:line="371" pos:column="46"/></name><operator pos:line="371" pos:column="46">.<pos:position pos:line="371" pos:column="47"/></operator><name pos:line="371" pos:column="47">infilesize<pos:position pos:line="371" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="371" pos:column="58"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="372" pos:column="9">conn<pos:position pos:line="372" pos:column="13"/></name><operator pos:line="372" pos:column="13">-&gt;<pos:position pos:line="372" pos:column="18"/></operator><name pos:line="372" pos:column="15">allocptr<pos:position pos:line="372" pos:column="23"/></name><operator pos:line="372" pos:column="23">.<pos:position pos:line="372" pos:column="24"/></operator><name pos:line="372" pos:column="24">rangeline<pos:position pos:line="372" pos:column="33"/></name></name> <operator pos:line="372" pos:column="34">=<pos:position pos:line="372" pos:column="35"/></operator>
            <call><name pos:line="373" pos:column="13">aprintf<pos:position pos:line="373" pos:column="20"/></name><argument_list pos:line="373" pos:column="20">(<argument><expr><literal type="string" pos:line="373" pos:column="21">"Content-Range: bytes %s%"<pos:position pos:line="373" pos:column="47"/></literal> <name pos:line="373" pos:column="48">FORMAT_OFF_T<pos:position pos:line="373" pos:column="60"/></name>
                    <literal type="string" pos:line="374" pos:column="21">"/%"<pos:position pos:line="374" pos:column="25"/></literal> <name pos:line="374" pos:column="26">FORMAT_OFF_T<pos:position pos:line="374" pos:column="38"/></name> <literal type="string" pos:line="374" pos:column="39">"\r\n"<pos:position pos:line="374" pos:column="45"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="375" pos:column="21">data<pos:position pos:line="375" pos:column="25"/></name><operator pos:line="375" pos:column="25">-&gt;<pos:position pos:line="375" pos:column="30"/></operator><name pos:line="375" pos:column="27">state<pos:position pos:line="375" pos:column="32"/></name><operator pos:line="375" pos:column="32">.<pos:position pos:line="375" pos:column="33"/></operator><name pos:line="375" pos:column="33">range<pos:position pos:line="375" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="375" pos:column="40">total_expected_size<pos:position pos:line="375" pos:column="59"/></name><operator pos:line="375" pos:column="59">-<pos:position pos:line="375" pos:column="60"/></operator><literal type="number" pos:line="375" pos:column="60">1<pos:position pos:line="375" pos:column="61"/></literal></expr></argument>,
                    <argument><expr><name pos:line="376" pos:column="21">total_expected_size<pos:position pos:line="376" pos:column="40"/></name></expr></argument>)<pos:position pos:line="376" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="376" pos:column="42"/></expr_stmt>
      }<pos:position pos:line="377" pos:column="8"/></block></then>
      <else pos:line="378" pos:column="7">else <block pos:line="378" pos:column="12">{
        <comment type="block" pos:line="379" pos:column="9">/* Range was selected and then we just pass the incoming range and
           append total size */</comment>
        <expr_stmt><expr><name><name pos:line="381" pos:column="9">conn<pos:position pos:line="381" pos:column="13"/></name><operator pos:line="381" pos:column="13">-&gt;<pos:position pos:line="381" pos:column="18"/></operator><name pos:line="381" pos:column="15">allocptr<pos:position pos:line="381" pos:column="23"/></name><operator pos:line="381" pos:column="23">.<pos:position pos:line="381" pos:column="24"/></operator><name pos:line="381" pos:column="24">rangeline<pos:position pos:line="381" pos:column="33"/></name></name> <operator pos:line="381" pos:column="34">=<pos:position pos:line="381" pos:column="35"/></operator>
            <call><name pos:line="382" pos:column="13">aprintf<pos:position pos:line="382" pos:column="20"/></name><argument_list pos:line="382" pos:column="20">(<argument><expr><literal type="string" pos:line="382" pos:column="21">"Content-Range: bytes %s/%"<pos:position pos:line="382" pos:column="48"/></literal> <name pos:line="382" pos:column="49">FORMAT_OFF_T<pos:position pos:line="382" pos:column="61"/></name> <literal type="string" pos:line="382" pos:column="62">"\r\n"<pos:position pos:line="382" pos:column="68"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="383" pos:column="21">data<pos:position pos:line="383" pos:column="25"/></name><operator pos:line="383" pos:column="25">-&gt;<pos:position pos:line="383" pos:column="30"/></operator><name pos:line="383" pos:column="27">state<pos:position pos:line="383" pos:column="32"/></name><operator pos:line="383" pos:column="32">.<pos:position pos:line="383" pos:column="33"/></operator><name pos:line="383" pos:column="33">range<pos:position pos:line="383" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="383" pos:column="40">data<pos:position pos:line="383" pos:column="44"/></name><operator pos:line="383" pos:column="44">-&gt;<pos:position pos:line="383" pos:column="49"/></operator><name pos:line="383" pos:column="46">set<pos:position pos:line="383" pos:column="49"/></name><operator pos:line="383" pos:column="49">.<pos:position pos:line="383" pos:column="50"/></operator><name pos:line="383" pos:column="50">infilesize<pos:position pos:line="383" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="383" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="62"/></expr_stmt>
      }<pos:position pos:line="384" pos:column="8"/></block></else></if>
      <if pos:line="385" pos:column="7">if<condition pos:line="385" pos:column="9">(<expr><operator pos:line="385" pos:column="10">!<pos:position pos:line="385" pos:column="11"/></operator><name><name pos:line="385" pos:column="11">conn<pos:position pos:line="385" pos:column="15"/></name><operator pos:line="385" pos:column="15">-&gt;<pos:position pos:line="385" pos:column="20"/></operator><name pos:line="385" pos:column="17">allocptr<pos:position pos:line="385" pos:column="25"/></name><operator pos:line="385" pos:column="25">.<pos:position pos:line="385" pos:column="26"/></operator><name pos:line="385" pos:column="26">rangeline<pos:position pos:line="385" pos:column="35"/></name></name></expr>)<pos:position pos:line="385" pos:column="36"/></condition><then pos:line="385" pos:column="36">
        <block type="pseudo"><return pos:line="386" pos:column="9">return <expr><name pos:line="386" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="386" pos:column="35"/></name></expr>;<pos:position pos:line="386" pos:column="36"/></return></block></then></if>
    }<pos:position pos:line="387" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="388" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="390" pos:column="3">/* Use 1.1 unless the use specificly asked for 1.0 */</comment>
  <expr_stmt><expr><name pos:line="391" pos:column="3">httpstring<pos:position pos:line="391" pos:column="13"/></name><operator pos:line="391" pos:column="13">=<pos:position pos:line="391" pos:column="14"/></operator> <ternary><condition><expr><name><name pos:line="391" pos:column="15">data<pos:position pos:line="391" pos:column="19"/></name><operator pos:line="391" pos:column="19">-&gt;<pos:position pos:line="391" pos:column="24"/></operator><name pos:line="391" pos:column="21">set<pos:position pos:line="391" pos:column="24"/></name><operator pos:line="391" pos:column="24">.<pos:position pos:line="391" pos:column="25"/></operator><name pos:line="391" pos:column="25">httpversion<pos:position pos:line="391" pos:column="36"/></name></name><operator pos:line="391" pos:column="36">==<pos:position pos:line="391" pos:column="38"/></operator><name pos:line="391" pos:column="38">CURL_HTTP_VERSION_1_0<pos:position pos:line="391" pos:column="59"/></name></expr>?<pos:position pos:line="391" pos:column="60"/></condition><then><expr><literal type="string" pos:line="391" pos:column="60">"1.0"<pos:position pos:line="391" pos:column="65"/></literal></expr></then><else pos:line="391" pos:column="65">:<expr><literal type="string" pos:line="391" pos:column="66">"1.1"<pos:position pos:line="391" pos:column="71"/></literal></expr></else></ternary></expr>;<pos:position pos:line="391" pos:column="72"/></expr_stmt>

  <comment type="block" pos:line="393" pos:column="3">/* initialize a dynamic send-buffer */</comment>
  <expr_stmt><expr><name pos:line="394" pos:column="3">req_buffer<pos:position pos:line="394" pos:column="13"/></name> <operator pos:line="394" pos:column="14">=<pos:position pos:line="394" pos:column="15"/></operator> <call><name pos:line="394" pos:column="16">add_buffer_init<pos:position pos:line="394" pos:column="31"/></name><argument_list pos:line="394" pos:column="31">()<pos:position pos:line="394" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="394" pos:column="34"/></expr_stmt>

  <if pos:line="396" pos:column="3">if<condition pos:line="396" pos:column="5">(<expr><operator pos:line="396" pos:column="6">!<pos:position pos:line="396" pos:column="7"/></operator><name pos:line="396" pos:column="7">req_buffer<pos:position pos:line="396" pos:column="17"/></name></expr>)<pos:position pos:line="396" pos:column="18"/></condition><then pos:line="396" pos:column="18">
    <block type="pseudo"><return pos:line="397" pos:column="5">return <expr><name pos:line="397" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="397" pos:column="31"/></name></expr>;<pos:position pos:line="397" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="399" pos:column="3">/* add the main request stuff */</comment>
  <expr_stmt><expr><name pos:line="400" pos:column="3">result<pos:position pos:line="400" pos:column="9"/></name> <operator pos:line="400" pos:column="10">=<pos:position pos:line="400" pos:column="11"/></operator>
    <call><name pos:line="401" pos:column="5">add_bufferf<pos:position pos:line="401" pos:column="16"/></name><argument_list pos:line="401" pos:column="16">(<argument><expr><name pos:line="401" pos:column="17">req_buffer<pos:position pos:line="401" pos:column="27"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="402" pos:column="17">"%s "<pos:position pos:line="402" pos:column="22"/></literal> <comment type="block" pos:line="402" pos:column="23">/* GET/HEAD/POST/PUT */</comment>
                <literal type="string" pos:line="403" pos:column="17">"%s%s HTTP/%s\r\n"<pos:position pos:line="403" pos:column="35"/></literal> <comment type="block" pos:line="403" pos:column="36">/* path + HTTP version */</comment>
                <literal type="string" pos:line="404" pos:column="17">"%s"<pos:position pos:line="404" pos:column="21"/></literal> <comment type="block" pos:line="404" pos:column="22">/* proxyuserpwd */</comment>
                <literal type="string" pos:line="405" pos:column="17">"%s"<pos:position pos:line="405" pos:column="21"/></literal> <comment type="block" pos:line="405" pos:column="22">/* userpwd */</comment>
                <literal type="string" pos:line="406" pos:column="17">"%s"<pos:position pos:line="406" pos:column="21"/></literal> <comment type="block" pos:line="406" pos:column="22">/* range */</comment>
                <literal type="string" pos:line="407" pos:column="17">"%s"<pos:position pos:line="407" pos:column="21"/></literal> <comment type="block" pos:line="407" pos:column="22">/* user agent */</comment>
                <literal type="string" pos:line="408" pos:column="17">"%s"<pos:position pos:line="408" pos:column="21"/></literal> <comment type="block" pos:line="408" pos:column="22">/* host */</comment>
                <literal type="string" pos:line="409" pos:column="17">"%s"<pos:position pos:line="409" pos:column="21"/></literal> <comment type="block" pos:line="409" pos:column="22">/* pragma */</comment>
                <literal type="string" pos:line="410" pos:column="17">"%s"<pos:position pos:line="410" pos:column="21"/></literal> <comment type="block" pos:line="410" pos:column="22">/* accept */</comment>
                <literal type="string" pos:line="411" pos:column="17">"%s"<pos:position pos:line="411" pos:column="21"/></literal> <comment type="block" pos:line="411" pos:column="22">/* accept-encoding */</comment>
                <literal type="string" pos:line="412" pos:column="17">"%s"<pos:position pos:line="412" pos:column="21"/></literal> <comment type="block" pos:line="412" pos:column="22">/* referer */</comment>
                <literal type="string" pos:line="413" pos:column="17">"%s"<pos:position pos:line="413" pos:column="21"/></literal> <comment type="block" pos:line="413" pos:column="22">/* Proxy-Connection */</comment>
                <literal type="string" pos:line="414" pos:column="17">"%s"<pos:position pos:line="414" pos:column="21"/></literal></expr></argument>,<comment type="block" pos:line="414" pos:column="22">/* transfer-encoding */</comment>

                <argument><expr><name pos:line="416" pos:column="17">request<pos:position pos:line="416" pos:column="24"/></name></expr></argument>,
                <argument><expr><name pos:line="417" pos:column="17">ppath<pos:position pos:line="417" pos:column="22"/></name></expr></argument>,
                <argument><expr><name pos:line="418" pos:column="17">ftp_typecode<pos:position pos:line="418" pos:column="29"/></name></expr></argument>,
                <argument><expr><name pos:line="419" pos:column="17">httpstring<pos:position pos:line="419" pos:column="27"/></name></expr></argument>,
                <argument><expr><ternary><condition><expr><name><name pos:line="420" pos:column="17">conn<pos:position pos:line="420" pos:column="21"/></name><operator pos:line="420" pos:column="21">-&gt;<pos:position pos:line="420" pos:column="26"/></operator><name pos:line="420" pos:column="23">allocptr<pos:position pos:line="420" pos:column="31"/></name><operator pos:line="420" pos:column="31">.<pos:position pos:line="420" pos:column="32"/></operator><name pos:line="420" pos:column="32">proxyuserpwd<pos:position pos:line="420" pos:column="44"/></name></name></expr>?<pos:position pos:line="420" pos:column="45"/></condition><then pos:line="420" pos:column="45">
                <expr><name><name pos:line="421" pos:column="17">conn<pos:position pos:line="421" pos:column="21"/></name><operator pos:line="421" pos:column="21">-&gt;<pos:position pos:line="421" pos:column="26"/></operator><name pos:line="421" pos:column="23">allocptr<pos:position pos:line="421" pos:column="31"/></name><operator pos:line="421" pos:column="31">.<pos:position pos:line="421" pos:column="32"/></operator><name pos:line="421" pos:column="32">proxyuserpwd<pos:position pos:line="421" pos:column="44"/></name></name></expr></then><else pos:line="421" pos:column="44">:<expr><literal type="string" pos:line="421" pos:column="45">""<pos:position pos:line="421" pos:column="47"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><ternary><condition><expr><name><name pos:line="422" pos:column="17">conn<pos:position pos:line="422" pos:column="21"/></name><operator pos:line="422" pos:column="21">-&gt;<pos:position pos:line="422" pos:column="26"/></operator><name pos:line="422" pos:column="23">allocptr<pos:position pos:line="422" pos:column="31"/></name><operator pos:line="422" pos:column="31">.<pos:position pos:line="422" pos:column="32"/></operator><name pos:line="422" pos:column="32">userpwd<pos:position pos:line="422" pos:column="39"/></name></name></expr>?<pos:position pos:line="422" pos:column="40"/></condition><then><expr><name><name pos:line="422" pos:column="40">conn<pos:position pos:line="422" pos:column="44"/></name><operator pos:line="422" pos:column="44">-&gt;<pos:position pos:line="422" pos:column="49"/></operator><name pos:line="422" pos:column="46">allocptr<pos:position pos:line="422" pos:column="54"/></name><operator pos:line="422" pos:column="54">.<pos:position pos:line="422" pos:column="55"/></operator><name pos:line="422" pos:column="55">userpwd<pos:position pos:line="422" pos:column="62"/></name></name></expr></then><else pos:line="422" pos:column="62">:<expr><literal type="string" pos:line="422" pos:column="63">""<pos:position pos:line="422" pos:column="65"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><ternary><condition><expr><operator pos:line="423" pos:column="17">(<pos:position pos:line="423" pos:column="18"/></operator><name><name pos:line="423" pos:column="18">data<pos:position pos:line="423" pos:column="22"/></name><operator pos:line="423" pos:column="22">-&gt;<pos:position pos:line="423" pos:column="27"/></operator><name pos:line="423" pos:column="24">state<pos:position pos:line="423" pos:column="29"/></name><operator pos:line="423" pos:column="29">.<pos:position pos:line="423" pos:column="30"/></operator><name pos:line="423" pos:column="30">use_range<pos:position pos:line="423" pos:column="39"/></name></name> <operator pos:line="423" pos:column="40">&amp;&amp;<pos:position pos:line="423" pos:column="50"/></operator> <name><name pos:line="423" pos:column="43">conn<pos:position pos:line="423" pos:column="47"/></name><operator pos:line="423" pos:column="47">-&gt;<pos:position pos:line="423" pos:column="52"/></operator><name pos:line="423" pos:column="49">allocptr<pos:position pos:line="423" pos:column="57"/></name><operator pos:line="423" pos:column="57">.<pos:position pos:line="423" pos:column="58"/></operator><name pos:line="423" pos:column="58">rangeline<pos:position pos:line="423" pos:column="67"/></name></name><operator pos:line="423" pos:column="67">)<pos:position pos:line="423" pos:column="68"/></operator></expr>?<pos:position pos:line="423" pos:column="69"/></condition><then pos:line="423" pos:column="69">
                <expr><name><name pos:line="424" pos:column="17">conn<pos:position pos:line="424" pos:column="21"/></name><operator pos:line="424" pos:column="21">-&gt;<pos:position pos:line="424" pos:column="26"/></operator><name pos:line="424" pos:column="23">allocptr<pos:position pos:line="424" pos:column="31"/></name><operator pos:line="424" pos:column="31">.<pos:position pos:line="424" pos:column="32"/></operator><name pos:line="424" pos:column="32">rangeline<pos:position pos:line="424" pos:column="41"/></name></name></expr></then><else pos:line="424" pos:column="41">:<expr><literal type="string" pos:line="424" pos:column="42">""<pos:position pos:line="424" pos:column="44"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><ternary><condition><expr><operator pos:line="425" pos:column="17">(<pos:position pos:line="425" pos:column="18"/></operator><name><name pos:line="425" pos:column="18">data<pos:position pos:line="425" pos:column="22"/></name><operator pos:line="425" pos:column="22">-&gt;<pos:position pos:line="425" pos:column="27"/></operator><name pos:line="425" pos:column="24">set<pos:position pos:line="425" pos:column="27"/></name><operator pos:line="425" pos:column="27">.<pos:position pos:line="425" pos:column="28"/></operator><name pos:line="425" pos:column="28">str<pos:position pos:line="425" pos:column="31"/></name><index pos:line="425" pos:column="31">[<expr><name pos:line="425" pos:column="32">STRING_USERAGENT<pos:position pos:line="425" pos:column="48"/></name></expr>]<pos:position pos:line="425" pos:column="49"/></index></name> <operator pos:line="425" pos:column="50">&amp;&amp;<pos:position pos:line="425" pos:column="60"/></operator>
                 <operator pos:line="426" pos:column="18">*<pos:position pos:line="426" pos:column="19"/></operator><name><name pos:line="426" pos:column="19">data<pos:position pos:line="426" pos:column="23"/></name><operator pos:line="426" pos:column="23">-&gt;<pos:position pos:line="426" pos:column="28"/></operator><name pos:line="426" pos:column="25">set<pos:position pos:line="426" pos:column="28"/></name><operator pos:line="426" pos:column="28">.<pos:position pos:line="426" pos:column="29"/></operator><name pos:line="426" pos:column="29">str<pos:position pos:line="426" pos:column="32"/></name><index pos:line="426" pos:column="32">[<expr><name pos:line="426" pos:column="33">STRING_USERAGENT<pos:position pos:line="426" pos:column="49"/></name></expr>]<pos:position pos:line="426" pos:column="50"/></index></name> <operator pos:line="426" pos:column="51">&amp;&amp;<pos:position pos:line="426" pos:column="61"/></operator> <name><name pos:line="426" pos:column="54">conn<pos:position pos:line="426" pos:column="58"/></name><operator pos:line="426" pos:column="58">-&gt;<pos:position pos:line="426" pos:column="63"/></operator><name pos:line="426" pos:column="60">allocptr<pos:position pos:line="426" pos:column="68"/></name><operator pos:line="426" pos:column="68">.<pos:position pos:line="426" pos:column="69"/></operator><name pos:line="426" pos:column="69">uagent<pos:position pos:line="426" pos:column="75"/></name></name><operator pos:line="426" pos:column="75">)<pos:position pos:line="426" pos:column="76"/></operator></expr>?<pos:position pos:line="426" pos:column="77"/></condition><then pos:line="426" pos:column="77">
                <expr><name><name pos:line="427" pos:column="17">conn<pos:position pos:line="427" pos:column="21"/></name><operator pos:line="427" pos:column="21">-&gt;<pos:position pos:line="427" pos:column="26"/></operator><name pos:line="427" pos:column="23">allocptr<pos:position pos:line="427" pos:column="31"/></name><operator pos:line="427" pos:column="31">.<pos:position pos:line="427" pos:column="32"/></operator><name pos:line="427" pos:column="32">uagent<pos:position pos:line="427" pos:column="38"/></name></name></expr></then><else pos:line="427" pos:column="38">:<expr><literal type="string" pos:line="427" pos:column="39">""<pos:position pos:line="427" pos:column="41"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><operator pos:line="428" pos:column="17">(<pos:position pos:line="428" pos:column="18"/></operator><ternary><condition><expr><name><name pos:line="428" pos:column="18">conn<pos:position pos:line="428" pos:column="22"/></name><operator pos:line="428" pos:column="22">-&gt;<pos:position pos:line="428" pos:column="27"/></operator><name pos:line="428" pos:column="24">allocptr<pos:position pos:line="428" pos:column="32"/></name><operator pos:line="428" pos:column="32">.<pos:position pos:line="428" pos:column="33"/></operator><name pos:line="428" pos:column="33">host<pos:position pos:line="428" pos:column="37"/></name></name></expr>?<pos:position pos:line="428" pos:column="38"/></condition><then><expr><name><name pos:line="428" pos:column="38">conn<pos:position pos:line="428" pos:column="42"/></name><operator pos:line="428" pos:column="42">-&gt;<pos:position pos:line="428" pos:column="47"/></operator><name pos:line="428" pos:column="44">allocptr<pos:position pos:line="428" pos:column="52"/></name><operator pos:line="428" pos:column="52">.<pos:position pos:line="428" pos:column="53"/></operator><name pos:line="428" pos:column="53">host<pos:position pos:line="428" pos:column="57"/></name></name></expr></then><else pos:line="428" pos:column="57">:<expr><literal type="string" pos:line="428" pos:column="58">""<pos:position pos:line="428" pos:column="60"/></literal></expr></else></ternary><operator pos:line="428" pos:column="60">)<pos:position pos:line="428" pos:column="61"/></operator></expr></argument>, <comment type="block" pos:line="428" pos:column="63">/* Host: host */</comment>
                <argument><expr><ternary><condition><expr><name><name pos:line="429" pos:column="17">http<pos:position pos:line="429" pos:column="21"/></name><operator pos:line="429" pos:column="21">-&gt;<pos:position pos:line="429" pos:column="26"/></operator><name pos:line="429" pos:column="23">p_pragma<pos:position pos:line="429" pos:column="31"/></name></name></expr>?<pos:position pos:line="429" pos:column="32"/></condition><then><expr><name><name pos:line="429" pos:column="32">http<pos:position pos:line="429" pos:column="36"/></name><operator pos:line="429" pos:column="36">-&gt;<pos:position pos:line="429" pos:column="41"/></operator><name pos:line="429" pos:column="38">p_pragma<pos:position pos:line="429" pos:column="46"/></name></name></expr></then><else pos:line="429" pos:column="46">:<expr><literal type="string" pos:line="429" pos:column="47">""<pos:position pos:line="429" pos:column="49"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><ternary><condition><expr><name><name pos:line="430" pos:column="17">http<pos:position pos:line="430" pos:column="21"/></name><operator pos:line="430" pos:column="21">-&gt;<pos:position pos:line="430" pos:column="26"/></operator><name pos:line="430" pos:column="23">p_accept<pos:position pos:line="430" pos:column="31"/></name></name></expr>?<pos:position pos:line="430" pos:column="32"/></condition><then><expr><name><name pos:line="430" pos:column="32">http<pos:position pos:line="430" pos:column="36"/></name><operator pos:line="430" pos:column="36">-&gt;<pos:position pos:line="430" pos:column="41"/></operator><name pos:line="430" pos:column="38">p_accept<pos:position pos:line="430" pos:column="46"/></name></name></expr></then><else pos:line="430" pos:column="46">:<expr><literal type="string" pos:line="430" pos:column="47">""<pos:position pos:line="430" pos:column="49"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><ternary><condition><expr><operator pos:line="431" pos:column="17">(<pos:position pos:line="431" pos:column="18"/></operator><name><name pos:line="431" pos:column="18">data<pos:position pos:line="431" pos:column="22"/></name><operator pos:line="431" pos:column="22">-&gt;<pos:position pos:line="431" pos:column="27"/></operator><name pos:line="431" pos:column="24">set<pos:position pos:line="431" pos:column="27"/></name><operator pos:line="431" pos:column="27">.<pos:position pos:line="431" pos:column="28"/></operator><name pos:line="431" pos:column="28">str<pos:position pos:line="431" pos:column="31"/></name><index pos:line="431" pos:column="31">[<expr><name pos:line="431" pos:column="32">STRING_ENCODING<pos:position pos:line="431" pos:column="47"/></name></expr>]<pos:position pos:line="431" pos:column="48"/></index></name> <operator pos:line="431" pos:column="49">&amp;&amp;<pos:position pos:line="431" pos:column="59"/></operator>
                 <operator pos:line="432" pos:column="18">*<pos:position pos:line="432" pos:column="19"/></operator><name><name pos:line="432" pos:column="19">data<pos:position pos:line="432" pos:column="23"/></name><operator pos:line="432" pos:column="23">-&gt;<pos:position pos:line="432" pos:column="28"/></operator><name pos:line="432" pos:column="25">set<pos:position pos:line="432" pos:column="28"/></name><operator pos:line="432" pos:column="28">.<pos:position pos:line="432" pos:column="29"/></operator><name pos:line="432" pos:column="29">str<pos:position pos:line="432" pos:column="32"/></name><index pos:line="432" pos:column="32">[<expr><name pos:line="432" pos:column="33">STRING_ENCODING<pos:position pos:line="432" pos:column="48"/></name></expr>]<pos:position pos:line="432" pos:column="49"/></index></name> <operator pos:line="432" pos:column="50">&amp;&amp;<pos:position pos:line="432" pos:column="60"/></operator>
                 <name><name pos:line="433" pos:column="18">conn<pos:position pos:line="433" pos:column="22"/></name><operator pos:line="433" pos:column="22">-&gt;<pos:position pos:line="433" pos:column="27"/></operator><name pos:line="433" pos:column="24">allocptr<pos:position pos:line="433" pos:column="32"/></name><operator pos:line="433" pos:column="32">.<pos:position pos:line="433" pos:column="33"/></operator><name pos:line="433" pos:column="33">accept_encoding<pos:position pos:line="433" pos:column="48"/></name></name><operator pos:line="433" pos:column="48">)<pos:position pos:line="433" pos:column="49"/></operator></expr>?<pos:position pos:line="433" pos:column="50"/></condition><then pos:line="433" pos:column="50">
                <expr><name><name pos:line="434" pos:column="17">conn<pos:position pos:line="434" pos:column="21"/></name><operator pos:line="434" pos:column="21">-&gt;<pos:position pos:line="434" pos:column="26"/></operator><name pos:line="434" pos:column="23">allocptr<pos:position pos:line="434" pos:column="31"/></name><operator pos:line="434" pos:column="31">.<pos:position pos:line="434" pos:column="32"/></operator><name pos:line="434" pos:column="32">accept_encoding<pos:position pos:line="434" pos:column="47"/></name></name></expr></then><else pos:line="434" pos:column="47">:<expr><literal type="string" pos:line="434" pos:column="48">""<pos:position pos:line="434" pos:column="50"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><ternary><condition><expr><operator pos:line="435" pos:column="17">(<pos:position pos:line="435" pos:column="18"/></operator><name><name pos:line="435" pos:column="18">data<pos:position pos:line="435" pos:column="22"/></name><operator pos:line="435" pos:column="22">-&gt;<pos:position pos:line="435" pos:column="27"/></operator><name pos:line="435" pos:column="24">change<pos:position pos:line="435" pos:column="30"/></name><operator pos:line="435" pos:column="30">.<pos:position pos:line="435" pos:column="31"/></operator><name pos:line="435" pos:column="31">referer<pos:position pos:line="435" pos:column="38"/></name></name> <operator pos:line="435" pos:column="39">&amp;&amp;<pos:position pos:line="435" pos:column="49"/></operator> <name><name pos:line="435" pos:column="42">conn<pos:position pos:line="435" pos:column="46"/></name><operator pos:line="435" pos:column="46">-&gt;<pos:position pos:line="435" pos:column="51"/></operator><name pos:line="435" pos:column="48">allocptr<pos:position pos:line="435" pos:column="56"/></name><operator pos:line="435" pos:column="56">.<pos:position pos:line="435" pos:column="57"/></operator><name pos:line="435" pos:column="57">ref<pos:position pos:line="435" pos:column="60"/></name></name><operator pos:line="435" pos:column="60">)<pos:position pos:line="435" pos:column="61"/></operator></expr>?<pos:position pos:line="435" pos:column="62"/></condition><then pos:line="435" pos:column="62">
                <expr><name><name pos:line="436" pos:column="17">conn<pos:position pos:line="436" pos:column="21"/></name><operator pos:line="436" pos:column="21">-&gt;<pos:position pos:line="436" pos:column="26"/></operator><name pos:line="436" pos:column="23">allocptr<pos:position pos:line="436" pos:column="31"/></name><operator pos:line="436" pos:column="31">.<pos:position pos:line="436" pos:column="32"/></operator><name pos:line="436" pos:column="32">ref<pos:position pos:line="436" pos:column="35"/></name></name></expr></then><else pos:line="436" pos:column="35">:<expr><literal type="string" pos:line="436" pos:column="36">""<pos:position pos:line="436" pos:column="38"/></literal></expr></else></ternary></expr></argument> <comment type="block" pos:line="436" pos:column="39">/* Referer: &lt;data&gt; */</comment>,
                <argument><expr><ternary><condition><expr><operator pos:line="437" pos:column="17">(<pos:position pos:line="437" pos:column="18"/></operator><name><name pos:line="437" pos:column="18">conn<pos:position pos:line="437" pos:column="22"/></name><operator pos:line="437" pos:column="22">-&gt;<pos:position pos:line="437" pos:column="27"/></operator><name pos:line="437" pos:column="24">bits<pos:position pos:line="437" pos:column="28"/></name><operator pos:line="437" pos:column="28">.<pos:position pos:line="437" pos:column="29"/></operator><name pos:line="437" pos:column="29">httpproxy<pos:position pos:line="437" pos:column="38"/></name></name> <operator pos:line="437" pos:column="39">&amp;&amp;<pos:position pos:line="437" pos:column="49"/></operator>
                 <operator pos:line="438" pos:column="18">!<pos:position pos:line="438" pos:column="19"/></operator><name><name pos:line="438" pos:column="19">conn<pos:position pos:line="438" pos:column="23"/></name><operator pos:line="438" pos:column="23">-&gt;<pos:position pos:line="438" pos:column="28"/></operator><name pos:line="438" pos:column="25">bits<pos:position pos:line="438" pos:column="29"/></name><operator pos:line="438" pos:column="29">.<pos:position pos:line="438" pos:column="30"/></operator><name pos:line="438" pos:column="30">tunnel_proxy<pos:position pos:line="438" pos:column="42"/></name></name> <operator pos:line="438" pos:column="43">&amp;&amp;<pos:position pos:line="438" pos:column="53"/></operator>
                 <operator pos:line="439" pos:column="18">!<pos:position pos:line="439" pos:column="19"/></operator><call><name pos:line="439" pos:column="19">checkheaders<pos:position pos:line="439" pos:column="31"/></name><argument_list pos:line="439" pos:column="31">(<argument><expr><name pos:line="439" pos:column="32">data<pos:position pos:line="439" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="439" pos:column="38">"Proxy-Connection:"<pos:position pos:line="439" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="439" pos:column="58"/></argument_list></call><operator pos:line="439" pos:column="58">)<pos:position pos:line="439" pos:column="59"/></operator></expr>?<pos:position pos:line="439" pos:column="60"/></condition><then pos:line="439" pos:column="60">
                <expr><literal type="string" pos:line="440" pos:column="17">"Proxy-Connection: Keep-Alive\r\n"<pos:position pos:line="440" pos:column="51"/></literal></expr></then><else pos:line="440" pos:column="51">:<expr><literal type="string" pos:line="440" pos:column="52">""<pos:position pos:line="440" pos:column="54"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><name pos:line="441" pos:column="17">te<pos:position pos:line="441" pos:column="19"/></name></expr></argument>
      )<pos:position pos:line="442" pos:column="8"/></argument_list></call></expr>;<pos:position pos:line="442" pos:column="9"/></expr_stmt>

  <comment type="block" pos:line="444" pos:column="3">/*
   * Free userpwd now --- cannot reuse this for Negotiate and possibly NTLM
   * with basic and digest, it will be freed anyway by the next request
   */</comment>

  <expr_stmt><expr><call><name pos:line="449" pos:column="3">Curl_safefree<pos:position pos:line="449" pos:column="16"/></name> <argument_list pos:line="449" pos:column="17">(<argument><expr><name><name pos:line="449" pos:column="18">conn<pos:position pos:line="449" pos:column="22"/></name><operator pos:line="449" pos:column="22">-&gt;<pos:position pos:line="449" pos:column="27"/></operator><name pos:line="449" pos:column="24">allocptr<pos:position pos:line="449" pos:column="32"/></name><operator pos:line="449" pos:column="32">.<pos:position pos:line="449" pos:column="33"/></operator><name pos:line="449" pos:column="33">userpwd<pos:position pos:line="449" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="449" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="449" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="450" pos:column="3">conn<pos:position pos:line="450" pos:column="7"/></name><operator pos:line="450" pos:column="7">-&gt;<pos:position pos:line="450" pos:column="12"/></operator><name pos:line="450" pos:column="9">allocptr<pos:position pos:line="450" pos:column="17"/></name><operator pos:line="450" pos:column="17">.<pos:position pos:line="450" pos:column="18"/></operator><name pos:line="450" pos:column="18">userpwd<pos:position pos:line="450" pos:column="25"/></name></name> <operator pos:line="450" pos:column="26">=<pos:position pos:line="450" pos:column="27"/></operator> <name pos:line="450" pos:column="28">NULL<pos:position pos:line="450" pos:column="32"/></name></expr>;<pos:position pos:line="450" pos:column="33"/></expr_stmt>

  <if pos:line="452" pos:column="3">if<condition pos:line="452" pos:column="5">(<expr><name pos:line="452" pos:column="6">result<pos:position pos:line="452" pos:column="12"/></name></expr>)<pos:position pos:line="452" pos:column="13"/></condition><then pos:line="452" pos:column="13">
    <block type="pseudo"><return pos:line="453" pos:column="5">return <expr><name pos:line="453" pos:column="12">result<pos:position pos:line="453" pos:column="18"/></name></expr>;<pos:position pos:line="453" pos:column="19"/></return></block></then></if>

<cpp:if pos:line="455" pos:column="1">#<cpp:directive pos:line="455" pos:column="2">if<pos:position pos:line="455" pos:column="4"/></cpp:directive> <expr><operator pos:line="455" pos:column="5">!<pos:position pos:line="455" pos:column="6"/></operator><call><name pos:line="455" pos:column="6">defined<pos:position pos:line="455" pos:column="13"/></name><argument_list pos:line="455" pos:column="13">(<argument><expr><name pos:line="455" pos:column="14">CURL_DISABLE_COOKIES<pos:position pos:line="455" pos:column="34"/></name></expr></argument>)<pos:position pos:line="455" pos:column="35"/></argument_list></call></expr></cpp:if>
  <if pos:line="456" pos:column="3">if<condition pos:line="456" pos:column="5">(<expr><name><name pos:line="456" pos:column="6">data<pos:position pos:line="456" pos:column="10"/></name><operator pos:line="456" pos:column="10">-&gt;<pos:position pos:line="456" pos:column="15"/></operator><name pos:line="456" pos:column="12">cookies<pos:position pos:line="456" pos:column="19"/></name></name> <operator pos:line="456" pos:column="20">||<pos:position pos:line="456" pos:column="22"/></operator> <name pos:line="456" pos:column="23">addcookies<pos:position pos:line="456" pos:column="33"/></name></expr>)<pos:position pos:line="456" pos:column="34"/></condition><then pos:line="456" pos:column="34"> <block pos:line="456" pos:column="35">{
    <decl_stmt><decl><type><name><name pos:line="457" pos:column="5">struct<pos:position pos:line="457" pos:column="11"/></name> <name pos:line="457" pos:column="12">Cookie<pos:position pos:line="457" pos:column="18"/></name></name> <modifier pos:line="457" pos:column="19">*<pos:position pos:line="457" pos:column="20"/></modifier></type><name pos:line="457" pos:column="20">co<pos:position pos:line="457" pos:column="22"/></name><init pos:line="457" pos:column="22">=<expr><name pos:line="457" pos:column="23">NULL<pos:position pos:line="457" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="457" pos:column="28"/></decl_stmt> <comment type="block" pos:line="457" pos:column="29">/* no cookies from start */</comment>
    <decl_stmt><decl><type><name pos:line="458" pos:column="5">int<pos:position pos:line="458" pos:column="8"/></name></type> <name pos:line="458" pos:column="9">count<pos:position pos:line="458" pos:column="14"/></name><init pos:line="458" pos:column="14">=<expr><literal type="number" pos:line="458" pos:column="15">0<pos:position pos:line="458" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="458" pos:column="17"/></decl_stmt>

    <if pos:line="460" pos:column="5">if<condition pos:line="460" pos:column="7">(<expr><name><name pos:line="460" pos:column="8">data<pos:position pos:line="460" pos:column="12"/></name><operator pos:line="460" pos:column="12">-&gt;<pos:position pos:line="460" pos:column="17"/></operator><name pos:line="460" pos:column="14">cookies<pos:position pos:line="460" pos:column="21"/></name></name></expr>)<pos:position pos:line="460" pos:column="22"/></condition><then pos:line="460" pos:column="22"> <block pos:line="460" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="461" pos:column="7">Curl_share_lock<pos:position pos:line="461" pos:column="22"/></name><argument_list pos:line="461" pos:column="22">(<argument><expr><name pos:line="461" pos:column="23">data<pos:position pos:line="461" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="29">CURL_LOCK_DATA_COOKIE<pos:position pos:line="461" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="52">CURL_LOCK_ACCESS_SINGLE<pos:position pos:line="461" pos:column="75"/></name></expr></argument>)<pos:position pos:line="461" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="461" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><name pos:line="462" pos:column="7">co<pos:position pos:line="462" pos:column="9"/></name> <operator pos:line="462" pos:column="10">=<pos:position pos:line="462" pos:column="11"/></operator> <call><name pos:line="462" pos:column="12">Curl_cookie_getlist<pos:position pos:line="462" pos:column="31"/></name><argument_list pos:line="462" pos:column="31">(<argument><expr><name><name pos:line="462" pos:column="32">data<pos:position pos:line="462" pos:column="36"/></name><operator pos:line="462" pos:column="36">-&gt;<pos:position pos:line="462" pos:column="41"/></operator><name pos:line="462" pos:column="38">cookies<pos:position pos:line="462" pos:column="45"/></name></name></expr></argument>,
                               <argument><expr><ternary><condition><expr><name><name pos:line="463" pos:column="32">conn<pos:position pos:line="463" pos:column="36"/></name><operator pos:line="463" pos:column="36">-&gt;<pos:position pos:line="463" pos:column="41"/></operator><name pos:line="463" pos:column="38">allocptr<pos:position pos:line="463" pos:column="46"/></name><operator pos:line="463" pos:column="46">.<pos:position pos:line="463" pos:column="47"/></operator><name pos:line="463" pos:column="47">cookiehost<pos:position pos:line="463" pos:column="57"/></name></name></expr>?<pos:position pos:line="463" pos:column="58"/></condition><then pos:line="463" pos:column="58">
                               <expr><name><name pos:line="464" pos:column="32">conn<pos:position pos:line="464" pos:column="36"/></name><operator pos:line="464" pos:column="36">-&gt;<pos:position pos:line="464" pos:column="41"/></operator><name pos:line="464" pos:column="38">allocptr<pos:position pos:line="464" pos:column="46"/></name><operator pos:line="464" pos:column="46">.<pos:position pos:line="464" pos:column="47"/></operator><name pos:line="464" pos:column="47">cookiehost<pos:position pos:line="464" pos:column="57"/></name></name></expr></then><else pos:line="464" pos:column="57">:<expr><name pos:line="464" pos:column="58">host<pos:position pos:line="464" pos:column="62"/></name></expr></else></ternary></expr></argument>,
                               <argument><expr><name><name pos:line="465" pos:column="32">data<pos:position pos:line="465" pos:column="36"/></name><operator pos:line="465" pos:column="36">-&gt;<pos:position pos:line="465" pos:column="41"/></operator><name pos:line="465" pos:column="38">state<pos:position pos:line="465" pos:column="43"/></name><operator pos:line="465" pos:column="43">.<pos:position pos:line="465" pos:column="44"/></operator><name pos:line="465" pos:column="44">path<pos:position pos:line="465" pos:column="48"/></name></name></expr></argument>,
                               <argument><expr><call pos:line="466" pos:column="32">(<name pos:line="466" pos:column="33">bool<pos:position pos:line="466" pos:column="37"/></name>)<argument_list pos:line="466" pos:column="38">(<argument><expr><ternary><condition><expr><name><name pos:line="466" pos:column="39">conn<pos:position pos:line="466" pos:column="43"/></name><operator pos:line="466" pos:column="43">-&gt;<pos:position pos:line="466" pos:column="48"/></operator><name pos:line="466" pos:column="45">protocol<pos:position pos:line="466" pos:column="53"/></name></name><operator pos:line="466" pos:column="53">&amp;<pos:position pos:line="466" pos:column="58"/></operator><name pos:line="466" pos:column="54">PROT_HTTPS<pos:position pos:line="466" pos:column="64"/></name></expr>?<pos:position pos:line="466" pos:column="65"/></condition><then><expr><name pos:line="466" pos:column="65">TRUE<pos:position pos:line="466" pos:column="69"/></name></expr></then><else pos:line="466" pos:column="69">:<expr><name pos:line="466" pos:column="70">FALSE<pos:position pos:line="466" pos:column="75"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="466" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="466" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="466" pos:column="78"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="467" pos:column="7">Curl_share_unlock<pos:position pos:line="467" pos:column="24"/></name><argument_list pos:line="467" pos:column="24">(<argument><expr><name pos:line="467" pos:column="25">data<pos:position pos:line="467" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="467" pos:column="31">CURL_LOCK_DATA_COOKIE<pos:position pos:line="467" pos:column="52"/></name></expr></argument>)<pos:position pos:line="467" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="467" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="468" pos:column="6"/></block></then></if>
    <if pos:line="469" pos:column="5">if<condition pos:line="469" pos:column="7">(<expr><name pos:line="469" pos:column="8">co<pos:position pos:line="469" pos:column="10"/></name></expr>)<pos:position pos:line="469" pos:column="11"/></condition><then pos:line="469" pos:column="11"> <block pos:line="469" pos:column="12">{
      <decl_stmt><decl><type><name><name pos:line="470" pos:column="7">struct<pos:position pos:line="470" pos:column="13"/></name> <name pos:line="470" pos:column="14">Cookie<pos:position pos:line="470" pos:column="20"/></name></name> <modifier pos:line="470" pos:column="21">*<pos:position pos:line="470" pos:column="22"/></modifier></type><name pos:line="470" pos:column="22">store<pos:position pos:line="470" pos:column="27"/></name><init pos:line="470" pos:column="27">=<expr><name pos:line="470" pos:column="28">co<pos:position pos:line="470" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="470" pos:column="31"/></decl_stmt>
      <comment type="block" pos:line="471" pos:column="7">/* now loop through all cookies that matched */</comment>
      <while pos:line="472" pos:column="7">while<condition pos:line="472" pos:column="12">(<expr><name pos:line="472" pos:column="13">co<pos:position pos:line="472" pos:column="15"/></name></expr>)<pos:position pos:line="472" pos:column="16"/></condition> <block pos:line="472" pos:column="17">{
        <if pos:line="473" pos:column="9">if<condition pos:line="473" pos:column="11">(<expr><name><name pos:line="473" pos:column="12">co<pos:position pos:line="473" pos:column="14"/></name><operator pos:line="473" pos:column="14">-&gt;<pos:position pos:line="473" pos:column="19"/></operator><name pos:line="473" pos:column="16">value<pos:position pos:line="473" pos:column="21"/></name></name></expr>)<pos:position pos:line="473" pos:column="22"/></condition><then pos:line="473" pos:column="22"> <block pos:line="473" pos:column="23">{
          <if pos:line="474" pos:column="11">if<condition pos:line="474" pos:column="13">(<expr><literal type="number" pos:line="474" pos:column="14">0<pos:position pos:line="474" pos:column="15"/></literal> <operator pos:line="474" pos:column="16">==<pos:position pos:line="474" pos:column="18"/></operator> <name pos:line="474" pos:column="19">count<pos:position pos:line="474" pos:column="24"/></name></expr>)<pos:position pos:line="474" pos:column="25"/></condition><then pos:line="474" pos:column="25"> <block pos:line="474" pos:column="26">{
            <expr_stmt><expr><name pos:line="475" pos:column="13">result<pos:position pos:line="475" pos:column="19"/></name> <operator pos:line="475" pos:column="20">=<pos:position pos:line="475" pos:column="21"/></operator> <call><name pos:line="475" pos:column="22">add_bufferf<pos:position pos:line="475" pos:column="33"/></name><argument_list pos:line="475" pos:column="33">(<argument><expr><name pos:line="475" pos:column="34">req_buffer<pos:position pos:line="475" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="475" pos:column="46">"Cookie: "<pos:position pos:line="475" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="475" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="475" pos:column="58"/></expr_stmt>
            <if pos:line="476" pos:column="13">if<condition pos:line="476" pos:column="15">(<expr><name pos:line="476" pos:column="16">result<pos:position pos:line="476" pos:column="22"/></name></expr>)<pos:position pos:line="476" pos:column="23"/></condition><then pos:line="476" pos:column="23">
              <block type="pseudo"><break pos:line="477" pos:column="15">break;<pos:position pos:line="477" pos:column="21"/></break></block></then></if>
          }<pos:position pos:line="478" pos:column="12"/></block></then></if>
          <expr_stmt><expr><name pos:line="479" pos:column="11">result<pos:position pos:line="479" pos:column="17"/></name> <operator pos:line="479" pos:column="18">=<pos:position pos:line="479" pos:column="19"/></operator> <call><name pos:line="479" pos:column="20">add_bufferf<pos:position pos:line="479" pos:column="31"/></name><argument_list pos:line="479" pos:column="31">(<argument><expr><name pos:line="479" pos:column="32">req_buffer<pos:position pos:line="479" pos:column="42"/></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="480" pos:column="32">"%s%s=%s"<pos:position pos:line="480" pos:column="41"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="480" pos:column="43">count<pos:position pos:line="480" pos:column="48"/></name></expr>?<pos:position pos:line="480" pos:column="49"/></condition><then><expr><literal type="string" pos:line="480" pos:column="49">"; "<pos:position pos:line="480" pos:column="53"/></literal></expr></then><else pos:line="480" pos:column="53">:<expr><literal type="string" pos:line="480" pos:column="54">""<pos:position pos:line="480" pos:column="56"/></literal></expr></else></ternary></expr></argument>,
                               <argument><expr><name><name pos:line="481" pos:column="32">co<pos:position pos:line="481" pos:column="34"/></name><operator pos:line="481" pos:column="34">-&gt;<pos:position pos:line="481" pos:column="39"/></operator><name pos:line="481" pos:column="36">name<pos:position pos:line="481" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="481" pos:column="42">co<pos:position pos:line="481" pos:column="44"/></name><operator pos:line="481" pos:column="44">-&gt;<pos:position pos:line="481" pos:column="49"/></operator><name pos:line="481" pos:column="46">value<pos:position pos:line="481" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="481" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="481" pos:column="53"/></expr_stmt>
          <if pos:line="482" pos:column="11">if<condition pos:line="482" pos:column="13">(<expr><name pos:line="482" pos:column="14">result<pos:position pos:line="482" pos:column="20"/></name></expr>)<pos:position pos:line="482" pos:column="21"/></condition><then pos:line="482" pos:column="21">
            <block type="pseudo"><break pos:line="483" pos:column="13">break;<pos:position pos:line="483" pos:column="19"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="484" pos:column="11">count<pos:position pos:line="484" pos:column="16"/></name><operator pos:line="484" pos:column="16">++<pos:position pos:line="484" pos:column="18"/></operator></expr>;<pos:position pos:line="484" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="485" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="486" pos:column="9">co<pos:position pos:line="486" pos:column="11"/></name> <operator pos:line="486" pos:column="12">=<pos:position pos:line="486" pos:column="13"/></operator> <name><name pos:line="486" pos:column="14">co<pos:position pos:line="486" pos:column="16"/></name><operator pos:line="486" pos:column="16">-&gt;<pos:position pos:line="486" pos:column="21"/></operator><name pos:line="486" pos:column="18">next<pos:position pos:line="486" pos:column="22"/></name></name></expr>;<pos:position pos:line="486" pos:column="23"/></expr_stmt> <comment type="block" pos:line="486" pos:column="24">/* next cookie please */</comment>
      }<pos:position pos:line="487" pos:column="8"/></block></while>
      <expr_stmt><expr><call><name pos:line="488" pos:column="7">Curl_cookie_freelist<pos:position pos:line="488" pos:column="27"/></name><argument_list pos:line="488" pos:column="27">(<argument><expr><name pos:line="488" pos:column="28">store<pos:position pos:line="488" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="488" pos:column="35">FALSE<pos:position pos:line="488" pos:column="40"/></name></expr></argument>)<pos:position pos:line="488" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="488" pos:column="42"/></expr_stmt> <comment type="block" pos:line="488" pos:column="43">/* free the cookie list */</comment>
    }<pos:position pos:line="489" pos:column="6"/></block></then></if>
    <if pos:line="490" pos:column="5">if<condition pos:line="490" pos:column="7">(<expr><name pos:line="490" pos:column="8">addcookies<pos:position pos:line="490" pos:column="18"/></name> <operator pos:line="490" pos:column="19">&amp;&amp;<pos:position pos:line="490" pos:column="29"/></operator> <operator pos:line="490" pos:column="22">(<pos:position pos:line="490" pos:column="23"/></operator><name pos:line="490" pos:column="23">CURLE_OK<pos:position pos:line="490" pos:column="31"/></name> <operator pos:line="490" pos:column="32">==<pos:position pos:line="490" pos:column="34"/></operator> <name pos:line="490" pos:column="35">result<pos:position pos:line="490" pos:column="41"/></name><operator pos:line="490" pos:column="41">)<pos:position pos:line="490" pos:column="42"/></operator></expr>)<pos:position pos:line="490" pos:column="43"/></condition><then pos:line="490" pos:column="43"> <block pos:line="490" pos:column="44">{
      <if pos:line="491" pos:column="7">if<condition pos:line="491" pos:column="9">(<expr><operator pos:line="491" pos:column="10">!<pos:position pos:line="491" pos:column="11"/></operator><name pos:line="491" pos:column="11">count<pos:position pos:line="491" pos:column="16"/></name></expr>)<pos:position pos:line="491" pos:column="17"/></condition><then pos:line="491" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><name pos:line="492" pos:column="9">result<pos:position pos:line="492" pos:column="15"/></name> <operator pos:line="492" pos:column="16">=<pos:position pos:line="492" pos:column="17"/></operator> <call><name pos:line="492" pos:column="18">add_bufferf<pos:position pos:line="492" pos:column="29"/></name><argument_list pos:line="492" pos:column="29">(<argument><expr><name pos:line="492" pos:column="30">req_buffer<pos:position pos:line="492" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="492" pos:column="42">"Cookie: "<pos:position pos:line="492" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="492" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="492" pos:column="54"/></expr_stmt></block></then></if>
      <if pos:line="493" pos:column="7">if<condition pos:line="493" pos:column="9">(<expr><name pos:line="493" pos:column="10">CURLE_OK<pos:position pos:line="493" pos:column="18"/></name> <operator pos:line="493" pos:column="19">==<pos:position pos:line="493" pos:column="21"/></operator> <name pos:line="493" pos:column="22">result<pos:position pos:line="493" pos:column="28"/></name></expr>)<pos:position pos:line="493" pos:column="29"/></condition><then pos:line="493" pos:column="29"> <block pos:line="493" pos:column="30">{
        <expr_stmt><expr><name pos:line="494" pos:column="9">result<pos:position pos:line="494" pos:column="15"/></name> <operator pos:line="494" pos:column="16">=<pos:position pos:line="494" pos:column="17"/></operator> <call><name pos:line="494" pos:column="18">add_bufferf<pos:position pos:line="494" pos:column="29"/></name><argument_list pos:line="494" pos:column="29">(<argument><expr><name pos:line="494" pos:column="30">req_buffer<pos:position pos:line="494" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="494" pos:column="42">"%s%s"<pos:position pos:line="494" pos:column="48"/></literal></expr></argument>,
                             <argument><expr><ternary><condition><expr><name pos:line="495" pos:column="30">count<pos:position pos:line="495" pos:column="35"/></name></expr>?<pos:position pos:line="495" pos:column="36"/></condition><then><expr><literal type="string" pos:line="495" pos:column="36">"; "<pos:position pos:line="495" pos:column="40"/></literal></expr></then><else pos:line="495" pos:column="40">:<expr><literal type="string" pos:line="495" pos:column="41">""<pos:position pos:line="495" pos:column="43"/></literal></expr></else></ternary></expr></argument>,
                             <argument><expr><name pos:line="496" pos:column="30">addcookies<pos:position pos:line="496" pos:column="40"/></name></expr></argument>)<pos:position pos:line="496" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="496" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="497" pos:column="9">count<pos:position pos:line="497" pos:column="14"/></name><operator pos:line="497" pos:column="14">++<pos:position pos:line="497" pos:column="16"/></operator></expr>;<pos:position pos:line="497" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="498" pos:column="8"/></block></then></if>
    }<pos:position pos:line="499" pos:column="6"/></block></then></if>
    <if pos:line="500" pos:column="5">if<condition pos:line="500" pos:column="7">(<expr><name pos:line="500" pos:column="8">count<pos:position pos:line="500" pos:column="13"/></name> <operator pos:line="500" pos:column="14">&amp;&amp;<pos:position pos:line="500" pos:column="24"/></operator> <operator pos:line="500" pos:column="17">(<pos:position pos:line="500" pos:column="18"/></operator><name pos:line="500" pos:column="18">CURLE_OK<pos:position pos:line="500" pos:column="26"/></name> <operator pos:line="500" pos:column="27">==<pos:position pos:line="500" pos:column="29"/></operator> <name pos:line="500" pos:column="30">result<pos:position pos:line="500" pos:column="36"/></name><operator pos:line="500" pos:column="36">)<pos:position pos:line="500" pos:column="37"/></operator></expr>)<pos:position pos:line="500" pos:column="38"/></condition><then pos:line="500" pos:column="38">
      <block type="pseudo"><expr_stmt><expr><name pos:line="501" pos:column="7">result<pos:position pos:line="501" pos:column="13"/></name> <operator pos:line="501" pos:column="14">=<pos:position pos:line="501" pos:column="15"/></operator> <call><name pos:line="501" pos:column="16">add_buffer<pos:position pos:line="501" pos:column="26"/></name><argument_list pos:line="501" pos:column="26">(<argument><expr><name pos:line="501" pos:column="27">req_buffer<pos:position pos:line="501" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="501" pos:column="39">"\r\n"<pos:position pos:line="501" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="501" pos:column="47">2<pos:position pos:line="501" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="501" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="501" pos:column="50"/></expr_stmt></block></then></if>

    <if pos:line="503" pos:column="5">if<condition pos:line="503" pos:column="7">(<expr><name pos:line="503" pos:column="8">result<pos:position pos:line="503" pos:column="14"/></name></expr>)<pos:position pos:line="503" pos:column="15"/></condition><then pos:line="503" pos:column="15">
      <block type="pseudo"><return pos:line="504" pos:column="7">return <expr><name pos:line="504" pos:column="14">result<pos:position pos:line="504" pos:column="20"/></name></expr>;<pos:position pos:line="504" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="505" pos:column="4"/></block></then></if>
<cpp:endif pos:line="506" pos:column="1">#<cpp:directive pos:line="506" pos:column="2">endif<pos:position pos:line="506" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="508" pos:column="3">if<condition pos:line="508" pos:column="5">(<expr><name><name pos:line="508" pos:column="6">data<pos:position pos:line="508" pos:column="10"/></name><operator pos:line="508" pos:column="10">-&gt;<pos:position pos:line="508" pos:column="15"/></operator><name pos:line="508" pos:column="12">set<pos:position pos:line="508" pos:column="15"/></name><operator pos:line="508" pos:column="15">.<pos:position pos:line="508" pos:column="16"/></operator><name pos:line="508" pos:column="16">timecondition<pos:position pos:line="508" pos:column="29"/></name></name></expr>)<pos:position pos:line="508" pos:column="30"/></condition><then pos:line="508" pos:column="30"> <block pos:line="508" pos:column="31">{
    <decl_stmt><decl><type><name><name pos:line="509" pos:column="5">struct<pos:position pos:line="509" pos:column="11"/></name> <name pos:line="509" pos:column="12">tm<pos:position pos:line="509" pos:column="14"/></name></name> <modifier pos:line="509" pos:column="15">*<pos:position pos:line="509" pos:column="16"/></modifier></type><name pos:line="509" pos:column="16">tm<pos:position pos:line="509" pos:column="18"/></name></decl>;<pos:position pos:line="509" pos:column="19"/></decl_stmt>

    <comment type="block" pos:line="511" pos:column="5">/* The If-Modified-Since header family should have their times set in
     * GMT as RFC2616 defines: "All HTTP date/time stamps MUST be
     * represented in Greenwich Mean Time (GMT), without exception. For the
     * purposes of HTTP, GMT is exactly equal to UTC (Coordinated Universal
     * Time)." (see page 20 of RFC2616).
     */</comment>

<cpp:ifdef pos:line="518" pos:column="1">#<cpp:directive pos:line="518" pos:column="2">ifdef<pos:position pos:line="518" pos:column="7"/></cpp:directive> <name pos:line="518" pos:column="8">HAVE_GMTIME_R<pos:position pos:line="518" pos:column="21"/></name></cpp:ifdef>
    <comment type="block" pos:line="519" pos:column="5">/* thread-safe version */</comment>
    <decl_stmt><decl><type><name><name pos:line="520" pos:column="5">struct<pos:position pos:line="520" pos:column="11"/></name> <name pos:line="520" pos:column="12">tm<pos:position pos:line="520" pos:column="14"/></name></name></type> <name pos:line="520" pos:column="15">keeptime<pos:position pos:line="520" pos:column="23"/></name></decl>;<pos:position pos:line="520" pos:column="24"/></decl_stmt>
    <expr_stmt><expr><name pos:line="521" pos:column="5">tm<pos:position pos:line="521" pos:column="7"/></name> <operator pos:line="521" pos:column="8">=<pos:position pos:line="521" pos:column="9"/></operator> <operator pos:line="521" pos:column="10">(<pos:position pos:line="521" pos:column="11"/></operator>struct <name pos:line="521" pos:column="18">tm<pos:position pos:line="521" pos:column="20"/></name> <operator pos:line="521" pos:column="21">*<pos:position pos:line="521" pos:column="22"/></operator><operator pos:line="521" pos:column="22">)<pos:position pos:line="521" pos:column="23"/></operator><call><name pos:line="521" pos:column="23">gmtime_r<pos:position pos:line="521" pos:column="31"/></name><argument_list pos:line="521" pos:column="31">(<argument><expr><operator pos:line="521" pos:column="32">&amp;<pos:position pos:line="521" pos:column="37"/></operator><name><name pos:line="521" pos:column="33">data<pos:position pos:line="521" pos:column="37"/></name><operator pos:line="521" pos:column="37">-&gt;<pos:position pos:line="521" pos:column="42"/></operator><name pos:line="521" pos:column="39">set<pos:position pos:line="521" pos:column="42"/></name><operator pos:line="521" pos:column="42">.<pos:position pos:line="521" pos:column="43"/></operator><name pos:line="521" pos:column="43">timevalue<pos:position pos:line="521" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="521" pos:column="54">&amp;<pos:position pos:line="521" pos:column="59"/></operator><name pos:line="521" pos:column="55">keeptime<pos:position pos:line="521" pos:column="63"/></name></expr></argument>)<pos:position pos:line="521" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="521" pos:column="65"/></expr_stmt>
<cpp:else pos:line="522" pos:column="1">#<cpp:directive pos:line="522" pos:column="2">else<pos:position pos:line="522" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="523" pos:column="5">tm<pos:position pos:line="523" pos:column="7"/></name> <operator pos:line="523" pos:column="8">=<pos:position pos:line="523" pos:column="9"/></operator> <call><name pos:line="523" pos:column="10">gmtime<pos:position pos:line="523" pos:column="16"/></name><argument_list pos:line="523" pos:column="16">(<argument><expr><operator pos:line="523" pos:column="17">&amp;<pos:position pos:line="523" pos:column="22"/></operator><name><name pos:line="523" pos:column="18">data<pos:position pos:line="523" pos:column="22"/></name><operator pos:line="523" pos:column="22">-&gt;<pos:position pos:line="523" pos:column="27"/></operator><name pos:line="523" pos:column="24">set<pos:position pos:line="523" pos:column="27"/></name><operator pos:line="523" pos:column="27">.<pos:position pos:line="523" pos:column="28"/></operator><name pos:line="523" pos:column="28">timevalue<pos:position pos:line="523" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="523" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="523" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="524" pos:column="1">#<cpp:directive pos:line="524" pos:column="2">endif<pos:position pos:line="524" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="526" pos:column="5">/* format: "Tue, 15 Nov 1994 12:45:26 GMT" */</comment>
    <expr_stmt><expr><call><name pos:line="527" pos:column="5">snprintf<pos:position pos:line="527" pos:column="13"/></name><argument_list pos:line="527" pos:column="13">(<argument><expr><name pos:line="527" pos:column="14">buf<pos:position pos:line="527" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="527" pos:column="19">BUFSIZE<pos:position pos:line="527" pos:column="26"/></name><operator pos:line="527" pos:column="26">-<pos:position pos:line="527" pos:column="27"/></operator><literal type="number" pos:line="527" pos:column="27">1<pos:position pos:line="527" pos:column="28"/></literal></expr></argument>,
             <argument><expr><literal type="string" pos:line="528" pos:column="14">"%s, %02d %s %4d %02d:%02d:%02d GMT"<pos:position pos:line="528" pos:column="50"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="529" pos:column="14">Curl_wkday<pos:position pos:line="529" pos:column="24"/></name><index pos:line="529" pos:column="24">[<expr><ternary><condition><expr><name><name pos:line="529" pos:column="25">tm<pos:position pos:line="529" pos:column="27"/></name><operator pos:line="529" pos:column="27">-&gt;<pos:position pos:line="529" pos:column="32"/></operator><name pos:line="529" pos:column="29">tm_wday<pos:position pos:line="529" pos:column="36"/></name></name></expr>?<pos:position pos:line="529" pos:column="37"/></condition><then><expr><name><name pos:line="529" pos:column="37">tm<pos:position pos:line="529" pos:column="39"/></name><operator pos:line="529" pos:column="39">-&gt;<pos:position pos:line="529" pos:column="44"/></operator><name pos:line="529" pos:column="41">tm_wday<pos:position pos:line="529" pos:column="48"/></name></name><operator pos:line="529" pos:column="48">-<pos:position pos:line="529" pos:column="49"/></operator><literal type="number" pos:line="529" pos:column="49">1<pos:position pos:line="529" pos:column="50"/></literal></expr></then><else pos:line="529" pos:column="50">:<expr><literal type="number" pos:line="529" pos:column="51">6<pos:position pos:line="529" pos:column="52"/></literal></expr></else></ternary></expr>]<pos:position pos:line="529" pos:column="53"/></index></name></expr></argument>,
             <argument><expr><name><name pos:line="530" pos:column="14">tm<pos:position pos:line="530" pos:column="16"/></name><operator pos:line="530" pos:column="16">-&gt;<pos:position pos:line="530" pos:column="21"/></operator><name pos:line="530" pos:column="18">tm_mday<pos:position pos:line="530" pos:column="25"/></name></name></expr></argument>,
             <argument><expr><name><name pos:line="531" pos:column="14">Curl_month<pos:position pos:line="531" pos:column="24"/></name><index pos:line="531" pos:column="24">[<expr><name><name pos:line="531" pos:column="25">tm<pos:position pos:line="531" pos:column="27"/></name><operator pos:line="531" pos:column="27">-&gt;<pos:position pos:line="531" pos:column="32"/></operator><name pos:line="531" pos:column="29">tm_mon<pos:position pos:line="531" pos:column="35"/></name></name></expr>]<pos:position pos:line="531" pos:column="36"/></index></name></expr></argument>,
             <argument><expr><name><name pos:line="532" pos:column="14">tm<pos:position pos:line="532" pos:column="16"/></name><operator pos:line="532" pos:column="16">-&gt;<pos:position pos:line="532" pos:column="21"/></operator><name pos:line="532" pos:column="18">tm_year<pos:position pos:line="532" pos:column="25"/></name></name> <operator pos:line="532" pos:column="26">+<pos:position pos:line="532" pos:column="27"/></operator> <literal type="number" pos:line="532" pos:column="28">1900<pos:position pos:line="532" pos:column="32"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="533" pos:column="14">tm<pos:position pos:line="533" pos:column="16"/></name><operator pos:line="533" pos:column="16">-&gt;<pos:position pos:line="533" pos:column="21"/></operator><name pos:line="533" pos:column="18">tm_hour<pos:position pos:line="533" pos:column="25"/></name></name></expr></argument>,
             <argument><expr><name><name pos:line="534" pos:column="14">tm<pos:position pos:line="534" pos:column="16"/></name><operator pos:line="534" pos:column="16">-&gt;<pos:position pos:line="534" pos:column="21"/></operator><name pos:line="534" pos:column="18">tm_min<pos:position pos:line="534" pos:column="24"/></name></name></expr></argument>,
             <argument><expr><name><name pos:line="535" pos:column="14">tm<pos:position pos:line="535" pos:column="16"/></name><operator pos:line="535" pos:column="16">-&gt;<pos:position pos:line="535" pos:column="21"/></operator><name pos:line="535" pos:column="18">tm_sec<pos:position pos:line="535" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="535" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="535" pos:column="26"/></expr_stmt>

    <switch pos:line="537" pos:column="5">switch<condition pos:line="537" pos:column="11">(<expr><name><name pos:line="537" pos:column="12">data<pos:position pos:line="537" pos:column="16"/></name><operator pos:line="537" pos:column="16">-&gt;<pos:position pos:line="537" pos:column="21"/></operator><name pos:line="537" pos:column="18">set<pos:position pos:line="537" pos:column="21"/></name><operator pos:line="537" pos:column="21">.<pos:position pos:line="537" pos:column="22"/></operator><name pos:line="537" pos:column="22">timecondition<pos:position pos:line="537" pos:column="35"/></name></name></expr>)<pos:position pos:line="537" pos:column="36"/></condition> <block pos:line="537" pos:column="37">{
    <case pos:line="538" pos:column="5">case <expr><name pos:line="538" pos:column="10">CURL_TIMECOND_IFMODSINCE<pos:position pos:line="538" pos:column="34"/></name></expr>:<pos:position pos:line="538" pos:column="35"/></case>
    <default pos:line="539" pos:column="5">default:<pos:position pos:line="539" pos:column="13"/></default>
      <expr_stmt><expr><name pos:line="540" pos:column="7">result<pos:position pos:line="540" pos:column="13"/></name> <operator pos:line="540" pos:column="14">=<pos:position pos:line="540" pos:column="15"/></operator> <call><name pos:line="540" pos:column="16">add_bufferf<pos:position pos:line="540" pos:column="27"/></name><argument_list pos:line="540" pos:column="27">(<argument><expr><name pos:line="540" pos:column="28">req_buffer<pos:position pos:line="540" pos:column="38"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="541" pos:column="28">"If-Modified-Since: %s\r\n"<pos:position pos:line="541" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="541" pos:column="57">buf<pos:position pos:line="541" pos:column="60"/></name></expr></argument>)<pos:position pos:line="541" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="541" pos:column="62"/></expr_stmt>
      <break pos:line="542" pos:column="7">break;<pos:position pos:line="542" pos:column="13"/></break>
    <case pos:line="543" pos:column="5">case <expr><name pos:line="543" pos:column="10">CURL_TIMECOND_IFUNMODSINCE<pos:position pos:line="543" pos:column="36"/></name></expr>:<pos:position pos:line="543" pos:column="37"/></case>
      <expr_stmt><expr><name pos:line="544" pos:column="7">result<pos:position pos:line="544" pos:column="13"/></name> <operator pos:line="544" pos:column="14">=<pos:position pos:line="544" pos:column="15"/></operator> <call><name pos:line="544" pos:column="16">add_bufferf<pos:position pos:line="544" pos:column="27"/></name><argument_list pos:line="544" pos:column="27">(<argument><expr><name pos:line="544" pos:column="28">req_buffer<pos:position pos:line="544" pos:column="38"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="545" pos:column="28">"If-Unmodified-Since: %s\r\n"<pos:position pos:line="545" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="545" pos:column="59">buf<pos:position pos:line="545" pos:column="62"/></name></expr></argument>)<pos:position pos:line="545" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="545" pos:column="64"/></expr_stmt>
      <break pos:line="546" pos:column="7">break;<pos:position pos:line="546" pos:column="13"/></break>
    <case pos:line="547" pos:column="5">case <expr><name pos:line="547" pos:column="10">CURL_TIMECOND_LASTMOD<pos:position pos:line="547" pos:column="31"/></name></expr>:<pos:position pos:line="547" pos:column="32"/></case>
      <expr_stmt><expr><name pos:line="548" pos:column="7">result<pos:position pos:line="548" pos:column="13"/></name> <operator pos:line="548" pos:column="14">=<pos:position pos:line="548" pos:column="15"/></operator> <call><name pos:line="548" pos:column="16">add_bufferf<pos:position pos:line="548" pos:column="27"/></name><argument_list pos:line="548" pos:column="27">(<argument><expr><name pos:line="548" pos:column="28">req_buffer<pos:position pos:line="548" pos:column="38"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="549" pos:column="28">"Last-Modified: %s\r\n"<pos:position pos:line="549" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="549" pos:column="53">buf<pos:position pos:line="549" pos:column="56"/></name></expr></argument>)<pos:position pos:line="549" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="549" pos:column="58"/></expr_stmt>
      <break pos:line="550" pos:column="7">break;<pos:position pos:line="550" pos:column="13"/></break>
    }<pos:position pos:line="551" pos:column="6"/></block></switch>
    <if pos:line="552" pos:column="5">if<condition pos:line="552" pos:column="7">(<expr><name pos:line="552" pos:column="8">result<pos:position pos:line="552" pos:column="14"/></name></expr>)<pos:position pos:line="552" pos:column="15"/></condition><then pos:line="552" pos:column="15">
      <block type="pseudo"><return pos:line="553" pos:column="7">return <expr><name pos:line="553" pos:column="14">result<pos:position pos:line="553" pos:column="20"/></name></expr>;<pos:position pos:line="553" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="554" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="556" pos:column="3">result<pos:position pos:line="556" pos:column="9"/></name> <operator pos:line="556" pos:column="10">=<pos:position pos:line="556" pos:column="11"/></operator> <call><name pos:line="556" pos:column="12">add_custom_headers<pos:position pos:line="556" pos:column="30"/></name><argument_list pos:line="556" pos:column="30">(<argument><expr><name pos:line="556" pos:column="31">conn<pos:position pos:line="556" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="556" pos:column="37">req_buffer<pos:position pos:line="556" pos:column="47"/></name></expr></argument>)<pos:position pos:line="556" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="556" pos:column="49"/></expr_stmt>
  <if pos:line="557" pos:column="3">if<condition pos:line="557" pos:column="5">(<expr><name pos:line="557" pos:column="6">result<pos:position pos:line="557" pos:column="12"/></name></expr>)<pos:position pos:line="557" pos:column="13"/></condition><then pos:line="557" pos:column="13">
    <block type="pseudo"><return pos:line="558" pos:column="5">return <expr><name pos:line="558" pos:column="12">result<pos:position pos:line="558" pos:column="18"/></name></expr>;<pos:position pos:line="558" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="560" pos:column="3">http<pos:position pos:line="560" pos:column="7"/></name><operator pos:line="560" pos:column="7">-&gt;<pos:position pos:line="560" pos:column="12"/></operator><name pos:line="560" pos:column="9">postdata<pos:position pos:line="560" pos:column="17"/></name></name> <operator pos:line="560" pos:column="18">=<pos:position pos:line="560" pos:column="19"/></operator> <name pos:line="560" pos:column="20">NULL<pos:position pos:line="560" pos:column="24"/></name></expr>;<pos:position pos:line="560" pos:column="25"/></expr_stmt>  <comment type="block" pos:line="560" pos:column="27">/* nothing to post at this point */</comment>
  <expr_stmt><expr><call><name pos:line="561" pos:column="3">Curl_pgrsSetUploadSize<pos:position pos:line="561" pos:column="25"/></name><argument_list pos:line="561" pos:column="25">(<argument><expr><name pos:line="561" pos:column="26">data<pos:position pos:line="561" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="561" pos:column="32">0<pos:position pos:line="561" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="561" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="561" pos:column="35"/></expr_stmt> <comment type="block" pos:line="561" pos:column="36">/* upload size is 0 atm */</comment>

  <comment type="block" pos:line="563" pos:column="3">/* If 'authdone' is FALSE, we must not set the write socket index to the
     Curl_transfer() call below, as we're not ready to actually upload any
     data yet. */</comment>

  <switch pos:line="567" pos:column="3">switch<condition pos:line="567" pos:column="9">(<expr><name pos:line="567" pos:column="10">httpreq<pos:position pos:line="567" pos:column="17"/></name></expr>)<pos:position pos:line="567" pos:column="18"/></condition> <block pos:line="567" pos:column="19">{

  <case pos:line="569" pos:column="3">case <expr><name pos:line="569" pos:column="8">HTTPREQ_POST_FORM<pos:position pos:line="569" pos:column="25"/></name></expr>:<pos:position pos:line="569" pos:column="26"/></case>
    <if pos:line="570" pos:column="5">if<condition pos:line="570" pos:column="7">(<expr><operator pos:line="570" pos:column="8">!<pos:position pos:line="570" pos:column="9"/></operator><name><name pos:line="570" pos:column="9">http<pos:position pos:line="570" pos:column="13"/></name><operator pos:line="570" pos:column="13">-&gt;<pos:position pos:line="570" pos:column="18"/></operator><name pos:line="570" pos:column="15">sendit<pos:position pos:line="570" pos:column="21"/></name></name> <operator pos:line="570" pos:column="22">||<pos:position pos:line="570" pos:column="24"/></operator> <name><name pos:line="570" pos:column="25">conn<pos:position pos:line="570" pos:column="29"/></name><operator pos:line="570" pos:column="29">-&gt;<pos:position pos:line="570" pos:column="34"/></operator><name pos:line="570" pos:column="31">bits<pos:position pos:line="570" pos:column="35"/></name><operator pos:line="570" pos:column="35">.<pos:position pos:line="570" pos:column="36"/></operator><name pos:line="570" pos:column="36">authneg<pos:position pos:line="570" pos:column="43"/></name></name></expr>)<pos:position pos:line="570" pos:column="44"/></condition><then pos:line="570" pos:column="44"> <block pos:line="570" pos:column="45">{
      <comment type="block" pos:line="571" pos:column="7">/* nothing to post! */</comment>
      <expr_stmt><expr><name pos:line="572" pos:column="7">result<pos:position pos:line="572" pos:column="13"/></name> <operator pos:line="572" pos:column="14">=<pos:position pos:line="572" pos:column="15"/></operator> <call><name pos:line="572" pos:column="16">add_bufferf<pos:position pos:line="572" pos:column="27"/></name><argument_list pos:line="572" pos:column="27">(<argument><expr><name pos:line="572" pos:column="28">req_buffer<pos:position pos:line="572" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="572" pos:column="40">"Content-Length: 0\r\n\r\n"<pos:position pos:line="572" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="572" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="572" pos:column="69"/></expr_stmt>
      <if pos:line="573" pos:column="7">if<condition pos:line="573" pos:column="9">(<expr><name pos:line="573" pos:column="10">result<pos:position pos:line="573" pos:column="16"/></name></expr>)<pos:position pos:line="573" pos:column="17"/></condition><then pos:line="573" pos:column="17">
        <block type="pseudo"><return pos:line="574" pos:column="9">return <expr><name pos:line="574" pos:column="16">result<pos:position pos:line="574" pos:column="22"/></name></expr>;<pos:position pos:line="574" pos:column="23"/></return></block></then></if>

      <expr_stmt><expr><name pos:line="576" pos:column="7">result<pos:position pos:line="576" pos:column="13"/></name> <operator pos:line="576" pos:column="14">=<pos:position pos:line="576" pos:column="15"/></operator> <call><name pos:line="576" pos:column="16">add_buffer_send<pos:position pos:line="576" pos:column="31"/></name><argument_list pos:line="576" pos:column="31">(<argument><expr><name pos:line="576" pos:column="32">req_buffer<pos:position pos:line="576" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="576" pos:column="44">conn<pos:position pos:line="576" pos:column="48"/></name></expr></argument>,
                               <argument><expr><operator pos:line="577" pos:column="32">&amp;<pos:position pos:line="577" pos:column="37"/></operator><name><name pos:line="577" pos:column="33">data<pos:position pos:line="577" pos:column="37"/></name><operator pos:line="577" pos:column="37">-&gt;<pos:position pos:line="577" pos:column="42"/></operator><name pos:line="577" pos:column="39">info<pos:position pos:line="577" pos:column="43"/></name><operator pos:line="577" pos:column="43">.<pos:position pos:line="577" pos:column="44"/></operator><name pos:line="577" pos:column="44">request_size<pos:position pos:line="577" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="577" pos:column="58">0<pos:position pos:line="577" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="577" pos:column="61">FIRSTSOCKET<pos:position pos:line="577" pos:column="72"/></name></expr></argument>)<pos:position pos:line="577" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="577" pos:column="74"/></expr_stmt>
      <if pos:line="578" pos:column="7">if<condition pos:line="578" pos:column="9">(<expr><name pos:line="578" pos:column="10">result<pos:position pos:line="578" pos:column="16"/></name></expr>)<pos:position pos:line="578" pos:column="17"/></condition><then pos:line="578" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="579" pos:column="9">failf<pos:position pos:line="579" pos:column="14"/></name><argument_list pos:line="579" pos:column="14">(<argument><expr><name pos:line="579" pos:column="15">data<pos:position pos:line="579" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="579" pos:column="21">"Failed sending POST request"<pos:position pos:line="579" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="579" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="579" pos:column="52"/></expr_stmt></block></then>
      <else pos:line="580" pos:column="7">else
        <comment type="block" pos:line="581" pos:column="9">/* setup variables for the upcoming transfer */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="582" pos:column="9">result<pos:position pos:line="582" pos:column="15"/></name> <operator pos:line="582" pos:column="16">=<pos:position pos:line="582" pos:column="17"/></operator> <call><name pos:line="582" pos:column="18">Curl_setup_transfer<pos:position pos:line="582" pos:column="37"/></name><argument_list pos:line="582" pos:column="37">(<argument><expr><name pos:line="582" pos:column="38">conn<pos:position pos:line="582" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="582" pos:column="44">FIRSTSOCKET<pos:position pos:line="582" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="582" pos:column="57">-<pos:position pos:line="582" pos:column="58"/></operator><literal type="number" pos:line="582" pos:column="58">1<pos:position pos:line="582" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="582" pos:column="61">TRUE<pos:position pos:line="582" pos:column="65"/></name></expr></argument>,
                                     <argument><expr><operator pos:line="583" pos:column="38">&amp;<pos:position pos:line="583" pos:column="43"/></operator><name><name pos:line="583" pos:column="39">http<pos:position pos:line="583" pos:column="43"/></name><operator pos:line="583" pos:column="43">-&gt;<pos:position pos:line="583" pos:column="48"/></operator><name pos:line="583" pos:column="45">readbytecount<pos:position pos:line="583" pos:column="58"/></name></name></expr></argument>,
                                     <argument><expr><operator pos:line="584" pos:column="38">-<pos:position pos:line="584" pos:column="39"/></operator><literal type="number" pos:line="584" pos:column="39">1<pos:position pos:line="584" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="584" pos:column="42">NULL<pos:position pos:line="584" pos:column="46"/></name></expr></argument>)<pos:position pos:line="584" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="584" pos:column="48"/></expr_stmt></block></else></if>
      <break pos:line="585" pos:column="7">break;<pos:position pos:line="585" pos:column="13"/></break>
    }<pos:position pos:line="586" pos:column="6"/></block></then></if>

    <if pos:line="588" pos:column="5">if<condition pos:line="588" pos:column="7">(<expr><call><name pos:line="588" pos:column="8">Curl_FormInit<pos:position pos:line="588" pos:column="21"/></name><argument_list pos:line="588" pos:column="21">(<argument><expr><operator pos:line="588" pos:column="22">&amp;<pos:position pos:line="588" pos:column="27"/></operator><name><name pos:line="588" pos:column="23">http<pos:position pos:line="588" pos:column="27"/></name><operator pos:line="588" pos:column="27">-&gt;<pos:position pos:line="588" pos:column="32"/></operator><name pos:line="588" pos:column="29">form<pos:position pos:line="588" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="588" pos:column="35">http<pos:position pos:line="588" pos:column="39"/></name><operator pos:line="588" pos:column="39">-&gt;<pos:position pos:line="588" pos:column="44"/></operator><name pos:line="588" pos:column="41">sendit<pos:position pos:line="588" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="588" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="588" pos:column="49"/></condition><then pos:line="588" pos:column="49"> <block pos:line="588" pos:column="50">{
      <expr_stmt><expr><call><name pos:line="589" pos:column="7">failf<pos:position pos:line="589" pos:column="12"/></name><argument_list pos:line="589" pos:column="12">(<argument><expr><name pos:line="589" pos:column="13">data<pos:position pos:line="589" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="589" pos:column="19">"Internal HTTP POST error!"<pos:position pos:line="589" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="589" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="589" pos:column="48"/></expr_stmt>
      <return pos:line="590" pos:column="7">return <expr><name pos:line="590" pos:column="14">CURLE_HTTP_POST_ERROR<pos:position pos:line="590" pos:column="35"/></name></expr>;<pos:position pos:line="590" pos:column="36"/></return>
    }<pos:position pos:line="591" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="593" pos:column="5">/* set the read function to read from the generated form data */</comment>
    <expr_stmt><expr><name><name pos:line="594" pos:column="5">conn<pos:position pos:line="594" pos:column="9"/></name><operator pos:line="594" pos:column="9">-&gt;<pos:position pos:line="594" pos:column="14"/></operator><name pos:line="594" pos:column="11">fread_func<pos:position pos:line="594" pos:column="21"/></name></name> <operator pos:line="594" pos:column="22">=<pos:position pos:line="594" pos:column="23"/></operator> <operator pos:line="594" pos:column="24">(<pos:position pos:line="594" pos:column="25"/></operator><name pos:line="594" pos:column="25">curl_read_callback<pos:position pos:line="594" pos:column="43"/></name><operator pos:line="594" pos:column="43">)<pos:position pos:line="594" pos:column="44"/></operator><name pos:line="594" pos:column="44">Curl_FormReader<pos:position pos:line="594" pos:column="59"/></name></expr>;<pos:position pos:line="594" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="595" pos:column="5">conn<pos:position pos:line="595" pos:column="9"/></name><operator pos:line="595" pos:column="9">-&gt;<pos:position pos:line="595" pos:column="14"/></operator><name pos:line="595" pos:column="11">fread_in<pos:position pos:line="595" pos:column="19"/></name></name> <operator pos:line="595" pos:column="20">=<pos:position pos:line="595" pos:column="21"/></operator> <operator pos:line="595" pos:column="22">&amp;<pos:position pos:line="595" pos:column="27"/></operator><name><name pos:line="595" pos:column="23">http<pos:position pos:line="595" pos:column="27"/></name><operator pos:line="595" pos:column="27">-&gt;<pos:position pos:line="595" pos:column="32"/></operator><name pos:line="595" pos:column="29">form<pos:position pos:line="595" pos:column="33"/></name></name></expr>;<pos:position pos:line="595" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="597" pos:column="5">http<pos:position pos:line="597" pos:column="9"/></name><operator pos:line="597" pos:column="9">-&gt;<pos:position pos:line="597" pos:column="14"/></operator><name pos:line="597" pos:column="11">sending<pos:position pos:line="597" pos:column="18"/></name></name> <operator pos:line="597" pos:column="19">=<pos:position pos:line="597" pos:column="20"/></operator> <name pos:line="597" pos:column="21">HTTPSEND_BODY<pos:position pos:line="597" pos:column="34"/></name></expr>;<pos:position pos:line="597" pos:column="35"/></expr_stmt>

    <if pos:line="599" pos:column="5">if<condition pos:line="599" pos:column="7">(<expr><operator pos:line="599" pos:column="8">!<pos:position pos:line="599" pos:column="9"/></operator><name><name pos:line="599" pos:column="9">data<pos:position pos:line="599" pos:column="13"/></name><operator pos:line="599" pos:column="13">-&gt;<pos:position pos:line="599" pos:column="18"/></operator><name pos:line="599" pos:column="15">req<pos:position pos:line="599" pos:column="18"/></name><operator pos:line="599" pos:column="18">.<pos:position pos:line="599" pos:column="19"/></operator><name pos:line="599" pos:column="19">upload_chunky<pos:position pos:line="599" pos:column="32"/></name></name></expr>)<pos:position pos:line="599" pos:column="33"/></condition><then pos:line="599" pos:column="33"> <block pos:line="599" pos:column="34">{
      <comment type="block" pos:line="600" pos:column="7">/* only add Content-Length if not uploading chunked */</comment>
      <expr_stmt><expr><name pos:line="601" pos:column="7">result<pos:position pos:line="601" pos:column="13"/></name> <operator pos:line="601" pos:column="14">=<pos:position pos:line="601" pos:column="15"/></operator> <call><name pos:line="601" pos:column="16">add_bufferf<pos:position pos:line="601" pos:column="27"/></name><argument_list pos:line="601" pos:column="27">(<argument><expr><name pos:line="601" pos:column="28">req_buffer<pos:position pos:line="601" pos:column="38"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="602" pos:column="28">"Content-Length: %"<pos:position pos:line="602" pos:column="47"/></literal> <name pos:line="602" pos:column="48">FORMAT_OFF_T<pos:position pos:line="602" pos:column="60"/></name> <literal type="string" pos:line="602" pos:column="61">"\r\n"<pos:position pos:line="602" pos:column="67"/></literal></expr></argument>,
                           <argument><expr><name><name pos:line="603" pos:column="28">http<pos:position pos:line="603" pos:column="32"/></name><operator pos:line="603" pos:column="32">-&gt;<pos:position pos:line="603" pos:column="37"/></operator><name pos:line="603" pos:column="34">postsize<pos:position pos:line="603" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="603" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="603" pos:column="44"/></expr_stmt>
      <if pos:line="604" pos:column="7">if<condition pos:line="604" pos:column="9">(<expr><name pos:line="604" pos:column="10">result<pos:position pos:line="604" pos:column="16"/></name></expr>)<pos:position pos:line="604" pos:column="17"/></condition><then pos:line="604" pos:column="17">
        <block type="pseudo"><return pos:line="605" pos:column="9">return <expr><name pos:line="605" pos:column="16">result<pos:position pos:line="605" pos:column="22"/></name></expr>;<pos:position pos:line="605" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="606" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="608" pos:column="5">result<pos:position pos:line="608" pos:column="11"/></name> <operator pos:line="608" pos:column="12">=<pos:position pos:line="608" pos:column="13"/></operator> <call><name pos:line="608" pos:column="14">expect100<pos:position pos:line="608" pos:column="23"/></name><argument_list pos:line="608" pos:column="23">(<argument><expr><name pos:line="608" pos:column="24">data<pos:position pos:line="608" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="608" pos:column="30">req_buffer<pos:position pos:line="608" pos:column="40"/></name></expr></argument>)<pos:position pos:line="608" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="608" pos:column="42"/></expr_stmt>
    <if pos:line="609" pos:column="5">if<condition pos:line="609" pos:column="7">(<expr><name pos:line="609" pos:column="8">result<pos:position pos:line="609" pos:column="14"/></name></expr>)<pos:position pos:line="609" pos:column="15"/></condition><then pos:line="609" pos:column="15">
      <block type="pseudo"><return pos:line="610" pos:column="7">return <expr><name pos:line="610" pos:column="14">result<pos:position pos:line="610" pos:column="20"/></name></expr>;<pos:position pos:line="610" pos:column="21"/></return></block></then></if>

    <block pos:line="612" pos:column="5">{

      <comment type="block" pos:line="614" pos:column="7">/* Get Content-Type: line from Curl_formpostheader.
       */</comment>
      <decl_stmt><decl><type><name pos:line="616" pos:column="7">char<pos:position pos:line="616" pos:column="11"/></name> <modifier pos:line="616" pos:column="12">*<pos:position pos:line="616" pos:column="13"/></modifier></type><name pos:line="616" pos:column="13">contentType<pos:position pos:line="616" pos:column="24"/></name></decl>;<pos:position pos:line="616" pos:column="25"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="617" pos:column="7">size_t<pos:position pos:line="617" pos:column="13"/></name></type> <name pos:line="617" pos:column="14">linelength<pos:position pos:line="617" pos:column="24"/></name><init pos:line="617" pos:column="24">=<expr><literal type="number" pos:line="617" pos:column="25">0<pos:position pos:line="617" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="617" pos:column="27"/></decl_stmt>
      <expr_stmt><expr><name pos:line="618" pos:column="7">contentType<pos:position pos:line="618" pos:column="18"/></name> <operator pos:line="618" pos:column="19">=<pos:position pos:line="618" pos:column="20"/></operator> <call><name pos:line="618" pos:column="21">Curl_formpostheader<pos:position pos:line="618" pos:column="40"/></name><argument_list pos:line="618" pos:column="40">(<argument><expr><operator pos:line="618" pos:column="41">(<pos:position pos:line="618" pos:column="42"/></operator><name pos:line="618" pos:column="42">void<pos:position pos:line="618" pos:column="46"/></name> <operator pos:line="618" pos:column="47">*<pos:position pos:line="618" pos:column="48"/></operator><operator pos:line="618" pos:column="48">)<pos:position pos:line="618" pos:column="49"/></operator><operator pos:line="618" pos:column="49">&amp;<pos:position pos:line="618" pos:column="54"/></operator><name><name pos:line="618" pos:column="50">http<pos:position pos:line="618" pos:column="54"/></name><operator pos:line="618" pos:column="54">-&gt;<pos:position pos:line="618" pos:column="59"/></operator><name pos:line="618" pos:column="56">form<pos:position pos:line="618" pos:column="60"/></name></name></expr></argument>,
                                        <argument><expr><operator pos:line="619" pos:column="41">&amp;<pos:position pos:line="619" pos:column="46"/></operator><name pos:line="619" pos:column="42">linelength<pos:position pos:line="619" pos:column="52"/></name></expr></argument>)<pos:position pos:line="619" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="619" pos:column="54"/></expr_stmt>
      <if pos:line="620" pos:column="7">if<condition pos:line="620" pos:column="9">(<expr><operator pos:line="620" pos:column="10">!<pos:position pos:line="620" pos:column="11"/></operator><name pos:line="620" pos:column="11">contentType<pos:position pos:line="620" pos:column="22"/></name></expr>)<pos:position pos:line="620" pos:column="23"/></condition><then pos:line="620" pos:column="23"> <block pos:line="620" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="621" pos:column="9">failf<pos:position pos:line="621" pos:column="14"/></name><argument_list pos:line="621" pos:column="14">(<argument><expr><name pos:line="621" pos:column="15">data<pos:position pos:line="621" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="621" pos:column="21">"Could not get Content-Type header line!"<pos:position pos:line="621" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="621" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="621" pos:column="64"/></expr_stmt>
        <return pos:line="622" pos:column="9">return <expr><name pos:line="622" pos:column="16">CURLE_HTTP_POST_ERROR<pos:position pos:line="622" pos:column="37"/></name></expr>;<pos:position pos:line="622" pos:column="38"/></return>
      }<pos:position pos:line="623" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="625" pos:column="7">result<pos:position pos:line="625" pos:column="13"/></name> <operator pos:line="625" pos:column="14">=<pos:position pos:line="625" pos:column="15"/></operator> <call><name pos:line="625" pos:column="16">add_buffer<pos:position pos:line="625" pos:column="26"/></name><argument_list pos:line="625" pos:column="26">(<argument><expr><name pos:line="625" pos:column="27">req_buffer<pos:position pos:line="625" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="625" pos:column="39">contentType<pos:position pos:line="625" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="625" pos:column="52">linelength<pos:position pos:line="625" pos:column="62"/></name></expr></argument>)<pos:position pos:line="625" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="625" pos:column="64"/></expr_stmt>
      <if pos:line="626" pos:column="7">if<condition pos:line="626" pos:column="9">(<expr><name pos:line="626" pos:column="10">result<pos:position pos:line="626" pos:column="16"/></name></expr>)<pos:position pos:line="626" pos:column="17"/></condition><then pos:line="626" pos:column="17">
        <block type="pseudo"><return pos:line="627" pos:column="9">return <expr><name pos:line="627" pos:column="16">result<pos:position pos:line="627" pos:column="22"/></name></expr>;<pos:position pos:line="627" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="628" pos:column="6"/></block>

    <comment type="block" pos:line="630" pos:column="5">/* make the request end in a true CRLF */</comment>
    <expr_stmt><expr><name pos:line="631" pos:column="5">result<pos:position pos:line="631" pos:column="11"/></name> <operator pos:line="631" pos:column="12">=<pos:position pos:line="631" pos:column="13"/></operator> <call><name pos:line="631" pos:column="14">add_buffer<pos:position pos:line="631" pos:column="24"/></name><argument_list pos:line="631" pos:column="24">(<argument><expr><name pos:line="631" pos:column="25">req_buffer<pos:position pos:line="631" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="631" pos:column="37">"\r\n"<pos:position pos:line="631" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="631" pos:column="45">2<pos:position pos:line="631" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="631" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="631" pos:column="48"/></expr_stmt>
    <if pos:line="632" pos:column="5">if<condition pos:line="632" pos:column="7">(<expr><name pos:line="632" pos:column="8">result<pos:position pos:line="632" pos:column="14"/></name></expr>)<pos:position pos:line="632" pos:column="15"/></condition><then pos:line="632" pos:column="15">
      <block type="pseudo"><return pos:line="633" pos:column="7">return <expr><name pos:line="633" pos:column="14">result<pos:position pos:line="633" pos:column="20"/></name></expr>;<pos:position pos:line="633" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="635" pos:column="5">/* set upload size to the progress meter */</comment>
    <expr_stmt><expr><call><name pos:line="636" pos:column="5">Curl_pgrsSetUploadSize<pos:position pos:line="636" pos:column="27"/></name><argument_list pos:line="636" pos:column="27">(<argument><expr><name pos:line="636" pos:column="28">data<pos:position pos:line="636" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="636" pos:column="34">http<pos:position pos:line="636" pos:column="38"/></name><operator pos:line="636" pos:column="38">-&gt;<pos:position pos:line="636" pos:column="43"/></operator><name pos:line="636" pos:column="40">postsize<pos:position pos:line="636" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="636" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="636" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="638" pos:column="5">/* fire away the whole request to the server */</comment>
    <expr_stmt><expr><name pos:line="639" pos:column="5">result<pos:position pos:line="639" pos:column="11"/></name> <operator pos:line="639" pos:column="12">=<pos:position pos:line="639" pos:column="13"/></operator> <call><name pos:line="639" pos:column="14">add_buffer_send<pos:position pos:line="639" pos:column="29"/></name><argument_list pos:line="639" pos:column="29">(<argument><expr><name pos:line="639" pos:column="30">req_buffer<pos:position pos:line="639" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="639" pos:column="42">conn<pos:position pos:line="639" pos:column="46"/></name></expr></argument>,
                             <argument><expr><operator pos:line="640" pos:column="30">&amp;<pos:position pos:line="640" pos:column="35"/></operator><name><name pos:line="640" pos:column="31">data<pos:position pos:line="640" pos:column="35"/></name><operator pos:line="640" pos:column="35">-&gt;<pos:position pos:line="640" pos:column="40"/></operator><name pos:line="640" pos:column="37">info<pos:position pos:line="640" pos:column="41"/></name><operator pos:line="640" pos:column="41">.<pos:position pos:line="640" pos:column="42"/></operator><name pos:line="640" pos:column="42">request_size<pos:position pos:line="640" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="640" pos:column="56">0<pos:position pos:line="640" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="640" pos:column="59">FIRSTSOCKET<pos:position pos:line="640" pos:column="70"/></name></expr></argument>)<pos:position pos:line="640" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="640" pos:column="72"/></expr_stmt>
    <if pos:line="641" pos:column="5">if<condition pos:line="641" pos:column="7">(<expr><name pos:line="641" pos:column="8">result<pos:position pos:line="641" pos:column="14"/></name></expr>)<pos:position pos:line="641" pos:column="15"/></condition><then pos:line="641" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="642" pos:column="7">failf<pos:position pos:line="642" pos:column="12"/></name><argument_list pos:line="642" pos:column="12">(<argument><expr><name pos:line="642" pos:column="13">data<pos:position pos:line="642" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="642" pos:column="19">"Failed sending POST request"<pos:position pos:line="642" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="642" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="642" pos:column="50"/></expr_stmt></block></then>
    <else pos:line="643" pos:column="5">else
      <comment type="block" pos:line="644" pos:column="7">/* setup variables for the upcoming transfer */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="645" pos:column="7">result<pos:position pos:line="645" pos:column="13"/></name> <operator pos:line="645" pos:column="14">=<pos:position pos:line="645" pos:column="15"/></operator> <call><name pos:line="645" pos:column="16">Curl_setup_transfer<pos:position pos:line="645" pos:column="35"/></name><argument_list pos:line="645" pos:column="35">(<argument><expr><name pos:line="645" pos:column="36">conn<pos:position pos:line="645" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="645" pos:column="42">FIRSTSOCKET<pos:position pos:line="645" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="645" pos:column="55">-<pos:position pos:line="645" pos:column="56"/></operator><literal type="number" pos:line="645" pos:column="56">1<pos:position pos:line="645" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="645" pos:column="59">TRUE<pos:position pos:line="645" pos:column="63"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="646" pos:column="36">&amp;<pos:position pos:line="646" pos:column="41"/></operator><name><name pos:line="646" pos:column="37">http<pos:position pos:line="646" pos:column="41"/></name><operator pos:line="646" pos:column="41">-&gt;<pos:position pos:line="646" pos:column="46"/></operator><name pos:line="646" pos:column="43">readbytecount<pos:position pos:line="646" pos:column="56"/></name></name></expr></argument>,
                                   <argument><expr><name pos:line="647" pos:column="36">FIRSTSOCKET<pos:position pos:line="647" pos:column="47"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="648" pos:column="36">&amp;<pos:position pos:line="648" pos:column="41"/></operator><name><name pos:line="648" pos:column="37">http<pos:position pos:line="648" pos:column="41"/></name><operator pos:line="648" pos:column="41">-&gt;<pos:position pos:line="648" pos:column="46"/></operator><name pos:line="648" pos:column="43">writebytecount<pos:position pos:line="648" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="648" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="648" pos:column="59"/></expr_stmt></block></else></if>

    <if pos:line="650" pos:column="5">if<condition pos:line="650" pos:column="7">(<expr><name pos:line="650" pos:column="8">result<pos:position pos:line="650" pos:column="14"/></name></expr>)<pos:position pos:line="650" pos:column="15"/></condition><then pos:line="650" pos:column="15"> <block pos:line="650" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="651" pos:column="7">Curl_formclean<pos:position pos:line="651" pos:column="21"/></name><argument_list pos:line="651" pos:column="21">(<argument><expr><operator pos:line="651" pos:column="22">&amp;<pos:position pos:line="651" pos:column="27"/></operator><name><name pos:line="651" pos:column="23">http<pos:position pos:line="651" pos:column="27"/></name><operator pos:line="651" pos:column="27">-&gt;<pos:position pos:line="651" pos:column="32"/></operator><name pos:line="651" pos:column="29">sendit<pos:position pos:line="651" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="651" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="651" pos:column="37"/></expr_stmt> <comment type="block" pos:line="651" pos:column="38">/* free that whole lot */</comment>
      <return pos:line="652" pos:column="7">return <expr><name pos:line="652" pos:column="14">result<pos:position pos:line="652" pos:column="20"/></name></expr>;<pos:position pos:line="652" pos:column="21"/></return>
    }<pos:position pos:line="653" pos:column="6"/></block></then></if>
<cpp:ifdef pos:line="654" pos:column="1">#<cpp:directive pos:line="654" pos:column="2">ifdef<pos:position pos:line="654" pos:column="7"/></cpp:directive> <name pos:line="654" pos:column="8">CURL_DOES_CONVERSIONS<pos:position pos:line="654" pos:column="29"/></name></cpp:ifdef>
<comment type="block" pos:line="655" pos:column="1">/* time to convert the form data... */</comment>
    <expr_stmt><expr><name pos:line="656" pos:column="5">result<pos:position pos:line="656" pos:column="11"/></name> <operator pos:line="656" pos:column="12">=<pos:position pos:line="656" pos:column="13"/></operator> <call><name pos:line="656" pos:column="14">Curl_formconvert<pos:position pos:line="656" pos:column="30"/></name><argument_list pos:line="656" pos:column="30">(<argument><expr><name pos:line="656" pos:column="31">data<pos:position pos:line="656" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="656" pos:column="37">http<pos:position pos:line="656" pos:column="41"/></name><operator pos:line="656" pos:column="41">-&gt;<pos:position pos:line="656" pos:column="46"/></operator><name pos:line="656" pos:column="43">sendit<pos:position pos:line="656" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="656" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="656" pos:column="51"/></expr_stmt>
    <if pos:line="657" pos:column="5">if<condition pos:line="657" pos:column="7">(<expr><name pos:line="657" pos:column="8">result<pos:position pos:line="657" pos:column="14"/></name></expr>)<pos:position pos:line="657" pos:column="15"/></condition><then pos:line="657" pos:column="15"> <block pos:line="657" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="658" pos:column="7">Curl_formclean<pos:position pos:line="658" pos:column="21"/></name><argument_list pos:line="658" pos:column="21">(<argument><expr><operator pos:line="658" pos:column="22">&amp;<pos:position pos:line="658" pos:column="27"/></operator><name><name pos:line="658" pos:column="23">http<pos:position pos:line="658" pos:column="27"/></name><operator pos:line="658" pos:column="27">-&gt;<pos:position pos:line="658" pos:column="32"/></operator><name pos:line="658" pos:column="29">sendit<pos:position pos:line="658" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="658" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="658" pos:column="37"/></expr_stmt> <comment type="block" pos:line="658" pos:column="38">/* free that whole lot */</comment>
      <return pos:line="659" pos:column="7">return <expr><name pos:line="659" pos:column="14">result<pos:position pos:line="659" pos:column="20"/></name></expr>;<pos:position pos:line="659" pos:column="21"/></return>
    }<pos:position pos:line="660" pos:column="6"/></block></then></if>
<cpp:endif pos:line="661" pos:column="1">#<cpp:directive pos:line="661" pos:column="2">endif<pos:position pos:line="661" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="661" pos:column="8">/* CURL_DOES_CONVERSIONS */</comment>
    <break pos:line="662" pos:column="5">break;<pos:position pos:line="662" pos:column="11"/></break>

  <case pos:line="664" pos:column="3">case <expr><name pos:line="664" pos:column="8">HTTPREQ_PUT<pos:position pos:line="664" pos:column="19"/></name></expr>:<pos:position pos:line="664" pos:column="20"/></case> <comment type="block" pos:line="664" pos:column="21">/* Let's PUT the data to the server! */</comment>

    <if pos:line="666" pos:column="5">if<condition pos:line="666" pos:column="7">(<expr><name><name pos:line="666" pos:column="8">conn<pos:position pos:line="666" pos:column="12"/></name><operator pos:line="666" pos:column="12">-&gt;<pos:position pos:line="666" pos:column="17"/></operator><name pos:line="666" pos:column="14">bits<pos:position pos:line="666" pos:column="18"/></name><operator pos:line="666" pos:column="18">.<pos:position pos:line="666" pos:column="19"/></operator><name pos:line="666" pos:column="19">authneg<pos:position pos:line="666" pos:column="26"/></name></name></expr>)<pos:position pos:line="666" pos:column="27"/></condition><then pos:line="666" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><name pos:line="667" pos:column="7">postsize<pos:position pos:line="667" pos:column="15"/></name> <operator pos:line="667" pos:column="16">=<pos:position pos:line="667" pos:column="17"/></operator> <literal type="number" pos:line="667" pos:column="18">0<pos:position pos:line="667" pos:column="19"/></literal></expr>;<pos:position pos:line="667" pos:column="20"/></expr_stmt></block></then>
    <else pos:line="668" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="669" pos:column="7">postsize<pos:position pos:line="669" pos:column="15"/></name> <operator pos:line="669" pos:column="16">=<pos:position pos:line="669" pos:column="17"/></operator> <name><name pos:line="669" pos:column="18">data<pos:position pos:line="669" pos:column="22"/></name><operator pos:line="669" pos:column="22">-&gt;<pos:position pos:line="669" pos:column="27"/></operator><name pos:line="669" pos:column="24">set<pos:position pos:line="669" pos:column="27"/></name><operator pos:line="669" pos:column="27">.<pos:position pos:line="669" pos:column="28"/></operator><name pos:line="669" pos:column="28">infilesize<pos:position pos:line="669" pos:column="38"/></name></name></expr>;<pos:position pos:line="669" pos:column="39"/></expr_stmt></block></else></if>

    <if pos:line="671" pos:column="5">if<condition pos:line="671" pos:column="7">(<expr><operator pos:line="671" pos:column="8">(<pos:position pos:line="671" pos:column="9"/></operator><name pos:line="671" pos:column="9">postsize<pos:position pos:line="671" pos:column="17"/></name> <operator pos:line="671" pos:column="18">!=<pos:position pos:line="671" pos:column="20"/></operator> <operator pos:line="671" pos:column="21">-<pos:position pos:line="671" pos:column="22"/></operator><literal type="number" pos:line="671" pos:column="22">1<pos:position pos:line="671" pos:column="23"/></literal><operator pos:line="671" pos:column="23">)<pos:position pos:line="671" pos:column="24"/></operator> <operator pos:line="671" pos:column="25">&amp;&amp;<pos:position pos:line="671" pos:column="35"/></operator> <operator pos:line="671" pos:column="28">!<pos:position pos:line="671" pos:column="29"/></operator><name><name pos:line="671" pos:column="29">data<pos:position pos:line="671" pos:column="33"/></name><operator pos:line="671" pos:column="33">-&gt;<pos:position pos:line="671" pos:column="38"/></operator><name pos:line="671" pos:column="35">req<pos:position pos:line="671" pos:column="38"/></name><operator pos:line="671" pos:column="38">.<pos:position pos:line="671" pos:column="39"/></operator><name pos:line="671" pos:column="39">upload_chunky<pos:position pos:line="671" pos:column="52"/></name></name></expr>)<pos:position pos:line="671" pos:column="53"/></condition><then pos:line="671" pos:column="53"> <block pos:line="671" pos:column="54">{
      <comment type="block" pos:line="672" pos:column="7">/* only add Content-Length if not uploading chunked */</comment>
      <expr_stmt><expr><name pos:line="673" pos:column="7">result<pos:position pos:line="673" pos:column="13"/></name> <operator pos:line="673" pos:column="14">=<pos:position pos:line="673" pos:column="15"/></operator> <call><name pos:line="673" pos:column="16">add_bufferf<pos:position pos:line="673" pos:column="27"/></name><argument_list pos:line="673" pos:column="27">(<argument><expr><name pos:line="673" pos:column="28">req_buffer<pos:position pos:line="673" pos:column="38"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="674" pos:column="28">"Content-Length: %"<pos:position pos:line="674" pos:column="47"/></literal> <name pos:line="674" pos:column="48">FORMAT_OFF_T<pos:position pos:line="674" pos:column="60"/></name> <literal type="string" pos:line="674" pos:column="61">"\r\n"<pos:position pos:line="674" pos:column="67"/></literal></expr></argument>,
                           <argument><expr><name pos:line="675" pos:column="28">postsize<pos:position pos:line="675" pos:column="36"/></name></expr></argument> )<pos:position pos:line="675" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="675" pos:column="39"/></expr_stmt>
      <if pos:line="676" pos:column="7">if<condition pos:line="676" pos:column="9">(<expr><name pos:line="676" pos:column="10">result<pos:position pos:line="676" pos:column="16"/></name></expr>)<pos:position pos:line="676" pos:column="17"/></condition><then pos:line="676" pos:column="17">
        <block type="pseudo"><return pos:line="677" pos:column="9">return <expr><name pos:line="677" pos:column="16">result<pos:position pos:line="677" pos:column="22"/></name></expr>;<pos:position pos:line="677" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="678" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="680" pos:column="5">result<pos:position pos:line="680" pos:column="11"/></name> <operator pos:line="680" pos:column="12">=<pos:position pos:line="680" pos:column="13"/></operator> <call><name pos:line="680" pos:column="14">expect100<pos:position pos:line="680" pos:column="23"/></name><argument_list pos:line="680" pos:column="23">(<argument><expr><name pos:line="680" pos:column="24">data<pos:position pos:line="680" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="680" pos:column="30">req_buffer<pos:position pos:line="680" pos:column="40"/></name></expr></argument>)<pos:position pos:line="680" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="680" pos:column="42"/></expr_stmt>
    <if pos:line="681" pos:column="5">if<condition pos:line="681" pos:column="7">(<expr><name pos:line="681" pos:column="8">result<pos:position pos:line="681" pos:column="14"/></name></expr>)<pos:position pos:line="681" pos:column="15"/></condition><then pos:line="681" pos:column="15">
      <block type="pseudo"><return pos:line="682" pos:column="7">return <expr><name pos:line="682" pos:column="14">result<pos:position pos:line="682" pos:column="20"/></name></expr>;<pos:position pos:line="682" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="684" pos:column="5">result<pos:position pos:line="684" pos:column="11"/></name> <operator pos:line="684" pos:column="12">=<pos:position pos:line="684" pos:column="13"/></operator> <call><name pos:line="684" pos:column="14">add_buffer<pos:position pos:line="684" pos:column="24"/></name><argument_list pos:line="684" pos:column="24">(<argument><expr><name pos:line="684" pos:column="25">req_buffer<pos:position pos:line="684" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="684" pos:column="37">"\r\n"<pos:position pos:line="684" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="684" pos:column="45">2<pos:position pos:line="684" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="684" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="684" pos:column="48"/></expr_stmt> <comment type="block" pos:line="684" pos:column="49">/* end of headers */</comment>
    <if pos:line="685" pos:column="5">if<condition pos:line="685" pos:column="7">(<expr><name pos:line="685" pos:column="8">result<pos:position pos:line="685" pos:column="14"/></name></expr>)<pos:position pos:line="685" pos:column="15"/></condition><then pos:line="685" pos:column="15">
      <block type="pseudo"><return pos:line="686" pos:column="7">return <expr><name pos:line="686" pos:column="14">result<pos:position pos:line="686" pos:column="20"/></name></expr>;<pos:position pos:line="686" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="688" pos:column="5">/* set the upload size to the progress meter */</comment>
    <expr_stmt><expr><call><name pos:line="689" pos:column="5">Curl_pgrsSetUploadSize<pos:position pos:line="689" pos:column="27"/></name><argument_list pos:line="689" pos:column="27">(<argument><expr><name pos:line="689" pos:column="28">data<pos:position pos:line="689" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="689" pos:column="34">postsize<pos:position pos:line="689" pos:column="42"/></name></expr></argument>)<pos:position pos:line="689" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="689" pos:column="44"/></expr_stmt>

    <comment type="block" pos:line="691" pos:column="5">/* this sends the buffer and frees all the buffer resources */</comment>
    <expr_stmt><expr><name pos:line="692" pos:column="5">result<pos:position pos:line="692" pos:column="11"/></name> <operator pos:line="692" pos:column="12">=<pos:position pos:line="692" pos:column="13"/></operator> <call><name pos:line="692" pos:column="14">add_buffer_send<pos:position pos:line="692" pos:column="29"/></name><argument_list pos:line="692" pos:column="29">(<argument><expr><name pos:line="692" pos:column="30">req_buffer<pos:position pos:line="692" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="692" pos:column="42">conn<pos:position pos:line="692" pos:column="46"/></name></expr></argument>,
                             <argument><expr><operator pos:line="693" pos:column="30">&amp;<pos:position pos:line="693" pos:column="35"/></operator><name><name pos:line="693" pos:column="31">data<pos:position pos:line="693" pos:column="35"/></name><operator pos:line="693" pos:column="35">-&gt;<pos:position pos:line="693" pos:column="40"/></operator><name pos:line="693" pos:column="37">info<pos:position pos:line="693" pos:column="41"/></name><operator pos:line="693" pos:column="41">.<pos:position pos:line="693" pos:column="42"/></operator><name pos:line="693" pos:column="42">request_size<pos:position pos:line="693" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="693" pos:column="56">0<pos:position pos:line="693" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="693" pos:column="59">FIRSTSOCKET<pos:position pos:line="693" pos:column="70"/></name></expr></argument>)<pos:position pos:line="693" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="693" pos:column="72"/></expr_stmt>
    <if pos:line="694" pos:column="5">if<condition pos:line="694" pos:column="7">(<expr><name pos:line="694" pos:column="8">result<pos:position pos:line="694" pos:column="14"/></name></expr>)<pos:position pos:line="694" pos:column="15"/></condition><then pos:line="694" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="695" pos:column="7">failf<pos:position pos:line="695" pos:column="12"/></name><argument_list pos:line="695" pos:column="12">(<argument><expr><name pos:line="695" pos:column="13">data<pos:position pos:line="695" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="695" pos:column="19">"Failed sending PUT request"<pos:position pos:line="695" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="695" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="695" pos:column="49"/></expr_stmt></block></then>
    <else pos:line="696" pos:column="5">else
      <comment type="block" pos:line="697" pos:column="7">/* prepare for transfer */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="698" pos:column="7">result<pos:position pos:line="698" pos:column="13"/></name> <operator pos:line="698" pos:column="14">=<pos:position pos:line="698" pos:column="15"/></operator> <call><name pos:line="698" pos:column="16">Curl_setup_transfer<pos:position pos:line="698" pos:column="35"/></name><argument_list pos:line="698" pos:column="35">(<argument><expr><name pos:line="698" pos:column="36">conn<pos:position pos:line="698" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="698" pos:column="42">FIRSTSOCKET<pos:position pos:line="698" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="698" pos:column="55">-<pos:position pos:line="698" pos:column="56"/></operator><literal type="number" pos:line="698" pos:column="56">1<pos:position pos:line="698" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="698" pos:column="59">TRUE<pos:position pos:line="698" pos:column="63"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="699" pos:column="36">&amp;<pos:position pos:line="699" pos:column="41"/></operator><name><name pos:line="699" pos:column="37">http<pos:position pos:line="699" pos:column="41"/></name><operator pos:line="699" pos:column="41">-&gt;<pos:position pos:line="699" pos:column="46"/></operator><name pos:line="699" pos:column="43">readbytecount<pos:position pos:line="699" pos:column="56"/></name></name></expr></argument>,
                                   <argument><expr><ternary><condition><expr><name pos:line="700" pos:column="36">postsize<pos:position pos:line="700" pos:column="44"/></name></expr>?<pos:position pos:line="700" pos:column="45"/></condition><then><expr><name pos:line="700" pos:column="45">FIRSTSOCKET<pos:position pos:line="700" pos:column="56"/></name></expr></then><else pos:line="700" pos:column="56">:<expr><operator pos:line="700" pos:column="57">-<pos:position pos:line="700" pos:column="58"/></operator><literal type="number" pos:line="700" pos:column="58">1<pos:position pos:line="700" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
                                   <argument><expr><ternary><condition><expr><name pos:line="701" pos:column="36">postsize<pos:position pos:line="701" pos:column="44"/></name></expr>?<pos:position pos:line="701" pos:column="45"/></condition><then><expr><operator pos:line="701" pos:column="45">&amp;<pos:position pos:line="701" pos:column="50"/></operator><name><name pos:line="701" pos:column="46">http<pos:position pos:line="701" pos:column="50"/></name><operator pos:line="701" pos:column="50">-&gt;<pos:position pos:line="701" pos:column="55"/></operator><name pos:line="701" pos:column="52">writebytecount<pos:position pos:line="701" pos:column="66"/></name></name></expr></then><else pos:line="701" pos:column="66">:<expr><name pos:line="701" pos:column="67">NULL<pos:position pos:line="701" pos:column="71"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="701" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="701" pos:column="73"/></expr_stmt></block></else></if>
    <if pos:line="702" pos:column="5">if<condition pos:line="702" pos:column="7">(<expr><name pos:line="702" pos:column="8">result<pos:position pos:line="702" pos:column="14"/></name></expr>)<pos:position pos:line="702" pos:column="15"/></condition><then pos:line="702" pos:column="15">
      <block type="pseudo"><return pos:line="703" pos:column="7">return <expr><name pos:line="703" pos:column="14">result<pos:position pos:line="703" pos:column="20"/></name></expr>;<pos:position pos:line="703" pos:column="21"/></return></block></then></if>
    <break pos:line="704" pos:column="5">break;<pos:position pos:line="704" pos:column="11"/></break>

  <case pos:line="706" pos:column="3">case <expr><name pos:line="706" pos:column="8">HTTPREQ_POST<pos:position pos:line="706" pos:column="20"/></name></expr>:<pos:position pos:line="706" pos:column="21"/></case>
    <comment type="block" pos:line="707" pos:column="5">/* this is the simple POST, using x-www-form-urlencoded style */</comment>

    <if pos:line="709" pos:column="5">if<condition pos:line="709" pos:column="7">(<expr><name><name pos:line="709" pos:column="8">conn<pos:position pos:line="709" pos:column="12"/></name><operator pos:line="709" pos:column="12">-&gt;<pos:position pos:line="709" pos:column="17"/></operator><name pos:line="709" pos:column="14">bits<pos:position pos:line="709" pos:column="18"/></name><operator pos:line="709" pos:column="18">.<pos:position pos:line="709" pos:column="19"/></operator><name pos:line="709" pos:column="19">authneg<pos:position pos:line="709" pos:column="26"/></name></name></expr>)<pos:position pos:line="709" pos:column="27"/></condition><then pos:line="709" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><name pos:line="710" pos:column="7">postsize<pos:position pos:line="710" pos:column="15"/></name> <operator pos:line="710" pos:column="16">=<pos:position pos:line="710" pos:column="17"/></operator> <literal type="number" pos:line="710" pos:column="18">0<pos:position pos:line="710" pos:column="19"/></literal></expr>;<pos:position pos:line="710" pos:column="20"/></expr_stmt></block></then>
    <else pos:line="711" pos:column="5">else
      <comment type="block" pos:line="712" pos:column="7">/* figure out the size of the postfields */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="713" pos:column="7">postsize<pos:position pos:line="713" pos:column="15"/></name> <operator pos:line="713" pos:column="16">=<pos:position pos:line="713" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="713" pos:column="18">(<pos:position pos:line="713" pos:column="19"/></operator><name><name pos:line="713" pos:column="19">data<pos:position pos:line="713" pos:column="23"/></name><operator pos:line="713" pos:column="23">-&gt;<pos:position pos:line="713" pos:column="28"/></operator><name pos:line="713" pos:column="25">set<pos:position pos:line="713" pos:column="28"/></name><operator pos:line="713" pos:column="28">.<pos:position pos:line="713" pos:column="29"/></operator><name pos:line="713" pos:column="29">postfieldsize<pos:position pos:line="713" pos:column="42"/></name></name> <operator pos:line="713" pos:column="43">!=<pos:position pos:line="713" pos:column="45"/></operator> <operator pos:line="713" pos:column="46">-<pos:position pos:line="713" pos:column="47"/></operator><literal type="number" pos:line="713" pos:column="47">1<pos:position pos:line="713" pos:column="48"/></literal><operator pos:line="713" pos:column="48">)<pos:position pos:line="713" pos:column="49"/></operator></expr>?<pos:position pos:line="713" pos:column="50"/></condition><then pos:line="713" pos:column="50">
        <expr><name><name pos:line="714" pos:column="9">data<pos:position pos:line="714" pos:column="13"/></name><operator pos:line="714" pos:column="13">-&gt;<pos:position pos:line="714" pos:column="18"/></operator><name pos:line="714" pos:column="15">set<pos:position pos:line="714" pos:column="18"/></name><operator pos:line="714" pos:column="18">.<pos:position pos:line="714" pos:column="19"/></operator><name pos:line="714" pos:column="19">postfieldsize<pos:position pos:line="714" pos:column="32"/></name></name></expr></then><else pos:line="714" pos:column="32">:
        <expr><operator pos:line="715" pos:column="9">(<pos:position pos:line="715" pos:column="10"/></operator><ternary><condition><expr><name><name pos:line="715" pos:column="10">data<pos:position pos:line="715" pos:column="14"/></name><operator pos:line="715" pos:column="14">-&gt;<pos:position pos:line="715" pos:column="19"/></operator><name pos:line="715" pos:column="16">set<pos:position pos:line="715" pos:column="19"/></name><operator pos:line="715" pos:column="19">.<pos:position pos:line="715" pos:column="20"/></operator><name pos:line="715" pos:column="20">postfields<pos:position pos:line="715" pos:column="30"/></name></name></expr>?<pos:position pos:line="715" pos:column="31"/></condition><then pos:line="715" pos:column="31"> <expr><operator pos:line="715" pos:column="32">(<pos:position pos:line="715" pos:column="33"/></operator><name pos:line="715" pos:column="33">curl_off_t<pos:position pos:line="715" pos:column="43"/></name><operator pos:line="715" pos:column="43">)<pos:position pos:line="715" pos:column="44"/></operator><call><name pos:line="715" pos:column="44">strlen<pos:position pos:line="715" pos:column="50"/></name><argument_list pos:line="715" pos:column="50">(<argument><expr><name><name pos:line="715" pos:column="51">data<pos:position pos:line="715" pos:column="55"/></name><operator pos:line="715" pos:column="55">-&gt;<pos:position pos:line="715" pos:column="60"/></operator><name pos:line="715" pos:column="57">set<pos:position pos:line="715" pos:column="60"/></name><operator pos:line="715" pos:column="60">.<pos:position pos:line="715" pos:column="61"/></operator><name pos:line="715" pos:column="61">postfields<pos:position pos:line="715" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="715" pos:column="72"/></argument_list></call></expr></then><else pos:line="715" pos:column="72">:<expr><literal type="number" pos:line="715" pos:column="73">0<pos:position pos:line="715" pos:column="74"/></literal></expr></else></ternary><operator pos:line="715" pos:column="74">)<pos:position pos:line="715" pos:column="75"/></operator></expr></else></ternary></expr>;<pos:position pos:line="715" pos:column="76"/></expr_stmt></block></else></if>

        <if pos:line="717" pos:column="9">if<condition pos:line="717" pos:column="11">(<expr><operator pos:line="717" pos:column="12">!<pos:position pos:line="717" pos:column="13"/></operator><name><name pos:line="717" pos:column="13">data<pos:position pos:line="717" pos:column="17"/></name><operator pos:line="717" pos:column="17">-&gt;<pos:position pos:line="717" pos:column="22"/></operator><name pos:line="717" pos:column="19">req<pos:position pos:line="717" pos:column="22"/></name><operator pos:line="717" pos:column="22">.<pos:position pos:line="717" pos:column="23"/></operator><name pos:line="717" pos:column="23">upload_chunky<pos:position pos:line="717" pos:column="36"/></name></name></expr>)<pos:position pos:line="717" pos:column="37"/></condition><then pos:line="717" pos:column="37"> <block pos:line="717" pos:column="38">{
          <comment type="block" pos:line="718" pos:column="11">/* We only set Content-Length and allow a custom Content-Length if
             we don't upload data chunked, as RFC2616 forbids us to set both
             kinds of headers (Transfer-Encoding: chunked and Content-Length) */</comment>

          <if pos:line="722" pos:column="11">if<condition pos:line="722" pos:column="13">(<expr><operator pos:line="722" pos:column="14">!<pos:position pos:line="722" pos:column="15"/></operator><call><name pos:line="722" pos:column="15">checkheaders<pos:position pos:line="722" pos:column="27"/></name><argument_list pos:line="722" pos:column="27">(<argument><expr><name pos:line="722" pos:column="28">data<pos:position pos:line="722" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="722" pos:column="34">"Content-Length:"<pos:position pos:line="722" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="722" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="722" pos:column="53"/></condition><then pos:line="722" pos:column="53"> <block pos:line="722" pos:column="54">{
            <comment type="block" pos:line="723" pos:column="13">/* we allow replacing this header, although it isn't very wise to
               actually set your own */</comment>
            <expr_stmt><expr><name pos:line="725" pos:column="13">result<pos:position pos:line="725" pos:column="19"/></name> <operator pos:line="725" pos:column="20">=<pos:position pos:line="725" pos:column="21"/></operator> <call><name pos:line="725" pos:column="22">add_bufferf<pos:position pos:line="725" pos:column="33"/></name><argument_list pos:line="725" pos:column="33">(<argument><expr><name pos:line="725" pos:column="34">req_buffer<pos:position pos:line="725" pos:column="44"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="726" pos:column="34">"Content-Length: %"<pos:position pos:line="726" pos:column="53"/></literal> <name pos:line="726" pos:column="54">FORMAT_OFF_T<pos:position pos:line="726" pos:column="66"/></name><literal type="string" pos:line="726" pos:column="66">"\r\n"<pos:position pos:line="726" pos:column="72"/></literal></expr></argument>,
                                 <argument><expr><name pos:line="727" pos:column="34">postsize<pos:position pos:line="727" pos:column="42"/></name></expr></argument>)<pos:position pos:line="727" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="727" pos:column="44"/></expr_stmt>
            <if pos:line="728" pos:column="13">if<condition pos:line="728" pos:column="15">(<expr><name pos:line="728" pos:column="16">result<pos:position pos:line="728" pos:column="22"/></name></expr>)<pos:position pos:line="728" pos:column="23"/></condition><then pos:line="728" pos:column="23">
              <block type="pseudo"><return pos:line="729" pos:column="15">return <expr><name pos:line="729" pos:column="22">result<pos:position pos:line="729" pos:column="28"/></name></expr>;<pos:position pos:line="729" pos:column="29"/></return></block></then></if>
          }<pos:position pos:line="730" pos:column="12"/></block></then></if>
        }<pos:position pos:line="731" pos:column="10"/></block></then></if>

        <if pos:line="733" pos:column="9">if<condition pos:line="733" pos:column="11">(<expr><operator pos:line="733" pos:column="12">!<pos:position pos:line="733" pos:column="13"/></operator><call><name pos:line="733" pos:column="13">checkheaders<pos:position pos:line="733" pos:column="25"/></name><argument_list pos:line="733" pos:column="25">(<argument><expr><name pos:line="733" pos:column="26">data<pos:position pos:line="733" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="733" pos:column="32">"Content-Type:"<pos:position pos:line="733" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="733" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="733" pos:column="49"/></condition><then pos:line="733" pos:column="49"> <block pos:line="733" pos:column="50">{
          <expr_stmt><expr><name pos:line="734" pos:column="11">result<pos:position pos:line="734" pos:column="17"/></name> <operator pos:line="734" pos:column="18">=<pos:position pos:line="734" pos:column="19"/></operator> <call><name pos:line="734" pos:column="20">add_bufferf<pos:position pos:line="734" pos:column="31"/></name><argument_list pos:line="734" pos:column="31">(<argument><expr><name pos:line="734" pos:column="32">req_buffer<pos:position pos:line="734" pos:column="42"/></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="735" pos:column="32">"Content-Type: application/x-www-form-urlencoded\r\n"<pos:position pos:line="735" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="735" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="735" pos:column="87"/></expr_stmt>
          <if pos:line="736" pos:column="11">if<condition pos:line="736" pos:column="13">(<expr><name pos:line="736" pos:column="14">result<pos:position pos:line="736" pos:column="20"/></name></expr>)<pos:position pos:line="736" pos:column="21"/></condition><then pos:line="736" pos:column="21">
            <block type="pseudo"><return pos:line="737" pos:column="13">return <expr><name pos:line="737" pos:column="20">result<pos:position pos:line="737" pos:column="26"/></name></expr>;<pos:position pos:line="737" pos:column="27"/></return></block></then></if>
        }<pos:position pos:line="738" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="740" pos:column="9">/* For really small posts we don't use Expect: headers at all, and for
           the somewhat bigger ones we allow the app to disable it. Just make
           sure that the expect100header is always set to the preferred value
           here. */</comment>
        <if pos:line="744" pos:column="9">if<condition pos:line="744" pos:column="11">(<expr><name pos:line="744" pos:column="12">postsize<pos:position pos:line="744" pos:column="20"/></name> <operator pos:line="744" pos:column="21">&gt;<pos:position pos:line="744" pos:column="25"/></operator> <name pos:line="744" pos:column="23">TINY_INITIAL_POST_SIZE<pos:position pos:line="744" pos:column="45"/></name></expr>)<pos:position pos:line="744" pos:column="46"/></condition><then pos:line="744" pos:column="46"> <block pos:line="744" pos:column="47">{
          <expr_stmt><expr><name pos:line="745" pos:column="11">result<pos:position pos:line="745" pos:column="17"/></name> <operator pos:line="745" pos:column="18">=<pos:position pos:line="745" pos:column="19"/></operator> <call><name pos:line="745" pos:column="20">expect100<pos:position pos:line="745" pos:column="29"/></name><argument_list pos:line="745" pos:column="29">(<argument><expr><name pos:line="745" pos:column="30">data<pos:position pos:line="745" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="745" pos:column="36">req_buffer<pos:position pos:line="745" pos:column="46"/></name></expr></argument>)<pos:position pos:line="745" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="745" pos:column="48"/></expr_stmt>
          <if pos:line="746" pos:column="11">if<condition pos:line="746" pos:column="13">(<expr><name pos:line="746" pos:column="14">result<pos:position pos:line="746" pos:column="20"/></name></expr>)<pos:position pos:line="746" pos:column="21"/></condition><then pos:line="746" pos:column="21">
            <block type="pseudo"><return pos:line="747" pos:column="13">return <expr><name pos:line="747" pos:column="20">result<pos:position pos:line="747" pos:column="26"/></name></expr>;<pos:position pos:line="747" pos:column="27"/></return></block></then></if>
        }<pos:position pos:line="748" pos:column="10"/></block></then>
        <else pos:line="749" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="750" pos:column="11">data<pos:position pos:line="750" pos:column="15"/></name><operator pos:line="750" pos:column="15">-&gt;<pos:position pos:line="750" pos:column="20"/></operator><name pos:line="750" pos:column="17">state<pos:position pos:line="750" pos:column="22"/></name><operator pos:line="750" pos:column="22">.<pos:position pos:line="750" pos:column="23"/></operator><name pos:line="750" pos:column="23">expect100header<pos:position pos:line="750" pos:column="38"/></name></name> <operator pos:line="750" pos:column="39">=<pos:position pos:line="750" pos:column="40"/></operator> <name pos:line="750" pos:column="41">FALSE<pos:position pos:line="750" pos:column="46"/></name></expr>;<pos:position pos:line="750" pos:column="47"/></expr_stmt></block></else></if>

        <if pos:line="752" pos:column="9">if<condition pos:line="752" pos:column="11">(<expr><name><name pos:line="752" pos:column="12">data<pos:position pos:line="752" pos:column="16"/></name><operator pos:line="752" pos:column="16">-&gt;<pos:position pos:line="752" pos:column="21"/></operator><name pos:line="752" pos:column="18">set<pos:position pos:line="752" pos:column="21"/></name><operator pos:line="752" pos:column="21">.<pos:position pos:line="752" pos:column="22"/></operator><name pos:line="752" pos:column="22">postfields<pos:position pos:line="752" pos:column="32"/></name></name></expr>)<pos:position pos:line="752" pos:column="33"/></condition><then pos:line="752" pos:column="33"> <block pos:line="752" pos:column="34">{

          <if pos:line="754" pos:column="11">if<condition pos:line="754" pos:column="13">(<expr><operator pos:line="754" pos:column="14">!<pos:position pos:line="754" pos:column="15"/></operator><name><name pos:line="754" pos:column="15">data<pos:position pos:line="754" pos:column="19"/></name><operator pos:line="754" pos:column="19">-&gt;<pos:position pos:line="754" pos:column="24"/></operator><name pos:line="754" pos:column="21">state<pos:position pos:line="754" pos:column="26"/></name><operator pos:line="754" pos:column="26">.<pos:position pos:line="754" pos:column="27"/></operator><name pos:line="754" pos:column="27">expect100header<pos:position pos:line="754" pos:column="42"/></name></name> <operator pos:line="754" pos:column="43">&amp;&amp;<pos:position pos:line="754" pos:column="53"/></operator>
             <operator pos:line="755" pos:column="14">(<pos:position pos:line="755" pos:column="15"/></operator><name pos:line="755" pos:column="15">postsize<pos:position pos:line="755" pos:column="23"/></name> <operator pos:line="755" pos:column="24">&lt;<pos:position pos:line="755" pos:column="28"/></operator> <name pos:line="755" pos:column="26">MAX_INITIAL_POST_SIZE<pos:position pos:line="755" pos:column="47"/></name><operator pos:line="755" pos:column="47">)<pos:position pos:line="755" pos:column="48"/></operator></expr>)<pos:position pos:line="755" pos:column="49"/></condition><then pos:line="755" pos:column="49">  <block pos:line="755" pos:column="51">{
            <comment type="block" pos:line="756" pos:column="13">/* if we don't use expect: 100  AND
               postsize is less than MAX_INITIAL_POST_SIZE

               then append the post data to the HTTP request header. This limit
               is no magic limit but only set to prevent really huge POSTs to
               get the data duplicated with malloc() and family. */</comment>

            <expr_stmt><expr><name pos:line="763" pos:column="13">result<pos:position pos:line="763" pos:column="19"/></name> <operator pos:line="763" pos:column="20">=<pos:position pos:line="763" pos:column="21"/></operator> <call><name pos:line="763" pos:column="22">add_buffer<pos:position pos:line="763" pos:column="32"/></name><argument_list pos:line="763" pos:column="32">(<argument><expr><name pos:line="763" pos:column="33">req_buffer<pos:position pos:line="763" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="763" pos:column="45">"\r\n"<pos:position pos:line="763" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="763" pos:column="53">2<pos:position pos:line="763" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="763" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="763" pos:column="56"/></expr_stmt> <comment type="block" pos:line="763" pos:column="57">/* end of headers! */</comment>
            <if pos:line="764" pos:column="13">if<condition pos:line="764" pos:column="15">(<expr><name pos:line="764" pos:column="16">result<pos:position pos:line="764" pos:column="22"/></name></expr>)<pos:position pos:line="764" pos:column="23"/></condition><then pos:line="764" pos:column="23">
              <block type="pseudo"><return pos:line="765" pos:column="15">return <expr><name pos:line="765" pos:column="22">result<pos:position pos:line="765" pos:column="28"/></name></expr>;<pos:position pos:line="765" pos:column="29"/></return></block></then></if>

            <if pos:line="767" pos:column="13">if<condition pos:line="767" pos:column="15">(<expr><operator pos:line="767" pos:column="16">!<pos:position pos:line="767" pos:column="17"/></operator><name><name pos:line="767" pos:column="17">data<pos:position pos:line="767" pos:column="21"/></name><operator pos:line="767" pos:column="21">-&gt;<pos:position pos:line="767" pos:column="26"/></operator><name pos:line="767" pos:column="23">req<pos:position pos:line="767" pos:column="26"/></name><operator pos:line="767" pos:column="26">.<pos:position pos:line="767" pos:column="27"/></operator><name pos:line="767" pos:column="27">upload_chunky<pos:position pos:line="767" pos:column="40"/></name></name></expr>)<pos:position pos:line="767" pos:column="41"/></condition><then pos:line="767" pos:column="41"> <block pos:line="767" pos:column="42">{
              <comment type="block" pos:line="768" pos:column="15">/* We're not sending it 'chunked', append it to the request
                 already now to reduce the number if send() calls */</comment>
              <expr_stmt><expr><name pos:line="770" pos:column="15">result<pos:position pos:line="770" pos:column="21"/></name> <operator pos:line="770" pos:column="22">=<pos:position pos:line="770" pos:column="23"/></operator> <call><name pos:line="770" pos:column="24">add_buffer<pos:position pos:line="770" pos:column="34"/></name><argument_list pos:line="770" pos:column="34">(<argument><expr><name pos:line="770" pos:column="35">req_buffer<pos:position pos:line="770" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="770" pos:column="47">data<pos:position pos:line="770" pos:column="51"/></name><operator pos:line="770" pos:column="51">-&gt;<pos:position pos:line="770" pos:column="56"/></operator><name pos:line="770" pos:column="53">set<pos:position pos:line="770" pos:column="56"/></name><operator pos:line="770" pos:column="56">.<pos:position pos:line="770" pos:column="57"/></operator><name pos:line="770" pos:column="57">postfields<pos:position pos:line="770" pos:column="67"/></name></name></expr></argument>,
                                  <argument><expr><operator pos:line="771" pos:column="35">(<pos:position pos:line="771" pos:column="36"/></operator><name pos:line="771" pos:column="36">size_t<pos:position pos:line="771" pos:column="42"/></name><operator pos:line="771" pos:column="42">)<pos:position pos:line="771" pos:column="43"/></operator><name pos:line="771" pos:column="43">postsize<pos:position pos:line="771" pos:column="51"/></name></expr></argument>)<pos:position pos:line="771" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="771" pos:column="53"/></expr_stmt>
              <expr_stmt><expr><name pos:line="772" pos:column="15">included_body<pos:position pos:line="772" pos:column="28"/></name> <operator pos:line="772" pos:column="29">=<pos:position pos:line="772" pos:column="30"/></operator> <name pos:line="772" pos:column="31">postsize<pos:position pos:line="772" pos:column="39"/></name></expr>;<pos:position pos:line="772" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="773" pos:column="14"/></block></then>
            <else pos:line="774" pos:column="13">else <block pos:line="774" pos:column="18">{
              <comment type="block" pos:line="775" pos:column="15">/* Append the POST data chunky-style */</comment>
              <expr_stmt><expr><name pos:line="776" pos:column="15">result<pos:position pos:line="776" pos:column="21"/></name> <operator pos:line="776" pos:column="22">=<pos:position pos:line="776" pos:column="23"/></operator> <call><name pos:line="776" pos:column="24">add_bufferf<pos:position pos:line="776" pos:column="35"/></name><argument_list pos:line="776" pos:column="35">(<argument><expr><name pos:line="776" pos:column="36">req_buffer<pos:position pos:line="776" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="776" pos:column="48">"%x\r\n"<pos:position pos:line="776" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="776" pos:column="58">(<pos:position pos:line="776" pos:column="59"/></operator><name pos:line="776" pos:column="59">int<pos:position pos:line="776" pos:column="62"/></name><operator pos:line="776" pos:column="62">)<pos:position pos:line="776" pos:column="63"/></operator><name pos:line="776" pos:column="63">postsize<pos:position pos:line="776" pos:column="71"/></name></expr></argument>)<pos:position pos:line="776" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="776" pos:column="73"/></expr_stmt>
              <if pos:line="777" pos:column="15">if<condition pos:line="777" pos:column="17">(<expr><name pos:line="777" pos:column="18">CURLE_OK<pos:position pos:line="777" pos:column="26"/></name> <operator pos:line="777" pos:column="27">==<pos:position pos:line="777" pos:column="29"/></operator> <name pos:line="777" pos:column="30">result<pos:position pos:line="777" pos:column="36"/></name></expr>)<pos:position pos:line="777" pos:column="37"/></condition><then pos:line="777" pos:column="37">
                <block type="pseudo"><expr_stmt><expr><name pos:line="778" pos:column="17">result<pos:position pos:line="778" pos:column="23"/></name> <operator pos:line="778" pos:column="24">=<pos:position pos:line="778" pos:column="25"/></operator> <call><name pos:line="778" pos:column="26">add_buffer<pos:position pos:line="778" pos:column="36"/></name><argument_list pos:line="778" pos:column="36">(<argument><expr><name pos:line="778" pos:column="37">req_buffer<pos:position pos:line="778" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="778" pos:column="49">data<pos:position pos:line="778" pos:column="53"/></name><operator pos:line="778" pos:column="53">-&gt;<pos:position pos:line="778" pos:column="58"/></operator><name pos:line="778" pos:column="55">set<pos:position pos:line="778" pos:column="58"/></name><operator pos:line="778" pos:column="58">.<pos:position pos:line="778" pos:column="59"/></operator><name pos:line="778" pos:column="59">postfields<pos:position pos:line="778" pos:column="69"/></name></name></expr></argument>,
                                    <argument><expr><operator pos:line="779" pos:column="37">(<pos:position pos:line="779" pos:column="38"/></operator><name pos:line="779" pos:column="38">size_t<pos:position pos:line="779" pos:column="44"/></name><operator pos:line="779" pos:column="44">)<pos:position pos:line="779" pos:column="45"/></operator><name pos:line="779" pos:column="45">postsize<pos:position pos:line="779" pos:column="53"/></name></expr></argument>)<pos:position pos:line="779" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="779" pos:column="55"/></expr_stmt></block></then></if>
              <if pos:line="780" pos:column="15">if<condition pos:line="780" pos:column="17">(<expr><name pos:line="780" pos:column="18">CURLE_OK<pos:position pos:line="780" pos:column="26"/></name> <operator pos:line="780" pos:column="27">==<pos:position pos:line="780" pos:column="29"/></operator> <name pos:line="780" pos:column="30">result<pos:position pos:line="780" pos:column="36"/></name></expr>)<pos:position pos:line="780" pos:column="37"/></condition><then pos:line="780" pos:column="37">
                <block type="pseudo"><expr_stmt><expr><name pos:line="781" pos:column="17">result<pos:position pos:line="781" pos:column="23"/></name> <operator pos:line="781" pos:column="24">=<pos:position pos:line="781" pos:column="25"/></operator> <call><name pos:line="781" pos:column="26">add_buffer<pos:position pos:line="781" pos:column="36"/></name><argument_list pos:line="781" pos:column="36">(<argument><expr><name pos:line="781" pos:column="37">req_buffer<pos:position pos:line="781" pos:column="47"/></name></expr></argument>,
                                    <argument><expr><literal type="string" pos:line="782" pos:column="37">"\x0d\x0a\x30\x0d\x0a\x0d\x0a"<pos:position pos:line="782" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="782" pos:column="69">7<pos:position pos:line="782" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="782" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="782" pos:column="72"/></expr_stmt></block></then></if>
              <comment type="block" pos:line="783" pos:column="15">/* CR  LF   0  CR  LF  CR  LF */</comment>
              <expr_stmt><expr><name pos:line="784" pos:column="15">included_body<pos:position pos:line="784" pos:column="28"/></name> <operator pos:line="784" pos:column="29">=<pos:position pos:line="784" pos:column="30"/></operator> <name pos:line="784" pos:column="31">postsize<pos:position pos:line="784" pos:column="39"/></name> <operator pos:line="784" pos:column="40">+<pos:position pos:line="784" pos:column="41"/></operator> <literal type="number" pos:line="784" pos:column="42">7<pos:position pos:line="784" pos:column="43"/></literal></expr>;<pos:position pos:line="784" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="785" pos:column="14"/></block></else></if>
            <if pos:line="786" pos:column="13">if<condition pos:line="786" pos:column="15">(<expr><name pos:line="786" pos:column="16">result<pos:position pos:line="786" pos:column="22"/></name></expr>)<pos:position pos:line="786" pos:column="23"/></condition><then pos:line="786" pos:column="23">
              <block type="pseudo"><return pos:line="787" pos:column="15">return <expr><name pos:line="787" pos:column="22">result<pos:position pos:line="787" pos:column="28"/></name></expr>;<pos:position pos:line="787" pos:column="29"/></return></block></then></if>
          }<pos:position pos:line="788" pos:column="12"/></block></then>
          <else pos:line="789" pos:column="11">else <block pos:line="789" pos:column="16">{
            <comment type="block" pos:line="790" pos:column="13">/* A huge POST coming up, do data separate from the request */</comment>
            <expr_stmt><expr><name><name pos:line="791" pos:column="13">http<pos:position pos:line="791" pos:column="17"/></name><operator pos:line="791" pos:column="17">-&gt;<pos:position pos:line="791" pos:column="22"/></operator><name pos:line="791" pos:column="19">postsize<pos:position pos:line="791" pos:column="27"/></name></name> <operator pos:line="791" pos:column="28">=<pos:position pos:line="791" pos:column="29"/></operator> <name pos:line="791" pos:column="30">postsize<pos:position pos:line="791" pos:column="38"/></name></expr>;<pos:position pos:line="791" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="792" pos:column="13">http<pos:position pos:line="792" pos:column="17"/></name><operator pos:line="792" pos:column="17">-&gt;<pos:position pos:line="792" pos:column="22"/></operator><name pos:line="792" pos:column="19">postdata<pos:position pos:line="792" pos:column="27"/></name></name> <operator pos:line="792" pos:column="28">=<pos:position pos:line="792" pos:column="29"/></operator> <name><name pos:line="792" pos:column="30">data<pos:position pos:line="792" pos:column="34"/></name><operator pos:line="792" pos:column="34">-&gt;<pos:position pos:line="792" pos:column="39"/></operator><name pos:line="792" pos:column="36">set<pos:position pos:line="792" pos:column="39"/></name><operator pos:line="792" pos:column="39">.<pos:position pos:line="792" pos:column="40"/></operator><name pos:line="792" pos:column="40">postfields<pos:position pos:line="792" pos:column="50"/></name></name></expr>;<pos:position pos:line="792" pos:column="51"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="794" pos:column="13">http<pos:position pos:line="794" pos:column="17"/></name><operator pos:line="794" pos:column="17">-&gt;<pos:position pos:line="794" pos:column="22"/></operator><name pos:line="794" pos:column="19">sending<pos:position pos:line="794" pos:column="26"/></name></name> <operator pos:line="794" pos:column="27">=<pos:position pos:line="794" pos:column="28"/></operator> <name pos:line="794" pos:column="29">HTTPSEND_BODY<pos:position pos:line="794" pos:column="42"/></name></expr>;<pos:position pos:line="794" pos:column="43"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="796" pos:column="13">conn<pos:position pos:line="796" pos:column="17"/></name><operator pos:line="796" pos:column="17">-&gt;<pos:position pos:line="796" pos:column="22"/></operator><name pos:line="796" pos:column="19">fread_func<pos:position pos:line="796" pos:column="29"/></name></name> <operator pos:line="796" pos:column="30">=<pos:position pos:line="796" pos:column="31"/></operator> <operator pos:line="796" pos:column="32">(<pos:position pos:line="796" pos:column="33"/></operator><name pos:line="796" pos:column="33">curl_read_callback<pos:position pos:line="796" pos:column="51"/></name><operator pos:line="796" pos:column="51">)<pos:position pos:line="796" pos:column="52"/></operator><name pos:line="796" pos:column="52">readmoredata<pos:position pos:line="796" pos:column="64"/></name></expr>;<pos:position pos:line="796" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="797" pos:column="13">conn<pos:position pos:line="797" pos:column="17"/></name><operator pos:line="797" pos:column="17">-&gt;<pos:position pos:line="797" pos:column="22"/></operator><name pos:line="797" pos:column="19">fread_in<pos:position pos:line="797" pos:column="27"/></name></name> <operator pos:line="797" pos:column="28">=<pos:position pos:line="797" pos:column="29"/></operator> <operator pos:line="797" pos:column="30">(<pos:position pos:line="797" pos:column="31"/></operator><name pos:line="797" pos:column="31">void<pos:position pos:line="797" pos:column="35"/></name> <operator pos:line="797" pos:column="36">*<pos:position pos:line="797" pos:column="37"/></operator><operator pos:line="797" pos:column="37">)<pos:position pos:line="797" pos:column="38"/></operator><name pos:line="797" pos:column="38">conn<pos:position pos:line="797" pos:column="42"/></name></expr>;<pos:position pos:line="797" pos:column="43"/></expr_stmt>

            <comment type="block" pos:line="799" pos:column="13">/* set the upload size to the progress meter */</comment>
            <expr_stmt><expr><call><name pos:line="800" pos:column="13">Curl_pgrsSetUploadSize<pos:position pos:line="800" pos:column="35"/></name><argument_list pos:line="800" pos:column="35">(<argument><expr><name pos:line="800" pos:column="36">data<pos:position pos:line="800" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="800" pos:column="42">http<pos:position pos:line="800" pos:column="46"/></name><operator pos:line="800" pos:column="46">-&gt;<pos:position pos:line="800" pos:column="51"/></operator><name pos:line="800" pos:column="48">postsize<pos:position pos:line="800" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="800" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="800" pos:column="58"/></expr_stmt>

            <expr_stmt><expr><name pos:line="802" pos:column="13">result<pos:position pos:line="802" pos:column="19"/></name> <operator pos:line="802" pos:column="20">=<pos:position pos:line="802" pos:column="21"/></operator> <call><name pos:line="802" pos:column="22">add_buffer<pos:position pos:line="802" pos:column="32"/></name><argument_list pos:line="802" pos:column="32">(<argument><expr><name pos:line="802" pos:column="33">req_buffer<pos:position pos:line="802" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="802" pos:column="45">"\r\n"<pos:position pos:line="802" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="802" pos:column="53">2<pos:position pos:line="802" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="802" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="802" pos:column="56"/></expr_stmt> <comment type="block" pos:line="802" pos:column="57">/* end of headers! */</comment>
            <if pos:line="803" pos:column="13">if<condition pos:line="803" pos:column="15">(<expr><name pos:line="803" pos:column="16">result<pos:position pos:line="803" pos:column="22"/></name></expr>)<pos:position pos:line="803" pos:column="23"/></condition><then pos:line="803" pos:column="23">
              <block type="pseudo"><return pos:line="804" pos:column="15">return <expr><name pos:line="804" pos:column="22">result<pos:position pos:line="804" pos:column="28"/></name></expr>;<pos:position pos:line="804" pos:column="29"/></return></block></then></if>
          }<pos:position pos:line="805" pos:column="12"/></block></else></if>
        }<pos:position pos:line="806" pos:column="10"/></block></then>
        <else pos:line="807" pos:column="9">else <block pos:line="807" pos:column="14">{
          <expr_stmt><expr><name pos:line="808" pos:column="11">result<pos:position pos:line="808" pos:column="17"/></name> <operator pos:line="808" pos:column="18">=<pos:position pos:line="808" pos:column="19"/></operator> <call><name pos:line="808" pos:column="20">add_buffer<pos:position pos:line="808" pos:column="30"/></name><argument_list pos:line="808" pos:column="30">(<argument><expr><name pos:line="808" pos:column="31">req_buffer<pos:position pos:line="808" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="808" pos:column="43">"\r\n"<pos:position pos:line="808" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="808" pos:column="51">2<pos:position pos:line="808" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="808" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="808" pos:column="54"/></expr_stmt> <comment type="block" pos:line="808" pos:column="55">/* end of headers! */</comment>
          <if pos:line="809" pos:column="11">if<condition pos:line="809" pos:column="13">(<expr><name pos:line="809" pos:column="14">result<pos:position pos:line="809" pos:column="20"/></name></expr>)<pos:position pos:line="809" pos:column="21"/></condition><then pos:line="809" pos:column="21">
            <block type="pseudo"><return pos:line="810" pos:column="13">return <expr><name pos:line="810" pos:column="20">result<pos:position pos:line="810" pos:column="26"/></name></expr>;<pos:position pos:line="810" pos:column="27"/></return></block></then></if>

          <if pos:line="812" pos:column="11">if<condition pos:line="812" pos:column="13">(<expr><name><name pos:line="812" pos:column="14">data<pos:position pos:line="812" pos:column="18"/></name><operator pos:line="812" pos:column="18">-&gt;<pos:position pos:line="812" pos:column="23"/></operator><name pos:line="812" pos:column="20">set<pos:position pos:line="812" pos:column="23"/></name><operator pos:line="812" pos:column="23">.<pos:position pos:line="812" pos:column="24"/></operator><name pos:line="812" pos:column="24">postfieldsize<pos:position pos:line="812" pos:column="37"/></name></name></expr>)<pos:position pos:line="812" pos:column="38"/></condition><then pos:line="812" pos:column="38"> <block pos:line="812" pos:column="39">{
            <comment type="block" pos:line="813" pos:column="13">/* set the upload size to the progress meter */</comment>
            <expr_stmt><expr><call><name pos:line="814" pos:column="13">Curl_pgrsSetUploadSize<pos:position pos:line="814" pos:column="35"/></name><argument_list pos:line="814" pos:column="35">(<argument><expr><name pos:line="814" pos:column="36">data<pos:position pos:line="814" pos:column="40"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="814" pos:column="42">postsize<pos:position pos:line="814" pos:column="50"/></name></expr>?<pos:position pos:line="814" pos:column="51"/></condition><then><expr><name pos:line="814" pos:column="51">postsize<pos:position pos:line="814" pos:column="59"/></name></expr></then><else pos:line="814" pos:column="59">:<expr><operator pos:line="814" pos:column="60">-<pos:position pos:line="814" pos:column="61"/></operator><literal type="number" pos:line="814" pos:column="61">1<pos:position pos:line="814" pos:column="62"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="814" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="814" pos:column="64"/></expr_stmt>

            <comment type="block" pos:line="816" pos:column="13">/* set the pointer to mark that we will send the post body using the
               read callback, but only if we're not in authenticate
               negotiation  */</comment>
            <if pos:line="819" pos:column="13">if<condition pos:line="819" pos:column="15">(<expr><operator pos:line="819" pos:column="16">!<pos:position pos:line="819" pos:column="17"/></operator><name><name pos:line="819" pos:column="17">conn<pos:position pos:line="819" pos:column="21"/></name><operator pos:line="819" pos:column="21">-&gt;<pos:position pos:line="819" pos:column="26"/></operator><name pos:line="819" pos:column="23">bits<pos:position pos:line="819" pos:column="27"/></name><operator pos:line="819" pos:column="27">.<pos:position pos:line="819" pos:column="28"/></operator><name pos:line="819" pos:column="28">authneg<pos:position pos:line="819" pos:column="35"/></name></name></expr>)<pos:position pos:line="819" pos:column="36"/></condition><then pos:line="819" pos:column="36"> <block pos:line="819" pos:column="37">{
              <expr_stmt><expr><name><name pos:line="820" pos:column="15">http<pos:position pos:line="820" pos:column="19"/></name><operator pos:line="820" pos:column="19">-&gt;<pos:position pos:line="820" pos:column="24"/></operator><name pos:line="820" pos:column="21">postdata<pos:position pos:line="820" pos:column="29"/></name></name> <operator pos:line="820" pos:column="30">=<pos:position pos:line="820" pos:column="31"/></operator> <operator pos:line="820" pos:column="32">(<pos:position pos:line="820" pos:column="33"/></operator><name pos:line="820" pos:column="33">char<pos:position pos:line="820" pos:column="37"/></name> <operator pos:line="820" pos:column="38">*<pos:position pos:line="820" pos:column="39"/></operator><operator pos:line="820" pos:column="39">)<pos:position pos:line="820" pos:column="40"/></operator><operator pos:line="820" pos:column="40">&amp;<pos:position pos:line="820" pos:column="45"/></operator><name><name pos:line="820" pos:column="41">http<pos:position pos:line="820" pos:column="45"/></name><operator pos:line="820" pos:column="45">-&gt;<pos:position pos:line="820" pos:column="50"/></operator><name pos:line="820" pos:column="47">postdata<pos:position pos:line="820" pos:column="55"/></name></name></expr>;<pos:position pos:line="820" pos:column="56"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="821" pos:column="15">http<pos:position pos:line="821" pos:column="19"/></name><operator pos:line="821" pos:column="19">-&gt;<pos:position pos:line="821" pos:column="24"/></operator><name pos:line="821" pos:column="21">postsize<pos:position pos:line="821" pos:column="29"/></name></name> <operator pos:line="821" pos:column="30">=<pos:position pos:line="821" pos:column="31"/></operator> <name pos:line="821" pos:column="32">postsize<pos:position pos:line="821" pos:column="40"/></name></expr>;<pos:position pos:line="821" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="822" pos:column="14"/></block></then></if>
          }<pos:position pos:line="823" pos:column="12"/></block></then></if>
        }<pos:position pos:line="824" pos:column="10"/></block></else></if>
        <comment type="block" pos:line="825" pos:column="9">/* issue the request */</comment>
        <expr_stmt><expr><name pos:line="826" pos:column="9">result<pos:position pos:line="826" pos:column="15"/></name> <operator pos:line="826" pos:column="16">=<pos:position pos:line="826" pos:column="17"/></operator> <call><name pos:line="826" pos:column="18">add_buffer_send<pos:position pos:line="826" pos:column="33"/></name><argument_list pos:line="826" pos:column="33">(<argument><expr><name pos:line="826" pos:column="34">req_buffer<pos:position pos:line="826" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="826" pos:column="46">conn<pos:position pos:line="826" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="826" pos:column="52">&amp;<pos:position pos:line="826" pos:column="57"/></operator><name><name pos:line="826" pos:column="53">data<pos:position pos:line="826" pos:column="57"/></name><operator pos:line="826" pos:column="57">-&gt;<pos:position pos:line="826" pos:column="62"/></operator><name pos:line="826" pos:column="59">info<pos:position pos:line="826" pos:column="63"/></name><operator pos:line="826" pos:column="63">.<pos:position pos:line="826" pos:column="64"/></operator><name pos:line="826" pos:column="64">request_size<pos:position pos:line="826" pos:column="76"/></name></name></expr></argument>,
                                 <argument><expr><operator pos:line="827" pos:column="34">(<pos:position pos:line="827" pos:column="35"/></operator><name pos:line="827" pos:column="35">size_t<pos:position pos:line="827" pos:column="41"/></name><operator pos:line="827" pos:column="41">)<pos:position pos:line="827" pos:column="42"/></operator><name pos:line="827" pos:column="42">included_body<pos:position pos:line="827" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="827" pos:column="57">FIRSTSOCKET<pos:position pos:line="827" pos:column="68"/></name></expr></argument>)<pos:position pos:line="827" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="827" pos:column="70"/></expr_stmt>

        <if pos:line="829" pos:column="9">if<condition pos:line="829" pos:column="11">(<expr><name pos:line="829" pos:column="12">result<pos:position pos:line="829" pos:column="18"/></name></expr>)<pos:position pos:line="829" pos:column="19"/></condition><then pos:line="829" pos:column="19">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="830" pos:column="11">failf<pos:position pos:line="830" pos:column="16"/></name><argument_list pos:line="830" pos:column="16">(<argument><expr><name pos:line="830" pos:column="17">data<pos:position pos:line="830" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="830" pos:column="23">"Failed sending HTTP POST request"<pos:position pos:line="830" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="830" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="830" pos:column="59"/></expr_stmt></block></then>
        <else pos:line="831" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name pos:line="832" pos:column="11">result<pos:position pos:line="832" pos:column="17"/></name> <operator pos:line="832" pos:column="18">=<pos:position pos:line="832" pos:column="19"/></operator>
            <call><name pos:line="833" pos:column="13">Curl_setup_transfer<pos:position pos:line="833" pos:column="32"/></name><argument_list pos:line="833" pos:column="32">(<argument><expr><name pos:line="833" pos:column="33">conn<pos:position pos:line="833" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="833" pos:column="39">FIRSTSOCKET<pos:position pos:line="833" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="833" pos:column="52">-<pos:position pos:line="833" pos:column="53"/></operator><literal type="number" pos:line="833" pos:column="53">1<pos:position pos:line="833" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="833" pos:column="56">TRUE<pos:position pos:line="833" pos:column="60"/></name></expr></argument>,
                                <argument><expr><operator pos:line="834" pos:column="33">&amp;<pos:position pos:line="834" pos:column="38"/></operator><name><name pos:line="834" pos:column="34">http<pos:position pos:line="834" pos:column="38"/></name><operator pos:line="834" pos:column="38">-&gt;<pos:position pos:line="834" pos:column="43"/></operator><name pos:line="834" pos:column="40">readbytecount<pos:position pos:line="834" pos:column="53"/></name></name></expr></argument>,
                                <argument><expr><ternary><condition><expr><name><name pos:line="835" pos:column="33">http<pos:position pos:line="835" pos:column="37"/></name><operator pos:line="835" pos:column="37">-&gt;<pos:position pos:line="835" pos:column="42"/></operator><name pos:line="835" pos:column="39">postdata<pos:position pos:line="835" pos:column="47"/></name></name></expr>?<pos:position pos:line="835" pos:column="48"/></condition><then><expr><name pos:line="835" pos:column="48">FIRSTSOCKET<pos:position pos:line="835" pos:column="59"/></name></expr></then><else pos:line="835" pos:column="59">:<expr><operator pos:line="835" pos:column="60">-<pos:position pos:line="835" pos:column="61"/></operator><literal type="number" pos:line="835" pos:column="61">1<pos:position pos:line="835" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
                                <argument><expr><ternary><condition><expr><name><name pos:line="836" pos:column="33">http<pos:position pos:line="836" pos:column="37"/></name><operator pos:line="836" pos:column="37">-&gt;<pos:position pos:line="836" pos:column="42"/></operator><name pos:line="836" pos:column="39">postdata<pos:position pos:line="836" pos:column="47"/></name></name></expr>?<pos:position pos:line="836" pos:column="48"/></condition><then><expr><operator pos:line="836" pos:column="48">&amp;<pos:position pos:line="836" pos:column="53"/></operator><name><name pos:line="836" pos:column="49">http<pos:position pos:line="836" pos:column="53"/></name><operator pos:line="836" pos:column="53">-&gt;<pos:position pos:line="836" pos:column="58"/></operator><name pos:line="836" pos:column="55">writebytecount<pos:position pos:line="836" pos:column="69"/></name></name></expr></then><else pos:line="836" pos:column="69">:<expr><name pos:line="836" pos:column="70">NULL<pos:position pos:line="836" pos:column="74"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="836" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="836" pos:column="76"/></expr_stmt></block></else></if>
        <break pos:line="837" pos:column="9">break;<pos:position pos:line="837" pos:column="15"/></break>

  <default pos:line="839" pos:column="3">default:<pos:position pos:line="839" pos:column="11"/></default>
    <expr_stmt><expr><name pos:line="840" pos:column="5">result<pos:position pos:line="840" pos:column="11"/></name> <operator pos:line="840" pos:column="12">=<pos:position pos:line="840" pos:column="13"/></operator> <call><name pos:line="840" pos:column="14">add_buffer<pos:position pos:line="840" pos:column="24"/></name><argument_list pos:line="840" pos:column="24">(<argument><expr><name pos:line="840" pos:column="25">req_buffer<pos:position pos:line="840" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="840" pos:column="37">"\r\n"<pos:position pos:line="840" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="840" pos:column="45">2<pos:position pos:line="840" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="840" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="840" pos:column="48"/></expr_stmt>
    <if pos:line="841" pos:column="5">if<condition pos:line="841" pos:column="7">(<expr><name pos:line="841" pos:column="8">result<pos:position pos:line="841" pos:column="14"/></name></expr>)<pos:position pos:line="841" pos:column="15"/></condition><then pos:line="841" pos:column="15">
      <block type="pseudo"><return pos:line="842" pos:column="7">return <expr><name pos:line="842" pos:column="14">result<pos:position pos:line="842" pos:column="20"/></name></expr>;<pos:position pos:line="842" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="844" pos:column="5">/* issue the request */</comment>
    <expr_stmt><expr><name pos:line="845" pos:column="5">result<pos:position pos:line="845" pos:column="11"/></name> <operator pos:line="845" pos:column="12">=<pos:position pos:line="845" pos:column="13"/></operator> <call><name pos:line="845" pos:column="14">add_buffer_send<pos:position pos:line="845" pos:column="29"/></name><argument_list pos:line="845" pos:column="29">(<argument><expr><name pos:line="845" pos:column="30">req_buffer<pos:position pos:line="845" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="845" pos:column="42">conn<pos:position pos:line="845" pos:column="46"/></name></expr></argument>,
                             <argument><expr><operator pos:line="846" pos:column="30">&amp;<pos:position pos:line="846" pos:column="35"/></operator><name><name pos:line="846" pos:column="31">data<pos:position pos:line="846" pos:column="35"/></name><operator pos:line="846" pos:column="35">-&gt;<pos:position pos:line="846" pos:column="40"/></operator><name pos:line="846" pos:column="37">info<pos:position pos:line="846" pos:column="41"/></name><operator pos:line="846" pos:column="41">.<pos:position pos:line="846" pos:column="42"/></operator><name pos:line="846" pos:column="42">request_size<pos:position pos:line="846" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="846" pos:column="56">0<pos:position pos:line="846" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="846" pos:column="59">FIRSTSOCKET<pos:position pos:line="846" pos:column="70"/></name></expr></argument>)<pos:position pos:line="846" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="846" pos:column="72"/></expr_stmt>

    <if pos:line="848" pos:column="5">if<condition pos:line="848" pos:column="7">(<expr><name pos:line="848" pos:column="8">result<pos:position pos:line="848" pos:column="14"/></name></expr>)<pos:position pos:line="848" pos:column="15"/></condition><then pos:line="848" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="849" pos:column="7">failf<pos:position pos:line="849" pos:column="12"/></name><argument_list pos:line="849" pos:column="12">(<argument><expr><name pos:line="849" pos:column="13">data<pos:position pos:line="849" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="849" pos:column="19">"Failed sending HTTP request"<pos:position pos:line="849" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="849" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="849" pos:column="50"/></expr_stmt></block></then>
    <else pos:line="850" pos:column="5">else
      <comment type="block" pos:line="851" pos:column="7">/* HTTP GET/HEAD download: */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="852" pos:column="7">result<pos:position pos:line="852" pos:column="13"/></name> <operator pos:line="852" pos:column="14">=<pos:position pos:line="852" pos:column="15"/></operator> <call><name pos:line="852" pos:column="16">Curl_setup_transfer<pos:position pos:line="852" pos:column="35"/></name><argument_list pos:line="852" pos:column="35">(<argument><expr><name pos:line="852" pos:column="36">conn<pos:position pos:line="852" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="852" pos:column="42">FIRSTSOCKET<pos:position pos:line="852" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="852" pos:column="55">-<pos:position pos:line="852" pos:column="56"/></operator><literal type="number" pos:line="852" pos:column="56">1<pos:position pos:line="852" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="852" pos:column="59">TRUE<pos:position pos:line="852" pos:column="63"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="853" pos:column="36">&amp;<pos:position pos:line="853" pos:column="41"/></operator><name><name pos:line="853" pos:column="37">http<pos:position pos:line="853" pos:column="41"/></name><operator pos:line="853" pos:column="41">-&gt;<pos:position pos:line="853" pos:column="46"/></operator><name pos:line="853" pos:column="43">readbytecount<pos:position pos:line="853" pos:column="56"/></name></name></expr></argument>,
                                   <argument><expr><ternary><condition><expr><name><name pos:line="854" pos:column="36">http<pos:position pos:line="854" pos:column="40"/></name><operator pos:line="854" pos:column="40">-&gt;<pos:position pos:line="854" pos:column="45"/></operator><name pos:line="854" pos:column="42">postdata<pos:position pos:line="854" pos:column="50"/></name></name></expr>?<pos:position pos:line="854" pos:column="51"/></condition><then><expr><name pos:line="854" pos:column="51">FIRSTSOCKET<pos:position pos:line="854" pos:column="62"/></name></expr></then><else pos:line="854" pos:column="62">:<expr><operator pos:line="854" pos:column="63">-<pos:position pos:line="854" pos:column="64"/></operator><literal type="number" pos:line="854" pos:column="64">1<pos:position pos:line="854" pos:column="65"/></literal></expr></else></ternary></expr></argument>,
                                   <argument><expr><ternary><condition><expr><name><name pos:line="855" pos:column="36">http<pos:position pos:line="855" pos:column="40"/></name><operator pos:line="855" pos:column="40">-&gt;<pos:position pos:line="855" pos:column="45"/></operator><name pos:line="855" pos:column="42">postdata<pos:position pos:line="855" pos:column="50"/></name></name></expr>?<pos:position pos:line="855" pos:column="51"/></condition><then><expr><operator pos:line="855" pos:column="51">&amp;<pos:position pos:line="855" pos:column="56"/></operator><name><name pos:line="855" pos:column="52">http<pos:position pos:line="855" pos:column="56"/></name><operator pos:line="855" pos:column="56">-&gt;<pos:position pos:line="855" pos:column="61"/></operator><name pos:line="855" pos:column="58">writebytecount<pos:position pos:line="855" pos:column="72"/></name></name></expr></then><else pos:line="855" pos:column="72">:<expr><name pos:line="855" pos:column="73">NULL<pos:position pos:line="855" pos:column="77"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="855" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="855" pos:column="79"/></expr_stmt></block></else></if>
  }<pos:position pos:line="856" pos:column="4"/></block></switch>
  <if pos:line="857" pos:column="3">if<condition pos:line="857" pos:column="5">(<expr><name pos:line="857" pos:column="6">result<pos:position pos:line="857" pos:column="12"/></name></expr>)<pos:position pos:line="857" pos:column="13"/></condition><then pos:line="857" pos:column="13">
    <block type="pseudo"><return pos:line="858" pos:column="5">return <expr><name pos:line="858" pos:column="12">result<pos:position pos:line="858" pos:column="18"/></name></expr>;<pos:position pos:line="858" pos:column="19"/></return></block></then></if>

  <if pos:line="860" pos:column="3">if<condition pos:line="860" pos:column="5">(<expr><name><name pos:line="860" pos:column="6">http<pos:position pos:line="860" pos:column="10"/></name><operator pos:line="860" pos:column="10">-&gt;<pos:position pos:line="860" pos:column="15"/></operator><name pos:line="860" pos:column="12">writebytecount<pos:position pos:line="860" pos:column="26"/></name></name></expr>)<pos:position pos:line="860" pos:column="27"/></condition><then pos:line="860" pos:column="27"> <block pos:line="860" pos:column="28">{
    <comment type="block" pos:line="861" pos:column="5">/* if a request-body has been sent off, we make sure this progress is noted
       properly */</comment>
    <expr_stmt><expr><call><name pos:line="863" pos:column="5">Curl_pgrsSetUploadCounter<pos:position pos:line="863" pos:column="30"/></name><argument_list pos:line="863" pos:column="30">(<argument><expr><name pos:line="863" pos:column="31">data<pos:position pos:line="863" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="863" pos:column="37">http<pos:position pos:line="863" pos:column="41"/></name><operator pos:line="863" pos:column="41">-&gt;<pos:position pos:line="863" pos:column="46"/></operator><name pos:line="863" pos:column="43">writebytecount<pos:position pos:line="863" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="863" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="863" pos:column="59"/></expr_stmt>
    <if pos:line="864" pos:column="5">if<condition pos:line="864" pos:column="7">(<expr><call><name pos:line="864" pos:column="8">Curl_pgrsUpdate<pos:position pos:line="864" pos:column="23"/></name><argument_list pos:line="864" pos:column="23">(<argument><expr><name pos:line="864" pos:column="24">conn<pos:position pos:line="864" pos:column="28"/></name></expr></argument>)<pos:position pos:line="864" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="864" pos:column="30"/></condition><then pos:line="864" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="865" pos:column="7">result<pos:position pos:line="865" pos:column="13"/></name> <operator pos:line="865" pos:column="14">=<pos:position pos:line="865" pos:column="15"/></operator> <name pos:line="865" pos:column="16">CURLE_ABORTED_BY_CALLBACK<pos:position pos:line="865" pos:column="41"/></name></expr>;<pos:position pos:line="865" pos:column="42"/></expr_stmt></block></then></if>
  }<pos:position pos:line="866" pos:column="4"/></block></then></if>

  <return pos:line="868" pos:column="3">return <expr><name pos:line="868" pos:column="10">result<pos:position pos:line="868" pos:column="16"/></name></expr>;<pos:position pos:line="868" pos:column="17"/></return>
}<pos:position pos:line="869" pos:column="2"/></block></function></unit>

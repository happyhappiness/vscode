<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_878_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_state_pasv_resp<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">connectdata<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">conn<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">ftpcode<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">ftp_conn<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">ftpc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><operator pos:line="4" pos:column="27">&amp;<pos:position pos:line="4" pos:column="32"/></operator><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">proto<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">.<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">ftpc<pos:position pos:line="4" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">SessionHandle<pos:position pos:line="6" pos:column="23"/></name></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">data<pos:position pos:line="6" pos:column="29"/></name><init pos:line="6" pos:column="29">=<expr><name><name pos:line="6" pos:column="30">conn<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">data<pos:position pos:line="6" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">Curl_addrinfo<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">conninfo<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">Curl_dns_entry<pos:position pos:line="8" pos:column="24"/></name></name> <modifier pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></modifier></type><name pos:line="8" pos:column="26">addr<pos:position pos:line="8" pos:column="30"/></name><init pos:line="8" pos:column="30">=<expr><name pos:line="8" pos:column="31">NULL<pos:position pos:line="8" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">rc<pos:position pos:line="9" pos:column="9"/></name></decl>;<pos:position pos:line="9" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">unsigned<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">short<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">connectport<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt> <comment type="block" pos:line="10" pos:column="31">/* the local port connect() should use! */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">unsigned<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">short<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">newport<pos:position pos:line="11" pos:column="25"/></name><init pos:line="11" pos:column="25">=<expr><literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt> <comment type="block" pos:line="11" pos:column="29">/* remote port */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">bool<pos:position pos:line="12" pos:column="7"/></name></type> <name pos:line="12" pos:column="8">connected<pos:position pos:line="12" pos:column="17"/></name></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* newhost must be able to hold a full IP-style address in ASCII, which
     in the IPv6 case means 5*8-1 = 39 letters */</comment>
<cpp:define pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">define<pos:position pos:line="16" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="16" pos:column="9">NEWHOST_BUFSIZE<pos:position pos:line="16" pos:column="24"/></name></cpp:macro> <cpp:value pos:line="16" pos:column="25">48<pos:position pos:line="16" pos:column="27"/></cpp:value></cpp:define>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name></type> <name><name pos:line="17" pos:column="8">newhost<pos:position pos:line="17" pos:column="15"/></name><index pos:line="17" pos:column="15">[<expr><name pos:line="17" pos:column="16">NEWHOST_BUFSIZE<pos:position pos:line="17" pos:column="31"/></name></expr>]<pos:position pos:line="17" pos:column="32"/></index></name></decl>;<pos:position pos:line="17" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">char<pos:position pos:line="18" pos:column="7"/></name> <modifier pos:line="18" pos:column="8">*<pos:position pos:line="18" pos:column="9"/></modifier></type><name pos:line="18" pos:column="9">str<pos:position pos:line="18" pos:column="12"/></name><init pos:line="18" pos:column="12">=<expr><operator pos:line="18" pos:column="13">&amp;<pos:position pos:line="18" pos:column="18"/></operator><name><name pos:line="18" pos:column="14">data<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">state<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">.<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">buffer<pos:position pos:line="18" pos:column="32"/></name><index pos:line="18" pos:column="32">[<expr><literal type="number" pos:line="18" pos:column="33">4<pos:position pos:line="18" pos:column="34"/></literal></expr>]<pos:position pos:line="18" pos:column="35"/></index></name></expr></init></decl>;<pos:position pos:line="18" pos:column="36"/></decl_stmt>  <comment type="block" pos:line="18" pos:column="38">/* start on the first letter */</comment>

  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><operator pos:line="20" pos:column="6">(<pos:position pos:line="20" pos:column="7"/></operator><name><name pos:line="20" pos:column="7">ftpc<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">count1<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">==<pos:position pos:line="20" pos:column="22"/></operator> <literal type="number" pos:line="20" pos:column="23">0<pos:position pos:line="20" pos:column="24"/></literal><operator pos:line="20" pos:column="24">)<pos:position pos:line="20" pos:column="25"/></operator> <operator pos:line="20" pos:column="26">&amp;&amp;<pos:position pos:line="20" pos:column="36"/></operator>
     <operator pos:line="21" pos:column="6">(<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">ftpcode<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">==<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">229<pos:position pos:line="21" pos:column="21"/></literal><operator pos:line="21" pos:column="21">)<pos:position pos:line="21" pos:column="22"/></operator></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23"> <block pos:line="21" pos:column="24">{
    <comment type="block" pos:line="22" pos:column="5">/* positive EPSV response */</comment>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">char<pos:position pos:line="23" pos:column="9"/></name> <modifier pos:line="23" pos:column="10">*<pos:position pos:line="23" pos:column="11"/></modifier></type><name pos:line="23" pos:column="11">ptr<pos:position pos:line="23" pos:column="14"/></name> <init pos:line="23" pos:column="15">= <expr><call><name pos:line="23" pos:column="17">strchr<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">str<pos:position pos:line="23" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="29">'('<pos:position pos:line="23" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="34"/></decl_stmt>
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><name pos:line="24" pos:column="8">ptr<pos:position pos:line="24" pos:column="11"/></name></expr>)<pos:position pos:line="24" pos:column="12"/></condition><then pos:line="24" pos:column="12"> <block pos:line="24" pos:column="13">{
      <decl_stmt><decl><type><name pos:line="25" pos:column="7">unsigned<pos:position pos:line="25" pos:column="15"/></name> <name pos:line="25" pos:column="16">int<pos:position pos:line="25" pos:column="19"/></name></type> <name pos:line="25" pos:column="20">num<pos:position pos:line="25" pos:column="23"/></name></decl>;<pos:position pos:line="25" pos:column="24"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="26" pos:column="7">char<pos:position pos:line="26" pos:column="11"/></name></type> <name><name pos:line="26" pos:column="12">separator<pos:position pos:line="26" pos:column="21"/></name><index pos:line="26" pos:column="21">[<expr><literal type="number" pos:line="26" pos:column="22">4<pos:position pos:line="26" pos:column="23"/></literal></expr>]<pos:position pos:line="26" pos:column="24"/></index></name></decl>;<pos:position pos:line="26" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">ptr<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">++<pos:position pos:line="27" pos:column="12"/></operator></expr>;<pos:position pos:line="27" pos:column="13"/></expr_stmt>
      <if pos:line="28" pos:column="7">if<condition pos:line="28" pos:column="9">(<expr><literal type="number" pos:line="28" pos:column="10">5<pos:position pos:line="28" pos:column="11"/></literal>  <operator pos:line="28" pos:column="13">==<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">sscanf<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">ptr<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="28">"%c%c%c%u%c"<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>,
                      <argument><expr><operator pos:line="29" pos:column="23">&amp;<pos:position pos:line="29" pos:column="28"/></operator><name><name pos:line="29" pos:column="24">separator<pos:position pos:line="29" pos:column="33"/></name><index pos:line="29" pos:column="33">[<expr><literal type="number" pos:line="29" pos:column="34">0<pos:position pos:line="29" pos:column="35"/></literal></expr>]<pos:position pos:line="29" pos:column="36"/></index></name></expr></argument>,
                      <argument><expr><operator pos:line="30" pos:column="23">&amp;<pos:position pos:line="30" pos:column="28"/></operator><name><name pos:line="30" pos:column="24">separator<pos:position pos:line="30" pos:column="33"/></name><index pos:line="30" pos:column="33">[<expr><literal type="number" pos:line="30" pos:column="34">1<pos:position pos:line="30" pos:column="35"/></literal></expr>]<pos:position pos:line="30" pos:column="36"/></index></name></expr></argument>,
                      <argument><expr><operator pos:line="31" pos:column="23">&amp;<pos:position pos:line="31" pos:column="28"/></operator><name><name pos:line="31" pos:column="24">separator<pos:position pos:line="31" pos:column="33"/></name><index pos:line="31" pos:column="33">[<expr><literal type="number" pos:line="31" pos:column="34">2<pos:position pos:line="31" pos:column="35"/></literal></expr>]<pos:position pos:line="31" pos:column="36"/></index></name></expr></argument>,
                      <argument><expr><operator pos:line="32" pos:column="23">&amp;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="24">num<pos:position pos:line="32" pos:column="27"/></name></expr></argument>,
                      <argument><expr><operator pos:line="33" pos:column="23">&amp;<pos:position pos:line="33" pos:column="28"/></operator><name><name pos:line="33" pos:column="24">separator<pos:position pos:line="33" pos:column="33"/></name><index pos:line="33" pos:column="33">[<expr><literal type="number" pos:line="33" pos:column="34">3<pos:position pos:line="33" pos:column="35"/></literal></expr>]<pos:position pos:line="33" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="38"/></condition><then pos:line="33" pos:column="38"> <block pos:line="33" pos:column="39">{
        <decl_stmt><decl><type><specifier pos:line="34" pos:column="9">const<pos:position pos:line="34" pos:column="14"/></specifier> <name pos:line="34" pos:column="15">char<pos:position pos:line="34" pos:column="19"/></name></type> <name pos:line="34" pos:column="20">sep1<pos:position pos:line="34" pos:column="24"/></name> <init pos:line="34" pos:column="25">= <expr><name><name pos:line="34" pos:column="27">separator<pos:position pos:line="34" pos:column="36"/></name><index pos:line="34" pos:column="36">[<expr><literal type="number" pos:line="34" pos:column="37">0<pos:position pos:line="34" pos:column="38"/></literal></expr>]<pos:position pos:line="34" pos:column="39"/></index></name></expr></init></decl>;<pos:position pos:line="34" pos:column="40"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="35" pos:column="9">int<pos:position pos:line="35" pos:column="12"/></name></type> <name pos:line="35" pos:column="13">i<pos:position pos:line="35" pos:column="14"/></name></decl>;<pos:position pos:line="35" pos:column="15"/></decl_stmt>

        <comment type="block" pos:line="37" pos:column="9">/* The four separators should be identical, or else this is an oddly
           formatted reply and we bail out immediately. */</comment>
        <for pos:line="39" pos:column="9">for<control pos:line="39" pos:column="12">(<init><expr><name pos:line="39" pos:column="13">i<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator><literal type="number" pos:line="39" pos:column="15">1<pos:position pos:line="39" pos:column="16"/></literal></expr>;<pos:position pos:line="39" pos:column="17"/></init> <condition><expr><name pos:line="39" pos:column="18">i<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">&lt;<pos:position pos:line="39" pos:column="23"/></operator><literal type="number" pos:line="39" pos:column="20">4<pos:position pos:line="39" pos:column="21"/></literal></expr>;<pos:position pos:line="39" pos:column="22"/></condition> <incr><expr><name pos:line="39" pos:column="23">i<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">++<pos:position pos:line="39" pos:column="26"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="27"/></control> <block pos:line="39" pos:column="28">{
          <if pos:line="40" pos:column="11">if<condition pos:line="40" pos:column="13">(<expr><name><name pos:line="40" pos:column="14">separator<pos:position pos:line="40" pos:column="23"/></name><index pos:line="40" pos:column="23">[<expr><name pos:line="40" pos:column="24">i<pos:position pos:line="40" pos:column="25"/></name></expr>]<pos:position pos:line="40" pos:column="26"/></index></name> <operator pos:line="40" pos:column="27">!=<pos:position pos:line="40" pos:column="29"/></operator> <name pos:line="40" pos:column="30">sep1<pos:position pos:line="40" pos:column="34"/></name></expr>)<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35"> <block pos:line="40" pos:column="36">{
            <expr_stmt><expr><name pos:line="41" pos:column="13">ptr<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">NULL<pos:position pos:line="41" pos:column="21"/></name></expr>;<pos:position pos:line="41" pos:column="22"/></expr_stmt> <comment type="block" pos:line="41" pos:column="23">/* set to NULL to signal error */</comment>
            <break pos:line="42" pos:column="13">break;<pos:position pos:line="42" pos:column="19"/></break>
          }<pos:position pos:line="43" pos:column="12"/></block></then></if>
        }<pos:position pos:line="44" pos:column="10"/></block></for>
        <if pos:line="45" pos:column="9">if<condition pos:line="45" pos:column="11">(<expr><name pos:line="45" pos:column="12">ptr<pos:position pos:line="45" pos:column="15"/></name></expr>)<pos:position pos:line="45" pos:column="16"/></condition><then pos:line="45" pos:column="16"> <block pos:line="45" pos:column="17">{
          <expr_stmt><expr><name pos:line="46" pos:column="11">newport<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <call pos:line="46" pos:column="21">(<name pos:line="46" pos:column="22">unsigned<pos:position pos:line="46" pos:column="30"/></name> <name pos:line="46" pos:column="31">short<pos:position pos:line="46" pos:column="36"/></name>)<argument_list pos:line="46" pos:column="37">(<argument><expr><name pos:line="46" pos:column="38">num<pos:position pos:line="46" pos:column="41"/></name> <operator pos:line="46" pos:column="42">&amp;<pos:position pos:line="46" pos:column="47"/></operator> <literal type="number" pos:line="46" pos:column="44">0xffff<pos:position pos:line="46" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="52"/></expr_stmt>

          <if pos:line="48" pos:column="11">if<condition pos:line="48" pos:column="13">(<expr><name><name pos:line="48" pos:column="14">conn<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">-&gt;<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="20">bits<pos:position pos:line="48" pos:column="24"/></name><operator pos:line="48" pos:column="24">.<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="25">tunnel_proxy<pos:position pos:line="48" pos:column="37"/></name></name> <operator pos:line="48" pos:column="38">||<pos:position pos:line="48" pos:column="40"/></operator>
             <name><name pos:line="49" pos:column="14">data<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">-&gt;<pos:position pos:line="49" pos:column="23"/></operator><name pos:line="49" pos:column="20">set<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">.<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="24">proxytype<pos:position pos:line="49" pos:column="33"/></name></name> <operator pos:line="49" pos:column="34">==<pos:position pos:line="49" pos:column="36"/></operator> <name pos:line="49" pos:column="37">CURLPROXY_SOCKS5<pos:position pos:line="49" pos:column="53"/></name> <operator pos:line="49" pos:column="54">||<pos:position pos:line="49" pos:column="56"/></operator>
             <name><name pos:line="50" pos:column="14">data<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">-&gt;<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="20">set<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">.<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="24">proxytype<pos:position pos:line="50" pos:column="33"/></name></name> <operator pos:line="50" pos:column="34">==<pos:position pos:line="50" pos:column="36"/></operator> <name pos:line="50" pos:column="37">CURLPROXY_SOCKS5_HOSTNAME<pos:position pos:line="50" pos:column="62"/></name> <operator pos:line="50" pos:column="63">||<pos:position pos:line="50" pos:column="65"/></operator>
             <name><name pos:line="51" pos:column="14">data<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">-&gt;<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="20">set<pos:position pos:line="51" pos:column="23"/></name><operator pos:line="51" pos:column="23">.<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="24">proxytype<pos:position pos:line="51" pos:column="33"/></name></name> <operator pos:line="51" pos:column="34">==<pos:position pos:line="51" pos:column="36"/></operator> <name pos:line="51" pos:column="37">CURLPROXY_SOCKS4<pos:position pos:line="51" pos:column="53"/></name> <operator pos:line="51" pos:column="54">||<pos:position pos:line="51" pos:column="56"/></operator>
             <name><name pos:line="52" pos:column="14">data<pos:position pos:line="52" pos:column="18"/></name><operator pos:line="52" pos:column="18">-&gt;<pos:position pos:line="52" pos:column="23"/></operator><name pos:line="52" pos:column="20">set<pos:position pos:line="52" pos:column="23"/></name><operator pos:line="52" pos:column="23">.<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="24">proxytype<pos:position pos:line="52" pos:column="33"/></name></name> <operator pos:line="52" pos:column="34">==<pos:position pos:line="52" pos:column="36"/></operator> <name pos:line="52" pos:column="37">CURLPROXY_SOCKS4A<pos:position pos:line="52" pos:column="54"/></name></expr>)<pos:position pos:line="52" pos:column="55"/></condition><then pos:line="52" pos:column="55">
            <comment type="block" pos:line="53" pos:column="13">/* proxy tunnel -&gt; use other host info because ip_addr_str is the
               proxy address not the ftp host */</comment>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="13">snprintf<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">(<argument><expr><name pos:line="55" pos:column="22">newhost<pos:position pos:line="55" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="31">sizeof<argument_list pos:line="55" pos:column="37">(<argument><expr><name pos:line="55" pos:column="38">newhost<pos:position pos:line="55" pos:column="45"/></name></expr></argument>)<pos:position pos:line="55" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="48">"%s"<pos:position pos:line="55" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="54">conn<pos:position pos:line="55" pos:column="58"/></name><operator pos:line="55" pos:column="58">-&gt;<pos:position pos:line="55" pos:column="63"/></operator><name pos:line="55" pos:column="60">host<pos:position pos:line="55" pos:column="64"/></name><operator pos:line="55" pos:column="64">.<pos:position pos:line="55" pos:column="65"/></operator><name pos:line="55" pos:column="65">name<pos:position pos:line="55" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="71"/></expr_stmt></block></then>
          <else pos:line="56" pos:column="11">else
            <comment type="block" pos:line="57" pos:column="13">/* use the same IP we are already connected to */</comment>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="13">snprintf<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><name pos:line="58" pos:column="22">newhost<pos:position pos:line="58" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="31">NEWHOST_BUFSIZE<pos:position pos:line="58" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="48">"%s"<pos:position pos:line="58" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="54">conn<pos:position pos:line="58" pos:column="58"/></name><operator pos:line="58" pos:column="58">-&gt;<pos:position pos:line="58" pos:column="63"/></operator><name pos:line="58" pos:column="60">ip_addr_str<pos:position pos:line="58" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="73"/></expr_stmt></block></else></if>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
      }<pos:position pos:line="60" pos:column="8"/></block></then>
      <else pos:line="61" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="9">ptr<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator><name pos:line="62" pos:column="13">NULL<pos:position pos:line="62" pos:column="17"/></name></expr>;<pos:position pos:line="62" pos:column="18"/></expr_stmt></block></else></if>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
    <if pos:line="64" pos:column="5">if<condition pos:line="64" pos:column="7">(<expr><operator pos:line="64" pos:column="8">!<pos:position pos:line="64" pos:column="9"/></operator><name pos:line="64" pos:column="9">ptr<pos:position pos:line="64" pos:column="12"/></name></expr>)<pos:position pos:line="64" pos:column="13"/></condition><then pos:line="64" pos:column="13"> <block pos:line="64" pos:column="14">{
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">failf<pos:position pos:line="65" pos:column="12"/></name><argument_list pos:line="65" pos:column="12">(<argument><expr><name pos:line="65" pos:column="13">data<pos:position pos:line="65" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="19">"Weirdly formatted EPSV reply"<pos:position pos:line="65" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="51"/></expr_stmt>
      <return pos:line="66" pos:column="7">return <expr><name pos:line="66" pos:column="14">CURLE_FTP_WEIRD_PASV_REPLY<pos:position pos:line="66" pos:column="40"/></name></expr>;<pos:position pos:line="66" pos:column="41"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
  }<pos:position pos:line="68" pos:column="4"/></block></then>
  <elseif pos:line="69" pos:column="3">else <if pos:line="69" pos:column="8">if<condition pos:line="69" pos:column="10">(<expr><operator pos:line="69" pos:column="11">(<pos:position pos:line="69" pos:column="12"/></operator><name><name pos:line="69" pos:column="12">ftpc<pos:position pos:line="69" pos:column="16"/></name><operator pos:line="69" pos:column="16">-&gt;<pos:position pos:line="69" pos:column="21"/></operator><name pos:line="69" pos:column="18">count1<pos:position pos:line="69" pos:column="24"/></name></name> <operator pos:line="69" pos:column="25">==<pos:position pos:line="69" pos:column="27"/></operator> <literal type="number" pos:line="69" pos:column="28">1<pos:position pos:line="69" pos:column="29"/></literal><operator pos:line="69" pos:column="29">)<pos:position pos:line="69" pos:column="30"/></operator> <operator pos:line="69" pos:column="31">&amp;&amp;<pos:position pos:line="69" pos:column="41"/></operator>
          <operator pos:line="70" pos:column="11">(<pos:position pos:line="70" pos:column="12"/></operator><name pos:line="70" pos:column="12">ftpcode<pos:position pos:line="70" pos:column="19"/></name> <operator pos:line="70" pos:column="20">==<pos:position pos:line="70" pos:column="22"/></operator> <literal type="number" pos:line="70" pos:column="23">227<pos:position pos:line="70" pos:column="26"/></literal><operator pos:line="70" pos:column="26">)<pos:position pos:line="70" pos:column="27"/></operator></expr>)<pos:position pos:line="70" pos:column="28"/></condition><then pos:line="70" pos:column="28"> <block pos:line="70" pos:column="29">{
    <comment type="block" pos:line="71" pos:column="5">/* positive PASV response */</comment>
    <decl_stmt><decl><type><name pos:line="72" pos:column="5">int<pos:position pos:line="72" pos:column="8"/></name></type> <name><name pos:line="72" pos:column="9">ip<pos:position pos:line="72" pos:column="11"/></name><index pos:line="72" pos:column="11">[<expr><literal type="number" pos:line="72" pos:column="12">4<pos:position pos:line="72" pos:column="13"/></literal></expr>]<pos:position pos:line="72" pos:column="14"/></index></name></decl>;<pos:position pos:line="72" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="73" pos:column="5">int<pos:position pos:line="73" pos:column="8"/></name></type> <name><name pos:line="73" pos:column="9">port<pos:position pos:line="73" pos:column="13"/></name><index pos:line="73" pos:column="13">[<expr><literal type="number" pos:line="73" pos:column="14">2<pos:position pos:line="73" pos:column="15"/></literal></expr>]<pos:position pos:line="73" pos:column="16"/></index></name></decl>;<pos:position pos:line="73" pos:column="17"/></decl_stmt>

    <comment type="block" pos:line="75" pos:column="5">/*
     * Scan for a sequence of six comma-separated numbers and use them as
     * IP+port indicators.
     *
     * Found reply-strings include:
     * "227 Entering Passive Mode (127,0,0,1,4,51)"
     * "227 Data transfer will passively listen to 127,0,0,1,4,51"
     * "227 Entering passive mode. 127,0,0,1,4,51"
     */</comment>
    <while pos:line="84" pos:column="5">while<condition pos:line="84" pos:column="10">(<expr><operator pos:line="84" pos:column="11">*<pos:position pos:line="84" pos:column="12"/></operator><name pos:line="84" pos:column="12">str<pos:position pos:line="84" pos:column="15"/></name></expr>)<pos:position pos:line="84" pos:column="16"/></condition> <block pos:line="84" pos:column="17">{
      <if pos:line="85" pos:column="7">if<condition pos:line="85" pos:column="9">(<expr><literal type="number" pos:line="85" pos:column="10">6<pos:position pos:line="85" pos:column="11"/></literal> <operator pos:line="85" pos:column="12">==<pos:position pos:line="85" pos:column="14"/></operator> <call><name pos:line="85" pos:column="15">sscanf<pos:position pos:line="85" pos:column="21"/></name><argument_list pos:line="85" pos:column="21">(<argument><expr><name pos:line="85" pos:column="22">str<pos:position pos:line="85" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="27">"%d,%d,%d,%d,%d,%d"<pos:position pos:line="85" pos:column="46"/></literal></expr></argument>,
                      <argument><expr><operator pos:line="86" pos:column="23">&amp;<pos:position pos:line="86" pos:column="28"/></operator><name><name pos:line="86" pos:column="24">ip<pos:position pos:line="86" pos:column="26"/></name><index pos:line="86" pos:column="26">[<expr><literal type="number" pos:line="86" pos:column="27">0<pos:position pos:line="86" pos:column="28"/></literal></expr>]<pos:position pos:line="86" pos:column="29"/></index></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="31">&amp;<pos:position pos:line="86" pos:column="36"/></operator><name><name pos:line="86" pos:column="32">ip<pos:position pos:line="86" pos:column="34"/></name><index pos:line="86" pos:column="34">[<expr><literal type="number" pos:line="86" pos:column="35">1<pos:position pos:line="86" pos:column="36"/></literal></expr>]<pos:position pos:line="86" pos:column="37"/></index></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="39">&amp;<pos:position pos:line="86" pos:column="44"/></operator><name><name pos:line="86" pos:column="40">ip<pos:position pos:line="86" pos:column="42"/></name><index pos:line="86" pos:column="42">[<expr><literal type="number" pos:line="86" pos:column="43">2<pos:position pos:line="86" pos:column="44"/></literal></expr>]<pos:position pos:line="86" pos:column="45"/></index></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="47">&amp;<pos:position pos:line="86" pos:column="52"/></operator><name><name pos:line="86" pos:column="48">ip<pos:position pos:line="86" pos:column="50"/></name><index pos:line="86" pos:column="50">[<expr><literal type="number" pos:line="86" pos:column="51">3<pos:position pos:line="86" pos:column="52"/></literal></expr>]<pos:position pos:line="86" pos:column="53"/></index></name></expr></argument>,
                      <argument><expr><operator pos:line="87" pos:column="23">&amp;<pos:position pos:line="87" pos:column="28"/></operator><name><name pos:line="87" pos:column="24">port<pos:position pos:line="87" pos:column="28"/></name><index pos:line="87" pos:column="28">[<expr><literal type="number" pos:line="87" pos:column="29">0<pos:position pos:line="87" pos:column="30"/></literal></expr>]<pos:position pos:line="87" pos:column="31"/></index></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="33">&amp;<pos:position pos:line="87" pos:column="38"/></operator><name><name pos:line="87" pos:column="34">port<pos:position pos:line="87" pos:column="38"/></name><index pos:line="87" pos:column="38">[<expr><literal type="number" pos:line="87" pos:column="39">1<pos:position pos:line="87" pos:column="40"/></literal></expr>]<pos:position pos:line="87" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="87" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="43"/></condition><then pos:line="87" pos:column="43">
        <block type="pseudo"><break pos:line="88" pos:column="9">break;<pos:position pos:line="88" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="89" pos:column="7">str<pos:position pos:line="89" pos:column="10"/></name><operator pos:line="89" pos:column="10">++<pos:position pos:line="89" pos:column="12"/></operator></expr>;<pos:position pos:line="89" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></while>

    <if pos:line="92" pos:column="5">if<condition pos:line="92" pos:column="7">(<expr><operator pos:line="92" pos:column="8">!<pos:position pos:line="92" pos:column="9"/></operator><operator pos:line="92" pos:column="9">*<pos:position pos:line="92" pos:column="10"/></operator><name pos:line="92" pos:column="10">str<pos:position pos:line="92" pos:column="13"/></name></expr>)<pos:position pos:line="92" pos:column="14"/></condition><then pos:line="92" pos:column="14"> <block pos:line="92" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="93" pos:column="7">failf<pos:position pos:line="93" pos:column="12"/></name><argument_list pos:line="93" pos:column="12">(<argument><expr><name pos:line="93" pos:column="13">data<pos:position pos:line="93" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="19">"Couldn't interpret the 227-response"<pos:position pos:line="93" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="58"/></expr_stmt>
      <return pos:line="94" pos:column="7">return <expr><name pos:line="94" pos:column="14">CURLE_FTP_WEIRD_227_FORMAT<pos:position pos:line="94" pos:column="40"/></name></expr>;<pos:position pos:line="94" pos:column="41"/></return>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="97" pos:column="5">/* we got OK from server */</comment>
    <if pos:line="98" pos:column="5">if<condition pos:line="98" pos:column="7">(<expr><name><name pos:line="98" pos:column="8">data<pos:position pos:line="98" pos:column="12"/></name><operator pos:line="98" pos:column="12">-&gt;<pos:position pos:line="98" pos:column="17"/></operator><name pos:line="98" pos:column="14">set<pos:position pos:line="98" pos:column="17"/></name><operator pos:line="98" pos:column="17">.<pos:position pos:line="98" pos:column="18"/></operator><name pos:line="98" pos:column="18">ftp_skip_ip<pos:position pos:line="98" pos:column="29"/></name></name></expr>)<pos:position pos:line="98" pos:column="30"/></condition><then pos:line="98" pos:column="30"> <block pos:line="98" pos:column="31">{
      <comment type="block" pos:line="99" pos:column="7">/* told to ignore the remotely given IP but instead use the one we used
         for the control connection */</comment>
      <expr_stmt><expr><call><name pos:line="101" pos:column="7">infof<pos:position pos:line="101" pos:column="12"/></name><argument_list pos:line="101" pos:column="12">(<argument><expr><name pos:line="101" pos:column="13">data<pos:position pos:line="101" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="19">"Skips %d.%d.%d.%d for data connection, uses %s instead\n"<pos:position pos:line="101" pos:column="77"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="102" pos:column="13">ip<pos:position pos:line="102" pos:column="15"/></name><index pos:line="102" pos:column="15">[<expr><literal type="number" pos:line="102" pos:column="16">0<pos:position pos:line="102" pos:column="17"/></literal></expr>]<pos:position pos:line="102" pos:column="18"/></index></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="20">ip<pos:position pos:line="102" pos:column="22"/></name><index pos:line="102" pos:column="22">[<expr><literal type="number" pos:line="102" pos:column="23">1<pos:position pos:line="102" pos:column="24"/></literal></expr>]<pos:position pos:line="102" pos:column="25"/></index></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="27">ip<pos:position pos:line="102" pos:column="29"/></name><index pos:line="102" pos:column="29">[<expr><literal type="number" pos:line="102" pos:column="30">2<pos:position pos:line="102" pos:column="31"/></literal></expr>]<pos:position pos:line="102" pos:column="32"/></index></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="34">ip<pos:position pos:line="102" pos:column="36"/></name><index pos:line="102" pos:column="36">[<expr><literal type="number" pos:line="102" pos:column="37">3<pos:position pos:line="102" pos:column="38"/></literal></expr>]<pos:position pos:line="102" pos:column="39"/></index></name></expr></argument>,
            <argument><expr><name><name pos:line="103" pos:column="13">conn<pos:position pos:line="103" pos:column="17"/></name><operator pos:line="103" pos:column="17">-&gt;<pos:position pos:line="103" pos:column="22"/></operator><name pos:line="103" pos:column="19">ip_addr_str<pos:position pos:line="103" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="32"/></expr_stmt>
      <if pos:line="104" pos:column="7">if<condition pos:line="104" pos:column="9">(<expr><name><name pos:line="104" pos:column="10">conn<pos:position pos:line="104" pos:column="14"/></name><operator pos:line="104" pos:column="14">-&gt;<pos:position pos:line="104" pos:column="19"/></operator><name pos:line="104" pos:column="16">bits<pos:position pos:line="104" pos:column="20"/></name><operator pos:line="104" pos:column="20">.<pos:position pos:line="104" pos:column="21"/></operator><name pos:line="104" pos:column="21">tunnel_proxy<pos:position pos:line="104" pos:column="33"/></name></name> <operator pos:line="104" pos:column="34">||<pos:position pos:line="104" pos:column="36"/></operator>
          <name><name pos:line="105" pos:column="11">data<pos:position pos:line="105" pos:column="15"/></name><operator pos:line="105" pos:column="15">-&gt;<pos:position pos:line="105" pos:column="20"/></operator><name pos:line="105" pos:column="17">set<pos:position pos:line="105" pos:column="20"/></name><operator pos:line="105" pos:column="20">.<pos:position pos:line="105" pos:column="21"/></operator><name pos:line="105" pos:column="21">proxytype<pos:position pos:line="105" pos:column="30"/></name></name> <operator pos:line="105" pos:column="31">==<pos:position pos:line="105" pos:column="33"/></operator> <name pos:line="105" pos:column="34">CURLPROXY_SOCKS5<pos:position pos:line="105" pos:column="50"/></name> <operator pos:line="105" pos:column="51">||<pos:position pos:line="105" pos:column="53"/></operator>
          <name><name pos:line="106" pos:column="11">data<pos:position pos:line="106" pos:column="15"/></name><operator pos:line="106" pos:column="15">-&gt;<pos:position pos:line="106" pos:column="20"/></operator><name pos:line="106" pos:column="17">set<pos:position pos:line="106" pos:column="20"/></name><operator pos:line="106" pos:column="20">.<pos:position pos:line="106" pos:column="21"/></operator><name pos:line="106" pos:column="21">proxytype<pos:position pos:line="106" pos:column="30"/></name></name> <operator pos:line="106" pos:column="31">==<pos:position pos:line="106" pos:column="33"/></operator> <name pos:line="106" pos:column="34">CURLPROXY_SOCKS5_HOSTNAME<pos:position pos:line="106" pos:column="59"/></name> <operator pos:line="106" pos:column="60">||<pos:position pos:line="106" pos:column="62"/></operator>
          <name><name pos:line="107" pos:column="11">data<pos:position pos:line="107" pos:column="15"/></name><operator pos:line="107" pos:column="15">-&gt;<pos:position pos:line="107" pos:column="20"/></operator><name pos:line="107" pos:column="17">set<pos:position pos:line="107" pos:column="20"/></name><operator pos:line="107" pos:column="20">.<pos:position pos:line="107" pos:column="21"/></operator><name pos:line="107" pos:column="21">proxytype<pos:position pos:line="107" pos:column="30"/></name></name> <operator pos:line="107" pos:column="31">==<pos:position pos:line="107" pos:column="33"/></operator> <name pos:line="107" pos:column="34">CURLPROXY_SOCKS4<pos:position pos:line="107" pos:column="50"/></name> <operator pos:line="107" pos:column="51">||<pos:position pos:line="107" pos:column="53"/></operator>
          <name><name pos:line="108" pos:column="11">data<pos:position pos:line="108" pos:column="15"/></name><operator pos:line="108" pos:column="15">-&gt;<pos:position pos:line="108" pos:column="20"/></operator><name pos:line="108" pos:column="17">set<pos:position pos:line="108" pos:column="20"/></name><operator pos:line="108" pos:column="20">.<pos:position pos:line="108" pos:column="21"/></operator><name pos:line="108" pos:column="21">proxytype<pos:position pos:line="108" pos:column="30"/></name></name> <operator pos:line="108" pos:column="31">==<pos:position pos:line="108" pos:column="33"/></operator> <name pos:line="108" pos:column="34">CURLPROXY_SOCKS4A<pos:position pos:line="108" pos:column="51"/></name></expr>)<pos:position pos:line="108" pos:column="52"/></condition><then pos:line="108" pos:column="52">
        <comment type="block" pos:line="109" pos:column="9">/* proxy tunnel -&gt; use other host info because ip_addr_str is the
           proxy address not the ftp host */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="111" pos:column="9">snprintf<pos:position pos:line="111" pos:column="17"/></name><argument_list pos:line="111" pos:column="17">(<argument><expr><name pos:line="111" pos:column="18">newhost<pos:position pos:line="111" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="111" pos:column="27">sizeof<argument_list pos:line="111" pos:column="33">(<argument><expr><name pos:line="111" pos:column="34">newhost<pos:position pos:line="111" pos:column="41"/></name></expr></argument>)<pos:position pos:line="111" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="44">"%s"<pos:position pos:line="111" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="50">conn<pos:position pos:line="111" pos:column="54"/></name><operator pos:line="111" pos:column="54">-&gt;<pos:position pos:line="111" pos:column="59"/></operator><name pos:line="111" pos:column="56">host<pos:position pos:line="111" pos:column="60"/></name><operator pos:line="111" pos:column="60">.<pos:position pos:line="111" pos:column="61"/></operator><name pos:line="111" pos:column="61">name<pos:position pos:line="111" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="67"/></expr_stmt></block></then>
      <else pos:line="112" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="113" pos:column="9">snprintf<pos:position pos:line="113" pos:column="17"/></name><argument_list pos:line="113" pos:column="17">(<argument><expr><name pos:line="113" pos:column="18">newhost<pos:position pos:line="113" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="113" pos:column="27">sizeof<argument_list pos:line="113" pos:column="33">(<argument><expr><name pos:line="113" pos:column="34">newhost<pos:position pos:line="113" pos:column="41"/></name></expr></argument>)<pos:position pos:line="113" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="44">"%s"<pos:position pos:line="113" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="50">conn<pos:position pos:line="113" pos:column="54"/></name><operator pos:line="113" pos:column="54">-&gt;<pos:position pos:line="113" pos:column="59"/></operator><name pos:line="113" pos:column="56">ip_addr_str<pos:position pos:line="113" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="69"/></expr_stmt></block></else></if>
    }<pos:position pos:line="114" pos:column="6"/></block></then>
    <else pos:line="115" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="7">snprintf<pos:position pos:line="116" pos:column="15"/></name><argument_list pos:line="116" pos:column="15">(<argument><expr><name pos:line="116" pos:column="16">newhost<pos:position pos:line="116" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="116" pos:column="25">sizeof<argument_list pos:line="116" pos:column="31">(<argument><expr><name pos:line="116" pos:column="32">newhost<pos:position pos:line="116" pos:column="39"/></name></expr></argument>)<pos:position pos:line="116" pos:column="40"/></argument_list></sizeof></expr></argument>,
               <argument><expr><literal type="string" pos:line="117" pos:column="16">"%d.%d.%d.%d"<pos:position pos:line="117" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="31">ip<pos:position pos:line="117" pos:column="33"/></name><index pos:line="117" pos:column="33">[<expr><literal type="number" pos:line="117" pos:column="34">0<pos:position pos:line="117" pos:column="35"/></literal></expr>]<pos:position pos:line="117" pos:column="36"/></index></name></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="38">ip<pos:position pos:line="117" pos:column="40"/></name><index pos:line="117" pos:column="40">[<expr><literal type="number" pos:line="117" pos:column="41">1<pos:position pos:line="117" pos:column="42"/></literal></expr>]<pos:position pos:line="117" pos:column="43"/></index></name></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="45">ip<pos:position pos:line="117" pos:column="47"/></name><index pos:line="117" pos:column="47">[<expr><literal type="number" pos:line="117" pos:column="48">2<pos:position pos:line="117" pos:column="49"/></literal></expr>]<pos:position pos:line="117" pos:column="50"/></index></name></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="52">ip<pos:position pos:line="117" pos:column="54"/></name><index pos:line="117" pos:column="54">[<expr><literal type="number" pos:line="117" pos:column="55">3<pos:position pos:line="117" pos:column="56"/></literal></expr>]<pos:position pos:line="117" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="117" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="59"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name pos:line="118" pos:column="5">newport<pos:position pos:line="118" pos:column="12"/></name> <operator pos:line="118" pos:column="13">=<pos:position pos:line="118" pos:column="14"/></operator> <call pos:line="118" pos:column="15">(<name pos:line="118" pos:column="16">unsigned<pos:position pos:line="118" pos:column="24"/></name> <name pos:line="118" pos:column="25">short<pos:position pos:line="118" pos:column="30"/></name>)<argument_list pos:line="118" pos:column="31">(<argument><expr><operator pos:line="118" pos:column="32">(<pos:position pos:line="118" pos:column="33"/></operator><operator pos:line="118" pos:column="33">(<pos:position pos:line="118" pos:column="34"/></operator><name><name pos:line="118" pos:column="34">port<pos:position pos:line="118" pos:column="38"/></name><index pos:line="118" pos:column="38">[<expr><literal type="number" pos:line="118" pos:column="39">0<pos:position pos:line="118" pos:column="40"/></literal></expr>]<pos:position pos:line="118" pos:column="41"/></index></name><operator pos:line="118" pos:column="41">&lt;&lt;<pos:position pos:line="118" pos:column="49"/></operator><literal type="number" pos:line="118" pos:column="43">8<pos:position pos:line="118" pos:column="44"/></literal><operator pos:line="118" pos:column="44">)<pos:position pos:line="118" pos:column="45"/></operator> <operator pos:line="118" pos:column="46">+<pos:position pos:line="118" pos:column="47"/></operator> <name><name pos:line="118" pos:column="48">port<pos:position pos:line="118" pos:column="52"/></name><index pos:line="118" pos:column="52">[<expr><literal type="number" pos:line="118" pos:column="53">1<pos:position pos:line="118" pos:column="54"/></literal></expr>]<pos:position pos:line="118" pos:column="55"/></index></name><operator pos:line="118" pos:column="55">)<pos:position pos:line="118" pos:column="56"/></operator> <operator pos:line="118" pos:column="57">&amp;<pos:position pos:line="118" pos:column="62"/></operator> <literal type="number" pos:line="118" pos:column="59">0xffff<pos:position pos:line="118" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="67"/></expr_stmt>
  }<pos:position pos:line="119" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="120" pos:column="3">else <if pos:line="120" pos:column="8">if<condition pos:line="120" pos:column="10">(<expr><name><name pos:line="120" pos:column="11">ftpc<pos:position pos:line="120" pos:column="15"/></name><operator pos:line="120" pos:column="15">-&gt;<pos:position pos:line="120" pos:column="20"/></operator><name pos:line="120" pos:column="17">count1<pos:position pos:line="120" pos:column="23"/></name></name> <operator pos:line="120" pos:column="24">==<pos:position pos:line="120" pos:column="26"/></operator> <literal type="number" pos:line="120" pos:column="27">0<pos:position pos:line="120" pos:column="28"/></literal></expr>)<pos:position pos:line="120" pos:column="29"/></condition><then pos:line="120" pos:column="29"> <block pos:line="120" pos:column="30">{
    <comment type="block" pos:line="121" pos:column="5">/* EPSV failed, move on to PASV */</comment>

    <comment type="block" pos:line="123" pos:column="5">/* disable it for next transfer */</comment>
    <expr_stmt><expr><name><name pos:line="124" pos:column="5">conn<pos:position pos:line="124" pos:column="9"/></name><operator pos:line="124" pos:column="9">-&gt;<pos:position pos:line="124" pos:column="14"/></operator><name pos:line="124" pos:column="11">bits<pos:position pos:line="124" pos:column="15"/></name><operator pos:line="124" pos:column="15">.<pos:position pos:line="124" pos:column="16"/></operator><name pos:line="124" pos:column="16">ftp_use_epsv<pos:position pos:line="124" pos:column="28"/></name></name> <operator pos:line="124" pos:column="29">=<pos:position pos:line="124" pos:column="30"/></operator> <name pos:line="124" pos:column="31">FALSE<pos:position pos:line="124" pos:column="36"/></name></expr>;<pos:position pos:line="124" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="125" pos:column="5">infof<pos:position pos:line="125" pos:column="10"/></name><argument_list pos:line="125" pos:column="10">(<argument><expr><name pos:line="125" pos:column="11">data<pos:position pos:line="125" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="17">"disabling EPSV usage\n"<pos:position pos:line="125" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="127" pos:column="5">NBFTPSENDF<pos:position pos:line="127" pos:column="15"/></name><argument_list pos:line="127" pos:column="15">(<argument><expr><name pos:line="127" pos:column="16">conn<pos:position pos:line="127" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="22">"PASV"<pos:position pos:line="127" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="127" pos:column="30">NULL<pos:position pos:line="127" pos:column="34"/></name></expr></argument>)<pos:position pos:line="127" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="128" pos:column="5">ftpc<pos:position pos:line="128" pos:column="9"/></name><operator pos:line="128" pos:column="9">-&gt;<pos:position pos:line="128" pos:column="14"/></operator><name pos:line="128" pos:column="11">count1<pos:position pos:line="128" pos:column="17"/></name></name><operator pos:line="128" pos:column="17">++<pos:position pos:line="128" pos:column="19"/></operator></expr>;<pos:position pos:line="128" pos:column="20"/></expr_stmt>
    <comment type="block" pos:line="129" pos:column="5">/* remain in the FTP_PASV state */</comment>
    <return pos:line="130" pos:column="5">return <expr><name pos:line="130" pos:column="12">result<pos:position pos:line="130" pos:column="18"/></name></expr>;<pos:position pos:line="130" pos:column="19"/></return>
  }<pos:position pos:line="131" pos:column="4"/></block></then></if></elseif>
  <else pos:line="132" pos:column="3">else <block pos:line="132" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="133" pos:column="5">failf<pos:position pos:line="133" pos:column="10"/></name><argument_list pos:line="133" pos:column="10">(<argument><expr><name pos:line="133" pos:column="11">data<pos:position pos:line="133" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="17">"Bad PASV/EPSV response: %03d"<pos:position pos:line="133" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="133" pos:column="49">ftpcode<pos:position pos:line="133" pos:column="56"/></name></expr></argument>)<pos:position pos:line="133" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="58"/></expr_stmt>
    <return pos:line="134" pos:column="5">return <expr><name pos:line="134" pos:column="12">CURLE_FTP_WEIRD_PASV_REPLY<pos:position pos:line="134" pos:column="38"/></name></expr>;<pos:position pos:line="134" pos:column="39"/></return>
  }<pos:position pos:line="135" pos:column="4"/></block></else></if>

  <if pos:line="137" pos:column="3">if<condition pos:line="137" pos:column="5">(<expr><name><name pos:line="137" pos:column="6">data<pos:position pos:line="137" pos:column="10"/></name><operator pos:line="137" pos:column="10">-&gt;<pos:position pos:line="137" pos:column="15"/></operator><name pos:line="137" pos:column="12">set<pos:position pos:line="137" pos:column="15"/></name><operator pos:line="137" pos:column="15">.<pos:position pos:line="137" pos:column="16"/></operator><name pos:line="137" pos:column="16">str<pos:position pos:line="137" pos:column="19"/></name><index pos:line="137" pos:column="19">[<expr><name pos:line="137" pos:column="20">STRING_PROXY<pos:position pos:line="137" pos:column="32"/></name></expr>]<pos:position pos:line="137" pos:column="33"/></index></name> <operator pos:line="137" pos:column="34">&amp;&amp;<pos:position pos:line="137" pos:column="44"/></operator> <operator pos:line="137" pos:column="37">*<pos:position pos:line="137" pos:column="38"/></operator><name><name pos:line="137" pos:column="38">data<pos:position pos:line="137" pos:column="42"/></name><operator pos:line="137" pos:column="42">-&gt;<pos:position pos:line="137" pos:column="47"/></operator><name pos:line="137" pos:column="44">set<pos:position pos:line="137" pos:column="47"/></name><operator pos:line="137" pos:column="47">.<pos:position pos:line="137" pos:column="48"/></operator><name pos:line="137" pos:column="48">str<pos:position pos:line="137" pos:column="51"/></name><index pos:line="137" pos:column="51">[<expr><name pos:line="137" pos:column="52">STRING_PROXY<pos:position pos:line="137" pos:column="64"/></name></expr>]<pos:position pos:line="137" pos:column="65"/></index></name></expr>)<pos:position pos:line="137" pos:column="66"/></condition><then pos:line="137" pos:column="66"> <block pos:line="137" pos:column="67">{
    <comment type="block" pos:line="138" pos:column="5">/*
     * This is a tunnel through a http proxy and we need to connect to the
     * proxy again here.
     *
     * We don't want to rely on a former host lookup that might've expired
     * now, instead we remake the lookup here and now!
     */</comment>
    <expr_stmt><expr><name pos:line="145" pos:column="5">rc<pos:position pos:line="145" pos:column="7"/></name> <operator pos:line="145" pos:column="8">=<pos:position pos:line="145" pos:column="9"/></operator> <call><name pos:line="145" pos:column="10">Curl_resolv<pos:position pos:line="145" pos:column="21"/></name><argument_list pos:line="145" pos:column="21">(<argument><expr><name pos:line="145" pos:column="22">conn<pos:position pos:line="145" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="28">conn<pos:position pos:line="145" pos:column="32"/></name><operator pos:line="145" pos:column="32">-&gt;<pos:position pos:line="145" pos:column="37"/></operator><name pos:line="145" pos:column="34">proxy<pos:position pos:line="145" pos:column="39"/></name><operator pos:line="145" pos:column="39">.<pos:position pos:line="145" pos:column="40"/></operator><name pos:line="145" pos:column="40">name<pos:position pos:line="145" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="145" pos:column="46">(<pos:position pos:line="145" pos:column="47"/></operator><name pos:line="145" pos:column="47">int<pos:position pos:line="145" pos:column="50"/></name><operator pos:line="145" pos:column="50">)<pos:position pos:line="145" pos:column="51"/></operator><name><name pos:line="145" pos:column="51">conn<pos:position pos:line="145" pos:column="55"/></name><operator pos:line="145" pos:column="55">-&gt;<pos:position pos:line="145" pos:column="60"/></operator><name pos:line="145" pos:column="57">port<pos:position pos:line="145" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="145" pos:column="63">&amp;<pos:position pos:line="145" pos:column="68"/></operator><name pos:line="145" pos:column="64">addr<pos:position pos:line="145" pos:column="68"/></name></expr></argument>)<pos:position pos:line="145" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="70"/></expr_stmt>
    <if pos:line="146" pos:column="5">if<condition pos:line="146" pos:column="7">(<expr><name pos:line="146" pos:column="8">rc<pos:position pos:line="146" pos:column="10"/></name> <operator pos:line="146" pos:column="11">==<pos:position pos:line="146" pos:column="13"/></operator> <name pos:line="146" pos:column="14">CURLRESOLV_PENDING<pos:position pos:line="146" pos:column="32"/></name></expr>)<pos:position pos:line="146" pos:column="33"/></condition><then pos:line="146" pos:column="33">
      <comment type="block" pos:line="147" pos:column="7">/* BLOCKING */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="148" pos:column="7">rc<pos:position pos:line="148" pos:column="9"/></name> <operator pos:line="148" pos:column="10">=<pos:position pos:line="148" pos:column="11"/></operator> <call><name pos:line="148" pos:column="12">Curl_wait_for_resolv<pos:position pos:line="148" pos:column="32"/></name><argument_list pos:line="148" pos:column="32">(<argument><expr><name pos:line="148" pos:column="33">conn<pos:position pos:line="148" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="148" pos:column="39">&amp;<pos:position pos:line="148" pos:column="44"/></operator><name pos:line="148" pos:column="40">addr<pos:position pos:line="148" pos:column="44"/></name></expr></argument>)<pos:position pos:line="148" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="46"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="150" pos:column="5">connectport<pos:position pos:line="150" pos:column="16"/></name> <operator pos:line="150" pos:column="17">=<pos:position pos:line="150" pos:column="18"/></operator>
      <operator pos:line="151" pos:column="7">(<pos:position pos:line="151" pos:column="8"/></operator><name pos:line="151" pos:column="8">unsigned<pos:position pos:line="151" pos:column="16"/></name> <name pos:line="151" pos:column="17">short<pos:position pos:line="151" pos:column="22"/></name><operator pos:line="151" pos:column="22">)<pos:position pos:line="151" pos:column="23"/></operator><name><name pos:line="151" pos:column="23">conn<pos:position pos:line="151" pos:column="27"/></name><operator pos:line="151" pos:column="27">-&gt;<pos:position pos:line="151" pos:column="32"/></operator><name pos:line="151" pos:column="29">port<pos:position pos:line="151" pos:column="33"/></name></name></expr>;<pos:position pos:line="151" pos:column="34"/></expr_stmt> <comment type="block" pos:line="151" pos:column="35">/* we connect to the proxy's port */</comment>

  }<pos:position pos:line="153" pos:column="4"/></block></then>
  <else pos:line="154" pos:column="3">else <block pos:line="154" pos:column="8">{
    <comment type="block" pos:line="155" pos:column="5">/* normal, direct, ftp connection */</comment>
    <expr_stmt><expr><name pos:line="156" pos:column="5">rc<pos:position pos:line="156" pos:column="7"/></name> <operator pos:line="156" pos:column="8">=<pos:position pos:line="156" pos:column="9"/></operator> <call><name pos:line="156" pos:column="10">Curl_resolv<pos:position pos:line="156" pos:column="21"/></name><argument_list pos:line="156" pos:column="21">(<argument><expr><name pos:line="156" pos:column="22">conn<pos:position pos:line="156" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="28">newhost<pos:position pos:line="156" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="37">newport<pos:position pos:line="156" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="156" pos:column="46">&amp;<pos:position pos:line="156" pos:column="51"/></operator><name pos:line="156" pos:column="47">addr<pos:position pos:line="156" pos:column="51"/></name></expr></argument>)<pos:position pos:line="156" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="53"/></expr_stmt>
    <if pos:line="157" pos:column="5">if<condition pos:line="157" pos:column="7">(<expr><name pos:line="157" pos:column="8">rc<pos:position pos:line="157" pos:column="10"/></name> <operator pos:line="157" pos:column="11">==<pos:position pos:line="157" pos:column="13"/></operator> <name pos:line="157" pos:column="14">CURLRESOLV_PENDING<pos:position pos:line="157" pos:column="32"/></name></expr>)<pos:position pos:line="157" pos:column="33"/></condition><then pos:line="157" pos:column="33">
      <comment type="block" pos:line="158" pos:column="7">/* BLOCKING */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="159" pos:column="7">rc<pos:position pos:line="159" pos:column="9"/></name> <operator pos:line="159" pos:column="10">=<pos:position pos:line="159" pos:column="11"/></operator> <call><name pos:line="159" pos:column="12">Curl_wait_for_resolv<pos:position pos:line="159" pos:column="32"/></name><argument_list pos:line="159" pos:column="32">(<argument><expr><name pos:line="159" pos:column="33">conn<pos:position pos:line="159" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="159" pos:column="39">&amp;<pos:position pos:line="159" pos:column="44"/></operator><name pos:line="159" pos:column="40">addr<pos:position pos:line="159" pos:column="44"/></name></expr></argument>)<pos:position pos:line="159" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="46"/></expr_stmt></block></then></if>

    <if pos:line="161" pos:column="5">if<condition pos:line="161" pos:column="7">(<expr><operator pos:line="161" pos:column="8">!<pos:position pos:line="161" pos:column="9"/></operator><name pos:line="161" pos:column="9">addr<pos:position pos:line="161" pos:column="13"/></name></expr>)<pos:position pos:line="161" pos:column="14"/></condition><then pos:line="161" pos:column="14"> <block pos:line="161" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="162" pos:column="7">failf<pos:position pos:line="162" pos:column="12"/></name><argument_list pos:line="162" pos:column="12">(<argument><expr><name pos:line="162" pos:column="13">data<pos:position pos:line="162" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="19">"Can't resolve new host %s:%d"<pos:position pos:line="162" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="162" pos:column="51">newhost<pos:position pos:line="162" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="60">newport<pos:position pos:line="162" pos:column="67"/></name></expr></argument>)<pos:position pos:line="162" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="69"/></expr_stmt>
      <return pos:line="163" pos:column="7">return <expr><name pos:line="163" pos:column="14">CURLE_FTP_CANT_GET_HOST<pos:position pos:line="163" pos:column="37"/></name></expr>;<pos:position pos:line="163" pos:column="38"/></return>
    }<pos:position pos:line="164" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="165" pos:column="5">connectport<pos:position pos:line="165" pos:column="16"/></name> <operator pos:line="165" pos:column="17">=<pos:position pos:line="165" pos:column="18"/></operator> <name pos:line="165" pos:column="19">newport<pos:position pos:line="165" pos:column="26"/></name></expr>;<pos:position pos:line="165" pos:column="27"/></expr_stmt> <comment type="block" pos:line="165" pos:column="28">/* we connect to the remote port */</comment>
  }<pos:position pos:line="166" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="168" pos:column="3">result<pos:position pos:line="168" pos:column="9"/></name> <operator pos:line="168" pos:column="10">=<pos:position pos:line="168" pos:column="11"/></operator> <call><name pos:line="168" pos:column="12">Curl_connecthost<pos:position pos:line="168" pos:column="28"/></name><argument_list pos:line="168" pos:column="28">(<argument><expr><name pos:line="168" pos:column="29">conn<pos:position pos:line="168" pos:column="33"/></name></expr></argument>,
                            <argument><expr><name pos:line="169" pos:column="29">addr<pos:position pos:line="169" pos:column="33"/></name></expr></argument>,
                            <argument><expr><operator pos:line="170" pos:column="29">&amp;<pos:position pos:line="170" pos:column="34"/></operator><name><name pos:line="170" pos:column="30">conn<pos:position pos:line="170" pos:column="34"/></name><operator pos:line="170" pos:column="34">-&gt;<pos:position pos:line="170" pos:column="39"/></operator><name pos:line="170" pos:column="36">sock<pos:position pos:line="170" pos:column="40"/></name><index pos:line="170" pos:column="40">[<expr><name pos:line="170" pos:column="41">SECONDARYSOCKET<pos:position pos:line="170" pos:column="56"/></name></expr>]<pos:position pos:line="170" pos:column="57"/></index></name></expr></argument>,
                            <argument><expr><operator pos:line="171" pos:column="29">&amp;<pos:position pos:line="171" pos:column="34"/></operator><name pos:line="171" pos:column="30">conninfo<pos:position pos:line="171" pos:column="38"/></name></expr></argument>,
                            <argument><expr><operator pos:line="172" pos:column="29">&amp;<pos:position pos:line="172" pos:column="34"/></operator><name pos:line="172" pos:column="30">connected<pos:position pos:line="172" pos:column="39"/></name></expr></argument>)<pos:position pos:line="172" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="174" pos:column="3">Curl_resolv_unlock<pos:position pos:line="174" pos:column="21"/></name><argument_list pos:line="174" pos:column="21">(<argument><expr><name pos:line="174" pos:column="22">data<pos:position pos:line="174" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="28">addr<pos:position pos:line="174" pos:column="32"/></name></expr></argument>)<pos:position pos:line="174" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="34"/></expr_stmt> <comment type="block" pos:line="174" pos:column="35">/* we're done using this address */</comment>

  <if pos:line="176" pos:column="3">if<condition pos:line="176" pos:column="5">(<expr><name pos:line="176" pos:column="6">result<pos:position pos:line="176" pos:column="12"/></name> <operator pos:line="176" pos:column="13">&amp;&amp;<pos:position pos:line="176" pos:column="23"/></operator> <name><name pos:line="176" pos:column="16">ftpc<pos:position pos:line="176" pos:column="20"/></name><operator pos:line="176" pos:column="20">-&gt;<pos:position pos:line="176" pos:column="25"/></operator><name pos:line="176" pos:column="22">count1<pos:position pos:line="176" pos:column="28"/></name></name> <operator pos:line="176" pos:column="29">==<pos:position pos:line="176" pos:column="31"/></operator> <literal type="number" pos:line="176" pos:column="32">0<pos:position pos:line="176" pos:column="33"/></literal> <operator pos:line="176" pos:column="34">&amp;&amp;<pos:position pos:line="176" pos:column="44"/></operator> <name pos:line="176" pos:column="37">ftpcode<pos:position pos:line="176" pos:column="44"/></name> <operator pos:line="176" pos:column="45">==<pos:position pos:line="176" pos:column="47"/></operator> <literal type="number" pos:line="176" pos:column="48">229<pos:position pos:line="176" pos:column="51"/></literal></expr>)<pos:position pos:line="176" pos:column="52"/></condition><then pos:line="176" pos:column="52"> <block pos:line="176" pos:column="53">{
    <expr_stmt><expr><call><name pos:line="177" pos:column="5">infof<pos:position pos:line="177" pos:column="10"/></name><argument_list pos:line="177" pos:column="10">(<argument><expr><name pos:line="177" pos:column="11">data<pos:position pos:line="177" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="17">"got positive EPSV response, but can't connect. "<pos:position pos:line="177" pos:column="66"/></literal>
          <literal type="string" pos:line="178" pos:column="11">"Disabling EPSV\n"<pos:position pos:line="178" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="31"/></expr_stmt>
    <comment type="block" pos:line="179" pos:column="5">/* disable it for next transfer */</comment>
    <expr_stmt><expr><name><name pos:line="180" pos:column="5">conn<pos:position pos:line="180" pos:column="9"/></name><operator pos:line="180" pos:column="9">-&gt;<pos:position pos:line="180" pos:column="14"/></operator><name pos:line="180" pos:column="11">bits<pos:position pos:line="180" pos:column="15"/></name><operator pos:line="180" pos:column="15">.<pos:position pos:line="180" pos:column="16"/></operator><name pos:line="180" pos:column="16">ftp_use_epsv<pos:position pos:line="180" pos:column="28"/></name></name> <operator pos:line="180" pos:column="29">=<pos:position pos:line="180" pos:column="30"/></operator> <name pos:line="180" pos:column="31">FALSE<pos:position pos:line="180" pos:column="36"/></name></expr>;<pos:position pos:line="180" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="181" pos:column="5">data<pos:position pos:line="181" pos:column="9"/></name><operator pos:line="181" pos:column="9">-&gt;<pos:position pos:line="181" pos:column="14"/></operator><name pos:line="181" pos:column="11">state<pos:position pos:line="181" pos:column="16"/></name><operator pos:line="181" pos:column="16">.<pos:position pos:line="181" pos:column="17"/></operator><name pos:line="181" pos:column="17">errorbuf<pos:position pos:line="181" pos:column="25"/></name></name> <operator pos:line="181" pos:column="26">=<pos:position pos:line="181" pos:column="27"/></operator> <name pos:line="181" pos:column="28">FALSE<pos:position pos:line="181" pos:column="33"/></name></expr>;<pos:position pos:line="181" pos:column="34"/></expr_stmt> <comment type="block" pos:line="181" pos:column="35">/* allow error message to get rewritten */</comment>
    <expr_stmt><expr><call><name pos:line="182" pos:column="5">NBFTPSENDF<pos:position pos:line="182" pos:column="15"/></name><argument_list pos:line="182" pos:column="15">(<argument><expr><name pos:line="182" pos:column="16">conn<pos:position pos:line="182" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="22">"PASV"<pos:position pos:line="182" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="182" pos:column="30">NULL<pos:position pos:line="182" pos:column="34"/></name></expr></argument>)<pos:position pos:line="182" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="183" pos:column="5">ftpc<pos:position pos:line="183" pos:column="9"/></name><operator pos:line="183" pos:column="9">-&gt;<pos:position pos:line="183" pos:column="14"/></operator><name pos:line="183" pos:column="11">count1<pos:position pos:line="183" pos:column="17"/></name></name><operator pos:line="183" pos:column="17">++<pos:position pos:line="183" pos:column="19"/></operator></expr>;<pos:position pos:line="183" pos:column="20"/></expr_stmt>
    <comment type="block" pos:line="184" pos:column="5">/* remain in the FTP_PASV state */</comment>
    <return pos:line="185" pos:column="5">return <expr><name pos:line="185" pos:column="12">result<pos:position pos:line="185" pos:column="18"/></name></expr>;<pos:position pos:line="185" pos:column="19"/></return>
 }<pos:position pos:line="186" pos:column="3"/></block></then></if>

  <if pos:line="188" pos:column="3">if<condition pos:line="188" pos:column="5">(<expr><name pos:line="188" pos:column="6">result<pos:position pos:line="188" pos:column="12"/></name></expr>)<pos:position pos:line="188" pos:column="13"/></condition><then pos:line="188" pos:column="13">
    <block type="pseudo"><return pos:line="189" pos:column="5">return <expr><name pos:line="189" pos:column="12">result<pos:position pos:line="189" pos:column="18"/></name></expr>;<pos:position pos:line="189" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="191" pos:column="3">conn<pos:position pos:line="191" pos:column="7"/></name><operator pos:line="191" pos:column="7">-&gt;<pos:position pos:line="191" pos:column="12"/></operator><name pos:line="191" pos:column="9">bits<pos:position pos:line="191" pos:column="13"/></name><operator pos:line="191" pos:column="13">.<pos:position pos:line="191" pos:column="14"/></operator><name pos:line="191" pos:column="14">tcpconnect<pos:position pos:line="191" pos:column="24"/></name></name> <operator pos:line="191" pos:column="25">=<pos:position pos:line="191" pos:column="26"/></operator> <name pos:line="191" pos:column="27">connected<pos:position pos:line="191" pos:column="36"/></name></expr>;<pos:position pos:line="191" pos:column="37"/></expr_stmt> <comment type="block" pos:line="191" pos:column="38">/* simply TRUE or FALSE */</comment>

  <comment type="block" pos:line="193" pos:column="3">/*
   * When this is used from the multi interface, this might've returned with
   * the 'connected' set to FALSE and thus we are now awaiting a non-blocking
   * connect to connect and we should not be "hanging" here waiting.
   */</comment>

  <if pos:line="199" pos:column="3">if<condition pos:line="199" pos:column="5">(<expr><name><name pos:line="199" pos:column="6">data<pos:position pos:line="199" pos:column="10"/></name><operator pos:line="199" pos:column="10">-&gt;<pos:position pos:line="199" pos:column="15"/></operator><name pos:line="199" pos:column="12">set<pos:position pos:line="199" pos:column="15"/></name><operator pos:line="199" pos:column="15">.<pos:position pos:line="199" pos:column="16"/></operator><name pos:line="199" pos:column="16">verbose<pos:position pos:line="199" pos:column="23"/></name></name></expr>)<pos:position pos:line="199" pos:column="24"/></condition><then pos:line="199" pos:column="24">
    <comment type="block" pos:line="200" pos:column="5">/* this just dumps information about this second connection */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="201" pos:column="5">ftp_pasv_verbose<pos:position pos:line="201" pos:column="21"/></name><argument_list pos:line="201" pos:column="21">(<argument><expr><name pos:line="201" pos:column="22">conn<pos:position pos:line="201" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="28">conninfo<pos:position pos:line="201" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="38">newhost<pos:position pos:line="201" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="47">connectport<pos:position pos:line="201" pos:column="58"/></name></expr></argument>)<pos:position pos:line="201" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="60"/></expr_stmt></block></then></if>

  <switch pos:line="203" pos:column="3">switch<condition pos:line="203" pos:column="9">(<expr><name><name pos:line="203" pos:column="10">data<pos:position pos:line="203" pos:column="14"/></name><operator pos:line="203" pos:column="14">-&gt;<pos:position pos:line="203" pos:column="19"/></operator><name pos:line="203" pos:column="16">set<pos:position pos:line="203" pos:column="19"/></name><operator pos:line="203" pos:column="19">.<pos:position pos:line="203" pos:column="20"/></operator><name pos:line="203" pos:column="20">proxytype<pos:position pos:line="203" pos:column="29"/></name></name></expr>)<pos:position pos:line="203" pos:column="30"/></condition> <block pos:line="203" pos:column="31">{
  <case pos:line="204" pos:column="3">case <expr><name pos:line="204" pos:column="8">CURLPROXY_SOCKS5<pos:position pos:line="204" pos:column="24"/></name></expr>:<pos:position pos:line="204" pos:column="25"/></case>
  <case pos:line="205" pos:column="3">case <expr><name pos:line="205" pos:column="8">CURLPROXY_SOCKS5_HOSTNAME<pos:position pos:line="205" pos:column="33"/></name></expr>:<pos:position pos:line="205" pos:column="34"/></case>
    <expr_stmt><expr><name pos:line="206" pos:column="5">result<pos:position pos:line="206" pos:column="11"/></name> <operator pos:line="206" pos:column="12">=<pos:position pos:line="206" pos:column="13"/></operator> <call><name pos:line="206" pos:column="14">Curl_SOCKS5<pos:position pos:line="206" pos:column="25"/></name><argument_list pos:line="206" pos:column="25">(<argument><expr><name><name pos:line="206" pos:column="26">conn<pos:position pos:line="206" pos:column="30"/></name><operator pos:line="206" pos:column="30">-&gt;<pos:position pos:line="206" pos:column="35"/></operator><name pos:line="206" pos:column="32">proxyuser<pos:position pos:line="206" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="206" pos:column="43">conn<pos:position pos:line="206" pos:column="47"/></name><operator pos:line="206" pos:column="47">-&gt;<pos:position pos:line="206" pos:column="52"/></operator><name pos:line="206" pos:column="49">proxypasswd<pos:position pos:line="206" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="62">newhost<pos:position pos:line="206" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="71">newport<pos:position pos:line="206" pos:column="78"/></name></expr></argument>,
                         <argument><expr><name pos:line="207" pos:column="26">SECONDARYSOCKET<pos:position pos:line="207" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="43">conn<pos:position pos:line="207" pos:column="47"/></name></expr></argument>)<pos:position pos:line="207" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="49"/></expr_stmt>
    <break pos:line="208" pos:column="5">break;<pos:position pos:line="208" pos:column="11"/></break>
  <case pos:line="209" pos:column="3">case <expr><name pos:line="209" pos:column="8">CURLPROXY_HTTP<pos:position pos:line="209" pos:column="22"/></name></expr>:<pos:position pos:line="209" pos:column="23"/></case>
    <comment type="block" pos:line="210" pos:column="5">/* do nothing here. handled later. */</comment>
    <break pos:line="211" pos:column="5">break;<pos:position pos:line="211" pos:column="11"/></break>
  <case pos:line="212" pos:column="3">case <expr><name pos:line="212" pos:column="8">CURLPROXY_SOCKS4<pos:position pos:line="212" pos:column="24"/></name></expr>:<pos:position pos:line="212" pos:column="25"/></case>
    <expr_stmt><expr><name pos:line="213" pos:column="5">result<pos:position pos:line="213" pos:column="11"/></name> <operator pos:line="213" pos:column="12">=<pos:position pos:line="213" pos:column="13"/></operator> <call><name pos:line="213" pos:column="14">Curl_SOCKS4<pos:position pos:line="213" pos:column="25"/></name><argument_list pos:line="213" pos:column="25">(<argument><expr><name><name pos:line="213" pos:column="26">conn<pos:position pos:line="213" pos:column="30"/></name><operator pos:line="213" pos:column="30">-&gt;<pos:position pos:line="213" pos:column="35"/></operator><name pos:line="213" pos:column="32">proxyuser<pos:position pos:line="213" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="43">newhost<pos:position pos:line="213" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="52">newport<pos:position pos:line="213" pos:column="59"/></name></expr></argument>,
                         <argument><expr><name pos:line="214" pos:column="26">SECONDARYSOCKET<pos:position pos:line="214" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="43">conn<pos:position pos:line="214" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="49">FALSE<pos:position pos:line="214" pos:column="54"/></name></expr></argument>)<pos:position pos:line="214" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="56"/></expr_stmt>
    <break pos:line="215" pos:column="5">break;<pos:position pos:line="215" pos:column="11"/></break>
  <case pos:line="216" pos:column="3">case <expr><name pos:line="216" pos:column="8">CURLPROXY_SOCKS4A<pos:position pos:line="216" pos:column="25"/></name></expr>:<pos:position pos:line="216" pos:column="26"/></case>
    <expr_stmt><expr><name pos:line="217" pos:column="5">result<pos:position pos:line="217" pos:column="11"/></name> <operator pos:line="217" pos:column="12">=<pos:position pos:line="217" pos:column="13"/></operator> <call><name pos:line="217" pos:column="14">Curl_SOCKS4<pos:position pos:line="217" pos:column="25"/></name><argument_list pos:line="217" pos:column="25">(<argument><expr><name><name pos:line="217" pos:column="26">conn<pos:position pos:line="217" pos:column="30"/></name><operator pos:line="217" pos:column="30">-&gt;<pos:position pos:line="217" pos:column="35"/></operator><name pos:line="217" pos:column="32">proxyuser<pos:position pos:line="217" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="43">newhost<pos:position pos:line="217" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="52">newport<pos:position pos:line="217" pos:column="59"/></name></expr></argument>,
                         <argument><expr><name pos:line="218" pos:column="26">SECONDARYSOCKET<pos:position pos:line="218" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="43">conn<pos:position pos:line="218" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="49">TRUE<pos:position pos:line="218" pos:column="53"/></name></expr></argument>)<pos:position pos:line="218" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="55"/></expr_stmt>
    <break pos:line="219" pos:column="5">break;<pos:position pos:line="219" pos:column="11"/></break>
  <default pos:line="220" pos:column="3">default:<pos:position pos:line="220" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="221" pos:column="5">failf<pos:position pos:line="221" pos:column="10"/></name><argument_list pos:line="221" pos:column="10">(<argument><expr><name pos:line="221" pos:column="11">data<pos:position pos:line="221" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="221" pos:column="17">"unknown proxytype option given"<pos:position pos:line="221" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="221" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="222" pos:column="5">result<pos:position pos:line="222" pos:column="11"/></name> <operator pos:line="222" pos:column="12">=<pos:position pos:line="222" pos:column="13"/></operator> <name pos:line="222" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="222" pos:column="35"/></name></expr>;<pos:position pos:line="222" pos:column="36"/></expr_stmt>
    <break pos:line="223" pos:column="5">break;<pos:position pos:line="223" pos:column="11"/></break>
  }<pos:position pos:line="224" pos:column="4"/></block></switch>
<cpp:ifndef pos:line="225" pos:column="1">#<cpp:directive pos:line="225" pos:column="2">ifndef<pos:position pos:line="225" pos:column="8"/></cpp:directive> <name pos:line="225" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="225" pos:column="26"/></name></cpp:ifndef>
  <if pos:line="226" pos:column="3">if<condition pos:line="226" pos:column="5">(<expr><name><name pos:line="226" pos:column="6">conn<pos:position pos:line="226" pos:column="10"/></name><operator pos:line="226" pos:column="10">-&gt;<pos:position pos:line="226" pos:column="15"/></operator><name pos:line="226" pos:column="12">bits<pos:position pos:line="226" pos:column="16"/></name><operator pos:line="226" pos:column="16">.<pos:position pos:line="226" pos:column="17"/></operator><name pos:line="226" pos:column="17">tunnel_proxy<pos:position pos:line="226" pos:column="29"/></name></name> <operator pos:line="226" pos:column="30">&amp;&amp;<pos:position pos:line="226" pos:column="40"/></operator> <name><name pos:line="226" pos:column="33">conn<pos:position pos:line="226" pos:column="37"/></name><operator pos:line="226" pos:column="37">-&gt;<pos:position pos:line="226" pos:column="42"/></operator><name pos:line="226" pos:column="39">bits<pos:position pos:line="226" pos:column="43"/></name><operator pos:line="226" pos:column="43">.<pos:position pos:line="226" pos:column="44"/></operator><name pos:line="226" pos:column="44">httpproxy<pos:position pos:line="226" pos:column="53"/></name></name></expr>)<pos:position pos:line="226" pos:column="54"/></condition><then pos:line="226" pos:column="54"> <block pos:line="226" pos:column="55">{
    <comment type="block" pos:line="227" pos:column="5">/* FIX: this MUST wait for a proper connect first if 'connected' is
     * FALSE */</comment>

    <comment type="block" pos:line="230" pos:column="5">/* BLOCKING */</comment>
    <comment type="block" pos:line="231" pos:column="5">/* We want "seamless" FTP operations through HTTP proxy tunnel */</comment>

    <comment type="block" pos:line="233" pos:column="5">/* Curl_proxyCONNECT is based on a pointer to a struct HTTP at the member
     * conn-&gt;proto.http; we want FTP through HTTP and we have to change the
     * member temporarily for connecting to the HTTP proxy. After
     * Curl_proxyCONNECT we have to set back the member to the original struct
     * FTP pointer
     */</comment>
    <decl_stmt><decl><type><name><name pos:line="239" pos:column="5">struct<pos:position pos:line="239" pos:column="11"/></name> <name pos:line="239" pos:column="12">HTTP<pos:position pos:line="239" pos:column="16"/></name></name></type> <name pos:line="239" pos:column="17">http_proxy<pos:position pos:line="239" pos:column="27"/></name></decl>;<pos:position pos:line="239" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="240" pos:column="5">struct<pos:position pos:line="240" pos:column="11"/></name> <name pos:line="240" pos:column="12">FTP<pos:position pos:line="240" pos:column="15"/></name></name> <modifier pos:line="240" pos:column="16">*<pos:position pos:line="240" pos:column="17"/></modifier></type><name pos:line="240" pos:column="17">ftp_save<pos:position pos:line="240" pos:column="25"/></name> <init pos:line="240" pos:column="26">= <expr><name><name pos:line="240" pos:column="28">data<pos:position pos:line="240" pos:column="32"/></name><operator pos:line="240" pos:column="32">-&gt;<pos:position pos:line="240" pos:column="37"/></operator><name pos:line="240" pos:column="34">state<pos:position pos:line="240" pos:column="39"/></name><operator pos:line="240" pos:column="39">.<pos:position pos:line="240" pos:column="40"/></operator><name pos:line="240" pos:column="40">proto<pos:position pos:line="240" pos:column="45"/></name><operator pos:line="240" pos:column="45">.<pos:position pos:line="240" pos:column="46"/></operator><name pos:line="240" pos:column="46">ftp<pos:position pos:line="240" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="240" pos:column="50"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="241" pos:column="5">memset<pos:position pos:line="241" pos:column="11"/></name><argument_list pos:line="241" pos:column="11">(<argument><expr><operator pos:line="241" pos:column="12">&amp;<pos:position pos:line="241" pos:column="17"/></operator><name pos:line="241" pos:column="13">http_proxy<pos:position pos:line="241" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="241" pos:column="25">0<pos:position pos:line="241" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="241" pos:column="28">sizeof<argument_list pos:line="241" pos:column="34">(<argument><expr><name pos:line="241" pos:column="35">http_proxy<pos:position pos:line="241" pos:column="45"/></name></expr></argument>)<pos:position pos:line="241" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="241" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="242" pos:column="5">data<pos:position pos:line="242" pos:column="9"/></name><operator pos:line="242" pos:column="9">-&gt;<pos:position pos:line="242" pos:column="14"/></operator><name pos:line="242" pos:column="11">state<pos:position pos:line="242" pos:column="16"/></name><operator pos:line="242" pos:column="16">.<pos:position pos:line="242" pos:column="17"/></operator><name pos:line="242" pos:column="17">proto<pos:position pos:line="242" pos:column="22"/></name><operator pos:line="242" pos:column="22">.<pos:position pos:line="242" pos:column="23"/></operator><name pos:line="242" pos:column="23">http<pos:position pos:line="242" pos:column="27"/></name></name> <operator pos:line="242" pos:column="28">=<pos:position pos:line="242" pos:column="29"/></operator> <operator pos:line="242" pos:column="30">&amp;<pos:position pos:line="242" pos:column="35"/></operator><name pos:line="242" pos:column="31">http_proxy<pos:position pos:line="242" pos:column="41"/></name></expr>;<pos:position pos:line="242" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><name pos:line="244" pos:column="5">result<pos:position pos:line="244" pos:column="11"/></name> <operator pos:line="244" pos:column="12">=<pos:position pos:line="244" pos:column="13"/></operator> <call><name pos:line="244" pos:column="14">Curl_proxyCONNECT<pos:position pos:line="244" pos:column="31"/></name><argument_list pos:line="244" pos:column="31">(<argument><expr><name pos:line="244" pos:column="32">conn<pos:position pos:line="244" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="244" pos:column="38">SECONDARYSOCKET<pos:position pos:line="244" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="244" pos:column="55">newhost<pos:position pos:line="244" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="244" pos:column="64">newport<pos:position pos:line="244" pos:column="71"/></name></expr></argument>)<pos:position pos:line="244" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="73"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="246" pos:column="5">data<pos:position pos:line="246" pos:column="9"/></name><operator pos:line="246" pos:column="9">-&gt;<pos:position pos:line="246" pos:column="14"/></operator><name pos:line="246" pos:column="11">state<pos:position pos:line="246" pos:column="16"/></name><operator pos:line="246" pos:column="16">.<pos:position pos:line="246" pos:column="17"/></operator><name pos:line="246" pos:column="17">proto<pos:position pos:line="246" pos:column="22"/></name><operator pos:line="246" pos:column="22">.<pos:position pos:line="246" pos:column="23"/></operator><name pos:line="246" pos:column="23">ftp<pos:position pos:line="246" pos:column="26"/></name></name> <operator pos:line="246" pos:column="27">=<pos:position pos:line="246" pos:column="28"/></operator> <name pos:line="246" pos:column="29">ftp_save<pos:position pos:line="246" pos:column="37"/></name></expr>;<pos:position pos:line="246" pos:column="38"/></expr_stmt>

    <if pos:line="248" pos:column="5">if<condition pos:line="248" pos:column="7">(<expr><name pos:line="248" pos:column="8">CURLE_OK<pos:position pos:line="248" pos:column="16"/></name> <operator pos:line="248" pos:column="17">!=<pos:position pos:line="248" pos:column="19"/></operator> <name pos:line="248" pos:column="20">result<pos:position pos:line="248" pos:column="26"/></name></expr>)<pos:position pos:line="248" pos:column="27"/></condition><then pos:line="248" pos:column="27">
      <block type="pseudo"><return pos:line="249" pos:column="7">return <expr><name pos:line="249" pos:column="14">result<pos:position pos:line="249" pos:column="20"/></name></expr>;<pos:position pos:line="249" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="250" pos:column="4"/></block></then></if>
<cpp:endif pos:line="251" pos:column="1">#<cpp:directive pos:line="251" pos:column="2">endif<pos:position pos:line="251" pos:column="7"/></cpp:directive></cpp:endif>   <comment type="block" pos:line="251" pos:column="10">/* CURL_DISABLE_HTTP */</comment>

  <expr_stmt><expr><call><name pos:line="253" pos:column="3">state<pos:position pos:line="253" pos:column="8"/></name><argument_list pos:line="253" pos:column="8">(<argument><expr><name pos:line="253" pos:column="9">conn<pos:position pos:line="253" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="15">FTP_STOP<pos:position pos:line="253" pos:column="23"/></name></expr></argument>)<pos:position pos:line="253" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="25"/></expr_stmt> <comment type="block" pos:line="253" pos:column="26">/* this phase is completed */</comment>

  <return pos:line="255" pos:column="3">return <expr><name pos:line="255" pos:column="10">result<pos:position pos:line="255" pos:column="16"/></name></expr>;<pos:position pos:line="255" pos:column="17"/></return>
}<pos:position pos:line="256" pos:column="2"/></block></function></unit>

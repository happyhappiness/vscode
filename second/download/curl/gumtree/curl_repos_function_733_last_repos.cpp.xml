<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_733_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">win32_perror<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">msg<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><literal type="number" pos:line="3" pos:column="12">512<pos:position pos:line="3" pos:column="15"/></literal></expr>]<pos:position pos:line="3" pos:column="16"/></index></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">DWORD<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">err<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">SOCKERRNO<pos:position pos:line="4" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><operator pos:line="6" pos:column="6">!<pos:position pos:line="6" pos:column="7"/></operator><call><name pos:line="6" pos:column="7">FormatMessage<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">FORMAT_MESSAGE_FROM_SYSTEM<pos:position pos:line="6" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="49">NULL<pos:position pos:line="6" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="55">err<pos:position pos:line="6" pos:column="58"/></name></expr></argument>,
                    <argument><expr><name pos:line="7" pos:column="21">LANG_NEUTRAL<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="35">buf<pos:position pos:line="7" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="40">sizeof<argument_list pos:line="7" pos:column="46">(<argument><expr><name pos:line="7" pos:column="47">buf<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="7" pos:column="53">NULL<pos:position pos:line="7" pos:column="57"/></name></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="59"/></condition><then pos:line="7" pos:column="59">
     <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="6">snprintf<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">buf<pos:position pos:line="8" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="20">sizeof<argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">buf<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="33">"Unknown error %lu (%#lx)"<pos:position pos:line="8" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="61">err<pos:position pos:line="8" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="66">err<pos:position pos:line="8" pos:column="69"/></name></expr></argument>)<pos:position pos:line="8" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="71"/></expr_stmt></block></then></if>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">msg<pos:position pos:line="9" pos:column="9"/></name></expr>)<pos:position pos:line="9" pos:column="10"/></condition><then pos:line="9" pos:column="10">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="5">fprintf<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">stderr<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="21">"%s: "<pos:position pos:line="10" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="29">msg<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">fprintf<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><name pos:line="11" pos:column="11">stderr<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"%s\n"<pos:position pos:line="11" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="27">buf<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

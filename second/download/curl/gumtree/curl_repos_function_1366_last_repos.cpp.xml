<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1366_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_SOCKS5<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">proxy_user<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
                     <parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">proxy_password<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
                     <parameter><decl><type><specifier pos:line="3" pos:column="22">const<pos:position pos:line="3" pos:column="27"/></specifier> <name pos:line="3" pos:column="28">char<pos:position pos:line="3" pos:column="32"/></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">hostname<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="4" pos:column="22">int<pos:position pos:line="4" pos:column="25"/></name></type> <name pos:line="4" pos:column="26">remote_port<pos:position pos:line="4" pos:column="37"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="5" pos:column="22">int<pos:position pos:line="5" pos:column="25"/></name></type> <name pos:line="5" pos:column="26">sockindex<pos:position pos:line="5" pos:column="35"/></name></decl></parameter>,
                     <parameter><decl><type><name><name pos:line="6" pos:column="22">struct<pos:position pos:line="6" pos:column="28"/></name> <name pos:line="6" pos:column="29">connectdata<pos:position pos:line="6" pos:column="40"/></name></name> <modifier pos:line="6" pos:column="41">*<pos:position pos:line="6" pos:column="42"/></modifier></type><name pos:line="6" pos:column="42">conn<pos:position pos:line="6" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="47"/></parameter_list>
<block pos:line="7" pos:column="1">{
  <comment type="block" pos:line="8" pos:column="3">/*
    According to the RFC1928, section "6.  Replies". This is what a SOCK5
    replies:

        +----+-----+-------+------+----------+----------+
        |VER | REP |  RSV  | ATYP | BND.ADDR | BND.PORT |
        +----+-----+-------+------+----------+----------+
        | 1  |  1  | X'00' |  1   | Variable |    2     |
        +----+-----+-------+------+----------+----------+

    Where:

    o  VER    protocol version: X'05'
    o  REP    Reply field:
    o  X'00' succeeded
  */</comment>

  <decl_stmt><decl><type><name pos:line="25" pos:column="3">unsigned<pos:position pos:line="25" pos:column="11"/></name> <name pos:line="25" pos:column="12">char<pos:position pos:line="25" pos:column="16"/></name></type> <name><name pos:line="25" pos:column="17">socksreq<pos:position pos:line="25" pos:column="25"/></name><index pos:line="25" pos:column="25">[<expr><literal type="number" pos:line="25" pos:column="26">600<pos:position pos:line="25" pos:column="29"/></literal></expr>]<pos:position pos:line="25" pos:column="30"/></index></name></decl>;<pos:position pos:line="25" pos:column="31"/></decl_stmt> <comment type="block" pos:line="25" pos:column="32">/* room for large user/pw (255 max each) */</comment>
  <decl_stmt><decl><type><name pos:line="26" pos:column="3">int<pos:position pos:line="26" pos:column="6"/></name></type> <name pos:line="26" pos:column="7">idx<pos:position pos:line="26" pos:column="10"/></name></decl>;<pos:position pos:line="26" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="27" pos:column="3">ssize_t<pos:position pos:line="27" pos:column="10"/></name></type> <name pos:line="27" pos:column="11">actualread<pos:position pos:line="27" pos:column="21"/></name></decl>;<pos:position pos:line="27" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="28" pos:column="3">ssize_t<pos:position pos:line="28" pos:column="10"/></name></type> <name pos:line="28" pos:column="11">written<pos:position pos:line="28" pos:column="18"/></name></decl>;<pos:position pos:line="28" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="29" pos:column="3">int<pos:position pos:line="29" pos:column="6"/></name></type> <name pos:line="29" pos:column="7">result<pos:position pos:line="29" pos:column="13"/></name></decl>;<pos:position pos:line="29" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="30" pos:column="3">CURLcode<pos:position pos:line="30" pos:column="11"/></name></type> <name pos:line="30" pos:column="12">code<pos:position pos:line="30" pos:column="16"/></name></decl>;<pos:position pos:line="30" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="31" pos:column="3">curl_socket_t<pos:position pos:line="31" pos:column="16"/></name></type> <name pos:line="31" pos:column="17">sock<pos:position pos:line="31" pos:column="21"/></name> <init pos:line="31" pos:column="22">= <expr><name><name pos:line="31" pos:column="24">conn<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">-&gt;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="30">sock<pos:position pos:line="31" pos:column="34"/></name><index pos:line="31" pos:column="34">[<expr><name pos:line="31" pos:column="35">sockindex<pos:position pos:line="31" pos:column="44"/></name></expr>]<pos:position pos:line="31" pos:column="45"/></index></name></expr></init></decl>;<pos:position pos:line="31" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="32" pos:column="3">struct<pos:position pos:line="32" pos:column="9"/></name> <name pos:line="32" pos:column="10">Curl_easy<pos:position pos:line="32" pos:column="19"/></name></name> <modifier pos:line="32" pos:column="20">*<pos:position pos:line="32" pos:column="21"/></modifier></type><name pos:line="32" pos:column="21">data<pos:position pos:line="32" pos:column="25"/></name> <init pos:line="32" pos:column="26">= <expr><name><name pos:line="32" pos:column="28">conn<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">-&gt;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="34">data<pos:position pos:line="32" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="32" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="33" pos:column="3">time_t<pos:position pos:line="33" pos:column="9"/></name></type> <name pos:line="33" pos:column="10">timeout<pos:position pos:line="33" pos:column="17"/></name></decl>;<pos:position pos:line="33" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="34" pos:column="3">bool<pos:position pos:line="34" pos:column="7"/></name></type> <name pos:line="34" pos:column="8">socks5_resolve_local<pos:position pos:line="34" pos:column="28"/></name> <init pos:line="34" pos:column="29">=
    <expr><ternary><condition><expr><operator pos:line="35" pos:column="5">(<pos:position pos:line="35" pos:column="6"/></operator><name><name pos:line="35" pos:column="6">conn<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">socks_proxy<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">.<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="24">proxytype<pos:position pos:line="35" pos:column="33"/></name></name> <operator pos:line="35" pos:column="34">==<pos:position pos:line="35" pos:column="36"/></operator> <name pos:line="35" pos:column="37">CURLPROXY_SOCKS5<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">)<pos:position pos:line="35" pos:column="54"/></operator></expr> ?<pos:position pos:line="35" pos:column="56"/></condition><then pos:line="35" pos:column="56"> <expr><name pos:line="35" pos:column="57">TRUE<pos:position pos:line="35" pos:column="61"/></name></expr> <pos:position pos:line="35" pos:column="62"/></then><else pos:line="35" pos:column="62">: <expr><name pos:line="35" pos:column="64">FALSE<pos:position pos:line="35" pos:column="69"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="35" pos:column="70"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="36" pos:column="3">const<pos:position pos:line="36" pos:column="8"/></specifier> <name pos:line="36" pos:column="9">size_t<pos:position pos:line="36" pos:column="15"/></name></type> <name pos:line="36" pos:column="16">hostname_len<pos:position pos:line="36" pos:column="28"/></name> <init pos:line="36" pos:column="29">= <expr><call><name pos:line="36" pos:column="31">strlen<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">(<argument><expr><name pos:line="36" pos:column="38">hostname<pos:position pos:line="36" pos:column="46"/></name></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="37" pos:column="3">ssize_t<pos:position pos:line="37" pos:column="10"/></name></type> <name pos:line="37" pos:column="11">len<pos:position pos:line="37" pos:column="14"/></name> <init pos:line="37" pos:column="15">= <expr><literal type="number" pos:line="37" pos:column="17">0<pos:position pos:line="37" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="37" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="38" pos:column="3">const<pos:position pos:line="38" pos:column="8"/></specifier> <name pos:line="38" pos:column="9">unsigned<pos:position pos:line="38" pos:column="17"/></name> <name pos:line="38" pos:column="18">long<pos:position pos:line="38" pos:column="22"/></name></type> <name pos:line="38" pos:column="23">auth<pos:position pos:line="38" pos:column="27"/></name> <init pos:line="38" pos:column="28">= <expr><name><name pos:line="38" pos:column="30">data<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">set<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">.<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="40">socks5auth<pos:position pos:line="38" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="38" pos:column="51"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="39" pos:column="3">bool<pos:position pos:line="39" pos:column="7"/></name></type> <name pos:line="39" pos:column="8">allow_gssapi<pos:position pos:line="39" pos:column="20"/></name> <init pos:line="39" pos:column="21">= <expr><name pos:line="39" pos:column="23">FALSE<pos:position pos:line="39" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="39" pos:column="29"/></decl_stmt>

  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><name><name pos:line="41" pos:column="6">conn<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">bits<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">.<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">httpproxy<pos:position pos:line="41" pos:column="26"/></name></name></expr>)<pos:position pos:line="41" pos:column="27"/></condition><then pos:line="41" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="5">infof<pos:position pos:line="42" pos:column="10"/></name><argument_list pos:line="42" pos:column="10">(<argument><expr><name><name pos:line="42" pos:column="11">conn<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">-&gt;<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="17">data<pos:position pos:line="42" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="23">"SOCKS5: connecting to HTTP proxy %s port %d\n"<pos:position pos:line="42" pos:column="70"/></literal></expr></argument>,
          <argument><expr><name pos:line="43" pos:column="11">hostname<pos:position pos:line="43" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="21">remote_port<pos:position pos:line="43" pos:column="32"/></name></expr></argument>)<pos:position pos:line="43" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="45" pos:column="3">/* RFC1928 chapter 5 specifies max 255 chars for domain name in packet */</comment>
  <if pos:line="46" pos:column="3">if<condition pos:line="46" pos:column="5">(<expr><operator pos:line="46" pos:column="6">!<pos:position pos:line="46" pos:column="7"/></operator><name pos:line="46" pos:column="7">socks5_resolve_local<pos:position pos:line="46" pos:column="27"/></name> <operator pos:line="46" pos:column="28">&amp;&amp;<pos:position pos:line="46" pos:column="38"/></operator> <name pos:line="46" pos:column="31">hostname_len<pos:position pos:line="46" pos:column="43"/></name> <operator pos:line="46" pos:column="44">&gt;<pos:position pos:line="46" pos:column="48"/></operator> <literal type="number" pos:line="46" pos:column="46">255<pos:position pos:line="46" pos:column="49"/></literal></expr>)<pos:position pos:line="46" pos:column="50"/></condition><then pos:line="46" pos:column="50"> <block pos:line="46" pos:column="51">{
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">infof<pos:position pos:line="47" pos:column="10"/></name><argument_list pos:line="47" pos:column="10">(<argument><expr><name><name pos:line="47" pos:column="11">conn<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">-&gt;<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="17">data<pos:position pos:line="47" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="23">"SOCKS5: server resolving disabled for hostnames of "<pos:position pos:line="47" pos:column="76"/></literal>
          <literal type="string" pos:line="48" pos:column="11">"length &gt; 255 [actual len=%zu]\n"<pos:position pos:line="48" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="46">hostname_len<pos:position pos:line="48" pos:column="58"/></name></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">socks5_resolve_local<pos:position pos:line="49" pos:column="25"/></name> <operator pos:line="49" pos:column="26">=<pos:position pos:line="49" pos:column="27"/></operator> <name pos:line="49" pos:column="28">TRUE<pos:position pos:line="49" pos:column="32"/></name></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="52" pos:column="3">/* get timeout */</comment>
  <expr_stmt><expr><name pos:line="53" pos:column="3">timeout<pos:position pos:line="53" pos:column="10"/></name> <operator pos:line="53" pos:column="11">=<pos:position pos:line="53" pos:column="12"/></operator> <call><name pos:line="53" pos:column="13">Curl_timeleft<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">data<pos:position pos:line="53" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="33">NULL<pos:position pos:line="53" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="39">TRUE<pos:position pos:line="53" pos:column="43"/></name></expr></argument>)<pos:position pos:line="53" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="45"/></expr_stmt>

  <if pos:line="55" pos:column="3">if<condition pos:line="55" pos:column="5">(<expr><name pos:line="55" pos:column="6">timeout<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">&lt;<pos:position pos:line="55" pos:column="18"/></operator> <literal type="number" pos:line="55" pos:column="16">0<pos:position pos:line="55" pos:column="17"/></literal></expr>)<pos:position pos:line="55" pos:column="18"/></condition><then pos:line="55" pos:column="18"> <block pos:line="55" pos:column="19">{
    <comment type="block" pos:line="56" pos:column="5">/* time-out, bail out, go home */</comment>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">failf<pos:position pos:line="57" pos:column="10"/></name><argument_list pos:line="57" pos:column="10">(<argument><expr><name pos:line="57" pos:column="11">data<pos:position pos:line="57" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="17">"Connection time-out"<pos:position pos:line="57" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="40"/></expr_stmt>
    <return pos:line="58" pos:column="5">return <expr><name pos:line="58" pos:column="12">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="58" pos:column="36"/></name></expr>;<pos:position pos:line="58" pos:column="37"/></return>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="61" pos:column="3">(<pos:position pos:line="61" pos:column="4"/></operator><name pos:line="61" pos:column="4">void<pos:position pos:line="61" pos:column="8"/></name><operator pos:line="61" pos:column="8">)<pos:position pos:line="61" pos:column="9"/></operator><call><name pos:line="61" pos:column="9">curlx_nonblock<pos:position pos:line="61" pos:column="23"/></name><argument_list pos:line="61" pos:column="23">(<argument><expr><name pos:line="61" pos:column="24">sock<pos:position pos:line="61" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="30">TRUE<pos:position pos:line="61" pos:column="34"/></name></expr></argument>)<pos:position pos:line="61" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="63" pos:column="3">/* wait until socket gets connected */</comment>
  <expr_stmt><expr><name pos:line="64" pos:column="3">result<pos:position pos:line="64" pos:column="9"/></name> <operator pos:line="64" pos:column="10">=<pos:position pos:line="64" pos:column="11"/></operator> <call><name pos:line="64" pos:column="12">SOCKET_WRITABLE<pos:position pos:line="64" pos:column="27"/></name><argument_list pos:line="64" pos:column="27">(<argument><expr><name pos:line="64" pos:column="28">sock<pos:position pos:line="64" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="34">timeout<pos:position pos:line="64" pos:column="41"/></name></expr></argument>)<pos:position pos:line="64" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="43"/></expr_stmt>

  <if pos:line="66" pos:column="3">if<condition pos:line="66" pos:column="5">(<expr><operator pos:line="66" pos:column="6">-<pos:position pos:line="66" pos:column="7"/></operator><literal type="number" pos:line="66" pos:column="7">1<pos:position pos:line="66" pos:column="8"/></literal> <operator pos:line="66" pos:column="9">==<pos:position pos:line="66" pos:column="11"/></operator> <name pos:line="66" pos:column="12">result<pos:position pos:line="66" pos:column="18"/></name></expr>)<pos:position pos:line="66" pos:column="19"/></condition><then pos:line="66" pos:column="19"> <block pos:line="66" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">failf<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><name><name pos:line="67" pos:column="11">conn<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">-&gt;<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="17">data<pos:position pos:line="67" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="23">"SOCKS5: no connection here"<pos:position pos:line="67" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="53"/></expr_stmt>
    <return pos:line="68" pos:column="5">return <expr><name pos:line="68" pos:column="12">CURLE_COULDNT_CONNECT<pos:position pos:line="68" pos:column="33"/></name></expr>;<pos:position pos:line="68" pos:column="34"/></return>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>
  <if pos:line="70" pos:column="3">if<condition pos:line="70" pos:column="5">(<expr><literal type="number" pos:line="70" pos:column="6">0<pos:position pos:line="70" pos:column="7"/></literal> <operator pos:line="70" pos:column="8">==<pos:position pos:line="70" pos:column="10"/></operator> <name pos:line="70" pos:column="11">result<pos:position pos:line="70" pos:column="17"/></name></expr>)<pos:position pos:line="70" pos:column="18"/></condition><then pos:line="70" pos:column="18"> <block pos:line="70" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">failf<pos:position pos:line="71" pos:column="10"/></name><argument_list pos:line="71" pos:column="10">(<argument><expr><name><name pos:line="71" pos:column="11">conn<pos:position pos:line="71" pos:column="15"/></name><operator pos:line="71" pos:column="15">-&gt;<pos:position pos:line="71" pos:column="20"/></operator><name pos:line="71" pos:column="17">data<pos:position pos:line="71" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="23">"SOCKS5: connection timeout"<pos:position pos:line="71" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="53"/></expr_stmt>
    <return pos:line="72" pos:column="5">return <expr><name pos:line="72" pos:column="12">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="72" pos:column="36"/></name></expr>;<pos:position pos:line="72" pos:column="37"/></return>
  }<pos:position pos:line="73" pos:column="4"/></block></then></if>

  <if pos:line="75" pos:column="3">if<condition pos:line="75" pos:column="5">(<expr><name pos:line="75" pos:column="6">result<pos:position pos:line="75" pos:column="12"/></name> <operator pos:line="75" pos:column="13">&amp;<pos:position pos:line="75" pos:column="18"/></operator> <name pos:line="75" pos:column="15">CURL_CSELECT_ERR<pos:position pos:line="75" pos:column="31"/></name></expr>)<pos:position pos:line="75" pos:column="32"/></condition><then pos:line="75" pos:column="32"> <block pos:line="75" pos:column="33">{
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">failf<pos:position pos:line="76" pos:column="10"/></name><argument_list pos:line="76" pos:column="10">(<argument><expr><name><name pos:line="76" pos:column="11">conn<pos:position pos:line="76" pos:column="15"/></name><operator pos:line="76" pos:column="15">-&gt;<pos:position pos:line="76" pos:column="20"/></operator><name pos:line="76" pos:column="17">data<pos:position pos:line="76" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="23">"SOCKS5: error occurred during connection"<pos:position pos:line="76" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="67"/></expr_stmt>
    <return pos:line="77" pos:column="5">return <expr><name pos:line="77" pos:column="12">CURLE_COULDNT_CONNECT<pos:position pos:line="77" pos:column="33"/></name></expr>;<pos:position pos:line="77" pos:column="34"/></return>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

  <if pos:line="80" pos:column="3">if<condition pos:line="80" pos:column="5">(<expr><name pos:line="80" pos:column="6">auth<pos:position pos:line="80" pos:column="10"/></name> <operator pos:line="80" pos:column="11">&amp;<pos:position pos:line="80" pos:column="16"/></operator> <operator pos:line="80" pos:column="13">~<pos:position pos:line="80" pos:column="14"/></operator><operator pos:line="80" pos:column="14">(<pos:position pos:line="80" pos:column="15"/></operator><name pos:line="80" pos:column="15">CURLAUTH_BASIC<pos:position pos:line="80" pos:column="29"/></name> <operator pos:line="80" pos:column="30">|<pos:position pos:line="80" pos:column="31"/></operator> <name pos:line="80" pos:column="32">CURLAUTH_GSSAPI<pos:position pos:line="80" pos:column="47"/></name><operator pos:line="80" pos:column="47">)<pos:position pos:line="80" pos:column="48"/></operator></expr>)<pos:position pos:line="80" pos:column="49"/></condition><then pos:line="80" pos:column="49">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="5">infof<pos:position pos:line="81" pos:column="10"/></name><argument_list pos:line="81" pos:column="10">(<argument><expr><name><name pos:line="81" pos:column="11">conn<pos:position pos:line="81" pos:column="15"/></name><operator pos:line="81" pos:column="15">-&gt;<pos:position pos:line="81" pos:column="20"/></operator><name pos:line="81" pos:column="17">data<pos:position pos:line="81" pos:column="21"/></name></name></expr></argument>,
        <argument><expr><literal type="string" pos:line="82" pos:column="9">"warning: unsupported value passed to CURLOPT_SOCKS5_AUTH: %lu\n"<pos:position pos:line="82" pos:column="74"/></literal></expr></argument>,
        <argument><expr><name pos:line="83" pos:column="9">auth<pos:position pos:line="83" pos:column="13"/></name></expr></argument>)<pos:position pos:line="83" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="15"/></expr_stmt></block></then></if>
  <if pos:line="84" pos:column="3">if<condition pos:line="84" pos:column="5">(<expr><operator pos:line="84" pos:column="6">!<pos:position pos:line="84" pos:column="7"/></operator><operator pos:line="84" pos:column="7">(<pos:position pos:line="84" pos:column="8"/></operator><name pos:line="84" pos:column="8">auth<pos:position pos:line="84" pos:column="12"/></name> <operator pos:line="84" pos:column="13">&amp;<pos:position pos:line="84" pos:column="18"/></operator> <name pos:line="84" pos:column="15">CURLAUTH_BASIC<pos:position pos:line="84" pos:column="29"/></name><operator pos:line="84" pos:column="29">)<pos:position pos:line="84" pos:column="30"/></operator></expr>)<pos:position pos:line="84" pos:column="31"/></condition><then pos:line="84" pos:column="31">
    <comment type="block" pos:line="85" pos:column="5">/* disable username/password auth */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="5">proxy_user<pos:position pos:line="86" pos:column="15"/></name> <operator pos:line="86" pos:column="16">=<pos:position pos:line="86" pos:column="17"/></operator> <name pos:line="86" pos:column="18">NULL<pos:position pos:line="86" pos:column="22"/></name></expr>;<pos:position pos:line="86" pos:column="23"/></expr_stmt></block></then></if>
<cpp:if pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">if<pos:position pos:line="87" pos:column="4"/></cpp:directive> <expr><call><name pos:line="87" pos:column="5">defined<pos:position pos:line="87" pos:column="12"/></name><argument_list pos:line="87" pos:column="12">(<argument><expr><name pos:line="87" pos:column="13">HAVE_GSSAPI<pos:position pos:line="87" pos:column="24"/></name></expr></argument>)<pos:position pos:line="87" pos:column="25"/></argument_list></call> <operator pos:line="87" pos:column="26">||<pos:position pos:line="87" pos:column="28"/></operator> <call><name pos:line="87" pos:column="29">defined<pos:position pos:line="87" pos:column="36"/></name><argument_list pos:line="87" pos:column="36">(<argument><expr><name pos:line="87" pos:column="37">USE_WINDOWS_SSPI<pos:position pos:line="87" pos:column="53"/></name></expr></argument>)<pos:position pos:line="87" pos:column="54"/></argument_list></call></expr></cpp:if>
  <if pos:line="88" pos:column="3">if<condition pos:line="88" pos:column="5">(<expr><name pos:line="88" pos:column="6">auth<pos:position pos:line="88" pos:column="10"/></name> <operator pos:line="88" pos:column="11">&amp;<pos:position pos:line="88" pos:column="16"/></operator> <name pos:line="88" pos:column="13">CURLAUTH_GSSAPI<pos:position pos:line="88" pos:column="28"/></name></expr>)<pos:position pos:line="88" pos:column="29"/></condition><then pos:line="88" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><name pos:line="89" pos:column="5">allow_gssapi<pos:position pos:line="89" pos:column="17"/></name> <operator pos:line="89" pos:column="18">=<pos:position pos:line="89" pos:column="19"/></operator> <name pos:line="89" pos:column="20">TRUE<pos:position pos:line="89" pos:column="24"/></name></expr>;<pos:position pos:line="89" pos:column="25"/></expr_stmt></block></then></if>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif<pos:position pos:line="90" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="92" pos:column="3">idx<pos:position pos:line="92" pos:column="6"/></name> <operator pos:line="92" pos:column="7">=<pos:position pos:line="92" pos:column="8"/></operator> <literal type="number" pos:line="92" pos:column="9">0<pos:position pos:line="92" pos:column="10"/></literal></expr>;<pos:position pos:line="92" pos:column="11"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="93" pos:column="3">socksreq<pos:position pos:line="93" pos:column="11"/></name><index pos:line="93" pos:column="11">[<expr><name pos:line="93" pos:column="12">idx<pos:position pos:line="93" pos:column="15"/></name><operator pos:line="93" pos:column="15">++<pos:position pos:line="93" pos:column="17"/></operator></expr>]<pos:position pos:line="93" pos:column="18"/></index></name> <operator pos:line="93" pos:column="19">=<pos:position pos:line="93" pos:column="20"/></operator> <literal type="number" pos:line="93" pos:column="21">5<pos:position pos:line="93" pos:column="22"/></literal></expr>;<pos:position pos:line="93" pos:column="23"/></expr_stmt>   <comment type="block" pos:line="93" pos:column="26">/* version */</comment>
  <expr_stmt><expr><name pos:line="94" pos:column="3">idx<pos:position pos:line="94" pos:column="6"/></name><operator pos:line="94" pos:column="6">++<pos:position pos:line="94" pos:column="8"/></operator></expr>;<pos:position pos:line="94" pos:column="9"/></expr_stmt>                 <comment type="block" pos:line="94" pos:column="26">/* reserve for the number of authentication methods */</comment>
  <expr_stmt><expr><name><name pos:line="95" pos:column="3">socksreq<pos:position pos:line="95" pos:column="11"/></name><index pos:line="95" pos:column="11">[<expr><name pos:line="95" pos:column="12">idx<pos:position pos:line="95" pos:column="15"/></name><operator pos:line="95" pos:column="15">++<pos:position pos:line="95" pos:column="17"/></operator></expr>]<pos:position pos:line="95" pos:column="18"/></index></name> <operator pos:line="95" pos:column="19">=<pos:position pos:line="95" pos:column="20"/></operator> <literal type="number" pos:line="95" pos:column="21">0<pos:position pos:line="95" pos:column="22"/></literal></expr>;<pos:position pos:line="95" pos:column="23"/></expr_stmt>   <comment type="block" pos:line="95" pos:column="26">/* no authentication */</comment>
  <if pos:line="96" pos:column="3">if<condition pos:line="96" pos:column="5">(<expr><name pos:line="96" pos:column="6">allow_gssapi<pos:position pos:line="96" pos:column="18"/></name></expr>)<pos:position pos:line="96" pos:column="19"/></condition><then pos:line="96" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="97" pos:column="5">socksreq<pos:position pos:line="97" pos:column="13"/></name><index pos:line="97" pos:column="13">[<expr><name pos:line="97" pos:column="14">idx<pos:position pos:line="97" pos:column="17"/></name><operator pos:line="97" pos:column="17">++<pos:position pos:line="97" pos:column="19"/></operator></expr>]<pos:position pos:line="97" pos:column="20"/></index></name> <operator pos:line="97" pos:column="21">=<pos:position pos:line="97" pos:column="22"/></operator> <literal type="number" pos:line="97" pos:column="23">1<pos:position pos:line="97" pos:column="24"/></literal></expr>;<pos:position pos:line="97" pos:column="25"/></expr_stmt></block></then></if> <comment type="block" pos:line="97" pos:column="26">/* GSS-API */</comment>
  <if pos:line="98" pos:column="3">if<condition pos:line="98" pos:column="5">(<expr><name pos:line="98" pos:column="6">proxy_user<pos:position pos:line="98" pos:column="16"/></name></expr>)<pos:position pos:line="98" pos:column="17"/></condition><then pos:line="98" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="99" pos:column="5">socksreq<pos:position pos:line="99" pos:column="13"/></name><index pos:line="99" pos:column="13">[<expr><name pos:line="99" pos:column="14">idx<pos:position pos:line="99" pos:column="17"/></name><operator pos:line="99" pos:column="17">++<pos:position pos:line="99" pos:column="19"/></operator></expr>]<pos:position pos:line="99" pos:column="20"/></index></name> <operator pos:line="99" pos:column="21">=<pos:position pos:line="99" pos:column="22"/></operator> <literal type="number" pos:line="99" pos:column="23">2<pos:position pos:line="99" pos:column="24"/></literal></expr>;<pos:position pos:line="99" pos:column="25"/></expr_stmt></block></then></if> <comment type="block" pos:line="99" pos:column="26">/* username/password */</comment>
  <comment type="block" pos:line="100" pos:column="3">/* write the number of authentication methods */</comment>
  <expr_stmt><expr><name><name pos:line="101" pos:column="3">socksreq<pos:position pos:line="101" pos:column="11"/></name><index pos:line="101" pos:column="11">[<expr><literal type="number" pos:line="101" pos:column="12">1<pos:position pos:line="101" pos:column="13"/></literal></expr>]<pos:position pos:line="101" pos:column="14"/></index></name> <operator pos:line="101" pos:column="15">=<pos:position pos:line="101" pos:column="16"/></operator> <call pos:line="101" pos:column="17">(<name pos:line="101" pos:column="18">unsigned<pos:position pos:line="101" pos:column="26"/></name> <name pos:line="101" pos:column="27">char<pos:position pos:line="101" pos:column="31"/></name>) <argument_list pos:line="101" pos:column="33">(<argument><expr><name pos:line="101" pos:column="34">idx<pos:position pos:line="101" pos:column="37"/></name> <operator pos:line="101" pos:column="38">-<pos:position pos:line="101" pos:column="39"/></operator> <literal type="number" pos:line="101" pos:column="40">2<pos:position pos:line="101" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="103" pos:column="3">(<pos:position pos:line="103" pos:column="4"/></operator><name pos:line="103" pos:column="4">void<pos:position pos:line="103" pos:column="8"/></name><operator pos:line="103" pos:column="8">)<pos:position pos:line="103" pos:column="9"/></operator><call><name pos:line="103" pos:column="9">curlx_nonblock<pos:position pos:line="103" pos:column="23"/></name><argument_list pos:line="103" pos:column="23">(<argument><expr><name pos:line="103" pos:column="24">sock<pos:position pos:line="103" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="30">FALSE<pos:position pos:line="103" pos:column="35"/></name></expr></argument>)<pos:position pos:line="103" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="105" pos:column="3">infof<pos:position pos:line="105" pos:column="8"/></name><argument_list pos:line="105" pos:column="8">(<argument><expr><name pos:line="105" pos:column="9">data<pos:position pos:line="105" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="15">"SOCKS5 communication to %s:%d\n"<pos:position pos:line="105" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="50">hostname<pos:position pos:line="105" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="60">remote_port<pos:position pos:line="105" pos:column="71"/></name></expr></argument>)<pos:position pos:line="105" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="73"/></expr_stmt>

  <expr_stmt><expr><name pos:line="107" pos:column="3">code<pos:position pos:line="107" pos:column="7"/></name> <operator pos:line="107" pos:column="8">=<pos:position pos:line="107" pos:column="9"/></operator> <call><name pos:line="107" pos:column="10">Curl_write_plain<pos:position pos:line="107" pos:column="26"/></name><argument_list pos:line="107" pos:column="26">(<argument><expr><name pos:line="107" pos:column="27">conn<pos:position pos:line="107" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="33">sock<pos:position pos:line="107" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="39">(<pos:position pos:line="107" pos:column="40"/></operator><name pos:line="107" pos:column="40">char<pos:position pos:line="107" pos:column="44"/></name> <operator pos:line="107" pos:column="45">*<pos:position pos:line="107" pos:column="46"/></operator><operator pos:line="107" pos:column="46">)<pos:position pos:line="107" pos:column="47"/></operator><name pos:line="107" pos:column="47">socksreq<pos:position pos:line="107" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="57">(<pos:position pos:line="107" pos:column="58"/></operator><literal type="number" pos:line="107" pos:column="58">2<pos:position pos:line="107" pos:column="59"/></literal> <operator pos:line="107" pos:column="60">+<pos:position pos:line="107" pos:column="61"/></operator> <operator pos:line="107" pos:column="62">(<pos:position pos:line="107" pos:column="63"/></operator><name pos:line="107" pos:column="63">int<pos:position pos:line="107" pos:column="66"/></name><operator pos:line="107" pos:column="66">)<pos:position pos:line="107" pos:column="67"/></operator><name><name pos:line="107" pos:column="67">socksreq<pos:position pos:line="107" pos:column="75"/></name><index pos:line="107" pos:column="75">[<expr><literal type="number" pos:line="107" pos:column="76">1<pos:position pos:line="107" pos:column="77"/></literal></expr>]<pos:position pos:line="107" pos:column="78"/></index></name><operator pos:line="107" pos:column="78">)<pos:position pos:line="107" pos:column="79"/></operator></expr></argument>,
                          <argument><expr><operator pos:line="108" pos:column="27">&amp;<pos:position pos:line="108" pos:column="32"/></operator><name pos:line="108" pos:column="28">written<pos:position pos:line="108" pos:column="35"/></name></expr></argument>)<pos:position pos:line="108" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="37"/></expr_stmt>
  <if pos:line="109" pos:column="3">if<condition pos:line="109" pos:column="5">(<expr><name pos:line="109" pos:column="6">code<pos:position pos:line="109" pos:column="10"/></name> <operator pos:line="109" pos:column="11">||<pos:position pos:line="109" pos:column="13"/></operator> <operator pos:line="109" pos:column="14">(<pos:position pos:line="109" pos:column="15"/></operator><name pos:line="109" pos:column="15">written<pos:position pos:line="109" pos:column="22"/></name> <operator pos:line="109" pos:column="23">!=<pos:position pos:line="109" pos:column="25"/></operator> <operator pos:line="109" pos:column="26">(<pos:position pos:line="109" pos:column="27"/></operator><literal type="number" pos:line="109" pos:column="27">2<pos:position pos:line="109" pos:column="28"/></literal> <operator pos:line="109" pos:column="29">+<pos:position pos:line="109" pos:column="30"/></operator> <operator pos:line="109" pos:column="31">(<pos:position pos:line="109" pos:column="32"/></operator><name pos:line="109" pos:column="32">int<pos:position pos:line="109" pos:column="35"/></name><operator pos:line="109" pos:column="35">)<pos:position pos:line="109" pos:column="36"/></operator><name><name pos:line="109" pos:column="36">socksreq<pos:position pos:line="109" pos:column="44"/></name><index pos:line="109" pos:column="44">[<expr><literal type="number" pos:line="109" pos:column="45">1<pos:position pos:line="109" pos:column="46"/></literal></expr>]<pos:position pos:line="109" pos:column="47"/></index></name><operator pos:line="109" pos:column="47">)<pos:position pos:line="109" pos:column="48"/></operator><operator pos:line="109" pos:column="48">)<pos:position pos:line="109" pos:column="49"/></operator></expr>)<pos:position pos:line="109" pos:column="50"/></condition><then pos:line="109" pos:column="50"> <block pos:line="109" pos:column="51">{
    <expr_stmt><expr><call><name pos:line="110" pos:column="5">failf<pos:position pos:line="110" pos:column="10"/></name><argument_list pos:line="110" pos:column="10">(<argument><expr><name pos:line="110" pos:column="11">data<pos:position pos:line="110" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="17">"Unable to send initial SOCKS5 request."<pos:position pos:line="110" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="59"/></expr_stmt>
    <return pos:line="111" pos:column="5">return <expr><name pos:line="111" pos:column="12">CURLE_COULDNT_CONNECT<pos:position pos:line="111" pos:column="33"/></name></expr>;<pos:position pos:line="111" pos:column="34"/></return>
  }<pos:position pos:line="112" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="114" pos:column="3">(<pos:position pos:line="114" pos:column="4"/></operator><name pos:line="114" pos:column="4">void<pos:position pos:line="114" pos:column="8"/></name><operator pos:line="114" pos:column="8">)<pos:position pos:line="114" pos:column="9"/></operator><call><name pos:line="114" pos:column="9">curlx_nonblock<pos:position pos:line="114" pos:column="23"/></name><argument_list pos:line="114" pos:column="23">(<argument><expr><name pos:line="114" pos:column="24">sock<pos:position pos:line="114" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="30">TRUE<pos:position pos:line="114" pos:column="34"/></name></expr></argument>)<pos:position pos:line="114" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name pos:line="116" pos:column="3">result<pos:position pos:line="116" pos:column="9"/></name> <operator pos:line="116" pos:column="10">=<pos:position pos:line="116" pos:column="11"/></operator> <call><name pos:line="116" pos:column="12">SOCKET_READABLE<pos:position pos:line="116" pos:column="27"/></name><argument_list pos:line="116" pos:column="27">(<argument><expr><name pos:line="116" pos:column="28">sock<pos:position pos:line="116" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="34">timeout<pos:position pos:line="116" pos:column="41"/></name></expr></argument>)<pos:position pos:line="116" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="43"/></expr_stmt>

  <if pos:line="118" pos:column="3">if<condition pos:line="118" pos:column="5">(<expr><operator pos:line="118" pos:column="6">-<pos:position pos:line="118" pos:column="7"/></operator><literal type="number" pos:line="118" pos:column="7">1<pos:position pos:line="118" pos:column="8"/></literal> <operator pos:line="118" pos:column="9">==<pos:position pos:line="118" pos:column="11"/></operator> <name pos:line="118" pos:column="12">result<pos:position pos:line="118" pos:column="18"/></name></expr>)<pos:position pos:line="118" pos:column="19"/></condition><then pos:line="118" pos:column="19"> <block pos:line="118" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="119" pos:column="5">failf<pos:position pos:line="119" pos:column="10"/></name><argument_list pos:line="119" pos:column="10">(<argument><expr><name><name pos:line="119" pos:column="11">conn<pos:position pos:line="119" pos:column="15"/></name><operator pos:line="119" pos:column="15">-&gt;<pos:position pos:line="119" pos:column="20"/></operator><name pos:line="119" pos:column="17">data<pos:position pos:line="119" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="23">"SOCKS5 nothing to read"<pos:position pos:line="119" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="49"/></expr_stmt>
    <return pos:line="120" pos:column="5">return <expr><name pos:line="120" pos:column="12">CURLE_COULDNT_CONNECT<pos:position pos:line="120" pos:column="33"/></name></expr>;<pos:position pos:line="120" pos:column="34"/></return>
  }<pos:position pos:line="121" pos:column="4"/></block></then></if>
  <if pos:line="122" pos:column="3">if<condition pos:line="122" pos:column="5">(<expr><literal type="number" pos:line="122" pos:column="6">0<pos:position pos:line="122" pos:column="7"/></literal> <operator pos:line="122" pos:column="8">==<pos:position pos:line="122" pos:column="10"/></operator> <name pos:line="122" pos:column="11">result<pos:position pos:line="122" pos:column="17"/></name></expr>)<pos:position pos:line="122" pos:column="18"/></condition><then pos:line="122" pos:column="18"> <block pos:line="122" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="123" pos:column="5">failf<pos:position pos:line="123" pos:column="10"/></name><argument_list pos:line="123" pos:column="10">(<argument><expr><name><name pos:line="123" pos:column="11">conn<pos:position pos:line="123" pos:column="15"/></name><operator pos:line="123" pos:column="15">-&gt;<pos:position pos:line="123" pos:column="20"/></operator><name pos:line="123" pos:column="17">data<pos:position pos:line="123" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="23">"SOCKS5 read timeout"<pos:position pos:line="123" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="46"/></expr_stmt>
    <return pos:line="124" pos:column="5">return <expr><name pos:line="124" pos:column="12">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="124" pos:column="36"/></name></expr>;<pos:position pos:line="124" pos:column="37"/></return>
  }<pos:position pos:line="125" pos:column="4"/></block></then></if>

  <if pos:line="127" pos:column="3">if<condition pos:line="127" pos:column="5">(<expr><name pos:line="127" pos:column="6">result<pos:position pos:line="127" pos:column="12"/></name> <operator pos:line="127" pos:column="13">&amp;<pos:position pos:line="127" pos:column="18"/></operator> <name pos:line="127" pos:column="15">CURL_CSELECT_ERR<pos:position pos:line="127" pos:column="31"/></name></expr>)<pos:position pos:line="127" pos:column="32"/></condition><then pos:line="127" pos:column="32"> <block pos:line="127" pos:column="33">{
    <expr_stmt><expr><call><name pos:line="128" pos:column="5">failf<pos:position pos:line="128" pos:column="10"/></name><argument_list pos:line="128" pos:column="10">(<argument><expr><name><name pos:line="128" pos:column="11">conn<pos:position pos:line="128" pos:column="15"/></name><operator pos:line="128" pos:column="15">-&gt;<pos:position pos:line="128" pos:column="20"/></operator><name pos:line="128" pos:column="17">data<pos:position pos:line="128" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="23">"SOCKS5 read error occurred"<pos:position pos:line="128" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="53"/></expr_stmt>
    <return pos:line="129" pos:column="5">return <expr><name pos:line="129" pos:column="12">CURLE_RECV_ERROR<pos:position pos:line="129" pos:column="28"/></name></expr>;<pos:position pos:line="129" pos:column="29"/></return>
  }<pos:position pos:line="130" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="132" pos:column="3">(<pos:position pos:line="132" pos:column="4"/></operator><name pos:line="132" pos:column="4">void<pos:position pos:line="132" pos:column="8"/></name><operator pos:line="132" pos:column="8">)<pos:position pos:line="132" pos:column="9"/></operator><call><name pos:line="132" pos:column="9">curlx_nonblock<pos:position pos:line="132" pos:column="23"/></name><argument_list pos:line="132" pos:column="23">(<argument><expr><name pos:line="132" pos:column="24">sock<pos:position pos:line="132" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="30">FALSE<pos:position pos:line="132" pos:column="35"/></name></expr></argument>)<pos:position pos:line="132" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><name pos:line="134" pos:column="3">result<pos:position pos:line="134" pos:column="9"/></name> <operator pos:line="134" pos:column="10">=<pos:position pos:line="134" pos:column="11"/></operator> <call><name pos:line="134" pos:column="12">Curl_blockread_all<pos:position pos:line="134" pos:column="30"/></name><argument_list pos:line="134" pos:column="30">(<argument><expr><name pos:line="134" pos:column="31">conn<pos:position pos:line="134" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="37">sock<pos:position pos:line="134" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="134" pos:column="43">(<pos:position pos:line="134" pos:column="44"/></operator><name pos:line="134" pos:column="44">char<pos:position pos:line="134" pos:column="48"/></name> <operator pos:line="134" pos:column="49">*<pos:position pos:line="134" pos:column="50"/></operator><operator pos:line="134" pos:column="50">)<pos:position pos:line="134" pos:column="51"/></operator><name pos:line="134" pos:column="51">socksreq<pos:position pos:line="134" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="61">2<pos:position pos:line="134" pos:column="62"/></literal></expr></argument>, <argument><expr><operator pos:line="134" pos:column="64">&amp;<pos:position pos:line="134" pos:column="69"/></operator><name pos:line="134" pos:column="65">actualread<pos:position pos:line="134" pos:column="75"/></name></expr></argument>)<pos:position pos:line="134" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="77"/></expr_stmt>
  <if pos:line="135" pos:column="3">if<condition pos:line="135" pos:column="5">(<expr><name pos:line="135" pos:column="6">result<pos:position pos:line="135" pos:column="12"/></name> <operator pos:line="135" pos:column="13">||<pos:position pos:line="135" pos:column="15"/></operator> <operator pos:line="135" pos:column="16">(<pos:position pos:line="135" pos:column="17"/></operator><name pos:line="135" pos:column="17">actualread<pos:position pos:line="135" pos:column="27"/></name> <operator pos:line="135" pos:column="28">!=<pos:position pos:line="135" pos:column="30"/></operator> <literal type="number" pos:line="135" pos:column="31">2<pos:position pos:line="135" pos:column="32"/></literal><operator pos:line="135" pos:column="32">)<pos:position pos:line="135" pos:column="33"/></operator></expr>)<pos:position pos:line="135" pos:column="34"/></condition><then pos:line="135" pos:column="34"> <block pos:line="135" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="136" pos:column="5">failf<pos:position pos:line="136" pos:column="10"/></name><argument_list pos:line="136" pos:column="10">(<argument><expr><name pos:line="136" pos:column="11">data<pos:position pos:line="136" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="17">"Unable to receive initial SOCKS5 response."<pos:position pos:line="136" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="63"/></expr_stmt>
    <return pos:line="137" pos:column="5">return <expr><name pos:line="137" pos:column="12">CURLE_COULDNT_CONNECT<pos:position pos:line="137" pos:column="33"/></name></expr>;<pos:position pos:line="137" pos:column="34"/></return>
  }<pos:position pos:line="138" pos:column="4"/></block></then></if>

  <if pos:line="140" pos:column="3">if<condition pos:line="140" pos:column="5">(<expr><name><name pos:line="140" pos:column="6">socksreq<pos:position pos:line="140" pos:column="14"/></name><index pos:line="140" pos:column="14">[<expr><literal type="number" pos:line="140" pos:column="15">0<pos:position pos:line="140" pos:column="16"/></literal></expr>]<pos:position pos:line="140" pos:column="17"/></index></name> <operator pos:line="140" pos:column="18">!=<pos:position pos:line="140" pos:column="20"/></operator> <literal type="number" pos:line="140" pos:column="21">5<pos:position pos:line="140" pos:column="22"/></literal></expr>)<pos:position pos:line="140" pos:column="23"/></condition><then pos:line="140" pos:column="23"> <block pos:line="140" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="141" pos:column="5">failf<pos:position pos:line="141" pos:column="10"/></name><argument_list pos:line="141" pos:column="10">(<argument><expr><name pos:line="141" pos:column="11">data<pos:position pos:line="141" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="17">"Received invalid version in initial SOCKS5 response."<pos:position pos:line="141" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="73"/></expr_stmt>
    <return pos:line="142" pos:column="5">return <expr><name pos:line="142" pos:column="12">CURLE_COULDNT_CONNECT<pos:position pos:line="142" pos:column="33"/></name></expr>;<pos:position pos:line="142" pos:column="34"/></return>
  }<pos:position pos:line="143" pos:column="4"/></block></then></if>
  <if pos:line="144" pos:column="3">if<condition pos:line="144" pos:column="5">(<expr><name><name pos:line="144" pos:column="6">socksreq<pos:position pos:line="144" pos:column="14"/></name><index pos:line="144" pos:column="14">[<expr><literal type="number" pos:line="144" pos:column="15">1<pos:position pos:line="144" pos:column="16"/></literal></expr>]<pos:position pos:line="144" pos:column="17"/></index></name> <operator pos:line="144" pos:column="18">==<pos:position pos:line="144" pos:column="20"/></operator> <literal type="number" pos:line="144" pos:column="21">0<pos:position pos:line="144" pos:column="22"/></literal></expr>)<pos:position pos:line="144" pos:column="23"/></condition><then pos:line="144" pos:column="23"> <block pos:line="144" pos:column="24">{
    <comment type="block" pos:line="145" pos:column="5">/* Nothing to do, no authentication needed */</comment>
    <empty_stmt pos:line="146" pos:column="5">;<pos:position pos:line="146" pos:column="6"/></empty_stmt>
  }<pos:position pos:line="147" pos:column="4"/></block></then>
<cpp:if pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">if<pos:position pos:line="148" pos:column="4"/></cpp:directive> <expr><call><name pos:line="148" pos:column="5">defined<pos:position pos:line="148" pos:column="12"/></name><argument_list pos:line="148" pos:column="12">(<argument><expr><name pos:line="148" pos:column="13">HAVE_GSSAPI<pos:position pos:line="148" pos:column="24"/></name></expr></argument>)<pos:position pos:line="148" pos:column="25"/></argument_list></call> <operator pos:line="148" pos:column="26">||<pos:position pos:line="148" pos:column="28"/></operator> <call><name pos:line="148" pos:column="29">defined<pos:position pos:line="148" pos:column="36"/></name><argument_list pos:line="148" pos:column="36">(<argument><expr><name pos:line="148" pos:column="37">USE_WINDOWS_SSPI<pos:position pos:line="148" pos:column="53"/></name></expr></argument>)<pos:position pos:line="148" pos:column="54"/></argument_list></call></expr></cpp:if>
  <elseif pos:line="149" pos:column="3">else <if pos:line="149" pos:column="8">if<condition pos:line="149" pos:column="10">(<expr><name pos:line="149" pos:column="11">allow_gssapi<pos:position pos:line="149" pos:column="23"/></name> <operator pos:line="149" pos:column="24">&amp;&amp;<pos:position pos:line="149" pos:column="34"/></operator> <operator pos:line="149" pos:column="27">(<pos:position pos:line="149" pos:column="28"/></operator><name><name pos:line="149" pos:column="28">socksreq<pos:position pos:line="149" pos:column="36"/></name><index pos:line="149" pos:column="36">[<expr><literal type="number" pos:line="149" pos:column="37">1<pos:position pos:line="149" pos:column="38"/></literal></expr>]<pos:position pos:line="149" pos:column="39"/></index></name> <operator pos:line="149" pos:column="40">==<pos:position pos:line="149" pos:column="42"/></operator> <literal type="number" pos:line="149" pos:column="43">1<pos:position pos:line="149" pos:column="44"/></literal><operator pos:line="149" pos:column="44">)<pos:position pos:line="149" pos:column="45"/></operator></expr>)<pos:position pos:line="149" pos:column="46"/></condition><then pos:line="149" pos:column="46"> <block pos:line="149" pos:column="47">{
    <expr_stmt><expr><name pos:line="150" pos:column="5">code<pos:position pos:line="150" pos:column="9"/></name> <operator pos:line="150" pos:column="10">=<pos:position pos:line="150" pos:column="11"/></operator> <call><name pos:line="150" pos:column="12">Curl_SOCKS5_gssapi_negotiate<pos:position pos:line="150" pos:column="40"/></name><argument_list pos:line="150" pos:column="40">(<argument><expr><name pos:line="150" pos:column="41">sockindex<pos:position pos:line="150" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="52">conn<pos:position pos:line="150" pos:column="56"/></name></expr></argument>)<pos:position pos:line="150" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="58"/></expr_stmt>
    <if pos:line="151" pos:column="5">if<condition pos:line="151" pos:column="7">(<expr><name pos:line="151" pos:column="8">code<pos:position pos:line="151" pos:column="12"/></name></expr>)<pos:position pos:line="151" pos:column="13"/></condition><then pos:line="151" pos:column="13"> <block pos:line="151" pos:column="14">{
      <expr_stmt><expr><call><name pos:line="152" pos:column="7">failf<pos:position pos:line="152" pos:column="12"/></name><argument_list pos:line="152" pos:column="12">(<argument><expr><name pos:line="152" pos:column="13">data<pos:position pos:line="152" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="19">"Unable to negotiate SOCKS5 GSS-API context."<pos:position pos:line="152" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="66"/></expr_stmt>
      <return pos:line="153" pos:column="7">return <expr><name pos:line="153" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="153" pos:column="35"/></name></expr>;<pos:position pos:line="153" pos:column="36"/></return>
    }<pos:position pos:line="154" pos:column="6"/></block></then></if>
  }<pos:position pos:line="155" pos:column="4"/></block></then></if></elseif>
<cpp:endif pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">endif<pos:position pos:line="156" pos:column="7"/></cpp:directive></cpp:endif>
  <elseif pos:line="157" pos:column="3">else <if pos:line="157" pos:column="8">if<condition pos:line="157" pos:column="10">(<expr><name><name pos:line="157" pos:column="11">socksreq<pos:position pos:line="157" pos:column="19"/></name><index pos:line="157" pos:column="19">[<expr><literal type="number" pos:line="157" pos:column="20">1<pos:position pos:line="157" pos:column="21"/></literal></expr>]<pos:position pos:line="157" pos:column="22"/></index></name> <operator pos:line="157" pos:column="23">==<pos:position pos:line="157" pos:column="25"/></operator> <literal type="number" pos:line="157" pos:column="26">2<pos:position pos:line="157" pos:column="27"/></literal></expr>)<pos:position pos:line="157" pos:column="28"/></condition><then pos:line="157" pos:column="28"> <block pos:line="157" pos:column="29">{
    <comment type="block" pos:line="158" pos:column="5">/* Needs user name and password */</comment>
    <decl_stmt><decl><type><name pos:line="159" pos:column="5">size_t<pos:position pos:line="159" pos:column="11"/></name></type> <name pos:line="159" pos:column="12">proxy_user_len<pos:position pos:line="159" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="159" pos:column="28">proxy_password_len<pos:position pos:line="159" pos:column="46"/></name></decl>;<pos:position pos:line="159" pos:column="47"/></decl_stmt>
    <if pos:line="160" pos:column="5">if<condition pos:line="160" pos:column="7">(<expr><name pos:line="160" pos:column="8">proxy_user<pos:position pos:line="160" pos:column="18"/></name> <operator pos:line="160" pos:column="19">&amp;&amp;<pos:position pos:line="160" pos:column="29"/></operator> <name pos:line="160" pos:column="22">proxy_password<pos:position pos:line="160" pos:column="36"/></name></expr>)<pos:position pos:line="160" pos:column="37"/></condition><then pos:line="160" pos:column="37"> <block pos:line="160" pos:column="38">{
      <expr_stmt><expr><name pos:line="161" pos:column="7">proxy_user_len<pos:position pos:line="161" pos:column="21"/></name> <operator pos:line="161" pos:column="22">=<pos:position pos:line="161" pos:column="23"/></operator> <call><name pos:line="161" pos:column="24">strlen<pos:position pos:line="161" pos:column="30"/></name><argument_list pos:line="161" pos:column="30">(<argument><expr><name pos:line="161" pos:column="31">proxy_user<pos:position pos:line="161" pos:column="41"/></name></expr></argument>)<pos:position pos:line="161" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><name pos:line="162" pos:column="7">proxy_password_len<pos:position pos:line="162" pos:column="25"/></name> <operator pos:line="162" pos:column="26">=<pos:position pos:line="162" pos:column="27"/></operator> <call><name pos:line="162" pos:column="28">strlen<pos:position pos:line="162" pos:column="34"/></name><argument_list pos:line="162" pos:column="34">(<argument><expr><name pos:line="162" pos:column="35">proxy_password<pos:position pos:line="162" pos:column="49"/></name></expr></argument>)<pos:position pos:line="162" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="163" pos:column="6"/></block></then>
    <else pos:line="164" pos:column="5">else <block pos:line="164" pos:column="10">{
      <expr_stmt><expr><name pos:line="165" pos:column="7">proxy_user_len<pos:position pos:line="165" pos:column="21"/></name> <operator pos:line="165" pos:column="22">=<pos:position pos:line="165" pos:column="23"/></operator> <literal type="number" pos:line="165" pos:column="24">0<pos:position pos:line="165" pos:column="25"/></literal></expr>;<pos:position pos:line="165" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name pos:line="166" pos:column="7">proxy_password_len<pos:position pos:line="166" pos:column="25"/></name> <operator pos:line="166" pos:column="26">=<pos:position pos:line="166" pos:column="27"/></operator> <literal type="number" pos:line="166" pos:column="28">0<pos:position pos:line="166" pos:column="29"/></literal></expr>;<pos:position pos:line="166" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="167" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="169" pos:column="5">/*   username/password request looks like
     * +----+------+----------+------+----------+
     * |VER | ULEN |  UNAME   | PLEN |  PASSWD  |
     * +----+------+----------+------+----------+
     * | 1  |  1   | 1 to 255 |  1   | 1 to 255 |
     * +----+------+----------+------+----------+
     */</comment>
    <expr_stmt><expr><name pos:line="176" pos:column="5">len<pos:position pos:line="176" pos:column="8"/></name> <operator pos:line="176" pos:column="9">=<pos:position pos:line="176" pos:column="10"/></operator> <literal type="number" pos:line="176" pos:column="11">0<pos:position pos:line="176" pos:column="12"/></literal></expr>;<pos:position pos:line="176" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="177" pos:column="5">socksreq<pos:position pos:line="177" pos:column="13"/></name><index pos:line="177" pos:column="13">[<expr><name pos:line="177" pos:column="14">len<pos:position pos:line="177" pos:column="17"/></name><operator pos:line="177" pos:column="17">++<pos:position pos:line="177" pos:column="19"/></operator></expr>]<pos:position pos:line="177" pos:column="20"/></index></name> <operator pos:line="177" pos:column="21">=<pos:position pos:line="177" pos:column="22"/></operator> <literal type="number" pos:line="177" pos:column="23">1<pos:position pos:line="177" pos:column="24"/></literal></expr>;<pos:position pos:line="177" pos:column="25"/></expr_stmt>    <comment type="block" pos:line="177" pos:column="29">/* username/pw subnegotiation version */</comment>
    <expr_stmt><expr><name><name pos:line="178" pos:column="5">socksreq<pos:position pos:line="178" pos:column="13"/></name><index pos:line="178" pos:column="13">[<expr><name pos:line="178" pos:column="14">len<pos:position pos:line="178" pos:column="17"/></name><operator pos:line="178" pos:column="17">++<pos:position pos:line="178" pos:column="19"/></operator></expr>]<pos:position pos:line="178" pos:column="20"/></index></name> <operator pos:line="178" pos:column="21">=<pos:position pos:line="178" pos:column="22"/></operator> <operator pos:line="178" pos:column="23">(<pos:position pos:line="178" pos:column="24"/></operator><name pos:line="178" pos:column="24">unsigned<pos:position pos:line="178" pos:column="32"/></name> <name pos:line="178" pos:column="33">char<pos:position pos:line="178" pos:column="37"/></name><operator pos:line="178" pos:column="37">)<pos:position pos:line="178" pos:column="38"/></operator> <name pos:line="178" pos:column="39">proxy_user_len<pos:position pos:line="178" pos:column="53"/></name></expr>;<pos:position pos:line="178" pos:column="54"/></expr_stmt>
    <if pos:line="179" pos:column="5">if<condition pos:line="179" pos:column="7">(<expr><name pos:line="179" pos:column="8">proxy_user<pos:position pos:line="179" pos:column="18"/></name> <operator pos:line="179" pos:column="19">&amp;&amp;<pos:position pos:line="179" pos:column="29"/></operator> <name pos:line="179" pos:column="22">proxy_user_len<pos:position pos:line="179" pos:column="36"/></name></expr>)<pos:position pos:line="179" pos:column="37"/></condition><then pos:line="179" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="180" pos:column="7">memcpy<pos:position pos:line="180" pos:column="13"/></name><argument_list pos:line="180" pos:column="13">(<argument><expr><name pos:line="180" pos:column="14">socksreq<pos:position pos:line="180" pos:column="22"/></name> <operator pos:line="180" pos:column="23">+<pos:position pos:line="180" pos:column="24"/></operator> <name pos:line="180" pos:column="25">len<pos:position pos:line="180" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="30">proxy_user<pos:position pos:line="180" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="42">proxy_user_len<pos:position pos:line="180" pos:column="56"/></name></expr></argument>)<pos:position pos:line="180" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="58"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="181" pos:column="5">len<pos:position pos:line="181" pos:column="8"/></name> <operator pos:line="181" pos:column="9">+=<pos:position pos:line="181" pos:column="11"/></operator> <name pos:line="181" pos:column="12">proxy_user_len<pos:position pos:line="181" pos:column="26"/></name></expr>;<pos:position pos:line="181" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="182" pos:column="5">socksreq<pos:position pos:line="182" pos:column="13"/></name><index pos:line="182" pos:column="13">[<expr><name pos:line="182" pos:column="14">len<pos:position pos:line="182" pos:column="17"/></name><operator pos:line="182" pos:column="17">++<pos:position pos:line="182" pos:column="19"/></operator></expr>]<pos:position pos:line="182" pos:column="20"/></index></name> <operator pos:line="182" pos:column="21">=<pos:position pos:line="182" pos:column="22"/></operator> <operator pos:line="182" pos:column="23">(<pos:position pos:line="182" pos:column="24"/></operator><name pos:line="182" pos:column="24">unsigned<pos:position pos:line="182" pos:column="32"/></name> <name pos:line="182" pos:column="33">char<pos:position pos:line="182" pos:column="37"/></name><operator pos:line="182" pos:column="37">)<pos:position pos:line="182" pos:column="38"/></operator> <name pos:line="182" pos:column="39">proxy_password_len<pos:position pos:line="182" pos:column="57"/></name></expr>;<pos:position pos:line="182" pos:column="58"/></expr_stmt>
    <if pos:line="183" pos:column="5">if<condition pos:line="183" pos:column="7">(<expr><name pos:line="183" pos:column="8">proxy_password<pos:position pos:line="183" pos:column="22"/></name> <operator pos:line="183" pos:column="23">&amp;&amp;<pos:position pos:line="183" pos:column="33"/></operator> <name pos:line="183" pos:column="26">proxy_password_len<pos:position pos:line="183" pos:column="44"/></name></expr>)<pos:position pos:line="183" pos:column="45"/></condition><then pos:line="183" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="184" pos:column="7">memcpy<pos:position pos:line="184" pos:column="13"/></name><argument_list pos:line="184" pos:column="13">(<argument><expr><name pos:line="184" pos:column="14">socksreq<pos:position pos:line="184" pos:column="22"/></name> <operator pos:line="184" pos:column="23">+<pos:position pos:line="184" pos:column="24"/></operator> <name pos:line="184" pos:column="25">len<pos:position pos:line="184" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="30">proxy_password<pos:position pos:line="184" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="46">proxy_password_len<pos:position pos:line="184" pos:column="64"/></name></expr></argument>)<pos:position pos:line="184" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="66"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="185" pos:column="5">len<pos:position pos:line="185" pos:column="8"/></name> <operator pos:line="185" pos:column="9">+=<pos:position pos:line="185" pos:column="11"/></operator> <name pos:line="185" pos:column="12">proxy_password_len<pos:position pos:line="185" pos:column="30"/></name></expr>;<pos:position pos:line="185" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name pos:line="187" pos:column="5">code<pos:position pos:line="187" pos:column="9"/></name> <operator pos:line="187" pos:column="10">=<pos:position pos:line="187" pos:column="11"/></operator> <call><name pos:line="187" pos:column="12">Curl_write_plain<pos:position pos:line="187" pos:column="28"/></name><argument_list pos:line="187" pos:column="28">(<argument><expr><name pos:line="187" pos:column="29">conn<pos:position pos:line="187" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="35">sock<pos:position pos:line="187" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="187" pos:column="41">(<pos:position pos:line="187" pos:column="42"/></operator><name pos:line="187" pos:column="42">char<pos:position pos:line="187" pos:column="46"/></name> <operator pos:line="187" pos:column="47">*<pos:position pos:line="187" pos:column="48"/></operator><operator pos:line="187" pos:column="48">)<pos:position pos:line="187" pos:column="49"/></operator><name pos:line="187" pos:column="49">socksreq<pos:position pos:line="187" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="59">len<pos:position pos:line="187" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="187" pos:column="64">&amp;<pos:position pos:line="187" pos:column="69"/></operator><name pos:line="187" pos:column="65">written<pos:position pos:line="187" pos:column="72"/></name></expr></argument>)<pos:position pos:line="187" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="74"/></expr_stmt>
    <if pos:line="188" pos:column="5">if<condition pos:line="188" pos:column="7">(<expr><name pos:line="188" pos:column="8">code<pos:position pos:line="188" pos:column="12"/></name> <operator pos:line="188" pos:column="13">||<pos:position pos:line="188" pos:column="15"/></operator> <operator pos:line="188" pos:column="16">(<pos:position pos:line="188" pos:column="17"/></operator><name pos:line="188" pos:column="17">len<pos:position pos:line="188" pos:column="20"/></name> <operator pos:line="188" pos:column="21">!=<pos:position pos:line="188" pos:column="23"/></operator> <name pos:line="188" pos:column="24">written<pos:position pos:line="188" pos:column="31"/></name><operator pos:line="188" pos:column="31">)<pos:position pos:line="188" pos:column="32"/></operator></expr>)<pos:position pos:line="188" pos:column="33"/></condition><then pos:line="188" pos:column="33"> <block pos:line="188" pos:column="34">{
      <expr_stmt><expr><call><name pos:line="189" pos:column="7">failf<pos:position pos:line="189" pos:column="12"/></name><argument_list pos:line="189" pos:column="12">(<argument><expr><name pos:line="189" pos:column="13">data<pos:position pos:line="189" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="189" pos:column="19">"Failed to send SOCKS5 sub-negotiation request."<pos:position pos:line="189" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="189" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="69"/></expr_stmt>
      <return pos:line="190" pos:column="7">return <expr><name pos:line="190" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="190" pos:column="35"/></name></expr>;<pos:position pos:line="190" pos:column="36"/></return>
    }<pos:position pos:line="191" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="193" pos:column="5">result<pos:position pos:line="193" pos:column="11"/></name> <operator pos:line="193" pos:column="12">=<pos:position pos:line="193" pos:column="13"/></operator> <call><name pos:line="193" pos:column="14">Curl_blockread_all<pos:position pos:line="193" pos:column="32"/></name><argument_list pos:line="193" pos:column="32">(<argument><expr><name pos:line="193" pos:column="33">conn<pos:position pos:line="193" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="39">sock<pos:position pos:line="193" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="193" pos:column="45">(<pos:position pos:line="193" pos:column="46"/></operator><name pos:line="193" pos:column="46">char<pos:position pos:line="193" pos:column="50"/></name> <operator pos:line="193" pos:column="51">*<pos:position pos:line="193" pos:column="52"/></operator><operator pos:line="193" pos:column="52">)<pos:position pos:line="193" pos:column="53"/></operator><name pos:line="193" pos:column="53">socksreq<pos:position pos:line="193" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="193" pos:column="63">2<pos:position pos:line="193" pos:column="64"/></literal></expr></argument>, <argument><expr><operator pos:line="193" pos:column="66">&amp;<pos:position pos:line="193" pos:column="71"/></operator><name pos:line="193" pos:column="67">actualread<pos:position pos:line="193" pos:column="77"/></name></expr></argument>)<pos:position pos:line="193" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="79"/></expr_stmt>
    <if pos:line="194" pos:column="5">if<condition pos:line="194" pos:column="7">(<expr><name pos:line="194" pos:column="8">result<pos:position pos:line="194" pos:column="14"/></name> <operator pos:line="194" pos:column="15">||<pos:position pos:line="194" pos:column="17"/></operator> <operator pos:line="194" pos:column="18">(<pos:position pos:line="194" pos:column="19"/></operator><name pos:line="194" pos:column="19">actualread<pos:position pos:line="194" pos:column="29"/></name> <operator pos:line="194" pos:column="30">!=<pos:position pos:line="194" pos:column="32"/></operator> <literal type="number" pos:line="194" pos:column="33">2<pos:position pos:line="194" pos:column="34"/></literal><operator pos:line="194" pos:column="34">)<pos:position pos:line="194" pos:column="35"/></operator></expr>)<pos:position pos:line="194" pos:column="36"/></condition><then pos:line="194" pos:column="36"> <block pos:line="194" pos:column="37">{
      <expr_stmt><expr><call><name pos:line="195" pos:column="7">failf<pos:position pos:line="195" pos:column="12"/></name><argument_list pos:line="195" pos:column="12">(<argument><expr><name pos:line="195" pos:column="13">data<pos:position pos:line="195" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="195" pos:column="19">"Unable to receive SOCKS5 sub-negotiation response."<pos:position pos:line="195" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="195" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="73"/></expr_stmt>
      <return pos:line="196" pos:column="7">return <expr><name pos:line="196" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="196" pos:column="35"/></name></expr>;<pos:position pos:line="196" pos:column="36"/></return>
    }<pos:position pos:line="197" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="199" pos:column="5">/* ignore the first (VER) byte */</comment>
    <if pos:line="200" pos:column="5">if<condition pos:line="200" pos:column="7">(<expr><name><name pos:line="200" pos:column="8">socksreq<pos:position pos:line="200" pos:column="16"/></name><index pos:line="200" pos:column="16">[<expr><literal type="number" pos:line="200" pos:column="17">1<pos:position pos:line="200" pos:column="18"/></literal></expr>]<pos:position pos:line="200" pos:column="19"/></index></name> <operator pos:line="200" pos:column="20">!=<pos:position pos:line="200" pos:column="22"/></operator> <literal type="number" pos:line="200" pos:column="23">0<pos:position pos:line="200" pos:column="24"/></literal></expr>)<pos:position pos:line="200" pos:column="25"/></condition><then pos:line="200" pos:column="25"> <block pos:line="200" pos:column="26">{ <comment type="block" pos:line="200" pos:column="28">/* status */</comment>
      <expr_stmt><expr><call><name pos:line="201" pos:column="7">failf<pos:position pos:line="201" pos:column="12"/></name><argument_list pos:line="201" pos:column="12">(<argument><expr><name pos:line="201" pos:column="13">data<pos:position pos:line="201" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="201" pos:column="19">"User was rejected by the SOCKS5 server (%d %d)."<pos:position pos:line="201" pos:column="68"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="202" pos:column="13">socksreq<pos:position pos:line="202" pos:column="21"/></name><index pos:line="202" pos:column="21">[<expr><literal type="number" pos:line="202" pos:column="22">0<pos:position pos:line="202" pos:column="23"/></literal></expr>]<pos:position pos:line="202" pos:column="24"/></index></name></expr></argument>, <argument><expr><name><name pos:line="202" pos:column="26">socksreq<pos:position pos:line="202" pos:column="34"/></name><index pos:line="202" pos:column="34">[<expr><literal type="number" pos:line="202" pos:column="35">1<pos:position pos:line="202" pos:column="36"/></literal></expr>]<pos:position pos:line="202" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="202" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="39"/></expr_stmt>
      <return pos:line="203" pos:column="7">return <expr><name pos:line="203" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="203" pos:column="35"/></name></expr>;<pos:position pos:line="203" pos:column="36"/></return>
    }<pos:position pos:line="204" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="206" pos:column="5">/* Everything is good so far, user was authenticated! */</comment>
  }<pos:position pos:line="207" pos:column="4"/></block></then></if></elseif>
  <else pos:line="208" pos:column="3">else <block pos:line="208" pos:column="8">{
    <comment type="block" pos:line="209" pos:column="5">/* error */</comment>
    <if pos:line="210" pos:column="5">if<condition pos:line="210" pos:column="7">(<expr><operator pos:line="210" pos:column="8">!<pos:position pos:line="210" pos:column="9"/></operator><name pos:line="210" pos:column="9">allow_gssapi<pos:position pos:line="210" pos:column="21"/></name> <operator pos:line="210" pos:column="22">&amp;&amp;<pos:position pos:line="210" pos:column="32"/></operator> <operator pos:line="210" pos:column="25">(<pos:position pos:line="210" pos:column="26"/></operator><name><name pos:line="210" pos:column="26">socksreq<pos:position pos:line="210" pos:column="34"/></name><index pos:line="210" pos:column="34">[<expr><literal type="number" pos:line="210" pos:column="35">1<pos:position pos:line="210" pos:column="36"/></literal></expr>]<pos:position pos:line="210" pos:column="37"/></index></name> <operator pos:line="210" pos:column="38">==<pos:position pos:line="210" pos:column="40"/></operator> <literal type="number" pos:line="210" pos:column="41">1<pos:position pos:line="210" pos:column="42"/></literal><operator pos:line="210" pos:column="42">)<pos:position pos:line="210" pos:column="43"/></operator></expr>)<pos:position pos:line="210" pos:column="44"/></condition><then pos:line="210" pos:column="44"> <block pos:line="210" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="211" pos:column="7">failf<pos:position pos:line="211" pos:column="12"/></name><argument_list pos:line="211" pos:column="12">(<argument><expr><name pos:line="211" pos:column="13">data<pos:position pos:line="211" pos:column="17"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="212" pos:column="13">"SOCKS5 GSSAPI per-message authentication is not supported."<pos:position pos:line="212" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="212" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="75"/></expr_stmt>
      <return pos:line="213" pos:column="7">return <expr><name pos:line="213" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="213" pos:column="35"/></name></expr>;<pos:position pos:line="213" pos:column="36"/></return>
    }<pos:position pos:line="214" pos:column="6"/></block></then></if>
    <if pos:line="215" pos:column="5">if<condition pos:line="215" pos:column="7">(<expr><name><name pos:line="215" pos:column="8">socksreq<pos:position pos:line="215" pos:column="16"/></name><index pos:line="215" pos:column="16">[<expr><literal type="number" pos:line="215" pos:column="17">1<pos:position pos:line="215" pos:column="18"/></literal></expr>]<pos:position pos:line="215" pos:column="19"/></index></name> <operator pos:line="215" pos:column="20">==<pos:position pos:line="215" pos:column="22"/></operator> <literal type="number" pos:line="215" pos:column="23">255<pos:position pos:line="215" pos:column="26"/></literal></expr>)<pos:position pos:line="215" pos:column="27"/></condition><then pos:line="215" pos:column="27"> <block pos:line="215" pos:column="28">{
      <if pos:line="216" pos:column="7">if<condition pos:line="216" pos:column="9">(<expr><operator pos:line="216" pos:column="10">!<pos:position pos:line="216" pos:column="11"/></operator><name pos:line="216" pos:column="11">proxy_user<pos:position pos:line="216" pos:column="21"/></name> <operator pos:line="216" pos:column="22">||<pos:position pos:line="216" pos:column="24"/></operator> <operator pos:line="216" pos:column="25">!<pos:position pos:line="216" pos:column="26"/></operator><operator pos:line="216" pos:column="26">*<pos:position pos:line="216" pos:column="27"/></operator><name pos:line="216" pos:column="27">proxy_user<pos:position pos:line="216" pos:column="37"/></name></expr>)<pos:position pos:line="216" pos:column="38"/></condition><then pos:line="216" pos:column="38"> <block pos:line="216" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="217" pos:column="9">failf<pos:position pos:line="217" pos:column="14"/></name><argument_list pos:line="217" pos:column="14">(<argument><expr><name pos:line="217" pos:column="15">data<pos:position pos:line="217" pos:column="19"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="218" pos:column="15">"No authentication method was acceptable. (It is quite likely"<pos:position pos:line="218" pos:column="77"/></literal>
              <literal type="string" pos:line="219" pos:column="15">" that the SOCKS5 server wanted a username/password, since none"<pos:position pos:line="219" pos:column="79"/></literal>
              <literal type="string" pos:line="220" pos:column="15">" was supplied to the server on this connection.)"<pos:position pos:line="220" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="220" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="67"/></expr_stmt>
      }<pos:position pos:line="221" pos:column="8"/></block></then>
      <else pos:line="222" pos:column="7">else <block pos:line="222" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="223" pos:column="9">failf<pos:position pos:line="223" pos:column="14"/></name><argument_list pos:line="223" pos:column="14">(<argument><expr><name pos:line="223" pos:column="15">data<pos:position pos:line="223" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="223" pos:column="21">"No authentication method was acceptable."<pos:position pos:line="223" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="223" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="224" pos:column="8"/></block></else></if>
      <return pos:line="225" pos:column="7">return <expr><name pos:line="225" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="225" pos:column="35"/></name></expr>;<pos:position pos:line="225" pos:column="36"/></return>
    }<pos:position pos:line="226" pos:column="6"/></block></then>
    <else pos:line="227" pos:column="5">else <block pos:line="227" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="228" pos:column="7">failf<pos:position pos:line="228" pos:column="12"/></name><argument_list pos:line="228" pos:column="12">(<argument><expr><name pos:line="228" pos:column="13">data<pos:position pos:line="228" pos:column="17"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="229" pos:column="13">"Undocumented SOCKS5 mode attempted to be used by server."<pos:position pos:line="229" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="229" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="73"/></expr_stmt>
      <return pos:line="230" pos:column="7">return <expr><name pos:line="230" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="230" pos:column="35"/></name></expr>;<pos:position pos:line="230" pos:column="36"/></return>
    }<pos:position pos:line="231" pos:column="6"/></block></else></if>
  }<pos:position pos:line="232" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="234" pos:column="3">/* Authentication is complete, now specify destination to the proxy */</comment>
  <expr_stmt><expr><name pos:line="235" pos:column="3">len<pos:position pos:line="235" pos:column="6"/></name> <operator pos:line="235" pos:column="7">=<pos:position pos:line="235" pos:column="8"/></operator> <literal type="number" pos:line="235" pos:column="9">0<pos:position pos:line="235" pos:column="10"/></literal></expr>;<pos:position pos:line="235" pos:column="11"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="236" pos:column="3">socksreq<pos:position pos:line="236" pos:column="11"/></name><index pos:line="236" pos:column="11">[<expr><name pos:line="236" pos:column="12">len<pos:position pos:line="236" pos:column="15"/></name><operator pos:line="236" pos:column="15">++<pos:position pos:line="236" pos:column="17"/></operator></expr>]<pos:position pos:line="236" pos:column="18"/></index></name> <operator pos:line="236" pos:column="19">=<pos:position pos:line="236" pos:column="20"/></operator> <literal type="number" pos:line="236" pos:column="21">5<pos:position pos:line="236" pos:column="22"/></literal></expr>;<pos:position pos:line="236" pos:column="23"/></expr_stmt> <comment type="block" pos:line="236" pos:column="24">/* version (SOCKS5) */</comment>
  <expr_stmt><expr><name><name pos:line="237" pos:column="3">socksreq<pos:position pos:line="237" pos:column="11"/></name><index pos:line="237" pos:column="11">[<expr><name pos:line="237" pos:column="12">len<pos:position pos:line="237" pos:column="15"/></name><operator pos:line="237" pos:column="15">++<pos:position pos:line="237" pos:column="17"/></operator></expr>]<pos:position pos:line="237" pos:column="18"/></index></name> <operator pos:line="237" pos:column="19">=<pos:position pos:line="237" pos:column="20"/></operator> <literal type="number" pos:line="237" pos:column="21">1<pos:position pos:line="237" pos:column="22"/></literal></expr>;<pos:position pos:line="237" pos:column="23"/></expr_stmt> <comment type="block" pos:line="237" pos:column="24">/* connect */</comment>
  <expr_stmt><expr><name><name pos:line="238" pos:column="3">socksreq<pos:position pos:line="238" pos:column="11"/></name><index pos:line="238" pos:column="11">[<expr><name pos:line="238" pos:column="12">len<pos:position pos:line="238" pos:column="15"/></name><operator pos:line="238" pos:column="15">++<pos:position pos:line="238" pos:column="17"/></operator></expr>]<pos:position pos:line="238" pos:column="18"/></index></name> <operator pos:line="238" pos:column="19">=<pos:position pos:line="238" pos:column="20"/></operator> <literal type="number" pos:line="238" pos:column="21">0<pos:position pos:line="238" pos:column="22"/></literal></expr>;<pos:position pos:line="238" pos:column="23"/></expr_stmt> <comment type="block" pos:line="238" pos:column="24">/* must be zero */</comment>

  <if pos:line="240" pos:column="3">if<condition pos:line="240" pos:column="5">(<expr><operator pos:line="240" pos:column="6">!<pos:position pos:line="240" pos:column="7"/></operator><name pos:line="240" pos:column="7">socks5_resolve_local<pos:position pos:line="240" pos:column="27"/></name></expr>)<pos:position pos:line="240" pos:column="28"/></condition><then pos:line="240" pos:column="28"> <block pos:line="240" pos:column="29">{
    <expr_stmt><expr><name><name pos:line="241" pos:column="5">socksreq<pos:position pos:line="241" pos:column="13"/></name><index pos:line="241" pos:column="13">[<expr><name pos:line="241" pos:column="14">len<pos:position pos:line="241" pos:column="17"/></name><operator pos:line="241" pos:column="17">++<pos:position pos:line="241" pos:column="19"/></operator></expr>]<pos:position pos:line="241" pos:column="20"/></index></name> <operator pos:line="241" pos:column="21">=<pos:position pos:line="241" pos:column="22"/></operator> <literal type="number" pos:line="241" pos:column="23">3<pos:position pos:line="241" pos:column="24"/></literal></expr>;<pos:position pos:line="241" pos:column="25"/></expr_stmt> <comment type="block" pos:line="241" pos:column="26">/* ATYP: domain name = 3 */</comment>
    <expr_stmt><expr><name><name pos:line="242" pos:column="5">socksreq<pos:position pos:line="242" pos:column="13"/></name><index pos:line="242" pos:column="13">[<expr><name pos:line="242" pos:column="14">len<pos:position pos:line="242" pos:column="17"/></name><operator pos:line="242" pos:column="17">++<pos:position pos:line="242" pos:column="19"/></operator></expr>]<pos:position pos:line="242" pos:column="20"/></index></name> <operator pos:line="242" pos:column="21">=<pos:position pos:line="242" pos:column="22"/></operator> <operator pos:line="242" pos:column="23">(<pos:position pos:line="242" pos:column="24"/></operator><name pos:line="242" pos:column="24">char<pos:position pos:line="242" pos:column="28"/></name><operator pos:line="242" pos:column="28">)<pos:position pos:line="242" pos:column="29"/></operator> <name pos:line="242" pos:column="30">hostname_len<pos:position pos:line="242" pos:column="42"/></name></expr>;<pos:position pos:line="242" pos:column="43"/></expr_stmt> <comment type="block" pos:line="242" pos:column="44">/* address length */</comment>
    <expr_stmt><expr><call><name pos:line="243" pos:column="5">memcpy<pos:position pos:line="243" pos:column="11"/></name><argument_list pos:line="243" pos:column="11">(<argument><expr><operator pos:line="243" pos:column="12">&amp;<pos:position pos:line="243" pos:column="17"/></operator><name><name pos:line="243" pos:column="13">socksreq<pos:position pos:line="243" pos:column="21"/></name><index pos:line="243" pos:column="21">[<expr><name pos:line="243" pos:column="22">len<pos:position pos:line="243" pos:column="25"/></name></expr>]<pos:position pos:line="243" pos:column="26"/></index></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="28">hostname<pos:position pos:line="243" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="38">hostname_len<pos:position pos:line="243" pos:column="50"/></name></expr></argument>)<pos:position pos:line="243" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="52"/></expr_stmt> <comment type="block" pos:line="243" pos:column="53">/* address str w/o NULL */</comment>
    <expr_stmt><expr><name pos:line="244" pos:column="5">len<pos:position pos:line="244" pos:column="8"/></name> <operator pos:line="244" pos:column="9">+=<pos:position pos:line="244" pos:column="11"/></operator> <name pos:line="244" pos:column="12">hostname_len<pos:position pos:line="244" pos:column="24"/></name></expr>;<pos:position pos:line="244" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="245" pos:column="4"/></block></then>
  <else pos:line="246" pos:column="3">else <block pos:line="246" pos:column="8">{
    <decl_stmt><decl><type><name><name pos:line="247" pos:column="5">struct<pos:position pos:line="247" pos:column="11"/></name> <name pos:line="247" pos:column="12">Curl_dns_entry<pos:position pos:line="247" pos:column="26"/></name></name> <modifier pos:line="247" pos:column="27">*<pos:position pos:line="247" pos:column="28"/></modifier></type><name pos:line="247" pos:column="28">dns<pos:position pos:line="247" pos:column="31"/></name></decl>;<pos:position pos:line="247" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="248" pos:column="5">Curl_addrinfo<pos:position pos:line="248" pos:column="18"/></name> <modifier pos:line="248" pos:column="19">*<pos:position pos:line="248" pos:column="20"/></modifier></type><name pos:line="248" pos:column="20">hp<pos:position pos:line="248" pos:column="22"/></name> <init pos:line="248" pos:column="23">= <expr><name pos:line="248" pos:column="25">NULL<pos:position pos:line="248" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="248" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="249" pos:column="5">int<pos:position pos:line="249" pos:column="8"/></name></type> <name pos:line="249" pos:column="9">rc<pos:position pos:line="249" pos:column="11"/></name> <init pos:line="249" pos:column="12">= <expr><call><name pos:line="249" pos:column="14">Curl_resolv<pos:position pos:line="249" pos:column="25"/></name><argument_list pos:line="249" pos:column="25">(<argument><expr><name pos:line="249" pos:column="26">conn<pos:position pos:line="249" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="32">hostname<pos:position pos:line="249" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="42">remote_port<pos:position pos:line="249" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="249" pos:column="55">&amp;<pos:position pos:line="249" pos:column="60"/></operator><name pos:line="249" pos:column="56">dns<pos:position pos:line="249" pos:column="59"/></name></expr></argument>)<pos:position pos:line="249" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="249" pos:column="61"/></decl_stmt>

    <if pos:line="251" pos:column="5">if<condition pos:line="251" pos:column="7">(<expr><name pos:line="251" pos:column="8">rc<pos:position pos:line="251" pos:column="10"/></name> <operator pos:line="251" pos:column="11">==<pos:position pos:line="251" pos:column="13"/></operator> <name pos:line="251" pos:column="14">CURLRESOLV_ERROR<pos:position pos:line="251" pos:column="30"/></name></expr>)<pos:position pos:line="251" pos:column="31"/></condition><then pos:line="251" pos:column="31">
      <block type="pseudo"><return pos:line="252" pos:column="7">return <expr><name pos:line="252" pos:column="14">CURLE_COULDNT_RESOLVE_HOST<pos:position pos:line="252" pos:column="40"/></name></expr>;<pos:position pos:line="252" pos:column="41"/></return></block></then></if>

    <if pos:line="254" pos:column="5">if<condition pos:line="254" pos:column="7">(<expr><name pos:line="254" pos:column="8">rc<pos:position pos:line="254" pos:column="10"/></name> <operator pos:line="254" pos:column="11">==<pos:position pos:line="254" pos:column="13"/></operator> <name pos:line="254" pos:column="14">CURLRESOLV_PENDING<pos:position pos:line="254" pos:column="32"/></name></expr>)<pos:position pos:line="254" pos:column="33"/></condition><then pos:line="254" pos:column="33"> <block pos:line="254" pos:column="34">{
      <comment type="block" pos:line="255" pos:column="7">/* this requires that we're in "wait for resolve" state */</comment>
      <expr_stmt><expr><name pos:line="256" pos:column="7">code<pos:position pos:line="256" pos:column="11"/></name> <operator pos:line="256" pos:column="12">=<pos:position pos:line="256" pos:column="13"/></operator> <call><name pos:line="256" pos:column="14">Curl_resolver_wait_resolv<pos:position pos:line="256" pos:column="39"/></name><argument_list pos:line="256" pos:column="39">(<argument><expr><name pos:line="256" pos:column="40">conn<pos:position pos:line="256" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="256" pos:column="46">&amp;<pos:position pos:line="256" pos:column="51"/></operator><name pos:line="256" pos:column="47">dns<pos:position pos:line="256" pos:column="50"/></name></expr></argument>)<pos:position pos:line="256" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="52"/></expr_stmt>
      <if pos:line="257" pos:column="7">if<condition pos:line="257" pos:column="9">(<expr><name pos:line="257" pos:column="10">code<pos:position pos:line="257" pos:column="14"/></name></expr>)<pos:position pos:line="257" pos:column="15"/></condition><then pos:line="257" pos:column="15">
        <block type="pseudo"><return pos:line="258" pos:column="9">return <expr><name pos:line="258" pos:column="16">code<pos:position pos:line="258" pos:column="20"/></name></expr>;<pos:position pos:line="258" pos:column="21"/></return></block></then></if>
    }<pos:position pos:line="259" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="261" pos:column="5">/*
     * We cannot use 'hostent' as a struct that Curl_resolv() returns.  It
     * returns a Curl_addrinfo pointer that may not always look the same.
     */</comment>
    <if pos:line="265" pos:column="5">if<condition pos:line="265" pos:column="7">(<expr><name pos:line="265" pos:column="8">dns<pos:position pos:line="265" pos:column="11"/></name></expr>)<pos:position pos:line="265" pos:column="12"/></condition><then pos:line="265" pos:column="12">
      <block type="pseudo"><expr_stmt><expr><name pos:line="266" pos:column="7">hp<pos:position pos:line="266" pos:column="9"/></name> <operator pos:line="266" pos:column="10">=<pos:position pos:line="266" pos:column="11"/></operator> <name><name pos:line="266" pos:column="12">dns<pos:position pos:line="266" pos:column="15"/></name><operator pos:line="266" pos:column="15">-&gt;<pos:position pos:line="266" pos:column="20"/></operator><name pos:line="266" pos:column="17">addr<pos:position pos:line="266" pos:column="21"/></name></name></expr>;<pos:position pos:line="266" pos:column="22"/></expr_stmt></block></then></if>
    <if pos:line="267" pos:column="5">if<condition pos:line="267" pos:column="7">(<expr><name pos:line="267" pos:column="8">hp<pos:position pos:line="267" pos:column="10"/></name></expr>)<pos:position pos:line="267" pos:column="11"/></condition><then pos:line="267" pos:column="11"> <block pos:line="267" pos:column="12">{
      <decl_stmt><decl><type><name pos:line="268" pos:column="7">int<pos:position pos:line="268" pos:column="10"/></name></type> <name pos:line="268" pos:column="11">i<pos:position pos:line="268" pos:column="12"/></name></decl>;<pos:position pos:line="268" pos:column="13"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="269" pos:column="7">char<pos:position pos:line="269" pos:column="11"/></name></type> <name><name pos:line="269" pos:column="12">buf<pos:position pos:line="269" pos:column="15"/></name><index pos:line="269" pos:column="15">[<expr><literal type="number" pos:line="269" pos:column="16">64<pos:position pos:line="269" pos:column="18"/></literal></expr>]<pos:position pos:line="269" pos:column="19"/></index></name></decl>;<pos:position pos:line="269" pos:column="20"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="270" pos:column="7">Curl_printable_address<pos:position pos:line="270" pos:column="29"/></name><argument_list pos:line="270" pos:column="29">(<argument><expr><name pos:line="270" pos:column="30">hp<pos:position pos:line="270" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="270" pos:column="34">buf<pos:position pos:line="270" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="270" pos:column="39">sizeof<argument_list pos:line="270" pos:column="45">(<argument><expr><name pos:line="270" pos:column="46">buf<pos:position pos:line="270" pos:column="49"/></name></expr></argument>)<pos:position pos:line="270" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="270" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="52"/></expr_stmt>

      <if pos:line="272" pos:column="7">if<condition pos:line="272" pos:column="9">(<expr><name><name pos:line="272" pos:column="10">hp<pos:position pos:line="272" pos:column="12"/></name><operator pos:line="272" pos:column="12">-&gt;<pos:position pos:line="272" pos:column="17"/></operator><name pos:line="272" pos:column="14">ai_family<pos:position pos:line="272" pos:column="23"/></name></name> <operator pos:line="272" pos:column="24">==<pos:position pos:line="272" pos:column="26"/></operator> <name pos:line="272" pos:column="27">AF_INET<pos:position pos:line="272" pos:column="34"/></name></expr>)<pos:position pos:line="272" pos:column="35"/></condition><then pos:line="272" pos:column="35"> <block pos:line="272" pos:column="36">{
        <decl_stmt><decl><type><name><name pos:line="273" pos:column="9">struct<pos:position pos:line="273" pos:column="15"/></name> <name pos:line="273" pos:column="16">sockaddr_in<pos:position pos:line="273" pos:column="27"/></name></name> <modifier pos:line="273" pos:column="28">*<pos:position pos:line="273" pos:column="29"/></modifier></type><name pos:line="273" pos:column="29">saddr_in<pos:position pos:line="273" pos:column="37"/></name></decl>;<pos:position pos:line="273" pos:column="38"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="274" pos:column="9">socksreq<pos:position pos:line="274" pos:column="17"/></name><index pos:line="274" pos:column="17">[<expr><name pos:line="274" pos:column="18">len<pos:position pos:line="274" pos:column="21"/></name><operator pos:line="274" pos:column="21">++<pos:position pos:line="274" pos:column="23"/></operator></expr>]<pos:position pos:line="274" pos:column="24"/></index></name> <operator pos:line="274" pos:column="25">=<pos:position pos:line="274" pos:column="26"/></operator> <literal type="number" pos:line="274" pos:column="27">1<pos:position pos:line="274" pos:column="28"/></literal></expr>;<pos:position pos:line="274" pos:column="29"/></expr_stmt> <comment type="block" pos:line="274" pos:column="30">/* ATYP: IPv4 = 1 */</comment>

        <expr_stmt><expr><name pos:line="276" pos:column="9">saddr_in<pos:position pos:line="276" pos:column="17"/></name> <operator pos:line="276" pos:column="18">=<pos:position pos:line="276" pos:column="19"/></operator> <operator pos:line="276" pos:column="20">(<pos:position pos:line="276" pos:column="21"/></operator>struct <name pos:line="276" pos:column="28">sockaddr_in<pos:position pos:line="276" pos:column="39"/></name> <operator pos:line="276" pos:column="40">*<pos:position pos:line="276" pos:column="41"/></operator><operator pos:line="276" pos:column="41">)<pos:position pos:line="276" pos:column="42"/></operator><operator pos:line="276" pos:column="42">(<pos:position pos:line="276" pos:column="43"/></operator><name pos:line="276" pos:column="43">void<pos:position pos:line="276" pos:column="47"/></name> <operator pos:line="276" pos:column="48">*<pos:position pos:line="276" pos:column="49"/></operator><operator pos:line="276" pos:column="49">)<pos:position pos:line="276" pos:column="50"/></operator><name><name pos:line="276" pos:column="50">hp<pos:position pos:line="276" pos:column="52"/></name><operator pos:line="276" pos:column="52">-&gt;<pos:position pos:line="276" pos:column="57"/></operator><name pos:line="276" pos:column="54">ai_addr<pos:position pos:line="276" pos:column="61"/></name></name></expr>;<pos:position pos:line="276" pos:column="62"/></expr_stmt>
        <for pos:line="277" pos:column="9">for<control pos:line="277" pos:column="12">(<init><expr><name pos:line="277" pos:column="13">i<pos:position pos:line="277" pos:column="14"/></name> <operator pos:line="277" pos:column="15">=<pos:position pos:line="277" pos:column="16"/></operator> <literal type="number" pos:line="277" pos:column="17">0<pos:position pos:line="277" pos:column="18"/></literal></expr>;<pos:position pos:line="277" pos:column="19"/></init> <condition><expr><name pos:line="277" pos:column="20">i<pos:position pos:line="277" pos:column="21"/></name> <operator pos:line="277" pos:column="22">&lt;<pos:position pos:line="277" pos:column="26"/></operator> <literal type="number" pos:line="277" pos:column="24">4<pos:position pos:line="277" pos:column="25"/></literal></expr>;<pos:position pos:line="277" pos:column="26"/></condition> <incr><expr><name pos:line="277" pos:column="27">i<pos:position pos:line="277" pos:column="28"/></name><operator pos:line="277" pos:column="28">++<pos:position pos:line="277" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="277" pos:column="31"/></control> <block pos:line="277" pos:column="32">{
          <expr_stmt><expr><name><name pos:line="278" pos:column="11">socksreq<pos:position pos:line="278" pos:column="19"/></name><index pos:line="278" pos:column="19">[<expr><name pos:line="278" pos:column="20">len<pos:position pos:line="278" pos:column="23"/></name><operator pos:line="278" pos:column="23">++<pos:position pos:line="278" pos:column="25"/></operator></expr>]<pos:position pos:line="278" pos:column="26"/></index></name> <operator pos:line="278" pos:column="27">=<pos:position pos:line="278" pos:column="28"/></operator> <operator pos:line="278" pos:column="29">(<pos:position pos:line="278" pos:column="30"/></operator><operator pos:line="278" pos:column="30">(<pos:position pos:line="278" pos:column="31"/></operator><name pos:line="278" pos:column="31">unsigned<pos:position pos:line="278" pos:column="39"/></name> <name pos:line="278" pos:column="40">char<pos:position pos:line="278" pos:column="44"/></name> <operator pos:line="278" pos:column="45">*<pos:position pos:line="278" pos:column="46"/></operator><operator pos:line="278" pos:column="46">)<pos:position pos:line="278" pos:column="47"/></operator><operator pos:line="278" pos:column="47">&amp;<pos:position pos:line="278" pos:column="52"/></operator><name><name pos:line="278" pos:column="48">saddr_in<pos:position pos:line="278" pos:column="56"/></name><operator pos:line="278" pos:column="56">-&gt;<pos:position pos:line="278" pos:column="61"/></operator><name pos:line="278" pos:column="58">sin_addr<pos:position pos:line="278" pos:column="66"/></name><operator pos:line="278" pos:column="66">.<pos:position pos:line="278" pos:column="67"/></operator><name pos:line="278" pos:column="67">s_addr<pos:position pos:line="278" pos:column="73"/></name></name><operator pos:line="278" pos:column="73">)<pos:position pos:line="278" pos:column="74"/></operator><index pos:line="278" pos:column="74">[<expr><name pos:line="278" pos:column="75">i<pos:position pos:line="278" pos:column="76"/></name></expr>]<pos:position pos:line="278" pos:column="77"/></index></expr>;<pos:position pos:line="278" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="279" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="281" pos:column="9">infof<pos:position pos:line="281" pos:column="14"/></name><argument_list pos:line="281" pos:column="14">(<argument><expr><name pos:line="281" pos:column="15">data<pos:position pos:line="281" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="281" pos:column="21">"SOCKS5 connect to IPv4 %s (locally resolved)\n"<pos:position pos:line="281" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="281" pos:column="71">buf<pos:position pos:line="281" pos:column="74"/></name></expr></argument>)<pos:position pos:line="281" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="76"/></expr_stmt>
      }<pos:position pos:line="282" pos:column="8"/></block></then>
<cpp:ifdef pos:line="283" pos:column="1">#<cpp:directive pos:line="283" pos:column="2">ifdef<pos:position pos:line="283" pos:column="7"/></cpp:directive> <name pos:line="283" pos:column="8">ENABLE_IPV6<pos:position pos:line="283" pos:column="19"/></name></cpp:ifdef>
      <elseif pos:line="284" pos:column="7">else <if pos:line="284" pos:column="12">if<condition pos:line="284" pos:column="14">(<expr><name><name pos:line="284" pos:column="15">hp<pos:position pos:line="284" pos:column="17"/></name><operator pos:line="284" pos:column="17">-&gt;<pos:position pos:line="284" pos:column="22"/></operator><name pos:line="284" pos:column="19">ai_family<pos:position pos:line="284" pos:column="28"/></name></name> <operator pos:line="284" pos:column="29">==<pos:position pos:line="284" pos:column="31"/></operator> <name pos:line="284" pos:column="32">AF_INET6<pos:position pos:line="284" pos:column="40"/></name></expr>)<pos:position pos:line="284" pos:column="41"/></condition><then pos:line="284" pos:column="41"> <block pos:line="284" pos:column="42">{
        <decl_stmt><decl><type><name><name pos:line="285" pos:column="9">struct<pos:position pos:line="285" pos:column="15"/></name> <name pos:line="285" pos:column="16">sockaddr_in6<pos:position pos:line="285" pos:column="28"/></name></name> <modifier pos:line="285" pos:column="29">*<pos:position pos:line="285" pos:column="30"/></modifier></type><name pos:line="285" pos:column="30">saddr_in6<pos:position pos:line="285" pos:column="39"/></name></decl>;<pos:position pos:line="285" pos:column="40"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="286" pos:column="9">socksreq<pos:position pos:line="286" pos:column="17"/></name><index pos:line="286" pos:column="17">[<expr><name pos:line="286" pos:column="18">len<pos:position pos:line="286" pos:column="21"/></name><operator pos:line="286" pos:column="21">++<pos:position pos:line="286" pos:column="23"/></operator></expr>]<pos:position pos:line="286" pos:column="24"/></index></name> <operator pos:line="286" pos:column="25">=<pos:position pos:line="286" pos:column="26"/></operator> <literal type="number" pos:line="286" pos:column="27">4<pos:position pos:line="286" pos:column="28"/></literal></expr>;<pos:position pos:line="286" pos:column="29"/></expr_stmt> <comment type="block" pos:line="286" pos:column="30">/* ATYP: IPv6 = 4 */</comment>

        <expr_stmt><expr><name pos:line="288" pos:column="9">saddr_in6<pos:position pos:line="288" pos:column="18"/></name> <operator pos:line="288" pos:column="19">=<pos:position pos:line="288" pos:column="20"/></operator> <operator pos:line="288" pos:column="21">(<pos:position pos:line="288" pos:column="22"/></operator>struct <name pos:line="288" pos:column="29">sockaddr_in6<pos:position pos:line="288" pos:column="41"/></name> <operator pos:line="288" pos:column="42">*<pos:position pos:line="288" pos:column="43"/></operator><operator pos:line="288" pos:column="43">)<pos:position pos:line="288" pos:column="44"/></operator><operator pos:line="288" pos:column="44">(<pos:position pos:line="288" pos:column="45"/></operator><name pos:line="288" pos:column="45">void<pos:position pos:line="288" pos:column="49"/></name> <operator pos:line="288" pos:column="50">*<pos:position pos:line="288" pos:column="51"/></operator><operator pos:line="288" pos:column="51">)<pos:position pos:line="288" pos:column="52"/></operator><name><name pos:line="288" pos:column="52">hp<pos:position pos:line="288" pos:column="54"/></name><operator pos:line="288" pos:column="54">-&gt;<pos:position pos:line="288" pos:column="59"/></operator><name pos:line="288" pos:column="56">ai_addr<pos:position pos:line="288" pos:column="63"/></name></name></expr>;<pos:position pos:line="288" pos:column="64"/></expr_stmt>
        <for pos:line="289" pos:column="9">for<control pos:line="289" pos:column="12">(<init><expr><name pos:line="289" pos:column="13">i<pos:position pos:line="289" pos:column="14"/></name> <operator pos:line="289" pos:column="15">=<pos:position pos:line="289" pos:column="16"/></operator> <literal type="number" pos:line="289" pos:column="17">0<pos:position pos:line="289" pos:column="18"/></literal></expr>;<pos:position pos:line="289" pos:column="19"/></init> <condition><expr><name pos:line="289" pos:column="20">i<pos:position pos:line="289" pos:column="21"/></name> <operator pos:line="289" pos:column="22">&lt;<pos:position pos:line="289" pos:column="26"/></operator> <literal type="number" pos:line="289" pos:column="24">16<pos:position pos:line="289" pos:column="26"/></literal></expr>;<pos:position pos:line="289" pos:column="27"/></condition> <incr><expr><name pos:line="289" pos:column="28">i<pos:position pos:line="289" pos:column="29"/></name><operator pos:line="289" pos:column="29">++<pos:position pos:line="289" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="289" pos:column="32"/></control> <block pos:line="289" pos:column="33">{
          <expr_stmt><expr><name><name pos:line="290" pos:column="11">socksreq<pos:position pos:line="290" pos:column="19"/></name><index pos:line="290" pos:column="19">[<expr><name pos:line="290" pos:column="20">len<pos:position pos:line="290" pos:column="23"/></name><operator pos:line="290" pos:column="23">++<pos:position pos:line="290" pos:column="25"/></operator></expr>]<pos:position pos:line="290" pos:column="26"/></index></name> <operator pos:line="290" pos:column="27">=<pos:position pos:line="290" pos:column="28"/></operator>
            <operator pos:line="291" pos:column="13">(<pos:position pos:line="291" pos:column="14"/></operator><operator pos:line="291" pos:column="14">(<pos:position pos:line="291" pos:column="15"/></operator><name pos:line="291" pos:column="15">unsigned<pos:position pos:line="291" pos:column="23"/></name> <name pos:line="291" pos:column="24">char<pos:position pos:line="291" pos:column="28"/></name> <operator pos:line="291" pos:column="29">*<pos:position pos:line="291" pos:column="30"/></operator><operator pos:line="291" pos:column="30">)<pos:position pos:line="291" pos:column="31"/></operator><operator pos:line="291" pos:column="31">&amp;<pos:position pos:line="291" pos:column="36"/></operator><name><name pos:line="291" pos:column="32">saddr_in6<pos:position pos:line="291" pos:column="41"/></name><operator pos:line="291" pos:column="41">-&gt;<pos:position pos:line="291" pos:column="46"/></operator><name pos:line="291" pos:column="43">sin6_addr<pos:position pos:line="291" pos:column="52"/></name><operator pos:line="291" pos:column="52">.<pos:position pos:line="291" pos:column="53"/></operator><name pos:line="291" pos:column="53">s6_addr<pos:position pos:line="291" pos:column="60"/></name></name><operator pos:line="291" pos:column="60">)<pos:position pos:line="291" pos:column="61"/></operator><index pos:line="291" pos:column="61">[<expr><name pos:line="291" pos:column="62">i<pos:position pos:line="291" pos:column="63"/></name></expr>]<pos:position pos:line="291" pos:column="64"/></index></expr>;<pos:position pos:line="291" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="292" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="294" pos:column="9">infof<pos:position pos:line="294" pos:column="14"/></name><argument_list pos:line="294" pos:column="14">(<argument><expr><name pos:line="294" pos:column="15">data<pos:position pos:line="294" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="294" pos:column="21">"SOCKS5 connect to IPv6 %s (locally resolved)\n"<pos:position pos:line="294" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="294" pos:column="71">buf<pos:position pos:line="294" pos:column="74"/></name></expr></argument>)<pos:position pos:line="294" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="76"/></expr_stmt>
      }<pos:position pos:line="295" pos:column="8"/></block></then></if></elseif>
<cpp:endif pos:line="296" pos:column="1">#<cpp:directive pos:line="296" pos:column="2">endif<pos:position pos:line="296" pos:column="7"/></cpp:directive></cpp:endif>
      <else pos:line="297" pos:column="7">else <block pos:line="297" pos:column="12">{
        <expr_stmt><expr><name pos:line="298" pos:column="9">hp<pos:position pos:line="298" pos:column="11"/></name> <operator pos:line="298" pos:column="12">=<pos:position pos:line="298" pos:column="13"/></operator> <name pos:line="298" pos:column="14">NULL<pos:position pos:line="298" pos:column="18"/></name></expr>;<pos:position pos:line="298" pos:column="19"/></expr_stmt> <comment type="block" pos:line="298" pos:column="20">/* fail! */</comment>

        <expr_stmt><expr><call><name pos:line="300" pos:column="9">failf<pos:position pos:line="300" pos:column="14"/></name><argument_list pos:line="300" pos:column="14">(<argument><expr><name pos:line="300" pos:column="15">data<pos:position pos:line="300" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="300" pos:column="21">"SOCKS5 connection to %s not supported\n"<pos:position pos:line="300" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="300" pos:column="64">buf<pos:position pos:line="300" pos:column="67"/></name></expr></argument>)<pos:position pos:line="300" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="69"/></expr_stmt>
      }<pos:position pos:line="301" pos:column="8"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="303" pos:column="7">Curl_resolv_unlock<pos:position pos:line="303" pos:column="25"/></name><argument_list pos:line="303" pos:column="25">(<argument><expr><name pos:line="303" pos:column="26">data<pos:position pos:line="303" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="303" pos:column="32">dns<pos:position pos:line="303" pos:column="35"/></name></expr></argument>)<pos:position pos:line="303" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="37"/></expr_stmt> <comment type="block" pos:line="303" pos:column="38">/* not used anymore from now on */</comment>
    }<pos:position pos:line="304" pos:column="6"/></block></then></if>
    <if pos:line="305" pos:column="5">if<condition pos:line="305" pos:column="7">(<expr><operator pos:line="305" pos:column="8">!<pos:position pos:line="305" pos:column="9"/></operator><name pos:line="305" pos:column="9">hp<pos:position pos:line="305" pos:column="11"/></name></expr>)<pos:position pos:line="305" pos:column="12"/></condition><then pos:line="305" pos:column="12"> <block pos:line="305" pos:column="13">{
      <expr_stmt><expr><call><name pos:line="306" pos:column="7">failf<pos:position pos:line="306" pos:column="12"/></name><argument_list pos:line="306" pos:column="12">(<argument><expr><name pos:line="306" pos:column="13">data<pos:position pos:line="306" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="306" pos:column="19">"Failed to resolve \"%s\" for SOCKS5 connect."<pos:position pos:line="306" pos:column="65"/></literal></expr></argument>,
            <argument><expr><name pos:line="307" pos:column="13">hostname<pos:position pos:line="307" pos:column="21"/></name></expr></argument>)<pos:position pos:line="307" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="23"/></expr_stmt>
      <return pos:line="308" pos:column="7">return <expr><name pos:line="308" pos:column="14">CURLE_COULDNT_RESOLVE_HOST<pos:position pos:line="308" pos:column="40"/></name></expr>;<pos:position pos:line="308" pos:column="41"/></return>
    }<pos:position pos:line="309" pos:column="6"/></block></then></if>
  }<pos:position pos:line="310" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name><name pos:line="312" pos:column="3">socksreq<pos:position pos:line="312" pos:column="11"/></name><index pos:line="312" pos:column="11">[<expr><name pos:line="312" pos:column="12">len<pos:position pos:line="312" pos:column="15"/></name><operator pos:line="312" pos:column="15">++<pos:position pos:line="312" pos:column="17"/></operator></expr>]<pos:position pos:line="312" pos:column="18"/></index></name> <operator pos:line="312" pos:column="19">=<pos:position pos:line="312" pos:column="20"/></operator> <call pos:line="312" pos:column="21">(<name pos:line="312" pos:column="22">unsigned<pos:position pos:line="312" pos:column="30"/></name> <name pos:line="312" pos:column="31">char<pos:position pos:line="312" pos:column="35"/></name>)<argument_list pos:line="312" pos:column="36">(<argument><expr><operator pos:line="312" pos:column="37">(<pos:position pos:line="312" pos:column="38"/></operator><name pos:line="312" pos:column="38">remote_port<pos:position pos:line="312" pos:column="49"/></name> <operator pos:line="312" pos:column="50">&gt;&gt;<pos:position pos:line="312" pos:column="55"/></operator> <literal type="number" pos:line="312" pos:column="53">8<pos:position pos:line="312" pos:column="54"/></literal><operator pos:line="312" pos:column="54">)<pos:position pos:line="312" pos:column="55"/></operator> <operator pos:line="312" pos:column="56">&amp;<pos:position pos:line="312" pos:column="61"/></operator> <literal type="number" pos:line="312" pos:column="58">0xff<pos:position pos:line="312" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="312" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="64"/></expr_stmt> <comment type="block" pos:line="312" pos:column="65">/* PORT MSB */</comment>
  <expr_stmt><expr><name><name pos:line="313" pos:column="3">socksreq<pos:position pos:line="313" pos:column="11"/></name><index pos:line="313" pos:column="11">[<expr><name pos:line="313" pos:column="12">len<pos:position pos:line="313" pos:column="15"/></name><operator pos:line="313" pos:column="15">++<pos:position pos:line="313" pos:column="17"/></operator></expr>]<pos:position pos:line="313" pos:column="18"/></index></name> <operator pos:line="313" pos:column="19">=<pos:position pos:line="313" pos:column="20"/></operator> <call pos:line="313" pos:column="21">(<name pos:line="313" pos:column="22">unsigned<pos:position pos:line="313" pos:column="30"/></name> <name pos:line="313" pos:column="31">char<pos:position pos:line="313" pos:column="35"/></name>)<argument_list pos:line="313" pos:column="36">(<argument><expr><name pos:line="313" pos:column="37">remote_port<pos:position pos:line="313" pos:column="48"/></name> <operator pos:line="313" pos:column="49">&amp;<pos:position pos:line="313" pos:column="54"/></operator> <literal type="number" pos:line="313" pos:column="51">0xff<pos:position pos:line="313" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="313" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="57"/></expr_stmt>        <comment type="block" pos:line="313" pos:column="65">/* PORT LSB */</comment>

<cpp:if pos:line="315" pos:column="1">#<cpp:directive pos:line="315" pos:column="2">if<pos:position pos:line="315" pos:column="4"/></cpp:directive> <expr><call><name pos:line="315" pos:column="5">defined<pos:position pos:line="315" pos:column="12"/></name><argument_list pos:line="315" pos:column="12">(<argument><expr><name pos:line="315" pos:column="13">HAVE_GSSAPI<pos:position pos:line="315" pos:column="24"/></name></expr></argument>)<pos:position pos:line="315" pos:column="25"/></argument_list></call> <operator pos:line="315" pos:column="26">||<pos:position pos:line="315" pos:column="28"/></operator> <call><name pos:line="315" pos:column="29">defined<pos:position pos:line="315" pos:column="36"/></name><argument_list pos:line="315" pos:column="36">(<argument><expr><name pos:line="315" pos:column="37">USE_WINDOWS_SSPI<pos:position pos:line="315" pos:column="53"/></name></expr></argument>)<pos:position pos:line="315" pos:column="54"/></argument_list></call></expr></cpp:if>
  <if pos:line="316" pos:column="3">if<condition pos:line="316" pos:column="5">(<expr><name><name pos:line="316" pos:column="6">conn<pos:position pos:line="316" pos:column="10"/></name><operator pos:line="316" pos:column="10">-&gt;<pos:position pos:line="316" pos:column="15"/></operator><name pos:line="316" pos:column="12">socks5_gssapi_enctype<pos:position pos:line="316" pos:column="33"/></name></name></expr>)<pos:position pos:line="316" pos:column="34"/></condition><then pos:line="316" pos:column="34"> <block pos:line="316" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="317" pos:column="5">failf<pos:position pos:line="317" pos:column="10"/></name><argument_list pos:line="317" pos:column="10">(<argument><expr><name pos:line="317" pos:column="11">data<pos:position pos:line="317" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="317" pos:column="17">"SOCKS5 GSS-API protection not yet implemented."<pos:position pos:line="317" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="317" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="67"/></expr_stmt>
  }<pos:position pos:line="318" pos:column="4"/></block></then>
  <else pos:line="319" pos:column="3">else
<cpp:endif pos:line="320" pos:column="1">#<cpp:directive pos:line="320" pos:column="2">endif<pos:position pos:line="320" pos:column="7"/></cpp:directive></cpp:endif>
    <block type="pseudo"><expr_stmt><expr><name pos:line="321" pos:column="5">code<pos:position pos:line="321" pos:column="9"/></name> <operator pos:line="321" pos:column="10">=<pos:position pos:line="321" pos:column="11"/></operator> <call><name pos:line="321" pos:column="12">Curl_write_plain<pos:position pos:line="321" pos:column="28"/></name><argument_list pos:line="321" pos:column="28">(<argument><expr><name pos:line="321" pos:column="29">conn<pos:position pos:line="321" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="321" pos:column="35">sock<pos:position pos:line="321" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="321" pos:column="41">(<pos:position pos:line="321" pos:column="42"/></operator><name pos:line="321" pos:column="42">char<pos:position pos:line="321" pos:column="46"/></name> <operator pos:line="321" pos:column="47">*<pos:position pos:line="321" pos:column="48"/></operator><operator pos:line="321" pos:column="48">)<pos:position pos:line="321" pos:column="49"/></operator><name pos:line="321" pos:column="49">socksreq<pos:position pos:line="321" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="321" pos:column="59">len<pos:position pos:line="321" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="321" pos:column="64">&amp;<pos:position pos:line="321" pos:column="69"/></operator><name pos:line="321" pos:column="65">written<pos:position pos:line="321" pos:column="72"/></name></expr></argument>)<pos:position pos:line="321" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="74"/></expr_stmt></block></else></if>

  <if pos:line="323" pos:column="3">if<condition pos:line="323" pos:column="5">(<expr><name pos:line="323" pos:column="6">code<pos:position pos:line="323" pos:column="10"/></name> <operator pos:line="323" pos:column="11">||<pos:position pos:line="323" pos:column="13"/></operator> <operator pos:line="323" pos:column="14">(<pos:position pos:line="323" pos:column="15"/></operator><name pos:line="323" pos:column="15">len<pos:position pos:line="323" pos:column="18"/></name> <operator pos:line="323" pos:column="19">!=<pos:position pos:line="323" pos:column="21"/></operator> <name pos:line="323" pos:column="22">written<pos:position pos:line="323" pos:column="29"/></name><operator pos:line="323" pos:column="29">)<pos:position pos:line="323" pos:column="30"/></operator></expr>)<pos:position pos:line="323" pos:column="31"/></condition><then pos:line="323" pos:column="31"> <block pos:line="323" pos:column="32">{
    <expr_stmt><expr><call><name pos:line="324" pos:column="5">failf<pos:position pos:line="324" pos:column="10"/></name><argument_list pos:line="324" pos:column="10">(<argument><expr><name pos:line="324" pos:column="11">data<pos:position pos:line="324" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="324" pos:column="17">"Failed to send SOCKS5 connect request."<pos:position pos:line="324" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="324" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="59"/></expr_stmt>
    <return pos:line="325" pos:column="5">return <expr><name pos:line="325" pos:column="12">CURLE_COULDNT_CONNECT<pos:position pos:line="325" pos:column="33"/></name></expr>;<pos:position pos:line="325" pos:column="34"/></return>
  }<pos:position pos:line="326" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="328" pos:column="3">len<pos:position pos:line="328" pos:column="6"/></name> <operator pos:line="328" pos:column="7">=<pos:position pos:line="328" pos:column="8"/></operator> <literal type="number" pos:line="328" pos:column="9">10<pos:position pos:line="328" pos:column="11"/></literal></expr>;<pos:position pos:line="328" pos:column="12"/></expr_stmt> <comment type="block" pos:line="328" pos:column="13">/* minimum packet size is 10 */</comment>

<cpp:if pos:line="330" pos:column="1">#<cpp:directive pos:line="330" pos:column="2">if<pos:position pos:line="330" pos:column="4"/></cpp:directive> <expr><call><name pos:line="330" pos:column="5">defined<pos:position pos:line="330" pos:column="12"/></name><argument_list pos:line="330" pos:column="12">(<argument><expr><name pos:line="330" pos:column="13">HAVE_GSSAPI<pos:position pos:line="330" pos:column="24"/></name></expr></argument>)<pos:position pos:line="330" pos:column="25"/></argument_list></call> <operator pos:line="330" pos:column="26">||<pos:position pos:line="330" pos:column="28"/></operator> <call><name pos:line="330" pos:column="29">defined<pos:position pos:line="330" pos:column="36"/></name><argument_list pos:line="330" pos:column="36">(<argument><expr><name pos:line="330" pos:column="37">USE_WINDOWS_SSPI<pos:position pos:line="330" pos:column="53"/></name></expr></argument>)<pos:position pos:line="330" pos:column="54"/></argument_list></call></expr></cpp:if>
  <if pos:line="331" pos:column="3">if<condition pos:line="331" pos:column="5">(<expr><name><name pos:line="331" pos:column="6">conn<pos:position pos:line="331" pos:column="10"/></name><operator pos:line="331" pos:column="10">-&gt;<pos:position pos:line="331" pos:column="15"/></operator><name pos:line="331" pos:column="12">socks5_gssapi_enctype<pos:position pos:line="331" pos:column="33"/></name></name></expr>)<pos:position pos:line="331" pos:column="34"/></condition><then pos:line="331" pos:column="34"> <block pos:line="331" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="332" pos:column="5">failf<pos:position pos:line="332" pos:column="10"/></name><argument_list pos:line="332" pos:column="10">(<argument><expr><name pos:line="332" pos:column="11">data<pos:position pos:line="332" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="332" pos:column="17">"SOCKS5 GSS-API protection not yet implemented."<pos:position pos:line="332" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="332" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="67"/></expr_stmt>
  }<pos:position pos:line="333" pos:column="4"/></block></then>
  <else pos:line="334" pos:column="3">else
<cpp:endif pos:line="335" pos:column="1">#<cpp:directive pos:line="335" pos:column="2">endif<pos:position pos:line="335" pos:column="7"/></cpp:directive></cpp:endif>
    <block type="pseudo"><expr_stmt><expr><name pos:line="336" pos:column="5">result<pos:position pos:line="336" pos:column="11"/></name> <operator pos:line="336" pos:column="12">=<pos:position pos:line="336" pos:column="13"/></operator> <call><name pos:line="336" pos:column="14">Curl_blockread_all<pos:position pos:line="336" pos:column="32"/></name><argument_list pos:line="336" pos:column="32">(<argument><expr><name pos:line="336" pos:column="33">conn<pos:position pos:line="336" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="336" pos:column="39">sock<pos:position pos:line="336" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="336" pos:column="45">(<pos:position pos:line="336" pos:column="46"/></operator><name pos:line="336" pos:column="46">char<pos:position pos:line="336" pos:column="50"/></name> <operator pos:line="336" pos:column="51">*<pos:position pos:line="336" pos:column="52"/></operator><operator pos:line="336" pos:column="52">)<pos:position pos:line="336" pos:column="53"/></operator><name pos:line="336" pos:column="53">socksreq<pos:position pos:line="336" pos:column="61"/></name></expr></argument>,
                                <argument><expr><name pos:line="337" pos:column="33">len<pos:position pos:line="337" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="337" pos:column="38">&amp;<pos:position pos:line="337" pos:column="43"/></operator><name pos:line="337" pos:column="39">actualread<pos:position pos:line="337" pos:column="49"/></name></expr></argument>)<pos:position pos:line="337" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="51"/></expr_stmt></block></else></if>

  <if pos:line="339" pos:column="3">if<condition pos:line="339" pos:column="5">(<expr><name pos:line="339" pos:column="6">result<pos:position pos:line="339" pos:column="12"/></name> <operator pos:line="339" pos:column="13">||<pos:position pos:line="339" pos:column="15"/></operator> <operator pos:line="339" pos:column="16">(<pos:position pos:line="339" pos:column="17"/></operator><name pos:line="339" pos:column="17">len<pos:position pos:line="339" pos:column="20"/></name> <operator pos:line="339" pos:column="21">!=<pos:position pos:line="339" pos:column="23"/></operator> <name pos:line="339" pos:column="24">actualread<pos:position pos:line="339" pos:column="34"/></name><operator pos:line="339" pos:column="34">)<pos:position pos:line="339" pos:column="35"/></operator></expr>)<pos:position pos:line="339" pos:column="36"/></condition><then pos:line="339" pos:column="36"> <block pos:line="339" pos:column="37">{
    <expr_stmt><expr><call><name pos:line="340" pos:column="5">failf<pos:position pos:line="340" pos:column="10"/></name><argument_list pos:line="340" pos:column="10">(<argument><expr><name pos:line="340" pos:column="11">data<pos:position pos:line="340" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="340" pos:column="17">"Failed to receive SOCKS5 connect request ack."<pos:position pos:line="340" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="340" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="66"/></expr_stmt>
    <return pos:line="341" pos:column="5">return <expr><name pos:line="341" pos:column="12">CURLE_COULDNT_CONNECT<pos:position pos:line="341" pos:column="33"/></name></expr>;<pos:position pos:line="341" pos:column="34"/></return>
  }<pos:position pos:line="342" pos:column="4"/></block></then></if>

  <if pos:line="344" pos:column="3">if<condition pos:line="344" pos:column="5">(<expr><name><name pos:line="344" pos:column="6">socksreq<pos:position pos:line="344" pos:column="14"/></name><index pos:line="344" pos:column="14">[<expr><literal type="number" pos:line="344" pos:column="15">0<pos:position pos:line="344" pos:column="16"/></literal></expr>]<pos:position pos:line="344" pos:column="17"/></index></name> <operator pos:line="344" pos:column="18">!=<pos:position pos:line="344" pos:column="20"/></operator> <literal type="number" pos:line="344" pos:column="21">5<pos:position pos:line="344" pos:column="22"/></literal></expr>)<pos:position pos:line="344" pos:column="23"/></condition><then pos:line="344" pos:column="23"> <block pos:line="344" pos:column="24">{ <comment type="block" pos:line="344" pos:column="26">/* version */</comment>
    <expr_stmt><expr><call><name pos:line="345" pos:column="5">failf<pos:position pos:line="345" pos:column="10"/></name><argument_list pos:line="345" pos:column="10">(<argument><expr><name pos:line="345" pos:column="11">data<pos:position pos:line="345" pos:column="15"/></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="346" pos:column="11">"SOCKS5 reply has wrong version, version should be 5."<pos:position pos:line="346" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="346" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="67"/></expr_stmt>
    <return pos:line="347" pos:column="5">return <expr><name pos:line="347" pos:column="12">CURLE_COULDNT_CONNECT<pos:position pos:line="347" pos:column="33"/></name></expr>;<pos:position pos:line="347" pos:column="34"/></return>
  }<pos:position pos:line="348" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="350" pos:column="3">/* Fix: in general, returned BND.ADDR is variable length parameter by RFC
     1928, so the reply packet should be read until the end to avoid errors at
     subsequent protocol level.

    +----+-----+-------+------+----------+----------+
    |VER | REP |  RSV  | ATYP | BND.ADDR | BND.PORT |
    +----+-----+-------+------+----------+----------+
    | 1  |  1  | X'00' |  1   | Variable |    2     |
    +----+-----+-------+------+----------+----------+

     ATYP:
     o  IP v4 address: X'01', BND.ADDR = 4 byte
     o  domain name:  X'03', BND.ADDR = [ 1 byte length, string ]
     o  IP v6 address: X'04', BND.ADDR = 16 byte
     */</comment>

  <comment type="block" pos:line="366" pos:column="3">/* Calculate real packet size */</comment>
  <if pos:line="367" pos:column="3">if<condition pos:line="367" pos:column="5">(<expr><name><name pos:line="367" pos:column="6">socksreq<pos:position pos:line="367" pos:column="14"/></name><index pos:line="367" pos:column="14">[<expr><literal type="number" pos:line="367" pos:column="15">3<pos:position pos:line="367" pos:column="16"/></literal></expr>]<pos:position pos:line="367" pos:column="17"/></index></name> <operator pos:line="367" pos:column="18">==<pos:position pos:line="367" pos:column="20"/></operator> <literal type="number" pos:line="367" pos:column="21">3<pos:position pos:line="367" pos:column="22"/></literal></expr>)<pos:position pos:line="367" pos:column="23"/></condition><then pos:line="367" pos:column="23"> <block pos:line="367" pos:column="24">{
    <comment type="block" pos:line="368" pos:column="5">/* domain name */</comment>
    <decl_stmt><decl><type><name pos:line="369" pos:column="5">int<pos:position pos:line="369" pos:column="8"/></name></type> <name pos:line="369" pos:column="9">addrlen<pos:position pos:line="369" pos:column="16"/></name> <init pos:line="369" pos:column="17">= <expr><operator pos:line="369" pos:column="19">(<pos:position pos:line="369" pos:column="20"/></operator><name pos:line="369" pos:column="20">int<pos:position pos:line="369" pos:column="23"/></name><operator pos:line="369" pos:column="23">)<pos:position pos:line="369" pos:column="24"/></operator> <name><name pos:line="369" pos:column="25">socksreq<pos:position pos:line="369" pos:column="33"/></name><index pos:line="369" pos:column="33">[<expr><literal type="number" pos:line="369" pos:column="34">4<pos:position pos:line="369" pos:column="35"/></literal></expr>]<pos:position pos:line="369" pos:column="36"/></index></name></expr></init></decl>;<pos:position pos:line="369" pos:column="37"/></decl_stmt>
    <expr_stmt><expr><name pos:line="370" pos:column="5">len<pos:position pos:line="370" pos:column="8"/></name> <operator pos:line="370" pos:column="9">=<pos:position pos:line="370" pos:column="10"/></operator> <literal type="number" pos:line="370" pos:column="11">5<pos:position pos:line="370" pos:column="12"/></literal> <operator pos:line="370" pos:column="13">+<pos:position pos:line="370" pos:column="14"/></operator> <name pos:line="370" pos:column="15">addrlen<pos:position pos:line="370" pos:column="22"/></name> <operator pos:line="370" pos:column="23">+<pos:position pos:line="370" pos:column="24"/></operator> <literal type="number" pos:line="370" pos:column="25">2<pos:position pos:line="370" pos:column="26"/></literal></expr>;<pos:position pos:line="370" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="371" pos:column="4"/></block></then>
  <elseif pos:line="372" pos:column="3">else <if pos:line="372" pos:column="8">if<condition pos:line="372" pos:column="10">(<expr><name><name pos:line="372" pos:column="11">socksreq<pos:position pos:line="372" pos:column="19"/></name><index pos:line="372" pos:column="19">[<expr><literal type="number" pos:line="372" pos:column="20">3<pos:position pos:line="372" pos:column="21"/></literal></expr>]<pos:position pos:line="372" pos:column="22"/></index></name> <operator pos:line="372" pos:column="23">==<pos:position pos:line="372" pos:column="25"/></operator> <literal type="number" pos:line="372" pos:column="26">4<pos:position pos:line="372" pos:column="27"/></literal></expr>)<pos:position pos:line="372" pos:column="28"/></condition><then pos:line="372" pos:column="28"> <block pos:line="372" pos:column="29">{
    <comment type="block" pos:line="373" pos:column="5">/* IPv6 */</comment>
    <expr_stmt><expr><name pos:line="374" pos:column="5">len<pos:position pos:line="374" pos:column="8"/></name> <operator pos:line="374" pos:column="9">=<pos:position pos:line="374" pos:column="10"/></operator> <literal type="number" pos:line="374" pos:column="11">4<pos:position pos:line="374" pos:column="12"/></literal> <operator pos:line="374" pos:column="13">+<pos:position pos:line="374" pos:column="14"/></operator> <literal type="number" pos:line="374" pos:column="15">16<pos:position pos:line="374" pos:column="17"/></literal> <operator pos:line="374" pos:column="18">+<pos:position pos:line="374" pos:column="19"/></operator> <literal type="number" pos:line="374" pos:column="20">2<pos:position pos:line="374" pos:column="21"/></literal></expr>;<pos:position pos:line="374" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="375" pos:column="4"/></block></then></if></elseif></if>

  <comment type="block" pos:line="377" pos:column="3">/* At this point we already read first 10 bytes */</comment>
<cpp:if pos:line="378" pos:column="1">#<cpp:directive pos:line="378" pos:column="2">if<pos:position pos:line="378" pos:column="4"/></cpp:directive> <expr><call><name pos:line="378" pos:column="5">defined<pos:position pos:line="378" pos:column="12"/></name><argument_list pos:line="378" pos:column="12">(<argument><expr><name pos:line="378" pos:column="13">HAVE_GSSAPI<pos:position pos:line="378" pos:column="24"/></name></expr></argument>)<pos:position pos:line="378" pos:column="25"/></argument_list></call> <operator pos:line="378" pos:column="26">||<pos:position pos:line="378" pos:column="28"/></operator> <call><name pos:line="378" pos:column="29">defined<pos:position pos:line="378" pos:column="36"/></name><argument_list pos:line="378" pos:column="36">(<argument><expr><name pos:line="378" pos:column="37">USE_WINDOWS_SSPI<pos:position pos:line="378" pos:column="53"/></name></expr></argument>)<pos:position pos:line="378" pos:column="54"/></argument_list></call></expr></cpp:if>
  <if pos:line="379" pos:column="3">if<condition pos:line="379" pos:column="5">(<expr><operator pos:line="379" pos:column="6">!<pos:position pos:line="379" pos:column="7"/></operator><name><name pos:line="379" pos:column="7">conn<pos:position pos:line="379" pos:column="11"/></name><operator pos:line="379" pos:column="11">-&gt;<pos:position pos:line="379" pos:column="16"/></operator><name pos:line="379" pos:column="13">socks5_gssapi_enctype<pos:position pos:line="379" pos:column="34"/></name></name></expr>)<pos:position pos:line="379" pos:column="35"/></condition><then pos:line="379" pos:column="35"> <block pos:line="379" pos:column="36">{
    <comment type="block" pos:line="380" pos:column="5">/* decrypt_gssapi_blockread already read the whole packet */</comment>
<cpp:endif pos:line="381" pos:column="1">#<cpp:directive pos:line="381" pos:column="2">endif<pos:position pos:line="381" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="382" pos:column="5">if<condition pos:line="382" pos:column="7">(<expr><name pos:line="382" pos:column="8">len<pos:position pos:line="382" pos:column="11"/></name> <operator pos:line="382" pos:column="12">&gt;<pos:position pos:line="382" pos:column="16"/></operator> <literal type="number" pos:line="382" pos:column="14">10<pos:position pos:line="382" pos:column="16"/></literal></expr>)<pos:position pos:line="382" pos:column="17"/></condition><then pos:line="382" pos:column="17"> <block pos:line="382" pos:column="18">{
      <expr_stmt><expr><name pos:line="383" pos:column="7">result<pos:position pos:line="383" pos:column="13"/></name> <operator pos:line="383" pos:column="14">=<pos:position pos:line="383" pos:column="15"/></operator> <call><name pos:line="383" pos:column="16">Curl_blockread_all<pos:position pos:line="383" pos:column="34"/></name><argument_list pos:line="383" pos:column="34">(<argument><expr><name pos:line="383" pos:column="35">conn<pos:position pos:line="383" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="383" pos:column="41">sock<pos:position pos:line="383" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="383" pos:column="47">(<pos:position pos:line="383" pos:column="48"/></operator><name pos:line="383" pos:column="48">char<pos:position pos:line="383" pos:column="52"/></name> <operator pos:line="383" pos:column="53">*<pos:position pos:line="383" pos:column="54"/></operator><operator pos:line="383" pos:column="54">)<pos:position pos:line="383" pos:column="55"/></operator><operator pos:line="383" pos:column="55">&amp;<pos:position pos:line="383" pos:column="60"/></operator><name><name pos:line="383" pos:column="56">socksreq<pos:position pos:line="383" pos:column="64"/></name><index pos:line="383" pos:column="64">[<expr><literal type="number" pos:line="383" pos:column="65">10<pos:position pos:line="383" pos:column="67"/></literal></expr>]<pos:position pos:line="383" pos:column="68"/></index></name></expr></argument>,
                                  <argument><expr><name pos:line="384" pos:column="35">len<pos:position pos:line="384" pos:column="38"/></name> <operator pos:line="384" pos:column="39">-<pos:position pos:line="384" pos:column="40"/></operator> <literal type="number" pos:line="384" pos:column="41">10<pos:position pos:line="384" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="384" pos:column="45">&amp;<pos:position pos:line="384" pos:column="50"/></operator><name pos:line="384" pos:column="46">actualread<pos:position pos:line="384" pos:column="56"/></name></expr></argument>)<pos:position pos:line="384" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="58"/></expr_stmt>
      <if pos:line="385" pos:column="7">if<condition pos:line="385" pos:column="9">(<expr><name pos:line="385" pos:column="10">result<pos:position pos:line="385" pos:column="16"/></name> <operator pos:line="385" pos:column="17">||<pos:position pos:line="385" pos:column="19"/></operator> <operator pos:line="385" pos:column="20">(<pos:position pos:line="385" pos:column="21"/></operator><operator pos:line="385" pos:column="21">(<pos:position pos:line="385" pos:column="22"/></operator><name pos:line="385" pos:column="22">len<pos:position pos:line="385" pos:column="25"/></name> <operator pos:line="385" pos:column="26">-<pos:position pos:line="385" pos:column="27"/></operator> <literal type="number" pos:line="385" pos:column="28">10<pos:position pos:line="385" pos:column="30"/></literal><operator pos:line="385" pos:column="30">)<pos:position pos:line="385" pos:column="31"/></operator> <operator pos:line="385" pos:column="32">!=<pos:position pos:line="385" pos:column="34"/></operator> <name pos:line="385" pos:column="35">actualread<pos:position pos:line="385" pos:column="45"/></name><operator pos:line="385" pos:column="45">)<pos:position pos:line="385" pos:column="46"/></operator></expr>)<pos:position pos:line="385" pos:column="47"/></condition><then pos:line="385" pos:column="47"> <block pos:line="385" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="386" pos:column="9">failf<pos:position pos:line="386" pos:column="14"/></name><argument_list pos:line="386" pos:column="14">(<argument><expr><name pos:line="386" pos:column="15">data<pos:position pos:line="386" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="386" pos:column="21">"Failed to receive SOCKS5 connect request ack."<pos:position pos:line="386" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="386" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="386" pos:column="70"/></expr_stmt>
        <return pos:line="387" pos:column="9">return <expr><name pos:line="387" pos:column="16">CURLE_COULDNT_CONNECT<pos:position pos:line="387" pos:column="37"/></name></expr>;<pos:position pos:line="387" pos:column="38"/></return>
      }<pos:position pos:line="388" pos:column="8"/></block></then></if>
    }<pos:position pos:line="389" pos:column="6"/></block></then></if>
<cpp:if pos:line="390" pos:column="1">#<cpp:directive pos:line="390" pos:column="2">if<pos:position pos:line="390" pos:column="4"/></cpp:directive> <expr><call><name pos:line="390" pos:column="5">defined<pos:position pos:line="390" pos:column="12"/></name><argument_list pos:line="390" pos:column="12">(<argument><expr><name pos:line="390" pos:column="13">HAVE_GSSAPI<pos:position pos:line="390" pos:column="24"/></name></expr></argument>)<pos:position pos:line="390" pos:column="25"/></argument_list></call> <operator pos:line="390" pos:column="26">||<pos:position pos:line="390" pos:column="28"/></operator> <call><name pos:line="390" pos:column="29">defined<pos:position pos:line="390" pos:column="36"/></name><argument_list pos:line="390" pos:column="36">(<argument><expr><name pos:line="390" pos:column="37">USE_WINDOWS_SSPI<pos:position pos:line="390" pos:column="53"/></name></expr></argument>)<pos:position pos:line="390" pos:column="54"/></argument_list></call></expr></cpp:if>
  }<pos:position pos:line="391" pos:column="4"/></block></then></if>
<cpp:endif pos:line="392" pos:column="1">#<cpp:directive pos:line="392" pos:column="2">endif<pos:position pos:line="392" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="394" pos:column="3">if<condition pos:line="394" pos:column="5">(<expr><name><name pos:line="394" pos:column="6">socksreq<pos:position pos:line="394" pos:column="14"/></name><index pos:line="394" pos:column="14">[<expr><literal type="number" pos:line="394" pos:column="15">1<pos:position pos:line="394" pos:column="16"/></literal></expr>]<pos:position pos:line="394" pos:column="17"/></index></name> <operator pos:line="394" pos:column="18">!=<pos:position pos:line="394" pos:column="20"/></operator> <literal type="number" pos:line="394" pos:column="21">0<pos:position pos:line="394" pos:column="22"/></literal></expr>)<pos:position pos:line="394" pos:column="23"/></condition><then pos:line="394" pos:column="23"> <block pos:line="394" pos:column="24">{ <comment type="block" pos:line="394" pos:column="26">/* Anything besides 0 is an error */</comment>
    <if pos:line="395" pos:column="5">if<condition pos:line="395" pos:column="7">(<expr><name><name pos:line="395" pos:column="8">socksreq<pos:position pos:line="395" pos:column="16"/></name><index pos:line="395" pos:column="16">[<expr><literal type="number" pos:line="395" pos:column="17">3<pos:position pos:line="395" pos:column="18"/></literal></expr>]<pos:position pos:line="395" pos:column="19"/></index></name> <operator pos:line="395" pos:column="20">==<pos:position pos:line="395" pos:column="22"/></operator> <literal type="number" pos:line="395" pos:column="23">1<pos:position pos:line="395" pos:column="24"/></literal></expr>)<pos:position pos:line="395" pos:column="25"/></condition><then pos:line="395" pos:column="25"> <block pos:line="395" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="396" pos:column="7">failf<pos:position pos:line="396" pos:column="12"/></name><argument_list pos:line="396" pos:column="12">(<argument><expr><name pos:line="396" pos:column="13">data<pos:position pos:line="396" pos:column="17"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="397" pos:column="13">"Can't complete SOCKS5 connection to %d.%d.%d.%d:%d. (%d)"<pos:position pos:line="397" pos:column="71"/></literal></expr></argument>,
            <argument><expr><operator pos:line="398" pos:column="13">(<pos:position pos:line="398" pos:column="14"/></operator><name pos:line="398" pos:column="14">unsigned<pos:position pos:line="398" pos:column="22"/></name> <name pos:line="398" pos:column="23">char<pos:position pos:line="398" pos:column="27"/></name><operator pos:line="398" pos:column="27">)<pos:position pos:line="398" pos:column="28"/></operator><name><name pos:line="398" pos:column="28">socksreq<pos:position pos:line="398" pos:column="36"/></name><index pos:line="398" pos:column="36">[<expr><literal type="number" pos:line="398" pos:column="37">4<pos:position pos:line="398" pos:column="38"/></literal></expr>]<pos:position pos:line="398" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="398" pos:column="41">(<pos:position pos:line="398" pos:column="42"/></operator><name pos:line="398" pos:column="42">unsigned<pos:position pos:line="398" pos:column="50"/></name> <name pos:line="398" pos:column="51">char<pos:position pos:line="398" pos:column="55"/></name><operator pos:line="398" pos:column="55">)<pos:position pos:line="398" pos:column="56"/></operator><name><name pos:line="398" pos:column="56">socksreq<pos:position pos:line="398" pos:column="64"/></name><index pos:line="398" pos:column="64">[<expr><literal type="number" pos:line="398" pos:column="65">5<pos:position pos:line="398" pos:column="66"/></literal></expr>]<pos:position pos:line="398" pos:column="67"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="399" pos:column="13">(<pos:position pos:line="399" pos:column="14"/></operator><name pos:line="399" pos:column="14">unsigned<pos:position pos:line="399" pos:column="22"/></name> <name pos:line="399" pos:column="23">char<pos:position pos:line="399" pos:column="27"/></name><operator pos:line="399" pos:column="27">)<pos:position pos:line="399" pos:column="28"/></operator><name><name pos:line="399" pos:column="28">socksreq<pos:position pos:line="399" pos:column="36"/></name><index pos:line="399" pos:column="36">[<expr><literal type="number" pos:line="399" pos:column="37">6<pos:position pos:line="399" pos:column="38"/></literal></expr>]<pos:position pos:line="399" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="399" pos:column="41">(<pos:position pos:line="399" pos:column="42"/></operator><name pos:line="399" pos:column="42">unsigned<pos:position pos:line="399" pos:column="50"/></name> <name pos:line="399" pos:column="51">char<pos:position pos:line="399" pos:column="55"/></name><operator pos:line="399" pos:column="55">)<pos:position pos:line="399" pos:column="56"/></operator><name><name pos:line="399" pos:column="56">socksreq<pos:position pos:line="399" pos:column="64"/></name><index pos:line="399" pos:column="64">[<expr><literal type="number" pos:line="399" pos:column="65">7<pos:position pos:line="399" pos:column="66"/></literal></expr>]<pos:position pos:line="399" pos:column="67"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="400" pos:column="13">(<pos:position pos:line="400" pos:column="14"/></operator><operator pos:line="400" pos:column="14">(<pos:position pos:line="400" pos:column="15"/></operator><operator pos:line="400" pos:column="15">(<pos:position pos:line="400" pos:column="16"/></operator><name pos:line="400" pos:column="16">unsigned<pos:position pos:line="400" pos:column="24"/></name> <name pos:line="400" pos:column="25">char<pos:position pos:line="400" pos:column="29"/></name><operator pos:line="400" pos:column="29">)<pos:position pos:line="400" pos:column="30"/></operator><name><name pos:line="400" pos:column="30">socksreq<pos:position pos:line="400" pos:column="38"/></name><index pos:line="400" pos:column="38">[<expr><literal type="number" pos:line="400" pos:column="39">8<pos:position pos:line="400" pos:column="40"/></literal></expr>]<pos:position pos:line="400" pos:column="41"/></index></name> <operator pos:line="400" pos:column="42">&lt;&lt;<pos:position pos:line="400" pos:column="50"/></operator> <literal type="number" pos:line="400" pos:column="45">8<pos:position pos:line="400" pos:column="46"/></literal><operator pos:line="400" pos:column="46">)<pos:position pos:line="400" pos:column="47"/></operator> <operator pos:line="400" pos:column="48">|<pos:position pos:line="400" pos:column="49"/></operator>
             <operator pos:line="401" pos:column="14">(<pos:position pos:line="401" pos:column="15"/></operator><name pos:line="401" pos:column="15">unsigned<pos:position pos:line="401" pos:column="23"/></name> <name pos:line="401" pos:column="24">char<pos:position pos:line="401" pos:column="28"/></name><operator pos:line="401" pos:column="28">)<pos:position pos:line="401" pos:column="29"/></operator><name><name pos:line="401" pos:column="29">socksreq<pos:position pos:line="401" pos:column="37"/></name><index pos:line="401" pos:column="37">[<expr><literal type="number" pos:line="401" pos:column="38">9<pos:position pos:line="401" pos:column="39"/></literal></expr>]<pos:position pos:line="401" pos:column="40"/></index></name><operator pos:line="401" pos:column="40">)<pos:position pos:line="401" pos:column="41"/></operator></expr></argument>,
            <argument><expr><operator pos:line="402" pos:column="13">(<pos:position pos:line="402" pos:column="14"/></operator><name pos:line="402" pos:column="14">unsigned<pos:position pos:line="402" pos:column="22"/></name> <name pos:line="402" pos:column="23">char<pos:position pos:line="402" pos:column="27"/></name><operator pos:line="402" pos:column="27">)<pos:position pos:line="402" pos:column="28"/></operator><name><name pos:line="402" pos:column="28">socksreq<pos:position pos:line="402" pos:column="36"/></name><index pos:line="402" pos:column="36">[<expr><literal type="number" pos:line="402" pos:column="37">1<pos:position pos:line="402" pos:column="38"/></literal></expr>]<pos:position pos:line="402" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="402" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="402" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="403" pos:column="6"/></block></then>
    <elseif pos:line="404" pos:column="5">else <if pos:line="404" pos:column="10">if<condition pos:line="404" pos:column="12">(<expr><name><name pos:line="404" pos:column="13">socksreq<pos:position pos:line="404" pos:column="21"/></name><index pos:line="404" pos:column="21">[<expr><literal type="number" pos:line="404" pos:column="22">3<pos:position pos:line="404" pos:column="23"/></literal></expr>]<pos:position pos:line="404" pos:column="24"/></index></name> <operator pos:line="404" pos:column="25">==<pos:position pos:line="404" pos:column="27"/></operator> <literal type="number" pos:line="404" pos:column="28">3<pos:position pos:line="404" pos:column="29"/></literal></expr>)<pos:position pos:line="404" pos:column="30"/></condition><then pos:line="404" pos:column="30"> <block pos:line="404" pos:column="31">{
      <decl_stmt><decl><type><name pos:line="405" pos:column="7">unsigned<pos:position pos:line="405" pos:column="15"/></name> <name pos:line="405" pos:column="16">char<pos:position pos:line="405" pos:column="20"/></name></type> <name pos:line="405" pos:column="21">port_upper<pos:position pos:line="405" pos:column="31"/></name> <init pos:line="405" pos:column="32">= <expr><operator pos:line="405" pos:column="34">(<pos:position pos:line="405" pos:column="35"/></operator><name pos:line="405" pos:column="35">unsigned<pos:position pos:line="405" pos:column="43"/></name> <name pos:line="405" pos:column="44">char<pos:position pos:line="405" pos:column="48"/></name><operator pos:line="405" pos:column="48">)<pos:position pos:line="405" pos:column="49"/></operator><name><name pos:line="405" pos:column="49">socksreq<pos:position pos:line="405" pos:column="57"/></name><index pos:line="405" pos:column="57">[<expr><name pos:line="405" pos:column="58">len<pos:position pos:line="405" pos:column="61"/></name> <operator pos:line="405" pos:column="62">-<pos:position pos:line="405" pos:column="63"/></operator> <literal type="number" pos:line="405" pos:column="64">2<pos:position pos:line="405" pos:column="65"/></literal></expr>]<pos:position pos:line="405" pos:column="66"/></index></name></expr></init></decl>;<pos:position pos:line="405" pos:column="67"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="406" pos:column="7">socksreq<pos:position pos:line="406" pos:column="15"/></name><index pos:line="406" pos:column="15">[<expr><name pos:line="406" pos:column="16">len<pos:position pos:line="406" pos:column="19"/></name> <operator pos:line="406" pos:column="20">-<pos:position pos:line="406" pos:column="21"/></operator> <literal type="number" pos:line="406" pos:column="22">2<pos:position pos:line="406" pos:column="23"/></literal></expr>]<pos:position pos:line="406" pos:column="24"/></index></name> <operator pos:line="406" pos:column="25">=<pos:position pos:line="406" pos:column="26"/></operator> <literal type="number" pos:line="406" pos:column="27">0<pos:position pos:line="406" pos:column="28"/></literal></expr>;<pos:position pos:line="406" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="407" pos:column="7">failf<pos:position pos:line="407" pos:column="12"/></name><argument_list pos:line="407" pos:column="12">(<argument><expr><name pos:line="407" pos:column="13">data<pos:position pos:line="407" pos:column="17"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="408" pos:column="13">"Can't complete SOCKS5 connection to %s:%d. (%d)"<pos:position pos:line="408" pos:column="62"/></literal></expr></argument>,
            <argument><expr><operator pos:line="409" pos:column="13">(<pos:position pos:line="409" pos:column="14"/></operator><name pos:line="409" pos:column="14">char<pos:position pos:line="409" pos:column="18"/></name> <operator pos:line="409" pos:column="19">*<pos:position pos:line="409" pos:column="20"/></operator><operator pos:line="409" pos:column="20">)<pos:position pos:line="409" pos:column="21"/></operator><operator pos:line="409" pos:column="21">&amp;<pos:position pos:line="409" pos:column="26"/></operator><name><name pos:line="409" pos:column="22">socksreq<pos:position pos:line="409" pos:column="30"/></name><index pos:line="409" pos:column="30">[<expr><literal type="number" pos:line="409" pos:column="31">5<pos:position pos:line="409" pos:column="32"/></literal></expr>]<pos:position pos:line="409" pos:column="33"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="410" pos:column="13">(<pos:position pos:line="410" pos:column="14"/></operator><operator pos:line="410" pos:column="14">(<pos:position pos:line="410" pos:column="15"/></operator><name pos:line="410" pos:column="15">port_upper<pos:position pos:line="410" pos:column="25"/></name> <operator pos:line="410" pos:column="26">&lt;&lt;<pos:position pos:line="410" pos:column="34"/></operator> <literal type="number" pos:line="410" pos:column="29">8<pos:position pos:line="410" pos:column="30"/></literal><operator pos:line="410" pos:column="30">)<pos:position pos:line="410" pos:column="31"/></operator> <operator pos:line="410" pos:column="32">|<pos:position pos:line="410" pos:column="33"/></operator>
             <operator pos:line="411" pos:column="14">(<pos:position pos:line="411" pos:column="15"/></operator><name pos:line="411" pos:column="15">unsigned<pos:position pos:line="411" pos:column="23"/></name> <name pos:line="411" pos:column="24">char<pos:position pos:line="411" pos:column="28"/></name><operator pos:line="411" pos:column="28">)<pos:position pos:line="411" pos:column="29"/></operator><name><name pos:line="411" pos:column="29">socksreq<pos:position pos:line="411" pos:column="37"/></name><index pos:line="411" pos:column="37">[<expr><name pos:line="411" pos:column="38">len<pos:position pos:line="411" pos:column="41"/></name> <operator pos:line="411" pos:column="42">-<pos:position pos:line="411" pos:column="43"/></operator> <literal type="number" pos:line="411" pos:column="44">1<pos:position pos:line="411" pos:column="45"/></literal></expr>]<pos:position pos:line="411" pos:column="46"/></index></name><operator pos:line="411" pos:column="46">)<pos:position pos:line="411" pos:column="47"/></operator></expr></argument>,
            <argument><expr><operator pos:line="412" pos:column="13">(<pos:position pos:line="412" pos:column="14"/></operator><name pos:line="412" pos:column="14">unsigned<pos:position pos:line="412" pos:column="22"/></name> <name pos:line="412" pos:column="23">char<pos:position pos:line="412" pos:column="27"/></name><operator pos:line="412" pos:column="27">)<pos:position pos:line="412" pos:column="28"/></operator><name><name pos:line="412" pos:column="28">socksreq<pos:position pos:line="412" pos:column="36"/></name><index pos:line="412" pos:column="36">[<expr><literal type="number" pos:line="412" pos:column="37">1<pos:position pos:line="412" pos:column="38"/></literal></expr>]<pos:position pos:line="412" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="412" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="412" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="413" pos:column="7">socksreq<pos:position pos:line="413" pos:column="15"/></name><index pos:line="413" pos:column="15">[<expr><name pos:line="413" pos:column="16">len<pos:position pos:line="413" pos:column="19"/></name> <operator pos:line="413" pos:column="20">-<pos:position pos:line="413" pos:column="21"/></operator> <literal type="number" pos:line="413" pos:column="22">2<pos:position pos:line="413" pos:column="23"/></literal></expr>]<pos:position pos:line="413" pos:column="24"/></index></name> <operator pos:line="413" pos:column="25">=<pos:position pos:line="413" pos:column="26"/></operator> <name pos:line="413" pos:column="27">port_upper<pos:position pos:line="413" pos:column="37"/></name></expr>;<pos:position pos:line="413" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="414" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="415" pos:column="5">else <if pos:line="415" pos:column="10">if<condition pos:line="415" pos:column="12">(<expr><name><name pos:line="415" pos:column="13">socksreq<pos:position pos:line="415" pos:column="21"/></name><index pos:line="415" pos:column="21">[<expr><literal type="number" pos:line="415" pos:column="22">3<pos:position pos:line="415" pos:column="23"/></literal></expr>]<pos:position pos:line="415" pos:column="24"/></index></name> <operator pos:line="415" pos:column="25">==<pos:position pos:line="415" pos:column="27"/></operator> <literal type="number" pos:line="415" pos:column="28">4<pos:position pos:line="415" pos:column="29"/></literal></expr>)<pos:position pos:line="415" pos:column="30"/></condition><then pos:line="415" pos:column="30"> <block pos:line="415" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="416" pos:column="7">failf<pos:position pos:line="416" pos:column="12"/></name><argument_list pos:line="416" pos:column="12">(<argument><expr><name pos:line="416" pos:column="13">data<pos:position pos:line="416" pos:column="17"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="417" pos:column="13">"Can't complete SOCKS5 connection to %02x%02x:%02x%02x:"<pos:position pos:line="417" pos:column="69"/></literal>
            <literal type="string" pos:line="418" pos:column="13">"%02x%02x:%02x%02x:%02x%02x:%02x%02x:%02x%02x:%02x%02x:%d. (%d)"<pos:position pos:line="418" pos:column="77"/></literal></expr></argument>,
            <argument><expr><operator pos:line="419" pos:column="13">(<pos:position pos:line="419" pos:column="14"/></operator><name pos:line="419" pos:column="14">unsigned<pos:position pos:line="419" pos:column="22"/></name> <name pos:line="419" pos:column="23">char<pos:position pos:line="419" pos:column="27"/></name><operator pos:line="419" pos:column="27">)<pos:position pos:line="419" pos:column="28"/></operator><name><name pos:line="419" pos:column="28">socksreq<pos:position pos:line="419" pos:column="36"/></name><index pos:line="419" pos:column="36">[<expr><literal type="number" pos:line="419" pos:column="37">4<pos:position pos:line="419" pos:column="38"/></literal></expr>]<pos:position pos:line="419" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="419" pos:column="41">(<pos:position pos:line="419" pos:column="42"/></operator><name pos:line="419" pos:column="42">unsigned<pos:position pos:line="419" pos:column="50"/></name> <name pos:line="419" pos:column="51">char<pos:position pos:line="419" pos:column="55"/></name><operator pos:line="419" pos:column="55">)<pos:position pos:line="419" pos:column="56"/></operator><name><name pos:line="419" pos:column="56">socksreq<pos:position pos:line="419" pos:column="64"/></name><index pos:line="419" pos:column="64">[<expr><literal type="number" pos:line="419" pos:column="65">5<pos:position pos:line="419" pos:column="66"/></literal></expr>]<pos:position pos:line="419" pos:column="67"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="420" pos:column="13">(<pos:position pos:line="420" pos:column="14"/></operator><name pos:line="420" pos:column="14">unsigned<pos:position pos:line="420" pos:column="22"/></name> <name pos:line="420" pos:column="23">char<pos:position pos:line="420" pos:column="27"/></name><operator pos:line="420" pos:column="27">)<pos:position pos:line="420" pos:column="28"/></operator><name><name pos:line="420" pos:column="28">socksreq<pos:position pos:line="420" pos:column="36"/></name><index pos:line="420" pos:column="36">[<expr><literal type="number" pos:line="420" pos:column="37">6<pos:position pos:line="420" pos:column="38"/></literal></expr>]<pos:position pos:line="420" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="420" pos:column="41">(<pos:position pos:line="420" pos:column="42"/></operator><name pos:line="420" pos:column="42">unsigned<pos:position pos:line="420" pos:column="50"/></name> <name pos:line="420" pos:column="51">char<pos:position pos:line="420" pos:column="55"/></name><operator pos:line="420" pos:column="55">)<pos:position pos:line="420" pos:column="56"/></operator><name><name pos:line="420" pos:column="56">socksreq<pos:position pos:line="420" pos:column="64"/></name><index pos:line="420" pos:column="64">[<expr><literal type="number" pos:line="420" pos:column="65">7<pos:position pos:line="420" pos:column="66"/></literal></expr>]<pos:position pos:line="420" pos:column="67"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="421" pos:column="13">(<pos:position pos:line="421" pos:column="14"/></operator><name pos:line="421" pos:column="14">unsigned<pos:position pos:line="421" pos:column="22"/></name> <name pos:line="421" pos:column="23">char<pos:position pos:line="421" pos:column="27"/></name><operator pos:line="421" pos:column="27">)<pos:position pos:line="421" pos:column="28"/></operator><name><name pos:line="421" pos:column="28">socksreq<pos:position pos:line="421" pos:column="36"/></name><index pos:line="421" pos:column="36">[<expr><literal type="number" pos:line="421" pos:column="37">8<pos:position pos:line="421" pos:column="38"/></literal></expr>]<pos:position pos:line="421" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="421" pos:column="41">(<pos:position pos:line="421" pos:column="42"/></operator><name pos:line="421" pos:column="42">unsigned<pos:position pos:line="421" pos:column="50"/></name> <name pos:line="421" pos:column="51">char<pos:position pos:line="421" pos:column="55"/></name><operator pos:line="421" pos:column="55">)<pos:position pos:line="421" pos:column="56"/></operator><name><name pos:line="421" pos:column="56">socksreq<pos:position pos:line="421" pos:column="64"/></name><index pos:line="421" pos:column="64">[<expr><literal type="number" pos:line="421" pos:column="65">9<pos:position pos:line="421" pos:column="66"/></literal></expr>]<pos:position pos:line="421" pos:column="67"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="422" pos:column="13">(<pos:position pos:line="422" pos:column="14"/></operator><name pos:line="422" pos:column="14">unsigned<pos:position pos:line="422" pos:column="22"/></name> <name pos:line="422" pos:column="23">char<pos:position pos:line="422" pos:column="27"/></name><operator pos:line="422" pos:column="27">)<pos:position pos:line="422" pos:column="28"/></operator><name><name pos:line="422" pos:column="28">socksreq<pos:position pos:line="422" pos:column="36"/></name><index pos:line="422" pos:column="36">[<expr><literal type="number" pos:line="422" pos:column="37">10<pos:position pos:line="422" pos:column="39"/></literal></expr>]<pos:position pos:line="422" pos:column="40"/></index></name></expr></argument>, <argument><expr><operator pos:line="422" pos:column="42">(<pos:position pos:line="422" pos:column="43"/></operator><name pos:line="422" pos:column="43">unsigned<pos:position pos:line="422" pos:column="51"/></name> <name pos:line="422" pos:column="52">char<pos:position pos:line="422" pos:column="56"/></name><operator pos:line="422" pos:column="56">)<pos:position pos:line="422" pos:column="57"/></operator><name><name pos:line="422" pos:column="57">socksreq<pos:position pos:line="422" pos:column="65"/></name><index pos:line="422" pos:column="65">[<expr><literal type="number" pos:line="422" pos:column="66">11<pos:position pos:line="422" pos:column="68"/></literal></expr>]<pos:position pos:line="422" pos:column="69"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="423" pos:column="13">(<pos:position pos:line="423" pos:column="14"/></operator><name pos:line="423" pos:column="14">unsigned<pos:position pos:line="423" pos:column="22"/></name> <name pos:line="423" pos:column="23">char<pos:position pos:line="423" pos:column="27"/></name><operator pos:line="423" pos:column="27">)<pos:position pos:line="423" pos:column="28"/></operator><name><name pos:line="423" pos:column="28">socksreq<pos:position pos:line="423" pos:column="36"/></name><index pos:line="423" pos:column="36">[<expr><literal type="number" pos:line="423" pos:column="37">12<pos:position pos:line="423" pos:column="39"/></literal></expr>]<pos:position pos:line="423" pos:column="40"/></index></name></expr></argument>, <argument><expr><operator pos:line="423" pos:column="42">(<pos:position pos:line="423" pos:column="43"/></operator><name pos:line="423" pos:column="43">unsigned<pos:position pos:line="423" pos:column="51"/></name> <name pos:line="423" pos:column="52">char<pos:position pos:line="423" pos:column="56"/></name><operator pos:line="423" pos:column="56">)<pos:position pos:line="423" pos:column="57"/></operator><name><name pos:line="423" pos:column="57">socksreq<pos:position pos:line="423" pos:column="65"/></name><index pos:line="423" pos:column="65">[<expr><literal type="number" pos:line="423" pos:column="66">13<pos:position pos:line="423" pos:column="68"/></literal></expr>]<pos:position pos:line="423" pos:column="69"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="424" pos:column="13">(<pos:position pos:line="424" pos:column="14"/></operator><name pos:line="424" pos:column="14">unsigned<pos:position pos:line="424" pos:column="22"/></name> <name pos:line="424" pos:column="23">char<pos:position pos:line="424" pos:column="27"/></name><operator pos:line="424" pos:column="27">)<pos:position pos:line="424" pos:column="28"/></operator><name><name pos:line="424" pos:column="28">socksreq<pos:position pos:line="424" pos:column="36"/></name><index pos:line="424" pos:column="36">[<expr><literal type="number" pos:line="424" pos:column="37">14<pos:position pos:line="424" pos:column="39"/></literal></expr>]<pos:position pos:line="424" pos:column="40"/></index></name></expr></argument>, <argument><expr><operator pos:line="424" pos:column="42">(<pos:position pos:line="424" pos:column="43"/></operator><name pos:line="424" pos:column="43">unsigned<pos:position pos:line="424" pos:column="51"/></name> <name pos:line="424" pos:column="52">char<pos:position pos:line="424" pos:column="56"/></name><operator pos:line="424" pos:column="56">)<pos:position pos:line="424" pos:column="57"/></operator><name><name pos:line="424" pos:column="57">socksreq<pos:position pos:line="424" pos:column="65"/></name><index pos:line="424" pos:column="65">[<expr><literal type="number" pos:line="424" pos:column="66">15<pos:position pos:line="424" pos:column="68"/></literal></expr>]<pos:position pos:line="424" pos:column="69"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="425" pos:column="13">(<pos:position pos:line="425" pos:column="14"/></operator><name pos:line="425" pos:column="14">unsigned<pos:position pos:line="425" pos:column="22"/></name> <name pos:line="425" pos:column="23">char<pos:position pos:line="425" pos:column="27"/></name><operator pos:line="425" pos:column="27">)<pos:position pos:line="425" pos:column="28"/></operator><name><name pos:line="425" pos:column="28">socksreq<pos:position pos:line="425" pos:column="36"/></name><index pos:line="425" pos:column="36">[<expr><literal type="number" pos:line="425" pos:column="37">16<pos:position pos:line="425" pos:column="39"/></literal></expr>]<pos:position pos:line="425" pos:column="40"/></index></name></expr></argument>, <argument><expr><operator pos:line="425" pos:column="42">(<pos:position pos:line="425" pos:column="43"/></operator><name pos:line="425" pos:column="43">unsigned<pos:position pos:line="425" pos:column="51"/></name> <name pos:line="425" pos:column="52">char<pos:position pos:line="425" pos:column="56"/></name><operator pos:line="425" pos:column="56">)<pos:position pos:line="425" pos:column="57"/></operator><name><name pos:line="425" pos:column="57">socksreq<pos:position pos:line="425" pos:column="65"/></name><index pos:line="425" pos:column="65">[<expr><literal type="number" pos:line="425" pos:column="66">17<pos:position pos:line="425" pos:column="68"/></literal></expr>]<pos:position pos:line="425" pos:column="69"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="426" pos:column="13">(<pos:position pos:line="426" pos:column="14"/></operator><name pos:line="426" pos:column="14">unsigned<pos:position pos:line="426" pos:column="22"/></name> <name pos:line="426" pos:column="23">char<pos:position pos:line="426" pos:column="27"/></name><operator pos:line="426" pos:column="27">)<pos:position pos:line="426" pos:column="28"/></operator><name><name pos:line="426" pos:column="28">socksreq<pos:position pos:line="426" pos:column="36"/></name><index pos:line="426" pos:column="36">[<expr><literal type="number" pos:line="426" pos:column="37">18<pos:position pos:line="426" pos:column="39"/></literal></expr>]<pos:position pos:line="426" pos:column="40"/></index></name></expr></argument>, <argument><expr><operator pos:line="426" pos:column="42">(<pos:position pos:line="426" pos:column="43"/></operator><name pos:line="426" pos:column="43">unsigned<pos:position pos:line="426" pos:column="51"/></name> <name pos:line="426" pos:column="52">char<pos:position pos:line="426" pos:column="56"/></name><operator pos:line="426" pos:column="56">)<pos:position pos:line="426" pos:column="57"/></operator><name><name pos:line="426" pos:column="57">socksreq<pos:position pos:line="426" pos:column="65"/></name><index pos:line="426" pos:column="65">[<expr><literal type="number" pos:line="426" pos:column="66">19<pos:position pos:line="426" pos:column="68"/></literal></expr>]<pos:position pos:line="426" pos:column="69"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="427" pos:column="13">(<pos:position pos:line="427" pos:column="14"/></operator><operator pos:line="427" pos:column="14">(<pos:position pos:line="427" pos:column="15"/></operator><operator pos:line="427" pos:column="15">(<pos:position pos:line="427" pos:column="16"/></operator><name pos:line="427" pos:column="16">unsigned<pos:position pos:line="427" pos:column="24"/></name> <name pos:line="427" pos:column="25">char<pos:position pos:line="427" pos:column="29"/></name><operator pos:line="427" pos:column="29">)<pos:position pos:line="427" pos:column="30"/></operator><name><name pos:line="427" pos:column="30">socksreq<pos:position pos:line="427" pos:column="38"/></name><index pos:line="427" pos:column="38">[<expr><literal type="number" pos:line="427" pos:column="39">20<pos:position pos:line="427" pos:column="41"/></literal></expr>]<pos:position pos:line="427" pos:column="42"/></index></name> <operator pos:line="427" pos:column="43">&lt;&lt;<pos:position pos:line="427" pos:column="51"/></operator> <literal type="number" pos:line="427" pos:column="46">8<pos:position pos:line="427" pos:column="47"/></literal><operator pos:line="427" pos:column="47">)<pos:position pos:line="427" pos:column="48"/></operator> <operator pos:line="427" pos:column="49">|<pos:position pos:line="427" pos:column="50"/></operator>
             <operator pos:line="428" pos:column="14">(<pos:position pos:line="428" pos:column="15"/></operator><name pos:line="428" pos:column="15">unsigned<pos:position pos:line="428" pos:column="23"/></name> <name pos:line="428" pos:column="24">char<pos:position pos:line="428" pos:column="28"/></name><operator pos:line="428" pos:column="28">)<pos:position pos:line="428" pos:column="29"/></operator><name><name pos:line="428" pos:column="29">socksreq<pos:position pos:line="428" pos:column="37"/></name><index pos:line="428" pos:column="37">[<expr><literal type="number" pos:line="428" pos:column="38">21<pos:position pos:line="428" pos:column="40"/></literal></expr>]<pos:position pos:line="428" pos:column="41"/></index></name><operator pos:line="428" pos:column="41">)<pos:position pos:line="428" pos:column="42"/></operator></expr></argument>,
            <argument><expr><operator pos:line="429" pos:column="13">(<pos:position pos:line="429" pos:column="14"/></operator><name pos:line="429" pos:column="14">unsigned<pos:position pos:line="429" pos:column="22"/></name> <name pos:line="429" pos:column="23">char<pos:position pos:line="429" pos:column="27"/></name><operator pos:line="429" pos:column="27">)<pos:position pos:line="429" pos:column="28"/></operator><name><name pos:line="429" pos:column="28">socksreq<pos:position pos:line="429" pos:column="36"/></name><index pos:line="429" pos:column="36">[<expr><literal type="number" pos:line="429" pos:column="37">1<pos:position pos:line="429" pos:column="38"/></literal></expr>]<pos:position pos:line="429" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="429" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="429" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="430" pos:column="6"/></block></then></if></elseif></if>
    <return pos:line="431" pos:column="5">return <expr><name pos:line="431" pos:column="12">CURLE_COULDNT_CONNECT<pos:position pos:line="431" pos:column="33"/></name></expr>;<pos:position pos:line="431" pos:column="34"/></return>
  }<pos:position pos:line="432" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="433" pos:column="3">infof<pos:position pos:line="433" pos:column="8"/></name><argument_list pos:line="433" pos:column="8">(<argument><expr><name pos:line="433" pos:column="9">data<pos:position pos:line="433" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="433" pos:column="15">"SOCKS5 request granted.\n"<pos:position pos:line="433" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="433" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="433" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="435" pos:column="3">(<pos:position pos:line="435" pos:column="4"/></operator><name pos:line="435" pos:column="4">void<pos:position pos:line="435" pos:column="8"/></name><operator pos:line="435" pos:column="8">)<pos:position pos:line="435" pos:column="9"/></operator><call><name pos:line="435" pos:column="9">curlx_nonblock<pos:position pos:line="435" pos:column="23"/></name><argument_list pos:line="435" pos:column="23">(<argument><expr><name pos:line="435" pos:column="24">sock<pos:position pos:line="435" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="435" pos:column="30">TRUE<pos:position pos:line="435" pos:column="34"/></name></expr></argument>)<pos:position pos:line="435" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="435" pos:column="36"/></expr_stmt>
  <return pos:line="436" pos:column="3">return <expr><name pos:line="436" pos:column="10">CURLE_OK<pos:position pos:line="436" pos:column="18"/></name></expr>;<pos:position pos:line="436" pos:column="19"/></return> <comment type="block" pos:line="436" pos:column="20">/* Proxy was successful! */</comment>
}<pos:position pos:line="437" pos:column="2"/></block></function></unit>

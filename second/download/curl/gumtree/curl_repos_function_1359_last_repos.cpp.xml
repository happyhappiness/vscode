<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1359_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_getformdata<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">Curl_easy<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">data<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">curl_mimepart<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">finalform<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>,
                          <parameter><decl><type><name><name pos:line="3" pos:column="27">struct<pos:position pos:line="3" pos:column="33"/></name> <name pos:line="3" pos:column="34">curl_httppost<pos:position pos:line="3" pos:column="47"/></name></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">post<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="4" pos:column="27">curl_read_callback<pos:position pos:line="4" pos:column="45"/></name></type> <name pos:line="4" pos:column="46">fread_func<pos:position pos:line="4" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="57"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">CURLE_OK<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">curl_mime<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">form<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">curl_mime<pos:position pos:line="8" pos:column="12"/></name> <modifier pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></modifier></type><name pos:line="8" pos:column="14">multipart<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">curl_mimepart<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">part<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">curl_httppost<pos:position pos:line="10" pos:column="23"/></name></name> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type><name pos:line="10" pos:column="25">file<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">Curl_mime_cleanpart<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">finalform<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt> <comment type="block" pos:line="12" pos:column="35">/* default form is empty */</comment>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><operator pos:line="14" pos:column="6">!<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">post<pos:position pos:line="14" pos:column="11"/></name></expr>)<pos:position pos:line="14" pos:column="12"/></condition><then pos:line="14" pos:column="12">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">result<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></return></block></then></if> <comment type="block" pos:line="15" pos:column="20">/* no input =&gt; no output! */</comment>

  <expr_stmt><expr><name pos:line="17" pos:column="3">form<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">curl_mime_init<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">data<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><operator pos:line="18" pos:column="6">!<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">form<pos:position pos:line="18" pos:column="11"/></name></expr>)<pos:position pos:line="18" pos:column="12"/></condition><then pos:line="18" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">result<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="19" pos:column="33"/></name></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt></block></then></if>

  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><operator pos:line="21" pos:column="6">!<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">result<pos:position pos:line="21" pos:column="13"/></name></expr>)<pos:position pos:line="21" pos:column="14"/></condition><then pos:line="21" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="5">result<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">curl_mime_subparts<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">finalform<pos:position pos:line="22" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="44">form<pos:position pos:line="22" pos:column="48"/></name></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* Process each top part. */</comment>
  <for pos:line="25" pos:column="3">for<control pos:line="25" pos:column="6">(<init pos:line="25" pos:column="7">;<pos:position pos:line="25" pos:column="8"/></init> <condition><expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">result<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">&amp;&amp;<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="20">post<pos:position pos:line="25" pos:column="24"/></name></expr>;<pos:position pos:line="25" pos:column="25"/></condition> <incr><expr><name pos:line="25" pos:column="26">post<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">=<pos:position pos:line="25" pos:column="32"/></operator> <name><name pos:line="25" pos:column="33">post<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">-&gt;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="39">next<pos:position pos:line="25" pos:column="43"/></name></name></expr></incr>)<pos:position pos:line="25" pos:column="44"/></control> <block pos:line="25" pos:column="45">{
    <comment type="block" pos:line="26" pos:column="5">/* If we have more than a file here, create a mime subpart and fill it. */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">multipart<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">form<pos:position pos:line="27" pos:column="21"/></name></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>
    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><name><name pos:line="28" pos:column="8">post<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">more<pos:position pos:line="28" pos:column="18"/></name></name></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19"> <block pos:line="28" pos:column="20">{
      <expr_stmt><expr><name pos:line="29" pos:column="7">part<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">curl_mime_addpart<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">form<pos:position pos:line="29" pos:column="36"/></name></expr></argument>)<pos:position pos:line="29" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
      <if pos:line="30" pos:column="7">if<condition pos:line="30" pos:column="9">(<expr><operator pos:line="30" pos:column="10">!<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">part<pos:position pos:line="30" pos:column="15"/></name></expr>)<pos:position pos:line="30" pos:column="16"/></condition><then pos:line="30" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="9">result<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">CURLE_OUT_OF_MEMORY<pos:position pos:line="31" pos:column="37"/></name></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt></block></then></if>
      <if pos:line="32" pos:column="7">if<condition pos:line="32" pos:column="9">(<expr><operator pos:line="32" pos:column="10">!<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="11">result<pos:position pos:line="32" pos:column="17"/></name></expr>)<pos:position pos:line="32" pos:column="18"/></condition><then pos:line="32" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="9">result<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">setname<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">part<pos:position pos:line="33" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="32">post<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">-&gt;<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="38">name<pos:position pos:line="33" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="44">post<pos:position pos:line="33" pos:column="48"/></name><operator pos:line="33" pos:column="48">-&gt;<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="50">namelength<pos:position pos:line="33" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt></block></then></if>
      <if pos:line="34" pos:column="7">if<condition pos:line="34" pos:column="9">(<expr><operator pos:line="34" pos:column="10">!<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="11">result<pos:position pos:line="34" pos:column="17"/></name></expr>)<pos:position pos:line="34" pos:column="18"/></condition><then pos:line="34" pos:column="18"> <block pos:line="34" pos:column="19">{
        <expr_stmt><expr><name pos:line="35" pos:column="9">multipart<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <call><name pos:line="35" pos:column="21">curl_mime_init<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name pos:line="35" pos:column="36">data<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
        <if pos:line="36" pos:column="9">if<condition pos:line="36" pos:column="11">(<expr><operator pos:line="36" pos:column="12">!<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="13">multipart<pos:position pos:line="36" pos:column="22"/></name></expr>)<pos:position pos:line="36" pos:column="23"/></condition><then pos:line="36" pos:column="23">
          <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="11">result<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">CURLE_OUT_OF_MEMORY<pos:position pos:line="37" pos:column="39"/></name></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt></block></then></if>
      }<pos:position pos:line="38" pos:column="8"/></block></then></if>
      <if pos:line="39" pos:column="7">if<condition pos:line="39" pos:column="9">(<expr><operator pos:line="39" pos:column="10">!<pos:position pos:line="39" pos:column="11"/></operator><name pos:line="39" pos:column="11">result<pos:position pos:line="39" pos:column="17"/></name></expr>)<pos:position pos:line="39" pos:column="18"/></condition><then pos:line="39" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="9">result<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <call><name pos:line="40" pos:column="18">curl_mime_subparts<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><name pos:line="40" pos:column="37">part<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">multipart<pos:position pos:line="40" pos:column="52"/></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="43" pos:column="5">/* Generate all the part contents. */</comment>
    <for pos:line="44" pos:column="5">for<control pos:line="44" pos:column="8">(<init><expr><name pos:line="44" pos:column="9">file<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <name pos:line="44" pos:column="16">post<pos:position pos:line="44" pos:column="20"/></name></expr>;<pos:position pos:line="44" pos:column="21"/></init> <condition><expr><operator pos:line="44" pos:column="22">!<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="23">result<pos:position pos:line="44" pos:column="29"/></name> <operator pos:line="44" pos:column="30">&amp;&amp;<pos:position pos:line="44" pos:column="40"/></operator> <name pos:line="44" pos:column="33">file<pos:position pos:line="44" pos:column="37"/></name></expr>;<pos:position pos:line="44" pos:column="38"/></condition> <incr><expr><name pos:line="44" pos:column="39">file<pos:position pos:line="44" pos:column="43"/></name> <operator pos:line="44" pos:column="44">=<pos:position pos:line="44" pos:column="45"/></operator> <name><name pos:line="44" pos:column="46">file<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">-&gt;<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="52">more<pos:position pos:line="44" pos:column="56"/></name></name></expr></incr>)<pos:position pos:line="44" pos:column="57"/></control> <block pos:line="44" pos:column="58">{
      <comment type="block" pos:line="45" pos:column="7">/* Create the part. */</comment>
      <expr_stmt><expr><name pos:line="46" pos:column="7">part<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">curl_mime_addpart<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><name pos:line="46" pos:column="32">multipart<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
      <if pos:line="47" pos:column="7">if<condition pos:line="47" pos:column="9">(<expr><operator pos:line="47" pos:column="10">!<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">part<pos:position pos:line="47" pos:column="15"/></name></expr>)<pos:position pos:line="47" pos:column="16"/></condition><then pos:line="47" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="9">result<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <name pos:line="48" pos:column="18">CURLE_OUT_OF_MEMORY<pos:position pos:line="48" pos:column="37"/></name></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="50" pos:column="7">/* Set the headers. */</comment>
      <if pos:line="51" pos:column="7">if<condition pos:line="51" pos:column="9">(<expr><operator pos:line="51" pos:column="10">!<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="11">result<pos:position pos:line="51" pos:column="17"/></name></expr>)<pos:position pos:line="51" pos:column="18"/></condition><then pos:line="51" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="9">result<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <call><name pos:line="52" pos:column="18">curl_mime_headers<pos:position pos:line="52" pos:column="35"/></name><argument_list pos:line="52" pos:column="35">(<argument><expr><name pos:line="52" pos:column="36">part<pos:position pos:line="52" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="42">file<pos:position pos:line="52" pos:column="46"/></name><operator pos:line="52" pos:column="46">-&gt;<pos:position pos:line="52" pos:column="51"/></operator><name pos:line="52" pos:column="48">contentheader<pos:position pos:line="52" pos:column="61"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="63">0<pos:position pos:line="52" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="66"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="54" pos:column="7">/* Set the content type. */</comment>
      <if pos:line="55" pos:column="7">if<condition pos:line="55" pos:column="9">(<expr><operator pos:line="55" pos:column="10">!<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="11">result<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">&amp;&amp;<pos:position pos:line="55" pos:column="28"/></operator><name><name pos:line="55" pos:column="20">file<pos:position pos:line="55" pos:column="24"/></name><operator pos:line="55" pos:column="24">-&gt;<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="26">contenttype<pos:position pos:line="55" pos:column="37"/></name></name></expr>)<pos:position pos:line="55" pos:column="38"/></condition><then pos:line="55" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="9">result<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <call><name pos:line="56" pos:column="18">curl_mime_type<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><name pos:line="56" pos:column="33">part<pos:position pos:line="56" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="39">file<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">-&gt;<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="45">contenttype<pos:position pos:line="56" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="58"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="58" pos:column="7">/* Set field name. */</comment>
      <if pos:line="59" pos:column="7">if<condition pos:line="59" pos:column="9">(<expr><operator pos:line="59" pos:column="10">!<pos:position pos:line="59" pos:column="11"/></operator><name pos:line="59" pos:column="11">result<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">&amp;&amp;<pos:position pos:line="59" pos:column="28"/></operator> <operator pos:line="59" pos:column="21">!<pos:position pos:line="59" pos:column="22"/></operator><name><name pos:line="59" pos:column="22">post<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">-&gt;<pos:position pos:line="59" pos:column="31"/></operator><name pos:line="59" pos:column="28">more<pos:position pos:line="59" pos:column="32"/></name></name></expr>)<pos:position pos:line="59" pos:column="33"/></condition><then pos:line="59" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="9">result<pos:position pos:line="60" pos:column="15"/></name> <operator pos:line="60" pos:column="16">=<pos:position pos:line="60" pos:column="17"/></operator> <call><name pos:line="60" pos:column="18">setname<pos:position pos:line="60" pos:column="25"/></name><argument_list pos:line="60" pos:column="25">(<argument><expr><name pos:line="60" pos:column="26">part<pos:position pos:line="60" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="32">post<pos:position pos:line="60" pos:column="36"/></name><operator pos:line="60" pos:column="36">-&gt;<pos:position pos:line="60" pos:column="41"/></operator><name pos:line="60" pos:column="38">name<pos:position pos:line="60" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="44">post<pos:position pos:line="60" pos:column="48"/></name><operator pos:line="60" pos:column="48">-&gt;<pos:position pos:line="60" pos:column="53"/></operator><name pos:line="60" pos:column="50">namelength<pos:position pos:line="60" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="62"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="62" pos:column="7">/* Process contents. */</comment>
      <if pos:line="63" pos:column="7">if<condition pos:line="63" pos:column="9">(<expr><operator pos:line="63" pos:column="10">!<pos:position pos:line="63" pos:column="11"/></operator><name pos:line="63" pos:column="11">result<pos:position pos:line="63" pos:column="17"/></name></expr>)<pos:position pos:line="63" pos:column="18"/></condition><then pos:line="63" pos:column="18"> <block pos:line="63" pos:column="19">{
        <decl_stmt><decl><type><name pos:line="64" pos:column="9">curl_off_t<pos:position pos:line="64" pos:column="19"/></name></type> <name pos:line="64" pos:column="20">clen<pos:position pos:line="64" pos:column="24"/></name> <init pos:line="64" pos:column="25">= <expr><name><name pos:line="64" pos:column="27">post<pos:position pos:line="64" pos:column="31"/></name><operator pos:line="64" pos:column="31">-&gt;<pos:position pos:line="64" pos:column="36"/></operator><name pos:line="64" pos:column="33">contentslength<pos:position pos:line="64" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="64" pos:column="48"/></decl_stmt>

        <if pos:line="66" pos:column="9">if<condition pos:line="66" pos:column="11">(<expr><name><name pos:line="66" pos:column="12">post<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">-&gt;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="18">flags<pos:position pos:line="66" pos:column="23"/></name></name> <operator pos:line="66" pos:column="24">&amp;<pos:position pos:line="66" pos:column="29"/></operator> <name pos:line="66" pos:column="26">CURL_HTTPPOST_LARGE<pos:position pos:line="66" pos:column="45"/></name></expr>)<pos:position pos:line="66" pos:column="46"/></condition><then pos:line="66" pos:column="46">
          <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="11">clen<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <name><name pos:line="67" pos:column="18">post<pos:position pos:line="67" pos:column="22"/></name><operator pos:line="67" pos:column="22">-&gt;<pos:position pos:line="67" pos:column="27"/></operator><name pos:line="67" pos:column="24">contentlen<pos:position pos:line="67" pos:column="34"/></name></name></expr>;<pos:position pos:line="67" pos:column="35"/></expr_stmt></block></then></if>
        <if pos:line="68" pos:column="9">if<condition pos:line="68" pos:column="11">(<expr><operator pos:line="68" pos:column="12">!<pos:position pos:line="68" pos:column="13"/></operator><name pos:line="68" pos:column="13">clen<pos:position pos:line="68" pos:column="17"/></name></expr>)<pos:position pos:line="68" pos:column="18"/></condition><then pos:line="68" pos:column="18">
          <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="11">clen<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">=<pos:position pos:line="69" pos:column="17"/></operator> <operator pos:line="69" pos:column="18">-<pos:position pos:line="69" pos:column="19"/></operator><literal type="number" pos:line="69" pos:column="19">1<pos:position pos:line="69" pos:column="20"/></literal></expr>;<pos:position pos:line="69" pos:column="21"/></expr_stmt></block></then></if>

        <if pos:line="71" pos:column="9">if<condition pos:line="71" pos:column="11">(<expr><name><name pos:line="71" pos:column="12">post<pos:position pos:line="71" pos:column="16"/></name><operator pos:line="71" pos:column="16">-&gt;<pos:position pos:line="71" pos:column="21"/></operator><name pos:line="71" pos:column="18">flags<pos:position pos:line="71" pos:column="23"/></name></name> <operator pos:line="71" pos:column="24">&amp;<pos:position pos:line="71" pos:column="29"/></operator> <operator pos:line="71" pos:column="26">(<pos:position pos:line="71" pos:column="27"/></operator><name pos:line="71" pos:column="27">HTTPPOST_FILENAME<pos:position pos:line="71" pos:column="44"/></name> <operator pos:line="71" pos:column="45">|<pos:position pos:line="71" pos:column="46"/></operator> <name pos:line="71" pos:column="47">HTTPPOST_READFILE<pos:position pos:line="71" pos:column="64"/></name><operator pos:line="71" pos:column="64">)<pos:position pos:line="71" pos:column="65"/></operator></expr>)<pos:position pos:line="71" pos:column="66"/></condition><then pos:line="71" pos:column="66"> <block pos:line="71" pos:column="67">{
          <if pos:line="72" pos:column="11">if<condition pos:line="72" pos:column="13">(<expr><operator pos:line="72" pos:column="14">!<pos:position pos:line="72" pos:column="15"/></operator><call><name pos:line="72" pos:column="15">strcmp<pos:position pos:line="72" pos:column="21"/></name><argument_list pos:line="72" pos:column="21">(<argument><expr><name><name pos:line="72" pos:column="22">file<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">contents<pos:position pos:line="72" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="38">"-"<pos:position pos:line="72" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="43"/></condition><then pos:line="72" pos:column="43"> <block pos:line="72" pos:column="44">{
            <comment type="block" pos:line="73" pos:column="13">/* There are a few cases where the code below won't work; in
               particular, freopen(stdin) by the caller is not guaranteed
               to result as expected. This feature has been kept for backward
               compatibility: use of "-" pseudo file name should be avoided. */</comment>
            <expr_stmt><expr><name pos:line="77" pos:column="13">result<pos:position pos:line="77" pos:column="19"/></name> <operator pos:line="77" pos:column="20">=<pos:position pos:line="77" pos:column="21"/></operator> <call><name pos:line="77" pos:column="22">curl_mime_data_cb<pos:position pos:line="77" pos:column="39"/></name><argument_list pos:line="77" pos:column="39">(<argument><expr><name pos:line="77" pos:column="40">part<pos:position pos:line="77" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="46">(<pos:position pos:line="77" pos:column="47"/></operator><name pos:line="77" pos:column="47">curl_off_t<pos:position pos:line="77" pos:column="57"/></name><operator pos:line="77" pos:column="57">)<pos:position pos:line="77" pos:column="58"/></operator> <operator pos:line="77" pos:column="59">-<pos:position pos:line="77" pos:column="60"/></operator><literal type="number" pos:line="77" pos:column="60">1<pos:position pos:line="77" pos:column="61"/></literal></expr></argument>,
                                       <argument><expr><operator pos:line="78" pos:column="40">(<pos:position pos:line="78" pos:column="41"/></operator><name pos:line="78" pos:column="41">curl_read_callback<pos:position pos:line="78" pos:column="59"/></name><operator pos:line="78" pos:column="59">)<pos:position pos:line="78" pos:column="60"/></operator> <name pos:line="78" pos:column="61">fread<pos:position pos:line="78" pos:column="66"/></name></expr></argument>,
                                       <argument><expr><operator pos:line="79" pos:column="40">(<pos:position pos:line="79" pos:column="41"/></operator><name pos:line="79" pos:column="41">curl_seek_callback<pos:position pos:line="79" pos:column="59"/></name><operator pos:line="79" pos:column="59">)<pos:position pos:line="79" pos:column="60"/></operator> <name pos:line="79" pos:column="61">fseek<pos:position pos:line="79" pos:column="66"/></name></expr></argument>,
                                       <argument><expr><name pos:line="80" pos:column="40">NULL<pos:position pos:line="80" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="46">(<pos:position pos:line="80" pos:column="47"/></operator><name pos:line="80" pos:column="47">void<pos:position pos:line="80" pos:column="51"/></name> <operator pos:line="80" pos:column="52">*<pos:position pos:line="80" pos:column="53"/></operator><operator pos:line="80" pos:column="53">)<pos:position pos:line="80" pos:column="54"/></operator> <name pos:line="80" pos:column="55">stdin<pos:position pos:line="80" pos:column="60"/></name></expr></argument>)<pos:position pos:line="80" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="62"/></expr_stmt>
          }<pos:position pos:line="81" pos:column="12"/></block></then>
          <else pos:line="82" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="83" pos:column="13">result<pos:position pos:line="83" pos:column="19"/></name> <operator pos:line="83" pos:column="20">=<pos:position pos:line="83" pos:column="21"/></operator> <call><name pos:line="83" pos:column="22">curl_mime_filedata<pos:position pos:line="83" pos:column="40"/></name><argument_list pos:line="83" pos:column="40">(<argument><expr><name pos:line="83" pos:column="41">part<pos:position pos:line="83" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="47">file<pos:position pos:line="83" pos:column="51"/></name><operator pos:line="83" pos:column="51">-&gt;<pos:position pos:line="83" pos:column="56"/></operator><name pos:line="83" pos:column="53">contents<pos:position pos:line="83" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="63"/></expr_stmt></block></else></if>
          <if pos:line="84" pos:column="11">if<condition pos:line="84" pos:column="13">(<expr><operator pos:line="84" pos:column="14">!<pos:position pos:line="84" pos:column="15"/></operator><name pos:line="84" pos:column="15">result<pos:position pos:line="84" pos:column="21"/></name> <operator pos:line="84" pos:column="22">&amp;&amp;<pos:position pos:line="84" pos:column="32"/></operator> <operator pos:line="84" pos:column="25">(<pos:position pos:line="84" pos:column="26"/></operator><name><name pos:line="84" pos:column="26">post<pos:position pos:line="84" pos:column="30"/></name><operator pos:line="84" pos:column="30">-&gt;<pos:position pos:line="84" pos:column="35"/></operator><name pos:line="84" pos:column="32">flags<pos:position pos:line="84" pos:column="37"/></name></name> <operator pos:line="84" pos:column="38">&amp;<pos:position pos:line="84" pos:column="43"/></operator> <name pos:line="84" pos:column="40">HTTPPOST_READFILE<pos:position pos:line="84" pos:column="57"/></name><operator pos:line="84" pos:column="57">)<pos:position pos:line="84" pos:column="58"/></operator></expr>)<pos:position pos:line="84" pos:column="59"/></condition><then pos:line="84" pos:column="59">
            <block type="pseudo"><expr_stmt><expr><name pos:line="85" pos:column="13">result<pos:position pos:line="85" pos:column="19"/></name> <operator pos:line="85" pos:column="20">=<pos:position pos:line="85" pos:column="21"/></operator> <call><name pos:line="85" pos:column="22">curl_mime_filename<pos:position pos:line="85" pos:column="40"/></name><argument_list pos:line="85" pos:column="40">(<argument><expr><name pos:line="85" pos:column="41">part<pos:position pos:line="85" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="47">NULL<pos:position pos:line="85" pos:column="51"/></name></expr></argument>)<pos:position pos:line="85" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="53"/></expr_stmt></block></then></if>
        }<pos:position pos:line="86" pos:column="10"/></block></then>
        <elseif pos:line="87" pos:column="9">else <if pos:line="87" pos:column="14">if<condition pos:line="87" pos:column="16">(<expr><name><name pos:line="87" pos:column="17">post<pos:position pos:line="87" pos:column="21"/></name><operator pos:line="87" pos:column="21">-&gt;<pos:position pos:line="87" pos:column="26"/></operator><name pos:line="87" pos:column="23">flags<pos:position pos:line="87" pos:column="28"/></name></name> <operator pos:line="87" pos:column="29">&amp;<pos:position pos:line="87" pos:column="34"/></operator> <name pos:line="87" pos:column="31">HTTPPOST_BUFFER<pos:position pos:line="87" pos:column="46"/></name></expr>)<pos:position pos:line="87" pos:column="47"/></condition><then pos:line="87" pos:column="47">
          <block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="11">result<pos:position pos:line="88" pos:column="17"/></name> <operator pos:line="88" pos:column="18">=<pos:position pos:line="88" pos:column="19"/></operator> <call><name pos:line="88" pos:column="20">curl_mime_data<pos:position pos:line="88" pos:column="34"/></name><argument_list pos:line="88" pos:column="34">(<argument><expr><name pos:line="88" pos:column="35">part<pos:position pos:line="88" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="41">post<pos:position pos:line="88" pos:column="45"/></name><operator pos:line="88" pos:column="45">-&gt;<pos:position pos:line="88" pos:column="50"/></operator><name pos:line="88" pos:column="47">buffer<pos:position pos:line="88" pos:column="53"/></name></name></expr></argument>,
                                  <argument><expr><ternary><condition><expr><name><name pos:line="89" pos:column="35">post<pos:position pos:line="89" pos:column="39"/></name><operator pos:line="89" pos:column="39">-&gt;<pos:position pos:line="89" pos:column="44"/></operator><name pos:line="89" pos:column="41">bufferlength<pos:position pos:line="89" pos:column="53"/></name></name></expr>?<pos:position pos:line="89" pos:column="54"/></condition><then pos:line="89" pos:column="54"> <expr><name><name pos:line="89" pos:column="55">post<pos:position pos:line="89" pos:column="59"/></name><operator pos:line="89" pos:column="59">-&gt;<pos:position pos:line="89" pos:column="64"/></operator><name pos:line="89" pos:column="61">bufferlength<pos:position pos:line="89" pos:column="73"/></name></name></expr></then><else pos:line="89" pos:column="73">: <expr><operator pos:line="89" pos:column="75">-<pos:position pos:line="89" pos:column="76"/></operator><literal type="number" pos:line="89" pos:column="76">1<pos:position pos:line="89" pos:column="77"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="89" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="79"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="90" pos:column="9">else <if pos:line="90" pos:column="14">if<condition pos:line="90" pos:column="16">(<expr><name><name pos:line="90" pos:column="17">post<pos:position pos:line="90" pos:column="21"/></name><operator pos:line="90" pos:column="21">-&gt;<pos:position pos:line="90" pos:column="26"/></operator><name pos:line="90" pos:column="23">flags<pos:position pos:line="90" pos:column="28"/></name></name> <operator pos:line="90" pos:column="29">&amp;<pos:position pos:line="90" pos:column="34"/></operator> <name pos:line="90" pos:column="31">HTTPPOST_CALLBACK<pos:position pos:line="90" pos:column="48"/></name></expr>)<pos:position pos:line="90" pos:column="49"/></condition><then pos:line="90" pos:column="49">
          <comment type="block" pos:line="91" pos:column="11">/* the contents should be read with the callback and the size is set
             with the contentslength */</comment>
          <block type="pseudo"><expr_stmt><expr><name pos:line="93" pos:column="11">result<pos:position pos:line="93" pos:column="17"/></name> <operator pos:line="93" pos:column="18">=<pos:position pos:line="93" pos:column="19"/></operator> <call><name pos:line="93" pos:column="20">curl_mime_data_cb<pos:position pos:line="93" pos:column="37"/></name><argument_list pos:line="93" pos:column="37">(<argument><expr><name pos:line="93" pos:column="38">part<pos:position pos:line="93" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="44">clen<pos:position pos:line="93" pos:column="48"/></name></expr></argument>,
                                     <argument><expr><name pos:line="94" pos:column="38">fread_func<pos:position pos:line="94" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="50">NULL<pos:position pos:line="94" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="56">NULL<pos:position pos:line="94" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="62">post<pos:position pos:line="94" pos:column="66"/></name><operator pos:line="94" pos:column="66">-&gt;<pos:position pos:line="94" pos:column="71"/></operator><name pos:line="94" pos:column="68">userp<pos:position pos:line="94" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="75"/></expr_stmt></block></then></if></elseif>
        <else pos:line="95" pos:column="9">else <block pos:line="95" pos:column="14">{
          <expr_stmt><expr><name pos:line="96" pos:column="11">result<pos:position pos:line="96" pos:column="17"/></name> <operator pos:line="96" pos:column="18">=<pos:position pos:line="96" pos:column="19"/></operator> <call><name pos:line="96" pos:column="20">curl_mime_data<pos:position pos:line="96" pos:column="34"/></name><argument_list pos:line="96" pos:column="34">(<argument><expr><name pos:line="96" pos:column="35">part<pos:position pos:line="96" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="41">post<pos:position pos:line="96" pos:column="45"/></name><operator pos:line="96" pos:column="45">-&gt;<pos:position pos:line="96" pos:column="50"/></operator><name pos:line="96" pos:column="47">contents<pos:position pos:line="96" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="57">(<pos:position pos:line="96" pos:column="58"/></operator><name pos:line="96" pos:column="58">ssize_t<pos:position pos:line="96" pos:column="65"/></name><operator pos:line="96" pos:column="65">)<pos:position pos:line="96" pos:column="66"/></operator> <name pos:line="96" pos:column="67">clen<pos:position pos:line="96" pos:column="71"/></name></expr></argument>)<pos:position pos:line="96" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="73"/></expr_stmt>
<cpp:ifdef pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">ifdef<pos:position pos:line="97" pos:column="7"/></cpp:directive> <name pos:line="97" pos:column="8">CURL_DOES_CONVERSIONS<pos:position pos:line="97" pos:column="29"/></name></cpp:ifdef>
          <comment type="block" pos:line="98" pos:column="11">/* Convert textual contents now. */</comment>
          <if pos:line="99" pos:column="11">if<condition pos:line="99" pos:column="13">(<expr><operator pos:line="99" pos:column="14">!<pos:position pos:line="99" pos:column="15"/></operator><name pos:line="99" pos:column="15">result<pos:position pos:line="99" pos:column="21"/></name> <operator pos:line="99" pos:column="22">&amp;&amp;<pos:position pos:line="99" pos:column="32"/></operator> <name pos:line="99" pos:column="25">data<pos:position pos:line="99" pos:column="29"/></name> <operator pos:line="99" pos:column="30">&amp;&amp;<pos:position pos:line="99" pos:column="40"/></operator> <name><name pos:line="99" pos:column="33">part<pos:position pos:line="99" pos:column="37"/></name><operator pos:line="99" pos:column="37">-&gt;<pos:position pos:line="99" pos:column="42"/></operator><name pos:line="99" pos:column="39">datasize<pos:position pos:line="99" pos:column="47"/></name></name></expr>)<pos:position pos:line="99" pos:column="48"/></condition><then pos:line="99" pos:column="48">
            <block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="13">result<pos:position pos:line="100" pos:column="19"/></name> <operator pos:line="100" pos:column="20">=<pos:position pos:line="100" pos:column="21"/></operator> <call><name pos:line="100" pos:column="22">Curl_convert_to_network<pos:position pos:line="100" pos:column="45"/></name><argument_list pos:line="100" pos:column="45">(<argument><expr><name pos:line="100" pos:column="46">data<pos:position pos:line="100" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="52">part<pos:position pos:line="100" pos:column="56"/></name><operator pos:line="100" pos:column="56">-&gt;<pos:position pos:line="100" pos:column="61"/></operator><name pos:line="100" pos:column="58">data<pos:position pos:line="100" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="64">part<pos:position pos:line="100" pos:column="68"/></name><operator pos:line="100" pos:column="68">-&gt;<pos:position pos:line="100" pos:column="73"/></operator><name pos:line="100" pos:column="70">datasize<pos:position pos:line="100" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="80"/></expr_stmt></block></then></if>
<cpp:endif pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">endif<pos:position pos:line="101" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="102" pos:column="10"/></block></else></if>
      }<pos:position pos:line="103" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="105" pos:column="7">/* Set fake file name. */</comment>
      <if pos:line="106" pos:column="7">if<condition pos:line="106" pos:column="9">(<expr><operator pos:line="106" pos:column="10">!<pos:position pos:line="106" pos:column="11"/></operator><name pos:line="106" pos:column="11">result<pos:position pos:line="106" pos:column="17"/></name> <operator pos:line="106" pos:column="18">&amp;&amp;<pos:position pos:line="106" pos:column="28"/></operator> <name><name pos:line="106" pos:column="21">post<pos:position pos:line="106" pos:column="25"/></name><operator pos:line="106" pos:column="25">-&gt;<pos:position pos:line="106" pos:column="30"/></operator><name pos:line="106" pos:column="27">showfilename<pos:position pos:line="106" pos:column="39"/></name></name></expr>)<pos:position pos:line="106" pos:column="40"/></condition><then pos:line="106" pos:column="40">
        <block type="pseudo"><if pos:line="107" pos:column="9">if<condition pos:line="107" pos:column="11">(<expr><name><name pos:line="107" pos:column="12">post<pos:position pos:line="107" pos:column="16"/></name><operator pos:line="107" pos:column="16">-&gt;<pos:position pos:line="107" pos:column="21"/></operator><name pos:line="107" pos:column="18">more<pos:position pos:line="107" pos:column="22"/></name></name> <operator pos:line="107" pos:column="23">||<pos:position pos:line="107" pos:column="25"/></operator> <operator pos:line="107" pos:column="26">(<pos:position pos:line="107" pos:column="27"/></operator><name><name pos:line="107" pos:column="27">post<pos:position pos:line="107" pos:column="31"/></name><operator pos:line="107" pos:column="31">-&gt;<pos:position pos:line="107" pos:column="36"/></operator><name pos:line="107" pos:column="33">flags<pos:position pos:line="107" pos:column="38"/></name></name> <operator pos:line="107" pos:column="39">&amp;<pos:position pos:line="107" pos:column="44"/></operator> <operator pos:line="107" pos:column="41">(<pos:position pos:line="107" pos:column="42"/></operator><name pos:line="107" pos:column="42">HTTPPOST_FILENAME<pos:position pos:line="107" pos:column="59"/></name> <operator pos:line="107" pos:column="60">|<pos:position pos:line="107" pos:column="61"/></operator> <name pos:line="107" pos:column="62">HTTPPOST_BUFFER<pos:position pos:line="107" pos:column="77"/></name> <operator pos:line="107" pos:column="78">|<pos:position pos:line="107" pos:column="79"/></operator>
                                        <name pos:line="108" pos:column="41">HTTPPOST_CALLBACK<pos:position pos:line="108" pos:column="58"/></name><operator pos:line="108" pos:column="58">)<pos:position pos:line="108" pos:column="59"/></operator><operator pos:line="108" pos:column="59">)<pos:position pos:line="108" pos:column="60"/></operator></expr>)<pos:position pos:line="108" pos:column="61"/></condition><then pos:line="108" pos:column="61">
          <block type="pseudo"><expr_stmt><expr><name pos:line="109" pos:column="11">result<pos:position pos:line="109" pos:column="17"/></name> <operator pos:line="109" pos:column="18">=<pos:position pos:line="109" pos:column="19"/></operator> <call><name pos:line="109" pos:column="20">curl_mime_filename<pos:position pos:line="109" pos:column="38"/></name><argument_list pos:line="109" pos:column="38">(<argument><expr><name pos:line="109" pos:column="39">part<pos:position pos:line="109" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="45">post<pos:position pos:line="109" pos:column="49"/></name><operator pos:line="109" pos:column="49">-&gt;<pos:position pos:line="109" pos:column="54"/></operator><name pos:line="109" pos:column="51">showfilename<pos:position pos:line="109" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="65"/></expr_stmt></block></then></if></block></then></if>
    }<pos:position pos:line="110" pos:column="6"/></block></for>
  }<pos:position pos:line="111" pos:column="4"/></block></for>

  <if pos:line="113" pos:column="3">if<condition pos:line="113" pos:column="5">(<expr><name pos:line="113" pos:column="6">result<pos:position pos:line="113" pos:column="12"/></name></expr>)<pos:position pos:line="113" pos:column="13"/></condition><then pos:line="113" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="5">Curl_mime_cleanpart<pos:position pos:line="114" pos:column="24"/></name><argument_list pos:line="114" pos:column="24">(<argument><expr><name pos:line="114" pos:column="25">finalform<pos:position pos:line="114" pos:column="34"/></name></expr></argument>)<pos:position pos:line="114" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="36"/></expr_stmt></block></then></if>

  <return pos:line="116" pos:column="3">return <expr><name pos:line="116" pos:column="10">result<pos:position pos:line="116" pos:column="16"/></name></expr>;<pos:position pos:line="116" pos:column="17"/></return>
}<pos:position pos:line="117" pos:column="2"/></block></function></unit>

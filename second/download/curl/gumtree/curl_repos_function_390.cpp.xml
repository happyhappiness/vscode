<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_390.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">Curl_output_basic<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">connectdata<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">conn<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">bool<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">proxy<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">authorization<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">SessionHandle<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">data<pos:position pos:line="4" pos:column="29"/></name><init pos:line="4" pos:column="29">=<expr><name><name pos:line="4" pos:column="30">conn<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">data<pos:position pos:line="4" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier><modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">userp<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">user<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">pwd<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">proxy<pos:position pos:line="9" pos:column="11"/></name></expr>)<pos:position pos:line="9" pos:column="12"/></condition><then pos:line="9" pos:column="12"> <block pos:line="9" pos:column="13">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">userp<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <operator pos:line="10" pos:column="13">&amp;<pos:position pos:line="10" pos:column="18"/></operator><name><name pos:line="10" pos:column="14">conn<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">allocptr<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">.<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">proxyuserpwd<pos:position pos:line="10" pos:column="41"/></name></name></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">user<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <name><name pos:line="11" pos:column="12">conn<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">proxyuser<pos:position pos:line="11" pos:column="27"/></name></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">pwd<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <name><name pos:line="12" pos:column="11">conn<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">proxypasswd<pos:position pos:line="12" pos:column="28"/></name></name></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then>
  <else pos:line="14" pos:column="3">else <block pos:line="14" pos:column="8">{
    <expr_stmt><expr><name pos:line="15" pos:column="5">userp<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <operator pos:line="15" pos:column="13">&amp;<pos:position pos:line="15" pos:column="18"/></operator><name><name pos:line="15" pos:column="14">conn<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">allocptr<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">.<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">userpwd<pos:position pos:line="15" pos:column="36"/></name></name></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">user<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <name><name pos:line="16" pos:column="12">conn<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">user<pos:position pos:line="16" pos:column="22"/></name></name></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">pwd<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <name><name pos:line="17" pos:column="11">conn<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">passwd<pos:position pos:line="17" pos:column="23"/></name></name></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">snprintf<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name><name pos:line="20" pos:column="12">data<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">state<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">.<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="24">buffer<pos:position pos:line="20" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="32">sizeof<argument_list pos:line="20" pos:column="38">(<argument><expr><name><name pos:line="20" pos:column="39">data<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">state<pos:position pos:line="20" pos:column="50"/></name><operator pos:line="20" pos:column="50">.<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="51">buffer<pos:position pos:line="20" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="60">"%s:%s"<pos:position pos:line="20" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="69">user<pos:position pos:line="20" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="75">pwd<pos:position pos:line="20" pos:column="78"/></name></expr></argument>)<pos:position pos:line="20" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="80"/></expr_stmt>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><call><name pos:line="21" pos:column="6">Curl_base64_encode<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name><name pos:line="21" pos:column="25">data<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">state<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">.<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="37">buffer<pos:position pos:line="21" pos:column="43"/></name></name></expr></argument>,
                        <argument><expr><call><name pos:line="22" pos:column="25">strlen<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name><name pos:line="22" pos:column="32">data<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">state<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">.<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="44">buffer<pos:position pos:line="22" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr></argument>,
                        <argument><expr><operator pos:line="23" pos:column="25">&amp;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="26">authorization<pos:position pos:line="23" pos:column="39"/></name></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call> <operator pos:line="23" pos:column="41">&gt;<pos:position pos:line="23" pos:column="45"/></operator> <literal type="number" pos:line="23" pos:column="43">0<pos:position pos:line="23" pos:column="44"/></literal></expr>)<pos:position pos:line="23" pos:column="45"/></condition><then pos:line="23" pos:column="45"> <block pos:line="23" pos:column="46">{
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><operator pos:line="24" pos:column="8">*<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="9">userp<pos:position pos:line="24" pos:column="14"/></name></expr>)<pos:position pos:line="24" pos:column="15"/></condition><then pos:line="24" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="7">free<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><operator pos:line="25" pos:column="12">*<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">userp<pos:position pos:line="25" pos:column="18"/></name></expr></argument>)<pos:position pos:line="25" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt></block></then></if>
    <expr_stmt><expr><operator pos:line="26" pos:column="5">*<pos:position pos:line="26" pos:column="6"/></operator><name pos:line="26" pos:column="6">userp<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">aprintf<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">( <argument><expr><literal type="string" pos:line="26" pos:column="23">"%sAuthorization: Basic %s\015\012"<pos:position pos:line="26" pos:column="58"/></literal></expr></argument>,
                      <argument><expr><ternary><condition><expr><name pos:line="27" pos:column="23">proxy<pos:position pos:line="27" pos:column="28"/></name></expr>?<pos:position pos:line="27" pos:column="29"/></condition><then><expr><literal type="string" pos:line="27" pos:column="29">"Proxy-"<pos:position pos:line="27" pos:column="37"/></literal></expr></then><else pos:line="27" pos:column="37">:<expr><literal type="string" pos:line="27" pos:column="38">""<pos:position pos:line="27" pos:column="40"/></literal></expr></else></ternary></expr></argument>,
                      <argument><expr><name pos:line="28" pos:column="23">authorization<pos:position pos:line="28" pos:column="36"/></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">free<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">(<argument><expr><name pos:line="29" pos:column="10">authorization<pos:position pos:line="29" pos:column="23"/></name></expr></argument>)<pos:position pos:line="29" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then>
  <else pos:line="31" pos:column="3">else
    <block type="pseudo"><return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="32" pos:column="31"/></name></expr>;<pos:position pos:line="32" pos:column="32"/></return></block></else></if>
  <return pos:line="33" pos:column="3">return <expr><name pos:line="33" pos:column="10">CURLE_OK<pos:position pos:line="33" pos:column="18"/></name></expr>;<pos:position pos:line="33" pos:column="19"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_412.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_open<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">SessionHandle<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">curl<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">res<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><name pos:line="3" pos:column="18">CURLE_OK<pos:position pos:line="3" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">SessionHandle<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">data<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <comment type="block" pos:line="5" pos:column="3">/* Very simple start-up: alloc the struct, init it with zeroes and return */</comment>
  <expr_stmt><expr><name pos:line="6" pos:column="3">data<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator>struct <name pos:line="6" pos:column="18">SessionHandle<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></operator><operator pos:line="6" pos:column="33">)<pos:position pos:line="6" pos:column="34"/></operator><call><name pos:line="6" pos:column="34">calloc<pos:position pos:line="6" pos:column="40"/></name><argument_list pos:line="6" pos:column="40">(<argument><expr><literal type="number" pos:line="6" pos:column="41">1<pos:position pos:line="6" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="44">sizeof<argument_list pos:line="6" pos:column="50">(<argument><expr pos:line="6" pos:column="51">struct <name pos:line="6" pos:column="58">SessionHandle<pos:position pos:line="6" pos:column="71"/></name></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="74"/></expr_stmt>
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><name pos:line="7" pos:column="7">data<pos:position pos:line="7" pos:column="11"/></name></expr>)<pos:position pos:line="7" pos:column="12"/></condition><then pos:line="7" pos:column="12">
    <comment type="block" pos:line="8" pos:column="5">/* this is a very serious error */</comment>
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></return></block></then></if>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">USE_ARES<pos:position pos:line="11" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">ARES_SUCCESS<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">!=<pos:position pos:line="12" pos:column="21"/></operator> <call><name pos:line="12" pos:column="22">ares_init<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><operator pos:line="12" pos:column="32">&amp;<pos:position pos:line="12" pos:column="37"/></operator><name><name pos:line="12" pos:column="33">data<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">state<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">.<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="45">areschannel<pos:position pos:line="12" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="58"/></condition><then pos:line="12" pos:column="58"> <block pos:line="12" pos:column="59">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">free<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><name pos:line="13" pos:column="10">data<pos:position pos:line="13" pos:column="14"/></name></expr></argument>)<pos:position pos:line="13" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="16"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">CURLE_FAILED_INIT<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="16" pos:column="3">/* make sure that all other returns from this function should destroy the
     ares channel before returning error! */</comment>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="20" pos:column="3">/* We do some initial setup here, all those fields that can't be just 0 */</comment>

  <expr_stmt><expr><name><name pos:line="22" pos:column="3">data<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">state<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">.<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">headerbuff<pos:position pos:line="22" pos:column="25"/></name></name><operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator><operator pos:line="22" pos:column="26">(<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">char<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">*<pos:position pos:line="22" pos:column="32"/></operator><operator pos:line="22" pos:column="32">)<pos:position pos:line="22" pos:column="33"/></operator><call><name pos:line="22" pos:column="33">malloc<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><name pos:line="22" pos:column="40">HEADERSIZE<pos:position pos:line="22" pos:column="50"/></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">!<pos:position pos:line="23" pos:column="7"/></operator><name><name pos:line="23" pos:column="7">data<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">state<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">.<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">headerbuff<pos:position pos:line="23" pos:column="29"/></name></name></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="5">res<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <name pos:line="24" pos:column="11">CURLE_OUT_OF_MEMORY<pos:position pos:line="24" pos:column="30"/></name></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt></block></then>
  <else pos:line="25" pos:column="3">else <block pos:line="25" pos:column="8">{
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">data<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">state<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">.<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">headersize<pos:position pos:line="26" pos:column="27"/></name></name><operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="28">HEADERSIZE<pos:position pos:line="26" pos:column="38"/></name></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="28" pos:column="5">data<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">-&gt;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="11">set<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">.<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">out<pos:position pos:line="28" pos:column="18"/></name></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">stdout<pos:position pos:line="28" pos:column="27"/></name></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt> <comment type="block" pos:line="28" pos:column="29">/* default output to stdout */</comment>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">data<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">set<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">.<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">in<pos:position pos:line="29" pos:column="17"/></name></name>  <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">stdin<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>  <comment type="block" pos:line="29" pos:column="29">/* default input from stdin */</comment>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">data<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">-&gt;<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="11">set<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">.<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">err<pos:position pos:line="30" pos:column="18"/></name></name>  <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">stderr<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>  <comment type="block" pos:line="30" pos:column="31">/* default stderr to stderr */</comment>

    <comment type="block" pos:line="32" pos:column="5">/* use fwrite as default function to store output */</comment>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">data<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">-&gt;<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="11">set<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">.<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">fwrite<pos:position pos:line="33" pos:column="21"/></name></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <operator pos:line="33" pos:column="24">(<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">curl_write_callback<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">)<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="45">fwrite<pos:position pos:line="33" pos:column="51"/></name></expr>;<pos:position pos:line="33" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* use fread as default function to read input */</comment>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">data<pos:position pos:line="36" pos:column="9"/></name><operator pos:line="36" pos:column="9">-&gt;<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="11">set<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">.<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">fread<pos:position pos:line="36" pos:column="20"/></name></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <operator pos:line="36" pos:column="23">(<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="24">curl_read_callback<pos:position pos:line="36" pos:column="42"/></name><operator pos:line="36" pos:column="42">)<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="43">fread<pos:position pos:line="36" pos:column="48"/></name></expr>;<pos:position pos:line="36" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="38" pos:column="5">data<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">set<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">.<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">infilesize<pos:position pos:line="38" pos:column="25"/></name></name> <operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator> <operator pos:line="38" pos:column="28">-<pos:position pos:line="38" pos:column="29"/></operator><literal type="number" pos:line="38" pos:column="29">1<pos:position pos:line="38" pos:column="30"/></literal></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt> <comment type="block" pos:line="38" pos:column="32">/* we don't know any size */</comment>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">data<pos:position pos:line="39" pos:column="9"/></name><operator pos:line="39" pos:column="9">-&gt;<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="11">set<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">.<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="15">postfieldsize<pos:position pos:line="39" pos:column="28"/></name></name> <operator pos:line="39" pos:column="29">=<pos:position pos:line="39" pos:column="30"/></operator> <operator pos:line="39" pos:column="31">-<pos:position pos:line="39" pos:column="32"/></operator><literal type="number" pos:line="39" pos:column="32">1<pos:position pos:line="39" pos:column="33"/></literal></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="41" pos:column="5">data<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">-&gt;<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="11">state<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">.<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">current_speed<pos:position pos:line="41" pos:column="30"/></name></name> <operator pos:line="41" pos:column="31">=<pos:position pos:line="41" pos:column="32"/></operator> <operator pos:line="41" pos:column="33">-<pos:position pos:line="41" pos:column="34"/></operator><literal type="number" pos:line="41" pos:column="34">1<pos:position pos:line="41" pos:column="35"/></literal></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt> <comment type="block" pos:line="41" pos:column="37">/* init to negative == impossible */</comment>

    <expr_stmt><expr><name><name pos:line="43" pos:column="5">data<pos:position pos:line="43" pos:column="9"/></name><operator pos:line="43" pos:column="9">-&gt;<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="11">set<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">.<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">httpreq<pos:position pos:line="43" pos:column="22"/></name></name> <operator pos:line="43" pos:column="23">=<pos:position pos:line="43" pos:column="24"/></operator> <name pos:line="43" pos:column="25">HTTPREQ_GET<pos:position pos:line="43" pos:column="36"/></name></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt> <comment type="block" pos:line="43" pos:column="38">/* Default HTTP request */</comment>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">data<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">-&gt;<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="11">set<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">.<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">ftp_use_epsv<pos:position pos:line="44" pos:column="27"/></name></name> <operator pos:line="44" pos:column="28">=<pos:position pos:line="44" pos:column="29"/></operator> <name pos:line="44" pos:column="30">TRUE<pos:position pos:line="44" pos:column="34"/></name></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>   <comment type="block" pos:line="44" pos:column="38">/* FTP defaults to EPSV operations */</comment>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">data<pos:position pos:line="45" pos:column="9"/></name><operator pos:line="45" pos:column="9">-&gt;<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="11">set<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">.<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="15">ftp_use_eprt<pos:position pos:line="45" pos:column="27"/></name></name> <operator pos:line="45" pos:column="28">=<pos:position pos:line="45" pos:column="29"/></operator> <name pos:line="45" pos:column="30">TRUE<pos:position pos:line="45" pos:column="34"/></name></expr>;<pos:position pos:line="45" pos:column="35"/></expr_stmt>   <comment type="block" pos:line="45" pos:column="38">/* FTP defaults to EPRT operations */</comment>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">data<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">-&gt;<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="11">set<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">.<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="15">ftp_use_lprt<pos:position pos:line="46" pos:column="27"/></name></name> <operator pos:line="46" pos:column="28">=<pos:position pos:line="46" pos:column="29"/></operator> <name pos:line="46" pos:column="30">TRUE<pos:position pos:line="46" pos:column="34"/></name></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>   <comment type="block" pos:line="46" pos:column="38">/* FTP defaults to EPRT operations */</comment>

    <expr_stmt><expr><name><name pos:line="48" pos:column="5">data<pos:position pos:line="48" pos:column="9"/></name><operator pos:line="48" pos:column="9">-&gt;<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="11">set<pos:position pos:line="48" pos:column="14"/></name><operator pos:line="48" pos:column="14">.<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="15">dns_cache_timeout<pos:position pos:line="48" pos:column="32"/></name></name> <operator pos:line="48" pos:column="33">=<pos:position pos:line="48" pos:column="34"/></operator> <literal type="number" pos:line="48" pos:column="35">60<pos:position pos:line="48" pos:column="37"/></literal></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt> <comment type="block" pos:line="48" pos:column="39">/* Timeout every 60 seconds by default */</comment>

    <comment type="block" pos:line="50" pos:column="5">/* make libcurl quiet by default: */</comment>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">data<pos:position pos:line="51" pos:column="9"/></name><operator pos:line="51" pos:column="9">-&gt;<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="11">set<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">.<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="15">hide_progress<pos:position pos:line="51" pos:column="28"/></name></name> <operator pos:line="51" pos:column="29">=<pos:position pos:line="51" pos:column="30"/></operator> <name pos:line="51" pos:column="31">TRUE<pos:position pos:line="51" pos:column="35"/></name></expr>;<pos:position pos:line="51" pos:column="36"/></expr_stmt>  <comment type="block" pos:line="51" pos:column="38">/* CURLOPT_NOPROGRESS changes these */</comment>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">data<pos:position pos:line="52" pos:column="9"/></name><operator pos:line="52" pos:column="9">-&gt;<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="11">progress<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">.<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="20">flags<pos:position pos:line="52" pos:column="25"/></name></name> <operator pos:line="52" pos:column="26">|=<pos:position pos:line="52" pos:column="28"/></operator> <name pos:line="52" pos:column="29">PGRS_HIDE<pos:position pos:line="52" pos:column="38"/></name></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="54" pos:column="5">/* Set the default size of the SSL session ID cache */</comment>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">data<pos:position pos:line="55" pos:column="9"/></name><operator pos:line="55" pos:column="9">-&gt;<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="11">set<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">.<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="15">ssl<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">.<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="19">numsessions<pos:position pos:line="55" pos:column="30"/></name></name> <operator pos:line="55" pos:column="31">=<pos:position pos:line="55" pos:column="32"/></operator> <literal type="number" pos:line="55" pos:column="33">5<pos:position pos:line="55" pos:column="34"/></literal></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="57" pos:column="5">data<pos:position pos:line="57" pos:column="9"/></name><operator pos:line="57" pos:column="9">-&gt;<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="11">set<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">.<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="15">proxyport<pos:position pos:line="57" pos:column="24"/></name></name> <operator pos:line="57" pos:column="25">=<pos:position pos:line="57" pos:column="26"/></operator> <literal type="number" pos:line="57" pos:column="27">1080<pos:position pos:line="57" pos:column="31"/></literal></expr>;<pos:position pos:line="57" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">data<pos:position pos:line="58" pos:column="9"/></name><operator pos:line="58" pos:column="9">-&gt;<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="11">set<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">.<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="15">proxytype<pos:position pos:line="58" pos:column="24"/></name></name> <operator pos:line="58" pos:column="25">=<pos:position pos:line="58" pos:column="26"/></operator> <name pos:line="58" pos:column="27">CURLPROXY_HTTP<pos:position pos:line="58" pos:column="41"/></name></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt> <comment type="block" pos:line="58" pos:column="43">/* defaults to HTTP proxy */</comment>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">data<pos:position pos:line="59" pos:column="9"/></name><operator pos:line="59" pos:column="9">-&gt;<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="11">set<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">.<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">httpauth<pos:position pos:line="59" pos:column="23"/></name></name> <operator pos:line="59" pos:column="24">=<pos:position pos:line="59" pos:column="25"/></operator> <name pos:line="59" pos:column="26">CURLAUTH_BASIC<pos:position pos:line="59" pos:column="40"/></name></expr>;<pos:position pos:line="59" pos:column="41"/></expr_stmt>  <comment type="block" pos:line="59" pos:column="43">/* defaults to basic */</comment>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">data<pos:position pos:line="60" pos:column="9"/></name><operator pos:line="60" pos:column="9">-&gt;<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="11">set<pos:position pos:line="60" pos:column="14"/></name><operator pos:line="60" pos:column="14">.<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="15">proxyauth<pos:position pos:line="60" pos:column="24"/></name></name> <operator pos:line="60" pos:column="25">=<pos:position pos:line="60" pos:column="26"/></operator> <name pos:line="60" pos:column="27">CURLAUTH_BASIC<pos:position pos:line="60" pos:column="41"/></name></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt> <comment type="block" pos:line="60" pos:column="43">/* defaults to basic */</comment>

    <comment type="block" pos:line="62" pos:column="5">/* create an array with connection data struct pointers */</comment>
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">data<pos:position pos:line="63" pos:column="9"/></name><operator pos:line="63" pos:column="9">-&gt;<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="11">state<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">.<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="17">numconnects<pos:position pos:line="63" pos:column="28"/></name></name> <operator pos:line="63" pos:column="29">=<pos:position pos:line="63" pos:column="30"/></operator> <literal type="number" pos:line="63" pos:column="31">5<pos:position pos:line="63" pos:column="32"/></literal></expr>;<pos:position pos:line="63" pos:column="33"/></expr_stmt> <comment type="block" pos:line="63" pos:column="34">/* hard-coded right now */</comment>
    <expr_stmt><expr><name><name pos:line="64" pos:column="5">data<pos:position pos:line="64" pos:column="9"/></name><operator pos:line="64" pos:column="9">-&gt;<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="11">state<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">.<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="17">connects<pos:position pos:line="64" pos:column="25"/></name></name> <operator pos:line="64" pos:column="26">=<pos:position pos:line="64" pos:column="27"/></operator> <operator pos:line="64" pos:column="28">(<pos:position pos:line="64" pos:column="29"/></operator>struct <name pos:line="64" pos:column="36">connectdata<pos:position pos:line="64" pos:column="47"/></name> <operator pos:line="64" pos:column="48">*<pos:position pos:line="64" pos:column="49"/></operator><operator pos:line="64" pos:column="49">*<pos:position pos:line="64" pos:column="50"/></operator><operator pos:line="64" pos:column="50">)<pos:position pos:line="64" pos:column="51"/></operator>
      <call><name pos:line="65" pos:column="7">malloc<pos:position pos:line="65" pos:column="13"/></name><argument_list pos:line="65" pos:column="13">(<argument><expr><sizeof pos:line="65" pos:column="14">sizeof<argument_list pos:line="65" pos:column="20">(<argument><expr pos:line="65" pos:column="21">struct <name pos:line="65" pos:column="28">connectdata<pos:position pos:line="65" pos:column="39"/></name> <operator pos:line="65" pos:column="40">*<pos:position pos:line="65" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="65" pos:column="42"/></argument_list></sizeof> <operator pos:line="65" pos:column="43">*<pos:position pos:line="65" pos:column="44"/></operator> <name><name pos:line="65" pos:column="45">data<pos:position pos:line="65" pos:column="49"/></name><operator pos:line="65" pos:column="49">-&gt;<pos:position pos:line="65" pos:column="54"/></operator><name pos:line="65" pos:column="51">state<pos:position pos:line="65" pos:column="56"/></name><operator pos:line="65" pos:column="56">.<pos:position pos:line="65" pos:column="57"/></operator><name pos:line="65" pos:column="57">numconnects<pos:position pos:line="65" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="70"/></expr_stmt>

    <if pos:line="67" pos:column="5">if<condition pos:line="67" pos:column="7">(<expr><operator pos:line="67" pos:column="8">!<pos:position pos:line="67" pos:column="9"/></operator><name><name pos:line="67" pos:column="9">data<pos:position pos:line="67" pos:column="13"/></name><operator pos:line="67" pos:column="13">-&gt;<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="15">state<pos:position pos:line="67" pos:column="20"/></name><operator pos:line="67" pos:column="20">.<pos:position pos:line="67" pos:column="21"/></operator><name pos:line="67" pos:column="21">connects<pos:position pos:line="67" pos:column="29"/></name></name></expr>)<pos:position pos:line="67" pos:column="30"/></condition><then pos:line="67" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="68" pos:column="7">res<pos:position pos:line="68" pos:column="10"/></name> <operator pos:line="68" pos:column="11">=<pos:position pos:line="68" pos:column="12"/></operator> <name pos:line="68" pos:column="13">CURLE_OUT_OF_MEMORY<pos:position pos:line="68" pos:column="32"/></name></expr>;<pos:position pos:line="68" pos:column="33"/></expr_stmt></block></then>
    <else pos:line="69" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="7">memset<pos:position pos:line="70" pos:column="13"/></name><argument_list pos:line="70" pos:column="13">(<argument><expr><name><name pos:line="70" pos:column="14">data<pos:position pos:line="70" pos:column="18"/></name><operator pos:line="70" pos:column="18">-&gt;<pos:position pos:line="70" pos:column="23"/></operator><name pos:line="70" pos:column="20">state<pos:position pos:line="70" pos:column="25"/></name><operator pos:line="70" pos:column="25">.<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="26">connects<pos:position pos:line="70" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="36">0<pos:position pos:line="70" pos:column="37"/></literal></expr></argument>,
             <argument><expr><sizeof pos:line="71" pos:column="14">sizeof<argument_list pos:line="71" pos:column="20">(<argument><expr pos:line="71" pos:column="21">struct <name pos:line="71" pos:column="28">connectdata<pos:position pos:line="71" pos:column="39"/></name> <operator pos:line="71" pos:column="40">*<pos:position pos:line="71" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="71" pos:column="42"/></argument_list></sizeof><operator pos:line="71" pos:column="42">*<pos:position pos:line="71" pos:column="43"/></operator><name><name pos:line="71" pos:column="43">data<pos:position pos:line="71" pos:column="47"/></name><operator pos:line="71" pos:column="47">-&gt;<pos:position pos:line="71" pos:column="52"/></operator><name pos:line="71" pos:column="49">state<pos:position pos:line="71" pos:column="54"/></name><operator pos:line="71" pos:column="54">.<pos:position pos:line="71" pos:column="55"/></operator><name pos:line="71" pos:column="55">numconnects<pos:position pos:line="71" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="68"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="73" pos:column="5">/*
     * libcurl 7.10 introduced SSL verification *by default*! This needs to be
     * switched off unless wanted.
     */</comment>
    <expr_stmt><expr><name><name pos:line="77" pos:column="5">data<pos:position pos:line="77" pos:column="9"/></name><operator pos:line="77" pos:column="9">-&gt;<pos:position pos:line="77" pos:column="14"/></operator><name pos:line="77" pos:column="11">set<pos:position pos:line="77" pos:column="14"/></name><operator pos:line="77" pos:column="14">.<pos:position pos:line="77" pos:column="15"/></operator><name pos:line="77" pos:column="15">ssl<pos:position pos:line="77" pos:column="18"/></name><operator pos:line="77" pos:column="18">.<pos:position pos:line="77" pos:column="19"/></operator><name pos:line="77" pos:column="19">verifypeer<pos:position pos:line="77" pos:column="29"/></name></name> <operator pos:line="77" pos:column="30">=<pos:position pos:line="77" pos:column="31"/></operator> <name pos:line="77" pos:column="32">TRUE<pos:position pos:line="77" pos:column="36"/></name></expr>;<pos:position pos:line="77" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="78" pos:column="5">data<pos:position pos:line="78" pos:column="9"/></name><operator pos:line="78" pos:column="9">-&gt;<pos:position pos:line="78" pos:column="14"/></operator><name pos:line="78" pos:column="11">set<pos:position pos:line="78" pos:column="14"/></name><operator pos:line="78" pos:column="14">.<pos:position pos:line="78" pos:column="15"/></operator><name pos:line="78" pos:column="15">ssl<pos:position pos:line="78" pos:column="18"/></name><operator pos:line="78" pos:column="18">.<pos:position pos:line="78" pos:column="19"/></operator><name pos:line="78" pos:column="19">verifyhost<pos:position pos:line="78" pos:column="29"/></name></name> <operator pos:line="78" pos:column="30">=<pos:position pos:line="78" pos:column="31"/></operator> <literal type="number" pos:line="78" pos:column="32">2<pos:position pos:line="78" pos:column="33"/></literal></expr>;<pos:position pos:line="78" pos:column="34"/></expr_stmt>
<cpp:ifdef pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">ifdef<pos:position pos:line="79" pos:column="7"/></cpp:directive> <name pos:line="79" pos:column="8">CURL_CA_BUNDLE<pos:position pos:line="79" pos:column="22"/></name></cpp:ifdef>
    <comment type="block" pos:line="80" pos:column="5">/* This is our prefered CA cert bundle since install time */</comment>
    <expr_stmt><expr><name><name pos:line="81" pos:column="5">data<pos:position pos:line="81" pos:column="9"/></name><operator pos:line="81" pos:column="9">-&gt;<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="11">set<pos:position pos:line="81" pos:column="14"/></name><operator pos:line="81" pos:column="14">.<pos:position pos:line="81" pos:column="15"/></operator><name pos:line="81" pos:column="15">ssl<pos:position pos:line="81" pos:column="18"/></name><operator pos:line="81" pos:column="18">.<pos:position pos:line="81" pos:column="19"/></operator><name pos:line="81" pos:column="19">CAfile<pos:position pos:line="81" pos:column="25"/></name></name> <operator pos:line="81" pos:column="26">=<pos:position pos:line="81" pos:column="27"/></operator> <operator pos:line="81" pos:column="28">(<pos:position pos:line="81" pos:column="29"/></operator><name pos:line="81" pos:column="29">char<pos:position pos:line="81" pos:column="33"/></name> <operator pos:line="81" pos:column="34">*<pos:position pos:line="81" pos:column="35"/></operator><operator pos:line="81" pos:column="35">)<pos:position pos:line="81" pos:column="36"/></operator><name pos:line="81" pos:column="36">CURL_CA_BUNDLE<pos:position pos:line="81" pos:column="50"/></name></expr>;<pos:position pos:line="81" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">endif<pos:position pos:line="82" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="83" pos:column="4"/></block></else></if>

  <if pos:line="85" pos:column="3">if<condition pos:line="85" pos:column="5">(<expr><name pos:line="85" pos:column="6">res<pos:position pos:line="85" pos:column="9"/></name></expr>)<pos:position pos:line="85" pos:column="10"/></condition><then pos:line="85" pos:column="10"> <block pos:line="85" pos:column="11">{
<cpp:ifdef pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">ifdef<pos:position pos:line="86" pos:column="7"/></cpp:directive> <name pos:line="86" pos:column="8">USE_ARES<pos:position pos:line="86" pos:column="16"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">ares_destroy<pos:position pos:line="87" pos:column="17"/></name><argument_list pos:line="87" pos:column="17">(<argument><expr><name><name pos:line="87" pos:column="18">data<pos:position pos:line="87" pos:column="22"/></name><operator pos:line="87" pos:column="22">-&gt;<pos:position pos:line="87" pos:column="27"/></operator><name pos:line="87" pos:column="24">state<pos:position pos:line="87" pos:column="29"/></name><operator pos:line="87" pos:column="29">.<pos:position pos:line="87" pos:column="30"/></operator><name pos:line="87" pos:column="30">areschannel<pos:position pos:line="87" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">endif<pos:position pos:line="88" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="89" pos:column="5">if<condition pos:line="89" pos:column="7">(<expr><name><name pos:line="89" pos:column="8">data<pos:position pos:line="89" pos:column="12"/></name><operator pos:line="89" pos:column="12">-&gt;<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="14">state<pos:position pos:line="89" pos:column="19"/></name><operator pos:line="89" pos:column="19">.<pos:position pos:line="89" pos:column="20"/></operator><name pos:line="89" pos:column="20">headerbuff<pos:position pos:line="89" pos:column="30"/></name></name></expr>)<pos:position pos:line="89" pos:column="31"/></condition><then pos:line="89" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="7">free<pos:position pos:line="90" pos:column="11"/></name><argument_list pos:line="90" pos:column="11">(<argument><expr><name><name pos:line="90" pos:column="12">data<pos:position pos:line="90" pos:column="16"/></name><operator pos:line="90" pos:column="16">-&gt;<pos:position pos:line="90" pos:column="21"/></operator><name pos:line="90" pos:column="18">state<pos:position pos:line="90" pos:column="23"/></name><operator pos:line="90" pos:column="23">.<pos:position pos:line="90" pos:column="24"/></operator><name pos:line="90" pos:column="24">headerbuff<pos:position pos:line="90" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="36"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">free<pos:position pos:line="91" pos:column="9"/></name><argument_list pos:line="91" pos:column="9">(<argument><expr><name pos:line="91" pos:column="10">data<pos:position pos:line="91" pos:column="14"/></name></expr></argument>)<pos:position pos:line="91" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="92" pos:column="5">data<pos:position pos:line="92" pos:column="9"/></name> <operator pos:line="92" pos:column="10">=<pos:position pos:line="92" pos:column="11"/></operator> <name pos:line="92" pos:column="12">NULL<pos:position pos:line="92" pos:column="16"/></name></expr>;<pos:position pos:line="92" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="93" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="95" pos:column="3">*<pos:position pos:line="95" pos:column="4"/></operator><name pos:line="95" pos:column="4">curl<pos:position pos:line="95" pos:column="8"/></name> <operator pos:line="95" pos:column="9">=<pos:position pos:line="95" pos:column="10"/></operator> <name pos:line="95" pos:column="11">data<pos:position pos:line="95" pos:column="15"/></name></expr>;<pos:position pos:line="95" pos:column="16"/></expr_stmt>
  <return pos:line="96" pos:column="3">return <expr><name pos:line="96" pos:column="10">CURLE_OK<pos:position pos:line="96" pos:column="18"/></name></expr>;<pos:position pos:line="96" pos:column="19"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

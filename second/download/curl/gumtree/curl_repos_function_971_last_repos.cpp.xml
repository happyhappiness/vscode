<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_971_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">get_param_word<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier><modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">str<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier><modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">end_pos<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">ptr<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><operator pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="16">str<pos:position pos:line="3" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">word_begin<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">NULL<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">ptr2<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">escape<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">end_chars<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><literal type="string" pos:line="7" pos:column="27">";,"<pos:position pos:line="7" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* the first non-space char is here */</comment>
  <expr_stmt><expr><name pos:line="10" pos:column="3">word_begin<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">ptr<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">*<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">ptr<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">==<pos:position pos:line="11" pos:column="13"/></operator> <literal type="char" pos:line="11" pos:column="14">'"'<pos:position pos:line="11" pos:column="17"/></literal></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18"> <block pos:line="11" pos:column="19">{
    <expr_stmt><expr><operator pos:line="12" pos:column="5">++<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">ptr<pos:position pos:line="12" pos:column="10"/></name></expr>;<pos:position pos:line="12" pos:column="11"/></expr_stmt>
    <while pos:line="13" pos:column="5">while<condition pos:line="13" pos:column="10">(<expr><operator pos:line="13" pos:column="11">*<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">ptr<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition> <block pos:line="13" pos:column="17">{
      <if pos:line="14" pos:column="7">if<condition pos:line="14" pos:column="9">(<expr><operator pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">ptr<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">==<pos:position pos:line="14" pos:column="17"/></operator> <literal type="char" pos:line="14" pos:column="18">'\\'<pos:position pos:line="14" pos:column="22"/></literal></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23"> <block pos:line="14" pos:column="24">{
        <if pos:line="15" pos:column="9">if<condition pos:line="15" pos:column="11">(<expr><name><name pos:line="15" pos:column="12">ptr<pos:position pos:line="15" pos:column="15"/></name><index pos:line="15" pos:column="15">[<expr><literal type="number" pos:line="15" pos:column="16">1<pos:position pos:line="15" pos:column="17"/></literal></expr>]<pos:position pos:line="15" pos:column="18"/></index></name> <operator pos:line="15" pos:column="19">==<pos:position pos:line="15" pos:column="21"/></operator> <literal type="char" pos:line="15" pos:column="22">'\\'<pos:position pos:line="15" pos:column="26"/></literal> <operator pos:line="15" pos:column="27">||<pos:position pos:line="15" pos:column="29"/></operator> <name><name pos:line="15" pos:column="30">ptr<pos:position pos:line="15" pos:column="33"/></name><index pos:line="15" pos:column="33">[<expr><literal type="number" pos:line="15" pos:column="34">1<pos:position pos:line="15" pos:column="35"/></literal></expr>]<pos:position pos:line="15" pos:column="36"/></index></name> <operator pos:line="15" pos:column="37">==<pos:position pos:line="15" pos:column="39"/></operator> <literal type="char" pos:line="15" pos:column="40">'"'<pos:position pos:line="15" pos:column="43"/></literal></expr>)<pos:position pos:line="15" pos:column="44"/></condition><then pos:line="15" pos:column="44"> <block pos:line="15" pos:column="45">{
          <comment type="block" pos:line="16" pos:column="11">/* remember the first escape position */</comment>
          <if pos:line="17" pos:column="11">if<condition pos:line="17" pos:column="13">(<expr><operator pos:line="17" pos:column="14">!<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">escape<pos:position pos:line="17" pos:column="21"/></name></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="13">escape<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">ptr<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt></block></then></if>
          <comment type="block" pos:line="19" pos:column="11">/* skip escape of back-slash or double-quote */</comment>
          <expr_stmt><expr><name pos:line="20" pos:column="11">ptr<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">+=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">2<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
          <continue pos:line="21" pos:column="11">continue;<pos:position pos:line="21" pos:column="20"/></continue>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
      }<pos:position pos:line="23" pos:column="8"/></block></then></if>
      <if pos:line="24" pos:column="7">if<condition pos:line="24" pos:column="9">(<expr><operator pos:line="24" pos:column="10">*<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">ptr<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">==<pos:position pos:line="24" pos:column="17"/></operator> <literal type="char" pos:line="24" pos:column="18">'"'<pos:position pos:line="24" pos:column="21"/></literal></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22"> <block pos:line="24" pos:column="23">{
        <expr_stmt><expr><operator pos:line="25" pos:column="9">*<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">end_pos<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">ptr<pos:position pos:line="25" pos:column="23"/></name></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
        <if pos:line="26" pos:column="9">if<condition pos:line="26" pos:column="11">(<expr><name pos:line="26" pos:column="12">escape<pos:position pos:line="26" pos:column="18"/></name></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19"> <block pos:line="26" pos:column="20">{
          <comment type="block" pos:line="27" pos:column="11">/* has escape, we restore the unescaped string here */</comment>
          <expr_stmt><expr><name pos:line="28" pos:column="11">ptr<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">ptr2<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">escape<pos:position pos:line="28" pos:column="30"/></name></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
          <do pos:line="29" pos:column="11">do <block pos:line="29" pos:column="14">{
            <if pos:line="30" pos:column="13">if<condition pos:line="30" pos:column="15">(<expr><operator pos:line="30" pos:column="16">*<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">ptr<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">==<pos:position pos:line="30" pos:column="23"/></operator> <literal type="char" pos:line="30" pos:column="24">'\\'<pos:position pos:line="30" pos:column="28"/></literal> <operator pos:line="30" pos:column="29">&amp;&amp;<pos:position pos:line="30" pos:column="39"/></operator> <operator pos:line="30" pos:column="32">(<pos:position pos:line="30" pos:column="33"/></operator><name><name pos:line="30" pos:column="33">ptr<pos:position pos:line="30" pos:column="36"/></name><index pos:line="30" pos:column="36">[<expr><literal type="number" pos:line="30" pos:column="37">1<pos:position pos:line="30" pos:column="38"/></literal></expr>]<pos:position pos:line="30" pos:column="39"/></index></name> <operator pos:line="30" pos:column="40">==<pos:position pos:line="30" pos:column="42"/></operator> <literal type="char" pos:line="30" pos:column="43">'\\'<pos:position pos:line="30" pos:column="47"/></literal> <operator pos:line="30" pos:column="48">||<pos:position pos:line="30" pos:column="50"/></operator> <name><name pos:line="30" pos:column="51">ptr<pos:position pos:line="30" pos:column="54"/></name><index pos:line="30" pos:column="54">[<expr><literal type="number" pos:line="30" pos:column="55">1<pos:position pos:line="30" pos:column="56"/></literal></expr>]<pos:position pos:line="30" pos:column="57"/></index></name> <operator pos:line="30" pos:column="58">==<pos:position pos:line="30" pos:column="60"/></operator> <literal type="char" pos:line="30" pos:column="61">'"'<pos:position pos:line="30" pos:column="64"/></literal><operator pos:line="30" pos:column="64">)<pos:position pos:line="30" pos:column="65"/></operator></expr>)<pos:position pos:line="30" pos:column="66"/></condition><then pos:line="30" pos:column="66">
              <block type="pseudo"><expr_stmt><expr><operator pos:line="31" pos:column="15">++<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">ptr<pos:position pos:line="31" pos:column="20"/></name></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt></block></then></if>
            <expr_stmt><expr><operator pos:line="32" pos:column="13">*<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">ptr2<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">++<pos:position pos:line="32" pos:column="20"/></operator> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <operator pos:line="32" pos:column="23">*<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">ptr<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">++<pos:position pos:line="32" pos:column="29"/></operator></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
          }<pos:position pos:line="33" pos:column="12"/></block>
          while<condition pos:line="34" pos:column="16">(<expr><name pos:line="34" pos:column="17">ptr<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">&lt;<pos:position pos:line="34" pos:column="25"/></operator> <operator pos:line="34" pos:column="23">*<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="24">end_pos<pos:position pos:line="34" pos:column="31"/></name></expr>)<pos:position pos:line="34" pos:column="32"/></condition>;<pos:position pos:line="34" pos:column="33"/></do>
          <expr_stmt><expr><operator pos:line="35" pos:column="11">*<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">end_pos<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <name pos:line="35" pos:column="22">ptr2<pos:position pos:line="35" pos:column="26"/></name></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
        <while pos:line="37" pos:column="9">while<condition pos:line="37" pos:column="14">(<expr><operator pos:line="37" pos:column="15">*<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="16">ptr<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">&amp;&amp;<pos:position pos:line="37" pos:column="30"/></operator> <name pos:line="37" pos:column="23">NULL<pos:position pos:line="37" pos:column="27"/></name> <operator pos:line="37" pos:column="28">==<pos:position pos:line="37" pos:column="30"/></operator> <call><name pos:line="37" pos:column="31">strchr<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">end_chars<pos:position pos:line="37" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="49">*<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="50">ptr<pos:position pos:line="37" pos:column="53"/></name></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="55"/></condition>
          <block type="pseudo"><expr_stmt><expr><operator pos:line="38" pos:column="11">++<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">ptr<pos:position pos:line="38" pos:column="16"/></name></expr>;<pos:position pos:line="38" pos:column="17"/></expr_stmt></block></while>
        <expr_stmt><expr><operator pos:line="39" pos:column="9">*<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">str<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <name pos:line="39" pos:column="16">ptr<pos:position pos:line="39" pos:column="19"/></name></expr>;<pos:position pos:line="39" pos:column="20"/></expr_stmt>
        <return pos:line="40" pos:column="9">return <expr><name pos:line="40" pos:column="16">word_begin<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">+<pos:position pos:line="40" pos:column="28"/></operator> <literal type="number" pos:line="40" pos:column="29">1<pos:position pos:line="40" pos:column="30"/></literal></expr>;<pos:position pos:line="40" pos:column="31"/></return>
      }<pos:position pos:line="41" pos:column="8"/></block></then></if>
      <expr_stmt><expr><operator pos:line="42" pos:column="7">++<pos:position pos:line="42" pos:column="9"/></operator><name pos:line="42" pos:column="9">ptr<pos:position pos:line="42" pos:column="12"/></name></expr>;<pos:position pos:line="42" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></while>
    <comment type="block" pos:line="44" pos:column="5">/* end quote is missing, treat it as non-quoted. */</comment>
    <expr_stmt><expr><name pos:line="45" pos:column="5">ptr<pos:position pos:line="45" pos:column="8"/></name> <operator pos:line="45" pos:column="9">=<pos:position pos:line="45" pos:column="10"/></operator> <name pos:line="45" pos:column="11">word_begin<pos:position pos:line="45" pos:column="21"/></name></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <while pos:line="48" pos:column="3">while<condition pos:line="48" pos:column="8">(<expr><operator pos:line="48" pos:column="9">*<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">ptr<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">&amp;&amp;<pos:position pos:line="48" pos:column="24"/></operator> <name pos:line="48" pos:column="17">NULL<pos:position pos:line="48" pos:column="21"/></name> <operator pos:line="48" pos:column="22">==<pos:position pos:line="48" pos:column="24"/></operator> <call><name pos:line="48" pos:column="25">strchr<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><name pos:line="48" pos:column="32">end_chars<pos:position pos:line="48" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="43">*<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="44">ptr<pos:position pos:line="48" pos:column="47"/></name></expr></argument>)<pos:position pos:line="48" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="49"/></condition>
    <block type="pseudo"><expr_stmt><expr><operator pos:line="49" pos:column="5">++<pos:position pos:line="49" pos:column="7"/></operator><name pos:line="49" pos:column="7">ptr<pos:position pos:line="49" pos:column="10"/></name></expr>;<pos:position pos:line="49" pos:column="11"/></expr_stmt></block></while>
  <expr_stmt><expr><operator pos:line="50" pos:column="3">*<pos:position pos:line="50" pos:column="4"/></operator><name pos:line="50" pos:column="4">str<pos:position pos:line="50" pos:column="7"/></name> <operator pos:line="50" pos:column="8">=<pos:position pos:line="50" pos:column="9"/></operator> <operator pos:line="50" pos:column="10">*<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="11">end_pos<pos:position pos:line="50" pos:column="18"/></name> <operator pos:line="50" pos:column="19">=<pos:position pos:line="50" pos:column="20"/></operator> <name pos:line="50" pos:column="21">ptr<pos:position pos:line="50" pos:column="24"/></name></expr>;<pos:position pos:line="50" pos:column="25"/></expr_stmt>
  <return pos:line="51" pos:column="3">return <expr><name pos:line="51" pos:column="10">word_begin<pos:position pos:line="51" pos:column="20"/></name></expr>;<pos:position pos:line="51" pos:column="21"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

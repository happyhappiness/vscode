<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1018_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type>
<name pos:line="2" pos:column="1">Curl_ssl_connect_nonblocking<pos:position pos:line="2" pos:column="29"/></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name><name pos:line="2" pos:column="30">struct<pos:position pos:line="2" pos:column="36"/></name> <name pos:line="2" pos:column="37">connectdata<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">conn<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">int<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">sockindex<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="3" pos:column="30">bool<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">done<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="41"/></parameter_list>
<block pos:line="4" pos:column="1">{
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><call><name pos:line="5" pos:column="5">defined<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">USE_SSL<pos:position pos:line="5" pos:column="20"/></name></expr></argument>)<pos:position pos:line="5" pos:column="21"/></argument_list></call> <operator pos:line="5" pos:column="22">&amp;&amp;<pos:position pos:line="5" pos:column="32"/></operator> <call><name pos:line="5" pos:column="25">defined<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">USE_SSLEAY<pos:position pos:line="5" pos:column="43"/></name></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="6" pos:column="3">/* mark this is being ssl enabled from here on. */</comment>
  <expr_stmt><expr><name><name pos:line="7" pos:column="3">conn<pos:position pos:line="7" pos:column="7"/></name><operator pos:line="7" pos:column="7">-&gt;<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="9">ssl<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><name pos:line="7" pos:column="13">sockindex<pos:position pos:line="7" pos:column="22"/></name></expr>]<pos:position pos:line="7" pos:column="23"/></index></name><operator pos:line="7" pos:column="23">.<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">use<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">=<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="30">TRUE<pos:position pos:line="7" pos:column="34"/></name></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
  <return pos:line="8" pos:column="3">return <expr><call><name pos:line="8" pos:column="10">Curl_ossl_connect_nonblocking<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">(<argument><expr><name pos:line="8" pos:column="40">conn<pos:position pos:line="8" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="46">sockindex<pos:position pos:line="8" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="57">done<pos:position pos:line="8" pos:column="61"/></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="63"/></return>

<cpp:else pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">else<pos:position pos:line="10" pos:column="6"/></cpp:directive></cpp:else>
<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">USE_NSS<pos:position pos:line="11" pos:column="15"/></name></cpp:ifdef>
  <expr_stmt><expr><operator pos:line="12" pos:column="3">*<pos:position pos:line="12" pos:column="4"/></operator><name pos:line="12" pos:column="4">done<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <name pos:line="12" pos:column="11">TRUE<pos:position pos:line="12" pos:column="15"/></name></expr>;<pos:position pos:line="12" pos:column="16"/></expr_stmt> <comment type="block" pos:line="12" pos:column="17">/* fallback to BLOCKING */</comment>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">conn<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">ssl<pos:position pos:line="13" pos:column="12"/></name><index pos:line="13" pos:column="12">[<expr><name pos:line="13" pos:column="13">sockindex<pos:position pos:line="13" pos:column="22"/></name></expr>]<pos:position pos:line="13" pos:column="23"/></index></name><operator pos:line="13" pos:column="23">.<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">use<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="30">TRUE<pos:position pos:line="13" pos:column="34"/></name></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
  <return pos:line="14" pos:column="3">return <expr><call><name pos:line="14" pos:column="10">Curl_nss_connect<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">conn<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">sockindex<pos:position pos:line="14" pos:column="42"/></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></return>
<cpp:else pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">else<pos:position pos:line="15" pos:column="6"/></cpp:directive></cpp:else>
<cpp:ifdef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifdef<pos:position pos:line="16" pos:column="7"/></cpp:directive> <name pos:line="16" pos:column="8">USE_QSOSSL<pos:position pos:line="16" pos:column="18"/></name></cpp:ifdef>
  <expr_stmt><expr><operator pos:line="17" pos:column="3">*<pos:position pos:line="17" pos:column="4"/></operator><name pos:line="17" pos:column="4">done<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <name pos:line="17" pos:column="11">TRUE<pos:position pos:line="17" pos:column="15"/></name></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt> <comment type="block" pos:line="17" pos:column="17">/* fallback to BLOCKING */</comment>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">conn<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">ssl<pos:position pos:line="18" pos:column="12"/></name><index pos:line="18" pos:column="12">[<expr><name pos:line="18" pos:column="13">sockindex<pos:position pos:line="18" pos:column="22"/></name></expr>]<pos:position pos:line="18" pos:column="23"/></index></name><operator pos:line="18" pos:column="23">.<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="24">use<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <name pos:line="18" pos:column="30">TRUE<pos:position pos:line="18" pos:column="34"/></name></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
  <return pos:line="19" pos:column="3">return <expr><call><name pos:line="19" pos:column="10">Curl_qsossl_connect<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">conn<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="36">sockindex<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></return>
<cpp:else pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">else<pos:position pos:line="20" pos:column="6"/></cpp:directive></cpp:else>
  <comment type="block" pos:line="21" pos:column="3">/* not implemented!
     fallback to BLOCKING call. */</comment>
  <expr_stmt><expr><operator pos:line="23" pos:column="3">*<pos:position pos:line="23" pos:column="4"/></operator><name pos:line="23" pos:column="4">done<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <name pos:line="23" pos:column="11">TRUE<pos:position pos:line="23" pos:column="15"/></name></expr>;<pos:position pos:line="23" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">conn<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">ssl<pos:position pos:line="24" pos:column="12"/></name><index pos:line="24" pos:column="12">[<expr><name pos:line="24" pos:column="13">sockindex<pos:position pos:line="24" pos:column="22"/></name></expr>]<pos:position pos:line="24" pos:column="23"/></index></name><operator pos:line="24" pos:column="23">.<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">use<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="30">TRUE<pos:position pos:line="24" pos:column="34"/></name></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>
  <return pos:line="25" pos:column="3">return <expr><call><name pos:line="25" pos:column="10">Curl_ssl_connect<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">conn<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="33">sockindex<pos:position pos:line="25" pos:column="42"/></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></return>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="26" pos:column="8">/* USE_QSOSSL */</comment>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="27" pos:column="8">/* USE_NSS */</comment>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="28" pos:column="8">/* USE_SSLEAY */</comment>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

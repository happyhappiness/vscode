<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_function_17411.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">help<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">void<pos:position pos:line="1" pos:column="22"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="23"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">printf<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><name pos:line="3" pos:column="10">CURL_ID<pos:position pos:line="3" pos:column="17"/></name> <literal type="string" pos:line="3" pos:column="18">"%s\n"<pos:position pos:line="3" pos:column="24"/></literal>
       <literal type="string" pos:line="4" pos:column="8">"Usage: curl [options...] &lt;url&gt;\n"<pos:position pos:line="4" pos:column="48"/></literal>
       <literal type="string" pos:line="5" pos:column="8">"Options: (H) means HTTP/HTTPS only, (F) means FTP only\n"<pos:position pos:line="5" pos:column="66"/></literal>
       <literal type="string" pos:line="6" pos:column="8">" -a/--append        Append to target file when uploading (F)\n"<pos:position pos:line="6" pos:column="72"/></literal>
       <literal type="string" pos:line="7" pos:column="8">" -A/--user-agent &lt;string&gt; User-Agent to send to server (H)\n"<pos:position pos:line="7" pos:column="76"/></literal>
       <literal type="string" pos:line="8" pos:column="8">" -b/--cookie &lt;name=string/file&gt; Cookie string or file to read cookies from (H)\n"<pos:position pos:line="8" pos:column="96"/></literal>
       <literal type="string" pos:line="9" pos:column="8">" -B/--use-ascii     Use ASCII/text transfer\n"<pos:position pos:line="9" pos:column="55"/></literal></expr></argument>,
         <argument><expr><call><name pos:line="10" pos:column="10">curl_version<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">()<pos:position pos:line="10" pos:column="24"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">puts<pos:position pos:line="11" pos:column="7"/></name><argument_list pos:line="11" pos:column="7">(<argument><expr><literal type="string" pos:line="11" pos:column="8">" -c/--cookie-jar &lt;file&gt; Write all cookies to this file after operation (H)\n"<pos:position pos:line="11" pos:column="92"/></literal>
       <literal type="string" pos:line="12" pos:column="8">" -C/--continue-at &lt;offset&gt; Specify absolute resume offset\n"<pos:position pos:line="12" pos:column="75"/></literal>
       <literal type="string" pos:line="13" pos:column="8">" -d/--data &lt;data&gt;   HTTP POST data (H)\n"<pos:position pos:line="13" pos:column="56"/></literal>
       <literal type="string" pos:line="14" pos:column="8">"    --data-ascii &lt;data&gt;   HTTP POST ASCII data (H)\n"<pos:position pos:line="14" pos:column="68"/></literal>
       <literal type="string" pos:line="15" pos:column="8">"    --data-binary &lt;data&gt;  HTTP POST binary data (H)\n"<pos:position pos:line="15" pos:column="69"/></literal>
       <literal type="string" pos:line="16" pos:column="8">" -D/--dump-header &lt;file&gt; Write the headers to this file\n"<pos:position pos:line="16" pos:column="73"/></literal>
       <literal type="string" pos:line="17" pos:column="8">"    --egd-file &lt;file&gt; EGD socket path for random data (SSL)\n"<pos:position pos:line="17" pos:column="77"/></literal>
       <literal type="string" pos:line="18" pos:column="8">" -e/--referer       Referer page (H)"<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">puts<pos:position pos:line="19" pos:column="7"/></name><argument_list pos:line="19" pos:column="7">(<argument><expr><literal type="string" pos:line="19" pos:column="8">" -E/--cert &lt;cert[:passwd]&gt; Specifies your certificate file and password (HTTPS)\n"<pos:position pos:line="19" pos:column="97"/></literal>
       <literal type="string" pos:line="20" pos:column="8">"    --cacert &lt;file&gt; CA certifciate to verify peer against (SSL)\n"<pos:position pos:line="20" pos:column="81"/></literal>
       <literal type="string" pos:line="21" pos:column="8">"    --ciphers &lt;list&gt; What SSL ciphers to use (SSL)\n"<pos:position pos:line="21" pos:column="68"/></literal>
       <literal type="string" pos:line="22" pos:column="8">"    --connect-timeout &lt;seconds&gt; Maximum time allowed for connection\n"<pos:position pos:line="22" pos:column="85"/></literal>
       <literal type="string" pos:line="23" pos:column="8">" -f/--fail          Fail silently (no output at all) on errors (H)\n"<pos:position pos:line="23" pos:column="78"/></literal>
       <literal type="string" pos:line="24" pos:column="8">" -F/--form &lt;name=content&gt; Specify HTTP POST data (H)\n"<pos:position pos:line="24" pos:column="70"/></literal>
       <literal type="string" pos:line="25" pos:column="8">" -g/--globoff       Disable URL sequences and ranges using {} and []\n"<pos:position pos:line="25" pos:column="80"/></literal>
       <literal type="string" pos:line="26" pos:column="8">" -G/--get           Send the -d data with a HTTP GET (H)"<pos:position pos:line="26" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">puts<pos:position pos:line="27" pos:column="7"/></name><argument_list pos:line="27" pos:column="7">(<argument><expr><literal type="string" pos:line="27" pos:column="8">" -h/--help          This help text\n"<pos:position pos:line="27" pos:column="46"/></literal>
       <literal type="string" pos:line="28" pos:column="8">" -H/--header &lt;line&gt; Custom header to pass to server. (H)\n"<pos:position pos:line="28" pos:column="74"/></literal>
       <literal type="string" pos:line="29" pos:column="8">" -i/--include       Include the HTTP-header in the output (H)\n"<pos:position pos:line="29" pos:column="73"/></literal>
       <literal type="string" pos:line="30" pos:column="8">" -I/--head          Fetch document info only (HTTP HEAD/FTP SIZE)\n"<pos:position pos:line="30" pos:column="77"/></literal>
       <literal type="string" pos:line="31" pos:column="8">"    --interface &lt;interface&gt; Specify the interface to be used\n"<pos:position pos:line="31" pos:column="78"/></literal>
       <literal type="string" pos:line="32" pos:column="8">"    --krb4 &lt;level&gt;  Enable krb4 with specified security level (F)\n"<pos:position pos:line="32" pos:column="83"/></literal>
       <literal type="string" pos:line="33" pos:column="8">" -K/--config        Specify which config file to read\n"<pos:position pos:line="33" pos:column="65"/></literal>
       <literal type="string" pos:line="34" pos:column="8">" -l/--list-only     List only names of an FTP directory (F)"<pos:position pos:line="34" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="71"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">puts<pos:position pos:line="35" pos:column="7"/></name><argument_list pos:line="35" pos:column="7">(<argument><expr><literal type="string" pos:line="35" pos:column="8">" -L/--location      Follow Location: hints (H)\n"<pos:position pos:line="35" pos:column="58"/></literal>
       <literal type="string" pos:line="36" pos:column="8">" -m/--max-time &lt;seconds&gt; Maximum time allowed for the transfer\n"<pos:position pos:line="36" pos:column="80"/></literal>
       <literal type="string" pos:line="37" pos:column="8">" -M/--manual        Display huge help text\n"<pos:position pos:line="37" pos:column="54"/></literal>
       <literal type="string" pos:line="38" pos:column="8">" -n/--netrc         Read .netrc for user name and password\n"<pos:position pos:line="38" pos:column="70"/></literal>
       <literal type="string" pos:line="39" pos:column="8">" -N/--no-buffer     Disables the buffering of the output stream"<pos:position pos:line="39" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="75"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">puts<pos:position pos:line="40" pos:column="7"/></name><argument_list pos:line="40" pos:column="7">(<argument><expr><literal type="string" pos:line="40" pos:column="8">" -o/--output &lt;file&gt; Write output to &lt;file&gt; instead of stdout\n"<pos:position pos:line="40" pos:column="84"/></literal>
       <literal type="string" pos:line="41" pos:column="8">" -O/--remote-name   Write output to a file named as the remote file\n"<pos:position pos:line="41" pos:column="79"/></literal>
       <literal type="string" pos:line="42" pos:column="8">" -p/--proxytunnel   Perform non-HTTP services through a HTTP proxy\n"<pos:position pos:line="42" pos:column="78"/></literal>
       <literal type="string" pos:line="43" pos:column="8">" -P/--ftpport &lt;address&gt; Use PORT with address instead of PASV when ftping (F)\n"<pos:position pos:line="43" pos:column="95"/></literal>
       <literal type="string" pos:line="44" pos:column="8">" -q                 When used as the first parameter disables .curlrc\n"<pos:position pos:line="44" pos:column="81"/></literal>
       <literal type="string" pos:line="45" pos:column="8">" -Q/--quote &lt;cmd&gt;   Send QUOTE command to FTP before file transfer (F)"<pos:position pos:line="45" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="82"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">puts<pos:position pos:line="46" pos:column="7"/></name><argument_list pos:line="46" pos:column="7">(<argument><expr><literal type="string" pos:line="46" pos:column="8">" -r/--range &lt;range&gt; Retrieve a byte range from a HTTP/1.1 or FTP server\n"<pos:position pos:line="46" pos:column="89"/></literal>
       <literal type="string" pos:line="47" pos:column="8">" -R/--remote-time   Set the remote file's time on the local output\n"<pos:position pos:line="47" pos:column="78"/></literal>
       <literal type="string" pos:line="48" pos:column="8">" -s/--silent        Silent mode. Don't output anything\n"<pos:position pos:line="48" pos:column="66"/></literal>
       <literal type="string" pos:line="49" pos:column="8">" -S/--show-error    Show error. With -s, make curl show errors when they occur\n"<pos:position pos:line="49" pos:column="90"/></literal>
       <literal type="string" pos:line="50" pos:column="8">"    --stderr &lt;file&gt; Where to redirect stderr. - means stdout.\n"<pos:position pos:line="50" pos:column="79"/></literal>
       <literal type="string" pos:line="51" pos:column="8">" -t/--telnet-option &lt;OPT=val&gt; Set telnet option\n"<pos:position pos:line="51" pos:column="65"/></literal>
       <literal type="string" pos:line="52" pos:column="8">" -T/--upload-file &lt;file&gt; Transfer/upload &lt;file&gt; to remote site\n"<pos:position pos:line="52" pos:column="86"/></literal>
       <literal type="string" pos:line="53" pos:column="8">"    --url &lt;URL&gt;     Another way to specify URL to work with"<pos:position pos:line="53" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="71"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">puts<pos:position pos:line="54" pos:column="7"/></name><argument_list pos:line="54" pos:column="7">(<argument><expr><literal type="string" pos:line="54" pos:column="8">" -u/--user &lt;user[:password]&gt; Specify user and password to use\n"<pos:position pos:line="54" pos:column="79"/></literal>
       <literal type="string" pos:line="55" pos:column="8">" -U/--proxy-user &lt;user[:password]&gt; Specify Proxy authentication\n"<pos:position pos:line="55" pos:column="81"/></literal>
       <literal type="string" pos:line="56" pos:column="8">" -v/--verbose       Makes the operation more talkative\n"<pos:position pos:line="56" pos:column="66"/></literal>
       <literal type="string" pos:line="57" pos:column="8">" -V/--version       Outputs version number then quits\n"<pos:position pos:line="57" pos:column="65"/></literal>
       <literal type="string" pos:line="58" pos:column="8">" -w/--write-out [format] What to output after completion\n"<pos:position pos:line="58" pos:column="68"/></literal>
       <literal type="string" pos:line="59" pos:column="8">" -x/--proxy &lt;host[:port]&gt;  Use proxy. (Default port is 1080)\n"<pos:position pos:line="59" pos:column="78"/></literal>
       <literal type="string" pos:line="60" pos:column="8">"    --random-file &lt;file&gt; File to use for reading random data from (SSL)\n"<pos:position pos:line="60" pos:column="89"/></literal>
       <literal type="string" pos:line="61" pos:column="8">" -X/--request &lt;command&gt; Specific request command to use"<pos:position pos:line="61" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="67"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="62" pos:column="3">puts<pos:position pos:line="62" pos:column="7"/></name><argument_list pos:line="62" pos:column="7">(<argument><expr><literal type="string" pos:line="62" pos:column="8">" -y/--speed-time    Time needed to trig speed-limit abort. Defaults to 30\n"<pos:position pos:line="62" pos:column="85"/></literal>
       <literal type="string" pos:line="63" pos:column="8">" -Y/--speed-limit   Stop transfer if below speed-limit for 'speed-time' secs\n"<pos:position pos:line="63" pos:column="88"/></literal>
       <literal type="string" pos:line="64" pos:column="8">" -z/--time-cond &lt;time&gt; Includes a time condition to the server (H)\n"<pos:position pos:line="64" pos:column="84"/></literal>
       <literal type="string" pos:line="65" pos:column="8">" -Z/--max-redirs &lt;num&gt; Set maximum number of redirections allowed (H)\n"<pos:position pos:line="65" pos:column="87"/></literal>
       <literal type="string" pos:line="66" pos:column="8">" -2/--sslv2         Force usage of SSLv2 (H)\n"<pos:position pos:line="66" pos:column="56"/></literal>
       <literal type="string" pos:line="67" pos:column="8">" -3/--sslv3         Force usage of SSLv3 (H)"<pos:position pos:line="67" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="68" pos:column="3">puts<pos:position pos:line="68" pos:column="7"/></name><argument_list pos:line="68" pos:column="7">(<argument><expr><literal type="string" pos:line="68" pos:column="8">" -#/--progress-bar  Display transfer progress as a progress bar\n"<pos:position pos:line="68" pos:column="75"/></literal>
       <literal type="string" pos:line="69" pos:column="8">"    --crlf          Convert LF to CRLF in upload. Useful for MVS (OS/390)"<pos:position pos:line="69" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="85"/></expr_stmt>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1548_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">smb_send_setup<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">connectdata<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">conn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">smb_conn<pos:position pos:line="3" pos:column="18"/></name></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">smbc<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><operator pos:line="3" pos:column="27">&amp;<pos:position pos:line="3" pos:column="32"/></operator><name><name pos:line="3" pos:column="28">conn<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">proto<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">.<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="40">smbc<pos:position pos:line="3" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">smb_setup<pos:position pos:line="4" pos:column="19"/></name></name></type> <name pos:line="4" pos:column="20">msg<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><name><name pos:line="5" pos:column="13">msg<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">.<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">bytes<pos:position pos:line="5" pos:column="22"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name></type> <name><name pos:line="6" pos:column="17">lm_hash<pos:position pos:line="6" pos:column="24"/></name><index pos:line="6" pos:column="24">[<expr><literal type="number" pos:line="6" pos:column="25">21<pos:position pos:line="6" pos:column="27"/></literal></expr>]<pos:position pos:line="6" pos:column="28"/></index></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">unsigned<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">char<pos:position pos:line="7" pos:column="16"/></name></type> <name><name pos:line="7" pos:column="17">lm<pos:position pos:line="7" pos:column="19"/></name><index pos:line="7" pos:column="19">[<expr><literal type="number" pos:line="7" pos:column="20">24<pos:position pos:line="7" pos:column="22"/></literal></expr>]<pos:position pos:line="7" pos:column="23"/></index></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">unsigned<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">char<pos:position pos:line="8" pos:column="16"/></name></type> <name><name pos:line="8" pos:column="17">nt_hash<pos:position pos:line="8" pos:column="24"/></name><index pos:line="8" pos:column="24">[<expr><literal type="number" pos:line="8" pos:column="25">21<pos:position pos:line="8" pos:column="27"/></literal></expr>]<pos:position pos:line="8" pos:column="28"/></index></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">unsigned<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">char<pos:position pos:line="9" pos:column="16"/></name></type> <name><name pos:line="9" pos:column="17">nt<pos:position pos:line="9" pos:column="19"/></name><index pos:line="9" pos:column="19">[<expr><literal type="number" pos:line="9" pos:column="20">24<pos:position pos:line="9" pos:column="22"/></literal></expr>]<pos:position pos:line="9" pos:column="23"/></index></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">byte_count<pos:position pos:line="11" pos:column="20"/></name> <init pos:line="11" pos:column="21">= <expr><sizeof pos:line="11" pos:column="23">sizeof<argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">lm<pos:position pos:line="11" pos:column="32"/></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></sizeof> <operator pos:line="11" pos:column="34">+<pos:position pos:line="11" pos:column="35"/></operator> <sizeof pos:line="11" pos:column="36">sizeof<argument_list pos:line="11" pos:column="42">(<argument><expr><name pos:line="11" pos:column="43">nt<pos:position pos:line="11" pos:column="45"/></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="11" pos:column="47"/></decl_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">byte_count<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">+=<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">strlen<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name><name pos:line="12" pos:column="24">smbc<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">user<pos:position pos:line="12" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call> <operator pos:line="12" pos:column="36">+<pos:position pos:line="12" pos:column="37"/></operator> <call><name pos:line="12" pos:column="38">strlen<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><name><name pos:line="12" pos:column="45">smbc<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">domain<pos:position pos:line="12" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">byte_count<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">+=<pos:position pos:line="13" pos:column="16"/></operator> <call><name pos:line="13" pos:column="17">strlen<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">OS<pos:position pos:line="13" pos:column="26"/></name></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call> <operator pos:line="13" pos:column="28">+<pos:position pos:line="13" pos:column="29"/></operator> <call><name pos:line="13" pos:column="30">strlen<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">CLIENTNAME<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call> <operator pos:line="13" pos:column="49">+<pos:position pos:line="13" pos:column="50"/></operator> <literal type="number" pos:line="13" pos:column="51">4<pos:position pos:line="13" pos:column="52"/></literal></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt> <comment type="block" pos:line="13" pos:column="54">/* 4 null chars */</comment>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">byte_count<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&gt;<pos:position pos:line="14" pos:column="21"/></operator> <sizeof pos:line="14" pos:column="19">sizeof<argument_list pos:line="14" pos:column="25">(<argument><expr><name><name pos:line="14" pos:column="26">msg<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">.<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">bytes<pos:position pos:line="14" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></sizeof></expr>)<pos:position pos:line="14" pos:column="37"/></condition><then pos:line="14" pos:column="37">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">CURLE_FILESIZE_EXCEEDED<pos:position pos:line="15" pos:column="35"/></name></expr>;<pos:position pos:line="15" pos:column="36"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">Curl_ntlm_core_mk_lm_hash<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name><name pos:line="17" pos:column="29">conn<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">-&gt;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="35">data<pos:position pos:line="17" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="41">conn<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">passwd<pos:position pos:line="17" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="55">lm_hash<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">Curl_ntlm_core_lm_resp<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">lm_hash<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="35">smbc<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">challenge<pos:position pos:line="18" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="52">lm<pos:position pos:line="18" pos:column="54"/></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>
<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef<pos:position pos:line="19" pos:column="7"/></cpp:directive> <name pos:line="19" pos:column="8">USE_NTRESPONSES<pos:position pos:line="19" pos:column="23"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">Curl_ntlm_core_mk_nt_hash<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name><name pos:line="20" pos:column="29">conn<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">data<pos:position pos:line="20" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="41">conn<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">-&gt;<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="47">passwd<pos:position pos:line="20" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">nt_hash<pos:position pos:line="20" pos:column="62"/></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">Curl_ntlm_core_lm_resp<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">nt_hash<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="35">smbc<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">-&gt;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="41">challenge<pos:position pos:line="21" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="52">nt<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
<cpp:else pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">else<pos:position pos:line="22" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">memset<pos:position pos:line="23" pos:column="9"/></name><argument_list pos:line="23" pos:column="9">(<argument><expr><name pos:line="23" pos:column="10">nt<pos:position pos:line="23" pos:column="12"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="14">0<pos:position pos:line="23" pos:column="15"/></literal></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="17">sizeof<argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">nt<pos:position pos:line="23" pos:column="26"/></name></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="26" pos:column="3">memset<pos:position pos:line="26" pos:column="9"/></name><argument_list pos:line="26" pos:column="9">(<argument><expr><operator pos:line="26" pos:column="10">&amp;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="11">msg<pos:position pos:line="26" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="19">sizeof<argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">msg<pos:position pos:line="26" pos:column="29"/></name></expr></argument>)<pos:position pos:line="26" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">msg<pos:position pos:line="27" pos:column="6"/></name><operator pos:line="27" pos:column="6">.<pos:position pos:line="27" pos:column="7"/></operator><name pos:line="27" pos:column="7">word_count<pos:position pos:line="27" pos:column="17"/></name></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">SMB_WC_SETUP_ANDX<pos:position pos:line="27" pos:column="37"/></name></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">msg<pos:position pos:line="28" pos:column="6"/></name><operator pos:line="28" pos:column="6">.<pos:position pos:line="28" pos:column="7"/></operator><name pos:line="28" pos:column="7">andx<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">.<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="12">command<pos:position pos:line="28" pos:column="19"/></name></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">SMB_COM_NO_ANDX_COMMAND<pos:position pos:line="28" pos:column="45"/></name></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">msg<pos:position pos:line="29" pos:column="6"/></name><operator pos:line="29" pos:column="6">.<pos:position pos:line="29" pos:column="7"/></operator><name pos:line="29" pos:column="7">max_buffer_size<pos:position pos:line="29" pos:column="22"/></name></name> <operator pos:line="29" pos:column="23">=<pos:position pos:line="29" pos:column="24"/></operator> <call><name pos:line="29" pos:column="25">smb_swap16<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">MAX_MESSAGE_SIZE<pos:position pos:line="29" pos:column="52"/></name></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">msg<pos:position pos:line="30" pos:column="6"/></name><operator pos:line="30" pos:column="6">.<pos:position pos:line="30" pos:column="7"/></operator><name pos:line="30" pos:column="7">max_mpx_count<pos:position pos:line="30" pos:column="20"/></name></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <call><name pos:line="30" pos:column="23">smb_swap16<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><literal type="number" pos:line="30" pos:column="34">1<pos:position pos:line="30" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">msg<pos:position pos:line="31" pos:column="6"/></name><operator pos:line="31" pos:column="6">.<pos:position pos:line="31" pos:column="7"/></operator><name pos:line="31" pos:column="7">vc_number<pos:position pos:line="31" pos:column="16"/></name></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <call><name pos:line="31" pos:column="19">smb_swap16<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><literal type="number" pos:line="31" pos:column="30">1<pos:position pos:line="31" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">msg<pos:position pos:line="32" pos:column="6"/></name><operator pos:line="32" pos:column="6">.<pos:position pos:line="32" pos:column="7"/></operator><name pos:line="32" pos:column="7">session_key<pos:position pos:line="32" pos:column="18"/></name></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <call><name pos:line="32" pos:column="21">smb_swap32<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name><name pos:line="32" pos:column="32">smbc<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">session_key<pos:position pos:line="32" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">msg<pos:position pos:line="33" pos:column="6"/></name><operator pos:line="33" pos:column="6">.<pos:position pos:line="33" pos:column="7"/></operator><name pos:line="33" pos:column="7">capabilities<pos:position pos:line="33" pos:column="19"/></name></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <call><name pos:line="33" pos:column="22">smb_swap32<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">SMB_CAP_LARGE_FILES<pos:position pos:line="33" pos:column="52"/></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="34" pos:column="3">msg<pos:position pos:line="34" pos:column="6"/></name><operator pos:line="34" pos:column="6">.<pos:position pos:line="34" pos:column="7"/></operator><name pos:line="34" pos:column="7">lengths<pos:position pos:line="34" pos:column="14"/></name><index pos:line="34" pos:column="14">[<expr><literal type="number" pos:line="34" pos:column="15">0<pos:position pos:line="34" pos:column="16"/></literal></expr>]<pos:position pos:line="34" pos:column="17"/></index></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <call><name pos:line="34" pos:column="20">smb_swap16<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><sizeof pos:line="34" pos:column="31">sizeof<argument_list pos:line="34" pos:column="37">(<argument><expr><name pos:line="34" pos:column="38">lm<pos:position pos:line="34" pos:column="40"/></name></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">msg<pos:position pos:line="35" pos:column="6"/></name><operator pos:line="35" pos:column="6">.<pos:position pos:line="35" pos:column="7"/></operator><name pos:line="35" pos:column="7">lengths<pos:position pos:line="35" pos:column="14"/></name><index pos:line="35" pos:column="14">[<expr><literal type="number" pos:line="35" pos:column="15">1<pos:position pos:line="35" pos:column="16"/></literal></expr>]<pos:position pos:line="35" pos:column="17"/></index></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <call><name pos:line="35" pos:column="20">smb_swap16<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><sizeof pos:line="35" pos:column="31">sizeof<argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">nt<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">memcpy<pos:position pos:line="36" pos:column="9"/></name><argument_list pos:line="36" pos:column="9">(<argument><expr><name pos:line="36" pos:column="10">p<pos:position pos:line="36" pos:column="11"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="13">lm<pos:position pos:line="36" pos:column="15"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="17">sizeof<argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">lm<pos:position pos:line="36" pos:column="26"/></name></expr></argument>)<pos:position pos:line="36" pos:column="27"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="37" pos:column="3">p<pos:position pos:line="37" pos:column="4"/></name> <operator pos:line="37" pos:column="5">+=<pos:position pos:line="37" pos:column="7"/></operator> <sizeof pos:line="37" pos:column="8">sizeof<argument_list pos:line="37" pos:column="14">(<argument><expr><name pos:line="37" pos:column="15">lm<pos:position pos:line="37" pos:column="17"/></name></expr></argument>)<pos:position pos:line="37" pos:column="18"/></argument_list></sizeof></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">memcpy<pos:position pos:line="38" pos:column="9"/></name><argument_list pos:line="38" pos:column="9">(<argument><expr><name pos:line="38" pos:column="10">p<pos:position pos:line="38" pos:column="11"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="13">nt<pos:position pos:line="38" pos:column="15"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="17">sizeof<argument_list pos:line="38" pos:column="23">(<argument><expr><name pos:line="38" pos:column="24">nt<pos:position pos:line="38" pos:column="26"/></name></expr></argument>)<pos:position pos:line="38" pos:column="27"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="39" pos:column="3">p<pos:position pos:line="39" pos:column="4"/></name> <operator pos:line="39" pos:column="5">+=<pos:position pos:line="39" pos:column="7"/></operator> <sizeof pos:line="39" pos:column="8">sizeof<argument_list pos:line="39" pos:column="14">(<argument><expr><name pos:line="39" pos:column="15">nt<pos:position pos:line="39" pos:column="17"/></name></expr></argument>)<pos:position pos:line="39" pos:column="18"/></argument_list></sizeof></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">MSGCATNULL<pos:position pos:line="40" pos:column="13"/></name><argument_list pos:line="40" pos:column="13">(<argument><expr><name><name pos:line="40" pos:column="14">smbc<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">-&gt;<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="20">user<pos:position pos:line="40" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">MSGCATNULL<pos:position pos:line="41" pos:column="13"/></name><argument_list pos:line="41" pos:column="13">(<argument><expr><name><name pos:line="41" pos:column="14">smbc<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">-&gt;<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="20">domain<pos:position pos:line="41" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">MSGCATNULL<pos:position pos:line="42" pos:column="13"/></name><argument_list pos:line="42" pos:column="13">(<argument><expr><name pos:line="42" pos:column="14">OS<pos:position pos:line="42" pos:column="16"/></name></expr></argument>)<pos:position pos:line="42" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">MSGCATNULL<pos:position pos:line="43" pos:column="13"/></name><argument_list pos:line="43" pos:column="13">(<argument><expr><name pos:line="43" pos:column="14">CLIENTNAME<pos:position pos:line="43" pos:column="24"/></name></expr></argument>)<pos:position pos:line="43" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="44" pos:column="3">byte_count<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <name pos:line="44" pos:column="16">p<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">-<pos:position pos:line="44" pos:column="19"/></operator> <name><name pos:line="44" pos:column="20">msg<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">.<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="24">bytes<pos:position pos:line="44" pos:column="29"/></name></name></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="45" pos:column="3">msg<pos:position pos:line="45" pos:column="6"/></name><operator pos:line="45" pos:column="6">.<pos:position pos:line="45" pos:column="7"/></operator><name pos:line="45" pos:column="7">byte_count<pos:position pos:line="45" pos:column="17"/></name></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <call><name pos:line="45" pos:column="20">smb_swap16<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><operator pos:line="45" pos:column="31">(<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="32">unsigned<pos:position pos:line="45" pos:column="40"/></name> <name pos:line="45" pos:column="41">short<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">)<pos:position pos:line="45" pos:column="47"/></operator><name pos:line="45" pos:column="47">byte_count<pos:position pos:line="45" pos:column="57"/></name></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="59"/></expr_stmt>

  <return pos:line="47" pos:column="3">return <expr><call><name pos:line="47" pos:column="10">smb_send_message<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><name pos:line="47" pos:column="27">conn<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="33">SMB_COM_SETUP_ANDX<pos:position pos:line="47" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="53">&amp;<pos:position pos:line="47" pos:column="58"/></operator><name pos:line="47" pos:column="54">msg<pos:position pos:line="47" pos:column="57"/></name></expr></argument>,
                          <argument><expr><sizeof pos:line="48" pos:column="27">sizeof<argument_list pos:line="48" pos:column="33">(<argument><expr><name pos:line="48" pos:column="34">msg<pos:position pos:line="48" pos:column="37"/></name></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></sizeof> <operator pos:line="48" pos:column="39">-<pos:position pos:line="48" pos:column="40"/></operator> <sizeof pos:line="48" pos:column="41">sizeof<argument_list pos:line="48" pos:column="47">(<argument><expr><name><name pos:line="48" pos:column="48">msg<pos:position pos:line="48" pos:column="51"/></name><operator pos:line="48" pos:column="51">.<pos:position pos:line="48" pos:column="52"/></operator><name pos:line="48" pos:column="52">bytes<pos:position pos:line="48" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="58"/></argument_list></sizeof> <operator pos:line="48" pos:column="59">+<pos:position pos:line="48" pos:column="60"/></operator> <name pos:line="48" pos:column="61">byte_count<pos:position pos:line="48" pos:column="71"/></name></expr></argument>)<pos:position pos:line="48" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="73"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

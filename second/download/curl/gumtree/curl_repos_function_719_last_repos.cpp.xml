<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_719_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_ahead<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">testcase<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">test<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="2" pos:column="24">int<pos:position pos:line="2" pos:column="27"/></name></type> <name pos:line="2" pos:column="28">convert<pos:position pos:line="2" pos:column="35"/></name></decl></parameter> <comment type="block" pos:line="2" pos:column="36">/* if true, convert to ascii */</comment>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">c<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">bf<pos:position pos:line="7" pos:column="12"/></name></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">b<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">tftphdr<pos:position pos:line="8" pos:column="17"/></name></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">dp<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">b<pos:position pos:line="10" pos:column="4"/></name> <operator pos:line="10" pos:column="5">=<pos:position pos:line="10" pos:column="6"/></operator> <operator pos:line="10" pos:column="7">&amp;<pos:position pos:line="10" pos:column="12"/></operator><name><name pos:line="10" pos:column="8">bfs<pos:position pos:line="10" pos:column="11"/></name><index pos:line="10" pos:column="11">[<expr><name pos:line="10" pos:column="12">nextone<pos:position pos:line="10" pos:column="19"/></name></expr>]<pos:position pos:line="10" pos:column="20"/></index></name></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>              <comment type="block" pos:line="10" pos:column="35">/* look at "next" buffer */</comment>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name><name pos:line="11" pos:column="6">b<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">-&gt;<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="9">counter<pos:position pos:line="11" pos:column="16"/></name></name> <operator pos:line="11" pos:column="17">!=<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">BF_FREE<pos:position pos:line="11" pos:column="27"/></name></expr>)<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28">      <comment type="block" pos:line="11" pos:column="34">/* nop if not free */</comment>
    <block type="pseudo"><return pos:line="12" pos:column="5">return;<pos:position pos:line="12" pos:column="12"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="13" pos:column="3">nextone<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">nextone<pos:position pos:line="13" pos:column="21"/></name></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>             <comment type="block" pos:line="13" pos:column="35">/* "incr" next buffer ptr */</comment>

  <expr_stmt><expr><name pos:line="15" pos:column="3">dp<pos:position pos:line="15" pos:column="5"/></name> <operator pos:line="15" pos:column="6">=<pos:position pos:line="15" pos:column="7"/></operator> <operator pos:line="15" pos:column="8">&amp;<pos:position pos:line="15" pos:column="13"/></operator><name><name pos:line="15" pos:column="9">b<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">buf<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">hdr<pos:position pos:line="15" pos:column="19"/></name></name></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name pos:line="17" pos:column="6">convert<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">==<pos:position pos:line="17" pos:column="16"/></operator> <literal type="number" pos:line="17" pos:column="17">0<pos:position pos:line="17" pos:column="18"/></literal></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19"> <block pos:line="17" pos:column="20">{
    <comment type="block" pos:line="18" pos:column="5">/* The former file reading code did this:
       b-&gt;counter = read(fileno(file), dp-&gt;th_data, SEGSIZE); */</comment>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">size_t<pos:position pos:line="20" pos:column="11"/></name></type> <name pos:line="20" pos:column="12">copy_n<pos:position pos:line="20" pos:column="18"/></name> <init pos:line="20" pos:column="19">= <expr><call><name pos:line="20" pos:column="21">MIN<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">SEGSIZE<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="34">test<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">-&gt;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="40">rcount<pos:position pos:line="20" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="48"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">memcpy<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><name><name pos:line="21" pos:column="12">dp<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">th_data<pos:position pos:line="21" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="25">test<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">rptr<pos:position pos:line="21" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">copy_n<pos:position pos:line="21" pos:column="43"/></name></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* decrease amount, advance pointer */</comment>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">test<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">-&gt;<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="11">rcount<pos:position pos:line="24" pos:column="17"/></name></name> <operator pos:line="24" pos:column="18">-=<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">copy_n<pos:position pos:line="24" pos:column="27"/></name></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">test<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">rptr<pos:position pos:line="25" pos:column="15"/></name></name> <operator pos:line="25" pos:column="16">+=<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">copy_n<pos:position pos:line="25" pos:column="25"/></name></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">b<pos:position pos:line="26" pos:column="6"/></name><operator pos:line="26" pos:column="6">-&gt;<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="8">counter<pos:position pos:line="26" pos:column="15"/></name></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <operator pos:line="26" pos:column="18">(<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">int<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">)<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">copy_n<pos:position pos:line="26" pos:column="29"/></name></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
    <return pos:line="27" pos:column="5">return;<pos:position pos:line="27" pos:column="12"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="30" pos:column="3">p<pos:position pos:line="30" pos:column="4"/></name> <operator pos:line="30" pos:column="5">=<pos:position pos:line="30" pos:column="6"/></operator> <name><name pos:line="30" pos:column="7">dp<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">-&gt;<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="11">th_data<pos:position pos:line="30" pos:column="18"/></name></name></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt>
  <for pos:line="31" pos:column="3">for<control pos:line="31" pos:column="6">(<init><expr><name pos:line="31" pos:column="7">i<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">=<pos:position pos:line="31" pos:column="10"/></operator> <literal type="number" pos:line="31" pos:column="11">0<pos:position pos:line="31" pos:column="12"/></literal></expr> ;<pos:position pos:line="31" pos:column="14"/></init> <condition><expr><name pos:line="31" pos:column="15">i<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">&lt;<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="19">SEGSIZE<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></condition> <incr><expr><name pos:line="31" pos:column="28">i<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">++<pos:position pos:line="31" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="32"/></control> <block pos:line="31" pos:column="33">{
    <if pos:line="32" pos:column="5">if<condition pos:line="32" pos:column="7">(<expr><name pos:line="32" pos:column="8">newline<pos:position pos:line="32" pos:column="15"/></name></expr>)<pos:position pos:line="32" pos:column="16"/></condition><then pos:line="32" pos:column="16"> <block pos:line="32" pos:column="17">{
      <if pos:line="33" pos:column="7">if<condition pos:line="33" pos:column="9">(<expr><name pos:line="33" pos:column="10">prevchar<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">==<pos:position pos:line="33" pos:column="21"/></operator> <literal type="char" pos:line="33" pos:column="22">'\n'<pos:position pos:line="33" pos:column="26"/></literal></expr>)<pos:position pos:line="33" pos:column="27"/></condition><then pos:line="33" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="9">c<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <literal type="char" pos:line="34" pos:column="13">'\n'<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></expr_stmt></block></then>       <comment type="block" pos:line="34" pos:column="25">/* lf to cr,lf */</comment>
      <else pos:line="35" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="9">c<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <literal type="char" pos:line="36" pos:column="13">'\0'<pos:position pos:line="36" pos:column="17"/></literal></expr>;<pos:position pos:line="36" pos:column="18"/></expr_stmt></block></else></if>       <comment type="block" pos:line="36" pos:column="25">/* cr to cr,nul */</comment>
      <expr_stmt><expr><name pos:line="37" pos:column="7">newline<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <literal type="number" pos:line="37" pos:column="17">0<pos:position pos:line="37" pos:column="18"/></literal></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then>
    <else pos:line="39" pos:column="5">else <block pos:line="39" pos:column="10">{
      <if pos:line="40" pos:column="7">if<condition pos:line="40" pos:column="9">(<expr><name><name pos:line="40" pos:column="10">test<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">-&gt;<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="16">rcount<pos:position pos:line="40" pos:column="22"/></name></name></expr>)<pos:position pos:line="40" pos:column="23"/></condition><then pos:line="40" pos:column="23"> <block pos:line="40" pos:column="24">{
        <expr_stmt><expr><name pos:line="41" pos:column="9">c<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">=<pos:position pos:line="41" pos:column="12"/></operator> <name><name pos:line="41" pos:column="13">test<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">-&gt;<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="19">rptr<pos:position pos:line="41" pos:column="23"/></name><index pos:line="41" pos:column="23">[<expr><literal type="number" pos:line="41" pos:column="24">0<pos:position pos:line="41" pos:column="25"/></literal></expr>]<pos:position pos:line="41" pos:column="26"/></index></name></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">test<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">-&gt;<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="15">rptr<pos:position pos:line="42" pos:column="19"/></name></name><operator pos:line="42" pos:column="19">++<pos:position pos:line="42" pos:column="21"/></operator></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">test<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">rcount<pos:position pos:line="43" pos:column="21"/></name></name><operator pos:line="43" pos:column="21">--<pos:position pos:line="43" pos:column="23"/></operator></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="44" pos:column="8"/></block></then>
      <else pos:line="45" pos:column="7">else
        <block type="pseudo"><break pos:line="46" pos:column="9">break;<pos:position pos:line="46" pos:column="15"/></break></block></else></if>
      <if pos:line="47" pos:column="7">if<condition pos:line="47" pos:column="9">(<expr><name pos:line="47" pos:column="10">c<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">==<pos:position pos:line="47" pos:column="14"/></operator> <literal type="char" pos:line="47" pos:column="15">'\n'<pos:position pos:line="47" pos:column="19"/></literal> <operator pos:line="47" pos:column="20">||<pos:position pos:line="47" pos:column="22"/></operator> <name pos:line="47" pos:column="23">c<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">==<pos:position pos:line="47" pos:column="27"/></operator> <literal type="char" pos:line="47" pos:column="28">'\r'<pos:position pos:line="47" pos:column="32"/></literal></expr>)<pos:position pos:line="47" pos:column="33"/></condition><then pos:line="47" pos:column="33"> <block pos:line="47" pos:column="34">{
        <expr_stmt><expr><name pos:line="48" pos:column="9">prevchar<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <name pos:line="48" pos:column="20">c<pos:position pos:line="48" pos:column="21"/></name></expr>;<pos:position pos:line="48" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">c<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">=<pos:position pos:line="49" pos:column="12"/></operator> <literal type="char" pos:line="49" pos:column="13">'\r'<pos:position pos:line="49" pos:column="17"/></literal></expr>;<pos:position pos:line="49" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="50" pos:column="9">newline<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <literal type="number" pos:line="50" pos:column="19">1<pos:position pos:line="50" pos:column="20"/></literal></expr>;<pos:position pos:line="50" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="51" pos:column="8"/></block></then></if>
    }<pos:position pos:line="52" pos:column="6"/></block></else></if>
    <expr_stmt><expr><operator pos:line="53" pos:column="5">*<pos:position pos:line="53" pos:column="6"/></operator><name pos:line="53" pos:column="6">p<pos:position pos:line="53" pos:column="7"/></name><operator pos:line="53" pos:column="7">++<pos:position pos:line="53" pos:column="9"/></operator> <operator pos:line="53" pos:column="10">=<pos:position pos:line="53" pos:column="11"/></operator> <operator pos:line="53" pos:column="12">(<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="13">char<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">)<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="18">c<pos:position pos:line="53" pos:column="19"/></name></expr>;<pos:position pos:line="53" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="54" pos:column="4"/></block></for>
  <expr_stmt><expr><name><name pos:line="55" pos:column="3">b<pos:position pos:line="55" pos:column="4"/></name><operator pos:line="55" pos:column="4">-&gt;<pos:position pos:line="55" pos:column="9"/></operator><name pos:line="55" pos:column="6">counter<pos:position pos:line="55" pos:column="13"/></name></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <call pos:line="55" pos:column="16">(<name pos:line="55" pos:column="17">int<pos:position pos:line="55" pos:column="20"/></name>)<argument_list pos:line="55" pos:column="21">(<argument><expr><name pos:line="55" pos:column="22">p<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">-<pos:position pos:line="55" pos:column="25"/></operator> <name><name pos:line="55" pos:column="26">dp<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">-&gt;<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="30">th_data<pos:position pos:line="55" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="39"/></expr_stmt>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

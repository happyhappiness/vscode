<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_383_curl-7.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">MD5_Update<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">md5_ctx<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">context<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,    <comment type="block" pos:line="1" pos:column="53">/* context */</comment>
                        <parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">unsigned<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">input<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="53">/* input block */</comment>
                        <parameter><decl><type><name pos:line="3" pos:column="25">unsigned<pos:position pos:line="3" pos:column="33"/></name> <name pos:line="3" pos:column="34">int<pos:position pos:line="3" pos:column="37"/></name></type> <name pos:line="3" pos:column="38">inputLen<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="47"/></parameter_list>      <comment type="block" pos:line="3" pos:column="53">/* length of input block */</comment>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">int<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">i<pos:position pos:line="5" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="19">bufindex<pos:position pos:line="5" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="29">partLen<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Compute number of bytes mod 64 */</comment>
  <expr_stmt><expr><name pos:line="8" pos:column="3">bufindex<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call pos:line="8" pos:column="14">(<name pos:line="8" pos:column="15">unsigned<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">int<pos:position pos:line="8" pos:column="27"/></name>)<argument_list pos:line="8" pos:column="28">(<argument><expr><operator pos:line="8" pos:column="29">(<pos:position pos:line="8" pos:column="30"/></operator><name><name pos:line="8" pos:column="30">context<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">count<pos:position pos:line="8" pos:column="44"/></name><index pos:line="8" pos:column="44">[<expr><literal type="number" pos:line="8" pos:column="45">0<pos:position pos:line="8" pos:column="46"/></literal></expr>]<pos:position pos:line="8" pos:column="47"/></index></name> <operator pos:line="8" pos:column="48">&gt;&gt;<pos:position pos:line="8" pos:column="53"/></operator> <literal type="number" pos:line="8" pos:column="51">3<pos:position pos:line="8" pos:column="52"/></literal><operator pos:line="8" pos:column="52">)<pos:position pos:line="8" pos:column="53"/></operator> <operator pos:line="8" pos:column="54">&amp;<pos:position pos:line="8" pos:column="59"/></operator> <literal type="number" pos:line="8" pos:column="56">0x3F<pos:position pos:line="8" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Update number of bits */</comment>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">(<pos:position pos:line="11" pos:column="8"/></operator><name><name pos:line="11" pos:column="8">context<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">count<pos:position pos:line="11" pos:column="22"/></name><index pos:line="11" pos:column="22">[<expr><literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr>]<pos:position pos:line="11" pos:column="25"/></index></name> <operator pos:line="11" pos:column="26">+=<pos:position pos:line="11" pos:column="28"/></operator> <operator pos:line="11" pos:column="29">(<pos:position pos:line="11" pos:column="30"/></operator><operator pos:line="11" pos:column="30">(<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="31">UINT4<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">)<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">inputLen<pos:position pos:line="11" pos:column="45"/></name> <operator pos:line="11" pos:column="46">&lt;&lt;<pos:position pos:line="11" pos:column="54"/></operator> <literal type="number" pos:line="11" pos:column="49">3<pos:position pos:line="11" pos:column="50"/></literal><operator pos:line="11" pos:column="50">)<pos:position pos:line="11" pos:column="51"/></operator><operator pos:line="11" pos:column="51">)<pos:position pos:line="11" pos:column="52"/></operator>
      <operator pos:line="12" pos:column="7">&lt;<pos:position pos:line="12" pos:column="11"/></operator> <operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">UINT4<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">)<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">inputLen<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">&lt;&lt;<pos:position pos:line="12" pos:column="34"/></operator> <literal type="number" pos:line="12" pos:column="29">3<pos:position pos:line="12" pos:column="30"/></literal><operator pos:line="12" pos:column="30">)<pos:position pos:line="12" pos:column="31"/></operator></expr>)<pos:position pos:line="12" pos:column="32"/></condition><then pos:line="12" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="5">context<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">count<pos:position pos:line="13" pos:column="19"/></name><index pos:line="13" pos:column="19">[<expr><literal type="number" pos:line="13" pos:column="20">1<pos:position pos:line="13" pos:column="21"/></literal></expr>]<pos:position pos:line="13" pos:column="22"/></index></name><operator pos:line="13" pos:column="22">++<pos:position pos:line="13" pos:column="24"/></operator></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">context<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">count<pos:position pos:line="14" pos:column="17"/></name><index pos:line="14" pos:column="17">[<expr><literal type="number" pos:line="14" pos:column="18">1<pos:position pos:line="14" pos:column="19"/></literal></expr>]<pos:position pos:line="14" pos:column="20"/></index></name> <operator pos:line="14" pos:column="21">+=<pos:position pos:line="14" pos:column="23"/></operator> <operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">(<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">UINT4<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">)<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="32">inputLen<pos:position pos:line="14" pos:column="40"/></name> <operator pos:line="14" pos:column="41">&gt;&gt;<pos:position pos:line="14" pos:column="46"/></operator> <literal type="number" pos:line="14" pos:column="44">29<pos:position pos:line="14" pos:column="46"/></literal><operator pos:line="14" pos:column="46">)<pos:position pos:line="14" pos:column="47"/></operator></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
  
  <expr_stmt><expr><name pos:line="16" pos:column="3">partLen<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <literal type="number" pos:line="16" pos:column="13">64<pos:position pos:line="16" pos:column="15"/></literal> <operator pos:line="16" pos:column="16">-<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="18">bufindex<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>

  <comment type="block" pos:line="18" pos:column="3">/* Transform as many times as possible. */</comment>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">inputLen<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">&gt;=<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="19">partLen<pos:position pos:line="19" pos:column="26"/></name></expr>)<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27"> <block pos:line="19" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">memcpy<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">void<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">*<pos:position pos:line="20" pos:column="19"/></operator><operator pos:line="20" pos:column="19">)<pos:position pos:line="20" pos:column="20"/></operator><operator pos:line="20" pos:column="20">&amp;<pos:position pos:line="20" pos:column="25"/></operator><name><name pos:line="20" pos:column="21">context<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">buffer<pos:position pos:line="20" pos:column="36"/></name><index pos:line="20" pos:column="36">[<expr><name pos:line="20" pos:column="37">bufindex<pos:position pos:line="20" pos:column="45"/></name></expr>]<pos:position pos:line="20" pos:column="46"/></index></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="48">(<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="49">void<pos:position pos:line="20" pos:column="53"/></name> <operator pos:line="20" pos:column="54">*<pos:position pos:line="20" pos:column="55"/></operator><operator pos:line="20" pos:column="55">)<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="56">input<pos:position pos:line="20" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="63">partLen<pos:position pos:line="20" pos:column="70"/></name></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">MD5Transform<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><name><name pos:line="21" pos:column="18">context<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">state<pos:position pos:line="21" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="34">context<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">-&gt;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="43">buffer<pos:position pos:line="21" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt>
    
    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init><expr><name pos:line="23" pos:column="10">i<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <name pos:line="23" pos:column="14">partLen<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></init> <condition><expr><name pos:line="23" pos:column="23">i<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">+<pos:position pos:line="23" pos:column="26"/></operator> <literal type="number" pos:line="23" pos:column="27">63<pos:position pos:line="23" pos:column="29"/></literal> <operator pos:line="23" pos:column="30">&lt;<pos:position pos:line="23" pos:column="34"/></operator> <name pos:line="23" pos:column="32">inputLen<pos:position pos:line="23" pos:column="40"/></name></expr>;<pos:position pos:line="23" pos:column="41"/></condition> <incr><expr><name pos:line="23" pos:column="42">i<pos:position pos:line="23" pos:column="43"/></name> <operator pos:line="23" pos:column="44">+=<pos:position pos:line="23" pos:column="46"/></operator> <literal type="number" pos:line="23" pos:column="47">64<pos:position pos:line="23" pos:column="49"/></literal></expr></incr>)<pos:position pos:line="23" pos:column="50"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="7">MD5Transform<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name><name pos:line="24" pos:column="20">context<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">state<pos:position pos:line="24" pos:column="34"/></name></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="36">&amp;<pos:position pos:line="24" pos:column="41"/></operator><name><name pos:line="24" pos:column="37">input<pos:position pos:line="24" pos:column="42"/></name><index pos:line="24" pos:column="42">[<expr><name pos:line="24" pos:column="43">i<pos:position pos:line="24" pos:column="44"/></name></expr>]<pos:position pos:line="24" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt></block></for>
    
    <expr_stmt><expr><name pos:line="26" pos:column="5">bufindex<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></then>
  <else pos:line="28" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="5">i<pos:position pos:line="29" pos:column="6"/></name> <operator pos:line="29" pos:column="7">=<pos:position pos:line="29" pos:column="8"/></operator> <literal type="number" pos:line="29" pos:column="9">0<pos:position pos:line="29" pos:column="10"/></literal></expr>;<pos:position pos:line="29" pos:column="11"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="31" pos:column="3">/* Buffer remaining input */</comment>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">memcpy<pos:position pos:line="32" pos:column="9"/></name><argument_list pos:line="32" pos:column="9">(<argument><expr><operator pos:line="32" pos:column="10">(<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="11">void<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">*<pos:position pos:line="32" pos:column="17"/></operator><operator pos:line="32" pos:column="17">)<pos:position pos:line="32" pos:column="18"/></operator><operator pos:line="32" pos:column="18">&amp;<pos:position pos:line="32" pos:column="23"/></operator><name><name pos:line="32" pos:column="19">context<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">-&gt;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="28">buffer<pos:position pos:line="32" pos:column="34"/></name><index pos:line="32" pos:column="34">[<expr><name pos:line="32" pos:column="35">bufindex<pos:position pos:line="32" pos:column="43"/></name></expr>]<pos:position pos:line="32" pos:column="44"/></index></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="46">(<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="47">void<pos:position pos:line="32" pos:column="51"/></name> <operator pos:line="32" pos:column="52">*<pos:position pos:line="32" pos:column="53"/></operator><operator pos:line="32" pos:column="53">)<pos:position pos:line="32" pos:column="54"/></operator><operator pos:line="32" pos:column="54">&amp;<pos:position pos:line="32" pos:column="59"/></operator><name><name pos:line="32" pos:column="55">input<pos:position pos:line="32" pos:column="60"/></name><index pos:line="32" pos:column="60">[<expr><name pos:line="32" pos:column="61">i<pos:position pos:line="32" pos:column="62"/></name></expr>]<pos:position pos:line="32" pos:column="63"/></index></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="65">inputLen<pos:position pos:line="32" pos:column="73"/></name><operator pos:line="32" pos:column="73">-<pos:position pos:line="32" pos:column="74"/></operator><name pos:line="32" pos:column="74">i<pos:position pos:line="32" pos:column="75"/></name></expr></argument>)<pos:position pos:line="32" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="77"/></expr_stmt>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

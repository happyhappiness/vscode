"              # and fetch another URL too\n"
"              url = \"example.com/docs/manpage.html\"\n"
"              -O\n"
"              referer = \"http://nowhereatall.example.com/\"\n"
"              # --- End of example file ---\n"
"\n"
"              This option can be used multiple times to load  multiple  config\n"
, stdout);
 fputs(
"              files.\n"
"\n"
"       --keepalive-time <seconds>\n"
"              This  option  sets  the  time  a connection needs to remain idle\n"
"              before sending keepalive probes and the time between  individual\n"
"              keepalive probes. It is currently effective on operating systems\n"
"              offering  the  TCP_KEEPIDLE  and  TCP_KEEPINTVL  socket  options\n"
"              (meaning  Linux, recent AIX, HP-UX and more). This option has no\n"
, stdout);
 fputs(
"              effect if --no-keepalive is used. (Added in 7.18.0)\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"              If unspecified, the option defaults to 60 seconds.\n"
"\n"
"       --key <key>\n"
"              (SSL/SSH) Private key file name. Allows you to provide your pri-\n"
"              vate key in this separate file. For SSH, if not specified,  curl\n"
"              tries   the  following  candidates  in  order:  '~/.ssh/id_rsa',\n"
, stdout);
 fputs(
"              '~/.ssh/id_dsa', './id_rsa', './id_dsa'.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --key-type <type>\n"
"              (SSL) Private key file type. Specify which type your --key  pro-\n"
"              vided  private  key  is. DER, PEM, and ENG are supported. If not\n"
"              specified, PEM is assumed.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --krb <level>\n"
, stdout);
 fputs(
"              (FTP) Enable Kerberos authentication and use. The level must  be\n"
"              entered and should be one of 'clear', 'safe', 'confidential', or\n"
"              'private'. Should you use a level that  is  not  one  of  these,\n"
"              'private' will instead be used.\n"
"\n"
"              This  option  requires  a  library built with kerberos4 support.\n"
"              This is not very common. Use -V, --version to see if  your  curl\n"
"              supports it.\n"
"\n"
, stdout);
 fputs(
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --krb4 <level>\n"
"              (FTP) This is the former name for --krb. Do not use.\n"
"\n"
"       -l, --list-only\n"
"              (FTP)  When listing an FTP directory, this switch forces a name-\n"
"              only view. This is  especially  useful  if  the  user  wants  to\n"
"              machine-parse  the contents of an FTP directory since the normal\n"
, stdout);
 fputs(
"              directory view doesn't use a standard look or format. When  used\n"
"              like  this,  the  option causes a NLST command to be sent to the\n"
"              server instead of LIST.\n"
"\n"
"              Note: Some FTP servers list only  files  in  their  response  to\n"
"              NLST; they do not include sub-directories and symbolic links.\n"
"\n"
"              (POP3)  When  retrieving a specific email from POP3, this switch\n"
, stdout);
 fputs(
"              forces a LIST command to be performed instead of RETR.  This  is\n"
"              particularly  useful if the user wants to see if a specific mes-\n"
"              sage id exists on the server and what size it is.\n"
"\n"
"              Note: When combined with -X, --request  <command>,  this  option\n"
"              can be used to send an UIDL command instead, so the user may use\n"
"              the email's unique identifier rather than  it's  message  id  to\n"
, stdout);
 fputs(
"              make the request. (Added in 7.21.5)\n"
"\n"
"       -L, --location\n"
"              (HTTP/HTTPS)  If  the server reports that the requested page has\n"
"              moved to a different location (indicated with a Location: header\n"
"              and  a  3XX  response code), this option will make curl redo the\n"
"              request on the new place. If used together with -i, --include or\n"
"              -I, --head, headers from all requested pages will be shown. When\n"
, stdout);
 fputs(
"              authentication is used, curl only sends its credentials  to  the\n"
"              initial  host.  If a redirect takes curl to a different host, it\n"
"              won't be able to intercept the user+password. See  also  --loca-\n"
"              tion-trusted  on how to change this. You can limit the amount of\n"
"              redirects to follow by using the --max-redirs option.\n"
"\n"
"              When curl follows a redirect and the request is not a plain  GET\n"
, stdout);
 fputs(
"              (for example POST or PUT), it will do the following request with\n"
"              a GET if the HTTP response was 301, 302, or 303. If the response\n"
"              code  was  any  other  3xx code, curl will re-send the following\n"
"              request using the same unmodified method.\n"
"\n"
"              You can tell curl to not change the non-GET  request  method  to\n"
"              GET  after  a  30x  response  by using the dedicated options for\n"
, stdout);
 fputs(
"              that: --post301, --post302 and --post303.\n"
"\n"
"       --libcurl <file>\n"
"              Append this option to any ordinary curl command  line,  and  you\n"
"              will  get a libcurl-using C source code written to the file that\n"
"              does the equivalent of what your command-line operation does!\n"
"\n"
"              If this option is used several times, the last given  file  name\n"
"              will be used. (Added in 7.16.1)\n"
"\n"
"       --limit-rate <speed>\n"
, stdout);
 fputs(
"              Specify  the  maximum  transfer  rate you want curl to use - for\n"
"              both downloads and uploads. This feature is useful if you have a\n"
"              limited pipe and you'd like your transfer not to use your entire\n"
"              bandwidth. To make it slower than it otherwise would be.\n"
"\n"
"              The given speed is measured in bytes/second, unless a suffix  is\n"
"              appended.   Appending  'k' or 'K' will count the number as kilo-\n"
, stdout);
 fputs(
"              bytes, 'm' or M' makes it megabytes, while 'g' or 'G'  makes  it\n"
"              gigabytes. Examples: 200K, 3m and 1G.\n"
"\n"
"              If  you  also use the -Y, --speed-limit option, that option will\n"
"              take precedence and might cripple the rate-limiting slightly, to\n"
"              help keeping the speed-limit logic working.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --local-port <num>[-num]\n"
, stdout);
 fputs(
"              Set a preferred number or range of local port numbers to use for\n"
"              the connection(s).  Note that  port  numbers  by  nature  are  a\n"
"              scarce resource that will be busy at times so setting this range\n"
"              to something too narrow might cause unnecessary connection setup\n"
"              failures. (Added in 7.15.2)\n"
"\n"
"       --location-trusted\n"
"              (HTTP/HTTPS)  Like  -L,  --location,  but will allow sending the\n"
, stdout);
 fputs(
"              name + password to all hosts that the site may redirect to. This\n"
"              may or may not introduce a security breach if the site redirects\n"
"              you to a site to which  you'll  send  your  authentication  info\n"
"              (which is plaintext in the case of HTTP Basic authentication).\n"
"\n"
"       -m, --max-time <seconds>\n"
"              Maximum  time  in  seconds that you allow the whole operation to\n"
, stdout);
 fputs(
"              take.  This is useful for preventing your batch jobs from  hang-\n"
"              ing  for  hours due to slow networks or links going down.  Since\n"
"              7.32.0, this option accepts decimal values, but the actual time-\n"
"              out will decrease in accuracy as the specified timeout increases\n"
"              in decimal precision.  See also the --connect-timeout option.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
, stdout);
 fputs(
"       --login-options <options>\n"
"              Specify the login options to use during server authentication.\n"
"\n"
"              You can use the  login  options  to  specify  protocol  specific\n"
"              options  that may be used during authentication. At present only\n"
"              IMAP, POP3 and SMTP support login options. For more  information\n"
"              about  the  login options please see RFC 2384, RFC 5092 and IETF\n"
"              draft draft-earhart-url-smtp-00.txt (Added in 7.34.0).\n"
"\n"
, stdout);
 fputs(
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --mail-auth <address>\n"
"              (SMTP) Specify a single address. This will be  used  to  specify\n"
"              the  authentication  address  (identity)  of a submitted message\n"
"              that is being relayed to another server.\n"
"\n"
"              (Added in 7.25.0)\n"
"\n"
"       --mail-from <address>\n"
"              (SMTP) Specify a single address that the given mail  should  get\n"
"              sent from.\n"
"\n"
, stdout);
 fputs(
"              (Added in 7.20.0)\n"
"\n"
"       --max-filesize <bytes>\n"
"              Specify  the  maximum  size (in bytes) of a file to download. If\n"
"              the file requested is larger than this value, the transfer  will\n"
"              not start and curl will return with exit code 63.\n"
"\n"
"              NOTE:  The  file size is not always known prior to download, and\n"
"              for such files this option has no effect even if the file trans-\n"
, stdout);
 fputs(
"              fer  ends  up  being larger than this given limit. This concerns\n"
"              both FTP and HTTP transfers.\n"
"\n"
"       --mail-rcpt <address>\n"
"              (SMTP) Specify a single address, user name or mailing list name.\n"
"              Repeat this option several times to send to multiple recipients.\n"
"              When  performing a mail transfer, the recipient should specify a\n"
"              valid email address to send the mail to. (Added in 7.20.0)\n"
"\n"
, stdout);
 fputs(
"              When performing an  address  verification  (VRFY  command),  the\n"
"              recipient  should be specified as the user name or user name and\n"
"              domain (as per Section 3.5 of RFC5321). (Added in 7.34.0)\n"
"\n"
"              When performing a mailing list expand (EXPN command), the recip-\n"
"              ient  should  be  specified using the mailing list name, such as\n"
"              \"Friends\" or \"London-Office\".  (Added in 7.34.0)\n"
"\n"
"       --max-redirs <num>\n"
, stdout);
 fputs(
"              Set maximum number of  redirection-followings  allowed.  If  -L,\n"
"              --location is used, this option can be used to prevent curl from\n"
"              following redirections \"in absurdum\". By default, the  limit  is\n"
"              set  to 50 redirections. Set this option to -1 to make it limit-\n"
"              less.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --metalink\n"
, stdout);
 fputs(
"              This option can tell curl to parse and process a  given  URI  as\n"
"              Metalink  file  (both  version 3 and 4 (RFC 5854) are supported)\n"
"              and make use of the mirrors listed within for failover if  there\n"
"              are  errors (such as the file or server not being available). It\n"
"              will also verify the hash of the file after  the  download  com-\n"
"              pletes.  The Metalink file itself is downloaded and processed in\n"
, stdout);
 fputs(
"              memory and not stored in the local file system.\n"
"\n"
"              Example to use a remote Metalink file:\n"
"\n"
"              curl --metalink http://www.example.com/example.metalink\n"
"\n"
"              To use a Metalink file in the local file system, use FILE proto-\n"
"              col (file://):\n"
"\n"
"              curl --metalink file://example.metalink\n"
"\n"
"              Please  note  that if FILE protocol is disabled, there is no way\n"
, stdout);
 fputs(
"              to use a local Metalink file at the time of this  writing.  Also\n"
"              note  that  if  --metalink  and  --include  are  used  together,\n"
"              --include will be ignored. This is because including headers  in\n"
"              the  response  will break Metalink parser and if the headers are\n"
"              included in the file described in Metalink file, hash check will\n"
"              fail.\n"
"\n"
"              (Added in 7.27.0, if built against the libmetalink library.)\n"
"\n"
, stdout);
 fputs(
"       -n, --netrc\n"
"              Makes  curl  scan  the  .netrc  (_netrc  on Windows) file in the\n"
"              user's home directory for login name and password. This is typi-\n"
"              cally  used for FTP on Unix. If used with HTTP, curl will enable\n"
"              user authentication. See netrc(5) ftp(1) for details on the file\n"
"              format.  Curl  will  not  complain if that file doesn't have the\n"
"              right permissions (it should not be either world- or group-read-\n"
, stdout);
 fputs(
"              able).  The environment variable \"HOME\" is used to find the home\n"
"              directory.\n"
"\n"
"              A quick and very simple example of how  to  setup  a  .netrc  to\n"
"              allow  curl to FTP to the machine host.domain.com with user name\n"
"              'myself' and password 'secret' should look similar to:\n"
"\n"
"              machine host.domain.com login myself password secret\n"
"\n"
"       -N, --no-buffer\n"
, stdout);
 fputs(
"              Disables the buffering of the output stream. In normal work sit-\n"
"              uations,  curl  will  use a standard buffered output stream that\n"
"              will have the effect that it will output the data in chunks, not\n"
"              necessarily  exactly  when  the data arrives.  Using this option\n"
"              will disable that buffering.\n"
"\n"
"              Note that this is the negated option name  documented.  You  can\n"
"              thus use --buffer to enforce the buffering.\n"
"\n"
, stdout);
 fputs(
"       --netrc-file\n"
"              This  option  is similar to --netrc, except that you provide the\n"
"              path (absolute or relative) to the netrc file that  Curl  should\n"
"              use.   You  can  only  specify one netrc file per invocation. If\n"
"              several --netrc-file options are provided,  only  the  last  one\n"
"              will be used.  (Added in 7.21.5)\n"
"\n"
"              This  option  overrides  any use of --netrc as they are mutually\n"
, stdout);
 fputs(
"              exclusive.  It will also abide by --netrc-optional if specified.\n"
"\n"
"       --netrc-optional\n"
"              Very similar to --netrc, but this option makes the .netrc  usage\n"
"              optional and not mandatory as the --netrc option does.\n"
"\n"
"       --negotiate\n"
"              (HTTP) Enables Negotiate (SPNEGO) authentication.\n"
"\n"
"              If  you  want to enable Negotiate (SPNEGO) for proxy authentica-\n"
"              tion, then use --proxy-negotiate.\n"
"\n"
, stdout);
 fputs(
"              This option requires a library built with GSS-API or  SSPI  sup-\n"
"              port.  Use  -V,  --version  to  see  if  your curl supports GSS-\n"
"              API/SSPI and SPNEGO.\n"
"\n"
"              When using this option, you must also provide a fake -u,  --user\n"
"              option  to  activate the authentication code properly. Sending a\n"
"              '-u :' is enough as the user  name  and  password  from  the  -u\n"
"              option aren't actually used.\n"
"\n"
, stdout);
 fputs(
"              If  this  option  is  used  several times, only the first one is\n"
"              used.\n"
"\n"
"       --no-keepalive\n"
"              Disables the use of keepalive messages on the TCP connection, as\n"
"              by default curl enables them.\n"
"\n"
"              Note  that  this  is the negated option name documented. You can\n"
"              thus use --keepalive to enforce keepalive.\n"
"\n"
"       --no-sessionid\n"
"              (SSL) Disable curl's use of SSL session-ID caching.  By  default\n"
, stdout);
 fputs(
"              all  transfers are done using the cache. Note that while nothing\n"
"              should ever get hurt by attempting  to  reuse  SSL  session-IDs,\n"
"              there seem to be broken SSL implementations in the wild that may\n"
"              require you to disable this in order for you to succeed.  (Added\n"
"              in 7.16.0)\n"
"\n"
"              Note  that  this  is the negated option name documented. You can\n"
"              thus use --sessionid to enforce session-ID caching.\n"
"\n"
, stdout);
 fputs(
"       --noproxy <no-proxy-list>\n"
"              Comma-separated list of hosts which do not use a proxy,  if  one\n"
"              is  specified.  The only wildcard is a single * character, which\n"
"              matches all hosts, and effectively disables the proxy. Each name\n"
"              in  this  list  is matched as either a domain which contains the\n"
"              hostname, or the hostname itself. For example,  local.com  would\n"
, stdout);
 fputs(
"              match   local.com,  local.com:80,  and  www.local.com,  but  not\n"
"              www.notlocal.com.  (Added in 7.19.4).\n"
"\n"
"       --connect-to <host:port:connect-to-host:connect-to-port>\n"
"              For a request to the given \"host:port\" pair,  connect  to  \"con-\n"
"              nect-to-host:connect-to-port\"  instead.   This  is  suitable  to\n"
"              direct the request at a specific  server,  e.g.  at  a  specific\n"
, stdout);
 fputs(
"              cluster  node in a cluster of servers.  This option is only used\n"
"              to establish the network connection.  It  does  NOT  affect  the\n"
"              hostname/port  that  is  used for TLS/SSL (e.g. SNI, certificate\n"
"              verification) or for  the  application  protocols.   \"host\"  and\n"
"              \"port\"  may be the empty string, meaning \"any host/port\".  \"con-\n"
"              nect-to-host\"  and  \"connect-to-port\"  may  also  be  the  empty\n"
, stdout);
 fputs(
"              string,  meaning  \"use  the request's original host/port\".  This\n"
"              option can be used many times to add many connect rules.  (Added\n"
"              in 7.49.0).\n"
"\n"
"       --ntlm (HTTP)  Enables  NTLM  authentication.  The  NTLM authentication\n"
"              method was designed by Microsoft and is used by IIS web servers.\n"
"              It  is a proprietary protocol, reverse-engineered by clever peo-\n"
, stdout);
 fputs(
"              ple and implemented in curl based on their efforts. This kind of\n"
"              behavior  should  not be endorsed, you should encourage everyone\n"
"              who uses NTLM to switch to a public and  documented  authentica-\n"
"              tion method instead, such as Digest.\n"
"\n"
"              If  you  want to enable NTLM for your proxy authentication, then\n"
"              use --proxy-ntlm.\n"
"\n"
"              This option requires a library built with SSL support.  Use  -V,\n"
, stdout);
 fputs(
"              --version to see if your curl supports NTLM.\n"
"\n"
"              If  this  option  is  used  several times, only the first one is\n"
"              used.\n"
"\n"
"       --ntlm-wb\n"
"              (HTTP) Enables NTLM much in the style --ntlm does, but hand over\n"
"              the  authentication  to the separate binary ntlmauth application\n"
"              that is executed when needed.\n"
"\n"
"       -o, --output <file>\n"
"              Write output to <file> instead of stdout. If you are using {} or\n"
, stdout);
 fputs(
"              []  to  fetch  multiple documents, you can use '#' followed by a\n"
"              number in the <file> specifier. That variable will  be  replaced\n"
"              with the current string for the URL being fetched. Like in:\n"
"\n"
"                curl http://{one,two}.example.com -o \"file_#1.txt\"\n"
"\n"
"              or use several variables like:\n"
"\n"
"                curl http://{site,host}.host[1-5].com -o \"#1_#2\"\n"
"\n"
"              You  may use this option as many times as the number of URLs you\n"
, stdout);
 fputs(
"              have.\n"
"\n"
"              See also the --create-dirs option to create the  local  directo-\n"
"              ries  dynamically.  Specifying the output as '-' (a single dash)\n"
"              will force the output to be done to stdout.\n"
"\n"
"       -O, --remote-name\n"
"              Write output to a local file named like the remote file we  get.\n"
"              (Only  the file part of the remote file is used, the path is cut\n"
"              off.)\n"
"\n"
, stdout);
 fputs(
"              The file will be saved in the current working directory. If  you\n"
"              want  the  file  saved  in  a different directory, make sure you\n"
"              change the current working directory before invoking  curl  with\n"
"              this option.\n"
"\n"
"              The  remote  file  name  to use for saving is extracted from the\n"
"              given URL, nothing else, and if it already  exists  it  will  be\n"
, stdout);
 fputs(
"              overwritten.  If  you  want  the server to be able to choose the\n"
"              file name refer to -J, --remote-header-name which can be used in\n"
"              addition  to  this option. If the server chooses a file name and\n"
"              that name already exists it will not be overwritten.\n"
"\n"
"              There is no URL decoding done on the file name. If it has %20 or\n"
"              other  URL  encoded parts of the name, they will end up as-is as\n"
"              file name.\n"
"\n"
, stdout);
 fputs(
"              You may use this option as many times as the number of URLs  you\n"
"              have.\n"
"\n"
"       --oauth2-bearer\n"
"              (IMAP, POP3, SMTP) Specify the Bearer Token for OAUTH 2.0 server\n"
"              authentication. The Bearer Token is used in conjunction with the\n"
"              user  name  which  can  be specified as part of the --url or -u,\n"
"              --user options.\n"
"\n"
"              The Bearer Token and user name are formatted  according  to  RFC\n"
"              6750.\n"
"\n"
, stdout);
 fputs(
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --proxy-header <header>\n"
"              (HTTP)  Extra header to include in the request when sending HTTP\n"
"              to a proxy. You may specify any number of extra headers. This is\n"
"              the  equivalent option to -H, --header but is for proxy communi-\n"
"              cation only like in CONNECT requests when you  want  a  separate\n"
, stdout);
 fputs(
"              header  sent  to  the proxy to what is sent to the actual remote\n"
"              host.\n"
"\n"
"              curl will make sure that each header  you  add/replace  is  sent\n"
"              with the proper end-of-line marker, you should thus not add that\n"
"              as a part of the header content: do not add newlines or carriage\n"
"              returns, they will only mess things up for you.\n"
"\n"
"              Headers  specified  with  this  option  will  not be included in\n"
, stdout);
 fputs(
"              requests that curl knows will not be sent to a proxy.\n"
"\n"
"              This option can be used  multiple  times  to  add/replace/remove\n"
"              multiple headers.\n"
"              (Added in 7.37.0)\n"
"       -p, --proxytunnel\n"
"              When an HTTP proxy is used (-x, --proxy), this option will cause\n"
"              non-HTTP protocols  to  attempt  to  tunnel  through  the  proxy\n"
"              instead  of merely using it to do HTTP-like operations. The tun-\n"
, stdout);
 fputs(
"              nel approach is made with the HTTP  proxy  CONNECT  request  and\n"
"              requires that the proxy allows direct connect to the remote port\n"
"              number curl wants to tunnel through to.\n"
"\n"
"       -P, --ftp-port <address>\n"
"              (FTP) Reverses the default initiator/listener  roles  when  con-\n"
"              necting  with  FTP.  This  switch makes curl use active mode. In\n"
"              practice, curl then tells the server  to  connect  back  to  the\n"
, stdout);
 fputs(
"              client's specified address and port, while passive mode asks the\n"
"              server to setup an IP address and port for  it  to  connect  to.\n"
"              <address> should be one of:\n"
"\n"
"              interface\n"
"                     i.e  \"eth0\"  to  specify which interface's IP address you\n"
"                     want to use (Unix only)\n"
"\n"
"              IP address\n"
"                     i.e \"192.168.10.1\" to specify the exact IP address\n"
"\n"
"              host name\n"
, stdout);
 fputs(
"                     i.e \"my.host.domain\" to specify the machine\n"
"\n"
"              -      make curl pick the same IP address that is  already  used\n"
"                     for the control connection\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"              Disable the use of PORT with --ftp-pasv. Disable the attempt  to\n"
"              use  the  EPRT  command instead of PORT by using --disable-eprt.\n"
"              EPRT is really PORT++.\n"
"\n"
, stdout);
 fputs(
"              Starting in 7.19.5, you can append \":[start]-[end]\" to the right\n"
"              of  the  address,  to tell curl what TCP port range to use. That\n"
"              means you specify a port range, from a lower to a higher number.\n"
"              A single number works as well, but do note that it increases the\n"
"              risk of failure since the port may not be available.\n"
"\n"
"       --pass <phrase>\n"
"              (SSL/SSH) Passphrase for the private key\n"
"\n"
, stdout);
 fputs(
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --path-as-is\n"
"              Tell curl to not handle sequences of /../ or /./  in  the  given\n"
"              URL  path.  Normally curl will squash or merge them according to\n"
"              standards but with this option set you tell it not to do that.\n"
"\n"
"              (Added in 7.42.0)\n"
"\n"
"       --post301\n"
"              (HTTP) Tells curl to respect RFC 7230/6.4.2 and not convert POST\n"
, stdout);
 fputs(
"              requests into GET requests when following a 301 redirection. The\n"
"              non-RFC behaviour is ubiquitous in web browsers,  so  curl  does\n"
"              the  conversion  by  default to maintain consistency. However, a\n"
"              server may require a POST to remain a POST after  such  a  redi-\n"
"              rection.  This  option is meaningful only when using -L, --loca-\n"
"              tion (Added in 7.17.1)\n"
"\n"
"       --post302\n"
, stdout);
 fputs(
"              (HTTP) Tells curl to respect RFC 7230/6.4.3 and not convert POST\n"
"              requests into GET requests when following a 302 redirection. The\n"
"              non-RFC behaviour is ubiquitous in web browsers,  so  curl  does\n"
"              the  conversion  by  default to maintain consistency. However, a\n"
"              server may require a POST to remain a POST after  such  a  redi-\n"
"              rection.  This  option is meaningful only when using -L, --loca-\n"
, stdout);
 fputs(
"              tion (Added in 7.19.1)\n"
"\n"
"       --post303\n"
"              (HTTP) Tells curl to respect RFC 7230/6.4.4 and not convert POST\n"
"              requests into GET requests when following a 303 redirection. The\n"
"              non-RFC behaviour is ubiquitous in web browsers,  so  curl  does\n"
"              the  conversion  by  default to maintain consistency. However, a\n"
"              server may require a POST to remain a POST after  such  a  redi-\n"
, stdout);
 fputs(
"              rection.  This  option is meaningful only when using -L, --loca-\n"
"              tion (Added in 7.26.0)\n"
"\n"
"       --proto <protocols>\n"
"              Tells  curl  to  use  the  listed  protocols  for  its   initial\n"
"              retrieval. Protocols are evaluated left to right, are comma sep-\n"
"              arated, and are each a protocol name or 'all',  optionally  pre-\n"
"              fixed by zero or more modifiers. Available modifiers are:\n"
"\n"
, stdout);
 fputs(
"              +  Permit this protocol in addition to protocols already permit-\n"
"                 ted (this is the default if no modifier is used).\n"
"\n"
"              -  Deny this protocol, removing it from the  list  of  protocols\n"
"                 already permitted.\n"
"\n"
"              =  Permit  only this protocol (ignoring the list already permit-\n"
"                 ted), though subject  to  later  modification  by  subsequent\n"
"                 entries in the comma separated list.\n"
"\n"
, stdout);
 fputs(
"              For example:\n"
"\n"

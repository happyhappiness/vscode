<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2443_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pipe_ssloverssl<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">connectdata<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">conn<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">sockindex<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">directions<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">ssl_connect_data<pos:position pos:line="4" pos:column="26"/></name></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">connssl<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><operator pos:line="4" pos:column="38">&amp;<pos:position pos:line="4" pos:column="43"/></operator><name><name pos:line="4" pos:column="39">conn<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">-&gt;<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="45">ssl<pos:position pos:line="4" pos:column="48"/></name><index pos:line="4" pos:column="48">[<expr><name pos:line="4" pos:column="49">sockindex<pos:position pos:line="4" pos:column="58"/></name></expr>]<pos:position pos:line="4" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">ssl_connect_data<pos:position pos:line="5" pos:column="26"/></name></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type><name pos:line="5" pos:column="28">connproxyssl<pos:position pos:line="5" pos:column="40"/></name> <init pos:line="5" pos:column="41">= <expr><operator pos:line="5" pos:column="43">&amp;<pos:position pos:line="5" pos:column="48"/></operator><name><name pos:line="5" pos:column="44">conn<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">-&gt;<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="50">proxy_ssl<pos:position pos:line="5" pos:column="59"/></name><index pos:line="5" pos:column="59">[<expr><name pos:line="5" pos:column="60">sockindex<pos:position pos:line="5" pos:column="69"/></name></expr>]<pos:position pos:line="5" pos:column="70"/></index></name></expr></init></decl>;<pos:position pos:line="5" pos:column="71"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">fd_set<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">fds_read<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">fd_set<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">fds_write<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">n<pos:position pos:line="8" pos:column="8"/></name></decl>;<pos:position pos:line="8" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">m<pos:position pos:line="9" pos:column="8"/></name></decl>;<pos:position pos:line="9" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">i<pos:position pos:line="10" pos:column="8"/></name></decl>;<pos:position pos:line="10" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">ret<pos:position pos:line="11" pos:column="10"/></name> <init pos:line="11" pos:column="11">= <expr><literal type="number" pos:line="11" pos:column="13">0<pos:position pos:line="11" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">struct<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">timeval<pos:position pos:line="12" pos:column="17"/></name></name></type> <name pos:line="12" pos:column="18">tv<pos:position pos:line="12" pos:column="20"/></name> <init pos:line="12" pos:column="21">= <expr><block pos:line="12" pos:column="23">{<expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>, <expr><literal type="number" pos:line="12" pos:column="27">0<pos:position pos:line="12" pos:column="28"/></literal></expr>}<pos:position pos:line="12" pos:column="29"/></block></expr></init></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name></type> <name><name pos:line="13" pos:column="8">buf<pos:position pos:line="13" pos:column="11"/></name><index pos:line="13" pos:column="11">[<expr><name pos:line="13" pos:column="12">CURL_MAX_WRITE_SIZE<pos:position pos:line="13" pos:column="31"/></name></expr>]<pos:position pos:line="13" pos:column="32"/></index></name></decl>;<pos:position pos:line="13" pos:column="33"/></decl_stmt>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><name><name pos:line="15" pos:column="7">connssl<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">use<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">||<pos:position pos:line="15" pos:column="22"/></operator> <operator pos:line="15" pos:column="23">!<pos:position pos:line="15" pos:column="24"/></operator><name><name pos:line="15" pos:column="24">connproxyssl<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">use<pos:position pos:line="15" pos:column="41"/></name></name></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><literal type="number" pos:line="16" pos:column="12">0<pos:position pos:line="16" pos:column="13"/></literal></expr>;<pos:position pos:line="16" pos:column="14"/></return></block></then></if>   <comment type="block" pos:line="16" pos:column="17">/* No SSL over SSL: OK. */</comment>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">FD_ZERO<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><operator pos:line="18" pos:column="11">&amp;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="12">fds_read<pos:position pos:line="18" pos:column="20"/></name></expr></argument>)<pos:position pos:line="18" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">FD_ZERO<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><operator pos:line="19" pos:column="11">&amp;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="12">fds_write<pos:position pos:line="19" pos:column="21"/></name></expr></argument>)<pos:position pos:line="19" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">n<pos:position pos:line="20" pos:column="4"/></name> <operator pos:line="20" pos:column="5">=<pos:position pos:line="20" pos:column="6"/></operator> <operator pos:line="20" pos:column="7">-<pos:position pos:line="20" pos:column="8"/></operator><literal type="number" pos:line="20" pos:column="8">1<pos:position pos:line="20" pos:column="9"/></literal></expr>;<pos:position pos:line="20" pos:column="10"/></expr_stmt>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><name pos:line="21" pos:column="6">directions<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">&amp;<pos:position pos:line="21" pos:column="22"/></operator> <name pos:line="21" pos:column="19">SOS_READ<pos:position pos:line="21" pos:column="27"/></name></expr>)<pos:position pos:line="21" pos:column="28"/></condition><then pos:line="21" pos:column="28"> <block pos:line="21" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">FD_SET<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name><name pos:line="22" pos:column="12">BACKEND<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">remotefd<pos:position pos:line="22" pos:column="29"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="31">&amp;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="32">fds_write<pos:position pos:line="22" pos:column="41"/></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">n<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <name><name pos:line="23" pos:column="9">BACKEND<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">remotefd<pos:position pos:line="23" pos:column="26"/></name></name></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><name pos:line="25" pos:column="6">directions<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">&amp;<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="19">SOS_WRITE<pos:position pos:line="25" pos:column="28"/></name></expr>)<pos:position pos:line="25" pos:column="29"/></condition><then pos:line="25" pos:column="29"> <block pos:line="25" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">FD_SET<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name><name pos:line="26" pos:column="12">BACKEND<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">remotefd<pos:position pos:line="26" pos:column="29"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="31">&amp;<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="32">fds_read<pos:position pos:line="26" pos:column="40"/></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">n<pos:position pos:line="27" pos:column="6"/></name> <operator pos:line="27" pos:column="7">=<pos:position pos:line="27" pos:column="8"/></operator> <name><name pos:line="27" pos:column="9">BACKEND<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">remotefd<pos:position pos:line="27" pos:column="26"/></name></name></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">FD_SET<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name><name pos:line="28" pos:column="12">conn<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">sock<pos:position pos:line="28" pos:column="22"/></name><index pos:line="28" pos:column="22">[<expr><name pos:line="28" pos:column="23">sockindex<pos:position pos:line="28" pos:column="32"/></name></expr>]<pos:position pos:line="28" pos:column="33"/></index></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="35">&amp;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="36">fds_write<pos:position pos:line="28" pos:column="45"/></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><name pos:line="29" pos:column="8">n<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">&lt;<pos:position pos:line="29" pos:column="14"/></operator> <name><name pos:line="29" pos:column="12">conn<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">sock<pos:position pos:line="29" pos:column="22"/></name><index pos:line="29" pos:column="22">[<expr><name pos:line="29" pos:column="23">sockindex<pos:position pos:line="29" pos:column="32"/></name></expr>]<pos:position pos:line="29" pos:column="33"/></index></name></expr>)<pos:position pos:line="29" pos:column="34"/></condition><then pos:line="29" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="7">n<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <name><name pos:line="30" pos:column="11">conn<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">sock<pos:position pos:line="30" pos:column="21"/></name><index pos:line="30" pos:column="21">[<expr><name pos:line="30" pos:column="22">sockindex<pos:position pos:line="30" pos:column="31"/></name></expr>]<pos:position pos:line="30" pos:column="32"/></index></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="32" pos:column="3">i<pos:position pos:line="32" pos:column="4"/></name> <operator pos:line="32" pos:column="5">=<pos:position pos:line="32" pos:column="6"/></operator> <call><name pos:line="32" pos:column="7">select<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><name pos:line="32" pos:column="14">n<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">+<pos:position pos:line="32" pos:column="17"/></operator> <literal type="number" pos:line="32" pos:column="18">1<pos:position pos:line="32" pos:column="19"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="21">&amp;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="22">fds_read<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="32">&amp;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="33">fds_write<pos:position pos:line="32" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="44">NULL<pos:position pos:line="32" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="50">&amp;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="51">tv<pos:position pos:line="32" pos:column="53"/></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>
  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><name pos:line="33" pos:column="6">i<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">&lt;<pos:position pos:line="33" pos:column="12"/></operator> <literal type="number" pos:line="33" pos:column="10">0<pos:position pos:line="33" pos:column="11"/></literal></expr>)<pos:position pos:line="33" pos:column="12"/></condition><then pos:line="33" pos:column="12">
    <block type="pseudo"><return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">-<pos:position pos:line="34" pos:column="13"/></operator><literal type="number" pos:line="34" pos:column="13">1<pos:position pos:line="34" pos:column="14"/></literal></expr>;<pos:position pos:line="34" pos:column="15"/></return></block></then></if>  <comment type="block" pos:line="34" pos:column="17">/* Select error. */</comment>

  <if pos:line="36" pos:column="3">if<condition pos:line="36" pos:column="5">(<expr><call><name pos:line="36" pos:column="6">FD_ISSET<pos:position pos:line="36" pos:column="14"/></name><argument_list pos:line="36" pos:column="14">(<argument><expr><name><name pos:line="36" pos:column="15">BACKEND<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">-&gt;<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="24">remotefd<pos:position pos:line="36" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="34">&amp;<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="35">fds_write<pos:position pos:line="36" pos:column="44"/></name></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="46"/></condition><then pos:line="36" pos:column="46"> <block pos:line="36" pos:column="47">{
    <comment type="block" pos:line="37" pos:column="5">/* Try getting data from HTTPS proxy and pipe it upstream. */</comment>
    <expr_stmt><expr><name pos:line="38" pos:column="5">n<pos:position pos:line="38" pos:column="6"/></name> <operator pos:line="38" pos:column="7">=<pos:position pos:line="38" pos:column="8"/></operator> <literal type="number" pos:line="38" pos:column="9">0<pos:position pos:line="38" pos:column="10"/></literal></expr>;<pos:position pos:line="38" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">i<pos:position pos:line="39" pos:column="6"/></name> <operator pos:line="39" pos:column="7">=<pos:position pos:line="39" pos:column="8"/></operator> <call><name pos:line="39" pos:column="9">gsk_secure_soc_read<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><name><name pos:line="39" pos:column="29">connproxyssl<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">-&gt;<pos:position pos:line="39" pos:column="46"/></operator><name pos:line="39" pos:column="43">backend<pos:position pos:line="39" pos:column="50"/></name><operator pos:line="39" pos:column="50">-&gt;<pos:position pos:line="39" pos:column="55"/></operator><name pos:line="39" pos:column="52">handle<pos:position pos:line="39" pos:column="58"/></name></name></expr></argument>,
                            <argument><expr><name pos:line="40" pos:column="29">buf<pos:position pos:line="40" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="34">sizeof <name pos:line="40" pos:column="41">buf<pos:position pos:line="40" pos:column="44"/></name></sizeof></expr></argument>, <argument><expr><operator pos:line="40" pos:column="46">&amp;<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="47">n<pos:position pos:line="40" pos:column="48"/></name></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="50"/></expr_stmt>
    <switch pos:line="41" pos:column="5">switch<condition pos:line="41" pos:column="11">(<expr><name pos:line="41" pos:column="12">i<pos:position pos:line="41" pos:column="13"/></name></expr>)<pos:position pos:line="41" pos:column="14"/></condition> <block pos:line="41" pos:column="15">{
    <case pos:line="42" pos:column="5">case <expr><name pos:line="42" pos:column="10">GSK_OK<pos:position pos:line="42" pos:column="16"/></name></expr>:<pos:position pos:line="42" pos:column="17"/></case>
      <if pos:line="43" pos:column="7">if<condition pos:line="43" pos:column="9">(<expr><name pos:line="43" pos:column="10">n<pos:position pos:line="43" pos:column="11"/></name></expr>)<pos:position pos:line="43" pos:column="12"/></condition><then pos:line="43" pos:column="12"> <block pos:line="43" pos:column="13">{
        <expr_stmt><expr><name pos:line="44" pos:column="9">i<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <call><name pos:line="44" pos:column="13">write<pos:position pos:line="44" pos:column="18"/></name><argument_list pos:line="44" pos:column="18">(<argument><expr><name><name pos:line="44" pos:column="19">BACKEND<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">-&gt;<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="28">remotefd<pos:position pos:line="44" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="38">buf<pos:position pos:line="44" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="43">n<pos:position pos:line="44" pos:column="44"/></name></expr></argument>)<pos:position pos:line="44" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="46"/></expr_stmt>
        <if pos:line="45" pos:column="9">if<condition pos:line="45" pos:column="11">(<expr><name pos:line="45" pos:column="12">i<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">&lt;<pos:position pos:line="45" pos:column="18"/></operator> <literal type="number" pos:line="45" pos:column="16">0<pos:position pos:line="45" pos:column="17"/></literal></expr>)<pos:position pos:line="45" pos:column="18"/></condition><then pos:line="45" pos:column="18">
          <block type="pseudo"><return pos:line="46" pos:column="11">return <expr><operator pos:line="46" pos:column="18">-<pos:position pos:line="46" pos:column="19"/></operator><literal type="number" pos:line="46" pos:column="19">1<pos:position pos:line="46" pos:column="20"/></literal></expr>;<pos:position pos:line="46" pos:column="21"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="47" pos:column="9">ret<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <literal type="number" pos:line="47" pos:column="15">1<pos:position pos:line="47" pos:column="16"/></literal></expr>;<pos:position pos:line="47" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="48" pos:column="8"/></block></then></if>
      <break pos:line="49" pos:column="7">break;<pos:position pos:line="49" pos:column="13"/></break>
    <case pos:line="50" pos:column="5">case <expr><name pos:line="50" pos:column="10">GSK_OS400_ERROR_TIMED_OUT<pos:position pos:line="50" pos:column="35"/></name></expr>:<pos:position pos:line="50" pos:column="36"/></case>
    <case pos:line="51" pos:column="5">case <expr><name pos:line="51" pos:column="10">GSK_WOULD_BLOCK<pos:position pos:line="51" pos:column="25"/></name></expr>:<pos:position pos:line="51" pos:column="26"/></case>
      <break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break>
    <default pos:line="53" pos:column="5">default:<pos:position pos:line="53" pos:column="13"/></default>
      <return pos:line="54" pos:column="7">return <expr><operator pos:line="54" pos:column="14">-<pos:position pos:line="54" pos:column="15"/></operator><literal type="number" pos:line="54" pos:column="15">1<pos:position pos:line="54" pos:column="16"/></literal></expr>;<pos:position pos:line="54" pos:column="17"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></switch>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>

  <if pos:line="58" pos:column="3">if<condition pos:line="58" pos:column="5">(<expr><call><name pos:line="58" pos:column="6">FD_ISSET<pos:position pos:line="58" pos:column="14"/></name><argument_list pos:line="58" pos:column="14">(<argument><expr><name><name pos:line="58" pos:column="15">BACKEND<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">-&gt;<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="24">remotefd<pos:position pos:line="58" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="34">&amp;<pos:position pos:line="58" pos:column="39"/></operator><name pos:line="58" pos:column="35">fds_read<pos:position pos:line="58" pos:column="43"/></name></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call> <operator pos:line="58" pos:column="45">&amp;&amp;<pos:position pos:line="58" pos:column="55"/></operator>
     <call><name pos:line="59" pos:column="6">FD_ISSET<pos:position pos:line="59" pos:column="14"/></name><argument_list pos:line="59" pos:column="14">(<argument><expr><name><name pos:line="59" pos:column="15">conn<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">-&gt;<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="21">sock<pos:position pos:line="59" pos:column="25"/></name><index pos:line="59" pos:column="25">[<expr><name pos:line="59" pos:column="26">sockindex<pos:position pos:line="59" pos:column="35"/></name></expr>]<pos:position pos:line="59" pos:column="36"/></index></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="38">&amp;<pos:position pos:line="59" pos:column="43"/></operator><name pos:line="59" pos:column="39">fds_write<pos:position pos:line="59" pos:column="48"/></name></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="50"/></condition><then pos:line="59" pos:column="50"> <block pos:line="59" pos:column="51">{
    <comment type="block" pos:line="60" pos:column="5">/* Pipe data to HTTPS proxy. */</comment>
    <expr_stmt><expr><name pos:line="61" pos:column="5">n<pos:position pos:line="61" pos:column="6"/></name> <operator pos:line="61" pos:column="7">=<pos:position pos:line="61" pos:column="8"/></operator> <call><name pos:line="61" pos:column="9">read<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">(<argument><expr><name><name pos:line="61" pos:column="14">BACKEND<pos:position pos:line="61" pos:column="21"/></name><operator pos:line="61" pos:column="21">-&gt;<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="23">remotefd<pos:position pos:line="61" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="33">buf<pos:position pos:line="61" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="38">sizeof <name pos:line="61" pos:column="45">buf<pos:position pos:line="61" pos:column="48"/></name></sizeof></expr></argument>)<pos:position pos:line="61" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="50"/></expr_stmt>
    <if pos:line="62" pos:column="5">if<condition pos:line="62" pos:column="7">(<expr><name pos:line="62" pos:column="8">n<pos:position pos:line="62" pos:column="9"/></name> <operator pos:line="62" pos:column="10">&lt;<pos:position pos:line="62" pos:column="14"/></operator> <literal type="number" pos:line="62" pos:column="12">0<pos:position pos:line="62" pos:column="13"/></literal></expr>)<pos:position pos:line="62" pos:column="14"/></condition><then pos:line="62" pos:column="14">
      <block type="pseudo"><return pos:line="63" pos:column="7">return <expr><operator pos:line="63" pos:column="14">-<pos:position pos:line="63" pos:column="15"/></operator><literal type="number" pos:line="63" pos:column="15">1<pos:position pos:line="63" pos:column="16"/></literal></expr>;<pos:position pos:line="63" pos:column="17"/></return></block></then></if>
    <if pos:line="64" pos:column="5">if<condition pos:line="64" pos:column="7">(<expr><name pos:line="64" pos:column="8">n<pos:position pos:line="64" pos:column="9"/></name></expr>)<pos:position pos:line="64" pos:column="10"/></condition><then pos:line="64" pos:column="10"> <block pos:line="64" pos:column="11">{
      <expr_stmt><expr><name pos:line="65" pos:column="7">i<pos:position pos:line="65" pos:column="8"/></name> <operator pos:line="65" pos:column="9">=<pos:position pos:line="65" pos:column="10"/></operator> <call><name pos:line="65" pos:column="11">gsk_secure_soc_write<pos:position pos:line="65" pos:column="31"/></name><argument_list pos:line="65" pos:column="31">(<argument><expr><name><name pos:line="65" pos:column="32">connproxyssl<pos:position pos:line="65" pos:column="44"/></name><operator pos:line="65" pos:column="44">-&gt;<pos:position pos:line="65" pos:column="49"/></operator><name pos:line="65" pos:column="46">backend<pos:position pos:line="65" pos:column="53"/></name><operator pos:line="65" pos:column="53">-&gt;<pos:position pos:line="65" pos:column="58"/></operator><name pos:line="65" pos:column="55">handle<pos:position pos:line="65" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="63">buf<pos:position pos:line="65" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="68">n<pos:position pos:line="65" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="71">&amp;<pos:position pos:line="65" pos:column="76"/></operator><name pos:line="65" pos:column="72">m<pos:position pos:line="65" pos:column="73"/></name></expr></argument>)<pos:position pos:line="65" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="75"/></expr_stmt>
      <if pos:line="66" pos:column="7">if<condition pos:line="66" pos:column="9">(<expr><name pos:line="66" pos:column="10">i<pos:position pos:line="66" pos:column="11"/></name> <operator pos:line="66" pos:column="12">!=<pos:position pos:line="66" pos:column="14"/></operator> <name pos:line="66" pos:column="15">GSK_OK<pos:position pos:line="66" pos:column="21"/></name> <operator pos:line="66" pos:column="22">||<pos:position pos:line="66" pos:column="24"/></operator> <name pos:line="66" pos:column="25">n<pos:position pos:line="66" pos:column="26"/></name> <operator pos:line="66" pos:column="27">!=<pos:position pos:line="66" pos:column="29"/></operator> <name pos:line="66" pos:column="30">m<pos:position pos:line="66" pos:column="31"/></name></expr>)<pos:position pos:line="66" pos:column="32"/></condition><then pos:line="66" pos:column="32">
        <block type="pseudo"><return pos:line="67" pos:column="9">return <expr><operator pos:line="67" pos:column="16">-<pos:position pos:line="67" pos:column="17"/></operator><literal type="number" pos:line="67" pos:column="17">1<pos:position pos:line="67" pos:column="18"/></literal></expr>;<pos:position pos:line="67" pos:column="19"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="68" pos:column="7">ret<pos:position pos:line="68" pos:column="10"/></name> <operator pos:line="68" pos:column="11">=<pos:position pos:line="68" pos:column="12"/></operator> <literal type="number" pos:line="68" pos:column="13">1<pos:position pos:line="68" pos:column="14"/></literal></expr>;<pos:position pos:line="68" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <return pos:line="72" pos:column="3">return <expr><name pos:line="72" pos:column="10">ret<pos:position pos:line="72" pos:column="13"/></name></expr>;<pos:position pos:line="72" pos:column="14"/></return>  <comment type="block" pos:line="72" pos:column="16">/* OK */</comment>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

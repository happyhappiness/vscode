<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1688_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">pop3_perform_authentication<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name><name pos:line="1" pos:column="45">struct<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">connectdata<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">conn<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">pop3_conn<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">pop3c<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><operator pos:line="4" pos:column="29">&amp;<pos:position pos:line="4" pos:column="34"/></operator><name><name pos:line="4" pos:column="30">conn<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">proto<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">.<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">pop3c<pos:position pos:line="4" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">saslprogress<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">progress<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">SASL_IDLE<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Check we have enough data to authenticate with and end the
     connect phase if we don't */</comment>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">!<pos:position pos:line="9" pos:column="7"/></operator><call><name pos:line="9" pos:column="7">Curl_sasl_can_authenticate<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><operator pos:line="9" pos:column="34">&amp;<pos:position pos:line="9" pos:column="39"/></operator><name><name pos:line="9" pos:column="35">pop3c<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">-&gt;<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="42">sasl<pos:position pos:line="9" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="48">conn<pos:position pos:line="9" pos:column="52"/></name></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="54"/></condition><then pos:line="9" pos:column="54"> <block pos:line="9" pos:column="55">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">state<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><name pos:line="10" pos:column="11">conn<pos:position pos:line="10" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="17">POP3_STOP<pos:position pos:line="10" pos:column="26"/></name></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">result<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name><name pos:line="14" pos:column="6">pop3c<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">authtypes<pos:position pos:line="14" pos:column="22"/></name></name> <operator pos:line="14" pos:column="23">&amp;<pos:position pos:line="14" pos:column="28"/></operator> <name><name pos:line="14" pos:column="25">pop3c<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">preftype<pos:position pos:line="14" pos:column="40"/></name></name> <operator pos:line="14" pos:column="41">&amp;<pos:position pos:line="14" pos:column="46"/></operator> <name pos:line="14" pos:column="43">POP3_TYPE_SASL<pos:position pos:line="14" pos:column="57"/></name></expr>)<pos:position pos:line="14" pos:column="58"/></condition><then pos:line="14" pos:column="58"> <block pos:line="14" pos:column="59">{
    <comment type="block" pos:line="15" pos:column="5">/* Calculate the SASL login details */</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">result<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">Curl_sasl_start<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><operator pos:line="16" pos:column="30">&amp;<pos:position pos:line="16" pos:column="35"/></operator><name><name pos:line="16" pos:column="31">pop3c<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">sasl<pos:position pos:line="16" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">conn<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="50">FALSE<pos:position pos:line="16" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="57">&amp;<pos:position pos:line="16" pos:column="62"/></operator><name pos:line="16" pos:column="58">progress<pos:position pos:line="16" pos:column="66"/></name></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt>

    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><operator pos:line="18" pos:column="8">!<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">result<pos:position pos:line="18" pos:column="15"/></name></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16">
      <block type="pseudo"><if pos:line="19" pos:column="7">if<condition pos:line="19" pos:column="9">(<expr><name pos:line="19" pos:column="10">progress<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">==<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="22">SASL_INPROGRESS<pos:position pos:line="19" pos:column="37"/></name></expr>)<pos:position pos:line="19" pos:column="38"/></condition><then pos:line="19" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="9">state<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">conn<pos:position pos:line="20" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="21">POP3_AUTH<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt></block></then></if></block></then></if>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">!<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">result<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">&amp;&amp;<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="17">progress<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">==<pos:position pos:line="23" pos:column="28"/></operator> <name pos:line="23" pos:column="29">SASL_IDLE<pos:position pos:line="23" pos:column="38"/></name></expr>)<pos:position pos:line="23" pos:column="39"/></condition><then pos:line="23" pos:column="39"> <block pos:line="23" pos:column="40">{
<cpp:ifndef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifndef<pos:position pos:line="24" pos:column="8"/></cpp:directive> <name pos:line="24" pos:column="9">CURL_DISABLE_CRYPTO_AUTH<pos:position pos:line="24" pos:column="33"/></name></cpp:ifndef>
    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><name><name pos:line="25" pos:column="8">pop3c<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">authtypes<pos:position pos:line="25" pos:column="24"/></name></name> <operator pos:line="25" pos:column="25">&amp;<pos:position pos:line="25" pos:column="30"/></operator> <name><name pos:line="25" pos:column="27">pop3c<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">preftype<pos:position pos:line="25" pos:column="42"/></name></name> <operator pos:line="25" pos:column="43">&amp;<pos:position pos:line="25" pos:column="48"/></operator> <name pos:line="25" pos:column="45">POP3_TYPE_APOP<pos:position pos:line="25" pos:column="59"/></name></expr>)<pos:position pos:line="25" pos:column="60"/></condition><then pos:line="25" pos:column="60">
      <comment type="block" pos:line="26" pos:column="7">/* Perform APOP authentication */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="7">result<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">pop3_perform_apop<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">conn<pos:position pos:line="27" pos:column="38"/></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt></block></then>
    <elseif pos:line="28" pos:column="5">else
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><name><name pos:line="30" pos:column="8">pop3c<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-&gt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">authtypes<pos:position pos:line="30" pos:column="24"/></name></name> <operator pos:line="30" pos:column="25">&amp;<pos:position pos:line="30" pos:column="30"/></operator> <name><name pos:line="30" pos:column="27">pop3c<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">-&gt;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="34">preftype<pos:position pos:line="30" pos:column="42"/></name></name> <operator pos:line="30" pos:column="43">&amp;<pos:position pos:line="30" pos:column="48"/></operator> <name pos:line="30" pos:column="45">POP3_TYPE_CLEARTEXT<pos:position pos:line="30" pos:column="64"/></name></expr>)<pos:position pos:line="30" pos:column="65"/></condition><then pos:line="30" pos:column="65">
      <comment type="block" pos:line="31" pos:column="7">/* Perform clear text authentication */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="7">result<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <call><name pos:line="32" pos:column="16">pop3_perform_user<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">conn<pos:position pos:line="32" pos:column="38"/></name></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt></block></then></if></elseif>
    <else pos:line="33" pos:column="5">else <block pos:line="33" pos:column="10">{
      <comment type="block" pos:line="34" pos:column="7">/* Other mechanisms not supported */</comment>
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">infof<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><name><name pos:line="35" pos:column="13">conn<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">-&gt;<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="19">data<pos:position pos:line="35" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="25">"No known authentication mechanisms supported!\n"<pos:position pos:line="35" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="76"/></expr_stmt>
      <expr_stmt><expr><name pos:line="36" pos:column="7">result<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <name pos:line="36" pos:column="16">CURLE_LOGIN_DENIED<pos:position pos:line="36" pos:column="34"/></name></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <return pos:line="40" pos:column="3">return <expr><name pos:line="40" pos:column="10">result<pos:position pos:line="40" pos:column="16"/></name></expr>;<pos:position pos:line="40" pos:column="17"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

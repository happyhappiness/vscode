<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2174_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">CURLcode<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">init_telnet<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name><name pos:line="2" pos:column="22">struct<pos:position pos:line="2" pos:column="28"/></name> <name pos:line="2" pos:column="29">connectdata<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">conn<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">TELNET<pos:position pos:line="4" pos:column="16"/></name></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">tn<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">tn<pos:position pos:line="6" pos:column="5"/></name> <operator pos:line="6" pos:column="6">=<pos:position pos:line="6" pos:column="7"/></operator> <call><name pos:line="6" pos:column="8">calloc<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">(<argument><expr><literal type="number" pos:line="6" pos:column="15">1<pos:position pos:line="6" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="18">sizeof<argument_list pos:line="6" pos:column="24">(<argument><expr pos:line="6" pos:column="25">struct <name pos:line="6" pos:column="32">TELNET<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><name pos:line="7" pos:column="7">tn<pos:position pos:line="7" pos:column="9"/></name></expr>)<pos:position pos:line="7" pos:column="10"/></condition><then pos:line="7" pos:column="10">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="8" pos:column="31"/></name></expr>;<pos:position pos:line="8" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="10" pos:column="3">conn<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">data<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">req<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">protop<pos:position pos:line="10" pos:column="25"/></name></name> <operator pos:line="10" pos:column="26">=<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="28">tn<pos:position pos:line="10" pos:column="30"/></name></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt> <comment type="block" pos:line="10" pos:column="32">/* make us known */</comment>

  <expr_stmt><expr><name><name pos:line="12" pos:column="3">tn<pos:position pos:line="12" pos:column="5"/></name><operator pos:line="12" pos:column="5">-&gt;<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="7">telrcv_state<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">CURL_TS_DATA<pos:position pos:line="12" pos:column="34"/></name></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* Init suboptions */</comment>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">CURL_SB_CLEAR<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">tn<pos:position pos:line="15" pos:column="19"/></name></expr></argument>)<pos:position pos:line="15" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* Set the options we want by default */</comment>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">tn<pos:position pos:line="18" pos:column="5"/></name><operator pos:line="18" pos:column="5">-&gt;<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="7">us_preferred<pos:position pos:line="18" pos:column="19"/></name><index pos:line="18" pos:column="19">[<expr><name pos:line="18" pos:column="20">CURL_TELOPT_SGA<pos:position pos:line="18" pos:column="35"/></name></expr>]<pos:position pos:line="18" pos:column="36"/></index></name> <operator pos:line="18" pos:column="37">=<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="39">CURL_YES<pos:position pos:line="18" pos:column="47"/></name></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">tn<pos:position pos:line="19" pos:column="5"/></name><operator pos:line="19" pos:column="5">-&gt;<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="7">him_preferred<pos:position pos:line="19" pos:column="20"/></name><index pos:line="19" pos:column="20">[<expr><name pos:line="19" pos:column="21">CURL_TELOPT_SGA<pos:position pos:line="19" pos:column="36"/></name></expr>]<pos:position pos:line="19" pos:column="37"/></index></name> <operator pos:line="19" pos:column="38">=<pos:position pos:line="19" pos:column="39"/></operator> <name pos:line="19" pos:column="40">CURL_YES<pos:position pos:line="19" pos:column="48"/></name></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* To be compliant with previous releases of libcurl
     we enable this option by default. This behaviour
         can be changed thanks to the "BINARY" option in
         CURLOPT_TELNETOPTIONS
  */</comment>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">tn<pos:position pos:line="26" pos:column="5"/></name><operator pos:line="26" pos:column="5">-&gt;<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="7">us_preferred<pos:position pos:line="26" pos:column="19"/></name><index pos:line="26" pos:column="19">[<expr><name pos:line="26" pos:column="20">CURL_TELOPT_BINARY<pos:position pos:line="26" pos:column="38"/></name></expr>]<pos:position pos:line="26" pos:column="39"/></index></name> <operator pos:line="26" pos:column="40">=<pos:position pos:line="26" pos:column="41"/></operator> <name pos:line="26" pos:column="42">CURL_YES<pos:position pos:line="26" pos:column="50"/></name></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">tn<pos:position pos:line="27" pos:column="5"/></name><operator pos:line="27" pos:column="5">-&gt;<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="7">him_preferred<pos:position pos:line="27" pos:column="20"/></name><index pos:line="27" pos:column="20">[<expr><name pos:line="27" pos:column="21">CURL_TELOPT_BINARY<pos:position pos:line="27" pos:column="39"/></name></expr>]<pos:position pos:line="27" pos:column="40"/></index></name> <operator pos:line="27" pos:column="41">=<pos:position pos:line="27" pos:column="42"/></operator> <name pos:line="27" pos:column="43">CURL_YES<pos:position pos:line="27" pos:column="51"/></name></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="29" pos:column="3">/* We must allow the server to echo what we sent
         but it is not necessary to request the server
         to do so (it might forces the server to close
         the connection). Hence, we ignore ECHO in the
         negotiate function
  */</comment>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">tn<pos:position pos:line="35" pos:column="5"/></name><operator pos:line="35" pos:column="5">-&gt;<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="7">him_preferred<pos:position pos:line="35" pos:column="20"/></name><index pos:line="35" pos:column="20">[<expr><name pos:line="35" pos:column="21">CURL_TELOPT_ECHO<pos:position pos:line="35" pos:column="37"/></name></expr>]<pos:position pos:line="35" pos:column="38"/></index></name> <operator pos:line="35" pos:column="39">=<pos:position pos:line="35" pos:column="40"/></operator> <name pos:line="35" pos:column="41">CURL_YES<pos:position pos:line="35" pos:column="49"/></name></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt>

  <comment type="block" pos:line="37" pos:column="3">/* Set the subnegotiation fields to send information
    just after negotiation passed (do/will)

     Default values are (0,0) initialized by calloc.
     According to the RFC1013 it is valid:
     A value equal to zero is acceptable for the width (or height),
         and means that no character width (or height) is being sent.
         In this case, the width (or height) that will be assumed by the
         Telnet server is operating system specific (it will probably be
         based upon the terminal type information that may have been sent
         using the TERMINAL TYPE Telnet option). */</comment>
  <expr_stmt><expr><name><name pos:line="48" pos:column="3">tn<pos:position pos:line="48" pos:column="5"/></name><operator pos:line="48" pos:column="5">-&gt;<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="7">subnegotiation<pos:position pos:line="48" pos:column="21"/></name><index pos:line="48" pos:column="21">[<expr><name pos:line="48" pos:column="22">CURL_TELOPT_NAWS<pos:position pos:line="48" pos:column="38"/></name></expr>]<pos:position pos:line="48" pos:column="39"/></index></name> <operator pos:line="48" pos:column="40">=<pos:position pos:line="48" pos:column="41"/></operator> <name pos:line="48" pos:column="42">CURL_YES<pos:position pos:line="48" pos:column="50"/></name></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt>
  <return pos:line="49" pos:column="3">return <expr><name pos:line="49" pos:column="10">CURLE_OK<pos:position pos:line="49" pos:column="18"/></name></expr>;<pos:position pos:line="49" pos:column="19"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

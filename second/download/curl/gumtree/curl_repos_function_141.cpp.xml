<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_141.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">CookieInfo<pos:position pos:line="1" pos:column="18"/></name></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">cookie_init<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">file<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">line<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><name pos:line="3" pos:column="13">MAX_COOKIE_LINE<pos:position pos:line="3" pos:column="28"/></name></expr>]<pos:position pos:line="3" pos:column="29"/></index></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">CookieInfo<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">c<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">fp<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">bool<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">fromfile<pos:position pos:line="6" pos:column="16"/></name><init pos:line="6" pos:column="16">=<expr><name pos:line="6" pos:column="17">TRUE<pos:position pos:line="6" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  
  <expr_stmt><expr><name pos:line="8" pos:column="3">c<pos:position pos:line="8" pos:column="4"/></name> <operator pos:line="8" pos:column="5">=<pos:position pos:line="8" pos:column="6"/></operator> <operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator>struct <name pos:line="8" pos:column="15">CookieInfo<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></operator><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator><call><name pos:line="8" pos:column="28">malloc<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><sizeof pos:line="8" pos:column="35">sizeof<argument_list pos:line="8" pos:column="41">(<argument><expr pos:line="8" pos:column="42">struct <name pos:line="8" pos:column="49">CookieInfo<pos:position pos:line="8" pos:column="59"/></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">!<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">c<pos:position pos:line="9" pos:column="8"/></name></expr>)<pos:position pos:line="9" pos:column="9"/></condition><then pos:line="9" pos:column="9">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">NULL<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></return></block></then></if> <comment type="block" pos:line="10" pos:column="18">/* failed to get memory */</comment>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">memset<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><name pos:line="11" pos:column="10">c<pos:position pos:line="11" pos:column="11"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="13">0<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="16">sizeof<argument_list pos:line="11" pos:column="22">(<argument><expr pos:line="11" pos:column="23">struct <name pos:line="11" pos:column="30">CookieInfo<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">c<pos:position pos:line="12" pos:column="4"/></name><operator pos:line="12" pos:column="4">-&gt;<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="6">filename<pos:position pos:line="12" pos:column="14"/></name></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">strdup<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><ternary><condition><expr><name pos:line="12" pos:column="24">file<pos:position pos:line="12" pos:column="28"/></name></expr>?<pos:position pos:line="12" pos:column="29"/></condition><then><expr><name pos:line="12" pos:column="29">file<pos:position pos:line="12" pos:column="33"/></name></expr></then><else pos:line="12" pos:column="33">:<expr><literal type="string" pos:line="12" pos:column="34">"none"<pos:position pos:line="12" pos:column="40"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt> <comment type="block" pos:line="12" pos:column="43">/* copy the name just in case */</comment>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><call><name pos:line="14" pos:column="6">strequal<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">file<pos:position pos:line="14" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="21">"-"<pos:position pos:line="14" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26"> <block pos:line="14" pos:column="27">{
    <expr_stmt><expr><name pos:line="15" pos:column="5">fp<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <name pos:line="15" pos:column="10">stdin<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">fromfile<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">FALSE<pos:position pos:line="16" pos:column="19"/></name></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then>
  <else pos:line="18" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">fp<pos:position pos:line="19" pos:column="7"/></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <ternary><condition><expr><name pos:line="19" pos:column="10">file<pos:position pos:line="19" pos:column="14"/></name></expr>?<pos:position pos:line="19" pos:column="15"/></condition><then><expr><call><name pos:line="19" pos:column="15">fopen<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">file<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="27">"r"<pos:position pos:line="19" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr></then><else pos:line="19" pos:column="31">:<expr><name pos:line="19" pos:column="32">NULL<pos:position pos:line="19" pos:column="36"/></name></expr></else></ternary></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt></block></else></if>

  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><name pos:line="21" pos:column="6">fp<pos:position pos:line="21" pos:column="8"/></name></expr>)<pos:position pos:line="21" pos:column="9"/></condition><then pos:line="21" pos:column="9"> <block pos:line="21" pos:column="10">{
    <while pos:line="22" pos:column="5">while<condition pos:line="22" pos:column="10">(<expr><call><name pos:line="22" pos:column="11">fgets<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">line<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="23">MAX_COOKIE_LINE<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="40">fp<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="44"/></condition> <block pos:line="22" pos:column="45">{
      <if pos:line="23" pos:column="7">if<condition pos:line="23" pos:column="9">(<expr><call><name pos:line="23" pos:column="10">strnequal<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><literal type="string" pos:line="23" pos:column="20">"Set-Cookie:"<pos:position pos:line="23" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="35">line<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="41">11<pos:position pos:line="23" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="45"/></condition><then pos:line="23" pos:column="45"> <block pos:line="23" pos:column="46">{
        <comment type="block" pos:line="24" pos:column="9">/* This is a cookie line, get it! */</comment>
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">char<pos:position pos:line="25" pos:column="13"/></name> <modifier pos:line="25" pos:column="14">*<pos:position pos:line="25" pos:column="15"/></modifier></type><name pos:line="25" pos:column="15">lineptr<pos:position pos:line="25" pos:column="22"/></name><init pos:line="25" pos:column="22">=<expr><operator pos:line="25" pos:column="23">&amp;<pos:position pos:line="25" pos:column="28"/></operator><name><name pos:line="25" pos:column="24">line<pos:position pos:line="25" pos:column="28"/></name><index pos:line="25" pos:column="28">[<expr><literal type="number" pos:line="25" pos:column="29">11<pos:position pos:line="25" pos:column="31"/></literal></expr>]<pos:position pos:line="25" pos:column="32"/></index></name></expr></init></decl>;<pos:position pos:line="25" pos:column="33"/></decl_stmt>
        <while pos:line="26" pos:column="9">while<condition pos:line="26" pos:column="14">(<expr><operator pos:line="26" pos:column="15">*<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="16">lineptr<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">&amp;&amp;<pos:position pos:line="26" pos:column="34"/></operator> <call><name pos:line="26" pos:column="27">isspace<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><operator pos:line="26" pos:column="35">(<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="36">int<pos:position pos:line="26" pos:column="39"/></name><operator pos:line="26" pos:column="39">)<pos:position pos:line="26" pos:column="40"/></operator><operator pos:line="26" pos:column="40">*<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="41">lineptr<pos:position pos:line="26" pos:column="48"/></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="50"/></condition>
          <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="11">lineptr<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">++<pos:position pos:line="27" pos:column="20"/></operator></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt></block></while>

        <expr_stmt><expr><call><name pos:line="29" pos:column="9">cookie_add<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">c<pos:position pos:line="29" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="23">TRUE<pos:position pos:line="29" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="29">lineptr<pos:position pos:line="29" pos:column="36"/></name></expr></argument>)<pos:position pos:line="29" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="30" pos:column="8"/></block></then>
      <else pos:line="31" pos:column="7">else <block pos:line="31" pos:column="12">{
        <comment type="block" pos:line="32" pos:column="9">/* This might be a netscape cookie-file line, get it! */</comment>
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">char<pos:position pos:line="33" pos:column="13"/></name> <modifier pos:line="33" pos:column="14">*<pos:position pos:line="33" pos:column="15"/></modifier></type><name pos:line="33" pos:column="15">lineptr<pos:position pos:line="33" pos:column="22"/></name><init pos:line="33" pos:column="22">=<expr><name pos:line="33" pos:column="23">line<pos:position pos:line="33" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="28"/></decl_stmt>
        <while pos:line="34" pos:column="9">while<condition pos:line="34" pos:column="14">(<expr><operator pos:line="34" pos:column="15">*<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="16">lineptr<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">&amp;&amp;<pos:position pos:line="34" pos:column="34"/></operator> <call><name pos:line="34" pos:column="27">isspace<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><operator pos:line="34" pos:column="35">(<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="36">int<pos:position pos:line="34" pos:column="39"/></name><operator pos:line="34" pos:column="39">)<pos:position pos:line="34" pos:column="40"/></operator><operator pos:line="34" pos:column="40">*<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="41">lineptr<pos:position pos:line="34" pos:column="48"/></name></expr></argument>)<pos:position pos:line="34" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="50"/></condition>
          <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="11">lineptr<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">++<pos:position pos:line="35" pos:column="20"/></operator></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt></block></while>

        <expr_stmt><expr><call><name pos:line="37" pos:column="9">cookie_add<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><name pos:line="37" pos:column="20">c<pos:position pos:line="37" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="23">FALSE<pos:position pos:line="37" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="30">lineptr<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="38" pos:column="8"/></block></else></if>
    }<pos:position pos:line="39" pos:column="6"/></block></while>
    <if pos:line="40" pos:column="5">if<condition pos:line="40" pos:column="7">(<expr><name pos:line="40" pos:column="8">fromfile<pos:position pos:line="40" pos:column="16"/></name></expr>)<pos:position pos:line="40" pos:column="17"/></condition><then pos:line="40" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="7">fclose<pos:position pos:line="41" pos:column="13"/></name><argument_list pos:line="41" pos:column="13">(<argument><expr><name pos:line="41" pos:column="14">fp<pos:position pos:line="41" pos:column="16"/></name></expr></argument>)<pos:position pos:line="41" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="18"/></expr_stmt></block></then></if>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <return pos:line="44" pos:column="3">return <expr><name pos:line="44" pos:column="10">c<pos:position pos:line="44" pos:column="11"/></name></expr>;<pos:position pos:line="44" pos:column="12"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

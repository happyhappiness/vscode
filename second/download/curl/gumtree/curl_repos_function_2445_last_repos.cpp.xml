<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2445_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">gskit_send<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">sockindex<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">void<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">mem<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">size_t<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">len<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">CURLcode<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">curlcode<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">ssl_connect_data<pos:position pos:line="4" pos:column="26"/></name></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">connssl<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><operator pos:line="4" pos:column="38">&amp;<pos:position pos:line="4" pos:column="43"/></operator><name><name pos:line="4" pos:column="39">conn<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">-&gt;<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="45">ssl<pos:position pos:line="4" pos:column="48"/></name><index pos:line="4" pos:column="48">[<expr><name pos:line="4" pos:column="49">sockindex<pos:position pos:line="4" pos:column="58"/></name></expr>]<pos:position pos:line="4" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Curl_easy<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">data<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">conn<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">data<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">cc<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><name pos:line="6" pos:column="17">CURLE_SEND_ERROR<pos:position pos:line="6" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">written<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><call><name pos:line="9" pos:column="6">pipe_ssloverssl<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">conn<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="28">sockindex<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="39">SOS_WRITE<pos:position pos:line="9" pos:column="48"/></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call> <operator pos:line="9" pos:column="50">&gt;=<pos:position pos:line="9" pos:column="55"/></operator> <literal type="number" pos:line="9" pos:column="53">0<pos:position pos:line="9" pos:column="54"/></literal></expr>)<pos:position pos:line="9" pos:column="55"/></condition><then pos:line="9" pos:column="55"> <block pos:line="9" pos:column="56">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">cc<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">gskit_status<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">data<pos:position pos:line="10" pos:column="27"/></name></expr></argument>,
                      <argument><expr><call><name pos:line="11" pos:column="23">gsk_secure_soc_write<pos:position pos:line="11" pos:column="43"/></name><argument_list pos:line="11" pos:column="43">(<argument><expr><name><name pos:line="11" pos:column="44">BACKEND<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">-&gt;<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="53">handle<pos:position pos:line="11" pos:column="59"/></name></name></expr></argument>,
                                           <argument><expr><operator pos:line="12" pos:column="44">(<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="45">char<pos:position pos:line="12" pos:column="49"/></name> <operator pos:line="12" pos:column="50">*<pos:position pos:line="12" pos:column="51"/></operator><operator pos:line="12" pos:column="51">)<pos:position pos:line="12" pos:column="52"/></operator> <name pos:line="12" pos:column="53">mem<pos:position pos:line="12" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="58">(<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="59">int<pos:position pos:line="12" pos:column="62"/></name><operator pos:line="12" pos:column="62">)<pos:position pos:line="12" pos:column="63"/></operator> <name pos:line="12" pos:column="64">len<pos:position pos:line="12" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="69">&amp;<pos:position pos:line="12" pos:column="74"/></operator><name pos:line="12" pos:column="70">written<pos:position pos:line="12" pos:column="77"/></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr></argument>,
                      <argument><expr><literal type="string" pos:line="13" pos:column="23">"gsk_secure_soc_write()"<pos:position pos:line="13" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="49">CURLE_SEND_ERROR<pos:position pos:line="13" pos:column="65"/></name></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="67"/></expr_stmt>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><name pos:line="14" pos:column="8">cc<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">==<pos:position pos:line="14" pos:column="13"/></operator> <name pos:line="14" pos:column="14">CURLE_OK<pos:position pos:line="14" pos:column="22"/></name></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23">
      <block type="pseudo"><if pos:line="15" pos:column="7">if<condition pos:line="15" pos:column="9">(<expr><call><name pos:line="15" pos:column="10">pipe_ssloverssl<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">conn<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">sockindex<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="43">SOS_WRITE<pos:position pos:line="15" pos:column="52"/></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call> <operator pos:line="15" pos:column="54">&lt;<pos:position pos:line="15" pos:column="58"/></operator> <literal type="number" pos:line="15" pos:column="56">0<pos:position pos:line="15" pos:column="57"/></literal></expr>)<pos:position pos:line="15" pos:column="58"/></condition><then pos:line="15" pos:column="58">
        <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="9">cc<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <name pos:line="16" pos:column="14">CURLE_SEND_ERROR<pos:position pos:line="16" pos:column="30"/></name></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt></block></then></if></block></then></if>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><name pos:line="18" pos:column="6">cc<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">!=<pos:position pos:line="18" pos:column="11"/></operator> <name pos:line="18" pos:column="12">CURLE_OK<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21"> <block pos:line="18" pos:column="22">{
    <expr_stmt><expr><operator pos:line="19" pos:column="5">*<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">curlcode<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">cc<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">written<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <operator pos:line="20" pos:column="15">-<pos:position pos:line="20" pos:column="16"/></operator><literal type="number" pos:line="20" pos:column="16">1<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
  <return pos:line="22" pos:column="3">return <expr><operator pos:line="22" pos:column="10">(<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">ssize_t<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">)<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">written<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></return> <comment type="block" pos:line="22" pos:column="29">/* number of bytes */</comment>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

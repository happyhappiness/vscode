<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2189_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">send_telnet_data<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">connectdata<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">conn<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">buffer<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">ssize_t<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">nread<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ssize_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">escapes<pos:position pos:line="4" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="20">i<pos:position pos:line="4" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="23">j<pos:position pos:line="4" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="26">outlen<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">outbuf<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">NULL<pos:position pos:line="5" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">CURLE_OK<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">ssize_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">bytes_written<pos:position pos:line="7" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="26">total_written<pos:position pos:line="7" pos:column="39"/></name></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* Determine size of new buffer after escaping */</comment>
  <expr_stmt><expr><name pos:line="10" pos:column="3">escapes<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <literal type="number" pos:line="10" pos:column="13">0<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>
  <for pos:line="11" pos:column="3">for<control pos:line="11" pos:column="6">(<init><expr><name pos:line="11" pos:column="7">i<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <literal type="number" pos:line="11" pos:column="11">0<pos:position pos:line="11" pos:column="12"/></literal></expr>;<pos:position pos:line="11" pos:column="13"/></init> <condition><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">&lt;<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="18">nread<pos:position pos:line="11" pos:column="23"/></name></expr>;<pos:position pos:line="11" pos:column="24"/></condition> <incr><expr><name pos:line="11" pos:column="25">i<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">++<pos:position pos:line="11" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="29"/></control>
    <block type="pseudo"><if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">(<expr><operator pos:line="12" pos:column="8">(<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="9">unsigned<pos:position pos:line="12" pos:column="17"/></name> <name pos:line="12" pos:column="18">char<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">)<pos:position pos:line="12" pos:column="23"/></operator><name><name pos:line="12" pos:column="23">buffer<pos:position pos:line="12" pos:column="29"/></name><index pos:line="12" pos:column="29">[<expr><name pos:line="12" pos:column="30">i<pos:position pos:line="12" pos:column="31"/></name></expr>]<pos:position pos:line="12" pos:column="32"/></index></name> <operator pos:line="12" pos:column="33">==<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="36">CURL_IAC<pos:position pos:line="12" pos:column="44"/></name></expr>)<pos:position pos:line="12" pos:column="45"/></condition><then pos:line="12" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="7">escapes<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">++<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt></block></then></if></block></for>
  <expr_stmt><expr><name pos:line="14" pos:column="3">outlen<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <name pos:line="14" pos:column="12">nread<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">+<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">escapes<pos:position pos:line="14" pos:column="27"/></name></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name pos:line="16" pos:column="6">outlen<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">==<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">nread<pos:position pos:line="16" pos:column="21"/></name></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="5">outbuf<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <operator pos:line="17" pos:column="14">(<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">unsigned<pos:position pos:line="17" pos:column="23"/></name> <name pos:line="17" pos:column="24">char<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">*<pos:position pos:line="17" pos:column="30"/></operator><operator pos:line="17" pos:column="30">)<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">buffer<pos:position pos:line="17" pos:column="37"/></name></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt></block></then>
  <else pos:line="18" pos:column="3">else <block pos:line="18" pos:column="8">{
    <expr_stmt><expr><name pos:line="19" pos:column="5">outbuf<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">malloc<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">nread<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">+<pos:position pos:line="19" pos:column="28"/></operator> <name pos:line="19" pos:column="29">escapes<pos:position pos:line="19" pos:column="36"/></name> <operator pos:line="19" pos:column="37">+<pos:position pos:line="19" pos:column="38"/></operator> <literal type="number" pos:line="19" pos:column="39">1<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><operator pos:line="20" pos:column="8">!<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">outbuf<pos:position pos:line="20" pos:column="15"/></name></expr>)<pos:position pos:line="20" pos:column="16"/></condition><then pos:line="20" pos:column="16">
      <block type="pseudo"><return pos:line="21" pos:column="7">return <expr><name pos:line="21" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="21" pos:column="33"/></name></expr>;<pos:position pos:line="21" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">j<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <literal type="number" pos:line="23" pos:column="9">0<pos:position pos:line="23" pos:column="10"/></literal></expr>;<pos:position pos:line="23" pos:column="11"/></expr_stmt>
    <for pos:line="24" pos:column="5">for<control pos:line="24" pos:column="8">(<init><expr><name pos:line="24" pos:column="9">i<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <literal type="number" pos:line="24" pos:column="13">0<pos:position pos:line="24" pos:column="14"/></literal></expr>;<pos:position pos:line="24" pos:column="15"/></init> <condition><expr><name pos:line="24" pos:column="16">i<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">&lt;<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="20">nread<pos:position pos:line="24" pos:column="25"/></name></expr>;<pos:position pos:line="24" pos:column="26"/></condition> <incr><expr><name pos:line="24" pos:column="27">i<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">++<pos:position pos:line="24" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="31"/></control> <block pos:line="24" pos:column="32">{
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">outbuf<pos:position pos:line="25" pos:column="13"/></name><index pos:line="25" pos:column="13">[<expr><name pos:line="25" pos:column="14">j<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">++<pos:position pos:line="25" pos:column="17"/></operator></expr>]<pos:position pos:line="25" pos:column="18"/></index></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <name><name pos:line="25" pos:column="21">buffer<pos:position pos:line="25" pos:column="27"/></name><index pos:line="25" pos:column="27">[<expr><name pos:line="25" pos:column="28">i<pos:position pos:line="25" pos:column="29"/></name></expr>]<pos:position pos:line="25" pos:column="30"/></index></name></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
      <if pos:line="26" pos:column="7">if<condition pos:line="26" pos:column="9">(<expr><operator pos:line="26" pos:column="10">(<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">unsigned<pos:position pos:line="26" pos:column="19"/></name> <name pos:line="26" pos:column="20">char<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">)<pos:position pos:line="26" pos:column="25"/></operator><name><name pos:line="26" pos:column="25">buffer<pos:position pos:line="26" pos:column="31"/></name><index pos:line="26" pos:column="31">[<expr><name pos:line="26" pos:column="32">i<pos:position pos:line="26" pos:column="33"/></name></expr>]<pos:position pos:line="26" pos:column="34"/></index></name> <operator pos:line="26" pos:column="35">==<pos:position pos:line="26" pos:column="37"/></operator> <name pos:line="26" pos:column="38">CURL_IAC<pos:position pos:line="26" pos:column="46"/></name></expr>)<pos:position pos:line="26" pos:column="47"/></condition><then pos:line="26" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="9">outbuf<pos:position pos:line="27" pos:column="15"/></name><index pos:line="27" pos:column="15">[<expr><name pos:line="27" pos:column="16">j<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">++<pos:position pos:line="27" pos:column="19"/></operator></expr>]<pos:position pos:line="27" pos:column="20"/></index></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="23">CURL_IAC<pos:position pos:line="27" pos:column="31"/></name></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt></block></then></if>
    }<pos:position pos:line="28" pos:column="6"/></block></for>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">outbuf<pos:position pos:line="29" pos:column="11"/></name><index pos:line="29" pos:column="11">[<expr><name pos:line="29" pos:column="12">j<pos:position pos:line="29" pos:column="13"/></name></expr>]<pos:position pos:line="29" pos:column="14"/></index></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <literal type="char" pos:line="29" pos:column="17">'\0'<pos:position pos:line="29" pos:column="21"/></literal></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="32" pos:column="3">total_written<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <literal type="number" pos:line="32" pos:column="19">0<pos:position pos:line="32" pos:column="20"/></literal></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
  <while pos:line="33" pos:column="3">while<condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">!<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">result<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">&amp;&amp;<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="20">total_written<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">&lt;<pos:position pos:line="33" pos:column="38"/></operator> <name pos:line="33" pos:column="36">outlen<pos:position pos:line="33" pos:column="42"/></name></expr>)<pos:position pos:line="33" pos:column="43"/></condition> <block pos:line="33" pos:column="44">{
    <comment type="block" pos:line="34" pos:column="5">/* Make sure socket is writable to avoid EWOULDBLOCK condition */</comment>
    <decl_stmt><decl><type><name><name pos:line="35" pos:column="5">struct<pos:position pos:line="35" pos:column="11"/></name> <name pos:line="35" pos:column="12">pollfd<pos:position pos:line="35" pos:column="18"/></name></name></type> <name><name pos:line="35" pos:column="19">pfd<pos:position pos:line="35" pos:column="22"/></name><index pos:line="35" pos:column="22">[<expr><literal type="number" pos:line="35" pos:column="23">1<pos:position pos:line="35" pos:column="24"/></literal></expr>]<pos:position pos:line="35" pos:column="25"/></index></name></decl>;<pos:position pos:line="35" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">pfd<pos:position pos:line="36" pos:column="8"/></name><index pos:line="36" pos:column="8">[<expr><literal type="number" pos:line="36" pos:column="9">0<pos:position pos:line="36" pos:column="10"/></literal></expr>]<pos:position pos:line="36" pos:column="11"/></index></name><operator pos:line="36" pos:column="11">.<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">fd<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <name><name pos:line="36" pos:column="17">conn<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">-&gt;<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="23">sock<pos:position pos:line="36" pos:column="27"/></name><index pos:line="36" pos:column="27">[<expr><name pos:line="36" pos:column="28">FIRSTSOCKET<pos:position pos:line="36" pos:column="39"/></name></expr>]<pos:position pos:line="36" pos:column="40"/></index></name></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">pfd<pos:position pos:line="37" pos:column="8"/></name><index pos:line="37" pos:column="8">[<expr><literal type="number" pos:line="37" pos:column="9">0<pos:position pos:line="37" pos:column="10"/></literal></expr>]<pos:position pos:line="37" pos:column="11"/></index></name><operator pos:line="37" pos:column="11">.<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="12">events<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <name pos:line="37" pos:column="21">POLLOUT<pos:position pos:line="37" pos:column="28"/></name></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt>
    <switch pos:line="38" pos:column="5">switch<condition pos:line="38" pos:column="11">(<expr><call><name pos:line="38" pos:column="12">Curl_poll<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">pfd<pos:position pos:line="38" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="27">1<pos:position pos:line="38" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="38" pos:column="30">-<pos:position pos:line="38" pos:column="31"/></operator><literal type="number" pos:line="38" pos:column="31">1<pos:position pos:line="38" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="34"/></condition> <block pos:line="38" pos:column="35">{
      <case pos:line="39" pos:column="7">case <expr><operator pos:line="39" pos:column="12">-<pos:position pos:line="39" pos:column="13"/></operator><literal type="number" pos:line="39" pos:column="13">1<pos:position pos:line="39" pos:column="14"/></literal></expr>:<pos:position pos:line="39" pos:column="15"/></case>                    <comment type="block" pos:line="39" pos:column="35">/* error, abort writing */</comment>
      <case pos:line="40" pos:column="7">case <expr><literal type="number" pos:line="40" pos:column="12">0<pos:position pos:line="40" pos:column="13"/></literal></expr>:<pos:position pos:line="40" pos:column="14"/></case>                     <comment type="block" pos:line="40" pos:column="35">/* timeout (will never happen) */</comment>
        <expr_stmt><expr><name pos:line="41" pos:column="9">result<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <name pos:line="41" pos:column="18">CURLE_SEND_ERROR<pos:position pos:line="41" pos:column="34"/></name></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt>
        <break pos:line="42" pos:column="9">break;<pos:position pos:line="42" pos:column="15"/></break>
      <default pos:line="43" pos:column="7">default:<pos:position pos:line="43" pos:column="15"/></default>                    <comment type="block" pos:line="43" pos:column="35">/* write! */</comment>
        <expr_stmt><expr><name pos:line="44" pos:column="9">bytes_written<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">=<pos:position pos:line="44" pos:column="24"/></operator> <literal type="number" pos:line="44" pos:column="25">0<pos:position pos:line="44" pos:column="26"/></literal></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="45" pos:column="9">result<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <call><name pos:line="45" pos:column="18">Curl_write<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><name pos:line="45" pos:column="29">conn<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="35">conn<pos:position pos:line="45" pos:column="39"/></name><operator pos:line="45" pos:column="39">-&gt;<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="41">sock<pos:position pos:line="45" pos:column="45"/></name><index pos:line="45" pos:column="45">[<expr><name pos:line="45" pos:column="46">FIRSTSOCKET<pos:position pos:line="45" pos:column="57"/></name></expr>]<pos:position pos:line="45" pos:column="58"/></index></name></expr></argument>,
                            <argument><expr><name pos:line="46" pos:column="29">outbuf<pos:position pos:line="46" pos:column="35"/></name> <operator pos:line="46" pos:column="36">+<pos:position pos:line="46" pos:column="37"/></operator> <name pos:line="46" pos:column="38">total_written<pos:position pos:line="46" pos:column="51"/></name></expr></argument>,
                            <argument><expr><name pos:line="47" pos:column="29">outlen<pos:position pos:line="47" pos:column="35"/></name> <operator pos:line="47" pos:column="36">-<pos:position pos:line="47" pos:column="37"/></operator> <name pos:line="47" pos:column="38">total_written<pos:position pos:line="47" pos:column="51"/></name></expr></argument>,
                            <argument><expr><operator pos:line="48" pos:column="29">&amp;<pos:position pos:line="48" pos:column="34"/></operator><name pos:line="48" pos:column="30">bytes_written<pos:position pos:line="48" pos:column="43"/></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">total_written<pos:position pos:line="49" pos:column="22"/></name> <operator pos:line="49" pos:column="23">+=<pos:position pos:line="49" pos:column="25"/></operator> <name pos:line="49" pos:column="26">bytes_written<pos:position pos:line="49" pos:column="39"/></name></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt>
        <break pos:line="50" pos:column="9">break;<pos:position pos:line="50" pos:column="15"/></break>
    }<pos:position pos:line="51" pos:column="6"/></block></switch>
  }<pos:position pos:line="52" pos:column="4"/></block></while>

  <comment type="block" pos:line="54" pos:column="3">/* Free malloc copy if escaped */</comment>
  <if pos:line="55" pos:column="3">if<condition pos:line="55" pos:column="5">(<expr><name pos:line="55" pos:column="6">outbuf<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">!=<pos:position pos:line="55" pos:column="15"/></operator> <operator pos:line="55" pos:column="16">(<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="17">unsigned<pos:position pos:line="55" pos:column="25"/></name> <name pos:line="55" pos:column="26">char<pos:position pos:line="55" pos:column="30"/></name> <operator pos:line="55" pos:column="31">*<pos:position pos:line="55" pos:column="32"/></operator><operator pos:line="55" pos:column="32">)<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="33">buffer<pos:position pos:line="55" pos:column="39"/></name></expr>)<pos:position pos:line="55" pos:column="40"/></condition><then pos:line="55" pos:column="40">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="5">free<pos:position pos:line="56" pos:column="9"/></name><argument_list pos:line="56" pos:column="9">(<argument><expr><name pos:line="56" pos:column="10">outbuf<pos:position pos:line="56" pos:column="16"/></name></expr></argument>)<pos:position pos:line="56" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="18"/></expr_stmt></block></then></if>

  <return pos:line="58" pos:column="3">return <expr><name pos:line="58" pos:column="10">result<pos:position pos:line="58" pos:column="16"/></name></expr>;<pos:position pos:line="58" pos:column="17"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

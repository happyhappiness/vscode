<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1134_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_output_negotiate<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">connectdata<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">conn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">bool<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">proxy<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">negotiatedata<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">neg_ctx<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><ternary><condition><expr><name pos:line="3" pos:column="35">proxy<pos:position pos:line="3" pos:column="40"/></name></expr> ?<pos:position pos:line="3" pos:column="42"/></condition><then pos:line="3" pos:column="42"> <expr><operator pos:line="3" pos:column="43">&amp;<pos:position pos:line="3" pos:column="48"/></operator><name><name pos:line="3" pos:column="44">conn<pos:position pos:line="3" pos:column="48"/></name><operator pos:line="3" pos:column="48">-&gt;<pos:position pos:line="3" pos:column="53"/></operator><name pos:line="3" pos:column="50">data<pos:position pos:line="3" pos:column="54"/></name><operator pos:line="3" pos:column="54">-&gt;<pos:position pos:line="3" pos:column="59"/></operator><name pos:line="3" pos:column="56">state<pos:position pos:line="3" pos:column="61"/></name><operator pos:line="3" pos:column="61">.<pos:position pos:line="3" pos:column="62"/></operator><name pos:line="3" pos:column="62">proxyneg<pos:position pos:line="3" pos:column="70"/></name></name></expr> <pos:position pos:line="3" pos:column="71"/></then><else pos:line="3" pos:column="71">:
    <expr><operator pos:line="4" pos:column="5">&amp;<pos:position pos:line="4" pos:column="10"/></operator><name><name pos:line="4" pos:column="6">conn<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">-&gt;<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="12">data<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">-&gt;<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="18">state<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">.<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">negotiate<pos:position pos:line="4" pos:column="33"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">base64<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">len<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">userp<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLcode<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">result<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">result<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">Curl_auth_create_spnego_message<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name><name pos:line="10" pos:column="44">conn<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">-&gt;<pos:position pos:line="10" pos:column="53"/></operator><name pos:line="10" pos:column="50">data<pos:position pos:line="10" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="56">neg_ctx<pos:position pos:line="10" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="65">&amp;<pos:position pos:line="10" pos:column="70"/></operator><name pos:line="10" pos:column="66">base64<pos:position pos:line="10" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="74">&amp;<pos:position pos:line="10" pos:column="79"/></operator><name pos:line="10" pos:column="75">len<pos:position pos:line="10" pos:column="78"/></name></expr></argument>)<pos:position pos:line="10" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="80"/></expr_stmt>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">result<pos:position pos:line="11" pos:column="12"/></name></expr>)<pos:position pos:line="11" pos:column="13"/></condition><then pos:line="11" pos:column="13">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">result<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">userp<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <call><name pos:line="14" pos:column="11">aprintf<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><literal type="string" pos:line="14" pos:column="19">"%sAuthorization: Negotiate %s\r\n"<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="14" pos:column="56">proxy<pos:position pos:line="14" pos:column="61"/></name></expr> ?<pos:position pos:line="14" pos:column="63"/></condition><then pos:line="14" pos:column="63"> <expr><literal type="string" pos:line="14" pos:column="64">"Proxy-"<pos:position pos:line="14" pos:column="72"/></literal></expr> <pos:position pos:line="14" pos:column="73"/></then><else pos:line="14" pos:column="73">: <expr><literal type="string" pos:line="14" pos:column="75">""<pos:position pos:line="14" pos:column="77"/></literal></expr></else></ternary></expr></argument>,
                  <argument><expr><name pos:line="15" pos:column="19">base64<pos:position pos:line="15" pos:column="25"/></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name pos:line="17" pos:column="6">proxy<pos:position pos:line="17" pos:column="11"/></name></expr>)<pos:position pos:line="17" pos:column="12"/></condition><then pos:line="17" pos:column="12"> <block pos:line="17" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">Curl_safefree<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name><name pos:line="18" pos:column="19">conn<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">-&gt;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="25">allocptr<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">.<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="34">proxyuserpwd<pos:position pos:line="18" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">conn<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">allocptr<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">.<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">proxyuserpwd<pos:position pos:line="19" pos:column="32"/></name></name> <operator pos:line="19" pos:column="33">=<pos:position pos:line="19" pos:column="34"/></operator> <name pos:line="19" pos:column="35">userp<pos:position pos:line="19" pos:column="40"/></name></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then>
  <else pos:line="21" pos:column="3">else <block pos:line="21" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">Curl_safefree<pos:position pos:line="22" pos:column="18"/></name><argument_list pos:line="22" pos:column="18">(<argument><expr><name><name pos:line="22" pos:column="19">conn<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">allocptr<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">.<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">userpwd<pos:position pos:line="22" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">conn<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">allocptr<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">.<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">userpwd<pos:position pos:line="23" pos:column="27"/></name></name> <operator pos:line="23" pos:column="28">=<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">userp<pos:position pos:line="23" pos:column="35"/></name></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="26" pos:column="3">free<pos:position pos:line="26" pos:column="7"/></name><argument_list pos:line="26" pos:column="7">(<argument><expr><name pos:line="26" pos:column="8">base64<pos:position pos:line="26" pos:column="14"/></name></expr></argument>)<pos:position pos:line="26" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="16"/></expr_stmt>

  <return pos:line="28" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="28" pos:column="10">(<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="11">userp<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">==<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">NULL<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">)<pos:position pos:line="28" pos:column="25"/></operator></expr> ?<pos:position pos:line="28" pos:column="27"/></condition><then pos:line="28" pos:column="27"> <expr><name pos:line="28" pos:column="28">CURLE_OUT_OF_MEMORY<pos:position pos:line="28" pos:column="47"/></name></expr> <pos:position pos:line="28" pos:column="48"/></then><else pos:line="28" pos:column="48">: <expr><name pos:line="28" pos:column="50">CURLE_OK<pos:position pos:line="28" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="28" pos:column="59"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

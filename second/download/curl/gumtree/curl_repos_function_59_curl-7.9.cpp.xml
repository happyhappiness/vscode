<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_59_curl-7.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">bool<pos:position pos:line="2" pos:column="5"/></name></type> <name pos:line="2" pos:column="6">seed_enough<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name><name pos:line="2" pos:column="18">struct<pos:position pos:line="2" pos:column="24"/></name> <name pos:line="2" pos:column="25">connectdata<pos:position pos:line="2" pos:column="36"/></name></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">conn<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="44">/* unused for now */</comment>
                 <parameter><decl><type><name pos:line="3" pos:column="18">int<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">nread<pos:position pos:line="3" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="28"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <expr_stmt><expr><name pos:line="5" pos:column="3">conn<pos:position pos:line="5" pos:column="7"/></name> <operator pos:line="5" pos:column="8">=<pos:position pos:line="5" pos:column="9"/></operator> <name pos:line="5" pos:column="10">NULL<pos:position pos:line="5" pos:column="14"/></name></expr>;<pos:position pos:line="5" pos:column="15"/></expr_stmt> <comment type="block" pos:line="5" pos:column="16">/* to prevent compiler warnings */</comment>
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">HAVE_RAND_STATUS<pos:position pos:line="6" pos:column="24"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="7" pos:column="3">nread<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <literal type="number" pos:line="7" pos:column="11">0<pos:position pos:line="7" pos:column="12"/></literal></expr>;<pos:position pos:line="7" pos:column="13"/></expr_stmt> <comment type="block" pos:line="7" pos:column="14">/* to prevent compiler warnings */</comment>

  <comment type="block" pos:line="9" pos:column="3">/* only available in OpenSSL 0.9.5a and later */</comment>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><call><name pos:line="10" pos:column="6">RAND_status<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">()<pos:position pos:line="10" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="20"/></condition><then pos:line="10" pos:column="20">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">TRUE<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></return></block></then></if>
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">nread<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">&gt;<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="14">500<pos:position pos:line="13" pos:column="17"/></literal></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18">
    <comment type="block" pos:line="14" pos:column="5">/* this is a very silly decision to make */</comment>
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">TRUE<pos:position pos:line="15" pos:column="16"/></name></expr>;<pos:position pos:line="15" pos:column="17"/></return></block></then></if>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="17" pos:column="3">return <expr><name pos:line="17" pos:column="10">FALSE<pos:position pos:line="17" pos:column="15"/></name></expr>;<pos:position pos:line="17" pos:column="16"/></return> <comment type="block" pos:line="17" pos:column="17">/* not enough */</comment>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

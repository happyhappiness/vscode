<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1346_curl-7.41.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">detect_proxy<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">proxy<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name pos:line="3" pos:column="17">NULL<pos:position pos:line="3" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

<cpp:ifndef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifndef<pos:position pos:line="5" pos:column="8"/></cpp:directive> <name pos:line="5" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="5" pos:column="26"/></name></cpp:ifndef>
  <comment type="block" pos:line="6" pos:column="3">/* If proxy was not specified, we check for default proxy environment
   * variables, to enable i.e Lynx compliance:
   *
   * http_proxy=http://some.server.dom:port/
   * https_proxy=http://some.server.dom:port/
   * ftp_proxy=http://some.server.dom:port/
   * no_proxy=domain1.dom,host.domain2.dom
   *   (a comma-separated list of hosts which should
   *   not be proxied, or an asterisk to override
   *   all proxy variables)
   * all_proxy=http://some.server.dom:port/
   *   (seems to exist for the CERN www lib. Probably
   *   the first to check for.)
   *
   * For compatibility, the all-uppercase versions of these variables are
   * checked if the lowercase versions don't exist.
   */</comment>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">char<pos:position pos:line="23" pos:column="7"/></name> <modifier pos:line="23" pos:column="8">*<pos:position pos:line="23" pos:column="9"/></modifier></type><name pos:line="23" pos:column="9">no_proxy<pos:position pos:line="23" pos:column="17"/></name><init pos:line="23" pos:column="17">=<expr><name pos:line="23" pos:column="18">NULL<pos:position pos:line="23" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">char<pos:position pos:line="24" pos:column="7"/></name></type> <name><name pos:line="24" pos:column="8">proxy_env<pos:position pos:line="24" pos:column="17"/></name><index pos:line="24" pos:column="17">[<expr><literal type="number" pos:line="24" pos:column="18">128<pos:position pos:line="24" pos:column="21"/></literal></expr>]<pos:position pos:line="24" pos:column="22"/></index></name></decl>;<pos:position pos:line="24" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><name pos:line="26" pos:column="3">no_proxy<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator><call><name pos:line="26" pos:column="12">curl_getenv<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><literal type="string" pos:line="26" pos:column="24">"no_proxy"<pos:position pos:line="26" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>
  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><operator pos:line="27" pos:column="6">!<pos:position pos:line="27" pos:column="7"/></operator><name pos:line="27" pos:column="7">no_proxy<pos:position pos:line="27" pos:column="15"/></name></expr>)<pos:position pos:line="27" pos:column="16"/></condition><then pos:line="27" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="5">no_proxy<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator><call><name pos:line="28" pos:column="14">curl_getenv<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><literal type="string" pos:line="28" pos:column="26">"NO_PROXY"<pos:position pos:line="28" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt></block></then></if>

  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><operator pos:line="30" pos:column="6">!<pos:position pos:line="30" pos:column="7"/></operator><call><name pos:line="30" pos:column="7">check_noproxy<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name><name pos:line="30" pos:column="21">conn<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">host<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">.<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">name<pos:position pos:line="30" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">no_proxy<pos:position pos:line="30" pos:column="46"/></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="48"/></condition><then pos:line="30" pos:column="48"> <block pos:line="30" pos:column="49">{
    <comment type="block" pos:line="31" pos:column="5">/* It was not listed as without proxy */</comment>
    <decl_stmt><decl><type><specifier pos:line="32" pos:column="5">const<pos:position pos:line="32" pos:column="10"/></specifier> <name pos:line="32" pos:column="11">char<pos:position pos:line="32" pos:column="15"/></name> <modifier pos:line="32" pos:column="16">*<pos:position pos:line="32" pos:column="17"/></modifier></type><name pos:line="32" pos:column="17">protop<pos:position pos:line="32" pos:column="23"/></name> <init pos:line="32" pos:column="24">= <expr><name><name pos:line="32" pos:column="26">conn<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">-&gt;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="32">handler<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">-&gt;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="41">scheme<pos:position pos:line="32" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="32" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">char<pos:position pos:line="33" pos:column="9"/></name> <modifier pos:line="33" pos:column="10">*<pos:position pos:line="33" pos:column="11"/></modifier></type><name pos:line="33" pos:column="11">envp<pos:position pos:line="33" pos:column="15"/></name> <init pos:line="33" pos:column="16">= <expr><name pos:line="33" pos:column="18">proxy_env<pos:position pos:line="33" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">char<pos:position pos:line="34" pos:column="9"/></name> <modifier pos:line="34" pos:column="10">*<pos:position pos:line="34" pos:column="11"/></modifier></type><name pos:line="34" pos:column="11">prox<pos:position pos:line="34" pos:column="15"/></name></decl>;<pos:position pos:line="34" pos:column="16"/></decl_stmt>

    <comment type="block" pos:line="36" pos:column="5">/* Now, build &lt;protocol&gt;_proxy and check for such a one to use */</comment>
    <while pos:line="37" pos:column="5">while<condition pos:line="37" pos:column="10">(<expr><operator pos:line="37" pos:column="11">*<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="12">protop<pos:position pos:line="37" pos:column="18"/></name></expr>)<pos:position pos:line="37" pos:column="19"/></condition>
      <block type="pseudo"><expr_stmt><expr><operator pos:line="38" pos:column="7">*<pos:position pos:line="38" pos:column="8"/></operator><name pos:line="38" pos:column="8">envp<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">++<pos:position pos:line="38" pos:column="14"/></operator> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <operator pos:line="38" pos:column="17">(<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">char<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">)<pos:position pos:line="38" pos:column="23"/></operator><call><name pos:line="38" pos:column="23">tolower<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><operator pos:line="38" pos:column="31">(<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="32">int<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">)<pos:position pos:line="38" pos:column="36"/></operator><operator pos:line="38" pos:column="36">*<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="37">protop<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">++<pos:position pos:line="38" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt></block></while>

    <comment type="block" pos:line="40" pos:column="5">/* append _proxy */</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">strcpy<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name pos:line="41" pos:column="12">envp<pos:position pos:line="41" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="18">"_proxy"<pos:position pos:line="41" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="43" pos:column="5">/* read the protocol proxy: */</comment>
    <expr_stmt><expr><name pos:line="44" pos:column="5">prox<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator><call><name pos:line="44" pos:column="10">curl_getenv<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">proxy_env<pos:position pos:line="44" pos:column="31"/></name></expr></argument>)<pos:position pos:line="44" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/*
     * We don't try the uppercase version of HTTP_PROXY because of
     * security reasons:
     *
     * When curl is used in a webserver application
     * environment (cgi or php), this environment variable can
     * be controlled by the web server user by setting the
     * http header 'Proxy:' to some value.
     *
     * This can cause 'internal' http/ftp requests to be
     * arbitrarily redirected by any external attacker.
     */</comment>
    <if pos:line="58" pos:column="5">if<condition pos:line="58" pos:column="7">(<expr><operator pos:line="58" pos:column="8">!<pos:position pos:line="58" pos:column="9"/></operator><name pos:line="58" pos:column="9">prox<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">&amp;&amp;<pos:position pos:line="58" pos:column="24"/></operator> <operator pos:line="58" pos:column="17">!<pos:position pos:line="58" pos:column="18"/></operator><call><name pos:line="58" pos:column="18">Curl_raw_equal<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><literal type="string" pos:line="58" pos:column="33">"http_proxy"<pos:position pos:line="58" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="47">proxy_env<pos:position pos:line="58" pos:column="56"/></name></expr></argument>)<pos:position pos:line="58" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="58"/></condition><then pos:line="58" pos:column="58"> <block pos:line="58" pos:column="59">{
      <comment type="block" pos:line="59" pos:column="7">/* There was no lowercase variable, try the uppercase version: */</comment>
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">Curl_strntoupper<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">(<argument><expr><name pos:line="60" pos:column="24">proxy_env<pos:position pos:line="60" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="35">proxy_env<pos:position pos:line="60" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="60" pos:column="46">sizeof<argument_list pos:line="60" pos:column="52">(<argument><expr><name pos:line="60" pos:column="53">proxy_env<pos:position pos:line="60" pos:column="62"/></name></expr></argument>)<pos:position pos:line="60" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="60" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name pos:line="61" pos:column="7">prox<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">=<pos:position pos:line="61" pos:column="12"/></operator><call><name pos:line="61" pos:column="12">curl_getenv<pos:position pos:line="61" pos:column="23"/></name><argument_list pos:line="61" pos:column="23">(<argument><expr><name pos:line="61" pos:column="24">proxy_env<pos:position pos:line="61" pos:column="33"/></name></expr></argument>)<pos:position pos:line="61" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <if pos:line="64" pos:column="5">if<condition pos:line="64" pos:column="7">(<expr><name pos:line="64" pos:column="8">prox<pos:position pos:line="64" pos:column="12"/></name></expr>)<pos:position pos:line="64" pos:column="13"/></condition><then pos:line="64" pos:column="13">
      <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="7">proxy<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">=<pos:position pos:line="65" pos:column="14"/></operator> <name pos:line="65" pos:column="15">prox<pos:position pos:line="65" pos:column="19"/></name></expr>;<pos:position pos:line="65" pos:column="20"/></expr_stmt></block></then> <comment type="block" pos:line="65" pos:column="21">/* use this */</comment>
    <else pos:line="66" pos:column="5">else <block pos:line="66" pos:column="10">{
      <expr_stmt><expr><name pos:line="67" pos:column="7">proxy<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">=<pos:position pos:line="67" pos:column="14"/></operator> <call><name pos:line="67" pos:column="15">curl_getenv<pos:position pos:line="67" pos:column="26"/></name><argument_list pos:line="67" pos:column="26">(<argument><expr><literal type="string" pos:line="67" pos:column="27">"all_proxy"<pos:position pos:line="67" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="40"/></expr_stmt> <comment type="block" pos:line="67" pos:column="41">/* default proxy to use */</comment>
      <if pos:line="68" pos:column="7">if<condition pos:line="68" pos:column="9">(<expr><operator pos:line="68" pos:column="10">!<pos:position pos:line="68" pos:column="11"/></operator><name pos:line="68" pos:column="11">proxy<pos:position pos:line="68" pos:column="16"/></name></expr>)<pos:position pos:line="68" pos:column="17"/></condition><then pos:line="68" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="9">proxy<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">=<pos:position pos:line="69" pos:column="15"/></operator><call><name pos:line="69" pos:column="15">curl_getenv<pos:position pos:line="69" pos:column="26"/></name><argument_list pos:line="69" pos:column="26">(<argument><expr><literal type="string" pos:line="69" pos:column="27">"ALL_PROXY"<pos:position pos:line="69" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt></block></then></if>
    }<pos:position pos:line="70" pos:column="6"/></block></else></if>
  }<pos:position pos:line="71" pos:column="4"/></block></then></if> <comment type="block" pos:line="71" pos:column="5">/* if(!check_noproxy(conn-&gt;host.name, no_proxy)) - it wasn't specified
       non-proxy */</comment>
  <if pos:line="73" pos:column="3">if<condition pos:line="73" pos:column="5">(<expr><name pos:line="73" pos:column="6">no_proxy<pos:position pos:line="73" pos:column="14"/></name></expr>)<pos:position pos:line="73" pos:column="15"/></condition><then pos:line="73" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="5">free<pos:position pos:line="74" pos:column="9"/></name><argument_list pos:line="74" pos:column="9">(<argument><expr><name pos:line="74" pos:column="10">no_proxy<pos:position pos:line="74" pos:column="18"/></name></expr></argument>)<pos:position pos:line="74" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="20"/></expr_stmt></block></then></if>

<cpp:else pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">else<pos:position pos:line="76" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="76" pos:column="7">/* !CURL_DISABLE_HTTP */</comment>

  <expr_stmt><expr><operator pos:line="78" pos:column="3">(<pos:position pos:line="78" pos:column="4"/></operator><name pos:line="78" pos:column="4">void<pos:position pos:line="78" pos:column="8"/></name><operator pos:line="78" pos:column="8">)<pos:position pos:line="78" pos:column="9"/></operator><name pos:line="78" pos:column="9">conn<pos:position pos:line="78" pos:column="13"/></name></expr>;<pos:position pos:line="78" pos:column="14"/></expr_stmt>
<cpp:endif pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">endif<pos:position pos:line="79" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="79" pos:column="8">/* CURL_DISABLE_HTTP */</comment>

  <return pos:line="81" pos:column="3">return <expr><name pos:line="81" pos:column="10">proxy<pos:position pos:line="81" pos:column="15"/></name></expr>;<pos:position pos:line="81" pos:column="16"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

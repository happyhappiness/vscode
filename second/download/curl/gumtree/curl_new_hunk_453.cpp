, stdout);
 fputs(
"              server may require a POST to remain a POST after  such  a  redi-\n"
"              rection. This option is meaningful only when using -L/--location\n"
"              (Added in 7.19.1)\n"
"\n"
"       --proto <protocols>\n"
"              Tells  curl  to  use  the  listed  protocols  for  its   initial\n"
"              retrieval. Protocols are evaluated left to right, are comma sep-\n"
"              arated, and are each a protocol name or 'all',  optionally  pre-\n"
, stdout);
 fputs(
"              fixed by zero or more modifiers. Available modifiers are:\n"
"\n"
"              +  Permit this protocol in addition to protocols already permit-\n"
"                 ted (this is the default if no modifier is used).\n"
"\n"
"              -  Deny this protocol, removing it from the  list  of  protocols\n"
"                 already permitted.\n"
"\n"
"              =  Permit  only this protocol (ignoring the list already permit-\n"
"                 ted), though subject  to  later  modification  by  subsequent\n"
, stdout);
 fputs(
"                 entries in the comma separated list.\n"
"\n"
"              For example:\n"
"\n"
"              --proto -ftps  uses the default protocols, but disables ftps\n"
"\n"
"              --proto -all,https,+http\n"
"                             only enables http and https\n"
"\n"
"              --proto =http,https\n"
"                             also only enables http and https\n"
"\n"
"              Unknown  protocols  produce  a  warning.  This allows scripts to\n"
, stdout);
 fputs(
"              safely rely on being able to disable potentially dangerous  pro-\n"
"              tocols,  without  relying  upon  support for that protocol being\n"
"              built into curl to avoid an error.\n"
"\n"
"              This option can be used multiple times, in which case the effect\n"
"              is  the same as concatenating the protocols into one instance of\n"
"              the option.\n"
"\n"
"              (Added in 7.20.2)\n"
"\n"
"       --proto-redir <protocols>\n"
, stdout);
 fputs(
"              Tells curl to use the listed protocols  after  a  redirect.  See\n"
"              --proto for how protocols are represented.\n"
"\n"
"              (Added in 7.20.2)\n"
"\n"
"       --proxy-anyauth\n"
"              Tells  curl to pick a suitable authentication method when commu-\n"
"              nicating with  the  given  proxy.  This  might  cause  an  extra\n"
"              request/response round-trip. (Added in 7.13.2)\n"
"\n"
"       --proxy-basic\n"
, stdout);
 fputs(
"              Tells  curl  to use HTTP Basic authentication when communicating\n"
"              with the given proxy. Use --basic for enabling HTTP Basic with a\n"
"              remote  host.  Basic  is  the default authentication method curl\n"
"              uses with proxies.\n"
"\n"
"       --proxy-digest\n"
"              Tells curl to use HTTP Digest authentication when  communicating\n"
"              with the given proxy. Use --digest for enabling HTTP Digest with\n"
"              a remote host.\n"
"\n"
, stdout);
 fputs(
"       --proxy-negotiate\n"
"              Tells curl to use HTTP Negotiate authentication when communicat-\n"
"              ing  with  the  given  proxy.  Use --negotiate for enabling HTTP\n"
"              Negotiate with a remote host. (Added in 7.17.1)\n"
"\n"
"       --proxy-ntlm\n"
"              Tells curl to use HTTP NTLM  authentication  when  communicating\n"
"              with the given proxy. Use --ntlm for enabling NTLM with a remote\n"
"              host.\n"
"\n"
"       --proxy1.0 <proxyhost[:port]>\n"
, stdout);
 fputs(
"              Use the specified HTTP 1.0 proxy. If  the  port  number  is  not\n"
"              specified, it is assumed at port 1080.\n"
"\n"
"              The  only  difference  between  this  and  the HTTP proxy option\n"
"              (-x/--proxy), is that attempts to use CONNECT through the  proxy\n"
"              will  specify  an  HTTP 1.0 protocol instead of the default HTTP\n"
"              1.1.\n"
"\n"
"       -p/--proxytunnel\n"
"              When an HTTP proxy is used (-x/--proxy), this option will  cause\n"
, stdout);
 fputs(
"              non-HTTP  protocols  to  attempt  to  tunnel  through  the proxy\n"
"              instead of merely using it to do HTTP-like operations. The  tun-\n"
"              nel  approach  is  made  with the HTTP proxy CONNECT request and\n"
"              requires that the proxy allows direct connect to the remote port\n"
"              number curl wants to tunnel through to.\n"
"\n"
"       --pubkey <key>\n"
"              (SSH)  Public  key  file name. Allows you to provide your public\n"
, stdout);
 fputs(
"              key in this separate file.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       -P/--ftp-port <address>\n"
"              (FTP) Reverses the default initiator/listener  roles  when  con-\n"
"              necting  with  FTP.  This  switch makes curl use active mode. In\n"
"              practice, curl then tells the server  to  connect  back  to  the\n"
"              client's specified address and port, while passive mode asks the\n"
, stdout);
 fputs(
"              server to setup an IP address and port for  it  to  connect  to.\n"
"              <address> should be one of:\n"
"\n"
"              interface\n"
"                     i.e  \"eth0\"  to  specify which interface's IP address you\n"
"                     want to use (Unix only)\n"
"\n"
"              IP address\n"
"                     i.e \"192.168.10.1\" to specify the exact IP address\n"
"\n"
"              host name\n"
"                     i.e \"my.host.domain\" to specify the machine\n"
"\n"
, stdout);
 fputs(
"              -      make curl pick the same IP address that is  already  used\n"
"                     for the control connection\n"
"\n"
"       If  this  option is used several times, the last one will be used. Dis-\n"
"       able the use of PORT with --ftp-pasv. Disable the attempt  to  use  the\n"
"       EPRT  command  instead  of PORT by using --disable-eprt. EPRT is really\n"
"       PORT++.\n"
"\n"
"       Starting in 7.19.5, you can append \":[start]-[end]\" to the right of the\n"
, stdout);
 fputs(
"       address,  to tell curl what TCP port range to use. That means you spec-\n"
"       ify a port range, from a lower to a  higher  number.  A  single  number\n"
"       works  as well, but do note that it increases the risk of failure since\n"
"       the port may not be available.\n"
"\n"
"       -q     If used as the first parameter on the command line,  the  curlrc\n"
"              config  file  will not be read and used. See the -K/--config for\n"
"              details on the default config file search path.\n"
"\n"
, stdout);
 fputs(
"       -Q/--quote <command>\n"
"              (FTP/SFTP) Send an arbitrary command to the remote FTP  or  SFTP\n"
"              server.  Quote commands are sent BEFORE the transfer takes place\n"
"              (just after the initial PWD command in an FTP  transfer,  to  be\n"
"              exact). To make commands take place after a successful transfer,\n"
"              prefix them with a dash '-'.  To make  commands  be  sent  after\n"
, stdout);
 fputs(
"              libcurl  has  changed  the  working  directory,  just before the\n"
"              transfer command(s), prefix the command with a '+' (this is only\n"
"              supported  for  FTP). You may specify any number of commands. If\n"
"              the server returns failure for one of the commands,  the  entire\n"
"              operation  will  be aborted. You must send syntactically correct\n"
"              FTP commands as RFC959 defines to FTP servers,  or  one  of  the\n"
, stdout);
 fputs(
"              commands  listed below to SFTP servers.  This option can be used\n"
"              multiple times.\n"
"\n"
"              SFTP is a binary protocol. Unlike for  FTP,  libcurl  interprets\n"
"              SFTP  quote commands before sending them to the server.  Follow-\n"
"              ing is the list of all supported SFTP quote commands:\n"
"\n"
"              chgrp group file\n"
"                     The chgrp command sets the group ID of the file named  by\n"
, stdout);
 fputs(
"                     the  file  operand to the group ID specified by the group\n"
"                     operand. The group operand is a decimal integer group ID.\n"
"\n"
"              chmod mode file\n"
"                     The chmod command modifies the  file  mode  bits  of  the\n"
"                     specified file. The mode operand is an octal integer mode\n"
"                     number.\n"
"\n"
"              chown user file\n"
"                     The chown command sets the owner of the file named by the\n"
, stdout);
 fputs(
"                     file  operand  to the user ID specified by the user oper-\n"
"                     and. The user operand is a decimal integer user ID.\n"
"\n"
"              ln source_file target_file\n"
"                     The ln and symlink commands create a symbolic link at the\n"
"                     target_file  location  pointing  to the source_file loca-\n"
"                     tion.\n"
"\n"
"              mkdir directory_name\n"
"                     The mkdir command creates  the  directory  named  by  the\n"
, stdout);
 fputs(
"                     directory_name operand.\n"
"\n"
"              pwd    The pwd command returns the absolute pathname of the cur-\n"
"                     rent working directory.\n"
"\n"
"              rename source target\n"
"                     The rename command renames the file or directory named by\n"
"                     the  source  operand to the destination path named by the\n"
"                     target operand.\n"
"\n"
"              rm file\n"
, stdout);
 fputs(
"                     The rm command removes the file specified by the file op-\n"
"                     erand.\n"
"\n"
"              rmdir directory\n"
"                     The  rmdir  command removes the directory entry specified\n"
"                     by the directory operand, provided it is empty.\n"
"\n"
"              symlink source_file target_file\n"
"                     See ln.\n"
"\n"
"       --random-file <file>\n"
"              (SSL) Specify the path name to file containing what will be con-\n"
, stdout);
 fputs(
"              sidered  as  random  data.  The  data is used to seed the random\n"
"              engine for SSL connections.  See also the --egd-file option.\n"
"\n"
"       -r/--range <range>\n"
"              (HTTP/FTP/SFTP/FILE) Retrieve a byte range (i.e a partial  docu-\n"
"              ment)  from  a  HTTP/1.1,  FTP  or  SFTP server or a local FILE.\n"
"              Ranges can be specified in a number of ways.\n"
"\n"
"              0-499     specifies the first 500 bytes\n"
"\n"
, stdout);
 fputs(

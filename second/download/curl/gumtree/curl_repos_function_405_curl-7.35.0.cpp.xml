<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_405_curl-7.35.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">easy<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">NULL<pos:position pos:line="3" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLM<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">multi<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">NULL<pos:position pos:line="4" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">res<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">running<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">msgs_left<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLMsg<pos:position pos:line="8" pos:column="10"/></name> <modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">msg<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">FILE<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">upload<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><name pos:line="9" pos:column="18">NULL<pos:position pos:line="9" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">error<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">start_test_timing<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">()<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">upload<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">fopen<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">libtest_arg3<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="32">"rb"<pos:position pos:line="14" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">upload<pos:position pos:line="15" pos:column="13"/></name></expr>)<pos:position pos:line="15" pos:column="14"/></condition><then pos:line="15" pos:column="14"> <block pos:line="15" pos:column="15">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">error<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">ERRNO<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">fprintf<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">stderr<pos:position pos:line="17" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="21">"fopen() failed with error: %d (%s)\n"<pos:position pos:line="17" pos:column="59"/></literal></expr></argument>,
            <argument><expr><name pos:line="18" pos:column="13">error<pos:position pos:line="18" pos:column="18"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="20">strerror<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">error<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">fprintf<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">stderr<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="21">"Error opening file: (%s)\n"<pos:position pos:line="19" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="51">libtest_arg3<pos:position pos:line="19" pos:column="63"/></name></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">TEST_ERR_FOPEN<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">res_global_init<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">CURL_GLOBAL_ALL<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><name pos:line="24" pos:column="6">res<pos:position pos:line="24" pos:column="9"/></name></expr>)<pos:position pos:line="24" pos:column="10"/></condition><then pos:line="24" pos:column="10"> <block pos:line="24" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">fclose<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">upload<pos:position pos:line="25" pos:column="18"/></name></expr></argument>)<pos:position pos:line="25" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">res<pos:position pos:line="26" pos:column="15"/></name></expr>;<pos:position pos:line="26" pos:column="16"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="29" pos:column="3">easy_init<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name pos:line="29" pos:column="13">easy<pos:position pos:line="29" pos:column="17"/></name></expr></argument>)<pos:position pos:line="29" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="31" pos:column="3">/* go verbose */</comment>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">easy_setopt<pos:position pos:line="32" pos:column="14"/></name><argument_list pos:line="32" pos:column="14">(<argument><expr><name pos:line="32" pos:column="15">easy<pos:position pos:line="32" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="21">CURLOPT_VERBOSE<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="38">1L<pos:position pos:line="32" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>

  <comment type="block" pos:line="34" pos:column="3">/* specify target */</comment>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">easy_setopt<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">easy<pos:position pos:line="35" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="21">CURLOPT_URL<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="34">URL<pos:position pos:line="35" pos:column="37"/></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>

  <comment type="block" pos:line="37" pos:column="3">/* enable uploading */</comment>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">easy_setopt<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><name pos:line="38" pos:column="15">easy<pos:position pos:line="38" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="21">CURLOPT_UPLOAD<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="37">1L<pos:position pos:line="38" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="40" pos:column="3">/* data pointer for the file read function */</comment>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">easy_setopt<pos:position pos:line="41" pos:column="14"/></name><argument_list pos:line="41" pos:column="14">(<argument><expr><name pos:line="41" pos:column="15">easy<pos:position pos:line="41" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="21">CURLOPT_READDATA<pos:position pos:line="41" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="39">upload<pos:position pos:line="41" pos:column="45"/></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt>

  <comment type="block" pos:line="43" pos:column="3">/* use active mode FTP */</comment>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">easy_setopt<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><name pos:line="44" pos:column="15">easy<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="21">CURLOPT_FTPPORT<pos:position pos:line="44" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="38">"-"<pos:position pos:line="44" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>

  <comment type="block" pos:line="46" pos:column="3">/* server connection timeout */</comment>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">easy_setopt<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><name pos:line="47" pos:column="15">easy<pos:position pos:line="47" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="21">CURLOPT_ACCEPTTIMEOUT_MS<pos:position pos:line="47" pos:column="45"/></name></expr></argument>,
              <argument><expr><call><name pos:line="48" pos:column="15">strtol<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">libtest_arg2<pos:position pos:line="48" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="36">NULL<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="42">10<pos:position pos:line="48" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="45"/></argument_list></call><operator pos:line="48" pos:column="45">*<pos:position pos:line="48" pos:column="46"/></operator><literal type="number" pos:line="48" pos:column="46">1000<pos:position pos:line="48" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="52"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="50" pos:column="3">multi_init<pos:position pos:line="50" pos:column="13"/></name><argument_list pos:line="50" pos:column="13">(<argument><expr><name pos:line="50" pos:column="14">multi<pos:position pos:line="50" pos:column="19"/></name></expr></argument>)<pos:position pos:line="50" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="52" pos:column="3">multi_add_handle<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><name pos:line="52" pos:column="20">multi<pos:position pos:line="52" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="27">easy<pos:position pos:line="52" pos:column="31"/></name></expr></argument>)<pos:position pos:line="52" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>

  <for pos:line="54" pos:column="3">for<control pos:line="54" pos:column="6">(<init pos:line="54" pos:column="7">;<pos:position pos:line="54" pos:column="8"/></init><condition pos:line="54" pos:column="8">;<pos:position pos:line="54" pos:column="9"/></condition><incr/>)<pos:position pos:line="54" pos:column="10"/></control> <block pos:line="54" pos:column="11">{
    <decl_stmt><decl><type><name><name pos:line="55" pos:column="5">struct<pos:position pos:line="55" pos:column="11"/></name> <name pos:line="55" pos:column="12">timeval<pos:position pos:line="55" pos:column="19"/></name></name></type> <name pos:line="55" pos:column="20">interval<pos:position pos:line="55" pos:column="28"/></name></decl>;<pos:position pos:line="55" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="56" pos:column="5">fd_set<pos:position pos:line="56" pos:column="11"/></name></type> <name pos:line="56" pos:column="12">fdread<pos:position pos:line="56" pos:column="18"/></name></decl>;<pos:position pos:line="56" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="57" pos:column="5">fd_set<pos:position pos:line="57" pos:column="11"/></name></type> <name pos:line="57" pos:column="12">fdwrite<pos:position pos:line="57" pos:column="19"/></name></decl>;<pos:position pos:line="57" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="58" pos:column="5">fd_set<pos:position pos:line="58" pos:column="11"/></name></type> <name pos:line="58" pos:column="12">fdexcep<pos:position pos:line="58" pos:column="19"/></name></decl>;<pos:position pos:line="58" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="59" pos:column="5">long<pos:position pos:line="59" pos:column="9"/></name></type> <name pos:line="59" pos:column="10">timeout<pos:position pos:line="59" pos:column="17"/></name> <init pos:line="59" pos:column="18">= <expr><operator pos:line="59" pos:column="20">-<pos:position pos:line="59" pos:column="21"/></operator><literal type="number" pos:line="59" pos:column="21">99<pos:position pos:line="59" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="59" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="60" pos:column="5">int<pos:position pos:line="60" pos:column="8"/></name></type> <name pos:line="60" pos:column="9">maxfd<pos:position pos:line="60" pos:column="14"/></name> <init pos:line="60" pos:column="15">= <expr><operator pos:line="60" pos:column="17">-<pos:position pos:line="60" pos:column="18"/></operator><literal type="number" pos:line="60" pos:column="18">99<pos:position pos:line="60" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="60" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="62" pos:column="5">multi_perform<pos:position pos:line="62" pos:column="18"/></name><argument_list pos:line="62" pos:column="18">(<argument><expr><name pos:line="62" pos:column="19">multi<pos:position pos:line="62" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="26">&amp;<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="27">running<pos:position pos:line="62" pos:column="34"/></name></expr></argument>)<pos:position pos:line="62" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="64" pos:column="5">abort_on_test_timeout<pos:position pos:line="64" pos:column="26"/></name><argument_list pos:line="64" pos:column="26">()<pos:position pos:line="64" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="29"/></expr_stmt>

    <if pos:line="66" pos:column="5">if<condition pos:line="66" pos:column="7">(<expr><operator pos:line="66" pos:column="8">!<pos:position pos:line="66" pos:column="9"/></operator><name pos:line="66" pos:column="9">running<pos:position pos:line="66" pos:column="16"/></name></expr>)<pos:position pos:line="66" pos:column="17"/></condition><then pos:line="66" pos:column="17">
      <block type="pseudo"><break pos:line="67" pos:column="7">break;<pos:position pos:line="67" pos:column="13"/></break></block></then></if> <comment type="block" pos:line="67" pos:column="14">/* done */</comment>

    <expr_stmt><expr><call><name pos:line="69" pos:column="5">FD_ZERO<pos:position pos:line="69" pos:column="12"/></name><argument_list pos:line="69" pos:column="12">(<argument><expr><operator pos:line="69" pos:column="13">&amp;<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="14">fdread<pos:position pos:line="69" pos:column="20"/></name></expr></argument>)<pos:position pos:line="69" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">FD_ZERO<pos:position pos:line="70" pos:column="12"/></name><argument_list pos:line="70" pos:column="12">(<argument><expr><operator pos:line="70" pos:column="13">&amp;<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="14">fdwrite<pos:position pos:line="70" pos:column="21"/></name></expr></argument>)<pos:position pos:line="70" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">FD_ZERO<pos:position pos:line="71" pos:column="12"/></name><argument_list pos:line="71" pos:column="12">(<argument><expr><operator pos:line="71" pos:column="13">&amp;<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="14">fdexcep<pos:position pos:line="71" pos:column="21"/></name></expr></argument>)<pos:position pos:line="71" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">multi_fdset<pos:position pos:line="73" pos:column="16"/></name><argument_list pos:line="73" pos:column="16">(<argument><expr><name pos:line="73" pos:column="17">multi<pos:position pos:line="73" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="24">&amp;<pos:position pos:line="73" pos:column="29"/></operator><name pos:line="73" pos:column="25">fdread<pos:position pos:line="73" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="33">&amp;<pos:position pos:line="73" pos:column="38"/></operator><name pos:line="73" pos:column="34">fdwrite<pos:position pos:line="73" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="43">&amp;<pos:position pos:line="73" pos:column="48"/></operator><name pos:line="73" pos:column="44">fdexcep<pos:position pos:line="73" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="53">&amp;<pos:position pos:line="73" pos:column="58"/></operator><name pos:line="73" pos:column="54">maxfd<pos:position pos:line="73" pos:column="59"/></name></expr></argument>)<pos:position pos:line="73" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="61"/></expr_stmt>

    <comment type="block" pos:line="75" pos:column="5">/* At this point, maxfd is guaranteed to be greater or equal than -1. */</comment>

    <expr_stmt><expr><call><name pos:line="77" pos:column="5">multi_timeout<pos:position pos:line="77" pos:column="18"/></name><argument_list pos:line="77" pos:column="18">(<argument><expr><name pos:line="77" pos:column="19">multi<pos:position pos:line="77" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="26">&amp;<pos:position pos:line="77" pos:column="31"/></operator><name pos:line="77" pos:column="27">timeout<pos:position pos:line="77" pos:column="34"/></name></expr></argument>)<pos:position pos:line="77" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="79" pos:column="5">/* At this point, timeout is guaranteed to be greater or equal than -1. */</comment>

    <if pos:line="81" pos:column="5">if<condition pos:line="81" pos:column="7">(<expr><name pos:line="81" pos:column="8">timeout<pos:position pos:line="81" pos:column="15"/></name> <operator pos:line="81" pos:column="16">!=<pos:position pos:line="81" pos:column="18"/></operator> <operator pos:line="81" pos:column="19">-<pos:position pos:line="81" pos:column="20"/></operator><literal type="number" pos:line="81" pos:column="20">1L<pos:position pos:line="81" pos:column="22"/></literal></expr>)<pos:position pos:line="81" pos:column="23"/></condition><then pos:line="81" pos:column="23"> <block pos:line="81" pos:column="24">{
      <decl_stmt><decl><type><name pos:line="82" pos:column="7">int<pos:position pos:line="82" pos:column="10"/></name></type> <name pos:line="82" pos:column="11">itimeout<pos:position pos:line="82" pos:column="19"/></name> <init pos:line="82" pos:column="20">= <expr><ternary><condition><expr><operator pos:line="82" pos:column="22">(<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="23">timeout<pos:position pos:line="82" pos:column="30"/></name> <operator pos:line="82" pos:column="31">&gt;<pos:position pos:line="82" pos:column="35"/></operator> <operator pos:line="82" pos:column="33">(<pos:position pos:line="82" pos:column="34"/></operator><name pos:line="82" pos:column="34">long<pos:position pos:line="82" pos:column="38"/></name><operator pos:line="82" pos:column="38">)<pos:position pos:line="82" pos:column="39"/></operator><name pos:line="82" pos:column="39">INT_MAX<pos:position pos:line="82" pos:column="46"/></name><operator pos:line="82" pos:column="46">)<pos:position pos:line="82" pos:column="47"/></operator></expr> ?<pos:position pos:line="82" pos:column="49"/></condition><then pos:line="82" pos:column="49"> <expr><name pos:line="82" pos:column="50">INT_MAX<pos:position pos:line="82" pos:column="57"/></name></expr> <pos:position pos:line="82" pos:column="58"/></then><else pos:line="82" pos:column="58">: <expr><operator pos:line="82" pos:column="60">(<pos:position pos:line="82" pos:column="61"/></operator><name pos:line="82" pos:column="61">int<pos:position pos:line="82" pos:column="64"/></name><operator pos:line="82" pos:column="64">)<pos:position pos:line="82" pos:column="65"/></operator><name pos:line="82" pos:column="65">timeout<pos:position pos:line="82" pos:column="72"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="82" pos:column="73"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="83" pos:column="7">interval<pos:position pos:line="83" pos:column="15"/></name><operator pos:line="83" pos:column="15">.<pos:position pos:line="83" pos:column="16"/></operator><name pos:line="83" pos:column="16">tv_sec<pos:position pos:line="83" pos:column="22"/></name></name> <operator pos:line="83" pos:column="23">=<pos:position pos:line="83" pos:column="24"/></operator> <name pos:line="83" pos:column="25">itimeout<pos:position pos:line="83" pos:column="33"/></name><operator pos:line="83" pos:column="33">/<pos:position pos:line="83" pos:column="34"/></operator><literal type="number" pos:line="83" pos:column="34">1000<pos:position pos:line="83" pos:column="38"/></literal></expr>;<pos:position pos:line="83" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="84" pos:column="7">interval<pos:position pos:line="84" pos:column="15"/></name><operator pos:line="84" pos:column="15">.<pos:position pos:line="84" pos:column="16"/></operator><name pos:line="84" pos:column="16">tv_usec<pos:position pos:line="84" pos:column="23"/></name></name> <operator pos:line="84" pos:column="24">=<pos:position pos:line="84" pos:column="25"/></operator> <operator pos:line="84" pos:column="26">(<pos:position pos:line="84" pos:column="27"/></operator><name pos:line="84" pos:column="27">itimeout<pos:position pos:line="84" pos:column="35"/></name><operator pos:line="84" pos:column="35">%<pos:position pos:line="84" pos:column="36"/></operator><literal type="number" pos:line="84" pos:column="36">1000<pos:position pos:line="84" pos:column="40"/></literal><operator pos:line="84" pos:column="40">)<pos:position pos:line="84" pos:column="41"/></operator><operator pos:line="84" pos:column="41">*<pos:position pos:line="84" pos:column="42"/></operator><literal type="number" pos:line="84" pos:column="42">1000<pos:position pos:line="84" pos:column="46"/></literal></expr>;<pos:position pos:line="84" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></then>
    <else pos:line="86" pos:column="5">else <block pos:line="86" pos:column="10">{
      <expr_stmt><expr><name><name pos:line="87" pos:column="7">interval<pos:position pos:line="87" pos:column="15"/></name><operator pos:line="87" pos:column="15">.<pos:position pos:line="87" pos:column="16"/></operator><name pos:line="87" pos:column="16">tv_sec<pos:position pos:line="87" pos:column="22"/></name></name> <operator pos:line="87" pos:column="23">=<pos:position pos:line="87" pos:column="24"/></operator> <literal type="number" pos:line="87" pos:column="25">0<pos:position pos:line="87" pos:column="26"/></literal></expr>;<pos:position pos:line="87" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="88" pos:column="7">interval<pos:position pos:line="88" pos:column="15"/></name><operator pos:line="88" pos:column="15">.<pos:position pos:line="88" pos:column="16"/></operator><name pos:line="88" pos:column="16">tv_usec<pos:position pos:line="88" pos:column="23"/></name></name> <operator pos:line="88" pos:column="24">=<pos:position pos:line="88" pos:column="25"/></operator> <literal type="number" pos:line="88" pos:column="26">100000L<pos:position pos:line="88" pos:column="33"/></literal></expr>;<pos:position pos:line="88" pos:column="34"/></expr_stmt> <comment type="block" pos:line="88" pos:column="35">/* 100 ms */</comment>
    }<pos:position pos:line="89" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="91" pos:column="5">select_test<pos:position pos:line="91" pos:column="16"/></name><argument_list pos:line="91" pos:column="16">(<argument><expr><name pos:line="91" pos:column="17">maxfd<pos:position pos:line="91" pos:column="22"/></name><operator pos:line="91" pos:column="22">+<pos:position pos:line="91" pos:column="23"/></operator><literal type="number" pos:line="91" pos:column="23">1<pos:position pos:line="91" pos:column="24"/></literal></expr></argument>, <argument><expr><operator pos:line="91" pos:column="26">&amp;<pos:position pos:line="91" pos:column="31"/></operator><name pos:line="91" pos:column="27">fdread<pos:position pos:line="91" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="35">&amp;<pos:position pos:line="91" pos:column="40"/></operator><name pos:line="91" pos:column="36">fdwrite<pos:position pos:line="91" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="45">&amp;<pos:position pos:line="91" pos:column="50"/></operator><name pos:line="91" pos:column="46">fdexcep<pos:position pos:line="91" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="55">&amp;<pos:position pos:line="91" pos:column="60"/></operator><name pos:line="91" pos:column="56">interval<pos:position pos:line="91" pos:column="64"/></name></expr></argument>)<pos:position pos:line="91" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="66"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="93" pos:column="5">abort_on_test_timeout<pos:position pos:line="93" pos:column="26"/></name><argument_list pos:line="93" pos:column="26">()<pos:position pos:line="93" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="94" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="96" pos:column="3">msg<pos:position pos:line="96" pos:column="6"/></name> <operator pos:line="96" pos:column="7">=<pos:position pos:line="96" pos:column="8"/></operator> <call><name pos:line="96" pos:column="9">curl_multi_info_read<pos:position pos:line="96" pos:column="29"/></name><argument_list pos:line="96" pos:column="29">(<argument><expr><name pos:line="96" pos:column="30">multi<pos:position pos:line="96" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="37">&amp;<pos:position pos:line="96" pos:column="42"/></operator><name pos:line="96" pos:column="38">msgs_left<pos:position pos:line="96" pos:column="47"/></name></expr></argument>)<pos:position pos:line="96" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="49"/></expr_stmt>
  <if pos:line="97" pos:column="3">if<condition pos:line="97" pos:column="5">(<expr><name pos:line="97" pos:column="6">msg<pos:position pos:line="97" pos:column="9"/></name></expr>)<pos:position pos:line="97" pos:column="10"/></condition><then pos:line="97" pos:column="10">
    <block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="5">res<pos:position pos:line="98" pos:column="8"/></name> <operator pos:line="98" pos:column="9">=<pos:position pos:line="98" pos:column="10"/></operator> <name><name pos:line="98" pos:column="11">msg<pos:position pos:line="98" pos:column="14"/></name><operator pos:line="98" pos:column="14">-&gt;<pos:position pos:line="98" pos:column="19"/></operator><name pos:line="98" pos:column="16">data<pos:position pos:line="98" pos:column="20"/></name><operator pos:line="98" pos:column="20">.<pos:position pos:line="98" pos:column="21"/></operator><name pos:line="98" pos:column="21">result<pos:position pos:line="98" pos:column="27"/></name></name></expr>;<pos:position pos:line="98" pos:column="28"/></expr_stmt></block></then></if>

<label><name pos:line="100" pos:column="1">test_cleanup<pos:position pos:line="100" pos:column="13"/></name>:<pos:position pos:line="100" pos:column="14"/></label>

  <comment type="block" pos:line="102" pos:column="3">/* undocumented cleanup sequence - type UA */</comment>

  <expr_stmt><expr><call><name pos:line="104" pos:column="3">curl_multi_cleanup<pos:position pos:line="104" pos:column="21"/></name><argument_list pos:line="104" pos:column="21">(<argument><expr><name pos:line="104" pos:column="22">multi<pos:position pos:line="104" pos:column="27"/></name></expr></argument>)<pos:position pos:line="104" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="105" pos:column="3">curl_easy_cleanup<pos:position pos:line="105" pos:column="20"/></name><argument_list pos:line="105" pos:column="20">(<argument><expr><name pos:line="105" pos:column="21">easy<pos:position pos:line="105" pos:column="25"/></name></expr></argument>)<pos:position pos:line="105" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="106" pos:column="3">curl_global_cleanup<pos:position pos:line="106" pos:column="22"/></name><argument_list pos:line="106" pos:column="22">()<pos:position pos:line="106" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="108" pos:column="3">/* close the local file */</comment>
  <expr_stmt><expr><call><name pos:line="109" pos:column="3">fclose<pos:position pos:line="109" pos:column="9"/></name><argument_list pos:line="109" pos:column="9">(<argument><expr><name pos:line="109" pos:column="10">upload<pos:position pos:line="109" pos:column="16"/></name></expr></argument>)<pos:position pos:line="109" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="18"/></expr_stmt>

  <return pos:line="111" pos:column="3">return <expr><name pos:line="111" pos:column="10">res<pos:position pos:line="111" pos:column="13"/></name></expr>;<pos:position pos:line="111" pos:column="14"/></return>
}<pos:position pos:line="112" pos:column="2"/></block></function></unit>

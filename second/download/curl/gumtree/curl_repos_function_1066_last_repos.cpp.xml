<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1066_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">strcpy_url<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">output<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">url<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">bool<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">relative<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* we must add this with whitespace-replacing */</comment>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">bool<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">left<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">TRUE<pos:position pos:line="4" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">char<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">iptr<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">optr<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><name pos:line="6" pos:column="16">output<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">char<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">host_sep<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><operator pos:line="7" pos:column="35">(<pos:position pos:line="7" pos:column="36"/></operator><specifier pos:line="7" pos:column="36">const<pos:position pos:line="7" pos:column="41"/></specifier> <name pos:line="7" pos:column="42">unsigned<pos:position pos:line="7" pos:column="50"/></name> <name pos:line="7" pos:column="51">char<pos:position pos:line="7" pos:column="55"/></name> <operator pos:line="7" pos:column="56">*<pos:position pos:line="7" pos:column="57"/></operator><operator pos:line="7" pos:column="57">)<pos:position pos:line="7" pos:column="58"/></operator> <name pos:line="7" pos:column="59">url<pos:position pos:line="7" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="63"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">!<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">relative<pos:position pos:line="9" pos:column="15"/></name></expr>)<pos:position pos:line="9" pos:column="16"/></condition><then pos:line="9" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">host_sep<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><specifier pos:line="10" pos:column="17">const<pos:position pos:line="10" pos:column="22"/></specifier> <name pos:line="10" pos:column="23">unsigned<pos:position pos:line="10" pos:column="31"/></name> <name pos:line="10" pos:column="32">char<pos:position pos:line="10" pos:column="36"/></name> <operator pos:line="10" pos:column="37">*<pos:position pos:line="10" pos:column="38"/></operator><operator pos:line="10" pos:column="38">)<pos:position pos:line="10" pos:column="39"/></operator> <call><name pos:line="10" pos:column="40">find_host_sep<pos:position pos:line="10" pos:column="53"/></name><argument_list pos:line="10" pos:column="53">(<argument><expr><name pos:line="10" pos:column="54">url<pos:position pos:line="10" pos:column="57"/></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt></block></then></if>

  <for pos:line="12" pos:column="3">for<control pos:line="12" pos:column="6">(<init><expr><name pos:line="12" pos:column="7">iptr<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <operator pos:line="12" pos:column="14">(<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">unsigned<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">char<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">*<pos:position pos:line="12" pos:column="30"/></operator><operator pos:line="12" pos:column="30">)<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">url<pos:position pos:line="12" pos:column="34"/></name></expr>;<pos:position pos:line="12" pos:column="35"/></init>    <comment type="block" pos:line="12" pos:column="39">/* read from here */</comment>
      <condition><expr><operator pos:line="13" pos:column="7">*<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">iptr<pos:position pos:line="13" pos:column="12"/></name></expr>;<pos:position pos:line="13" pos:column="13"/></condition>         <comment type="block" pos:line="13" pos:column="22">/* until zero byte */</comment>
      <incr><expr><name pos:line="14" pos:column="7">iptr<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">++<pos:position pos:line="14" pos:column="13"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="14"/></control> <block pos:line="14" pos:column="15">{

    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><name pos:line="16" pos:column="8">iptr<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">&lt;<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="15">host_sep<pos:position pos:line="16" pos:column="23"/></name></expr>)<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24"> <block pos:line="16" pos:column="25">{
      <expr_stmt><expr><operator pos:line="17" pos:column="7">*<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">optr<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">++<pos:position pos:line="17" pos:column="14"/></operator> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <operator pos:line="17" pos:column="17">*<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">iptr<pos:position pos:line="17" pos:column="22"/></name></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
      <continue pos:line="18" pos:column="7">continue;<pos:position pos:line="18" pos:column="16"/></continue>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <switch pos:line="21" pos:column="5">switch<condition pos:line="21" pos:column="11">(<expr><operator pos:line="21" pos:column="12">*<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">iptr<pos:position pos:line="21" pos:column="17"/></name></expr>)<pos:position pos:line="21" pos:column="18"/></condition> <block pos:line="21" pos:column="19">{
    <case pos:line="22" pos:column="5">case <expr><literal type="char" pos:line="22" pos:column="10">'?'<pos:position pos:line="22" pos:column="13"/></literal></expr>:<pos:position pos:line="22" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="23" pos:column="7">left<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <name pos:line="23" pos:column="14">FALSE<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
      <comment type="block" pos:line="24" pos:column="7">/* fall through */</comment>
    <default pos:line="25" pos:column="5">default:<pos:position pos:line="25" pos:column="13"/></default>
      <if pos:line="26" pos:column="7">if<condition pos:line="26" pos:column="9">(<expr><operator pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">iptr<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">&gt;=<pos:position pos:line="26" pos:column="21"/></operator> <literal type="number" pos:line="26" pos:column="19">0x80<pos:position pos:line="26" pos:column="23"/></literal></expr>)<pos:position pos:line="26" pos:column="24"/></condition><then pos:line="26" pos:column="24"> <block pos:line="26" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">snprintf<pos:position pos:line="27" pos:column="17"/></name><argument_list pos:line="27" pos:column="17">(<argument><expr><name pos:line="27" pos:column="18">optr<pos:position pos:line="27" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="24">4<pos:position pos:line="27" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="27">"%%%02x"<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="37">*<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">iptr<pos:position pos:line="27" pos:column="42"/></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">optr<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">+=<pos:position pos:line="28" pos:column="16"/></operator> <literal type="number" pos:line="28" pos:column="17">3<pos:position pos:line="28" pos:column="18"/></literal></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
      }<pos:position pos:line="29" pos:column="8"/></block></then>
      <else pos:line="30" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><operator pos:line="31" pos:column="9">*<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">optr<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">++<pos:position pos:line="31" pos:column="16"/></operator><operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator><operator pos:line="31" pos:column="17">*<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">iptr<pos:position pos:line="31" pos:column="22"/></name></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt></block></else></if>
      <break pos:line="32" pos:column="7">break;<pos:position pos:line="32" pos:column="13"/></break>
    <case pos:line="33" pos:column="5">case <expr><literal type="char" pos:line="33" pos:column="10">' '<pos:position pos:line="33" pos:column="13"/></literal></expr>:<pos:position pos:line="33" pos:column="14"/></case>
      <if pos:line="34" pos:column="7">if<condition pos:line="34" pos:column="9">(<expr><name pos:line="34" pos:column="10">left<pos:position pos:line="34" pos:column="14"/></name></expr>)<pos:position pos:line="34" pos:column="15"/></condition><then pos:line="34" pos:column="15"> <block pos:line="34" pos:column="16">{
        <expr_stmt><expr><operator pos:line="35" pos:column="9">*<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">optr<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">++<pos:position pos:line="35" pos:column="16"/></operator><operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator><literal type="char" pos:line="35" pos:column="17">'%'<pos:position pos:line="35" pos:column="20"/></literal></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt> <comment type="block" pos:line="35" pos:column="22">/* add a '%' */</comment>
        <expr_stmt><expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">optr<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">++<pos:position pos:line="36" pos:column="16"/></operator><operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator><literal type="char" pos:line="36" pos:column="17">'2'<pos:position pos:line="36" pos:column="20"/></literal></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt> <comment type="block" pos:line="36" pos:column="22">/* add a '2' */</comment>
        <expr_stmt><expr><operator pos:line="37" pos:column="9">*<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">optr<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">++<pos:position pos:line="37" pos:column="16"/></operator><operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator><literal type="char" pos:line="37" pos:column="17">'0'<pos:position pos:line="37" pos:column="20"/></literal></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt> <comment type="block" pos:line="37" pos:column="22">/* add a '0' */</comment>
      }<pos:position pos:line="38" pos:column="8"/></block></then>
      <else pos:line="39" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><operator pos:line="40" pos:column="9">*<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">optr<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">++<pos:position pos:line="40" pos:column="16"/></operator><operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator><literal type="char" pos:line="40" pos:column="17">'+'<pos:position pos:line="40" pos:column="20"/></literal></expr>;<pos:position pos:line="40" pos:column="21"/></expr_stmt></block></else></if> <comment type="block" pos:line="40" pos:column="22">/* add a '+' here */</comment>
      <break pos:line="41" pos:column="7">break;<pos:position pos:line="41" pos:column="13"/></break>
    }<pos:position pos:line="42" pos:column="6"/></block></switch>
  }<pos:position pos:line="43" pos:column="4"/></block></for>
  <expr_stmt><expr><operator pos:line="44" pos:column="3">*<pos:position pos:line="44" pos:column="4"/></operator><name pos:line="44" pos:column="4">optr<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <literal type="number" pos:line="44" pos:column="11">0<pos:position pos:line="44" pos:column="12"/></literal></expr>;<pos:position pos:line="44" pos:column="13"/></expr_stmt> <comment type="block" pos:line="44" pos:column="14">/* zero terminate output buffer */</comment>

}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

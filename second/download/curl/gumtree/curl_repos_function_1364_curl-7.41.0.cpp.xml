<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1364_curl-7.41.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_sspi_global_init<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">bool<pos:position pos:line="3" pos:column="7"/></name></type> <name pos:line="3" pos:column="8">securityDll<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">FALSE<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">INITSECURITYINTERFACE_FN<pos:position pos:line="4" pos:column="27"/></name></type> <name pos:line="4" pos:column="28">pInitSecurityInterface<pos:position pos:line="4" pos:column="50"/></name></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* If security interface is not yet initialized try to do this */</comment>
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><name pos:line="7" pos:column="7">s_hSecDll<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17"> <block pos:line="7" pos:column="18">{
    <comment type="block" pos:line="8" pos:column="5">/* Security Service Provider Interface (SSPI) functions are located in
     * security.dll on WinNT 4.0 and in secur32.dll on Win9x. Win2K and XP
     * have both these DLLs (security.dll forwards calls to secur32.dll) */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">DWORD<pos:position pos:line="11" pos:column="10"/></name></type> <name pos:line="11" pos:column="11">majorVersion<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><literal type="number" pos:line="11" pos:column="26">4<pos:position pos:line="11" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">DWORD<pos:position pos:line="12" pos:column="10"/></name></type> <name pos:line="12" pos:column="11">platformId<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><name pos:line="12" pos:column="24">VER_PLATFORM_WIN32_NT<pos:position pos:line="12" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="46"/></decl_stmt>

<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><operator pos:line="14" pos:column="5">!<pos:position pos:line="14" pos:column="6"/></operator><call><name pos:line="14" pos:column="6">defined<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><name pos:line="14" pos:column="14">_WIN32_WINNT<pos:position pos:line="14" pos:column="26"/></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call> <operator pos:line="14" pos:column="28">||<pos:position pos:line="14" pos:column="30"/></operator> <operator pos:line="14" pos:column="31">!<pos:position pos:line="14" pos:column="32"/></operator><call><name pos:line="14" pos:column="32">defined<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">_WIN32_WINNT_WIN2K<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call> <operator pos:line="14" pos:column="60">||<pos:position pos:line="14" pos:column="62"/></operator> \
    <operator pos:line="15" pos:column="5">(<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">_WIN32_WINNT<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">&lt;<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="21">_WIN32_WINNT_WIN2K<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">)<pos:position pos:line="15" pos:column="40"/></operator></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">OSVERSIONINFO<pos:position pos:line="16" pos:column="18"/></name></type> <name pos:line="16" pos:column="19">osver<pos:position pos:line="16" pos:column="24"/></name></decl>;<pos:position pos:line="16" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">memset<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><operator pos:line="18" pos:column="12">&amp;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="13">osver<pos:position pos:line="18" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="20">0<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="23">sizeof<argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">osver<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">osver<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">.<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">dwOSVersionInfoSize<pos:position pos:line="19" pos:column="30"/></name></name> <operator pos:line="19" pos:column="31">=<pos:position pos:line="19" pos:column="32"/></operator> <sizeof pos:line="19" pos:column="33">sizeof<argument_list pos:line="19" pos:column="39">(<argument><expr><name pos:line="19" pos:column="40">osver<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></sizeof></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* Find out Windows version */</comment>
    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><operator pos:line="22" pos:column="8">!<pos:position pos:line="22" pos:column="9"/></operator><call><name pos:line="22" pos:column="9">GetVersionEx<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><operator pos:line="22" pos:column="22">&amp;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="23">osver<pos:position pos:line="22" pos:column="28"/></name></expr></argument>)<pos:position pos:line="22" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="30"/></condition><then pos:line="22" pos:column="30">
      <block type="pseudo"><return pos:line="23" pos:column="7">return <expr><name pos:line="23" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="23" pos:column="31"/></name></expr>;<pos:position pos:line="23" pos:column="32"/></return></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* Verify the major version number == 4 and platform id == WIN_NT */</comment>
    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name><name pos:line="26" pos:column="8">osver<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">.<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">dwMajorVersion<pos:position pos:line="26" pos:column="28"/></name></name> <operator pos:line="26" pos:column="29">==<pos:position pos:line="26" pos:column="31"/></operator> <name pos:line="26" pos:column="32">majorVersion<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">&amp;&amp;<pos:position pos:line="26" pos:column="55"/></operator>
       <name><name pos:line="27" pos:column="8">osver<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">.<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">dwPlatformId<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">==<pos:position pos:line="27" pos:column="29"/></operator> <name pos:line="27" pos:column="30">platformId<pos:position pos:line="27" pos:column="40"/></name></expr>)<pos:position pos:line="27" pos:column="41"/></condition><then pos:line="27" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">securityDll<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">TRUE<pos:position pos:line="28" pos:column="25"/></name></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt></block></then></if>
<cpp:else pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">else<pos:position pos:line="29" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">ULONGLONG<pos:position pos:line="30" pos:column="14"/></name></type> <name pos:line="30" pos:column="15">majorVersionMask<pos:position pos:line="30" pos:column="31"/></name></decl>;<pos:position pos:line="30" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">ULONGLONG<pos:position pos:line="31" pos:column="14"/></name></type> <name pos:line="31" pos:column="15">platformIdMask<pos:position pos:line="31" pos:column="29"/></name></decl>;<pos:position pos:line="31" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">OSVERSIONINFOEX<pos:position pos:line="32" pos:column="20"/></name></type> <name pos:line="32" pos:column="21">osver<pos:position pos:line="32" pos:column="26"/></name></decl>;<pos:position pos:line="32" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">memset<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><operator pos:line="34" pos:column="12">&amp;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="13">osver<pos:position pos:line="34" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="20">0<pos:position pos:line="34" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="23">sizeof<argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">osver<pos:position pos:line="34" pos:column="35"/></name></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">osver<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">.<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">dwOSVersionInfoSize<pos:position pos:line="35" pos:column="30"/></name></name> <operator pos:line="35" pos:column="31">=<pos:position pos:line="35" pos:column="32"/></operator> <sizeof pos:line="35" pos:column="33">sizeof<argument_list pos:line="35" pos:column="39">(<argument><expr><name pos:line="35" pos:column="40">osver<pos:position pos:line="35" pos:column="45"/></name></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></sizeof></expr>;<pos:position pos:line="35" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">osver<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">.<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">dwMajorVersion<pos:position pos:line="36" pos:column="25"/></name></name> <operator pos:line="36" pos:column="26">=<pos:position pos:line="36" pos:column="27"/></operator> <name pos:line="36" pos:column="28">majorVersion<pos:position pos:line="36" pos:column="40"/></name></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">osver<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">.<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="11">dwPlatformId<pos:position pos:line="37" pos:column="23"/></name></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <name pos:line="37" pos:column="26">platformId<pos:position pos:line="37" pos:column="36"/></name></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">majorVersionMask<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">=<pos:position pos:line="38" pos:column="23"/></operator> <call><name pos:line="38" pos:column="24">VerSetConditionMask<pos:position pos:line="38" pos:column="43"/></name><argument_list pos:line="38" pos:column="43">(<argument><expr><literal type="number" pos:line="38" pos:column="44">0<pos:position pos:line="38" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="47">VER_MAJORVERSION<pos:position pos:line="38" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="65">VER_EQUAL<pos:position pos:line="38" pos:column="74"/></name></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">platformIdMask<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <call><name pos:line="39" pos:column="22">VerSetConditionMask<pos:position pos:line="39" pos:column="41"/></name><argument_list pos:line="39" pos:column="41">(<argument><expr><literal type="number" pos:line="39" pos:column="42">0<pos:position pos:line="39" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="45">VER_PLATFORMID<pos:position pos:line="39" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="61">VER_EQUAL<pos:position pos:line="39" pos:column="70"/></name></expr></argument>)<pos:position pos:line="39" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="72"/></expr_stmt>

    <comment type="block" pos:line="41" pos:column="5">/* Verify the major version number == 4 and platform id == WIN_NT */</comment>
    <if pos:line="42" pos:column="5">if<condition pos:line="42" pos:column="7">(<expr><call><name pos:line="42" pos:column="8">VerifyVersionInfo<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><operator pos:line="42" pos:column="26">&amp;<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="27">osver<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="34">VER_MAJORVERSION<pos:position pos:line="42" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="52">majorVersionMask<pos:position pos:line="42" pos:column="68"/></name></expr></argument>)<pos:position pos:line="42" pos:column="69"/></argument_list></call> <operator pos:line="42" pos:column="70">&amp;&amp;<pos:position pos:line="42" pos:column="80"/></operator>
       <call><name pos:line="43" pos:column="8">VerifyVersionInfo<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><operator pos:line="43" pos:column="26">&amp;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="27">osver<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="34">VER_PLATFORMID<pos:position pos:line="43" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="50">platformIdMask<pos:position pos:line="43" pos:column="64"/></name></expr></argument>)<pos:position pos:line="43" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="66"/></condition><then pos:line="43" pos:column="66">
      <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="7">securityDll<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <name pos:line="44" pos:column="21">TRUE<pos:position pos:line="44" pos:column="25"/></name></expr>;<pos:position pos:line="44" pos:column="26"/></expr_stmt></block></then></if>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="47" pos:column="5">/* Load SSPI dll into the address space of the calling process */</comment>
    <if pos:line="48" pos:column="5">if<condition pos:line="48" pos:column="7">(<expr><name pos:line="48" pos:column="8">securityDll<pos:position pos:line="48" pos:column="19"/></name></expr>)<pos:position pos:line="48" pos:column="20"/></condition><then pos:line="48" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="7">s_hSecDll<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <call><name pos:line="49" pos:column="19">LoadLibrary<pos:position pos:line="49" pos:column="30"/></name><argument_list pos:line="49" pos:column="30">(<argument><expr><call><name pos:line="49" pos:column="31">TEXT<pos:position pos:line="49" pos:column="35"/></name><argument_list pos:line="49" pos:column="35">(<argument><expr><literal type="string" pos:line="49" pos:column="36">"security.dll"<pos:position pos:line="49" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt></block></then>
    <else pos:line="50" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="7">s_hSecDll<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">=<pos:position pos:line="51" pos:column="18"/></operator> <call><name pos:line="51" pos:column="19">LoadLibrary<pos:position pos:line="51" pos:column="30"/></name><argument_list pos:line="51" pos:column="30">(<argument><expr><call><name pos:line="51" pos:column="31">TEXT<pos:position pos:line="51" pos:column="35"/></name><argument_list pos:line="51" pos:column="35">(<argument><expr><literal type="string" pos:line="51" pos:column="36">"secur32.dll"<pos:position pos:line="51" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="52"/></expr_stmt></block></else></if>
    <if pos:line="52" pos:column="5">if<condition pos:line="52" pos:column="7">(<expr><operator pos:line="52" pos:column="8">!<pos:position pos:line="52" pos:column="9"/></operator><name pos:line="52" pos:column="9">s_hSecDll<pos:position pos:line="52" pos:column="18"/></name></expr>)<pos:position pos:line="52" pos:column="19"/></condition><then pos:line="52" pos:column="19">
      <block type="pseudo"><return pos:line="53" pos:column="7">return <expr><name pos:line="53" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="53" pos:column="31"/></name></expr>;<pos:position pos:line="53" pos:column="32"/></return></block></then></if>

    <comment type="block" pos:line="55" pos:column="5">/* Get address of the InitSecurityInterfaceA function from the SSPI dll */</comment>
    <expr_stmt><expr><name pos:line="56" pos:column="5">pInitSecurityInterface<pos:position pos:line="56" pos:column="27"/></name> <operator pos:line="56" pos:column="28">=<pos:position pos:line="56" pos:column="29"/></operator> <operator pos:line="56" pos:column="30">(<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="31">INITSECURITYINTERFACE_FN<pos:position pos:line="56" pos:column="55"/></name><operator pos:line="56" pos:column="55">)<pos:position pos:line="56" pos:column="56"/></operator>
      <call><name pos:line="57" pos:column="7">GetProcAddress<pos:position pos:line="57" pos:column="21"/></name><argument_list pos:line="57" pos:column="21">(<argument><expr><name pos:line="57" pos:column="22">s_hSecDll<pos:position pos:line="57" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="33">SECURITYENTRYPOINT<pos:position pos:line="57" pos:column="51"/></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="53"/></expr_stmt>
    <if pos:line="58" pos:column="5">if<condition pos:line="58" pos:column="7">(<expr><operator pos:line="58" pos:column="8">!<pos:position pos:line="58" pos:column="9"/></operator><name pos:line="58" pos:column="9">pInitSecurityInterface<pos:position pos:line="58" pos:column="31"/></name></expr>)<pos:position pos:line="58" pos:column="32"/></condition><then pos:line="58" pos:column="32">
      <block type="pseudo"><return pos:line="59" pos:column="7">return <expr><name pos:line="59" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="59" pos:column="31"/></name></expr>;<pos:position pos:line="59" pos:column="32"/></return></block></then></if>

    <comment type="block" pos:line="61" pos:column="5">/* Get pointer to Security Service Provider Interface dispatch table */</comment>
    <expr_stmt><expr><name pos:line="62" pos:column="5">s_pSecFn<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">=<pos:position pos:line="62" pos:column="15"/></operator> <call><name pos:line="62" pos:column="16">pInitSecurityInterface<pos:position pos:line="62" pos:column="38"/></name><argument_list pos:line="62" pos:column="38">()<pos:position pos:line="62" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="41"/></expr_stmt>
    <if pos:line="63" pos:column="5">if<condition pos:line="63" pos:column="7">(<expr><operator pos:line="63" pos:column="8">!<pos:position pos:line="63" pos:column="9"/></operator><name pos:line="63" pos:column="9">s_pSecFn<pos:position pos:line="63" pos:column="17"/></name></expr>)<pos:position pos:line="63" pos:column="18"/></condition><then pos:line="63" pos:column="18">
      <block type="pseudo"><return pos:line="64" pos:column="7">return <expr><name pos:line="64" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="64" pos:column="31"/></name></expr>;<pos:position pos:line="64" pos:column="32"/></return></block></then></if>
  }<pos:position pos:line="65" pos:column="4"/></block></then></if>

  <return pos:line="67" pos:column="3">return <expr><name pos:line="67" pos:column="10">CURLE_OK<pos:position pos:line="67" pos:column="18"/></name></expr>;<pos:position pos:line="67" pos:column="19"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

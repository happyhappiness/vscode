<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2523_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">cyassl_send<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">connectdata<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">conn<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">sockindex<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="3" pos:column="28">const<pos:position pos:line="3" pos:column="33"/></specifier> <name pos:line="3" pos:column="34">void<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">mem<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="4" pos:column="28">size_t<pos:position pos:line="4" pos:column="34"/></name></type> <name pos:line="4" pos:column="35">len<pos:position pos:line="4" pos:column="38"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="5" pos:column="28">CURLcode<pos:position pos:line="5" pos:column="36"/></name> <modifier pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></modifier></type><name pos:line="5" pos:column="38">curlcode<pos:position pos:line="5" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="47"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">ssl_connect_data<pos:position pos:line="7" pos:column="26"/></name></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">connssl<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><operator pos:line="7" pos:column="38">&amp;<pos:position pos:line="7" pos:column="43"/></operator><name><name pos:line="7" pos:column="39">conn<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">ssl<pos:position pos:line="7" pos:column="48"/></name><index pos:line="7" pos:column="48">[<expr><name pos:line="7" pos:column="49">sockindex<pos:position pos:line="7" pos:column="58"/></name></expr>]<pos:position pos:line="7" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">error_buffer<pos:position pos:line="8" pos:column="20"/></name><index pos:line="8" pos:column="20">[<expr><name pos:line="8" pos:column="21">CYASSL_MAX_ERROR_SZ<pos:position pos:line="8" pos:column="40"/></name></expr>]<pos:position pos:line="8" pos:column="41"/></index></name></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type>  <name pos:line="9" pos:column="8">memlen<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><ternary><condition><expr><operator pos:line="9" pos:column="17">(<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">len<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">&gt;<pos:position pos:line="9" pos:column="26"/></operator> <operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">size_t<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">)<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">INT_MAX<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">)<pos:position pos:line="9" pos:column="40"/></operator></expr> ?<pos:position pos:line="9" pos:column="42"/></condition><then pos:line="9" pos:column="42"> <expr><name pos:line="9" pos:column="43">INT_MAX<pos:position pos:line="9" pos:column="50"/></name></expr> <pos:position pos:line="9" pos:column="51"/></then><else pos:line="9" pos:column="51">: <expr><operator pos:line="9" pos:column="53">(<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="54">int<pos:position pos:line="9" pos:column="57"/></name><operator pos:line="9" pos:column="57">)<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="58">len<pos:position pos:line="9" pos:column="61"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="9" pos:column="62"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type>  <name pos:line="10" pos:column="8">rc<pos:position pos:line="10" pos:column="10"/></name>     <init pos:line="10" pos:column="15">= <expr><call><name pos:line="10" pos:column="17">SSL_write<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name><name pos:line="10" pos:column="27">BACKEND<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">handle<pos:position pos:line="10" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">mem<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">memlen<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="57"/></decl_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">rc<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">&lt;<pos:position pos:line="12" pos:column="13"/></operator> <literal type="number" pos:line="12" pos:column="11">0<pos:position pos:line="12" pos:column="12"/></literal></expr>)<pos:position pos:line="12" pos:column="13"/></condition><then pos:line="12" pos:column="13"> <block pos:line="12" pos:column="14">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">err<pos:position pos:line="13" pos:column="12"/></name> <init pos:line="13" pos:column="13">= <expr><call><name pos:line="13" pos:column="15">SSL_get_error<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name><name pos:line="13" pos:column="29">BACKEND<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">-&gt;<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="38">handle<pos:position pos:line="13" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">rc<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="50"/></decl_stmt>

    <switch pos:line="15" pos:column="5">switch<condition pos:line="15" pos:column="11">(<expr><name pos:line="15" pos:column="12">err<pos:position pos:line="15" pos:column="15"/></name></expr>)<pos:position pos:line="15" pos:column="16"/></condition> <block pos:line="15" pos:column="17">{
    <case pos:line="16" pos:column="5">case <expr><name pos:line="16" pos:column="10">SSL_ERROR_WANT_READ<pos:position pos:line="16" pos:column="29"/></name></expr>:<pos:position pos:line="16" pos:column="30"/></case>
    <case pos:line="17" pos:column="5">case <expr><name pos:line="17" pos:column="10">SSL_ERROR_WANT_WRITE<pos:position pos:line="17" pos:column="30"/></name></expr>:<pos:position pos:line="17" pos:column="31"/></case>
      <comment type="block" pos:line="18" pos:column="7">/* there's data pending, re-invoke SSL_write() */</comment>
      <expr_stmt><expr><operator pos:line="19" pos:column="7">*<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">curlcode<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">CURLE_AGAIN<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
      <return pos:line="20" pos:column="7">return <expr><operator pos:line="20" pos:column="14">-<pos:position pos:line="20" pos:column="15"/></operator><literal type="number" pos:line="20" pos:column="15">1<pos:position pos:line="20" pos:column="16"/></literal></expr>;<pos:position pos:line="20" pos:column="17"/></return>
    <default pos:line="21" pos:column="5">default:<pos:position pos:line="21" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">failf<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name><name pos:line="22" pos:column="13">conn<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">data<pos:position pos:line="22" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="25">"SSL write: %s, errno %d"<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="23" pos:column="13">ERR_error_string<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">err<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="35">error_buffer<pos:position pos:line="23" pos:column="47"/></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr></argument>,
            <argument><expr><name pos:line="24" pos:column="13">SOCKERRNO<pos:position pos:line="24" pos:column="22"/></name></expr></argument>)<pos:position pos:line="24" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="25" pos:column="7">*<pos:position pos:line="25" pos:column="8"/></operator><name pos:line="25" pos:column="8">curlcode<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">CURLE_SEND_ERROR<pos:position pos:line="25" pos:column="35"/></name></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
      <return pos:line="26" pos:column="7">return <expr><operator pos:line="26" pos:column="14">-<pos:position pos:line="26" pos:column="15"/></operator><literal type="number" pos:line="26" pos:column="15">1<pos:position pos:line="26" pos:column="16"/></literal></expr>;<pos:position pos:line="26" pos:column="17"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></switch>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>
  <return pos:line="29" pos:column="3">return <expr><name pos:line="29" pos:column="10">rc<pos:position pos:line="29" pos:column="12"/></name></expr>;<pos:position pos:line="29" pos:column="13"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

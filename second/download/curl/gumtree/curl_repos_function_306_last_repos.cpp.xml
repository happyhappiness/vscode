<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_306_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">Curl_getaddrinfo_a<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">nodename<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type> <name pos:line="2" pos:column="56">servname<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
            <parameter><decl><type><specifier pos:line="3" pos:column="13">const<pos:position pos:line="3" pos:column="18"/></specifier> <name><name pos:line="3" pos:column="19">struct<pos:position pos:line="3" pos:column="25"/></name> <name pos:line="3" pos:column="26">addrinfo<pos:position pos:line="3" pos:column="34"/></name></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type> <name pos:line="3" pos:column="37">hints<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>,
            <parameter><decl><type><name><name pos:line="4" pos:column="13">struct<pos:position pos:line="4" pos:column="19"/></name> <name pos:line="4" pos:column="20">addrinfo<pos:position pos:line="4" pos:column="28"/></name></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier> <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier></type> <name pos:line="4" pos:column="33">res<pos:position pos:line="4" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="37"/></parameter_list>

<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type> <name pos:line="7" pos:column="10">enodename<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type> <name pos:line="8" pos:column="10">eservname<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">status<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">i<pos:position pos:line="10" pos:column="8"/></name></decl>;<pos:position pos:line="10" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">enodename<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <operator pos:line="12" pos:column="15">(<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">char<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></operator><operator pos:line="12" pos:column="22">)<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">NULL<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">eservname<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <operator pos:line="13" pos:column="15">(<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">char<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></operator><operator pos:line="13" pos:column="22">)<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">nodename<pos:position pos:line="15" pos:column="14"/></name></expr>)<pos:position pos:line="15" pos:column="15"/></condition><then pos:line="15" pos:column="15"> <block pos:line="15" pos:column="16">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">i<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">strlen<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">nodename<pos:position pos:line="16" pos:column="24"/></name></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>

    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><operator pos:line="18" pos:column="8">!<pos:position pos:line="18" pos:column="9"/></operator><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">enodename<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <call><name pos:line="18" pos:column="22">malloc<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">i<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">+<pos:position pos:line="18" pos:column="32"/></operator> <literal type="number" pos:line="18" pos:column="33">1<pos:position pos:line="18" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call><operator pos:line="18" pos:column="35">)<pos:position pos:line="18" pos:column="36"/></operator></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37">
      <block type="pseudo"><return pos:line="19" pos:column="7">return <expr><name pos:line="19" pos:column="14">EAI_MEMORY<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">i<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <call><name pos:line="21" pos:column="9">QadrtConvertA2E<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">enodename<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="36">nodename<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="46">i<pos:position pos:line="21" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="49">i<pos:position pos:line="21" pos:column="50"/></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">enodename<pos:position pos:line="22" pos:column="14"/></name><index pos:line="22" pos:column="14">[<expr><name pos:line="22" pos:column="15">i<pos:position pos:line="22" pos:column="16"/></name></expr>]<pos:position pos:line="22" pos:column="17"/></index></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <literal type="char" pos:line="22" pos:column="20">'\0'<pos:position pos:line="22" pos:column="24"/></literal></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><name pos:line="25" pos:column="6">servname<pos:position pos:line="25" pos:column="14"/></name></expr>)<pos:position pos:line="25" pos:column="15"/></condition><then pos:line="25" pos:column="15"> <block pos:line="25" pos:column="16">{
    <expr_stmt><expr><name pos:line="26" pos:column="5">i<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">=<pos:position pos:line="26" pos:column="8"/></operator> <call><name pos:line="26" pos:column="9">strlen<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">servname<pos:position pos:line="26" pos:column="24"/></name></expr></argument>)<pos:position pos:line="26" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>

    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><operator pos:line="28" pos:column="8">!<pos:position pos:line="28" pos:column="9"/></operator><operator pos:line="28" pos:column="9">(<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">eservname<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <call><name pos:line="28" pos:column="22">malloc<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">i<pos:position pos:line="28" pos:column="30"/></name> <operator pos:line="28" pos:column="31">+<pos:position pos:line="28" pos:column="32"/></operator> <literal type="number" pos:line="28" pos:column="33">1<pos:position pos:line="28" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call><operator pos:line="28" pos:column="35">)<pos:position pos:line="28" pos:column="36"/></operator></expr>)<pos:position pos:line="28" pos:column="37"/></condition><then pos:line="28" pos:column="37"> <block pos:line="28" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">free<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><name pos:line="29" pos:column="12">enodename<pos:position pos:line="29" pos:column="21"/></name></expr></argument>)<pos:position pos:line="29" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>
      <return pos:line="30" pos:column="7">return <expr><name pos:line="30" pos:column="14">EAI_MEMORY<pos:position pos:line="30" pos:column="24"/></name></expr>;<pos:position pos:line="30" pos:column="25"/></return>
      }<pos:position pos:line="31" pos:column="8"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">QadrtConvertA2E<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">eservname<pos:position pos:line="33" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="32">servname<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">i<pos:position pos:line="33" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="45">i<pos:position pos:line="33" pos:column="46"/></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">eservname<pos:position pos:line="34" pos:column="14"/></name><index pos:line="34" pos:column="14">[<expr><name pos:line="34" pos:column="15">i<pos:position pos:line="34" pos:column="16"/></name></expr>]<pos:position pos:line="34" pos:column="17"/></index></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <literal type="char" pos:line="34" pos:column="20">'\0'<pos:position pos:line="34" pos:column="24"/></literal></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name pos:line="37" pos:column="3">status<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <call><name pos:line="37" pos:column="12">getaddrinfo<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">enodename<pos:position pos:line="37" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="35">eservname<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="46">hints<pos:position pos:line="37" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="53">res<pos:position pos:line="37" pos:column="56"/></name></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">free<pos:position pos:line="38" pos:column="7"/></name><argument_list pos:line="38" pos:column="7">(<argument><expr><name pos:line="38" pos:column="8">enodename<pos:position pos:line="38" pos:column="17"/></name></expr></argument>)<pos:position pos:line="38" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">free<pos:position pos:line="39" pos:column="7"/></name><argument_list pos:line="39" pos:column="7">(<argument><expr><name pos:line="39" pos:column="8">eservname<pos:position pos:line="39" pos:column="17"/></name></expr></argument>)<pos:position pos:line="39" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>
  <return pos:line="40" pos:column="3">return <expr><name pos:line="40" pos:column="10">status<pos:position pos:line="40" pos:column="16"/></name></expr>;<pos:position pos:line="40" pos:column="17"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2039.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">curl_global_init_mem<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">long<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">flags<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">curl_malloc_callback<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">m<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">curl_free_callback<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">f<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">curl_realloc_callback<pos:position pos:line="2" pos:column="74"/></name></type> <name pos:line="2" pos:column="75">r<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="3" pos:column="31">curl_strdup_callback<pos:position pos:line="3" pos:column="51"/></name></type> <name pos:line="3" pos:column="52">s<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="55">curl_calloc_callback<pos:position pos:line="3" pos:column="75"/></name></type> <name pos:line="3" pos:column="76">c<pos:position pos:line="3" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="78"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">CURLE_OK<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Invalid input, return immediately */</comment>
  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><operator pos:line="8" pos:column="6">!<pos:position pos:line="8" pos:column="7"/></operator><name pos:line="8" pos:column="7">m<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">||<pos:position pos:line="8" pos:column="11"/></operator> <operator pos:line="8" pos:column="12">!<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">f<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">||<pos:position pos:line="8" pos:column="17"/></operator> <operator pos:line="8" pos:column="18">!<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">r<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">||<pos:position pos:line="8" pos:column="23"/></operator> <operator pos:line="8" pos:column="24">!<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">s<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">||<pos:position pos:line="8" pos:column="29"/></operator> <operator pos:line="8" pos:column="30">!<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">c<pos:position pos:line="8" pos:column="32"/></name></expr>)<pos:position pos:line="8" pos:column="33"/></condition><then pos:line="8" pos:column="33">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">CURLE_FAILED_INIT<pos:position pos:line="9" pos:column="29"/></name></expr>;<pos:position pos:line="9" pos:column="30"/></return></block></then></if>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">initialized<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18"> <block pos:line="11" pos:column="19">{
    <comment type="block" pos:line="12" pos:column="5">/* Already initialized, don't do it again, but bump the variable anyway to
       work like curl_global_init() and require the same amount of cleanup
       calls. */</comment>
    <expr_stmt><expr><name pos:line="15" pos:column="5">initialized<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">++<pos:position pos:line="15" pos:column="18"/></operator></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">CURLE_OK<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="19" pos:column="3">/* Call the actual init function first */</comment>
  <expr_stmt><expr><name pos:line="20" pos:column="3">result<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <call><name pos:line="20" pos:column="12">curl_global_init<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">flags<pos:position pos:line="20" pos:column="34"/></name></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><operator pos:line="21" pos:column="6">!<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">result<pos:position pos:line="21" pos:column="13"/></name></expr>)<pos:position pos:line="21" pos:column="14"/></condition><then pos:line="21" pos:column="14"> <block pos:line="21" pos:column="15">{
    <expr_stmt><expr><name pos:line="22" pos:column="5">Curl_cmalloc<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">m<pos:position pos:line="22" pos:column="21"/></name></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">Curl_cfree<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">f<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">Curl_cstrdup<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <name pos:line="24" pos:column="20">s<pos:position pos:line="24" pos:column="21"/></name></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">Curl_crealloc<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">r<pos:position pos:line="25" pos:column="22"/></name></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">Curl_ccalloc<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="20">c<pos:position pos:line="26" pos:column="21"/></name></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <return pos:line="29" pos:column="3">return <expr><name pos:line="29" pos:column="10">result<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

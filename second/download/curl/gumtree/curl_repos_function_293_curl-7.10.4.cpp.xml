<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_293_curl-7.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">create_hostcache_id<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">server<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">port<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">ssize_t<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">entry_len<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">id<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><name pos:line="4" pos:column="14">NULL<pos:position pos:line="4" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* Get the length of the new entry id */</comment>
  <expr_stmt><expr><operator pos:line="7" pos:column="3">*<pos:position pos:line="7" pos:column="4"/></operator><name pos:line="7" pos:column="4">entry_len<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <operator pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">entry_len<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">+<pos:position pos:line="7" pos:column="28"/></operator>      <comment type="block" pos:line="7" pos:column="34">/* Hostname length */</comment>
               <literal type="number" pos:line="8" pos:column="16">1<pos:position pos:line="8" pos:column="17"/></literal> <operator pos:line="8" pos:column="18">+<pos:position pos:line="8" pos:column="19"/></operator>               <comment type="block" pos:line="8" pos:column="34">/* The ':' seperator */</comment>
               <call><name pos:line="9" pos:column="16">_num_chars<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">port<pos:position pos:line="9" pos:column="31"/></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt> <comment type="block" pos:line="9" pos:column="34">/* The number of characters the port will take up */</comment>
  
  <comment type="block" pos:line="11" pos:column="3">/* Allocate the new entry id */</comment>
  <expr_stmt><expr><name pos:line="12" pos:column="3">id<pos:position pos:line="12" pos:column="5"/></name> <operator pos:line="12" pos:column="6">=<pos:position pos:line="12" pos:column="7"/></operator> <call><name pos:line="12" pos:column="8">malloc<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><operator pos:line="12" pos:column="15">*<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">entry_len<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">+<pos:position pos:line="12" pos:column="27"/></operator> <literal type="number" pos:line="12" pos:column="28">1<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">!<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">id<pos:position pos:line="13" pos:column="10"/></name></expr>)<pos:position pos:line="13" pos:column="11"/></condition><then pos:line="13" pos:column="11"> <block pos:line="13" pos:column="12">{
    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">NULL<pos:position pos:line="14" pos:column="16"/></name></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="17" pos:column="3">/* Create the new entry */</comment>
  <comment type="block" pos:line="18" pos:column="3">/* If sprintf() doesn't return the entry length, that signals failure */</comment>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><call><name pos:line="19" pos:column="7">sprintf<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">id<pos:position pos:line="19" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="19">"%s:%d"<pos:position pos:line="19" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">server<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="36">port<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call> <operator pos:line="19" pos:column="42">!=<pos:position pos:line="19" pos:column="44"/></operator> <operator pos:line="19" pos:column="45">*<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">entry_len<pos:position pos:line="19" pos:column="55"/></name></expr>)<pos:position pos:line="19" pos:column="56"/></condition><then pos:line="19" pos:column="56"> <block pos:line="19" pos:column="57">{
    <comment type="block" pos:line="20" pos:column="5">/* Free the allocated id, set length to zero and return NULL */</comment>
    <expr_stmt><expr><operator pos:line="21" pos:column="5">*<pos:position pos:line="21" pos:column="6"/></operator><name pos:line="21" pos:column="6">entry_len<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">free<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><name pos:line="22" pos:column="10">id<pos:position pos:line="22" pos:column="12"/></name></expr></argument>)<pos:position pos:line="22" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="14"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">NULL<pos:position pos:line="23" pos:column="16"/></name></expr>;<pos:position pos:line="23" pos:column="17"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <return pos:line="26" pos:column="3">return <expr><name pos:line="26" pos:column="10">id<pos:position pos:line="26" pos:column="12"/></name></expr>;<pos:position pos:line="26" pos:column="13"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

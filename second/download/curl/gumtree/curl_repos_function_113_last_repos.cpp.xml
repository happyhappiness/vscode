<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_113_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">void<pos:position pos:line="1" pos:column="14"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="15"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLM<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">multi_handle<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">still_running<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">curl_httppost<pos:position pos:line="8" pos:column="23"/></name></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">formpost<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><name pos:line="8" pos:column="36">NULL<pos:position pos:line="8" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">curl_httppost<pos:position pos:line="9" pos:column="23"/></name></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">lastptr<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><name pos:line="9" pos:column="35">NULL<pos:position pos:line="9" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">curl_slist<pos:position pos:line="10" pos:column="20"/></name></name> <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">headerlist<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><name pos:line="10" pos:column="35">NULL<pos:position pos:line="10" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="11" pos:column="3">static<pos:position pos:line="11" pos:column="9"/></specifier> <type><specifier pos:line="11" pos:column="10">const<pos:position pos:line="11" pos:column="15"/></specifier> <name pos:line="11" pos:column="16">char<pos:position pos:line="11" pos:column="20"/></name></type> <name><name pos:line="11" pos:column="21">buf<pos:position pos:line="11" pos:column="24"/></name><index pos:line="11" pos:column="24">[]<pos:position pos:line="11" pos:column="26"/></index></name> <init pos:line="11" pos:column="27">= <expr><literal type="string" pos:line="11" pos:column="29">"Expect:"<pos:position pos:line="11" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* Fill in the file upload field. This makes libcurl load data from
     the given file name when curl_easy_perform() is called. */</comment>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">curl_formadd<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><operator pos:line="15" pos:column="16">&amp;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="17">formpost<pos:position pos:line="15" pos:column="25"/></name></expr></argument>,
               <argument><expr><operator pos:line="16" pos:column="16">&amp;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="17">lastptr<pos:position pos:line="16" pos:column="24"/></name></expr></argument>,
               <argument><expr><name pos:line="17" pos:column="16">CURLFORM_COPYNAME<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="35">"sendfile"<pos:position pos:line="17" pos:column="45"/></literal></expr></argument>,
               <argument><expr><name pos:line="18" pos:column="16">CURLFORM_FILE<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="31">"postit2.c"<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>,
               <argument><expr><name pos:line="19" pos:column="16">CURLFORM_END<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* Fill in the filename field */</comment>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">curl_formadd<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><operator pos:line="22" pos:column="16">&amp;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="17">formpost<pos:position pos:line="22" pos:column="25"/></name></expr></argument>,
               <argument><expr><operator pos:line="23" pos:column="16">&amp;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="17">lastptr<pos:position pos:line="23" pos:column="24"/></name></expr></argument>,
               <argument><expr><name pos:line="24" pos:column="16">CURLFORM_COPYNAME<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="35">"filename"<pos:position pos:line="24" pos:column="45"/></literal></expr></argument>,
               <argument><expr><name pos:line="25" pos:column="16">CURLFORM_COPYCONTENTS<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="39">"postit2.c"<pos:position pos:line="25" pos:column="50"/></literal></expr></argument>,
               <argument><expr><name pos:line="26" pos:column="16">CURLFORM_END<pos:position pos:line="26" pos:column="28"/></name></expr></argument>)<pos:position pos:line="26" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="28" pos:column="3">/* Fill in the submit field too, even if this is rarely needed */</comment>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">curl_formadd<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><operator pos:line="29" pos:column="16">&amp;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="17">formpost<pos:position pos:line="29" pos:column="25"/></name></expr></argument>,
               <argument><expr><operator pos:line="30" pos:column="16">&amp;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="17">lastptr<pos:position pos:line="30" pos:column="24"/></name></expr></argument>,
               <argument><expr><name pos:line="31" pos:column="16">CURLFORM_COPYNAME<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="35">"submit"<pos:position pos:line="31" pos:column="43"/></literal></expr></argument>,
               <argument><expr><name pos:line="32" pos:column="16">CURLFORM_COPYCONTENTS<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="39">"send"<pos:position pos:line="32" pos:column="45"/></literal></expr></argument>,
               <argument><expr><name pos:line="33" pos:column="16">CURLFORM_END<pos:position pos:line="33" pos:column="28"/></name></expr></argument>)<pos:position pos:line="33" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><name pos:line="35" pos:column="3">curl<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <call><name pos:line="35" pos:column="10">curl_easy_init<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">()<pos:position pos:line="35" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name pos:line="36" pos:column="3">multi_handle<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <call><name pos:line="36" pos:column="18">curl_multi_init<pos:position pos:line="36" pos:column="33"/></name><argument_list pos:line="36" pos:column="33">()<pos:position pos:line="36" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="38" pos:column="3">/* initialize custom header list (stating that Expect: 100-continue is not
     wanted */</comment>
  <expr_stmt><expr><name pos:line="40" pos:column="3">headerlist<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <call><name pos:line="40" pos:column="16">curl_slist_append<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">headerlist<pos:position pos:line="40" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="46">buf<pos:position pos:line="40" pos:column="49"/></name></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt>
  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><name pos:line="41" pos:column="6">curl<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">&amp;&amp;<pos:position pos:line="41" pos:column="21"/></operator> <name pos:line="41" pos:column="14">multi_handle<pos:position pos:line="41" pos:column="26"/></name></expr>)<pos:position pos:line="41" pos:column="27"/></condition><then pos:line="41" pos:column="27"> <block pos:line="41" pos:column="28">{

    <comment type="block" pos:line="43" pos:column="5">/* what URL that receives this POST */</comment>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">curl_easy_setopt<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">curl<pos:position pos:line="44" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="28">CURLOPT_URL<pos:position pos:line="44" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="41">"http://www.example.com/upload.cgi"<pos:position pos:line="44" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">curl_easy_setopt<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">curl<pos:position pos:line="45" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="28">CURLOPT_VERBOSE<pos:position pos:line="45" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="45">1L<pos:position pos:line="45" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">curl_easy_setopt<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">curl<pos:position pos:line="47" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="28">CURLOPT_HTTPHEADER<pos:position pos:line="47" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="48">headerlist<pos:position pos:line="47" pos:column="58"/></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">curl_easy_setopt<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">curl<pos:position pos:line="48" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="28">CURLOPT_HTTPPOST<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="46">formpost<pos:position pos:line="48" pos:column="54"/></name></expr></argument>)<pos:position pos:line="48" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="50" pos:column="5">curl_multi_add_handle<pos:position pos:line="50" pos:column="26"/></name><argument_list pos:line="50" pos:column="26">(<argument><expr><name pos:line="50" pos:column="27">multi_handle<pos:position pos:line="50" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="41">curl<pos:position pos:line="50" pos:column="45"/></name></expr></argument>)<pos:position pos:line="50" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="52" pos:column="5">curl_multi_perform<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><name pos:line="52" pos:column="24">multi_handle<pos:position pos:line="52" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="38">&amp;<pos:position pos:line="52" pos:column="43"/></operator><name pos:line="52" pos:column="39">still_running<pos:position pos:line="52" pos:column="52"/></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="54"/></expr_stmt>

    <do pos:line="54" pos:column="5">do <block pos:line="54" pos:column="8">{
      <decl_stmt><decl><type><name><name pos:line="55" pos:column="7">struct<pos:position pos:line="55" pos:column="13"/></name> <name pos:line="55" pos:column="14">timeval<pos:position pos:line="55" pos:column="21"/></name></name></type> <name pos:line="55" pos:column="22">timeout<pos:position pos:line="55" pos:column="29"/></name></decl>;<pos:position pos:line="55" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="56" pos:column="7">int<pos:position pos:line="56" pos:column="10"/></name></type> <name pos:line="56" pos:column="11">rc<pos:position pos:line="56" pos:column="13"/></name></decl>;<pos:position pos:line="56" pos:column="14"/></decl_stmt> <comment type="block" pos:line="56" pos:column="15">/* select() return code */</comment>
      <decl_stmt><decl><type><name pos:line="57" pos:column="7">CURLMcode<pos:position pos:line="57" pos:column="16"/></name></type> <name pos:line="57" pos:column="17">mc<pos:position pos:line="57" pos:column="19"/></name></decl>;<pos:position pos:line="57" pos:column="20"/></decl_stmt> <comment type="block" pos:line="57" pos:column="21">/* curl_multi_fdset() return code */</comment>

      <decl_stmt><decl><type><name pos:line="59" pos:column="7">fd_set<pos:position pos:line="59" pos:column="13"/></name></type> <name pos:line="59" pos:column="14">fdread<pos:position pos:line="59" pos:column="20"/></name></decl>;<pos:position pos:line="59" pos:column="21"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="60" pos:column="7">fd_set<pos:position pos:line="60" pos:column="13"/></name></type> <name pos:line="60" pos:column="14">fdwrite<pos:position pos:line="60" pos:column="21"/></name></decl>;<pos:position pos:line="60" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="61" pos:column="7">fd_set<pos:position pos:line="61" pos:column="13"/></name></type> <name pos:line="61" pos:column="14">fdexcep<pos:position pos:line="61" pos:column="21"/></name></decl>;<pos:position pos:line="61" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="62" pos:column="7">int<pos:position pos:line="62" pos:column="10"/></name></type> <name pos:line="62" pos:column="11">maxfd<pos:position pos:line="62" pos:column="16"/></name> <init pos:line="62" pos:column="17">= <expr><operator pos:line="62" pos:column="19">-<pos:position pos:line="62" pos:column="20"/></operator><literal type="number" pos:line="62" pos:column="20">1<pos:position pos:line="62" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="62" pos:column="22"/></decl_stmt>

      <decl_stmt><decl><type><name pos:line="64" pos:column="7">long<pos:position pos:line="64" pos:column="11"/></name></type> <name pos:line="64" pos:column="12">curl_timeo<pos:position pos:line="64" pos:column="22"/></name> <init pos:line="64" pos:column="23">= <expr><operator pos:line="64" pos:column="25">-<pos:position pos:line="64" pos:column="26"/></operator><literal type="number" pos:line="64" pos:column="26">1<pos:position pos:line="64" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="64" pos:column="28"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="66" pos:column="7">FD_ZERO<pos:position pos:line="66" pos:column="14"/></name><argument_list pos:line="66" pos:column="14">(<argument><expr><operator pos:line="66" pos:column="15">&amp;<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="16">fdread<pos:position pos:line="66" pos:column="22"/></name></expr></argument>)<pos:position pos:line="66" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">FD_ZERO<pos:position pos:line="67" pos:column="14"/></name><argument_list pos:line="67" pos:column="14">(<argument><expr><operator pos:line="67" pos:column="15">&amp;<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="16">fdwrite<pos:position pos:line="67" pos:column="23"/></name></expr></argument>)<pos:position pos:line="67" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="68" pos:column="7">FD_ZERO<pos:position pos:line="68" pos:column="14"/></name><argument_list pos:line="68" pos:column="14">(<argument><expr><operator pos:line="68" pos:column="15">&amp;<pos:position pos:line="68" pos:column="20"/></operator><name pos:line="68" pos:column="16">fdexcep<pos:position pos:line="68" pos:column="23"/></name></expr></argument>)<pos:position pos:line="68" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="25"/></expr_stmt>

      <comment type="block" pos:line="70" pos:column="7">/* set a suitable timeout to play around with */</comment>
      <expr_stmt><expr><name><name pos:line="71" pos:column="7">timeout<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">.<pos:position pos:line="71" pos:column="15"/></operator><name pos:line="71" pos:column="15">tv_sec<pos:position pos:line="71" pos:column="21"/></name></name> <operator pos:line="71" pos:column="22">=<pos:position pos:line="71" pos:column="23"/></operator> <literal type="number" pos:line="71" pos:column="24">1<pos:position pos:line="71" pos:column="25"/></literal></expr>;<pos:position pos:line="71" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="72" pos:column="7">timeout<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">.<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="15">tv_usec<pos:position pos:line="72" pos:column="22"/></name></name> <operator pos:line="72" pos:column="23">=<pos:position pos:line="72" pos:column="24"/></operator> <literal type="number" pos:line="72" pos:column="25">0<pos:position pos:line="72" pos:column="26"/></literal></expr>;<pos:position pos:line="72" pos:column="27"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="74" pos:column="7">curl_multi_timeout<pos:position pos:line="74" pos:column="25"/></name><argument_list pos:line="74" pos:column="25">(<argument><expr><name pos:line="74" pos:column="26">multi_handle<pos:position pos:line="74" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="40">&amp;<pos:position pos:line="74" pos:column="45"/></operator><name pos:line="74" pos:column="41">curl_timeo<pos:position pos:line="74" pos:column="51"/></name></expr></argument>)<pos:position pos:line="74" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="53"/></expr_stmt>
      <if pos:line="75" pos:column="7">if<condition pos:line="75" pos:column="9">(<expr><name pos:line="75" pos:column="10">curl_timeo<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">&gt;=<pos:position pos:line="75" pos:column="26"/></operator> <literal type="number" pos:line="75" pos:column="24">0<pos:position pos:line="75" pos:column="25"/></literal></expr>)<pos:position pos:line="75" pos:column="26"/></condition><then pos:line="75" pos:column="26"> <block pos:line="75" pos:column="27">{
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">timeout<pos:position pos:line="76" pos:column="16"/></name><operator pos:line="76" pos:column="16">.<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="17">tv_sec<pos:position pos:line="76" pos:column="23"/></name></name> <operator pos:line="76" pos:column="24">=<pos:position pos:line="76" pos:column="25"/></operator> <name pos:line="76" pos:column="26">curl_timeo<pos:position pos:line="76" pos:column="36"/></name> <operator pos:line="76" pos:column="37">/<pos:position pos:line="76" pos:column="38"/></operator> <literal type="number" pos:line="76" pos:column="39">1000<pos:position pos:line="76" pos:column="43"/></literal></expr>;<pos:position pos:line="76" pos:column="44"/></expr_stmt>
        <if pos:line="77" pos:column="9">if<condition pos:line="77" pos:column="11">(<expr><name><name pos:line="77" pos:column="12">timeout<pos:position pos:line="77" pos:column="19"/></name><operator pos:line="77" pos:column="19">.<pos:position pos:line="77" pos:column="20"/></operator><name pos:line="77" pos:column="20">tv_sec<pos:position pos:line="77" pos:column="26"/></name></name> <operator pos:line="77" pos:column="27">&gt;<pos:position pos:line="77" pos:column="31"/></operator> <literal type="number" pos:line="77" pos:column="29">1<pos:position pos:line="77" pos:column="30"/></literal></expr>)<pos:position pos:line="77" pos:column="31"/></condition><then pos:line="77" pos:column="31">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="78" pos:column="11">timeout<pos:position pos:line="78" pos:column="18"/></name><operator pos:line="78" pos:column="18">.<pos:position pos:line="78" pos:column="19"/></operator><name pos:line="78" pos:column="19">tv_sec<pos:position pos:line="78" pos:column="25"/></name></name> <operator pos:line="78" pos:column="26">=<pos:position pos:line="78" pos:column="27"/></operator> <literal type="number" pos:line="78" pos:column="28">1<pos:position pos:line="78" pos:column="29"/></literal></expr>;<pos:position pos:line="78" pos:column="30"/></expr_stmt></block></then>
        <else pos:line="79" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="80" pos:column="11">timeout<pos:position pos:line="80" pos:column="18"/></name><operator pos:line="80" pos:column="18">.<pos:position pos:line="80" pos:column="19"/></operator><name pos:line="80" pos:column="19">tv_usec<pos:position pos:line="80" pos:column="26"/></name></name> <operator pos:line="80" pos:column="27">=<pos:position pos:line="80" pos:column="28"/></operator> <operator pos:line="80" pos:column="29">(<pos:position pos:line="80" pos:column="30"/></operator><name pos:line="80" pos:column="30">curl_timeo<pos:position pos:line="80" pos:column="40"/></name> <operator pos:line="80" pos:column="41">%<pos:position pos:line="80" pos:column="42"/></operator> <literal type="number" pos:line="80" pos:column="43">1000<pos:position pos:line="80" pos:column="47"/></literal><operator pos:line="80" pos:column="47">)<pos:position pos:line="80" pos:column="48"/></operator> <operator pos:line="80" pos:column="49">*<pos:position pos:line="80" pos:column="50"/></operator> <literal type="number" pos:line="80" pos:column="51">1000<pos:position pos:line="80" pos:column="55"/></literal></expr>;<pos:position pos:line="80" pos:column="56"/></expr_stmt></block></else></if>
      }<pos:position pos:line="81" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="83" pos:column="7">/* get file descriptors from the transfers */</comment>
      <expr_stmt><expr><name pos:line="84" pos:column="7">mc<pos:position pos:line="84" pos:column="9"/></name> <operator pos:line="84" pos:column="10">=<pos:position pos:line="84" pos:column="11"/></operator> <call><name pos:line="84" pos:column="12">curl_multi_fdset<pos:position pos:line="84" pos:column="28"/></name><argument_list pos:line="84" pos:column="28">(<argument><expr><name pos:line="84" pos:column="29">multi_handle<pos:position pos:line="84" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="43">&amp;<pos:position pos:line="84" pos:column="48"/></operator><name pos:line="84" pos:column="44">fdread<pos:position pos:line="84" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="52">&amp;<pos:position pos:line="84" pos:column="57"/></operator><name pos:line="84" pos:column="53">fdwrite<pos:position pos:line="84" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="62">&amp;<pos:position pos:line="84" pos:column="67"/></operator><name pos:line="84" pos:column="63">fdexcep<pos:position pos:line="84" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="72">&amp;<pos:position pos:line="84" pos:column="77"/></operator><name pos:line="84" pos:column="73">maxfd<pos:position pos:line="84" pos:column="78"/></name></expr></argument>)<pos:position pos:line="84" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="80"/></expr_stmt>

      <if pos:line="86" pos:column="7">if<condition pos:line="86" pos:column="9">(<expr><name pos:line="86" pos:column="10">mc<pos:position pos:line="86" pos:column="12"/></name> <operator pos:line="86" pos:column="13">!=<pos:position pos:line="86" pos:column="15"/></operator> <name pos:line="86" pos:column="16">CURLM_OK<pos:position pos:line="86" pos:column="24"/></name></expr>)<pos:position pos:line="86" pos:column="25"/></condition><then pos:line="86" pos:column="25"> <block pos:line="86" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">fprintf<pos:position pos:line="87" pos:column="16"/></name><argument_list pos:line="87" pos:column="16">(<argument><expr><name pos:line="87" pos:column="17">stderr<pos:position pos:line="87" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="25">"curl_multi_fdset() failed, code %d.\n"<pos:position pos:line="87" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="66">mc<pos:position pos:line="87" pos:column="68"/></name></expr></argument>)<pos:position pos:line="87" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="70"/></expr_stmt>
        <break pos:line="88" pos:column="9">break;<pos:position pos:line="88" pos:column="15"/></break>
      }<pos:position pos:line="89" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="91" pos:column="7">/* On success the value of maxfd is guaranteed to be &gt;= -1. We call
         select(maxfd + 1, ...); specially in case of (maxfd == -1) there are
         no fds ready yet so we call select(0, ...) --or Sleep() on Windows--
         to sleep 100ms, which is the minimum suggested value in the
         curl_multi_fdset() doc. */</comment>

      <if pos:line="97" pos:column="7">if<condition pos:line="97" pos:column="9">(<expr><name pos:line="97" pos:column="10">maxfd<pos:position pos:line="97" pos:column="15"/></name> <operator pos:line="97" pos:column="16">==<pos:position pos:line="97" pos:column="18"/></operator> <operator pos:line="97" pos:column="19">-<pos:position pos:line="97" pos:column="20"/></operator><literal type="number" pos:line="97" pos:column="20">1<pos:position pos:line="97" pos:column="21"/></literal></expr>)<pos:position pos:line="97" pos:column="22"/></condition><then pos:line="97" pos:column="22"> <block pos:line="97" pos:column="23">{
<cpp:ifdef pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">ifdef<pos:position pos:line="98" pos:column="7"/></cpp:directive> <name pos:line="98" pos:column="8">_WIN32<pos:position pos:line="98" pos:column="14"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="99" pos:column="9">Sleep<pos:position pos:line="99" pos:column="14"/></name><argument_list pos:line="99" pos:column="14">(<argument><expr><literal type="number" pos:line="99" pos:column="15">100<pos:position pos:line="99" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="100" pos:column="9">rc<pos:position pos:line="100" pos:column="11"/></name> <operator pos:line="100" pos:column="12">=<pos:position pos:line="100" pos:column="13"/></operator> <literal type="number" pos:line="100" pos:column="14">0<pos:position pos:line="100" pos:column="15"/></literal></expr>;<pos:position pos:line="100" pos:column="16"/></expr_stmt>
<cpp:else pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">else<pos:position pos:line="101" pos:column="6"/></cpp:directive></cpp:else>
        <comment type="block" pos:line="102" pos:column="9">/* Portable sleep for platforms other than Windows. */</comment>
        <decl_stmt><decl><type><name><name pos:line="103" pos:column="9">struct<pos:position pos:line="103" pos:column="15"/></name> <name pos:line="103" pos:column="16">timeval<pos:position pos:line="103" pos:column="23"/></name></name></type> <name pos:line="103" pos:column="24">wait<pos:position pos:line="103" pos:column="28"/></name> <init pos:line="103" pos:column="29">= <expr><block pos:line="103" pos:column="31">{ <expr><literal type="number" pos:line="103" pos:column="33">0<pos:position pos:line="103" pos:column="34"/></literal></expr>, <expr><literal type="number" pos:line="103" pos:column="36">100<pos:position pos:line="103" pos:column="39"/></literal> <operator pos:line="103" pos:column="40">*<pos:position pos:line="103" pos:column="41"/></operator> <literal type="number" pos:line="103" pos:column="42">1000<pos:position pos:line="103" pos:column="46"/></literal></expr> }<pos:position pos:line="103" pos:column="48"/></block></expr></init></decl>;<pos:position pos:line="103" pos:column="49"/></decl_stmt> <comment type="block" pos:line="103" pos:column="50">/* 100ms */</comment>
        <expr_stmt><expr><name pos:line="104" pos:column="9">rc<pos:position pos:line="104" pos:column="11"/></name> <operator pos:line="104" pos:column="12">=<pos:position pos:line="104" pos:column="13"/></operator> <call><name pos:line="104" pos:column="14">select<pos:position pos:line="104" pos:column="20"/></name><argument_list pos:line="104" pos:column="20">(<argument><expr><literal type="number" pos:line="104" pos:column="21">0<pos:position pos:line="104" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="24">NULL<pos:position pos:line="104" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="30">NULL<pos:position pos:line="104" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="36">NULL<pos:position pos:line="104" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="42">&amp;<pos:position pos:line="104" pos:column="47"/></operator><name pos:line="104" pos:column="43">wait<pos:position pos:line="104" pos:column="47"/></name></expr></argument>)<pos:position pos:line="104" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">endif<pos:position pos:line="105" pos:column="7"/></cpp:directive></cpp:endif>
      }<pos:position pos:line="106" pos:column="8"/></block></then>
      <else pos:line="107" pos:column="7">else <block pos:line="107" pos:column="12">{
        <comment type="block" pos:line="108" pos:column="9">/* Note that on some platforms 'timeout' may be modified by select().
           If you need access to the original value save a copy beforehand. */</comment>
        <expr_stmt><expr><name pos:line="110" pos:column="9">rc<pos:position pos:line="110" pos:column="11"/></name> <operator pos:line="110" pos:column="12">=<pos:position pos:line="110" pos:column="13"/></operator> <call><name pos:line="110" pos:column="14">select<pos:position pos:line="110" pos:column="20"/></name><argument_list pos:line="110" pos:column="20">(<argument><expr><name pos:line="110" pos:column="21">maxfd<pos:position pos:line="110" pos:column="26"/></name> <operator pos:line="110" pos:column="27">+<pos:position pos:line="110" pos:column="28"/></operator> <literal type="number" pos:line="110" pos:column="29">1<pos:position pos:line="110" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="110" pos:column="32">&amp;<pos:position pos:line="110" pos:column="37"/></operator><name pos:line="110" pos:column="33">fdread<pos:position pos:line="110" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="110" pos:column="41">&amp;<pos:position pos:line="110" pos:column="46"/></operator><name pos:line="110" pos:column="42">fdwrite<pos:position pos:line="110" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="110" pos:column="51">&amp;<pos:position pos:line="110" pos:column="56"/></operator><name pos:line="110" pos:column="52">fdexcep<pos:position pos:line="110" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="110" pos:column="61">&amp;<pos:position pos:line="110" pos:column="66"/></operator><name pos:line="110" pos:column="62">timeout<pos:position pos:line="110" pos:column="69"/></name></expr></argument>)<pos:position pos:line="110" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="71"/></expr_stmt>
      }<pos:position pos:line="111" pos:column="8"/></block></else></if>

      <switch pos:line="113" pos:column="7">switch<condition pos:line="113" pos:column="13">(<expr><name pos:line="113" pos:column="14">rc<pos:position pos:line="113" pos:column="16"/></name></expr>)<pos:position pos:line="113" pos:column="17"/></condition> <block pos:line="113" pos:column="18">{
      <case pos:line="114" pos:column="7">case <expr><operator pos:line="114" pos:column="12">-<pos:position pos:line="114" pos:column="13"/></operator><literal type="number" pos:line="114" pos:column="13">1<pos:position pos:line="114" pos:column="14"/></literal></expr>:<pos:position pos:line="114" pos:column="15"/></case>
        <comment type="block" pos:line="115" pos:column="9">/* select error */</comment>
        <break pos:line="116" pos:column="9">break;<pos:position pos:line="116" pos:column="15"/></break>
      <case pos:line="117" pos:column="7">case <expr><literal type="number" pos:line="117" pos:column="12">0<pos:position pos:line="117" pos:column="13"/></literal></expr>:<pos:position pos:line="117" pos:column="14"/></case>
      <default pos:line="118" pos:column="7">default:<pos:position pos:line="118" pos:column="15"/></default>
        <comment type="block" pos:line="119" pos:column="9">/* timeout or readable/writable sockets */</comment>
        <expr_stmt><expr><call><name pos:line="120" pos:column="9">printf<pos:position pos:line="120" pos:column="15"/></name><argument_list pos:line="120" pos:column="15">(<argument><expr><literal type="string" pos:line="120" pos:column="16">"perform!\n"<pos:position pos:line="120" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="121" pos:column="9">curl_multi_perform<pos:position pos:line="121" pos:column="27"/></name><argument_list pos:line="121" pos:column="27">(<argument><expr><name pos:line="121" pos:column="28">multi_handle<pos:position pos:line="121" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="42">&amp;<pos:position pos:line="121" pos:column="47"/></operator><name pos:line="121" pos:column="43">still_running<pos:position pos:line="121" pos:column="56"/></name></expr></argument>)<pos:position pos:line="121" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="122" pos:column="9">printf<pos:position pos:line="122" pos:column="15"/></name><argument_list pos:line="122" pos:column="15">(<argument><expr><literal type="string" pos:line="122" pos:column="16">"running: %d!\n"<pos:position pos:line="122" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="122" pos:column="34">still_running<pos:position pos:line="122" pos:column="47"/></name></expr></argument>)<pos:position pos:line="122" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="49"/></expr_stmt>
        <break pos:line="123" pos:column="9">break;<pos:position pos:line="123" pos:column="15"/></break>
      }<pos:position pos:line="124" pos:column="8"/></block></switch>
    }<pos:position pos:line="125" pos:column="6"/></block> while<condition pos:line="125" pos:column="12">(<expr><name pos:line="125" pos:column="13">still_running<pos:position pos:line="125" pos:column="26"/></name></expr>)<pos:position pos:line="125" pos:column="27"/></condition>;<pos:position pos:line="125" pos:column="28"/></do>

    <expr_stmt><expr><call><name pos:line="127" pos:column="5">curl_multi_cleanup<pos:position pos:line="127" pos:column="23"/></name><argument_list pos:line="127" pos:column="23">(<argument><expr><name pos:line="127" pos:column="24">multi_handle<pos:position pos:line="127" pos:column="36"/></name></expr></argument>)<pos:position pos:line="127" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="129" pos:column="5">/* always cleanup */</comment>
    <expr_stmt><expr><call><name pos:line="130" pos:column="5">curl_easy_cleanup<pos:position pos:line="130" pos:column="22"/></name><argument_list pos:line="130" pos:column="22">(<argument><expr><name pos:line="130" pos:column="23">curl<pos:position pos:line="130" pos:column="27"/></name></expr></argument>)<pos:position pos:line="130" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="132" pos:column="5">/* then cleanup the formpost chain */</comment>
    <expr_stmt><expr><call><name pos:line="133" pos:column="5">curl_formfree<pos:position pos:line="133" pos:column="18"/></name><argument_list pos:line="133" pos:column="18">(<argument><expr><name pos:line="133" pos:column="19">formpost<pos:position pos:line="133" pos:column="27"/></name></expr></argument>)<pos:position pos:line="133" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="135" pos:column="5">/* free slist */</comment>
    <expr_stmt><expr><call><name pos:line="136" pos:column="5">curl_slist_free_all<pos:position pos:line="136" pos:column="24"/></name><argument_list pos:line="136" pos:column="24">(<argument><expr><name pos:line="136" pos:column="25">headerlist<pos:position pos:line="136" pos:column="35"/></name></expr></argument>)<pos:position pos:line="136" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="137" pos:column="4"/></block></then></if>
  <return pos:line="138" pos:column="3">return <expr><literal type="number" pos:line="138" pos:column="10">0<pos:position pos:line="138" pos:column="11"/></literal></expr>;<pos:position pos:line="138" pos:column="12"/></return>
}<pos:position pos:line="139" pos:column="2"/></block></function></unit>

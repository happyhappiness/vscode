<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_202_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLM<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">cm<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">curl_slist<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">headers<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name pos:line="4" pos:column="32">NULL<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buffer<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><literal type="number" pos:line="5" pos:column="15">246<pos:position pos:line="5" pos:column="18"/></literal></expr>]<pos:position pos:line="5" pos:column="19"/></index></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt> <comment type="block" pos:line="5" pos:column="21">/* naively fixed-size */</comment>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><name pos:line="7" pos:column="6">test_argc<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">&lt;<pos:position pos:line="7" pos:column="20"/></operator> <literal type="number" pos:line="7" pos:column="18">4<pos:position pos:line="7" pos:column="19"/></literal></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><literal type="number" pos:line="8" pos:column="12">99<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">sprintf<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><name pos:line="10" pos:column="11">buffer<pos:position pos:line="10" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"Host: %s"<pos:position pos:line="10" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="31">HOST<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* now add a custom Host: header */</comment>
  <expr_stmt><expr><name pos:line="13" pos:column="3">headers<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">curl_slist_append<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">headers<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">buffer<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">curl_global_init<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">CURL_GLOBAL_ALL<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><name pos:line="17" pos:column="3">cm<pos:position pos:line="17" pos:column="5"/></name> <operator pos:line="17" pos:column="6">=<pos:position pos:line="17" pos:column="7"/></operator> <call><name pos:line="17" pos:column="8">curl_multi_init<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">()<pos:position pos:line="17" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">loop<pos:position pos:line="18" pos:column="7"/></name><argument_list pos:line="18" pos:column="7">(<argument><expr><name pos:line="18" pos:column="8">cm<pos:position pos:line="18" pos:column="10"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="12">URL<pos:position pos:line="18" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="17">PROXYUSERPWD<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="31">headers<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">fprintf<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><name pos:line="20" pos:column="11">stderr<pos:position pos:line="20" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="19">"lib540: now we do the request again\n"<pos:position pos:line="20" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">loop<pos:position pos:line="21" pos:column="7"/></name><argument_list pos:line="21" pos:column="7">(<argument><expr><name pos:line="21" pos:column="8">cm<pos:position pos:line="21" pos:column="10"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="12">URL<pos:position pos:line="21" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="17">PROXYUSERPWD<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="31">headers<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">curl_multi_cleanup<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">cm<pos:position pos:line="23" pos:column="24"/></name></expr></argument>)<pos:position pos:line="23" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">curl_global_cleanup<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">()<pos:position pos:line="25" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">curl_slist_free_all<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name pos:line="27" pos:column="23">headers<pos:position pos:line="27" pos:column="30"/></name></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>

  <return pos:line="29" pos:column="3">return <expr><name pos:line="29" pos:column="10">EXIT_SUCCESS<pos:position pos:line="29" pos:column="22"/></name></expr>;<pos:position pos:line="29" pos:column="23"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

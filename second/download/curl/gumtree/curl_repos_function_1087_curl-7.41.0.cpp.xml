<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1087_curl-7.41.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_sasl_create_gssapi_security_message<pos:position pos:line="1" pos:column="50"/></name><parameter_list pos:line="1" pos:column="50">(<parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">SessionHandle<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">data<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
                                                  <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">chlg64<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
                                                  <parameter><decl><type><name><name pos:line="3" pos:column="51">struct<pos:position pos:line="3" pos:column="57"/></name> <name pos:line="3" pos:column="58">kerberos5data<pos:position pos:line="3" pos:column="71"/></name></name> <modifier pos:line="3" pos:column="72">*<pos:position pos:line="3" pos:column="73"/></modifier></type><name pos:line="3" pos:column="73">krb5<pos:position pos:line="3" pos:column="77"/></name></decl></parameter>,
                                                  <parameter><decl><type><name pos:line="4" pos:column="51">char<pos:position pos:line="4" pos:column="55"/></name> <modifier pos:line="4" pos:column="56">*<pos:position pos:line="4" pos:column="57"/></modifier><modifier pos:line="4" pos:column="57">*<pos:position pos:line="4" pos:column="58"/></modifier></type><name pos:line="4" pos:column="58">outptr<pos:position pos:line="4" pos:column="64"/></name></decl></parameter>,
                                                  <parameter><decl><type><name pos:line="5" pos:column="51">size_t<pos:position pos:line="5" pos:column="57"/></name> <modifier pos:line="5" pos:column="58">*<pos:position pos:line="5" pos:column="59"/></modifier></type><name pos:line="5" pos:column="59">outlen<pos:position pos:line="5" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="66"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">result<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">CURLE_OK<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">chlglen<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">messagelen<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">unsigned<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">char<pos:position pos:line="10" pos:column="16"/></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type><name pos:line="10" pos:column="18">chlg<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><name pos:line="10" pos:column="25">NULL<pos:position pos:line="10" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">unsigned<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">char<pos:position pos:line="11" pos:column="16"/></name> <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">message<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><name pos:line="11" pos:column="28">NULL<pos:position pos:line="11" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">OM_uint32<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">gss_status<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">OM_uint32<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">gss_major_status<pos:position pos:line="13" pos:column="29"/></name></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">OM_uint32<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">gss_minor_status<pos:position pos:line="14" pos:column="29"/></name></decl>;<pos:position pos:line="14" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">gss_buffer_desc<pos:position pos:line="15" pos:column="18"/></name></type> <name pos:line="15" pos:column="19">input_token<pos:position pos:line="15" pos:column="30"/></name> <init pos:line="15" pos:column="31">= <expr><name pos:line="15" pos:column="33">GSS_C_EMPTY_BUFFER<pos:position pos:line="15" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">gss_buffer_desc<pos:position pos:line="16" pos:column="18"/></name></type> <name pos:line="16" pos:column="19">output_token<pos:position pos:line="16" pos:column="31"/></name> <init pos:line="16" pos:column="32">= <expr><name pos:line="16" pos:column="34">GSS_C_EMPTY_BUFFER<pos:position pos:line="16" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">unsigned<pos:position pos:line="17" pos:column="11"/></name> <name pos:line="17" pos:column="12">int<pos:position pos:line="17" pos:column="15"/></name></type> <name pos:line="17" pos:column="16">indata<pos:position pos:line="17" pos:column="22"/></name> <init pos:line="17" pos:column="23">= <expr><literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">unsigned<pos:position pos:line="18" pos:column="11"/></name> <name pos:line="18" pos:column="12">int<pos:position pos:line="18" pos:column="15"/></name></type> <name pos:line="18" pos:column="16">outdata<pos:position pos:line="18" pos:column="23"/></name> <init pos:line="18" pos:column="24">= <expr><literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">gss_qop_t<pos:position pos:line="19" pos:column="12"/></name></type> <name pos:line="19" pos:column="13">qop<pos:position pos:line="19" pos:column="16"/></name> <init pos:line="19" pos:column="17">= <expr><name pos:line="19" pos:column="19">GSS_C_QOP_DEFAULT<pos:position pos:line="19" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">unsigned<pos:position pos:line="20" pos:column="11"/></name> <name pos:line="20" pos:column="12">int<pos:position pos:line="20" pos:column="15"/></name></type> <name pos:line="20" pos:column="16">sec_layer<pos:position pos:line="20" pos:column="25"/></name> <init pos:line="20" pos:column="26">= <expr><literal type="number" pos:line="20" pos:column="28">0<pos:position pos:line="20" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">unsigned<pos:position pos:line="21" pos:column="11"/></name> <name pos:line="21" pos:column="12">int<pos:position pos:line="21" pos:column="15"/></name></type> <name pos:line="21" pos:column="16">max_size<pos:position pos:line="21" pos:column="24"/></name> <init pos:line="21" pos:column="25">= <expr><literal type="number" pos:line="21" pos:column="27">0<pos:position pos:line="21" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">gss_name_t<pos:position pos:line="22" pos:column="13"/></name></type> <name pos:line="22" pos:column="14">username<pos:position pos:line="22" pos:column="22"/></name> <init pos:line="22" pos:column="23">= <expr><name pos:line="22" pos:column="25">GSS_C_NO_NAME<pos:position pos:line="22" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">gss_buffer_desc<pos:position pos:line="23" pos:column="18"/></name></type> <name pos:line="23" pos:column="19">username_token<pos:position pos:line="23" pos:column="33"/></name></decl>;<pos:position pos:line="23" pos:column="34"/></decl_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* Decode the base-64 encoded input message */</comment>
  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><call><name pos:line="26" pos:column="6">strlen<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><name pos:line="26" pos:column="13">chlg64<pos:position pos:line="26" pos:column="19"/></name></expr></argument>)<pos:position pos:line="26" pos:column="20"/></argument_list></call> <operator pos:line="26" pos:column="21">&amp;&amp;<pos:position pos:line="26" pos:column="31"/></operator> <operator pos:line="26" pos:column="24">*<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">chlg64<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">!=<pos:position pos:line="26" pos:column="34"/></operator> <literal type="char" pos:line="26" pos:column="35">'='<pos:position pos:line="26" pos:column="38"/></literal></expr>)<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39"> <block pos:line="26" pos:column="40">{
    <expr_stmt><expr><name pos:line="27" pos:column="5">result<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">Curl_base64_decode<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">chlg64<pos:position pos:line="27" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="41">&amp;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="42">chlg<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="48">&amp;<pos:position pos:line="27" pos:column="53"/></operator><name pos:line="27" pos:column="49">chlglen<pos:position pos:line="27" pos:column="56"/></name></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt>
    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><name pos:line="28" pos:column="8">result<pos:position pos:line="28" pos:column="14"/></name></expr>)<pos:position pos:line="28" pos:column="15"/></condition><then pos:line="28" pos:column="15">
      <block type="pseudo"><return pos:line="29" pos:column="7">return <expr><name pos:line="29" pos:column="14">result<pos:position pos:line="29" pos:column="20"/></name></expr>;<pos:position pos:line="29" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="32" pos:column="3">/* Ensure we have a valid challenge message */</comment>
  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><operator pos:line="33" pos:column="6">!<pos:position pos:line="33" pos:column="7"/></operator><name pos:line="33" pos:column="7">chlg<pos:position pos:line="33" pos:column="11"/></name></expr>)<pos:position pos:line="33" pos:column="12"/></condition><then pos:line="33" pos:column="12"> <block pos:line="33" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">infof<pos:position pos:line="34" pos:column="10"/></name><argument_list pos:line="34" pos:column="10">(<argument><expr><name pos:line="34" pos:column="11">data<pos:position pos:line="34" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="17">"GSSAPI handshake failure (empty security message)\n"<pos:position pos:line="34" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></expr_stmt>

    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">CURLE_BAD_CONTENT_ENCODING<pos:position pos:line="36" pos:column="38"/></name></expr>;<pos:position pos:line="36" pos:column="39"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="39" pos:column="3">/* Get the fully qualified username back from the context */</comment>
  <expr_stmt><expr><name pos:line="40" pos:column="3">gss_major_status<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <call><name pos:line="40" pos:column="22">gss_inquire_context<pos:position pos:line="40" pos:column="41"/></name><argument_list pos:line="40" pos:column="41">(<argument><expr><operator pos:line="40" pos:column="42">&amp;<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="43">gss_minor_status<pos:position pos:line="40" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="61">krb5<pos:position pos:line="40" pos:column="65"/></name><operator pos:line="40" pos:column="65">-&gt;<pos:position pos:line="40" pos:column="70"/></operator><name pos:line="40" pos:column="67">context<pos:position pos:line="40" pos:column="74"/></name></name></expr></argument>,
                                         <argument><expr><operator pos:line="41" pos:column="42">&amp;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="43">username<pos:position pos:line="41" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="53">NULL<pos:position pos:line="41" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="59">NULL<pos:position pos:line="41" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="65">NULL<pos:position pos:line="41" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="71">NULL<pos:position pos:line="41" pos:column="75"/></name></expr></argument>,
                                         <argument><expr><name pos:line="42" pos:column="42">NULL<pos:position pos:line="42" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="48">NULL<pos:position pos:line="42" pos:column="52"/></name></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>
  <if pos:line="43" pos:column="3">if<condition pos:line="43" pos:column="5">(<expr><call><name pos:line="43" pos:column="6">GSS_ERROR<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><name pos:line="43" pos:column="16">gss_major_status<pos:position pos:line="43" pos:column="32"/></name></expr></argument>)<pos:position pos:line="43" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="34"/></condition><then pos:line="43" pos:column="34"> <block pos:line="43" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">Curl_gss_log_error<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><name pos:line="44" pos:column="24">data<pos:position pos:line="44" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="30">gss_minor_status<pos:position pos:line="44" pos:column="46"/></name></expr></argument>,
                       <argument><expr><literal type="string" pos:line="45" pos:column="24">"gss_inquire_context() failed: "<pos:position pos:line="45" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="58"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">Curl_safefree<pos:position pos:line="47" pos:column="18"/></name><argument_list pos:line="47" pos:column="18">(<argument><expr><name pos:line="47" pos:column="19">chlg<pos:position pos:line="47" pos:column="23"/></name></expr></argument>)<pos:position pos:line="47" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="25"/></expr_stmt>

    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="49" pos:column="31"/></name></expr>;<pos:position pos:line="49" pos:column="32"/></return>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="52" pos:column="3">/* Convert the username from internal format to a displayable token */</comment>
  <expr_stmt><expr><name pos:line="53" pos:column="3">gss_major_status<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">=<pos:position pos:line="53" pos:column="21"/></operator> <call><name pos:line="53" pos:column="22">gss_display_name<pos:position pos:line="53" pos:column="38"/></name><argument_list pos:line="53" pos:column="38">(<argument><expr><operator pos:line="53" pos:column="39">&amp;<pos:position pos:line="53" pos:column="44"/></operator><name pos:line="53" pos:column="40">gss_minor_status<pos:position pos:line="53" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="58">username<pos:position pos:line="53" pos:column="66"/></name></expr></argument>,
                                      <argument><expr><operator pos:line="54" pos:column="39">&amp;<pos:position pos:line="54" pos:column="44"/></operator><name pos:line="54" pos:column="40">username_token<pos:position pos:line="54" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="56">NULL<pos:position pos:line="54" pos:column="60"/></name></expr></argument>)<pos:position pos:line="54" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="62"/></expr_stmt>
  <if pos:line="55" pos:column="3">if<condition pos:line="55" pos:column="5">(<expr><call><name pos:line="55" pos:column="6">GSS_ERROR<pos:position pos:line="55" pos:column="15"/></name><argument_list pos:line="55" pos:column="15">(<argument><expr><name pos:line="55" pos:column="16">gss_major_status<pos:position pos:line="55" pos:column="32"/></name></expr></argument>)<pos:position pos:line="55" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="34"/></condition><then pos:line="55" pos:column="34"> <block pos:line="55" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">Curl_gss_log_error<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">(<argument><expr><name pos:line="56" pos:column="24">data<pos:position pos:line="56" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="30">gss_minor_status<pos:position pos:line="56" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="48">"gss_display_name() failed: "<pos:position pos:line="56" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="79"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="58" pos:column="5">Curl_safefree<pos:position pos:line="58" pos:column="18"/></name><argument_list pos:line="58" pos:column="18">(<argument><expr><name pos:line="58" pos:column="19">chlg<pos:position pos:line="58" pos:column="23"/></name></expr></argument>)<pos:position pos:line="58" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="25"/></expr_stmt>

    <return pos:line="60" pos:column="5">return <expr><name pos:line="60" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="60" pos:column="31"/></name></expr>;<pos:position pos:line="60" pos:column="32"/></return>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="63" pos:column="3">/* Setup the challenge "input" security buffer */</comment>
  <expr_stmt><expr><name><name pos:line="64" pos:column="3">input_token<pos:position pos:line="64" pos:column="14"/></name><operator pos:line="64" pos:column="14">.<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="15">value<pos:position pos:line="64" pos:column="20"/></name></name> <operator pos:line="64" pos:column="21">=<pos:position pos:line="64" pos:column="22"/></operator> <name pos:line="64" pos:column="23">chlg<pos:position pos:line="64" pos:column="27"/></name></expr>;<pos:position pos:line="64" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="65" pos:column="3">input_token<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">.<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="15">length<pos:position pos:line="65" pos:column="21"/></name></name> <operator pos:line="65" pos:column="22">=<pos:position pos:line="65" pos:column="23"/></operator> <name pos:line="65" pos:column="24">chlglen<pos:position pos:line="65" pos:column="31"/></name></expr>;<pos:position pos:line="65" pos:column="32"/></expr_stmt>

  <comment type="block" pos:line="67" pos:column="3">/* Decrypt the inbound challenge and obtain the qop */</comment>
  <expr_stmt><expr><name pos:line="68" pos:column="3">gss_major_status<pos:position pos:line="68" pos:column="19"/></name> <operator pos:line="68" pos:column="20">=<pos:position pos:line="68" pos:column="21"/></operator> <call><name pos:line="68" pos:column="22">gss_unwrap<pos:position pos:line="68" pos:column="32"/></name><argument_list pos:line="68" pos:column="32">(<argument><expr><operator pos:line="68" pos:column="33">&amp;<pos:position pos:line="68" pos:column="38"/></operator><name pos:line="68" pos:column="34">gss_minor_status<pos:position pos:line="68" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="52">krb5<pos:position pos:line="68" pos:column="56"/></name><operator pos:line="68" pos:column="56">-&gt;<pos:position pos:line="68" pos:column="61"/></operator><name pos:line="68" pos:column="58">context<pos:position pos:line="68" pos:column="65"/></name></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="67">&amp;<pos:position pos:line="68" pos:column="72"/></operator><name pos:line="68" pos:column="68">input_token<pos:position pos:line="68" pos:column="79"/></name></expr></argument>,
                                <argument><expr><operator pos:line="69" pos:column="33">&amp;<pos:position pos:line="69" pos:column="38"/></operator><name pos:line="69" pos:column="34">output_token<pos:position pos:line="69" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="48">NULL<pos:position pos:line="69" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="54">&amp;<pos:position pos:line="69" pos:column="59"/></operator><name pos:line="69" pos:column="55">qop<pos:position pos:line="69" pos:column="58"/></name></expr></argument>)<pos:position pos:line="69" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="60"/></expr_stmt>
  <if pos:line="70" pos:column="3">if<condition pos:line="70" pos:column="5">(<expr><call><name pos:line="70" pos:column="6">GSS_ERROR<pos:position pos:line="70" pos:column="15"/></name><argument_list pos:line="70" pos:column="15">(<argument><expr><name pos:line="70" pos:column="16">gss_major_status<pos:position pos:line="70" pos:column="32"/></name></expr></argument>)<pos:position pos:line="70" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="34"/></condition><then pos:line="70" pos:column="34"> <block pos:line="70" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">Curl_gss_log_error<pos:position pos:line="71" pos:column="23"/></name><argument_list pos:line="71" pos:column="23">(<argument><expr><name pos:line="71" pos:column="24">data<pos:position pos:line="71" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="30">gss_minor_status<pos:position pos:line="71" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="48">"gss_unwrap() failed: "<pos:position pos:line="71" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="73"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">gss_release_buffer<pos:position pos:line="73" pos:column="23"/></name><argument_list pos:line="73" pos:column="23">(<argument><expr><operator pos:line="73" pos:column="24">&amp;<pos:position pos:line="73" pos:column="29"/></operator><name pos:line="73" pos:column="25">gss_status<pos:position pos:line="73" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="37">&amp;<pos:position pos:line="73" pos:column="42"/></operator><name pos:line="73" pos:column="38">username_token<pos:position pos:line="73" pos:column="52"/></name></expr></argument>)<pos:position pos:line="73" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">Curl_safefree<pos:position pos:line="74" pos:column="18"/></name><argument_list pos:line="74" pos:column="18">(<argument><expr><name pos:line="74" pos:column="19">chlg<pos:position pos:line="74" pos:column="23"/></name></expr></argument>)<pos:position pos:line="74" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="25"/></expr_stmt>

    <return pos:line="76" pos:column="5">return <expr><name pos:line="76" pos:column="12">CURLE_BAD_CONTENT_ENCODING<pos:position pos:line="76" pos:column="38"/></name></expr>;<pos:position pos:line="76" pos:column="39"/></return>
  }<pos:position pos:line="77" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="79" pos:column="3">/* Not 4 octets long so fail as per RFC4752 Section 3.1 */</comment>
  <if pos:line="80" pos:column="3">if<condition pos:line="80" pos:column="5">(<expr><name><name pos:line="80" pos:column="6">output_token<pos:position pos:line="80" pos:column="18"/></name><operator pos:line="80" pos:column="18">.<pos:position pos:line="80" pos:column="19"/></operator><name pos:line="80" pos:column="19">length<pos:position pos:line="80" pos:column="25"/></name></name> <operator pos:line="80" pos:column="26">!=<pos:position pos:line="80" pos:column="28"/></operator> <literal type="number" pos:line="80" pos:column="29">4<pos:position pos:line="80" pos:column="30"/></literal></expr>)<pos:position pos:line="80" pos:column="31"/></condition><then pos:line="80" pos:column="31"> <block pos:line="80" pos:column="32">{
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">infof<pos:position pos:line="81" pos:column="10"/></name><argument_list pos:line="81" pos:column="10">(<argument><expr><name pos:line="81" pos:column="11">data<pos:position pos:line="81" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="17">"GSSAPI handshake failure (invalid security data)\n"<pos:position pos:line="81" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="71"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="83" pos:column="5">gss_release_buffer<pos:position pos:line="83" pos:column="23"/></name><argument_list pos:line="83" pos:column="23">(<argument><expr><operator pos:line="83" pos:column="24">&amp;<pos:position pos:line="83" pos:column="29"/></operator><name pos:line="83" pos:column="25">gss_status<pos:position pos:line="83" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="37">&amp;<pos:position pos:line="83" pos:column="42"/></operator><name pos:line="83" pos:column="38">username_token<pos:position pos:line="83" pos:column="52"/></name></expr></argument>)<pos:position pos:line="83" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">Curl_safefree<pos:position pos:line="84" pos:column="18"/></name><argument_list pos:line="84" pos:column="18">(<argument><expr><name pos:line="84" pos:column="19">chlg<pos:position pos:line="84" pos:column="23"/></name></expr></argument>)<pos:position pos:line="84" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="25"/></expr_stmt>

    <return pos:line="86" pos:column="5">return <expr><name pos:line="86" pos:column="12">CURLE_BAD_CONTENT_ENCODING<pos:position pos:line="86" pos:column="38"/></name></expr>;<pos:position pos:line="86" pos:column="39"/></return>
  }<pos:position pos:line="87" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="89" pos:column="3">/* Copy the data out and free the challenge as it is not required anymore */</comment>
  <expr_stmt><expr><call><name pos:line="90" pos:column="3">memcpy<pos:position pos:line="90" pos:column="9"/></name><argument_list pos:line="90" pos:column="9">(<argument><expr><operator pos:line="90" pos:column="10">&amp;<pos:position pos:line="90" pos:column="15"/></operator><name pos:line="90" pos:column="11">indata<pos:position pos:line="90" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="19">output_token<pos:position pos:line="90" pos:column="31"/></name><operator pos:line="90" pos:column="31">.<pos:position pos:line="90" pos:column="32"/></operator><name pos:line="90" pos:column="32">value<pos:position pos:line="90" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="39">4<pos:position pos:line="90" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="91" pos:column="3">gss_release_buffer<pos:position pos:line="91" pos:column="21"/></name><argument_list pos:line="91" pos:column="21">(<argument><expr><operator pos:line="91" pos:column="22">&amp;<pos:position pos:line="91" pos:column="27"/></operator><name pos:line="91" pos:column="23">gss_status<pos:position pos:line="91" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="35">&amp;<pos:position pos:line="91" pos:column="40"/></operator><name pos:line="91" pos:column="36">output_token<pos:position pos:line="91" pos:column="48"/></name></expr></argument>)<pos:position pos:line="91" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="92" pos:column="3">Curl_safefree<pos:position pos:line="92" pos:column="16"/></name><argument_list pos:line="92" pos:column="16">(<argument><expr><name pos:line="92" pos:column="17">chlg<pos:position pos:line="92" pos:column="21"/></name></expr></argument>)<pos:position pos:line="92" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="23"/></expr_stmt>

  <comment type="block" pos:line="94" pos:column="3">/* Extract the security layer */</comment>
  <expr_stmt><expr><name pos:line="95" pos:column="3">sec_layer<pos:position pos:line="95" pos:column="12"/></name> <operator pos:line="95" pos:column="13">=<pos:position pos:line="95" pos:column="14"/></operator> <name pos:line="95" pos:column="15">indata<pos:position pos:line="95" pos:column="21"/></name> <operator pos:line="95" pos:column="22">&amp;<pos:position pos:line="95" pos:column="27"/></operator> <literal type="number" pos:line="95" pos:column="24">0x000000FF<pos:position pos:line="95" pos:column="34"/></literal></expr>;<pos:position pos:line="95" pos:column="35"/></expr_stmt>
  <if pos:line="96" pos:column="3">if<condition pos:line="96" pos:column="5">(<expr><operator pos:line="96" pos:column="6">!<pos:position pos:line="96" pos:column="7"/></operator><operator pos:line="96" pos:column="7">(<pos:position pos:line="96" pos:column="8"/></operator><name pos:line="96" pos:column="8">sec_layer<pos:position pos:line="96" pos:column="17"/></name> <operator pos:line="96" pos:column="18">&amp;<pos:position pos:line="96" pos:column="23"/></operator> <name pos:line="96" pos:column="20">GSSAUTH_P_NONE<pos:position pos:line="96" pos:column="34"/></name><operator pos:line="96" pos:column="34">)<pos:position pos:line="96" pos:column="35"/></operator></expr>)<pos:position pos:line="96" pos:column="36"/></condition><then pos:line="96" pos:column="36"> <block pos:line="96" pos:column="37">{
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">infof<pos:position pos:line="97" pos:column="10"/></name><argument_list pos:line="97" pos:column="10">(<argument><expr><name pos:line="97" pos:column="11">data<pos:position pos:line="97" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="17">"GSSAPI handshake failure (invalid security layer)\n"<pos:position pos:line="97" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="72"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="99" pos:column="5">gss_release_buffer<pos:position pos:line="99" pos:column="23"/></name><argument_list pos:line="99" pos:column="23">(<argument><expr><operator pos:line="99" pos:column="24">&amp;<pos:position pos:line="99" pos:column="29"/></operator><name pos:line="99" pos:column="25">gss_status<pos:position pos:line="99" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="37">&amp;<pos:position pos:line="99" pos:column="42"/></operator><name pos:line="99" pos:column="38">username_token<pos:position pos:line="99" pos:column="52"/></name></expr></argument>)<pos:position pos:line="99" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="54"/></expr_stmt>

    <return pos:line="101" pos:column="5">return <expr><name pos:line="101" pos:column="12">CURLE_BAD_CONTENT_ENCODING<pos:position pos:line="101" pos:column="38"/></name></expr>;<pos:position pos:line="101" pos:column="39"/></return>
  }<pos:position pos:line="102" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="104" pos:column="3">/* Extract the maximum message size the server can receive */</comment>
  <expr_stmt><expr><name pos:line="105" pos:column="3">max_size<pos:position pos:line="105" pos:column="11"/></name> <operator pos:line="105" pos:column="12">=<pos:position pos:line="105" pos:column="13"/></operator> <call><name pos:line="105" pos:column="14">ntohl<pos:position pos:line="105" pos:column="19"/></name><argument_list pos:line="105" pos:column="19">(<argument><expr><name pos:line="105" pos:column="20">indata<pos:position pos:line="105" pos:column="26"/></name> <operator pos:line="105" pos:column="27">&amp;<pos:position pos:line="105" pos:column="32"/></operator> <literal type="number" pos:line="105" pos:column="29">0xFFFFFF00<pos:position pos:line="105" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="41"/></expr_stmt>
  <if pos:line="106" pos:column="3">if<condition pos:line="106" pos:column="5">(<expr><name pos:line="106" pos:column="6">max_size<pos:position pos:line="106" pos:column="14"/></name> <operator pos:line="106" pos:column="15">&gt;<pos:position pos:line="106" pos:column="19"/></operator> <literal type="number" pos:line="106" pos:column="17">0<pos:position pos:line="106" pos:column="18"/></literal></expr>)<pos:position pos:line="106" pos:column="19"/></condition><then pos:line="106" pos:column="19"> <block pos:line="106" pos:column="20">{
    <comment type="block" pos:line="107" pos:column="5">/* The server has told us it supports a maximum receive buffer, however, as
       we don't require one unless we are encrypting data, we tell the server
       our receive buffer is zero. */</comment>
    <expr_stmt><expr><name pos:line="110" pos:column="5">max_size<pos:position pos:line="110" pos:column="13"/></name> <operator pos:line="110" pos:column="14">=<pos:position pos:line="110" pos:column="15"/></operator> <literal type="number" pos:line="110" pos:column="16">0<pos:position pos:line="110" pos:column="17"/></literal></expr>;<pos:position pos:line="110" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="111" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="113" pos:column="3">/* Allocate our message */</comment>
  <expr_stmt><expr><name pos:line="114" pos:column="3">messagelen<pos:position pos:line="114" pos:column="13"/></name> <operator pos:line="114" pos:column="14">=<pos:position pos:line="114" pos:column="15"/></operator> <sizeof pos:line="114" pos:column="16">sizeof<argument_list pos:line="114" pos:column="22">(<argument><expr><name pos:line="114" pos:column="23">outdata<pos:position pos:line="114" pos:column="30"/></name></expr></argument>)<pos:position pos:line="114" pos:column="31"/></argument_list></sizeof> <operator pos:line="114" pos:column="32">+<pos:position pos:line="114" pos:column="33"/></operator> <name><name pos:line="114" pos:column="34">username_token<pos:position pos:line="114" pos:column="48"/></name><operator pos:line="114" pos:column="48">.<pos:position pos:line="114" pos:column="49"/></operator><name pos:line="114" pos:column="49">length<pos:position pos:line="114" pos:column="55"/></name></name> <operator pos:line="114" pos:column="56">+<pos:position pos:line="114" pos:column="57"/></operator> <literal type="number" pos:line="114" pos:column="58">1<pos:position pos:line="114" pos:column="59"/></literal></expr>;<pos:position pos:line="114" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><name pos:line="115" pos:column="3">message<pos:position pos:line="115" pos:column="10"/></name> <operator pos:line="115" pos:column="11">=<pos:position pos:line="115" pos:column="12"/></operator> <call><name pos:line="115" pos:column="13">malloc<pos:position pos:line="115" pos:column="19"/></name><argument_list pos:line="115" pos:column="19">(<argument><expr><name pos:line="115" pos:column="20">messagelen<pos:position pos:line="115" pos:column="30"/></name></expr></argument>)<pos:position pos:line="115" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="32"/></expr_stmt>
  <if pos:line="116" pos:column="3">if<condition pos:line="116" pos:column="5">(<expr><operator pos:line="116" pos:column="6">!<pos:position pos:line="116" pos:column="7"/></operator><name pos:line="116" pos:column="7">message<pos:position pos:line="116" pos:column="14"/></name></expr>)<pos:position pos:line="116" pos:column="15"/></condition><then pos:line="116" pos:column="15"> <block pos:line="116" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="117" pos:column="5">gss_release_buffer<pos:position pos:line="117" pos:column="23"/></name><argument_list pos:line="117" pos:column="23">(<argument><expr><operator pos:line="117" pos:column="24">&amp;<pos:position pos:line="117" pos:column="29"/></operator><name pos:line="117" pos:column="25">gss_status<pos:position pos:line="117" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="117" pos:column="37">&amp;<pos:position pos:line="117" pos:column="42"/></operator><name pos:line="117" pos:column="38">username_token<pos:position pos:line="117" pos:column="52"/></name></expr></argument>)<pos:position pos:line="117" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="54"/></expr_stmt>

    <return pos:line="119" pos:column="5">return <expr><name pos:line="119" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="119" pos:column="31"/></name></expr>;<pos:position pos:line="119" pos:column="32"/></return>
  }<pos:position pos:line="120" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="122" pos:column="3">/* Populate the message with the security layer, client supported receive
     message size and authorization identity including the 0x00 based
     terminator. Note: Dispite RFC4752 Section 3.1 stating "The authorization
     identity is not terminated with the zero-valued (%x00) octet." it seems
     necessary to include it. */</comment>
  <expr_stmt><expr><name pos:line="127" pos:column="3">outdata<pos:position pos:line="127" pos:column="10"/></name> <operator pos:line="127" pos:column="11">=<pos:position pos:line="127" pos:column="12"/></operator> <call><name pos:line="127" pos:column="13">htonl<pos:position pos:line="127" pos:column="18"/></name><argument_list pos:line="127" pos:column="18">(<argument><expr><name pos:line="127" pos:column="19">max_size<pos:position pos:line="127" pos:column="27"/></name></expr></argument>)<pos:position pos:line="127" pos:column="28"/></argument_list></call> <operator pos:line="127" pos:column="29">|<pos:position pos:line="127" pos:column="30"/></operator> <name pos:line="127" pos:column="31">sec_layer<pos:position pos:line="127" pos:column="40"/></name></expr>;<pos:position pos:line="127" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="128" pos:column="3">memcpy<pos:position pos:line="128" pos:column="9"/></name><argument_list pos:line="128" pos:column="9">(<argument><expr><name pos:line="128" pos:column="10">message<pos:position pos:line="128" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="128" pos:column="19">&amp;<pos:position pos:line="128" pos:column="24"/></operator><name pos:line="128" pos:column="20">outdata<pos:position pos:line="128" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="128" pos:column="29">sizeof<argument_list pos:line="128" pos:column="35">(<argument><expr><name pos:line="128" pos:column="36">outdata<pos:position pos:line="128" pos:column="43"/></name></expr></argument>)<pos:position pos:line="128" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="128" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="129" pos:column="3">memcpy<pos:position pos:line="129" pos:column="9"/></name><argument_list pos:line="129" pos:column="9">(<argument><expr><name pos:line="129" pos:column="10">message<pos:position pos:line="129" pos:column="17"/></name> <operator pos:line="129" pos:column="18">+<pos:position pos:line="129" pos:column="19"/></operator> <sizeof pos:line="129" pos:column="20">sizeof<argument_list pos:line="129" pos:column="26">(<argument><expr><name pos:line="129" pos:column="27">outdata<pos:position pos:line="129" pos:column="34"/></name></expr></argument>)<pos:position pos:line="129" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="37">username_token<pos:position pos:line="129" pos:column="51"/></name><operator pos:line="129" pos:column="51">.<pos:position pos:line="129" pos:column="52"/></operator><name pos:line="129" pos:column="52">value<pos:position pos:line="129" pos:column="57"/></name></name></expr></argument>,
         <argument><expr><name><name pos:line="130" pos:column="10">username_token<pos:position pos:line="130" pos:column="24"/></name><operator pos:line="130" pos:column="24">.<pos:position pos:line="130" pos:column="25"/></operator><name pos:line="130" pos:column="25">length<pos:position pos:line="130" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="131" pos:column="3">message<pos:position pos:line="131" pos:column="10"/></name><index pos:line="131" pos:column="10">[<expr><name pos:line="131" pos:column="11">messagelen<pos:position pos:line="131" pos:column="21"/></name> <operator pos:line="131" pos:column="22">-<pos:position pos:line="131" pos:column="23"/></operator> <literal type="number" pos:line="131" pos:column="24">1<pos:position pos:line="131" pos:column="25"/></literal></expr>]<pos:position pos:line="131" pos:column="26"/></index></name> <operator pos:line="131" pos:column="27">=<pos:position pos:line="131" pos:column="28"/></operator> <literal type="char" pos:line="131" pos:column="29">'\0'<pos:position pos:line="131" pos:column="33"/></literal></expr>;<pos:position pos:line="131" pos:column="34"/></expr_stmt>

  <comment type="block" pos:line="133" pos:column="3">/* Free the username token as it is not required anymore */</comment>
  <expr_stmt><expr><call><name pos:line="134" pos:column="3">gss_release_buffer<pos:position pos:line="134" pos:column="21"/></name><argument_list pos:line="134" pos:column="21">(<argument><expr><operator pos:line="134" pos:column="22">&amp;<pos:position pos:line="134" pos:column="27"/></operator><name pos:line="134" pos:column="23">gss_status<pos:position pos:line="134" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="134" pos:column="35">&amp;<pos:position pos:line="134" pos:column="40"/></operator><name pos:line="134" pos:column="36">username_token<pos:position pos:line="134" pos:column="50"/></name></expr></argument>)<pos:position pos:line="134" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="136" pos:column="3">/* Setup the "authentication data" security buffer */</comment>
  <expr_stmt><expr><name><name pos:line="137" pos:column="3">input_token<pos:position pos:line="137" pos:column="14"/></name><operator pos:line="137" pos:column="14">.<pos:position pos:line="137" pos:column="15"/></operator><name pos:line="137" pos:column="15">value<pos:position pos:line="137" pos:column="20"/></name></name> <operator pos:line="137" pos:column="21">=<pos:position pos:line="137" pos:column="22"/></operator> <name pos:line="137" pos:column="23">message<pos:position pos:line="137" pos:column="30"/></name></expr>;<pos:position pos:line="137" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="138" pos:column="3">input_token<pos:position pos:line="138" pos:column="14"/></name><operator pos:line="138" pos:column="14">.<pos:position pos:line="138" pos:column="15"/></operator><name pos:line="138" pos:column="15">length<pos:position pos:line="138" pos:column="21"/></name></name> <operator pos:line="138" pos:column="22">=<pos:position pos:line="138" pos:column="23"/></operator> <name pos:line="138" pos:column="24">messagelen<pos:position pos:line="138" pos:column="34"/></name></expr>;<pos:position pos:line="138" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="140" pos:column="3">/* Encrypt the data */</comment>
  <expr_stmt><expr><name pos:line="141" pos:column="3">gss_major_status<pos:position pos:line="141" pos:column="19"/></name> <operator pos:line="141" pos:column="20">=<pos:position pos:line="141" pos:column="21"/></operator> <call><name pos:line="141" pos:column="22">gss_wrap<pos:position pos:line="141" pos:column="30"/></name><argument_list pos:line="141" pos:column="30">(<argument><expr><operator pos:line="141" pos:column="31">&amp;<pos:position pos:line="141" pos:column="36"/></operator><name pos:line="141" pos:column="32">gss_minor_status<pos:position pos:line="141" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="141" pos:column="50">krb5<pos:position pos:line="141" pos:column="54"/></name><operator pos:line="141" pos:column="54">-&gt;<pos:position pos:line="141" pos:column="59"/></operator><name pos:line="141" pos:column="56">context<pos:position pos:line="141" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="65">0<pos:position pos:line="141" pos:column="66"/></literal></expr></argument>,
                              <argument><expr><name pos:line="142" pos:column="31">GSS_C_QOP_DEFAULT<pos:position pos:line="142" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="50">&amp;<pos:position pos:line="142" pos:column="55"/></operator><name pos:line="142" pos:column="51">input_token<pos:position pos:line="142" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="64">NULL<pos:position pos:line="142" pos:column="68"/></name></expr></argument>,
                              <argument><expr><operator pos:line="143" pos:column="31">&amp;<pos:position pos:line="143" pos:column="36"/></operator><name pos:line="143" pos:column="32">output_token<pos:position pos:line="143" pos:column="44"/></name></expr></argument>)<pos:position pos:line="143" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="46"/></expr_stmt>
  <if pos:line="144" pos:column="3">if<condition pos:line="144" pos:column="5">(<expr><call><name pos:line="144" pos:column="6">GSS_ERROR<pos:position pos:line="144" pos:column="15"/></name><argument_list pos:line="144" pos:column="15">(<argument><expr><name pos:line="144" pos:column="16">gss_major_status<pos:position pos:line="144" pos:column="32"/></name></expr></argument>)<pos:position pos:line="144" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="144" pos:column="34"/></condition><then pos:line="144" pos:column="34"> <block pos:line="144" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="145" pos:column="5">Curl_gss_log_error<pos:position pos:line="145" pos:column="23"/></name><argument_list pos:line="145" pos:column="23">(<argument><expr><name pos:line="145" pos:column="24">data<pos:position pos:line="145" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="30">gss_minor_status<pos:position pos:line="145" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="48">"gss_wrap() failed: "<pos:position pos:line="145" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="71"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="147" pos:column="5">Curl_safefree<pos:position pos:line="147" pos:column="18"/></name><argument_list pos:line="147" pos:column="18">(<argument><expr><name pos:line="147" pos:column="19">message<pos:position pos:line="147" pos:column="26"/></name></expr></argument>)<pos:position pos:line="147" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="28"/></expr_stmt>

    <return pos:line="149" pos:column="5">return <expr><name pos:line="149" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="149" pos:column="31"/></name></expr>;<pos:position pos:line="149" pos:column="32"/></return>
  }<pos:position pos:line="150" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="152" pos:column="3">/* Base64 encode the response */</comment>
  <expr_stmt><expr><name pos:line="153" pos:column="3">result<pos:position pos:line="153" pos:column="9"/></name> <operator pos:line="153" pos:column="10">=<pos:position pos:line="153" pos:column="11"/></operator> <call><name pos:line="153" pos:column="12">Curl_base64_encode<pos:position pos:line="153" pos:column="30"/></name><argument_list pos:line="153" pos:column="30">(<argument><expr><name pos:line="153" pos:column="31">data<pos:position pos:line="153" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="153" pos:column="37">(<pos:position pos:line="153" pos:column="38"/></operator><name pos:line="153" pos:column="38">char<pos:position pos:line="153" pos:column="42"/></name> <operator pos:line="153" pos:column="43">*<pos:position pos:line="153" pos:column="44"/></operator><operator pos:line="153" pos:column="44">)<pos:position pos:line="153" pos:column="45"/></operator> <name><name pos:line="153" pos:column="46">output_token<pos:position pos:line="153" pos:column="58"/></name><operator pos:line="153" pos:column="58">.<pos:position pos:line="153" pos:column="59"/></operator><name pos:line="153" pos:column="59">value<pos:position pos:line="153" pos:column="64"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="154" pos:column="31">output_token<pos:position pos:line="154" pos:column="43"/></name><operator pos:line="154" pos:column="43">.<pos:position pos:line="154" pos:column="44"/></operator><name pos:line="154" pos:column="44">length<pos:position pos:line="154" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="52">outptr<pos:position pos:line="154" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="60">outlen<pos:position pos:line="154" pos:column="66"/></name></expr></argument>)<pos:position pos:line="154" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="68"/></expr_stmt>

  <comment type="block" pos:line="156" pos:column="3">/* Free the output buffer */</comment>
  <expr_stmt><expr><call><name pos:line="157" pos:column="3">gss_release_buffer<pos:position pos:line="157" pos:column="21"/></name><argument_list pos:line="157" pos:column="21">(<argument><expr><operator pos:line="157" pos:column="22">&amp;<pos:position pos:line="157" pos:column="27"/></operator><name pos:line="157" pos:column="23">gss_status<pos:position pos:line="157" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="157" pos:column="35">&amp;<pos:position pos:line="157" pos:column="40"/></operator><name pos:line="157" pos:column="36">output_token<pos:position pos:line="157" pos:column="48"/></name></expr></argument>)<pos:position pos:line="157" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="50"/></expr_stmt>

  <comment type="block" pos:line="159" pos:column="3">/* Free the message buffer */</comment>
  <expr_stmt><expr><call><name pos:line="160" pos:column="3">Curl_safefree<pos:position pos:line="160" pos:column="16"/></name><argument_list pos:line="160" pos:column="16">(<argument><expr><name pos:line="160" pos:column="17">message<pos:position pos:line="160" pos:column="24"/></name></expr></argument>)<pos:position pos:line="160" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="26"/></expr_stmt>

  <return pos:line="162" pos:column="3">return <expr><name pos:line="162" pos:column="10">result<pos:position pos:line="162" pos:column="16"/></name></expr>;<pos:position pos:line="162" pos:column="17"/></return>
}<pos:position pos:line="163" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_88.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">http<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name><name pos:line="1" pos:column="15">struct<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">connectdata<pos:position pos:line="1" pos:column="33"/></name></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">conn<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">UrlData<pos:position pos:line="3" pos:column="17"/></name></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">data<pos:position pos:line="3" pos:column="23"/></name><init pos:line="3" pos:column="23">=<expr><name><name pos:line="3" pos:column="24">conn<pos:position pos:line="3" pos:column="28"/></name><operator pos:line="3" pos:column="28">-&gt;<pos:position pos:line="3" pos:column="33"/></operator><name pos:line="3" pos:column="30">data<pos:position pos:line="3" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">buf<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name><name pos:line="4" pos:column="15">data<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="21">buffer<pos:position pos:line="4" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt> <comment type="block" pos:line="4" pos:column="29">/* this is a short cut to the buffer */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name><init pos:line="5" pos:column="18">=<expr><name pos:line="5" pos:column="19">CURLE_OK<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">HTTP<pos:position pos:line="6" pos:column="14"/></name></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">http<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">Cookie<pos:position pos:line="7" pos:column="16"/></name></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">co<pos:position pos:line="7" pos:column="20"/></name><init pos:line="7" pos:column="20">=<expr><name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt> <comment type="block" pos:line="7" pos:column="27">/* no cookies from start */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">ppath<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name><name pos:line="8" pos:column="17">conn<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">ppath<pos:position pos:line="8" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt> <comment type="block" pos:line="8" pos:column="30">/* three previous function arguments */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">host<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name><name pos:line="9" pos:column="16">conn<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">name<pos:position pos:line="9" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">long<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">bytecount<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><operator pos:line="10" pos:column="21">&amp;<pos:position pos:line="10" pos:column="26"/></operator><name><name pos:line="10" pos:column="22">conn<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">bytecount<pos:position pos:line="10" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">http<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator>struct <name pos:line="12" pos:column="18">HTTP<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">*<pos:position pos:line="12" pos:column="24"/></operator><operator pos:line="12" pos:column="24">)<pos:position pos:line="12" pos:column="25"/></operator><call><name pos:line="12" pos:column="25">malloc<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><sizeof pos:line="12" pos:column="32">sizeof<argument_list pos:line="12" pos:column="38">(<argument><expr pos:line="12" pos:column="39">struct <name pos:line="12" pos:column="46">HTTP<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><operator pos:line="13" pos:column="6">!<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">http<pos:position pos:line="13" pos:column="11"/></name></expr>)<pos:position pos:line="13" pos:column="12"/></condition><then pos:line="13" pos:column="12">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">memset<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><name pos:line="15" pos:column="10">http<pos:position pos:line="15" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="19">sizeof<argument_list pos:line="15" pos:column="25">(<argument><expr pos:line="15" pos:column="26">struct <name pos:line="15" pos:column="33">HTTP<pos:position pos:line="15" pos:column="37"/></name></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">data<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">proto<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">.<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">http<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">http<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">( <expr><operator pos:line="18" pos:column="8">(<pos:position pos:line="18" pos:column="9"/></operator><name><name pos:line="18" pos:column="9">conn<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">protocol<pos:position pos:line="18" pos:column="23"/></name></name><operator pos:line="18" pos:column="23">&amp;<pos:position pos:line="18" pos:column="28"/></operator><operator pos:line="18" pos:column="24">(<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">PROT_HTTP<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">|<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">PROT_FTP<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">)<pos:position pos:line="18" pos:column="44"/></operator><operator pos:line="18" pos:column="44">)<pos:position pos:line="18" pos:column="45"/></operator> <operator pos:line="18" pos:column="46">&amp;&amp;<pos:position pos:line="18" pos:column="56"/></operator>
       <name><name pos:line="19" pos:column="8">data<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">bits<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">.<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">upload<pos:position pos:line="19" pos:column="25"/></name></name></expr>)<pos:position pos:line="19" pos:column="26"/></condition><then pos:line="19" pos:column="26"> <block pos:line="19" pos:column="27">{
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">data<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">bits<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">.<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="16">http_put<pos:position pos:line="20" pos:column="24"/></name></name><operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator><literal type="number" pos:line="20" pos:column="25">1<pos:position pos:line="20" pos:column="26"/></literal></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
  
  <comment type="block" pos:line="23" pos:column="3">/* The User-Agent string has been built in url.c already, because it might
     have been used in the proxy connect, but if we have got a header with
     the user-agent string specified, we erase the previously made string
     here. */</comment>
  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><call><name pos:line="27" pos:column="6">checkheaders<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">(<argument><expr><name pos:line="27" pos:column="19">data<pos:position pos:line="27" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="25">"User-Agent:"<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call> <operator pos:line="27" pos:column="40">&amp;&amp;<pos:position pos:line="27" pos:column="50"/></operator> <name><name pos:line="27" pos:column="43">data<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">-&gt;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="49">ptr_uagent<pos:position pos:line="27" pos:column="59"/></name></name></expr>)<pos:position pos:line="27" pos:column="60"/></condition><then pos:line="27" pos:column="60"> <block pos:line="27" pos:column="61">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">free<pos:position pos:line="28" pos:column="9"/></name><argument_list pos:line="28" pos:column="9">(<argument><expr><name><name pos:line="28" pos:column="10">data<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">ptr_uagent<pos:position pos:line="28" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">data<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">ptr_uagent<pos:position pos:line="29" pos:column="21"/></name></name><operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">NULL<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">(<expr><operator pos:line="32" pos:column="6">(<pos:position pos:line="32" pos:column="7"/></operator><name><name pos:line="32" pos:column="7">data<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">bits<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">.<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">user_passwd<pos:position pos:line="32" pos:column="29"/></name></name><operator pos:line="32" pos:column="29">)<pos:position pos:line="32" pos:column="30"/></operator> <operator pos:line="32" pos:column="31">&amp;&amp;<pos:position pos:line="32" pos:column="41"/></operator> <operator pos:line="32" pos:column="34">!<pos:position pos:line="32" pos:column="35"/></operator><call><name pos:line="32" pos:column="35">checkheaders<pos:position pos:line="32" pos:column="47"/></name><argument_list pos:line="32" pos:column="47">(<argument><expr><name pos:line="32" pos:column="48">data<pos:position pos:line="32" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="54">"Authorization:"<pos:position pos:line="32" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="72"/></condition><then pos:line="32" pos:column="72"> <block pos:line="32" pos:column="73">{
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">char<pos:position pos:line="33" pos:column="9"/></name></type> <name><name pos:line="33" pos:column="10">authorization<pos:position pos:line="33" pos:column="23"/></name><index pos:line="33" pos:column="23">[<expr><literal type="number" pos:line="33" pos:column="24">512<pos:position pos:line="33" pos:column="27"/></literal></expr>]<pos:position pos:line="33" pos:column="28"/></index></name></decl>;<pos:position pos:line="33" pos:column="29"/></decl_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* To prevent the user+password to get sent to other than the original
       host due to a location-follow, we do some weirdo checks here */</comment>
    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><operator pos:line="37" pos:column="8">!<pos:position pos:line="37" pos:column="9"/></operator><name><name pos:line="37" pos:column="9">data<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">-&gt;<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="15">bits<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">.<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="20">this_is_a_follow<pos:position pos:line="37" pos:column="36"/></name></name> <operator pos:line="37" pos:column="37">||<pos:position pos:line="37" pos:column="39"/></operator>
       <operator pos:line="38" pos:column="8">!<pos:position pos:line="38" pos:column="9"/></operator><name><name pos:line="38" pos:column="9">data<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">auth_host<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">||<pos:position pos:line="38" pos:column="27"/></operator>
       <call><name pos:line="39" pos:column="8">strequal<pos:position pos:line="39" pos:column="16"/></name><argument_list pos:line="39" pos:column="16">(<argument><expr><name><name pos:line="39" pos:column="17">data<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">-&gt;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="23">auth_host<pos:position pos:line="39" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="34">data<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">-&gt;<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="40">hostname<pos:position pos:line="39" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="50"/></condition><then pos:line="39" pos:column="50"> <block pos:line="39" pos:column="51">{
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">sprintf<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><name><name pos:line="40" pos:column="15">data<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">buffer<pos:position pos:line="40" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="29">"%s:%s"<pos:position pos:line="40" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="38">data<pos:position pos:line="40" pos:column="42"/></name><operator pos:line="40" pos:column="42">-&gt;<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="44">user<pos:position pos:line="40" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="50">data<pos:position pos:line="40" pos:column="54"/></name><operator pos:line="40" pos:column="54">-&gt;<pos:position pos:line="40" pos:column="59"/></operator><name pos:line="40" pos:column="56">passwd<pos:position pos:line="40" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">base64Encode<pos:position pos:line="41" pos:column="19"/></name><argument_list pos:line="41" pos:column="19">(<argument><expr><name><name pos:line="41" pos:column="20">data<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">-&gt;<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="26">buffer<pos:position pos:line="41" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="34">authorization<pos:position pos:line="41" pos:column="47"/></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="42" pos:column="7">data<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">-&gt;<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="13">ptr_userpwd<pos:position pos:line="42" pos:column="24"/></name></name> <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <call><name pos:line="42" pos:column="27">maprintf<pos:position pos:line="42" pos:column="35"/></name><argument_list pos:line="42" pos:column="35">( <argument><expr><literal type="string" pos:line="42" pos:column="37">"Authorization: Basic %s\015\012"<pos:position pos:line="42" pos:column="70"/></literal></expr></argument>,
                                    <argument><expr><name pos:line="43" pos:column="37">authorization<pos:position pos:line="43" pos:column="50"/></name></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>
  <if pos:line="46" pos:column="3">if<condition pos:line="46" pos:column="5">(<expr><operator pos:line="46" pos:column="6">(<pos:position pos:line="46" pos:column="7"/></operator><name><name pos:line="46" pos:column="7">data<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">-&gt;<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="13">bits<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">.<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">set_range<pos:position pos:line="46" pos:column="27"/></name></name><operator pos:line="46" pos:column="27">)<pos:position pos:line="46" pos:column="28"/></operator> <operator pos:line="46" pos:column="29">&amp;&amp;<pos:position pos:line="46" pos:column="39"/></operator> <operator pos:line="46" pos:column="32">!<pos:position pos:line="46" pos:column="33"/></operator><call><name pos:line="46" pos:column="33">checkheaders<pos:position pos:line="46" pos:column="45"/></name><argument_list pos:line="46" pos:column="45">(<argument><expr><name pos:line="46" pos:column="46">data<pos:position pos:line="46" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="52">"Range:"<pos:position pos:line="46" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="62"/></condition><then pos:line="46" pos:column="62"> <block pos:line="46" pos:column="63">{
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">data<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">-&gt;<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="11">ptr_rangeline<pos:position pos:line="47" pos:column="24"/></name></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <call><name pos:line="47" pos:column="27">maprintf<pos:position pos:line="47" pos:column="35"/></name><argument_list pos:line="47" pos:column="35">(<argument><expr><literal type="string" pos:line="47" pos:column="36">"Range: bytes=%s\015\012"<pos:position pos:line="47" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="63">data<pos:position pos:line="47" pos:column="67"/></name><operator pos:line="47" pos:column="67">-&gt;<pos:position pos:line="47" pos:column="72"/></operator><name pos:line="47" pos:column="69">range<pos:position pos:line="47" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="76"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>
  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">(<expr><operator pos:line="49" pos:column="6">(<pos:position pos:line="49" pos:column="7"/></operator><name><name pos:line="49" pos:column="7">data<pos:position pos:line="49" pos:column="11"/></name><operator pos:line="49" pos:column="11">-&gt;<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="13">bits<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">.<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">http_set_referer<pos:position pos:line="49" pos:column="34"/></name></name><operator pos:line="49" pos:column="34">)<pos:position pos:line="49" pos:column="35"/></operator> <operator pos:line="49" pos:column="36">&amp;&amp;<pos:position pos:line="49" pos:column="46"/></operator> <operator pos:line="49" pos:column="39">!<pos:position pos:line="49" pos:column="40"/></operator><call><name pos:line="49" pos:column="40">checkheaders<pos:position pos:line="49" pos:column="52"/></name><argument_list pos:line="49" pos:column="52">(<argument><expr><name pos:line="49" pos:column="53">data<pos:position pos:line="49" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="59">"Referer:"<pos:position pos:line="49" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="71"/></condition><then pos:line="49" pos:column="71"> <block pos:line="49" pos:column="72">{
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">data<pos:position pos:line="50" pos:column="9"/></name><operator pos:line="50" pos:column="9">-&gt;<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="11">ptr_ref<pos:position pos:line="50" pos:column="18"/></name></name> <operator pos:line="50" pos:column="19">=<pos:position pos:line="50" pos:column="20"/></operator> <call><name pos:line="50" pos:column="21">maprintf<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">(<argument><expr><literal type="string" pos:line="50" pos:column="30">"Referer: %s\015\012"<pos:position pos:line="50" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="53">data<pos:position pos:line="50" pos:column="57"/></name><operator pos:line="50" pos:column="57">-&gt;<pos:position pos:line="50" pos:column="62"/></operator><name pos:line="50" pos:column="59">referer<pos:position pos:line="50" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="68"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>
  <if pos:line="52" pos:column="3">if<condition pos:line="52" pos:column="5">(<expr><name><name pos:line="52" pos:column="6">data<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">-&gt;<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="12">cookie<pos:position pos:line="52" pos:column="18"/></name></name> <operator pos:line="52" pos:column="19">&amp;&amp;<pos:position pos:line="52" pos:column="29"/></operator> <operator pos:line="52" pos:column="22">!<pos:position pos:line="52" pos:column="23"/></operator><call><name pos:line="52" pos:column="23">checkheaders<pos:position pos:line="52" pos:column="35"/></name><argument_list pos:line="52" pos:column="35">(<argument><expr><name pos:line="52" pos:column="36">data<pos:position pos:line="52" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="42">"Cookie:"<pos:position pos:line="52" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="53"/></condition><then pos:line="52" pos:column="53"> <block pos:line="52" pos:column="54">{
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">data<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">-&gt;<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="11">ptr_cookie<pos:position pos:line="53" pos:column="21"/></name></name> <operator pos:line="53" pos:column="22">=<pos:position pos:line="53" pos:column="23"/></operator> <call><name pos:line="53" pos:column="24">maprintf<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><literal type="string" pos:line="53" pos:column="33">"Cookie: %s\015\012"<pos:position pos:line="53" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="55">data<pos:position pos:line="53" pos:column="59"/></name><operator pos:line="53" pos:column="59">-&gt;<pos:position pos:line="53" pos:column="64"/></operator><name pos:line="53" pos:column="61">cookie<pos:position pos:line="53" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="69"/></expr_stmt>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>

  <if pos:line="56" pos:column="3">if<condition pos:line="56" pos:column="5">(<expr><name><name pos:line="56" pos:column="6">data<pos:position pos:line="56" pos:column="10"/></name><operator pos:line="56" pos:column="10">-&gt;<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="12">cookies<pos:position pos:line="56" pos:column="19"/></name></name></expr>)<pos:position pos:line="56" pos:column="20"/></condition><then pos:line="56" pos:column="20"> <block pos:line="56" pos:column="21">{
    <expr_stmt><expr><name pos:line="57" pos:column="5">co<pos:position pos:line="57" pos:column="7"/></name> <operator pos:line="57" pos:column="8">=<pos:position pos:line="57" pos:column="9"/></operator> <call><name pos:line="57" pos:column="10">cookie_getlist<pos:position pos:line="57" pos:column="24"/></name><argument_list pos:line="57" pos:column="24">(<argument><expr><name><name pos:line="57" pos:column="25">data<pos:position pos:line="57" pos:column="29"/></name><operator pos:line="57" pos:column="29">-&gt;<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="31">cookies<pos:position pos:line="57" pos:column="38"/></name></name></expr></argument>,
                        <argument><expr><name pos:line="58" pos:column="25">host<pos:position pos:line="58" pos:column="29"/></name></expr></argument>,
                        <argument><expr><name pos:line="59" pos:column="25">ppath<pos:position pos:line="59" pos:column="30"/></name></expr></argument>,
                        <argument><expr><ternary><condition><expr><name><name pos:line="60" pos:column="25">conn<pos:position pos:line="60" pos:column="29"/></name><operator pos:line="60" pos:column="29">-&gt;<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="31">protocol<pos:position pos:line="60" pos:column="39"/></name></name><operator pos:line="60" pos:column="39">&amp;<pos:position pos:line="60" pos:column="44"/></operator><name pos:line="60" pos:column="40">PROT_HTTPS<pos:position pos:line="60" pos:column="50"/></name></expr>?<pos:position pos:line="60" pos:column="51"/></condition><then><expr><name pos:line="60" pos:column="51">TRUE<pos:position pos:line="60" pos:column="55"/></name></expr></then><else pos:line="60" pos:column="55">:<expr><name pos:line="60" pos:column="56">FALSE<pos:position pos:line="60" pos:column="61"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="60" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>
  <if pos:line="62" pos:column="3">if <condition pos:line="62" pos:column="6">(<expr><operator pos:line="62" pos:column="7">(<pos:position pos:line="62" pos:column="8"/></operator><name><name pos:line="62" pos:column="8">data<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">bits<pos:position pos:line="62" pos:column="18"/></name><operator pos:line="62" pos:column="18">.<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="19">httpproxy<pos:position pos:line="62" pos:column="28"/></name></name><operator pos:line="62" pos:column="28">)<pos:position pos:line="62" pos:column="29"/></operator> <operator pos:line="62" pos:column="30">&amp;&amp;<pos:position pos:line="62" pos:column="40"/></operator> <operator pos:line="62" pos:column="33">!<pos:position pos:line="62" pos:column="34"/></operator><operator pos:line="62" pos:column="34">(<pos:position pos:line="62" pos:column="35"/></operator><name><name pos:line="62" pos:column="35">conn<pos:position pos:line="62" pos:column="39"/></name><operator pos:line="62" pos:column="39">-&gt;<pos:position pos:line="62" pos:column="44"/></operator><name pos:line="62" pos:column="41">protocol<pos:position pos:line="62" pos:column="49"/></name></name><operator pos:line="62" pos:column="49">&amp;<pos:position pos:line="62" pos:column="54"/></operator><name pos:line="62" pos:column="50">PROT_HTTPS<pos:position pos:line="62" pos:column="60"/></name><operator pos:line="62" pos:column="60">)<pos:position pos:line="62" pos:column="61"/></operator></expr>)<pos:position pos:line="62" pos:column="62"/></condition><then pos:line="62" pos:column="62">  <block pos:line="62" pos:column="64">{
    <comment type="block" pos:line="63" pos:column="5">/* The path sent to the proxy is in fact the entire URL */</comment>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">strncpy<pos:position pos:line="64" pos:column="12"/></name><argument_list pos:line="64" pos:column="12">(<argument><expr><name pos:line="64" pos:column="13">ppath<pos:position pos:line="64" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="20">data<pos:position pos:line="64" pos:column="24"/></name><operator pos:line="64" pos:column="24">-&gt;<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="26">url<pos:position pos:line="64" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="31">URL_MAX_LENGTH<pos:position pos:line="64" pos:column="45"/></name><operator pos:line="64" pos:column="45">-<pos:position pos:line="64" pos:column="46"/></operator><literal type="number" pos:line="64" pos:column="46">1<pos:position pos:line="64" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="65" pos:column="4"/></block></then></if>
  <if pos:line="66" pos:column="3">if<condition pos:line="66" pos:column="5">(<expr><name><name pos:line="66" pos:column="6">data<pos:position pos:line="66" pos:column="10"/></name><operator pos:line="66" pos:column="10">-&gt;<pos:position pos:line="66" pos:column="15"/></operator><name pos:line="66" pos:column="12">bits<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">.<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="17">http_formpost<pos:position pos:line="66" pos:column="30"/></name></name></expr>)<pos:position pos:line="66" pos:column="31"/></condition><then pos:line="66" pos:column="31"> <block pos:line="66" pos:column="32">{
    <comment type="block" pos:line="67" pos:column="5">/* we must build the whole darned post sequence first, so that we have
       a size of the whole shebang before we start to send it */</comment>
    <expr_stmt><expr><name><name pos:line="69" pos:column="5">http<pos:position pos:line="69" pos:column="9"/></name><operator pos:line="69" pos:column="9">-&gt;<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="11">sendit<pos:position pos:line="69" pos:column="17"/></name></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <call><name pos:line="69" pos:column="20">getFormData<pos:position pos:line="69" pos:column="31"/></name><argument_list pos:line="69" pos:column="31">(<argument><expr><name><name pos:line="69" pos:column="32">data<pos:position pos:line="69" pos:column="36"/></name><operator pos:line="69" pos:column="36">-&gt;<pos:position pos:line="69" pos:column="41"/></operator><name pos:line="69" pos:column="38">httppost<pos:position pos:line="69" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="48">&amp;<pos:position pos:line="69" pos:column="53"/></operator><name><name pos:line="69" pos:column="49">http<pos:position pos:line="69" pos:column="53"/></name><operator pos:line="69" pos:column="53">-&gt;<pos:position pos:line="69" pos:column="58"/></operator><name pos:line="69" pos:column="55">postsize<pos:position pos:line="69" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="65"/></expr_stmt>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <if pos:line="72" pos:column="3">if<condition pos:line="72" pos:column="5">(<expr><operator pos:line="72" pos:column="6">!<pos:position pos:line="72" pos:column="7"/></operator><call><name pos:line="72" pos:column="7">checkheaders<pos:position pos:line="72" pos:column="19"/></name><argument_list pos:line="72" pos:column="19">(<argument><expr><name pos:line="72" pos:column="20">data<pos:position pos:line="72" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="26">"Host:"<pos:position pos:line="72" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="35"/></condition><then pos:line="72" pos:column="35"> <block pos:line="72" pos:column="36">{
    <expr_stmt><expr><name><name pos:line="73" pos:column="5">data<pos:position pos:line="73" pos:column="9"/></name><operator pos:line="73" pos:column="9">-&gt;<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="11">ptr_host<pos:position pos:line="73" pos:column="19"/></name></name> <operator pos:line="73" pos:column="20">=<pos:position pos:line="73" pos:column="21"/></operator> <call><name pos:line="73" pos:column="22">maprintf<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">(<argument><expr><literal type="string" pos:line="73" pos:column="31">"Host: %s:%d\r\n"<pos:position pos:line="73" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="50">host<pos:position pos:line="73" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="56">data<pos:position pos:line="73" pos:column="60"/></name><operator pos:line="73" pos:column="60">-&gt;<pos:position pos:line="73" pos:column="65"/></operator><name pos:line="73" pos:column="62">remote_port<pos:position pos:line="73" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="75"/></expr_stmt>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if>

  <if pos:line="76" pos:column="3">if<condition pos:line="76" pos:column="5">(<expr><operator pos:line="76" pos:column="6">!<pos:position pos:line="76" pos:column="7"/></operator><call><name pos:line="76" pos:column="7">checkheaders<pos:position pos:line="76" pos:column="19"/></name><argument_list pos:line="76" pos:column="19">(<argument><expr><name pos:line="76" pos:column="20">data<pos:position pos:line="76" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="26">"Pragma:"<pos:position pos:line="76" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="37"/></condition><then pos:line="76" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="77" pos:column="5">http<pos:position pos:line="77" pos:column="9"/></name><operator pos:line="77" pos:column="9">-&gt;<pos:position pos:line="77" pos:column="14"/></operator><name pos:line="77" pos:column="11">p_pragma<pos:position pos:line="77" pos:column="19"/></name></name> <operator pos:line="77" pos:column="20">=<pos:position pos:line="77" pos:column="21"/></operator> <literal type="string" pos:line="77" pos:column="22">"Pragma: no-cache\r\n"<pos:position pos:line="77" pos:column="44"/></literal></expr>;<pos:position pos:line="77" pos:column="45"/></expr_stmt></block></then></if>

  <if pos:line="79" pos:column="3">if<condition pos:line="79" pos:column="5">(<expr><operator pos:line="79" pos:column="6">!<pos:position pos:line="79" pos:column="7"/></operator><call><name pos:line="79" pos:column="7">checkheaders<pos:position pos:line="79" pos:column="19"/></name><argument_list pos:line="79" pos:column="19">(<argument><expr><name pos:line="79" pos:column="20">data<pos:position pos:line="79" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="26">"Accept:"<pos:position pos:line="79" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="37"/></condition><then pos:line="79" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="80" pos:column="5">http<pos:position pos:line="80" pos:column="9"/></name><operator pos:line="80" pos:column="9">-&gt;<pos:position pos:line="80" pos:column="14"/></operator><name pos:line="80" pos:column="11">p_accept<pos:position pos:line="80" pos:column="19"/></name></name> <operator pos:line="80" pos:column="20">=<pos:position pos:line="80" pos:column="21"/></operator> <literal type="string" pos:line="80" pos:column="22">"Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*\r\n"<pos:position pos:line="80" pos:column="92"/></literal></expr>;<pos:position pos:line="80" pos:column="93"/></expr_stmt></block></then></if>

  <do pos:line="82" pos:column="3">do <block pos:line="82" pos:column="6">{
    <decl_stmt><decl><type><name><name pos:line="83" pos:column="5">struct<pos:position pos:line="83" pos:column="11"/></name> <name pos:line="83" pos:column="12">curl_slist<pos:position pos:line="83" pos:column="22"/></name></name> <modifier pos:line="83" pos:column="23">*<pos:position pos:line="83" pos:column="24"/></modifier></type><name pos:line="83" pos:column="24">headers<pos:position pos:line="83" pos:column="31"/></name><init pos:line="83" pos:column="31">=<expr><name><name pos:line="83" pos:column="32">data<pos:position pos:line="83" pos:column="36"/></name><operator pos:line="83" pos:column="36">-&gt;<pos:position pos:line="83" pos:column="41"/></operator><name pos:line="83" pos:column="38">headers<pos:position pos:line="83" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="83" pos:column="46"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">sendf<pos:position pos:line="84" pos:column="10"/></name><argument_list pos:line="84" pos:column="10">(<argument><expr><name><name pos:line="84" pos:column="11">data<pos:position pos:line="84" pos:column="15"/></name><operator pos:line="84" pos:column="15">-&gt;<pos:position pos:line="84" pos:column="20"/></operator><name pos:line="84" pos:column="17">firstsocket<pos:position pos:line="84" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="30">data<pos:position pos:line="84" pos:column="34"/></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="85" pos:column="11">"%s "<pos:position pos:line="85" pos:column="16"/></literal> <comment type="block" pos:line="85" pos:column="17">/* GET/HEAD/POST/PUT */</comment>
          <literal type="string" pos:line="86" pos:column="11">"%s HTTP/1.0\r\n"<pos:position pos:line="86" pos:column="28"/></literal> <comment type="block" pos:line="86" pos:column="29">/* path */</comment>
          <literal type="string" pos:line="87" pos:column="11">"%s"<pos:position pos:line="87" pos:column="15"/></literal> <comment type="block" pos:line="87" pos:column="16">/* proxyuserpwd */</comment>
          <literal type="string" pos:line="88" pos:column="11">"%s"<pos:position pos:line="88" pos:column="15"/></literal> <comment type="block" pos:line="88" pos:column="16">/* userpwd */</comment>
          <literal type="string" pos:line="89" pos:column="11">"%s"<pos:position pos:line="89" pos:column="15"/></literal> <comment type="block" pos:line="89" pos:column="16">/* range */</comment>
          <literal type="string" pos:line="90" pos:column="11">"%s"<pos:position pos:line="90" pos:column="15"/></literal> <comment type="block" pos:line="90" pos:column="16">/* user agent */</comment>
          <literal type="string" pos:line="91" pos:column="11">"%s"<pos:position pos:line="91" pos:column="15"/></literal> <comment type="block" pos:line="91" pos:column="16">/* cookie */</comment>
          <literal type="string" pos:line="92" pos:column="11">"%s"<pos:position pos:line="92" pos:column="15"/></literal> <comment type="block" pos:line="92" pos:column="16">/* host */</comment>
          <literal type="string" pos:line="93" pos:column="11">"%s"<pos:position pos:line="93" pos:column="15"/></literal> <comment type="block" pos:line="93" pos:column="16">/* pragma */</comment>
          <literal type="string" pos:line="94" pos:column="11">"%s"<pos:position pos:line="94" pos:column="15"/></literal> <comment type="block" pos:line="94" pos:column="16">/* accept */</comment>
          <literal type="string" pos:line="95" pos:column="11">"%s"<pos:position pos:line="95" pos:column="15"/></literal></expr></argument>, <comment type="block" pos:line="95" pos:column="17">/* referer */</comment>

          <argument><expr><ternary><condition><expr><name><name pos:line="97" pos:column="11">data<pos:position pos:line="97" pos:column="15"/></name><operator pos:line="97" pos:column="15">-&gt;<pos:position pos:line="97" pos:column="20"/></operator><name pos:line="97" pos:column="17">customrequest<pos:position pos:line="97" pos:column="30"/></name></name></expr>?<pos:position pos:line="97" pos:column="31"/></condition><then><expr><name><name pos:line="97" pos:column="31">data<pos:position pos:line="97" pos:column="35"/></name><operator pos:line="97" pos:column="35">-&gt;<pos:position pos:line="97" pos:column="40"/></operator><name pos:line="97" pos:column="37">customrequest<pos:position pos:line="97" pos:column="50"/></name></name></expr></then><else pos:line="97" pos:column="50">:
          <expr><operator pos:line="98" pos:column="11">(<pos:position pos:line="98" pos:column="12"/></operator><ternary><condition><expr><name><name pos:line="98" pos:column="12">data<pos:position pos:line="98" pos:column="16"/></name><operator pos:line="98" pos:column="16">-&gt;<pos:position pos:line="98" pos:column="21"/></operator><name pos:line="98" pos:column="18">bits<pos:position pos:line="98" pos:column="22"/></name><operator pos:line="98" pos:column="22">.<pos:position pos:line="98" pos:column="23"/></operator><name pos:line="98" pos:column="23">no_body<pos:position pos:line="98" pos:column="30"/></name></name></expr>?<pos:position pos:line="98" pos:column="31"/></condition><then><expr><literal type="string" pos:line="98" pos:column="31">"HEAD"<pos:position pos:line="98" pos:column="37"/></literal></expr></then><else pos:line="98" pos:column="37">:
           <expr><ternary><condition><expr><operator pos:line="99" pos:column="12">(<pos:position pos:line="99" pos:column="13"/></operator><name><name pos:line="99" pos:column="13">data<pos:position pos:line="99" pos:column="17"/></name><operator pos:line="99" pos:column="17">-&gt;<pos:position pos:line="99" pos:column="22"/></operator><name pos:line="99" pos:column="19">bits<pos:position pos:line="99" pos:column="23"/></name><operator pos:line="99" pos:column="23">.<pos:position pos:line="99" pos:column="24"/></operator><name pos:line="99" pos:column="24">http_post<pos:position pos:line="99" pos:column="33"/></name></name> <operator pos:line="99" pos:column="34">||<pos:position pos:line="99" pos:column="36"/></operator> <name><name pos:line="99" pos:column="37">data<pos:position pos:line="99" pos:column="41"/></name><operator pos:line="99" pos:column="41">-&gt;<pos:position pos:line="99" pos:column="46"/></operator><name pos:line="99" pos:column="43">bits<pos:position pos:line="99" pos:column="47"/></name><operator pos:line="99" pos:column="47">.<pos:position pos:line="99" pos:column="48"/></operator><name pos:line="99" pos:column="48">http_formpost<pos:position pos:line="99" pos:column="61"/></name></name><operator pos:line="99" pos:column="61">)<pos:position pos:line="99" pos:column="62"/></operator></expr>?<pos:position pos:line="99" pos:column="63"/></condition><then><expr><literal type="string" pos:line="99" pos:column="63">"POST"<pos:position pos:line="99" pos:column="69"/></literal></expr></then><else pos:line="99" pos:column="69">:
           <expr><ternary><condition><expr><operator pos:line="100" pos:column="12">(<pos:position pos:line="100" pos:column="13"/></operator><name><name pos:line="100" pos:column="13">data<pos:position pos:line="100" pos:column="17"/></name><operator pos:line="100" pos:column="17">-&gt;<pos:position pos:line="100" pos:column="22"/></operator><name pos:line="100" pos:column="19">bits<pos:position pos:line="100" pos:column="23"/></name><operator pos:line="100" pos:column="23">.<pos:position pos:line="100" pos:column="24"/></operator><name pos:line="100" pos:column="24">http_put<pos:position pos:line="100" pos:column="32"/></name></name><operator pos:line="100" pos:column="32">)<pos:position pos:line="100" pos:column="33"/></operator></expr>?<pos:position pos:line="100" pos:column="34"/></condition><then><expr><literal type="string" pos:line="100" pos:column="34">"PUT"<pos:position pos:line="100" pos:column="39"/></literal></expr></then><else pos:line="100" pos:column="39">:<expr><literal type="string" pos:line="100" pos:column="40">"GET"<pos:position pos:line="100" pos:column="45"/></literal></expr></else></ternary></expr></else></ternary></expr></else></ternary><operator pos:line="100" pos:column="45">)<pos:position pos:line="100" pos:column="46"/></operator></expr></else></ternary></expr></argument>,
          <argument><expr><name pos:line="101" pos:column="11">ppath<pos:position pos:line="101" pos:column="16"/></name></expr></argument>,
          <argument><expr><ternary><condition><expr><operator pos:line="102" pos:column="11">(<pos:position pos:line="102" pos:column="12"/></operator><name><name pos:line="102" pos:column="12">data<pos:position pos:line="102" pos:column="16"/></name><operator pos:line="102" pos:column="16">-&gt;<pos:position pos:line="102" pos:column="21"/></operator><name pos:line="102" pos:column="18">bits<pos:position pos:line="102" pos:column="22"/></name><operator pos:line="102" pos:column="22">.<pos:position pos:line="102" pos:column="23"/></operator><name pos:line="102" pos:column="23">proxy_user_passwd<pos:position pos:line="102" pos:column="40"/></name></name> <operator pos:line="102" pos:column="41">&amp;&amp;<pos:position pos:line="102" pos:column="51"/></operator> <name><name pos:line="102" pos:column="44">data<pos:position pos:line="102" pos:column="48"/></name><operator pos:line="102" pos:column="48">-&gt;<pos:position pos:line="102" pos:column="53"/></operator><name pos:line="102" pos:column="50">ptr_proxyuserpwd<pos:position pos:line="102" pos:column="66"/></name></name><operator pos:line="102" pos:column="66">)<pos:position pos:line="102" pos:column="67"/></operator></expr>?<pos:position pos:line="102" pos:column="68"/></condition><then><expr><name><name pos:line="102" pos:column="68">data<pos:position pos:line="102" pos:column="72"/></name><operator pos:line="102" pos:column="72">-&gt;<pos:position pos:line="102" pos:column="77"/></operator><name pos:line="102" pos:column="74">ptr_proxyuserpwd<pos:position pos:line="102" pos:column="90"/></name></name></expr></then><else pos:line="102" pos:column="90">:<expr><literal type="string" pos:line="102" pos:column="91">""<pos:position pos:line="102" pos:column="93"/></literal></expr></else></ternary></expr></argument>,
          <argument><expr><ternary><condition><expr><operator pos:line="103" pos:column="11">(<pos:position pos:line="103" pos:column="12"/></operator><name><name pos:line="103" pos:column="12">data<pos:position pos:line="103" pos:column="16"/></name><operator pos:line="103" pos:column="16">-&gt;<pos:position pos:line="103" pos:column="21"/></operator><name pos:line="103" pos:column="18">bits<pos:position pos:line="103" pos:column="22"/></name><operator pos:line="103" pos:column="22">.<pos:position pos:line="103" pos:column="23"/></operator><name pos:line="103" pos:column="23">user_passwd<pos:position pos:line="103" pos:column="34"/></name></name> <operator pos:line="103" pos:column="35">&amp;&amp;<pos:position pos:line="103" pos:column="45"/></operator> <name><name pos:line="103" pos:column="38">data<pos:position pos:line="103" pos:column="42"/></name><operator pos:line="103" pos:column="42">-&gt;<pos:position pos:line="103" pos:column="47"/></operator><name pos:line="103" pos:column="44">ptr_userpwd<pos:position pos:line="103" pos:column="55"/></name></name><operator pos:line="103" pos:column="55">)<pos:position pos:line="103" pos:column="56"/></operator></expr>?<pos:position pos:line="103" pos:column="57"/></condition><then><expr><name><name pos:line="103" pos:column="57">data<pos:position pos:line="103" pos:column="61"/></name><operator pos:line="103" pos:column="61">-&gt;<pos:position pos:line="103" pos:column="66"/></operator><name pos:line="103" pos:column="63">ptr_userpwd<pos:position pos:line="103" pos:column="74"/></name></name></expr></then><else pos:line="103" pos:column="74">:<expr><literal type="string" pos:line="103" pos:column="75">""<pos:position pos:line="103" pos:column="77"/></literal></expr></else></ternary></expr></argument>,
          <argument><expr><ternary><condition><expr><operator pos:line="104" pos:column="11">(<pos:position pos:line="104" pos:column="12"/></operator><name><name pos:line="104" pos:column="12">data<pos:position pos:line="104" pos:column="16"/></name><operator pos:line="104" pos:column="16">-&gt;<pos:position pos:line="104" pos:column="21"/></operator><name pos:line="104" pos:column="18">bits<pos:position pos:line="104" pos:column="22"/></name><operator pos:line="104" pos:column="22">.<pos:position pos:line="104" pos:column="23"/></operator><name pos:line="104" pos:column="23">set_range<pos:position pos:line="104" pos:column="32"/></name></name> <operator pos:line="104" pos:column="33">&amp;&amp;<pos:position pos:line="104" pos:column="43"/></operator> <name><name pos:line="104" pos:column="36">data<pos:position pos:line="104" pos:column="40"/></name><operator pos:line="104" pos:column="40">-&gt;<pos:position pos:line="104" pos:column="45"/></operator><name pos:line="104" pos:column="42">ptr_rangeline<pos:position pos:line="104" pos:column="55"/></name></name><operator pos:line="104" pos:column="55">)<pos:position pos:line="104" pos:column="56"/></operator></expr>?<pos:position pos:line="104" pos:column="57"/></condition><then><expr><name><name pos:line="104" pos:column="57">data<pos:position pos:line="104" pos:column="61"/></name><operator pos:line="104" pos:column="61">-&gt;<pos:position pos:line="104" pos:column="66"/></operator><name pos:line="104" pos:column="63">ptr_rangeline<pos:position pos:line="104" pos:column="76"/></name></name></expr></then><else pos:line="104" pos:column="76">:<expr><literal type="string" pos:line="104" pos:column="77">""<pos:position pos:line="104" pos:column="79"/></literal></expr></else></ternary></expr></argument>,
          <argument><expr><ternary><condition><expr><operator pos:line="105" pos:column="11">(<pos:position pos:line="105" pos:column="12"/></operator><name><name pos:line="105" pos:column="12">data<pos:position pos:line="105" pos:column="16"/></name><operator pos:line="105" pos:column="16">-&gt;<pos:position pos:line="105" pos:column="21"/></operator><name pos:line="105" pos:column="18">useragent<pos:position pos:line="105" pos:column="27"/></name></name> <operator pos:line="105" pos:column="28">&amp;&amp;<pos:position pos:line="105" pos:column="38"/></operator> <operator pos:line="105" pos:column="31">*<pos:position pos:line="105" pos:column="32"/></operator><name><name pos:line="105" pos:column="32">data<pos:position pos:line="105" pos:column="36"/></name><operator pos:line="105" pos:column="36">-&gt;<pos:position pos:line="105" pos:column="41"/></operator><name pos:line="105" pos:column="38">useragent<pos:position pos:line="105" pos:column="47"/></name></name> <operator pos:line="105" pos:column="48">&amp;&amp;<pos:position pos:line="105" pos:column="58"/></operator> <name><name pos:line="105" pos:column="51">data<pos:position pos:line="105" pos:column="55"/></name><operator pos:line="105" pos:column="55">-&gt;<pos:position pos:line="105" pos:column="60"/></operator><name pos:line="105" pos:column="57">ptr_uagent<pos:position pos:line="105" pos:column="67"/></name></name><operator pos:line="105" pos:column="67">)<pos:position pos:line="105" pos:column="68"/></operator></expr>?<pos:position pos:line="105" pos:column="69"/></condition><then><expr><name><name pos:line="105" pos:column="69">data<pos:position pos:line="105" pos:column="73"/></name><operator pos:line="105" pos:column="73">-&gt;<pos:position pos:line="105" pos:column="78"/></operator><name pos:line="105" pos:column="75">ptr_uagent<pos:position pos:line="105" pos:column="85"/></name></name></expr></then><else pos:line="105" pos:column="85">:<expr><literal type="string" pos:line="105" pos:column="86">""<pos:position pos:line="105" pos:column="88"/></literal></expr></else></ternary></expr></argument>,
          <argument><expr><operator pos:line="106" pos:column="11">(<pos:position pos:line="106" pos:column="12"/></operator><ternary><condition><expr><name><name pos:line="106" pos:column="12">data<pos:position pos:line="106" pos:column="16"/></name><operator pos:line="106" pos:column="16">-&gt;<pos:position pos:line="106" pos:column="21"/></operator><name pos:line="106" pos:column="18">ptr_cookie<pos:position pos:line="106" pos:column="28"/></name></name></expr>?<pos:position pos:line="106" pos:column="29"/></condition><then><expr><name><name pos:line="106" pos:column="29">data<pos:position pos:line="106" pos:column="33"/></name><operator pos:line="106" pos:column="33">-&gt;<pos:position pos:line="106" pos:column="38"/></operator><name pos:line="106" pos:column="35">ptr_cookie<pos:position pos:line="106" pos:column="45"/></name></name></expr></then><else pos:line="106" pos:column="45">:<expr><literal type="string" pos:line="106" pos:column="46">""<pos:position pos:line="106" pos:column="48"/></literal></expr></else></ternary><operator pos:line="106" pos:column="48">)<pos:position pos:line="106" pos:column="49"/></operator></expr></argument>, <comment type="block" pos:line="106" pos:column="51">/* Cookie: &lt;data&gt; */</comment>
          <argument><expr><operator pos:line="107" pos:column="11">(<pos:position pos:line="107" pos:column="12"/></operator><ternary><condition><expr><name><name pos:line="107" pos:column="12">data<pos:position pos:line="107" pos:column="16"/></name><operator pos:line="107" pos:column="16">-&gt;<pos:position pos:line="107" pos:column="21"/></operator><name pos:line="107" pos:column="18">ptr_host<pos:position pos:line="107" pos:column="26"/></name></name></expr>?<pos:position pos:line="107" pos:column="27"/></condition><then><expr><name><name pos:line="107" pos:column="27">data<pos:position pos:line="107" pos:column="31"/></name><operator pos:line="107" pos:column="31">-&gt;<pos:position pos:line="107" pos:column="36"/></operator><name pos:line="107" pos:column="33">ptr_host<pos:position pos:line="107" pos:column="41"/></name></name></expr></then><else pos:line="107" pos:column="41">:<expr><literal type="string" pos:line="107" pos:column="42">""<pos:position pos:line="107" pos:column="44"/></literal></expr></else></ternary><operator pos:line="107" pos:column="44">)<pos:position pos:line="107" pos:column="45"/></operator></expr></argument>, <comment type="block" pos:line="107" pos:column="47">/* Host: host */</comment>
          <argument><expr><ternary><condition><expr><name><name pos:line="108" pos:column="11">http<pos:position pos:line="108" pos:column="15"/></name><operator pos:line="108" pos:column="15">-&gt;<pos:position pos:line="108" pos:column="20"/></operator><name pos:line="108" pos:column="17">p_pragma<pos:position pos:line="108" pos:column="25"/></name></name></expr>?<pos:position pos:line="108" pos:column="26"/></condition><then><expr><name><name pos:line="108" pos:column="26">http<pos:position pos:line="108" pos:column="30"/></name><operator pos:line="108" pos:column="30">-&gt;<pos:position pos:line="108" pos:column="35"/></operator><name pos:line="108" pos:column="32">p_pragma<pos:position pos:line="108" pos:column="40"/></name></name></expr></then><else pos:line="108" pos:column="40">:<expr><literal type="string" pos:line="108" pos:column="41">""<pos:position pos:line="108" pos:column="43"/></literal></expr></else></ternary></expr></argument>,
          <argument><expr><ternary><condition><expr><name><name pos:line="109" pos:column="11">http<pos:position pos:line="109" pos:column="15"/></name><operator pos:line="109" pos:column="15">-&gt;<pos:position pos:line="109" pos:column="20"/></operator><name pos:line="109" pos:column="17">p_accept<pos:position pos:line="109" pos:column="25"/></name></name></expr>?<pos:position pos:line="109" pos:column="26"/></condition><then><expr><name><name pos:line="109" pos:column="26">http<pos:position pos:line="109" pos:column="30"/></name><operator pos:line="109" pos:column="30">-&gt;<pos:position pos:line="109" pos:column="35"/></operator><name pos:line="109" pos:column="32">p_accept<pos:position pos:line="109" pos:column="40"/></name></name></expr></then><else pos:line="109" pos:column="40">:<expr><literal type="string" pos:line="109" pos:column="41">""<pos:position pos:line="109" pos:column="43"/></literal></expr></else></ternary></expr></argument>,
          <argument><expr><ternary><condition><expr><operator pos:line="110" pos:column="11">(<pos:position pos:line="110" pos:column="12"/></operator><name><name pos:line="110" pos:column="12">data<pos:position pos:line="110" pos:column="16"/></name><operator pos:line="110" pos:column="16">-&gt;<pos:position pos:line="110" pos:column="21"/></operator><name pos:line="110" pos:column="18">bits<pos:position pos:line="110" pos:column="22"/></name><operator pos:line="110" pos:column="22">.<pos:position pos:line="110" pos:column="23"/></operator><name pos:line="110" pos:column="23">http_set_referer<pos:position pos:line="110" pos:column="39"/></name></name> <operator pos:line="110" pos:column="40">&amp;&amp;<pos:position pos:line="110" pos:column="50"/></operator> <name><name pos:line="110" pos:column="43">data<pos:position pos:line="110" pos:column="47"/></name><operator pos:line="110" pos:column="47">-&gt;<pos:position pos:line="110" pos:column="52"/></operator><name pos:line="110" pos:column="49">ptr_ref<pos:position pos:line="110" pos:column="56"/></name></name><operator pos:line="110" pos:column="56">)<pos:position pos:line="110" pos:column="57"/></operator></expr>?<pos:position pos:line="110" pos:column="58"/></condition><then><expr><name><name pos:line="110" pos:column="58">data<pos:position pos:line="110" pos:column="62"/></name><operator pos:line="110" pos:column="62">-&gt;<pos:position pos:line="110" pos:column="67"/></operator><name pos:line="110" pos:column="64">ptr_ref<pos:position pos:line="110" pos:column="71"/></name></name></expr></then><else pos:line="110" pos:column="71">:<expr><literal type="string" pos:line="110" pos:column="72">""<pos:position pos:line="110" pos:column="74"/></literal></expr></else></ternary></expr></argument> <comment type="block" pos:line="110" pos:column="75">/* Referer: &lt;data&gt; &lt;CRLF&gt; */</comment>
          )<pos:position pos:line="111" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="13"/></expr_stmt>

    <if pos:line="113" pos:column="5">if<condition pos:line="113" pos:column="7">(<expr><name pos:line="113" pos:column="8">co<pos:position pos:line="113" pos:column="10"/></name></expr>)<pos:position pos:line="113" pos:column="11"/></condition><then pos:line="113" pos:column="11"> <block pos:line="113" pos:column="12">{
      <decl_stmt><decl><type><name pos:line="114" pos:column="7">int<pos:position pos:line="114" pos:column="10"/></name></type> <name pos:line="114" pos:column="11">count<pos:position pos:line="114" pos:column="16"/></name><init pos:line="114" pos:column="16">=<expr><literal type="number" pos:line="114" pos:column="17">0<pos:position pos:line="114" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="114" pos:column="19"/></decl_stmt>
      <comment type="block" pos:line="115" pos:column="7">/* now loop through all cookies that matched */</comment>
      <while pos:line="116" pos:column="7">while<condition pos:line="116" pos:column="12">(<expr><name pos:line="116" pos:column="13">co<pos:position pos:line="116" pos:column="15"/></name></expr>)<pos:position pos:line="116" pos:column="16"/></condition> <block pos:line="116" pos:column="17">{
        <if pos:line="117" pos:column="9">if<condition pos:line="117" pos:column="11">(<expr><name><name pos:line="117" pos:column="12">co<pos:position pos:line="117" pos:column="14"/></name><operator pos:line="117" pos:column="14">-&gt;<pos:position pos:line="117" pos:column="19"/></operator><name pos:line="117" pos:column="16">value<pos:position pos:line="117" pos:column="21"/></name></name> <operator pos:line="117" pos:column="22">&amp;&amp;<pos:position pos:line="117" pos:column="32"/></operator> <call><name pos:line="117" pos:column="25">strlen<pos:position pos:line="117" pos:column="31"/></name><argument_list pos:line="117" pos:column="31">(<argument><expr><name><name pos:line="117" pos:column="32">co<pos:position pos:line="117" pos:column="34"/></name><operator pos:line="117" pos:column="34">-&gt;<pos:position pos:line="117" pos:column="39"/></operator><name pos:line="117" pos:column="36">value<pos:position pos:line="117" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="117" pos:column="43"/></condition><then pos:line="117" pos:column="43"> <block pos:line="117" pos:column="44">{
          <if pos:line="118" pos:column="11">if<condition pos:line="118" pos:column="13">(<expr><literal type="number" pos:line="118" pos:column="14">0<pos:position pos:line="118" pos:column="15"/></literal> <operator pos:line="118" pos:column="16">==<pos:position pos:line="118" pos:column="18"/></operator> <name pos:line="118" pos:column="19">count<pos:position pos:line="118" pos:column="24"/></name></expr>)<pos:position pos:line="118" pos:column="25"/></condition><then pos:line="118" pos:column="25"> <block pos:line="118" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="119" pos:column="13">sendf<pos:position pos:line="119" pos:column="18"/></name><argument_list pos:line="119" pos:column="18">(<argument><expr><name><name pos:line="119" pos:column="19">data<pos:position pos:line="119" pos:column="23"/></name><operator pos:line="119" pos:column="23">-&gt;<pos:position pos:line="119" pos:column="28"/></operator><name pos:line="119" pos:column="25">firstsocket<pos:position pos:line="119" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="38">data<pos:position pos:line="119" pos:column="42"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="120" pos:column="19">"Cookie:"<pos:position pos:line="120" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="30"/></expr_stmt>
          }<pos:position pos:line="121" pos:column="12"/></block></then></if>
          <expr_stmt><expr><call><name pos:line="122" pos:column="11">sendf<pos:position pos:line="122" pos:column="16"/></name><argument_list pos:line="122" pos:column="16">(<argument><expr><name><name pos:line="122" pos:column="17">data<pos:position pos:line="122" pos:column="21"/></name><operator pos:line="122" pos:column="21">-&gt;<pos:position pos:line="122" pos:column="26"/></operator><name pos:line="122" pos:column="23">firstsocket<pos:position pos:line="122" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="36">data<pos:position pos:line="122" pos:column="40"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="123" pos:column="17">"%s%s=%s"<pos:position pos:line="123" pos:column="26"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="123" pos:column="28">count<pos:position pos:line="123" pos:column="33"/></name></expr>?<pos:position pos:line="123" pos:column="34"/></condition><then><expr><literal type="string" pos:line="123" pos:column="34">"; "<pos:position pos:line="123" pos:column="38"/></literal></expr></then><else pos:line="123" pos:column="38">:<expr><literal type="string" pos:line="123" pos:column="39">""<pos:position pos:line="123" pos:column="41"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="123" pos:column="43">co<pos:position pos:line="123" pos:column="45"/></name><operator pos:line="123" pos:column="45">-&gt;<pos:position pos:line="123" pos:column="50"/></operator><name pos:line="123" pos:column="47">name<pos:position pos:line="123" pos:column="51"/></name></name></expr></argument>,
                <argument><expr><name><name pos:line="124" pos:column="17">co<pos:position pos:line="124" pos:column="19"/></name><operator pos:line="124" pos:column="19">-&gt;<pos:position pos:line="124" pos:column="24"/></operator><name pos:line="124" pos:column="21">value<pos:position pos:line="124" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="28"/></expr_stmt>
          <expr_stmt><expr><name pos:line="125" pos:column="11">count<pos:position pos:line="125" pos:column="16"/></name><operator pos:line="125" pos:column="16">++<pos:position pos:line="125" pos:column="18"/></operator></expr>;<pos:position pos:line="125" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="126" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="127" pos:column="9">co<pos:position pos:line="127" pos:column="11"/></name> <operator pos:line="127" pos:column="12">=<pos:position pos:line="127" pos:column="13"/></operator> <name><name pos:line="127" pos:column="14">co<pos:position pos:line="127" pos:column="16"/></name><operator pos:line="127" pos:column="16">-&gt;<pos:position pos:line="127" pos:column="21"/></operator><name pos:line="127" pos:column="18">next<pos:position pos:line="127" pos:column="22"/></name></name></expr>;<pos:position pos:line="127" pos:column="23"/></expr_stmt> <comment type="block" pos:line="127" pos:column="24">/* next cookie please */</comment>
      }<pos:position pos:line="128" pos:column="8"/></block></while>
      <if pos:line="129" pos:column="7">if<condition pos:line="129" pos:column="9">(<expr><name pos:line="129" pos:column="10">count<pos:position pos:line="129" pos:column="15"/></name></expr>)<pos:position pos:line="129" pos:column="16"/></condition><then pos:line="129" pos:column="16"> <block pos:line="129" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="130" pos:column="9">sendf<pos:position pos:line="130" pos:column="14"/></name><argument_list pos:line="130" pos:column="14">(<argument><expr><name><name pos:line="130" pos:column="15">data<pos:position pos:line="130" pos:column="19"/></name><operator pos:line="130" pos:column="19">-&gt;<pos:position pos:line="130" pos:column="24"/></operator><name pos:line="130" pos:column="21">firstsocket<pos:position pos:line="130" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="34">data<pos:position pos:line="130" pos:column="38"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="131" pos:column="15">"\r\n"<pos:position pos:line="131" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="132" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="133" pos:column="7">cookie_freelist<pos:position pos:line="133" pos:column="22"/></name><argument_list pos:line="133" pos:column="22">(<argument><expr><name pos:line="133" pos:column="23">co<pos:position pos:line="133" pos:column="25"/></name></expr></argument>)<pos:position pos:line="133" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="27"/></expr_stmt> <comment type="block" pos:line="133" pos:column="28">/* free the cookie list */</comment>
      <expr_stmt><expr><name pos:line="134" pos:column="7">co<pos:position pos:line="134" pos:column="9"/></name><operator pos:line="134" pos:column="9">=<pos:position pos:line="134" pos:column="10"/></operator><name pos:line="134" pos:column="10">NULL<pos:position pos:line="134" pos:column="14"/></name></expr>;<pos:position pos:line="134" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="135" pos:column="6"/></block></then></if>

    <if pos:line="137" pos:column="5">if<condition pos:line="137" pos:column="7">(<expr><name><name pos:line="137" pos:column="8">data<pos:position pos:line="137" pos:column="12"/></name><operator pos:line="137" pos:column="12">-&gt;<pos:position pos:line="137" pos:column="17"/></operator><name pos:line="137" pos:column="14">timecondition<pos:position pos:line="137" pos:column="27"/></name></name></expr>)<pos:position pos:line="137" pos:column="28"/></condition><then pos:line="137" pos:column="28"> <block pos:line="137" pos:column="29">{
      <decl_stmt><decl><type><name><name pos:line="138" pos:column="7">struct<pos:position pos:line="138" pos:column="13"/></name> <name pos:line="138" pos:column="14">tm<pos:position pos:line="138" pos:column="16"/></name></name> <modifier pos:line="138" pos:column="17">*<pos:position pos:line="138" pos:column="18"/></modifier></type><name pos:line="138" pos:column="18">thistime<pos:position pos:line="138" pos:column="26"/></name></decl>;<pos:position pos:line="138" pos:column="27"/></decl_stmt>

<cpp:ifdef pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">ifdef<pos:position pos:line="140" pos:column="7"/></cpp:directive> <name pos:line="140" pos:column="8">HAVE_LOCALTIME_R<pos:position pos:line="140" pos:column="24"/></name></cpp:ifdef>
      <comment type="block" pos:line="141" pos:column="7">/* thread-safe version */</comment>
      <decl_stmt><decl><type><name><name pos:line="142" pos:column="7">struct<pos:position pos:line="142" pos:column="13"/></name> <name pos:line="142" pos:column="14">tm<pos:position pos:line="142" pos:column="16"/></name></name></type> <name pos:line="142" pos:column="17">keeptime<pos:position pos:line="142" pos:column="25"/></name></decl>;<pos:position pos:line="142" pos:column="26"/></decl_stmt>
      <expr_stmt><expr><name pos:line="143" pos:column="7">thistime<pos:position pos:line="143" pos:column="15"/></name> <operator pos:line="143" pos:column="16">=<pos:position pos:line="143" pos:column="17"/></operator> <call><name pos:line="143" pos:column="18">localtime_r<pos:position pos:line="143" pos:column="29"/></name><argument_list pos:line="143" pos:column="29">(<argument><expr><operator pos:line="143" pos:column="30">&amp;<pos:position pos:line="143" pos:column="35"/></operator><name><name pos:line="143" pos:column="31">data<pos:position pos:line="143" pos:column="35"/></name><operator pos:line="143" pos:column="35">-&gt;<pos:position pos:line="143" pos:column="40"/></operator><name pos:line="143" pos:column="37">timevalue<pos:position pos:line="143" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="143" pos:column="48">&amp;<pos:position pos:line="143" pos:column="53"/></operator><name pos:line="143" pos:column="49">keeptime<pos:position pos:line="143" pos:column="57"/></name></expr></argument>)<pos:position pos:line="143" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="59"/></expr_stmt>
<cpp:else pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">else<pos:position pos:line="144" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><name pos:line="145" pos:column="7">thistime<pos:position pos:line="145" pos:column="15"/></name> <operator pos:line="145" pos:column="16">=<pos:position pos:line="145" pos:column="17"/></operator> <call><name pos:line="145" pos:column="18">localtime<pos:position pos:line="145" pos:column="27"/></name><argument_list pos:line="145" pos:column="27">(<argument><expr><operator pos:line="145" pos:column="28">&amp;<pos:position pos:line="145" pos:column="33"/></operator><name><name pos:line="145" pos:column="29">data<pos:position pos:line="145" pos:column="33"/></name><operator pos:line="145" pos:column="33">-&gt;<pos:position pos:line="145" pos:column="38"/></operator><name pos:line="145" pos:column="35">timevalue<pos:position pos:line="145" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">endif<pos:position pos:line="146" pos:column="7"/></cpp:directive></cpp:endif>
      <if pos:line="147" pos:column="7">if<condition pos:line="147" pos:column="9">(<expr><name pos:line="147" pos:column="10">NULL<pos:position pos:line="147" pos:column="14"/></name> <operator pos:line="147" pos:column="15">==<pos:position pos:line="147" pos:column="17"/></operator> <name pos:line="147" pos:column="18">thistime<pos:position pos:line="147" pos:column="26"/></name></expr>)<pos:position pos:line="147" pos:column="27"/></condition><then pos:line="147" pos:column="27"> <block pos:line="147" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="148" pos:column="9">failf<pos:position pos:line="148" pos:column="14"/></name><argument_list pos:line="148" pos:column="14">(<argument><expr><name pos:line="148" pos:column="15">data<pos:position pos:line="148" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="21">"localtime() failed!"<pos:position pos:line="148" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="44"/></expr_stmt>
        <return pos:line="149" pos:column="9">return <expr><name pos:line="149" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="149" pos:column="35"/></name></expr>;<pos:position pos:line="149" pos:column="36"/></return>
      }<pos:position pos:line="150" pos:column="8"/></block></then></if>

<cpp:ifdef pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">ifdef<pos:position pos:line="152" pos:column="7"/></cpp:directive> <name pos:line="152" pos:column="8">HAVE_STRFTIME<pos:position pos:line="152" pos:column="21"/></name></cpp:ifdef>
      <comment type="block" pos:line="153" pos:column="7">/* format: "Tue, 15 Nov 1994 12:45:26 GMT" */</comment>
      <expr_stmt><expr><call><name pos:line="154" pos:column="7">strftime<pos:position pos:line="154" pos:column="15"/></name><argument_list pos:line="154" pos:column="15">(<argument><expr><name pos:line="154" pos:column="16">buf<pos:position pos:line="154" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="21">BUFSIZE<pos:position pos:line="154" pos:column="28"/></name><operator pos:line="154" pos:column="28">-<pos:position pos:line="154" pos:column="29"/></operator><literal type="number" pos:line="154" pos:column="29">1<pos:position pos:line="154" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="32">"%a, %d %b %Y %H:%M:%S %Z"<pos:position pos:line="154" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="154" pos:column="60">thistime<pos:position pos:line="154" pos:column="68"/></name></expr></argument>)<pos:position pos:line="154" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="70"/></expr_stmt>
<cpp:else pos:line="155" pos:column="1">#<cpp:directive pos:line="155" pos:column="2">else<pos:position pos:line="155" pos:column="6"/></cpp:directive></cpp:else>
      <comment type="block" pos:line="156" pos:column="7">/* TODO: Right, we *could* write a replacement here */</comment>
      <expr_stmt><expr><call><name pos:line="157" pos:column="7">strcpy<pos:position pos:line="157" pos:column="13"/></name><argument_list pos:line="157" pos:column="13">(<argument><expr><name pos:line="157" pos:column="14">buf<pos:position pos:line="157" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="19">"no strftime() support"<pos:position pos:line="157" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="158" pos:column="1">#<cpp:directive pos:line="158" pos:column="2">endif<pos:position pos:line="158" pos:column="7"/></cpp:directive></cpp:endif>
      <switch pos:line="159" pos:column="7">switch<condition pos:line="159" pos:column="13">(<expr><name><name pos:line="159" pos:column="14">data<pos:position pos:line="159" pos:column="18"/></name><operator pos:line="159" pos:column="18">-&gt;<pos:position pos:line="159" pos:column="23"/></operator><name pos:line="159" pos:column="20">timecondition<pos:position pos:line="159" pos:column="33"/></name></name></expr>)<pos:position pos:line="159" pos:column="34"/></condition> <block pos:line="159" pos:column="35">{
      <case pos:line="160" pos:column="7">case <expr><name pos:line="160" pos:column="12">TIMECOND_IFMODSINCE<pos:position pos:line="160" pos:column="31"/></name></expr>:<pos:position pos:line="160" pos:column="32"/></case>
      <default pos:line="161" pos:column="7">default:<pos:position pos:line="161" pos:column="15"/></default>
        <expr_stmt><expr><call><name pos:line="162" pos:column="9">sendf<pos:position pos:line="162" pos:column="14"/></name><argument_list pos:line="162" pos:column="14">(<argument><expr><name><name pos:line="162" pos:column="15">data<pos:position pos:line="162" pos:column="19"/></name><operator pos:line="162" pos:column="19">-&gt;<pos:position pos:line="162" pos:column="24"/></operator><name pos:line="162" pos:column="21">firstsocket<pos:position pos:line="162" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="34">data<pos:position pos:line="162" pos:column="38"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="163" pos:column="15">"If-Modified-Since: %s\r\n"<pos:position pos:line="163" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="44">buf<pos:position pos:line="163" pos:column="47"/></name></expr></argument>)<pos:position pos:line="163" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="49"/></expr_stmt>
        <break pos:line="164" pos:column="9">break;<pos:position pos:line="164" pos:column="15"/></break>
      <case pos:line="165" pos:column="7">case <expr><name pos:line="165" pos:column="12">TIMECOND_IFUNMODSINCE<pos:position pos:line="165" pos:column="33"/></name></expr>:<pos:position pos:line="165" pos:column="34"/></case>
        <expr_stmt><expr><call><name pos:line="166" pos:column="9">sendf<pos:position pos:line="166" pos:column="14"/></name><argument_list pos:line="166" pos:column="14">(<argument><expr><name><name pos:line="166" pos:column="15">data<pos:position pos:line="166" pos:column="19"/></name><operator pos:line="166" pos:column="19">-&gt;<pos:position pos:line="166" pos:column="24"/></operator><name pos:line="166" pos:column="21">firstsocket<pos:position pos:line="166" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="34">data<pos:position pos:line="166" pos:column="38"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="167" pos:column="15">"If-Unmodified-Since: %s\r\n"<pos:position pos:line="167" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="167" pos:column="46">buf<pos:position pos:line="167" pos:column="49"/></name></expr></argument>)<pos:position pos:line="167" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="51"/></expr_stmt>
        <break pos:line="168" pos:column="9">break;<pos:position pos:line="168" pos:column="15"/></break>
      <case pos:line="169" pos:column="7">case <expr><name pos:line="169" pos:column="12">TIMECOND_LASTMOD<pos:position pos:line="169" pos:column="28"/></name></expr>:<pos:position pos:line="169" pos:column="29"/></case>
        <expr_stmt><expr><call><name pos:line="170" pos:column="9">sendf<pos:position pos:line="170" pos:column="14"/></name><argument_list pos:line="170" pos:column="14">(<argument><expr><name><name pos:line="170" pos:column="15">data<pos:position pos:line="170" pos:column="19"/></name><operator pos:line="170" pos:column="19">-&gt;<pos:position pos:line="170" pos:column="24"/></operator><name pos:line="170" pos:column="21">firstsocket<pos:position pos:line="170" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="34">data<pos:position pos:line="170" pos:column="38"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="171" pos:column="15">"Last-Modified: %s\r\n"<pos:position pos:line="171" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="171" pos:column="40">buf<pos:position pos:line="171" pos:column="43"/></name></expr></argument>)<pos:position pos:line="171" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="45"/></expr_stmt>
        <break pos:line="172" pos:column="9">break;<pos:position pos:line="172" pos:column="15"/></break>
      }<pos:position pos:line="173" pos:column="8"/></block></switch>
    }<pos:position pos:line="174" pos:column="6"/></block></then></if>

    <while pos:line="176" pos:column="5">while<condition pos:line="176" pos:column="10">(<expr><name pos:line="176" pos:column="11">headers<pos:position pos:line="176" pos:column="18"/></name></expr>)<pos:position pos:line="176" pos:column="19"/></condition> <block pos:line="176" pos:column="20">{
      <decl_stmt><decl><type><name pos:line="177" pos:column="7">char<pos:position pos:line="177" pos:column="11"/></name> <modifier pos:line="177" pos:column="12">*<pos:position pos:line="177" pos:column="13"/></modifier></type><name pos:line="177" pos:column="13">ptr<pos:position pos:line="177" pos:column="16"/></name> <init pos:line="177" pos:column="17">= <expr><call><name pos:line="177" pos:column="19">strchr<pos:position pos:line="177" pos:column="25"/></name><argument_list pos:line="177" pos:column="25">(<argument><expr><name><name pos:line="177" pos:column="26">headers<pos:position pos:line="177" pos:column="33"/></name><operator pos:line="177" pos:column="33">-&gt;<pos:position pos:line="177" pos:column="38"/></operator><name pos:line="177" pos:column="35">data<pos:position pos:line="177" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="177" pos:column="41">':'<pos:position pos:line="177" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="177" pos:column="46"/></decl_stmt>
      <if pos:line="178" pos:column="7">if<condition pos:line="178" pos:column="9">(<expr><name pos:line="178" pos:column="10">ptr<pos:position pos:line="178" pos:column="13"/></name></expr>)<pos:position pos:line="178" pos:column="14"/></condition><then pos:line="178" pos:column="14"> <block pos:line="178" pos:column="15">{
        <comment type="block" pos:line="179" pos:column="9">/* we require a colon for this to be a true header */</comment>

        <expr_stmt><expr><name pos:line="181" pos:column="9">ptr<pos:position pos:line="181" pos:column="12"/></name><operator pos:line="181" pos:column="12">++<pos:position pos:line="181" pos:column="14"/></operator></expr>;<pos:position pos:line="181" pos:column="15"/></expr_stmt> <comment type="block" pos:line="181" pos:column="16">/* pass the colon */</comment>
        <while pos:line="182" pos:column="9">while<condition pos:line="182" pos:column="14">(<expr><operator pos:line="182" pos:column="15">*<pos:position pos:line="182" pos:column="16"/></operator><name pos:line="182" pos:column="16">ptr<pos:position pos:line="182" pos:column="19"/></name> <operator pos:line="182" pos:column="20">&amp;&amp;<pos:position pos:line="182" pos:column="30"/></operator> <call><name pos:line="182" pos:column="23">isspace<pos:position pos:line="182" pos:column="30"/></name><argument_list pos:line="182" pos:column="30">(<argument><expr><operator pos:line="182" pos:column="31">*<pos:position pos:line="182" pos:column="32"/></operator><name pos:line="182" pos:column="32">ptr<pos:position pos:line="182" pos:column="35"/></name></expr></argument>)<pos:position pos:line="182" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="182" pos:column="37"/></condition>
          <block type="pseudo"><expr_stmt><expr><name pos:line="183" pos:column="11">ptr<pos:position pos:line="183" pos:column="14"/></name><operator pos:line="183" pos:column="14">++<pos:position pos:line="183" pos:column="16"/></operator></expr>;<pos:position pos:line="183" pos:column="17"/></expr_stmt></block></while>

        <if pos:line="185" pos:column="9">if<condition pos:line="185" pos:column="11">(<expr><operator pos:line="185" pos:column="12">*<pos:position pos:line="185" pos:column="13"/></operator><name pos:line="185" pos:column="13">ptr<pos:position pos:line="185" pos:column="16"/></name></expr>)<pos:position pos:line="185" pos:column="17"/></condition><then pos:line="185" pos:column="17"> <block pos:line="185" pos:column="18">{
          <comment type="block" pos:line="186" pos:column="11">/* only send this if the contents was non-blank */</comment>

          <expr_stmt><expr><call><name pos:line="188" pos:column="11">sendf<pos:position pos:line="188" pos:column="16"/></name><argument_list pos:line="188" pos:column="16">(<argument><expr><name><name pos:line="188" pos:column="17">data<pos:position pos:line="188" pos:column="21"/></name><operator pos:line="188" pos:column="21">-&gt;<pos:position pos:line="188" pos:column="26"/></operator><name pos:line="188" pos:column="23">firstsocket<pos:position pos:line="188" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="36">data<pos:position pos:line="188" pos:column="40"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="189" pos:column="17">"%s\015\012"<pos:position pos:line="189" pos:column="29"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="190" pos:column="17">headers<pos:position pos:line="190" pos:column="24"/></name><operator pos:line="190" pos:column="24">-&gt;<pos:position pos:line="190" pos:column="29"/></operator><name pos:line="190" pos:column="26">data<pos:position pos:line="190" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="190" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="191" pos:column="10"/></block></then></if>
      }<pos:position pos:line="192" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="193" pos:column="7">headers<pos:position pos:line="193" pos:column="14"/></name> <operator pos:line="193" pos:column="15">=<pos:position pos:line="193" pos:column="16"/></operator> <name><name pos:line="193" pos:column="17">headers<pos:position pos:line="193" pos:column="24"/></name><operator pos:line="193" pos:column="24">-&gt;<pos:position pos:line="193" pos:column="29"/></operator><name pos:line="193" pos:column="26">next<pos:position pos:line="193" pos:column="30"/></name></name></expr>;<pos:position pos:line="193" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="194" pos:column="6"/></block></while>

    <if pos:line="196" pos:column="5">if<condition pos:line="196" pos:column="7">(<expr><name><name pos:line="196" pos:column="8">data<pos:position pos:line="196" pos:column="12"/></name><operator pos:line="196" pos:column="12">-&gt;<pos:position pos:line="196" pos:column="17"/></operator><name pos:line="196" pos:column="14">bits<pos:position pos:line="196" pos:column="18"/></name><operator pos:line="196" pos:column="18">.<pos:position pos:line="196" pos:column="19"/></operator><name pos:line="196" pos:column="19">http_formpost<pos:position pos:line="196" pos:column="32"/></name></name></expr>)<pos:position pos:line="196" pos:column="33"/></condition><then pos:line="196" pos:column="33"> <block pos:line="196" pos:column="34">{
      <if pos:line="197" pos:column="7">if<condition pos:line="197" pos:column="9">(<expr><call><name pos:line="197" pos:column="10">FormInit<pos:position pos:line="197" pos:column="18"/></name><argument_list pos:line="197" pos:column="18">(<argument><expr><operator pos:line="197" pos:column="19">&amp;<pos:position pos:line="197" pos:column="24"/></operator><name><name pos:line="197" pos:column="20">http<pos:position pos:line="197" pos:column="24"/></name><operator pos:line="197" pos:column="24">-&gt;<pos:position pos:line="197" pos:column="29"/></operator><name pos:line="197" pos:column="26">form<pos:position pos:line="197" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="197" pos:column="32">http<pos:position pos:line="197" pos:column="36"/></name><operator pos:line="197" pos:column="36">-&gt;<pos:position pos:line="197" pos:column="41"/></operator><name pos:line="197" pos:column="38">sendit<pos:position pos:line="197" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="197" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="197" pos:column="46"/></condition><then pos:line="197" pos:column="46"> <block pos:line="197" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="198" pos:column="9">failf<pos:position pos:line="198" pos:column="14"/></name><argument_list pos:line="198" pos:column="14">(<argument><expr><name pos:line="198" pos:column="15">data<pos:position pos:line="198" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="21">"Internal HTTP POST error!\n"<pos:position pos:line="198" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="52"/></expr_stmt>
        <return pos:line="199" pos:column="9">return <expr><name pos:line="199" pos:column="16">CURLE_HTTP_POST_ERROR<pos:position pos:line="199" pos:column="37"/></name></expr>;<pos:position pos:line="199" pos:column="38"/></return>
      }<pos:position pos:line="200" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="202" pos:column="7">http<pos:position pos:line="202" pos:column="11"/></name><operator pos:line="202" pos:column="11">-&gt;<pos:position pos:line="202" pos:column="16"/></operator><name pos:line="202" pos:column="13">storefread<pos:position pos:line="202" pos:column="23"/></name></name> <operator pos:line="202" pos:column="24">=<pos:position pos:line="202" pos:column="25"/></operator> <name><name pos:line="202" pos:column="26">data<pos:position pos:line="202" pos:column="30"/></name><operator pos:line="202" pos:column="30">-&gt;<pos:position pos:line="202" pos:column="35"/></operator><name pos:line="202" pos:column="32">fread<pos:position pos:line="202" pos:column="37"/></name></name></expr>;<pos:position pos:line="202" pos:column="38"/></expr_stmt> <comment type="block" pos:line="202" pos:column="39">/* backup */</comment>
      <expr_stmt><expr><name><name pos:line="203" pos:column="7">http<pos:position pos:line="203" pos:column="11"/></name><operator pos:line="203" pos:column="11">-&gt;<pos:position pos:line="203" pos:column="16"/></operator><name pos:line="203" pos:column="13">in<pos:position pos:line="203" pos:column="15"/></name></name> <operator pos:line="203" pos:column="16">=<pos:position pos:line="203" pos:column="17"/></operator> <name><name pos:line="203" pos:column="18">data<pos:position pos:line="203" pos:column="22"/></name><operator pos:line="203" pos:column="22">-&gt;<pos:position pos:line="203" pos:column="27"/></operator><name pos:line="203" pos:column="24">in<pos:position pos:line="203" pos:column="26"/></name></name></expr>;<pos:position pos:line="203" pos:column="27"/></expr_stmt> <comment type="block" pos:line="203" pos:column="28">/* backup */</comment>
          
      <expr_stmt><expr><name><name pos:line="205" pos:column="7">data<pos:position pos:line="205" pos:column="11"/></name><operator pos:line="205" pos:column="11">-&gt;<pos:position pos:line="205" pos:column="16"/></operator><name pos:line="205" pos:column="13">fread<pos:position pos:line="205" pos:column="18"/></name></name> <operator pos:line="205" pos:column="19">=<pos:position pos:line="205" pos:column="20"/></operator>
        <operator pos:line="206" pos:column="9">(<pos:position pos:line="206" pos:column="10"/></operator><call><call><name pos:line="206" pos:column="10">size_t<pos:position pos:line="206" pos:column="16"/></name> <argument_list pos:line="206" pos:column="17">(<argument><expr><operator pos:line="206" pos:column="18">*<pos:position pos:line="206" pos:column="19"/></operator></expr></argument>)<pos:position pos:line="206" pos:column="20"/></argument_list></call><argument_list pos:line="206" pos:column="20">(<argument><expr><name pos:line="206" pos:column="21">char<pos:position pos:line="206" pos:column="25"/></name> <operator pos:line="206" pos:column="26">*<pos:position pos:line="206" pos:column="27"/></operator></expr></argument>, <argument><expr><name pos:line="206" pos:column="29">size_t<pos:position pos:line="206" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="37">size_t<pos:position pos:line="206" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="45">FILE<pos:position pos:line="206" pos:column="49"/></name> <operator pos:line="206" pos:column="50">*<pos:position pos:line="206" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="206" pos:column="52"/></argument_list></call><operator pos:line="206" pos:column="52">)<pos:position pos:line="206" pos:column="53"/></operator>
        <name pos:line="207" pos:column="9">FormReader<pos:position pos:line="207" pos:column="19"/></name></expr>;<pos:position pos:line="207" pos:column="20"/></expr_stmt> <comment type="block" pos:line="207" pos:column="21">/* set the read function to read from the
                       generated form data */</comment>
      <expr_stmt><expr><name><name pos:line="209" pos:column="7">data<pos:position pos:line="209" pos:column="11"/></name><operator pos:line="209" pos:column="11">-&gt;<pos:position pos:line="209" pos:column="16"/></operator><name pos:line="209" pos:column="13">in<pos:position pos:line="209" pos:column="15"/></name></name> <operator pos:line="209" pos:column="16">=<pos:position pos:line="209" pos:column="17"/></operator> <operator pos:line="209" pos:column="18">(<pos:position pos:line="209" pos:column="19"/></operator><name pos:line="209" pos:column="19">FILE<pos:position pos:line="209" pos:column="23"/></name> <operator pos:line="209" pos:column="24">*<pos:position pos:line="209" pos:column="25"/></operator><operator pos:line="209" pos:column="25">)<pos:position pos:line="209" pos:column="26"/></operator><operator pos:line="209" pos:column="26">&amp;<pos:position pos:line="209" pos:column="31"/></operator><name><name pos:line="209" pos:column="27">http<pos:position pos:line="209" pos:column="31"/></name><operator pos:line="209" pos:column="31">-&gt;<pos:position pos:line="209" pos:column="36"/></operator><name pos:line="209" pos:column="33">form<pos:position pos:line="209" pos:column="37"/></name></name></expr>;<pos:position pos:line="209" pos:column="38"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="211" pos:column="7">sendf<pos:position pos:line="211" pos:column="12"/></name><argument_list pos:line="211" pos:column="12">(<argument><expr><name><name pos:line="211" pos:column="13">data<pos:position pos:line="211" pos:column="17"/></name><operator pos:line="211" pos:column="17">-&gt;<pos:position pos:line="211" pos:column="22"/></operator><name pos:line="211" pos:column="19">firstsocket<pos:position pos:line="211" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="211" pos:column="32">data<pos:position pos:line="211" pos:column="36"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="212" pos:column="13">"Content-Length: %d\r\n"<pos:position pos:line="212" pos:column="37"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="213" pos:column="13">http<pos:position pos:line="213" pos:column="17"/></name><operator pos:line="213" pos:column="17">-&gt;<pos:position pos:line="213" pos:column="22"/></operator><name pos:line="213" pos:column="19">postsize<pos:position pos:line="213" pos:column="27"/></name></name><operator pos:line="213" pos:column="27">-<pos:position pos:line="213" pos:column="28"/></operator><literal type="number" pos:line="213" pos:column="28">2<pos:position pos:line="213" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="31"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="215" pos:column="7">pgrsSetUploadSize<pos:position pos:line="215" pos:column="24"/></name><argument_list pos:line="215" pos:column="24">(<argument><expr><name pos:line="215" pos:column="25">data<pos:position pos:line="215" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="215" pos:column="31">http<pos:position pos:line="215" pos:column="35"/></name><operator pos:line="215" pos:column="35">-&gt;<pos:position pos:line="215" pos:column="40"/></operator><name pos:line="215" pos:column="37">postsize<pos:position pos:line="215" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="215" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="47"/></expr_stmt>

      <expr_stmt><expr><name pos:line="217" pos:column="7">result<pos:position pos:line="217" pos:column="13"/></name> <operator pos:line="217" pos:column="14">=<pos:position pos:line="217" pos:column="15"/></operator> <call><name pos:line="217" pos:column="16">Transfer<pos:position pos:line="217" pos:column="24"/></name><argument_list pos:line="217" pos:column="24">(<argument><expr><name pos:line="217" pos:column="25">conn<pos:position pos:line="217" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="217" pos:column="31">data<pos:position pos:line="217" pos:column="35"/></name><operator pos:line="217" pos:column="35">-&gt;<pos:position pos:line="217" pos:column="40"/></operator><name pos:line="217" pos:column="37">firstsocket<pos:position pos:line="217" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="217" pos:column="50">-<pos:position pos:line="217" pos:column="51"/></operator><literal type="number" pos:line="217" pos:column="51">1<pos:position pos:line="217" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="217" pos:column="54">TRUE<pos:position pos:line="217" pos:column="58"/></name></expr></argument>,
                        <argument><expr><operator pos:line="218" pos:column="25">&amp;<pos:position pos:line="218" pos:column="30"/></operator><name><name pos:line="218" pos:column="26">http<pos:position pos:line="218" pos:column="30"/></name><operator pos:line="218" pos:column="30">-&gt;<pos:position pos:line="218" pos:column="35"/></operator><name pos:line="218" pos:column="32">readbytecount<pos:position pos:line="218" pos:column="45"/></name></name></expr></argument>,
                          <argument><expr><name><name pos:line="219" pos:column="27">data<pos:position pos:line="219" pos:column="31"/></name><operator pos:line="219" pos:column="31">-&gt;<pos:position pos:line="219" pos:column="36"/></operator><name pos:line="219" pos:column="33">firstsocket<pos:position pos:line="219" pos:column="44"/></name></name></expr></argument>,
                        <argument><expr><operator pos:line="220" pos:column="25">&amp;<pos:position pos:line="220" pos:column="30"/></operator><name><name pos:line="220" pos:column="26">http<pos:position pos:line="220" pos:column="30"/></name><operator pos:line="220" pos:column="30">-&gt;<pos:position pos:line="220" pos:column="35"/></operator><name pos:line="220" pos:column="32">writebytecount<pos:position pos:line="220" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="48"/></expr_stmt>
      <if pos:line="221" pos:column="7">if<condition pos:line="221" pos:column="9">(<expr><name pos:line="221" pos:column="10">result<pos:position pos:line="221" pos:column="16"/></name></expr>)<pos:position pos:line="221" pos:column="17"/></condition><then pos:line="221" pos:column="17"> <block pos:line="221" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="222" pos:column="9">FormFree<pos:position pos:line="222" pos:column="17"/></name><argument_list pos:line="222" pos:column="17">(<argument><expr><name><name pos:line="222" pos:column="18">http<pos:position pos:line="222" pos:column="22"/></name><operator pos:line="222" pos:column="22">-&gt;<pos:position pos:line="222" pos:column="27"/></operator><name pos:line="222" pos:column="24">sendit<pos:position pos:line="222" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="222" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="32"/></expr_stmt> <comment type="block" pos:line="222" pos:column="33">/* free that whole lot */</comment>
        <return pos:line="223" pos:column="9">return <expr><name pos:line="223" pos:column="16">result<pos:position pos:line="223" pos:column="22"/></name></expr>;<pos:position pos:line="223" pos:column="23"/></return>
      }<pos:position pos:line="224" pos:column="8"/></block></then></if>
    }<pos:position pos:line="225" pos:column="6"/></block></then>
    <elseif pos:line="226" pos:column="5">else <if pos:line="226" pos:column="10">if<condition pos:line="226" pos:column="12">(<expr><name><name pos:line="226" pos:column="13">data<pos:position pos:line="226" pos:column="17"/></name><operator pos:line="226" pos:column="17">-&gt;<pos:position pos:line="226" pos:column="22"/></operator><name pos:line="226" pos:column="19">bits<pos:position pos:line="226" pos:column="23"/></name><operator pos:line="226" pos:column="23">.<pos:position pos:line="226" pos:column="24"/></operator><name pos:line="226" pos:column="24">http_put<pos:position pos:line="226" pos:column="32"/></name></name></expr>)<pos:position pos:line="226" pos:column="33"/></condition><then pos:line="226" pos:column="33"> <block pos:line="226" pos:column="34">{
      <comment type="block" pos:line="227" pos:column="7">/* Let's PUT the data to the server! */</comment>

      <if pos:line="229" pos:column="7">if<condition pos:line="229" pos:column="9">(<expr><name><name pos:line="229" pos:column="10">data<pos:position pos:line="229" pos:column="14"/></name><operator pos:line="229" pos:column="14">-&gt;<pos:position pos:line="229" pos:column="19"/></operator><name pos:line="229" pos:column="16">infilesize<pos:position pos:line="229" pos:column="26"/></name></name><operator pos:line="229" pos:column="26">&gt;<pos:position pos:line="229" pos:column="30"/></operator><literal type="number" pos:line="229" pos:column="27">0<pos:position pos:line="229" pos:column="28"/></literal></expr>)<pos:position pos:line="229" pos:column="29"/></condition><then pos:line="229" pos:column="29"> <block pos:line="229" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="230" pos:column="9">sendf<pos:position pos:line="230" pos:column="14"/></name><argument_list pos:line="230" pos:column="14">(<argument><expr><name><name pos:line="230" pos:column="15">data<pos:position pos:line="230" pos:column="19"/></name><operator pos:line="230" pos:column="19">-&gt;<pos:position pos:line="230" pos:column="24"/></operator><name pos:line="230" pos:column="21">firstsocket<pos:position pos:line="230" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="34">data<pos:position pos:line="230" pos:column="38"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="231" pos:column="15">"Content-Length: %d\r\n\r\n"<pos:position pos:line="231" pos:column="43"/></literal></expr></argument>, <comment type="block" pos:line="231" pos:column="45">/* file size */</comment>
              <argument><expr><name><name pos:line="232" pos:column="15">data<pos:position pos:line="232" pos:column="19"/></name><operator pos:line="232" pos:column="19">-&gt;<pos:position pos:line="232" pos:column="24"/></operator><name pos:line="232" pos:column="21">infilesize<pos:position pos:line="232" pos:column="31"/></name></name></expr></argument> )<pos:position pos:line="232" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="34"/></expr_stmt>
      }<pos:position pos:line="233" pos:column="8"/></block></then>
      <else pos:line="234" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="235" pos:column="9">sendf<pos:position pos:line="235" pos:column="14"/></name><argument_list pos:line="235" pos:column="14">(<argument><expr><name><name pos:line="235" pos:column="15">data<pos:position pos:line="235" pos:column="19"/></name><operator pos:line="235" pos:column="19">-&gt;<pos:position pos:line="235" pos:column="24"/></operator><name pos:line="235" pos:column="21">firstsocket<pos:position pos:line="235" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="34">data<pos:position pos:line="235" pos:column="38"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="236" pos:column="15">"\015\012"<pos:position pos:line="236" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="236" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="27"/></expr_stmt></block></else></if>

      <expr_stmt><expr><call><name pos:line="238" pos:column="7">pgrsSetUploadSize<pos:position pos:line="238" pos:column="24"/></name><argument_list pos:line="238" pos:column="24">(<argument><expr><name pos:line="238" pos:column="25">data<pos:position pos:line="238" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="238" pos:column="31">data<pos:position pos:line="238" pos:column="35"/></name><operator pos:line="238" pos:column="35">-&gt;<pos:position pos:line="238" pos:column="40"/></operator><name pos:line="238" pos:column="37">infilesize<pos:position pos:line="238" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="238" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="49"/></expr_stmt>

      <expr_stmt><expr><name pos:line="240" pos:column="7">result<pos:position pos:line="240" pos:column="13"/></name> <operator pos:line="240" pos:column="14">=<pos:position pos:line="240" pos:column="15"/></operator> <call><name pos:line="240" pos:column="16">Transfer<pos:position pos:line="240" pos:column="24"/></name><argument_list pos:line="240" pos:column="24">(<argument><expr><name pos:line="240" pos:column="25">conn<pos:position pos:line="240" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="240" pos:column="31">data<pos:position pos:line="240" pos:column="35"/></name><operator pos:line="240" pos:column="35">-&gt;<pos:position pos:line="240" pos:column="40"/></operator><name pos:line="240" pos:column="37">firstsocket<pos:position pos:line="240" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="240" pos:column="50">-<pos:position pos:line="240" pos:column="51"/></operator><literal type="number" pos:line="240" pos:column="51">1<pos:position pos:line="240" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="240" pos:column="54">TRUE<pos:position pos:line="240" pos:column="58"/></name></expr></argument>,
                        <argument><expr><operator pos:line="241" pos:column="25">&amp;<pos:position pos:line="241" pos:column="30"/></operator><name><name pos:line="241" pos:column="26">http<pos:position pos:line="241" pos:column="30"/></name><operator pos:line="241" pos:column="30">-&gt;<pos:position pos:line="241" pos:column="35"/></operator><name pos:line="241" pos:column="32">readbytecount<pos:position pos:line="241" pos:column="45"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="242" pos:column="25">data<pos:position pos:line="242" pos:column="29"/></name><operator pos:line="242" pos:column="29">-&gt;<pos:position pos:line="242" pos:column="34"/></operator><name pos:line="242" pos:column="31">firstsocket<pos:position pos:line="242" pos:column="42"/></name></name></expr></argument>,
                        <argument><expr><operator pos:line="243" pos:column="25">&amp;<pos:position pos:line="243" pos:column="30"/></operator><name><name pos:line="243" pos:column="26">http<pos:position pos:line="243" pos:column="30"/></name><operator pos:line="243" pos:column="30">-&gt;<pos:position pos:line="243" pos:column="35"/></operator><name pos:line="243" pos:column="32">writebytecount<pos:position pos:line="243" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="243" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="48"/></expr_stmt>
      <if pos:line="244" pos:column="7">if<condition pos:line="244" pos:column="9">(<expr><name pos:line="244" pos:column="10">result<pos:position pos:line="244" pos:column="16"/></name></expr>)<pos:position pos:line="244" pos:column="17"/></condition><then pos:line="244" pos:column="17">
        <block type="pseudo"><return pos:line="245" pos:column="9">return <expr><name pos:line="245" pos:column="16">result<pos:position pos:line="245" pos:column="22"/></name></expr>;<pos:position pos:line="245" pos:column="23"/></return></block></then></if>
      
    }<pos:position pos:line="247" pos:column="6"/></block></then></if></elseif>
    <else pos:line="248" pos:column="5">else <block pos:line="248" pos:column="10">{
      <if pos:line="249" pos:column="7">if<condition pos:line="249" pos:column="9">(<expr><name><name pos:line="249" pos:column="10">data<pos:position pos:line="249" pos:column="14"/></name><operator pos:line="249" pos:column="14">-&gt;<pos:position pos:line="249" pos:column="19"/></operator><name pos:line="249" pos:column="16">bits<pos:position pos:line="249" pos:column="20"/></name><operator pos:line="249" pos:column="20">.<pos:position pos:line="249" pos:column="21"/></operator><name pos:line="249" pos:column="21">http_post<pos:position pos:line="249" pos:column="30"/></name></name></expr>)<pos:position pos:line="249" pos:column="31"/></condition><then pos:line="249" pos:column="31"> <block pos:line="249" pos:column="32">{
        <comment type="block" pos:line="250" pos:column="9">/* this is the simple POST, using x-www-form-urlencoded style */</comment>

        <if pos:line="252" pos:column="9">if<condition pos:line="252" pos:column="11">(<expr><operator pos:line="252" pos:column="12">!<pos:position pos:line="252" pos:column="13"/></operator><call><name pos:line="252" pos:column="13">checkheaders<pos:position pos:line="252" pos:column="25"/></name><argument_list pos:line="252" pos:column="25">(<argument><expr><name pos:line="252" pos:column="26">data<pos:position pos:line="252" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="252" pos:column="32">"Content-Length:"<pos:position pos:line="252" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="252" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="252" pos:column="51"/></condition><then pos:line="252" pos:column="51">
          <comment type="block" pos:line="253" pos:column="11">/* we allow replacing this header, although it isn't very wise to
             actually set your own */</comment>
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="255" pos:column="11">sendf<pos:position pos:line="255" pos:column="16"/></name><argument_list pos:line="255" pos:column="16">(<argument><expr><name><name pos:line="255" pos:column="17">data<pos:position pos:line="255" pos:column="21"/></name><operator pos:line="255" pos:column="21">-&gt;<pos:position pos:line="255" pos:column="26"/></operator><name pos:line="255" pos:column="23">firstsocket<pos:position pos:line="255" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="36">data<pos:position pos:line="255" pos:column="40"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="256" pos:column="17">"Content-Length: %d\r\n"<pos:position pos:line="256" pos:column="41"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="257" pos:column="17">strlen<pos:position pos:line="257" pos:column="23"/></name><argument_list pos:line="257" pos:column="23">(<argument><expr><name><name pos:line="257" pos:column="24">data<pos:position pos:line="257" pos:column="28"/></name><operator pos:line="257" pos:column="28">-&gt;<pos:position pos:line="257" pos:column="33"/></operator><name pos:line="257" pos:column="30">postfields<pos:position pos:line="257" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="257" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="257" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="43"/></expr_stmt></block></then></if>

        <if pos:line="259" pos:column="9">if<condition pos:line="259" pos:column="11">(<expr><operator pos:line="259" pos:column="12">!<pos:position pos:line="259" pos:column="13"/></operator><call><name pos:line="259" pos:column="13">checkheaders<pos:position pos:line="259" pos:column="25"/></name><argument_list pos:line="259" pos:column="25">(<argument><expr><name pos:line="259" pos:column="26">data<pos:position pos:line="259" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="259" pos:column="32">"Content-Type:"<pos:position pos:line="259" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="259" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="259" pos:column="49"/></condition><then pos:line="259" pos:column="49">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="260" pos:column="11">sendf<pos:position pos:line="260" pos:column="16"/></name><argument_list pos:line="260" pos:column="16">(<argument><expr><name><name pos:line="260" pos:column="17">data<pos:position pos:line="260" pos:column="21"/></name><operator pos:line="260" pos:column="21">-&gt;<pos:position pos:line="260" pos:column="26"/></operator><name pos:line="260" pos:column="23">firstsocket<pos:position pos:line="260" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="36">data<pos:position pos:line="260" pos:column="40"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="261" pos:column="17">"Content-Type: application/x-www-form-urlencoded\r\n"<pos:position pos:line="261" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="261" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="72"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="263" pos:column="9">/* and here comes the actual data */</comment>
        <expr_stmt><expr><call><name pos:line="264" pos:column="9">sendf<pos:position pos:line="264" pos:column="14"/></name><argument_list pos:line="264" pos:column="14">(<argument><expr><name><name pos:line="264" pos:column="15">data<pos:position pos:line="264" pos:column="19"/></name><operator pos:line="264" pos:column="19">-&gt;<pos:position pos:line="264" pos:column="24"/></operator><name pos:line="264" pos:column="21">firstsocket<pos:position pos:line="264" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="264" pos:column="34">data<pos:position pos:line="264" pos:column="38"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="265" pos:column="15">"\r\n"<pos:position pos:line="265" pos:column="21"/></literal>
              <literal type="string" pos:line="266" pos:column="15">"%s\r\n"<pos:position pos:line="266" pos:column="23"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="267" pos:column="15">data<pos:position pos:line="267" pos:column="19"/></name><operator pos:line="267" pos:column="19">-&gt;<pos:position pos:line="267" pos:column="24"/></operator><name pos:line="267" pos:column="21">postfields<pos:position pos:line="267" pos:column="31"/></name></name></expr></argument> )<pos:position pos:line="267" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="34"/></expr_stmt>
      }<pos:position pos:line="268" pos:column="8"/></block></then>
      <else pos:line="269" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="270" pos:column="9">sendf<pos:position pos:line="270" pos:column="14"/></name><argument_list pos:line="270" pos:column="14">(<argument><expr><name><name pos:line="270" pos:column="15">data<pos:position pos:line="270" pos:column="19"/></name><operator pos:line="270" pos:column="19">-&gt;<pos:position pos:line="270" pos:column="24"/></operator><name pos:line="270" pos:column="21">firstsocket<pos:position pos:line="270" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="270" pos:column="34">data<pos:position pos:line="270" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="270" pos:column="40">"\r\n"<pos:position pos:line="270" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="270" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="48"/></expr_stmt></block></else></if>

      <comment type="block" pos:line="272" pos:column="7">/* HTTP GET/HEAD download: */</comment>
      <expr_stmt><expr><name pos:line="273" pos:column="7">result<pos:position pos:line="273" pos:column="13"/></name> <operator pos:line="273" pos:column="14">=<pos:position pos:line="273" pos:column="15"/></operator> <call><name pos:line="273" pos:column="16">Transfer<pos:position pos:line="273" pos:column="24"/></name><argument_list pos:line="273" pos:column="24">(<argument><expr><name pos:line="273" pos:column="25">conn<pos:position pos:line="273" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="273" pos:column="31">data<pos:position pos:line="273" pos:column="35"/></name><operator pos:line="273" pos:column="35">-&gt;<pos:position pos:line="273" pos:column="40"/></operator><name pos:line="273" pos:column="37">firstsocket<pos:position pos:line="273" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="273" pos:column="50">-<pos:position pos:line="273" pos:column="51"/></operator><literal type="number" pos:line="273" pos:column="51">1<pos:position pos:line="273" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="273" pos:column="54">TRUE<pos:position pos:line="273" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="273" pos:column="60">bytecount<pos:position pos:line="273" pos:column="69"/></name></expr></argument>,
                        <argument><expr><operator pos:line="274" pos:column="25">-<pos:position pos:line="274" pos:column="26"/></operator><literal type="number" pos:line="274" pos:column="26">1<pos:position pos:line="274" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="274" pos:column="29">NULL<pos:position pos:line="274" pos:column="33"/></name></expr></argument>)<pos:position pos:line="274" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="35"/></expr_stmt> <comment type="block" pos:line="274" pos:column="36">/* nothing to upload */</comment>
    }<pos:position pos:line="275" pos:column="6"/></block></else></if>
    <if pos:line="276" pos:column="5">if<condition pos:line="276" pos:column="7">(<expr><name pos:line="276" pos:column="8">result<pos:position pos:line="276" pos:column="14"/></name></expr>)<pos:position pos:line="276" pos:column="15"/></condition><then pos:line="276" pos:column="15">
      <block type="pseudo"><return pos:line="277" pos:column="7">return <expr><name pos:line="277" pos:column="14">result<pos:position pos:line="277" pos:column="20"/></name></expr>;<pos:position pos:line="277" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="278" pos:column="4"/></block> while <condition pos:line="278" pos:column="11">(<expr><literal type="number" pos:line="278" pos:column="12">0<pos:position pos:line="278" pos:column="13"/></literal></expr>)<pos:position pos:line="278" pos:column="14"/></condition>;<pos:position pos:line="278" pos:column="15"/></do> <comment type="block" pos:line="278" pos:column="16">/* this is just a left-over from the multiple document download
                  attempts */</comment>

  <return pos:line="281" pos:column="3">return <expr><name pos:line="281" pos:column="10">CURLE_OK<pos:position pos:line="281" pos:column="18"/></name></expr>;<pos:position pos:line="281" pos:column="19"/></return>
}<pos:position pos:line="282" pos:column="2"/></block></function></unit>

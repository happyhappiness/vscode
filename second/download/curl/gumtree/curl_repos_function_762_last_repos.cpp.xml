<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_762_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">HANDLE<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">select_ws_wait<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">HANDLE<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">handle<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">HANDLE<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">event<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">select_ws_wait_data<pos:position pos:line="3" pos:column="29"/></name></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">data<pos:position pos:line="3" pos:column="35"/></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">HANDLE<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">thread<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">NULL<pos:position pos:line="4" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* allocate internal waiting data structure */</comment>
  <expr_stmt><expr><name pos:line="7" pos:column="3">data<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">malloc<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><sizeof pos:line="7" pos:column="17">sizeof<argument_list pos:line="7" pos:column="23">(<argument><expr pos:line="7" pos:column="24">struct <name pos:line="7" pos:column="31">select_ws_wait_data<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>
  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name pos:line="8" pos:column="6">data<pos:position pos:line="8" pos:column="10"/></name></expr>)<pos:position pos:line="8" pos:column="11"/></condition><then pos:line="8" pos:column="11"> <block pos:line="8" pos:column="12">{
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">data<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">-&gt;<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="11">handle<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">handle<pos:position pos:line="9" pos:column="26"/></name></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">data<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">event<pos:position pos:line="10" pos:column="16"/></name></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">event<pos:position pos:line="10" pos:column="24"/></name></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* launch waiting thread */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">thread<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">CreateThread<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">NULL<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="33">0<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>,
                          <argument><expr><operator pos:line="14" pos:column="27">&amp;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="28">select_ws_wait_thread<pos:position pos:line="14" pos:column="49"/></name></expr></argument>,
                          <argument><expr><name pos:line="15" pos:column="27">data<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="33">0<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">NULL<pos:position pos:line="15" pos:column="40"/></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* free data if thread failed to launch */</comment>
    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><operator pos:line="18" pos:column="8">!<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">thread<pos:position pos:line="18" pos:column="15"/></name></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16"> <block pos:line="18" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">free<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name pos:line="19" pos:column="12">data<pos:position pos:line="19" pos:column="16"/></name></expr></argument>)<pos:position pos:line="19" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <return pos:line="23" pos:column="3">return <expr><name pos:line="23" pos:column="10">thread<pos:position pos:line="23" pos:column="16"/></name></expr>;<pos:position pos:line="23" pos:column="17"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

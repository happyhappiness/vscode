<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_575_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">perform<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">CURLM<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">multi<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">handles<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">fd_set<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">fdread<pos:position pos:line="4" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="18">fdwrite<pos:position pos:line="4" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="27">fdexcep<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">res<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

  <for pos:line="7" pos:column="3">for<control pos:line="7" pos:column="6">(<init pos:line="7" pos:column="7">;<pos:position pos:line="7" pos:column="8"/></init><condition pos:line="7" pos:column="8">;<pos:position pos:line="7" pos:column="9"/></condition><incr/>)<pos:position pos:line="7" pos:column="10"/></control> <block pos:line="7" pos:column="11">{
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">timeval<pos:position pos:line="8" pos:column="19"/></name></name></type> <name pos:line="8" pos:column="20">interval<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">maxfd<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><operator pos:line="9" pos:column="17">-<pos:position pos:line="9" pos:column="18"/></operator><literal type="number" pos:line="9" pos:column="18">99<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="11" pos:column="5">interval<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">.<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">tv_sec<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">interval<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">.<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">tv_usec<pos:position pos:line="12" pos:column="21"/></name></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <literal type="number" pos:line="12" pos:column="24">100000L<pos:position pos:line="12" pos:column="31"/></literal></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt> <comment type="block" pos:line="12" pos:column="33">/* 100 ms */</comment>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">res_multi_perform<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">multi<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="30">&amp;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="31">handles<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><name pos:line="15" pos:column="8">res<pos:position pos:line="15" pos:column="11"/></name></expr>)<pos:position pos:line="15" pos:column="12"/></condition><then pos:line="15" pos:column="12">
      <block type="pseudo"><return pos:line="16" pos:column="7">return <expr><name pos:line="16" pos:column="14">res<pos:position pos:line="16" pos:column="17"/></name></expr>;<pos:position pos:line="16" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">res_test_timedout<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">()<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><name pos:line="19" pos:column="8">res<pos:position pos:line="19" pos:column="11"/></name></expr>)<pos:position pos:line="19" pos:column="12"/></condition><then pos:line="19" pos:column="12">
      <block type="pseudo"><return pos:line="20" pos:column="7">return <expr><name pos:line="20" pos:column="14">res<pos:position pos:line="20" pos:column="17"/></name></expr>;<pos:position pos:line="20" pos:column="18"/></return></block></then></if>

    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><operator pos:line="22" pos:column="8">!<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">handles<pos:position pos:line="22" pos:column="16"/></name></expr>)<pos:position pos:line="22" pos:column="17"/></condition><then pos:line="22" pos:column="17">
      <block type="pseudo"><break pos:line="23" pos:column="7">break;<pos:position pos:line="23" pos:column="13"/></break></block></then></if> <comment type="block" pos:line="23" pos:column="14">/* done */</comment>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">FD_ZERO<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument><expr><operator pos:line="25" pos:column="13">&amp;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="14">fdread<pos:position pos:line="25" pos:column="20"/></name></expr></argument>)<pos:position pos:line="25" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">FD_ZERO<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><operator pos:line="26" pos:column="13">&amp;<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="14">fdwrite<pos:position pos:line="26" pos:column="21"/></name></expr></argument>)<pos:position pos:line="26" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">FD_ZERO<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><operator pos:line="27" pos:column="13">&amp;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="14">fdexcep<pos:position pos:line="27" pos:column="21"/></name></expr></argument>)<pos:position pos:line="27" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">res_multi_fdset<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">multi<pos:position pos:line="29" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="28">&amp;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="29">fdread<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="37">&amp;<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="38">fdwrite<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="47">&amp;<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="48">fdexcep<pos:position pos:line="29" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="57">&amp;<pos:position pos:line="29" pos:column="62"/></operator><name pos:line="29" pos:column="58">maxfd<pos:position pos:line="29" pos:column="63"/></name></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><name pos:line="30" pos:column="8">res<pos:position pos:line="30" pos:column="11"/></name></expr>)<pos:position pos:line="30" pos:column="12"/></condition><then pos:line="30" pos:column="12">
      <block type="pseudo"><return pos:line="31" pos:column="7">return <expr><name pos:line="31" pos:column="14">res<pos:position pos:line="31" pos:column="17"/></name></expr>;<pos:position pos:line="31" pos:column="18"/></return></block></then></if>

    <comment type="block" pos:line="33" pos:column="5">/* At this point, maxfd is guaranteed to be greater or equal than -1. */</comment>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">res_select_test<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">maxfd<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">+<pos:position pos:line="35" pos:column="28"/></operator> <literal type="number" pos:line="35" pos:column="29">1<pos:position pos:line="35" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="32">&amp;<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="33">fdread<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="41">&amp;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="42">fdwrite<pos:position pos:line="35" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="51">&amp;<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="52">fdexcep<pos:position pos:line="35" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="61">&amp;<pos:position pos:line="35" pos:column="66"/></operator><name pos:line="35" pos:column="62">interval<pos:position pos:line="35" pos:column="70"/></name></expr></argument>)<pos:position pos:line="35" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="72"/></expr_stmt>
    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">(<expr><name pos:line="36" pos:column="8">res<pos:position pos:line="36" pos:column="11"/></name></expr>)<pos:position pos:line="36" pos:column="12"/></condition><then pos:line="36" pos:column="12">
      <block type="pseudo"><return pos:line="37" pos:column="7">return <expr><name pos:line="37" pos:column="14">res<pos:position pos:line="37" pos:column="17"/></name></expr>;<pos:position pos:line="37" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">res_test_timedout<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">()<pos:position pos:line="39" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
    <if pos:line="40" pos:column="5">if<condition pos:line="40" pos:column="7">(<expr><name pos:line="40" pos:column="8">res<pos:position pos:line="40" pos:column="11"/></name></expr>)<pos:position pos:line="40" pos:column="12"/></condition><then pos:line="40" pos:column="12">
      <block type="pseudo"><return pos:line="41" pos:column="7">return <expr><name pos:line="41" pos:column="14">res<pos:position pos:line="41" pos:column="17"/></name></expr>;<pos:position pos:line="41" pos:column="18"/></return></block></then></if>
  }<pos:position pos:line="42" pos:column="4"/></block></for>

  <return pos:line="44" pos:column="3">return <expr><literal type="number" pos:line="44" pos:column="10">0<pos:position pos:line="44" pos:column="11"/></literal></expr>;<pos:position pos:line="44" pos:column="12"/></return> <comment type="block" pos:line="44" pos:column="13">/* success */</comment>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

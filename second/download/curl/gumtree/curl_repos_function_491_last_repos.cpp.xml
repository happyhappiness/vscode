<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_491_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">loop<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">num<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="26">CURLM<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">cm<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">url<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">userpwd<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
                <parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">curl_slist<pos:position pos:line="2" pos:column="34"/></name></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">headers<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLMsg<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">msg<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">long<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">L<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">Q<pos:position pos:line="6" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="10">U<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><operator pos:line="6" pos:column="14">-<pos:position pos:line="6" pos:column="15"/></operator><literal type="number" pos:line="6" pos:column="15">1<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">fd_set<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">R<pos:position pos:line="7" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="13">W<pos:position pos:line="7" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="16">E<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">timeval<pos:position pos:line="8" pos:column="17"/></name></name></type> <name pos:line="8" pos:column="18">T<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">res<pos:position pos:line="9" pos:column="10"/></name> <init pos:line="9" pos:column="11">= <expr><literal type="number" pos:line="9" pos:column="13">0<pos:position pos:line="9" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">res<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <call><name pos:line="11" pos:column="9">init<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">num<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="19">cm<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="23">url<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">userpwd<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="37">headers<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">res<pos:position pos:line="12" pos:column="9"/></name></expr>)<pos:position pos:line="12" pos:column="10"/></condition><then pos:line="12" pos:column="10">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">res<pos:position pos:line="13" pos:column="15"/></name></expr>;<pos:position pos:line="13" pos:column="16"/></return></block></then></if>

  <while pos:line="15" pos:column="3">while<condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">U<pos:position pos:line="15" pos:column="10"/></name></expr>)<pos:position pos:line="15" pos:column="11"/></condition> <block pos:line="15" pos:column="12">{

    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">M<pos:position pos:line="17" pos:column="10"/></name> <init pos:line="17" pos:column="11">= <expr><operator pos:line="17" pos:column="13">-<pos:position pos:line="17" pos:column="14"/></operator><literal type="number" pos:line="17" pos:column="14">99<pos:position pos:line="17" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">res_multi_perform<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">cm<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="27">&amp;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="28">U<pos:position pos:line="19" pos:column="29"/></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><name pos:line="20" pos:column="8">res<pos:position pos:line="20" pos:column="11"/></name></expr>)<pos:position pos:line="20" pos:column="12"/></condition><then pos:line="20" pos:column="12">
      <block type="pseudo"><return pos:line="21" pos:column="7">return <expr><name pos:line="21" pos:column="14">res<pos:position pos:line="21" pos:column="17"/></name></expr>;<pos:position pos:line="21" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">res_test_timedout<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">()<pos:position pos:line="23" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><name pos:line="24" pos:column="8">res<pos:position pos:line="24" pos:column="11"/></name></expr>)<pos:position pos:line="24" pos:column="12"/></condition><then pos:line="24" pos:column="12">
      <block type="pseudo"><return pos:line="25" pos:column="7">return <expr><name pos:line="25" pos:column="14">res<pos:position pos:line="25" pos:column="17"/></name></expr>;<pos:position pos:line="25" pos:column="18"/></return></block></then></if>

    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><name pos:line="27" pos:column="8">U<pos:position pos:line="27" pos:column="9"/></name></expr>)<pos:position pos:line="27" pos:column="10"/></condition><then pos:line="27" pos:column="10"> <block pos:line="27" pos:column="11">{
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">FD_ZERO<pos:position pos:line="28" pos:column="14"/></name><argument_list pos:line="28" pos:column="14">(<argument><expr><operator pos:line="28" pos:column="15">&amp;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="16">R<pos:position pos:line="28" pos:column="17"/></name></expr></argument>)<pos:position pos:line="28" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">FD_ZERO<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><operator pos:line="29" pos:column="15">&amp;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="16">W<pos:position pos:line="29" pos:column="17"/></name></expr></argument>)<pos:position pos:line="29" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">FD_ZERO<pos:position pos:line="30" pos:column="14"/></name><argument_list pos:line="30" pos:column="14">(<argument><expr><operator pos:line="30" pos:column="15">&amp;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="16">E<pos:position pos:line="30" pos:column="17"/></name></expr></argument>)<pos:position pos:line="30" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="32" pos:column="7">res_multi_fdset<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">cm<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="27">&amp;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="28">R<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="31">&amp;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="32">W<pos:position pos:line="32" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="35">&amp;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="36">E<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="39">&amp;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="40">M<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
      <if pos:line="33" pos:column="7">if<condition pos:line="33" pos:column="9">(<expr><name pos:line="33" pos:column="10">res<pos:position pos:line="33" pos:column="13"/></name></expr>)<pos:position pos:line="33" pos:column="14"/></condition><then pos:line="33" pos:column="14">
        <block type="pseudo"><return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">res<pos:position pos:line="34" pos:column="19"/></name></expr>;<pos:position pos:line="34" pos:column="20"/></return></block></then></if>

      <comment type="block" pos:line="36" pos:column="7">/* At this point, M is guaranteed to be greater or equal than -1. */</comment>

      <expr_stmt><expr><call><name pos:line="38" pos:column="7">res_multi_timeout<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">cm<pos:position pos:line="38" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="29">&amp;<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="30">L<pos:position pos:line="38" pos:column="31"/></name></expr></argument>)<pos:position pos:line="38" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt>
      <if pos:line="39" pos:column="7">if<condition pos:line="39" pos:column="9">(<expr><name pos:line="39" pos:column="10">res<pos:position pos:line="39" pos:column="13"/></name></expr>)<pos:position pos:line="39" pos:column="14"/></condition><then pos:line="39" pos:column="14">
        <block type="pseudo"><return pos:line="40" pos:column="9">return <expr><name pos:line="40" pos:column="16">res<pos:position pos:line="40" pos:column="19"/></name></expr>;<pos:position pos:line="40" pos:column="20"/></return></block></then></if>

      <comment type="block" pos:line="42" pos:column="7">/* At this point, L is guaranteed to be greater or equal than -1. */</comment>

      <if pos:line="44" pos:column="7">if<condition pos:line="44" pos:column="9">(<expr><name pos:line="44" pos:column="10">L<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">!=<pos:position pos:line="44" pos:column="14"/></operator> <operator pos:line="44" pos:column="15">-<pos:position pos:line="44" pos:column="16"/></operator><literal type="number" pos:line="44" pos:column="16">1<pos:position pos:line="44" pos:column="17"/></literal></expr>)<pos:position pos:line="44" pos:column="18"/></condition><then pos:line="44" pos:column="18"> <block pos:line="44" pos:column="19">{
        <decl_stmt><decl><type><name pos:line="45" pos:column="9">int<pos:position pos:line="45" pos:column="12"/></name></type> <name pos:line="45" pos:column="13">itimeout<pos:position pos:line="45" pos:column="21"/></name> <init pos:line="45" pos:column="22">= <expr><ternary><condition><expr><operator pos:line="45" pos:column="24">(<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="25">L<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">&gt;<pos:position pos:line="45" pos:column="31"/></operator> <operator pos:line="45" pos:column="29">(<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="30">long<pos:position pos:line="45" pos:column="34"/></name><operator pos:line="45" pos:column="34">)<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="35">INT_MAX<pos:position pos:line="45" pos:column="42"/></name><operator pos:line="45" pos:column="42">)<pos:position pos:line="45" pos:column="43"/></operator></expr> ?<pos:position pos:line="45" pos:column="45"/></condition><then pos:line="45" pos:column="45"> <expr><name pos:line="45" pos:column="46">INT_MAX<pos:position pos:line="45" pos:column="53"/></name></expr> <pos:position pos:line="45" pos:column="54"/></then><else pos:line="45" pos:column="54">: <expr><operator pos:line="45" pos:column="56">(<pos:position pos:line="45" pos:column="57"/></operator><name pos:line="45" pos:column="57">int<pos:position pos:line="45" pos:column="60"/></name><operator pos:line="45" pos:column="60">)<pos:position pos:line="45" pos:column="61"/></operator><name pos:line="45" pos:column="61">L<pos:position pos:line="45" pos:column="62"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="45" pos:column="63"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">T<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">.<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="11">tv_sec<pos:position pos:line="46" pos:column="17"/></name></name> <operator pos:line="46" pos:column="18">=<pos:position pos:line="46" pos:column="19"/></operator> <name pos:line="46" pos:column="20">itimeout<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">/<pos:position pos:line="46" pos:column="29"/></operator><literal type="number" pos:line="46" pos:column="29">1000<pos:position pos:line="46" pos:column="33"/></literal></expr>;<pos:position pos:line="46" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">T<pos:position pos:line="47" pos:column="10"/></name><operator pos:line="47" pos:column="10">.<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">tv_usec<pos:position pos:line="47" pos:column="18"/></name></name> <operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator> <operator pos:line="47" pos:column="21">(<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="22">itimeout<pos:position pos:line="47" pos:column="30"/></name><operator pos:line="47" pos:column="30">%<pos:position pos:line="47" pos:column="31"/></operator><literal type="number" pos:line="47" pos:column="31">1000<pos:position pos:line="47" pos:column="35"/></literal><operator pos:line="47" pos:column="35">)<pos:position pos:line="47" pos:column="36"/></operator><operator pos:line="47" pos:column="36">*<pos:position pos:line="47" pos:column="37"/></operator><literal type="number" pos:line="47" pos:column="37">1000<pos:position pos:line="47" pos:column="41"/></literal></expr>;<pos:position pos:line="47" pos:column="42"/></expr_stmt>
      }<pos:position pos:line="48" pos:column="8"/></block></then>
      <else pos:line="49" pos:column="7">else <block pos:line="49" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="50" pos:column="9">T<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">.<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="11">tv_sec<pos:position pos:line="50" pos:column="17"/></name></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <literal type="number" pos:line="50" pos:column="20">5<pos:position pos:line="50" pos:column="21"/></literal></expr>;<pos:position pos:line="50" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="51" pos:column="9">T<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">.<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="11">tv_usec<pos:position pos:line="51" pos:column="18"/></name></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <literal type="number" pos:line="51" pos:column="21">0<pos:position pos:line="51" pos:column="22"/></literal></expr>;<pos:position pos:line="51" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="52" pos:column="8"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="54" pos:column="7">res_select_test<pos:position pos:line="54" pos:column="22"/></name><argument_list pos:line="54" pos:column="22">(<argument><expr><name pos:line="54" pos:column="23">M<pos:position pos:line="54" pos:column="24"/></name> <operator pos:line="54" pos:column="25">+<pos:position pos:line="54" pos:column="26"/></operator> <literal type="number" pos:line="54" pos:column="27">1<pos:position pos:line="54" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="54" pos:column="30">&amp;<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="31">R<pos:position pos:line="54" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="34">&amp;<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="35">W<pos:position pos:line="54" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="38">&amp;<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="39">E<pos:position pos:line="54" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="42">&amp;<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="43">T<pos:position pos:line="54" pos:column="44"/></name></expr></argument>)<pos:position pos:line="54" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="46"/></expr_stmt>
      <if pos:line="55" pos:column="7">if<condition pos:line="55" pos:column="9">(<expr><name pos:line="55" pos:column="10">res<pos:position pos:line="55" pos:column="13"/></name></expr>)<pos:position pos:line="55" pos:column="14"/></condition><then pos:line="55" pos:column="14">
        <block type="pseudo"><return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">res<pos:position pos:line="56" pos:column="19"/></name></expr>;<pos:position pos:line="56" pos:column="20"/></return></block></then></if>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <while pos:line="59" pos:column="5">while<condition pos:line="59" pos:column="10">(<expr><operator pos:line="59" pos:column="11">(<pos:position pos:line="59" pos:column="12"/></operator><name pos:line="59" pos:column="12">msg<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <call><name pos:line="59" pos:column="18">curl_multi_info_read<pos:position pos:line="59" pos:column="38"/></name><argument_list pos:line="59" pos:column="38">(<argument><expr><name pos:line="59" pos:column="39">cm<pos:position pos:line="59" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="43">&amp;<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="44">Q<pos:position pos:line="59" pos:column="45"/></name></expr></argument>)<pos:position pos:line="59" pos:column="46"/></argument_list></call><operator pos:line="59" pos:column="46">)<pos:position pos:line="59" pos:column="47"/></operator> <operator pos:line="59" pos:column="48">!=<pos:position pos:line="59" pos:column="50"/></operator> <name pos:line="59" pos:column="51">NULL<pos:position pos:line="59" pos:column="55"/></name></expr>)<pos:position pos:line="59" pos:column="56"/></condition> <block pos:line="59" pos:column="57">{
      <if pos:line="60" pos:column="7">if<condition pos:line="60" pos:column="9">(<expr><name><name pos:line="60" pos:column="10">msg<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">-&gt;<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="15">msg<pos:position pos:line="60" pos:column="18"/></name></name> <operator pos:line="60" pos:column="19">==<pos:position pos:line="60" pos:column="21"/></operator> <name pos:line="60" pos:column="22">CURLMSG_DONE<pos:position pos:line="60" pos:column="34"/></name></expr>)<pos:position pos:line="60" pos:column="35"/></condition><then pos:line="60" pos:column="35"> <block pos:line="60" pos:column="36">{
        <decl_stmt><decl><type><name pos:line="61" pos:column="9">int<pos:position pos:line="61" pos:column="12"/></name></type> <name pos:line="61" pos:column="13">i<pos:position pos:line="61" pos:column="14"/></name></decl>;<pos:position pos:line="61" pos:column="15"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="62" pos:column="9">CURL<pos:position pos:line="62" pos:column="13"/></name> <modifier pos:line="62" pos:column="14">*<pos:position pos:line="62" pos:column="15"/></modifier></type><name pos:line="62" pos:column="15">e<pos:position pos:line="62" pos:column="16"/></name> <init pos:line="62" pos:column="17">= <expr><name><name pos:line="62" pos:column="19">msg<pos:position pos:line="62" pos:column="22"/></name><operator pos:line="62" pos:column="22">-&gt;<pos:position pos:line="62" pos:column="27"/></operator><name pos:line="62" pos:column="24">easy_handle<pos:position pos:line="62" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="62" pos:column="36"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">fprintf<pos:position pos:line="63" pos:column="16"/></name><argument_list pos:line="63" pos:column="16">(<argument><expr><name pos:line="63" pos:column="17">stderr<pos:position pos:line="63" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="25">"R: %d - %s\n"<pos:position pos:line="63" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="63" pos:column="41">(<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="42">int<pos:position pos:line="63" pos:column="45"/></name><operator pos:line="63" pos:column="45">)<pos:position pos:line="63" pos:column="46"/></operator><name><name pos:line="63" pos:column="46">msg<pos:position pos:line="63" pos:column="49"/></name><operator pos:line="63" pos:column="49">-&gt;<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="51">data<pos:position pos:line="63" pos:column="55"/></name><operator pos:line="63" pos:column="55">.<pos:position pos:line="63" pos:column="56"/></operator><name pos:line="63" pos:column="56">result<pos:position pos:line="63" pos:column="62"/></name></name></expr></argument>,
                <argument><expr><call><name pos:line="64" pos:column="17">curl_easy_strerror<pos:position pos:line="64" pos:column="35"/></name><argument_list pos:line="64" pos:column="35">(<argument><expr><name><name pos:line="64" pos:column="36">msg<pos:position pos:line="64" pos:column="39"/></name><operator pos:line="64" pos:column="39">-&gt;<pos:position pos:line="64" pos:column="44"/></operator><name pos:line="64" pos:column="41">data<pos:position pos:line="64" pos:column="45"/></name><operator pos:line="64" pos:column="45">.<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="46">result<pos:position pos:line="64" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">curl_multi_remove_handle<pos:position pos:line="65" pos:column="33"/></name><argument_list pos:line="65" pos:column="33">(<argument><expr><name pos:line="65" pos:column="34">cm<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">e<pos:position pos:line="65" pos:column="39"/></name></expr></argument>)<pos:position pos:line="65" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">curl_easy_cleanup<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">e<pos:position pos:line="66" pos:column="28"/></name></expr></argument>)<pos:position pos:line="66" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="30"/></expr_stmt>
        <for pos:line="67" pos:column="9">for<control pos:line="67" pos:column="12">(<init><expr><name pos:line="67" pos:column="13">i<pos:position pos:line="67" pos:column="14"/></name> <operator pos:line="67" pos:column="15">=<pos:position pos:line="67" pos:column="16"/></operator> <literal type="number" pos:line="67" pos:column="17">0<pos:position pos:line="67" pos:column="18"/></literal></expr>;<pos:position pos:line="67" pos:column="19"/></init> <condition><expr><name pos:line="67" pos:column="20">i<pos:position pos:line="67" pos:column="21"/></name> <operator pos:line="67" pos:column="22">&lt;<pos:position pos:line="67" pos:column="26"/></operator> <name pos:line="67" pos:column="24">NUM_HANDLES<pos:position pos:line="67" pos:column="35"/></name></expr>;<pos:position pos:line="67" pos:column="36"/></condition> <incr><expr><name pos:line="67" pos:column="37">i<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">++<pos:position pos:line="67" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="41"/></control> <block pos:line="67" pos:column="42">{
          <if pos:line="68" pos:column="11">if<condition pos:line="68" pos:column="13">(<expr><name><name pos:line="68" pos:column="14">eh<pos:position pos:line="68" pos:column="16"/></name><index pos:line="68" pos:column="16">[<expr><name pos:line="68" pos:column="17">i<pos:position pos:line="68" pos:column="18"/></name></expr>]<pos:position pos:line="68" pos:column="19"/></index></name> <operator pos:line="68" pos:column="20">==<pos:position pos:line="68" pos:column="22"/></operator> <name pos:line="68" pos:column="23">e<pos:position pos:line="68" pos:column="24"/></name></expr>)<pos:position pos:line="68" pos:column="25"/></condition><then pos:line="68" pos:column="25"> <block pos:line="68" pos:column="26">{
            <expr_stmt><expr><name><name pos:line="69" pos:column="13">eh<pos:position pos:line="69" pos:column="15"/></name><index pos:line="69" pos:column="15">[<expr><name pos:line="69" pos:column="16">i<pos:position pos:line="69" pos:column="17"/></name></expr>]<pos:position pos:line="69" pos:column="18"/></index></name> <operator pos:line="69" pos:column="19">=<pos:position pos:line="69" pos:column="20"/></operator> <name pos:line="69" pos:column="21">NULL<pos:position pos:line="69" pos:column="25"/></name></expr>;<pos:position pos:line="69" pos:column="26"/></expr_stmt>
            <break pos:line="70" pos:column="13">break;<pos:position pos:line="70" pos:column="19"/></break>
          }<pos:position pos:line="71" pos:column="12"/></block></then></if>
        }<pos:position pos:line="72" pos:column="10"/></block></for>
      }<pos:position pos:line="73" pos:column="8"/></block></then>
      <else pos:line="74" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="9">fprintf<pos:position pos:line="75" pos:column="16"/></name><argument_list pos:line="75" pos:column="16">(<argument><expr><name pos:line="75" pos:column="17">stderr<pos:position pos:line="75" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="25">"E: CURLMsg (%d)\n"<pos:position pos:line="75" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="75" pos:column="46">(<pos:position pos:line="75" pos:column="47"/></operator><name pos:line="75" pos:column="47">int<pos:position pos:line="75" pos:column="50"/></name><operator pos:line="75" pos:column="50">)<pos:position pos:line="75" pos:column="51"/></operator><name><name pos:line="75" pos:column="51">msg<pos:position pos:line="75" pos:column="54"/></name><operator pos:line="75" pos:column="54">-&gt;<pos:position pos:line="75" pos:column="59"/></operator><name pos:line="75" pos:column="56">msg<pos:position pos:line="75" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="61"/></expr_stmt></block></else></if>
    }<pos:position pos:line="76" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="78" pos:column="5">res_test_timedout<pos:position pos:line="78" pos:column="22"/></name><argument_list pos:line="78" pos:column="22">()<pos:position pos:line="78" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="25"/></expr_stmt>
    <if pos:line="79" pos:column="5">if<condition pos:line="79" pos:column="7">(<expr><name pos:line="79" pos:column="8">res<pos:position pos:line="79" pos:column="11"/></name></expr>)<pos:position pos:line="79" pos:column="12"/></condition><then pos:line="79" pos:column="12">
      <block type="pseudo"><return pos:line="80" pos:column="7">return <expr><name pos:line="80" pos:column="14">res<pos:position pos:line="80" pos:column="17"/></name></expr>;<pos:position pos:line="80" pos:column="18"/></return></block></then></if>
  }<pos:position pos:line="81" pos:column="4"/></block></while>

  <return pos:line="83" pos:column="3">return <expr><literal type="number" pos:line="83" pos:column="10">0<pos:position pos:line="83" pos:column="11"/></literal></expr>;<pos:position pos:line="83" pos:column="12"/></return> <comment type="block" pos:line="83" pos:column="13">/* success */</comment>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

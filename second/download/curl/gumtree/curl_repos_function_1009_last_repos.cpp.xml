<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1009_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_tcpnodelay<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">connectdata<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">conn<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">curl_socket_t<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">sockfd<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><call><name pos:line="3" pos:column="5">defined<pos:position pos:line="3" pos:column="12"/></name><argument_list pos:line="3" pos:column="12">(<argument><expr><name pos:line="3" pos:column="13">TCP_NODELAY<pos:position pos:line="3" pos:column="24"/></name></expr></argument>)<pos:position pos:line="3" pos:column="25"/></argument_list></call></expr></cpp:if>
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><operator pos:line="4" pos:column="5">!<pos:position pos:line="4" pos:column="6"/></operator><call><name pos:line="4" pos:column="6">defined<pos:position pos:line="4" pos:column="13"/></name><argument_list pos:line="4" pos:column="13">(<argument><expr><name pos:line="4" pos:column="14">CURL_DISABLE_VERBOSE_STRINGS<pos:position pos:line="4" pos:column="42"/></name></expr></argument>)<pos:position pos:line="4" pos:column="43"/></argument_list></call></expr></cpp:if>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Curl_easy<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">data<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">conn<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">data<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">curl_socklen_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">onoff<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><operator pos:line="7" pos:column="26">(<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">curl_socklen_t<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">)<pos:position pos:line="7" pos:column="42"/></operator> <literal type="number" pos:line="7" pos:column="43">1<pos:position pos:line="7" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">level<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><name pos:line="8" pos:column="15">IPPROTO_TCP<pos:position pos:line="8" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><call><name pos:line="10" pos:column="5">defined<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">CURL_DISABLE_VERBOSE_STRINGS<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><operator pos:line="11" pos:column="3">(<pos:position pos:line="11" pos:column="4"/></operator><name pos:line="11" pos:column="4">void<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">)<pos:position pos:line="11" pos:column="9"/></operator> <name pos:line="11" pos:column="10">conn<pos:position pos:line="11" pos:column="14"/></name></expr>;<pos:position pos:line="11" pos:column="15"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><call><name pos:line="14" pos:column="6">setsockopt<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">sockfd<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="25">level<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="32">TCP_NODELAY<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="45">(<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="46">void<pos:position pos:line="14" pos:column="50"/></name> <operator pos:line="14" pos:column="51">*<pos:position pos:line="14" pos:column="52"/></operator><operator pos:line="14" pos:column="52">)<pos:position pos:line="14" pos:column="53"/></operator><operator pos:line="14" pos:column="53">&amp;<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="54">onoff<pos:position pos:line="14" pos:column="59"/></name></expr></argument>,
                <argument><expr><sizeof pos:line="15" pos:column="17">sizeof<argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">onoff<pos:position pos:line="15" pos:column="29"/></name></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call> <operator pos:line="15" pos:column="32">&lt;<pos:position pos:line="15" pos:column="36"/></operator> <literal type="number" pos:line="15" pos:column="34">0<pos:position pos:line="15" pos:column="35"/></literal></expr>)<pos:position pos:line="15" pos:column="36"/></condition><then pos:line="15" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="5">infof<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><name pos:line="16" pos:column="11">data<pos:position pos:line="16" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="17">"Could not set TCP_NODELAY: %s\n"<pos:position pos:line="16" pos:column="50"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="17" pos:column="11">Curl_strerror<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">conn<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="31">SOCKERRNO<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt></block></then>
  <else pos:line="18" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="5">infof<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><name pos:line="19" pos:column="11">data<pos:position pos:line="19" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="17">"TCP_NODELAY set\n"<pos:position pos:line="19" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt></block></else></if>
<cpp:else pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">else<pos:position pos:line="20" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><operator pos:line="21" pos:column="3">(<pos:position pos:line="21" pos:column="4"/></operator><name pos:line="21" pos:column="4">void<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">)<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">conn<pos:position pos:line="21" pos:column="13"/></name></expr>;<pos:position pos:line="21" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="22" pos:column="3">(<pos:position pos:line="22" pos:column="4"/></operator><name pos:line="22" pos:column="4">void<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">)<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">sockfd<pos:position pos:line="22" pos:column="15"/></name></expr>;<pos:position pos:line="22" pos:column="16"/></expr_stmt>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

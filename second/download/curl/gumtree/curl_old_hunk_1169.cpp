"\n"
"       --ciphers <list of ciphers>\n"
"              (TLS) Specifies which ciphers to use in the connection. The list\n"
"              of  ciphers  must  specify  valid ciphers. Read up on SSL cipher\n"
"              list details on this URL:\n"
"\n"
"               https://www.openssl.org/docs/apps/ciphers.html\n"
"\n"
, stdout);
 fputs(
"              NSS ciphers are done differently than OpenSSL  and  GnuTLS.  The\n"
"              full  list of NSS ciphers is in the NSSCipherSuite entry at this\n"
"              URL:\n"
"\n"
"               https://git.fedora-\n"
"              hosted.org/cgit/mod_nss.git/plain/docs/mod_nss.html#Directives\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --compressed\n"
"              (HTTP) Request a compressed response using one of the algorithms\n"
, stdout);
 fputs(
"              curl supports, and save  the  uncompressed  document.   If  this\n"
"              option  is  used  and  the server sends an unsupported encoding,\n"
"              curl will report an error.\n"
"\n"
"       -K, --config <file>\n"
"              Specify which config file to read curl arguments from. The  con-\n"
"              fig  file  is a text file in which command line arguments can be\n"
"              written which then will be used as if they were written  on  the\n"
"              actual command line.\n"
"\n"
, stdout);
 fputs(
"              Options  and their parameters must be specified on the same con-\n"
"              fig file line, separated by whitespace,  colon,  or  the  equals\n"
"              sign.  Long  option  names can optionally be given in the config\n"
"              file without the initial double dashes and if so, the  colon  or\n"
"              equals  characters  can  be used as separators. If the option is\n"
"              specified with one or two dashes,  there  can  be  no  colon  or\n"
, stdout);
 fputs(
"              equals character between the option and its parameter.\n"
"\n"
"              If the parameter is to contain whitespace, the parameter must be\n"
"              enclosed within quotes.  Within  double  quotes,  the  following\n"
"              escape  sequences  are  available:  \\\\, \\\", \\t, \\n, \\r and \\v. A\n"
"              backslash preceding any other letter is ignored.  If  the  first\n"
"              column of a config line is a '#' character, the rest of the line\n"
, stdout);
 fputs(
"              will be treated as a comment. Only write one option per physical\n"
"              line in the config file.\n"
"\n"
"              Specify  the  filename  to -K, --config as '-' to make curl read\n"
"              the file from stdin.\n"
"\n"
"              Note that to be able to specify a URL in the  config  file,  you\n"
"              need  to  specify  it  using the --url option, and not by simply\n"
"              writing the URL on its own line. So, it could  look  similar  to\n"
"              this:\n"
"\n"
, stdout);
 fputs(
"              url = \"https://curl.haxx.se/docs/\"\n"
"\n"
"              When  curl  is invoked, it always (unless -q, --disable is used)\n"
"              checks for a default config file  and  uses  it  if  found.  The\n"
"              default  config  file  is checked for in the following places in\n"
"              this order:\n"
"\n"
"              1) curl tries to find the \"home dir\": It first  checks  for  the\n"
"              CURL_HOME and then the HOME environment variables. Failing that,\n"
, stdout);
 fputs(
"              it uses getpwuid() on Unix-like systems (which returns the  home\n"
"              dir  given the current user in your system). On Windows, it then\n"
"              checks for the APPDATA variable, or as a last resort the '%USER-\n"
"              PROFILE%\\Application Data'.\n"
"\n"
"              2)  On  windows, if there is no _curlrc file in the home dir, it\n"
"              checks for one in the same dir the curl executable is placed. On\n"
, stdout);
 fputs(
"              Unix-like  systems,  it will simply try to load .curlrc from the\n"
"              determined home dir.\n"
"\n"
"              # --- Example file ---\n"
"              # this is a comment\n"
"              url = \"example.com\"\n"
"              output = \"curlhere.html\"\n"
"              user-agent = \"superagent/1.0\"\n"
"\n"
"              # and fetch another URL too\n"
"              url = \"example.com/docs/manpage.html\"\n"
"              -O\n"
"              referer = \"http://nowhereatall.example.com/\"\n"
, stdout);
 fputs(
"              # --- End of example file ---\n"
"\n"
"              This option can be used multiple times to load  multiple  config\n"
"              files.\n"
"\n"
"       --connect-timeout <seconds>\n"
"              Maximum  time  in  seconds  that  you allow curl's connection to\n"
"              take.  This only limits the connection phase, so  if  curl  con-\n"
"              nects  within the given period it will continue - if not it will\n"
"              exit.  Since version 7.32.0, this option accepts decimal values.\n"
, stdout);
 fputs(
"              If this option is used several times, the last one will be used.\n"
"\n"
"              See also -m, --max-time.\n"
"\n"
"       --connect-to <HOST1:PORT1:HOST2:PORT2>\n"
"\n"
"              For a request to the given HOST:PORT pair, connect  to  CONNECT-\n"
"              TO-HOST:CONNECT-TO-PORT  instead.   This  option  is suitable to\n"
"              direct requests at a specific server, e.g. at a specific cluster\n"
"              node  in  a  cluster  of  servers.   This option is only used to\n"
, stdout);
 fputs(
"              establish the network connection. It does NOT affect  the  host-\n"
"              name/port  that is used for TLS/SSL (e.g. SNI, certificate veri-\n"
"              fication) or for the application protocols.  \"host\"  and  \"port\"\n"
"              may  be the empty string, meaning \"any host/port\".  \"connect-to-\n"
"              host\" and \"connect-to-port\" may also be the empty string,  mean-\n"
"              ing \"use the request's original host/port\".\n"
"\n"
, stdout);
 fputs(
"              This option can be used many times to add many connect rules.\n"
"\n"
"              See also --resolve and -H, --header. Added in 7.49.0.\n"
"\n"
"       -C, --continue-at <offset>\n"
"              Continue/Resume  a  previous  file transfer at the given offset.\n"
"              The given offset is the exact  number  of  bytes  that  will  be\n"
"              skipped,  counting  from the beginning of the source file before\n"
"              it is transferred to the destination.  If used with uploads, the\n"
, stdout);
 fputs(
"              FTP server command SIZE will not be used by curl.\n"
"\n"
"              Use  \"-C  -\" to tell curl to automatically find out where/how to\n"
"              resume the transfer. It then uses the given  output/input  files\n"
"              to figure that out.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"              See also -r, --range.\n"
"\n"
"       -c, --cookie-jar <filename>\n"
"              (HTTP)  Specify to which file you want curl to write all cookies\n"
, stdout);
 fputs(
"              after a completed operation. Curl writes all  cookies  from  its\n"
"              in-memory  cookie storage to the given file at the end of opera-\n"
"              tions. If no cookies are known, no data  will  be  written.  The\n"
"              file  will  be written using the Netscape cookie file format. If\n"
"              you set the file name to a single dash, \"-\", the cookies will be\n"
"              written to stdout.\n"
"\n"
, stdout);
 fputs(
"              This  command  line  option will activate the cookie engine that\n"
"              makes curl record and use cookies. Another way to activate it is\n"
"              to use the -b, --cookie option.\n"
"\n"
"              If the cookie jar can't be created or written to, the whole curl\n"
"              operation won't fail or even report an error clearly. Using  -v,\n"
"              --verbose  will  get  a  warning displayed, but that is the only\n"
, stdout);
 fputs(
"              visible feedback you get about this possibly lethal situation.\n"
"\n"
"              If this option is used several times, the  last  specified  file\n"
"              name will be used.\n"
"\n"
"       -b, --cookie <data>\n"
"              (HTTP) Pass the data to the HTTP server in the Cookie header. It\n"
"              is supposedly the data previously received from the server in  a\n"
"              \"Set-Cookie:\"   line.    The   data  should  be  in  the  format\n"
"              \"NAME1=VALUE1; NAME2=VALUE2\".\n"
"\n"
, stdout);
 fputs(
"              If no '=' symbol is used in the argument, it is instead  treated\n"
"              as a filename to read previously stored cookie from. This option\n"
"              also activates the cookie engine which  will  make  curl  record\n"
"              incoming  cookies,  which  may  be handy if you're using this in\n"
"              combination with the -L, --location option or  do  multiple  URL\n"
"              transfers on the same invoke.\n"
"\n"
, stdout);
 fputs(
"              The file format of the file to read cookies from should be plain\n"
"              HTTP headers (Set-Cookie style) or the  Netscape/Mozilla  cookie\n"
"              file format.\n"
"\n"
"              The  file  specified with -b, --cookie is only used as input. No\n"
"              cookies will be written to the file. To store cookies,  use  the\n"
"              -c, --cookie-jar option.\n"
"\n"
"              Exercise  caution  if  you  are  using  this option and multiple\n"
, stdout);
 fputs(
"              transfers may occur.  If you use the NAME1=VALUE1; format, or in\n"
"              a  file  use  the  Set-Cookie format and don't specify a domain,\n"
"              then the cookie is sent for any domain (even after redirects are\n"
"              followed)  and cannot be modified by a server-set cookie. If the\n"
"              cookie engine is enabled and a server sets a cookie of the  same\n"
"              name then both will be sent on a future transfer to that server,\n"
, stdout);
 fputs(
"              likely not what you intended.  To address  these  issues  set  a\n"
"              domain  in  Set-Cookie  (doing that will include sub domains) or\n"
"              use the Netscape format.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"              Users very often want to both read cookies from a file and write\n"
"              updated  cookies  back to a file, so using both -b, --cookie and\n"
, stdout);
 fputs(
"              -c, --cookie-jar in the same command line is common.\n"
"\n"
"       --create-dirs\n"
"              When used in conjunction with the -o, --output option, curl will\n"
"              create  the  necessary local directory hierarchy as needed. This\n"
"              option creates the dirs mentioned with the -o, --output  option,\n"
"              nothing  else.  If  the --output file name uses no dir or if the\n"
"              dirs it mentions already exist, no dir will be created.\n"
"\n"
, stdout);
 fputs(
"              To create remote directories when using FTP or SFTP, try  --ftp-\n"
"              create-dirs.\n"
"\n"
"       --crlf (FTP  SMTP)  Convert  LF  to  CRLF  in  upload.  Useful  for MVS\n"
"              (OS/390).\n"
"\n"
"              (SMTP added in 7.40.0)\n"
"\n"
"       --crlfile <file>\n"
"              (TLS) Provide a file using PEM format with a Certificate Revoca-\n"

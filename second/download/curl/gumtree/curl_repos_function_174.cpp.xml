<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_174.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">go_sleep<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">long<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">ms<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">HAVE_POLL_FINE<pos:position pos:line="3" pos:column="22"/></name></cpp:ifdef>
  <comment type="block" pos:line="4" pos:column="3">/* portable subsecond "sleep" */</comment>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">poll<pos:position pos:line="5" pos:column="7"/></name><argument_list pos:line="5" pos:column="7">(<argument><expr><operator pos:line="5" pos:column="8">(<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">void<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></operator><operator pos:line="5" pos:column="15">)<pos:position pos:line="5" pos:column="16"/></operator><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></argument>, <argument><expr><operator pos:line="5" pos:column="22">(<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">int<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">)<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="27">ms<pos:position pos:line="5" pos:column="29"/></name></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>
<cpp:else pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">else<pos:position pos:line="6" pos:column="6"/></cpp:directive></cpp:else>
  <comment type="block" pos:line="7" pos:column="3">/* systems without poll() need other solutions */</comment>

<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">WIN32<pos:position pos:line="9" pos:column="13"/></name></cpp:ifdef>
  <comment type="block" pos:line="10" pos:column="3">/* Windows offers a millisecond sleep */</comment>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">Sleep<pos:position pos:line="11" pos:column="8"/></name><argument_list pos:line="11" pos:column="8">(<argument><expr><name pos:line="11" pos:column="9">ms<pos:position pos:line="11" pos:column="11"/></name></expr></argument>)<pos:position pos:line="11" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="13"/></expr_stmt>
<cpp:elif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">elif<pos:position pos:line="12" pos:column="6"/></cpp:directive> <expr><call><name pos:line="12" pos:column="7">defined<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">__MSDOS__<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr></cpp:elif>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">delay<pos:position pos:line="13" pos:column="8"/></name><argument_list pos:line="13" pos:column="8">(<argument><expr><name pos:line="13" pos:column="9">ms<pos:position pos:line="13" pos:column="11"/></name></expr></argument>)<pos:position pos:line="13" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="13"/></expr_stmt>
<cpp:else pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">else<pos:position pos:line="14" pos:column="6"/></cpp:directive></cpp:else>
  <comment type="block" pos:line="15" pos:column="3">/* Other systems must use select() for this */</comment>
  <decl_stmt><decl><type><name><name pos:line="16" pos:column="3">struct<pos:position pos:line="16" pos:column="9"/></name> <name pos:line="16" pos:column="10">timeval<pos:position pos:line="16" pos:column="17"/></name></name></type> <name pos:line="16" pos:column="18">timeout<pos:position pos:line="16" pos:column="25"/></name></decl>;<pos:position pos:line="16" pos:column="26"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="18" pos:column="3">timeout<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">.<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">tv_sec<pos:position pos:line="18" pos:column="17"/></name></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="20">ms<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">/<pos:position pos:line="18" pos:column="23"/></operator><literal type="number" pos:line="18" pos:column="23">1000<pos:position pos:line="18" pos:column="27"/></literal></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">ms<pos:position pos:line="19" pos:column="5"/></name> <operator pos:line="19" pos:column="6">=<pos:position pos:line="19" pos:column="7"/></operator> <name pos:line="19" pos:column="8">ms<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">%<pos:position pos:line="19" pos:column="11"/></operator><literal type="number" pos:line="19" pos:column="11">1000<pos:position pos:line="19" pos:column="15"/></literal></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">timeout<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">.<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">tv_usec<pos:position pos:line="20" pos:column="18"/></name></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">ms<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">*<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="26">1000<pos:position pos:line="20" pos:column="30"/></literal></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">select<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><literal type="number" pos:line="22" pos:column="10">0<pos:position pos:line="22" pos:column="11"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="13">NULL<pos:position pos:line="22" pos:column="17"/></name></expr></argument>,  <argument><expr><name pos:line="22" pos:column="20">NULL<pos:position pos:line="22" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="26">NULL<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="32">&amp;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="33">timeout<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

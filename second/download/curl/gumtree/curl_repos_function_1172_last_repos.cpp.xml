<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1172_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">imap_state_auth_resp<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">connectdata<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">conn<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="2" pos:column="38">int<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">imapcode<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">imapstate<pos:position pos:line="3" pos:column="47"/></name></type> <name pos:line="3" pos:column="48">instate<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">CURLE_OK<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_easy<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name><name pos:line="6" pos:column="28">conn<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">data<pos:position pos:line="6" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">imap_conn<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">imapc<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><operator pos:line="7" pos:column="29">&amp;<pos:position pos:line="7" pos:column="34"/></operator><name><name pos:line="7" pos:column="30">conn<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">proto<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">.<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="42">imapc<pos:position pos:line="7" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">saslprogress<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">progress<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="10" pos:column="3">(<pos:position pos:line="10" pos:column="4"/></operator><name pos:line="10" pos:column="4">void<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">)<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">instate<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt> <comment type="block" pos:line="10" pos:column="18">/* no use for this yet */</comment>

  <expr_stmt><expr><name pos:line="12" pos:column="3">result<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <call><name pos:line="12" pos:column="12">Curl_sasl_continue<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><operator pos:line="12" pos:column="31">&amp;<pos:position pos:line="12" pos:column="36"/></operator><name><name pos:line="12" pos:column="32">imapc<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">sasl<pos:position pos:line="12" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">conn<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="51">imapcode<pos:position pos:line="12" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="61">&amp;<pos:position pos:line="12" pos:column="66"/></operator><name pos:line="12" pos:column="62">progress<pos:position pos:line="12" pos:column="70"/></name></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><operator pos:line="13" pos:column="6">!<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">result<pos:position pos:line="13" pos:column="13"/></name></expr>)<pos:position pos:line="13" pos:column="14"/></condition><then pos:line="13" pos:column="14">
    <block type="pseudo"><switch pos:line="14" pos:column="5">switch<condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">progress<pos:position pos:line="14" pos:column="20"/></name></expr>)<pos:position pos:line="14" pos:column="21"/></condition> <block pos:line="14" pos:column="22">{
    <case pos:line="15" pos:column="5">case <expr><name pos:line="15" pos:column="10">SASL_DONE<pos:position pos:line="15" pos:column="19"/></name></expr>:<pos:position pos:line="15" pos:column="20"/></case>
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">state<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">conn<pos:position pos:line="16" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="19">IMAP_STOP<pos:position pos:line="16" pos:column="28"/></name></expr></argument>)<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>  <comment type="block" pos:line="16" pos:column="32">/* Authenticated */</comment>
      <break pos:line="17" pos:column="7">break;<pos:position pos:line="17" pos:column="13"/></break>
    <case pos:line="18" pos:column="5">case <expr><name pos:line="18" pos:column="10">SASL_IDLE<pos:position pos:line="18" pos:column="19"/></name></expr>:<pos:position pos:line="18" pos:column="20"/></case>            <comment type="block" pos:line="18" pos:column="32">/* No mechanism left after cancellation */</comment>
      <if pos:line="19" pos:column="7">if<condition pos:line="19" pos:column="9">(<expr><operator pos:line="19" pos:column="10">(<pos:position pos:line="19" pos:column="11"/></operator><operator pos:line="19" pos:column="11">!<pos:position pos:line="19" pos:column="12"/></operator><name><name pos:line="19" pos:column="12">imapc<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">login_disabled<pos:position pos:line="19" pos:column="33"/></name></name><operator pos:line="19" pos:column="33">)<pos:position pos:line="19" pos:column="34"/></operator> <operator pos:line="19" pos:column="35">&amp;&amp;<pos:position pos:line="19" pos:column="45"/></operator> <operator pos:line="19" pos:column="38">(<pos:position pos:line="19" pos:column="39"/></operator><name><name pos:line="19" pos:column="39">imapc<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">-&gt;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="46">preftype<pos:position pos:line="19" pos:column="54"/></name></name> <operator pos:line="19" pos:column="55">&amp;<pos:position pos:line="19" pos:column="60"/></operator> <name pos:line="19" pos:column="57">IMAP_TYPE_CLEARTEXT<pos:position pos:line="19" pos:column="76"/></name><operator pos:line="19" pos:column="76">)<pos:position pos:line="19" pos:column="77"/></operator></expr>)<pos:position pos:line="19" pos:column="78"/></condition><then pos:line="19" pos:column="78">
        <comment type="block" pos:line="20" pos:column="9">/* Perform clear text authentication */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="9">result<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">imap_perform_login<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name pos:line="21" pos:column="37">conn<pos:position pos:line="21" pos:column="41"/></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt></block></then>
      <else pos:line="22" pos:column="7">else <block pos:line="22" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">failf<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><name pos:line="23" pos:column="15">data<pos:position pos:line="23" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="21">"Authentication cancelled"<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="24" pos:column="9">result<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">CURLE_LOGIN_DENIED<pos:position pos:line="24" pos:column="36"/></name></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
      }<pos:position pos:line="25" pos:column="8"/></block></else></if>
      <break pos:line="26" pos:column="7">break;<pos:position pos:line="26" pos:column="13"/></break>
    <default pos:line="27" pos:column="5">default:<pos:position pos:line="27" pos:column="13"/></default>
      <break pos:line="28" pos:column="7">break;<pos:position pos:line="28" pos:column="13"/></break>
    }<pos:position pos:line="29" pos:column="6"/></block></switch></block></then></if>

  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">result<pos:position pos:line="31" pos:column="16"/></name></expr>;<pos:position pos:line="31" pos:column="17"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

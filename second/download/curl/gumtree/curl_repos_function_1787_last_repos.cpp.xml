<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1787_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">unsigned<pos:position pos:line="1" pos:column="9"/></name> <name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">curlx_uitouc<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">unsigned<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">int<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">uinum<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">__INTEL_COMPILER<pos:position pos:line="3" pos:column="24"/></name></cpp:ifdef>
<cpp:pragma pos:line="4" pos:column="1">#  <cpp:directive pos:line="4" pos:column="4">pragma<pos:position pos:line="4" pos:column="10"/></cpp:directive> <name pos:line="4" pos:column="11">warning<pos:position pos:line="4" pos:column="18"/></name><name pos:line="4" pos:column="18">(<pos:position pos:line="4" pos:column="19"/></name><name pos:line="4" pos:column="19">push<pos:position pos:line="4" pos:column="23"/></name><name pos:line="4" pos:column="23">)<pos:position pos:line="4" pos:column="24"/></name></cpp:pragma>
<cpp:pragma pos:line="5" pos:column="1">#  <cpp:directive pos:line="5" pos:column="4">pragma<pos:position pos:line="5" pos:column="10"/></cpp:directive> <name pos:line="5" pos:column="11">warning<pos:position pos:line="5" pos:column="18"/></name><name pos:line="5" pos:column="18">(<pos:position pos:line="5" pos:column="19"/></name><name pos:line="5" pos:column="19">disable<pos:position pos:line="5" pos:column="26"/></name><name pos:line="5" pos:column="26">:<pos:position pos:line="5" pos:column="27"/></name><name pos:line="5" pos:column="27">810<pos:position pos:line="5" pos:column="30"/></name><name pos:line="5" pos:column="30">)<pos:position pos:line="5" pos:column="31"/></name></cpp:pragma> <comment type="block" pos:line="5" pos:column="32">/* conversion may lose significant bits */</comment>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">DEBUGASSERT<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">uinum<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">&lt;=<pos:position pos:line="8" pos:column="26"/></operator> <operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">unsigned<pos:position pos:line="8" pos:column="33"/></name> <name pos:line="8" pos:column="34">int<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">)<pos:position pos:line="8" pos:column="38"/></operator> <name pos:line="8" pos:column="39">CURL_MASK_UCHAR<pos:position pos:line="8" pos:column="54"/></name></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="56"/></expr_stmt>
  <return pos:line="9" pos:column="3">return <expr><call pos:line="9" pos:column="10">(<name pos:line="9" pos:column="11">unsigned<pos:position pos:line="9" pos:column="19"/></name> <name pos:line="9" pos:column="20">char<pos:position pos:line="9" pos:column="24"/></name>) <argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">uinum<pos:position pos:line="9" pos:column="32"/></name> <operator pos:line="9" pos:column="33">&amp;<pos:position pos:line="9" pos:column="38"/></operator> <operator pos:line="9" pos:column="35">(<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="36">unsigned<pos:position pos:line="9" pos:column="44"/></name> <name pos:line="9" pos:column="45">int<pos:position pos:line="9" pos:column="48"/></name><operator pos:line="9" pos:column="48">)<pos:position pos:line="9" pos:column="49"/></operator> <name pos:line="9" pos:column="50">CURL_MASK_UCHAR<pos:position pos:line="9" pos:column="65"/></name></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="67"/></return>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">__INTEL_COMPILER<pos:position pos:line="11" pos:column="24"/></name></cpp:ifdef>
<cpp:pragma pos:line="12" pos:column="1">#  <cpp:directive pos:line="12" pos:column="4">pragma<pos:position pos:line="12" pos:column="10"/></cpp:directive> <name pos:line="12" pos:column="11">warning<pos:position pos:line="12" pos:column="18"/></name><name pos:line="12" pos:column="18">(<pos:position pos:line="12" pos:column="19"/></name><name pos:line="12" pos:column="19">pop<pos:position pos:line="12" pos:column="22"/></name><name pos:line="12" pos:column="22">)<pos:position pos:line="12" pos:column="23"/></name></cpp:pragma>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1492_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">parse_connect_to_string<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">Curl_easy<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">data<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                        <parameter><decl><type><name><name pos:line="2" pos:column="41">struct<pos:position pos:line="2" pos:column="47"/></name> <name pos:line="2" pos:column="48">connectdata<pos:position pos:line="2" pos:column="59"/></name></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">conn<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
                                        <parameter><decl><type><specifier pos:line="3" pos:column="41">const<pos:position pos:line="3" pos:column="46"/></specifier> <name pos:line="3" pos:column="47">char<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">conn_to_host<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="4" pos:column="41">char<pos:position pos:line="4" pos:column="45"/></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier><modifier pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></modifier></type><name pos:line="4" pos:column="48">host_result<pos:position pos:line="4" pos:column="59"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="5" pos:column="41">int<pos:position pos:line="5" pos:column="44"/></name> <modifier pos:line="5" pos:column="45">*<pos:position pos:line="5" pos:column="46"/></modifier></type><name pos:line="5" pos:column="46">port_result<pos:position pos:line="5" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="58"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">result<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">CURLE_OK<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">ptr<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><name pos:line="8" pos:column="21">conn_to_host<pos:position pos:line="8" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">host_match<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><name pos:line="9" pos:column="20">FALSE<pos:position pos:line="9" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">port_match<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><name pos:line="10" pos:column="20">FALSE<pos:position pos:line="10" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="12" pos:column="3">*<pos:position pos:line="12" pos:column="4"/></operator><name pos:line="12" pos:column="4">host_result<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">NULL<pos:position pos:line="12" pos:column="22"/></name></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="13" pos:column="3">*<pos:position pos:line="13" pos:column="4"/></operator><name pos:line="13" pos:column="4">port_result<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <operator pos:line="13" pos:column="18">-<pos:position pos:line="13" pos:column="19"/></operator><literal type="number" pos:line="13" pos:column="19">1<pos:position pos:line="13" pos:column="20"/></literal></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">*<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">ptr<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">==<pos:position pos:line="15" pos:column="13"/></operator> <literal type="char" pos:line="15" pos:column="14">':'<pos:position pos:line="15" pos:column="17"/></literal></expr>)<pos:position pos:line="15" pos:column="18"/></condition><then pos:line="15" pos:column="18"> <block pos:line="15" pos:column="19">{
    <comment type="block" pos:line="16" pos:column="5">/* an empty hostname always matches */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">host_match<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">TRUE<pos:position pos:line="17" pos:column="22"/></name></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">ptr<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">++<pos:position pos:line="18" pos:column="10"/></operator></expr>;<pos:position pos:line="18" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then>
  <else pos:line="20" pos:column="3">else <block pos:line="20" pos:column="8">{
    <comment type="block" pos:line="21" pos:column="5">/* check whether the URL's hostname matches */</comment>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">size_t<pos:position pos:line="22" pos:column="11"/></name></type> <name pos:line="22" pos:column="12">hostname_to_match_len<pos:position pos:line="22" pos:column="33"/></name></decl>;<pos:position pos:line="22" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">char<pos:position pos:line="23" pos:column="9"/></name> <modifier pos:line="23" pos:column="10">*<pos:position pos:line="23" pos:column="11"/></modifier></type><name pos:line="23" pos:column="11">hostname_to_match<pos:position pos:line="23" pos:column="28"/></name> <init pos:line="23" pos:column="29">= <expr><call><name pos:line="23" pos:column="31">aprintf<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><literal type="string" pos:line="23" pos:column="39">"%s%s%s"<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>,
                                      <argument><expr><ternary><condition><expr><name><name pos:line="24" pos:column="39">conn<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">-&gt;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="45">bits<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">.<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="50">ipv6_ip<pos:position pos:line="24" pos:column="57"/></name></name></expr> ?<pos:position pos:line="24" pos:column="59"/></condition><then pos:line="24" pos:column="59"> <expr><literal type="string" pos:line="24" pos:column="60">"["<pos:position pos:line="24" pos:column="63"/></literal></expr> <pos:position pos:line="24" pos:column="64"/></then><else pos:line="24" pos:column="64">: <expr><literal type="string" pos:line="24" pos:column="66">""<pos:position pos:line="24" pos:column="68"/></literal></expr></else></ternary></expr></argument>,
                                      <argument><expr><name><name pos:line="25" pos:column="39">conn<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">host<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">.<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="50">name<pos:position pos:line="25" pos:column="54"/></name></name></expr></argument>,
                                      <argument><expr><ternary><condition><expr><name><name pos:line="26" pos:column="39">conn<pos:position pos:line="26" pos:column="43"/></name><operator pos:line="26" pos:column="43">-&gt;<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="45">bits<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">.<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="50">ipv6_ip<pos:position pos:line="26" pos:column="57"/></name></name></expr> ?<pos:position pos:line="26" pos:column="59"/></condition><then pos:line="26" pos:column="59"> <expr><literal type="string" pos:line="26" pos:column="60">"]"<pos:position pos:line="26" pos:column="63"/></literal></expr> <pos:position pos:line="26" pos:column="64"/></then><else pos:line="26" pos:column="64">: <expr><literal type="string" pos:line="26" pos:column="66">""<pos:position pos:line="26" pos:column="68"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="70"/></decl_stmt>
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><operator pos:line="27" pos:column="8">!<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">hostname_to_match<pos:position pos:line="27" pos:column="26"/></name></expr>)<pos:position pos:line="27" pos:column="27"/></condition><then pos:line="27" pos:column="27">
      <block type="pseudo"><return pos:line="28" pos:column="7">return <expr><name pos:line="28" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="28" pos:column="33"/></name></expr>;<pos:position pos:line="28" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="29" pos:column="5">hostname_to_match_len<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <call><name pos:line="29" pos:column="29">strlen<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">hostname_to_match<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">host_match<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">strncasecompare<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">ptr<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="39">hostname_to_match<pos:position pos:line="30" pos:column="56"/></name></expr></argument>,
                                 <argument><expr><name pos:line="31" pos:column="34">hostname_to_match_len<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">free<pos:position pos:line="32" pos:column="9"/></name><argument_list pos:line="32" pos:column="9">(<argument><expr><name pos:line="32" pos:column="10">hostname_to_match<pos:position pos:line="32" pos:column="27"/></name></expr></argument>)<pos:position pos:line="32" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">ptr<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">+=<pos:position pos:line="33" pos:column="11"/></operator> <name pos:line="33" pos:column="12">hostname_to_match_len<pos:position pos:line="33" pos:column="33"/></name></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="35" pos:column="5">host_match<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <name pos:line="35" pos:column="18">host_match<pos:position pos:line="35" pos:column="28"/></name> <operator pos:line="35" pos:column="29">&amp;&amp;<pos:position pos:line="35" pos:column="39"/></operator> <operator pos:line="35" pos:column="32">*<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="33">ptr<pos:position pos:line="35" pos:column="36"/></name> <operator pos:line="35" pos:column="37">==<pos:position pos:line="35" pos:column="39"/></operator> <literal type="char" pos:line="35" pos:column="40">':'<pos:position pos:line="35" pos:column="43"/></literal></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">ptr<pos:position pos:line="36" pos:column="8"/></name><operator pos:line="36" pos:column="8">++<pos:position pos:line="36" pos:column="10"/></operator></expr>;<pos:position pos:line="36" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></else></if>

  <if pos:line="39" pos:column="3">if<condition pos:line="39" pos:column="5">(<expr><name pos:line="39" pos:column="6">host_match<pos:position pos:line="39" pos:column="16"/></name></expr>)<pos:position pos:line="39" pos:column="17"/></condition><then pos:line="39" pos:column="17"> <block pos:line="39" pos:column="18">{
    <if pos:line="40" pos:column="5">if<condition pos:line="40" pos:column="7">(<expr><operator pos:line="40" pos:column="8">*<pos:position pos:line="40" pos:column="9"/></operator><name pos:line="40" pos:column="9">ptr<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">==<pos:position pos:line="40" pos:column="15"/></operator> <literal type="char" pos:line="40" pos:column="16">':'<pos:position pos:line="40" pos:column="19"/></literal></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20"> <block pos:line="40" pos:column="21">{
      <comment type="block" pos:line="41" pos:column="7">/* an empty port always matches */</comment>
      <expr_stmt><expr><name pos:line="42" pos:column="7">port_match<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">=<pos:position pos:line="42" pos:column="19"/></operator> <name pos:line="42" pos:column="20">TRUE<pos:position pos:line="42" pos:column="24"/></name></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="43" pos:column="7">ptr<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">++<pos:position pos:line="43" pos:column="12"/></operator></expr>;<pos:position pos:line="43" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then>
    <else pos:line="45" pos:column="5">else <block pos:line="45" pos:column="10">{
      <comment type="block" pos:line="46" pos:column="7">/* check whether the URL's port matches */</comment>
      <decl_stmt><decl><type><name pos:line="47" pos:column="7">char<pos:position pos:line="47" pos:column="11"/></name> <modifier pos:line="47" pos:column="12">*<pos:position pos:line="47" pos:column="13"/></modifier></type><name pos:line="47" pos:column="13">ptr_next<pos:position pos:line="47" pos:column="21"/></name> <init pos:line="47" pos:column="22">= <expr><call><name pos:line="47" pos:column="24">strchr<pos:position pos:line="47" pos:column="30"/></name><argument_list pos:line="47" pos:column="30">(<argument><expr><name pos:line="47" pos:column="31">ptr<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="47" pos:column="36">':'<pos:position pos:line="47" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="47" pos:column="41"/></decl_stmt>
      <if pos:line="48" pos:column="7">if<condition pos:line="48" pos:column="9">(<expr><name pos:line="48" pos:column="10">ptr_next<pos:position pos:line="48" pos:column="18"/></name></expr>)<pos:position pos:line="48" pos:column="19"/></condition><then pos:line="48" pos:column="19"> <block pos:line="48" pos:column="20">{
        <decl_stmt><decl><type><name pos:line="49" pos:column="9">char<pos:position pos:line="49" pos:column="13"/></name> <modifier pos:line="49" pos:column="14">*<pos:position pos:line="49" pos:column="15"/></modifier></type><name pos:line="49" pos:column="15">endp<pos:position pos:line="49" pos:column="19"/></name> <init pos:line="49" pos:column="20">= <expr><name pos:line="49" pos:column="22">NULL<pos:position pos:line="49" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="49" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="50" pos:column="9">long<pos:position pos:line="50" pos:column="13"/></name></type> <name pos:line="50" pos:column="14">port_to_match<pos:position pos:line="50" pos:column="27"/></name> <init pos:line="50" pos:column="28">= <expr><call><name pos:line="50" pos:column="30">strtol<pos:position pos:line="50" pos:column="36"/></name><argument_list pos:line="50" pos:column="36">(<argument><expr><name pos:line="50" pos:column="37">ptr<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="42">&amp;<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="43">endp<pos:position pos:line="50" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="49">10<pos:position pos:line="50" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="50" pos:column="53"/></decl_stmt>
        <if pos:line="51" pos:column="9">if<condition pos:line="51" pos:column="11">(<expr><operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="13">endp<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">==<pos:position pos:line="51" pos:column="20"/></operator> <name pos:line="51" pos:column="21">ptr_next<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">)<pos:position pos:line="51" pos:column="30"/></operator> <operator pos:line="51" pos:column="31">&amp;&amp;<pos:position pos:line="51" pos:column="41"/></operator> <operator pos:line="51" pos:column="34">(<pos:position pos:line="51" pos:column="35"/></operator><name pos:line="51" pos:column="35">port_to_match<pos:position pos:line="51" pos:column="48"/></name> <operator pos:line="51" pos:column="49">==<pos:position pos:line="51" pos:column="51"/></operator> <name><name pos:line="51" pos:column="52">conn<pos:position pos:line="51" pos:column="56"/></name><operator pos:line="51" pos:column="56">-&gt;<pos:position pos:line="51" pos:column="61"/></operator><name pos:line="51" pos:column="58">remote_port<pos:position pos:line="51" pos:column="69"/></name></name><operator pos:line="51" pos:column="69">)<pos:position pos:line="51" pos:column="70"/></operator></expr>)<pos:position pos:line="51" pos:column="71"/></condition><then pos:line="51" pos:column="71"> <block pos:line="51" pos:column="72">{
          <expr_stmt><expr><name pos:line="52" pos:column="11">port_match<pos:position pos:line="52" pos:column="21"/></name> <operator pos:line="52" pos:column="22">=<pos:position pos:line="52" pos:column="23"/></operator> <name pos:line="52" pos:column="24">TRUE<pos:position pos:line="52" pos:column="28"/></name></expr>;<pos:position pos:line="52" pos:column="29"/></expr_stmt>
          <expr_stmt><expr><name pos:line="53" pos:column="11">ptr<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">=<pos:position pos:line="53" pos:column="16"/></operator> <name pos:line="53" pos:column="17">ptr_next<pos:position pos:line="53" pos:column="25"/></name> <operator pos:line="53" pos:column="26">+<pos:position pos:line="53" pos:column="27"/></operator> <literal type="number" pos:line="53" pos:column="28">1<pos:position pos:line="53" pos:column="29"/></literal></expr>;<pos:position pos:line="53" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>
      }<pos:position pos:line="55" pos:column="8"/></block></then></if>
    }<pos:position pos:line="56" pos:column="6"/></block></else></if>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <if pos:line="59" pos:column="3">if<condition pos:line="59" pos:column="5">(<expr><name pos:line="59" pos:column="6">host_match<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">&amp;&amp;<pos:position pos:line="59" pos:column="27"/></operator> <name pos:line="59" pos:column="20">port_match<pos:position pos:line="59" pos:column="30"/></name></expr>)<pos:position pos:line="59" pos:column="31"/></condition><then pos:line="59" pos:column="31"> <block pos:line="59" pos:column="32">{
    <comment type="block" pos:line="60" pos:column="5">/* parse the hostname and port to connect to */</comment>
    <expr_stmt><expr><name pos:line="61" pos:column="5">result<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <call><name pos:line="61" pos:column="14">parse_connect_to_host_port<pos:position pos:line="61" pos:column="40"/></name><argument_list pos:line="61" pos:column="40">(<argument><expr><name pos:line="61" pos:column="41">data<pos:position pos:line="61" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="47">ptr<pos:position pos:line="61" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="52">host_result<pos:position pos:line="61" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="65">port_result<pos:position pos:line="61" pos:column="76"/></name></expr></argument>)<pos:position pos:line="61" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="78"/></expr_stmt>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <return pos:line="64" pos:column="3">return <expr><name pos:line="64" pos:column="10">result<pos:position pos:line="64" pos:column="16"/></name></expr>;<pos:position pos:line="64" pos:column="17"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2390_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">pubkey_show<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">Curl_easy<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">data<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="2" pos:column="25">BIO<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">mem<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="3" pos:column="25">int<pos:position pos:line="3" pos:column="28"/></name></type> <name pos:line="3" pos:column="29">num<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="4" pos:column="25">const<pos:position pos:line="4" pos:column="30"/></specifier> <name pos:line="4" pos:column="31">char<pos:position pos:line="4" pos:column="35"/></name> <modifier pos:line="4" pos:column="36">*<pos:position pos:line="4" pos:column="37"/></modifier></type><name pos:line="4" pos:column="37">type<pos:position pos:line="4" pos:column="41"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="5" pos:column="25">const<pos:position pos:line="5" pos:column="30"/></specifier> <name pos:line="5" pos:column="31">char<pos:position pos:line="5" pos:column="35"/></name> <modifier pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></modifier></type><name pos:line="5" pos:column="37">name<pos:position pos:line="5" pos:column="41"/></name></decl></parameter>,
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">HAVE_OPAQUE_RSA_DSA_DH<pos:position pos:line="6" pos:column="30"/></name></cpp:ifdef>
                        <parameter><decl><type><specifier pos:line="7" pos:column="25">const<pos:position pos:line="7" pos:column="30"/></specifier>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
                        <name pos:line="9" pos:column="25">BIGNUM<pos:position pos:line="9" pos:column="31"/></name> <modifier pos:line="9" pos:column="32">*<pos:position pos:line="9" pos:column="33"/></modifier></type><name pos:line="9" pos:column="33">bn<pos:position pos:line="9" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="9" pos:column="36"/></parameter_list>
<block pos:line="10" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">ptr<pos:position pos:line="11" pos:column="12"/></name></decl>;<pos:position pos:line="11" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name></type> <name><name pos:line="12" pos:column="8">namebuf<pos:position pos:line="12" pos:column="15"/></name><index pos:line="12" pos:column="15">[<expr><literal type="number" pos:line="12" pos:column="16">32<pos:position pos:line="12" pos:column="18"/></literal></expr>]<pos:position pos:line="12" pos:column="19"/></index></name></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">snprintf<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name pos:line="14" pos:column="12">namebuf<pos:position pos:line="14" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="21">sizeof<argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">namebuf<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="38">"%s(%s)"<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">type<pos:position pos:line="14" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="54">name<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name pos:line="16" pos:column="6">bn<pos:position pos:line="16" pos:column="8"/></name></expr>)<pos:position pos:line="16" pos:column="9"/></condition><then pos:line="16" pos:column="9">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="5">BN_print<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">mem<pos:position pos:line="17" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="19">bn<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">push_certinfo<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">namebuf<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="26">num<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

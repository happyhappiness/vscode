<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2242_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_smtp_escape_eob<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="57">const<pos:position pos:line="1" pos:column="62"/></specifier> <name pos:line="1" pos:column="63">ssize_t<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">nread<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* When sending a SMTP payload we must detect CRLF. sequences making sure
     they are sent as CRLF.. instead, as a . on the beginning of a line will
     be deleted by the server when not part of an EOB terminator and a
     genuine CRLF.CRLF which isn't escaped will wrongly be detected as end of
     data by the server
  */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">ssize_t<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">i<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">ssize_t<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">si<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">Curl_easy<pos:position pos:line="11" pos:column="19"/></name></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">data<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><name><name pos:line="11" pos:column="28">conn<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">data<pos:position pos:line="11" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">struct<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">SMTP<pos:position pos:line="12" pos:column="14"/></name></name> <modifier pos:line="12" pos:column="15">*<pos:position pos:line="12" pos:column="16"/></modifier></type><name pos:line="12" pos:column="16">smtp<pos:position pos:line="12" pos:column="20"/></name> <init pos:line="12" pos:column="21">= <expr><name><name pos:line="12" pos:column="23">data<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">req<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">.<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">protop<pos:position pos:line="12" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">scratch<pos:position pos:line="13" pos:column="16"/></name> <init pos:line="13" pos:column="17">= <expr><name><name pos:line="13" pos:column="19">data<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">state<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">.<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">scratch<pos:position pos:line="13" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">newscratch<pos:position pos:line="14" pos:column="19"/></name> <init pos:line="14" pos:column="20">= <expr><name pos:line="14" pos:column="22">NULL<pos:position pos:line="14" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">char<pos:position pos:line="15" pos:column="7"/></name> <modifier pos:line="15" pos:column="8">*<pos:position pos:line="15" pos:column="9"/></modifier></type><name pos:line="15" pos:column="9">oldscratch<pos:position pos:line="15" pos:column="19"/></name> <init pos:line="15" pos:column="20">= <expr><name pos:line="15" pos:column="22">NULL<pos:position pos:line="15" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">size_t<pos:position pos:line="16" pos:column="9"/></name></type> <name pos:line="16" pos:column="10">eob_sent<pos:position pos:line="16" pos:column="18"/></name></decl>;<pos:position pos:line="16" pos:column="19"/></decl_stmt>

  <comment type="block" pos:line="18" pos:column="3">/* Do we need to allocate a scratch buffer? */</comment>
  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><operator pos:line="19" pos:column="6">!<pos:position pos:line="19" pos:column="7"/></operator><name pos:line="19" pos:column="7">scratch<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">||<pos:position pos:line="19" pos:column="17"/></operator> <name><name pos:line="19" pos:column="18">data<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">set<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">.<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">crlf<pos:position pos:line="19" pos:column="32"/></name></name></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33"> <block pos:line="19" pos:column="34">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">oldscratch<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">scratch<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">scratch<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">newscratch<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <call><name pos:line="22" pos:column="28">malloc<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><literal type="number" pos:line="22" pos:column="35">2<pos:position pos:line="22" pos:column="36"/></literal> <operator pos:line="22" pos:column="37">*<pos:position pos:line="22" pos:column="38"/></operator> <name><name pos:line="22" pos:column="39">data<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">-&gt;<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="45">set<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">.<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="49">buffer_size<pos:position pos:line="22" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="62"/></expr_stmt>
    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">(<expr><operator pos:line="23" pos:column="8">!<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="9">newscratch<pos:position pos:line="23" pos:column="19"/></name></expr>)<pos:position pos:line="23" pos:column="20"/></condition><then pos:line="23" pos:column="20"> <block pos:line="23" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">failf<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">data<pos:position pos:line="24" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="19">"Failed to alloc scratch buffer!"<pos:position pos:line="24" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt>

      <return pos:line="26" pos:column="7">return <expr><name pos:line="26" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="26" pos:column="33"/></name></expr>;<pos:position pos:line="26" pos:column="34"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/* Have we already sent part of the EOB? */</comment>
  <expr_stmt><expr><name pos:line="31" pos:column="3">eob_sent<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <name><name pos:line="31" pos:column="14">smtp<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">eob<pos:position pos:line="31" pos:column="23"/></name></name></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="33" pos:column="3">/* This loop can be improved by some kind of Boyer-Moore style of
     approach but that is saved for later... */</comment>
  <for pos:line="35" pos:column="3">for<control pos:line="35" pos:column="6">(<init><expr><name pos:line="35" pos:column="7">i<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">=<pos:position pos:line="35" pos:column="10"/></operator> <literal type="number" pos:line="35" pos:column="11">0<pos:position pos:line="35" pos:column="12"/></literal></expr><operator pos:line="35" pos:column="12">,<pos:position pos:line="35" pos:column="13"/></operator> <expr><name pos:line="35" pos:column="14">si<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <literal type="number" pos:line="35" pos:column="19">0<pos:position pos:line="35" pos:column="20"/></literal></expr>;<pos:position pos:line="35" pos:column="21"/></init> <condition><expr><name pos:line="35" pos:column="22">i<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">&lt;<pos:position pos:line="35" pos:column="28"/></operator> <name pos:line="35" pos:column="26">nread<pos:position pos:line="35" pos:column="31"/></name></expr>;<pos:position pos:line="35" pos:column="32"/></condition> <incr><expr><name pos:line="35" pos:column="33">i<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">++<pos:position pos:line="35" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="37"/></control> <block pos:line="35" pos:column="38">{
    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">(<expr><name><name pos:line="36" pos:column="8">SMTP_EOB<pos:position pos:line="36" pos:column="16"/></name><index pos:line="36" pos:column="16">[<expr><name><name pos:line="36" pos:column="17">smtp<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">-&gt;<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="23">eob<pos:position pos:line="36" pos:column="26"/></name></name></expr>]<pos:position pos:line="36" pos:column="27"/></index></name> <operator pos:line="36" pos:column="28">==<pos:position pos:line="36" pos:column="30"/></operator> <name><name pos:line="36" pos:column="31">data<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">-&gt;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="37">req<pos:position pos:line="36" pos:column="40"/></name><operator pos:line="36" pos:column="40">.<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="41">upload_fromhere<pos:position pos:line="36" pos:column="56"/></name><index pos:line="36" pos:column="56">[<expr><name pos:line="36" pos:column="57">i<pos:position pos:line="36" pos:column="58"/></name></expr>]<pos:position pos:line="36" pos:column="59"/></index></name></expr>)<pos:position pos:line="36" pos:column="60"/></condition><then pos:line="36" pos:column="60"> <block pos:line="36" pos:column="61">{
      <expr_stmt><expr><name><name pos:line="37" pos:column="7">smtp<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">-&gt;<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="13">eob<pos:position pos:line="37" pos:column="16"/></name></name><operator pos:line="37" pos:column="16">++<pos:position pos:line="37" pos:column="18"/></operator></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>

      <comment type="block" pos:line="39" pos:column="7">/* Is the EOB potentially the terminating CRLF? */</comment>
      <if pos:line="40" pos:column="7">if<condition pos:line="40" pos:column="9">(<expr><literal type="number" pos:line="40" pos:column="10">2<pos:position pos:line="40" pos:column="11"/></literal> <operator pos:line="40" pos:column="12">==<pos:position pos:line="40" pos:column="14"/></operator> <name><name pos:line="40" pos:column="15">smtp<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">eob<pos:position pos:line="40" pos:column="24"/></name></name> <operator pos:line="40" pos:column="25">||<pos:position pos:line="40" pos:column="27"/></operator> <name pos:line="40" pos:column="28">SMTP_EOB_LEN<pos:position pos:line="40" pos:column="40"/></name> <operator pos:line="40" pos:column="41">==<pos:position pos:line="40" pos:column="43"/></operator> <name><name pos:line="40" pos:column="44">smtp<pos:position pos:line="40" pos:column="48"/></name><operator pos:line="40" pos:column="48">-&gt;<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="50">eob<pos:position pos:line="40" pos:column="53"/></name></name></expr>)<pos:position pos:line="40" pos:column="54"/></condition><then pos:line="40" pos:column="54">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="9">smtp<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">-&gt;<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="15">trailing_crlf<pos:position pos:line="41" pos:column="28"/></name></name> <operator pos:line="41" pos:column="29">=<pos:position pos:line="41" pos:column="30"/></operator> <name pos:line="41" pos:column="31">TRUE<pos:position pos:line="41" pos:column="35"/></name></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt></block></then>
      <else pos:line="42" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="43" pos:column="9">smtp<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">trailing_crlf<pos:position pos:line="43" pos:column="28"/></name></name> <operator pos:line="43" pos:column="29">=<pos:position pos:line="43" pos:column="30"/></operator> <name pos:line="43" pos:column="31">FALSE<pos:position pos:line="43" pos:column="36"/></name></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt></block></else></if>
    }<pos:position pos:line="44" pos:column="6"/></block></then>
    <elseif pos:line="45" pos:column="5">else <if pos:line="45" pos:column="10">if<condition pos:line="45" pos:column="12">(<expr><name><name pos:line="45" pos:column="13">smtp<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">-&gt;<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="19">eob<pos:position pos:line="45" pos:column="22"/></name></name></expr>)<pos:position pos:line="45" pos:column="23"/></condition><then pos:line="45" pos:column="23"> <block pos:line="45" pos:column="24">{
      <comment type="block" pos:line="46" pos:column="7">/* A previous substring matched so output that first */</comment>
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">memcpy<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">(<argument><expr><operator pos:line="47" pos:column="14">&amp;<pos:position pos:line="47" pos:column="19"/></operator><name><name pos:line="47" pos:column="15">scratch<pos:position pos:line="47" pos:column="22"/></name><index pos:line="47" pos:column="22">[<expr><name pos:line="47" pos:column="23">si<pos:position pos:line="47" pos:column="25"/></name></expr>]<pos:position pos:line="47" pos:column="26"/></index></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="28">&amp;<pos:position pos:line="47" pos:column="33"/></operator><name><name pos:line="47" pos:column="29">SMTP_EOB<pos:position pos:line="47" pos:column="37"/></name><index pos:line="47" pos:column="37">[<expr><name pos:line="47" pos:column="38">eob_sent<pos:position pos:line="47" pos:column="46"/></name></expr>]<pos:position pos:line="47" pos:column="47"/></index></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="49">smtp<pos:position pos:line="47" pos:column="53"/></name><operator pos:line="47" pos:column="53">-&gt;<pos:position pos:line="47" pos:column="58"/></operator><name pos:line="47" pos:column="55">eob<pos:position pos:line="47" pos:column="58"/></name></name> <operator pos:line="47" pos:column="59">-<pos:position pos:line="47" pos:column="60"/></operator> <name pos:line="47" pos:column="61">eob_sent<pos:position pos:line="47" pos:column="69"/></name></expr></argument>)<pos:position pos:line="47" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><name pos:line="48" pos:column="7">si<pos:position pos:line="48" pos:column="9"/></name> <operator pos:line="48" pos:column="10">+=<pos:position pos:line="48" pos:column="12"/></operator> <name><name pos:line="48" pos:column="13">smtp<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">-&gt;<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="19">eob<pos:position pos:line="48" pos:column="22"/></name></name> <operator pos:line="48" pos:column="23">-<pos:position pos:line="48" pos:column="24"/></operator> <name pos:line="48" pos:column="25">eob_sent<pos:position pos:line="48" pos:column="33"/></name></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt>

      <comment type="block" pos:line="50" pos:column="7">/* Then compare the first byte */</comment>
      <if pos:line="51" pos:column="7">if<condition pos:line="51" pos:column="9">(<expr><name><name pos:line="51" pos:column="10">SMTP_EOB<pos:position pos:line="51" pos:column="18"/></name><index pos:line="51" pos:column="18">[<expr><literal type="number" pos:line="51" pos:column="19">0<pos:position pos:line="51" pos:column="20"/></literal></expr>]<pos:position pos:line="51" pos:column="21"/></index></name> <operator pos:line="51" pos:column="22">==<pos:position pos:line="51" pos:column="24"/></operator> <name><name pos:line="51" pos:column="25">data<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">-&gt;<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="31">req<pos:position pos:line="51" pos:column="34"/></name><operator pos:line="51" pos:column="34">.<pos:position pos:line="51" pos:column="35"/></operator><name pos:line="51" pos:column="35">upload_fromhere<pos:position pos:line="51" pos:column="50"/></name><index pos:line="51" pos:column="50">[<expr><name pos:line="51" pos:column="51">i<pos:position pos:line="51" pos:column="52"/></name></expr>]<pos:position pos:line="51" pos:column="53"/></index></name></expr>)<pos:position pos:line="51" pos:column="54"/></condition><then pos:line="51" pos:column="54">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="52" pos:column="9">smtp<pos:position pos:line="52" pos:column="13"/></name><operator pos:line="52" pos:column="13">-&gt;<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="15">eob<pos:position pos:line="52" pos:column="18"/></name></name> <operator pos:line="52" pos:column="19">=<pos:position pos:line="52" pos:column="20"/></operator> <literal type="number" pos:line="52" pos:column="21">1<pos:position pos:line="52" pos:column="22"/></literal></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt></block></then>
      <else pos:line="53" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="9">smtp<pos:position pos:line="54" pos:column="13"/></name><operator pos:line="54" pos:column="13">-&gt;<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="15">eob<pos:position pos:line="54" pos:column="18"/></name></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <literal type="number" pos:line="54" pos:column="21">0<pos:position pos:line="54" pos:column="22"/></literal></expr>;<pos:position pos:line="54" pos:column="23"/></expr_stmt></block></else></if>

      <expr_stmt><expr><name pos:line="56" pos:column="7">eob_sent<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <literal type="number" pos:line="56" pos:column="18">0<pos:position pos:line="56" pos:column="19"/></literal></expr>;<pos:position pos:line="56" pos:column="20"/></expr_stmt>

      <comment type="block" pos:line="58" pos:column="7">/* Reset the trailing CRLF flag as there was more data */</comment>
      <expr_stmt><expr><name><name pos:line="59" pos:column="7">smtp<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">-&gt;<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="13">trailing_crlf<pos:position pos:line="59" pos:column="26"/></name></name> <operator pos:line="59" pos:column="27">=<pos:position pos:line="59" pos:column="28"/></operator> <name pos:line="59" pos:column="29">FALSE<pos:position pos:line="59" pos:column="34"/></name></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="62" pos:column="5">/* Do we have a match for CRLF. as per RFC-5321, sect. 4.5.2 */</comment>
    <if pos:line="63" pos:column="5">if<condition pos:line="63" pos:column="7">(<expr><name pos:line="63" pos:column="8">SMTP_EOB_FIND_LEN<pos:position pos:line="63" pos:column="25"/></name> <operator pos:line="63" pos:column="26">==<pos:position pos:line="63" pos:column="28"/></operator> <name><name pos:line="63" pos:column="29">smtp<pos:position pos:line="63" pos:column="33"/></name><operator pos:line="63" pos:column="33">-&gt;<pos:position pos:line="63" pos:column="38"/></operator><name pos:line="63" pos:column="35">eob<pos:position pos:line="63" pos:column="38"/></name></name></expr>)<pos:position pos:line="63" pos:column="39"/></condition><then pos:line="63" pos:column="39"> <block pos:line="63" pos:column="40">{
      <comment type="block" pos:line="64" pos:column="7">/* Copy the replacement data to the target buffer */</comment>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">memcpy<pos:position pos:line="65" pos:column="13"/></name><argument_list pos:line="65" pos:column="13">(<argument><expr><operator pos:line="65" pos:column="14">&amp;<pos:position pos:line="65" pos:column="19"/></operator><name><name pos:line="65" pos:column="15">scratch<pos:position pos:line="65" pos:column="22"/></name><index pos:line="65" pos:column="22">[<expr><name pos:line="65" pos:column="23">si<pos:position pos:line="65" pos:column="25"/></name></expr>]<pos:position pos:line="65" pos:column="26"/></index></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="28">&amp;<pos:position pos:line="65" pos:column="33"/></operator><name><name pos:line="65" pos:column="29">SMTP_EOB_REPL<pos:position pos:line="65" pos:column="42"/></name><index pos:line="65" pos:column="42">[<expr><name pos:line="65" pos:column="43">eob_sent<pos:position pos:line="65" pos:column="51"/></name></expr>]<pos:position pos:line="65" pos:column="52"/></index></name></expr></argument>,
             <argument><expr><name pos:line="66" pos:column="14">SMTP_EOB_REPL_LEN<pos:position pos:line="66" pos:column="31"/></name> <operator pos:line="66" pos:column="32">-<pos:position pos:line="66" pos:column="33"/></operator> <name pos:line="66" pos:column="34">eob_sent<pos:position pos:line="66" pos:column="42"/></name></expr></argument>)<pos:position pos:line="66" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name pos:line="67" pos:column="7">si<pos:position pos:line="67" pos:column="9"/></name> <operator pos:line="67" pos:column="10">+=<pos:position pos:line="67" pos:column="12"/></operator> <name pos:line="67" pos:column="13">SMTP_EOB_REPL_LEN<pos:position pos:line="67" pos:column="30"/></name> <operator pos:line="67" pos:column="31">-<pos:position pos:line="67" pos:column="32"/></operator> <name pos:line="67" pos:column="33">eob_sent<pos:position pos:line="67" pos:column="41"/></name></expr>;<pos:position pos:line="67" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="68" pos:column="7">smtp<pos:position pos:line="68" pos:column="11"/></name><operator pos:line="68" pos:column="11">-&gt;<pos:position pos:line="68" pos:column="16"/></operator><name pos:line="68" pos:column="13">eob<pos:position pos:line="68" pos:column="16"/></name></name> <operator pos:line="68" pos:column="17">=<pos:position pos:line="68" pos:column="18"/></operator> <literal type="number" pos:line="68" pos:column="19">0<pos:position pos:line="68" pos:column="20"/></literal></expr>;<pos:position pos:line="68" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="69" pos:column="7">eob_sent<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">=<pos:position pos:line="69" pos:column="17"/></operator> <literal type="number" pos:line="69" pos:column="18">0<pos:position pos:line="69" pos:column="19"/></literal></expr>;<pos:position pos:line="69" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then>
    <elseif pos:line="71" pos:column="5">else <if pos:line="71" pos:column="10">if<condition pos:line="71" pos:column="12">(<expr><operator pos:line="71" pos:column="13">!<pos:position pos:line="71" pos:column="14"/></operator><name><name pos:line="71" pos:column="14">smtp<pos:position pos:line="71" pos:column="18"/></name><operator pos:line="71" pos:column="18">-&gt;<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="20">eob<pos:position pos:line="71" pos:column="23"/></name></name></expr>)<pos:position pos:line="71" pos:column="24"/></condition><then pos:line="71" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="72" pos:column="7">scratch<pos:position pos:line="72" pos:column="14"/></name><index pos:line="72" pos:column="14">[<expr><name pos:line="72" pos:column="15">si<pos:position pos:line="72" pos:column="17"/></name><operator pos:line="72" pos:column="17">++<pos:position pos:line="72" pos:column="19"/></operator></expr>]<pos:position pos:line="72" pos:column="20"/></index></name> <operator pos:line="72" pos:column="21">=<pos:position pos:line="72" pos:column="22"/></operator> <name><name pos:line="72" pos:column="23">data<pos:position pos:line="72" pos:column="27"/></name><operator pos:line="72" pos:column="27">-&gt;<pos:position pos:line="72" pos:column="32"/></operator><name pos:line="72" pos:column="29">req<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">.<pos:position pos:line="72" pos:column="33"/></operator><name pos:line="72" pos:column="33">upload_fromhere<pos:position pos:line="72" pos:column="48"/></name><index pos:line="72" pos:column="48">[<expr><name pos:line="72" pos:column="49">i<pos:position pos:line="72" pos:column="50"/></name></expr>]<pos:position pos:line="72" pos:column="51"/></index></name></expr>;<pos:position pos:line="72" pos:column="52"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="73" pos:column="4"/></block></for>

  <if pos:line="75" pos:column="3">if<condition pos:line="75" pos:column="5">(<expr><name><name pos:line="75" pos:column="6">smtp<pos:position pos:line="75" pos:column="10"/></name><operator pos:line="75" pos:column="10">-&gt;<pos:position pos:line="75" pos:column="15"/></operator><name pos:line="75" pos:column="12">eob<pos:position pos:line="75" pos:column="15"/></name></name> <operator pos:line="75" pos:column="16">-<pos:position pos:line="75" pos:column="17"/></operator> <name pos:line="75" pos:column="18">eob_sent<pos:position pos:line="75" pos:column="26"/></name></expr>)<pos:position pos:line="75" pos:column="27"/></condition><then pos:line="75" pos:column="27"> <block pos:line="75" pos:column="28">{
    <comment type="block" pos:line="76" pos:column="5">/* A substring matched before processing ended so output that now */</comment>
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">memcpy<pos:position pos:line="77" pos:column="11"/></name><argument_list pos:line="77" pos:column="11">(<argument><expr><operator pos:line="77" pos:column="12">&amp;<pos:position pos:line="77" pos:column="17"/></operator><name><name pos:line="77" pos:column="13">scratch<pos:position pos:line="77" pos:column="20"/></name><index pos:line="77" pos:column="20">[<expr><name pos:line="77" pos:column="21">si<pos:position pos:line="77" pos:column="23"/></name></expr>]<pos:position pos:line="77" pos:column="24"/></index></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="26">&amp;<pos:position pos:line="77" pos:column="31"/></operator><name><name pos:line="77" pos:column="27">SMTP_EOB<pos:position pos:line="77" pos:column="35"/></name><index pos:line="77" pos:column="35">[<expr><name pos:line="77" pos:column="36">eob_sent<pos:position pos:line="77" pos:column="44"/></name></expr>]<pos:position pos:line="77" pos:column="45"/></index></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="47">smtp<pos:position pos:line="77" pos:column="51"/></name><operator pos:line="77" pos:column="51">-&gt;<pos:position pos:line="77" pos:column="56"/></operator><name pos:line="77" pos:column="53">eob<pos:position pos:line="77" pos:column="56"/></name></name> <operator pos:line="77" pos:column="57">-<pos:position pos:line="77" pos:column="58"/></operator> <name pos:line="77" pos:column="59">eob_sent<pos:position pos:line="77" pos:column="67"/></name></expr></argument>)<pos:position pos:line="77" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name pos:line="78" pos:column="5">si<pos:position pos:line="78" pos:column="7"/></name> <operator pos:line="78" pos:column="8">+=<pos:position pos:line="78" pos:column="10"/></operator> <name><name pos:line="78" pos:column="11">smtp<pos:position pos:line="78" pos:column="15"/></name><operator pos:line="78" pos:column="15">-&gt;<pos:position pos:line="78" pos:column="20"/></operator><name pos:line="78" pos:column="17">eob<pos:position pos:line="78" pos:column="20"/></name></name> <operator pos:line="78" pos:column="21">-<pos:position pos:line="78" pos:column="22"/></operator> <name pos:line="78" pos:column="23">eob_sent<pos:position pos:line="78" pos:column="31"/></name></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="79" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="81" pos:column="3">/* Only use the new buffer if we replaced something */</comment>
  <if pos:line="82" pos:column="3">if<condition pos:line="82" pos:column="5">(<expr><name pos:line="82" pos:column="6">si<pos:position pos:line="82" pos:column="8"/></name> <operator pos:line="82" pos:column="9">!=<pos:position pos:line="82" pos:column="11"/></operator> <name pos:line="82" pos:column="12">nread<pos:position pos:line="82" pos:column="17"/></name></expr>)<pos:position pos:line="82" pos:column="18"/></condition><then pos:line="82" pos:column="18"> <block pos:line="82" pos:column="19">{
    <comment type="block" pos:line="83" pos:column="5">/* Upload from the new (replaced) buffer instead */</comment>
    <expr_stmt><expr><name><name pos:line="84" pos:column="5">data<pos:position pos:line="84" pos:column="9"/></name><operator pos:line="84" pos:column="9">-&gt;<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="11">req<pos:position pos:line="84" pos:column="14"/></name><operator pos:line="84" pos:column="14">.<pos:position pos:line="84" pos:column="15"/></operator><name pos:line="84" pos:column="15">upload_fromhere<pos:position pos:line="84" pos:column="30"/></name></name> <operator pos:line="84" pos:column="31">=<pos:position pos:line="84" pos:column="32"/></operator> <name pos:line="84" pos:column="33">scratch<pos:position pos:line="84" pos:column="40"/></name></expr>;<pos:position pos:line="84" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="86" pos:column="5">/* Save the buffer so it can be freed later */</comment>
    <expr_stmt><expr><name><name pos:line="87" pos:column="5">data<pos:position pos:line="87" pos:column="9"/></name><operator pos:line="87" pos:column="9">-&gt;<pos:position pos:line="87" pos:column="14"/></operator><name pos:line="87" pos:column="11">state<pos:position pos:line="87" pos:column="16"/></name><operator pos:line="87" pos:column="16">.<pos:position pos:line="87" pos:column="17"/></operator><name pos:line="87" pos:column="17">scratch<pos:position pos:line="87" pos:column="24"/></name></name> <operator pos:line="87" pos:column="25">=<pos:position pos:line="87" pos:column="26"/></operator> <name pos:line="87" pos:column="27">scratch<pos:position pos:line="87" pos:column="34"/></name></expr>;<pos:position pos:line="87" pos:column="35"/></expr_stmt>

    <comment type="block" pos:line="89" pos:column="5">/* Free the old scratch buffer */</comment>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">free<pos:position pos:line="90" pos:column="9"/></name><argument_list pos:line="90" pos:column="9">(<argument><expr><name pos:line="90" pos:column="10">oldscratch<pos:position pos:line="90" pos:column="20"/></name></expr></argument>)<pos:position pos:line="90" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="92" pos:column="5">/* Set the new amount too */</comment>
    <expr_stmt><expr><name><name pos:line="93" pos:column="5">data<pos:position pos:line="93" pos:column="9"/></name><operator pos:line="93" pos:column="9">-&gt;<pos:position pos:line="93" pos:column="14"/></operator><name pos:line="93" pos:column="11">req<pos:position pos:line="93" pos:column="14"/></name><operator pos:line="93" pos:column="14">.<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="15">upload_present<pos:position pos:line="93" pos:column="29"/></name></name> <operator pos:line="93" pos:column="30">=<pos:position pos:line="93" pos:column="31"/></operator> <name pos:line="93" pos:column="32">si<pos:position pos:line="93" pos:column="34"/></name></expr>;<pos:position pos:line="93" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="94" pos:column="4"/></block></then>
  <else pos:line="95" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="96" pos:column="5">free<pos:position pos:line="96" pos:column="9"/></name><argument_list pos:line="96" pos:column="9">(<argument><expr><name pos:line="96" pos:column="10">newscratch<pos:position pos:line="96" pos:column="20"/></name></expr></argument>)<pos:position pos:line="96" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="22"/></expr_stmt></block></else></if>

  <return pos:line="98" pos:column="3">return <expr><name pos:line="98" pos:column="10">CURLE_OK<pos:position pos:line="98" pos:column="18"/></name></expr>;<pos:position pos:line="98" pos:column="19"/></return>
}<pos:position pos:line="99" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_981_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nss_load_key<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">connectdata<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">conn<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">key_file<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">HAVE_PK11_CREATEGENERICOBJECT<pos:position pos:line="3" pos:column="37"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">PK11SlotInfo<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type> <name pos:line="4" pos:column="18">slot<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">NULL<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">PK11GenericObject<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">rv<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CK_ATTRIBUTE<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">attrs<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CK_ATTRIBUTE<pos:position pos:line="7" pos:column="15"/></name></type> <name><name pos:line="7" pos:column="16">theTemplate<pos:position pos:line="7" pos:column="27"/></name><index pos:line="7" pos:column="27">[<expr><literal type="number" pos:line="7" pos:column="28">20<pos:position pos:line="7" pos:column="30"/></literal></expr>]<pos:position pos:line="7" pos:column="31"/></index></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CK_BBOOL<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">cktrue<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><name pos:line="8" pos:column="21">CK_TRUE<pos:position pos:line="8" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">CK_OBJECT_CLASS<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">objClass<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><name pos:line="9" pos:column="30">CKO_PRIVATE_KEY<pos:position pos:line="9" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">CK_SLOT_ID<pos:position pos:line="10" pos:column="13"/></name></type> <name pos:line="10" pos:column="14">slotID<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">slotname<pos:position pos:line="11" pos:column="17"/></name> <init pos:line="11" pos:column="18">= <expr><name pos:line="11" pos:column="20">NULL<pos:position pos:line="11" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">pphrase_arg_t<pos:position pos:line="12" pos:column="16"/></name> <modifier pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></modifier></type><name pos:line="12" pos:column="18">parg<pos:position pos:line="12" pos:column="22"/></name> <init pos:line="12" pos:column="23">= <expr><name pos:line="12" pos:column="25">NULL<pos:position pos:line="12" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">attrs<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <name pos:line="14" pos:column="11">theTemplate<pos:position pos:line="14" pos:column="22"/></name></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>

  <comment type="block" pos:line="16" pos:column="3">/* FIXME: grok the various file types */</comment>

  <expr_stmt><expr><name pos:line="18" pos:column="3">slotID<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <literal type="number" pos:line="18" pos:column="12">1<pos:position pos:line="18" pos:column="13"/></literal></expr>;<pos:position pos:line="18" pos:column="14"/></expr_stmt> <comment type="block" pos:line="18" pos:column="15">/* hardcoded for now */</comment>

  <expr_stmt><expr><name pos:line="20" pos:column="3">slotname<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <operator pos:line="20" pos:column="14">(<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">char<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">*<pos:position pos:line="20" pos:column="21"/></operator><operator pos:line="20" pos:column="21">)<pos:position pos:line="20" pos:column="22"/></operator><call><name pos:line="20" pos:column="22">malloc<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">SLOTSIZE<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">snprintf<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><name pos:line="21" pos:column="12">slotname<pos:position pos:line="21" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="22">SLOTSIZE<pos:position pos:line="21" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="32">"PEM Token #%ld"<pos:position pos:line="21" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">slotID<pos:position pos:line="21" pos:column="56"/></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt>

  <expr_stmt><expr><name pos:line="23" pos:column="3">slot<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <call><name pos:line="23" pos:column="10">PK11_FindSlotByName<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">slotname<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">free<pos:position pos:line="24" pos:column="7"/></name><argument_list pos:line="24" pos:column="7">(<argument><expr><name pos:line="24" pos:column="8">slotname<pos:position pos:line="24" pos:column="16"/></name></expr></argument>)<pos:position pos:line="24" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="18"/></expr_stmt>

  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><operator pos:line="26" pos:column="6">!<pos:position pos:line="26" pos:column="7"/></operator><name pos:line="26" pos:column="7">slot<pos:position pos:line="26" pos:column="11"/></name></expr>)<pos:position pos:line="26" pos:column="12"/></condition><then pos:line="26" pos:column="12">
    <block type="pseudo"><return pos:line="27" pos:column="5">return <expr><literal type="number" pos:line="27" pos:column="12">0<pos:position pos:line="27" pos:column="13"/></literal></expr>;<pos:position pos:line="27" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="29" pos:column="3">PK11_SETATTRS<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">attrs<pos:position pos:line="29" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="24">CKA_CLASS<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="35">&amp;<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="36">objClass<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="46">sizeof<argument_list pos:line="29" pos:column="52">(<argument><expr><name pos:line="29" pos:column="53">objClass<pos:position pos:line="29" pos:column="61"/></name></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></sizeof></expr></argument> )<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt> <expr_stmt><expr><name pos:line="29" pos:column="66">attrs<pos:position pos:line="29" pos:column="71"/></name><operator pos:line="29" pos:column="71">++<pos:position pos:line="29" pos:column="73"/></operator></expr>;<pos:position pos:line="29" pos:column="74"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">PK11_SETATTRS<pos:position pos:line="30" pos:column="16"/></name><argument_list pos:line="30" pos:column="16">(<argument><expr><name pos:line="30" pos:column="17">attrs<pos:position pos:line="30" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="24">CKA_TOKEN<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="35">&amp;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="36">cktrue<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="44">sizeof<argument_list pos:line="30" pos:column="50">(<argument><expr><name pos:line="30" pos:column="51">CK_BBOOL<pos:position pos:line="30" pos:column="59"/></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></sizeof></expr></argument> )<pos:position pos:line="30" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="63"/></expr_stmt> <expr_stmt><expr><name pos:line="30" pos:column="64">attrs<pos:position pos:line="30" pos:column="69"/></name><operator pos:line="30" pos:column="69">++<pos:position pos:line="30" pos:column="71"/></operator></expr>;<pos:position pos:line="30" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">PK11_SETATTRS<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">attrs<pos:position pos:line="31" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="24">CKA_LABEL<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="35">(<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="36">unsigned<pos:position pos:line="31" pos:column="44"/></name> <name pos:line="31" pos:column="45">char<pos:position pos:line="31" pos:column="49"/></name> <operator pos:line="31" pos:column="50">*<pos:position pos:line="31" pos:column="51"/></operator><operator pos:line="31" pos:column="51">)<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="52">key_file<pos:position pos:line="31" pos:column="60"/></name></expr></argument>,
                <argument><expr><call><name pos:line="32" pos:column="17">strlen<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><name pos:line="32" pos:column="24">key_file<pos:position pos:line="32" pos:column="32"/></name></expr></argument>)<pos:position pos:line="32" pos:column="33"/></argument_list></call><operator pos:line="32" pos:column="33">+<pos:position pos:line="32" pos:column="34"/></operator><literal type="number" pos:line="32" pos:column="34">1<pos:position pos:line="32" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt> <expr_stmt><expr><name pos:line="32" pos:column="38">attrs<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">++<pos:position pos:line="32" pos:column="45"/></operator></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt>

  <comment type="block" pos:line="34" pos:column="3">/* When adding an encrypted key the PKCS#11 will be set as removed */</comment>
  <expr_stmt><expr><name pos:line="35" pos:column="3">rv<pos:position pos:line="35" pos:column="5"/></name> <operator pos:line="35" pos:column="6">=<pos:position pos:line="35" pos:column="7"/></operator> <call><name pos:line="35" pos:column="8">PK11_CreateGenericObject<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><name pos:line="35" pos:column="33">slot<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">theTemplate<pos:position pos:line="35" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="52">3<pos:position pos:line="35" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="55">PR_FALSE<pos:position pos:line="35" pos:column="63"/></name></expr></argument> <comment type="block" pos:line="35" pos:column="64">/* isPerm */</comment>)<pos:position pos:line="35" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="78"/></expr_stmt>
  <if pos:line="36" pos:column="3">if<condition pos:line="36" pos:column="5">(<expr><name pos:line="36" pos:column="6">rv<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">==<pos:position pos:line="36" pos:column="11"/></operator> <name pos:line="36" pos:column="12">NULL<pos:position pos:line="36" pos:column="16"/></name></expr>)<pos:position pos:line="36" pos:column="17"/></condition><then pos:line="36" pos:column="17"> <block pos:line="36" pos:column="18">{
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">PR_SetError<pos:position pos:line="37" pos:column="16"/></name><argument_list pos:line="37" pos:column="16">(<argument><expr><name pos:line="37" pos:column="17">SEC_ERROR_BAD_KEY<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="36">0<pos:position pos:line="37" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><literal type="number" pos:line="38" pos:column="12">0<pos:position pos:line="38" pos:column="13"/></literal></expr>;<pos:position pos:line="38" pos:column="14"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="41" pos:column="3">/* This will force the token to be seen as re-inserted */</comment>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">SECMOD_WaitForAnyTokenEvent<pos:position pos:line="42" pos:column="30"/></name><argument_list pos:line="42" pos:column="30">(<argument><expr><name pos:line="42" pos:column="31">mod<pos:position pos:line="42" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="36">0<pos:position pos:line="42" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="39">0<pos:position pos:line="42" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">PK11_IsPresent<pos:position pos:line="43" pos:column="17"/></name><argument_list pos:line="43" pos:column="17">(<argument><expr><name pos:line="43" pos:column="18">slot<pos:position pos:line="43" pos:column="22"/></name></expr></argument>)<pos:position pos:line="43" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><name pos:line="45" pos:column="3">parg<pos:position pos:line="45" pos:column="7"/></name> <operator pos:line="45" pos:column="8">=<pos:position pos:line="45" pos:column="9"/></operator> <operator pos:line="45" pos:column="10">(<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">pphrase_arg_t<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">*<pos:position pos:line="45" pos:column="26"/></operator><operator pos:line="45" pos:column="26">)<pos:position pos:line="45" pos:column="27"/></operator> <call><name pos:line="45" pos:column="28">malloc<pos:position pos:line="45" pos:column="34"/></name><argument_list pos:line="45" pos:column="34">(<argument><expr><sizeof pos:line="45" pos:column="35">sizeof<argument_list pos:line="45" pos:column="41">(<argument><expr><operator pos:line="45" pos:column="42">*<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="43">parg<pos:position pos:line="45" pos:column="47"/></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="46" pos:column="3">parg<pos:position pos:line="46" pos:column="7"/></name><operator pos:line="46" pos:column="7">-&gt;<pos:position pos:line="46" pos:column="12"/></operator><name pos:line="46" pos:column="9">retryCount<pos:position pos:line="46" pos:column="19"/></name></name> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <literal type="number" pos:line="46" pos:column="22">0<pos:position pos:line="46" pos:column="23"/></literal></expr>;<pos:position pos:line="46" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="47" pos:column="3">parg<pos:position pos:line="47" pos:column="7"/></name><operator pos:line="47" pos:column="7">-&gt;<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="9">data<pos:position pos:line="47" pos:column="13"/></name></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <name><name pos:line="47" pos:column="16">conn<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">data<pos:position pos:line="47" pos:column="26"/></name></name></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>
  <comment type="block" pos:line="48" pos:column="3">/* parg is initialized in nss_Init_Tokens() */</comment>
  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">(<expr><call><name pos:line="49" pos:column="6">PK11_Authenticate<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><name pos:line="49" pos:column="24">slot<pos:position pos:line="49" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="30">PR_TRUE<pos:position pos:line="49" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="39">parg<pos:position pos:line="49" pos:column="43"/></name></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></call> <operator pos:line="49" pos:column="45">!=<pos:position pos:line="49" pos:column="47"/></operator> <name pos:line="49" pos:column="48">SECSuccess<pos:position pos:line="49" pos:column="58"/></name></expr>)<pos:position pos:line="49" pos:column="59"/></condition><then pos:line="49" pos:column="59"> <block pos:line="49" pos:column="60">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">free<pos:position pos:line="50" pos:column="9"/></name><argument_list pos:line="50" pos:column="9">(<argument><expr><name pos:line="50" pos:column="10">parg<pos:position pos:line="50" pos:column="14"/></name></expr></argument>)<pos:position pos:line="50" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="16"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><literal type="number" pos:line="51" pos:column="12">0<pos:position pos:line="51" pos:column="13"/></literal></expr>;<pos:position pos:line="51" pos:column="14"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="53" pos:column="3">free<pos:position pos:line="53" pos:column="7"/></name><argument_list pos:line="53" pos:column="7">(<argument><expr><name pos:line="53" pos:column="8">parg<pos:position pos:line="53" pos:column="12"/></name></expr></argument>)<pos:position pos:line="53" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="14"/></expr_stmt>

  <return pos:line="55" pos:column="3">return <expr><literal type="number" pos:line="55" pos:column="10">1<pos:position pos:line="55" pos:column="11"/></literal></expr>;<pos:position pos:line="55" pos:column="12"/></return>
<cpp:else pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">else<pos:position pos:line="56" pos:column="6"/></cpp:directive></cpp:else>
  <comment type="block" pos:line="57" pos:column="3">/* If we don't have PK11_CreateGenericObject then we can't load a file-based
   * key.
   */</comment>
  <expr_stmt><expr><operator pos:line="60" pos:column="3">(<pos:position pos:line="60" pos:column="4"/></operator><name pos:line="60" pos:column="4">void<pos:position pos:line="60" pos:column="8"/></name><operator pos:line="60" pos:column="8">)<pos:position pos:line="60" pos:column="9"/></operator><name pos:line="60" pos:column="9">conn<pos:position pos:line="60" pos:column="13"/></name></expr>;<pos:position pos:line="60" pos:column="14"/></expr_stmt> <comment type="block" pos:line="60" pos:column="15">/* unused */</comment>
  <expr_stmt><expr><operator pos:line="61" pos:column="3">(<pos:position pos:line="61" pos:column="4"/></operator><name pos:line="61" pos:column="4">void<pos:position pos:line="61" pos:column="8"/></name><operator pos:line="61" pos:column="8">)<pos:position pos:line="61" pos:column="9"/></operator><name pos:line="61" pos:column="9">key_file<pos:position pos:line="61" pos:column="17"/></name></expr>;<pos:position pos:line="61" pos:column="18"/></expr_stmt> <comment type="block" pos:line="61" pos:column="19">/* unused */</comment>
  <return pos:line="62" pos:column="3">return <expr><literal type="number" pos:line="62" pos:column="10">0<pos:position pos:line="62" pos:column="11"/></literal></expr>;<pos:position pos:line="62" pos:column="12"/></return>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

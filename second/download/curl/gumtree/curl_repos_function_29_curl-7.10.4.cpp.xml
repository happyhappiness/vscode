<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_29_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">void<pos:position pos:line="1" pos:column="14"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="15"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">WriteThis<pos:position pos:line="6" pos:column="19"/></name></name></type> <name pos:line="6" pos:column="20">pooh<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="8" pos:column="3">pooh<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">.<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">readptr<pos:position pos:line="8" pos:column="15"/></name></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">data<pos:position pos:line="8" pos:column="22"/></name></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">pooh<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">.<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">sizeleft<pos:position pos:line="9" pos:column="16"/></name></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <call><name pos:line="9" pos:column="19">strlen<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">data<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">curl<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">curl_easy_init<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">()<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">curl<pos:position pos:line="12" pos:column="10"/></name></expr>)<pos:position pos:line="12" pos:column="11"/></condition><then pos:line="12" pos:column="11"> <block pos:line="12" pos:column="12">{
    <comment type="block" pos:line="13" pos:column="5">/* First set the URL that is about to receive our POST. */</comment>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">curl_easy_setopt<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">curl<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="28">CURLOPT_URL<pos:position pos:line="14" pos:column="39"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="15" pos:column="22">"http://receivingsite.com.pooh/index.cgi"<pos:position pos:line="15" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt>
    <comment type="block" pos:line="16" pos:column="5">/* Now specify we want to POST data */</comment>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">curl_easy_setopt<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">curl<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="28">CURLOPT_POST<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">TRUE<pos:position pos:line="17" pos:column="46"/></name></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* Set the expected POST size */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">curl_easy_setopt<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">curl<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="28">CURLOPT_POSTFIELDSIZE<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="51">pooh<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">.<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="56">sizeleft<pos:position pos:line="20" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* we want to use our own read function */</comment>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">curl_easy_setopt<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">curl<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="28">CURLOPT_READFUNCTION<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="50">read_callback<pos:position pos:line="23" pos:column="63"/></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="65"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* pointer to pass to our read function */</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">curl_easy_setopt<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">curl<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="28">CURLOPT_INFILE<pos:position pos:line="26" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="44">&amp;<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="45">pooh<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* get verbose debug output please */</comment>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">curl_easy_setopt<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">curl<pos:position pos:line="29" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="28">CURLOPT_VERBOSE<pos:position pos:line="29" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="45">1<pos:position pos:line="29" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="31" pos:column="5">/* Perform the request, res will get the return code */</comment>
    <expr_stmt><expr><name pos:line="32" pos:column="5">res<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <call><name pos:line="32" pos:column="11">curl_easy_perform<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">curl<pos:position pos:line="32" pos:column="33"/></name></expr></argument>)<pos:position pos:line="32" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt>

    <comment type="block" pos:line="34" pos:column="5">/* always cleanup */</comment>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">curl_easy_cleanup<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">curl<pos:position pos:line="35" pos:column="27"/></name></expr></argument>)<pos:position pos:line="35" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>
  <return pos:line="37" pos:column="3">return <expr><literal type="number" pos:line="37" pos:column="10">0<pos:position pos:line="37" pos:column="11"/></literal></expr>;<pos:position pos:line="37" pos:column="12"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

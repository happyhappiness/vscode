<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_384_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curls<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name pos:line="3" pos:column="17">NULL<pos:position pos:line="3" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLM<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">multi<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">NULL<pos:position pos:line="4" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">still_running<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name> <init pos:line="6" pos:column="9">= <expr><name pos:line="6" pos:column="11">TEST_ERR_FAILURE<pos:position pos:line="6" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">res<pos:position pos:line="7" pos:column="10"/></name> <init pos:line="7" pos:column="11">= <expr><literal type="number" pos:line="7" pos:column="13">0<pos:position pos:line="7" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLMsg<pos:position pos:line="8" pos:column="10"/></name> <modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">msg<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">start_test_timing<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">()<pos:position pos:line="10" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">global_init<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">CURL_GLOBAL_ALL<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">multi_init<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><name pos:line="14" pos:column="14">multi<pos:position pos:line="14" pos:column="19"/></name></expr></argument>)<pos:position pos:line="14" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">easy_init<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">curls<pos:position pos:line="16" pos:column="18"/></name></expr></argument>)<pos:position pos:line="16" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">easy_setopt<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">curls<pos:position pos:line="18" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="22">CURLOPT_URL<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="35">URL<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">easy_setopt<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">curls<pos:position pos:line="19" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="22">CURLOPT_HEADER<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="38">1L<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">multi_add_handle<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">multi<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="27">curls<pos:position pos:line="21" pos:column="32"/></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">multi_perform<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><name pos:line="23" pos:column="17">multi<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="24">&amp;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="25">still_running<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">abort_on_test_timeout<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">()<pos:position pos:line="25" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>

  <while pos:line="27" pos:column="3">while<condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">still_running<pos:position pos:line="27" pos:column="22"/></name></expr>)<pos:position pos:line="27" pos:column="23"/></condition> <block pos:line="27" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">int<pos:position pos:line="28" pos:column="8"/></name></type> <name pos:line="28" pos:column="9">num<pos:position pos:line="28" pos:column="12"/></name></decl>;<pos:position pos:line="28" pos:column="13"/></decl_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">res<pos:position pos:line="29" pos:column="8"/></name> <operator pos:line="29" pos:column="9">=<pos:position pos:line="29" pos:column="10"/></operator> <call><name pos:line="29" pos:column="11">curl_multi_wait<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><name pos:line="29" pos:column="27">multi<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="34">NULL<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="40">0<pos:position pos:line="29" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="43">TEST_HANG_TIMEOUT<pos:position pos:line="29" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="62">&amp;<pos:position pos:line="29" pos:column="67"/></operator><name pos:line="29" pos:column="63">num<pos:position pos:line="29" pos:column="66"/></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="68"/></expr_stmt>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><name pos:line="30" pos:column="8">res<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">!=<pos:position pos:line="30" pos:column="14"/></operator> <name pos:line="30" pos:column="15">CURLM_OK<pos:position pos:line="30" pos:column="23"/></name></expr>)<pos:position pos:line="30" pos:column="24"/></condition><then pos:line="30" pos:column="24"> <block pos:line="30" pos:column="25">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">printf<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><literal type="string" pos:line="31" pos:column="14">"curl_multi_wait() returned %d\n"<pos:position pos:line="31" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="49">res<pos:position pos:line="31" pos:column="52"/></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name pos:line="32" pos:column="7">res<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <name pos:line="32" pos:column="13">TEST_ERR_MAJOR_BAD<pos:position pos:line="32" pos:column="31"/></name></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
      <goto pos:line="33" pos:column="7">goto <name pos:line="33" pos:column="12">test_cleanup<pos:position pos:line="33" pos:column="24"/></name>;<pos:position pos:line="33" pos:column="25"/></goto>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">abort_on_test_timeout<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">()<pos:position pos:line="36" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">multi_perform<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><name pos:line="38" pos:column="19">multi<pos:position pos:line="38" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="26">&amp;<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="27">still_running<pos:position pos:line="38" pos:column="40"/></name></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">abort_on_test_timeout<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">()<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></while>

  <expr_stmt><expr><name pos:line="43" pos:column="3">msg<pos:position pos:line="43" pos:column="6"/></name> <operator pos:line="43" pos:column="7">=<pos:position pos:line="43" pos:column="8"/></operator> <call><name pos:line="43" pos:column="9">curl_multi_info_read<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><name pos:line="43" pos:column="30">multi<pos:position pos:line="43" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="37">&amp;<pos:position pos:line="43" pos:column="42"/></operator><name pos:line="43" pos:column="38">still_running<pos:position pos:line="43" pos:column="51"/></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt>
  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><name pos:line="44" pos:column="6">msg<pos:position pos:line="44" pos:column="9"/></name></expr>)<pos:position pos:line="44" pos:column="10"/></condition><then pos:line="44" pos:column="10">
    <comment type="block" pos:line="45" pos:column="5">/* this should now contain a result code from the easy handle,
       get it */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="5">i<pos:position pos:line="47" pos:column="6"/></name> <operator pos:line="47" pos:column="7">=<pos:position pos:line="47" pos:column="8"/></operator> <name><name pos:line="47" pos:column="9">msg<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">-&gt;<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="14">data<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">.<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="19">result<pos:position pos:line="47" pos:column="25"/></name></name></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt></block></then></if>

<label><name pos:line="49" pos:column="1">test_cleanup<pos:position pos:line="49" pos:column="13"/></name>:<pos:position pos:line="49" pos:column="14"/></label>

  <comment type="block" pos:line="51" pos:column="3">/* undocumented cleanup sequence - type UA */</comment>

  <expr_stmt><expr><call><name pos:line="53" pos:column="3">curl_multi_cleanup<pos:position pos:line="53" pos:column="21"/></name><argument_list pos:line="53" pos:column="21">(<argument><expr><name pos:line="53" pos:column="22">multi<pos:position pos:line="53" pos:column="27"/></name></expr></argument>)<pos:position pos:line="53" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">curl_easy_cleanup<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name pos:line="54" pos:column="21">curls<pos:position pos:line="54" pos:column="26"/></name></expr></argument>)<pos:position pos:line="54" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">curl_global_cleanup<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">()<pos:position pos:line="55" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="25"/></expr_stmt>

  <if pos:line="57" pos:column="3">if<condition pos:line="57" pos:column="5">(<expr><name pos:line="57" pos:column="6">res<pos:position pos:line="57" pos:column="9"/></name></expr>)<pos:position pos:line="57" pos:column="10"/></condition><then pos:line="57" pos:column="10">
    <block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="5">i<pos:position pos:line="58" pos:column="6"/></name> <operator pos:line="58" pos:column="7">=<pos:position pos:line="58" pos:column="8"/></operator> <name pos:line="58" pos:column="9">res<pos:position pos:line="58" pos:column="12"/></name></expr>;<pos:position pos:line="58" pos:column="13"/></expr_stmt></block></then></if>

  <return pos:line="60" pos:column="3">return <expr><name pos:line="60" pos:column="10">i<pos:position pos:line="60" pos:column="11"/></name></expr>;<pos:position pos:line="60" pos:column="12"/></return> <comment type="block" pos:line="60" pos:column="13">/* return the final return code */</comment>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

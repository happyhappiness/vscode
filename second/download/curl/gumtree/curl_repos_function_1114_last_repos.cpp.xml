<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1114_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">http2_send<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">sockindex<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                          <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">void<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">mem<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">size_t<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">len<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">CURLcode<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">err<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/*
   * BIG TODO: Currently, we send request in this function, but this
   * function is also used to send request body. It would be nice to
   * add dedicated function for request.
   */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">rv<pos:position pos:line="9" pos:column="9"/></name></decl>;<pos:position pos:line="9" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">http_conn<pos:position pos:line="10" pos:column="19"/></name></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">httpc<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><operator pos:line="10" pos:column="29">&amp;<pos:position pos:line="10" pos:column="34"/></operator><name><name pos:line="10" pos:column="30">conn<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">proto<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">.<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">httpc<pos:position pos:line="10" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">HTTP<pos:position pos:line="11" pos:column="14"/></name></name> <modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier></type><name pos:line="11" pos:column="16">stream<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><name><name pos:line="11" pos:column="25">conn<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">-&gt;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="31">data<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">req<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">.<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">protop<pos:position pos:line="11" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">nghttp2_nv<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">nva<pos:position pos:line="12" pos:column="18"/></name> <init pos:line="12" pos:column="19">= <expr><name pos:line="12" pos:column="21">NULL<pos:position pos:line="12" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">size_t<pos:position pos:line="13" pos:column="9"/></name></type> <name pos:line="13" pos:column="10">nheader<pos:position pos:line="13" pos:column="17"/></name></decl>;<pos:position pos:line="13" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">size_t<pos:position pos:line="14" pos:column="9"/></name></type> <name pos:line="14" pos:column="10">i<pos:position pos:line="14" pos:column="11"/></name></decl>;<pos:position pos:line="14" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">size_t<pos:position pos:line="15" pos:column="9"/></name></type> <name pos:line="15" pos:column="10">authority_idx<pos:position pos:line="15" pos:column="23"/></name></decl>;<pos:position pos:line="15" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name> <modifier pos:line="16" pos:column="8">*<pos:position pos:line="16" pos:column="9"/></modifier></type><name pos:line="16" pos:column="9">hdbuf<pos:position pos:line="16" pos:column="14"/></name> <init pos:line="16" pos:column="15">= <expr><operator pos:line="16" pos:column="17">(<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">char<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></operator><operator pos:line="16" pos:column="24">)<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">mem<pos:position pos:line="16" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name> <modifier pos:line="17" pos:column="8">*<pos:position pos:line="17" pos:column="9"/></modifier></type><name pos:line="17" pos:column="9">end<pos:position pos:line="17" pos:column="12"/></name></decl>, <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="17" pos:column="15">line_end<pos:position pos:line="17" pos:column="23"/></name></decl>;<pos:position pos:line="17" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">nghttp2_data_provider<pos:position pos:line="18" pos:column="24"/></name></type> <name pos:line="18" pos:column="25">data_prd<pos:position pos:line="18" pos:column="33"/></name></decl>;<pos:position pos:line="18" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int32_t<pos:position pos:line="19" pos:column="10"/></name></type> <name pos:line="19" pos:column="11">stream_id<pos:position pos:line="19" pos:column="20"/></name></decl>;<pos:position pos:line="19" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">nghttp2_session<pos:position pos:line="20" pos:column="18"/></name> <modifier pos:line="20" pos:column="19">*<pos:position pos:line="20" pos:column="20"/></modifier></type><name pos:line="20" pos:column="20">h2<pos:position pos:line="20" pos:column="22"/></name> <init pos:line="20" pos:column="23">= <expr><name><name pos:line="20" pos:column="25">httpc<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">h2<pos:position pos:line="20" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="20" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">nghttp2_priority_spec<pos:position pos:line="21" pos:column="24"/></name></type> <name pos:line="21" pos:column="25">pri_spec<pos:position pos:line="21" pos:column="33"/></name></decl>;<pos:position pos:line="21" pos:column="34"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="23" pos:column="3">(<pos:position pos:line="23" pos:column="4"/></operator><name pos:line="23" pos:column="4">void<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">)<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="9">sockindex<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">DEBUGF<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">(<argument><expr><call><name pos:line="25" pos:column="10">infof<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><name><name pos:line="25" pos:column="16">conn<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">data<pos:position pos:line="25" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="28">"http2_send len=%zu\n"<pos:position pos:line="25" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="52">len<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="58"/></expr_stmt>

  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><name><name pos:line="27" pos:column="6">stream<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">stream_id<pos:position pos:line="27" pos:column="23"/></name></name> <operator pos:line="27" pos:column="24">!=<pos:position pos:line="27" pos:column="26"/></operator> <operator pos:line="27" pos:column="27">-<pos:position pos:line="27" pos:column="28"/></operator><literal type="number" pos:line="27" pos:column="28">1<pos:position pos:line="27" pos:column="29"/></literal></expr>)<pos:position pos:line="27" pos:column="30"/></condition><then pos:line="27" pos:column="30"> <block pos:line="27" pos:column="31">{
    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><name><name pos:line="28" pos:column="8">stream<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">close_handled<pos:position pos:line="28" pos:column="29"/></name></name></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30"> <block pos:line="28" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">infof<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name><name pos:line="29" pos:column="13">conn<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">data<pos:position pos:line="29" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="25">"stream %d closed\n"<pos:position pos:line="29" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="47">stream<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">-&gt;<pos:position pos:line="29" pos:column="58"/></operator><name pos:line="29" pos:column="55">stream_id<pos:position pos:line="29" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="66"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="30" pos:column="7">*<pos:position pos:line="30" pos:column="8"/></operator><name pos:line="30" pos:column="8">err<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <name pos:line="30" pos:column="14">CURLE_HTTP2_STREAM<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
      <return pos:line="31" pos:column="7">return <expr><operator pos:line="31" pos:column="14">-<pos:position pos:line="31" pos:column="15"/></operator><literal type="number" pos:line="31" pos:column="15">1<pos:position pos:line="31" pos:column="16"/></literal></expr>;<pos:position pos:line="31" pos:column="17"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if<condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">stream<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">closed<pos:position pos:line="33" pos:column="27"/></name></name></expr>)<pos:position pos:line="33" pos:column="28"/></condition><then pos:line="33" pos:column="28"> <block pos:line="33" pos:column="29">{
      <return pos:line="34" pos:column="7">return <expr><call><name pos:line="34" pos:column="14">http2_handle_stream_close<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">conn<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="46">conn<pos:position pos:line="34" pos:column="50"/></name><operator pos:line="34" pos:column="50">-&gt;<pos:position pos:line="34" pos:column="55"/></operator><name pos:line="34" pos:column="52">data<pos:position pos:line="34" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="58">stream<pos:position pos:line="34" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="66">err<pos:position pos:line="34" pos:column="69"/></name></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="71"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if></elseif></if>
    <comment type="block" pos:line="36" pos:column="5">/* If stream_id != -1, we have dispatched request HEADERS, and now
       are going to send or sending request body in DATA frame */</comment>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">stream<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">-&gt;<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="13">upload_mem<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <name pos:line="38" pos:column="26">mem<pos:position pos:line="38" pos:column="29"/></name></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">stream<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">upload_len<pos:position pos:line="39" pos:column="23"/></name></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <name pos:line="39" pos:column="26">len<pos:position pos:line="39" pos:column="29"/></name></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">nghttp2_session_resume_data<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">h2<pos:position pos:line="40" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="37">stream<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">-&gt;<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="45">stream_id<pos:position pos:line="40" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">rv<pos:position pos:line="41" pos:column="7"/></name> <operator pos:line="41" pos:column="8">=<pos:position pos:line="41" pos:column="9"/></operator> <call><name pos:line="41" pos:column="10">h2_session_send<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name><name pos:line="41" pos:column="26">conn<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">-&gt;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="32">data<pos:position pos:line="41" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="38">h2<pos:position pos:line="41" pos:column="40"/></name></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>
    <if pos:line="42" pos:column="5">if<condition pos:line="42" pos:column="7">(<expr><call><name pos:line="42" pos:column="8">nghttp2_is_fatal<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">rv<pos:position pos:line="42" pos:column="27"/></name></expr></argument>)<pos:position pos:line="42" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="29"/></condition><then pos:line="42" pos:column="29"> <block pos:line="42" pos:column="30">{
      <expr_stmt><expr><operator pos:line="43" pos:column="7">*<pos:position pos:line="43" pos:column="8"/></operator><name pos:line="43" pos:column="8">err<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <name pos:line="43" pos:column="14">CURLE_SEND_ERROR<pos:position pos:line="43" pos:column="30"/></name></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>
      <return pos:line="44" pos:column="7">return <expr><operator pos:line="44" pos:column="14">-<pos:position pos:line="44" pos:column="15"/></operator><literal type="number" pos:line="44" pos:column="15">1<pos:position pos:line="44" pos:column="16"/></literal></expr>;<pos:position pos:line="44" pos:column="17"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="46" pos:column="5">len<pos:position pos:line="46" pos:column="8"/></name> <operator pos:line="46" pos:column="9">-=<pos:position pos:line="46" pos:column="11"/></operator> <name><name pos:line="46" pos:column="12">stream<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">-&gt;<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="20">upload_len<pos:position pos:line="46" pos:column="30"/></name></name></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="48" pos:column="5">/* Nullify here because we call nghttp2_session_send() and they
       might refer to the old buffer. */</comment>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">stream<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">-&gt;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="13">upload_mem<pos:position pos:line="50" pos:column="23"/></name></name> <operator pos:line="50" pos:column="24">=<pos:position pos:line="50" pos:column="25"/></operator> <name pos:line="50" pos:column="26">NULL<pos:position pos:line="50" pos:column="30"/></name></expr>;<pos:position pos:line="50" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">stream<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">-&gt;<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="13">upload_len<pos:position pos:line="51" pos:column="23"/></name></name> <operator pos:line="51" pos:column="24">=<pos:position pos:line="51" pos:column="25"/></operator> <literal type="number" pos:line="51" pos:column="26">0<pos:position pos:line="51" pos:column="27"/></literal></expr>;<pos:position pos:line="51" pos:column="28"/></expr_stmt>

    <if pos:line="53" pos:column="5">if<condition pos:line="53" pos:column="7">(<expr><call><name pos:line="53" pos:column="8">should_close_session<pos:position pos:line="53" pos:column="28"/></name><argument_list pos:line="53" pos:column="28">(<argument><expr><name pos:line="53" pos:column="29">httpc<pos:position pos:line="53" pos:column="34"/></name></expr></argument>)<pos:position pos:line="53" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="36"/></condition><then pos:line="53" pos:column="36"> <block pos:line="53" pos:column="37">{
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">DEBUGF<pos:position pos:line="54" pos:column="13"/></name><argument_list pos:line="54" pos:column="13">(<argument><expr><call><name pos:line="54" pos:column="14">infof<pos:position pos:line="54" pos:column="19"/></name><argument_list pos:line="54" pos:column="19">(<argument><expr><name><name pos:line="54" pos:column="20">conn<pos:position pos:line="54" pos:column="24"/></name><operator pos:line="54" pos:column="24">-&gt;<pos:position pos:line="54" pos:column="29"/></operator><name pos:line="54" pos:column="26">data<pos:position pos:line="54" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="32">"http2_send: nothing to do in this session\n"<pos:position pos:line="54" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="80"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="55" pos:column="7">*<pos:position pos:line="55" pos:column="8"/></operator><name pos:line="55" pos:column="8">err<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <name pos:line="55" pos:column="14">CURLE_HTTP2<pos:position pos:line="55" pos:column="25"/></name></expr>;<pos:position pos:line="55" pos:column="26"/></expr_stmt>
      <return pos:line="56" pos:column="7">return <expr><operator pos:line="56" pos:column="14">-<pos:position pos:line="56" pos:column="15"/></operator><literal type="number" pos:line="56" pos:column="15">1<pos:position pos:line="56" pos:column="16"/></literal></expr>;<pos:position pos:line="56" pos:column="17"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <if pos:line="59" pos:column="5">if<condition pos:line="59" pos:column="7">(<expr><name><name pos:line="59" pos:column="8">stream<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">upload_left<pos:position pos:line="59" pos:column="27"/></name></name></expr>)<pos:position pos:line="59" pos:column="28"/></condition><then pos:line="59" pos:column="28"> <block pos:line="59" pos:column="29">{
      <comment type="block" pos:line="60" pos:column="7">/* we are sure that we have more data to send here.  Calling the
         following API will make nghttp2_session_want_write() return
         nonzero if remote window allows it, which then libcurl checks
         socket is writable or not.  See http2_perform_getsock(). */</comment>
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">nghttp2_session_resume_data<pos:position pos:line="64" pos:column="34"/></name><argument_list pos:line="64" pos:column="34">(<argument><expr><name pos:line="64" pos:column="35">h2<pos:position pos:line="64" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="39">stream<pos:position pos:line="64" pos:column="45"/></name><operator pos:line="64" pos:column="45">-&gt;<pos:position pos:line="64" pos:column="50"/></operator><name pos:line="64" pos:column="47">stream_id<pos:position pos:line="64" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="67" pos:column="5">DEBUGF<pos:position pos:line="67" pos:column="11"/></name><argument_list pos:line="67" pos:column="11">(<argument><expr><call><name pos:line="67" pos:column="12">infof<pos:position pos:line="67" pos:column="17"/></name><argument_list pos:line="67" pos:column="17">(<argument><expr><name><name pos:line="67" pos:column="18">conn<pos:position pos:line="67" pos:column="22"/></name><operator pos:line="67" pos:column="22">-&gt;<pos:position pos:line="67" pos:column="27"/></operator><name pos:line="67" pos:column="24">data<pos:position pos:line="67" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="30">"http2_send returns %zu for stream %u\n"<pos:position pos:line="67" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="72">len<pos:position pos:line="67" pos:column="75"/></name></expr></argument>,
                 <argument><expr><name><name pos:line="68" pos:column="18">stream<pos:position pos:line="68" pos:column="24"/></name><operator pos:line="68" pos:column="24">-&gt;<pos:position pos:line="68" pos:column="29"/></operator><name pos:line="68" pos:column="26">stream_id<pos:position pos:line="68" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="38"/></expr_stmt>
    <return pos:line="69" pos:column="5">return <expr><name pos:line="69" pos:column="12">len<pos:position pos:line="69" pos:column="15"/></name></expr>;<pos:position pos:line="69" pos:column="16"/></return>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="72" pos:column="3">/* Calculate number of headers contained in [mem, mem + len) */</comment>
  <comment type="block" pos:line="73" pos:column="3">/* Here, we assume the curl http code generate *correct* HTTP header
     field block */</comment>
  <expr_stmt><expr><name pos:line="75" pos:column="3">nheader<pos:position pos:line="75" pos:column="10"/></name> <operator pos:line="75" pos:column="11">=<pos:position pos:line="75" pos:column="12"/></operator> <literal type="number" pos:line="75" pos:column="13">0<pos:position pos:line="75" pos:column="14"/></literal></expr>;<pos:position pos:line="75" pos:column="15"/></expr_stmt>
  <for pos:line="76" pos:column="3">for<control pos:line="76" pos:column="6">(<init><expr><name pos:line="76" pos:column="7">i<pos:position pos:line="76" pos:column="8"/></name> <operator pos:line="76" pos:column="9">=<pos:position pos:line="76" pos:column="10"/></operator> <literal type="number" pos:line="76" pos:column="11">1<pos:position pos:line="76" pos:column="12"/></literal></expr>;<pos:position pos:line="76" pos:column="13"/></init> <condition><expr><name pos:line="76" pos:column="14">i<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">&lt;<pos:position pos:line="76" pos:column="20"/></operator> <name pos:line="76" pos:column="18">len<pos:position pos:line="76" pos:column="21"/></name></expr>;<pos:position pos:line="76" pos:column="22"/></condition> <incr><expr><operator pos:line="76" pos:column="23">++<pos:position pos:line="76" pos:column="25"/></operator><name pos:line="76" pos:column="25">i<pos:position pos:line="76" pos:column="26"/></name></expr></incr>)<pos:position pos:line="76" pos:column="27"/></control> <block pos:line="76" pos:column="28">{
    <if pos:line="77" pos:column="5">if<condition pos:line="77" pos:column="7">(<expr><name><name pos:line="77" pos:column="8">hdbuf<pos:position pos:line="77" pos:column="13"/></name><index pos:line="77" pos:column="13">[<expr><name pos:line="77" pos:column="14">i<pos:position pos:line="77" pos:column="15"/></name></expr>]<pos:position pos:line="77" pos:column="16"/></index></name> <operator pos:line="77" pos:column="17">==<pos:position pos:line="77" pos:column="19"/></operator> <literal type="char" pos:line="77" pos:column="20">'\n'<pos:position pos:line="77" pos:column="24"/></literal> <operator pos:line="77" pos:column="25">&amp;&amp;<pos:position pos:line="77" pos:column="35"/></operator> <name><name pos:line="77" pos:column="28">hdbuf<pos:position pos:line="77" pos:column="33"/></name><index pos:line="77" pos:column="33">[<expr><name pos:line="77" pos:column="34">i<pos:position pos:line="77" pos:column="35"/></name> <operator pos:line="77" pos:column="36">-<pos:position pos:line="77" pos:column="37"/></operator> <literal type="number" pos:line="77" pos:column="38">1<pos:position pos:line="77" pos:column="39"/></literal></expr>]<pos:position pos:line="77" pos:column="40"/></index></name> <operator pos:line="77" pos:column="41">==<pos:position pos:line="77" pos:column="43"/></operator> <literal type="char" pos:line="77" pos:column="44">'\r'<pos:position pos:line="77" pos:column="48"/></literal></expr>)<pos:position pos:line="77" pos:column="49"/></condition><then pos:line="77" pos:column="49"> <block pos:line="77" pos:column="50">{
      <expr_stmt><expr><operator pos:line="78" pos:column="7">++<pos:position pos:line="78" pos:column="9"/></operator><name pos:line="78" pos:column="9">nheader<pos:position pos:line="78" pos:column="16"/></name></expr>;<pos:position pos:line="78" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="79" pos:column="7">++<pos:position pos:line="79" pos:column="9"/></operator><name pos:line="79" pos:column="9">i<pos:position pos:line="79" pos:column="10"/></name></expr>;<pos:position pos:line="79" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
  }<pos:position pos:line="81" pos:column="4"/></block></for>
  <if pos:line="82" pos:column="3">if<condition pos:line="82" pos:column="5">(<expr><name pos:line="82" pos:column="6">nheader<pos:position pos:line="82" pos:column="13"/></name> <operator pos:line="82" pos:column="14">&lt;<pos:position pos:line="82" pos:column="18"/></operator> <literal type="number" pos:line="82" pos:column="16">2<pos:position pos:line="82" pos:column="17"/></literal></expr>)<pos:position pos:line="82" pos:column="18"/></condition><then pos:line="82" pos:column="18">
    <block type="pseudo"><goto pos:line="83" pos:column="5">goto <name pos:line="83" pos:column="10">fail<pos:position pos:line="83" pos:column="14"/></name>;<pos:position pos:line="83" pos:column="15"/></goto></block></then></if>

  <comment type="block" pos:line="85" pos:column="3">/* We counted additional 2 \r\n in the first and last line. We need 3
     new headers: :method, :path and :scheme. Therefore we need one
     more space. */</comment>
  <expr_stmt><expr><name pos:line="88" pos:column="3">nheader<pos:position pos:line="88" pos:column="10"/></name> <operator pos:line="88" pos:column="11">+=<pos:position pos:line="88" pos:column="13"/></operator> <literal type="number" pos:line="88" pos:column="14">1<pos:position pos:line="88" pos:column="15"/></literal></expr>;<pos:position pos:line="88" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="89" pos:column="3">nva<pos:position pos:line="89" pos:column="6"/></name> <operator pos:line="89" pos:column="7">=<pos:position pos:line="89" pos:column="8"/></operator> <call><name pos:line="89" pos:column="9">malloc<pos:position pos:line="89" pos:column="15"/></name><argument_list pos:line="89" pos:column="15">(<argument><expr><sizeof pos:line="89" pos:column="16">sizeof<argument_list pos:line="89" pos:column="22">(<argument><expr><name pos:line="89" pos:column="23">nghttp2_nv<pos:position pos:line="89" pos:column="33"/></name></expr></argument>)<pos:position pos:line="89" pos:column="34"/></argument_list></sizeof> <operator pos:line="89" pos:column="35">*<pos:position pos:line="89" pos:column="36"/></operator> <name pos:line="89" pos:column="37">nheader<pos:position pos:line="89" pos:column="44"/></name></expr></argument>)<pos:position pos:line="89" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="46"/></expr_stmt>
  <if pos:line="90" pos:column="3">if<condition pos:line="90" pos:column="5">(<expr><name pos:line="90" pos:column="6">nva<pos:position pos:line="90" pos:column="9"/></name> <operator pos:line="90" pos:column="10">==<pos:position pos:line="90" pos:column="12"/></operator> <name pos:line="90" pos:column="13">NULL<pos:position pos:line="90" pos:column="17"/></name></expr>)<pos:position pos:line="90" pos:column="18"/></condition><then pos:line="90" pos:column="18"> <block pos:line="90" pos:column="19">{
    <expr_stmt><expr><operator pos:line="91" pos:column="5">*<pos:position pos:line="91" pos:column="6"/></operator><name pos:line="91" pos:column="6">err<pos:position pos:line="91" pos:column="9"/></name> <operator pos:line="91" pos:column="10">=<pos:position pos:line="91" pos:column="11"/></operator> <name pos:line="91" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="91" pos:column="31"/></name></expr>;<pos:position pos:line="91" pos:column="32"/></expr_stmt>
    <return pos:line="92" pos:column="5">return <expr><operator pos:line="92" pos:column="12">-<pos:position pos:line="92" pos:column="13"/></operator><literal type="number" pos:line="92" pos:column="13">1<pos:position pos:line="92" pos:column="14"/></literal></expr>;<pos:position pos:line="92" pos:column="15"/></return>
  }<pos:position pos:line="93" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="95" pos:column="3">/* Extract :method, :path from request line */</comment>
  <expr_stmt><expr><name pos:line="96" pos:column="3">line_end<pos:position pos:line="96" pos:column="11"/></name> <operator pos:line="96" pos:column="12">=<pos:position pos:line="96" pos:column="13"/></operator> <call><name pos:line="96" pos:column="14">strstr<pos:position pos:line="96" pos:column="20"/></name><argument_list pos:line="96" pos:column="20">(<argument><expr><name pos:line="96" pos:column="21">hdbuf<pos:position pos:line="96" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="28">"\r\n"<pos:position pos:line="96" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="98" pos:column="3">/* Method does not contain spaces */</comment>
  <expr_stmt><expr><name pos:line="99" pos:column="3">end<pos:position pos:line="99" pos:column="6"/></name> <operator pos:line="99" pos:column="7">=<pos:position pos:line="99" pos:column="8"/></operator> <call><name pos:line="99" pos:column="9">memchr<pos:position pos:line="99" pos:column="15"/></name><argument_list pos:line="99" pos:column="15">(<argument><expr><name pos:line="99" pos:column="16">hdbuf<pos:position pos:line="99" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="99" pos:column="23">' '<pos:position pos:line="99" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="28">line_end<pos:position pos:line="99" pos:column="36"/></name> <operator pos:line="99" pos:column="37">-<pos:position pos:line="99" pos:column="38"/></operator> <name pos:line="99" pos:column="39">hdbuf<pos:position pos:line="99" pos:column="44"/></name></expr></argument>)<pos:position pos:line="99" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="46"/></expr_stmt>
  <if pos:line="100" pos:column="3">if<condition pos:line="100" pos:column="5">(<expr><operator pos:line="100" pos:column="6">!<pos:position pos:line="100" pos:column="7"/></operator><name pos:line="100" pos:column="7">end<pos:position pos:line="100" pos:column="10"/></name> <operator pos:line="100" pos:column="11">||<pos:position pos:line="100" pos:column="13"/></operator> <name pos:line="100" pos:column="14">end<pos:position pos:line="100" pos:column="17"/></name> <operator pos:line="100" pos:column="18">==<pos:position pos:line="100" pos:column="20"/></operator> <name pos:line="100" pos:column="21">hdbuf<pos:position pos:line="100" pos:column="26"/></name></expr>)<pos:position pos:line="100" pos:column="27"/></condition><then pos:line="100" pos:column="27">
    <block type="pseudo"><goto pos:line="101" pos:column="5">goto <name pos:line="101" pos:column="10">fail<pos:position pos:line="101" pos:column="14"/></name>;<pos:position pos:line="101" pos:column="15"/></goto></block></then></if>
  <expr_stmt><expr><name><name pos:line="102" pos:column="3">nva<pos:position pos:line="102" pos:column="6"/></name><index pos:line="102" pos:column="6">[<expr><literal type="number" pos:line="102" pos:column="7">0<pos:position pos:line="102" pos:column="8"/></literal></expr>]<pos:position pos:line="102" pos:column="9"/></index></name><operator pos:line="102" pos:column="9">.<pos:position pos:line="102" pos:column="10"/></operator><name pos:line="102" pos:column="10">name<pos:position pos:line="102" pos:column="14"/></name> <operator pos:line="102" pos:column="15">=<pos:position pos:line="102" pos:column="16"/></operator> <operator pos:line="102" pos:column="17">(<pos:position pos:line="102" pos:column="18"/></operator><name pos:line="102" pos:column="18">unsigned<pos:position pos:line="102" pos:column="26"/></name> <name pos:line="102" pos:column="27">char<pos:position pos:line="102" pos:column="31"/></name> <operator pos:line="102" pos:column="32">*<pos:position pos:line="102" pos:column="33"/></operator><operator pos:line="102" pos:column="33">)<pos:position pos:line="102" pos:column="34"/></operator><literal type="string" pos:line="102" pos:column="34">":method"<pos:position pos:line="102" pos:column="43"/></literal></expr>;<pos:position pos:line="102" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="103" pos:column="3">nva<pos:position pos:line="103" pos:column="6"/></name><index pos:line="103" pos:column="6">[<expr><literal type="number" pos:line="103" pos:column="7">0<pos:position pos:line="103" pos:column="8"/></literal></expr>]<pos:position pos:line="103" pos:column="9"/></index></name><operator pos:line="103" pos:column="9">.<pos:position pos:line="103" pos:column="10"/></operator><name pos:line="103" pos:column="10">namelen<pos:position pos:line="103" pos:column="17"/></name> <operator pos:line="103" pos:column="18">=<pos:position pos:line="103" pos:column="19"/></operator> <call><name pos:line="103" pos:column="20">strlen<pos:position pos:line="103" pos:column="26"/></name><argument_list pos:line="103" pos:column="26">(<argument><expr><operator pos:line="103" pos:column="27">(<pos:position pos:line="103" pos:column="28"/></operator><name pos:line="103" pos:column="28">char<pos:position pos:line="103" pos:column="32"/></name> <operator pos:line="103" pos:column="33">*<pos:position pos:line="103" pos:column="34"/></operator><operator pos:line="103" pos:column="34">)<pos:position pos:line="103" pos:column="35"/></operator><name><name pos:line="103" pos:column="35">nva<pos:position pos:line="103" pos:column="38"/></name><index pos:line="103" pos:column="38">[<expr><literal type="number" pos:line="103" pos:column="39">0<pos:position pos:line="103" pos:column="40"/></literal></expr>]<pos:position pos:line="103" pos:column="41"/></index></name><operator pos:line="103" pos:column="41">.<pos:position pos:line="103" pos:column="42"/></operator><name pos:line="103" pos:column="42">name<pos:position pos:line="103" pos:column="46"/></name></expr></argument>)<pos:position pos:line="103" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="104" pos:column="3">nva<pos:position pos:line="104" pos:column="6"/></name><index pos:line="104" pos:column="6">[<expr><literal type="number" pos:line="104" pos:column="7">0<pos:position pos:line="104" pos:column="8"/></literal></expr>]<pos:position pos:line="104" pos:column="9"/></index></name><operator pos:line="104" pos:column="9">.<pos:position pos:line="104" pos:column="10"/></operator><name pos:line="104" pos:column="10">value<pos:position pos:line="104" pos:column="15"/></name> <operator pos:line="104" pos:column="16">=<pos:position pos:line="104" pos:column="17"/></operator> <operator pos:line="104" pos:column="18">(<pos:position pos:line="104" pos:column="19"/></operator><name pos:line="104" pos:column="19">unsigned<pos:position pos:line="104" pos:column="27"/></name> <name pos:line="104" pos:column="28">char<pos:position pos:line="104" pos:column="32"/></name> <operator pos:line="104" pos:column="33">*<pos:position pos:line="104" pos:column="34"/></operator><operator pos:line="104" pos:column="34">)<pos:position pos:line="104" pos:column="35"/></operator><name pos:line="104" pos:column="35">hdbuf<pos:position pos:line="104" pos:column="40"/></name></expr>;<pos:position pos:line="104" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="105" pos:column="3">nva<pos:position pos:line="105" pos:column="6"/></name><index pos:line="105" pos:column="6">[<expr><literal type="number" pos:line="105" pos:column="7">0<pos:position pos:line="105" pos:column="8"/></literal></expr>]<pos:position pos:line="105" pos:column="9"/></index></name><operator pos:line="105" pos:column="9">.<pos:position pos:line="105" pos:column="10"/></operator><name pos:line="105" pos:column="10">valuelen<pos:position pos:line="105" pos:column="18"/></name> <operator pos:line="105" pos:column="19">=<pos:position pos:line="105" pos:column="20"/></operator> <call pos:line="105" pos:column="21">(<name pos:line="105" pos:column="22">size_t<pos:position pos:line="105" pos:column="28"/></name>)<argument_list pos:line="105" pos:column="29">(<argument><expr><name pos:line="105" pos:column="30">end<pos:position pos:line="105" pos:column="33"/></name> <operator pos:line="105" pos:column="34">-<pos:position pos:line="105" pos:column="35"/></operator> <name pos:line="105" pos:column="36">hdbuf<pos:position pos:line="105" pos:column="41"/></name></expr></argument>)<pos:position pos:line="105" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="106" pos:column="3">nva<pos:position pos:line="106" pos:column="6"/></name><index pos:line="106" pos:column="6">[<expr><literal type="number" pos:line="106" pos:column="7">0<pos:position pos:line="106" pos:column="8"/></literal></expr>]<pos:position pos:line="106" pos:column="9"/></index></name><operator pos:line="106" pos:column="9">.<pos:position pos:line="106" pos:column="10"/></operator><name pos:line="106" pos:column="10">flags<pos:position pos:line="106" pos:column="15"/></name> <operator pos:line="106" pos:column="16">=<pos:position pos:line="106" pos:column="17"/></operator> <name pos:line="106" pos:column="18">NGHTTP2_NV_FLAG_NONE<pos:position pos:line="106" pos:column="38"/></name></expr>;<pos:position pos:line="106" pos:column="39"/></expr_stmt>
  <if pos:line="107" pos:column="3">if<condition pos:line="107" pos:column="5">(<expr><call><name pos:line="107" pos:column="6">HEADER_OVERFLOW<pos:position pos:line="107" pos:column="21"/></name><argument_list pos:line="107" pos:column="21">(<argument><expr><name><name pos:line="107" pos:column="22">nva<pos:position pos:line="107" pos:column="25"/></name><index pos:line="107" pos:column="25">[<expr><literal type="number" pos:line="107" pos:column="26">0<pos:position pos:line="107" pos:column="27"/></literal></expr>]<pos:position pos:line="107" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="107" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="107" pos:column="30"/></condition><then pos:line="107" pos:column="30"> <block pos:line="107" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="108" pos:column="5">failf<pos:position pos:line="108" pos:column="10"/></name><argument_list pos:line="108" pos:column="10">(<argument><expr><name><name pos:line="108" pos:column="11">conn<pos:position pos:line="108" pos:column="15"/></name><operator pos:line="108" pos:column="15">-&gt;<pos:position pos:line="108" pos:column="20"/></operator><name pos:line="108" pos:column="17">data<pos:position pos:line="108" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="23">"Failed sending HTTP request: Header overflow"<pos:position pos:line="108" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="71"/></expr_stmt>
    <goto pos:line="109" pos:column="5">goto <name pos:line="109" pos:column="10">fail<pos:position pos:line="109" pos:column="14"/></name>;<pos:position pos:line="109" pos:column="15"/></goto>
  }<pos:position pos:line="110" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="112" pos:column="3">hdbuf<pos:position pos:line="112" pos:column="8"/></name> <operator pos:line="112" pos:column="9">=<pos:position pos:line="112" pos:column="10"/></operator> <name pos:line="112" pos:column="11">end<pos:position pos:line="112" pos:column="14"/></name> <operator pos:line="112" pos:column="15">+<pos:position pos:line="112" pos:column="16"/></operator> <literal type="number" pos:line="112" pos:column="17">1<pos:position pos:line="112" pos:column="18"/></literal></expr>;<pos:position pos:line="112" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="114" pos:column="3">/* Path may contain spaces so scan backwards */</comment>
  <expr_stmt><expr><name pos:line="115" pos:column="3">end<pos:position pos:line="115" pos:column="6"/></name> <operator pos:line="115" pos:column="7">=<pos:position pos:line="115" pos:column="8"/></operator> <name pos:line="115" pos:column="9">NULL<pos:position pos:line="115" pos:column="13"/></name></expr>;<pos:position pos:line="115" pos:column="14"/></expr_stmt>
  <for pos:line="116" pos:column="3">for<control pos:line="116" pos:column="6">(<init><expr><name pos:line="116" pos:column="7">i<pos:position pos:line="116" pos:column="8"/></name> <operator pos:line="116" pos:column="9">=<pos:position pos:line="116" pos:column="10"/></operator> <call pos:line="116" pos:column="11">(<name pos:line="116" pos:column="12">size_t<pos:position pos:line="116" pos:column="18"/></name>)<argument_list pos:line="116" pos:column="19">(<argument><expr><name pos:line="116" pos:column="20">line_end<pos:position pos:line="116" pos:column="28"/></name> <operator pos:line="116" pos:column="29">-<pos:position pos:line="116" pos:column="30"/></operator> <name pos:line="116" pos:column="31">hdbuf<pos:position pos:line="116" pos:column="36"/></name></expr></argument>)<pos:position pos:line="116" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="38"/></init> <condition><expr><name pos:line="116" pos:column="39">i<pos:position pos:line="116" pos:column="40"/></name></expr>;<pos:position pos:line="116" pos:column="41"/></condition> <incr><expr><operator pos:line="116" pos:column="42">--<pos:position pos:line="116" pos:column="44"/></operator><name pos:line="116" pos:column="44">i<pos:position pos:line="116" pos:column="45"/></name></expr></incr>)<pos:position pos:line="116" pos:column="46"/></control> <block pos:line="116" pos:column="47">{
    <if pos:line="117" pos:column="5">if<condition pos:line="117" pos:column="7">(<expr><name><name pos:line="117" pos:column="8">hdbuf<pos:position pos:line="117" pos:column="13"/></name><index pos:line="117" pos:column="13">[<expr><name pos:line="117" pos:column="14">i<pos:position pos:line="117" pos:column="15"/></name> <operator pos:line="117" pos:column="16">-<pos:position pos:line="117" pos:column="17"/></operator> <literal type="number" pos:line="117" pos:column="18">1<pos:position pos:line="117" pos:column="19"/></literal></expr>]<pos:position pos:line="117" pos:column="20"/></index></name> <operator pos:line="117" pos:column="21">==<pos:position pos:line="117" pos:column="23"/></operator> <literal type="char" pos:line="117" pos:column="24">' '<pos:position pos:line="117" pos:column="27"/></literal></expr>)<pos:position pos:line="117" pos:column="28"/></condition><then pos:line="117" pos:column="28"> <block pos:line="117" pos:column="29">{
      <expr_stmt><expr><name pos:line="118" pos:column="7">end<pos:position pos:line="118" pos:column="10"/></name> <operator pos:line="118" pos:column="11">=<pos:position pos:line="118" pos:column="12"/></operator> <operator pos:line="118" pos:column="13">&amp;<pos:position pos:line="118" pos:column="18"/></operator><name><name pos:line="118" pos:column="14">hdbuf<pos:position pos:line="118" pos:column="19"/></name><index pos:line="118" pos:column="19">[<expr><name pos:line="118" pos:column="20">i<pos:position pos:line="118" pos:column="21"/></name> <operator pos:line="118" pos:column="22">-<pos:position pos:line="118" pos:column="23"/></operator> <literal type="number" pos:line="118" pos:column="24">1<pos:position pos:line="118" pos:column="25"/></literal></expr>]<pos:position pos:line="118" pos:column="26"/></index></name></expr>;<pos:position pos:line="118" pos:column="27"/></expr_stmt>
      <break pos:line="119" pos:column="7">break;<pos:position pos:line="119" pos:column="13"/></break>
    }<pos:position pos:line="120" pos:column="6"/></block></then></if>
  }<pos:position pos:line="121" pos:column="4"/></block></for>
  <if pos:line="122" pos:column="3">if<condition pos:line="122" pos:column="5">(<expr><operator pos:line="122" pos:column="6">!<pos:position pos:line="122" pos:column="7"/></operator><name pos:line="122" pos:column="7">end<pos:position pos:line="122" pos:column="10"/></name> <operator pos:line="122" pos:column="11">||<pos:position pos:line="122" pos:column="13"/></operator> <name pos:line="122" pos:column="14">end<pos:position pos:line="122" pos:column="17"/></name> <operator pos:line="122" pos:column="18">==<pos:position pos:line="122" pos:column="20"/></operator> <name pos:line="122" pos:column="21">hdbuf<pos:position pos:line="122" pos:column="26"/></name></expr>)<pos:position pos:line="122" pos:column="27"/></condition><then pos:line="122" pos:column="27">
    <block type="pseudo"><goto pos:line="123" pos:column="5">goto <name pos:line="123" pos:column="10">fail<pos:position pos:line="123" pos:column="14"/></name>;<pos:position pos:line="123" pos:column="15"/></goto></block></then></if>
  <expr_stmt><expr><name><name pos:line="124" pos:column="3">nva<pos:position pos:line="124" pos:column="6"/></name><index pos:line="124" pos:column="6">[<expr><literal type="number" pos:line="124" pos:column="7">1<pos:position pos:line="124" pos:column="8"/></literal></expr>]<pos:position pos:line="124" pos:column="9"/></index></name><operator pos:line="124" pos:column="9">.<pos:position pos:line="124" pos:column="10"/></operator><name pos:line="124" pos:column="10">name<pos:position pos:line="124" pos:column="14"/></name> <operator pos:line="124" pos:column="15">=<pos:position pos:line="124" pos:column="16"/></operator> <operator pos:line="124" pos:column="17">(<pos:position pos:line="124" pos:column="18"/></operator><name pos:line="124" pos:column="18">unsigned<pos:position pos:line="124" pos:column="26"/></name> <name pos:line="124" pos:column="27">char<pos:position pos:line="124" pos:column="31"/></name> <operator pos:line="124" pos:column="32">*<pos:position pos:line="124" pos:column="33"/></operator><operator pos:line="124" pos:column="33">)<pos:position pos:line="124" pos:column="34"/></operator><literal type="string" pos:line="124" pos:column="34">":path"<pos:position pos:line="124" pos:column="41"/></literal></expr>;<pos:position pos:line="124" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="125" pos:column="3">nva<pos:position pos:line="125" pos:column="6"/></name><index pos:line="125" pos:column="6">[<expr><literal type="number" pos:line="125" pos:column="7">1<pos:position pos:line="125" pos:column="8"/></literal></expr>]<pos:position pos:line="125" pos:column="9"/></index></name><operator pos:line="125" pos:column="9">.<pos:position pos:line="125" pos:column="10"/></operator><name pos:line="125" pos:column="10">namelen<pos:position pos:line="125" pos:column="17"/></name> <operator pos:line="125" pos:column="18">=<pos:position pos:line="125" pos:column="19"/></operator> <call><name pos:line="125" pos:column="20">strlen<pos:position pos:line="125" pos:column="26"/></name><argument_list pos:line="125" pos:column="26">(<argument><expr><operator pos:line="125" pos:column="27">(<pos:position pos:line="125" pos:column="28"/></operator><name pos:line="125" pos:column="28">char<pos:position pos:line="125" pos:column="32"/></name> <operator pos:line="125" pos:column="33">*<pos:position pos:line="125" pos:column="34"/></operator><operator pos:line="125" pos:column="34">)<pos:position pos:line="125" pos:column="35"/></operator><name><name pos:line="125" pos:column="35">nva<pos:position pos:line="125" pos:column="38"/></name><index pos:line="125" pos:column="38">[<expr><literal type="number" pos:line="125" pos:column="39">1<pos:position pos:line="125" pos:column="40"/></literal></expr>]<pos:position pos:line="125" pos:column="41"/></index></name><operator pos:line="125" pos:column="41">.<pos:position pos:line="125" pos:column="42"/></operator><name pos:line="125" pos:column="42">name<pos:position pos:line="125" pos:column="46"/></name></expr></argument>)<pos:position pos:line="125" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="126" pos:column="3">nva<pos:position pos:line="126" pos:column="6"/></name><index pos:line="126" pos:column="6">[<expr><literal type="number" pos:line="126" pos:column="7">1<pos:position pos:line="126" pos:column="8"/></literal></expr>]<pos:position pos:line="126" pos:column="9"/></index></name><operator pos:line="126" pos:column="9">.<pos:position pos:line="126" pos:column="10"/></operator><name pos:line="126" pos:column="10">value<pos:position pos:line="126" pos:column="15"/></name> <operator pos:line="126" pos:column="16">=<pos:position pos:line="126" pos:column="17"/></operator> <operator pos:line="126" pos:column="18">(<pos:position pos:line="126" pos:column="19"/></operator><name pos:line="126" pos:column="19">unsigned<pos:position pos:line="126" pos:column="27"/></name> <name pos:line="126" pos:column="28">char<pos:position pos:line="126" pos:column="32"/></name> <operator pos:line="126" pos:column="33">*<pos:position pos:line="126" pos:column="34"/></operator><operator pos:line="126" pos:column="34">)<pos:position pos:line="126" pos:column="35"/></operator><name pos:line="126" pos:column="35">hdbuf<pos:position pos:line="126" pos:column="40"/></name></expr>;<pos:position pos:line="126" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="127" pos:column="3">nva<pos:position pos:line="127" pos:column="6"/></name><index pos:line="127" pos:column="6">[<expr><literal type="number" pos:line="127" pos:column="7">1<pos:position pos:line="127" pos:column="8"/></literal></expr>]<pos:position pos:line="127" pos:column="9"/></index></name><operator pos:line="127" pos:column="9">.<pos:position pos:line="127" pos:column="10"/></operator><name pos:line="127" pos:column="10">valuelen<pos:position pos:line="127" pos:column="18"/></name> <operator pos:line="127" pos:column="19">=<pos:position pos:line="127" pos:column="20"/></operator> <call pos:line="127" pos:column="21">(<name pos:line="127" pos:column="22">size_t<pos:position pos:line="127" pos:column="28"/></name>)<argument_list pos:line="127" pos:column="29">(<argument><expr><name pos:line="127" pos:column="30">end<pos:position pos:line="127" pos:column="33"/></name> <operator pos:line="127" pos:column="34">-<pos:position pos:line="127" pos:column="35"/></operator> <name pos:line="127" pos:column="36">hdbuf<pos:position pos:line="127" pos:column="41"/></name></expr></argument>)<pos:position pos:line="127" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="128" pos:column="3">nva<pos:position pos:line="128" pos:column="6"/></name><index pos:line="128" pos:column="6">[<expr><literal type="number" pos:line="128" pos:column="7">1<pos:position pos:line="128" pos:column="8"/></literal></expr>]<pos:position pos:line="128" pos:column="9"/></index></name><operator pos:line="128" pos:column="9">.<pos:position pos:line="128" pos:column="10"/></operator><name pos:line="128" pos:column="10">flags<pos:position pos:line="128" pos:column="15"/></name> <operator pos:line="128" pos:column="16">=<pos:position pos:line="128" pos:column="17"/></operator> <name pos:line="128" pos:column="18">NGHTTP2_NV_FLAG_NONE<pos:position pos:line="128" pos:column="38"/></name></expr>;<pos:position pos:line="128" pos:column="39"/></expr_stmt>
  <if pos:line="129" pos:column="3">if<condition pos:line="129" pos:column="5">(<expr><call><name pos:line="129" pos:column="6">HEADER_OVERFLOW<pos:position pos:line="129" pos:column="21"/></name><argument_list pos:line="129" pos:column="21">(<argument><expr><name><name pos:line="129" pos:column="22">nva<pos:position pos:line="129" pos:column="25"/></name><index pos:line="129" pos:column="25">[<expr><literal type="number" pos:line="129" pos:column="26">1<pos:position pos:line="129" pos:column="27"/></literal></expr>]<pos:position pos:line="129" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="129" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="129" pos:column="30"/></condition><then pos:line="129" pos:column="30"> <block pos:line="129" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="130" pos:column="5">failf<pos:position pos:line="130" pos:column="10"/></name><argument_list pos:line="130" pos:column="10">(<argument><expr><name><name pos:line="130" pos:column="11">conn<pos:position pos:line="130" pos:column="15"/></name><operator pos:line="130" pos:column="15">-&gt;<pos:position pos:line="130" pos:column="20"/></operator><name pos:line="130" pos:column="17">data<pos:position pos:line="130" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="23">"Failed sending HTTP request: Header overflow"<pos:position pos:line="130" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="71"/></expr_stmt>
    <goto pos:line="131" pos:column="5">goto <name pos:line="131" pos:column="10">fail<pos:position pos:line="131" pos:column="14"/></name>;<pos:position pos:line="131" pos:column="15"/></goto>
  }<pos:position pos:line="132" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="134" pos:column="3">hdbuf<pos:position pos:line="134" pos:column="8"/></name> <operator pos:line="134" pos:column="9">=<pos:position pos:line="134" pos:column="10"/></operator> <name pos:line="134" pos:column="11">end<pos:position pos:line="134" pos:column="14"/></name> <operator pos:line="134" pos:column="15">+<pos:position pos:line="134" pos:column="16"/></operator> <literal type="number" pos:line="134" pos:column="17">1<pos:position pos:line="134" pos:column="18"/></literal></expr>;<pos:position pos:line="134" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><name pos:line="136" pos:column="3">end<pos:position pos:line="136" pos:column="6"/></name> <operator pos:line="136" pos:column="7">=<pos:position pos:line="136" pos:column="8"/></operator> <name pos:line="136" pos:column="9">line_end<pos:position pos:line="136" pos:column="17"/></name></expr>;<pos:position pos:line="136" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="137" pos:column="3">nva<pos:position pos:line="137" pos:column="6"/></name><index pos:line="137" pos:column="6">[<expr><literal type="number" pos:line="137" pos:column="7">2<pos:position pos:line="137" pos:column="8"/></literal></expr>]<pos:position pos:line="137" pos:column="9"/></index></name><operator pos:line="137" pos:column="9">.<pos:position pos:line="137" pos:column="10"/></operator><name pos:line="137" pos:column="10">name<pos:position pos:line="137" pos:column="14"/></name> <operator pos:line="137" pos:column="15">=<pos:position pos:line="137" pos:column="16"/></operator> <operator pos:line="137" pos:column="17">(<pos:position pos:line="137" pos:column="18"/></operator><name pos:line="137" pos:column="18">unsigned<pos:position pos:line="137" pos:column="26"/></name> <name pos:line="137" pos:column="27">char<pos:position pos:line="137" pos:column="31"/></name> <operator pos:line="137" pos:column="32">*<pos:position pos:line="137" pos:column="33"/></operator><operator pos:line="137" pos:column="33">)<pos:position pos:line="137" pos:column="34"/></operator><literal type="string" pos:line="137" pos:column="34">":scheme"<pos:position pos:line="137" pos:column="43"/></literal></expr>;<pos:position pos:line="137" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="138" pos:column="3">nva<pos:position pos:line="138" pos:column="6"/></name><index pos:line="138" pos:column="6">[<expr><literal type="number" pos:line="138" pos:column="7">2<pos:position pos:line="138" pos:column="8"/></literal></expr>]<pos:position pos:line="138" pos:column="9"/></index></name><operator pos:line="138" pos:column="9">.<pos:position pos:line="138" pos:column="10"/></operator><name pos:line="138" pos:column="10">namelen<pos:position pos:line="138" pos:column="17"/></name> <operator pos:line="138" pos:column="18">=<pos:position pos:line="138" pos:column="19"/></operator> <call><name pos:line="138" pos:column="20">strlen<pos:position pos:line="138" pos:column="26"/></name><argument_list pos:line="138" pos:column="26">(<argument><expr><operator pos:line="138" pos:column="27">(<pos:position pos:line="138" pos:column="28"/></operator><name pos:line="138" pos:column="28">char<pos:position pos:line="138" pos:column="32"/></name> <operator pos:line="138" pos:column="33">*<pos:position pos:line="138" pos:column="34"/></operator><operator pos:line="138" pos:column="34">)<pos:position pos:line="138" pos:column="35"/></operator><name><name pos:line="138" pos:column="35">nva<pos:position pos:line="138" pos:column="38"/></name><index pos:line="138" pos:column="38">[<expr><literal type="number" pos:line="138" pos:column="39">2<pos:position pos:line="138" pos:column="40"/></literal></expr>]<pos:position pos:line="138" pos:column="41"/></index></name><operator pos:line="138" pos:column="41">.<pos:position pos:line="138" pos:column="42"/></operator><name pos:line="138" pos:column="42">name<pos:position pos:line="138" pos:column="46"/></name></expr></argument>)<pos:position pos:line="138" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="48"/></expr_stmt>
  <if pos:line="139" pos:column="3">if<condition pos:line="139" pos:column="5">(<expr><name><name pos:line="139" pos:column="6">conn<pos:position pos:line="139" pos:column="10"/></name><operator pos:line="139" pos:column="10">-&gt;<pos:position pos:line="139" pos:column="15"/></operator><name pos:line="139" pos:column="12">handler<pos:position pos:line="139" pos:column="19"/></name><operator pos:line="139" pos:column="19">-&gt;<pos:position pos:line="139" pos:column="24"/></operator><name pos:line="139" pos:column="21">flags<pos:position pos:line="139" pos:column="26"/></name></name> <operator pos:line="139" pos:column="27">&amp;<pos:position pos:line="139" pos:column="32"/></operator> <name pos:line="139" pos:column="29">PROTOPT_SSL<pos:position pos:line="139" pos:column="40"/></name></expr>)<pos:position pos:line="139" pos:column="41"/></condition><then pos:line="139" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="140" pos:column="5">nva<pos:position pos:line="140" pos:column="8"/></name><index pos:line="140" pos:column="8">[<expr><literal type="number" pos:line="140" pos:column="9">2<pos:position pos:line="140" pos:column="10"/></literal></expr>]<pos:position pos:line="140" pos:column="11"/></index></name><operator pos:line="140" pos:column="11">.<pos:position pos:line="140" pos:column="12"/></operator><name pos:line="140" pos:column="12">value<pos:position pos:line="140" pos:column="17"/></name> <operator pos:line="140" pos:column="18">=<pos:position pos:line="140" pos:column="19"/></operator> <operator pos:line="140" pos:column="20">(<pos:position pos:line="140" pos:column="21"/></operator><name pos:line="140" pos:column="21">unsigned<pos:position pos:line="140" pos:column="29"/></name> <name pos:line="140" pos:column="30">char<pos:position pos:line="140" pos:column="34"/></name> <operator pos:line="140" pos:column="35">*<pos:position pos:line="140" pos:column="36"/></operator><operator pos:line="140" pos:column="36">)<pos:position pos:line="140" pos:column="37"/></operator><literal type="string" pos:line="140" pos:column="37">"https"<pos:position pos:line="140" pos:column="44"/></literal></expr>;<pos:position pos:line="140" pos:column="45"/></expr_stmt></block></then>
  <else pos:line="141" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="142" pos:column="5">nva<pos:position pos:line="142" pos:column="8"/></name><index pos:line="142" pos:column="8">[<expr><literal type="number" pos:line="142" pos:column="9">2<pos:position pos:line="142" pos:column="10"/></literal></expr>]<pos:position pos:line="142" pos:column="11"/></index></name><operator pos:line="142" pos:column="11">.<pos:position pos:line="142" pos:column="12"/></operator><name pos:line="142" pos:column="12">value<pos:position pos:line="142" pos:column="17"/></name> <operator pos:line="142" pos:column="18">=<pos:position pos:line="142" pos:column="19"/></operator> <operator pos:line="142" pos:column="20">(<pos:position pos:line="142" pos:column="21"/></operator><name pos:line="142" pos:column="21">unsigned<pos:position pos:line="142" pos:column="29"/></name> <name pos:line="142" pos:column="30">char<pos:position pos:line="142" pos:column="34"/></name> <operator pos:line="142" pos:column="35">*<pos:position pos:line="142" pos:column="36"/></operator><operator pos:line="142" pos:column="36">)<pos:position pos:line="142" pos:column="37"/></operator><literal type="string" pos:line="142" pos:column="37">"http"<pos:position pos:line="142" pos:column="43"/></literal></expr>;<pos:position pos:line="142" pos:column="44"/></expr_stmt></block></else></if>
  <expr_stmt><expr><name><name pos:line="143" pos:column="3">nva<pos:position pos:line="143" pos:column="6"/></name><index pos:line="143" pos:column="6">[<expr><literal type="number" pos:line="143" pos:column="7">2<pos:position pos:line="143" pos:column="8"/></literal></expr>]<pos:position pos:line="143" pos:column="9"/></index></name><operator pos:line="143" pos:column="9">.<pos:position pos:line="143" pos:column="10"/></operator><name pos:line="143" pos:column="10">valuelen<pos:position pos:line="143" pos:column="18"/></name> <operator pos:line="143" pos:column="19">=<pos:position pos:line="143" pos:column="20"/></operator> <call><name pos:line="143" pos:column="21">strlen<pos:position pos:line="143" pos:column="27"/></name><argument_list pos:line="143" pos:column="27">(<argument><expr><operator pos:line="143" pos:column="28">(<pos:position pos:line="143" pos:column="29"/></operator><name pos:line="143" pos:column="29">char<pos:position pos:line="143" pos:column="33"/></name> <operator pos:line="143" pos:column="34">*<pos:position pos:line="143" pos:column="35"/></operator><operator pos:line="143" pos:column="35">)<pos:position pos:line="143" pos:column="36"/></operator><name><name pos:line="143" pos:column="36">nva<pos:position pos:line="143" pos:column="39"/></name><index pos:line="143" pos:column="39">[<expr><literal type="number" pos:line="143" pos:column="40">2<pos:position pos:line="143" pos:column="41"/></literal></expr>]<pos:position pos:line="143" pos:column="42"/></index></name><operator pos:line="143" pos:column="42">.<pos:position pos:line="143" pos:column="43"/></operator><name pos:line="143" pos:column="43">value<pos:position pos:line="143" pos:column="48"/></name></expr></argument>)<pos:position pos:line="143" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="144" pos:column="3">nva<pos:position pos:line="144" pos:column="6"/></name><index pos:line="144" pos:column="6">[<expr><literal type="number" pos:line="144" pos:column="7">2<pos:position pos:line="144" pos:column="8"/></literal></expr>]<pos:position pos:line="144" pos:column="9"/></index></name><operator pos:line="144" pos:column="9">.<pos:position pos:line="144" pos:column="10"/></operator><name pos:line="144" pos:column="10">flags<pos:position pos:line="144" pos:column="15"/></name> <operator pos:line="144" pos:column="16">=<pos:position pos:line="144" pos:column="17"/></operator> <name pos:line="144" pos:column="18">NGHTTP2_NV_FLAG_NONE<pos:position pos:line="144" pos:column="38"/></name></expr>;<pos:position pos:line="144" pos:column="39"/></expr_stmt>
  <if pos:line="145" pos:column="3">if<condition pos:line="145" pos:column="5">(<expr><call><name pos:line="145" pos:column="6">HEADER_OVERFLOW<pos:position pos:line="145" pos:column="21"/></name><argument_list pos:line="145" pos:column="21">(<argument><expr><name><name pos:line="145" pos:column="22">nva<pos:position pos:line="145" pos:column="25"/></name><index pos:line="145" pos:column="25">[<expr><literal type="number" pos:line="145" pos:column="26">2<pos:position pos:line="145" pos:column="27"/></literal></expr>]<pos:position pos:line="145" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="145" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="145" pos:column="30"/></condition><then pos:line="145" pos:column="30"> <block pos:line="145" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="146" pos:column="5">failf<pos:position pos:line="146" pos:column="10"/></name><argument_list pos:line="146" pos:column="10">(<argument><expr><name><name pos:line="146" pos:column="11">conn<pos:position pos:line="146" pos:column="15"/></name><operator pos:line="146" pos:column="15">-&gt;<pos:position pos:line="146" pos:column="20"/></operator><name pos:line="146" pos:column="17">data<pos:position pos:line="146" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="23">"Failed sending HTTP request: Header overflow"<pos:position pos:line="146" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="71"/></expr_stmt>
    <goto pos:line="147" pos:column="5">goto <name pos:line="147" pos:column="10">fail<pos:position pos:line="147" pos:column="14"/></name>;<pos:position pos:line="147" pos:column="15"/></goto>
  }<pos:position pos:line="148" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="150" pos:column="3">authority_idx<pos:position pos:line="150" pos:column="16"/></name> <operator pos:line="150" pos:column="17">=<pos:position pos:line="150" pos:column="18"/></operator> <literal type="number" pos:line="150" pos:column="19">0<pos:position pos:line="150" pos:column="20"/></literal></expr>;<pos:position pos:line="150" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="151" pos:column="3">i<pos:position pos:line="151" pos:column="4"/></name> <operator pos:line="151" pos:column="5">=<pos:position pos:line="151" pos:column="6"/></operator> <literal type="number" pos:line="151" pos:column="7">3<pos:position pos:line="151" pos:column="8"/></literal></expr>;<pos:position pos:line="151" pos:column="9"/></expr_stmt>
  <while pos:line="152" pos:column="3">while<condition pos:line="152" pos:column="8">(<expr><name pos:line="152" pos:column="9">i<pos:position pos:line="152" pos:column="10"/></name> <operator pos:line="152" pos:column="11">&lt;<pos:position pos:line="152" pos:column="15"/></operator> <name pos:line="152" pos:column="13">nheader<pos:position pos:line="152" pos:column="20"/></name></expr>)<pos:position pos:line="152" pos:column="21"/></condition> <block pos:line="152" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="153" pos:column="5">size_t<pos:position pos:line="153" pos:column="11"/></name></type> <name pos:line="153" pos:column="12">hlen<pos:position pos:line="153" pos:column="16"/></name></decl>;<pos:position pos:line="153" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name pos:line="155" pos:column="5">hdbuf<pos:position pos:line="155" pos:column="10"/></name> <operator pos:line="155" pos:column="11">=<pos:position pos:line="155" pos:column="12"/></operator> <name pos:line="155" pos:column="13">line_end<pos:position pos:line="155" pos:column="21"/></name> <operator pos:line="155" pos:column="22">+<pos:position pos:line="155" pos:column="23"/></operator> <literal type="number" pos:line="155" pos:column="24">2<pos:position pos:line="155" pos:column="25"/></literal></expr>;<pos:position pos:line="155" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name pos:line="157" pos:column="5">line_end<pos:position pos:line="157" pos:column="13"/></name> <operator pos:line="157" pos:column="14">=<pos:position pos:line="157" pos:column="15"/></operator> <call><name pos:line="157" pos:column="16">strstr<pos:position pos:line="157" pos:column="22"/></name><argument_list pos:line="157" pos:column="22">(<argument><expr><name pos:line="157" pos:column="23">hdbuf<pos:position pos:line="157" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="30">"\r\n"<pos:position pos:line="157" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="38"/></expr_stmt>
    <if pos:line="158" pos:column="5">if<condition pos:line="158" pos:column="7">(<expr><name pos:line="158" pos:column="8">line_end<pos:position pos:line="158" pos:column="16"/></name> <operator pos:line="158" pos:column="17">==<pos:position pos:line="158" pos:column="19"/></operator> <name pos:line="158" pos:column="20">hdbuf<pos:position pos:line="158" pos:column="25"/></name></expr>)<pos:position pos:line="158" pos:column="26"/></condition><then pos:line="158" pos:column="26">
      <block type="pseudo"><goto pos:line="159" pos:column="7">goto <name pos:line="159" pos:column="12">fail<pos:position pos:line="159" pos:column="16"/></name>;<pos:position pos:line="159" pos:column="17"/></goto></block></then></if>

    <comment type="block" pos:line="161" pos:column="5">/* header continuation lines are not supported */</comment>
    <if pos:line="162" pos:column="5">if<condition pos:line="162" pos:column="7">(<expr><operator pos:line="162" pos:column="8">*<pos:position pos:line="162" pos:column="9"/></operator><name pos:line="162" pos:column="9">hdbuf<pos:position pos:line="162" pos:column="14"/></name> <operator pos:line="162" pos:column="15">==<pos:position pos:line="162" pos:column="17"/></operator> <literal type="char" pos:line="162" pos:column="18">' '<pos:position pos:line="162" pos:column="21"/></literal> <operator pos:line="162" pos:column="22">||<pos:position pos:line="162" pos:column="24"/></operator> <operator pos:line="162" pos:column="25">*<pos:position pos:line="162" pos:column="26"/></operator><name pos:line="162" pos:column="26">hdbuf<pos:position pos:line="162" pos:column="31"/></name> <operator pos:line="162" pos:column="32">==<pos:position pos:line="162" pos:column="34"/></operator> <literal type="char" pos:line="162" pos:column="35">'\t'<pos:position pos:line="162" pos:column="39"/></literal></expr>)<pos:position pos:line="162" pos:column="40"/></condition><then pos:line="162" pos:column="40">
      <block type="pseudo"><goto pos:line="163" pos:column="7">goto <name pos:line="163" pos:column="12">fail<pos:position pos:line="163" pos:column="16"/></name>;<pos:position pos:line="163" pos:column="17"/></goto></block></then></if>

    <for pos:line="165" pos:column="5">for<control pos:line="165" pos:column="8">(<init><expr><name pos:line="165" pos:column="9">end<pos:position pos:line="165" pos:column="12"/></name> <operator pos:line="165" pos:column="13">=<pos:position pos:line="165" pos:column="14"/></operator> <name pos:line="165" pos:column="15">hdbuf<pos:position pos:line="165" pos:column="20"/></name></expr>;<pos:position pos:line="165" pos:column="21"/></init> <condition><expr><name pos:line="165" pos:column="22">end<pos:position pos:line="165" pos:column="25"/></name> <operator pos:line="165" pos:column="26">&lt;<pos:position pos:line="165" pos:column="30"/></operator> <name pos:line="165" pos:column="28">line_end<pos:position pos:line="165" pos:column="36"/></name> <operator pos:line="165" pos:column="37">&amp;&amp;<pos:position pos:line="165" pos:column="47"/></operator> <operator pos:line="165" pos:column="40">*<pos:position pos:line="165" pos:column="41"/></operator><name pos:line="165" pos:column="41">end<pos:position pos:line="165" pos:column="44"/></name> <operator pos:line="165" pos:column="45">!=<pos:position pos:line="165" pos:column="47"/></operator> <literal type="char" pos:line="165" pos:column="48">':'<pos:position pos:line="165" pos:column="51"/></literal></expr>;<pos:position pos:line="165" pos:column="52"/></condition> <incr><expr><operator pos:line="165" pos:column="53">++<pos:position pos:line="165" pos:column="55"/></operator><name pos:line="165" pos:column="55">end<pos:position pos:line="165" pos:column="58"/></name></expr></incr>)<pos:position pos:line="165" pos:column="59"/></control>
      <block type="pseudo"><empty_stmt pos:line="166" pos:column="7">;<pos:position pos:line="166" pos:column="8"/></empty_stmt></block></for>
    <if pos:line="167" pos:column="5">if<condition pos:line="167" pos:column="7">(<expr><name pos:line="167" pos:column="8">end<pos:position pos:line="167" pos:column="11"/></name> <operator pos:line="167" pos:column="12">==<pos:position pos:line="167" pos:column="14"/></operator> <name pos:line="167" pos:column="15">hdbuf<pos:position pos:line="167" pos:column="20"/></name> <operator pos:line="167" pos:column="21">||<pos:position pos:line="167" pos:column="23"/></operator> <name pos:line="167" pos:column="24">end<pos:position pos:line="167" pos:column="27"/></name> <operator pos:line="167" pos:column="28">==<pos:position pos:line="167" pos:column="30"/></operator> <name pos:line="167" pos:column="31">line_end<pos:position pos:line="167" pos:column="39"/></name></expr>)<pos:position pos:line="167" pos:column="40"/></condition><then pos:line="167" pos:column="40">
      <block type="pseudo"><goto pos:line="168" pos:column="7">goto <name pos:line="168" pos:column="12">fail<pos:position pos:line="168" pos:column="16"/></name>;<pos:position pos:line="168" pos:column="17"/></goto></block></then></if>
    <expr_stmt><expr><name pos:line="169" pos:column="5">hlen<pos:position pos:line="169" pos:column="9"/></name> <operator pos:line="169" pos:column="10">=<pos:position pos:line="169" pos:column="11"/></operator> <name pos:line="169" pos:column="12">end<pos:position pos:line="169" pos:column="15"/></name> <operator pos:line="169" pos:column="16">-<pos:position pos:line="169" pos:column="17"/></operator> <name pos:line="169" pos:column="18">hdbuf<pos:position pos:line="169" pos:column="23"/></name></expr>;<pos:position pos:line="169" pos:column="24"/></expr_stmt>

    <if pos:line="171" pos:column="5">if<condition pos:line="171" pos:column="7">(<expr><name pos:line="171" pos:column="8">hlen<pos:position pos:line="171" pos:column="12"/></name> <operator pos:line="171" pos:column="13">==<pos:position pos:line="171" pos:column="15"/></operator> <literal type="number" pos:line="171" pos:column="16">4<pos:position pos:line="171" pos:column="17"/></literal> <operator pos:line="171" pos:column="18">&amp;&amp;<pos:position pos:line="171" pos:column="28"/></operator> <call><name pos:line="171" pos:column="21">strncasecompare<pos:position pos:line="171" pos:column="36"/></name><argument_list pos:line="171" pos:column="36">(<argument><expr><literal type="string" pos:line="171" pos:column="37">"host"<pos:position pos:line="171" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="171" pos:column="45">hdbuf<pos:position pos:line="171" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="171" pos:column="52">4<pos:position pos:line="171" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="171" pos:column="55"/></condition><then pos:line="171" pos:column="55"> <block pos:line="171" pos:column="56">{
      <expr_stmt><expr><name pos:line="172" pos:column="7">authority_idx<pos:position pos:line="172" pos:column="20"/></name> <operator pos:line="172" pos:column="21">=<pos:position pos:line="172" pos:column="22"/></operator> <name pos:line="172" pos:column="23">i<pos:position pos:line="172" pos:column="24"/></name></expr>;<pos:position pos:line="172" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="173" pos:column="7">nva<pos:position pos:line="173" pos:column="10"/></name><index pos:line="173" pos:column="10">[<expr><name pos:line="173" pos:column="11">i<pos:position pos:line="173" pos:column="12"/></name></expr>]<pos:position pos:line="173" pos:column="13"/></index></name><operator pos:line="173" pos:column="13">.<pos:position pos:line="173" pos:column="14"/></operator><name pos:line="173" pos:column="14">name<pos:position pos:line="173" pos:column="18"/></name> <operator pos:line="173" pos:column="19">=<pos:position pos:line="173" pos:column="20"/></operator> <operator pos:line="173" pos:column="21">(<pos:position pos:line="173" pos:column="22"/></operator><name pos:line="173" pos:column="22">unsigned<pos:position pos:line="173" pos:column="30"/></name> <name pos:line="173" pos:column="31">char<pos:position pos:line="173" pos:column="35"/></name> <operator pos:line="173" pos:column="36">*<pos:position pos:line="173" pos:column="37"/></operator><operator pos:line="173" pos:column="37">)<pos:position pos:line="173" pos:column="38"/></operator><literal type="string" pos:line="173" pos:column="38">":authority"<pos:position pos:line="173" pos:column="50"/></literal></expr>;<pos:position pos:line="173" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="174" pos:column="7">nva<pos:position pos:line="174" pos:column="10"/></name><index pos:line="174" pos:column="10">[<expr><name pos:line="174" pos:column="11">i<pos:position pos:line="174" pos:column="12"/></name></expr>]<pos:position pos:line="174" pos:column="13"/></index></name><operator pos:line="174" pos:column="13">.<pos:position pos:line="174" pos:column="14"/></operator><name pos:line="174" pos:column="14">namelen<pos:position pos:line="174" pos:column="21"/></name> <operator pos:line="174" pos:column="22">=<pos:position pos:line="174" pos:column="23"/></operator> <call><name pos:line="174" pos:column="24">strlen<pos:position pos:line="174" pos:column="30"/></name><argument_list pos:line="174" pos:column="30">(<argument><expr><operator pos:line="174" pos:column="31">(<pos:position pos:line="174" pos:column="32"/></operator><name pos:line="174" pos:column="32">char<pos:position pos:line="174" pos:column="36"/></name> <operator pos:line="174" pos:column="37">*<pos:position pos:line="174" pos:column="38"/></operator><operator pos:line="174" pos:column="38">)<pos:position pos:line="174" pos:column="39"/></operator><name><name pos:line="174" pos:column="39">nva<pos:position pos:line="174" pos:column="42"/></name><index pos:line="174" pos:column="42">[<expr><name pos:line="174" pos:column="43">i<pos:position pos:line="174" pos:column="44"/></name></expr>]<pos:position pos:line="174" pos:column="45"/></index></name><operator pos:line="174" pos:column="45">.<pos:position pos:line="174" pos:column="46"/></operator><name pos:line="174" pos:column="46">name<pos:position pos:line="174" pos:column="50"/></name></expr></argument>)<pos:position pos:line="174" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="175" pos:column="6"/></block></then>
    <else pos:line="176" pos:column="5">else <block pos:line="176" pos:column="10">{
      <expr_stmt><expr><name><name pos:line="177" pos:column="7">nva<pos:position pos:line="177" pos:column="10"/></name><index pos:line="177" pos:column="10">[<expr><name pos:line="177" pos:column="11">i<pos:position pos:line="177" pos:column="12"/></name></expr>]<pos:position pos:line="177" pos:column="13"/></index></name><operator pos:line="177" pos:column="13">.<pos:position pos:line="177" pos:column="14"/></operator><name pos:line="177" pos:column="14">name<pos:position pos:line="177" pos:column="18"/></name> <operator pos:line="177" pos:column="19">=<pos:position pos:line="177" pos:column="20"/></operator> <operator pos:line="177" pos:column="21">(<pos:position pos:line="177" pos:column="22"/></operator><name pos:line="177" pos:column="22">unsigned<pos:position pos:line="177" pos:column="30"/></name> <name pos:line="177" pos:column="31">char<pos:position pos:line="177" pos:column="35"/></name> <operator pos:line="177" pos:column="36">*<pos:position pos:line="177" pos:column="37"/></operator><operator pos:line="177" pos:column="37">)<pos:position pos:line="177" pos:column="38"/></operator><name pos:line="177" pos:column="38">hdbuf<pos:position pos:line="177" pos:column="43"/></name></expr>;<pos:position pos:line="177" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="178" pos:column="7">nva<pos:position pos:line="178" pos:column="10"/></name><index pos:line="178" pos:column="10">[<expr><name pos:line="178" pos:column="11">i<pos:position pos:line="178" pos:column="12"/></name></expr>]<pos:position pos:line="178" pos:column="13"/></index></name><operator pos:line="178" pos:column="13">.<pos:position pos:line="178" pos:column="14"/></operator><name pos:line="178" pos:column="14">namelen<pos:position pos:line="178" pos:column="21"/></name> <operator pos:line="178" pos:column="22">=<pos:position pos:line="178" pos:column="23"/></operator> <call pos:line="178" pos:column="24">(<name pos:line="178" pos:column="25">size_t<pos:position pos:line="178" pos:column="31"/></name>)<argument_list pos:line="178" pos:column="32">(<argument><expr><name pos:line="178" pos:column="33">end<pos:position pos:line="178" pos:column="36"/></name> <operator pos:line="178" pos:column="37">-<pos:position pos:line="178" pos:column="38"/></operator> <name pos:line="178" pos:column="39">hdbuf<pos:position pos:line="178" pos:column="44"/></name></expr></argument>)<pos:position pos:line="178" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="179" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="180" pos:column="5">hdbuf<pos:position pos:line="180" pos:column="10"/></name> <operator pos:line="180" pos:column="11">=<pos:position pos:line="180" pos:column="12"/></operator> <name pos:line="180" pos:column="13">end<pos:position pos:line="180" pos:column="16"/></name> <operator pos:line="180" pos:column="17">+<pos:position pos:line="180" pos:column="18"/></operator> <literal type="number" pos:line="180" pos:column="19">1<pos:position pos:line="180" pos:column="20"/></literal></expr>;<pos:position pos:line="180" pos:column="21"/></expr_stmt>
    <while pos:line="181" pos:column="5">while<condition pos:line="181" pos:column="10">(<expr><operator pos:line="181" pos:column="11">*<pos:position pos:line="181" pos:column="12"/></operator><name pos:line="181" pos:column="12">hdbuf<pos:position pos:line="181" pos:column="17"/></name> <operator pos:line="181" pos:column="18">==<pos:position pos:line="181" pos:column="20"/></operator> <literal type="char" pos:line="181" pos:column="21">' '<pos:position pos:line="181" pos:column="24"/></literal> <operator pos:line="181" pos:column="25">||<pos:position pos:line="181" pos:column="27"/></operator> <operator pos:line="181" pos:column="28">*<pos:position pos:line="181" pos:column="29"/></operator><name pos:line="181" pos:column="29">hdbuf<pos:position pos:line="181" pos:column="34"/></name> <operator pos:line="181" pos:column="35">==<pos:position pos:line="181" pos:column="37"/></operator> <literal type="char" pos:line="181" pos:column="38">'\t'<pos:position pos:line="181" pos:column="42"/></literal></expr>)<pos:position pos:line="181" pos:column="43"/></condition>
      <block type="pseudo"><expr_stmt><expr><operator pos:line="182" pos:column="7">++<pos:position pos:line="182" pos:column="9"/></operator><name pos:line="182" pos:column="9">hdbuf<pos:position pos:line="182" pos:column="14"/></name></expr>;<pos:position pos:line="182" pos:column="15"/></expr_stmt></block></while>
    <expr_stmt><expr><name pos:line="183" pos:column="5">end<pos:position pos:line="183" pos:column="8"/></name> <operator pos:line="183" pos:column="9">=<pos:position pos:line="183" pos:column="10"/></operator> <name pos:line="183" pos:column="11">line_end<pos:position pos:line="183" pos:column="19"/></name></expr>;<pos:position pos:line="183" pos:column="20"/></expr_stmt>

    <switch pos:line="185" pos:column="5">switch<condition pos:line="185" pos:column="11">(<expr><call><name pos:line="185" pos:column="12">inspect_header<pos:position pos:line="185" pos:column="26"/></name><argument_list pos:line="185" pos:column="26">(<argument><expr><operator pos:line="185" pos:column="27">(<pos:position pos:line="185" pos:column="28"/></operator><specifier pos:line="185" pos:column="28">const<pos:position pos:line="185" pos:column="33"/></specifier> <name pos:line="185" pos:column="34">char<pos:position pos:line="185" pos:column="38"/></name> <operator pos:line="185" pos:column="39">*<pos:position pos:line="185" pos:column="40"/></operator><operator pos:line="185" pos:column="40">)<pos:position pos:line="185" pos:column="41"/></operator><name><name pos:line="185" pos:column="41">nva<pos:position pos:line="185" pos:column="44"/></name><index pos:line="185" pos:column="44">[<expr><name pos:line="185" pos:column="45">i<pos:position pos:line="185" pos:column="46"/></name></expr>]<pos:position pos:line="185" pos:column="47"/></index></name><operator pos:line="185" pos:column="47">.<pos:position pos:line="185" pos:column="48"/></operator><name pos:line="185" pos:column="48">name<pos:position pos:line="185" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="185" pos:column="54">nva<pos:position pos:line="185" pos:column="57"/></name><index pos:line="185" pos:column="57">[<expr><name pos:line="185" pos:column="58">i<pos:position pos:line="185" pos:column="59"/></name></expr>]<pos:position pos:line="185" pos:column="60"/></index></name><operator pos:line="185" pos:column="60">.<pos:position pos:line="185" pos:column="61"/></operator><name pos:line="185" pos:column="61">namelen<pos:position pos:line="185" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="70">hdbuf<pos:position pos:line="185" pos:column="75"/></name></expr></argument>,
                          <argument><expr><name pos:line="186" pos:column="27">end<pos:position pos:line="186" pos:column="30"/></name> <operator pos:line="186" pos:column="31">-<pos:position pos:line="186" pos:column="32"/></operator> <name pos:line="186" pos:column="33">hdbuf<pos:position pos:line="186" pos:column="38"/></name></expr></argument>)<pos:position pos:line="186" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="186" pos:column="40"/></condition> <block pos:line="186" pos:column="41">{
    <case pos:line="187" pos:column="5">case <expr><name pos:line="187" pos:column="10">HEADERINST_IGNORE<pos:position pos:line="187" pos:column="27"/></name></expr>:<pos:position pos:line="187" pos:column="28"/></case>
      <comment type="block" pos:line="188" pos:column="7">/* skip header fields prohibited by HTTP/2 specification. */</comment>
      <expr_stmt><expr><operator pos:line="189" pos:column="7">--<pos:position pos:line="189" pos:column="9"/></operator><name pos:line="189" pos:column="9">nheader<pos:position pos:line="189" pos:column="16"/></name></expr>;<pos:position pos:line="189" pos:column="17"/></expr_stmt>
      <continue pos:line="190" pos:column="7">continue;<pos:position pos:line="190" pos:column="16"/></continue>
    <case pos:line="191" pos:column="5">case <expr><name pos:line="191" pos:column="10">HEADERINST_TE_TRAILERS<pos:position pos:line="191" pos:column="32"/></name></expr>:<pos:position pos:line="191" pos:column="33"/></case>
      <expr_stmt><expr><name><name pos:line="192" pos:column="7">nva<pos:position pos:line="192" pos:column="10"/></name><index pos:line="192" pos:column="10">[<expr><name pos:line="192" pos:column="11">i<pos:position pos:line="192" pos:column="12"/></name></expr>]<pos:position pos:line="192" pos:column="13"/></index></name><operator pos:line="192" pos:column="13">.<pos:position pos:line="192" pos:column="14"/></operator><name pos:line="192" pos:column="14">value<pos:position pos:line="192" pos:column="19"/></name> <operator pos:line="192" pos:column="20">=<pos:position pos:line="192" pos:column="21"/></operator> <operator pos:line="192" pos:column="22">(<pos:position pos:line="192" pos:column="23"/></operator><name pos:line="192" pos:column="23">uint8_t<pos:position pos:line="192" pos:column="30"/></name><operator pos:line="192" pos:column="30">*<pos:position pos:line="192" pos:column="31"/></operator><operator pos:line="192" pos:column="31">)<pos:position pos:line="192" pos:column="32"/></operator><literal type="string" pos:line="192" pos:column="32">"trailers"<pos:position pos:line="192" pos:column="42"/></literal></expr>;<pos:position pos:line="192" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="193" pos:column="7">nva<pos:position pos:line="193" pos:column="10"/></name><index pos:line="193" pos:column="10">[<expr><name pos:line="193" pos:column="11">i<pos:position pos:line="193" pos:column="12"/></name></expr>]<pos:position pos:line="193" pos:column="13"/></index></name><operator pos:line="193" pos:column="13">.<pos:position pos:line="193" pos:column="14"/></operator><name pos:line="193" pos:column="14">valuelen<pos:position pos:line="193" pos:column="22"/></name> <operator pos:line="193" pos:column="23">=<pos:position pos:line="193" pos:column="24"/></operator> <sizeof pos:line="193" pos:column="25">sizeof<argument_list pos:line="193" pos:column="31">(<argument><expr><literal type="string" pos:line="193" pos:column="32">"trailers"<pos:position pos:line="193" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="43"/></argument_list></sizeof> <operator pos:line="193" pos:column="44">-<pos:position pos:line="193" pos:column="45"/></operator> <literal type="number" pos:line="193" pos:column="46">1<pos:position pos:line="193" pos:column="47"/></literal></expr>;<pos:position pos:line="193" pos:column="48"/></expr_stmt>
      <break pos:line="194" pos:column="7">break;<pos:position pos:line="194" pos:column="13"/></break>
    <default pos:line="195" pos:column="5">default:<pos:position pos:line="195" pos:column="13"/></default>
      <expr_stmt><expr><name><name pos:line="196" pos:column="7">nva<pos:position pos:line="196" pos:column="10"/></name><index pos:line="196" pos:column="10">[<expr><name pos:line="196" pos:column="11">i<pos:position pos:line="196" pos:column="12"/></name></expr>]<pos:position pos:line="196" pos:column="13"/></index></name><operator pos:line="196" pos:column="13">.<pos:position pos:line="196" pos:column="14"/></operator><name pos:line="196" pos:column="14">value<pos:position pos:line="196" pos:column="19"/></name> <operator pos:line="196" pos:column="20">=<pos:position pos:line="196" pos:column="21"/></operator> <operator pos:line="196" pos:column="22">(<pos:position pos:line="196" pos:column="23"/></operator><name pos:line="196" pos:column="23">unsigned<pos:position pos:line="196" pos:column="31"/></name> <name pos:line="196" pos:column="32">char<pos:position pos:line="196" pos:column="36"/></name> <operator pos:line="196" pos:column="37">*<pos:position pos:line="196" pos:column="38"/></operator><operator pos:line="196" pos:column="38">)<pos:position pos:line="196" pos:column="39"/></operator><name pos:line="196" pos:column="39">hdbuf<pos:position pos:line="196" pos:column="44"/></name></expr>;<pos:position pos:line="196" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="197" pos:column="7">nva<pos:position pos:line="197" pos:column="10"/></name><index pos:line="197" pos:column="10">[<expr><name pos:line="197" pos:column="11">i<pos:position pos:line="197" pos:column="12"/></name></expr>]<pos:position pos:line="197" pos:column="13"/></index></name><operator pos:line="197" pos:column="13">.<pos:position pos:line="197" pos:column="14"/></operator><name pos:line="197" pos:column="14">valuelen<pos:position pos:line="197" pos:column="22"/></name> <operator pos:line="197" pos:column="23">=<pos:position pos:line="197" pos:column="24"/></operator> <call pos:line="197" pos:column="25">(<name pos:line="197" pos:column="26">size_t<pos:position pos:line="197" pos:column="32"/></name>)<argument_list pos:line="197" pos:column="33">(<argument><expr><name pos:line="197" pos:column="34">end<pos:position pos:line="197" pos:column="37"/></name> <operator pos:line="197" pos:column="38">-<pos:position pos:line="197" pos:column="39"/></operator> <name pos:line="197" pos:column="40">hdbuf<pos:position pos:line="197" pos:column="45"/></name></expr></argument>)<pos:position pos:line="197" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="198" pos:column="6"/></block></switch>

    <expr_stmt><expr><name><name pos:line="200" pos:column="5">nva<pos:position pos:line="200" pos:column="8"/></name><index pos:line="200" pos:column="8">[<expr><name pos:line="200" pos:column="9">i<pos:position pos:line="200" pos:column="10"/></name></expr>]<pos:position pos:line="200" pos:column="11"/></index></name><operator pos:line="200" pos:column="11">.<pos:position pos:line="200" pos:column="12"/></operator><name pos:line="200" pos:column="12">flags<pos:position pos:line="200" pos:column="17"/></name> <operator pos:line="200" pos:column="18">=<pos:position pos:line="200" pos:column="19"/></operator> <name pos:line="200" pos:column="20">NGHTTP2_NV_FLAG_NONE<pos:position pos:line="200" pos:column="40"/></name></expr>;<pos:position pos:line="200" pos:column="41"/></expr_stmt>
    <if pos:line="201" pos:column="5">if<condition pos:line="201" pos:column="7">(<expr><call><name pos:line="201" pos:column="8">HEADER_OVERFLOW<pos:position pos:line="201" pos:column="23"/></name><argument_list pos:line="201" pos:column="23">(<argument><expr><name><name pos:line="201" pos:column="24">nva<pos:position pos:line="201" pos:column="27"/></name><index pos:line="201" pos:column="27">[<expr><name pos:line="201" pos:column="28">i<pos:position pos:line="201" pos:column="29"/></name></expr>]<pos:position pos:line="201" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="201" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="201" pos:column="32"/></condition><then pos:line="201" pos:column="32"> <block pos:line="201" pos:column="33">{
      <expr_stmt><expr><call><name pos:line="202" pos:column="7">failf<pos:position pos:line="202" pos:column="12"/></name><argument_list pos:line="202" pos:column="12">(<argument><expr><name><name pos:line="202" pos:column="13">conn<pos:position pos:line="202" pos:column="17"/></name><operator pos:line="202" pos:column="17">-&gt;<pos:position pos:line="202" pos:column="22"/></operator><name pos:line="202" pos:column="19">data<pos:position pos:line="202" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="202" pos:column="25">"Failed sending HTTP request: Header overflow"<pos:position pos:line="202" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="73"/></expr_stmt>
      <goto pos:line="203" pos:column="7">goto <name pos:line="203" pos:column="12">fail<pos:position pos:line="203" pos:column="16"/></name>;<pos:position pos:line="203" pos:column="17"/></goto>
    }<pos:position pos:line="204" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="205" pos:column="5">++<pos:position pos:line="205" pos:column="7"/></operator><name pos:line="205" pos:column="7">i<pos:position pos:line="205" pos:column="8"/></name></expr>;<pos:position pos:line="205" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="206" pos:column="4"/></block></while>

  <comment type="block" pos:line="208" pos:column="3">/* :authority must come before non-pseudo header fields */</comment>
  <if pos:line="209" pos:column="3">if<condition pos:line="209" pos:column="5">(<expr><name pos:line="209" pos:column="6">authority_idx<pos:position pos:line="209" pos:column="19"/></name> <operator pos:line="209" pos:column="20">!=<pos:position pos:line="209" pos:column="22"/></operator> <literal type="number" pos:line="209" pos:column="23">0<pos:position pos:line="209" pos:column="24"/></literal> <operator pos:line="209" pos:column="25">&amp;&amp;<pos:position pos:line="209" pos:column="35"/></operator> <name pos:line="209" pos:column="28">authority_idx<pos:position pos:line="209" pos:column="41"/></name> <operator pos:line="209" pos:column="42">!=<pos:position pos:line="209" pos:column="44"/></operator> <name pos:line="209" pos:column="45">AUTHORITY_DST_IDX<pos:position pos:line="209" pos:column="62"/></name></expr>)<pos:position pos:line="209" pos:column="63"/></condition><then pos:line="209" pos:column="63"> <block pos:line="209" pos:column="64">{
    <decl_stmt><decl><type><name pos:line="210" pos:column="5">nghttp2_nv<pos:position pos:line="210" pos:column="15"/></name></type> <name pos:line="210" pos:column="16">authority<pos:position pos:line="210" pos:column="25"/></name> <init pos:line="210" pos:column="26">= <expr><name><name pos:line="210" pos:column="28">nva<pos:position pos:line="210" pos:column="31"/></name><index pos:line="210" pos:column="31">[<expr><name pos:line="210" pos:column="32">authority_idx<pos:position pos:line="210" pos:column="45"/></name></expr>]<pos:position pos:line="210" pos:column="46"/></index></name></expr></init></decl>;<pos:position pos:line="210" pos:column="47"/></decl_stmt>
    <for pos:line="211" pos:column="5">for<control pos:line="211" pos:column="8">(<init><expr><name pos:line="211" pos:column="9">i<pos:position pos:line="211" pos:column="10"/></name> <operator pos:line="211" pos:column="11">=<pos:position pos:line="211" pos:column="12"/></operator> <name pos:line="211" pos:column="13">authority_idx<pos:position pos:line="211" pos:column="26"/></name></expr>;<pos:position pos:line="211" pos:column="27"/></init> <condition><expr><name pos:line="211" pos:column="28">i<pos:position pos:line="211" pos:column="29"/></name> <operator pos:line="211" pos:column="30">&gt;<pos:position pos:line="211" pos:column="34"/></operator> <name pos:line="211" pos:column="32">AUTHORITY_DST_IDX<pos:position pos:line="211" pos:column="49"/></name></expr>;<pos:position pos:line="211" pos:column="50"/></condition> <incr><expr><operator pos:line="211" pos:column="51">--<pos:position pos:line="211" pos:column="53"/></operator><name pos:line="211" pos:column="53">i<pos:position pos:line="211" pos:column="54"/></name></expr></incr>)<pos:position pos:line="211" pos:column="55"/></control> <block pos:line="211" pos:column="56">{
      <expr_stmt><expr><name><name pos:line="212" pos:column="7">nva<pos:position pos:line="212" pos:column="10"/></name><index pos:line="212" pos:column="10">[<expr><name pos:line="212" pos:column="11">i<pos:position pos:line="212" pos:column="12"/></name></expr>]<pos:position pos:line="212" pos:column="13"/></index></name> <operator pos:line="212" pos:column="14">=<pos:position pos:line="212" pos:column="15"/></operator> <name><name pos:line="212" pos:column="16">nva<pos:position pos:line="212" pos:column="19"/></name><index pos:line="212" pos:column="19">[<expr><name pos:line="212" pos:column="20">i<pos:position pos:line="212" pos:column="21"/></name> <operator pos:line="212" pos:column="22">-<pos:position pos:line="212" pos:column="23"/></operator> <literal type="number" pos:line="212" pos:column="24">1<pos:position pos:line="212" pos:column="25"/></literal></expr>]<pos:position pos:line="212" pos:column="26"/></index></name></expr>;<pos:position pos:line="212" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="213" pos:column="6"/></block></for>
    <expr_stmt><expr><name><name pos:line="214" pos:column="5">nva<pos:position pos:line="214" pos:column="8"/></name><index pos:line="214" pos:column="8">[<expr><name pos:line="214" pos:column="9">i<pos:position pos:line="214" pos:column="10"/></name></expr>]<pos:position pos:line="214" pos:column="11"/></index></name> <operator pos:line="214" pos:column="12">=<pos:position pos:line="214" pos:column="13"/></operator> <name pos:line="214" pos:column="14">authority<pos:position pos:line="214" pos:column="23"/></name></expr>;<pos:position pos:line="214" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="215" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="217" pos:column="3">/* Warn stream may be rejected if cumulative length of headers is too large.
     It appears nghttp2 will not send a header frame larger than 64KB. */</comment>
<cpp:define pos:line="219" pos:column="1">#<cpp:directive pos:line="219" pos:column="2">define<pos:position pos:line="219" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="219" pos:column="9">MAX_ACC<pos:position pos:line="219" pos:column="16"/></name></cpp:macro> <cpp:value pos:line="219" pos:column="17">60000<pos:position pos:line="219" pos:column="22"/></cpp:value></cpp:define>  <comment type="block" pos:line="219" pos:column="24">/* &lt;64KB to account for some overhead */</comment>
  <block pos:line="220" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="221" pos:column="5">size_t<pos:position pos:line="221" pos:column="11"/></name></type> <name pos:line="221" pos:column="12">acc<pos:position pos:line="221" pos:column="15"/></name> <init pos:line="221" pos:column="16">= <expr><literal type="number" pos:line="221" pos:column="18">0<pos:position pos:line="221" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="221" pos:column="20"/></decl_stmt>

    <for pos:line="223" pos:column="5">for<control pos:line="223" pos:column="8">(<init><expr><name pos:line="223" pos:column="9">i<pos:position pos:line="223" pos:column="10"/></name> <operator pos:line="223" pos:column="11">=<pos:position pos:line="223" pos:column="12"/></operator> <literal type="number" pos:line="223" pos:column="13">0<pos:position pos:line="223" pos:column="14"/></literal></expr>;<pos:position pos:line="223" pos:column="15"/></init> <condition><expr><name pos:line="223" pos:column="16">i<pos:position pos:line="223" pos:column="17"/></name> <operator pos:line="223" pos:column="18">&lt;<pos:position pos:line="223" pos:column="22"/></operator> <name pos:line="223" pos:column="20">nheader<pos:position pos:line="223" pos:column="27"/></name></expr>;<pos:position pos:line="223" pos:column="28"/></condition> <incr><expr><operator pos:line="223" pos:column="29">++<pos:position pos:line="223" pos:column="31"/></operator><name pos:line="223" pos:column="31">i<pos:position pos:line="223" pos:column="32"/></name></expr></incr>)<pos:position pos:line="223" pos:column="33"/></control> <block pos:line="223" pos:column="34">{
      <expr_stmt><expr><name pos:line="224" pos:column="7">acc<pos:position pos:line="224" pos:column="10"/></name> <operator pos:line="224" pos:column="11">+=<pos:position pos:line="224" pos:column="13"/></operator> <name><name pos:line="224" pos:column="14">nva<pos:position pos:line="224" pos:column="17"/></name><index pos:line="224" pos:column="17">[<expr><name pos:line="224" pos:column="18">i<pos:position pos:line="224" pos:column="19"/></name></expr>]<pos:position pos:line="224" pos:column="20"/></index></name><operator pos:line="224" pos:column="20">.<pos:position pos:line="224" pos:column="21"/></operator><name pos:line="224" pos:column="21">namelen<pos:position pos:line="224" pos:column="28"/></name> <operator pos:line="224" pos:column="29">+<pos:position pos:line="224" pos:column="30"/></operator> <name><name pos:line="224" pos:column="31">nva<pos:position pos:line="224" pos:column="34"/></name><index pos:line="224" pos:column="34">[<expr><name pos:line="224" pos:column="35">i<pos:position pos:line="224" pos:column="36"/></name></expr>]<pos:position pos:line="224" pos:column="37"/></index></name><operator pos:line="224" pos:column="37">.<pos:position pos:line="224" pos:column="38"/></operator><name pos:line="224" pos:column="38">valuelen<pos:position pos:line="224" pos:column="46"/></name></expr>;<pos:position pos:line="224" pos:column="47"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="226" pos:column="7">DEBUGF<pos:position pos:line="226" pos:column="13"/></name><argument_list pos:line="226" pos:column="13">(<argument><expr><call><name pos:line="226" pos:column="14">infof<pos:position pos:line="226" pos:column="19"/></name><argument_list pos:line="226" pos:column="19">(<argument><expr><name><name pos:line="226" pos:column="20">conn<pos:position pos:line="226" pos:column="24"/></name><operator pos:line="226" pos:column="24">-&gt;<pos:position pos:line="226" pos:column="29"/></operator><name pos:line="226" pos:column="26">data<pos:position pos:line="226" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="226" pos:column="32">"h2 header: %.*s:%.*s\n"<pos:position pos:line="226" pos:column="56"/></literal></expr></argument>,
                   <argument><expr><name><name pos:line="227" pos:column="20">nva<pos:position pos:line="227" pos:column="23"/></name><index pos:line="227" pos:column="23">[<expr><name pos:line="227" pos:column="24">i<pos:position pos:line="227" pos:column="25"/></name></expr>]<pos:position pos:line="227" pos:column="26"/></index></name><operator pos:line="227" pos:column="26">.<pos:position pos:line="227" pos:column="27"/></operator><name pos:line="227" pos:column="27">namelen<pos:position pos:line="227" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="227" pos:column="36">nva<pos:position pos:line="227" pos:column="39"/></name><index pos:line="227" pos:column="39">[<expr><name pos:line="227" pos:column="40">i<pos:position pos:line="227" pos:column="41"/></name></expr>]<pos:position pos:line="227" pos:column="42"/></index></name><operator pos:line="227" pos:column="42">.<pos:position pos:line="227" pos:column="43"/></operator><name pos:line="227" pos:column="43">name<pos:position pos:line="227" pos:column="47"/></name></expr></argument>,
                   <argument><expr><name><name pos:line="228" pos:column="20">nva<pos:position pos:line="228" pos:column="23"/></name><index pos:line="228" pos:column="23">[<expr><name pos:line="228" pos:column="24">i<pos:position pos:line="228" pos:column="25"/></name></expr>]<pos:position pos:line="228" pos:column="26"/></index></name><operator pos:line="228" pos:column="26">.<pos:position pos:line="228" pos:column="27"/></operator><name pos:line="228" pos:column="27">valuelen<pos:position pos:line="228" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="228" pos:column="37">nva<pos:position pos:line="228" pos:column="40"/></name><index pos:line="228" pos:column="40">[<expr><name pos:line="228" pos:column="41">i<pos:position pos:line="228" pos:column="42"/></name></expr>]<pos:position pos:line="228" pos:column="43"/></index></name><operator pos:line="228" pos:column="43">.<pos:position pos:line="228" pos:column="44"/></operator><name pos:line="228" pos:column="44">value<pos:position pos:line="228" pos:column="49"/></name></expr></argument>)<pos:position pos:line="228" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="228" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="229" pos:column="6"/></block></for>

    <if pos:line="231" pos:column="5">if<condition pos:line="231" pos:column="7">(<expr><name pos:line="231" pos:column="8">acc<pos:position pos:line="231" pos:column="11"/></name> <operator pos:line="231" pos:column="12">&gt;<pos:position pos:line="231" pos:column="16"/></operator> <name pos:line="231" pos:column="14">MAX_ACC<pos:position pos:line="231" pos:column="21"/></name></expr>)<pos:position pos:line="231" pos:column="22"/></condition><then pos:line="231" pos:column="22"> <block pos:line="231" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="232" pos:column="7">infof<pos:position pos:line="232" pos:column="12"/></name><argument_list pos:line="232" pos:column="12">(<argument><expr><name><name pos:line="232" pos:column="13">conn<pos:position pos:line="232" pos:column="17"/></name><operator pos:line="232" pos:column="17">-&gt;<pos:position pos:line="232" pos:column="22"/></operator><name pos:line="232" pos:column="19">data<pos:position pos:line="232" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="232" pos:column="25">"http2_send: Warning: The cumulative length of all "<pos:position pos:line="232" pos:column="77"/></literal>
            <literal type="string" pos:line="233" pos:column="13">"headers exceeds %zu bytes and that could cause the "<pos:position pos:line="233" pos:column="66"/></literal>
            <literal type="string" pos:line="234" pos:column="13">"stream to be rejected.\n"<pos:position pos:line="234" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="234" pos:column="41">MAX_ACC<pos:position pos:line="234" pos:column="48"/></name></expr></argument>)<pos:position pos:line="234" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="235" pos:column="6"/></block></then></if>
  }<pos:position pos:line="236" pos:column="4"/></block>

  <expr_stmt><expr><call><name pos:line="238" pos:column="3">h2_pri_spec<pos:position pos:line="238" pos:column="14"/></name><argument_list pos:line="238" pos:column="14">(<argument><expr><name><name pos:line="238" pos:column="15">conn<pos:position pos:line="238" pos:column="19"/></name><operator pos:line="238" pos:column="19">-&gt;<pos:position pos:line="238" pos:column="24"/></operator><name pos:line="238" pos:column="21">data<pos:position pos:line="238" pos:column="25"/></name></name></expr></argument>, <argument><expr><operator pos:line="238" pos:column="27">&amp;<pos:position pos:line="238" pos:column="32"/></operator><name pos:line="238" pos:column="28">pri_spec<pos:position pos:line="238" pos:column="36"/></name></expr></argument>)<pos:position pos:line="238" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="38"/></expr_stmt>

  <switch pos:line="240" pos:column="3">switch<condition pos:line="240" pos:column="9">(<expr><name><name pos:line="240" pos:column="10">conn<pos:position pos:line="240" pos:column="14"/></name><operator pos:line="240" pos:column="14">-&gt;<pos:position pos:line="240" pos:column="19"/></operator><name pos:line="240" pos:column="16">data<pos:position pos:line="240" pos:column="20"/></name><operator pos:line="240" pos:column="20">-&gt;<pos:position pos:line="240" pos:column="25"/></operator><name pos:line="240" pos:column="22">set<pos:position pos:line="240" pos:column="25"/></name><operator pos:line="240" pos:column="25">.<pos:position pos:line="240" pos:column="26"/></operator><name pos:line="240" pos:column="26">httpreq<pos:position pos:line="240" pos:column="33"/></name></name></expr>)<pos:position pos:line="240" pos:column="34"/></condition> <block pos:line="240" pos:column="35">{
  <case pos:line="241" pos:column="3">case <expr><name pos:line="241" pos:column="8">HTTPREQ_POST<pos:position pos:line="241" pos:column="20"/></name></expr>:<pos:position pos:line="241" pos:column="21"/></case>
  <case pos:line="242" pos:column="3">case <expr><name pos:line="242" pos:column="8">HTTPREQ_POST_FORM<pos:position pos:line="242" pos:column="25"/></name></expr>:<pos:position pos:line="242" pos:column="26"/></case>
  <case pos:line="243" pos:column="3">case <expr><name pos:line="243" pos:column="8">HTTPREQ_POST_MIME<pos:position pos:line="243" pos:column="25"/></name></expr>:<pos:position pos:line="243" pos:column="26"/></case>
  <case pos:line="244" pos:column="3">case <expr><name pos:line="244" pos:column="8">HTTPREQ_PUT<pos:position pos:line="244" pos:column="19"/></name></expr>:<pos:position pos:line="244" pos:column="20"/></case>
    <if pos:line="245" pos:column="5">if<condition pos:line="245" pos:column="7">(<expr><name><name pos:line="245" pos:column="8">conn<pos:position pos:line="245" pos:column="12"/></name><operator pos:line="245" pos:column="12">-&gt;<pos:position pos:line="245" pos:column="17"/></operator><name pos:line="245" pos:column="14">data<pos:position pos:line="245" pos:column="18"/></name><operator pos:line="245" pos:column="18">-&gt;<pos:position pos:line="245" pos:column="23"/></operator><name pos:line="245" pos:column="20">state<pos:position pos:line="245" pos:column="25"/></name><operator pos:line="245" pos:column="25">.<pos:position pos:line="245" pos:column="26"/></operator><name pos:line="245" pos:column="26">infilesize<pos:position pos:line="245" pos:column="36"/></name></name> <operator pos:line="245" pos:column="37">!=<pos:position pos:line="245" pos:column="39"/></operator> <operator pos:line="245" pos:column="40">-<pos:position pos:line="245" pos:column="41"/></operator><literal type="number" pos:line="245" pos:column="41">1<pos:position pos:line="245" pos:column="42"/></literal></expr>)<pos:position pos:line="245" pos:column="43"/></condition><then pos:line="245" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="246" pos:column="7">stream<pos:position pos:line="246" pos:column="13"/></name><operator pos:line="246" pos:column="13">-&gt;<pos:position pos:line="246" pos:column="18"/></operator><name pos:line="246" pos:column="15">upload_left<pos:position pos:line="246" pos:column="26"/></name></name> <operator pos:line="246" pos:column="27">=<pos:position pos:line="246" pos:column="28"/></operator> <name><name pos:line="246" pos:column="29">conn<pos:position pos:line="246" pos:column="33"/></name><operator pos:line="246" pos:column="33">-&gt;<pos:position pos:line="246" pos:column="38"/></operator><name pos:line="246" pos:column="35">data<pos:position pos:line="246" pos:column="39"/></name><operator pos:line="246" pos:column="39">-&gt;<pos:position pos:line="246" pos:column="44"/></operator><name pos:line="246" pos:column="41">state<pos:position pos:line="246" pos:column="46"/></name><operator pos:line="246" pos:column="46">.<pos:position pos:line="246" pos:column="47"/></operator><name pos:line="246" pos:column="47">infilesize<pos:position pos:line="246" pos:column="57"/></name></name></expr>;<pos:position pos:line="246" pos:column="58"/></expr_stmt></block></then>
    <else pos:line="247" pos:column="5">else
      <comment type="block" pos:line="248" pos:column="7">/* data sending without specifying the data amount up front */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="249" pos:column="7">stream<pos:position pos:line="249" pos:column="13"/></name><operator pos:line="249" pos:column="13">-&gt;<pos:position pos:line="249" pos:column="18"/></operator><name pos:line="249" pos:column="15">upload_left<pos:position pos:line="249" pos:column="26"/></name></name> <operator pos:line="249" pos:column="27">=<pos:position pos:line="249" pos:column="28"/></operator> <operator pos:line="249" pos:column="29">-<pos:position pos:line="249" pos:column="30"/></operator><literal type="number" pos:line="249" pos:column="30">1<pos:position pos:line="249" pos:column="31"/></literal></expr>;<pos:position pos:line="249" pos:column="32"/></expr_stmt></block></else></if> <comment type="block" pos:line="249" pos:column="33">/* unknown, but not zero */</comment>

    <expr_stmt><expr><name><name pos:line="251" pos:column="5">data_prd<pos:position pos:line="251" pos:column="13"/></name><operator pos:line="251" pos:column="13">.<pos:position pos:line="251" pos:column="14"/></operator><name pos:line="251" pos:column="14">read_callback<pos:position pos:line="251" pos:column="27"/></name></name> <operator pos:line="251" pos:column="28">=<pos:position pos:line="251" pos:column="29"/></operator> <name pos:line="251" pos:column="30">data_source_read_callback<pos:position pos:line="251" pos:column="55"/></name></expr>;<pos:position pos:line="251" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="252" pos:column="5">data_prd<pos:position pos:line="252" pos:column="13"/></name><operator pos:line="252" pos:column="13">.<pos:position pos:line="252" pos:column="14"/></operator><name pos:line="252" pos:column="14">source<pos:position pos:line="252" pos:column="20"/></name><operator pos:line="252" pos:column="20">.<pos:position pos:line="252" pos:column="21"/></operator><name pos:line="252" pos:column="21">ptr<pos:position pos:line="252" pos:column="24"/></name></name> <operator pos:line="252" pos:column="25">=<pos:position pos:line="252" pos:column="26"/></operator> <name pos:line="252" pos:column="27">NULL<pos:position pos:line="252" pos:column="31"/></name></expr>;<pos:position pos:line="252" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="253" pos:column="5">stream_id<pos:position pos:line="253" pos:column="14"/></name> <operator pos:line="253" pos:column="15">=<pos:position pos:line="253" pos:column="16"/></operator> <call><name pos:line="253" pos:column="17">nghttp2_submit_request<pos:position pos:line="253" pos:column="39"/></name><argument_list pos:line="253" pos:column="39">(<argument><expr><name pos:line="253" pos:column="40">h2<pos:position pos:line="253" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="253" pos:column="44">&amp;<pos:position pos:line="253" pos:column="49"/></operator><name pos:line="253" pos:column="45">pri_spec<pos:position pos:line="253" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="55">nva<pos:position pos:line="253" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="60">nheader<pos:position pos:line="253" pos:column="67"/></name></expr></argument>,
                                       <argument><expr><operator pos:line="254" pos:column="40">&amp;<pos:position pos:line="254" pos:column="45"/></operator><name pos:line="254" pos:column="41">data_prd<pos:position pos:line="254" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="254" pos:column="51">conn<pos:position pos:line="254" pos:column="55"/></name><operator pos:line="254" pos:column="55">-&gt;<pos:position pos:line="254" pos:column="60"/></operator><name pos:line="254" pos:column="57">data<pos:position pos:line="254" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="254" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="63"/></expr_stmt>
    <break pos:line="255" pos:column="5">break;<pos:position pos:line="255" pos:column="11"/></break>
  <default pos:line="256" pos:column="3">default:<pos:position pos:line="256" pos:column="11"/></default>
    <expr_stmt><expr><name pos:line="257" pos:column="5">stream_id<pos:position pos:line="257" pos:column="14"/></name> <operator pos:line="257" pos:column="15">=<pos:position pos:line="257" pos:column="16"/></operator> <call><name pos:line="257" pos:column="17">nghttp2_submit_request<pos:position pos:line="257" pos:column="39"/></name><argument_list pos:line="257" pos:column="39">(<argument><expr><name pos:line="257" pos:column="40">h2<pos:position pos:line="257" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="257" pos:column="44">&amp;<pos:position pos:line="257" pos:column="49"/></operator><name pos:line="257" pos:column="45">pri_spec<pos:position pos:line="257" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="55">nva<pos:position pos:line="257" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="60">nheader<pos:position pos:line="257" pos:column="67"/></name></expr></argument>,
                                       <argument><expr><name pos:line="258" pos:column="40">NULL<pos:position pos:line="258" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="258" pos:column="46">conn<pos:position pos:line="258" pos:column="50"/></name><operator pos:line="258" pos:column="50">-&gt;<pos:position pos:line="258" pos:column="55"/></operator><name pos:line="258" pos:column="52">data<pos:position pos:line="258" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="258" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="58"/></expr_stmt>
  }<pos:position pos:line="259" pos:column="4"/></block></switch>

  <expr_stmt><expr><call><name pos:line="261" pos:column="3">Curl_safefree<pos:position pos:line="261" pos:column="16"/></name><argument_list pos:line="261" pos:column="16">(<argument><expr><name pos:line="261" pos:column="17">nva<pos:position pos:line="261" pos:column="20"/></name></expr></argument>)<pos:position pos:line="261" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="22"/></expr_stmt>

  <if pos:line="263" pos:column="3">if<condition pos:line="263" pos:column="5">(<expr><name pos:line="263" pos:column="6">stream_id<pos:position pos:line="263" pos:column="15"/></name> <operator pos:line="263" pos:column="16">&lt;<pos:position pos:line="263" pos:column="20"/></operator> <literal type="number" pos:line="263" pos:column="18">0<pos:position pos:line="263" pos:column="19"/></literal></expr>)<pos:position pos:line="263" pos:column="20"/></condition><then pos:line="263" pos:column="20"> <block pos:line="263" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="264" pos:column="5">DEBUGF<pos:position pos:line="264" pos:column="11"/></name><argument_list pos:line="264" pos:column="11">(<argument><expr><call><name pos:line="264" pos:column="12">infof<pos:position pos:line="264" pos:column="17"/></name><argument_list pos:line="264" pos:column="17">(<argument><expr><name><name pos:line="264" pos:column="18">conn<pos:position pos:line="264" pos:column="22"/></name><operator pos:line="264" pos:column="22">-&gt;<pos:position pos:line="264" pos:column="27"/></operator><name pos:line="264" pos:column="24">data<pos:position pos:line="264" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="264" pos:column="30">"http2_send() send error\n"<pos:position pos:line="264" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="264" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="264" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="265" pos:column="5">*<pos:position pos:line="265" pos:column="6"/></operator><name pos:line="265" pos:column="6">err<pos:position pos:line="265" pos:column="9"/></name> <operator pos:line="265" pos:column="10">=<pos:position pos:line="265" pos:column="11"/></operator> <name pos:line="265" pos:column="12">CURLE_SEND_ERROR<pos:position pos:line="265" pos:column="28"/></name></expr>;<pos:position pos:line="265" pos:column="29"/></expr_stmt>
    <return pos:line="266" pos:column="5">return <expr><operator pos:line="266" pos:column="12">-<pos:position pos:line="266" pos:column="13"/></operator><literal type="number" pos:line="266" pos:column="13">1<pos:position pos:line="266" pos:column="14"/></literal></expr>;<pos:position pos:line="266" pos:column="15"/></return>
  }<pos:position pos:line="267" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="269" pos:column="3">infof<pos:position pos:line="269" pos:column="8"/></name><argument_list pos:line="269" pos:column="8">(<argument><expr><name><name pos:line="269" pos:column="9">conn<pos:position pos:line="269" pos:column="13"/></name><operator pos:line="269" pos:column="13">-&gt;<pos:position pos:line="269" pos:column="18"/></operator><name pos:line="269" pos:column="15">data<pos:position pos:line="269" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="269" pos:column="21">"Using Stream ID: %x (easy handle %p)\n"<pos:position pos:line="269" pos:column="61"/></literal></expr></argument>,
        <argument><expr><name pos:line="270" pos:column="9">stream_id<pos:position pos:line="270" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="270" pos:column="20">conn<pos:position pos:line="270" pos:column="24"/></name><operator pos:line="270" pos:column="24">-&gt;<pos:position pos:line="270" pos:column="29"/></operator><name pos:line="270" pos:column="26">data<pos:position pos:line="270" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="270" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="271" pos:column="3">stream<pos:position pos:line="271" pos:column="9"/></name><operator pos:line="271" pos:column="9">-&gt;<pos:position pos:line="271" pos:column="14"/></operator><name pos:line="271" pos:column="11">stream_id<pos:position pos:line="271" pos:column="20"/></name></name> <operator pos:line="271" pos:column="21">=<pos:position pos:line="271" pos:column="22"/></operator> <name pos:line="271" pos:column="23">stream_id<pos:position pos:line="271" pos:column="32"/></name></expr>;<pos:position pos:line="271" pos:column="33"/></expr_stmt>

  <comment type="block" pos:line="273" pos:column="3">/* this does not call h2_session_send() since there can not have been any
   * priority upodate since the nghttp2_submit_request() call above */</comment>
  <expr_stmt><expr><name pos:line="275" pos:column="3">rv<pos:position pos:line="275" pos:column="5"/></name> <operator pos:line="275" pos:column="6">=<pos:position pos:line="275" pos:column="7"/></operator> <call><name pos:line="275" pos:column="8">nghttp2_session_send<pos:position pos:line="275" pos:column="28"/></name><argument_list pos:line="275" pos:column="28">(<argument><expr><name pos:line="275" pos:column="29">h2<pos:position pos:line="275" pos:column="31"/></name></expr></argument>)<pos:position pos:line="275" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="33"/></expr_stmt>

  <if pos:line="277" pos:column="3">if<condition pos:line="277" pos:column="5">(<expr><name pos:line="277" pos:column="6">rv<pos:position pos:line="277" pos:column="8"/></name> <operator pos:line="277" pos:column="9">!=<pos:position pos:line="277" pos:column="11"/></operator> <literal type="number" pos:line="277" pos:column="12">0<pos:position pos:line="277" pos:column="13"/></literal></expr>)<pos:position pos:line="277" pos:column="14"/></condition><then pos:line="277" pos:column="14"> <block pos:line="277" pos:column="15">{
    <expr_stmt><expr><operator pos:line="278" pos:column="5">*<pos:position pos:line="278" pos:column="6"/></operator><name pos:line="278" pos:column="6">err<pos:position pos:line="278" pos:column="9"/></name> <operator pos:line="278" pos:column="10">=<pos:position pos:line="278" pos:column="11"/></operator> <name pos:line="278" pos:column="12">CURLE_SEND_ERROR<pos:position pos:line="278" pos:column="28"/></name></expr>;<pos:position pos:line="278" pos:column="29"/></expr_stmt>
    <return pos:line="279" pos:column="5">return <expr><operator pos:line="279" pos:column="12">-<pos:position pos:line="279" pos:column="13"/></operator><literal type="number" pos:line="279" pos:column="13">1<pos:position pos:line="279" pos:column="14"/></literal></expr>;<pos:position pos:line="279" pos:column="15"/></return>
  }<pos:position pos:line="280" pos:column="4"/></block></then></if>

  <if pos:line="282" pos:column="3">if<condition pos:line="282" pos:column="5">(<expr><call><name pos:line="282" pos:column="6">should_close_session<pos:position pos:line="282" pos:column="26"/></name><argument_list pos:line="282" pos:column="26">(<argument><expr><name pos:line="282" pos:column="27">httpc<pos:position pos:line="282" pos:column="32"/></name></expr></argument>)<pos:position pos:line="282" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="282" pos:column="34"/></condition><then pos:line="282" pos:column="34"> <block pos:line="282" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="283" pos:column="5">DEBUGF<pos:position pos:line="283" pos:column="11"/></name><argument_list pos:line="283" pos:column="11">(<argument><expr><call><name pos:line="283" pos:column="12">infof<pos:position pos:line="283" pos:column="17"/></name><argument_list pos:line="283" pos:column="17">(<argument><expr><name><name pos:line="283" pos:column="18">conn<pos:position pos:line="283" pos:column="22"/></name><operator pos:line="283" pos:column="22">-&gt;<pos:position pos:line="283" pos:column="27"/></operator><name pos:line="283" pos:column="24">data<pos:position pos:line="283" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="283" pos:column="30">"http2_send: nothing to do in this session\n"<pos:position pos:line="283" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="283" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="283" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="284" pos:column="5">*<pos:position pos:line="284" pos:column="6"/></operator><name pos:line="284" pos:column="6">err<pos:position pos:line="284" pos:column="9"/></name> <operator pos:line="284" pos:column="10">=<pos:position pos:line="284" pos:column="11"/></operator> <name pos:line="284" pos:column="12">CURLE_HTTP2<pos:position pos:line="284" pos:column="23"/></name></expr>;<pos:position pos:line="284" pos:column="24"/></expr_stmt>
    <return pos:line="285" pos:column="5">return <expr><operator pos:line="285" pos:column="12">-<pos:position pos:line="285" pos:column="13"/></operator><literal type="number" pos:line="285" pos:column="13">1<pos:position pos:line="285" pos:column="14"/></literal></expr>;<pos:position pos:line="285" pos:column="15"/></return>
  }<pos:position pos:line="286" pos:column="4"/></block></then></if>

  <if pos:line="288" pos:column="3">if<condition pos:line="288" pos:column="5">(<expr><name><name pos:line="288" pos:column="6">stream<pos:position pos:line="288" pos:column="12"/></name><operator pos:line="288" pos:column="12">-&gt;<pos:position pos:line="288" pos:column="17"/></operator><name pos:line="288" pos:column="14">stream_id<pos:position pos:line="288" pos:column="23"/></name></name> <operator pos:line="288" pos:column="24">!=<pos:position pos:line="288" pos:column="26"/></operator> <operator pos:line="288" pos:column="27">-<pos:position pos:line="288" pos:column="28"/></operator><literal type="number" pos:line="288" pos:column="28">1<pos:position pos:line="288" pos:column="29"/></literal></expr>)<pos:position pos:line="288" pos:column="30"/></condition><then pos:line="288" pos:column="30"> <block pos:line="288" pos:column="31">{
    <comment type="block" pos:line="289" pos:column="5">/* If whole HEADERS frame was sent off to the underlying socket,
       the nghttp2 library calls data_source_read_callback. But only
       it found that no data available, so it deferred the DATA
       transmission. Which means that nghttp2_session_want_write()
       returns 0 on http2_perform_getsock(), which results that no
       writable socket check is performed. To workaround this, we
       issue nghttp2_session_resume_data() here to bring back DATA
       transmission from deferred state. */</comment>
    <expr_stmt><expr><call><name pos:line="297" pos:column="5">nghttp2_session_resume_data<pos:position pos:line="297" pos:column="32"/></name><argument_list pos:line="297" pos:column="32">(<argument><expr><name pos:line="297" pos:column="33">h2<pos:position pos:line="297" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="297" pos:column="37">stream<pos:position pos:line="297" pos:column="43"/></name><operator pos:line="297" pos:column="43">-&gt;<pos:position pos:line="297" pos:column="48"/></operator><name pos:line="297" pos:column="45">stream_id<pos:position pos:line="297" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="297" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="56"/></expr_stmt>
  }<pos:position pos:line="298" pos:column="4"/></block></then></if>

  <return pos:line="300" pos:column="3">return <expr><name pos:line="300" pos:column="10">len<pos:position pos:line="300" pos:column="13"/></name></expr>;<pos:position pos:line="300" pos:column="14"/></return>

<label><name pos:line="302" pos:column="1">fail<pos:position pos:line="302" pos:column="5"/></name>:<pos:position pos:line="302" pos:column="6"/></label>
  <expr_stmt><expr><call><name pos:line="303" pos:column="3">free<pos:position pos:line="303" pos:column="7"/></name><argument_list pos:line="303" pos:column="7">(<argument><expr><name pos:line="303" pos:column="8">nva<pos:position pos:line="303" pos:column="11"/></name></expr></argument>)<pos:position pos:line="303" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="304" pos:column="3">*<pos:position pos:line="304" pos:column="4"/></operator><name pos:line="304" pos:column="4">err<pos:position pos:line="304" pos:column="7"/></name> <operator pos:line="304" pos:column="8">=<pos:position pos:line="304" pos:column="9"/></operator> <name pos:line="304" pos:column="10">CURLE_SEND_ERROR<pos:position pos:line="304" pos:column="26"/></name></expr>;<pos:position pos:line="304" pos:column="27"/></expr_stmt>
  <return pos:line="305" pos:column="3">return <expr><operator pos:line="305" pos:column="10">-<pos:position pos:line="305" pos:column="11"/></operator><literal type="number" pos:line="305" pos:column="11">1<pos:position pos:line="305" pos:column="12"/></literal></expr>;<pos:position pos:line="305" pos:column="13"/></return>
}<pos:position pos:line="306" pos:column="2"/></block></function></unit>

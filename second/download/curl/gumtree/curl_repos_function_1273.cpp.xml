<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1273.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">http_perhapsrewind<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">connectdata<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">conn<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SessionHandle<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name><name pos:line="3" pos:column="32">conn<pos:position pos:line="3" pos:column="36"/></name><operator pos:line="3" pos:column="36">-&gt;<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="38">data<pos:position pos:line="3" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">HTTP<pos:position pos:line="4" pos:column="14"/></name></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">http<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name><name pos:line="4" pos:column="23">data<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">req<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">.<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">protop<pos:position pos:line="4" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">curl_off_t<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">bytessent<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">curl_off_t<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">expectsend<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><operator pos:line="6" pos:column="27">-<pos:position pos:line="6" pos:column="28"/></operator><literal type="number" pos:line="6" pos:column="28">1<pos:position pos:line="6" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt> <comment type="block" pos:line="6" pos:column="31">/* default is unknown */</comment>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><operator pos:line="8" pos:column="6">!<pos:position pos:line="8" pos:column="7"/></operator><name pos:line="8" pos:column="7">http<pos:position pos:line="8" pos:column="11"/></name></expr>)<pos:position pos:line="8" pos:column="12"/></condition><then pos:line="8" pos:column="12">
    <comment type="block" pos:line="9" pos:column="5">/* If this is still NULL, we have not reach very far and we can safely
       skip this rewinding stuff */</comment>
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">CURLE_OK<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></return></block></then></if>

  <switch pos:line="13" pos:column="3">switch<condition pos:line="13" pos:column="9">(<expr><name><name pos:line="13" pos:column="10">data<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">set<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">.<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">httpreq<pos:position pos:line="13" pos:column="27"/></name></name></expr>)<pos:position pos:line="13" pos:column="28"/></condition> <block pos:line="13" pos:column="29">{
  <case pos:line="14" pos:column="3">case <expr><name pos:line="14" pos:column="8">HTTPREQ_GET<pos:position pos:line="14" pos:column="19"/></name></expr>:<pos:position pos:line="14" pos:column="20"/></case>
  <case pos:line="15" pos:column="3">case <expr><name pos:line="15" pos:column="8">HTTPREQ_HEAD<pos:position pos:line="15" pos:column="20"/></name></expr>:<pos:position pos:line="15" pos:column="21"/></case>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">CURLE_OK<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></return>
  <default pos:line="17" pos:column="3">default:<pos:position pos:line="17" pos:column="11"/></default>
    <break pos:line="18" pos:column="5">break;<pos:position pos:line="18" pos:column="11"/></break>
  }<pos:position pos:line="19" pos:column="4"/></block></switch>

  <expr_stmt><expr><name pos:line="21" pos:column="3">bytessent<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <name><name pos:line="21" pos:column="15">http<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">writebytecount<pos:position pos:line="21" pos:column="35"/></name></name></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>

  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><name><name pos:line="23" pos:column="6">conn<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">bits<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">.<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">authneg<pos:position pos:line="23" pos:column="24"/></name></name></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25"> <block pos:line="23" pos:column="26">{
    <comment type="block" pos:line="24" pos:column="5">/* This is a state where we are known to be negotiating and we don't send
       any data then. */</comment>
    <expr_stmt><expr><name pos:line="26" pos:column="5">expectsend<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <literal type="number" pos:line="26" pos:column="18">0<pos:position pos:line="26" pos:column="19"/></literal></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></then>
  <elseif pos:line="28" pos:column="3">else <if pos:line="28" pos:column="8">if<condition pos:line="28" pos:column="10">(<expr><operator pos:line="28" pos:column="11">!<pos:position pos:line="28" pos:column="12"/></operator><name><name pos:line="28" pos:column="12">conn<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">bits<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">.<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">protoconnstart<pos:position pos:line="28" pos:column="37"/></name></name></expr>)<pos:position pos:line="28" pos:column="38"/></condition><then pos:line="28" pos:column="38"> <block pos:line="28" pos:column="39">{
    <comment type="block" pos:line="29" pos:column="5">/* HTTP CONNECT in progress: there is no body */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">expectsend<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if></elseif>
  <else pos:line="32" pos:column="3">else <block pos:line="32" pos:column="8">{
    <comment type="block" pos:line="33" pos:column="5">/* figure out how much data we are expected to send */</comment>
    <switch pos:line="34" pos:column="5">switch<condition pos:line="34" pos:column="11">(<expr><name><name pos:line="34" pos:column="12">data<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">set<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">.<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">httpreq<pos:position pos:line="34" pos:column="29"/></name></name></expr>)<pos:position pos:line="34" pos:column="30"/></condition> <block pos:line="34" pos:column="31">{
    <case pos:line="35" pos:column="5">case <expr><name pos:line="35" pos:column="10">HTTPREQ_POST<pos:position pos:line="35" pos:column="22"/></name></expr>:<pos:position pos:line="35" pos:column="23"/></case>
      <if pos:line="36" pos:column="7">if<condition pos:line="36" pos:column="9">(<expr><name><name pos:line="36" pos:column="10">data<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">set<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">.<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="20">postfieldsize<pos:position pos:line="36" pos:column="33"/></name></name> <operator pos:line="36" pos:column="34">!=<pos:position pos:line="36" pos:column="36"/></operator> <operator pos:line="36" pos:column="37">-<pos:position pos:line="36" pos:column="38"/></operator><literal type="number" pos:line="36" pos:column="38">1<pos:position pos:line="36" pos:column="39"/></literal></expr>)<pos:position pos:line="36" pos:column="40"/></condition><then pos:line="36" pos:column="40">
        <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="9">expectsend<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <name><name pos:line="37" pos:column="22">data<pos:position pos:line="37" pos:column="26"/></name><operator pos:line="37" pos:column="26">-&gt;<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="28">set<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">.<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="32">postfieldsize<pos:position pos:line="37" pos:column="45"/></name></name></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt></block></then>
      <elseif pos:line="38" pos:column="7">else <if pos:line="38" pos:column="12">if<condition pos:line="38" pos:column="14">(<expr><name><name pos:line="38" pos:column="15">data<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">-&gt;<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="21">set<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">.<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="25">postfields<pos:position pos:line="38" pos:column="35"/></name></name></expr>)<pos:position pos:line="38" pos:column="36"/></condition><then pos:line="38" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="9">expectsend<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <operator pos:line="39" pos:column="22">(<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">curl_off_t<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">)<pos:position pos:line="39" pos:column="34"/></operator><call><name pos:line="39" pos:column="34">strlen<pos:position pos:line="39" pos:column="40"/></name><argument_list pos:line="39" pos:column="40">(<argument><expr><name><name pos:line="39" pos:column="41">data<pos:position pos:line="39" pos:column="45"/></name><operator pos:line="39" pos:column="45">-&gt;<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="47">set<pos:position pos:line="39" pos:column="50"/></name><operator pos:line="39" pos:column="50">.<pos:position pos:line="39" pos:column="51"/></operator><name pos:line="39" pos:column="51">postfields<pos:position pos:line="39" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="63"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="40" pos:column="7">break;<pos:position pos:line="40" pos:column="13"/></break>
    <case pos:line="41" pos:column="5">case <expr><name pos:line="41" pos:column="10">HTTPREQ_PUT<pos:position pos:line="41" pos:column="21"/></name></expr>:<pos:position pos:line="41" pos:column="22"/></case>
      <if pos:line="42" pos:column="7">if<condition pos:line="42" pos:column="9">(<expr><name><name pos:line="42" pos:column="10">data<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">state<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">.<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">infilesize<pos:position pos:line="42" pos:column="32"/></name></name> <operator pos:line="42" pos:column="33">!=<pos:position pos:line="42" pos:column="35"/></operator> <operator pos:line="42" pos:column="36">-<pos:position pos:line="42" pos:column="37"/></operator><literal type="number" pos:line="42" pos:column="37">1<pos:position pos:line="42" pos:column="38"/></literal></expr>)<pos:position pos:line="42" pos:column="39"/></condition><then pos:line="42" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="9">expectsend<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <name><name pos:line="43" pos:column="22">data<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">-&gt;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="28">state<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">.<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="34">infilesize<pos:position pos:line="43" pos:column="44"/></name></name></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt></block></then></if>
      <break pos:line="44" pos:column="7">break;<pos:position pos:line="44" pos:column="13"/></break>
    <case pos:line="45" pos:column="5">case <expr><name pos:line="45" pos:column="10">HTTPREQ_POST_FORM<pos:position pos:line="45" pos:column="27"/></name></expr>:<pos:position pos:line="45" pos:column="28"/></case>
      <expr_stmt><expr><name pos:line="46" pos:column="7">expectsend<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">=<pos:position pos:line="46" pos:column="19"/></operator> <name><name pos:line="46" pos:column="20">http<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">postsize<pos:position pos:line="46" pos:column="34"/></name></name></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>
      <break pos:line="47" pos:column="7">break;<pos:position pos:line="47" pos:column="13"/></break>
    <default pos:line="48" pos:column="5">default:<pos:position pos:line="48" pos:column="13"/></default>
      <break pos:line="49" pos:column="7">break;<pos:position pos:line="49" pos:column="13"/></break>
    }<pos:position pos:line="50" pos:column="6"/></block></switch>
  }<pos:position pos:line="51" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name><name pos:line="53" pos:column="3">conn<pos:position pos:line="53" pos:column="7"/></name><operator pos:line="53" pos:column="7">-&gt;<pos:position pos:line="53" pos:column="12"/></operator><name pos:line="53" pos:column="9">bits<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">.<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">rewindaftersend<pos:position pos:line="53" pos:column="29"/></name></name> <operator pos:line="53" pos:column="30">=<pos:position pos:line="53" pos:column="31"/></operator> <name pos:line="53" pos:column="32">FALSE<pos:position pos:line="53" pos:column="37"/></name></expr>;<pos:position pos:line="53" pos:column="38"/></expr_stmt> <comment type="block" pos:line="53" pos:column="39">/* default */</comment>

  <if pos:line="55" pos:column="3">if<condition pos:line="55" pos:column="5">(<expr><operator pos:line="55" pos:column="6">(<pos:position pos:line="55" pos:column="7"/></operator><name pos:line="55" pos:column="7">expectsend<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">==<pos:position pos:line="55" pos:column="20"/></operator> <operator pos:line="55" pos:column="21">-<pos:position pos:line="55" pos:column="22"/></operator><literal type="number" pos:line="55" pos:column="22">1<pos:position pos:line="55" pos:column="23"/></literal><operator pos:line="55" pos:column="23">)<pos:position pos:line="55" pos:column="24"/></operator> <operator pos:line="55" pos:column="25">||<pos:position pos:line="55" pos:column="27"/></operator> <operator pos:line="55" pos:column="28">(<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="29">expectsend<pos:position pos:line="55" pos:column="39"/></name> <operator pos:line="55" pos:column="40">&gt;<pos:position pos:line="55" pos:column="44"/></operator> <name pos:line="55" pos:column="42">bytessent<pos:position pos:line="55" pos:column="51"/></name><operator pos:line="55" pos:column="51">)<pos:position pos:line="55" pos:column="52"/></operator></expr>)<pos:position pos:line="55" pos:column="53"/></condition><then pos:line="55" pos:column="53"> <block pos:line="55" pos:column="54">{
    <if pos:line="56" pos:column="5">if<condition pos:line="56" pos:column="7">(<expr><name><name pos:line="56" pos:column="8">conn<pos:position pos:line="56" pos:column="12"/></name><operator pos:line="56" pos:column="12">-&gt;<pos:position pos:line="56" pos:column="17"/></operator><name pos:line="56" pos:column="14">bits<pos:position pos:line="56" pos:column="18"/></name><operator pos:line="56" pos:column="18">.<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="19">close<pos:position pos:line="56" pos:column="24"/></name></name></expr>)<pos:position pos:line="56" pos:column="25"/></condition><then pos:line="56" pos:column="25">
      <comment type="block" pos:line="57" pos:column="7">/* this is already marked to get closed */</comment>
      <block type="pseudo"><return pos:line="58" pos:column="7">return <expr><name pos:line="58" pos:column="14">CURLE_OK<pos:position pos:line="58" pos:column="22"/></name></expr>;<pos:position pos:line="58" pos:column="23"/></return></block></then></if>

    <if pos:line="60" pos:column="5">if<condition pos:line="60" pos:column="7">(<expr><call><name pos:line="60" pos:column="8">complete_request<pos:position pos:line="60" pos:column="24"/></name><argument_list pos:line="60" pos:column="24">(<argument><expr><name pos:line="60" pos:column="25">conn<pos:position pos:line="60" pos:column="29"/></name></expr></argument>, <argument><expr><call pos:line="60" pos:column="31">(<name pos:line="60" pos:column="32">curl_off_t<pos:position pos:line="60" pos:column="42"/></name>)<argument_list pos:line="60" pos:column="43">(<argument><expr><name pos:line="60" pos:column="44">expectsend<pos:position pos:line="60" pos:column="54"/></name> <operator pos:line="60" pos:column="55">-<pos:position pos:line="60" pos:column="56"/></operator> <name pos:line="60" pos:column="57">bytessent<pos:position pos:line="60" pos:column="66"/></name></expr></argument>)<pos:position pos:line="60" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="69"/></condition><then pos:line="60" pos:column="69">
      <block type="pseudo"><return pos:line="61" pos:column="7">return <expr><name pos:line="61" pos:column="14">CURLE_OK<pos:position pos:line="61" pos:column="22"/></name></expr>;<pos:position pos:line="61" pos:column="23"/></return></block></then></if>

    <comment type="block" pos:line="63" pos:column="5">/* This is not NTLM or many bytes left to send: close */</comment>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">connclose<pos:position pos:line="64" pos:column="14"/></name><argument_list pos:line="64" pos:column="14">(<argument><expr><name pos:line="64" pos:column="15">conn<pos:position pos:line="64" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="21">"Mid-auth HTTP and much data left to send"<pos:position pos:line="64" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="65" pos:column="5">data<pos:position pos:line="65" pos:column="9"/></name><operator pos:line="65" pos:column="9">-&gt;<pos:position pos:line="65" pos:column="14"/></operator><name pos:line="65" pos:column="11">req<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">.<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="15">size<pos:position pos:line="65" pos:column="19"/></name></name> <operator pos:line="65" pos:column="20">=<pos:position pos:line="65" pos:column="21"/></operator> <literal type="number" pos:line="65" pos:column="22">0<pos:position pos:line="65" pos:column="23"/></literal></expr>;<pos:position pos:line="65" pos:column="24"/></expr_stmt> <comment type="block" pos:line="65" pos:column="25">/* don't download any more than 0 bytes */</comment>

    <comment type="block" pos:line="67" pos:column="5">/* There still is data left to send, but this connection is marked for
       closure so we can safely do the rewind right now */</comment>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>

  <if pos:line="71" pos:column="3">if<condition pos:line="71" pos:column="5">(<expr><name pos:line="71" pos:column="6">bytessent<pos:position pos:line="71" pos:column="15"/></name></expr>)<pos:position pos:line="71" pos:column="16"/></condition><then pos:line="71" pos:column="16">
    <comment type="block" pos:line="72" pos:column="5">/* we rewind now at once since we already sent something */</comment>
    <block type="pseudo"><return pos:line="73" pos:column="5">return <expr><call><name pos:line="73" pos:column="12">Curl_readrewind<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><name pos:line="73" pos:column="28">conn<pos:position pos:line="73" pos:column="32"/></name></expr></argument>)<pos:position pos:line="73" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="34"/></return></block></then></if>

  <return pos:line="75" pos:column="3">return <expr><name pos:line="75" pos:column="10">CURLE_OK<pos:position pos:line="75" pos:column="18"/></name></expr>;<pos:position pos:line="75" pos:column="19"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

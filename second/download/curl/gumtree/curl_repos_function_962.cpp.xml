<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_962.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">on_header<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">nghttp2_session<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">session<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">nghttp2_frame<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">frame<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
                     <parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name pos:line="2" pos:column="28">uint8_t<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">name<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">size_t<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">namelen<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
                     <parameter><decl><type><specifier pos:line="3" pos:column="22">const<pos:position pos:line="3" pos:column="27"/></specifier> <name pos:line="3" pos:column="28">uint8_t<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">value<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="44">size_t<pos:position pos:line="3" pos:column="50"/></name></type> <name pos:line="3" pos:column="51">valuelen<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="4" pos:column="22">uint8_t<pos:position pos:line="4" pos:column="29"/></name></type> <name pos:line="4" pos:column="30">flags<pos:position pos:line="4" pos:column="35"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="5" pos:column="22">void<pos:position pos:line="5" pos:column="26"/></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type><name pos:line="5" pos:column="28">userp<pos:position pos:line="5" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="34"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">connectdata<pos:position pos:line="7" pos:column="21"/></name></name> <modifier pos:line="7" pos:column="22">*<pos:position pos:line="7" pos:column="23"/></modifier></type><name pos:line="7" pos:column="23">conn<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><operator pos:line="7" pos:column="30">(<pos:position pos:line="7" pos:column="31"/></operator>struct <name pos:line="7" pos:column="38">connectdata<pos:position pos:line="7" pos:column="49"/></name> <operator pos:line="7" pos:column="50">*<pos:position pos:line="7" pos:column="51"/></operator><operator pos:line="7" pos:column="51">)<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="52">userp<pos:position pos:line="7" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="58"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">http_conn<pos:position pos:line="8" pos:column="19"/></name></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">c<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><operator pos:line="8" pos:column="25">&amp;<pos:position pos:line="8" pos:column="30"/></operator><name><name pos:line="8" pos:column="26">conn<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">-&gt;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="32">proto<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">.<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="38">httpc<pos:position pos:line="8" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">rv<pos:position pos:line="9" pos:column="9"/></name></decl>;<pos:position pos:line="9" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">goodname<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">goodheader<pos:position pos:line="11" pos:column="17"/></name></decl>;<pos:position pos:line="11" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="13" pos:column="3">(<pos:position pos:line="13" pos:column="4"/></operator><name pos:line="13" pos:column="4">void<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">)<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">session<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="14" pos:column="3">(<pos:position pos:line="14" pos:column="4"/></operator><name pos:line="14" pos:column="4">void<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">)<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">frame<pos:position pos:line="14" pos:column="14"/></name></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="15" pos:column="3">(<pos:position pos:line="15" pos:column="4"/></operator><name pos:line="15" pos:column="4">void<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">)<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="9">flags<pos:position pos:line="15" pos:column="14"/></name></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* Ignore PUSH_PROMISE for now */</comment>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><name><name pos:line="18" pos:column="6">frame<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">hd<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">.<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">type<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">!=<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">NGHTTP2_HEADERS<pos:position pos:line="18" pos:column="39"/></name></expr>)<pos:position pos:line="18" pos:column="40"/></condition><then pos:line="18" pos:column="40"> <block pos:line="18" pos:column="41">{
    <return pos:line="19" pos:column="5">return <expr><literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name><name pos:line="22" pos:column="6">frame<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">hd<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">.<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">stream_id<pos:position pos:line="22" pos:column="25"/></name></name> <operator pos:line="22" pos:column="26">!=<pos:position pos:line="22" pos:column="28"/></operator> <name><name pos:line="22" pos:column="29">c<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">stream_id<pos:position pos:line="22" pos:column="41"/></name></name></expr>)<pos:position pos:line="22" pos:column="42"/></condition><then pos:line="22" pos:column="42"> <block pos:line="22" pos:column="43">{
    <return pos:line="23" pos:column="5">return <expr><literal type="number" pos:line="23" pos:column="12">0<pos:position pos:line="23" pos:column="13"/></literal></expr>;<pos:position pos:line="23" pos:column="14"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><name><name pos:line="26" pos:column="6">c<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">bodystarted<pos:position pos:line="26" pos:column="20"/></name></name></expr>)<pos:position pos:line="26" pos:column="21"/></condition><then pos:line="26" pos:column="21"> <block pos:line="26" pos:column="22">{
    <comment type="block" pos:line="27" pos:column="5">/* Ignore trailer or HEADERS not mapped to HTTP semantics.  The
       consequence is handled in on_frame_recv(). */</comment>
    <return pos:line="29" pos:column="5">return <expr><literal type="number" pos:line="29" pos:column="12">0<pos:position pos:line="29" pos:column="13"/></literal></expr>;<pos:position pos:line="29" pos:column="14"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="32" pos:column="3">goodname<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">nghttp2_check_header_name<pos:position pos:line="32" pos:column="39"/></name><argument_list pos:line="32" pos:column="39">(<argument><expr><name pos:line="32" pos:column="40">name<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">namelen<pos:position pos:line="32" pos:column="53"/></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><name pos:line="33" pos:column="3">goodheader<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">nghttp2_check_header_value<pos:position pos:line="33" pos:column="42"/></name><argument_list pos:line="33" pos:column="42">(<argument><expr><name pos:line="33" pos:column="43">value<pos:position pos:line="33" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="50">valuelen<pos:position pos:line="33" pos:column="58"/></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt>

  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><operator pos:line="35" pos:column="6">!<pos:position pos:line="35" pos:column="7"/></operator><name pos:line="35" pos:column="7">goodname<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">||<pos:position pos:line="35" pos:column="18"/></operator> <operator pos:line="35" pos:column="19">!<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="20">goodheader<pos:position pos:line="35" pos:column="30"/></name></expr>)<pos:position pos:line="35" pos:column="31"/></condition><then pos:line="35" pos:column="31"> <block pos:line="35" pos:column="32">{

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">infof<pos:position pos:line="37" pos:column="10"/></name><argument_list pos:line="37" pos:column="10">(<argument><expr><name><name pos:line="37" pos:column="11">conn<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">-&gt;<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="17">data<pos:position pos:line="37" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="23">"Detected bad incoming header %s%s, reset stream!\n"<pos:position pos:line="37" pos:column="75"/></literal></expr></argument>,
          <argument><expr><ternary><condition><expr><name pos:line="38" pos:column="11">goodname<pos:position pos:line="38" pos:column="19"/></name></expr>?<pos:position pos:line="38" pos:column="20"/></condition><then><expr><literal type="string" pos:line="38" pos:column="20">""<pos:position pos:line="38" pos:column="22"/></literal></expr></then><else pos:line="38" pos:column="22">:<expr><literal type="string" pos:line="38" pos:column="23">"name"<pos:position pos:line="38" pos:column="29"/></literal></expr></else></ternary></expr></argument>,
          <argument><expr><ternary><condition><expr><name pos:line="39" pos:column="11">goodheader<pos:position pos:line="39" pos:column="21"/></name></expr>?<pos:position pos:line="39" pos:column="22"/></condition><then><expr><literal type="string" pos:line="39" pos:column="22">""<pos:position pos:line="39" pos:column="24"/></literal></expr></then><else pos:line="39" pos:column="24">:<expr><literal type="string" pos:line="39" pos:column="25">"value"<pos:position pos:line="39" pos:column="32"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="39" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="41" pos:column="5">rv<pos:position pos:line="41" pos:column="7"/></name> <operator pos:line="41" pos:column="8">=<pos:position pos:line="41" pos:column="9"/></operator> <call><name pos:line="41" pos:column="10">nghttp2_submit_rst_stream<pos:position pos:line="41" pos:column="35"/></name><argument_list pos:line="41" pos:column="35">(<argument><expr><name pos:line="41" pos:column="36">session<pos:position pos:line="41" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="45">NGHTTP2_FLAG_NONE<pos:position pos:line="41" pos:column="62"/></name></expr></argument>,
                                   <argument><expr><name><name pos:line="42" pos:column="36">frame<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">-&gt;<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="43">hd<pos:position pos:line="42" pos:column="45"/></name><operator pos:line="42" pos:column="45">.<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="46">stream_id<pos:position pos:line="42" pos:column="55"/></name></name></expr></argument>,
                                   <argument><expr><name pos:line="43" pos:column="36">NGHTTP2_PROTOCOL_ERROR<pos:position pos:line="43" pos:column="58"/></name></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="60"/></expr_stmt>

    <if pos:line="45" pos:column="5">if<condition pos:line="45" pos:column="7">(<expr><call><name pos:line="45" pos:column="8">nghttp2_is_fatal<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">rv<pos:position pos:line="45" pos:column="27"/></name></expr></argument>)<pos:position pos:line="45" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="29"/></condition><then pos:line="45" pos:column="29"> <block pos:line="45" pos:column="30">{
      <return pos:line="46" pos:column="7">return <expr><name pos:line="46" pos:column="14">NGHTTP2_ERR_CALLBACK_FAILURE<pos:position pos:line="46" pos:column="42"/></name></expr>;<pos:position pos:line="46" pos:column="43"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE<pos:position pos:line="49" pos:column="49"/></name></expr>;<pos:position pos:line="49" pos:column="50"/></return>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <if pos:line="52" pos:column="3">if<condition pos:line="52" pos:column="5">(<expr><name pos:line="52" pos:column="6">namelen<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">==<pos:position pos:line="52" pos:column="16"/></operator> <sizeof pos:line="52" pos:column="17">sizeof<argument_list pos:line="52" pos:column="23">(<argument><expr><literal type="string" pos:line="52" pos:column="24">":status"<pos:position pos:line="52" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="34"/></argument_list></sizeof> <operator pos:line="52" pos:column="35">-<pos:position pos:line="52" pos:column="36"/></operator> <literal type="number" pos:line="52" pos:column="37">1<pos:position pos:line="52" pos:column="38"/></literal> <operator pos:line="52" pos:column="39">&amp;&amp;<pos:position pos:line="52" pos:column="49"/></operator>
     <call><name pos:line="53" pos:column="6">memcmp<pos:position pos:line="53" pos:column="12"/></name><argument_list pos:line="53" pos:column="12">(<argument><expr><name pos:line="53" pos:column="13">STATUS<pos:position pos:line="53" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="21">name<pos:position pos:line="53" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="27">namelen<pos:position pos:line="53" pos:column="34"/></name></expr></argument>)<pos:position pos:line="53" pos:column="35"/></argument_list></call> <operator pos:line="53" pos:column="36">==<pos:position pos:line="53" pos:column="38"/></operator> <literal type="number" pos:line="53" pos:column="39">0<pos:position pos:line="53" pos:column="40"/></literal></expr>)<pos:position pos:line="53" pos:column="41"/></condition><then pos:line="53" pos:column="41"> <block pos:line="53" pos:column="42">{

    <comment type="block" pos:line="55" pos:column="5">/* :status must appear exactly once. */</comment>
    <if pos:line="56" pos:column="5">if<condition pos:line="56" pos:column="7">(<expr><name><name pos:line="56" pos:column="8">c<pos:position pos:line="56" pos:column="9"/></name><operator pos:line="56" pos:column="9">-&gt;<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="11">status_code<pos:position pos:line="56" pos:column="22"/></name></name> <operator pos:line="56" pos:column="23">!=<pos:position pos:line="56" pos:column="25"/></operator> <operator pos:line="56" pos:column="26">-<pos:position pos:line="56" pos:column="27"/></operator><literal type="number" pos:line="56" pos:column="27">1<pos:position pos:line="56" pos:column="28"/></literal> <operator pos:line="56" pos:column="29">||<pos:position pos:line="56" pos:column="31"/></operator>
       <operator pos:line="57" pos:column="8">(<pos:position pos:line="57" pos:column="9"/></operator><name><name pos:line="57" pos:column="9">c<pos:position pos:line="57" pos:column="10"/></name><operator pos:line="57" pos:column="10">-&gt;<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="12">status_code<pos:position pos:line="57" pos:column="23"/></name></name> <operator pos:line="57" pos:column="24">=<pos:position pos:line="57" pos:column="25"/></operator> <call><name pos:line="57" pos:column="26">decode_status_code<pos:position pos:line="57" pos:column="44"/></name><argument_list pos:line="57" pos:column="44">(<argument><expr><name pos:line="57" pos:column="45">value<pos:position pos:line="57" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="52">valuelen<pos:position pos:line="57" pos:column="60"/></name></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call><operator pos:line="57" pos:column="61">)<pos:position pos:line="57" pos:column="62"/></operator> <operator pos:line="57" pos:column="63">==<pos:position pos:line="57" pos:column="65"/></operator> <operator pos:line="57" pos:column="66">-<pos:position pos:line="57" pos:column="67"/></operator><literal type="number" pos:line="57" pos:column="67">1<pos:position pos:line="57" pos:column="68"/></literal></expr>)<pos:position pos:line="57" pos:column="69"/></condition><then pos:line="57" pos:column="69"> <block pos:line="57" pos:column="70">{

      <expr_stmt><expr><name pos:line="59" pos:column="7">rv<pos:position pos:line="59" pos:column="9"/></name> <operator pos:line="59" pos:column="10">=<pos:position pos:line="59" pos:column="11"/></operator> <call><name pos:line="59" pos:column="12">nghttp2_submit_rst_stream<pos:position pos:line="59" pos:column="37"/></name><argument_list pos:line="59" pos:column="37">(<argument><expr><name pos:line="59" pos:column="38">session<pos:position pos:line="59" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="47">NGHTTP2_FLAG_NONE<pos:position pos:line="59" pos:column="64"/></name></expr></argument>,
                                     <argument><expr><name><name pos:line="60" pos:column="38">frame<pos:position pos:line="60" pos:column="43"/></name><operator pos:line="60" pos:column="43">-&gt;<pos:position pos:line="60" pos:column="48"/></operator><name pos:line="60" pos:column="45">hd<pos:position pos:line="60" pos:column="47"/></name><operator pos:line="60" pos:column="47">.<pos:position pos:line="60" pos:column="48"/></operator><name pos:line="60" pos:column="48">stream_id<pos:position pos:line="60" pos:column="57"/></name></name></expr></argument>,
                                     <argument><expr><name pos:line="61" pos:column="38">NGHTTP2_PROTOCOL_ERROR<pos:position pos:line="61" pos:column="60"/></name></expr></argument>)<pos:position pos:line="61" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="62"/></expr_stmt>
      <if pos:line="62" pos:column="7">if<condition pos:line="62" pos:column="9">(<expr><call><name pos:line="62" pos:column="10">nghttp2_is_fatal<pos:position pos:line="62" pos:column="26"/></name><argument_list pos:line="62" pos:column="26">(<argument><expr><name pos:line="62" pos:column="27">rv<pos:position pos:line="62" pos:column="29"/></name></expr></argument>)<pos:position pos:line="62" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="31"/></condition><then pos:line="62" pos:column="31"> <block pos:line="62" pos:column="32">{
        <return pos:line="63" pos:column="9">return <expr><name pos:line="63" pos:column="16">NGHTTP2_ERR_CALLBACK_FAILURE<pos:position pos:line="63" pos:column="44"/></name></expr>;<pos:position pos:line="63" pos:column="45"/></return>
      }<pos:position pos:line="64" pos:column="8"/></block></then></if>

      <return pos:line="66" pos:column="7">return <expr><name pos:line="66" pos:column="14">NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE<pos:position pos:line="66" pos:column="51"/></name></expr>;<pos:position pos:line="66" pos:column="52"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="69" pos:column="5">Curl_add_buffer<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><name><name pos:line="69" pos:column="21">c<pos:position pos:line="69" pos:column="22"/></name><operator pos:line="69" pos:column="22">-&gt;<pos:position pos:line="69" pos:column="27"/></operator><name pos:line="69" pos:column="24">header_recvbuf<pos:position pos:line="69" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="40">"HTTP/2.0 "<pos:position pos:line="69" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="53">9<pos:position pos:line="69" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">Curl_add_buffer<pos:position pos:line="70" pos:column="20"/></name><argument_list pos:line="70" pos:column="20">(<argument><expr><name><name pos:line="70" pos:column="21">c<pos:position pos:line="70" pos:column="22"/></name><operator pos:line="70" pos:column="22">-&gt;<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="24">header_recvbuf<pos:position pos:line="70" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="40">value<pos:position pos:line="70" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="47">valuelen<pos:position pos:line="70" pos:column="55"/></name></expr></argument>)<pos:position pos:line="70" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">Curl_add_buffer<pos:position pos:line="71" pos:column="20"/></name><argument_list pos:line="71" pos:column="20">(<argument><expr><name><name pos:line="71" pos:column="21">c<pos:position pos:line="71" pos:column="22"/></name><operator pos:line="71" pos:column="22">-&gt;<pos:position pos:line="71" pos:column="27"/></operator><name pos:line="71" pos:column="24">header_recvbuf<pos:position pos:line="71" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="40">"\r\n"<pos:position pos:line="71" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="48">2<pos:position pos:line="71" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="51"/></expr_stmt>

    <return pos:line="73" pos:column="5">return <expr><literal type="number" pos:line="73" pos:column="12">0<pos:position pos:line="73" pos:column="13"/></literal></expr>;<pos:position pos:line="73" pos:column="14"/></return>
  }<pos:position pos:line="74" pos:column="4"/></block></then>
  <else pos:line="75" pos:column="3">else <block pos:line="75" pos:column="8">{
    <comment type="block" pos:line="76" pos:column="5">/* Here we are sure that namelen &gt; 0 because of
       nghttp2_check_header_name().  Pseudo header other than :status
       is illegal. */</comment>
    <if pos:line="79" pos:column="5">if<condition pos:line="79" pos:column="7">(<expr><name><name pos:line="79" pos:column="8">c<pos:position pos:line="79" pos:column="9"/></name><operator pos:line="79" pos:column="9">-&gt;<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="11">status_code<pos:position pos:line="79" pos:column="22"/></name></name> <operator pos:line="79" pos:column="23">==<pos:position pos:line="79" pos:column="25"/></operator> <operator pos:line="79" pos:column="26">-<pos:position pos:line="79" pos:column="27"/></operator><literal type="number" pos:line="79" pos:column="27">1<pos:position pos:line="79" pos:column="28"/></literal> <operator pos:line="79" pos:column="29">||<pos:position pos:line="79" pos:column="31"/></operator> <name><name pos:line="79" pos:column="32">name<pos:position pos:line="79" pos:column="36"/></name><index pos:line="79" pos:column="36">[<expr><literal type="number" pos:line="79" pos:column="37">0<pos:position pos:line="79" pos:column="38"/></literal></expr>]<pos:position pos:line="79" pos:column="39"/></index></name> <operator pos:line="79" pos:column="40">==<pos:position pos:line="79" pos:column="42"/></operator> <literal type="char" pos:line="79" pos:column="43">':'<pos:position pos:line="79" pos:column="46"/></literal></expr>)<pos:position pos:line="79" pos:column="47"/></condition><then pos:line="79" pos:column="47"> <block pos:line="79" pos:column="48">{
      <expr_stmt><expr><name pos:line="80" pos:column="7">rv<pos:position pos:line="80" pos:column="9"/></name> <operator pos:line="80" pos:column="10">=<pos:position pos:line="80" pos:column="11"/></operator> <call><name pos:line="80" pos:column="12">nghttp2_submit_rst_stream<pos:position pos:line="80" pos:column="37"/></name><argument_list pos:line="80" pos:column="37">(<argument><expr><name pos:line="80" pos:column="38">session<pos:position pos:line="80" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="47">NGHTTP2_FLAG_NONE<pos:position pos:line="80" pos:column="64"/></name></expr></argument>,
                                     <argument><expr><name><name pos:line="81" pos:column="38">frame<pos:position pos:line="81" pos:column="43"/></name><operator pos:line="81" pos:column="43">-&gt;<pos:position pos:line="81" pos:column="48"/></operator><name pos:line="81" pos:column="45">hd<pos:position pos:line="81" pos:column="47"/></name><operator pos:line="81" pos:column="47">.<pos:position pos:line="81" pos:column="48"/></operator><name pos:line="81" pos:column="48">stream_id<pos:position pos:line="81" pos:column="57"/></name></name></expr></argument>,
                                     <argument><expr><name pos:line="82" pos:column="38">NGHTTP2_PROTOCOL_ERROR<pos:position pos:line="82" pos:column="60"/></name></expr></argument>)<pos:position pos:line="82" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="62"/></expr_stmt>
      <if pos:line="83" pos:column="7">if<condition pos:line="83" pos:column="9">(<expr><call><name pos:line="83" pos:column="10">nghttp2_is_fatal<pos:position pos:line="83" pos:column="26"/></name><argument_list pos:line="83" pos:column="26">(<argument><expr><name pos:line="83" pos:column="27">rv<pos:position pos:line="83" pos:column="29"/></name></expr></argument>)<pos:position pos:line="83" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="31"/></condition><then pos:line="83" pos:column="31"> <block pos:line="83" pos:column="32">{
        <return pos:line="84" pos:column="9">return <expr><name pos:line="84" pos:column="16">NGHTTP2_ERR_CALLBACK_FAILURE<pos:position pos:line="84" pos:column="44"/></name></expr>;<pos:position pos:line="84" pos:column="45"/></return>
      }<pos:position pos:line="85" pos:column="8"/></block></then></if>

      <return pos:line="87" pos:column="7">return <expr><name pos:line="87" pos:column="14">NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE<pos:position pos:line="87" pos:column="51"/></name></expr>;<pos:position pos:line="87" pos:column="52"/></return>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="90" pos:column="5">/* convert to a HTTP1-style header */</comment>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">Curl_add_buffer<pos:position pos:line="91" pos:column="20"/></name><argument_list pos:line="91" pos:column="20">(<argument><expr><name><name pos:line="91" pos:column="21">c<pos:position pos:line="91" pos:column="22"/></name><operator pos:line="91" pos:column="22">-&gt;<pos:position pos:line="91" pos:column="27"/></operator><name pos:line="91" pos:column="24">header_recvbuf<pos:position pos:line="91" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="40">name<pos:position pos:line="91" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="46">namelen<pos:position pos:line="91" pos:column="53"/></name></expr></argument>)<pos:position pos:line="91" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">Curl_add_buffer<pos:position pos:line="92" pos:column="20"/></name><argument_list pos:line="92" pos:column="20">(<argument><expr><name><name pos:line="92" pos:column="21">c<pos:position pos:line="92" pos:column="22"/></name><operator pos:line="92" pos:column="22">-&gt;<pos:position pos:line="92" pos:column="27"/></operator><name pos:line="92" pos:column="24">header_recvbuf<pos:position pos:line="92" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="40">":"<pos:position pos:line="92" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="45">1<pos:position pos:line="92" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">Curl_add_buffer<pos:position pos:line="93" pos:column="20"/></name><argument_list pos:line="93" pos:column="20">(<argument><expr><name><name pos:line="93" pos:column="21">c<pos:position pos:line="93" pos:column="22"/></name><operator pos:line="93" pos:column="22">-&gt;<pos:position pos:line="93" pos:column="27"/></operator><name pos:line="93" pos:column="24">header_recvbuf<pos:position pos:line="93" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="40">value<pos:position pos:line="93" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="47">valuelen<pos:position pos:line="93" pos:column="55"/></name></expr></argument>)<pos:position pos:line="93" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="94" pos:column="5">Curl_add_buffer<pos:position pos:line="94" pos:column="20"/></name><argument_list pos:line="94" pos:column="20">(<argument><expr><name><name pos:line="94" pos:column="21">c<pos:position pos:line="94" pos:column="22"/></name><operator pos:line="94" pos:column="22">-&gt;<pos:position pos:line="94" pos:column="27"/></operator><name pos:line="94" pos:column="24">header_recvbuf<pos:position pos:line="94" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="40">"\r\n"<pos:position pos:line="94" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="48">2<pos:position pos:line="94" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="96" pos:column="5">infof<pos:position pos:line="96" pos:column="10"/></name><argument_list pos:line="96" pos:column="10">(<argument><expr><name><name pos:line="96" pos:column="11">conn<pos:position pos:line="96" pos:column="15"/></name><operator pos:line="96" pos:column="15">-&gt;<pos:position pos:line="96" pos:column="20"/></operator><name pos:line="96" pos:column="17">data<pos:position pos:line="96" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="23">"got http2 header: %.*s: %.*s\n"<pos:position pos:line="96" pos:column="55"/></literal></expr></argument>,
          <argument><expr><name pos:line="97" pos:column="11">namelen<pos:position pos:line="97" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="20">name<pos:position pos:line="97" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="26">valuelen<pos:position pos:line="97" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="36">value<pos:position pos:line="97" pos:column="41"/></name></expr></argument>)<pos:position pos:line="97" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="98" pos:column="4"/></block></else></if>

  <return pos:line="100" pos:column="3">return <expr><literal type="number" pos:line="100" pos:column="10">0<pos:position pos:line="100" pos:column="11"/></literal></expr>;<pos:position pos:line="100" pos:column="12"/></return> <comment type="block" pos:line="100" pos:column="13">/* 0 is successful */</comment>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

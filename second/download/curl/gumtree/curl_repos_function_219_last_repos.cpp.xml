<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_219_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">pull_one_url<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">NaN<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">gchar<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">http<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">FILE<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">outfile<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* Stop threads from entering unless j is incremented */</comment>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">pthread_mutex_lock<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><operator pos:line="9" pos:column="22">&amp;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="23">lock<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
  <while pos:line="10" pos:column="3">while<condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">j<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">&lt;<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="13">num_urls<pos:position pos:line="10" pos:column="21"/></name></expr>)<pos:position pos:line="10" pos:column="22"/></condition> <block pos:line="10" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">printf<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="string" pos:line="11" pos:column="12">"j = %d\n"<pos:position pos:line="11" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="24">j<pos:position pos:line="11" pos:column="25"/></name></expr></argument>)<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">http<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator>
      <call><name pos:line="14" pos:column="7">g_strdup_printf<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><literal type="string" pos:line="14" pos:column="23">"xoap.weather.com/weather/local/%s?cc=*&amp;dayf=5&amp;unit=i\n"<pos:position pos:line="14" pos:column="87"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="15" pos:column="23">urls<pos:position pos:line="15" pos:column="27"/></name><index pos:line="15" pos:column="27">[<expr><name pos:line="15" pos:column="28">j<pos:position pos:line="15" pos:column="29"/></name></expr>]<pos:position pos:line="15" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">printf<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="string" pos:line="17" pos:column="12">"http %s"<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="23">http<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name pos:line="19" pos:column="5">curl<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">curl_easy_init<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">()<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><name pos:line="20" pos:column="8">curl<pos:position pos:line="20" pos:column="12"/></name></expr>)<pos:position pos:line="20" pos:column="13"/></condition><then pos:line="20" pos:column="13"> <block pos:line="20" pos:column="14">{

      <expr_stmt><expr><name pos:line="22" pos:column="7">outfile<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">fopen<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name><name pos:line="22" pos:column="23">urls<pos:position pos:line="22" pos:column="27"/></name><index pos:line="22" pos:column="27">[<expr><name pos:line="22" pos:column="28">j<pos:position pos:line="22" pos:column="29"/></name></expr>]<pos:position pos:line="22" pos:column="30"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="32">"wb"<pos:position pos:line="22" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>

      <comment type="block" pos:line="24" pos:column="7">/* Set the URL and transfer type */</comment>
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">curl_easy_setopt<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name pos:line="25" pos:column="24">curl<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="30">CURLOPT_URL<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="43">http<pos:position pos:line="25" pos:column="47"/></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>

      <comment type="block" pos:line="27" pos:column="7">/* Write to the file */</comment>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">curl_easy_setopt<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">curl<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="30">CURLOPT_WRITEDATA<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="49">outfile<pos:position pos:line="28" pos:column="56"/></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">curl_easy_setopt<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name pos:line="29" pos:column="24">curl<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">CURLOPT_WRITEFUNCTION<pos:position pos:line="29" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="53">write_file<pos:position pos:line="29" pos:column="63"/></name></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt>

      <expr_stmt><expr><name pos:line="31" pos:column="7">j<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">++<pos:position pos:line="31" pos:column="10"/></operator></expr>;<pos:position pos:line="31" pos:column="11"/></expr_stmt>  <comment type="block" pos:line="31" pos:column="13">/* critical line */</comment>
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">pthread_mutex_unlock<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><operator pos:line="32" pos:column="28">&amp;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="29">lock<pos:position pos:line="32" pos:column="33"/></name></expr></argument>)<pos:position pos:line="32" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt>

      <expr_stmt><expr><name pos:line="34" pos:column="7">res<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <call><name pos:line="34" pos:column="13">curl_easy_perform<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">curl<pos:position pos:line="34" pos:column="35"/></name></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="36" pos:column="7">fclose<pos:position pos:line="36" pos:column="13"/></name><argument_list pos:line="36" pos:column="13">(<argument><expr><name pos:line="36" pos:column="14">outfile<pos:position pos:line="36" pos:column="21"/></name></expr></argument>)<pos:position pos:line="36" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">printf<pos:position pos:line="37" pos:column="13"/></name><argument_list pos:line="37" pos:column="13">(<argument><expr><literal type="string" pos:line="37" pos:column="14">"fclose\n"<pos:position pos:line="37" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="39" pos:column="7">curl_easy_cleanup<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><name pos:line="39" pos:column="25">curl<pos:position pos:line="39" pos:column="29"/></name></expr></argument>)<pos:position pos:line="39" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">g_free<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name pos:line="41" pos:column="12">http<pos:position pos:line="41" pos:column="16"/></name></expr></argument>)<pos:position pos:line="41" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="43" pos:column="5">/* Adds more latency, testing the mutex.*/</comment>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">sleep<pos:position pos:line="44" pos:column="10"/></name><argument_list pos:line="44" pos:column="10">(<argument><expr><literal type="number" pos:line="44" pos:column="11">1<pos:position pos:line="44" pos:column="12"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="14"/></expr_stmt>

  }<pos:position pos:line="46" pos:column="4"/></block></while> <comment type="block" pos:line="46" pos:column="5">/* end while */</comment>
  <return pos:line="47" pos:column="3">return <expr><name pos:line="47" pos:column="10">NULL<pos:position pos:line="47" pos:column="14"/></name></expr>;<pos:position pos:line="47" pos:column="15"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

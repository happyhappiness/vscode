<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_488_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">cert_hostcheck<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">char<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">match_pattern<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">hostname<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><operator pos:line="4" pos:column="6">!<pos:position pos:line="4" pos:column="7"/></operator><name pos:line="4" pos:column="7">match_pattern<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">||<pos:position pos:line="4" pos:column="23"/></operator> <operator pos:line="4" pos:column="24">!<pos:position pos:line="4" pos:column="25"/></operator><operator pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">match_pattern<pos:position pos:line="4" pos:column="39"/></name> <operator pos:line="4" pos:column="40">||<pos:position pos:line="4" pos:column="42"/></operator>
      <operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">hostname<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">||<pos:position pos:line="5" pos:column="19"/></operator> <operator pos:line="5" pos:column="20">!<pos:position pos:line="5" pos:column="21"/></operator><operator pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">hostname<pos:position pos:line="5" pos:column="30"/></name></expr>)<pos:position pos:line="5" pos:column="31"/></condition><then pos:line="5" pos:column="31"> <comment type="block" pos:line="5" pos:column="32">/* sanity check */</comment>
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><literal type="number" pos:line="6" pos:column="12">0<pos:position pos:line="6" pos:column="13"/></literal></expr>;<pos:position pos:line="6" pos:column="14"/></return></block></then></if>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><call><name pos:line="8" pos:column="6">curl_strequal<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">hostname<pos:position pos:line="8" pos:column="28"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="29">match_pattern<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44"> <comment type="block" pos:line="8" pos:column="45">/* trivial case */</comment>
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">1<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return></block></then></if>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><call><name pos:line="11" pos:column="6">hostmatch<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">hostname<pos:position pos:line="11" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="25">match_pattern<pos:position pos:line="11" pos:column="38"/></name></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call> <operator pos:line="11" pos:column="40">==<pos:position pos:line="11" pos:column="42"/></operator> <name pos:line="11" pos:column="43">HOST_MATCH<pos:position pos:line="11" pos:column="53"/></name></expr>)<pos:position pos:line="11" pos:column="54"/></condition><then pos:line="11" pos:column="54">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><literal type="number" pos:line="12" pos:column="12">1<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></return></block></then></if>
  <return pos:line="13" pos:column="3">return <expr><literal type="number" pos:line="13" pos:column="10">0<pos:position pos:line="13" pos:column="11"/></literal></expr>;<pos:position pos:line="13" pos:column="12"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

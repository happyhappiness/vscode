<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_582_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">progress_callback<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">clientp<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">double<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">dltotal<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">double<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">dlnow<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">double<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">ultotal<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">double<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">ulnow<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">moo<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><call><name pos:line="4" pos:column="15">fopen<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">libtest_arg2<pos:position pos:line="4" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="35">"wb"<pos:position pos:line="4" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="6" pos:column="3">(<pos:position pos:line="6" pos:column="4"/></operator><name pos:line="6" pos:column="4">void<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">)<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">clientp<pos:position pos:line="6" pos:column="16"/></name></expr>;<pos:position pos:line="6" pos:column="17"/></expr_stmt> <comment type="block" pos:line="6" pos:column="18">/* UNUSED */</comment>
  <expr_stmt><expr><operator pos:line="7" pos:column="3">(<pos:position pos:line="7" pos:column="4"/></operator><name pos:line="7" pos:column="4">void<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">)<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">dltotal<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt> <comment type="block" pos:line="7" pos:column="18">/* UNUSED */</comment>
  <expr_stmt><expr><operator pos:line="8" pos:column="3">(<pos:position pos:line="8" pos:column="4"/></operator><name pos:line="8" pos:column="4">void<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">)<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">dlnow<pos:position pos:line="8" pos:column="14"/></name></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt> <comment type="block" pos:line="8" pos:column="16">/* UNUSED */</comment>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name pos:line="10" pos:column="6">moo<pos:position pos:line="10" pos:column="9"/></name></expr>)<pos:position pos:line="10" pos:column="10"/></condition><then pos:line="10" pos:column="10"> <block pos:line="10" pos:column="11">{
    <if pos:line="11" pos:column="5">if<condition pos:line="11" pos:column="7">(<expr><operator pos:line="11" pos:column="8">(<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">size_t<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">ultotal<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">==<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">data_size<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">&amp;&amp;<pos:position pos:line="11" pos:column="47"/></operator> <operator pos:line="11" pos:column="40">(<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">size_t<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">)<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">ulnow<pos:position pos:line="11" pos:column="53"/></name> <operator pos:line="11" pos:column="54">==<pos:position pos:line="11" pos:column="56"/></operator> <name pos:line="11" pos:column="57">data_size<pos:position pos:line="11" pos:column="66"/></name></expr>)<pos:position pos:line="11" pos:column="67"/></condition><then pos:line="11" pos:column="67">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="7">fprintf<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">moo<pos:position pos:line="12" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="20">"PASSED, UL data matched data size\n"<pos:position pos:line="12" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt></block></then>
    <else pos:line="13" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="7">fprintf<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">moo<pos:position pos:line="14" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="20">"Progress callback called with UL %f out of %f\n"<pos:position pos:line="14" pos:column="69"/></literal></expr></argument>,
              <argument><expr><name pos:line="15" pos:column="15">ulnow<pos:position pos:line="15" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="22">ultotal<pos:position pos:line="15" pos:column="29"/></name></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">fclose<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">moo<pos:position pos:line="16" pos:column="15"/></name></expr></argument>)<pos:position pos:line="16" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
  <return pos:line="18" pos:column="3">return <expr><literal type="number" pos:line="18" pos:column="10">0<pos:position pos:line="18" pos:column="11"/></literal></expr>;<pos:position pos:line="18" pos:column="12"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

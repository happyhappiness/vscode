<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_484_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">res<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLM<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">m<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><name pos:line="4" pos:column="14">NULL<pos:position pos:line="4" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLMsg<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">msg<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt> <comment type="block" pos:line="5" pos:column="17">/* for picking up messages with the transfer status */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">msgs_left<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt> <comment type="block" pos:line="6" pos:column="18">/* how many messages are left */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">running<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">handlenum<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">timeval<pos:position pos:line="9" pos:column="17"/></name></name></type> <name pos:line="9" pos:column="18">last_handle_add<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><call><name pos:line="11" pos:column="6">parse_url_file<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">libtest_arg2<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call> <operator pos:line="11" pos:column="35">&lt;=<pos:position pos:line="11" pos:column="40"/></operator> <literal type="number" pos:line="11" pos:column="38">0<pos:position pos:line="11" pos:column="39"/></literal></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40">
    <block type="pseudo"><goto pos:line="12" pos:column="5">goto <name pos:line="12" pos:column="10">test_cleanup<pos:position pos:line="12" pos:column="22"/></name>;<pos:position pos:line="12" pos:column="23"/></goto></block></then></if>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">start_test_timing<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">()<pos:position pos:line="14" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">curl_global_init<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">CURL_GLOBAL_ALL<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">multi_init<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><name pos:line="18" pos:column="14">m<pos:position pos:line="18" pos:column="15"/></name></expr></argument>)<pos:position pos:line="18" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">create_handles<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">()<pos:position pos:line="20" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">multi_setopt<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><name pos:line="22" pos:column="16">m<pos:position pos:line="22" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="19">CURLMOPT_PIPELINING<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="40">1L<pos:position pos:line="22" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">multi_setopt<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">m<pos:position pos:line="23" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="19">CURLMOPT_MAX_HOST_CONNECTIONS<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="50">2L<pos:position pos:line="23" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">multi_setopt<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">m<pos:position pos:line="24" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="19">CURLMOPT_MAX_PIPELINE_LENGTH<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="49">3L<pos:position pos:line="24" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">multi_setopt<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><name pos:line="25" pos:column="16">m<pos:position pos:line="25" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="19">CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE<pos:position pos:line="25" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="57">15000L<pos:position pos:line="25" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">multi_setopt<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">m<pos:position pos:line="26" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="19">CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE<pos:position pos:line="26" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="55">10000L<pos:position pos:line="26" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="63"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">multi_setopt<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">m<pos:position pos:line="28" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="19">CURLMOPT_PIPELINING_SITE_BL<pos:position pos:line="28" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="48">site_blacklist<pos:position pos:line="28" pos:column="62"/></name></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">multi_setopt<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name pos:line="29" pos:column="16">m<pos:position pos:line="29" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="19">CURLMOPT_PIPELINING_SERVER_BL<pos:position pos:line="29" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="50">server_blacklist<pos:position pos:line="29" pos:column="66"/></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="68"/></expr_stmt>

  <expr_stmt><expr><name pos:line="31" pos:column="3">last_handle_add<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <call><name pos:line="31" pos:column="21">tutil_tvnow<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">()<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>

  <for pos:line="33" pos:column="3">for<control pos:line="33" pos:column="6">(<init pos:line="33" pos:column="7">;<pos:position pos:line="33" pos:column="8"/></init><condition pos:line="33" pos:column="8">;<pos:position pos:line="33" pos:column="9"/></condition><incr/>)<pos:position pos:line="33" pos:column="10"/></control> <block pos:line="33" pos:column="11">{
    <decl_stmt><decl><type><name><name pos:line="34" pos:column="5">struct<pos:position pos:line="34" pos:column="11"/></name> <name pos:line="34" pos:column="12">timeval<pos:position pos:line="34" pos:column="19"/></name></name></type> <name pos:line="34" pos:column="20">interval<pos:position pos:line="34" pos:column="28"/></name></decl>;<pos:position pos:line="34" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="35" pos:column="5">struct<pos:position pos:line="35" pos:column="11"/></name> <name pos:line="35" pos:column="12">timeval<pos:position pos:line="35" pos:column="19"/></name></name></type> <name pos:line="35" pos:column="20">now<pos:position pos:line="35" pos:column="23"/></name></decl>;<pos:position pos:line="35" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">fd_set<pos:position pos:line="36" pos:column="11"/></name></type> <name pos:line="36" pos:column="12">rd<pos:position pos:line="36" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="36" pos:column="16">wr<pos:position pos:line="36" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="36" pos:column="20">exc<pos:position pos:line="36" pos:column="23"/></name></decl>;<pos:position pos:line="36" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">int<pos:position pos:line="37" pos:column="8"/></name></type> <name pos:line="37" pos:column="9">maxfd<pos:position pos:line="37" pos:column="14"/></name> <init pos:line="37" pos:column="15">= <expr><operator pos:line="37" pos:column="17">-<pos:position pos:line="37" pos:column="18"/></operator><literal type="number" pos:line="37" pos:column="18">99<pos:position pos:line="37" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="37" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">long<pos:position pos:line="38" pos:column="9"/></name></type> <name pos:line="38" pos:column="10">timeout<pos:position pos:line="38" pos:column="17"/></name></decl>;<pos:position pos:line="38" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="40" pos:column="5">interval<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">.<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">tv_sec<pos:position pos:line="40" pos:column="20"/></name></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <literal type="number" pos:line="40" pos:column="23">1<pos:position pos:line="40" pos:column="24"/></literal></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">interval<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">.<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">tv_usec<pos:position pos:line="41" pos:column="21"/></name></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <literal type="number" pos:line="41" pos:column="24">0<pos:position pos:line="41" pos:column="25"/></literal></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>

    <if pos:line="43" pos:column="5">if<condition pos:line="43" pos:column="7">(<expr><name pos:line="43" pos:column="8">handlenum<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">&lt;<pos:position pos:line="43" pos:column="22"/></operator> <name pos:line="43" pos:column="20">num_handles<pos:position pos:line="43" pos:column="31"/></name></expr>)<pos:position pos:line="43" pos:column="32"/></condition><then pos:line="43" pos:column="32"> <block pos:line="43" pos:column="33">{
      <expr_stmt><expr><name pos:line="44" pos:column="7">now<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <call><name pos:line="44" pos:column="13">tutil_tvnow<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">()<pos:position pos:line="44" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>
      <if pos:line="45" pos:column="7">if<condition pos:line="45" pos:column="9">(<expr><call><name pos:line="45" pos:column="10">tutil_tvdiff<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">now<pos:position pos:line="45" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="28">last_handle_add<pos:position pos:line="45" pos:column="43"/></name></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call> <operator pos:line="45" pos:column="45">&gt;=<pos:position pos:line="45" pos:column="50"/></operator> <name><name pos:line="45" pos:column="48">urltime<pos:position pos:line="45" pos:column="55"/></name><index pos:line="45" pos:column="55">[<expr><name pos:line="45" pos:column="56">handlenum<pos:position pos:line="45" pos:column="65"/></name></expr>]<pos:position pos:line="45" pos:column="66"/></index></name></expr>)<pos:position pos:line="45" pos:column="67"/></condition><then pos:line="45" pos:column="67"> <block pos:line="45" pos:column="68">{
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">fprintf<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">stdout<pos:position pos:line="46" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="25">"Adding handle %d\n"<pos:position pos:line="46" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="47">handlenum<pos:position pos:line="46" pos:column="56"/></name></expr></argument>)<pos:position pos:line="46" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">setup_handle<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">URL<pos:position pos:line="47" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="27">m<pos:position pos:line="47" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="30">handlenum<pos:position pos:line="47" pos:column="39"/></name></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="48" pos:column="9">last_handle_add<pos:position pos:line="48" pos:column="24"/></name> <operator pos:line="48" pos:column="25">=<pos:position pos:line="48" pos:column="26"/></operator> <name pos:line="48" pos:column="27">now<pos:position pos:line="48" pos:column="30"/></name></expr>;<pos:position pos:line="48" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">handlenum<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">++<pos:position pos:line="49" pos:column="20"/></operator></expr>;<pos:position pos:line="49" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="50" pos:column="8"/></block></then></if>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="53" pos:column="5">curl_multi_perform<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">m<pos:position pos:line="53" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="27">&amp;<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="28">running<pos:position pos:line="53" pos:column="35"/></name></expr></argument>)<pos:position pos:line="53" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="55" pos:column="5">abort_on_test_timeout<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">()<pos:position pos:line="55" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="57" pos:column="5">/* See how the transfers went */</comment>
    <do pos:line="58" pos:column="5">do <block pos:line="58" pos:column="8">{
      <expr_stmt><expr><name pos:line="59" pos:column="7">msg<pos:position pos:line="59" pos:column="10"/></name> <operator pos:line="59" pos:column="11">=<pos:position pos:line="59" pos:column="12"/></operator> <call><name pos:line="59" pos:column="13">curl_multi_info_read<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><name pos:line="59" pos:column="34">m<pos:position pos:line="59" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="37">&amp;<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="38">msgs_left<pos:position pos:line="59" pos:column="47"/></name></expr></argument>)<pos:position pos:line="59" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="49"/></expr_stmt>
      <if pos:line="60" pos:column="7">if<condition pos:line="60" pos:column="9">(<expr><name pos:line="60" pos:column="10">msg<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">&amp;&amp;<pos:position pos:line="60" pos:column="24"/></operator> <name><name pos:line="60" pos:column="17">msg<pos:position pos:line="60" pos:column="20"/></name><operator pos:line="60" pos:column="20">-&gt;<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="22">msg<pos:position pos:line="60" pos:column="25"/></name></name> <operator pos:line="60" pos:column="26">==<pos:position pos:line="60" pos:column="28"/></operator> <name pos:line="60" pos:column="29">CURLMSG_DONE<pos:position pos:line="60" pos:column="41"/></name></expr>)<pos:position pos:line="60" pos:column="42"/></condition><then pos:line="60" pos:column="42"> <block pos:line="60" pos:column="43">{
        <decl_stmt><decl><type><name pos:line="61" pos:column="9">int<pos:position pos:line="61" pos:column="12"/></name></type> <name pos:line="61" pos:column="13">i<pos:position pos:line="61" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="61" pos:column="16">found<pos:position pos:line="61" pos:column="21"/></name> <init pos:line="61" pos:column="22">= <expr><literal type="number" pos:line="61" pos:column="24">0<pos:position pos:line="61" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="61" pos:column="26"/></decl_stmt>

        <comment type="block" pos:line="63" pos:column="9">/* Find out which handle this message is about */</comment>
        <for pos:line="64" pos:column="9">for<control pos:line="64" pos:column="12">(<init><expr><name pos:line="64" pos:column="13">i<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <literal type="number" pos:line="64" pos:column="17">0<pos:position pos:line="64" pos:column="18"/></literal></expr>;<pos:position pos:line="64" pos:column="19"/></init> <condition><expr><name pos:line="64" pos:column="20">i<pos:position pos:line="64" pos:column="21"/></name> <operator pos:line="64" pos:column="22">&lt;<pos:position pos:line="64" pos:column="26"/></operator> <name pos:line="64" pos:column="24">num_handles<pos:position pos:line="64" pos:column="35"/></name></expr>;<pos:position pos:line="64" pos:column="36"/></condition> <incr><expr><name pos:line="64" pos:column="37">i<pos:position pos:line="64" pos:column="38"/></name><operator pos:line="64" pos:column="38">++<pos:position pos:line="64" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="64" pos:column="41"/></control> <block pos:line="64" pos:column="42">{
          <expr_stmt><expr><name pos:line="65" pos:column="11">found<pos:position pos:line="65" pos:column="16"/></name> <operator pos:line="65" pos:column="17">=<pos:position pos:line="65" pos:column="18"/></operator> <operator pos:line="65" pos:column="19">(<pos:position pos:line="65" pos:column="20"/></operator><name><name pos:line="65" pos:column="20">msg<pos:position pos:line="65" pos:column="23"/></name><operator pos:line="65" pos:column="23">-&gt;<pos:position pos:line="65" pos:column="28"/></operator><name pos:line="65" pos:column="25">easy_handle<pos:position pos:line="65" pos:column="36"/></name></name> <operator pos:line="65" pos:column="37">==<pos:position pos:line="65" pos:column="39"/></operator> <name><name pos:line="65" pos:column="40">handles<pos:position pos:line="65" pos:column="47"/></name><index pos:line="65" pos:column="47">[<expr><name pos:line="65" pos:column="48">i<pos:position pos:line="65" pos:column="49"/></name></expr>]<pos:position pos:line="65" pos:column="50"/></index></name><operator pos:line="65" pos:column="50">)<pos:position pos:line="65" pos:column="51"/></operator></expr>;<pos:position pos:line="65" pos:column="52"/></expr_stmt>
          <if pos:line="66" pos:column="11">if<condition pos:line="66" pos:column="13">(<expr><name pos:line="66" pos:column="14">found<pos:position pos:line="66" pos:column="19"/></name></expr>)<pos:position pos:line="66" pos:column="20"/></condition><then pos:line="66" pos:column="20">
            <block type="pseudo"><break pos:line="67" pos:column="13">break;<pos:position pos:line="67" pos:column="19"/></break></block></then></if>
        }<pos:position pos:line="68" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="70" pos:column="9">printf<pos:position pos:line="70" pos:column="15"/></name><argument_list pos:line="70" pos:column="15">(<argument><expr><literal type="string" pos:line="70" pos:column="16">"Handle %d Completed with status %d\n"<pos:position pos:line="70" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="56">i<pos:position pos:line="70" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="59">msg<pos:position pos:line="70" pos:column="62"/></name><operator pos:line="70" pos:column="62">-&gt;<pos:position pos:line="70" pos:column="67"/></operator><name pos:line="70" pos:column="64">data<pos:position pos:line="70" pos:column="68"/></name><operator pos:line="70" pos:column="68">.<pos:position pos:line="70" pos:column="69"/></operator><name pos:line="70" pos:column="69">result<pos:position pos:line="70" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">curl_multi_remove_handle<pos:position pos:line="71" pos:column="33"/></name><argument_list pos:line="71" pos:column="33">(<argument><expr><name pos:line="71" pos:column="34">m<pos:position pos:line="71" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="37">handles<pos:position pos:line="71" pos:column="44"/></name><index pos:line="71" pos:column="44">[<expr><name pos:line="71" pos:column="45">i<pos:position pos:line="71" pos:column="46"/></name></expr>]<pos:position pos:line="71" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="71" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="49"/></expr_stmt>
      }<pos:position pos:line="72" pos:column="8"/></block></then></if>
    }<pos:position pos:line="73" pos:column="6"/></block> while<condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">msg<pos:position pos:line="73" pos:column="16"/></name></expr>)<pos:position pos:line="73" pos:column="17"/></condition>;<pos:position pos:line="73" pos:column="18"/></do>

    <if pos:line="75" pos:column="5">if<condition pos:line="75" pos:column="7">(<expr><name pos:line="75" pos:column="8">handlenum<pos:position pos:line="75" pos:column="17"/></name> <operator pos:line="75" pos:column="18">==<pos:position pos:line="75" pos:column="20"/></operator> <name pos:line="75" pos:column="21">num_handles<pos:position pos:line="75" pos:column="32"/></name> <operator pos:line="75" pos:column="33">&amp;&amp;<pos:position pos:line="75" pos:column="43"/></operator> <operator pos:line="75" pos:column="36">!<pos:position pos:line="75" pos:column="37"/></operator><name pos:line="75" pos:column="37">running<pos:position pos:line="75" pos:column="44"/></name></expr>)<pos:position pos:line="75" pos:column="45"/></condition><then pos:line="75" pos:column="45"> <block pos:line="75" pos:column="46">{
      <break pos:line="76" pos:column="7">break;<pos:position pos:line="76" pos:column="13"/></break> <comment type="block" pos:line="76" pos:column="14">/* done */</comment>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="79" pos:column="5">FD_ZERO<pos:position pos:line="79" pos:column="12"/></name><argument_list pos:line="79" pos:column="12">(<argument><expr><operator pos:line="79" pos:column="13">&amp;<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="14">rd<pos:position pos:line="79" pos:column="16"/></name></expr></argument>)<pos:position pos:line="79" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">FD_ZERO<pos:position pos:line="80" pos:column="12"/></name><argument_list pos:line="80" pos:column="12">(<argument><expr><operator pos:line="80" pos:column="13">&amp;<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="14">wr<pos:position pos:line="80" pos:column="16"/></name></expr></argument>)<pos:position pos:line="80" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">FD_ZERO<pos:position pos:line="81" pos:column="12"/></name><argument_list pos:line="81" pos:column="12">(<argument><expr><operator pos:line="81" pos:column="13">&amp;<pos:position pos:line="81" pos:column="18"/></operator><name pos:line="81" pos:column="14">exc<pos:position pos:line="81" pos:column="17"/></name></expr></argument>)<pos:position pos:line="81" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="83" pos:column="5">curl_multi_fdset<pos:position pos:line="83" pos:column="21"/></name><argument_list pos:line="83" pos:column="21">(<argument><expr><name pos:line="83" pos:column="22">m<pos:position pos:line="83" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="25">&amp;<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="26">rd<pos:position pos:line="83" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="30">&amp;<pos:position pos:line="83" pos:column="35"/></operator><name pos:line="83" pos:column="31">wr<pos:position pos:line="83" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="35">&amp;<pos:position pos:line="83" pos:column="40"/></operator><name pos:line="83" pos:column="36">exc<pos:position pos:line="83" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="41">&amp;<pos:position pos:line="83" pos:column="46"/></operator><name pos:line="83" pos:column="42">maxfd<pos:position pos:line="83" pos:column="47"/></name></expr></argument>)<pos:position pos:line="83" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="85" pos:column="5">/* At this point, maxfd is guaranteed to be greater or equal than -1. */</comment>

    <expr_stmt><expr><call><name pos:line="87" pos:column="5">curl_multi_timeout<pos:position pos:line="87" pos:column="23"/></name><argument_list pos:line="87" pos:column="23">(<argument><expr><name pos:line="87" pos:column="24">m<pos:position pos:line="87" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="27">&amp;<pos:position pos:line="87" pos:column="32"/></operator><name pos:line="87" pos:column="28">timeout<pos:position pos:line="87" pos:column="35"/></name></expr></argument>)<pos:position pos:line="87" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="37"/></expr_stmt>

    <if pos:line="89" pos:column="5">if<condition pos:line="89" pos:column="7">(<expr><name pos:line="89" pos:column="8">timeout<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">&lt;<pos:position pos:line="89" pos:column="20"/></operator> <literal type="number" pos:line="89" pos:column="18">0<pos:position pos:line="89" pos:column="19"/></literal></expr>)<pos:position pos:line="89" pos:column="20"/></condition><then pos:line="89" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="90" pos:column="7">timeout<pos:position pos:line="90" pos:column="14"/></name> <operator pos:line="90" pos:column="15">=<pos:position pos:line="90" pos:column="16"/></operator> <literal type="number" pos:line="90" pos:column="17">1<pos:position pos:line="90" pos:column="18"/></literal></expr>;<pos:position pos:line="90" pos:column="19"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="92" pos:column="5">interval<pos:position pos:line="92" pos:column="13"/></name><operator pos:line="92" pos:column="13">.<pos:position pos:line="92" pos:column="14"/></operator><name pos:line="92" pos:column="14">tv_sec<pos:position pos:line="92" pos:column="20"/></name></name> <operator pos:line="92" pos:column="21">=<pos:position pos:line="92" pos:column="22"/></operator> <name pos:line="92" pos:column="23">timeout<pos:position pos:line="92" pos:column="30"/></name> <operator pos:line="92" pos:column="31">/<pos:position pos:line="92" pos:column="32"/></operator> <literal type="number" pos:line="92" pos:column="33">1000<pos:position pos:line="92" pos:column="37"/></literal></expr>;<pos:position pos:line="92" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="93" pos:column="5">interval<pos:position pos:line="93" pos:column="13"/></name><operator pos:line="93" pos:column="13">.<pos:position pos:line="93" pos:column="14"/></operator><name pos:line="93" pos:column="14">tv_usec<pos:position pos:line="93" pos:column="21"/></name></name> <operator pos:line="93" pos:column="22">=<pos:position pos:line="93" pos:column="23"/></operator> <operator pos:line="93" pos:column="24">(<pos:position pos:line="93" pos:column="25"/></operator><name pos:line="93" pos:column="25">timeout<pos:position pos:line="93" pos:column="32"/></name> <operator pos:line="93" pos:column="33">%<pos:position pos:line="93" pos:column="34"/></operator> <literal type="number" pos:line="93" pos:column="35">1000<pos:position pos:line="93" pos:column="39"/></literal><operator pos:line="93" pos:column="39">)<pos:position pos:line="93" pos:column="40"/></operator> <operator pos:line="93" pos:column="41">*<pos:position pos:line="93" pos:column="42"/></operator> <literal type="number" pos:line="93" pos:column="43">1000<pos:position pos:line="93" pos:column="47"/></literal></expr>;<pos:position pos:line="93" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="95" pos:column="5">interval<pos:position pos:line="95" pos:column="13"/></name><operator pos:line="95" pos:column="13">.<pos:position pos:line="95" pos:column="14"/></operator><name pos:line="95" pos:column="14">tv_sec<pos:position pos:line="95" pos:column="20"/></name></name> <operator pos:line="95" pos:column="21">=<pos:position pos:line="95" pos:column="22"/></operator> <literal type="number" pos:line="95" pos:column="23">0<pos:position pos:line="95" pos:column="24"/></literal></expr>;<pos:position pos:line="95" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="96" pos:column="5">interval<pos:position pos:line="96" pos:column="13"/></name><operator pos:line="96" pos:column="13">.<pos:position pos:line="96" pos:column="14"/></operator><name pos:line="96" pos:column="14">tv_usec<pos:position pos:line="96" pos:column="21"/></name></name> <operator pos:line="96" pos:column="22">=<pos:position pos:line="96" pos:column="23"/></operator> <literal type="number" pos:line="96" pos:column="24">1000<pos:position pos:line="96" pos:column="28"/></literal></expr>;<pos:position pos:line="96" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="98" pos:column="5">select_test<pos:position pos:line="98" pos:column="16"/></name><argument_list pos:line="98" pos:column="16">(<argument><expr><name pos:line="98" pos:column="17">maxfd<pos:position pos:line="98" pos:column="22"/></name> <operator pos:line="98" pos:column="23">+<pos:position pos:line="98" pos:column="24"/></operator> <literal type="number" pos:line="98" pos:column="25">1<pos:position pos:line="98" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="98" pos:column="28">&amp;<pos:position pos:line="98" pos:column="33"/></operator><name pos:line="98" pos:column="29">rd<pos:position pos:line="98" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="33">&amp;<pos:position pos:line="98" pos:column="38"/></operator><name pos:line="98" pos:column="34">wr<pos:position pos:line="98" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="38">&amp;<pos:position pos:line="98" pos:column="43"/></operator><name pos:line="98" pos:column="39">exc<pos:position pos:line="98" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="44">&amp;<pos:position pos:line="98" pos:column="49"/></operator><name pos:line="98" pos:column="45">interval<pos:position pos:line="98" pos:column="53"/></name></expr></argument>)<pos:position pos:line="98" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="55"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="100" pos:column="5">abort_on_test_timeout<pos:position pos:line="100" pos:column="26"/></name><argument_list pos:line="100" pos:column="26">()<pos:position pos:line="100" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="101" pos:column="4"/></block></for>

<label><name pos:line="103" pos:column="1">test_cleanup<pos:position pos:line="103" pos:column="13"/></name>:<pos:position pos:line="103" pos:column="14"/></label>

  <expr_stmt><expr><call><name pos:line="105" pos:column="3">remove_handles<pos:position pos:line="105" pos:column="17"/></name><argument_list pos:line="105" pos:column="17">()<pos:position pos:line="105" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="20"/></expr_stmt>

  <comment type="block" pos:line="107" pos:column="3">/* undocumented cleanup sequence - type UB */</comment>

  <expr_stmt><expr><call><name pos:line="109" pos:column="3">curl_multi_cleanup<pos:position pos:line="109" pos:column="21"/></name><argument_list pos:line="109" pos:column="21">(<argument><expr><name pos:line="109" pos:column="22">m<pos:position pos:line="109" pos:column="23"/></name></expr></argument>)<pos:position pos:line="109" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="110" pos:column="3">curl_global_cleanup<pos:position pos:line="110" pos:column="22"/></name><argument_list pos:line="110" pos:column="22">()<pos:position pos:line="110" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="112" pos:column="3">free_urls<pos:position pos:line="112" pos:column="12"/></name><argument_list pos:line="112" pos:column="12">()<pos:position pos:line="112" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="15"/></expr_stmt>
  <return pos:line="113" pos:column="3">return <expr><name pos:line="113" pos:column="10">res<pos:position pos:line="113" pos:column="13"/></name></expr>;<pos:position pos:line="113" pos:column="14"/></return>
}<pos:position pos:line="114" pos:column="2"/></block></function></unit>

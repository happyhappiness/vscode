<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_362_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">curl_version_info_data<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type>
<name pos:line="2" pos:column="1">curl_version_info_ccsid<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">CURLversion<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">stamp<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">unsigned<pos:position pos:line="2" pos:column="52"/></name> <name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">ccsid<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>

<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">curl_version_info_data<pos:position pos:line="5" pos:column="25"/></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type> <name pos:line="5" pos:column="28">p<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type> <name pos:line="6" pos:column="10">cp<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">n<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">nproto<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">curl_version_info_data<pos:position pos:line="9" pos:column="25"/></name> <modifier pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></modifier></type> <name pos:line="9" pos:column="28">id<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* The assertion below is possible, because although the second operand
     is an enum member, the first is a #define. In that case, the OS/400 C
     compiler seems to compare string values after substitution. */</comment>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">CURLVERSION_NOW<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">!=<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">CURLVERSION_FOURTH<pos:position pos:line="15" pos:column="42"/></name></expr></cpp:if>
<cpp:error pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">error<pos:position pos:line="16" pos:column="7"/></cpp:directive> curl_version_info_data structure has changed: upgrade this procedure.<pos:position pos:line="16" pos:column="77"/></cpp:error>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="19" pos:column="3">/* If caller has been compiled with a new version, error. */</comment>

  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><name pos:line="21" pos:column="6">stamp<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">&gt;<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="14">CURLVERSION_NOW<pos:position pos:line="21" pos:column="29"/></name></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">curl_version_info_data<pos:position pos:line="22" pos:column="35"/></name> <operator pos:line="22" pos:column="36">*<pos:position pos:line="22" pos:column="37"/></operator><operator pos:line="22" pos:column="37">)<pos:position pos:line="22" pos:column="38"/></operator> <name pos:line="22" pos:column="39">NULL<pos:position pos:line="22" pos:column="43"/></name></expr>;<pos:position pos:line="22" pos:column="44"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="24" pos:column="3">p<pos:position pos:line="24" pos:column="4"/></name> <operator pos:line="24" pos:column="5">=<pos:position pos:line="24" pos:column="6"/></operator> <call><name pos:line="24" pos:column="7">curl_version_info<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">stamp<pos:position pos:line="24" pos:column="30"/></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>

  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><operator pos:line="26" pos:column="6">!<pos:position pos:line="26" pos:column="7"/></operator><name pos:line="26" pos:column="7">p<pos:position pos:line="26" pos:column="8"/></name></expr>)<pos:position pos:line="26" pos:column="9"/></condition><then pos:line="26" pos:column="9">
    <block type="pseudo"><return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">p<pos:position pos:line="27" pos:column="13"/></name></expr>;<pos:position pos:line="27" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="29" pos:column="3">/* Measure thread space needed. */</comment>

  <expr_stmt><expr><name pos:line="31" pos:column="3">n<pos:position pos:line="31" pos:column="4"/></name> <operator pos:line="31" pos:column="5">=<pos:position pos:line="31" pos:column="6"/></operator> <literal type="number" pos:line="31" pos:column="7">0<pos:position pos:line="31" pos:column="8"/></literal></expr>;<pos:position pos:line="31" pos:column="9"/></expr_stmt>
  <expr_stmt><expr><name pos:line="32" pos:column="3">nproto<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">=<pos:position pos:line="32" pos:column="11"/></operator> <literal type="number" pos:line="32" pos:column="12">0<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></expr_stmt>

  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><name><name pos:line="34" pos:column="6">p<pos:position pos:line="34" pos:column="7"/></name><operator pos:line="34" pos:column="7">-&gt;<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="9">protocols<pos:position pos:line="34" pos:column="18"/></name></name></expr>)<pos:position pos:line="34" pos:column="19"/></condition><then pos:line="34" pos:column="19"> <block pos:line="34" pos:column="20">{
    <while pos:line="35" pos:column="5">while<condition pos:line="35" pos:column="10">(<expr><name><name pos:line="35" pos:column="11">p<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">protocols<pos:position pos:line="35" pos:column="23"/></name><index pos:line="35" pos:column="23">[<expr><name pos:line="35" pos:column="24">nproto<pos:position pos:line="35" pos:column="30"/></name></expr>]<pos:position pos:line="35" pos:column="31"/></index></name></expr>)<pos:position pos:line="35" pos:column="32"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">n<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">+=<pos:position pos:line="36" pos:column="11"/></operator> <call><name pos:line="36" pos:column="12">strlen<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><name><name pos:line="36" pos:column="19">p<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">-&gt;<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="22">protocols<pos:position pos:line="36" pos:column="31"/></name><index pos:line="36" pos:column="31">[<expr><name pos:line="36" pos:column="32">nproto<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">++<pos:position pos:line="36" pos:column="40"/></operator></expr>]<pos:position pos:line="36" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt></block></while>

    <expr_stmt><expr><name pos:line="38" pos:column="5">n<pos:position pos:line="38" pos:column="6"/></name> <operator pos:line="38" pos:column="7">+=<pos:position pos:line="38" pos:column="9"/></operator> <name pos:line="38" pos:column="10">nproto<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">++<pos:position pos:line="38" pos:column="18"/></operator></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><name><name pos:line="41" pos:column="6">p<pos:position pos:line="41" pos:column="7"/></name><operator pos:line="41" pos:column="7">-&gt;<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="9">version<pos:position pos:line="41" pos:column="16"/></name></name></expr>)<pos:position pos:line="41" pos:column="17"/></condition><then pos:line="41" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="5">n<pos:position pos:line="42" pos:column="6"/></name> <operator pos:line="42" pos:column="7">+=<pos:position pos:line="42" pos:column="9"/></operator> <call><name pos:line="42" pos:column="10">strlen<pos:position pos:line="42" pos:column="16"/></name><argument_list pos:line="42" pos:column="16">(<argument><expr><name><name pos:line="42" pos:column="17">p<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">-&gt;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="20">version<pos:position pos:line="42" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="28"/></argument_list></call> <operator pos:line="42" pos:column="29">+<pos:position pos:line="42" pos:column="30"/></operator> <literal type="number" pos:line="42" pos:column="31">1<pos:position pos:line="42" pos:column="32"/></literal></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt></block></then></if>

  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><name><name pos:line="44" pos:column="6">p<pos:position pos:line="44" pos:column="7"/></name><operator pos:line="44" pos:column="7">-&gt;<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="9">host<pos:position pos:line="44" pos:column="13"/></name></name></expr>)<pos:position pos:line="44" pos:column="14"/></condition><then pos:line="44" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="5">n<pos:position pos:line="45" pos:column="6"/></name> <operator pos:line="45" pos:column="7">+=<pos:position pos:line="45" pos:column="9"/></operator> <call><name pos:line="45" pos:column="10">strlen<pos:position pos:line="45" pos:column="16"/></name><argument_list pos:line="45" pos:column="16">(<argument><expr><name><name pos:line="45" pos:column="17">p<pos:position pos:line="45" pos:column="18"/></name><operator pos:line="45" pos:column="18">-&gt;<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="20">host<pos:position pos:line="45" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="25"/></argument_list></call> <operator pos:line="45" pos:column="26">+<pos:position pos:line="45" pos:column="27"/></operator> <literal type="number" pos:line="45" pos:column="28">1<pos:position pos:line="45" pos:column="29"/></literal></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt></block></then></if>

  <if pos:line="47" pos:column="3">if<condition pos:line="47" pos:column="5">(<expr><name><name pos:line="47" pos:column="6">p<pos:position pos:line="47" pos:column="7"/></name><operator pos:line="47" pos:column="7">-&gt;<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="9">ssl_version<pos:position pos:line="47" pos:column="20"/></name></name></expr>)<pos:position pos:line="47" pos:column="21"/></condition><then pos:line="47" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="5">n<pos:position pos:line="48" pos:column="6"/></name> <operator pos:line="48" pos:column="7">+=<pos:position pos:line="48" pos:column="9"/></operator> <call><name pos:line="48" pos:column="10">strlen<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name><name pos:line="48" pos:column="17">p<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">-&gt;<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="20">ssl_version<pos:position pos:line="48" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call> <operator pos:line="48" pos:column="33">+<pos:position pos:line="48" pos:column="34"/></operator> <literal type="number" pos:line="48" pos:column="35">1<pos:position pos:line="48" pos:column="36"/></literal></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt></block></then></if>

  <if pos:line="50" pos:column="3">if<condition pos:line="50" pos:column="5">(<expr><name><name pos:line="50" pos:column="6">p<pos:position pos:line="50" pos:column="7"/></name><operator pos:line="50" pos:column="7">-&gt;<pos:position pos:line="50" pos:column="12"/></operator><name pos:line="50" pos:column="9">libz_version<pos:position pos:line="50" pos:column="21"/></name></name></expr>)<pos:position pos:line="50" pos:column="22"/></condition><then pos:line="50" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="5">n<pos:position pos:line="51" pos:column="6"/></name> <operator pos:line="51" pos:column="7">+=<pos:position pos:line="51" pos:column="9"/></operator> <call><name pos:line="51" pos:column="10">strlen<pos:position pos:line="51" pos:column="16"/></name><argument_list pos:line="51" pos:column="16">(<argument><expr><name><name pos:line="51" pos:column="17">p<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">-&gt;<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="20">libz_version<pos:position pos:line="51" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="33"/></argument_list></call> <operator pos:line="51" pos:column="34">+<pos:position pos:line="51" pos:column="35"/></operator> <literal type="number" pos:line="51" pos:column="36">1<pos:position pos:line="51" pos:column="37"/></literal></expr>;<pos:position pos:line="51" pos:column="38"/></expr_stmt></block></then></if>

  <if pos:line="53" pos:column="3">if<condition pos:line="53" pos:column="5">(<expr><name><name pos:line="53" pos:column="6">p<pos:position pos:line="53" pos:column="7"/></name><operator pos:line="53" pos:column="7">-&gt;<pos:position pos:line="53" pos:column="12"/></operator><name pos:line="53" pos:column="9">ares<pos:position pos:line="53" pos:column="13"/></name></name></expr>)<pos:position pos:line="53" pos:column="14"/></condition><then pos:line="53" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="5">n<pos:position pos:line="54" pos:column="6"/></name> <operator pos:line="54" pos:column="7">+=<pos:position pos:line="54" pos:column="9"/></operator> <call><name pos:line="54" pos:column="10">strlen<pos:position pos:line="54" pos:column="16"/></name><argument_list pos:line="54" pos:column="16">(<argument><expr><name><name pos:line="54" pos:column="17">p<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">-&gt;<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="20">ares<pos:position pos:line="54" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="25"/></argument_list></call> <operator pos:line="54" pos:column="26">+<pos:position pos:line="54" pos:column="27"/></operator> <literal type="number" pos:line="54" pos:column="28">1<pos:position pos:line="54" pos:column="29"/></literal></expr>;<pos:position pos:line="54" pos:column="30"/></expr_stmt></block></then></if>

  <if pos:line="56" pos:column="3">if<condition pos:line="56" pos:column="5">(<expr><name><name pos:line="56" pos:column="6">p<pos:position pos:line="56" pos:column="7"/></name><operator pos:line="56" pos:column="7">-&gt;<pos:position pos:line="56" pos:column="12"/></operator><name pos:line="56" pos:column="9">libidn<pos:position pos:line="56" pos:column="15"/></name></name></expr>)<pos:position pos:line="56" pos:column="16"/></condition><then pos:line="56" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="5">n<pos:position pos:line="57" pos:column="6"/></name> <operator pos:line="57" pos:column="7">+=<pos:position pos:line="57" pos:column="9"/></operator> <call><name pos:line="57" pos:column="10">strlen<pos:position pos:line="57" pos:column="16"/></name><argument_list pos:line="57" pos:column="16">(<argument><expr><name><name pos:line="57" pos:column="17">p<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">-&gt;<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="20">libidn<pos:position pos:line="57" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="27"/></argument_list></call> <operator pos:line="57" pos:column="28">+<pos:position pos:line="57" pos:column="29"/></operator> <literal type="number" pos:line="57" pos:column="30">1<pos:position pos:line="57" pos:column="31"/></literal></expr>;<pos:position pos:line="57" pos:column="32"/></expr_stmt></block></then></if>

  <if pos:line="59" pos:column="3">if<condition pos:line="59" pos:column="5">(<expr><name><name pos:line="59" pos:column="6">p<pos:position pos:line="59" pos:column="7"/></name><operator pos:line="59" pos:column="7">-&gt;<pos:position pos:line="59" pos:column="12"/></operator><name pos:line="59" pos:column="9">libssh_version<pos:position pos:line="59" pos:column="23"/></name></name></expr>)<pos:position pos:line="59" pos:column="24"/></condition><then pos:line="59" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="5">n<pos:position pos:line="60" pos:column="6"/></name> <operator pos:line="60" pos:column="7">+=<pos:position pos:line="60" pos:column="9"/></operator> <call><name pos:line="60" pos:column="10">strlen<pos:position pos:line="60" pos:column="16"/></name><argument_list pos:line="60" pos:column="16">(<argument><expr><name><name pos:line="60" pos:column="17">p<pos:position pos:line="60" pos:column="18"/></name><operator pos:line="60" pos:column="18">-&gt;<pos:position pos:line="60" pos:column="23"/></operator><name pos:line="60" pos:column="20">libssh_version<pos:position pos:line="60" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="35"/></argument_list></call> <operator pos:line="60" pos:column="36">+<pos:position pos:line="60" pos:column="37"/></operator> <literal type="number" pos:line="60" pos:column="38">1<pos:position pos:line="60" pos:column="39"/></literal></expr>;<pos:position pos:line="60" pos:column="40"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="62" pos:column="3">/* Allocate thread space. */</comment>

  <expr_stmt><expr><name pos:line="64" pos:column="3">n<pos:position pos:line="64" pos:column="4"/></name> <operator pos:line="64" pos:column="5">*=<pos:position pos:line="64" pos:column="7"/></operator> <name pos:line="64" pos:column="8">MAX_CONV_EXPANSION<pos:position pos:line="64" pos:column="26"/></name></expr>;<pos:position pos:line="64" pos:column="27"/></expr_stmt>

  <if pos:line="66" pos:column="3">if<condition pos:line="66" pos:column="5">(<expr><name pos:line="66" pos:column="6">nproto<pos:position pos:line="66" pos:column="12"/></name></expr>)<pos:position pos:line="66" pos:column="13"/></condition><then pos:line="66" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="5">n<pos:position pos:line="67" pos:column="6"/></name> <operator pos:line="67" pos:column="7">+=<pos:position pos:line="67" pos:column="9"/></operator> <name pos:line="67" pos:column="10">nproto<pos:position pos:line="67" pos:column="16"/></name> <operator pos:line="67" pos:column="17">*<pos:position pos:line="67" pos:column="18"/></operator> <sizeof pos:line="67" pos:column="19">sizeof<argument_list pos:line="67" pos:column="25">(<argument><expr><specifier pos:line="67" pos:column="26">const<pos:position pos:line="67" pos:column="31"/></specifier> <name pos:line="67" pos:column="32">char<pos:position pos:line="67" pos:column="36"/></name> <operator pos:line="67" pos:column="37">*<pos:position pos:line="67" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="67" pos:column="39"/></argument_list></sizeof></expr>;<pos:position pos:line="67" pos:column="40"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="69" pos:column="3">cp<pos:position pos:line="69" pos:column="5"/></name> <operator pos:line="69" pos:column="6">=<pos:position pos:line="69" pos:column="7"/></operator> <call><name pos:line="69" pos:column="8">Curl_thread_buffer<pos:position pos:line="69" pos:column="26"/></name><argument_list pos:line="69" pos:column="26">(<argument><expr><name pos:line="69" pos:column="27">LK_VERSION_INFO_DATA<pos:position pos:line="69" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="49">n<pos:position pos:line="69" pos:column="50"/></name></expr></argument>)<pos:position pos:line="69" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><name pos:line="70" pos:column="3">id<pos:position pos:line="70" pos:column="5"/></name> <operator pos:line="70" pos:column="6">=<pos:position pos:line="70" pos:column="7"/></operator> <operator pos:line="70" pos:column="8">(<pos:position pos:line="70" pos:column="9"/></operator><name pos:line="70" pos:column="9">curl_version_info_data<pos:position pos:line="70" pos:column="31"/></name> <operator pos:line="70" pos:column="32">*<pos:position pos:line="70" pos:column="33"/></operator><operator pos:line="70" pos:column="33">)<pos:position pos:line="70" pos:column="34"/></operator> <call><name pos:line="70" pos:column="35">Curl_thread_buffer<pos:position pos:line="70" pos:column="53"/></name><argument_list pos:line="70" pos:column="53">(<argument><expr><name pos:line="70" pos:column="54">LK_VERSION_INFO<pos:position pos:line="70" pos:column="69"/></name></expr></argument>,
                                                     <argument><expr><sizeof pos:line="71" pos:column="54">sizeof <name><pos:position pos:line="71" pos:column="61"/></name></sizeof>*<name pos:line="71" pos:column="62">id<pos:position pos:line="71" pos:column="64"/></name></expr></argument>)<pos:position pos:line="71" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="66"/></expr_stmt>

  <if pos:line="73" pos:column="3">if<condition pos:line="73" pos:column="5">(<expr><operator pos:line="73" pos:column="6">!<pos:position pos:line="73" pos:column="7"/></operator><name pos:line="73" pos:column="7">id<pos:position pos:line="73" pos:column="9"/></name> <operator pos:line="73" pos:column="10">||<pos:position pos:line="73" pos:column="12"/></operator> <operator pos:line="73" pos:column="13">!<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="14">cp<pos:position pos:line="73" pos:column="16"/></name></expr>)<pos:position pos:line="73" pos:column="17"/></condition><then pos:line="73" pos:column="17">
    <block type="pseudo"><return pos:line="74" pos:column="5">return <expr><operator pos:line="74" pos:column="12">(<pos:position pos:line="74" pos:column="13"/></operator><name pos:line="74" pos:column="13">curl_version_info_data<pos:position pos:line="74" pos:column="35"/></name> <operator pos:line="74" pos:column="36">*<pos:position pos:line="74" pos:column="37"/></operator><operator pos:line="74" pos:column="37">)<pos:position pos:line="74" pos:column="38"/></operator> <name pos:line="74" pos:column="39">NULL<pos:position pos:line="74" pos:column="43"/></name></expr>;<pos:position pos:line="74" pos:column="44"/></return></block></then></if>

  <comment type="block" pos:line="76" pos:column="3">/* Copy data and convert strings. */</comment>

  <expr_stmt><expr><call><name pos:line="78" pos:column="3">memcpy<pos:position pos:line="78" pos:column="9"/></name><argument_list pos:line="78" pos:column="9">(<argument><expr><operator pos:line="78" pos:column="10">(<pos:position pos:line="78" pos:column="11"/></operator><name pos:line="78" pos:column="11">char<pos:position pos:line="78" pos:column="15"/></name> <operator pos:line="78" pos:column="16">*<pos:position pos:line="78" pos:column="17"/></operator><operator pos:line="78" pos:column="17">)<pos:position pos:line="78" pos:column="18"/></operator> <name pos:line="78" pos:column="19">id<pos:position pos:line="78" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="23">(<pos:position pos:line="78" pos:column="24"/></operator><name pos:line="78" pos:column="24">char<pos:position pos:line="78" pos:column="28"/></name> <operator pos:line="78" pos:column="29">*<pos:position pos:line="78" pos:column="30"/></operator><operator pos:line="78" pos:column="30">)<pos:position pos:line="78" pos:column="31"/></operator> <name pos:line="78" pos:column="32">p<pos:position pos:line="78" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="78" pos:column="35">sizeof <name><pos:position pos:line="78" pos:column="42"/></name></sizeof>*<name pos:line="78" pos:column="43">p<pos:position pos:line="78" pos:column="44"/></name></expr></argument>)<pos:position pos:line="78" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="46"/></expr_stmt>

  <if pos:line="80" pos:column="3">if<condition pos:line="80" pos:column="5">(<expr><name><name pos:line="80" pos:column="6">id<pos:position pos:line="80" pos:column="8"/></name><operator pos:line="80" pos:column="8">-&gt;<pos:position pos:line="80" pos:column="13"/></operator><name pos:line="80" pos:column="10">protocols<pos:position pos:line="80" pos:column="19"/></name></name></expr>)<pos:position pos:line="80" pos:column="20"/></condition><then pos:line="80" pos:column="20"> <block pos:line="80" pos:column="21">{
    <decl_stmt><decl><type><name pos:line="81" pos:column="5">int<pos:position pos:line="81" pos:column="8"/></name></type> <name pos:line="81" pos:column="9">i<pos:position pos:line="81" pos:column="10"/></name> <init pos:line="81" pos:column="11">= <expr><name pos:line="81" pos:column="13">nproto<pos:position pos:line="81" pos:column="19"/></name> <operator pos:line="81" pos:column="20">*<pos:position pos:line="81" pos:column="21"/></operator> <sizeof pos:line="81" pos:column="22">sizeof <name><name pos:line="81" pos:column="29">id<pos:position pos:line="81" pos:column="31"/></name><operator pos:line="81" pos:column="31">-&gt;<pos:position pos:line="81" pos:column="36"/></operator><name pos:line="81" pos:column="33">protocols<pos:position pos:line="81" pos:column="42"/></name><index pos:line="81" pos:column="42">[<expr><literal type="number" pos:line="81" pos:column="43">0<pos:position pos:line="81" pos:column="44"/></literal></expr>]<pos:position pos:line="81" pos:column="45"/></index></name></sizeof></expr></init></decl>;<pos:position pos:line="81" pos:column="46"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="83" pos:column="5">id<pos:position pos:line="83" pos:column="7"/></name><operator pos:line="83" pos:column="7">-&gt;<pos:position pos:line="83" pos:column="12"/></operator><name pos:line="83" pos:column="9">protocols<pos:position pos:line="83" pos:column="18"/></name></name> <operator pos:line="83" pos:column="19">=<pos:position pos:line="83" pos:column="20"/></operator> <operator pos:line="83" pos:column="21">(<pos:position pos:line="83" pos:column="22"/></operator><specifier pos:line="83" pos:column="22">const<pos:position pos:line="83" pos:column="27"/></specifier> <name pos:line="83" pos:column="28">char<pos:position pos:line="83" pos:column="32"/></name> <operator pos:line="83" pos:column="33">*<pos:position pos:line="83" pos:column="34"/></operator> <specifier pos:line="83" pos:column="35">const<pos:position pos:line="83" pos:column="40"/></specifier> <operator pos:line="83" pos:column="41">*<pos:position pos:line="83" pos:column="42"/></operator><operator pos:line="83" pos:column="42">)<pos:position pos:line="83" pos:column="43"/></operator> <name pos:line="83" pos:column="44">cp<pos:position pos:line="83" pos:column="46"/></name></expr>;<pos:position pos:line="83" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">memcpy<pos:position pos:line="84" pos:column="11"/></name><argument_list pos:line="84" pos:column="11">(<argument><expr><name pos:line="84" pos:column="12">cp<pos:position pos:line="84" pos:column="14"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="16">(<pos:position pos:line="84" pos:column="17"/></operator><name pos:line="84" pos:column="17">char<pos:position pos:line="84" pos:column="21"/></name> <operator pos:line="84" pos:column="22">*<pos:position pos:line="84" pos:column="23"/></operator><operator pos:line="84" pos:column="23">)<pos:position pos:line="84" pos:column="24"/></operator> <name><name pos:line="84" pos:column="25">p<pos:position pos:line="84" pos:column="26"/></name><operator pos:line="84" pos:column="26">-&gt;<pos:position pos:line="84" pos:column="31"/></operator><name pos:line="84" pos:column="28">protocols<pos:position pos:line="84" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="39">i<pos:position pos:line="84" pos:column="40"/></name></expr></argument>)<pos:position pos:line="84" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="85" pos:column="5">cp<pos:position pos:line="85" pos:column="7"/></name> <operator pos:line="85" pos:column="8">+=<pos:position pos:line="85" pos:column="10"/></operator> <name pos:line="85" pos:column="11">i<pos:position pos:line="85" pos:column="12"/></name></expr>;<pos:position pos:line="85" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="86" pos:column="5">n<pos:position pos:line="86" pos:column="6"/></name> <operator pos:line="86" pos:column="7">-=<pos:position pos:line="86" pos:column="9"/></operator> <name pos:line="86" pos:column="10">i<pos:position pos:line="86" pos:column="11"/></name></expr>;<pos:position pos:line="86" pos:column="12"/></expr_stmt>

    <for pos:line="88" pos:column="5">for<control pos:line="88" pos:column="8">(<init><expr><name pos:line="88" pos:column="9">i<pos:position pos:line="88" pos:column="10"/></name> <operator pos:line="88" pos:column="11">=<pos:position pos:line="88" pos:column="12"/></operator> <literal type="number" pos:line="88" pos:column="13">0<pos:position pos:line="88" pos:column="14"/></literal></expr>;<pos:position pos:line="88" pos:column="15"/></init> <condition><expr><name><name pos:line="88" pos:column="16">id<pos:position pos:line="88" pos:column="18"/></name><operator pos:line="88" pos:column="18">-&gt;<pos:position pos:line="88" pos:column="23"/></operator><name pos:line="88" pos:column="20">protocols<pos:position pos:line="88" pos:column="29"/></name><index pos:line="88" pos:column="29">[<expr><name pos:line="88" pos:column="30">i<pos:position pos:line="88" pos:column="31"/></name></expr>]<pos:position pos:line="88" pos:column="32"/></index></name></expr>;<pos:position pos:line="88" pos:column="33"/></condition> <incr><expr><name pos:line="88" pos:column="34">i<pos:position pos:line="88" pos:column="35"/></name><operator pos:line="88" pos:column="35">++<pos:position pos:line="88" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="88" pos:column="38"/></control>
      <block type="pseudo"><if pos:line="89" pos:column="7">if<condition pos:line="89" pos:column="9">(<expr><call><name pos:line="89" pos:column="10">convert_version_info_string<pos:position pos:line="89" pos:column="37"/></name><argument_list pos:line="89" pos:column="37">(<argument><expr><operator pos:line="89" pos:column="38">(<pos:position pos:line="89" pos:column="39"/></operator><operator pos:line="89" pos:column="39">(<pos:position pos:line="89" pos:column="40"/></operator><specifier pos:line="89" pos:column="40">const<pos:position pos:line="89" pos:column="45"/></specifier> <name pos:line="89" pos:column="46">char<pos:position pos:line="89" pos:column="50"/></name> <operator pos:line="89" pos:column="51">*<pos:position pos:line="89" pos:column="52"/></operator> <operator pos:line="89" pos:column="53">*<pos:position pos:line="89" pos:column="54"/></operator><operator pos:line="89" pos:column="54">)<pos:position pos:line="89" pos:column="55"/></operator> <name><name pos:line="89" pos:column="56">id<pos:position pos:line="89" pos:column="58"/></name><operator pos:line="89" pos:column="58">-&gt;<pos:position pos:line="89" pos:column="63"/></operator><name pos:line="89" pos:column="60">protocols<pos:position pos:line="89" pos:column="69"/></name></name><operator pos:line="89" pos:column="69">)<pos:position pos:line="89" pos:column="70"/></operator> <operator pos:line="89" pos:column="71">+<pos:position pos:line="89" pos:column="72"/></operator> <name pos:line="89" pos:column="73">i<pos:position pos:line="89" pos:column="74"/></name></expr></argument>,
                                      <argument><expr><operator pos:line="90" pos:column="39">&amp;<pos:position pos:line="90" pos:column="44"/></operator><name pos:line="90" pos:column="40">cp<pos:position pos:line="90" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="44">&amp;<pos:position pos:line="90" pos:column="49"/></operator><name pos:line="90" pos:column="45">n<pos:position pos:line="90" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="48">ccsid<pos:position pos:line="90" pos:column="53"/></name></expr></argument>)<pos:position pos:line="90" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="55"/></condition><then pos:line="90" pos:column="55">
        <block type="pseudo"><return pos:line="91" pos:column="9">return <expr><operator pos:line="91" pos:column="16">(<pos:position pos:line="91" pos:column="17"/></operator><name pos:line="91" pos:column="17">curl_version_info_data<pos:position pos:line="91" pos:column="39"/></name> <operator pos:line="91" pos:column="40">*<pos:position pos:line="91" pos:column="41"/></operator><operator pos:line="91" pos:column="41">)<pos:position pos:line="91" pos:column="42"/></operator> <name pos:line="91" pos:column="43">NULL<pos:position pos:line="91" pos:column="47"/></name></expr>;<pos:position pos:line="91" pos:column="48"/></return></block></then></if></block></for>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>

  <if pos:line="94" pos:column="3">if<condition pos:line="94" pos:column="5">(<expr><call><name pos:line="94" pos:column="6">convert_version_info_string<pos:position pos:line="94" pos:column="33"/></name><argument_list pos:line="94" pos:column="33">(<argument><expr><operator pos:line="94" pos:column="34">&amp;<pos:position pos:line="94" pos:column="39"/></operator><name><name pos:line="94" pos:column="35">id<pos:position pos:line="94" pos:column="37"/></name><operator pos:line="94" pos:column="37">-&gt;<pos:position pos:line="94" pos:column="42"/></operator><name pos:line="94" pos:column="39">version<pos:position pos:line="94" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="48">&amp;<pos:position pos:line="94" pos:column="53"/></operator><name pos:line="94" pos:column="49">cp<pos:position pos:line="94" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="53">&amp;<pos:position pos:line="94" pos:column="58"/></operator><name pos:line="94" pos:column="54">n<pos:position pos:line="94" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="57">ccsid<pos:position pos:line="94" pos:column="62"/></name></expr></argument>)<pos:position pos:line="94" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="64"/></condition><then pos:line="94" pos:column="64">
    <block type="pseudo"><return pos:line="95" pos:column="5">return <expr><operator pos:line="95" pos:column="12">(<pos:position pos:line="95" pos:column="13"/></operator><name pos:line="95" pos:column="13">curl_version_info_data<pos:position pos:line="95" pos:column="35"/></name> <operator pos:line="95" pos:column="36">*<pos:position pos:line="95" pos:column="37"/></operator><operator pos:line="95" pos:column="37">)<pos:position pos:line="95" pos:column="38"/></operator> <name pos:line="95" pos:column="39">NULL<pos:position pos:line="95" pos:column="43"/></name></expr>;<pos:position pos:line="95" pos:column="44"/></return></block></then></if>

  <if pos:line="97" pos:column="3">if<condition pos:line="97" pos:column="5">(<expr><call><name pos:line="97" pos:column="6">convert_version_info_string<pos:position pos:line="97" pos:column="33"/></name><argument_list pos:line="97" pos:column="33">(<argument><expr><operator pos:line="97" pos:column="34">&amp;<pos:position pos:line="97" pos:column="39"/></operator><name><name pos:line="97" pos:column="35">id<pos:position pos:line="97" pos:column="37"/></name><operator pos:line="97" pos:column="37">-&gt;<pos:position pos:line="97" pos:column="42"/></operator><name pos:line="97" pos:column="39">host<pos:position pos:line="97" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="45">&amp;<pos:position pos:line="97" pos:column="50"/></operator><name pos:line="97" pos:column="46">cp<pos:position pos:line="97" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="50">&amp;<pos:position pos:line="97" pos:column="55"/></operator><name pos:line="97" pos:column="51">n<pos:position pos:line="97" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="54">ccsid<pos:position pos:line="97" pos:column="59"/></name></expr></argument>)<pos:position pos:line="97" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="61"/></condition><then pos:line="97" pos:column="61">
    <block type="pseudo"><return pos:line="98" pos:column="5">return <expr><operator pos:line="98" pos:column="12">(<pos:position pos:line="98" pos:column="13"/></operator><name pos:line="98" pos:column="13">curl_version_info_data<pos:position pos:line="98" pos:column="35"/></name> <operator pos:line="98" pos:column="36">*<pos:position pos:line="98" pos:column="37"/></operator><operator pos:line="98" pos:column="37">)<pos:position pos:line="98" pos:column="38"/></operator> <name pos:line="98" pos:column="39">NULL<pos:position pos:line="98" pos:column="43"/></name></expr>;<pos:position pos:line="98" pos:column="44"/></return></block></then></if>

  <if pos:line="100" pos:column="3">if<condition pos:line="100" pos:column="5">(<expr><call><name pos:line="100" pos:column="6">convert_version_info_string<pos:position pos:line="100" pos:column="33"/></name><argument_list pos:line="100" pos:column="33">(<argument><expr><operator pos:line="100" pos:column="34">&amp;<pos:position pos:line="100" pos:column="39"/></operator><name><name pos:line="100" pos:column="35">id<pos:position pos:line="100" pos:column="37"/></name><operator pos:line="100" pos:column="37">-&gt;<pos:position pos:line="100" pos:column="42"/></operator><name pos:line="100" pos:column="39">ssl_version<pos:position pos:line="100" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="52">&amp;<pos:position pos:line="100" pos:column="57"/></operator><name pos:line="100" pos:column="53">cp<pos:position pos:line="100" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="57">&amp;<pos:position pos:line="100" pos:column="62"/></operator><name pos:line="100" pos:column="58">n<pos:position pos:line="100" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="61">ccsid<pos:position pos:line="100" pos:column="66"/></name></expr></argument>)<pos:position pos:line="100" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="68"/></condition><then pos:line="100" pos:column="68">
    <block type="pseudo"><return pos:line="101" pos:column="5">return <expr><operator pos:line="101" pos:column="12">(<pos:position pos:line="101" pos:column="13"/></operator><name pos:line="101" pos:column="13">curl_version_info_data<pos:position pos:line="101" pos:column="35"/></name> <operator pos:line="101" pos:column="36">*<pos:position pos:line="101" pos:column="37"/></operator><operator pos:line="101" pos:column="37">)<pos:position pos:line="101" pos:column="38"/></operator> <name pos:line="101" pos:column="39">NULL<pos:position pos:line="101" pos:column="43"/></name></expr>;<pos:position pos:line="101" pos:column="44"/></return></block></then></if>

  <if pos:line="103" pos:column="3">if<condition pos:line="103" pos:column="5">(<expr><call><name pos:line="103" pos:column="6">convert_version_info_string<pos:position pos:line="103" pos:column="33"/></name><argument_list pos:line="103" pos:column="33">(<argument><expr><operator pos:line="103" pos:column="34">&amp;<pos:position pos:line="103" pos:column="39"/></operator><name><name pos:line="103" pos:column="35">id<pos:position pos:line="103" pos:column="37"/></name><operator pos:line="103" pos:column="37">-&gt;<pos:position pos:line="103" pos:column="42"/></operator><name pos:line="103" pos:column="39">libz_version<pos:position pos:line="103" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="103" pos:column="53">&amp;<pos:position pos:line="103" pos:column="58"/></operator><name pos:line="103" pos:column="54">cp<pos:position pos:line="103" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="103" pos:column="58">&amp;<pos:position pos:line="103" pos:column="63"/></operator><name pos:line="103" pos:column="59">n<pos:position pos:line="103" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="62">ccsid<pos:position pos:line="103" pos:column="67"/></name></expr></argument>)<pos:position pos:line="103" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="69"/></condition><then pos:line="103" pos:column="69">
    <block type="pseudo"><return pos:line="104" pos:column="5">return <expr><operator pos:line="104" pos:column="12">(<pos:position pos:line="104" pos:column="13"/></operator><name pos:line="104" pos:column="13">curl_version_info_data<pos:position pos:line="104" pos:column="35"/></name> <operator pos:line="104" pos:column="36">*<pos:position pos:line="104" pos:column="37"/></operator><operator pos:line="104" pos:column="37">)<pos:position pos:line="104" pos:column="38"/></operator> <name pos:line="104" pos:column="39">NULL<pos:position pos:line="104" pos:column="43"/></name></expr>;<pos:position pos:line="104" pos:column="44"/></return></block></then></if>

  <if pos:line="106" pos:column="3">if<condition pos:line="106" pos:column="5">(<expr><call><name pos:line="106" pos:column="6">convert_version_info_string<pos:position pos:line="106" pos:column="33"/></name><argument_list pos:line="106" pos:column="33">(<argument><expr><operator pos:line="106" pos:column="34">&amp;<pos:position pos:line="106" pos:column="39"/></operator><name><name pos:line="106" pos:column="35">id<pos:position pos:line="106" pos:column="37"/></name><operator pos:line="106" pos:column="37">-&gt;<pos:position pos:line="106" pos:column="42"/></operator><name pos:line="106" pos:column="39">ares<pos:position pos:line="106" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="45">&amp;<pos:position pos:line="106" pos:column="50"/></operator><name pos:line="106" pos:column="46">cp<pos:position pos:line="106" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="50">&amp;<pos:position pos:line="106" pos:column="55"/></operator><name pos:line="106" pos:column="51">n<pos:position pos:line="106" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="54">ccsid<pos:position pos:line="106" pos:column="59"/></name></expr></argument>)<pos:position pos:line="106" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="61"/></condition><then pos:line="106" pos:column="61">
    <block type="pseudo"><return pos:line="107" pos:column="5">return <expr><operator pos:line="107" pos:column="12">(<pos:position pos:line="107" pos:column="13"/></operator><name pos:line="107" pos:column="13">curl_version_info_data<pos:position pos:line="107" pos:column="35"/></name> <operator pos:line="107" pos:column="36">*<pos:position pos:line="107" pos:column="37"/></operator><operator pos:line="107" pos:column="37">)<pos:position pos:line="107" pos:column="38"/></operator> <name pos:line="107" pos:column="39">NULL<pos:position pos:line="107" pos:column="43"/></name></expr>;<pos:position pos:line="107" pos:column="44"/></return></block></then></if>

  <if pos:line="109" pos:column="3">if<condition pos:line="109" pos:column="5">(<expr><call><name pos:line="109" pos:column="6">convert_version_info_string<pos:position pos:line="109" pos:column="33"/></name><argument_list pos:line="109" pos:column="33">(<argument><expr><operator pos:line="109" pos:column="34">&amp;<pos:position pos:line="109" pos:column="39"/></operator><name><name pos:line="109" pos:column="35">id<pos:position pos:line="109" pos:column="37"/></name><operator pos:line="109" pos:column="37">-&gt;<pos:position pos:line="109" pos:column="42"/></operator><name pos:line="109" pos:column="39">libidn<pos:position pos:line="109" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="47">&amp;<pos:position pos:line="109" pos:column="52"/></operator><name pos:line="109" pos:column="48">cp<pos:position pos:line="109" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="52">&amp;<pos:position pos:line="109" pos:column="57"/></operator><name pos:line="109" pos:column="53">n<pos:position pos:line="109" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="56">ccsid<pos:position pos:line="109" pos:column="61"/></name></expr></argument>)<pos:position pos:line="109" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="63"/></condition><then pos:line="109" pos:column="63">
    <block type="pseudo"><return pos:line="110" pos:column="5">return <expr><operator pos:line="110" pos:column="12">(<pos:position pos:line="110" pos:column="13"/></operator><name pos:line="110" pos:column="13">curl_version_info_data<pos:position pos:line="110" pos:column="35"/></name> <operator pos:line="110" pos:column="36">*<pos:position pos:line="110" pos:column="37"/></operator><operator pos:line="110" pos:column="37">)<pos:position pos:line="110" pos:column="38"/></operator> <name pos:line="110" pos:column="39">NULL<pos:position pos:line="110" pos:column="43"/></name></expr>;<pos:position pos:line="110" pos:column="44"/></return></block></then></if>

  <if pos:line="112" pos:column="3">if<condition pos:line="112" pos:column="5">(<expr><call><name pos:line="112" pos:column="6">convert_version_info_string<pos:position pos:line="112" pos:column="33"/></name><argument_list pos:line="112" pos:column="33">(<argument><expr><operator pos:line="112" pos:column="34">&amp;<pos:position pos:line="112" pos:column="39"/></operator><name><name pos:line="112" pos:column="35">id<pos:position pos:line="112" pos:column="37"/></name><operator pos:line="112" pos:column="37">-&gt;<pos:position pos:line="112" pos:column="42"/></operator><name pos:line="112" pos:column="39">libssh_version<pos:position pos:line="112" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="112" pos:column="55">&amp;<pos:position pos:line="112" pos:column="60"/></operator><name pos:line="112" pos:column="56">cp<pos:position pos:line="112" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="112" pos:column="60">&amp;<pos:position pos:line="112" pos:column="65"/></operator><name pos:line="112" pos:column="61">n<pos:position pos:line="112" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="64">ccsid<pos:position pos:line="112" pos:column="69"/></name></expr></argument>)<pos:position pos:line="112" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="112" pos:column="71"/></condition><then pos:line="112" pos:column="71">
    <block type="pseudo"><return pos:line="113" pos:column="5">return <expr><operator pos:line="113" pos:column="12">(<pos:position pos:line="113" pos:column="13"/></operator><name pos:line="113" pos:column="13">curl_version_info_data<pos:position pos:line="113" pos:column="35"/></name> <operator pos:line="113" pos:column="36">*<pos:position pos:line="113" pos:column="37"/></operator><operator pos:line="113" pos:column="37">)<pos:position pos:line="113" pos:column="38"/></operator> <name pos:line="113" pos:column="39">NULL<pos:position pos:line="113" pos:column="43"/></name></expr>;<pos:position pos:line="113" pos:column="44"/></return></block></then></if>

  <return pos:line="115" pos:column="3">return <expr><name pos:line="115" pos:column="10">id<pos:position pos:line="115" pos:column="12"/></name></expr>;<pos:position pos:line="115" pos:column="13"/></return>
}<pos:position pos:line="116" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_287_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">void<pos:position pos:line="1" pos:column="14"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="15"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">CURLE_OK<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">curl_slist<pos:position pos:line="5" pos:column="20"/></name></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">headers<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name pos:line="5" pos:column="32">NULL<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">curl_slist<pos:position pos:line="6" pos:column="20"/></name></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">recipients<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><name pos:line="6" pos:column="35">NULL<pos:position pos:line="6" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">curl_slist<pos:position pos:line="7" pos:column="20"/></name></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">slist<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><name pos:line="7" pos:column="30">NULL<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">curl_mime<pos:position pos:line="8" pos:column="12"/></name> <modifier pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></modifier></type><name pos:line="8" pos:column="14">mime<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">curl_mime<pos:position pos:line="9" pos:column="12"/></name> <modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier></type><name pos:line="9" pos:column="14">alt<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">curl_mimepart<pos:position pos:line="10" pos:column="16"/></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type><name pos:line="10" pos:column="18">part<pos:position pos:line="10" pos:column="22"/></name></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier><modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier></type><name pos:line="11" pos:column="16">cpp<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">curl<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">curl_easy_init<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">()<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">curl<pos:position pos:line="14" pos:column="10"/></name></expr>)<pos:position pos:line="14" pos:column="11"/></condition><then pos:line="14" pos:column="11"> <block pos:line="14" pos:column="12">{
    <comment type="block" pos:line="15" pos:column="5">/* This is the URL for your mailserver */</comment>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">curl_easy_setopt<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">curl<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="28">CURLOPT_URL<pos:position pos:line="16" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="41">"smtp://mail.example.com"<pos:position pos:line="16" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt>

    <comment type="block" pos:line="18" pos:column="5">/* Note that this option isn't strictly required, omitting it will result
     * in libcurl sending the MAIL FROM command with empty sender data. All
     * autoresponses should have an empty reverse-path, and should be directed
     * to the address in the reverse-path which triggered them. Otherwise,
     * they could cause an endless loop. See RFC 5321 Section 4.5.5 for more
     * details.
     */</comment>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">curl_easy_setopt<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">curl<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">CURLOPT_MAIL_FROM<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="47">FROM<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="27" pos:column="5">/* Add two recipients, in this particular case they correspond to the
     * To: and Cc: addressees in the header, but they could be any kind of
     * recipient. */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">recipients<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">curl_slist_append<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><name pos:line="30" pos:column="36">recipients<pos:position pos:line="30" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="48">TO<pos:position pos:line="30" pos:column="50"/></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">recipients<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <call><name pos:line="31" pos:column="18">curl_slist_append<pos:position pos:line="31" pos:column="35"/></name><argument_list pos:line="31" pos:column="35">(<argument><expr><name pos:line="31" pos:column="36">recipients<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">CC<pos:position pos:line="31" pos:column="50"/></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">curl_easy_setopt<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">curl<pos:position pos:line="32" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="28">CURLOPT_MAIL_RCPT<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="47">recipients<pos:position pos:line="32" pos:column="57"/></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>

    <comment type="block" pos:line="34" pos:column="5">/* Build and set the message header list. */</comment>
    <for pos:line="35" pos:column="5">for<control pos:line="35" pos:column="8">(<init><expr><name pos:line="35" pos:column="9">cpp<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <name pos:line="35" pos:column="15">headers_text<pos:position pos:line="35" pos:column="27"/></name></expr>;<pos:position pos:line="35" pos:column="28"/></init> <condition><expr><operator pos:line="35" pos:column="29">*<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">cpp<pos:position pos:line="35" pos:column="33"/></name></expr>;<pos:position pos:line="35" pos:column="34"/></condition> <incr><expr><name pos:line="35" pos:column="35">cpp<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">++<pos:position pos:line="35" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="41"/></control>
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">headers<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">curl_slist_append<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">headers<pos:position pos:line="36" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="44">*<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="45">cpp<pos:position pos:line="36" pos:column="48"/></name></expr></argument>)<pos:position pos:line="36" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="50"/></expr_stmt></block></for>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">curl_easy_setopt<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">curl<pos:position pos:line="37" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="28">CURLOPT_HTTPHEADER<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="48">headers<pos:position pos:line="37" pos:column="55"/></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="39" pos:column="5">/* Build the mime message. */</comment>
    <expr_stmt><expr><name pos:line="40" pos:column="5">mime<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <call><name pos:line="40" pos:column="12">curl_mime_init<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">curl<pos:position pos:line="40" pos:column="31"/></name></expr></argument>)<pos:position pos:line="40" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="42" pos:column="5">/* The inline part is an alterative proposing the html and the text
       versions of the e-mail. */</comment>
    <expr_stmt><expr><name pos:line="44" pos:column="5">alt<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <call><name pos:line="44" pos:column="11">curl_mime_init<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">curl<pos:position pos:line="44" pos:column="30"/></name></expr></argument>)<pos:position pos:line="44" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* HTML message. */</comment>
    <expr_stmt><expr><name pos:line="47" pos:column="5">part<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">=<pos:position pos:line="47" pos:column="11"/></operator> <call><name pos:line="47" pos:column="12">curl_mime_addpart<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">alt<pos:position pos:line="47" pos:column="33"/></name></expr></argument>)<pos:position pos:line="47" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">curl_mime_data<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><name pos:line="48" pos:column="20">part<pos:position pos:line="48" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="26">inline_html<pos:position pos:line="48" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="39">CURL_ZERO_TERMINATED<pos:position pos:line="48" pos:column="59"/></name></expr></argument>)<pos:position pos:line="48" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">curl_mime_type<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><name pos:line="49" pos:column="20">part<pos:position pos:line="49" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="26">"text/html"<pos:position pos:line="49" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="51" pos:column="5">/* Text message. */</comment>
    <expr_stmt><expr><name pos:line="52" pos:column="5">part<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <call><name pos:line="52" pos:column="12">curl_mime_addpart<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name pos:line="52" pos:column="30">alt<pos:position pos:line="52" pos:column="33"/></name></expr></argument>)<pos:position pos:line="52" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">curl_mime_data<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><name pos:line="53" pos:column="20">part<pos:position pos:line="53" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="26">inline_text<pos:position pos:line="53" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="39">CURL_ZERO_TERMINATED<pos:position pos:line="53" pos:column="59"/></name></expr></argument>)<pos:position pos:line="53" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="61"/></expr_stmt>

    <comment type="block" pos:line="55" pos:column="5">/* Create the inline part. */</comment>
    <expr_stmt><expr><name pos:line="56" pos:column="5">part<pos:position pos:line="56" pos:column="9"/></name> <operator pos:line="56" pos:column="10">=<pos:position pos:line="56" pos:column="11"/></operator> <call><name pos:line="56" pos:column="12">curl_mime_addpart<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">mime<pos:position pos:line="56" pos:column="34"/></name></expr></argument>)<pos:position pos:line="56" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">curl_mime_subparts<pos:position pos:line="57" pos:column="23"/></name><argument_list pos:line="57" pos:column="23">(<argument><expr><name pos:line="57" pos:column="24">part<pos:position pos:line="57" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="30">alt<pos:position pos:line="57" pos:column="33"/></name></expr></argument>)<pos:position pos:line="57" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">curl_mime_type<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><name pos:line="58" pos:column="20">part<pos:position pos:line="58" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="26">"multipart/alternative"<pos:position pos:line="58" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="59" pos:column="5">slist<pos:position pos:line="59" pos:column="10"/></name> <operator pos:line="59" pos:column="11">=<pos:position pos:line="59" pos:column="12"/></operator> <call><name pos:line="59" pos:column="13">curl_slist_append<pos:position pos:line="59" pos:column="30"/></name><argument_list pos:line="59" pos:column="30">(<argument><expr><name pos:line="59" pos:column="31">NULL<pos:position pos:line="59" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="37">"Content-Disposition: inline"<pos:position pos:line="59" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">curl_mime_headers<pos:position pos:line="60" pos:column="22"/></name><argument_list pos:line="60" pos:column="22">(<argument><expr><name pos:line="60" pos:column="23">part<pos:position pos:line="60" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="29">slist<pos:position pos:line="60" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="36">1<pos:position pos:line="60" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="62" pos:column="5">/* Add the current source program as an attachment. */</comment>
    <expr_stmt><expr><name pos:line="63" pos:column="5">part<pos:position pos:line="63" pos:column="9"/></name> <operator pos:line="63" pos:column="10">=<pos:position pos:line="63" pos:column="11"/></operator> <call><name pos:line="63" pos:column="12">curl_mime_addpart<pos:position pos:line="63" pos:column="29"/></name><argument_list pos:line="63" pos:column="29">(<argument><expr><name pos:line="63" pos:column="30">mime<pos:position pos:line="63" pos:column="34"/></name></expr></argument>)<pos:position pos:line="63" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">curl_mime_filedata<pos:position pos:line="64" pos:column="23"/></name><argument_list pos:line="64" pos:column="23">(<argument><expr><name pos:line="64" pos:column="24">part<pos:position pos:line="64" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="30">"smtp-mime.c"<pos:position pos:line="64" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">curl_easy_setopt<pos:position pos:line="65" pos:column="21"/></name><argument_list pos:line="65" pos:column="21">(<argument><expr><name pos:line="65" pos:column="22">curl<pos:position pos:line="65" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="28">CURLOPT_MIMEPOST<pos:position pos:line="65" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="46">mime<pos:position pos:line="65" pos:column="50"/></name></expr></argument>)<pos:position pos:line="65" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="67" pos:column="5">/* Send the message */</comment>
    <expr_stmt><expr><name pos:line="68" pos:column="5">res<pos:position pos:line="68" pos:column="8"/></name> <operator pos:line="68" pos:column="9">=<pos:position pos:line="68" pos:column="10"/></operator> <call><name pos:line="68" pos:column="11">curl_easy_perform<pos:position pos:line="68" pos:column="28"/></name><argument_list pos:line="68" pos:column="28">(<argument><expr><name pos:line="68" pos:column="29">curl<pos:position pos:line="68" pos:column="33"/></name></expr></argument>)<pos:position pos:line="68" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="35"/></expr_stmt>

    <comment type="block" pos:line="70" pos:column="5">/* Check for errors */</comment>
    <if pos:line="71" pos:column="5">if<condition pos:line="71" pos:column="7">(<expr><name pos:line="71" pos:column="8">res<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">!=<pos:position pos:line="71" pos:column="14"/></operator> <name pos:line="71" pos:column="15">CURLE_OK<pos:position pos:line="71" pos:column="23"/></name></expr>)<pos:position pos:line="71" pos:column="24"/></condition><then pos:line="71" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="7">fprintf<pos:position pos:line="72" pos:column="14"/></name><argument_list pos:line="72" pos:column="14">(<argument><expr><name pos:line="72" pos:column="15">stderr<pos:position pos:line="72" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="23">"curl_easy_perform() failed: %s\n"<pos:position pos:line="72" pos:column="57"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="73" pos:column="15">curl_easy_strerror<pos:position pos:line="73" pos:column="33"/></name><argument_list pos:line="73" pos:column="33">(<argument><expr><name pos:line="73" pos:column="34">res<pos:position pos:line="73" pos:column="37"/></name></expr></argument>)<pos:position pos:line="73" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="40"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="75" pos:column="5">/* Free lists. */</comment>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">curl_slist_free_all<pos:position pos:line="76" pos:column="24"/></name><argument_list pos:line="76" pos:column="24">(<argument><expr><name pos:line="76" pos:column="25">recipients<pos:position pos:line="76" pos:column="35"/></name></expr></argument>)<pos:position pos:line="76" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">curl_slist_free_all<pos:position pos:line="77" pos:column="24"/></name><argument_list pos:line="77" pos:column="24">(<argument><expr><name pos:line="77" pos:column="25">headers<pos:position pos:line="77" pos:column="32"/></name></expr></argument>)<pos:position pos:line="77" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="79" pos:column="5">/* curl won't send the QUIT command until you call cleanup, so you should
     * be able to re-use this connection for additional messages (setting
     * CURLOPT_MAIL_FROM and CURLOPT_MAIL_RCPT as required, and calling
     * curl_easy_perform() again. It may not be a good idea to keep the
     * connection open for a very long time though (more than a few minutes
     * may result in the server timing out the connection), and you do want to
     * clean up in the end.
     */</comment>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">curl_easy_cleanup<pos:position pos:line="87" pos:column="22"/></name><argument_list pos:line="87" pos:column="22">(<argument><expr><name pos:line="87" pos:column="23">curl<pos:position pos:line="87" pos:column="27"/></name></expr></argument>)<pos:position pos:line="87" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="89" pos:column="5">/* Free multipart message. */</comment>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">curl_mime_free<pos:position pos:line="90" pos:column="19"/></name><argument_list pos:line="90" pos:column="19">(<argument><expr><name pos:line="90" pos:column="20">mime<pos:position pos:line="90" pos:column="24"/></name></expr></argument>)<pos:position pos:line="90" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="91" pos:column="4"/></block></then></if>

  <return pos:line="93" pos:column="3">return <expr><operator pos:line="93" pos:column="10">(<pos:position pos:line="93" pos:column="11"/></operator><name pos:line="93" pos:column="11">int<pos:position pos:line="93" pos:column="14"/></name><operator pos:line="93" pos:column="14">)<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="15">res<pos:position pos:line="93" pos:column="18"/></name></expr>;<pos:position pos:line="93" pos:column="19"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_734_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">tftp_send_first<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">tftp_state_data_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">state<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">tftp_event_t<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">event<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">sbytes<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">mode<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="string" pos:line="4" pos:column="22">"octet"<pos:position pos:line="4" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">filename<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">SessionHandle<pos:position pos:line="6" pos:column="23"/></name></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">data<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name><name pos:line="6" pos:column="32">state<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">conn<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">-&gt;<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="45">data<pos:position pos:line="6" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">res<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name pos:line="7" pos:column="18">CURLE_OK<pos:position pos:line="7" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* Set ascii mode if -B flag was used */</comment>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name><name pos:line="10" pos:column="6">data<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">set<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">.<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">prefer_ascii<pos:position pos:line="10" pos:column="28"/></name></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="5">mode<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <literal type="string" pos:line="11" pos:column="12">"netascii"<pos:position pos:line="11" pos:column="22"/></literal></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt></block></then></if>

  <switch pos:line="13" pos:column="3">switch<condition pos:line="13" pos:column="9">(<expr><name pos:line="13" pos:column="10">event<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition> <block pos:line="13" pos:column="17">{

  <case pos:line="15" pos:column="3">case <expr><name pos:line="15" pos:column="8">TFTP_EVENT_INIT<pos:position pos:line="15" pos:column="23"/></name></expr>:<pos:position pos:line="15" pos:column="24"/></case>    <comment type="block" pos:line="15" pos:column="28">/* Send the first packet out */</comment>
  <case pos:line="16" pos:column="3">case <expr><name pos:line="16" pos:column="8">TFTP_EVENT_TIMEOUT<pos:position pos:line="16" pos:column="26"/></name></expr>:<pos:position pos:line="16" pos:column="27"/></case> <comment type="block" pos:line="16" pos:column="28">/* Resend the first packet out */</comment>
    <comment type="block" pos:line="17" pos:column="5">/* Increment the retry counter, quit if over the limit */</comment>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">state<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">retries<pos:position pos:line="18" pos:column="19"/></name></name><operator pos:line="18" pos:column="19">++<pos:position pos:line="18" pos:column="21"/></operator></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><name><name pos:line="19" pos:column="8">state<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">retries<pos:position pos:line="19" pos:column="22"/></name></name><operator pos:line="19" pos:column="22">&gt;<pos:position pos:line="19" pos:column="26"/></operator><name><name pos:line="19" pos:column="23">state<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">retry_max<pos:position pos:line="19" pos:column="39"/></name></name></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40"> <block pos:line="19" pos:column="41">{
      <expr_stmt><expr><name><name pos:line="20" pos:column="7">state<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">error<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">TFTP_ERR_NORESPONSE<pos:position pos:line="20" pos:column="41"/></name></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="21" pos:column="7">state<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">state<pos:position pos:line="21" pos:column="19"/></name></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">TFTP_STATE_FIN<pos:position pos:line="21" pos:column="36"/></name></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
      <return pos:line="22" pos:column="7">return <expr><name pos:line="22" pos:column="14">res<pos:position pos:line="22" pos:column="17"/></name></expr>;<pos:position pos:line="22" pos:column="18"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><name><name pos:line="25" pos:column="8">data<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">set<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">.<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">upload<pos:position pos:line="25" pos:column="24"/></name></name></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25"> <block pos:line="25" pos:column="26">{
      <comment type="block" pos:line="26" pos:column="7">/* If we are uploading, send an WRQ */</comment>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">setpacketevent<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><operator pos:line="27" pos:column="22">&amp;<pos:position pos:line="27" pos:column="27"/></operator><name><name pos:line="27" pos:column="23">state<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">-&gt;<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="30">spacket<pos:position pos:line="27" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="39">TFTP_EVENT_WRQ<pos:position pos:line="27" pos:column="53"/></name></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="28" pos:column="7">state<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">conn<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">data<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">-&gt;<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="26">req<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">.<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">upload_fromhere<pos:position pos:line="28" pos:column="45"/></name></name> <operator pos:line="28" pos:column="46">=<pos:position pos:line="28" pos:column="47"/></operator>
        <operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">char<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">*<pos:position pos:line="29" pos:column="16"/></operator><operator pos:line="29" pos:column="16">)<pos:position pos:line="29" pos:column="17"/></operator><operator pos:line="29" pos:column="17">&amp;<pos:position pos:line="29" pos:column="22"/></operator><name><name pos:line="29" pos:column="18">state<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">-&gt;<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="25">spacket<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">.<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">data<pos:position pos:line="29" pos:column="37"/></name><index pos:line="29" pos:column="37">[<expr><literal type="number" pos:line="29" pos:column="38">4<pos:position pos:line="29" pos:column="39"/></literal></expr>]<pos:position pos:line="29" pos:column="40"/></index></name></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
      <if pos:line="30" pos:column="7">if<condition pos:line="30" pos:column="9">(<expr><name><name pos:line="30" pos:column="10">data<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">set<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">.<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">infilesize<pos:position pos:line="30" pos:column="30"/></name></name> <operator pos:line="30" pos:column="31">!=<pos:position pos:line="30" pos:column="33"/></operator> <operator pos:line="30" pos:column="34">-<pos:position pos:line="30" pos:column="35"/></operator><literal type="number" pos:line="30" pos:column="35">1<pos:position pos:line="30" pos:column="36"/></literal></expr>)<pos:position pos:line="30" pos:column="37"/></condition><then pos:line="30" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="9">Curl_pgrsSetUploadSize<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">data<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="38">data<pos:position pos:line="31" pos:column="42"/></name><operator pos:line="31" pos:column="42">-&gt;<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="44">set<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">.<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="48">infilesize<pos:position pos:line="31" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="60"/></expr_stmt></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then>
    <else pos:line="33" pos:column="5">else <block pos:line="33" pos:column="10">{
      <comment type="block" pos:line="34" pos:column="7">/* If we are downloading, send an RRQ */</comment>
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">setpacketevent<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><operator pos:line="35" pos:column="22">&amp;<pos:position pos:line="35" pos:column="27"/></operator><name><name pos:line="35" pos:column="23">state<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">spacket<pos:position pos:line="35" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">TFTP_EVENT_RRQ<pos:position pos:line="35" pos:column="53"/></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>
    <comment type="block" pos:line="37" pos:column="5">/* As RFC3617 describes the separator slash is not actually part of the
    file name so we skip the always-present first letter of the path string. */</comment>
    <expr_stmt><expr><name pos:line="39" pos:column="5">filename<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">curl_easy_unescape<pos:position pos:line="39" pos:column="34"/></name><argument_list pos:line="39" pos:column="34">(<argument><expr><name pos:line="39" pos:column="35">data<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="41">&amp;<pos:position pos:line="39" pos:column="46"/></operator><name><name pos:line="39" pos:column="42">state<pos:position pos:line="39" pos:column="47"/></name><operator pos:line="39" pos:column="47">-&gt;<pos:position pos:line="39" pos:column="52"/></operator><name pos:line="39" pos:column="49">conn<pos:position pos:line="39" pos:column="53"/></name><operator pos:line="39" pos:column="53">-&gt;<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="55">data<pos:position pos:line="39" pos:column="59"/></name><operator pos:line="39" pos:column="59">-&gt;<pos:position pos:line="39" pos:column="64"/></operator><name pos:line="39" pos:column="61">state<pos:position pos:line="39" pos:column="66"/></name><operator pos:line="39" pos:column="66">.<pos:position pos:line="39" pos:column="67"/></operator><name pos:line="39" pos:column="67">path<pos:position pos:line="39" pos:column="71"/></name><index pos:line="39" pos:column="71">[<expr><literal type="number" pos:line="39" pos:column="72">1<pos:position pos:line="39" pos:column="73"/></literal></expr>]<pos:position pos:line="39" pos:column="74"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="76">0<pos:position pos:line="39" pos:column="77"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="40" pos:column="35">NULL<pos:position pos:line="40" pos:column="39"/></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><operator pos:line="41" pos:column="8">!<pos:position pos:line="41" pos:column="9"/></operator><name pos:line="41" pos:column="9">filename<pos:position pos:line="41" pos:column="17"/></name></expr>)<pos:position pos:line="41" pos:column="18"/></condition><then pos:line="41" pos:column="18">
      <block type="pseudo"><return pos:line="42" pos:column="7">return <expr><name pos:line="42" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="42" pos:column="33"/></name></expr>;<pos:position pos:line="42" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">snprintf<pos:position pos:line="44" pos:column="13"/></name><argument_list pos:line="44" pos:column="13">(<argument><expr><operator pos:line="44" pos:column="14">(<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">char<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">*<pos:position pos:line="44" pos:column="21"/></operator><operator pos:line="44" pos:column="21">)<pos:position pos:line="44" pos:column="22"/></operator><operator pos:line="44" pos:column="22">&amp;<pos:position pos:line="44" pos:column="27"/></operator><name><name pos:line="44" pos:column="23">state<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">-&gt;<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="30">spacket<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">.<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="38">data<pos:position pos:line="44" pos:column="42"/></name><index pos:line="44" pos:column="42">[<expr><literal type="number" pos:line="44" pos:column="43">2<pos:position pos:line="44" pos:column="44"/></literal></expr>]<pos:position pos:line="44" pos:column="45"/></index></name></expr></argument>,
             <argument><expr><name pos:line="45" pos:column="14">TFTP_BLOCKSIZE<pos:position pos:line="45" pos:column="28"/></name></expr></argument>,
             <argument><expr><literal type="string" pos:line="46" pos:column="14">"%s%c%s%c"<pos:position pos:line="46" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="26">filename<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="46" pos:column="36">'\0'<pos:position pos:line="46" pos:column="40"/></literal></expr></argument>,  <argument><expr><name pos:line="46" pos:column="43">mode<pos:position pos:line="46" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="46" pos:column="49">'\0'<pos:position pos:line="46" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">sbytes<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <literal type="number" pos:line="47" pos:column="14">4<pos:position pos:line="47" pos:column="15"/></literal> <operator pos:line="47" pos:column="16">+<pos:position pos:line="47" pos:column="17"/></operator> <operator pos:line="47" pos:column="18">(<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="19">int<pos:position pos:line="47" pos:column="22"/></name><operator pos:line="47" pos:column="22">)<pos:position pos:line="47" pos:column="23"/></operator><call><name pos:line="47" pos:column="23">strlen<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">filename<pos:position pos:line="47" pos:column="38"/></name></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call> <operator pos:line="47" pos:column="40">+<pos:position pos:line="47" pos:column="41"/></operator> <operator pos:line="47" pos:column="42">(<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="43">int<pos:position pos:line="47" pos:column="46"/></name><operator pos:line="47" pos:column="46">)<pos:position pos:line="47" pos:column="47"/></operator><call><name pos:line="47" pos:column="47">strlen<pos:position pos:line="47" pos:column="53"/></name><argument_list pos:line="47" pos:column="53">(<argument><expr><name pos:line="47" pos:column="54">mode<pos:position pos:line="47" pos:column="58"/></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name pos:line="48" pos:column="5">sbytes<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <call><name pos:line="48" pos:column="14">sendto<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><name><name pos:line="48" pos:column="21">state<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">-&gt;<pos:position pos:line="48" pos:column="31"/></operator><name pos:line="48" pos:column="28">sockfd<pos:position pos:line="48" pos:column="34"/></name></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="36">(<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="37">void<pos:position pos:line="48" pos:column="41"/></name> <operator pos:line="48" pos:column="42">*<pos:position pos:line="48" pos:column="43"/></operator><operator pos:line="48" pos:column="43">)<pos:position pos:line="48" pos:column="44"/></operator><operator pos:line="48" pos:column="44">&amp;<pos:position pos:line="48" pos:column="49"/></operator><name><name pos:line="48" pos:column="45">state<pos:position pos:line="48" pos:column="50"/></name><operator pos:line="48" pos:column="50">-&gt;<pos:position pos:line="48" pos:column="55"/></operator><name pos:line="48" pos:column="52">spacket<pos:position pos:line="48" pos:column="59"/></name></name></expr></argument>,
                    <argument><expr><name pos:line="49" pos:column="21">sbytes<pos:position pos:line="49" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="29">0<pos:position pos:line="49" pos:column="30"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="50" pos:column="21">state<pos:position pos:line="50" pos:column="26"/></name><operator pos:line="50" pos:column="26">-&gt;<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="28">conn<pos:position pos:line="50" pos:column="32"/></name><operator pos:line="50" pos:column="32">-&gt;<pos:position pos:line="50" pos:column="37"/></operator><name pos:line="50" pos:column="34">ip_addr<pos:position pos:line="50" pos:column="41"/></name><operator pos:line="50" pos:column="41">-&gt;<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="43">ai_addr<pos:position pos:line="50" pos:column="50"/></name></name></expr></argument>,
                    <argument><expr><name><name pos:line="51" pos:column="21">state<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">-&gt;<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="28">conn<pos:position pos:line="51" pos:column="32"/></name><operator pos:line="51" pos:column="32">-&gt;<pos:position pos:line="51" pos:column="37"/></operator><name pos:line="51" pos:column="34">ip_addr<pos:position pos:line="51" pos:column="41"/></name><operator pos:line="51" pos:column="41">-&gt;<pos:position pos:line="51" pos:column="46"/></operator><name pos:line="51" pos:column="43">ai_addrlen<pos:position pos:line="51" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt>
    <if pos:line="52" pos:column="5">if<condition pos:line="52" pos:column="7">(<expr><name pos:line="52" pos:column="8">sbytes<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">&lt;<pos:position pos:line="52" pos:column="19"/></operator> <literal type="number" pos:line="52" pos:column="17">0<pos:position pos:line="52" pos:column="18"/></literal></expr>)<pos:position pos:line="52" pos:column="19"/></condition><then pos:line="52" pos:column="19"> <block pos:line="52" pos:column="20">{
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">failf<pos:position pos:line="53" pos:column="12"/></name><argument_list pos:line="53" pos:column="12">(<argument><expr><name pos:line="53" pos:column="13">data<pos:position pos:line="53" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="19">"%s"<pos:position pos:line="53" pos:column="23"/></literal></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="25">Curl_strerror<pos:position pos:line="53" pos:column="38"/></name><argument_list pos:line="53" pos:column="38">(<argument><expr><name><name pos:line="53" pos:column="39">state<pos:position pos:line="53" pos:column="44"/></name><operator pos:line="53" pos:column="44">-&gt;<pos:position pos:line="53" pos:column="49"/></operator><name pos:line="53" pos:column="46">conn<pos:position pos:line="53" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="52">SOCKERRNO<pos:position pos:line="53" pos:column="61"/></name></expr></argument>)<pos:position pos:line="53" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">Curl_safefree<pos:position pos:line="55" pos:column="18"/></name><argument_list pos:line="55" pos:column="18">(<argument><expr><name pos:line="55" pos:column="19">filename<pos:position pos:line="55" pos:column="27"/></name></expr></argument>)<pos:position pos:line="55" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="29"/></expr_stmt>
    <break pos:line="56" pos:column="5">break;<pos:position pos:line="56" pos:column="11"/></break>

  <case pos:line="58" pos:column="3">case <expr><name pos:line="58" pos:column="8">TFTP_EVENT_ACK<pos:position pos:line="58" pos:column="22"/></name></expr>:<pos:position pos:line="58" pos:column="23"/></case> <comment type="block" pos:line="58" pos:column="24">/* Connected for transmit */</comment>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">infof<pos:position pos:line="59" pos:column="10"/></name><argument_list pos:line="59" pos:column="10">(<argument><expr><name pos:line="59" pos:column="11">data<pos:position pos:line="59" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="17">"%s\n"<pos:position pos:line="59" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="25">"Connected for transmit"<pos:position pos:line="59" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">state<pos:position pos:line="60" pos:column="10"/></name><operator pos:line="60" pos:column="10">-&gt;<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="12">state<pos:position pos:line="60" pos:column="17"/></name></name> <operator pos:line="60" pos:column="18">=<pos:position pos:line="60" pos:column="19"/></operator> <name pos:line="60" pos:column="20">TFTP_STATE_TX<pos:position pos:line="60" pos:column="33"/></name></expr>;<pos:position pos:line="60" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="61" pos:column="5">res<pos:position pos:line="61" pos:column="8"/></name> <operator pos:line="61" pos:column="9">=<pos:position pos:line="61" pos:column="10"/></operator> <call><name pos:line="61" pos:column="11">tftp_set_timeouts<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><name pos:line="61" pos:column="29">state<pos:position pos:line="61" pos:column="34"/></name></expr></argument>)<pos:position pos:line="61" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="36"/></expr_stmt>
    <if pos:line="62" pos:column="5">if<condition pos:line="62" pos:column="7">(<expr><name pos:line="62" pos:column="8">res<pos:position pos:line="62" pos:column="11"/></name></expr>)<pos:position pos:line="62" pos:column="12"/></condition><then pos:line="62" pos:column="12">
      <block type="pseudo"><break pos:line="63" pos:column="7">break;<pos:position pos:line="63" pos:column="13"/></break></block></then></if>
    <return pos:line="64" pos:column="5">return <expr><call><name pos:line="64" pos:column="12">tftp_tx<pos:position pos:line="64" pos:column="19"/></name><argument_list pos:line="64" pos:column="19">(<argument><expr><name pos:line="64" pos:column="20">state<pos:position pos:line="64" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="27">event<pos:position pos:line="64" pos:column="32"/></name></expr></argument>)<pos:position pos:line="64" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="34"/></return>

  <case pos:line="66" pos:column="3">case <expr><name pos:line="66" pos:column="8">TFTP_EVENT_DATA<pos:position pos:line="66" pos:column="23"/></name></expr>:<pos:position pos:line="66" pos:column="24"/></case> <comment type="block" pos:line="66" pos:column="25">/* connected for receive */</comment>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">infof<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><name pos:line="67" pos:column="11">data<pos:position pos:line="67" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="17">"%s\n"<pos:position pos:line="67" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="25">"Connected for receive"<pos:position pos:line="67" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="68" pos:column="5">state<pos:position pos:line="68" pos:column="10"/></name><operator pos:line="68" pos:column="10">-&gt;<pos:position pos:line="68" pos:column="15"/></operator><name pos:line="68" pos:column="12">state<pos:position pos:line="68" pos:column="17"/></name></name> <operator pos:line="68" pos:column="18">=<pos:position pos:line="68" pos:column="19"/></operator> <name pos:line="68" pos:column="20">TFTP_STATE_RX<pos:position pos:line="68" pos:column="33"/></name></expr>;<pos:position pos:line="68" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="69" pos:column="5">res<pos:position pos:line="69" pos:column="8"/></name> <operator pos:line="69" pos:column="9">=<pos:position pos:line="69" pos:column="10"/></operator> <call><name pos:line="69" pos:column="11">tftp_set_timeouts<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><name pos:line="69" pos:column="29">state<pos:position pos:line="69" pos:column="34"/></name></expr></argument>)<pos:position pos:line="69" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="36"/></expr_stmt>
    <if pos:line="70" pos:column="5">if<condition pos:line="70" pos:column="7">(<expr><name pos:line="70" pos:column="8">res<pos:position pos:line="70" pos:column="11"/></name></expr>)<pos:position pos:line="70" pos:column="12"/></condition><then pos:line="70" pos:column="12">
      <block type="pseudo"><break pos:line="71" pos:column="7">break;<pos:position pos:line="71" pos:column="13"/></break></block></then></if>
    <return pos:line="72" pos:column="5">return <expr><call><name pos:line="72" pos:column="12">tftp_rx<pos:position pos:line="72" pos:column="19"/></name><argument_list pos:line="72" pos:column="19">(<argument><expr><name pos:line="72" pos:column="20">state<pos:position pos:line="72" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="27">event<pos:position pos:line="72" pos:column="32"/></name></expr></argument>)<pos:position pos:line="72" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="34"/></return>

  <case pos:line="74" pos:column="3">case <expr><name pos:line="74" pos:column="8">TFTP_EVENT_ERROR<pos:position pos:line="74" pos:column="24"/></name></expr>:<pos:position pos:line="74" pos:column="25"/></case>
    <expr_stmt><expr><name><name pos:line="75" pos:column="5">state<pos:position pos:line="75" pos:column="10"/></name><operator pos:line="75" pos:column="10">-&gt;<pos:position pos:line="75" pos:column="15"/></operator><name pos:line="75" pos:column="12">state<pos:position pos:line="75" pos:column="17"/></name></name> <operator pos:line="75" pos:column="18">=<pos:position pos:line="75" pos:column="19"/></operator> <name pos:line="75" pos:column="20">TFTP_STATE_FIN<pos:position pos:line="75" pos:column="34"/></name></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>
    <break pos:line="76" pos:column="5">break;<pos:position pos:line="76" pos:column="11"/></break>

  <default pos:line="78" pos:column="3">default:<pos:position pos:line="78" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">failf<pos:position pos:line="79" pos:column="10"/></name><argument_list pos:line="79" pos:column="10">(<argument><expr><name><name pos:line="79" pos:column="11">state<pos:position pos:line="79" pos:column="16"/></name><operator pos:line="79" pos:column="16">-&gt;<pos:position pos:line="79" pos:column="21"/></operator><name pos:line="79" pos:column="18">conn<pos:position pos:line="79" pos:column="22"/></name><operator pos:line="79" pos:column="22">-&gt;<pos:position pos:line="79" pos:column="27"/></operator><name pos:line="79" pos:column="24">data<pos:position pos:line="79" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="30">"tftp_send_first: internal error"<pos:position pos:line="79" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="65"/></expr_stmt>
    <break pos:line="80" pos:column="5">break;<pos:position pos:line="80" pos:column="11"/></break>
  }<pos:position pos:line="81" pos:column="4"/></block></switch>
  <return pos:line="82" pos:column="3">return <expr><name pos:line="82" pos:column="10">res<pos:position pos:line="82" pos:column="13"/></name></expr>;<pos:position pos:line="82" pos:column="14"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

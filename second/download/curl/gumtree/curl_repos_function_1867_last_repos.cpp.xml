<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1867_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_gss_err<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">Curl_easy<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">data<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">OM_uint32<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">major_status<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="3" pos:column="26">OM_uint32<pos:position pos:line="3" pos:column="35"/></name></type> <name pos:line="3" pos:column="36">minor_status<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>,
                         <parameter><decl><type><specifier pos:line="4" pos:column="26">const<pos:position pos:line="4" pos:column="31"/></specifier> <name pos:line="4" pos:column="32">char<pos:position pos:line="4" pos:column="36"/></name> <modifier pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></modifier></type><name pos:line="4" pos:column="38">function<pos:position pos:line="4" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="47"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><call><name pos:line="6" pos:column="6">GSS_ERROR<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">major_status<pos:position pos:line="6" pos:column="28"/></name></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="30"/></condition><then pos:line="6" pos:column="30"> <block pos:line="6" pos:column="31">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">OM_uint32<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">maj_stat<pos:position pos:line="7" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="25">min_stat<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">OM_uint32<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">msg_ctx<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">gss_buffer_desc<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">status_string<pos:position pos:line="9" pos:column="34"/></name></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name><name pos:line="10" pos:column="10">buf<pos:position pos:line="10" pos:column="13"/></name><index pos:line="10" pos:column="13">[<expr><literal type="number" pos:line="10" pos:column="14">1024<pos:position pos:line="10" pos:column="18"/></literal></expr>]<pos:position pos:line="10" pos:column="19"/></index></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">size_t<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">len<pos:position pos:line="11" pos:column="15"/></name></decl>;<pos:position pos:line="11" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">len<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <literal type="number" pos:line="13" pos:column="11">0<pos:position pos:line="13" pos:column="12"/></literal></expr>;<pos:position pos:line="13" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">msg_ctx<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <literal type="number" pos:line="14" pos:column="15">0<pos:position pos:line="14" pos:column="16"/></literal></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>
    <while pos:line="15" pos:column="5">while<condition pos:line="15" pos:column="10">(<expr><operator pos:line="15" pos:column="11">!<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">msg_ctx<pos:position pos:line="15" pos:column="19"/></name></expr>)<pos:position pos:line="15" pos:column="20"/></condition> <block pos:line="15" pos:column="21">{
      <comment type="block" pos:line="16" pos:column="7">/* convert major status code (GSS-API error) to text */</comment>
      <expr_stmt><expr><name pos:line="17" pos:column="7">maj_stat<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">gss_display_status<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><operator pos:line="17" pos:column="37">&amp;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="38">min_stat<pos:position pos:line="17" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">major_status<pos:position pos:line="17" pos:column="60"/></name></expr></argument>,
                                    <argument><expr><name pos:line="18" pos:column="37">GSS_C_GSS_CODE<pos:position pos:line="18" pos:column="51"/></name></expr></argument>,
                                    <argument><expr><name pos:line="19" pos:column="37">GSS_C_NULL_OID<pos:position pos:line="19" pos:column="51"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="20" pos:column="37">&amp;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="38">msg_ctx<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="47">&amp;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="48">status_string<pos:position pos:line="20" pos:column="61"/></name></expr></argument>)<pos:position pos:line="20" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="63"/></expr_stmt>
      <if pos:line="21" pos:column="7">if<condition pos:line="21" pos:column="9">(<expr><name pos:line="21" pos:column="10">maj_stat<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">==<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">GSS_S_COMPLETE<pos:position pos:line="21" pos:column="36"/></name></expr>)<pos:position pos:line="21" pos:column="37"/></condition><then pos:line="21" pos:column="37"> <block pos:line="21" pos:column="38">{
        <if pos:line="22" pos:column="9">if<condition pos:line="22" pos:column="11">(<expr><sizeof pos:line="22" pos:column="12">sizeof<argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">buf<pos:position pos:line="22" pos:column="22"/></name></expr></argument>)<pos:position pos:line="22" pos:column="23"/></argument_list></sizeof> <operator pos:line="22" pos:column="24">&gt;<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="26">len<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">+<pos:position pos:line="22" pos:column="31"/></operator> <name><name pos:line="22" pos:column="32">status_string<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">.<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="46">length<pos:position pos:line="22" pos:column="52"/></name></name> <operator pos:line="22" pos:column="53">+<pos:position pos:line="22" pos:column="54"/></operator> <literal type="number" pos:line="22" pos:column="55">1<pos:position pos:line="22" pos:column="56"/></literal></expr>)<pos:position pos:line="22" pos:column="57"/></condition><then pos:line="22" pos:column="57"> <block pos:line="22" pos:column="58">{
          <expr_stmt><expr><call><name pos:line="23" pos:column="11">strcpy<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">buf<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">+<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">len<pos:position pos:line="23" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="29">(<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">char<pos:position pos:line="23" pos:column="34"/></name> <operator pos:line="23" pos:column="35">*<pos:position pos:line="23" pos:column="36"/></operator><operator pos:line="23" pos:column="36">)<pos:position pos:line="23" pos:column="37"/></operator> <name><name pos:line="23" pos:column="38">status_string<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">.<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="52">value<pos:position pos:line="23" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>
          <expr_stmt><expr><name pos:line="24" pos:column="11">len<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">+=<pos:position pos:line="24" pos:column="17"/></operator> <name><name pos:line="24" pos:column="18">status_string<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">.<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">length<pos:position pos:line="24" pos:column="38"/></name></name></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">gss_release_buffer<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><operator pos:line="26" pos:column="28">&amp;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="29">min_stat<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="39">&amp;<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="40">status_string<pos:position pos:line="26" pos:column="53"/></name></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>
        <break pos:line="27" pos:column="9">break;<pos:position pos:line="27" pos:column="15"/></break>
      }<pos:position pos:line="28" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">gss_release_buffer<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><operator pos:line="29" pos:column="26">&amp;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="27">min_stat<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="37">&amp;<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="38">status_string<pos:position pos:line="29" pos:column="51"/></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></while>
    <if pos:line="31" pos:column="5">if<condition pos:line="31" pos:column="7">(<expr><sizeof pos:line="31" pos:column="8">sizeof<argument_list pos:line="31" pos:column="14">(<argument><expr><name pos:line="31" pos:column="15">buf<pos:position pos:line="31" pos:column="18"/></name></expr></argument>)<pos:position pos:line="31" pos:column="19"/></argument_list></sizeof> <operator pos:line="31" pos:column="20">&gt;<pos:position pos:line="31" pos:column="24"/></operator> <name pos:line="31" pos:column="22">len<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">+<pos:position pos:line="31" pos:column="27"/></operator> <literal type="number" pos:line="31" pos:column="28">3<pos:position pos:line="31" pos:column="29"/></literal></expr>)<pos:position pos:line="31" pos:column="30"/></condition><then pos:line="31" pos:column="30"> <block pos:line="31" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">strcpy<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><name pos:line="32" pos:column="14">buf<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">+<pos:position pos:line="32" pos:column="19"/></operator> <name pos:line="32" pos:column="20">len<pos:position pos:line="32" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="25">".\n"<pos:position pos:line="32" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="33" pos:column="7">len<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">+=<pos:position pos:line="33" pos:column="13"/></operator> <literal type="number" pos:line="33" pos:column="14">2<pos:position pos:line="33" pos:column="15"/></literal></expr>;<pos:position pos:line="33" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="35" pos:column="5">msg_ctx<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <literal type="number" pos:line="35" pos:column="15">0<pos:position pos:line="35" pos:column="16"/></literal></expr>;<pos:position pos:line="35" pos:column="17"/></expr_stmt>
    <while pos:line="36" pos:column="5">while<condition pos:line="36" pos:column="10">(<expr><operator pos:line="36" pos:column="11">!<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">msg_ctx<pos:position pos:line="36" pos:column="19"/></name></expr>)<pos:position pos:line="36" pos:column="20"/></condition> <block pos:line="36" pos:column="21">{
      <comment type="block" pos:line="37" pos:column="7">/* convert minor status code (underlying routine error) to text */</comment>
      <expr_stmt><expr><name pos:line="38" pos:column="7">maj_stat<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <call><name pos:line="38" pos:column="18">gss_display_status<pos:position pos:line="38" pos:column="36"/></name><argument_list pos:line="38" pos:column="36">(<argument><expr><operator pos:line="38" pos:column="37">&amp;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="38">min_stat<pos:position pos:line="38" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="48">minor_status<pos:position pos:line="38" pos:column="60"/></name></expr></argument>,
                                    <argument><expr><name pos:line="39" pos:column="37">GSS_C_MECH_CODE<pos:position pos:line="39" pos:column="52"/></name></expr></argument>,
                                    <argument><expr><name pos:line="40" pos:column="37">GSS_C_NULL_OID<pos:position pos:line="40" pos:column="51"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="41" pos:column="37">&amp;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="38">msg_ctx<pos:position pos:line="41" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="47">&amp;<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="48">status_string<pos:position pos:line="41" pos:column="61"/></name></expr></argument>)<pos:position pos:line="41" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="63"/></expr_stmt>
      <if pos:line="42" pos:column="7">if<condition pos:line="42" pos:column="9">(<expr><name pos:line="42" pos:column="10">maj_stat<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">==<pos:position pos:line="42" pos:column="21"/></operator> <name pos:line="42" pos:column="22">GSS_S_COMPLETE<pos:position pos:line="42" pos:column="36"/></name></expr>)<pos:position pos:line="42" pos:column="37"/></condition><then pos:line="42" pos:column="37"> <block pos:line="42" pos:column="38">{
        <if pos:line="43" pos:column="9">if<condition pos:line="43" pos:column="11">(<expr><sizeof pos:line="43" pos:column="12">sizeof<argument_list pos:line="43" pos:column="18">(<argument><expr><name pos:line="43" pos:column="19">buf<pos:position pos:line="43" pos:column="22"/></name></expr></argument>)<pos:position pos:line="43" pos:column="23"/></argument_list></sizeof> <operator pos:line="43" pos:column="24">&gt;<pos:position pos:line="43" pos:column="28"/></operator> <name pos:line="43" pos:column="26">len<pos:position pos:line="43" pos:column="29"/></name> <operator pos:line="43" pos:column="30">+<pos:position pos:line="43" pos:column="31"/></operator> <name><name pos:line="43" pos:column="32">status_string<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">.<pos:position pos:line="43" pos:column="46"/></operator><name pos:line="43" pos:column="46">length<pos:position pos:line="43" pos:column="52"/></name></name></expr>)<pos:position pos:line="43" pos:column="53"/></condition><then pos:line="43" pos:column="53">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="11">strcpy<pos:position pos:line="44" pos:column="17"/></name><argument_list pos:line="44" pos:column="17">(<argument><expr><name pos:line="44" pos:column="18">buf<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">+<pos:position pos:line="44" pos:column="23"/></operator> <name pos:line="44" pos:column="24">len<pos:position pos:line="44" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="29">(<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="30">char<pos:position pos:line="44" pos:column="34"/></name> <operator pos:line="44" pos:column="35">*<pos:position pos:line="44" pos:column="36"/></operator><operator pos:line="44" pos:column="36">)<pos:position pos:line="44" pos:column="37"/></operator> <name><name pos:line="44" pos:column="38">status_string<pos:position pos:line="44" pos:column="51"/></name><operator pos:line="44" pos:column="51">.<pos:position pos:line="44" pos:column="52"/></operator><name pos:line="44" pos:column="52">value<pos:position pos:line="44" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="59"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">gss_release_buffer<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><operator pos:line="45" pos:column="28">&amp;<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="29">min_stat<pos:position pos:line="45" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="39">&amp;<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="40">status_string<pos:position pos:line="45" pos:column="53"/></name></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="55"/></expr_stmt>
        <break pos:line="46" pos:column="9">break;<pos:position pos:line="46" pos:column="15"/></break>
      }<pos:position pos:line="47" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">gss_release_buffer<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><operator pos:line="48" pos:column="26">&amp;<pos:position pos:line="48" pos:column="31"/></operator><name pos:line="48" pos:column="27">min_stat<pos:position pos:line="48" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="37">&amp;<pos:position pos:line="48" pos:column="42"/></operator><name pos:line="48" pos:column="38">status_string<pos:position pos:line="48" pos:column="51"/></name></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">failf<pos:position pos:line="50" pos:column="10"/></name><argument_list pos:line="50" pos:column="10">(<argument><expr><name pos:line="50" pos:column="11">data<pos:position pos:line="50" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="17">"GSS-API error: %s failed:\n%s"<pos:position pos:line="50" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="50">function<pos:position pos:line="50" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="60">buf<pos:position pos:line="50" pos:column="63"/></name></expr></argument>)<pos:position pos:line="50" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="65"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><literal type="number" pos:line="51" pos:column="12">1<pos:position pos:line="51" pos:column="13"/></literal></expr>;<pos:position pos:line="51" pos:column="14"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <return pos:line="54" pos:column="3">return <expr><literal type="number" pos:line="54" pos:column="10">0<pos:position pos:line="54" pos:column="11"/></literal></expr>;<pos:position pos:line="54" pos:column="12"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1395_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">hashkey<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">connectdata<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">conn<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">buf<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="2" pos:column="21">size_t<pos:position pos:line="2" pos:column="27"/></name></type> <name pos:line="2" pos:column="28">len<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list> <comment type="block" pos:line="2" pos:column="33">/* something like 128 is fine */</comment>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">hostname<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name><name pos:line="6" pos:column="6">conn<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">bits<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">.<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">socksproxy<pos:position pos:line="6" pos:column="27"/></name></name></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="5">hostname<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <name><name pos:line="7" pos:column="16">conn<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">socks_proxy<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">.<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">host<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">.<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="39">name<pos:position pos:line="7" pos:column="43"/></name></name></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt></block></then>
  <elseif pos:line="8" pos:column="3">else <if pos:line="8" pos:column="8">if<condition pos:line="8" pos:column="10">(<expr><name><name pos:line="8" pos:column="11">conn<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">bits<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">.<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">httpproxy<pos:position pos:line="8" pos:column="31"/></name></name></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">hostname<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <name><name pos:line="9" pos:column="16">conn<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">http_proxy<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">.<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">host<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">.<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="38">name<pos:position pos:line="9" pos:column="42"/></name></name></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="10" pos:column="3">else <if pos:line="10" pos:column="8">if<condition pos:line="10" pos:column="10">(<expr><name><name pos:line="10" pos:column="11">conn<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">bits<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">.<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">conn_to_host<pos:position pos:line="10" pos:column="34"/></name></name></expr>)<pos:position pos:line="10" pos:column="35"/></condition><then pos:line="10" pos:column="35">
    <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="5">hostname<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name><name pos:line="11" pos:column="16">conn<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">conn_to_host<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">.<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="35">name<pos:position pos:line="11" pos:column="39"/></name></name></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt></block></then></if></elseif>
  <else pos:line="12" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="5">hostname<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name><name pos:line="13" pos:column="16">conn<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">host<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">.<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="27">name<pos:position pos:line="13" pos:column="31"/></name></name></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">DEBUGASSERT<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">len<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">&gt;<pos:position pos:line="15" pos:column="23"/></operator> <literal type="number" pos:line="15" pos:column="21">32<pos:position pos:line="15" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* put the number first so that the hostname gets cut off if too long */</comment>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">snprintf<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name pos:line="18" pos:column="12">buf<pos:position pos:line="18" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="17">len<pos:position pos:line="18" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="22">"%ld%s"<pos:position pos:line="18" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="31">conn<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">-&gt;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="37">port<pos:position pos:line="18" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">hostname<pos:position pos:line="18" pos:column="51"/></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

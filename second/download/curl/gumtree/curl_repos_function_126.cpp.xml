<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_126.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">ftp<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name><name pos:line="1" pos:column="14">struct<pos:position pos:line="1" pos:column="20"/></name> <name pos:line="1" pos:column="21">connectdata<pos:position pos:line="1" pos:column="32"/></name></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">conn<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">retcode<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">UrlData<pos:position pos:line="5" pos:column="17"/></name></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">data<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><name><name pos:line="5" pos:column="26">conn<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="32">data<pos:position pos:line="5" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">FTP<pos:position pos:line="6" pos:column="13"/></name></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">ftp<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">dirlength<pos:position pos:line="7" pos:column="16"/></name><init pos:line="7" pos:column="16">=<expr><literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt> <comment type="block" pos:line="7" pos:column="20">/* 0 forces strlen() */</comment>

  <comment type="block" pos:line="9" pos:column="3">/* the ftp struct is already inited in ftp_connect() */</comment>
  <expr_stmt><expr><name pos:line="10" pos:column="3">ftp<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <name><name pos:line="10" pos:column="9">data<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">proto<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">.<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">ftp<pos:position pos:line="10" pos:column="24"/></name></name></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* We split the path into dir and file parts *before* we URLdecode
     it */</comment>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">ftp<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">file<pos:position pos:line="14" pos:column="12"/></name></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">strrchr<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name><name pos:line="14" pos:column="23">conn<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">ppath<pos:position pos:line="14" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="36">'/'<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name><name pos:line="15" pos:column="6">ftp<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">file<pos:position pos:line="15" pos:column="15"/></name></name></expr>)<pos:position pos:line="15" pos:column="16"/></condition><then pos:line="15" pos:column="16"> <block pos:line="15" pos:column="17">{
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">ftp<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">file<pos:position pos:line="16" pos:column="14"/></name></name><operator pos:line="16" pos:column="14">++<pos:position pos:line="16" pos:column="16"/></operator></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt> <comment type="block" pos:line="16" pos:column="18">/* point to the first letter in the file name part or
                    remain NULL */</comment>
  }<pos:position pos:line="18" pos:column="4"/></block></then>
  <else pos:line="19" pos:column="3">else <block pos:line="19" pos:column="8">{
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">ftp<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">-&gt;<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="10">file<pos:position pos:line="20" pos:column="14"/></name></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name><name pos:line="20" pos:column="17">conn<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">ppath<pos:position pos:line="20" pos:column="28"/></name></name></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt> <comment type="block" pos:line="20" pos:column="30">/* there's only a file part */</comment>
  }<pos:position pos:line="21" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name pos:line="22" pos:column="3">dirlength<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator><name><name pos:line="22" pos:column="13">ftp<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">file<pos:position pos:line="22" pos:column="22"/></name></name><operator pos:line="22" pos:column="22">-<pos:position pos:line="22" pos:column="23"/></operator><name><name pos:line="22" pos:column="23">conn<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">-&gt;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="29">ppath<pos:position pos:line="22" pos:column="34"/></name></name></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>

  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><operator pos:line="24" pos:column="6">*<pos:position pos:line="24" pos:column="7"/></operator><name><name pos:line="24" pos:column="7">ftp<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">file<pos:position pos:line="24" pos:column="16"/></name></name></expr>)<pos:position pos:line="24" pos:column="17"/></condition><then pos:line="24" pos:column="17"> <block pos:line="24" pos:column="18">{
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">ftp<pos:position pos:line="25" pos:column="8"/></name><operator pos:line="25" pos:column="8">-&gt;<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="10">file<pos:position pos:line="25" pos:column="14"/></name></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <call><name pos:line="25" pos:column="17">curl_unescape<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name><name pos:line="25" pos:column="31">ftp<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">-&gt;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="36">file<pos:position pos:line="25" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="42">0<pos:position pos:line="25" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name pos:line="26" pos:column="8">NULL<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">==<pos:position pos:line="26" pos:column="15"/></operator> <name><name pos:line="26" pos:column="16">ftp<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">file<pos:position pos:line="26" pos:column="25"/></name></name></expr>)<pos:position pos:line="26" pos:column="26"/></condition><then pos:line="26" pos:column="26"> <block pos:line="26" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">failf<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">data<pos:position pos:line="27" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="19">"no memory"<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
      <return pos:line="28" pos:column="7">return <expr><name pos:line="28" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="28" pos:column="33"/></name></expr>;<pos:position pos:line="28" pos:column="34"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
  }<pos:position pos:line="30" pos:column="4"/></block></then>
  <else pos:line="31" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="5">ftp<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">-&gt;<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="10">file<pos:position pos:line="32" pos:column="14"/></name></name><operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">NULL<pos:position pos:line="32" pos:column="19"/></name></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt></block></else></if> <comment type="block" pos:line="32" pos:column="21">/* instead of point to a zero byte, we make it a NULL
                       pointer */</comment>

  <expr_stmt><expr><name><name pos:line="35" pos:column="3">ftp<pos:position pos:line="35" pos:column="6"/></name><operator pos:line="35" pos:column="6">-&gt;<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="8">urlpath<pos:position pos:line="35" pos:column="15"/></name></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <name><name pos:line="35" pos:column="18">conn<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">-&gt;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="24">ppath<pos:position pos:line="35" pos:column="29"/></name></name></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
  <if pos:line="36" pos:column="3">if<condition pos:line="36" pos:column="5">(<expr><name pos:line="36" pos:column="6">dirlength<pos:position pos:line="36" pos:column="15"/></name></expr>)<pos:position pos:line="36" pos:column="16"/></condition><then pos:line="36" pos:column="16"> <block pos:line="36" pos:column="17">{
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">ftp<pos:position pos:line="37" pos:column="8"/></name><operator pos:line="37" pos:column="8">-&gt;<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="10">dir<pos:position pos:line="37" pos:column="13"/></name></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <call><name pos:line="37" pos:column="16">curl_unescape<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name><name pos:line="37" pos:column="30">ftp<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">-&gt;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="35">urlpath<pos:position pos:line="37" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="44">dirlength<pos:position pos:line="37" pos:column="53"/></name></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="55"/></expr_stmt>
    <if pos:line="38" pos:column="5">if<condition pos:line="38" pos:column="7">(<expr><name pos:line="38" pos:column="8">NULL<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">==<pos:position pos:line="38" pos:column="15"/></operator> <name><name pos:line="38" pos:column="16">ftp<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">-&gt;<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="21">dir<pos:position pos:line="38" pos:column="24"/></name></name></expr>)<pos:position pos:line="38" pos:column="25"/></condition><then pos:line="38" pos:column="25"> <block pos:line="38" pos:column="26">{
      <if pos:line="39" pos:column="7">if<condition pos:line="39" pos:column="9">(<expr><name><name pos:line="39" pos:column="10">ftp<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">file<pos:position pos:line="39" pos:column="19"/></name></name></expr>)<pos:position pos:line="39" pos:column="20"/></condition><then pos:line="39" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="9">free<pos:position pos:line="40" pos:column="13"/></name><argument_list pos:line="40" pos:column="13">(<argument><expr><name><name pos:line="40" pos:column="14">ftp<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">-&gt;<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="19">file<pos:position pos:line="40" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">failf<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">data<pos:position pos:line="41" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="19">"no memory"<pos:position pos:line="41" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>
      <return pos:line="42" pos:column="7">return <expr><name pos:line="42" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="42" pos:column="33"/></name></expr>;<pos:position pos:line="42" pos:column="34"/></return> <comment type="block" pos:line="42" pos:column="35">/* failure */</comment>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
  }<pos:position pos:line="44" pos:column="4"/></block></then>
  <else pos:line="45" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="46" pos:column="5">ftp<pos:position pos:line="46" pos:column="8"/></name><operator pos:line="46" pos:column="8">-&gt;<pos:position pos:line="46" pos:column="13"/></operator><name pos:line="46" pos:column="10">dir<pos:position pos:line="46" pos:column="13"/></name></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <name pos:line="46" pos:column="16">NULL<pos:position pos:line="46" pos:column="20"/></name></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name pos:line="48" pos:column="3">retcode<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">=<pos:position pos:line="48" pos:column="12"/></operator> <call><name pos:line="48" pos:column="13">_ftp<pos:position pos:line="48" pos:column="17"/></name><argument_list pos:line="48" pos:column="17">(<argument><expr><name pos:line="48" pos:column="18">conn<pos:position pos:line="48" pos:column="22"/></name></expr></argument>)<pos:position pos:line="48" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="24"/></expr_stmt>

  <return pos:line="50" pos:column="3">return <expr><name pos:line="50" pos:column="10">retcode<pos:position pos:line="50" pos:column="17"/></name></expr>;<pos:position pos:line="50" pos:column="18"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

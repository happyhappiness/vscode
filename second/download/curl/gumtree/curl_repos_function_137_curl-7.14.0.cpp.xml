<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_137_curl-7.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">internalSetEnv<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type> <name pos:line="1" pos:column="41">name<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type> <name pos:line="1" pos:column="54">value<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* Add your OS-specific code here. */</comment>
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">__riscos__<pos:position pos:line="4" pos:column="18"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">_kernel_setenv<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">name<pos:position pos:line="5" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="24">value<pos:position pos:line="5" pos:column="29"/></name></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>
<cpp:elif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">elif<pos:position pos:line="6" pos:column="6"/></cpp:directive> <expr><call><name pos:line="6" pos:column="7">defined<pos:position pos:line="6" pos:column="14"/></name> <argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">CURLDEBUG<pos:position pos:line="6" pos:column="25"/></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr></cpp:elif>
  <decl_stmt><decl><specifier pos:line="7" pos:column="3">extern<pos:position pos:line="7" pos:column="9"/></specifier> <type><name pos:line="7" pos:column="10">FILE<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">curl_debuglogfile<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">curl_debuglogfile<pos:position pos:line="8" pos:column="24"/></name></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25">
     <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="6">fprintf<pos:position pos:line="9" pos:column="13"/></name> <argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">curl_debuglogfile<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="34">"ENV %s = %s\n"<pos:position pos:line="9" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="51">name<pos:position pos:line="9" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="57">value<pos:position pos:line="9" pos:column="62"/></name></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="64"/></expr_stmt></block></then></if>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="11" pos:column="3">return;<pos:position pos:line="11" pos:column="10"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

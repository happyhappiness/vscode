<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1718_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_rand<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">Curl_easy<pos:position pos:line="1" pos:column="36"/></name></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">data<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">unsigned<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">rnd<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">size_t<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">num<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="3" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">DEBUGASSERT<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><name pos:line="5" pos:column="15">num<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">&gt;<pos:position pos:line="5" pos:column="23"/></operator> <literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>

  <while pos:line="7" pos:column="3">while<condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">num<pos:position pos:line="7" pos:column="12"/></name></expr>)<pos:position pos:line="7" pos:column="13"/></condition> <block pos:line="7" pos:column="14">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">r<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">size_t<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">left<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><ternary><condition><expr><name pos:line="9" pos:column="19">num<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> sizeof<operator pos:line="9" pos:column="31">(<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">unsigned<pos:position pos:line="9" pos:column="40"/></name> <name pos:line="9" pos:column="41">int<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">)<pos:position pos:line="9" pos:column="45"/></operator></expr> ?<pos:position pos:line="9" pos:column="47"/></condition><then pos:line="9" pos:column="47"> <expr><name pos:line="9" pos:column="48">num<pos:position pos:line="9" pos:column="51"/></name></expr> <pos:position pos:line="9" pos:column="52"/></then><else pos:line="9" pos:column="52">: <expr pos:line="9" pos:column="54">sizeof<operator pos:line="9" pos:column="60">(<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="61">unsigned<pos:position pos:line="9" pos:column="69"/></name> <name pos:line="9" pos:column="70">int<pos:position pos:line="9" pos:column="73"/></name><operator pos:line="9" pos:column="73">)<pos:position pos:line="9" pos:column="74"/></operator></expr></else></ternary></expr></init></decl>;<pos:position pos:line="9" pos:column="75"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">result<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">randit<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">data<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="27">&amp;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="28">r<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">(<expr><name pos:line="12" pos:column="8">result<pos:position pos:line="12" pos:column="14"/></name></expr>)<pos:position pos:line="12" pos:column="15"/></condition><then pos:line="12" pos:column="15">
      <block type="pseudo"><return pos:line="13" pos:column="7">return <expr><name pos:line="13" pos:column="14">result<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return></block></then></if>

    <while pos:line="15" pos:column="5">while<condition pos:line="15" pos:column="10">(<expr><name pos:line="15" pos:column="11">left<pos:position pos:line="15" pos:column="15"/></name></expr>)<pos:position pos:line="15" pos:column="16"/></condition> <block pos:line="15" pos:column="17">{
      <expr_stmt><expr><operator pos:line="16" pos:column="7">*<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">rnd<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">++<pos:position pos:line="16" pos:column="13"/></operator> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call pos:line="16" pos:column="16">(<name pos:line="16" pos:column="17">unsigned<pos:position pos:line="16" pos:column="25"/></name> <name pos:line="16" pos:column="26">char<pos:position pos:line="16" pos:column="30"/></name>)<argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">r<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">&amp;<pos:position pos:line="16" pos:column="39"/></operator> <literal type="number" pos:line="16" pos:column="36">0xFF<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name pos:line="17" pos:column="7">r<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">&gt;&gt;=<pos:position pos:line="17" pos:column="18"/></operator> <literal type="number" pos:line="17" pos:column="13">8<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="18" pos:column="7">--<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">num<pos:position pos:line="18" pos:column="12"/></name></expr>;<pos:position pos:line="18" pos:column="13"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="19" pos:column="7">--<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">left<pos:position pos:line="19" pos:column="13"/></name></expr>;<pos:position pos:line="19" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></while>
  }<pos:position pos:line="21" pos:column="4"/></block></while>

  <return pos:line="23" pos:column="3">return <expr><name pos:line="23" pos:column="10">result<pos:position pos:line="23" pos:column="16"/></name></expr>;<pos:position pos:line="23" pos:column="17"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

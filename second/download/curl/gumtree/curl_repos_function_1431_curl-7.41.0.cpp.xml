<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1431_curl-7.41.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">Curl_hash_add<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name><name pos:line="2" pos:column="15">struct<pos:position pos:line="2" pos:column="21"/></name> <name pos:line="2" pos:column="22">curl_hash<pos:position pos:line="2" pos:column="31"/></name></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">h<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">void<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">key<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">size_t<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">key_len<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">void<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">p<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">curl_hash_element<pos:position pos:line="4" pos:column="27"/></name></name>  <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">he<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">curl_llist_element<pos:position pos:line="5" pos:column="28"/></name></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">le<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">curl_llist<pos:position pos:line="6" pos:column="20"/></name></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">l<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><call><name pos:line="6" pos:column="26">FETCH_LIST<pos:position pos:line="6" pos:column="36"/></name> <argument_list pos:line="6" pos:column="37">(<argument><expr><name pos:line="6" pos:column="38">h<pos:position pos:line="6" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="41">key<pos:position pos:line="6" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="46">key_len<pos:position pos:line="6" pos:column="53"/></name></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="55"/></decl_stmt>

  <for pos:line="8" pos:column="3">for<control pos:line="8" pos:column="6">(<init><expr><name pos:line="8" pos:column="7">le<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <name><name pos:line="8" pos:column="12">l<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">head<pos:position pos:line="8" pos:column="19"/></name></name></expr>;<pos:position pos:line="8" pos:column="20"/></init> <condition><expr><name pos:line="8" pos:column="21">le<pos:position pos:line="8" pos:column="23"/></name></expr>;<pos:position pos:line="8" pos:column="24"/></condition> <incr><expr><name pos:line="8" pos:column="25">le<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <name><name pos:line="8" pos:column="30">le<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">next<pos:position pos:line="8" pos:column="38"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="39"/></control> <block pos:line="8" pos:column="40">{
    <expr_stmt><expr><name pos:line="9" pos:column="5">he<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator>struct <name pos:line="9" pos:column="18">curl_hash_element<pos:position pos:line="9" pos:column="35"/></name> <operator pos:line="9" pos:column="36">*<pos:position pos:line="9" pos:column="37"/></operator><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator> <name><name pos:line="9" pos:column="39">le<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">ptr<pos:position pos:line="9" pos:column="46"/></name></name></expr>;<pos:position pos:line="9" pos:column="47"/></expr_stmt>
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><call><name><name pos:line="10" pos:column="8">h<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">comp_func<pos:position pos:line="10" pos:column="20"/></name></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name><name pos:line="10" pos:column="21">he<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">key<pos:position pos:line="10" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="30">he<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">key_len<pos:position pos:line="10" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="43">key<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">key_len<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="57"/></condition><then pos:line="10" pos:column="57"> <block pos:line="10" pos:column="58">{
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">Curl_llist_remove<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">l<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">le<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="32">(<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">void<pos:position pos:line="11" pos:column="37"/></name> <operator pos:line="11" pos:column="38">*<pos:position pos:line="11" pos:column="39"/></operator><operator pos:line="11" pos:column="39">)<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="40">h<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="12" pos:column="7">--<pos:position pos:line="12" pos:column="9"/></operator><name><name pos:line="12" pos:column="9">h<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">size<pos:position pos:line="12" pos:column="16"/></name></name></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>
      <break pos:line="13" pos:column="7">break;<pos:position pos:line="13" pos:column="13"/></break>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
  }<pos:position pos:line="15" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="17" pos:column="3">he<pos:position pos:line="17" pos:column="5"/></name> <operator pos:line="17" pos:column="6">=<pos:position pos:line="17" pos:column="7"/></operator> <call><name pos:line="17" pos:column="8">mk_hash_element<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">key<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="29">key_len<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">p<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><name pos:line="18" pos:column="6">he<pos:position pos:line="18" pos:column="8"/></name></expr>)<pos:position pos:line="18" pos:column="9"/></condition><then pos:line="18" pos:column="9"> <block pos:line="18" pos:column="10">{
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><call><name pos:line="19" pos:column="8">Curl_llist_insert_next<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">l<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="34">l<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">tail<pos:position pos:line="19" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">he<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="47"/></condition><then pos:line="19" pos:column="47"> <block pos:line="19" pos:column="48">{
      <expr_stmt><expr><operator pos:line="20" pos:column="7">++<pos:position pos:line="20" pos:column="9"/></operator><name><name pos:line="20" pos:column="9">h<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">size<pos:position pos:line="20" pos:column="16"/></name></name></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
      <return pos:line="21" pos:column="7">return <expr><name pos:line="21" pos:column="14">p<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></return> <comment type="block" pos:line="21" pos:column="17">/* return the new entry */</comment>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="23" pos:column="5">/*
     * Couldn't insert it, destroy the 'he' element and the key again. We
     * don't call hash_element_dtor() since that would also call the
     * "destructor" for the actual data 'p'. When we fail, we shall not touch
     * that data.
     */</comment>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">free<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">(<argument><expr><name><name pos:line="29" pos:column="10">he<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">key<pos:position pos:line="29" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">free<pos:position pos:line="30" pos:column="9"/></name><argument_list pos:line="30" pos:column="9">(<argument><expr><name pos:line="30" pos:column="10">he<pos:position pos:line="30" pos:column="12"/></name></expr></argument>)<pos:position pos:line="30" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <return pos:line="33" pos:column="3">return <expr><name pos:line="33" pos:column="10">NULL<pos:position pos:line="33" pos:column="14"/></name></expr>;<pos:position pos:line="33" pos:column="15"/></return> <comment type="block" pos:line="33" pos:column="16">/* failure */</comment>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

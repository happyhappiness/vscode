<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1054_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_rewind<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">connectdata<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">conn<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="2" pos:column="25">size_t<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">thismuch<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">DEBUGASSERT<pos:position pos:line="4" pos:column="14"/></name><argument_list pos:line="4" pos:column="14">(<argument><expr><name><name pos:line="4" pos:column="15">conn<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="21">read_pos<pos:position pos:line="4" pos:column="29"/></name></name> <operator pos:line="4" pos:column="30">&gt;=<pos:position pos:line="4" pos:column="35"/></operator> <name pos:line="4" pos:column="33">thismuch<pos:position pos:line="4" pos:column="41"/></name></expr></argument>)<pos:position pos:line="4" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="6" pos:column="3">conn<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">-&gt;<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="9">read_pos<pos:position pos:line="6" pos:column="17"/></name></name> <operator pos:line="6" pos:column="18">-=<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">thismuch<pos:position pos:line="6" pos:column="29"/></name></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="7" pos:column="3">conn<pos:position pos:line="7" pos:column="7"/></name><operator pos:line="7" pos:column="7">-&gt;<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="9">bits<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">.<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">stream_was_rewound<pos:position pos:line="7" pos:column="32"/></name></name> <operator pos:line="7" pos:column="33">=<pos:position pos:line="7" pos:column="34"/></operator> <name pos:line="7" pos:column="35">TRUE<pos:position pos:line="7" pos:column="39"/></name></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>

<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">DEBUGBUILD<pos:position pos:line="9" pos:column="18"/></name></cpp:ifdef>
  <block pos:line="10" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name><name pos:line="11" pos:column="10">buf<pos:position pos:line="11" pos:column="13"/></name><index pos:line="11" pos:column="13">[<expr><literal type="number" pos:line="11" pos:column="14">512<pos:position pos:line="11" pos:column="17"/></literal> <operator pos:line="11" pos:column="18">+<pos:position pos:line="11" pos:column="19"/></operator> <literal type="number" pos:line="11" pos:column="20">1<pos:position pos:line="11" pos:column="21"/></literal></expr>]<pos:position pos:line="11" pos:column="22"/></index></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">size_t<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">show<pos:position pos:line="12" pos:column="16"/></name></decl>;<pos:position pos:line="12" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">show<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">CURLMIN<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name><name pos:line="14" pos:column="20">conn<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">buf_len<pos:position pos:line="14" pos:column="33"/></name></name> <operator pos:line="14" pos:column="34">-<pos:position pos:line="14" pos:column="35"/></operator> <name><name pos:line="14" pos:column="36">conn<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-&gt;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="42">read_pos<pos:position pos:line="14" pos:column="50"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="52">sizeof<argument_list pos:line="14" pos:column="58">(<argument><expr><name pos:line="14" pos:column="59">buf<pos:position pos:line="14" pos:column="62"/></name></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></sizeof><operator pos:line="14" pos:column="63">-<pos:position pos:line="14" pos:column="64"/></operator><literal type="number" pos:line="14" pos:column="64">1<pos:position pos:line="14" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt>
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><name><name pos:line="15" pos:column="8">conn<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">master_buffer<pos:position pos:line="15" pos:column="27"/></name></name></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28"> <block pos:line="15" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">memcpy<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name pos:line="16" pos:column="14">buf<pos:position pos:line="16" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="19">conn<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">-&gt;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="25">master_buffer<pos:position pos:line="16" pos:column="38"/></name></name> <operator pos:line="16" pos:column="39">+<pos:position pos:line="16" pos:column="40"/></operator> <name><name pos:line="16" pos:column="41">conn<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">read_pos<pos:position pos:line="16" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="57">show<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">buf<pos:position pos:line="17" pos:column="10"/></name><index pos:line="17" pos:column="10">[<expr><name pos:line="17" pos:column="11">show<pos:position pos:line="17" pos:column="15"/></name></expr>]<pos:position pos:line="17" pos:column="16"/></index></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <literal type="char" pos:line="17" pos:column="19">'\0'<pos:position pos:line="17" pos:column="23"/></literal></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then>
    <else pos:line="19" pos:column="5">else <block pos:line="19" pos:column="10">{
      <expr_stmt><expr><name><name pos:line="20" pos:column="7">buf<pos:position pos:line="20" pos:column="10"/></name><index pos:line="20" pos:column="10">[<expr><literal type="number" pos:line="20" pos:column="11">0<pos:position pos:line="20" pos:column="12"/></literal></expr>]<pos:position pos:line="20" pos:column="13"/></index></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <literal type="char" pos:line="20" pos:column="16">'\0'<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">DEBUGF<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><call><name pos:line="23" pos:column="12">infof<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name><name pos:line="23" pos:column="18">conn<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">data<pos:position pos:line="23" pos:column="28"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="24" pos:column="18">"Buffer after stream rewind (read_pos = %zu): [%s]\n"<pos:position pos:line="24" pos:column="71"/></literal></expr></argument>,
                 <argument><expr><name><name pos:line="25" pos:column="18">conn<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">read_pos<pos:position pos:line="25" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">buf<pos:position pos:line="25" pos:column="37"/></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

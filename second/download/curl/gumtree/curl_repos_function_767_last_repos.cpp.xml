<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_767_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">printable<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">inbuf<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">size_t<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">inlength<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">outbuf<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">newbuf<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">newsize<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">outsize<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">outincr<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="13">o<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>

<cpp:define pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">define<pos:position pos:line="10" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="10" pos:column="9">HEX_FMT_STR<pos:position pos:line="10" pos:column="20"/></name></cpp:macro>  <cpp:value pos:line="10" pos:column="22">"[0x%02X]"<pos:position pos:line="10" pos:column="32"/></cpp:value></cpp:define>
<cpp:define pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">define<pos:position pos:line="11" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="11" pos:column="9">HEX_STR_LEN<pos:position pos:line="11" pos:column="20"/></name></cpp:macro>  <cpp:value pos:line="11" pos:column="22">6<pos:position pos:line="11" pos:column="23"/></cpp:value></cpp:define>
<cpp:define pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">define<pos:position pos:line="12" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="12" pos:column="9">NOTHING_STR<pos:position pos:line="12" pos:column="20"/></name></cpp:macro>  <cpp:value pos:line="12" pos:column="22">"[NOTHING]"<pos:position pos:line="12" pos:column="33"/></cpp:value></cpp:define>
<cpp:define pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">define<pos:position pos:line="13" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="13" pos:column="9">NOTHING_LEN<pos:position pos:line="13" pos:column="20"/></name></cpp:macro>  <cpp:value pos:line="13" pos:column="22">9<pos:position pos:line="13" pos:column="23"/></cpp:value></cpp:define>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">inlength<pos:position pos:line="15" pos:column="15"/></name></expr>)<pos:position pos:line="15" pos:column="16"/></condition><then pos:line="15" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="5">inlength<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">strlen<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">inbuf<pos:position pos:line="16" pos:column="28"/></name></expr></argument>)<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt></block></then></if>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><name pos:line="18" pos:column="6">inlength<pos:position pos:line="18" pos:column="14"/></name></expr>)<pos:position pos:line="18" pos:column="15"/></condition><then pos:line="18" pos:column="15"> <block pos:line="18" pos:column="16">{
    <expr_stmt><expr><name pos:line="19" pos:column="5">outincr<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="19" pos:column="15">(<pos:position pos:line="19" pos:column="16"/></operator><operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">inlength<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">/<pos:position pos:line="19" pos:column="26"/></operator><literal type="number" pos:line="19" pos:column="26">2<pos:position pos:line="19" pos:column="27"/></literal><operator pos:line="19" pos:column="27">)<pos:position pos:line="19" pos:column="28"/></operator> <operator pos:line="19" pos:column="29">&lt;<pos:position pos:line="19" pos:column="33"/></operator> <operator pos:line="19" pos:column="31">(<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">HEX_STR_LEN<pos:position pos:line="19" pos:column="43"/></name> <operator pos:line="19" pos:column="44">+<pos:position pos:line="19" pos:column="45"/></operator> <literal type="number" pos:line="19" pos:column="46">1<pos:position pos:line="19" pos:column="47"/></literal><operator pos:line="19" pos:column="47">)<pos:position pos:line="19" pos:column="48"/></operator><operator pos:line="19" pos:column="48">)<pos:position pos:line="19" pos:column="49"/></operator></expr> ?<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51">
      <expr><name pos:line="20" pos:column="7">HEX_STR_LEN<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">+<pos:position pos:line="20" pos:column="20"/></operator> <literal type="number" pos:line="20" pos:column="21">1<pos:position pos:line="20" pos:column="22"/></literal></expr> <pos:position pos:line="20" pos:column="23"/></then><else pos:line="20" pos:column="23">: <expr><name pos:line="20" pos:column="25">inlength<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">/<pos:position pos:line="20" pos:column="34"/></operator><literal type="number" pos:line="20" pos:column="34">2<pos:position pos:line="20" pos:column="35"/></literal></expr></else></ternary></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">outsize<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">inlength<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">+<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">outincr<pos:position pos:line="21" pos:column="33"/></name></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></then>
  <else pos:line="23" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="5">outsize<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">NOTHING_LEN<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">+<pos:position pos:line="24" pos:column="28"/></operator> <literal type="number" pos:line="24" pos:column="29">1<pos:position pos:line="24" pos:column="30"/></literal></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name pos:line="26" pos:column="3">outbuf<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <call><name pos:line="26" pos:column="12">malloc<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">outsize<pos:position pos:line="26" pos:column="26"/></name></expr></argument>)<pos:position pos:line="26" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><operator pos:line="27" pos:column="6">!<pos:position pos:line="27" pos:column="7"/></operator><name pos:line="27" pos:column="7">outbuf<pos:position pos:line="27" pos:column="13"/></name></expr>)<pos:position pos:line="27" pos:column="14"/></condition><then pos:line="27" pos:column="14">
    <block type="pseudo"><return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">NULL<pos:position pos:line="28" pos:column="16"/></name></expr>;<pos:position pos:line="28" pos:column="17"/></return></block></then></if>

  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><operator pos:line="30" pos:column="6">!<pos:position pos:line="30" pos:column="7"/></operator><name pos:line="30" pos:column="7">inlength<pos:position pos:line="30" pos:column="15"/></name></expr>)<pos:position pos:line="30" pos:column="16"/></condition><then pos:line="30" pos:column="16"> <block pos:line="30" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">snprintf<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><operator pos:line="31" pos:column="14">&amp;<pos:position pos:line="31" pos:column="19"/></operator><name><name pos:line="31" pos:column="15">outbuf<pos:position pos:line="31" pos:column="21"/></name><index pos:line="31" pos:column="21">[<expr><literal type="number" pos:line="31" pos:column="22">0<pos:position pos:line="31" pos:column="23"/></literal></expr>]<pos:position pos:line="31" pos:column="24"/></index></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="26">outsize<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="35">"%s"<pos:position pos:line="31" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="41">NOTHING_STR<pos:position pos:line="31" pos:column="52"/></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">outbuf<pos:position pos:line="32" pos:column="18"/></name></expr>;<pos:position pos:line="32" pos:column="19"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <for pos:line="35" pos:column="3">for<control pos:line="35" pos:column="6">(<init><expr><name pos:line="35" pos:column="7">i<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">=<pos:position pos:line="35" pos:column="10"/></operator> <literal type="number" pos:line="35" pos:column="11">0<pos:position pos:line="35" pos:column="12"/></literal></expr>;<pos:position pos:line="35" pos:column="13"/></init> <condition><expr><name pos:line="35" pos:column="14">i<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">&lt;<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="16">inlength<pos:position pos:line="35" pos:column="24"/></name></expr>;<pos:position pos:line="35" pos:column="25"/></condition> <incr><expr><name pos:line="35" pos:column="26">i<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">++<pos:position pos:line="35" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="30"/></control> <block pos:line="35" pos:column="31">{

    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><name pos:line="37" pos:column="8">o<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">&gt;<pos:position pos:line="37" pos:column="14"/></operator> <name pos:line="37" pos:column="12">outsize<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">-<pos:position pos:line="37" pos:column="21"/></operator> <operator pos:line="37" pos:column="22">(<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="23">HEX_STR_LEN<pos:position pos:line="37" pos:column="34"/></name> <operator pos:line="37" pos:column="35">+<pos:position pos:line="37" pos:column="36"/></operator> <literal type="number" pos:line="37" pos:column="37">1<pos:position pos:line="37" pos:column="38"/></literal><operator pos:line="37" pos:column="38">)<pos:position pos:line="37" pos:column="39"/></operator></expr>)<pos:position pos:line="37" pos:column="40"/></condition><then pos:line="37" pos:column="40"> <block pos:line="37" pos:column="41">{
      <expr_stmt><expr><name pos:line="38" pos:column="7">newsize<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <name pos:line="38" pos:column="17">outsize<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">+<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">outincr<pos:position pos:line="38" pos:column="34"/></name></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="39" pos:column="7">newbuf<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">realloc<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">outbuf<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">newsize<pos:position pos:line="39" pos:column="39"/></name></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>
      <if pos:line="40" pos:column="7">if<condition pos:line="40" pos:column="9">(<expr><operator pos:line="40" pos:column="10">!<pos:position pos:line="40" pos:column="11"/></operator><name pos:line="40" pos:column="11">newbuf<pos:position pos:line="40" pos:column="17"/></name></expr>)<pos:position pos:line="40" pos:column="18"/></condition><then pos:line="40" pos:column="18"> <block pos:line="40" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">free<pos:position pos:line="41" pos:column="13"/></name><argument_list pos:line="41" pos:column="13">(<argument><expr><name pos:line="41" pos:column="14">outbuf<pos:position pos:line="41" pos:column="20"/></name></expr></argument>)<pos:position pos:line="41" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="22"/></expr_stmt>
        <return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">NULL<pos:position pos:line="42" pos:column="20"/></name></expr>;<pos:position pos:line="42" pos:column="21"/></return>
      }<pos:position pos:line="43" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="44" pos:column="7">outbuf<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <name pos:line="44" pos:column="16">newbuf<pos:position pos:line="44" pos:column="22"/></name></expr>;<pos:position pos:line="44" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="45" pos:column="7">outsize<pos:position pos:line="45" pos:column="14"/></name> <operator pos:line="45" pos:column="15">=<pos:position pos:line="45" pos:column="16"/></operator> <name pos:line="45" pos:column="17">newsize<pos:position pos:line="45" pos:column="24"/></name></expr>;<pos:position pos:line="45" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <if pos:line="48" pos:column="5">if<condition pos:line="48" pos:column="7">(<expr><operator pos:line="48" pos:column="8">(<pos:position pos:line="48" pos:column="9"/></operator><name><name pos:line="48" pos:column="9">inbuf<pos:position pos:line="48" pos:column="14"/></name><index pos:line="48" pos:column="14">[<expr><name pos:line="48" pos:column="15">i<pos:position pos:line="48" pos:column="16"/></name></expr>]<pos:position pos:line="48" pos:column="17"/></index></name> <operator pos:line="48" pos:column="18">&gt;<pos:position pos:line="48" pos:column="22"/></operator> <literal type="number" pos:line="48" pos:column="20">0x20<pos:position pos:line="48" pos:column="24"/></literal><operator pos:line="48" pos:column="24">)<pos:position pos:line="48" pos:column="25"/></operator> <operator pos:line="48" pos:column="26">&amp;&amp;<pos:position pos:line="48" pos:column="36"/></operator> <operator pos:line="48" pos:column="29">(<pos:position pos:line="48" pos:column="30"/></operator><name><name pos:line="48" pos:column="30">inbuf<pos:position pos:line="48" pos:column="35"/></name><index pos:line="48" pos:column="35">[<expr><name pos:line="48" pos:column="36">i<pos:position pos:line="48" pos:column="37"/></name></expr>]<pos:position pos:line="48" pos:column="38"/></index></name> <operator pos:line="48" pos:column="39">&lt;<pos:position pos:line="48" pos:column="43"/></operator> <literal type="number" pos:line="48" pos:column="41">0x7F<pos:position pos:line="48" pos:column="45"/></literal><operator pos:line="48" pos:column="45">)<pos:position pos:line="48" pos:column="46"/></operator></expr>)<pos:position pos:line="48" pos:column="47"/></condition><then pos:line="48" pos:column="47"> <block pos:line="48" pos:column="48">{
      <expr_stmt><expr><name><name pos:line="49" pos:column="7">outbuf<pos:position pos:line="49" pos:column="13"/></name><index pos:line="49" pos:column="13">[<expr><name pos:line="49" pos:column="14">o<pos:position pos:line="49" pos:column="15"/></name></expr>]<pos:position pos:line="49" pos:column="16"/></index></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <name><name pos:line="49" pos:column="19">inbuf<pos:position pos:line="49" pos:column="24"/></name><index pos:line="49" pos:column="24">[<expr><name pos:line="49" pos:column="25">i<pos:position pos:line="49" pos:column="26"/></name></expr>]<pos:position pos:line="49" pos:column="27"/></index></name></expr>;<pos:position pos:line="49" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="50" pos:column="7">o<pos:position pos:line="50" pos:column="8"/></name><operator pos:line="50" pos:column="8">++<pos:position pos:line="50" pos:column="10"/></operator></expr>;<pos:position pos:line="50" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then>
    <else pos:line="52" pos:column="5">else <block pos:line="52" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">snprintf<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><operator pos:line="53" pos:column="16">&amp;<pos:position pos:line="53" pos:column="21"/></operator><name><name pos:line="53" pos:column="17">outbuf<pos:position pos:line="53" pos:column="23"/></name><index pos:line="53" pos:column="23">[<expr><name pos:line="53" pos:column="24">o<pos:position pos:line="53" pos:column="25"/></name></expr>]<pos:position pos:line="53" pos:column="26"/></index></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="28">outsize<pos:position pos:line="53" pos:column="35"/></name> <operator pos:line="53" pos:column="36">-<pos:position pos:line="53" pos:column="37"/></operator> <name pos:line="53" pos:column="38">o<pos:position pos:line="53" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="41">HEX_FMT_STR<pos:position pos:line="53" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="54">inbuf<pos:position pos:line="53" pos:column="59"/></name><index pos:line="53" pos:column="59">[<expr><name pos:line="53" pos:column="60">i<pos:position pos:line="53" pos:column="61"/></name></expr>]<pos:position pos:line="53" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="53" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><name pos:line="54" pos:column="7">o<pos:position pos:line="54" pos:column="8"/></name> <operator pos:line="54" pos:column="9">+=<pos:position pos:line="54" pos:column="11"/></operator> <name pos:line="54" pos:column="12">HEX_STR_LEN<pos:position pos:line="54" pos:column="23"/></name></expr>;<pos:position pos:line="54" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></else></if>

  }<pos:position pos:line="57" pos:column="4"/></block></for>
  <expr_stmt><expr><name><name pos:line="58" pos:column="3">outbuf<pos:position pos:line="58" pos:column="9"/></name><index pos:line="58" pos:column="9">[<expr><name pos:line="58" pos:column="10">o<pos:position pos:line="58" pos:column="11"/></name></expr>]<pos:position pos:line="58" pos:column="12"/></index></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <literal type="char" pos:line="58" pos:column="15">'\0'<pos:position pos:line="58" pos:column="19"/></literal></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>

  <return pos:line="60" pos:column="3">return <expr><name pos:line="60" pos:column="10">outbuf<pos:position pos:line="60" pos:column="16"/></name></expr>;<pos:position pos:line="60" pos:column="17"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

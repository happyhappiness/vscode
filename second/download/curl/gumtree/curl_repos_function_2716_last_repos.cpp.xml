<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2716_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">gtls_connect_step1<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name><name pos:line="2" pos:column="20">struct<pos:position pos:line="2" pos:column="26"/></name> <name pos:line="2" pos:column="27">connectdata<pos:position pos:line="2" pos:column="38"/></name></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">conn<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="3" pos:column="20">int<pos:position pos:line="3" pos:column="23"/></name></type> <name pos:line="3" pos:column="24">sockindex<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="34"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Curl_easy<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">data<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">conn<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">data<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">ssl_connect_data<pos:position pos:line="6" pos:column="26"/></name></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">connssl<pos:position pos:line="6" pos:column="35"/></name> <init pos:line="6" pos:column="36">= <expr><operator pos:line="6" pos:column="38">&amp;<pos:position pos:line="6" pos:column="43"/></operator><name><name pos:line="6" pos:column="39">conn<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">-&gt;<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="45">ssl<pos:position pos:line="6" pos:column="48"/></name><index pos:line="6" pos:column="48">[<expr><name pos:line="6" pos:column="49">sockindex<pos:position pos:line="6" pos:column="58"/></name></expr>]<pos:position pos:line="6" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">unsigned<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">int<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">init_flags<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gnutls_session_t<pos:position pos:line="8" pos:column="19"/></name></type> <name pos:line="8" pos:column="20">session<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">rc<pos:position pos:line="9" pos:column="9"/></name></decl>;<pos:position pos:line="9" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">bool<pos:position pos:line="10" pos:column="7"/></name></type> <name pos:line="10" pos:column="8">sni<pos:position pos:line="10" pos:column="11"/></name> <init pos:line="10" pos:column="12">= <expr><name pos:line="10" pos:column="14">TRUE<pos:position pos:line="10" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt> <comment type="block" pos:line="10" pos:column="20">/* default is SNI enabled */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">void<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">transport_ptr<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><name pos:line="11" pos:column="25">NULL<pos:position pos:line="11" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">gnutls_push_func<pos:position pos:line="12" pos:column="19"/></name></type> <name pos:line="12" pos:column="20">gnutls_transport_push<pos:position pos:line="12" pos:column="41"/></name> <init pos:line="12" pos:column="42">= <expr><name pos:line="12" pos:column="44">NULL<pos:position pos:line="12" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">gnutls_pull_func<pos:position pos:line="13" pos:column="19"/></name></type> <name pos:line="13" pos:column="20">gnutls_transport_pull<pos:position pos:line="13" pos:column="41"/></name> <init pos:line="13" pos:column="42">= <expr><name pos:line="13" pos:column="44">NULL<pos:position pos:line="13" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="49"/></decl_stmt>
<cpp:ifdef pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">ifdef<pos:position pos:line="14" pos:column="7"/></cpp:directive> <name pos:line="14" pos:column="8">ENABLE_IPV6<pos:position pos:line="14" pos:column="19"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="15" pos:column="3">struct<pos:position pos:line="15" pos:column="9"/></name> <name pos:line="15" pos:column="10">in6_addr<pos:position pos:line="15" pos:column="18"/></name></name></type> <name pos:line="15" pos:column="19">addr<pos:position pos:line="15" pos:column="23"/></name></decl>;<pos:position pos:line="15" pos:column="24"/></decl_stmt>
<cpp:else pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">else<pos:position pos:line="16" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name><name pos:line="17" pos:column="3">struct<pos:position pos:line="17" pos:column="9"/></name> <name pos:line="17" pos:column="10">in_addr<pos:position pos:line="17" pos:column="17"/></name></name></type> <name pos:line="17" pos:column="18">addr<pos:position pos:line="17" pos:column="22"/></name></decl>;<pos:position pos:line="17" pos:column="23"/></decl_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifndef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifndef<pos:position pos:line="19" pos:column="8"/></cpp:directive> <name pos:line="19" pos:column="9">USE_GNUTLS_PRIORITY_SET_DIRECT<pos:position pos:line="19" pos:column="39"/></name></cpp:ifndef>
  <decl_stmt><decl><specifier pos:line="20" pos:column="3">static<pos:position pos:line="20" pos:column="9"/></specifier> <type><specifier pos:line="20" pos:column="10">const<pos:position pos:line="20" pos:column="15"/></specifier> <name pos:line="20" pos:column="16">int<pos:position pos:line="20" pos:column="19"/></name></type> <name><name pos:line="20" pos:column="20">cipher_priority<pos:position pos:line="20" pos:column="35"/></name><index pos:line="20" pos:column="35">[]<pos:position pos:line="20" pos:column="37"/></index></name> <init pos:line="20" pos:column="38">= <expr><block pos:line="20" pos:column="40">{
  <comment type="block" pos:line="21" pos:column="3">/* These two ciphers were added to GnuTLS as late as ver. 3.0.1,
     but this code path is only ever used for ver. &lt; 2.12.0.
     GNUTLS_CIPHER_AES_128_GCM,
     GNUTLS_CIPHER_AES_256_GCM,
  */</comment>
    <expr><name pos:line="26" pos:column="5">GNUTLS_CIPHER_AES_128_CBC<pos:position pos:line="26" pos:column="30"/></name></expr>,
    <expr><name pos:line="27" pos:column="5">GNUTLS_CIPHER_AES_256_CBC<pos:position pos:line="27" pos:column="30"/></name></expr>,
    <expr><name pos:line="28" pos:column="5">GNUTLS_CIPHER_CAMELLIA_128_CBC<pos:position pos:line="28" pos:column="35"/></name></expr>,
    <expr><name pos:line="29" pos:column="5">GNUTLS_CIPHER_CAMELLIA_256_CBC<pos:position pos:line="29" pos:column="35"/></name></expr>,
    <expr><name pos:line="30" pos:column="5">GNUTLS_CIPHER_3DES_CBC<pos:position pos:line="30" pos:column="27"/></name></expr>,
  }<pos:position pos:line="31" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="31" pos:column="5"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="32" pos:column="3">static<pos:position pos:line="32" pos:column="9"/></specifier> <type><specifier pos:line="32" pos:column="10">const<pos:position pos:line="32" pos:column="15"/></specifier> <name pos:line="32" pos:column="16">int<pos:position pos:line="32" pos:column="19"/></name></type> <name><name pos:line="32" pos:column="20">cert_type_priority<pos:position pos:line="32" pos:column="38"/></name><index pos:line="32" pos:column="38">[]<pos:position pos:line="32" pos:column="40"/></index></name> <init pos:line="32" pos:column="41">= <expr><block pos:line="32" pos:column="43">{ <expr><name pos:line="32" pos:column="45">GNUTLS_CRT_X509<pos:position pos:line="32" pos:column="60"/></name></expr>, <expr><literal type="number" pos:line="32" pos:column="62">0<pos:position pos:line="32" pos:column="63"/></literal></expr> }<pos:position pos:line="32" pos:column="65"/></block></expr></init></decl>;<pos:position pos:line="32" pos:column="66"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="33" pos:column="3">int<pos:position pos:line="33" pos:column="6"/></name></type> <name><name pos:line="33" pos:column="7">protocol_priority<pos:position pos:line="33" pos:column="24"/></name><index pos:line="33" pos:column="24">[]<pos:position pos:line="33" pos:column="26"/></index></name> <init pos:line="33" pos:column="27">= <expr><block pos:line="33" pos:column="29">{ <expr><literal type="number" pos:line="33" pos:column="31">0<pos:position pos:line="33" pos:column="32"/></literal></expr>, <expr><literal type="number" pos:line="33" pos:column="34">0<pos:position pos:line="33" pos:column="35"/></literal></expr>, <expr><literal type="number" pos:line="33" pos:column="37">0<pos:position pos:line="33" pos:column="38"/></literal></expr>, <expr><literal type="number" pos:line="33" pos:column="40">0<pos:position pos:line="33" pos:column="41"/></literal></expr> }<pos:position pos:line="33" pos:column="43"/></block></expr></init></decl>;<pos:position pos:line="33" pos:column="44"/></decl_stmt>
<cpp:else pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">else<pos:position pos:line="34" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><specifier pos:line="35" pos:column="3">const<pos:position pos:line="35" pos:column="8"/></specifier> <name pos:line="35" pos:column="9">char<pos:position pos:line="35" pos:column="13"/></name> <modifier pos:line="35" pos:column="14">*<pos:position pos:line="35" pos:column="15"/></modifier></type><name pos:line="35" pos:column="15">prioritylist<pos:position pos:line="35" pos:column="27"/></name></decl>;<pos:position pos:line="35" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="36" pos:column="3">const<pos:position pos:line="36" pos:column="8"/></specifier> <name pos:line="36" pos:column="9">char<pos:position pos:line="36" pos:column="13"/></name> <modifier pos:line="36" pos:column="14">*<pos:position pos:line="36" pos:column="15"/></modifier></type><name pos:line="36" pos:column="15">err<pos:position pos:line="36" pos:column="18"/></name> <init pos:line="36" pos:column="19">= <expr><name pos:line="36" pos:column="21">NULL<pos:position pos:line="36" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="36" pos:column="26"/></decl_stmt>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>

  <decl_stmt><decl><type><specifier pos:line="39" pos:column="3">const<pos:position pos:line="39" pos:column="8"/></specifier> <name pos:line="39" pos:column="9">char<pos:position pos:line="39" pos:column="13"/></name> <modifier pos:line="39" pos:column="14">*<pos:position pos:line="39" pos:column="15"/></modifier> <specifier pos:line="39" pos:column="16">const<pos:position pos:line="39" pos:column="21"/></specifier></type> <name pos:line="39" pos:column="22">hostname<pos:position pos:line="39" pos:column="30"/></name> <init pos:line="39" pos:column="31">= <expr><ternary><condition><expr><call><name pos:line="39" pos:column="33">SSL_IS_PROXY<pos:position pos:line="39" pos:column="45"/></name><argument_list pos:line="39" pos:column="45">()<pos:position pos:line="39" pos:column="47"/></argument_list></call></expr> ?<pos:position pos:line="39" pos:column="49"/></condition><then pos:line="39" pos:column="49"> <expr><name><name pos:line="39" pos:column="50">conn<pos:position pos:line="39" pos:column="54"/></name><operator pos:line="39" pos:column="54">-&gt;<pos:position pos:line="39" pos:column="59"/></operator><name pos:line="39" pos:column="56">http_proxy<pos:position pos:line="39" pos:column="66"/></name><operator pos:line="39" pos:column="66">.<pos:position pos:line="39" pos:column="67"/></operator><name pos:line="39" pos:column="67">host<pos:position pos:line="39" pos:column="71"/></name><operator pos:line="39" pos:column="71">.<pos:position pos:line="39" pos:column="72"/></operator><name pos:line="39" pos:column="72">name<pos:position pos:line="39" pos:column="76"/></name></name></expr> <pos:position pos:line="39" pos:column="77"/></then><else pos:line="39" pos:column="77">:
    <expr><name><name pos:line="40" pos:column="5">conn<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="11">host<pos:position pos:line="40" pos:column="15"/></name><operator pos:line="40" pos:column="15">.<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="16">name<pos:position pos:line="40" pos:column="20"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="40" pos:column="21"/></decl_stmt>

  <if pos:line="42" pos:column="3">if<condition pos:line="42" pos:column="5">(<expr><name><name pos:line="42" pos:column="6">connssl<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">-&gt;<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="15">state<pos:position pos:line="42" pos:column="20"/></name></name> <operator pos:line="42" pos:column="21">==<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="24">ssl_connection_complete<pos:position pos:line="42" pos:column="47"/></name></expr>)<pos:position pos:line="42" pos:column="48"/></condition><then pos:line="42" pos:column="48">
    <comment type="block" pos:line="43" pos:column="5">/* to make us tolerant against being called more than once for the
       same connection */</comment>
    <block type="pseudo"><return pos:line="45" pos:column="5">return <expr><name pos:line="45" pos:column="12">CURLE_OK<pos:position pos:line="45" pos:column="20"/></name></expr>;<pos:position pos:line="45" pos:column="21"/></return></block></then></if>

  <if pos:line="47" pos:column="3">if<condition pos:line="47" pos:column="5">(<expr><operator pos:line="47" pos:column="6">!<pos:position pos:line="47" pos:column="7"/></operator><name pos:line="47" pos:column="7">gtls_inited<pos:position pos:line="47" pos:column="18"/></name></expr>)<pos:position pos:line="47" pos:column="19"/></condition><then pos:line="47" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="5">Curl_gtls_init<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">()<pos:position pos:line="48" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="22"/></expr_stmt></block></then></if>

  <if pos:line="50" pos:column="3">if<condition pos:line="50" pos:column="5">(<expr><call><name pos:line="50" pos:column="6">SSL_CONN_CONFIG<pos:position pos:line="50" pos:column="21"/></name><argument_list pos:line="50" pos:column="21">(<argument><expr><name pos:line="50" pos:column="22">version<pos:position pos:line="50" pos:column="29"/></name></expr></argument>)<pos:position pos:line="50" pos:column="30"/></argument_list></call> <operator pos:line="50" pos:column="31">==<pos:position pos:line="50" pos:column="33"/></operator> <name pos:line="50" pos:column="34">CURL_SSLVERSION_SSLv2<pos:position pos:line="50" pos:column="55"/></name></expr>)<pos:position pos:line="50" pos:column="56"/></condition><then pos:line="50" pos:column="56"> <block pos:line="50" pos:column="57">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">failf<pos:position pos:line="51" pos:column="10"/></name><argument_list pos:line="51" pos:column="10">(<argument><expr><name pos:line="51" pos:column="11">data<pos:position pos:line="51" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="17">"GnuTLS does not support SSLv2"<pos:position pos:line="51" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="50"/></expr_stmt>
    <return pos:line="52" pos:column="5">return <expr><name pos:line="52" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="52" pos:column="35"/></name></expr>;<pos:position pos:line="52" pos:column="36"/></return>
  }<pos:position pos:line="53" pos:column="4"/></block></then>
  <elseif pos:line="54" pos:column="3">else <if pos:line="54" pos:column="8">if<condition pos:line="54" pos:column="10">(<expr><call><name pos:line="54" pos:column="11">SSL_CONN_CONFIG<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><name pos:line="54" pos:column="27">version<pos:position pos:line="54" pos:column="34"/></name></expr></argument>)<pos:position pos:line="54" pos:column="35"/></argument_list></call> <operator pos:line="54" pos:column="36">==<pos:position pos:line="54" pos:column="38"/></operator> <name pos:line="54" pos:column="39">CURL_SSLVERSION_SSLv3<pos:position pos:line="54" pos:column="60"/></name></expr>)<pos:position pos:line="54" pos:column="61"/></condition><then pos:line="54" pos:column="61">
    <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="5">sni<pos:position pos:line="55" pos:column="8"/></name> <operator pos:line="55" pos:column="9">=<pos:position pos:line="55" pos:column="10"/></operator> <name pos:line="55" pos:column="11">FALSE<pos:position pos:line="55" pos:column="16"/></name></expr>;<pos:position pos:line="55" pos:column="17"/></expr_stmt></block></then></if></elseif></if> <comment type="block" pos:line="55" pos:column="18">/* SSLv3 has no SNI */</comment>

  <comment type="block" pos:line="57" pos:column="3">/* allocate a cred struct */</comment>
  <expr_stmt><expr><name pos:line="58" pos:column="3">rc<pos:position pos:line="58" pos:column="5"/></name> <operator pos:line="58" pos:column="6">=<pos:position pos:line="58" pos:column="7"/></operator> <call><name pos:line="58" pos:column="8">gnutls_certificate_allocate_credentials<pos:position pos:line="58" pos:column="47"/></name><argument_list pos:line="58" pos:column="47">(<argument><expr><operator pos:line="58" pos:column="48">&amp;<pos:position pos:line="58" pos:column="53"/></operator><name><name pos:line="58" pos:column="49">BACKEND<pos:position pos:line="58" pos:column="56"/></name><operator pos:line="58" pos:column="56">-&gt;<pos:position pos:line="58" pos:column="61"/></operator><name pos:line="58" pos:column="58">cred<pos:position pos:line="58" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="64"/></expr_stmt>
  <if pos:line="59" pos:column="3">if<condition pos:line="59" pos:column="5">(<expr><name pos:line="59" pos:column="6">rc<pos:position pos:line="59" pos:column="8"/></name> <operator pos:line="59" pos:column="9">!=<pos:position pos:line="59" pos:column="11"/></operator> <name pos:line="59" pos:column="12">GNUTLS_E_SUCCESS<pos:position pos:line="59" pos:column="28"/></name></expr>)<pos:position pos:line="59" pos:column="29"/></condition><then pos:line="59" pos:column="29"> <block pos:line="59" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">failf<pos:position pos:line="60" pos:column="10"/></name><argument_list pos:line="60" pos:column="10">(<argument><expr><name pos:line="60" pos:column="11">data<pos:position pos:line="60" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="17">"gnutls_cert_all_cred() failed: %s"<pos:position pos:line="60" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="54">gnutls_strerror<pos:position pos:line="60" pos:column="69"/></name><argument_list pos:line="60" pos:column="69">(<argument><expr><name pos:line="60" pos:column="70">rc<pos:position pos:line="60" pos:column="72"/></name></expr></argument>)<pos:position pos:line="60" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="75"/></expr_stmt>
    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="61" pos:column="35"/></name></expr>;<pos:position pos:line="61" pos:column="36"/></return>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">ifdef<pos:position pos:line="64" pos:column="7"/></cpp:directive> <name pos:line="64" pos:column="8">USE_TLS_SRP<pos:position pos:line="64" pos:column="19"/></name></cpp:ifdef>
  <if pos:line="65" pos:column="3">if<condition pos:line="65" pos:column="5">(<expr><call><name pos:line="65" pos:column="6">SSL_SET_OPTION<pos:position pos:line="65" pos:column="20"/></name><argument_list pos:line="65" pos:column="20">(<argument><expr><name pos:line="65" pos:column="21">authtype<pos:position pos:line="65" pos:column="29"/></name></expr></argument>)<pos:position pos:line="65" pos:column="30"/></argument_list></call> <operator pos:line="65" pos:column="31">==<pos:position pos:line="65" pos:column="33"/></operator> <name pos:line="65" pos:column="34">CURL_TLSAUTH_SRP<pos:position pos:line="65" pos:column="50"/></name></expr>)<pos:position pos:line="65" pos:column="51"/></condition><then pos:line="65" pos:column="51"> <block pos:line="65" pos:column="52">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">infof<pos:position pos:line="66" pos:column="10"/></name><argument_list pos:line="66" pos:column="10">(<argument><expr><name pos:line="66" pos:column="11">data<pos:position pos:line="66" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="17">"Using TLS-SRP username: %s\n"<pos:position pos:line="66" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="49">SSL_SET_OPTION<pos:position pos:line="66" pos:column="63"/></name><argument_list pos:line="66" pos:column="63">(<argument><expr><name pos:line="66" pos:column="64">username<pos:position pos:line="66" pos:column="72"/></name></expr></argument>)<pos:position pos:line="66" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="75"/></expr_stmt>

    <expr_stmt><expr><name pos:line="68" pos:column="5">rc<pos:position pos:line="68" pos:column="7"/></name> <operator pos:line="68" pos:column="8">=<pos:position pos:line="68" pos:column="9"/></operator> <call><name pos:line="68" pos:column="10">gnutls_srp_allocate_client_credentials<pos:position pos:line="68" pos:column="48"/></name><argument_list pos:line="68" pos:column="48">(
           <argument><expr><operator pos:line="69" pos:column="12">&amp;<pos:position pos:line="69" pos:column="17"/></operator><name><name pos:line="69" pos:column="13">BACKEND<pos:position pos:line="69" pos:column="20"/></name><operator pos:line="69" pos:column="20">-&gt;<pos:position pos:line="69" pos:column="25"/></operator><name pos:line="69" pos:column="22">srp_client_cred<pos:position pos:line="69" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="39"/></expr_stmt>
    <if pos:line="70" pos:column="5">if<condition pos:line="70" pos:column="7">(<expr><name pos:line="70" pos:column="8">rc<pos:position pos:line="70" pos:column="10"/></name> <operator pos:line="70" pos:column="11">!=<pos:position pos:line="70" pos:column="13"/></operator> <name pos:line="70" pos:column="14">GNUTLS_E_SUCCESS<pos:position pos:line="70" pos:column="30"/></name></expr>)<pos:position pos:line="70" pos:column="31"/></condition><then pos:line="70" pos:column="31"> <block pos:line="70" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="71" pos:column="7">failf<pos:position pos:line="71" pos:column="12"/></name><argument_list pos:line="71" pos:column="12">(<argument><expr><name pos:line="71" pos:column="13">data<pos:position pos:line="71" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="19">"gnutls_srp_allocate_client_cred() failed: %s"<pos:position pos:line="71" pos:column="65"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="72" pos:column="13">gnutls_strerror<pos:position pos:line="72" pos:column="28"/></name><argument_list pos:line="72" pos:column="28">(<argument><expr><name pos:line="72" pos:column="29">rc<pos:position pos:line="72" pos:column="31"/></name></expr></argument>)<pos:position pos:line="72" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="34"/></expr_stmt>
      <return pos:line="73" pos:column="7">return <expr><name pos:line="73" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="73" pos:column="33"/></name></expr>;<pos:position pos:line="73" pos:column="34"/></return>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="76" pos:column="5">rc<pos:position pos:line="76" pos:column="7"/></name> <operator pos:line="76" pos:column="8">=<pos:position pos:line="76" pos:column="9"/></operator> <call><name pos:line="76" pos:column="10">gnutls_srp_set_client_credentials<pos:position pos:line="76" pos:column="43"/></name><argument_list pos:line="76" pos:column="43">(<argument><expr><name><name pos:line="76" pos:column="44">BACKEND<pos:position pos:line="76" pos:column="51"/></name><operator pos:line="76" pos:column="51">-&gt;<pos:position pos:line="76" pos:column="56"/></operator><name pos:line="76" pos:column="53">srp_client_cred<pos:position pos:line="76" pos:column="68"/></name></name></expr></argument>,
                                           <argument><expr><call><name pos:line="77" pos:column="44">SSL_SET_OPTION<pos:position pos:line="77" pos:column="58"/></name><argument_list pos:line="77" pos:column="58">(<argument><expr><name pos:line="77" pos:column="59">username<pos:position pos:line="77" pos:column="67"/></name></expr></argument>)<pos:position pos:line="77" pos:column="68"/></argument_list></call></expr></argument>,
                                           <argument><expr><call><name pos:line="78" pos:column="44">SSL_SET_OPTION<pos:position pos:line="78" pos:column="58"/></name><argument_list pos:line="78" pos:column="58">(<argument><expr><name pos:line="78" pos:column="59">password<pos:position pos:line="78" pos:column="67"/></name></expr></argument>)<pos:position pos:line="78" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="70"/></expr_stmt>
    <if pos:line="79" pos:column="5">if<condition pos:line="79" pos:column="7">(<expr><name pos:line="79" pos:column="8">rc<pos:position pos:line="79" pos:column="10"/></name> <operator pos:line="79" pos:column="11">!=<pos:position pos:line="79" pos:column="13"/></operator> <name pos:line="79" pos:column="14">GNUTLS_E_SUCCESS<pos:position pos:line="79" pos:column="30"/></name></expr>)<pos:position pos:line="79" pos:column="31"/></condition><then pos:line="79" pos:column="31"> <block pos:line="79" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="80" pos:column="7">failf<pos:position pos:line="80" pos:column="12"/></name><argument_list pos:line="80" pos:column="12">(<argument><expr><name pos:line="80" pos:column="13">data<pos:position pos:line="80" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="19">"gnutls_srp_set_client_cred() failed: %s"<pos:position pos:line="80" pos:column="60"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="81" pos:column="13">gnutls_strerror<pos:position pos:line="81" pos:column="28"/></name><argument_list pos:line="81" pos:column="28">(<argument><expr><name pos:line="81" pos:column="29">rc<pos:position pos:line="81" pos:column="31"/></name></expr></argument>)<pos:position pos:line="81" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="34"/></expr_stmt>
      <return pos:line="82" pos:column="7">return <expr><name pos:line="82" pos:column="14">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="82" pos:column="41"/></name></expr>;<pos:position pos:line="82" pos:column="42"/></return>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>
  }<pos:position pos:line="84" pos:column="4"/></block></then></if>
<cpp:endif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">endif<pos:position pos:line="85" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="87" pos:column="3">if<condition pos:line="87" pos:column="5">(<expr><call><name pos:line="87" pos:column="6">SSL_CONN_CONFIG<pos:position pos:line="87" pos:column="21"/></name><argument_list pos:line="87" pos:column="21">(<argument><expr><name pos:line="87" pos:column="22">CAfile<pos:position pos:line="87" pos:column="28"/></name></expr></argument>)<pos:position pos:line="87" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="30"/></condition><then pos:line="87" pos:column="30"> <block pos:line="87" pos:column="31">{
    <comment type="block" pos:line="88" pos:column="5">/* set the trusted CA cert bundle file */</comment>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">gnutls_certificate_set_verify_flags<pos:position pos:line="89" pos:column="40"/></name><argument_list pos:line="89" pos:column="40">(<argument><expr><name><name pos:line="89" pos:column="41">BACKEND<pos:position pos:line="89" pos:column="48"/></name><operator pos:line="89" pos:column="48">-&gt;<pos:position pos:line="89" pos:column="53"/></operator><name pos:line="89" pos:column="50">cred<pos:position pos:line="89" pos:column="54"/></name></name></expr></argument>,
                                        <argument><expr><name pos:line="90" pos:column="41">GNUTLS_VERIFY_ALLOW_X509_V1_CA_CRT<pos:position pos:line="90" pos:column="75"/></name></expr></argument>)<pos:position pos:line="90" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="77"/></expr_stmt>

    <expr_stmt><expr><name pos:line="92" pos:column="5">rc<pos:position pos:line="92" pos:column="7"/></name> <operator pos:line="92" pos:column="8">=<pos:position pos:line="92" pos:column="9"/></operator> <call><name pos:line="92" pos:column="10">gnutls_certificate_set_x509_trust_file<pos:position pos:line="92" pos:column="48"/></name><argument_list pos:line="92" pos:column="48">(<argument><expr><name><name pos:line="92" pos:column="49">BACKEND<pos:position pos:line="92" pos:column="56"/></name><operator pos:line="92" pos:column="56">-&gt;<pos:position pos:line="92" pos:column="61"/></operator><name pos:line="92" pos:column="58">cred<pos:position pos:line="92" pos:column="62"/></name></name></expr></argument>,
                                                <argument><expr><call><name pos:line="93" pos:column="49">SSL_CONN_CONFIG<pos:position pos:line="93" pos:column="64"/></name><argument_list pos:line="93" pos:column="64">(<argument><expr><name pos:line="93" pos:column="65">CAfile<pos:position pos:line="93" pos:column="71"/></name></expr></argument>)<pos:position pos:line="93" pos:column="72"/></argument_list></call></expr></argument>,
                                                <argument><expr><name pos:line="94" pos:column="49">GNUTLS_X509_FMT_PEM<pos:position pos:line="94" pos:column="68"/></name></expr></argument>)<pos:position pos:line="94" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="70"/></expr_stmt>
    <if pos:line="95" pos:column="5">if<condition pos:line="95" pos:column="7">(<expr><name pos:line="95" pos:column="8">rc<pos:position pos:line="95" pos:column="10"/></name> <operator pos:line="95" pos:column="11">&lt;<pos:position pos:line="95" pos:column="15"/></operator> <literal type="number" pos:line="95" pos:column="13">0<pos:position pos:line="95" pos:column="14"/></literal></expr>)<pos:position pos:line="95" pos:column="15"/></condition><then pos:line="95" pos:column="15"> <block pos:line="95" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="96" pos:column="7">infof<pos:position pos:line="96" pos:column="12"/></name><argument_list pos:line="96" pos:column="12">(<argument><expr><name pos:line="96" pos:column="13">data<pos:position pos:line="96" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="19">"error reading ca cert file %s (%s)\n"<pos:position pos:line="96" pos:column="57"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="97" pos:column="13">SSL_CONN_CONFIG<pos:position pos:line="97" pos:column="28"/></name><argument_list pos:line="97" pos:column="28">(<argument><expr><name pos:line="97" pos:column="29">CAfile<pos:position pos:line="97" pos:column="35"/></name></expr></argument>)<pos:position pos:line="97" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="97" pos:column="38">gnutls_strerror<pos:position pos:line="97" pos:column="53"/></name><argument_list pos:line="97" pos:column="53">(<argument><expr><name pos:line="97" pos:column="54">rc<pos:position pos:line="97" pos:column="56"/></name></expr></argument>)<pos:position pos:line="97" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="59"/></expr_stmt>
      <if pos:line="98" pos:column="7">if<condition pos:line="98" pos:column="9">(<expr><call><name pos:line="98" pos:column="10">SSL_CONN_CONFIG<pos:position pos:line="98" pos:column="25"/></name><argument_list pos:line="98" pos:column="25">(<argument><expr><name pos:line="98" pos:column="26">verifypeer<pos:position pos:line="98" pos:column="36"/></name></expr></argument>)<pos:position pos:line="98" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="38"/></condition><then pos:line="98" pos:column="38">
        <block type="pseudo"><return pos:line="99" pos:column="9">return <expr><name pos:line="99" pos:column="16">CURLE_SSL_CACERT_BADFILE<pos:position pos:line="99" pos:column="40"/></name></expr>;<pos:position pos:line="99" pos:column="41"/></return></block></then></if>
    }<pos:position pos:line="100" pos:column="6"/></block></then>
    <else pos:line="101" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="7">infof<pos:position pos:line="102" pos:column="12"/></name><argument_list pos:line="102" pos:column="12">(<argument><expr><name pos:line="102" pos:column="13">data<pos:position pos:line="102" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="19">"found %d certificates in %s\n"<pos:position pos:line="102" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="52">rc<pos:position pos:line="102" pos:column="54"/></name></expr></argument>,
            <argument><expr><call><name pos:line="103" pos:column="13">SSL_CONN_CONFIG<pos:position pos:line="103" pos:column="28"/></name><argument_list pos:line="103" pos:column="28">(<argument><expr><name pos:line="103" pos:column="29">CAfile<pos:position pos:line="103" pos:column="35"/></name></expr></argument>)<pos:position pos:line="103" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="103" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="38"/></expr_stmt></block></else></if>
  }<pos:position pos:line="104" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">ifdef<pos:position pos:line="106" pos:column="7"/></cpp:directive> <name pos:line="106" pos:column="8">HAS_CAPATH<pos:position pos:line="106" pos:column="18"/></name></cpp:ifdef>
  <if pos:line="107" pos:column="3">if<condition pos:line="107" pos:column="5">(<expr><call><name pos:line="107" pos:column="6">SSL_CONN_CONFIG<pos:position pos:line="107" pos:column="21"/></name><argument_list pos:line="107" pos:column="21">(<argument><expr><name pos:line="107" pos:column="22">CApath<pos:position pos:line="107" pos:column="28"/></name></expr></argument>)<pos:position pos:line="107" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="107" pos:column="30"/></condition><then pos:line="107" pos:column="30"> <block pos:line="107" pos:column="31">{
    <comment type="block" pos:line="108" pos:column="5">/* set the trusted CA cert directory */</comment>
    <expr_stmt><expr><name pos:line="109" pos:column="5">rc<pos:position pos:line="109" pos:column="7"/></name> <operator pos:line="109" pos:column="8">=<pos:position pos:line="109" pos:column="9"/></operator> <call><name pos:line="109" pos:column="10">gnutls_certificate_set_x509_trust_dir<pos:position pos:line="109" pos:column="47"/></name><argument_list pos:line="109" pos:column="47">(<argument><expr><name><name pos:line="109" pos:column="48">BACKEND<pos:position pos:line="109" pos:column="55"/></name><operator pos:line="109" pos:column="55">-&gt;<pos:position pos:line="109" pos:column="60"/></operator><name pos:line="109" pos:column="57">cred<pos:position pos:line="109" pos:column="61"/></name></name></expr></argument>,
                                               <argument><expr><call><name pos:line="110" pos:column="48">SSL_CONN_CONFIG<pos:position pos:line="110" pos:column="63"/></name><argument_list pos:line="110" pos:column="63">(<argument><expr><name pos:line="110" pos:column="64">CApath<pos:position pos:line="110" pos:column="70"/></name></expr></argument>)<pos:position pos:line="110" pos:column="71"/></argument_list></call></expr></argument>,
                                               <argument><expr><name pos:line="111" pos:column="48">GNUTLS_X509_FMT_PEM<pos:position pos:line="111" pos:column="67"/></name></expr></argument>)<pos:position pos:line="111" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="69"/></expr_stmt>
    <if pos:line="112" pos:column="5">if<condition pos:line="112" pos:column="7">(<expr><name pos:line="112" pos:column="8">rc<pos:position pos:line="112" pos:column="10"/></name> <operator pos:line="112" pos:column="11">&lt;<pos:position pos:line="112" pos:column="15"/></operator> <literal type="number" pos:line="112" pos:column="13">0<pos:position pos:line="112" pos:column="14"/></literal></expr>)<pos:position pos:line="112" pos:column="15"/></condition><then pos:line="112" pos:column="15"> <block pos:line="112" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="113" pos:column="7">infof<pos:position pos:line="113" pos:column="12"/></name><argument_list pos:line="113" pos:column="12">(<argument><expr><name pos:line="113" pos:column="13">data<pos:position pos:line="113" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="19">"error reading ca cert file %s (%s)\n"<pos:position pos:line="113" pos:column="57"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="114" pos:column="13">SSL_CONN_CONFIG<pos:position pos:line="114" pos:column="28"/></name><argument_list pos:line="114" pos:column="28">(<argument><expr><name pos:line="114" pos:column="29">CApath<pos:position pos:line="114" pos:column="35"/></name></expr></argument>)<pos:position pos:line="114" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="114" pos:column="38">gnutls_strerror<pos:position pos:line="114" pos:column="53"/></name><argument_list pos:line="114" pos:column="53">(<argument><expr><name pos:line="114" pos:column="54">rc<pos:position pos:line="114" pos:column="56"/></name></expr></argument>)<pos:position pos:line="114" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="114" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="59"/></expr_stmt>
      <if pos:line="115" pos:column="7">if<condition pos:line="115" pos:column="9">(<expr><call><name pos:line="115" pos:column="10">SSL_CONN_CONFIG<pos:position pos:line="115" pos:column="25"/></name><argument_list pos:line="115" pos:column="25">(<argument><expr><name pos:line="115" pos:column="26">verifypeer<pos:position pos:line="115" pos:column="36"/></name></expr></argument>)<pos:position pos:line="115" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="115" pos:column="38"/></condition><then pos:line="115" pos:column="38">
        <block type="pseudo"><return pos:line="116" pos:column="9">return <expr><name pos:line="116" pos:column="16">CURLE_SSL_CACERT_BADFILE<pos:position pos:line="116" pos:column="40"/></name></expr>;<pos:position pos:line="116" pos:column="41"/></return></block></then></if>
    }<pos:position pos:line="117" pos:column="6"/></block></then>
    <else pos:line="118" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="119" pos:column="7">infof<pos:position pos:line="119" pos:column="12"/></name><argument_list pos:line="119" pos:column="12">(<argument><expr><name pos:line="119" pos:column="13">data<pos:position pos:line="119" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="19">"found %d certificates in %s\n"<pos:position pos:line="119" pos:column="50"/></literal></expr></argument>,
            <argument><expr><name pos:line="120" pos:column="13">rc<pos:position pos:line="120" pos:column="15"/></name></expr></argument>, <argument><expr><call><name pos:line="120" pos:column="17">SSL_CONN_CONFIG<pos:position pos:line="120" pos:column="32"/></name><argument_list pos:line="120" pos:column="32">(<argument><expr><name pos:line="120" pos:column="33">CApath<pos:position pos:line="120" pos:column="39"/></name></expr></argument>)<pos:position pos:line="120" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="120" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="42"/></expr_stmt></block></else></if>
  }<pos:position pos:line="121" pos:column="4"/></block></then></if>
<cpp:endif pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">endif<pos:position pos:line="122" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">ifdef<pos:position pos:line="124" pos:column="7"/></cpp:directive> <name pos:line="124" pos:column="8">CURL_CA_FALLBACK<pos:position pos:line="124" pos:column="24"/></name></cpp:ifdef>
  <comment type="block" pos:line="125" pos:column="3">/* use system ca certificate store as fallback */</comment>
  <if pos:line="126" pos:column="3">if<condition pos:line="126" pos:column="5">(<expr><call><name pos:line="126" pos:column="6">SSL_CONN_CONFIG<pos:position pos:line="126" pos:column="21"/></name><argument_list pos:line="126" pos:column="21">(<argument><expr><name pos:line="126" pos:column="22">verifypeer<pos:position pos:line="126" pos:column="32"/></name></expr></argument>)<pos:position pos:line="126" pos:column="33"/></argument_list></call> <operator pos:line="126" pos:column="34">&amp;&amp;<pos:position pos:line="126" pos:column="44"/></operator>
     <operator pos:line="127" pos:column="6">!<pos:position pos:line="127" pos:column="7"/></operator><operator pos:line="127" pos:column="7">(<pos:position pos:line="127" pos:column="8"/></operator><call><name pos:line="127" pos:column="8">SSL_CONN_CONFIG<pos:position pos:line="127" pos:column="23"/></name><argument_list pos:line="127" pos:column="23">(<argument><expr><name pos:line="127" pos:column="24">CAfile<pos:position pos:line="127" pos:column="30"/></name></expr></argument>)<pos:position pos:line="127" pos:column="31"/></argument_list></call> <operator pos:line="127" pos:column="32">||<pos:position pos:line="127" pos:column="34"/></operator> <call><name pos:line="127" pos:column="35">SSL_CONN_CONFIG<pos:position pos:line="127" pos:column="50"/></name><argument_list pos:line="127" pos:column="50">(<argument><expr><name pos:line="127" pos:column="51">CApath<pos:position pos:line="127" pos:column="57"/></name></expr></argument>)<pos:position pos:line="127" pos:column="58"/></argument_list></call><operator pos:line="127" pos:column="58">)<pos:position pos:line="127" pos:column="59"/></operator></expr>)<pos:position pos:line="127" pos:column="60"/></condition><then pos:line="127" pos:column="60"> <block pos:line="127" pos:column="61">{
    <expr_stmt><expr><call><name pos:line="128" pos:column="5">gnutls_certificate_set_x509_system_trust<pos:position pos:line="128" pos:column="45"/></name><argument_list pos:line="128" pos:column="45">(<argument><expr><name><name pos:line="128" pos:column="46">BACKEND<pos:position pos:line="128" pos:column="53"/></name><operator pos:line="128" pos:column="53">-&gt;<pos:position pos:line="128" pos:column="58"/></operator><name pos:line="128" pos:column="55">cred<pos:position pos:line="128" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="129" pos:column="4"/></block></then></if>
<cpp:endif pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">endif<pos:position pos:line="130" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="132" pos:column="3">if<condition pos:line="132" pos:column="5">(<expr><call><name pos:line="132" pos:column="6">SSL_SET_OPTION<pos:position pos:line="132" pos:column="20"/></name><argument_list pos:line="132" pos:column="20">(<argument><expr><name pos:line="132" pos:column="21">CRLfile<pos:position pos:line="132" pos:column="28"/></name></expr></argument>)<pos:position pos:line="132" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="132" pos:column="30"/></condition><then pos:line="132" pos:column="30"> <block pos:line="132" pos:column="31">{
    <comment type="block" pos:line="133" pos:column="5">/* set the CRL list file */</comment>
    <expr_stmt><expr><name pos:line="134" pos:column="5">rc<pos:position pos:line="134" pos:column="7"/></name> <operator pos:line="134" pos:column="8">=<pos:position pos:line="134" pos:column="9"/></operator> <call><name pos:line="134" pos:column="10">gnutls_certificate_set_x509_crl_file<pos:position pos:line="134" pos:column="46"/></name><argument_list pos:line="134" pos:column="46">(<argument><expr><name><name pos:line="134" pos:column="47">BACKEND<pos:position pos:line="134" pos:column="54"/></name><operator pos:line="134" pos:column="54">-&gt;<pos:position pos:line="134" pos:column="59"/></operator><name pos:line="134" pos:column="56">cred<pos:position pos:line="134" pos:column="60"/></name></name></expr></argument>,
                                              <argument><expr><call><name pos:line="135" pos:column="47">SSL_SET_OPTION<pos:position pos:line="135" pos:column="61"/></name><argument_list pos:line="135" pos:column="61">(<argument><expr><name pos:line="135" pos:column="62">CRLfile<pos:position pos:line="135" pos:column="69"/></name></expr></argument>)<pos:position pos:line="135" pos:column="70"/></argument_list></call></expr></argument>,
                                              <argument><expr><name pos:line="136" pos:column="47">GNUTLS_X509_FMT_PEM<pos:position pos:line="136" pos:column="66"/></name></expr></argument>)<pos:position pos:line="136" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="68"/></expr_stmt>
    <if pos:line="137" pos:column="5">if<condition pos:line="137" pos:column="7">(<expr><name pos:line="137" pos:column="8">rc<pos:position pos:line="137" pos:column="10"/></name> <operator pos:line="137" pos:column="11">&lt;<pos:position pos:line="137" pos:column="15"/></operator> <literal type="number" pos:line="137" pos:column="13">0<pos:position pos:line="137" pos:column="14"/></literal></expr>)<pos:position pos:line="137" pos:column="15"/></condition><then pos:line="137" pos:column="15"> <block pos:line="137" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="138" pos:column="7">failf<pos:position pos:line="138" pos:column="12"/></name><argument_list pos:line="138" pos:column="12">(<argument><expr><name pos:line="138" pos:column="13">data<pos:position pos:line="138" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="19">"error reading crl file %s (%s)"<pos:position pos:line="138" pos:column="51"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="139" pos:column="13">SSL_SET_OPTION<pos:position pos:line="139" pos:column="27"/></name><argument_list pos:line="139" pos:column="27">(<argument><expr><name pos:line="139" pos:column="28">CRLfile<pos:position pos:line="139" pos:column="35"/></name></expr></argument>)<pos:position pos:line="139" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="139" pos:column="38">gnutls_strerror<pos:position pos:line="139" pos:column="53"/></name><argument_list pos:line="139" pos:column="53">(<argument><expr><name pos:line="139" pos:column="54">rc<pos:position pos:line="139" pos:column="56"/></name></expr></argument>)<pos:position pos:line="139" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="139" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="59"/></expr_stmt>
      <return pos:line="140" pos:column="7">return <expr><name pos:line="140" pos:column="14">CURLE_SSL_CRL_BADFILE<pos:position pos:line="140" pos:column="35"/></name></expr>;<pos:position pos:line="140" pos:column="36"/></return>
    }<pos:position pos:line="141" pos:column="6"/></block></then>
    <else pos:line="142" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="143" pos:column="7">infof<pos:position pos:line="143" pos:column="12"/></name><argument_list pos:line="143" pos:column="12">(<argument><expr><name pos:line="143" pos:column="13">data<pos:position pos:line="143" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="19">"found %d CRL in %s\n"<pos:position pos:line="143" pos:column="41"/></literal></expr></argument>,
            <argument><expr><name pos:line="144" pos:column="13">rc<pos:position pos:line="144" pos:column="15"/></name></expr></argument>, <argument><expr><call><name pos:line="144" pos:column="17">SSL_SET_OPTION<pos:position pos:line="144" pos:column="31"/></name><argument_list pos:line="144" pos:column="31">(<argument><expr><name pos:line="144" pos:column="32">CRLfile<pos:position pos:line="144" pos:column="39"/></name></expr></argument>)<pos:position pos:line="144" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="144" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="42"/></expr_stmt></block></else></if>
  }<pos:position pos:line="145" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="147" pos:column="3">/* Initialize TLS session as a client */</comment>
  <expr_stmt><expr><name pos:line="148" pos:column="3">init_flags<pos:position pos:line="148" pos:column="13"/></name> <operator pos:line="148" pos:column="14">=<pos:position pos:line="148" pos:column="15"/></operator> <name pos:line="148" pos:column="16">GNUTLS_CLIENT<pos:position pos:line="148" pos:column="29"/></name></expr>;<pos:position pos:line="148" pos:column="30"/></expr_stmt>

<cpp:if pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">if<pos:position pos:line="150" pos:column="4"/></cpp:directive> <expr><call><name pos:line="150" pos:column="5">defined<pos:position pos:line="150" pos:column="12"/></name><argument_list pos:line="150" pos:column="12">(<argument><expr><name pos:line="150" pos:column="13">GNUTLS_NO_TICKETS<pos:position pos:line="150" pos:column="30"/></name></expr></argument>)<pos:position pos:line="150" pos:column="31"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="151" pos:column="3">/* Disable TLS session tickets */</comment>
  <expr_stmt><expr><name pos:line="152" pos:column="3">init_flags<pos:position pos:line="152" pos:column="13"/></name> <operator pos:line="152" pos:column="14">|=<pos:position pos:line="152" pos:column="16"/></operator> <name pos:line="152" pos:column="17">GNUTLS_NO_TICKETS<pos:position pos:line="152" pos:column="34"/></name></expr>;<pos:position pos:line="152" pos:column="35"/></expr_stmt>
<cpp:endif pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">endif<pos:position pos:line="153" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="155" pos:column="3">rc<pos:position pos:line="155" pos:column="5"/></name> <operator pos:line="155" pos:column="6">=<pos:position pos:line="155" pos:column="7"/></operator> <call><name pos:line="155" pos:column="8">gnutls_init<pos:position pos:line="155" pos:column="19"/></name><argument_list pos:line="155" pos:column="19">(<argument><expr><operator pos:line="155" pos:column="20">&amp;<pos:position pos:line="155" pos:column="25"/></operator><name><name pos:line="155" pos:column="21">BACKEND<pos:position pos:line="155" pos:column="28"/></name><operator pos:line="155" pos:column="28">-&gt;<pos:position pos:line="155" pos:column="33"/></operator><name pos:line="155" pos:column="30">session<pos:position pos:line="155" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="39">init_flags<pos:position pos:line="155" pos:column="49"/></name></expr></argument>)<pos:position pos:line="155" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="51"/></expr_stmt>
  <if pos:line="156" pos:column="3">if<condition pos:line="156" pos:column="5">(<expr><name pos:line="156" pos:column="6">rc<pos:position pos:line="156" pos:column="8"/></name> <operator pos:line="156" pos:column="9">!=<pos:position pos:line="156" pos:column="11"/></operator> <name pos:line="156" pos:column="12">GNUTLS_E_SUCCESS<pos:position pos:line="156" pos:column="28"/></name></expr>)<pos:position pos:line="156" pos:column="29"/></condition><then pos:line="156" pos:column="29"> <block pos:line="156" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="157" pos:column="5">failf<pos:position pos:line="157" pos:column="10"/></name><argument_list pos:line="157" pos:column="10">(<argument><expr><name pos:line="157" pos:column="11">data<pos:position pos:line="157" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="17">"gnutls_init() failed: %d"<pos:position pos:line="157" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="157" pos:column="45">rc<pos:position pos:line="157" pos:column="47"/></name></expr></argument>)<pos:position pos:line="157" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="49"/></expr_stmt>
    <return pos:line="158" pos:column="5">return <expr><name pos:line="158" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="158" pos:column="35"/></name></expr>;<pos:position pos:line="158" pos:column="36"/></return>
  }<pos:position pos:line="159" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="161" pos:column="3">/* convenient assign */</comment>
  <expr_stmt><expr><name pos:line="162" pos:column="3">session<pos:position pos:line="162" pos:column="10"/></name> <operator pos:line="162" pos:column="11">=<pos:position pos:line="162" pos:column="12"/></operator> <name><name pos:line="162" pos:column="13">BACKEND<pos:position pos:line="162" pos:column="20"/></name><operator pos:line="162" pos:column="20">-&gt;<pos:position pos:line="162" pos:column="25"/></operator><name pos:line="162" pos:column="22">session<pos:position pos:line="162" pos:column="29"/></name></name></expr>;<pos:position pos:line="162" pos:column="30"/></expr_stmt>

  <if pos:line="164" pos:column="3">if<condition pos:line="164" pos:column="5">(<expr><operator pos:line="164" pos:column="6">(<pos:position pos:line="164" pos:column="7"/></operator><literal type="number" pos:line="164" pos:column="7">0<pos:position pos:line="164" pos:column="8"/></literal> <operator pos:line="164" pos:column="9">==<pos:position pos:line="164" pos:column="11"/></operator> <call><name pos:line="164" pos:column="12">Curl_inet_pton<pos:position pos:line="164" pos:column="26"/></name><argument_list pos:line="164" pos:column="26">(<argument><expr><name pos:line="164" pos:column="27">AF_INET<pos:position pos:line="164" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="36">hostname<pos:position pos:line="164" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="164" pos:column="46">&amp;<pos:position pos:line="164" pos:column="51"/></operator><name pos:line="164" pos:column="47">addr<pos:position pos:line="164" pos:column="51"/></name></expr></argument>)<pos:position pos:line="164" pos:column="52"/></argument_list></call><operator pos:line="164" pos:column="52">)<pos:position pos:line="164" pos:column="53"/></operator> <operator pos:line="164" pos:column="54">&amp;&amp;<pos:position pos:line="164" pos:column="64"/></operator>
<cpp:ifdef pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">ifdef<pos:position pos:line="165" pos:column="7"/></cpp:directive> <name pos:line="165" pos:column="8">ENABLE_IPV6<pos:position pos:line="165" pos:column="19"/></name></cpp:ifdef>
     <operator pos:line="166" pos:column="6">(<pos:position pos:line="166" pos:column="7"/></operator><literal type="number" pos:line="166" pos:column="7">0<pos:position pos:line="166" pos:column="8"/></literal> <operator pos:line="166" pos:column="9">==<pos:position pos:line="166" pos:column="11"/></operator> <call><name pos:line="166" pos:column="12">Curl_inet_pton<pos:position pos:line="166" pos:column="26"/></name><argument_list pos:line="166" pos:column="26">(<argument><expr><name pos:line="166" pos:column="27">AF_INET6<pos:position pos:line="166" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="37">hostname<pos:position pos:line="166" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="166" pos:column="47">&amp;<pos:position pos:line="166" pos:column="52"/></operator><name pos:line="166" pos:column="48">addr<pos:position pos:line="166" pos:column="52"/></name></expr></argument>)<pos:position pos:line="166" pos:column="53"/></argument_list></call><operator pos:line="166" pos:column="53">)<pos:position pos:line="166" pos:column="54"/></operator> <operator pos:line="166" pos:column="55">&amp;&amp;<pos:position pos:line="166" pos:column="65"/></operator>
<cpp:endif pos:line="167" pos:column="1">#<cpp:directive pos:line="167" pos:column="2">endif<pos:position pos:line="167" pos:column="7"/></cpp:directive></cpp:endif>
     <name pos:line="168" pos:column="6">sni<pos:position pos:line="168" pos:column="9"/></name> <operator pos:line="168" pos:column="10">&amp;&amp;<pos:position pos:line="168" pos:column="20"/></operator>
     <operator pos:line="169" pos:column="6">(<pos:position pos:line="169" pos:column="7"/></operator><call><name pos:line="169" pos:column="7">gnutls_server_name_set<pos:position pos:line="169" pos:column="29"/></name><argument_list pos:line="169" pos:column="29">(<argument><expr><name pos:line="169" pos:column="30">session<pos:position pos:line="169" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="39">GNUTLS_NAME_DNS<pos:position pos:line="169" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="56">hostname<pos:position pos:line="169" pos:column="64"/></name></expr></argument>,
                             <argument><expr><call><name pos:line="170" pos:column="30">strlen<pos:position pos:line="170" pos:column="36"/></name><argument_list pos:line="170" pos:column="36">(<argument><expr><name pos:line="170" pos:column="37">hostname<pos:position pos:line="170" pos:column="45"/></name></expr></argument>)<pos:position pos:line="170" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="170" pos:column="47"/></argument_list></call> <operator pos:line="170" pos:column="48">&lt;<pos:position pos:line="170" pos:column="52"/></operator> <literal type="number" pos:line="170" pos:column="50">0<pos:position pos:line="170" pos:column="51"/></literal><operator pos:line="170" pos:column="51">)<pos:position pos:line="170" pos:column="52"/></operator></expr>)<pos:position pos:line="170" pos:column="53"/></condition><then pos:line="170" pos:column="53">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="171" pos:column="5">infof<pos:position pos:line="171" pos:column="10"/></name><argument_list pos:line="171" pos:column="10">(<argument><expr><name pos:line="171" pos:column="11">data<pos:position pos:line="171" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="17">"WARNING: failed to configure server name indication (SNI) "<pos:position pos:line="171" pos:column="77"/></literal>
          <literal type="string" pos:line="172" pos:column="11">"TLS extension\n"<pos:position pos:line="172" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="30"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="174" pos:column="3">/* Use default priorities */</comment>
  <expr_stmt><expr><name pos:line="175" pos:column="3">rc<pos:position pos:line="175" pos:column="5"/></name> <operator pos:line="175" pos:column="6">=<pos:position pos:line="175" pos:column="7"/></operator> <call><name pos:line="175" pos:column="8">gnutls_set_default_priority<pos:position pos:line="175" pos:column="35"/></name><argument_list pos:line="175" pos:column="35">(<argument><expr><name pos:line="175" pos:column="36">session<pos:position pos:line="175" pos:column="43"/></name></expr></argument>)<pos:position pos:line="175" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="45"/></expr_stmt>
  <if pos:line="176" pos:column="3">if<condition pos:line="176" pos:column="5">(<expr><name pos:line="176" pos:column="6">rc<pos:position pos:line="176" pos:column="8"/></name> <operator pos:line="176" pos:column="9">!=<pos:position pos:line="176" pos:column="11"/></operator> <name pos:line="176" pos:column="12">GNUTLS_E_SUCCESS<pos:position pos:line="176" pos:column="28"/></name></expr>)<pos:position pos:line="176" pos:column="29"/></condition><then pos:line="176" pos:column="29">
    <block type="pseudo"><return pos:line="177" pos:column="5">return <expr><name pos:line="177" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="177" pos:column="35"/></name></expr>;<pos:position pos:line="177" pos:column="36"/></return></block></then></if>

<cpp:ifndef pos:line="179" pos:column="1">#<cpp:directive pos:line="179" pos:column="2">ifndef<pos:position pos:line="179" pos:column="8"/></cpp:directive> <name pos:line="179" pos:column="9">USE_GNUTLS_PRIORITY_SET_DIRECT<pos:position pos:line="179" pos:column="39"/></name></cpp:ifndef>
  <expr_stmt><expr><name pos:line="180" pos:column="3">rc<pos:position pos:line="180" pos:column="5"/></name> <operator pos:line="180" pos:column="6">=<pos:position pos:line="180" pos:column="7"/></operator> <call><name pos:line="180" pos:column="8">gnutls_cipher_set_priority<pos:position pos:line="180" pos:column="34"/></name><argument_list pos:line="180" pos:column="34">(<argument><expr><name pos:line="180" pos:column="35">session<pos:position pos:line="180" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="44">cipher_priority<pos:position pos:line="180" pos:column="59"/></name></expr></argument>)<pos:position pos:line="180" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="61"/></expr_stmt>
  <if pos:line="181" pos:column="3">if<condition pos:line="181" pos:column="5">(<expr><name pos:line="181" pos:column="6">rc<pos:position pos:line="181" pos:column="8"/></name> <operator pos:line="181" pos:column="9">!=<pos:position pos:line="181" pos:column="11"/></operator> <name pos:line="181" pos:column="12">GNUTLS_E_SUCCESS<pos:position pos:line="181" pos:column="28"/></name></expr>)<pos:position pos:line="181" pos:column="29"/></condition><then pos:line="181" pos:column="29">
    <block type="pseudo"><return pos:line="182" pos:column="5">return <expr><name pos:line="182" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="182" pos:column="35"/></name></expr>;<pos:position pos:line="182" pos:column="36"/></return></block></then></if>

  <comment type="block" pos:line="184" pos:column="3">/* Sets the priority on the certificate types supported by gnutls. Priority
   is higher for types specified before others. After specifying the types
   you want, you must append a 0. */</comment>
  <expr_stmt><expr><name pos:line="187" pos:column="3">rc<pos:position pos:line="187" pos:column="5"/></name> <operator pos:line="187" pos:column="6">=<pos:position pos:line="187" pos:column="7"/></operator> <call><name pos:line="187" pos:column="8">gnutls_certificate_type_set_priority<pos:position pos:line="187" pos:column="44"/></name><argument_list pos:line="187" pos:column="44">(<argument><expr><name pos:line="187" pos:column="45">session<pos:position pos:line="187" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="54">cert_type_priority<pos:position pos:line="187" pos:column="72"/></name></expr></argument>)<pos:position pos:line="187" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="74"/></expr_stmt>
  <if pos:line="188" pos:column="3">if<condition pos:line="188" pos:column="5">(<expr><name pos:line="188" pos:column="6">rc<pos:position pos:line="188" pos:column="8"/></name> <operator pos:line="188" pos:column="9">!=<pos:position pos:line="188" pos:column="11"/></operator> <name pos:line="188" pos:column="12">GNUTLS_E_SUCCESS<pos:position pos:line="188" pos:column="28"/></name></expr>)<pos:position pos:line="188" pos:column="29"/></condition><then pos:line="188" pos:column="29">
    <block type="pseudo"><return pos:line="189" pos:column="5">return <expr><name pos:line="189" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="189" pos:column="35"/></name></expr>;<pos:position pos:line="189" pos:column="36"/></return></block></then></if>

  <if pos:line="191" pos:column="3">if<condition pos:line="191" pos:column="5">(<expr><call><name pos:line="191" pos:column="6">SSL_CONN_CONFIG<pos:position pos:line="191" pos:column="21"/></name><argument_list pos:line="191" pos:column="21">(<argument><expr><name pos:line="191" pos:column="22">cipher_list<pos:position pos:line="191" pos:column="33"/></name></expr></argument>)<pos:position pos:line="191" pos:column="34"/></argument_list></call> <operator pos:line="191" pos:column="35">!=<pos:position pos:line="191" pos:column="37"/></operator> <name pos:line="191" pos:column="38">NULL<pos:position pos:line="191" pos:column="42"/></name></expr>)<pos:position pos:line="191" pos:column="43"/></condition><then pos:line="191" pos:column="43"> <block pos:line="191" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="192" pos:column="5">failf<pos:position pos:line="192" pos:column="10"/></name><argument_list pos:line="192" pos:column="10">(<argument><expr><name pos:line="192" pos:column="11">data<pos:position pos:line="192" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="17">"can't pass a custom cipher list to older GnuTLS"<pos:position pos:line="192" pos:column="66"/></literal>
          <literal type="string" pos:line="193" pos:column="11">" versions"<pos:position pos:line="193" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="24"/></expr_stmt>
    <return pos:line="194" pos:column="5">return <expr><name pos:line="194" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="194" pos:column="35"/></name></expr>;<pos:position pos:line="194" pos:column="36"/></return>
  }<pos:position pos:line="195" pos:column="4"/></block></then></if>

  <switch pos:line="197" pos:column="3">switch<condition pos:line="197" pos:column="9">(<expr><call><name pos:line="197" pos:column="10">SSL_CONN_CONFIG<pos:position pos:line="197" pos:column="25"/></name><argument_list pos:line="197" pos:column="25">(<argument><expr><name pos:line="197" pos:column="26">version<pos:position pos:line="197" pos:column="33"/></name></expr></argument>)<pos:position pos:line="197" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="197" pos:column="35"/></condition> <block pos:line="197" pos:column="36">{
    <case pos:line="198" pos:column="5">case <expr><name pos:line="198" pos:column="10">CURL_SSLVERSION_SSLv3<pos:position pos:line="198" pos:column="31"/></name></expr>:<pos:position pos:line="198" pos:column="32"/></case>
      <expr_stmt><expr><name><name pos:line="199" pos:column="7">protocol_priority<pos:position pos:line="199" pos:column="24"/></name><index pos:line="199" pos:column="24">[<expr><literal type="number" pos:line="199" pos:column="25">0<pos:position pos:line="199" pos:column="26"/></literal></expr>]<pos:position pos:line="199" pos:column="27"/></index></name> <operator pos:line="199" pos:column="28">=<pos:position pos:line="199" pos:column="29"/></operator> <name pos:line="199" pos:column="30">GNUTLS_SSL3<pos:position pos:line="199" pos:column="41"/></name></expr>;<pos:position pos:line="199" pos:column="42"/></expr_stmt>
      <break pos:line="200" pos:column="7">break;<pos:position pos:line="200" pos:column="13"/></break>
    <case pos:line="201" pos:column="5">case <expr><name pos:line="201" pos:column="10">CURL_SSLVERSION_DEFAULT<pos:position pos:line="201" pos:column="33"/></name></expr>:<pos:position pos:line="201" pos:column="34"/></case>
    <case pos:line="202" pos:column="5">case <expr><name pos:line="202" pos:column="10">CURL_SSLVERSION_TLSv1<pos:position pos:line="202" pos:column="31"/></name></expr>:<pos:position pos:line="202" pos:column="32"/></case>
      <expr_stmt><expr><name><name pos:line="203" pos:column="7">protocol_priority<pos:position pos:line="203" pos:column="24"/></name><index pos:line="203" pos:column="24">[<expr><literal type="number" pos:line="203" pos:column="25">0<pos:position pos:line="203" pos:column="26"/></literal></expr>]<pos:position pos:line="203" pos:column="27"/></index></name> <operator pos:line="203" pos:column="28">=<pos:position pos:line="203" pos:column="29"/></operator> <name pos:line="203" pos:column="30">GNUTLS_TLS1_0<pos:position pos:line="203" pos:column="43"/></name></expr>;<pos:position pos:line="203" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="204" pos:column="7">protocol_priority<pos:position pos:line="204" pos:column="24"/></name><index pos:line="204" pos:column="24">[<expr><literal type="number" pos:line="204" pos:column="25">1<pos:position pos:line="204" pos:column="26"/></literal></expr>]<pos:position pos:line="204" pos:column="27"/></index></name> <operator pos:line="204" pos:column="28">=<pos:position pos:line="204" pos:column="29"/></operator> <name pos:line="204" pos:column="30">GNUTLS_TLS1_1<pos:position pos:line="204" pos:column="43"/></name></expr>;<pos:position pos:line="204" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="205" pos:column="7">protocol_priority<pos:position pos:line="205" pos:column="24"/></name><index pos:line="205" pos:column="24">[<expr><literal type="number" pos:line="205" pos:column="25">2<pos:position pos:line="205" pos:column="26"/></literal></expr>]<pos:position pos:line="205" pos:column="27"/></index></name> <operator pos:line="205" pos:column="28">=<pos:position pos:line="205" pos:column="29"/></operator> <name pos:line="205" pos:column="30">GNUTLS_TLS1_2<pos:position pos:line="205" pos:column="43"/></name></expr>;<pos:position pos:line="205" pos:column="44"/></expr_stmt>
      <break pos:line="206" pos:column="7">break;<pos:position pos:line="206" pos:column="13"/></break>
    <case pos:line="207" pos:column="5">case <expr><name pos:line="207" pos:column="10">CURL_SSLVERSION_TLSv1_0<pos:position pos:line="207" pos:column="33"/></name></expr>:<pos:position pos:line="207" pos:column="34"/></case>
    <case pos:line="208" pos:column="5">case <expr><name pos:line="208" pos:column="10">CURL_SSLVERSION_TLSv1_1<pos:position pos:line="208" pos:column="33"/></name></expr>:<pos:position pos:line="208" pos:column="34"/></case>
    <case pos:line="209" pos:column="5">case <expr><name pos:line="209" pos:column="10">CURL_SSLVERSION_TLSv1_2<pos:position pos:line="209" pos:column="33"/></name></expr>:<pos:position pos:line="209" pos:column="34"/></case>
    <case pos:line="210" pos:column="5">case <expr><name pos:line="210" pos:column="10">CURL_SSLVERSION_TLSv1_3<pos:position pos:line="210" pos:column="33"/></name></expr>:<pos:position pos:line="210" pos:column="34"/></case>
      <block pos:line="211" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="212" pos:column="9">CURLcode<pos:position pos:line="212" pos:column="17"/></name></type> <name pos:line="212" pos:column="18">result<pos:position pos:line="212" pos:column="24"/></name> <init pos:line="212" pos:column="25">= <expr><call><name pos:line="212" pos:column="27">set_ssl_version_min_max<pos:position pos:line="212" pos:column="50"/></name><argument_list pos:line="212" pos:column="50">(<argument><expr><name pos:line="212" pos:column="51">protocol_priority<pos:position pos:line="212" pos:column="68"/></name></expr></argument>,
                <argument><expr><sizeof pos:line="213" pos:column="17">sizeof<argument_list pos:line="213" pos:column="23">(<argument><expr><name pos:line="213" pos:column="24">protocol_priority<pos:position pos:line="213" pos:column="41"/></name></expr></argument>)<pos:position pos:line="213" pos:column="42"/></argument_list></sizeof><operator pos:line="213" pos:column="42">/<pos:position pos:line="213" pos:column="43"/></operator><sizeof pos:line="213" pos:column="43">sizeof<argument_list pos:line="213" pos:column="49">(<argument><expr><name><name pos:line="213" pos:column="50">protocol_priority<pos:position pos:line="213" pos:column="67"/></name><index pos:line="213" pos:column="67">[<expr><literal type="number" pos:line="213" pos:column="68">0<pos:position pos:line="213" pos:column="69"/></literal></expr>]<pos:position pos:line="213" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="213" pos:column="71"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="213" pos:column="73">conn<pos:position pos:line="213" pos:column="77"/></name></expr></argument>)<pos:position pos:line="213" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="213" pos:column="79"/></decl_stmt>
        <if pos:line="214" pos:column="9">if<condition pos:line="214" pos:column="11">(<expr><name pos:line="214" pos:column="12">result<pos:position pos:line="214" pos:column="18"/></name> <operator pos:line="214" pos:column="19">!=<pos:position pos:line="214" pos:column="21"/></operator> <name pos:line="214" pos:column="22">CURLE_OK<pos:position pos:line="214" pos:column="30"/></name></expr>)<pos:position pos:line="214" pos:column="31"/></condition><then pos:line="214" pos:column="31">
          <block type="pseudo"><return pos:line="215" pos:column="11">return <expr><name pos:line="215" pos:column="18">result<pos:position pos:line="215" pos:column="24"/></name></expr>;<pos:position pos:line="215" pos:column="25"/></return></block></then></if>
        <break pos:line="216" pos:column="9">break;<pos:position pos:line="216" pos:column="15"/></break>
      }<pos:position pos:line="217" pos:column="8"/></block>
    <case pos:line="218" pos:column="5">case <expr><name pos:line="218" pos:column="10">CURL_SSLVERSION_SSLv2<pos:position pos:line="218" pos:column="31"/></name></expr>:<pos:position pos:line="218" pos:column="32"/></case>
      <expr_stmt><expr><call><name pos:line="219" pos:column="7">failf<pos:position pos:line="219" pos:column="12"/></name><argument_list pos:line="219" pos:column="12">(<argument><expr><name pos:line="219" pos:column="13">data<pos:position pos:line="219" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="219" pos:column="19">"GnuTLS does not support SSLv2"<pos:position pos:line="219" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="219" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="52"/></expr_stmt>
      <return pos:line="220" pos:column="7">return <expr><name pos:line="220" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="220" pos:column="37"/></name></expr>;<pos:position pos:line="220" pos:column="38"/></return>
    <default pos:line="221" pos:column="5">default:<pos:position pos:line="221" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="222" pos:column="7">failf<pos:position pos:line="222" pos:column="12"/></name><argument_list pos:line="222" pos:column="12">(<argument><expr><name pos:line="222" pos:column="13">data<pos:position pos:line="222" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="19">"Unrecognized parameter passed via CURLOPT_SSLVERSION"<pos:position pos:line="222" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="222" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="75"/></expr_stmt>
      <return pos:line="223" pos:column="7">return <expr><name pos:line="223" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="223" pos:column="37"/></name></expr>;<pos:position pos:line="223" pos:column="38"/></return>
  }<pos:position pos:line="224" pos:column="4"/></block></switch>
  <expr_stmt><expr><name pos:line="225" pos:column="3">rc<pos:position pos:line="225" pos:column="5"/></name> <operator pos:line="225" pos:column="6">=<pos:position pos:line="225" pos:column="7"/></operator> <call><name pos:line="225" pos:column="8">gnutls_protocol_set_priority<pos:position pos:line="225" pos:column="36"/></name><argument_list pos:line="225" pos:column="36">(<argument><expr><name pos:line="225" pos:column="37">session<pos:position pos:line="225" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="225" pos:column="46">protocol_priority<pos:position pos:line="225" pos:column="63"/></name></expr></argument>)<pos:position pos:line="225" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="65"/></expr_stmt>
  <if pos:line="226" pos:column="3">if<condition pos:line="226" pos:column="5">(<expr><name pos:line="226" pos:column="6">rc<pos:position pos:line="226" pos:column="8"/></name> <operator pos:line="226" pos:column="9">!=<pos:position pos:line="226" pos:column="11"/></operator> <name pos:line="226" pos:column="12">GNUTLS_E_SUCCESS<pos:position pos:line="226" pos:column="28"/></name></expr>)<pos:position pos:line="226" pos:column="29"/></condition><then pos:line="226" pos:column="29"> <block pos:line="226" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="227" pos:column="5">failf<pos:position pos:line="227" pos:column="10"/></name><argument_list pos:line="227" pos:column="10">(<argument><expr><name pos:line="227" pos:column="11">data<pos:position pos:line="227" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="227" pos:column="17">"Did you pass a valid GnuTLS cipher list?"<pos:position pos:line="227" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="227" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="61"/></expr_stmt>
    <return pos:line="228" pos:column="5">return <expr><name pos:line="228" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="228" pos:column="35"/></name></expr>;<pos:position pos:line="228" pos:column="36"/></return>
  }<pos:position pos:line="229" pos:column="4"/></block></then></if>

<cpp:else pos:line="231" pos:column="1">#<cpp:directive pos:line="231" pos:column="2">else<pos:position pos:line="231" pos:column="6"/></cpp:directive></cpp:else>
  <comment type="block" pos:line="232" pos:column="3">/* Ensure +SRP comes at the *end* of all relevant strings so that it can be
   * removed if a run-time error indicates that SRP is not supported by this
   * GnuTLS version */</comment>
  <switch pos:line="235" pos:column="3">switch<condition pos:line="235" pos:column="9">(<expr><call><name pos:line="235" pos:column="10">SSL_CONN_CONFIG<pos:position pos:line="235" pos:column="25"/></name><argument_list pos:line="235" pos:column="25">(<argument><expr><name pos:line="235" pos:column="26">version<pos:position pos:line="235" pos:column="33"/></name></expr></argument>)<pos:position pos:line="235" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="235" pos:column="35"/></condition> <block pos:line="235" pos:column="36">{
    <case pos:line="236" pos:column="5">case <expr><name pos:line="236" pos:column="10">CURL_SSLVERSION_SSLv3<pos:position pos:line="236" pos:column="31"/></name></expr>:<pos:position pos:line="236" pos:column="32"/></case>
      <expr_stmt><expr><name pos:line="237" pos:column="7">prioritylist<pos:position pos:line="237" pos:column="19"/></name> <operator pos:line="237" pos:column="20">=<pos:position pos:line="237" pos:column="21"/></operator> <name pos:line="237" pos:column="22">GNUTLS_CIPHERS<pos:position pos:line="237" pos:column="36"/></name> <literal type="string" pos:line="237" pos:column="37">":-VERS-TLS-ALL:+VERS-SSL3.0"<pos:position pos:line="237" pos:column="66"/></literal></expr>;<pos:position pos:line="237" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><name pos:line="238" pos:column="7">sni<pos:position pos:line="238" pos:column="10"/></name> <operator pos:line="238" pos:column="11">=<pos:position pos:line="238" pos:column="12"/></operator> <literal type="boolean" pos:line="238" pos:column="13">false<pos:position pos:line="238" pos:column="18"/></literal></expr>;<pos:position pos:line="238" pos:column="19"/></expr_stmt>
      <break pos:line="239" pos:column="7">break;<pos:position pos:line="239" pos:column="13"/></break>
    <case pos:line="240" pos:column="5">case <expr><name pos:line="240" pos:column="10">CURL_SSLVERSION_DEFAULT<pos:position pos:line="240" pos:column="33"/></name></expr>:<pos:position pos:line="240" pos:column="34"/></case>
    <case pos:line="241" pos:column="5">case <expr><name pos:line="241" pos:column="10">CURL_SSLVERSION_TLSv1<pos:position pos:line="241" pos:column="31"/></name></expr>:<pos:position pos:line="241" pos:column="32"/></case>
      <expr_stmt><expr><name pos:line="242" pos:column="7">prioritylist<pos:position pos:line="242" pos:column="19"/></name> <operator pos:line="242" pos:column="20">=<pos:position pos:line="242" pos:column="21"/></operator> <name pos:line="242" pos:column="22">GNUTLS_CIPHERS<pos:position pos:line="242" pos:column="36"/></name> <literal type="string" pos:line="242" pos:column="37">":-VERS-SSL3.0:"<pos:position pos:line="242" pos:column="53"/></literal> <name pos:line="242" pos:column="54">GNUTLS_SRP<pos:position pos:line="242" pos:column="64"/></name></expr>;<pos:position pos:line="242" pos:column="65"/></expr_stmt>
      <break pos:line="243" pos:column="7">break;<pos:position pos:line="243" pos:column="13"/></break>
    <case pos:line="244" pos:column="5">case <expr><name pos:line="244" pos:column="10">CURL_SSLVERSION_TLSv1_0<pos:position pos:line="244" pos:column="33"/></name></expr>:<pos:position pos:line="244" pos:column="34"/></case>
    <case pos:line="245" pos:column="5">case <expr><name pos:line="245" pos:column="10">CURL_SSLVERSION_TLSv1_1<pos:position pos:line="245" pos:column="33"/></name></expr>:<pos:position pos:line="245" pos:column="34"/></case>
    <case pos:line="246" pos:column="5">case <expr><name pos:line="246" pos:column="10">CURL_SSLVERSION_TLSv1_2<pos:position pos:line="246" pos:column="33"/></name></expr>:<pos:position pos:line="246" pos:column="34"/></case>
    <case pos:line="247" pos:column="5">case <expr><name pos:line="247" pos:column="10">CURL_SSLVERSION_TLSv1_3<pos:position pos:line="247" pos:column="33"/></name></expr>:<pos:position pos:line="247" pos:column="34"/></case>
      <block pos:line="248" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="249" pos:column="9">CURLcode<pos:position pos:line="249" pos:column="17"/></name></type> <name pos:line="249" pos:column="18">result<pos:position pos:line="249" pos:column="24"/></name> <init pos:line="249" pos:column="25">= <expr><call><name pos:line="249" pos:column="27">set_ssl_version_min_max<pos:position pos:line="249" pos:column="50"/></name><argument_list pos:line="249" pos:column="50">(<argument><expr><operator pos:line="249" pos:column="51">&amp;<pos:position pos:line="249" pos:column="56"/></operator><name pos:line="249" pos:column="52">prioritylist<pos:position pos:line="249" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="66">conn<pos:position pos:line="249" pos:column="70"/></name></expr></argument>)<pos:position pos:line="249" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="249" pos:column="72"/></decl_stmt>
        <if pos:line="250" pos:column="9">if<condition pos:line="250" pos:column="11">(<expr><name pos:line="250" pos:column="12">result<pos:position pos:line="250" pos:column="18"/></name> <operator pos:line="250" pos:column="19">!=<pos:position pos:line="250" pos:column="21"/></operator> <name pos:line="250" pos:column="22">CURLE_OK<pos:position pos:line="250" pos:column="30"/></name></expr>)<pos:position pos:line="250" pos:column="31"/></condition><then pos:line="250" pos:column="31">
          <block type="pseudo"><return pos:line="251" pos:column="11">return <expr><name pos:line="251" pos:column="18">result<pos:position pos:line="251" pos:column="24"/></name></expr>;<pos:position pos:line="251" pos:column="25"/></return></block></then></if>
        <break pos:line="252" pos:column="9">break;<pos:position pos:line="252" pos:column="15"/></break>
      }<pos:position pos:line="253" pos:column="8"/></block>
    <case pos:line="254" pos:column="5">case <expr><name pos:line="254" pos:column="10">CURL_SSLVERSION_SSLv2<pos:position pos:line="254" pos:column="31"/></name></expr>:<pos:position pos:line="254" pos:column="32"/></case>
      <expr_stmt><expr><call><name pos:line="255" pos:column="7">failf<pos:position pos:line="255" pos:column="12"/></name><argument_list pos:line="255" pos:column="12">(<argument><expr><name pos:line="255" pos:column="13">data<pos:position pos:line="255" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="19">"GnuTLS does not support SSLv2"<pos:position pos:line="255" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="255" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="52"/></expr_stmt>
      <return pos:line="256" pos:column="7">return <expr><name pos:line="256" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="256" pos:column="37"/></name></expr>;<pos:position pos:line="256" pos:column="38"/></return>
    <default pos:line="257" pos:column="5">default:<pos:position pos:line="257" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="258" pos:column="7">failf<pos:position pos:line="258" pos:column="12"/></name><argument_list pos:line="258" pos:column="12">(<argument><expr><name pos:line="258" pos:column="13">data<pos:position pos:line="258" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="258" pos:column="19">"Unrecognized parameter passed via CURLOPT_SSLVERSION"<pos:position pos:line="258" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="258" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="75"/></expr_stmt>
      <return pos:line="259" pos:column="7">return <expr><name pos:line="259" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="259" pos:column="37"/></name></expr>;<pos:position pos:line="259" pos:column="38"/></return>
  }<pos:position pos:line="260" pos:column="4"/></block></switch>
  <expr_stmt><expr><name pos:line="261" pos:column="3">rc<pos:position pos:line="261" pos:column="5"/></name> <operator pos:line="261" pos:column="6">=<pos:position pos:line="261" pos:column="7"/></operator> <call><name pos:line="261" pos:column="8">gnutls_priority_set_direct<pos:position pos:line="261" pos:column="34"/></name><argument_list pos:line="261" pos:column="34">(<argument><expr><name pos:line="261" pos:column="35">session<pos:position pos:line="261" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="44">prioritylist<pos:position pos:line="261" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="261" pos:column="58">&amp;<pos:position pos:line="261" pos:column="63"/></operator><name pos:line="261" pos:column="59">err<pos:position pos:line="261" pos:column="62"/></name></expr></argument>)<pos:position pos:line="261" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="64"/></expr_stmt>
  <if pos:line="262" pos:column="3">if<condition pos:line="262" pos:column="5">(<expr><operator pos:line="262" pos:column="6">(<pos:position pos:line="262" pos:column="7"/></operator><name pos:line="262" pos:column="7">rc<pos:position pos:line="262" pos:column="9"/></name> <operator pos:line="262" pos:column="10">==<pos:position pos:line="262" pos:column="12"/></operator> <name pos:line="262" pos:column="13">GNUTLS_E_INVALID_REQUEST<pos:position pos:line="262" pos:column="37"/></name><operator pos:line="262" pos:column="37">)<pos:position pos:line="262" pos:column="38"/></operator> <operator pos:line="262" pos:column="39">&amp;&amp;<pos:position pos:line="262" pos:column="49"/></operator> <name pos:line="262" pos:column="42">err<pos:position pos:line="262" pos:column="45"/></name></expr>)<pos:position pos:line="262" pos:column="46"/></condition><then pos:line="262" pos:column="46"> <block pos:line="262" pos:column="47">{
    <if pos:line="263" pos:column="5">if<condition pos:line="263" pos:column="7">(<expr><operator pos:line="263" pos:column="8">!<pos:position pos:line="263" pos:column="9"/></operator><call><name pos:line="263" pos:column="9">strcmp<pos:position pos:line="263" pos:column="15"/></name><argument_list pos:line="263" pos:column="15">(<argument><expr><name pos:line="263" pos:column="16">err<pos:position pos:line="263" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="21">GNUTLS_SRP<pos:position pos:line="263" pos:column="31"/></name></expr></argument>)<pos:position pos:line="263" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="263" pos:column="33"/></condition><then pos:line="263" pos:column="33"> <block pos:line="263" pos:column="34">{
      <comment type="block" pos:line="264" pos:column="7">/* This GnuTLS was probably compiled without support for SRP.
       * Note that fact and try again without it. */</comment>
      <decl_stmt><decl><type><name pos:line="266" pos:column="7">int<pos:position pos:line="266" pos:column="10"/></name></type> <name pos:line="266" pos:column="11">validprioritylen<pos:position pos:line="266" pos:column="27"/></name> <init pos:line="266" pos:column="28">= <expr><call><name pos:line="266" pos:column="30">curlx_uztosi<pos:position pos:line="266" pos:column="42"/></name><argument_list pos:line="266" pos:column="42">(<argument><expr><name pos:line="266" pos:column="43">err<pos:position pos:line="266" pos:column="46"/></name> <operator pos:line="266" pos:column="47">-<pos:position pos:line="266" pos:column="48"/></operator> <name pos:line="266" pos:column="49">prioritylist<pos:position pos:line="266" pos:column="61"/></name></expr></argument>)<pos:position pos:line="266" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="266" pos:column="63"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="267" pos:column="7">char<pos:position pos:line="267" pos:column="11"/></name> <modifier pos:line="267" pos:column="12">*<pos:position pos:line="267" pos:column="13"/></modifier></type><name pos:line="267" pos:column="13">prioritycopy<pos:position pos:line="267" pos:column="25"/></name> <init pos:line="267" pos:column="26">= <expr><call><name pos:line="267" pos:column="28">strdup<pos:position pos:line="267" pos:column="34"/></name><argument_list pos:line="267" pos:column="34">(<argument><expr><name pos:line="267" pos:column="35">prioritylist<pos:position pos:line="267" pos:column="47"/></name></expr></argument>)<pos:position pos:line="267" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="267" pos:column="49"/></decl_stmt>
      <if pos:line="268" pos:column="7">if<condition pos:line="268" pos:column="9">(<expr><operator pos:line="268" pos:column="10">!<pos:position pos:line="268" pos:column="11"/></operator><name pos:line="268" pos:column="11">prioritycopy<pos:position pos:line="268" pos:column="23"/></name></expr>)<pos:position pos:line="268" pos:column="24"/></condition><then pos:line="268" pos:column="24">
        <block type="pseudo"><return pos:line="269" pos:column="9">return <expr><name pos:line="269" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="269" pos:column="35"/></name></expr>;<pos:position pos:line="269" pos:column="36"/></return></block></then></if>

      <expr_stmt><expr><call><name pos:line="271" pos:column="7">infof<pos:position pos:line="271" pos:column="12"/></name><argument_list pos:line="271" pos:column="12">(<argument><expr><name pos:line="271" pos:column="13">data<pos:position pos:line="271" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="271" pos:column="19">"This GnuTLS does not support SRP\n"<pos:position pos:line="271" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="271" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="57"/></expr_stmt>
      <if pos:line="272" pos:column="7">if<condition pos:line="272" pos:column="9">(<expr><name pos:line="272" pos:column="10">validprioritylen<pos:position pos:line="272" pos:column="26"/></name></expr>)<pos:position pos:line="272" pos:column="27"/></condition><then pos:line="272" pos:column="27">
        <comment type="block" pos:line="273" pos:column="9">/* Remove the :+SRP */</comment>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="274" pos:column="9">prioritycopy<pos:position pos:line="274" pos:column="21"/></name><index pos:line="274" pos:column="21">[<expr><name pos:line="274" pos:column="22">validprioritylen<pos:position pos:line="274" pos:column="38"/></name> <operator pos:line="274" pos:column="39">-<pos:position pos:line="274" pos:column="40"/></operator> <literal type="number" pos:line="274" pos:column="41">1<pos:position pos:line="274" pos:column="42"/></literal></expr>]<pos:position pos:line="274" pos:column="43"/></index></name> <operator pos:line="274" pos:column="44">=<pos:position pos:line="274" pos:column="45"/></operator> <literal type="number" pos:line="274" pos:column="46">0<pos:position pos:line="274" pos:column="47"/></literal></expr>;<pos:position pos:line="274" pos:column="48"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="275" pos:column="7">rc<pos:position pos:line="275" pos:column="9"/></name> <operator pos:line="275" pos:column="10">=<pos:position pos:line="275" pos:column="11"/></operator> <call><name pos:line="275" pos:column="12">gnutls_priority_set_direct<pos:position pos:line="275" pos:column="38"/></name><argument_list pos:line="275" pos:column="38">(<argument><expr><name pos:line="275" pos:column="39">session<pos:position pos:line="275" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="275" pos:column="48">prioritycopy<pos:position pos:line="275" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="275" pos:column="62">&amp;<pos:position pos:line="275" pos:column="67"/></operator><name pos:line="275" pos:column="63">err<pos:position pos:line="275" pos:column="66"/></name></expr></argument>)<pos:position pos:line="275" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="276" pos:column="7">free<pos:position pos:line="276" pos:column="11"/></name><argument_list pos:line="276" pos:column="11">(<argument><expr><name pos:line="276" pos:column="12">prioritycopy<pos:position pos:line="276" pos:column="24"/></name></expr></argument>)<pos:position pos:line="276" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="277" pos:column="6"/></block></then></if>
  }<pos:position pos:line="278" pos:column="4"/></block></then></if>
  <if pos:line="279" pos:column="3">if<condition pos:line="279" pos:column="5">(<expr><name pos:line="279" pos:column="6">rc<pos:position pos:line="279" pos:column="8"/></name> <operator pos:line="279" pos:column="9">!=<pos:position pos:line="279" pos:column="11"/></operator> <name pos:line="279" pos:column="12">GNUTLS_E_SUCCESS<pos:position pos:line="279" pos:column="28"/></name></expr>)<pos:position pos:line="279" pos:column="29"/></condition><then pos:line="279" pos:column="29"> <block pos:line="279" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="280" pos:column="5">failf<pos:position pos:line="280" pos:column="10"/></name><argument_list pos:line="280" pos:column="10">(<argument><expr><name pos:line="280" pos:column="11">data<pos:position pos:line="280" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="280" pos:column="17">"Error %d setting GnuTLS cipher list starting with %s"<pos:position pos:line="280" pos:column="71"/></literal></expr></argument>,
          <argument><expr><name pos:line="281" pos:column="11">rc<pos:position pos:line="281" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="281" pos:column="15">err<pos:position pos:line="281" pos:column="18"/></name></expr></argument>)<pos:position pos:line="281" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="20"/></expr_stmt>
    <return pos:line="282" pos:column="5">return <expr><name pos:line="282" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="282" pos:column="35"/></name></expr>;<pos:position pos:line="282" pos:column="36"/></return>
  }<pos:position pos:line="283" pos:column="4"/></block></then></if>
<cpp:endif pos:line="284" pos:column="1">#<cpp:directive pos:line="284" pos:column="2">endif<pos:position pos:line="284" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="286" pos:column="1">#<cpp:directive pos:line="286" pos:column="2">ifdef<pos:position pos:line="286" pos:column="7"/></cpp:directive> <name pos:line="286" pos:column="8">HAS_ALPN<pos:position pos:line="286" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="287" pos:column="3">if<condition pos:line="287" pos:column="5">(<expr><name><name pos:line="287" pos:column="6">conn<pos:position pos:line="287" pos:column="10"/></name><operator pos:line="287" pos:column="10">-&gt;<pos:position pos:line="287" pos:column="15"/></operator><name pos:line="287" pos:column="12">bits<pos:position pos:line="287" pos:column="16"/></name><operator pos:line="287" pos:column="16">.<pos:position pos:line="287" pos:column="17"/></operator><name pos:line="287" pos:column="17">tls_enable_alpn<pos:position pos:line="287" pos:column="32"/></name></name></expr>)<pos:position pos:line="287" pos:column="33"/></condition><then pos:line="287" pos:column="33"> <block pos:line="287" pos:column="34">{
    <decl_stmt><decl><type><name pos:line="288" pos:column="5">int<pos:position pos:line="288" pos:column="8"/></name></type> <name pos:line="288" pos:column="9">cur<pos:position pos:line="288" pos:column="12"/></name> <init pos:line="288" pos:column="13">= <expr><literal type="number" pos:line="288" pos:column="15">0<pos:position pos:line="288" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="288" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="289" pos:column="5">gnutls_datum_t<pos:position pos:line="289" pos:column="19"/></name></type> <name><name pos:line="289" pos:column="20">protocols<pos:position pos:line="289" pos:column="29"/></name><index pos:line="289" pos:column="29">[<expr><literal type="number" pos:line="289" pos:column="30">2<pos:position pos:line="289" pos:column="31"/></literal></expr>]<pos:position pos:line="289" pos:column="32"/></index></name></decl>;<pos:position pos:line="289" pos:column="33"/></decl_stmt>

<cpp:ifdef pos:line="291" pos:column="1">#<cpp:directive pos:line="291" pos:column="2">ifdef<pos:position pos:line="291" pos:column="7"/></cpp:directive> <name pos:line="291" pos:column="8">USE_NGHTTP2<pos:position pos:line="291" pos:column="19"/></name></cpp:ifdef>
    <if pos:line="292" pos:column="5">if<condition pos:line="292" pos:column="7">(<expr><name><name pos:line="292" pos:column="8">data<pos:position pos:line="292" pos:column="12"/></name><operator pos:line="292" pos:column="12">-&gt;<pos:position pos:line="292" pos:column="17"/></operator><name pos:line="292" pos:column="14">set<pos:position pos:line="292" pos:column="17"/></name><operator pos:line="292" pos:column="17">.<pos:position pos:line="292" pos:column="18"/></operator><name pos:line="292" pos:column="18">httpversion<pos:position pos:line="292" pos:column="29"/></name></name> <operator pos:line="292" pos:column="30">&gt;=<pos:position pos:line="292" pos:column="35"/></operator> <name pos:line="292" pos:column="33">CURL_HTTP_VERSION_2<pos:position pos:line="292" pos:column="52"/></name> <operator pos:line="292" pos:column="53">&amp;&amp;<pos:position pos:line="292" pos:column="63"/></operator>
       <operator pos:line="293" pos:column="8">(<pos:position pos:line="293" pos:column="9"/></operator><operator pos:line="293" pos:column="9">!<pos:position pos:line="293" pos:column="10"/></operator><call><name pos:line="293" pos:column="10">SSL_IS_PROXY<pos:position pos:line="293" pos:column="22"/></name><argument_list pos:line="293" pos:column="22">()<pos:position pos:line="293" pos:column="24"/></argument_list></call> <operator pos:line="293" pos:column="25">||<pos:position pos:line="293" pos:column="27"/></operator> <operator pos:line="293" pos:column="28">!<pos:position pos:line="293" pos:column="29"/></operator><name><name pos:line="293" pos:column="29">conn<pos:position pos:line="293" pos:column="33"/></name><operator pos:line="293" pos:column="33">-&gt;<pos:position pos:line="293" pos:column="38"/></operator><name pos:line="293" pos:column="35">bits<pos:position pos:line="293" pos:column="39"/></name><operator pos:line="293" pos:column="39">.<pos:position pos:line="293" pos:column="40"/></operator><name pos:line="293" pos:column="40">tunnel_proxy<pos:position pos:line="293" pos:column="52"/></name></name><operator pos:line="293" pos:column="52">)<pos:position pos:line="293" pos:column="53"/></operator></expr>)<pos:position pos:line="293" pos:column="54"/></condition><then pos:line="293" pos:column="54"> <block pos:line="293" pos:column="55">{
      <expr_stmt><expr><name><name pos:line="294" pos:column="7">protocols<pos:position pos:line="294" pos:column="16"/></name><index pos:line="294" pos:column="16">[<expr><name pos:line="294" pos:column="17">cur<pos:position pos:line="294" pos:column="20"/></name></expr>]<pos:position pos:line="294" pos:column="21"/></index></name><operator pos:line="294" pos:column="21">.<pos:position pos:line="294" pos:column="22"/></operator><name pos:line="294" pos:column="22">data<pos:position pos:line="294" pos:column="26"/></name> <operator pos:line="294" pos:column="27">=<pos:position pos:line="294" pos:column="28"/></operator> <operator pos:line="294" pos:column="29">(<pos:position pos:line="294" pos:column="30"/></operator><name pos:line="294" pos:column="30">unsigned<pos:position pos:line="294" pos:column="38"/></name> <name pos:line="294" pos:column="39">char<pos:position pos:line="294" pos:column="43"/></name> <operator pos:line="294" pos:column="44">*<pos:position pos:line="294" pos:column="45"/></operator><operator pos:line="294" pos:column="45">)<pos:position pos:line="294" pos:column="46"/></operator><name pos:line="294" pos:column="46">NGHTTP2_PROTO_VERSION_ID<pos:position pos:line="294" pos:column="70"/></name></expr>;<pos:position pos:line="294" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="295" pos:column="7">protocols<pos:position pos:line="295" pos:column="16"/></name><index pos:line="295" pos:column="16">[<expr><name pos:line="295" pos:column="17">cur<pos:position pos:line="295" pos:column="20"/></name></expr>]<pos:position pos:line="295" pos:column="21"/></index></name><operator pos:line="295" pos:column="21">.<pos:position pos:line="295" pos:column="22"/></operator><name pos:line="295" pos:column="22">size<pos:position pos:line="295" pos:column="26"/></name> <operator pos:line="295" pos:column="27">=<pos:position pos:line="295" pos:column="28"/></operator> <name pos:line="295" pos:column="29">NGHTTP2_PROTO_VERSION_ID_LEN<pos:position pos:line="295" pos:column="57"/></name></expr>;<pos:position pos:line="295" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><name pos:line="296" pos:column="7">cur<pos:position pos:line="296" pos:column="10"/></name><operator pos:line="296" pos:column="10">++<pos:position pos:line="296" pos:column="12"/></operator></expr>;<pos:position pos:line="296" pos:column="13"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="297" pos:column="7">infof<pos:position pos:line="297" pos:column="12"/></name><argument_list pos:line="297" pos:column="12">(<argument><expr><name pos:line="297" pos:column="13">data<pos:position pos:line="297" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="297" pos:column="19">"ALPN, offering %s\n"<pos:position pos:line="297" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="297" pos:column="42">NGHTTP2_PROTO_VERSION_ID<pos:position pos:line="297" pos:column="66"/></name></expr></argument>)<pos:position pos:line="297" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="298" pos:column="6"/></block></then></if>
<cpp:endif pos:line="299" pos:column="1">#<cpp:directive pos:line="299" pos:column="2">endif<pos:position pos:line="299" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="301" pos:column="5">protocols<pos:position pos:line="301" pos:column="14"/></name><index pos:line="301" pos:column="14">[<expr><name pos:line="301" pos:column="15">cur<pos:position pos:line="301" pos:column="18"/></name></expr>]<pos:position pos:line="301" pos:column="19"/></index></name><operator pos:line="301" pos:column="19">.<pos:position pos:line="301" pos:column="20"/></operator><name pos:line="301" pos:column="20">data<pos:position pos:line="301" pos:column="24"/></name> <operator pos:line="301" pos:column="25">=<pos:position pos:line="301" pos:column="26"/></operator> <operator pos:line="301" pos:column="27">(<pos:position pos:line="301" pos:column="28"/></operator><name pos:line="301" pos:column="28">unsigned<pos:position pos:line="301" pos:column="36"/></name> <name pos:line="301" pos:column="37">char<pos:position pos:line="301" pos:column="41"/></name> <operator pos:line="301" pos:column="42">*<pos:position pos:line="301" pos:column="43"/></operator><operator pos:line="301" pos:column="43">)<pos:position pos:line="301" pos:column="44"/></operator><name pos:line="301" pos:column="44">ALPN_HTTP_1_1<pos:position pos:line="301" pos:column="57"/></name></expr>;<pos:position pos:line="301" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="302" pos:column="5">protocols<pos:position pos:line="302" pos:column="14"/></name><index pos:line="302" pos:column="14">[<expr><name pos:line="302" pos:column="15">cur<pos:position pos:line="302" pos:column="18"/></name></expr>]<pos:position pos:line="302" pos:column="19"/></index></name><operator pos:line="302" pos:column="19">.<pos:position pos:line="302" pos:column="20"/></operator><name pos:line="302" pos:column="20">size<pos:position pos:line="302" pos:column="24"/></name> <operator pos:line="302" pos:column="25">=<pos:position pos:line="302" pos:column="26"/></operator> <name pos:line="302" pos:column="27">ALPN_HTTP_1_1_LENGTH<pos:position pos:line="302" pos:column="47"/></name></expr>;<pos:position pos:line="302" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="303" pos:column="5">cur<pos:position pos:line="303" pos:column="8"/></name><operator pos:line="303" pos:column="8">++<pos:position pos:line="303" pos:column="10"/></operator></expr>;<pos:position pos:line="303" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="304" pos:column="5">infof<pos:position pos:line="304" pos:column="10"/></name><argument_list pos:line="304" pos:column="10">(<argument><expr><name pos:line="304" pos:column="11">data<pos:position pos:line="304" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="304" pos:column="17">"ALPN, offering %s\n"<pos:position pos:line="304" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="304" pos:column="40">ALPN_HTTP_1_1<pos:position pos:line="304" pos:column="53"/></name></expr></argument>)<pos:position pos:line="304" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="55"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="306" pos:column="5">gnutls_alpn_set_protocols<pos:position pos:line="306" pos:column="30"/></name><argument_list pos:line="306" pos:column="30">(<argument><expr><name pos:line="306" pos:column="31">session<pos:position pos:line="306" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="306" pos:column="40">protocols<pos:position pos:line="306" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="306" pos:column="51">cur<pos:position pos:line="306" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="306" pos:column="56">0<pos:position pos:line="306" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="306" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="59"/></expr_stmt>
  }<pos:position pos:line="307" pos:column="4"/></block></then></if>
<cpp:endif pos:line="308" pos:column="1">#<cpp:directive pos:line="308" pos:column="2">endif<pos:position pos:line="308" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="310" pos:column="3">if<condition pos:line="310" pos:column="5">(<expr><call><name pos:line="310" pos:column="6">SSL_SET_OPTION<pos:position pos:line="310" pos:column="20"/></name><argument_list pos:line="310" pos:column="20">(<argument><expr><name pos:line="310" pos:column="21">cert<pos:position pos:line="310" pos:column="25"/></name></expr></argument>)<pos:position pos:line="310" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="310" pos:column="27"/></condition><then pos:line="310" pos:column="27"> <block pos:line="310" pos:column="28">{
    <if pos:line="311" pos:column="5">if<condition pos:line="311" pos:column="7">(<expr><call><name pos:line="311" pos:column="8">SSL_SET_OPTION<pos:position pos:line="311" pos:column="22"/></name><argument_list pos:line="311" pos:column="22">(<argument><expr><name pos:line="311" pos:column="23">key_passwd<pos:position pos:line="311" pos:column="33"/></name></expr></argument>)<pos:position pos:line="311" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="311" pos:column="35"/></condition><then pos:line="311" pos:column="35"> <block pos:line="311" pos:column="36">{
<cpp:if pos:line="312" pos:column="1">#<cpp:directive pos:line="312" pos:column="2">if<pos:position pos:line="312" pos:column="4"/></cpp:directive> <expr><name pos:line="312" pos:column="5">HAVE_GNUTLS_CERTIFICATE_SET_X509_KEY_FILE2<pos:position pos:line="312" pos:column="47"/></name></expr></cpp:if>
      <decl_stmt><decl><type><specifier pos:line="313" pos:column="7">const<pos:position pos:line="313" pos:column="12"/></specifier> <name pos:line="313" pos:column="13">unsigned<pos:position pos:line="313" pos:column="21"/></name> <name pos:line="313" pos:column="22">int<pos:position pos:line="313" pos:column="25"/></name></type> <name pos:line="313" pos:column="26">supported_key_encryption_algorithms<pos:position pos:line="313" pos:column="61"/></name> <init pos:line="313" pos:column="62">=
        <expr><name pos:line="314" pos:column="9">GNUTLS_PKCS_USE_PKCS12_3DES<pos:position pos:line="314" pos:column="36"/></name> <operator pos:line="314" pos:column="37">|<pos:position pos:line="314" pos:column="38"/></operator> <name pos:line="314" pos:column="39">GNUTLS_PKCS_USE_PKCS12_ARCFOUR<pos:position pos:line="314" pos:column="69"/></name> <operator pos:line="314" pos:column="70">|<pos:position pos:line="314" pos:column="71"/></operator>
        <name pos:line="315" pos:column="9">GNUTLS_PKCS_USE_PKCS12_RC2_40<pos:position pos:line="315" pos:column="38"/></name> <operator pos:line="315" pos:column="39">|<pos:position pos:line="315" pos:column="40"/></operator> <name pos:line="315" pos:column="41">GNUTLS_PKCS_USE_PBES2_3DES<pos:position pos:line="315" pos:column="67"/></name> <operator pos:line="315" pos:column="68">|<pos:position pos:line="315" pos:column="69"/></operator>
        <name pos:line="316" pos:column="9">GNUTLS_PKCS_USE_PBES2_AES_128<pos:position pos:line="316" pos:column="38"/></name> <operator pos:line="316" pos:column="39">|<pos:position pos:line="316" pos:column="40"/></operator> <name pos:line="316" pos:column="41">GNUTLS_PKCS_USE_PBES2_AES_192<pos:position pos:line="316" pos:column="70"/></name> <operator pos:line="316" pos:column="71">|<pos:position pos:line="316" pos:column="72"/></operator>
        <name pos:line="317" pos:column="9">GNUTLS_PKCS_USE_PBES2_AES_256<pos:position pos:line="317" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="317" pos:column="39"/></decl_stmt>
      <expr_stmt><expr><name pos:line="318" pos:column="7">rc<pos:position pos:line="318" pos:column="9"/></name> <operator pos:line="318" pos:column="10">=<pos:position pos:line="318" pos:column="11"/></operator> <call><name pos:line="318" pos:column="12">gnutls_certificate_set_x509_key_file2<pos:position pos:line="318" pos:column="49"/></name><argument_list pos:line="318" pos:column="49">(
           <argument><expr><name><name pos:line="319" pos:column="12">BACKEND<pos:position pos:line="319" pos:column="19"/></name><operator pos:line="319" pos:column="19">-&gt;<pos:position pos:line="319" pos:column="24"/></operator><name pos:line="319" pos:column="21">cred<pos:position pos:line="319" pos:column="25"/></name></name></expr></argument>,
           <argument><expr><call><name pos:line="320" pos:column="12">SSL_SET_OPTION<pos:position pos:line="320" pos:column="26"/></name><argument_list pos:line="320" pos:column="26">(<argument><expr><name pos:line="320" pos:column="27">cert<pos:position pos:line="320" pos:column="31"/></name></expr></argument>)<pos:position pos:line="320" pos:column="32"/></argument_list></call></expr></argument>,
           <argument><expr><ternary><condition><expr><call><name pos:line="321" pos:column="12">SSL_SET_OPTION<pos:position pos:line="321" pos:column="26"/></name><argument_list pos:line="321" pos:column="26">(<argument><expr><name pos:line="321" pos:column="27">key<pos:position pos:line="321" pos:column="30"/></name></expr></argument>)<pos:position pos:line="321" pos:column="31"/></argument_list></call></expr> ?<pos:position pos:line="321" pos:column="33"/></condition><then pos:line="321" pos:column="33">
           <expr><call><name pos:line="322" pos:column="12">SSL_SET_OPTION<pos:position pos:line="322" pos:column="26"/></name><argument_list pos:line="322" pos:column="26">(<argument><expr><name pos:line="322" pos:column="27">key<pos:position pos:line="322" pos:column="30"/></name></expr></argument>)<pos:position pos:line="322" pos:column="31"/></argument_list></call></expr> <pos:position pos:line="322" pos:column="32"/></then><else pos:line="322" pos:column="32">: <expr><call><name pos:line="322" pos:column="34">SSL_SET_OPTION<pos:position pos:line="322" pos:column="48"/></name><argument_list pos:line="322" pos:column="48">(<argument><expr><name pos:line="322" pos:column="49">cert<pos:position pos:line="322" pos:column="53"/></name></expr></argument>)<pos:position pos:line="322" pos:column="54"/></argument_list></call></expr></else></ternary></expr></argument>,
           <argument><expr><call><name pos:line="323" pos:column="12">do_file_type<pos:position pos:line="323" pos:column="24"/></name><argument_list pos:line="323" pos:column="24">(<argument><expr><call><name pos:line="323" pos:column="25">SSL_SET_OPTION<pos:position pos:line="323" pos:column="39"/></name><argument_list pos:line="323" pos:column="39">(<argument><expr><name pos:line="323" pos:column="40">cert_type<pos:position pos:line="323" pos:column="49"/></name></expr></argument>)<pos:position pos:line="323" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="323" pos:column="51"/></argument_list></call></expr></argument>,
           <argument><expr><call><name pos:line="324" pos:column="12">SSL_SET_OPTION<pos:position pos:line="324" pos:column="26"/></name><argument_list pos:line="324" pos:column="26">(<argument><expr><name pos:line="324" pos:column="27">key_passwd<pos:position pos:line="324" pos:column="37"/></name></expr></argument>)<pos:position pos:line="324" pos:column="38"/></argument_list></call></expr></argument>,
           <argument><expr><name pos:line="325" pos:column="12">supported_key_encryption_algorithms<pos:position pos:line="325" pos:column="47"/></name></expr></argument>)<pos:position pos:line="325" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="325" pos:column="49"/></expr_stmt>
      <if pos:line="326" pos:column="7">if<condition pos:line="326" pos:column="9">(<expr><name pos:line="326" pos:column="10">rc<pos:position pos:line="326" pos:column="12"/></name> <operator pos:line="326" pos:column="13">!=<pos:position pos:line="326" pos:column="15"/></operator> <name pos:line="326" pos:column="16">GNUTLS_E_SUCCESS<pos:position pos:line="326" pos:column="32"/></name></expr>)<pos:position pos:line="326" pos:column="33"/></condition><then pos:line="326" pos:column="33"> <block pos:line="326" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="327" pos:column="9">failf<pos:position pos:line="327" pos:column="14"/></name><argument_list pos:line="327" pos:column="14">(<argument><expr><name pos:line="327" pos:column="15">data<pos:position pos:line="327" pos:column="19"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="328" pos:column="15">"error reading X.509 potentially-encrypted key file: %s"<pos:position pos:line="328" pos:column="71"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="329" pos:column="15">gnutls_strerror<pos:position pos:line="329" pos:column="30"/></name><argument_list pos:line="329" pos:column="30">(<argument><expr><name pos:line="329" pos:column="31">rc<pos:position pos:line="329" pos:column="33"/></name></expr></argument>)<pos:position pos:line="329" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="329" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="329" pos:column="36"/></expr_stmt>
        <return pos:line="330" pos:column="9">return <expr><name pos:line="330" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="330" pos:column="39"/></name></expr>;<pos:position pos:line="330" pos:column="40"/></return>
      }<pos:position pos:line="331" pos:column="8"/></block></then></if>
<cpp:else pos:line="332" pos:column="1">#<cpp:directive pos:line="332" pos:column="2">else<pos:position pos:line="332" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="333" pos:column="7">failf<pos:position pos:line="333" pos:column="12"/></name><argument_list pos:line="333" pos:column="12">(<argument><expr><name pos:line="333" pos:column="13">data<pos:position pos:line="333" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="333" pos:column="19">"gnutls lacks support for encrypted key files"<pos:position pos:line="333" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="333" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="67"/></expr_stmt>
      <return pos:line="334" pos:column="7">return <expr><name pos:line="334" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="334" pos:column="37"/></name></expr>;<pos:position pos:line="334" pos:column="38"/></return>
<cpp:endif pos:line="335" pos:column="1">#<cpp:directive pos:line="335" pos:column="2">endif<pos:position pos:line="335" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="336" pos:column="6"/></block></then>
    <else pos:line="337" pos:column="5">else <block pos:line="337" pos:column="10">{
      <if pos:line="338" pos:column="7">if<condition pos:line="338" pos:column="9">(<expr><call><name pos:line="338" pos:column="10">gnutls_certificate_set_x509_key_file<pos:position pos:line="338" pos:column="46"/></name><argument_list pos:line="338" pos:column="46">(
           <argument><expr><name><name pos:line="339" pos:column="12">BACKEND<pos:position pos:line="339" pos:column="19"/></name><operator pos:line="339" pos:column="19">-&gt;<pos:position pos:line="339" pos:column="24"/></operator><name pos:line="339" pos:column="21">cred<pos:position pos:line="339" pos:column="25"/></name></name></expr></argument>,
           <argument><expr><call><name pos:line="340" pos:column="12">SSL_SET_OPTION<pos:position pos:line="340" pos:column="26"/></name><argument_list pos:line="340" pos:column="26">(<argument><expr><name pos:line="340" pos:column="27">cert<pos:position pos:line="340" pos:column="31"/></name></expr></argument>)<pos:position pos:line="340" pos:column="32"/></argument_list></call></expr></argument>,
           <argument><expr><ternary><condition><expr><call><name pos:line="341" pos:column="12">SSL_SET_OPTION<pos:position pos:line="341" pos:column="26"/></name><argument_list pos:line="341" pos:column="26">(<argument><expr><name pos:line="341" pos:column="27">key<pos:position pos:line="341" pos:column="30"/></name></expr></argument>)<pos:position pos:line="341" pos:column="31"/></argument_list></call></expr> ?<pos:position pos:line="341" pos:column="33"/></condition><then pos:line="341" pos:column="33">
           <expr><call><name pos:line="342" pos:column="12">SSL_SET_OPTION<pos:position pos:line="342" pos:column="26"/></name><argument_list pos:line="342" pos:column="26">(<argument><expr><name pos:line="342" pos:column="27">key<pos:position pos:line="342" pos:column="30"/></name></expr></argument>)<pos:position pos:line="342" pos:column="31"/></argument_list></call></expr> <pos:position pos:line="342" pos:column="32"/></then><else pos:line="342" pos:column="32">: <expr><call><name pos:line="342" pos:column="34">SSL_SET_OPTION<pos:position pos:line="342" pos:column="48"/></name><argument_list pos:line="342" pos:column="48">(<argument><expr><name pos:line="342" pos:column="49">cert<pos:position pos:line="342" pos:column="53"/></name></expr></argument>)<pos:position pos:line="342" pos:column="54"/></argument_list></call></expr></else></ternary></expr></argument>,
           <argument><expr><call><name pos:line="343" pos:column="12">do_file_type<pos:position pos:line="343" pos:column="24"/></name><argument_list pos:line="343" pos:column="24">(<argument><expr><call><name pos:line="343" pos:column="25">SSL_SET_OPTION<pos:position pos:line="343" pos:column="39"/></name><argument_list pos:line="343" pos:column="39">(<argument><expr><name pos:line="343" pos:column="40">cert_type<pos:position pos:line="343" pos:column="49"/></name></expr></argument>)<pos:position pos:line="343" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="343" pos:column="51"/></argument_list></call></expr></argument> )<pos:position pos:line="343" pos:column="53"/></argument_list></call> <operator pos:line="343" pos:column="54">!=<pos:position pos:line="343" pos:column="56"/></operator>
         <name pos:line="344" pos:column="10">GNUTLS_E_SUCCESS<pos:position pos:line="344" pos:column="26"/></name></expr>)<pos:position pos:line="344" pos:column="27"/></condition><then pos:line="344" pos:column="27"> <block pos:line="344" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="345" pos:column="9">failf<pos:position pos:line="345" pos:column="14"/></name><argument_list pos:line="345" pos:column="14">(<argument><expr><name pos:line="345" pos:column="15">data<pos:position pos:line="345" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="345" pos:column="21">"error reading X.509 key or certificate file"<pos:position pos:line="345" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="345" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="68"/></expr_stmt>
        <return pos:line="346" pos:column="9">return <expr><name pos:line="346" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="346" pos:column="39"/></name></expr>;<pos:position pos:line="346" pos:column="40"/></return>
      }<pos:position pos:line="347" pos:column="8"/></block></then></if>
    }<pos:position pos:line="348" pos:column="6"/></block></else></if>
  }<pos:position pos:line="349" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="351" pos:column="1">#<cpp:directive pos:line="351" pos:column="2">ifdef<pos:position pos:line="351" pos:column="7"/></cpp:directive> <name pos:line="351" pos:column="8">USE_TLS_SRP<pos:position pos:line="351" pos:column="19"/></name></cpp:ifdef>
  <comment type="block" pos:line="352" pos:column="3">/* put the credentials to the current session */</comment>
  <if pos:line="353" pos:column="3">if<condition pos:line="353" pos:column="5">(<expr><call><name pos:line="353" pos:column="6">SSL_SET_OPTION<pos:position pos:line="353" pos:column="20"/></name><argument_list pos:line="353" pos:column="20">(<argument><expr><name pos:line="353" pos:column="21">authtype<pos:position pos:line="353" pos:column="29"/></name></expr></argument>)<pos:position pos:line="353" pos:column="30"/></argument_list></call> <operator pos:line="353" pos:column="31">==<pos:position pos:line="353" pos:column="33"/></operator> <name pos:line="353" pos:column="34">CURL_TLSAUTH_SRP<pos:position pos:line="353" pos:column="50"/></name></expr>)<pos:position pos:line="353" pos:column="51"/></condition><then pos:line="353" pos:column="51"> <block pos:line="353" pos:column="52">{
    <expr_stmt><expr><name pos:line="354" pos:column="5">rc<pos:position pos:line="354" pos:column="7"/></name> <operator pos:line="354" pos:column="8">=<pos:position pos:line="354" pos:column="9"/></operator> <call><name pos:line="354" pos:column="10">gnutls_credentials_set<pos:position pos:line="354" pos:column="32"/></name><argument_list pos:line="354" pos:column="32">(<argument><expr><name pos:line="354" pos:column="33">session<pos:position pos:line="354" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="354" pos:column="42">GNUTLS_CRD_SRP<pos:position pos:line="354" pos:column="56"/></name></expr></argument>,
                                <argument><expr><name><name pos:line="355" pos:column="33">BACKEND<pos:position pos:line="355" pos:column="40"/></name><operator pos:line="355" pos:column="40">-&gt;<pos:position pos:line="355" pos:column="45"/></operator><name pos:line="355" pos:column="42">srp_client_cred<pos:position pos:line="355" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="355" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="355" pos:column="59"/></expr_stmt>
    <if pos:line="356" pos:column="5">if<condition pos:line="356" pos:column="7">(<expr><name pos:line="356" pos:column="8">rc<pos:position pos:line="356" pos:column="10"/></name> <operator pos:line="356" pos:column="11">!=<pos:position pos:line="356" pos:column="13"/></operator> <name pos:line="356" pos:column="14">GNUTLS_E_SUCCESS<pos:position pos:line="356" pos:column="30"/></name></expr>)<pos:position pos:line="356" pos:column="31"/></condition><then pos:line="356" pos:column="31"> <block pos:line="356" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="357" pos:column="7">failf<pos:position pos:line="357" pos:column="12"/></name><argument_list pos:line="357" pos:column="12">(<argument><expr><name pos:line="357" pos:column="13">data<pos:position pos:line="357" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="357" pos:column="19">"gnutls_credentials_set() failed: %s"<pos:position pos:line="357" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="357" pos:column="58">gnutls_strerror<pos:position pos:line="357" pos:column="73"/></name><argument_list pos:line="357" pos:column="73">(<argument><expr><name pos:line="357" pos:column="74">rc<pos:position pos:line="357" pos:column="76"/></name></expr></argument>)<pos:position pos:line="357" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="357" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="357" pos:column="79"/></expr_stmt>
      <return pos:line="358" pos:column="7">return <expr><name pos:line="358" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="358" pos:column="37"/></name></expr>;<pos:position pos:line="358" pos:column="38"/></return>
    }<pos:position pos:line="359" pos:column="6"/></block></then></if>
  }<pos:position pos:line="360" pos:column="4"/></block></then>
  <else pos:line="361" pos:column="3">else
<cpp:endif pos:line="362" pos:column="1">#<cpp:directive pos:line="362" pos:column="2">endif<pos:position pos:line="362" pos:column="7"/></cpp:directive></cpp:endif>
  <block pos:line="363" pos:column="3">{
    <expr_stmt><expr><name pos:line="364" pos:column="5">rc<pos:position pos:line="364" pos:column="7"/></name> <operator pos:line="364" pos:column="8">=<pos:position pos:line="364" pos:column="9"/></operator> <call><name pos:line="364" pos:column="10">gnutls_credentials_set<pos:position pos:line="364" pos:column="32"/></name><argument_list pos:line="364" pos:column="32">(<argument><expr><name pos:line="364" pos:column="33">session<pos:position pos:line="364" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="364" pos:column="42">GNUTLS_CRD_CERTIFICATE<pos:position pos:line="364" pos:column="64"/></name></expr></argument>,
                                <argument><expr><name><name pos:line="365" pos:column="33">BACKEND<pos:position pos:line="365" pos:column="40"/></name><operator pos:line="365" pos:column="40">-&gt;<pos:position pos:line="365" pos:column="45"/></operator><name pos:line="365" pos:column="42">cred<pos:position pos:line="365" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="365" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="365" pos:column="48"/></expr_stmt>
    <if pos:line="366" pos:column="5">if<condition pos:line="366" pos:column="7">(<expr><name pos:line="366" pos:column="8">rc<pos:position pos:line="366" pos:column="10"/></name> <operator pos:line="366" pos:column="11">!=<pos:position pos:line="366" pos:column="13"/></operator> <name pos:line="366" pos:column="14">GNUTLS_E_SUCCESS<pos:position pos:line="366" pos:column="30"/></name></expr>)<pos:position pos:line="366" pos:column="31"/></condition><then pos:line="366" pos:column="31"> <block pos:line="366" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="367" pos:column="7">failf<pos:position pos:line="367" pos:column="12"/></name><argument_list pos:line="367" pos:column="12">(<argument><expr><name pos:line="367" pos:column="13">data<pos:position pos:line="367" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="367" pos:column="19">"gnutls_credentials_set() failed: %s"<pos:position pos:line="367" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="367" pos:column="58">gnutls_strerror<pos:position pos:line="367" pos:column="73"/></name><argument_list pos:line="367" pos:column="73">(<argument><expr><name pos:line="367" pos:column="74">rc<pos:position pos:line="367" pos:column="76"/></name></expr></argument>)<pos:position pos:line="367" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="367" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="79"/></expr_stmt>
      <return pos:line="368" pos:column="7">return <expr><name pos:line="368" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="368" pos:column="37"/></name></expr>;<pos:position pos:line="368" pos:column="38"/></return>
    }<pos:position pos:line="369" pos:column="6"/></block></then></if>
  }<pos:position pos:line="370" pos:column="4"/></block></else></if>

  <if pos:line="372" pos:column="3">if<condition pos:line="372" pos:column="5">(<expr><name><name pos:line="372" pos:column="6">conn<pos:position pos:line="372" pos:column="10"/></name><operator pos:line="372" pos:column="10">-&gt;<pos:position pos:line="372" pos:column="15"/></operator><name pos:line="372" pos:column="12">proxy_ssl<pos:position pos:line="372" pos:column="21"/></name><index pos:line="372" pos:column="21">[<expr><name pos:line="372" pos:column="22">sockindex<pos:position pos:line="372" pos:column="31"/></name></expr>]<pos:position pos:line="372" pos:column="32"/></index></name><operator pos:line="372" pos:column="32">.<pos:position pos:line="372" pos:column="33"/></operator><name pos:line="372" pos:column="33">use<pos:position pos:line="372" pos:column="36"/></name></expr>)<pos:position pos:line="372" pos:column="37"/></condition><then pos:line="372" pos:column="37"> <block pos:line="372" pos:column="38">{
    <expr_stmt><expr><name pos:line="373" pos:column="5">transport_ptr<pos:position pos:line="373" pos:column="18"/></name> <operator pos:line="373" pos:column="19">=<pos:position pos:line="373" pos:column="20"/></operator> <name><name pos:line="373" pos:column="21">conn<pos:position pos:line="373" pos:column="25"/></name><operator pos:line="373" pos:column="25">-&gt;<pos:position pos:line="373" pos:column="30"/></operator><name pos:line="373" pos:column="27">proxy_ssl<pos:position pos:line="373" pos:column="36"/></name><index pos:line="373" pos:column="36">[<expr><name pos:line="373" pos:column="37">sockindex<pos:position pos:line="373" pos:column="46"/></name></expr>]<pos:position pos:line="373" pos:column="47"/></index></name><operator pos:line="373" pos:column="47">.<pos:position pos:line="373" pos:column="48"/></operator><name><name pos:line="373" pos:column="48">backend<pos:position pos:line="373" pos:column="55"/></name><operator pos:line="373" pos:column="55">-&gt;<pos:position pos:line="373" pos:column="60"/></operator><name pos:line="373" pos:column="57">session<pos:position pos:line="373" pos:column="64"/></name></name></expr>;<pos:position pos:line="373" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name pos:line="374" pos:column="5">gnutls_transport_push<pos:position pos:line="374" pos:column="26"/></name> <operator pos:line="374" pos:column="27">=<pos:position pos:line="374" pos:column="28"/></operator> <name pos:line="374" pos:column="29">Curl_gtls_push_ssl<pos:position pos:line="374" pos:column="47"/></name></expr>;<pos:position pos:line="374" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="375" pos:column="5">gnutls_transport_pull<pos:position pos:line="375" pos:column="26"/></name> <operator pos:line="375" pos:column="27">=<pos:position pos:line="375" pos:column="28"/></operator> <name pos:line="375" pos:column="29">Curl_gtls_pull_ssl<pos:position pos:line="375" pos:column="47"/></name></expr>;<pos:position pos:line="375" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="376" pos:column="4"/></block></then>
  <else pos:line="377" pos:column="3">else <block pos:line="377" pos:column="8">{
    <comment type="block" pos:line="378" pos:column="5">/* file descriptor for the socket */</comment>
    <expr_stmt><expr><name pos:line="379" pos:column="5">transport_ptr<pos:position pos:line="379" pos:column="18"/></name> <operator pos:line="379" pos:column="19">=<pos:position pos:line="379" pos:column="20"/></operator> <call><name pos:line="379" pos:column="21">GNUTLS_SOCKET_TO_POINTER_CAST<pos:position pos:line="379" pos:column="50"/></name><argument_list pos:line="379" pos:column="50">(<argument><expr><name><name pos:line="379" pos:column="51">conn<pos:position pos:line="379" pos:column="55"/></name><operator pos:line="379" pos:column="55">-&gt;<pos:position pos:line="379" pos:column="60"/></operator><name pos:line="379" pos:column="57">sock<pos:position pos:line="379" pos:column="61"/></name><index pos:line="379" pos:column="61">[<expr><name pos:line="379" pos:column="62">sockindex<pos:position pos:line="379" pos:column="71"/></name></expr>]<pos:position pos:line="379" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="379" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="379" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name pos:line="380" pos:column="5">gnutls_transport_push<pos:position pos:line="380" pos:column="26"/></name> <operator pos:line="380" pos:column="27">=<pos:position pos:line="380" pos:column="28"/></operator> <name pos:line="380" pos:column="29">Curl_gtls_push<pos:position pos:line="380" pos:column="43"/></name></expr>;<pos:position pos:line="380" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="381" pos:column="5">gnutls_transport_pull<pos:position pos:line="381" pos:column="26"/></name> <operator pos:line="381" pos:column="27">=<pos:position pos:line="381" pos:column="28"/></operator> <name pos:line="381" pos:column="29">Curl_gtls_pull<pos:position pos:line="381" pos:column="43"/></name></expr>;<pos:position pos:line="381" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="382" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="384" pos:column="3">/* set the connection handle */</comment>
  <expr_stmt><expr><call><name pos:line="385" pos:column="3">gnutls_transport_set_ptr<pos:position pos:line="385" pos:column="27"/></name><argument_list pos:line="385" pos:column="27">(<argument><expr><name pos:line="385" pos:column="28">session<pos:position pos:line="385" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="385" pos:column="37">transport_ptr<pos:position pos:line="385" pos:column="50"/></name></expr></argument>)<pos:position pos:line="385" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="385" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="387" pos:column="3">/* register callback functions to send and receive data. */</comment>
  <expr_stmt><expr><call><name pos:line="388" pos:column="3">gnutls_transport_set_push_function<pos:position pos:line="388" pos:column="37"/></name><argument_list pos:line="388" pos:column="37">(<argument><expr><name pos:line="388" pos:column="38">session<pos:position pos:line="388" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="388" pos:column="47">gnutls_transport_push<pos:position pos:line="388" pos:column="68"/></name></expr></argument>)<pos:position pos:line="388" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="388" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="389" pos:column="3">gnutls_transport_set_pull_function<pos:position pos:line="389" pos:column="37"/></name><argument_list pos:line="389" pos:column="37">(<argument><expr><name pos:line="389" pos:column="38">session<pos:position pos:line="389" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="389" pos:column="47">gnutls_transport_pull<pos:position pos:line="389" pos:column="68"/></name></expr></argument>)<pos:position pos:line="389" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="389" pos:column="70"/></expr_stmt>

  <comment type="block" pos:line="391" pos:column="3">/* lowat must be set to zero when using custom push and pull functions. */</comment>
  <expr_stmt><expr><call><name pos:line="392" pos:column="3">gnutls_transport_set_lowat<pos:position pos:line="392" pos:column="29"/></name><argument_list pos:line="392" pos:column="29">(<argument><expr><name pos:line="392" pos:column="30">session<pos:position pos:line="392" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="392" pos:column="39">0<pos:position pos:line="392" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="392" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="392" pos:column="42"/></expr_stmt>

<cpp:ifdef pos:line="394" pos:column="1">#<cpp:directive pos:line="394" pos:column="2">ifdef<pos:position pos:line="394" pos:column="7"/></cpp:directive> <name pos:line="394" pos:column="8">HAS_OCSP<pos:position pos:line="394" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="395" pos:column="3">if<condition pos:line="395" pos:column="5">(<expr><call><name pos:line="395" pos:column="6">SSL_CONN_CONFIG<pos:position pos:line="395" pos:column="21"/></name><argument_list pos:line="395" pos:column="21">(<argument><expr><name pos:line="395" pos:column="22">verifystatus<pos:position pos:line="395" pos:column="34"/></name></expr></argument>)<pos:position pos:line="395" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="395" pos:column="36"/></condition><then pos:line="395" pos:column="36"> <block pos:line="395" pos:column="37">{
    <expr_stmt><expr><name pos:line="396" pos:column="5">rc<pos:position pos:line="396" pos:column="7"/></name> <operator pos:line="396" pos:column="8">=<pos:position pos:line="396" pos:column="9"/></operator> <call><name pos:line="396" pos:column="10">gnutls_ocsp_status_request_enable_client<pos:position pos:line="396" pos:column="50"/></name><argument_list pos:line="396" pos:column="50">(<argument><expr><name pos:line="396" pos:column="51">session<pos:position pos:line="396" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="396" pos:column="60">NULL<pos:position pos:line="396" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="396" pos:column="66">0<pos:position pos:line="396" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="396" pos:column="69">NULL<pos:position pos:line="396" pos:column="73"/></name></expr></argument>)<pos:position pos:line="396" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="396" pos:column="75"/></expr_stmt>
    <if pos:line="397" pos:column="5">if<condition pos:line="397" pos:column="7">(<expr><name pos:line="397" pos:column="8">rc<pos:position pos:line="397" pos:column="10"/></name> <operator pos:line="397" pos:column="11">!=<pos:position pos:line="397" pos:column="13"/></operator> <name pos:line="397" pos:column="14">GNUTLS_E_SUCCESS<pos:position pos:line="397" pos:column="30"/></name></expr>)<pos:position pos:line="397" pos:column="31"/></condition><then pos:line="397" pos:column="31"> <block pos:line="397" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="398" pos:column="7">failf<pos:position pos:line="398" pos:column="12"/></name><argument_list pos:line="398" pos:column="12">(<argument><expr><name pos:line="398" pos:column="13">data<pos:position pos:line="398" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="398" pos:column="19">"gnutls_ocsp_status_request_enable_client() failed: %d"<pos:position pos:line="398" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="398" pos:column="76">rc<pos:position pos:line="398" pos:column="78"/></name></expr></argument>)<pos:position pos:line="398" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="398" pos:column="80"/></expr_stmt>
      <return pos:line="399" pos:column="7">return <expr><name pos:line="399" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="399" pos:column="37"/></name></expr>;<pos:position pos:line="399" pos:column="38"/></return>
    }<pos:position pos:line="400" pos:column="6"/></block></then></if>
  }<pos:position pos:line="401" pos:column="4"/></block></then></if>
<cpp:endif pos:line="402" pos:column="1">#<cpp:directive pos:line="402" pos:column="2">endif<pos:position pos:line="402" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="404" pos:column="3">/* This might be a reconnect, so we check for a session ID in the cache
     to speed up things */</comment>
  <if pos:line="406" pos:column="3">if<condition pos:line="406" pos:column="5">(<expr><call><name pos:line="406" pos:column="6">SSL_SET_OPTION<pos:position pos:line="406" pos:column="20"/></name><argument_list pos:line="406" pos:column="20">(<argument><expr><name><name pos:line="406" pos:column="21">primary<pos:position pos:line="406" pos:column="28"/></name><operator pos:line="406" pos:column="28">.<pos:position pos:line="406" pos:column="29"/></operator><name pos:line="406" pos:column="29">sessionid<pos:position pos:line="406" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="406" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="406" pos:column="40"/></condition><then pos:line="406" pos:column="40"> <block pos:line="406" pos:column="41">{
    <decl_stmt><decl><type><name pos:line="407" pos:column="5">void<pos:position pos:line="407" pos:column="9"/></name> <modifier pos:line="407" pos:column="10">*<pos:position pos:line="407" pos:column="11"/></modifier></type><name pos:line="407" pos:column="11">ssl_sessionid<pos:position pos:line="407" pos:column="24"/></name></decl>;<pos:position pos:line="407" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="408" pos:column="5">size_t<pos:position pos:line="408" pos:column="11"/></name></type> <name pos:line="408" pos:column="12">ssl_idsize<pos:position pos:line="408" pos:column="22"/></name></decl>;<pos:position pos:line="408" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="410" pos:column="5">Curl_ssl_sessionid_lock<pos:position pos:line="410" pos:column="28"/></name><argument_list pos:line="410" pos:column="28">(<argument><expr><name pos:line="410" pos:column="29">conn<pos:position pos:line="410" pos:column="33"/></name></expr></argument>)<pos:position pos:line="410" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="410" pos:column="35"/></expr_stmt>
    <if pos:line="411" pos:column="5">if<condition pos:line="411" pos:column="7">(<expr><operator pos:line="411" pos:column="8">!<pos:position pos:line="411" pos:column="9"/></operator><call><name pos:line="411" pos:column="9">Curl_ssl_getsessionid<pos:position pos:line="411" pos:column="30"/></name><argument_list pos:line="411" pos:column="30">(<argument><expr><name pos:line="411" pos:column="31">conn<pos:position pos:line="411" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="411" pos:column="37">&amp;<pos:position pos:line="411" pos:column="42"/></operator><name pos:line="411" pos:column="38">ssl_sessionid<pos:position pos:line="411" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="411" pos:column="53">&amp;<pos:position pos:line="411" pos:column="58"/></operator><name pos:line="411" pos:column="54">ssl_idsize<pos:position pos:line="411" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="411" pos:column="66">sockindex<pos:position pos:line="411" pos:column="75"/></name></expr></argument>)<pos:position pos:line="411" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="411" pos:column="77"/></condition><then pos:line="411" pos:column="77"> <block pos:line="411" pos:column="78">{
      <comment type="block" pos:line="412" pos:column="7">/* we got a session id, use it! */</comment>
      <expr_stmt><expr><call><name pos:line="413" pos:column="7">gnutls_session_set_data<pos:position pos:line="413" pos:column="30"/></name><argument_list pos:line="413" pos:column="30">(<argument><expr><name pos:line="413" pos:column="31">session<pos:position pos:line="413" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="413" pos:column="40">ssl_sessionid<pos:position pos:line="413" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="413" pos:column="55">ssl_idsize<pos:position pos:line="413" pos:column="65"/></name></expr></argument>)<pos:position pos:line="413" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="413" pos:column="67"/></expr_stmt>

      <comment type="block" pos:line="415" pos:column="7">/* Informational message */</comment>
      <expr_stmt><expr><call><name pos:line="416" pos:column="7">infof<pos:position pos:line="416" pos:column="12"/></name><argument_list pos:line="416" pos:column="12">(<argument><expr><name pos:line="416" pos:column="13">data<pos:position pos:line="416" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="416" pos:column="19">"SSL re-using session ID\n"<pos:position pos:line="416" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="416" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="416" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="417" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="418" pos:column="5">Curl_ssl_sessionid_unlock<pos:position pos:line="418" pos:column="30"/></name><argument_list pos:line="418" pos:column="30">(<argument><expr><name pos:line="418" pos:column="31">conn<pos:position pos:line="418" pos:column="35"/></name></expr></argument>)<pos:position pos:line="418" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="418" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="419" pos:column="4"/></block></then></if>

  <return pos:line="421" pos:column="3">return <expr><name pos:line="421" pos:column="10">CURLE_OK<pos:position pos:line="421" pos:column="18"/></name></expr>;<pos:position pos:line="421" pos:column="19"/></return>
}<pos:position pos:line="422" pos:column="2"/></block></function></unit>

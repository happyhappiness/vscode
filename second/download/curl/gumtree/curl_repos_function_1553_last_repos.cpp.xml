<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1553_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">smb_send_read<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">smb_request<pos:position pos:line="3" pos:column="21"/></name></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">req<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name><name pos:line="3" pos:column="29">conn<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">data<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">-&gt;<pos:position pos:line="3" pos:column="44"/></operator><name pos:line="3" pos:column="41">req<pos:position pos:line="3" pos:column="44"/></name><operator pos:line="3" pos:column="44">.<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="45">protop<pos:position pos:line="3" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">curl_off_t<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">offset<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name><name pos:line="4" pos:column="23">conn<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">data<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">req<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">.<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="39">offset<pos:position pos:line="4" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">smb_read<pos:position pos:line="5" pos:column="18"/></name></name></type> <name pos:line="5" pos:column="19">msg<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">memset<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><operator pos:line="7" pos:column="10">&amp;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="11">msg<pos:position pos:line="7" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="19">sizeof<argument_list pos:line="7" pos:column="25">(<argument><expr><name pos:line="7" pos:column="26">msg<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">msg<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">.<pos:position pos:line="8" pos:column="7"/></operator><name pos:line="8" pos:column="7">word_count<pos:position pos:line="8" pos:column="17"/></name></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">SMB_WC_READ_ANDX<pos:position pos:line="8" pos:column="36"/></name></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">msg<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">.<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">andx<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">.<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">command<pos:position pos:line="9" pos:column="19"/></name></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">SMB_COM_NO_ANDX_COMMAND<pos:position pos:line="9" pos:column="45"/></name></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">msg<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">.<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">fid<pos:position pos:line="10" pos:column="10"/></name></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">smb_swap16<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name><name pos:line="10" pos:column="24">req<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">fid<pos:position pos:line="10" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">msg<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">.<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">offset<pos:position pos:line="11" pos:column="13"/></name></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">smb_swap32<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><operator pos:line="11" pos:column="27">(<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">unsigned<pos:position pos:line="11" pos:column="36"/></name> <name pos:line="11" pos:column="37">int<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">)<pos:position pos:line="11" pos:column="41"/></operator> <name pos:line="11" pos:column="42">offset<pos:position pos:line="11" pos:column="48"/></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">msg<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">.<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">offset_high<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <call><name pos:line="12" pos:column="21">smb_swap32<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><call pos:line="12" pos:column="32">(<name pos:line="12" pos:column="33">unsigned<pos:position pos:line="12" pos:column="41"/></name> <name pos:line="12" pos:column="42">int<pos:position pos:line="12" pos:column="45"/></name>) <argument_list pos:line="12" pos:column="47">(<argument><expr><name pos:line="12" pos:column="48">offset<pos:position pos:line="12" pos:column="54"/></name> <operator pos:line="12" pos:column="55">&gt;&gt;<pos:position pos:line="12" pos:column="60"/></operator> <literal type="number" pos:line="12" pos:column="58">32<pos:position pos:line="12" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">msg<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">.<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">min_bytes<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <call><name pos:line="13" pos:column="19">smb_swap16<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">MAX_PAYLOAD_SIZE<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">msg<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">.<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">max_bytes<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <call><name pos:line="14" pos:column="19">smb_swap16<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">MAX_PAYLOAD_SIZE<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>

  <return pos:line="16" pos:column="3">return <expr><call><name pos:line="16" pos:column="10">smb_send_message<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">conn<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">SMB_COM_READ_ANDX<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="52">&amp;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="53">msg<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="58">sizeof<argument_list pos:line="16" pos:column="64">(<argument><expr><name pos:line="16" pos:column="65">msg<pos:position pos:line="16" pos:column="68"/></name></expr></argument>)<pos:position pos:line="16" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="71"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2309_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_auth_create_ntlm_type3_message<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">Curl_easy<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">data<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                                             <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">userp<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                                             <parameter><decl><type><specifier pos:line="3" pos:column="46">const<pos:position pos:line="3" pos:column="51"/></specifier> <name pos:line="3" pos:column="52">char<pos:position pos:line="3" pos:column="56"/></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="58">passwdp<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>,
                                             <parameter><decl><type><name><name pos:line="4" pos:column="46">struct<pos:position pos:line="4" pos:column="52"/></name> <name pos:line="4" pos:column="53">ntlmdata<pos:position pos:line="4" pos:column="61"/></name></name> <modifier pos:line="4" pos:column="62">*<pos:position pos:line="4" pos:column="63"/></modifier></type><name pos:line="4" pos:column="63">ntlm<pos:position pos:line="4" pos:column="67"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="5" pos:column="46">char<pos:position pos:line="5" pos:column="50"/></name> <modifier pos:line="5" pos:column="51">*<pos:position pos:line="5" pos:column="52"/></modifier><modifier pos:line="5" pos:column="52">*<pos:position pos:line="5" pos:column="53"/></modifier></type><name pos:line="5" pos:column="53">outptr<pos:position pos:line="5" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="61">size_t<pos:position pos:line="5" pos:column="67"/></name> <modifier pos:line="5" pos:column="68">*<pos:position pos:line="5" pos:column="69"/></modifier></type><name pos:line="5" pos:column="69">outlen<pos:position pos:line="5" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="76"/></parameter_list>

<block pos:line="7" pos:column="1">{
  <comment type="block" pos:line="8" pos:column="3">/* NTLM type-3 message structure:

          Index  Description            Content
            0    NTLMSSP Signature      Null-terminated ASCII "NTLMSSP"
                                        (0x4e544c4d53535000)
            8    NTLM Message Type      long (0x03000000)
           12    LM/LMv2 Response       security buffer
           20    NTLM/NTLMv2 Response   security buffer
           28    Target Name            security buffer
           36    User Name              security buffer
           44    Workstation Name       security buffer
          (52)   Session Key            security buffer (*)
          (60)   Flags                  long (*)
          (64)   OS Version Structure   8 bytes (*)
  52 (64) (72)   Start of data block
                                          (*) -&gt; Optional
  */</comment>

  <decl_stmt><decl><type><name pos:line="26" pos:column="3">CURLcode<pos:position pos:line="26" pos:column="11"/></name></type> <name pos:line="26" pos:column="12">result<pos:position pos:line="26" pos:column="18"/></name> <init pos:line="26" pos:column="19">= <expr><name pos:line="26" pos:column="21">CURLE_OK<pos:position pos:line="26" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="27" pos:column="3">size_t<pos:position pos:line="27" pos:column="9"/></name></type> <name pos:line="27" pos:column="10">size<pos:position pos:line="27" pos:column="14"/></name></decl>;<pos:position pos:line="27" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="28" pos:column="3">unsigned<pos:position pos:line="28" pos:column="11"/></name> <name pos:line="28" pos:column="12">char<pos:position pos:line="28" pos:column="16"/></name></type> <name><name pos:line="28" pos:column="17">ntlmbuf<pos:position pos:line="28" pos:column="24"/></name><index pos:line="28" pos:column="24">[<expr><name pos:line="28" pos:column="25">NTLM_BUFSIZE<pos:position pos:line="28" pos:column="37"/></name></expr>]<pos:position pos:line="28" pos:column="38"/></index></name></decl>;<pos:position pos:line="28" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="29" pos:column="3">int<pos:position pos:line="29" pos:column="6"/></name></type> <name pos:line="29" pos:column="7">lmrespoff<pos:position pos:line="29" pos:column="16"/></name></decl>;<pos:position pos:line="29" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="30" pos:column="3">unsigned<pos:position pos:line="30" pos:column="11"/></name> <name pos:line="30" pos:column="12">char<pos:position pos:line="30" pos:column="16"/></name></type> <name><name pos:line="30" pos:column="17">lmresp<pos:position pos:line="30" pos:column="23"/></name><index pos:line="30" pos:column="23">[<expr><literal type="number" pos:line="30" pos:column="24">24<pos:position pos:line="30" pos:column="26"/></literal></expr>]<pos:position pos:line="30" pos:column="27"/></index></name></decl>;<pos:position pos:line="30" pos:column="28"/></decl_stmt> <comment type="block" pos:line="30" pos:column="29">/* fixed-size */</comment>
<cpp:ifdef pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">ifdef<pos:position pos:line="31" pos:column="7"/></cpp:directive> <name pos:line="31" pos:column="8">USE_NTRESPONSES<pos:position pos:line="31" pos:column="23"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="32" pos:column="3">int<pos:position pos:line="32" pos:column="6"/></name></type> <name pos:line="32" pos:column="7">ntrespoff<pos:position pos:line="32" pos:column="16"/></name></decl>;<pos:position pos:line="32" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="33" pos:column="3">unsigned<pos:position pos:line="33" pos:column="11"/></name> <name pos:line="33" pos:column="12">int<pos:position pos:line="33" pos:column="15"/></name></type> <name pos:line="33" pos:column="16">ntresplen<pos:position pos:line="33" pos:column="25"/></name> <init pos:line="33" pos:column="26">= <expr><literal type="number" pos:line="33" pos:column="28">24<pos:position pos:line="33" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="33" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="34" pos:column="3">unsigned<pos:position pos:line="34" pos:column="11"/></name> <name pos:line="34" pos:column="12">char<pos:position pos:line="34" pos:column="16"/></name></type> <name><name pos:line="34" pos:column="17">ntresp<pos:position pos:line="34" pos:column="23"/></name><index pos:line="34" pos:column="23">[<expr><literal type="number" pos:line="34" pos:column="24">24<pos:position pos:line="34" pos:column="26"/></literal></expr>]<pos:position pos:line="34" pos:column="27"/></index></name></decl>;<pos:position pos:line="34" pos:column="28"/></decl_stmt> <comment type="block" pos:line="34" pos:column="29">/* fixed-size */</comment>
  <decl_stmt><decl><type><name pos:line="35" pos:column="3">unsigned<pos:position pos:line="35" pos:column="11"/></name> <name pos:line="35" pos:column="12">char<pos:position pos:line="35" pos:column="16"/></name> <modifier pos:line="35" pos:column="17">*<pos:position pos:line="35" pos:column="18"/></modifier></type><name pos:line="35" pos:column="18">ptr_ntresp<pos:position pos:line="35" pos:column="28"/></name> <init pos:line="35" pos:column="29">= <expr><operator pos:line="35" pos:column="31">&amp;<pos:position pos:line="35" pos:column="36"/></operator><name><name pos:line="35" pos:column="32">ntresp<pos:position pos:line="35" pos:column="38"/></name><index pos:line="35" pos:column="38">[<expr><literal type="number" pos:line="35" pos:column="39">0<pos:position pos:line="35" pos:column="40"/></literal></expr>]<pos:position pos:line="35" pos:column="41"/></index></name></expr></init></decl>;<pos:position pos:line="35" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="36" pos:column="3">unsigned<pos:position pos:line="36" pos:column="11"/></name> <name pos:line="36" pos:column="12">char<pos:position pos:line="36" pos:column="16"/></name> <modifier pos:line="36" pos:column="17">*<pos:position pos:line="36" pos:column="18"/></modifier></type><name pos:line="36" pos:column="18">ntlmv2resp<pos:position pos:line="36" pos:column="28"/></name> <init pos:line="36" pos:column="29">= <expr><name pos:line="36" pos:column="31">NULL<pos:position pos:line="36" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="36" pos:column="36"/></decl_stmt>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="38" pos:column="3">bool<pos:position pos:line="38" pos:column="7"/></name></type> <name pos:line="38" pos:column="8">unicode<pos:position pos:line="38" pos:column="15"/></name> <init pos:line="38" pos:column="16">= <expr><ternary><condition><expr><operator pos:line="38" pos:column="18">(<pos:position pos:line="38" pos:column="19"/></operator><name><name pos:line="38" pos:column="19">ntlm<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">flags<pos:position pos:line="38" pos:column="30"/></name></name> <operator pos:line="38" pos:column="31">&amp;<pos:position pos:line="38" pos:column="36"/></operator> <name pos:line="38" pos:column="33">NTLMFLAG_NEGOTIATE_UNICODE<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">)<pos:position pos:line="38" pos:column="60"/></operator></expr> ?<pos:position pos:line="38" pos:column="62"/></condition><then pos:line="38" pos:column="62"> <expr><name pos:line="38" pos:column="63">TRUE<pos:position pos:line="38" pos:column="67"/></name></expr> <pos:position pos:line="38" pos:column="68"/></then><else pos:line="38" pos:column="68">: <expr><name pos:line="38" pos:column="70">FALSE<pos:position pos:line="38" pos:column="75"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="38" pos:column="76"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="39" pos:column="3">char<pos:position pos:line="39" pos:column="7"/></name></type> <name><name pos:line="39" pos:column="8">host<pos:position pos:line="39" pos:column="12"/></name><index pos:line="39" pos:column="12">[<expr><name pos:line="39" pos:column="13">HOSTNAME_MAX<pos:position pos:line="39" pos:column="25"/></name> <operator pos:line="39" pos:column="26">+<pos:position pos:line="39" pos:column="27"/></operator> <literal type="number" pos:line="39" pos:column="28">1<pos:position pos:line="39" pos:column="29"/></literal></expr>]<pos:position pos:line="39" pos:column="30"/></index></name> <init pos:line="39" pos:column="31">= <expr><literal type="string" pos:line="39" pos:column="33">""<pos:position pos:line="39" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="40" pos:column="3">const<pos:position pos:line="40" pos:column="8"/></specifier> <name pos:line="40" pos:column="9">char<pos:position pos:line="40" pos:column="13"/></name> <modifier pos:line="40" pos:column="14">*<pos:position pos:line="40" pos:column="15"/></modifier></type><name pos:line="40" pos:column="15">user<pos:position pos:line="40" pos:column="19"/></name></decl>;<pos:position pos:line="40" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="41" pos:column="3">const<pos:position pos:line="41" pos:column="8"/></specifier> <name pos:line="41" pos:column="9">char<pos:position pos:line="41" pos:column="13"/></name> <modifier pos:line="41" pos:column="14">*<pos:position pos:line="41" pos:column="15"/></modifier></type><name pos:line="41" pos:column="15">domain<pos:position pos:line="41" pos:column="21"/></name> <init pos:line="41" pos:column="22">= <expr><literal type="string" pos:line="41" pos:column="24">""<pos:position pos:line="41" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="41" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="42" pos:column="3">size_t<pos:position pos:line="42" pos:column="9"/></name></type> <name pos:line="42" pos:column="10">hostoff<pos:position pos:line="42" pos:column="17"/></name> <init pos:line="42" pos:column="18">= <expr><literal type="number" pos:line="42" pos:column="20">0<pos:position pos:line="42" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="42" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="43" pos:column="3">size_t<pos:position pos:line="43" pos:column="9"/></name></type> <name pos:line="43" pos:column="10">useroff<pos:position pos:line="43" pos:column="17"/></name> <init pos:line="43" pos:column="18">= <expr><literal type="number" pos:line="43" pos:column="20">0<pos:position pos:line="43" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="43" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="44" pos:column="3">size_t<pos:position pos:line="44" pos:column="9"/></name></type> <name pos:line="44" pos:column="10">domoff<pos:position pos:line="44" pos:column="16"/></name> <init pos:line="44" pos:column="17">= <expr><literal type="number" pos:line="44" pos:column="19">0<pos:position pos:line="44" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="44" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="45" pos:column="3">size_t<pos:position pos:line="45" pos:column="9"/></name></type> <name pos:line="45" pos:column="10">hostlen<pos:position pos:line="45" pos:column="17"/></name> <init pos:line="45" pos:column="18">= <expr><literal type="number" pos:line="45" pos:column="20">0<pos:position pos:line="45" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="45" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="46" pos:column="3">size_t<pos:position pos:line="46" pos:column="9"/></name></type> <name pos:line="46" pos:column="10">userlen<pos:position pos:line="46" pos:column="17"/></name> <init pos:line="46" pos:column="18">= <expr><literal type="number" pos:line="46" pos:column="20">0<pos:position pos:line="46" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="46" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="47" pos:column="3">size_t<pos:position pos:line="47" pos:column="9"/></name></type> <name pos:line="47" pos:column="10">domlen<pos:position pos:line="47" pos:column="16"/></name> <init pos:line="47" pos:column="17">= <expr><literal type="number" pos:line="47" pos:column="19">0<pos:position pos:line="47" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="47" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><name pos:line="49" pos:column="3">user<pos:position pos:line="49" pos:column="7"/></name> <operator pos:line="49" pos:column="8">=<pos:position pos:line="49" pos:column="9"/></operator> <call><name pos:line="49" pos:column="10">strchr<pos:position pos:line="49" pos:column="16"/></name><argument_list pos:line="49" pos:column="16">(<argument><expr><name pos:line="49" pos:column="17">userp<pos:position pos:line="49" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="49" pos:column="24">'\\'<pos:position pos:line="49" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="30"/></expr_stmt>
  <if pos:line="50" pos:column="3">if<condition pos:line="50" pos:column="5">(<expr><operator pos:line="50" pos:column="6">!<pos:position pos:line="50" pos:column="7"/></operator><name pos:line="50" pos:column="7">user<pos:position pos:line="50" pos:column="11"/></name></expr>)<pos:position pos:line="50" pos:column="12"/></condition><then pos:line="50" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="5">user<pos:position pos:line="51" pos:column="9"/></name> <operator pos:line="51" pos:column="10">=<pos:position pos:line="51" pos:column="11"/></operator> <call><name pos:line="51" pos:column="12">strchr<pos:position pos:line="51" pos:column="18"/></name><argument_list pos:line="51" pos:column="18">(<argument><expr><name pos:line="51" pos:column="19">userp<pos:position pos:line="51" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="51" pos:column="26">'/'<pos:position pos:line="51" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="31"/></expr_stmt></block></then></if>

  <if pos:line="53" pos:column="3">if<condition pos:line="53" pos:column="5">(<expr><name pos:line="53" pos:column="6">user<pos:position pos:line="53" pos:column="10"/></name></expr>)<pos:position pos:line="53" pos:column="11"/></condition><then pos:line="53" pos:column="11"> <block pos:line="53" pos:column="12">{
    <expr_stmt><expr><name pos:line="54" pos:column="5">domain<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <name pos:line="54" pos:column="14">userp<pos:position pos:line="54" pos:column="19"/></name></expr>;<pos:position pos:line="54" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="55" pos:column="5">domlen<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <operator pos:line="55" pos:column="14">(<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="15">user<pos:position pos:line="55" pos:column="19"/></name> <operator pos:line="55" pos:column="20">-<pos:position pos:line="55" pos:column="21"/></operator> <name pos:line="55" pos:column="22">domain<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">)<pos:position pos:line="55" pos:column="29"/></operator></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="56" pos:column="5">user<pos:position pos:line="56" pos:column="9"/></name><operator pos:line="56" pos:column="9">++<pos:position pos:line="56" pos:column="11"/></operator></expr>;<pos:position pos:line="56" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="57" pos:column="4"/></block></then>
  <else pos:line="58" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="5">user<pos:position pos:line="59" pos:column="9"/></name> <operator pos:line="59" pos:column="10">=<pos:position pos:line="59" pos:column="11"/></operator> <name pos:line="59" pos:column="12">userp<pos:position pos:line="59" pos:column="17"/></name></expr>;<pos:position pos:line="59" pos:column="18"/></expr_stmt></block></else></if>

  <if pos:line="61" pos:column="3">if<condition pos:line="61" pos:column="5">(<expr><name pos:line="61" pos:column="6">user<pos:position pos:line="61" pos:column="10"/></name></expr>)<pos:position pos:line="61" pos:column="11"/></condition><then pos:line="61" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="5">userlen<pos:position pos:line="62" pos:column="12"/></name> <operator pos:line="62" pos:column="13">=<pos:position pos:line="62" pos:column="14"/></operator> <call><name pos:line="62" pos:column="15">strlen<pos:position pos:line="62" pos:column="21"/></name><argument_list pos:line="62" pos:column="21">(<argument><expr><name pos:line="62" pos:column="22">user<pos:position pos:line="62" pos:column="26"/></name></expr></argument>)<pos:position pos:line="62" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="64" pos:column="3">/* Get the machine's un-qualified host name as NTLM doesn't like the fully
     qualified domain name */</comment>
  <if pos:line="66" pos:column="3">if<condition pos:line="66" pos:column="5">(<expr><call><name pos:line="66" pos:column="6">Curl_gethostname<pos:position pos:line="66" pos:column="22"/></name><argument_list pos:line="66" pos:column="22">(<argument><expr><name pos:line="66" pos:column="23">host<pos:position pos:line="66" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="29">sizeof<argument_list pos:line="66" pos:column="35">(<argument><expr><name pos:line="66" pos:column="36">host<pos:position pos:line="66" pos:column="40"/></name></expr></argument>)<pos:position pos:line="66" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="43"/></condition><then pos:line="66" pos:column="43"> <block pos:line="66" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">infof<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><name pos:line="67" pos:column="11">data<pos:position pos:line="67" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="17">"gethostname() failed, continuing without!\n"<pos:position pos:line="67" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name pos:line="68" pos:column="5">hostlen<pos:position pos:line="68" pos:column="12"/></name> <operator pos:line="68" pos:column="13">=<pos:position pos:line="68" pos:column="14"/></operator> <literal type="number" pos:line="68" pos:column="15">0<pos:position pos:line="68" pos:column="16"/></literal></expr>;<pos:position pos:line="68" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="69" pos:column="4"/></block></then>
  <else pos:line="70" pos:column="3">else <block pos:line="70" pos:column="8">{
    <expr_stmt><expr><name pos:line="71" pos:column="5">hostlen<pos:position pos:line="71" pos:column="12"/></name> <operator pos:line="71" pos:column="13">=<pos:position pos:line="71" pos:column="14"/></operator> <call><name pos:line="71" pos:column="15">strlen<pos:position pos:line="71" pos:column="21"/></name><argument_list pos:line="71" pos:column="21">(<argument><expr><name pos:line="71" pos:column="22">host<pos:position pos:line="71" pos:column="26"/></name></expr></argument>)<pos:position pos:line="71" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="72" pos:column="4"/></block></else></if>

<cpp:if pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">if<pos:position pos:line="74" pos:column="4"/></cpp:directive> <expr><call><name pos:line="74" pos:column="5">defined<pos:position pos:line="74" pos:column="12"/></name><argument_list pos:line="74" pos:column="12">(<argument><expr><name pos:line="74" pos:column="13">USE_NTRESPONSES<pos:position pos:line="74" pos:column="28"/></name></expr></argument>)<pos:position pos:line="74" pos:column="29"/></argument_list></call> <operator pos:line="74" pos:column="30">&amp;&amp;<pos:position pos:line="74" pos:column="40"/></operator> <call><name pos:line="74" pos:column="33">defined<pos:position pos:line="74" pos:column="40"/></name><argument_list pos:line="74" pos:column="40">(<argument><expr><name pos:line="74" pos:column="41">USE_NTLM_V2<pos:position pos:line="74" pos:column="52"/></name></expr></argument>)<pos:position pos:line="74" pos:column="53"/></argument_list></call></expr></cpp:if>
  <if pos:line="75" pos:column="3">if<condition pos:line="75" pos:column="5">(<expr><name><name pos:line="75" pos:column="6">ntlm<pos:position pos:line="75" pos:column="10"/></name><operator pos:line="75" pos:column="10">-&gt;<pos:position pos:line="75" pos:column="15"/></operator><name pos:line="75" pos:column="12">target_info_len<pos:position pos:line="75" pos:column="27"/></name></name></expr>)<pos:position pos:line="75" pos:column="28"/></condition><then pos:line="75" pos:column="28"> <block pos:line="75" pos:column="29">{
    <decl_stmt><decl><type><name pos:line="76" pos:column="5">unsigned<pos:position pos:line="76" pos:column="13"/></name> <name pos:line="76" pos:column="14">char<pos:position pos:line="76" pos:column="18"/></name></type> <name><name pos:line="76" pos:column="19">ntbuffer<pos:position pos:line="76" pos:column="27"/></name><index pos:line="76" pos:column="27">[<expr><literal type="number" pos:line="76" pos:column="28">0x18<pos:position pos:line="76" pos:column="32"/></literal></expr>]<pos:position pos:line="76" pos:column="33"/></index></name></decl>;<pos:position pos:line="76" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="77" pos:column="5">unsigned<pos:position pos:line="77" pos:column="13"/></name> <name pos:line="77" pos:column="14">char<pos:position pos:line="77" pos:column="18"/></name></type> <name><name pos:line="77" pos:column="19">entropy<pos:position pos:line="77" pos:column="26"/></name><index pos:line="77" pos:column="26">[<expr><literal type="number" pos:line="77" pos:column="27">8<pos:position pos:line="77" pos:column="28"/></literal></expr>]<pos:position pos:line="77" pos:column="29"/></index></name></decl>;<pos:position pos:line="77" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="78" pos:column="5">unsigned<pos:position pos:line="78" pos:column="13"/></name> <name pos:line="78" pos:column="14">char<pos:position pos:line="78" pos:column="18"/></name></type> <name><name pos:line="78" pos:column="19">ntlmv2hash<pos:position pos:line="78" pos:column="29"/></name><index pos:line="78" pos:column="29">[<expr><literal type="number" pos:line="78" pos:column="30">0x18<pos:position pos:line="78" pos:column="34"/></literal></expr>]<pos:position pos:line="78" pos:column="35"/></index></name></decl>;<pos:position pos:line="78" pos:column="36"/></decl_stmt>

    <expr_stmt><expr><name pos:line="80" pos:column="5">result<pos:position pos:line="80" pos:column="11"/></name> <operator pos:line="80" pos:column="12">=<pos:position pos:line="80" pos:column="13"/></operator> <call><name pos:line="80" pos:column="14">Curl_rand<pos:position pos:line="80" pos:column="23"/></name><argument_list pos:line="80" pos:column="23">(<argument><expr><name pos:line="80" pos:column="24">data<pos:position pos:line="80" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="30">entropy<pos:position pos:line="80" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="39">8<pos:position pos:line="80" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="42"/></expr_stmt>
    <if pos:line="81" pos:column="5">if<condition pos:line="81" pos:column="7">(<expr><name pos:line="81" pos:column="8">result<pos:position pos:line="81" pos:column="14"/></name></expr>)<pos:position pos:line="81" pos:column="15"/></condition><then pos:line="81" pos:column="15">
      <block type="pseudo"><return pos:line="82" pos:column="7">return <expr><name pos:line="82" pos:column="14">result<pos:position pos:line="82" pos:column="20"/></name></expr>;<pos:position pos:line="82" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="84" pos:column="5">result<pos:position pos:line="84" pos:column="11"/></name> <operator pos:line="84" pos:column="12">=<pos:position pos:line="84" pos:column="13"/></operator> <call><name pos:line="84" pos:column="14">Curl_ntlm_core_mk_nt_hash<pos:position pos:line="84" pos:column="39"/></name><argument_list pos:line="84" pos:column="39">(<argument><expr><name pos:line="84" pos:column="40">data<pos:position pos:line="84" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="46">passwdp<pos:position pos:line="84" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="55">ntbuffer<pos:position pos:line="84" pos:column="63"/></name></expr></argument>)<pos:position pos:line="84" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="65"/></expr_stmt>
    <if pos:line="85" pos:column="5">if<condition pos:line="85" pos:column="7">(<expr><name pos:line="85" pos:column="8">result<pos:position pos:line="85" pos:column="14"/></name></expr>)<pos:position pos:line="85" pos:column="15"/></condition><then pos:line="85" pos:column="15">
      <block type="pseudo"><return pos:line="86" pos:column="7">return <expr><name pos:line="86" pos:column="14">result<pos:position pos:line="86" pos:column="20"/></name></expr>;<pos:position pos:line="86" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="88" pos:column="5">result<pos:position pos:line="88" pos:column="11"/></name> <operator pos:line="88" pos:column="12">=<pos:position pos:line="88" pos:column="13"/></operator> <call><name pos:line="88" pos:column="14">Curl_ntlm_core_mk_ntlmv2_hash<pos:position pos:line="88" pos:column="43"/></name><argument_list pos:line="88" pos:column="43">(<argument><expr><name pos:line="88" pos:column="44">user<pos:position pos:line="88" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="50">userlen<pos:position pos:line="88" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="59">domain<pos:position pos:line="88" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="67">domlen<pos:position pos:line="88" pos:column="73"/></name></expr></argument>,
                                           <argument><expr><name pos:line="89" pos:column="44">ntbuffer<pos:position pos:line="89" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="54">ntlmv2hash<pos:position pos:line="89" pos:column="64"/></name></expr></argument>)<pos:position pos:line="89" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="66"/></expr_stmt>
    <if pos:line="90" pos:column="5">if<condition pos:line="90" pos:column="7">(<expr><name pos:line="90" pos:column="8">result<pos:position pos:line="90" pos:column="14"/></name></expr>)<pos:position pos:line="90" pos:column="15"/></condition><then pos:line="90" pos:column="15">
      <block type="pseudo"><return pos:line="91" pos:column="7">return <expr><name pos:line="91" pos:column="14">result<pos:position pos:line="91" pos:column="20"/></name></expr>;<pos:position pos:line="91" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="93" pos:column="5">/* LMv2 response */</comment>
    <expr_stmt><expr><name pos:line="94" pos:column="5">result<pos:position pos:line="94" pos:column="11"/></name> <operator pos:line="94" pos:column="12">=<pos:position pos:line="94" pos:column="13"/></operator> <call><name pos:line="94" pos:column="14">Curl_ntlm_core_mk_lmv2_resp<pos:position pos:line="94" pos:column="41"/></name><argument_list pos:line="94" pos:column="41">(<argument><expr><name pos:line="94" pos:column="42">ntlmv2hash<pos:position pos:line="94" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="54">entropy<pos:position pos:line="94" pos:column="61"/></name></expr></argument>,
                                         <argument><expr><operator pos:line="95" pos:column="42">&amp;<pos:position pos:line="95" pos:column="47"/></operator><name><name pos:line="95" pos:column="43">ntlm<pos:position pos:line="95" pos:column="47"/></name><operator pos:line="95" pos:column="47">-&gt;<pos:position pos:line="95" pos:column="52"/></operator><name pos:line="95" pos:column="49">nonce<pos:position pos:line="95" pos:column="54"/></name><index pos:line="95" pos:column="54">[<expr><literal type="number" pos:line="95" pos:column="55">0<pos:position pos:line="95" pos:column="56"/></literal></expr>]<pos:position pos:line="95" pos:column="57"/></index></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="59">lmresp<pos:position pos:line="95" pos:column="65"/></name></expr></argument>)<pos:position pos:line="95" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="67"/></expr_stmt>
    <if pos:line="96" pos:column="5">if<condition pos:line="96" pos:column="7">(<expr><name pos:line="96" pos:column="8">result<pos:position pos:line="96" pos:column="14"/></name></expr>)<pos:position pos:line="96" pos:column="15"/></condition><then pos:line="96" pos:column="15">
      <block type="pseudo"><return pos:line="97" pos:column="7">return <expr><name pos:line="97" pos:column="14">result<pos:position pos:line="97" pos:column="20"/></name></expr>;<pos:position pos:line="97" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="99" pos:column="5">/* NTLMv2 response */</comment>
    <expr_stmt><expr><name pos:line="100" pos:column="5">result<pos:position pos:line="100" pos:column="11"/></name> <operator pos:line="100" pos:column="12">=<pos:position pos:line="100" pos:column="13"/></operator> <call><name pos:line="100" pos:column="14">Curl_ntlm_core_mk_ntlmv2_resp<pos:position pos:line="100" pos:column="43"/></name><argument_list pos:line="100" pos:column="43">(<argument><expr><name pos:line="100" pos:column="44">ntlmv2hash<pos:position pos:line="100" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="56">entropy<pos:position pos:line="100" pos:column="63"/></name></expr></argument>,
                                           <argument><expr><name pos:line="101" pos:column="44">ntlm<pos:position pos:line="101" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="101" pos:column="50">&amp;<pos:position pos:line="101" pos:column="55"/></operator><name pos:line="101" pos:column="51">ntlmv2resp<pos:position pos:line="101" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="101" pos:column="63">&amp;<pos:position pos:line="101" pos:column="68"/></operator><name pos:line="101" pos:column="64">ntresplen<pos:position pos:line="101" pos:column="73"/></name></expr></argument>)<pos:position pos:line="101" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="75"/></expr_stmt>
    <if pos:line="102" pos:column="5">if<condition pos:line="102" pos:column="7">(<expr><name pos:line="102" pos:column="8">result<pos:position pos:line="102" pos:column="14"/></name></expr>)<pos:position pos:line="102" pos:column="15"/></condition><then pos:line="102" pos:column="15">
      <block type="pseudo"><return pos:line="103" pos:column="7">return <expr><name pos:line="103" pos:column="14">result<pos:position pos:line="103" pos:column="20"/></name></expr>;<pos:position pos:line="103" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="105" pos:column="5">ptr_ntresp<pos:position pos:line="105" pos:column="15"/></name> <operator pos:line="105" pos:column="16">=<pos:position pos:line="105" pos:column="17"/></operator> <name pos:line="105" pos:column="18">ntlmv2resp<pos:position pos:line="105" pos:column="28"/></name></expr>;<pos:position pos:line="105" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="106" pos:column="4"/></block></then>
  <elseif pos:line="107" pos:column="3">else
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif<pos:position pos:line="108" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">if<pos:position pos:line="110" pos:column="4"/></cpp:directive> <expr><call><name pos:line="110" pos:column="5">defined<pos:position pos:line="110" pos:column="12"/></name><argument_list pos:line="110" pos:column="12">(<argument><expr><name pos:line="110" pos:column="13">USE_NTRESPONSES<pos:position pos:line="110" pos:column="28"/></name></expr></argument>)<pos:position pos:line="110" pos:column="29"/></argument_list></call> <operator pos:line="110" pos:column="30">&amp;&amp;<pos:position pos:line="110" pos:column="40"/></operator> <call><name pos:line="110" pos:column="33">defined<pos:position pos:line="110" pos:column="40"/></name><argument_list pos:line="110" pos:column="40">(<argument><expr><name pos:line="110" pos:column="41">USE_NTLM2SESSION<pos:position pos:line="110" pos:column="57"/></name></expr></argument>)<pos:position pos:line="110" pos:column="58"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="111" pos:column="3">/* We don't support NTLM2 if we don't have USE_NTRESPONSES */</comment>
  <if pos:line="112" pos:column="3">if<condition pos:line="112" pos:column="5">(<expr><name><name pos:line="112" pos:column="6">ntlm<pos:position pos:line="112" pos:column="10"/></name><operator pos:line="112" pos:column="10">-&gt;<pos:position pos:line="112" pos:column="15"/></operator><name pos:line="112" pos:column="12">flags<pos:position pos:line="112" pos:column="17"/></name></name> <operator pos:line="112" pos:column="18">&amp;<pos:position pos:line="112" pos:column="23"/></operator> <name pos:line="112" pos:column="20">NTLMFLAG_NEGOTIATE_NTLM2_KEY<pos:position pos:line="112" pos:column="48"/></name></expr>)<pos:position pos:line="112" pos:column="49"/></condition><then pos:line="112" pos:column="49"> <block pos:line="112" pos:column="50">{
    <decl_stmt><decl><type><name pos:line="113" pos:column="5">unsigned<pos:position pos:line="113" pos:column="13"/></name> <name pos:line="113" pos:column="14">char<pos:position pos:line="113" pos:column="18"/></name></type> <name><name pos:line="113" pos:column="19">ntbuffer<pos:position pos:line="113" pos:column="27"/></name><index pos:line="113" pos:column="27">[<expr><literal type="number" pos:line="113" pos:column="28">0x18<pos:position pos:line="113" pos:column="32"/></literal></expr>]<pos:position pos:line="113" pos:column="33"/></index></name></decl>;<pos:position pos:line="113" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="114" pos:column="5">unsigned<pos:position pos:line="114" pos:column="13"/></name> <name pos:line="114" pos:column="14">char<pos:position pos:line="114" pos:column="18"/></name></type> <name><name pos:line="114" pos:column="19">tmp<pos:position pos:line="114" pos:column="22"/></name><index pos:line="114" pos:column="22">[<expr><literal type="number" pos:line="114" pos:column="23">0x18<pos:position pos:line="114" pos:column="27"/></literal></expr>]<pos:position pos:line="114" pos:column="28"/></index></name></decl>;<pos:position pos:line="114" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="115" pos:column="5">unsigned<pos:position pos:line="115" pos:column="13"/></name> <name pos:line="115" pos:column="14">char<pos:position pos:line="115" pos:column="18"/></name></type> <name><name pos:line="115" pos:column="19">md5sum<pos:position pos:line="115" pos:column="25"/></name><index pos:line="115" pos:column="25">[<expr><name pos:line="115" pos:column="26">MD5_DIGEST_LENGTH<pos:position pos:line="115" pos:column="43"/></name></expr>]<pos:position pos:line="115" pos:column="44"/></index></name></decl>;<pos:position pos:line="115" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="116" pos:column="5">unsigned<pos:position pos:line="116" pos:column="13"/></name> <name pos:line="116" pos:column="14">char<pos:position pos:line="116" pos:column="18"/></name></type> <name><name pos:line="116" pos:column="19">entropy<pos:position pos:line="116" pos:column="26"/></name><index pos:line="116" pos:column="26">[<expr><literal type="number" pos:line="116" pos:column="27">8<pos:position pos:line="116" pos:column="28"/></literal></expr>]<pos:position pos:line="116" pos:column="29"/></index></name></decl>;<pos:position pos:line="116" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="118" pos:column="5">/* Need to create 8 bytes random data */</comment>
    <expr_stmt><expr><name pos:line="119" pos:column="5">result<pos:position pos:line="119" pos:column="11"/></name> <operator pos:line="119" pos:column="12">=<pos:position pos:line="119" pos:column="13"/></operator> <call><name pos:line="119" pos:column="14">Curl_rand<pos:position pos:line="119" pos:column="23"/></name><argument_list pos:line="119" pos:column="23">(<argument><expr><name pos:line="119" pos:column="24">data<pos:position pos:line="119" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="30">entropy<pos:position pos:line="119" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="39">8<pos:position pos:line="119" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="42"/></expr_stmt>
    <if pos:line="120" pos:column="5">if<condition pos:line="120" pos:column="7">(<expr><name pos:line="120" pos:column="8">result<pos:position pos:line="120" pos:column="14"/></name></expr>)<pos:position pos:line="120" pos:column="15"/></condition><then pos:line="120" pos:column="15">
      <block type="pseudo"><return pos:line="121" pos:column="7">return <expr><name pos:line="121" pos:column="14">result<pos:position pos:line="121" pos:column="20"/></name></expr>;<pos:position pos:line="121" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="123" pos:column="5">/* 8 bytes random data as challenge in lmresp */</comment>
    <expr_stmt><expr><call><name pos:line="124" pos:column="5">memcpy<pos:position pos:line="124" pos:column="11"/></name><argument_list pos:line="124" pos:column="11">(<argument><expr><name pos:line="124" pos:column="12">lmresp<pos:position pos:line="124" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="20">entropy<pos:position pos:line="124" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="29">8<pos:position pos:line="124" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="126" pos:column="5">/* Pad with zeros */</comment>
    <expr_stmt><expr><call><name pos:line="127" pos:column="5">memset<pos:position pos:line="127" pos:column="11"/></name><argument_list pos:line="127" pos:column="11">(<argument><expr><name pos:line="127" pos:column="12">lmresp<pos:position pos:line="127" pos:column="18"/></name> <operator pos:line="127" pos:column="19">+<pos:position pos:line="127" pos:column="20"/></operator> <literal type="number" pos:line="127" pos:column="21">8<pos:position pos:line="127" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="24">0<pos:position pos:line="127" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="27">0x10<pos:position pos:line="127" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="129" pos:column="5">/* Fill tmp with challenge(nonce?) + entropy */</comment>
    <expr_stmt><expr><call><name pos:line="130" pos:column="5">memcpy<pos:position pos:line="130" pos:column="11"/></name><argument_list pos:line="130" pos:column="11">(<argument><expr><name pos:line="130" pos:column="12">tmp<pos:position pos:line="130" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="17">&amp;<pos:position pos:line="130" pos:column="22"/></operator><name><name pos:line="130" pos:column="18">ntlm<pos:position pos:line="130" pos:column="22"/></name><operator pos:line="130" pos:column="22">-&gt;<pos:position pos:line="130" pos:column="27"/></operator><name pos:line="130" pos:column="24">nonce<pos:position pos:line="130" pos:column="29"/></name><index pos:line="130" pos:column="29">[<expr><literal type="number" pos:line="130" pos:column="30">0<pos:position pos:line="130" pos:column="31"/></literal></expr>]<pos:position pos:line="130" pos:column="32"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="34">8<pos:position pos:line="130" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="131" pos:column="5">memcpy<pos:position pos:line="131" pos:column="11"/></name><argument_list pos:line="131" pos:column="11">(<argument><expr><name pos:line="131" pos:column="12">tmp<pos:position pos:line="131" pos:column="15"/></name> <operator pos:line="131" pos:column="16">+<pos:position pos:line="131" pos:column="17"/></operator> <literal type="number" pos:line="131" pos:column="18">8<pos:position pos:line="131" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="21">entropy<pos:position pos:line="131" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="131" pos:column="30">8<pos:position pos:line="131" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name pos:line="133" pos:column="5">result<pos:position pos:line="133" pos:column="11"/></name> <operator pos:line="133" pos:column="12">=<pos:position pos:line="133" pos:column="13"/></operator> <call><name pos:line="133" pos:column="14">Curl_ssl_md5sum<pos:position pos:line="133" pos:column="29"/></name><argument_list pos:line="133" pos:column="29">(<argument><expr><name pos:line="133" pos:column="30">tmp<pos:position pos:line="133" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="133" pos:column="35">16<pos:position pos:line="133" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="133" pos:column="39">md5sum<pos:position pos:line="133" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="47">MD5_DIGEST_LENGTH<pos:position pos:line="133" pos:column="64"/></name></expr></argument>)<pos:position pos:line="133" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="66"/></expr_stmt>
    <if pos:line="134" pos:column="5">if<condition pos:line="134" pos:column="7">(<expr><operator pos:line="134" pos:column="8">!<pos:position pos:line="134" pos:column="9"/></operator><name pos:line="134" pos:column="9">result<pos:position pos:line="134" pos:column="15"/></name></expr>)<pos:position pos:line="134" pos:column="16"/></condition><then pos:line="134" pos:column="16">
      <comment type="block" pos:line="135" pos:column="7">/* We shall only use the first 8 bytes of md5sum, but the des code in
         Curl_ntlm_core_lm_resp only encrypt the first 8 bytes */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="137" pos:column="7">result<pos:position pos:line="137" pos:column="13"/></name> <operator pos:line="137" pos:column="14">=<pos:position pos:line="137" pos:column="15"/></operator> <call><name pos:line="137" pos:column="16">Curl_ntlm_core_mk_nt_hash<pos:position pos:line="137" pos:column="41"/></name><argument_list pos:line="137" pos:column="41">(<argument><expr><name pos:line="137" pos:column="42">data<pos:position pos:line="137" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="48">passwdp<pos:position pos:line="137" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="57">ntbuffer<pos:position pos:line="137" pos:column="65"/></name></expr></argument>)<pos:position pos:line="137" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="67"/></expr_stmt></block></then></if>
    <if pos:line="138" pos:column="5">if<condition pos:line="138" pos:column="7">(<expr><name pos:line="138" pos:column="8">result<pos:position pos:line="138" pos:column="14"/></name></expr>)<pos:position pos:line="138" pos:column="15"/></condition><then pos:line="138" pos:column="15">
      <block type="pseudo"><return pos:line="139" pos:column="7">return <expr><name pos:line="139" pos:column="14">result<pos:position pos:line="139" pos:column="20"/></name></expr>;<pos:position pos:line="139" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="141" pos:column="5">Curl_ntlm_core_lm_resp<pos:position pos:line="141" pos:column="27"/></name><argument_list pos:line="141" pos:column="27">(<argument><expr><name pos:line="141" pos:column="28">ntbuffer<pos:position pos:line="141" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="38">md5sum<pos:position pos:line="141" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="46">ntresp<pos:position pos:line="141" pos:column="52"/></name></expr></argument>)<pos:position pos:line="141" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="54"/></expr_stmt>

    <comment type="block" pos:line="143" pos:column="5">/* End of NTLM2 Session code */</comment>

  }<pos:position pos:line="145" pos:column="4"/></block></then></if></elseif>
  <else pos:line="146" pos:column="3">else
<cpp:endif pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">endif<pos:position pos:line="147" pos:column="7"/></cpp:directive></cpp:endif>
  <block pos:line="148" pos:column="3">{

<cpp:ifdef pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">ifdef<pos:position pos:line="150" pos:column="7"/></cpp:directive> <name pos:line="150" pos:column="8">USE_NTRESPONSES<pos:position pos:line="150" pos:column="23"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="151" pos:column="5">unsigned<pos:position pos:line="151" pos:column="13"/></name> <name pos:line="151" pos:column="14">char<pos:position pos:line="151" pos:column="18"/></name></type> <name><name pos:line="151" pos:column="19">ntbuffer<pos:position pos:line="151" pos:column="27"/></name><index pos:line="151" pos:column="27">[<expr><literal type="number" pos:line="151" pos:column="28">0x18<pos:position pos:line="151" pos:column="32"/></literal></expr>]<pos:position pos:line="151" pos:column="33"/></index></name></decl>;<pos:position pos:line="151" pos:column="34"/></decl_stmt>
<cpp:endif pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">endif<pos:position pos:line="152" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="153" pos:column="5">unsigned<pos:position pos:line="153" pos:column="13"/></name> <name pos:line="153" pos:column="14">char<pos:position pos:line="153" pos:column="18"/></name></type> <name><name pos:line="153" pos:column="19">lmbuffer<pos:position pos:line="153" pos:column="27"/></name><index pos:line="153" pos:column="27">[<expr><literal type="number" pos:line="153" pos:column="28">0x18<pos:position pos:line="153" pos:column="32"/></literal></expr>]<pos:position pos:line="153" pos:column="33"/></index></name></decl>;<pos:position pos:line="153" pos:column="34"/></decl_stmt>

<cpp:ifdef pos:line="155" pos:column="1">#<cpp:directive pos:line="155" pos:column="2">ifdef<pos:position pos:line="155" pos:column="7"/></cpp:directive> <name pos:line="155" pos:column="8">USE_NTRESPONSES<pos:position pos:line="155" pos:column="23"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="156" pos:column="5">result<pos:position pos:line="156" pos:column="11"/></name> <operator pos:line="156" pos:column="12">=<pos:position pos:line="156" pos:column="13"/></operator> <call><name pos:line="156" pos:column="14">Curl_ntlm_core_mk_nt_hash<pos:position pos:line="156" pos:column="39"/></name><argument_list pos:line="156" pos:column="39">(<argument><expr><name pos:line="156" pos:column="40">data<pos:position pos:line="156" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="46">passwdp<pos:position pos:line="156" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="55">ntbuffer<pos:position pos:line="156" pos:column="63"/></name></expr></argument>)<pos:position pos:line="156" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="65"/></expr_stmt>
    <if pos:line="157" pos:column="5">if<condition pos:line="157" pos:column="7">(<expr><name pos:line="157" pos:column="8">result<pos:position pos:line="157" pos:column="14"/></name></expr>)<pos:position pos:line="157" pos:column="15"/></condition><then pos:line="157" pos:column="15">
      <block type="pseudo"><return pos:line="158" pos:column="7">return <expr><name pos:line="158" pos:column="14">result<pos:position pos:line="158" pos:column="20"/></name></expr>;<pos:position pos:line="158" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="160" pos:column="5">Curl_ntlm_core_lm_resp<pos:position pos:line="160" pos:column="27"/></name><argument_list pos:line="160" pos:column="27">(<argument><expr><name pos:line="160" pos:column="28">ntbuffer<pos:position pos:line="160" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="160" pos:column="38">&amp;<pos:position pos:line="160" pos:column="43"/></operator><name><name pos:line="160" pos:column="39">ntlm<pos:position pos:line="160" pos:column="43"/></name><operator pos:line="160" pos:column="43">-&gt;<pos:position pos:line="160" pos:column="48"/></operator><name pos:line="160" pos:column="45">nonce<pos:position pos:line="160" pos:column="50"/></name><index pos:line="160" pos:column="50">[<expr><literal type="number" pos:line="160" pos:column="51">0<pos:position pos:line="160" pos:column="52"/></literal></expr>]<pos:position pos:line="160" pos:column="53"/></index></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="55">ntresp<pos:position pos:line="160" pos:column="61"/></name></expr></argument>)<pos:position pos:line="160" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="63"/></expr_stmt>
<cpp:endif pos:line="161" pos:column="1">#<cpp:directive pos:line="161" pos:column="2">endif<pos:position pos:line="161" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="163" pos:column="5">result<pos:position pos:line="163" pos:column="11"/></name> <operator pos:line="163" pos:column="12">=<pos:position pos:line="163" pos:column="13"/></operator> <call><name pos:line="163" pos:column="14">Curl_ntlm_core_mk_lm_hash<pos:position pos:line="163" pos:column="39"/></name><argument_list pos:line="163" pos:column="39">(<argument><expr><name pos:line="163" pos:column="40">data<pos:position pos:line="163" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="46">passwdp<pos:position pos:line="163" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="55">lmbuffer<pos:position pos:line="163" pos:column="63"/></name></expr></argument>)<pos:position pos:line="163" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="65"/></expr_stmt>
    <if pos:line="164" pos:column="5">if<condition pos:line="164" pos:column="7">(<expr><name pos:line="164" pos:column="8">result<pos:position pos:line="164" pos:column="14"/></name></expr>)<pos:position pos:line="164" pos:column="15"/></condition><then pos:line="164" pos:column="15">
      <block type="pseudo"><return pos:line="165" pos:column="7">return <expr><name pos:line="165" pos:column="14">result<pos:position pos:line="165" pos:column="20"/></name></expr>;<pos:position pos:line="165" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="167" pos:column="5">Curl_ntlm_core_lm_resp<pos:position pos:line="167" pos:column="27"/></name><argument_list pos:line="167" pos:column="27">(<argument><expr><name pos:line="167" pos:column="28">lmbuffer<pos:position pos:line="167" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="167" pos:column="38">&amp;<pos:position pos:line="167" pos:column="43"/></operator><name><name pos:line="167" pos:column="39">ntlm<pos:position pos:line="167" pos:column="43"/></name><operator pos:line="167" pos:column="43">-&gt;<pos:position pos:line="167" pos:column="48"/></operator><name pos:line="167" pos:column="45">nonce<pos:position pos:line="167" pos:column="50"/></name><index pos:line="167" pos:column="50">[<expr><literal type="number" pos:line="167" pos:column="51">0<pos:position pos:line="167" pos:column="52"/></literal></expr>]<pos:position pos:line="167" pos:column="53"/></index></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="55">lmresp<pos:position pos:line="167" pos:column="61"/></name></expr></argument>)<pos:position pos:line="167" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="63"/></expr_stmt>

    <comment type="block" pos:line="169" pos:column="5">/* A safer but less compatible alternative is:
     *   Curl_ntlm_core_lm_resp(ntbuffer, &amp;ntlm-&gt;nonce[0], lmresp);
     * See https://davenport.sourceforge.io/ntlm.html#ntlmVersion2 */</comment>
  }<pos:position pos:line="172" pos:column="4"/></block></else></if>

  <if pos:line="174" pos:column="3">if<condition pos:line="174" pos:column="5">(<expr><name pos:line="174" pos:column="6">unicode<pos:position pos:line="174" pos:column="13"/></name></expr>)<pos:position pos:line="174" pos:column="14"/></condition><then pos:line="174" pos:column="14"> <block pos:line="174" pos:column="15">{
    <expr_stmt><expr><name pos:line="175" pos:column="5">domlen<pos:position pos:line="175" pos:column="11"/></name> <operator pos:line="175" pos:column="12">=<pos:position pos:line="175" pos:column="13"/></operator> <name pos:line="175" pos:column="14">domlen<pos:position pos:line="175" pos:column="20"/></name> <operator pos:line="175" pos:column="21">*<pos:position pos:line="175" pos:column="22"/></operator> <literal type="number" pos:line="175" pos:column="23">2<pos:position pos:line="175" pos:column="24"/></literal></expr>;<pos:position pos:line="175" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="176" pos:column="5">userlen<pos:position pos:line="176" pos:column="12"/></name> <operator pos:line="176" pos:column="13">=<pos:position pos:line="176" pos:column="14"/></operator> <name pos:line="176" pos:column="15">userlen<pos:position pos:line="176" pos:column="22"/></name> <operator pos:line="176" pos:column="23">*<pos:position pos:line="176" pos:column="24"/></operator> <literal type="number" pos:line="176" pos:column="25">2<pos:position pos:line="176" pos:column="26"/></literal></expr>;<pos:position pos:line="176" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="177" pos:column="5">hostlen<pos:position pos:line="177" pos:column="12"/></name> <operator pos:line="177" pos:column="13">=<pos:position pos:line="177" pos:column="14"/></operator> <name pos:line="177" pos:column="15">hostlen<pos:position pos:line="177" pos:column="22"/></name> <operator pos:line="177" pos:column="23">*<pos:position pos:line="177" pos:column="24"/></operator> <literal type="number" pos:line="177" pos:column="25">2<pos:position pos:line="177" pos:column="26"/></literal></expr>;<pos:position pos:line="177" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="178" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="180" pos:column="3">lmrespoff<pos:position pos:line="180" pos:column="12"/></name> <operator pos:line="180" pos:column="13">=<pos:position pos:line="180" pos:column="14"/></operator> <literal type="number" pos:line="180" pos:column="15">64<pos:position pos:line="180" pos:column="17"/></literal></expr>;<pos:position pos:line="180" pos:column="18"/></expr_stmt> <comment type="block" pos:line="180" pos:column="19">/* size of the message header */</comment>
<cpp:ifdef pos:line="181" pos:column="1">#<cpp:directive pos:line="181" pos:column="2">ifdef<pos:position pos:line="181" pos:column="7"/></cpp:directive> <name pos:line="181" pos:column="8">USE_NTRESPONSES<pos:position pos:line="181" pos:column="23"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="182" pos:column="3">ntrespoff<pos:position pos:line="182" pos:column="12"/></name> <operator pos:line="182" pos:column="13">=<pos:position pos:line="182" pos:column="14"/></operator> <name pos:line="182" pos:column="15">lmrespoff<pos:position pos:line="182" pos:column="24"/></name> <operator pos:line="182" pos:column="25">+<pos:position pos:line="182" pos:column="26"/></operator> <literal type="number" pos:line="182" pos:column="27">0x18<pos:position pos:line="182" pos:column="31"/></literal></expr>;<pos:position pos:line="182" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name pos:line="183" pos:column="3">domoff<pos:position pos:line="183" pos:column="9"/></name> <operator pos:line="183" pos:column="10">=<pos:position pos:line="183" pos:column="11"/></operator> <name pos:line="183" pos:column="12">ntrespoff<pos:position pos:line="183" pos:column="21"/></name> <operator pos:line="183" pos:column="22">+<pos:position pos:line="183" pos:column="23"/></operator> <name pos:line="183" pos:column="24">ntresplen<pos:position pos:line="183" pos:column="33"/></name></expr>;<pos:position pos:line="183" pos:column="34"/></expr_stmt>
<cpp:else pos:line="184" pos:column="1">#<cpp:directive pos:line="184" pos:column="2">else<pos:position pos:line="184" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="185" pos:column="3">domoff<pos:position pos:line="185" pos:column="9"/></name> <operator pos:line="185" pos:column="10">=<pos:position pos:line="185" pos:column="11"/></operator> <name pos:line="185" pos:column="12">lmrespoff<pos:position pos:line="185" pos:column="21"/></name> <operator pos:line="185" pos:column="22">+<pos:position pos:line="185" pos:column="23"/></operator> <literal type="number" pos:line="185" pos:column="24">0x18<pos:position pos:line="185" pos:column="28"/></literal></expr>;<pos:position pos:line="185" pos:column="29"/></expr_stmt>
<cpp:endif pos:line="186" pos:column="1">#<cpp:directive pos:line="186" pos:column="2">endif<pos:position pos:line="186" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><name pos:line="187" pos:column="3">useroff<pos:position pos:line="187" pos:column="10"/></name> <operator pos:line="187" pos:column="11">=<pos:position pos:line="187" pos:column="12"/></operator> <name pos:line="187" pos:column="13">domoff<pos:position pos:line="187" pos:column="19"/></name> <operator pos:line="187" pos:column="20">+<pos:position pos:line="187" pos:column="21"/></operator> <name pos:line="187" pos:column="22">domlen<pos:position pos:line="187" pos:column="28"/></name></expr>;<pos:position pos:line="187" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="188" pos:column="3">hostoff<pos:position pos:line="188" pos:column="10"/></name> <operator pos:line="188" pos:column="11">=<pos:position pos:line="188" pos:column="12"/></operator> <name pos:line="188" pos:column="13">useroff<pos:position pos:line="188" pos:column="20"/></name> <operator pos:line="188" pos:column="21">+<pos:position pos:line="188" pos:column="22"/></operator> <name pos:line="188" pos:column="23">userlen<pos:position pos:line="188" pos:column="30"/></name></expr>;<pos:position pos:line="188" pos:column="31"/></expr_stmt>

  <comment type="block" pos:line="190" pos:column="3">/* Create the big type-3 message binary blob */</comment>
  <expr_stmt><expr><name pos:line="191" pos:column="3">size<pos:position pos:line="191" pos:column="7"/></name> <operator pos:line="191" pos:column="8">=<pos:position pos:line="191" pos:column="9"/></operator> <call><name pos:line="191" pos:column="10">snprintf<pos:position pos:line="191" pos:column="18"/></name><argument_list pos:line="191" pos:column="18">(<argument><expr><operator pos:line="191" pos:column="19">(<pos:position pos:line="191" pos:column="20"/></operator><name pos:line="191" pos:column="20">char<pos:position pos:line="191" pos:column="24"/></name> <operator pos:line="191" pos:column="25">*<pos:position pos:line="191" pos:column="26"/></operator><operator pos:line="191" pos:column="26">)<pos:position pos:line="191" pos:column="27"/></operator><name pos:line="191" pos:column="27">ntlmbuf<pos:position pos:line="191" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="36">NTLM_BUFSIZE<pos:position pos:line="191" pos:column="48"/></name></expr></argument>,
                  <argument><expr><name pos:line="192" pos:column="19">NTLMSSP_SIGNATURE<pos:position pos:line="192" pos:column="36"/></name> <literal type="string" pos:line="192" pos:column="37">"%c"<pos:position pos:line="192" pos:column="41"/></literal>
                  <literal type="string" pos:line="193" pos:column="19">"\x03%c%c%c"<pos:position pos:line="193" pos:column="31"/></literal>  <comment type="block" pos:line="193" pos:column="33">/* 32-bit type = 3 */</comment>

                  <literal type="string" pos:line="195" pos:column="19">"%c%c"<pos:position pos:line="195" pos:column="25"/></literal>  <comment type="block" pos:line="195" pos:column="27">/* LanManager length */</comment>
                  <literal type="string" pos:line="196" pos:column="19">"%c%c"<pos:position pos:line="196" pos:column="25"/></literal>  <comment type="block" pos:line="196" pos:column="27">/* LanManager allocated space */</comment>
                  <literal type="string" pos:line="197" pos:column="19">"%c%c"<pos:position pos:line="197" pos:column="25"/></literal>  <comment type="block" pos:line="197" pos:column="27">/* LanManager offset */</comment>
                  <literal type="string" pos:line="198" pos:column="19">"%c%c"<pos:position pos:line="198" pos:column="25"/></literal>  <comment type="block" pos:line="198" pos:column="27">/* 2 zeroes */</comment>

                  <literal type="string" pos:line="200" pos:column="19">"%c%c"<pos:position pos:line="200" pos:column="25"/></literal>  <comment type="block" pos:line="200" pos:column="27">/* NT-response length */</comment>
                  <literal type="string" pos:line="201" pos:column="19">"%c%c"<pos:position pos:line="201" pos:column="25"/></literal>  <comment type="block" pos:line="201" pos:column="27">/* NT-response allocated space */</comment>
                  <literal type="string" pos:line="202" pos:column="19">"%c%c"<pos:position pos:line="202" pos:column="25"/></literal>  <comment type="block" pos:line="202" pos:column="27">/* NT-response offset */</comment>
                  <literal type="string" pos:line="203" pos:column="19">"%c%c"<pos:position pos:line="203" pos:column="25"/></literal>  <comment type="block" pos:line="203" pos:column="27">/* 2 zeroes */</comment>

                  <literal type="string" pos:line="205" pos:column="19">"%c%c"<pos:position pos:line="205" pos:column="25"/></literal>  <comment type="block" pos:line="205" pos:column="27">/* domain length */</comment>
                  <literal type="string" pos:line="206" pos:column="19">"%c%c"<pos:position pos:line="206" pos:column="25"/></literal>  <comment type="block" pos:line="206" pos:column="27">/* domain allocated space */</comment>
                  <literal type="string" pos:line="207" pos:column="19">"%c%c"<pos:position pos:line="207" pos:column="25"/></literal>  <comment type="block" pos:line="207" pos:column="27">/* domain name offset */</comment>
                  <literal type="string" pos:line="208" pos:column="19">"%c%c"<pos:position pos:line="208" pos:column="25"/></literal>  <comment type="block" pos:line="208" pos:column="27">/* 2 zeroes */</comment>

                  <literal type="string" pos:line="210" pos:column="19">"%c%c"<pos:position pos:line="210" pos:column="25"/></literal>  <comment type="block" pos:line="210" pos:column="27">/* user length */</comment>
                  <literal type="string" pos:line="211" pos:column="19">"%c%c"<pos:position pos:line="211" pos:column="25"/></literal>  <comment type="block" pos:line="211" pos:column="27">/* user allocated space */</comment>
                  <literal type="string" pos:line="212" pos:column="19">"%c%c"<pos:position pos:line="212" pos:column="25"/></literal>  <comment type="block" pos:line="212" pos:column="27">/* user offset */</comment>
                  <literal type="string" pos:line="213" pos:column="19">"%c%c"<pos:position pos:line="213" pos:column="25"/></literal>  <comment type="block" pos:line="213" pos:column="27">/* 2 zeroes */</comment>

                  <literal type="string" pos:line="215" pos:column="19">"%c%c"<pos:position pos:line="215" pos:column="25"/></literal>  <comment type="block" pos:line="215" pos:column="27">/* host length */</comment>
                  <literal type="string" pos:line="216" pos:column="19">"%c%c"<pos:position pos:line="216" pos:column="25"/></literal>  <comment type="block" pos:line="216" pos:column="27">/* host allocated space */</comment>
                  <literal type="string" pos:line="217" pos:column="19">"%c%c"<pos:position pos:line="217" pos:column="25"/></literal>  <comment type="block" pos:line="217" pos:column="27">/* host offset */</comment>
                  <literal type="string" pos:line="218" pos:column="19">"%c%c"<pos:position pos:line="218" pos:column="25"/></literal>  <comment type="block" pos:line="218" pos:column="27">/* 2 zeroes */</comment>

                  <literal type="string" pos:line="220" pos:column="19">"%c%c"<pos:position pos:line="220" pos:column="25"/></literal>  <comment type="block" pos:line="220" pos:column="27">/* session key length (unknown purpose) */</comment>
                  <literal type="string" pos:line="221" pos:column="19">"%c%c"<pos:position pos:line="221" pos:column="25"/></literal>  <comment type="block" pos:line="221" pos:column="27">/* session key allocated space (unknown purpose) */</comment>
                  <literal type="string" pos:line="222" pos:column="19">"%c%c"<pos:position pos:line="222" pos:column="25"/></literal>  <comment type="block" pos:line="222" pos:column="27">/* session key offset (unknown purpose) */</comment>
                  <literal type="string" pos:line="223" pos:column="19">"%c%c"<pos:position pos:line="223" pos:column="25"/></literal>  <comment type="block" pos:line="223" pos:column="27">/* 2 zeroes */</comment>

                  <literal type="string" pos:line="225" pos:column="19">"%c%c%c%c"<pos:position pos:line="225" pos:column="29"/></literal></expr></argument>,  <comment type="block" pos:line="225" pos:column="32">/* flags */</comment>

                  <comment type="block" pos:line="227" pos:column="19">/* domain string */</comment>
                  <comment type="block" pos:line="228" pos:column="19">/* user string */</comment>
                  <comment type="block" pos:line="229" pos:column="19">/* host string */</comment>
                  <comment type="block" pos:line="230" pos:column="19">/* LanManager response */</comment>
                  <comment type="block" pos:line="231" pos:column="19">/* NT response */</comment>

                  <argument><expr><literal type="number" pos:line="233" pos:column="19">0<pos:position pos:line="233" pos:column="20"/></literal></expr></argument>,                <comment type="block" pos:line="233" pos:column="37">/* zero termination */</comment>
                  <argument><expr><literal type="number" pos:line="234" pos:column="19">0<pos:position pos:line="234" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="234" pos:column="22">0<pos:position pos:line="234" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="234" pos:column="25">0<pos:position pos:line="234" pos:column="26"/></literal></expr></argument>,          <comment type="block" pos:line="234" pos:column="37">/* type-3 long, the 24 upper bits */</comment>

                  <argument><expr><call><name pos:line="236" pos:column="19">SHORTPAIR<pos:position pos:line="236" pos:column="28"/></name><argument_list pos:line="236" pos:column="28">(<argument><expr><literal type="number" pos:line="236" pos:column="29">0x18<pos:position pos:line="236" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="236" pos:column="34"/></argument_list></call></expr></argument>,  <comment type="block" pos:line="236" pos:column="37">/* LanManager response length, twice */</comment>
                  <argument><expr><call><name pos:line="237" pos:column="19">SHORTPAIR<pos:position pos:line="237" pos:column="28"/></name><argument_list pos:line="237" pos:column="28">(<argument><expr><literal type="number" pos:line="237" pos:column="29">0x18<pos:position pos:line="237" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="34"/></argument_list></call></expr></argument>,
                  <argument><expr><call><name pos:line="238" pos:column="19">SHORTPAIR<pos:position pos:line="238" pos:column="28"/></name><argument_list pos:line="238" pos:column="28">(<argument><expr><name pos:line="238" pos:column="29">lmrespoff<pos:position pos:line="238" pos:column="38"/></name></expr></argument>)<pos:position pos:line="238" pos:column="39"/></argument_list></call></expr></argument>,
                  <argument><expr><literal type="number" pos:line="239" pos:column="19">0x0<pos:position pos:line="239" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="239" pos:column="24">0x0<pos:position pos:line="239" pos:column="27"/></literal></expr></argument>,

<cpp:ifdef pos:line="241" pos:column="1">#<cpp:directive pos:line="241" pos:column="2">ifdef<pos:position pos:line="241" pos:column="7"/></cpp:directive> <name pos:line="241" pos:column="8">USE_NTRESPONSES<pos:position pos:line="241" pos:column="23"/></name></cpp:ifdef>
                  <argument><expr><call><name pos:line="242" pos:column="19">SHORTPAIR<pos:position pos:line="242" pos:column="28"/></name><argument_list pos:line="242" pos:column="28">(<argument><expr><name pos:line="242" pos:column="29">ntresplen<pos:position pos:line="242" pos:column="38"/></name></expr></argument>)<pos:position pos:line="242" pos:column="39"/></argument_list></call></expr></argument>,  <comment type="block" pos:line="242" pos:column="42">/* NT-response length, twice */</comment>
                  <argument><expr><call><name pos:line="243" pos:column="19">SHORTPAIR<pos:position pos:line="243" pos:column="28"/></name><argument_list pos:line="243" pos:column="28">(<argument><expr><name pos:line="243" pos:column="29">ntresplen<pos:position pos:line="243" pos:column="38"/></name></expr></argument>)<pos:position pos:line="243" pos:column="39"/></argument_list></call></expr></argument>,
                  <argument><expr><call><name pos:line="244" pos:column="19">SHORTPAIR<pos:position pos:line="244" pos:column="28"/></name><argument_list pos:line="244" pos:column="28">(<argument><expr><name pos:line="244" pos:column="29">ntrespoff<pos:position pos:line="244" pos:column="38"/></name></expr></argument>)<pos:position pos:line="244" pos:column="39"/></argument_list></call></expr></argument>,
                  <argument><expr><literal type="number" pos:line="245" pos:column="19">0x0<pos:position pos:line="245" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="245" pos:column="24">0x0<pos:position pos:line="245" pos:column="27"/></literal></expr></argument>,
<cpp:else pos:line="246" pos:column="1">#<cpp:directive pos:line="246" pos:column="2">else<pos:position pos:line="246" pos:column="6"/></cpp:directive></cpp:else>
                  <argument><expr><literal type="number" pos:line="247" pos:column="19">0x0<pos:position pos:line="247" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="247" pos:column="24">0x0<pos:position pos:line="247" pos:column="27"/></literal></expr></argument>,
                  <argument><expr><literal type="number" pos:line="248" pos:column="19">0x0<pos:position pos:line="248" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="248" pos:column="24">0x0<pos:position pos:line="248" pos:column="27"/></literal></expr></argument>,
                  <argument><expr><literal type="number" pos:line="249" pos:column="19">0x0<pos:position pos:line="249" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="249" pos:column="24">0x0<pos:position pos:line="249" pos:column="27"/></literal></expr></argument>,
                  <argument><expr><literal type="number" pos:line="250" pos:column="19">0x0<pos:position pos:line="250" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="250" pos:column="24">0x0<pos:position pos:line="250" pos:column="27"/></literal></expr></argument>,
<cpp:endif pos:line="251" pos:column="1">#<cpp:directive pos:line="251" pos:column="2">endif<pos:position pos:line="251" pos:column="7"/></cpp:directive></cpp:endif>
                  <argument><expr><call><name pos:line="252" pos:column="19">SHORTPAIR<pos:position pos:line="252" pos:column="28"/></name><argument_list pos:line="252" pos:column="28">(<argument><expr><name pos:line="252" pos:column="29">domlen<pos:position pos:line="252" pos:column="35"/></name></expr></argument>)<pos:position pos:line="252" pos:column="36"/></argument_list></call></expr></argument>,
                  <argument><expr><call><name pos:line="253" pos:column="19">SHORTPAIR<pos:position pos:line="253" pos:column="28"/></name><argument_list pos:line="253" pos:column="28">(<argument><expr><name pos:line="253" pos:column="29">domlen<pos:position pos:line="253" pos:column="35"/></name></expr></argument>)<pos:position pos:line="253" pos:column="36"/></argument_list></call></expr></argument>,
                  <argument><expr><call><name pos:line="254" pos:column="19">SHORTPAIR<pos:position pos:line="254" pos:column="28"/></name><argument_list pos:line="254" pos:column="28">(<argument><expr><name pos:line="254" pos:column="29">domoff<pos:position pos:line="254" pos:column="35"/></name></expr></argument>)<pos:position pos:line="254" pos:column="36"/></argument_list></call></expr></argument>,
                  <argument><expr><literal type="number" pos:line="255" pos:column="19">0x0<pos:position pos:line="255" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="255" pos:column="24">0x0<pos:position pos:line="255" pos:column="27"/></literal></expr></argument>,

                  <argument><expr><call><name pos:line="257" pos:column="19">SHORTPAIR<pos:position pos:line="257" pos:column="28"/></name><argument_list pos:line="257" pos:column="28">(<argument><expr><name pos:line="257" pos:column="29">userlen<pos:position pos:line="257" pos:column="36"/></name></expr></argument>)<pos:position pos:line="257" pos:column="37"/></argument_list></call></expr></argument>,
                  <argument><expr><call><name pos:line="258" pos:column="19">SHORTPAIR<pos:position pos:line="258" pos:column="28"/></name><argument_list pos:line="258" pos:column="28">(<argument><expr><name pos:line="258" pos:column="29">userlen<pos:position pos:line="258" pos:column="36"/></name></expr></argument>)<pos:position pos:line="258" pos:column="37"/></argument_list></call></expr></argument>,
                  <argument><expr><call><name pos:line="259" pos:column="19">SHORTPAIR<pos:position pos:line="259" pos:column="28"/></name><argument_list pos:line="259" pos:column="28">(<argument><expr><name pos:line="259" pos:column="29">useroff<pos:position pos:line="259" pos:column="36"/></name></expr></argument>)<pos:position pos:line="259" pos:column="37"/></argument_list></call></expr></argument>,
                  <argument><expr><literal type="number" pos:line="260" pos:column="19">0x0<pos:position pos:line="260" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="260" pos:column="24">0x0<pos:position pos:line="260" pos:column="27"/></literal></expr></argument>,

                  <argument><expr><call><name pos:line="262" pos:column="19">SHORTPAIR<pos:position pos:line="262" pos:column="28"/></name><argument_list pos:line="262" pos:column="28">(<argument><expr><name pos:line="262" pos:column="29">hostlen<pos:position pos:line="262" pos:column="36"/></name></expr></argument>)<pos:position pos:line="262" pos:column="37"/></argument_list></call></expr></argument>,
                  <argument><expr><call><name pos:line="263" pos:column="19">SHORTPAIR<pos:position pos:line="263" pos:column="28"/></name><argument_list pos:line="263" pos:column="28">(<argument><expr><name pos:line="263" pos:column="29">hostlen<pos:position pos:line="263" pos:column="36"/></name></expr></argument>)<pos:position pos:line="263" pos:column="37"/></argument_list></call></expr></argument>,
                  <argument><expr><call><name pos:line="264" pos:column="19">SHORTPAIR<pos:position pos:line="264" pos:column="28"/></name><argument_list pos:line="264" pos:column="28">(<argument><expr><name pos:line="264" pos:column="29">hostoff<pos:position pos:line="264" pos:column="36"/></name></expr></argument>)<pos:position pos:line="264" pos:column="37"/></argument_list></call></expr></argument>,
                  <argument><expr><literal type="number" pos:line="265" pos:column="19">0x0<pos:position pos:line="265" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="265" pos:column="24">0x0<pos:position pos:line="265" pos:column="27"/></literal></expr></argument>,

                  <argument><expr><literal type="number" pos:line="267" pos:column="19">0x0<pos:position pos:line="267" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="267" pos:column="24">0x0<pos:position pos:line="267" pos:column="27"/></literal></expr></argument>,
                  <argument><expr><literal type="number" pos:line="268" pos:column="19">0x0<pos:position pos:line="268" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="268" pos:column="24">0x0<pos:position pos:line="268" pos:column="27"/></literal></expr></argument>,
                  <argument><expr><literal type="number" pos:line="269" pos:column="19">0x0<pos:position pos:line="269" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="269" pos:column="24">0x0<pos:position pos:line="269" pos:column="27"/></literal></expr></argument>,
                  <argument><expr><literal type="number" pos:line="270" pos:column="19">0x0<pos:position pos:line="270" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="270" pos:column="24">0x0<pos:position pos:line="270" pos:column="27"/></literal></expr></argument>,

                  <argument><expr><call><name pos:line="272" pos:column="19">LONGQUARTET<pos:position pos:line="272" pos:column="30"/></name><argument_list pos:line="272" pos:column="30">(<argument><expr><name><name pos:line="272" pos:column="31">ntlm<pos:position pos:line="272" pos:column="35"/></name><operator pos:line="272" pos:column="35">-&gt;<pos:position pos:line="272" pos:column="40"/></operator><name pos:line="272" pos:column="37">flags<pos:position pos:line="272" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="272" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="272" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="274" pos:column="3">DEBUGASSERT<pos:position pos:line="274" pos:column="14"/></name><argument_list pos:line="274" pos:column="14">(<argument><expr><name pos:line="274" pos:column="15">size<pos:position pos:line="274" pos:column="19"/></name> <operator pos:line="274" pos:column="20">==<pos:position pos:line="274" pos:column="22"/></operator> <literal type="number" pos:line="274" pos:column="23">64<pos:position pos:line="274" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="274" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="275" pos:column="3">DEBUGASSERT<pos:position pos:line="275" pos:column="14"/></name><argument_list pos:line="275" pos:column="14">(<argument><expr><name pos:line="275" pos:column="15">size<pos:position pos:line="275" pos:column="19"/></name> <operator pos:line="275" pos:column="20">==<pos:position pos:line="275" pos:column="22"/></operator> <operator pos:line="275" pos:column="23">(<pos:position pos:line="275" pos:column="24"/></operator><name pos:line="275" pos:column="24">size_t<pos:position pos:line="275" pos:column="30"/></name><operator pos:line="275" pos:column="30">)<pos:position pos:line="275" pos:column="31"/></operator><name pos:line="275" pos:column="31">lmrespoff<pos:position pos:line="275" pos:column="40"/></name></expr></argument>)<pos:position pos:line="275" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="42"/></expr_stmt>

  <comment type="block" pos:line="277" pos:column="3">/* We append the binary hashes */</comment>
  <if pos:line="278" pos:column="3">if<condition pos:line="278" pos:column="5">(<expr><name pos:line="278" pos:column="6">size<pos:position pos:line="278" pos:column="10"/></name> <operator pos:line="278" pos:column="11">&lt;<pos:position pos:line="278" pos:column="15"/></operator> <operator pos:line="278" pos:column="13">(<pos:position pos:line="278" pos:column="14"/></operator><name pos:line="278" pos:column="14">NTLM_BUFSIZE<pos:position pos:line="278" pos:column="26"/></name> <operator pos:line="278" pos:column="27">-<pos:position pos:line="278" pos:column="28"/></operator> <literal type="number" pos:line="278" pos:column="29">0x18<pos:position pos:line="278" pos:column="33"/></literal><operator pos:line="278" pos:column="33">)<pos:position pos:line="278" pos:column="34"/></operator></expr>)<pos:position pos:line="278" pos:column="35"/></condition><then pos:line="278" pos:column="35"> <block pos:line="278" pos:column="36">{
    <expr_stmt><expr><call><name pos:line="279" pos:column="5">memcpy<pos:position pos:line="279" pos:column="11"/></name><argument_list pos:line="279" pos:column="11">(<argument><expr><operator pos:line="279" pos:column="12">&amp;<pos:position pos:line="279" pos:column="17"/></operator><name><name pos:line="279" pos:column="13">ntlmbuf<pos:position pos:line="279" pos:column="20"/></name><index pos:line="279" pos:column="20">[<expr><name pos:line="279" pos:column="21">size<pos:position pos:line="279" pos:column="25"/></name></expr>]<pos:position pos:line="279" pos:column="26"/></index></name></expr></argument>, <argument><expr><name pos:line="279" pos:column="28">lmresp<pos:position pos:line="279" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="279" pos:column="36">0x18<pos:position pos:line="279" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="279" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="280" pos:column="5">size<pos:position pos:line="280" pos:column="9"/></name> <operator pos:line="280" pos:column="10">+=<pos:position pos:line="280" pos:column="12"/></operator> <literal type="number" pos:line="280" pos:column="13">0x18<pos:position pos:line="280" pos:column="17"/></literal></expr>;<pos:position pos:line="280" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="281" pos:column="4"/></block></then></if>

  <macro><name pos:line="283" pos:column="3">DEBUG_OUT<pos:position pos:line="283" pos:column="12"/></name><argument_list pos:line="283" pos:column="12">(<argument pos:line="283" pos:column="13">{
    fprintf(stderr, <literal type="string" pos:line="284" pos:column="21">"**** TYPE3 header lmresp="<pos:position pos:line="284" pos:column="48"/></literal>);
    ntlm_print_hex(stderr, (char *)&amp;ntlmbuf[lmrespoff], <literal type="number" pos:line="285" pos:column="57">0x18<pos:position pos:line="285" pos:column="61"/></literal>);
  }<pos:position pos:line="286" pos:column="4"/></argument>)<pos:position pos:line="286" pos:column="5"/></argument_list></macro><empty_stmt pos:line="286" pos:column="5">;<pos:position pos:line="286" pos:column="6"/></empty_stmt>

<cpp:ifdef pos:line="288" pos:column="1">#<cpp:directive pos:line="288" pos:column="2">ifdef<pos:position pos:line="288" pos:column="7"/></cpp:directive> <name pos:line="288" pos:column="8">USE_NTRESPONSES<pos:position pos:line="288" pos:column="23"/></name></cpp:ifdef>
  <if pos:line="289" pos:column="3">if<condition pos:line="289" pos:column="5">(<expr><name pos:line="289" pos:column="6">size<pos:position pos:line="289" pos:column="10"/></name> <operator pos:line="289" pos:column="11">&lt;<pos:position pos:line="289" pos:column="15"/></operator> <operator pos:line="289" pos:column="13">(<pos:position pos:line="289" pos:column="14"/></operator><name pos:line="289" pos:column="14">NTLM_BUFSIZE<pos:position pos:line="289" pos:column="26"/></name> <operator pos:line="289" pos:column="27">-<pos:position pos:line="289" pos:column="28"/></operator> <name pos:line="289" pos:column="29">ntresplen<pos:position pos:line="289" pos:column="38"/></name><operator pos:line="289" pos:column="38">)<pos:position pos:line="289" pos:column="39"/></operator></expr>)<pos:position pos:line="289" pos:column="40"/></condition><then pos:line="289" pos:column="40"> <block pos:line="289" pos:column="41">{
    <expr_stmt><expr><call><name pos:line="290" pos:column="5">DEBUGASSERT<pos:position pos:line="290" pos:column="16"/></name><argument_list pos:line="290" pos:column="16">(<argument><expr><name pos:line="290" pos:column="17">size<pos:position pos:line="290" pos:column="21"/></name> <operator pos:line="290" pos:column="22">==<pos:position pos:line="290" pos:column="24"/></operator> <operator pos:line="290" pos:column="25">(<pos:position pos:line="290" pos:column="26"/></operator><name pos:line="290" pos:column="26">size_t<pos:position pos:line="290" pos:column="32"/></name><operator pos:line="290" pos:column="32">)<pos:position pos:line="290" pos:column="33"/></operator><name pos:line="290" pos:column="33">ntrespoff<pos:position pos:line="290" pos:column="42"/></name></expr></argument>)<pos:position pos:line="290" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="291" pos:column="5">memcpy<pos:position pos:line="291" pos:column="11"/></name><argument_list pos:line="291" pos:column="11">(<argument><expr><operator pos:line="291" pos:column="12">&amp;<pos:position pos:line="291" pos:column="17"/></operator><name><name pos:line="291" pos:column="13">ntlmbuf<pos:position pos:line="291" pos:column="20"/></name><index pos:line="291" pos:column="20">[<expr><name pos:line="291" pos:column="21">size<pos:position pos:line="291" pos:column="25"/></name></expr>]<pos:position pos:line="291" pos:column="26"/></index></name></expr></argument>, <argument><expr><name pos:line="291" pos:column="28">ptr_ntresp<pos:position pos:line="291" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="291" pos:column="40">ntresplen<pos:position pos:line="291" pos:column="49"/></name></expr></argument>)<pos:position pos:line="291" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="292" pos:column="5">size<pos:position pos:line="292" pos:column="9"/></name> <operator pos:line="292" pos:column="10">+=<pos:position pos:line="292" pos:column="12"/></operator> <name pos:line="292" pos:column="13">ntresplen<pos:position pos:line="292" pos:column="22"/></name></expr>;<pos:position pos:line="292" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="293" pos:column="4"/></block></then></if>

  <macro><name pos:line="295" pos:column="3">DEBUG_OUT<pos:position pos:line="295" pos:column="12"/></name><argument_list pos:line="295" pos:column="12">(<argument pos:line="295" pos:column="13">{
    fprintf(stderr, <literal type="string" pos:line="296" pos:column="21">"\n   ntresp="<pos:position pos:line="296" pos:column="35"/></literal>);
    ntlm_print_hex(stderr, (char *)&amp;ntlmbuf[ntrespoff], ntresplen);
  }<pos:position pos:line="298" pos:column="4"/></argument>)<pos:position pos:line="298" pos:column="5"/></argument_list></macro><empty_stmt pos:line="298" pos:column="5">;<pos:position pos:line="298" pos:column="6"/></empty_stmt>

  <expr_stmt><expr><call><name pos:line="300" pos:column="3">free<pos:position pos:line="300" pos:column="7"/></name><argument_list pos:line="300" pos:column="7">(<argument><expr><name pos:line="300" pos:column="8">ntlmv2resp<pos:position pos:line="300" pos:column="18"/></name></expr></argument>)<pos:position pos:line="300" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="20"/></expr_stmt><comment type="block" pos:line="300" pos:column="20">/* Free the dynamic buffer allocated for NTLMv2 */</comment>

<cpp:endif pos:line="302" pos:column="1">#<cpp:directive pos:line="302" pos:column="2">endif<pos:position pos:line="302" pos:column="7"/></cpp:directive></cpp:endif>

  <macro><name pos:line="304" pos:column="3">DEBUG_OUT<pos:position pos:line="304" pos:column="12"/></name><argument_list pos:line="304" pos:column="12">(<argument pos:line="304" pos:column="13">{
    fprintf(stderr, <literal type="string" pos:line="305" pos:column="21">"\n   flags=0x%02.2x%02.2x%02.2x%02.2x 0x%08.8x "<pos:position pos:line="305" pos:column="70"/></literal>,
            LONGQUARTET(ntlm-&gt;flags), ntlm-&gt;flags);
    ntlm_print_flags(stderr, ntlm-&gt;flags);
    fprintf(stderr, <literal type="string" pos:line="308" pos:column="21">"\n****\n"<pos:position pos:line="308" pos:column="31"/></literal>);
  }<pos:position pos:line="309" pos:column="4"/></argument>)<pos:position pos:line="309" pos:column="5"/></argument_list></macro><empty_stmt pos:line="309" pos:column="5">;<pos:position pos:line="309" pos:column="6"/></empty_stmt>

  <comment type="block" pos:line="311" pos:column="3">/* Make sure that the domain, user and host strings fit in the
     buffer before we copy them there. */</comment>
  <if pos:line="313" pos:column="3">if<condition pos:line="313" pos:column="5">(<expr><name pos:line="313" pos:column="6">size<pos:position pos:line="313" pos:column="10"/></name> <operator pos:line="313" pos:column="11">+<pos:position pos:line="313" pos:column="12"/></operator> <name pos:line="313" pos:column="13">userlen<pos:position pos:line="313" pos:column="20"/></name> <operator pos:line="313" pos:column="21">+<pos:position pos:line="313" pos:column="22"/></operator> <name pos:line="313" pos:column="23">domlen<pos:position pos:line="313" pos:column="29"/></name> <operator pos:line="313" pos:column="30">+<pos:position pos:line="313" pos:column="31"/></operator> <name pos:line="313" pos:column="32">hostlen<pos:position pos:line="313" pos:column="39"/></name> <operator pos:line="313" pos:column="40">&gt;=<pos:position pos:line="313" pos:column="45"/></operator> <name pos:line="313" pos:column="43">NTLM_BUFSIZE<pos:position pos:line="313" pos:column="55"/></name></expr>)<pos:position pos:line="313" pos:column="56"/></condition><then pos:line="313" pos:column="56"> <block pos:line="313" pos:column="57">{
    <expr_stmt><expr><call><name pos:line="314" pos:column="5">failf<pos:position pos:line="314" pos:column="10"/></name><argument_list pos:line="314" pos:column="10">(<argument><expr><name pos:line="314" pos:column="11">data<pos:position pos:line="314" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="314" pos:column="17">"user + domain + host name too big"<pos:position pos:line="314" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="314" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="54"/></expr_stmt>
    <return pos:line="315" pos:column="5">return <expr><name pos:line="315" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="315" pos:column="31"/></name></expr>;<pos:position pos:line="315" pos:column="32"/></return>
  }<pos:position pos:line="316" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="318" pos:column="3">DEBUGASSERT<pos:position pos:line="318" pos:column="14"/></name><argument_list pos:line="318" pos:column="14">(<argument><expr><name pos:line="318" pos:column="15">size<pos:position pos:line="318" pos:column="19"/></name> <operator pos:line="318" pos:column="20">==<pos:position pos:line="318" pos:column="22"/></operator> <name pos:line="318" pos:column="23">domoff<pos:position pos:line="318" pos:column="29"/></name></expr></argument>)<pos:position pos:line="318" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="318" pos:column="31"/></expr_stmt>
  <if pos:line="319" pos:column="3">if<condition pos:line="319" pos:column="5">(<expr><name pos:line="319" pos:column="6">unicode<pos:position pos:line="319" pos:column="13"/></name></expr>)<pos:position pos:line="319" pos:column="14"/></condition><then pos:line="319" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="320" pos:column="5">unicodecpy<pos:position pos:line="320" pos:column="15"/></name><argument_list pos:line="320" pos:column="15">(<argument><expr><operator pos:line="320" pos:column="16">&amp;<pos:position pos:line="320" pos:column="21"/></operator><name><name pos:line="320" pos:column="17">ntlmbuf<pos:position pos:line="320" pos:column="24"/></name><index pos:line="320" pos:column="24">[<expr><name pos:line="320" pos:column="25">size<pos:position pos:line="320" pos:column="29"/></name></expr>]<pos:position pos:line="320" pos:column="30"/></index></name></expr></argument>, <argument><expr><name pos:line="320" pos:column="32">domain<pos:position pos:line="320" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="320" pos:column="40">domlen<pos:position pos:line="320" pos:column="46"/></name> <operator pos:line="320" pos:column="47">/<pos:position pos:line="320" pos:column="48"/></operator> <literal type="number" pos:line="320" pos:column="49">2<pos:position pos:line="320" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="320" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="52"/></expr_stmt></block></then>
  <else pos:line="321" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="322" pos:column="5">memcpy<pos:position pos:line="322" pos:column="11"/></name><argument_list pos:line="322" pos:column="11">(<argument><expr><operator pos:line="322" pos:column="12">&amp;<pos:position pos:line="322" pos:column="17"/></operator><name><name pos:line="322" pos:column="13">ntlmbuf<pos:position pos:line="322" pos:column="20"/></name><index pos:line="322" pos:column="20">[<expr><name pos:line="322" pos:column="21">size<pos:position pos:line="322" pos:column="25"/></name></expr>]<pos:position pos:line="322" pos:column="26"/></index></name></expr></argument>, <argument><expr><name pos:line="322" pos:column="28">domain<pos:position pos:line="322" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="322" pos:column="36">domlen<pos:position pos:line="322" pos:column="42"/></name></expr></argument>)<pos:position pos:line="322" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="44"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name pos:line="324" pos:column="3">size<pos:position pos:line="324" pos:column="7"/></name> <operator pos:line="324" pos:column="8">+=<pos:position pos:line="324" pos:column="10"/></operator> <name pos:line="324" pos:column="11">domlen<pos:position pos:line="324" pos:column="17"/></name></expr>;<pos:position pos:line="324" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="326" pos:column="3">DEBUGASSERT<pos:position pos:line="326" pos:column="14"/></name><argument_list pos:line="326" pos:column="14">(<argument><expr><name pos:line="326" pos:column="15">size<pos:position pos:line="326" pos:column="19"/></name> <operator pos:line="326" pos:column="20">==<pos:position pos:line="326" pos:column="22"/></operator> <name pos:line="326" pos:column="23">useroff<pos:position pos:line="326" pos:column="30"/></name></expr></argument>)<pos:position pos:line="326" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="32"/></expr_stmt>
  <if pos:line="327" pos:column="3">if<condition pos:line="327" pos:column="5">(<expr><name pos:line="327" pos:column="6">unicode<pos:position pos:line="327" pos:column="13"/></name></expr>)<pos:position pos:line="327" pos:column="14"/></condition><then pos:line="327" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="328" pos:column="5">unicodecpy<pos:position pos:line="328" pos:column="15"/></name><argument_list pos:line="328" pos:column="15">(<argument><expr><operator pos:line="328" pos:column="16">&amp;<pos:position pos:line="328" pos:column="21"/></operator><name><name pos:line="328" pos:column="17">ntlmbuf<pos:position pos:line="328" pos:column="24"/></name><index pos:line="328" pos:column="24">[<expr><name pos:line="328" pos:column="25">size<pos:position pos:line="328" pos:column="29"/></name></expr>]<pos:position pos:line="328" pos:column="30"/></index></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="32">user<pos:position pos:line="328" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="38">userlen<pos:position pos:line="328" pos:column="45"/></name> <operator pos:line="328" pos:column="46">/<pos:position pos:line="328" pos:column="47"/></operator> <literal type="number" pos:line="328" pos:column="48">2<pos:position pos:line="328" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="328" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="51"/></expr_stmt></block></then>
  <else pos:line="329" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="330" pos:column="5">memcpy<pos:position pos:line="330" pos:column="11"/></name><argument_list pos:line="330" pos:column="11">(<argument><expr><operator pos:line="330" pos:column="12">&amp;<pos:position pos:line="330" pos:column="17"/></operator><name><name pos:line="330" pos:column="13">ntlmbuf<pos:position pos:line="330" pos:column="20"/></name><index pos:line="330" pos:column="20">[<expr><name pos:line="330" pos:column="21">size<pos:position pos:line="330" pos:column="25"/></name></expr>]<pos:position pos:line="330" pos:column="26"/></index></name></expr></argument>, <argument><expr><name pos:line="330" pos:column="28">user<pos:position pos:line="330" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="330" pos:column="34">userlen<pos:position pos:line="330" pos:column="41"/></name></expr></argument>)<pos:position pos:line="330" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="43"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name pos:line="332" pos:column="3">size<pos:position pos:line="332" pos:column="7"/></name> <operator pos:line="332" pos:column="8">+=<pos:position pos:line="332" pos:column="10"/></operator> <name pos:line="332" pos:column="11">userlen<pos:position pos:line="332" pos:column="18"/></name></expr>;<pos:position pos:line="332" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="334" pos:column="3">DEBUGASSERT<pos:position pos:line="334" pos:column="14"/></name><argument_list pos:line="334" pos:column="14">(<argument><expr><name pos:line="334" pos:column="15">size<pos:position pos:line="334" pos:column="19"/></name> <operator pos:line="334" pos:column="20">==<pos:position pos:line="334" pos:column="22"/></operator> <name pos:line="334" pos:column="23">hostoff<pos:position pos:line="334" pos:column="30"/></name></expr></argument>)<pos:position pos:line="334" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="32"/></expr_stmt>
  <if pos:line="335" pos:column="3">if<condition pos:line="335" pos:column="5">(<expr><name pos:line="335" pos:column="6">unicode<pos:position pos:line="335" pos:column="13"/></name></expr>)<pos:position pos:line="335" pos:column="14"/></condition><then pos:line="335" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="336" pos:column="5">unicodecpy<pos:position pos:line="336" pos:column="15"/></name><argument_list pos:line="336" pos:column="15">(<argument><expr><operator pos:line="336" pos:column="16">&amp;<pos:position pos:line="336" pos:column="21"/></operator><name><name pos:line="336" pos:column="17">ntlmbuf<pos:position pos:line="336" pos:column="24"/></name><index pos:line="336" pos:column="24">[<expr><name pos:line="336" pos:column="25">size<pos:position pos:line="336" pos:column="29"/></name></expr>]<pos:position pos:line="336" pos:column="30"/></index></name></expr></argument>, <argument><expr><name pos:line="336" pos:column="32">host<pos:position pos:line="336" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="336" pos:column="38">hostlen<pos:position pos:line="336" pos:column="45"/></name> <operator pos:line="336" pos:column="46">/<pos:position pos:line="336" pos:column="47"/></operator> <literal type="number" pos:line="336" pos:column="48">2<pos:position pos:line="336" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="336" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="336" pos:column="51"/></expr_stmt></block></then>
  <else pos:line="337" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="338" pos:column="5">memcpy<pos:position pos:line="338" pos:column="11"/></name><argument_list pos:line="338" pos:column="11">(<argument><expr><operator pos:line="338" pos:column="12">&amp;<pos:position pos:line="338" pos:column="17"/></operator><name><name pos:line="338" pos:column="13">ntlmbuf<pos:position pos:line="338" pos:column="20"/></name><index pos:line="338" pos:column="20">[<expr><name pos:line="338" pos:column="21">size<pos:position pos:line="338" pos:column="25"/></name></expr>]<pos:position pos:line="338" pos:column="26"/></index></name></expr></argument>, <argument><expr><name pos:line="338" pos:column="28">host<pos:position pos:line="338" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="338" pos:column="34">hostlen<pos:position pos:line="338" pos:column="41"/></name></expr></argument>)<pos:position pos:line="338" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="338" pos:column="43"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name pos:line="340" pos:column="3">size<pos:position pos:line="340" pos:column="7"/></name> <operator pos:line="340" pos:column="8">+=<pos:position pos:line="340" pos:column="10"/></operator> <name pos:line="340" pos:column="11">hostlen<pos:position pos:line="340" pos:column="18"/></name></expr>;<pos:position pos:line="340" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="342" pos:column="3">/* Convert domain, user, and host to ASCII but leave the rest as-is */</comment>
  <expr_stmt><expr><name pos:line="343" pos:column="3">result<pos:position pos:line="343" pos:column="9"/></name> <operator pos:line="343" pos:column="10">=<pos:position pos:line="343" pos:column="11"/></operator> <call><name pos:line="343" pos:column="12">Curl_convert_to_network<pos:position pos:line="343" pos:column="35"/></name><argument_list pos:line="343" pos:column="35">(<argument><expr><name pos:line="343" pos:column="36">data<pos:position pos:line="343" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="343" pos:column="42">(<pos:position pos:line="343" pos:column="43"/></operator><name pos:line="343" pos:column="43">char<pos:position pos:line="343" pos:column="47"/></name> <operator pos:line="343" pos:column="48">*<pos:position pos:line="343" pos:column="49"/></operator><operator pos:line="343" pos:column="49">)<pos:position pos:line="343" pos:column="50"/></operator><operator pos:line="343" pos:column="50">&amp;<pos:position pos:line="343" pos:column="55"/></operator><name><name pos:line="343" pos:column="51">ntlmbuf<pos:position pos:line="343" pos:column="58"/></name><index pos:line="343" pos:column="58">[<expr><name pos:line="343" pos:column="59">domoff<pos:position pos:line="343" pos:column="65"/></name></expr>]<pos:position pos:line="343" pos:column="66"/></index></name></expr></argument>,
                                   <argument><expr><name pos:line="344" pos:column="36">size<pos:position pos:line="344" pos:column="40"/></name> <operator pos:line="344" pos:column="41">-<pos:position pos:line="344" pos:column="42"/></operator> <name pos:line="344" pos:column="43">domoff<pos:position pos:line="344" pos:column="49"/></name></expr></argument>)<pos:position pos:line="344" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="344" pos:column="51"/></expr_stmt>
  <if pos:line="345" pos:column="3">if<condition pos:line="345" pos:column="5">(<expr><name pos:line="345" pos:column="6">result<pos:position pos:line="345" pos:column="12"/></name></expr>)<pos:position pos:line="345" pos:column="13"/></condition><then pos:line="345" pos:column="13">
    <block type="pseudo"><return pos:line="346" pos:column="5">return <expr><name pos:line="346" pos:column="12">CURLE_CONV_FAILED<pos:position pos:line="346" pos:column="29"/></name></expr>;<pos:position pos:line="346" pos:column="30"/></return></block></then></if>

  <comment type="block" pos:line="348" pos:column="3">/* Return with binary blob encoded into base64 */</comment>
  <expr_stmt><expr><name pos:line="349" pos:column="3">result<pos:position pos:line="349" pos:column="9"/></name> <operator pos:line="349" pos:column="10">=<pos:position pos:line="349" pos:column="11"/></operator> <call><name pos:line="349" pos:column="12">Curl_base64_encode<pos:position pos:line="349" pos:column="30"/></name><argument_list pos:line="349" pos:column="30">(<argument><expr><name pos:line="349" pos:column="31">data<pos:position pos:line="349" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="349" pos:column="37">(<pos:position pos:line="349" pos:column="38"/></operator><name pos:line="349" pos:column="38">char<pos:position pos:line="349" pos:column="42"/></name> <operator pos:line="349" pos:column="43">*<pos:position pos:line="349" pos:column="44"/></operator><operator pos:line="349" pos:column="44">)<pos:position pos:line="349" pos:column="45"/></operator><name pos:line="349" pos:column="45">ntlmbuf<pos:position pos:line="349" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="54">size<pos:position pos:line="349" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="60">outptr<pos:position pos:line="349" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="68">outlen<pos:position pos:line="349" pos:column="74"/></name></expr></argument>)<pos:position pos:line="349" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="76"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="351" pos:column="3">Curl_auth_ntlm_cleanup<pos:position pos:line="351" pos:column="25"/></name><argument_list pos:line="351" pos:column="25">(<argument><expr><name pos:line="351" pos:column="26">ntlm<pos:position pos:line="351" pos:column="30"/></name></expr></argument>)<pos:position pos:line="351" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="32"/></expr_stmt>

  <return pos:line="353" pos:column="3">return <expr><name pos:line="353" pos:column="10">result<pos:position pos:line="353" pos:column="16"/></name></expr>;<pos:position pos:line="353" pos:column="17"/></return>
}<pos:position pos:line="354" pos:column="2"/></block></function></unit>

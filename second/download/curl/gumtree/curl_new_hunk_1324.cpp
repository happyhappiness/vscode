"\n"
"          This option may be used any number of times. To control\n"
"          where this URL is written, use the -o or the -O\n"
"          options.\n"
"\n"
"     -v/--verbose\n"
);
 puts(
"          Makes the fetching more verbose/talkative. Mostly\n"
"          usable for debugging. Lines starting with '>' means\n"
"          data sent by curl, '<' means data received by curl that\n"
"          is hidden in normal cases and lines starting with '*'\n"
"          means additional info provided by curl.\n"
"\n"
"          If this option is used twice, the second will again\n"
"          disable verbose.\n"
"\n"
"     -V/--version\n"
"          Displays the full version of curl, libcurl and other\n"
);
 puts(
"          3rd party libraries linked with the executable.\n"
"\n"
"     -w/--write-out <format>\n"
"          Defines what to display after a completed and success­\n"
"          ful operation. The format is a string that may contain\n"
"          plain text mixed with any number of variables. The\n"
"          string can be specified as \"string\", to get read from a\n"
"          particular file you specify it \"@filename\" and to tell\n"
"          curl to read the format from stdin you write \"@-\".\n"
"\n"
);
 puts(
"          The variables present in the output format will be sub­\n"
"          stituted by the value or text that curl thinks fit, as\n"
"          described below. All variables are specified like\n"
"          %{variable_name} and to output a normal % you just\n"
"          write them like %%. You can output a newline by using\n"
"          \\n, a carrige return with \\r and a tab space with \\t.\n"
"\n"
"          NOTE: The %-letter is a special letter in the\n"
);
 puts(
"          win32-environment, where all occurrences of % must be\n"
"          doubled when using this option.\n"
"\n"
"          Available variables are at this point:\n"
"\n"
"          url_effective  The URL that was fetched last. This is\n"
"                         mostly meaningful if you've told curl to\n"
"                         follow location: headers.\n"
"\n"
"          http_code      The numerical code that was found in the\n"
"                         last retrieved HTTP(S) page.\n"
"\n"
);
 puts(
"          time_total     The total time, in seconds, that the\n"
"                         full operation lasted. The time will be\n"
"                         displayed with millisecond resolution.\n"
"\n"
"          time_namelookup\n"
"                         The time, in seconds, it took from the\n"
"                         start until the name resolving was com­\n"
"                         pleted.\n"
"\n"
"          time_connect   The time, in seconds, it took from the\n"
);
 puts(
"                         start until the connect to the remote\n"
"                         host (or proxy) was completed.\n"
"\n"
"          time_pretransfer\n"
"                         The time, in seconds, it took from the\n"
"                         start until the file transfer is just\n"
"                         about to begin. This includes all pre-\n"
"                         transfer commands and negotiations that\n"
"                         are specific to the particular proto­\n"
);
 puts(
"                         col(s) involved.\n"
"\n"
"          size_download  The total amount of bytes that were\n"
"                         downloaded.\n"
"\n"
"          size_upload    The total amount of bytes that were\n"

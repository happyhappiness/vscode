<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2259_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">curl_global_cleanup<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if<condition pos:line="3" pos:column="5">(<expr><operator pos:line="3" pos:column="6">!<pos:position pos:line="3" pos:column="7"/></operator><name pos:line="3" pos:column="7">initialized<pos:position pos:line="3" pos:column="18"/></name></expr>)<pos:position pos:line="3" pos:column="19"/></condition><then pos:line="3" pos:column="19">
    <block type="pseudo"><return pos:line="4" pos:column="5">return;<pos:position pos:line="4" pos:column="12"/></return></block></then></if>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><operator pos:line="6" pos:column="6">--<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">initialized<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20">
    <block type="pseudo"><return pos:line="7" pos:column="5">return;<pos:position pos:line="7" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">Curl_global_host_cache_dtor<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">()<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">init_flags<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">&amp;<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="19">CURL_GLOBAL_SSL<pos:position pos:line="11" pos:column="34"/></name></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">Curl_ssl_cleanup<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">()<pos:position pos:line="12" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">Curl_resolver_global_cleanup<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">()<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name pos:line="16" pos:column="6">init_flags<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">&amp;<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="19">CURL_GLOBAL_WIN32<pos:position pos:line="16" pos:column="36"/></name></expr>)<pos:position pos:line="16" pos:column="37"/></condition><then pos:line="16" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="5">win32_cleanup<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">()<pos:position pos:line="17" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="19" pos:column="3">Curl_amiga_cleanup<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">()<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>

<cpp:if pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">if<pos:position pos:line="21" pos:column="4"/></cpp:directive> <expr><call><name pos:line="21" pos:column="5">defined<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><name pos:line="21" pos:column="13">USE_LIBSSH2<pos:position pos:line="21" pos:column="24"/></name></expr></argument>)<pos:position pos:line="21" pos:column="25"/></argument_list></call> <operator pos:line="21" pos:column="26">&amp;&amp;<pos:position pos:line="21" pos:column="36"/></operator> <call><name pos:line="21" pos:column="29">defined<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name pos:line="21" pos:column="37">HAVE_LIBSSH2_EXIT<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><operator pos:line="22" pos:column="3">(<pos:position pos:line="22" pos:column="4"/></operator><name pos:line="22" pos:column="4">void<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">)<pos:position pos:line="22" pos:column="9"/></operator><call><name pos:line="22" pos:column="9">libssh2_exit<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">()<pos:position pos:line="22" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="25" pos:column="3">init_flags<pos:position pos:line="25" pos:column="13"/></name>  <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <literal type="number" pos:line="25" pos:column="17">0<pos:position pos:line="25" pos:column="18"/></literal></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

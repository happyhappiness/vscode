<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_266_curl-7.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">CURLcode<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">init_telnet<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name><name pos:line="2" pos:column="22">struct<pos:position pos:line="2" pos:column="28"/></name> <name pos:line="2" pos:column="29">connectdata<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">conn<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">TELNET<pos:position pos:line="4" pos:column="16"/></name></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">tn<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">tn<pos:position pos:line="6" pos:column="5"/></name> <operator pos:line="6" pos:column="6">=<pos:position pos:line="6" pos:column="7"/></operator> <operator pos:line="6" pos:column="8">(<pos:position pos:line="6" pos:column="9"/></operator>struct <name pos:line="6" pos:column="16">TELNET<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></operator><operator pos:line="6" pos:column="24">)<pos:position pos:line="6" pos:column="25"/></operator><call><name pos:line="6" pos:column="25">malloc<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><sizeof pos:line="6" pos:column="32">sizeof<argument_list pos:line="6" pos:column="38">(<argument><expr pos:line="6" pos:column="39">struct <name pos:line="6" pos:column="46">TELNET<pos:position pos:line="6" pos:column="52"/></name></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="55"/></expr_stmt>
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><name pos:line="7" pos:column="7">tn<pos:position pos:line="7" pos:column="9"/></name></expr>)<pos:position pos:line="7" pos:column="10"/></condition><then pos:line="7" pos:column="10">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="8" pos:column="31"/></name></expr>;<pos:position pos:line="8" pos:column="32"/></return></block></then></if>
  
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">conn<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">proto<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">telnet<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">void<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">*<pos:position pos:line="10" pos:column="31"/></operator><operator pos:line="10" pos:column="31">)<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">tn<pos:position pos:line="10" pos:column="34"/></name></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt> <comment type="block" pos:line="10" pos:column="36">/* make us known */</comment>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">memset<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><name pos:line="12" pos:column="10">tn<pos:position pos:line="12" pos:column="12"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="17">sizeof<argument_list pos:line="12" pos:column="23">(<argument><expr pos:line="12" pos:column="24">struct <name pos:line="12" pos:column="31">TELNET<pos:position pos:line="12" pos:column="37"/></name></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="14" pos:column="3">tn<pos:position pos:line="14" pos:column="5"/></name><operator pos:line="14" pos:column="5">-&gt;<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="7">telrcv_state<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">TS_DATA<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="16" pos:column="3">/* Init suboptions */</comment>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">SB_CLEAR<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name pos:line="17" pos:column="12">tn<pos:position pos:line="17" pos:column="14"/></name></expr></argument>)<pos:position pos:line="17" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* Set all options to NO */</comment>
<cpp:if pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">if<pos:position pos:line="20" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="20" pos:column="5">0<pos:position pos:line="20" pos:column="6"/></literal></expr></cpp:if>
  <comment type="block" pos:line="21" pos:column="3">/* NO is zero =&gt; default fill pattern */</comment>
  memset(tn-&gt;us, NO, 256);
  memset(tn-&gt;usq, NO, 256);
  memset(tn-&gt;us_preferred, NO, 256);
  memset(tn-&gt;him, NO, 256);
  memset(tn-&gt;himq, NO, 256);
  memset(tn-&gt;him_preferred, NO, 256);
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
  <comment type="block" pos:line="29" pos:column="3">/* Set the options we want by default */</comment>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">tn<pos:position pos:line="30" pos:column="5"/></name><operator pos:line="30" pos:column="5">-&gt;<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="7">us_preferred<pos:position pos:line="30" pos:column="19"/></name><index pos:line="30" pos:column="19">[<expr><name pos:line="30" pos:column="20">TELOPT_BINARY<pos:position pos:line="30" pos:column="33"/></name></expr>]<pos:position pos:line="30" pos:column="34"/></index></name> <operator pos:line="30" pos:column="35">=<pos:position pos:line="30" pos:column="36"/></operator> <name pos:line="30" pos:column="37">YES<pos:position pos:line="30" pos:column="40"/></name></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">tn<pos:position pos:line="31" pos:column="5"/></name><operator pos:line="31" pos:column="5">-&gt;<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="7">us_preferred<pos:position pos:line="31" pos:column="19"/></name><index pos:line="31" pos:column="19">[<expr><name pos:line="31" pos:column="20">TELOPT_SGA<pos:position pos:line="31" pos:column="30"/></name></expr>]<pos:position pos:line="31" pos:column="31"/></index></name> <operator pos:line="31" pos:column="32">=<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="34">YES<pos:position pos:line="31" pos:column="37"/></name></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">tn<pos:position pos:line="32" pos:column="5"/></name><operator pos:line="32" pos:column="5">-&gt;<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="7">him_preferred<pos:position pos:line="32" pos:column="20"/></name><index pos:line="32" pos:column="20">[<expr><name pos:line="32" pos:column="21">TELOPT_BINARY<pos:position pos:line="32" pos:column="34"/></name></expr>]<pos:position pos:line="32" pos:column="35"/></index></name> <operator pos:line="32" pos:column="36">=<pos:position pos:line="32" pos:column="37"/></operator> <name pos:line="32" pos:column="38">YES<pos:position pos:line="32" pos:column="41"/></name></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">tn<pos:position pos:line="33" pos:column="5"/></name><operator pos:line="33" pos:column="5">-&gt;<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="7">him_preferred<pos:position pos:line="33" pos:column="20"/></name><index pos:line="33" pos:column="20">[<expr><name pos:line="33" pos:column="21">TELOPT_SGA<pos:position pos:line="33" pos:column="31"/></name></expr>]<pos:position pos:line="33" pos:column="32"/></index></name> <operator pos:line="33" pos:column="33">=<pos:position pos:line="33" pos:column="34"/></operator> <name pos:line="33" pos:column="35">YES<pos:position pos:line="33" pos:column="38"/></name></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>

  <return pos:line="35" pos:column="3">return <expr><name pos:line="35" pos:column="10">CURLE_OK<pos:position pos:line="35" pos:column="18"/></name></expr>;<pos:position pos:line="35" pos:column="19"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

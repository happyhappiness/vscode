<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_552_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">max5data<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">curl_off_t<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">bytes<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">max5<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:define pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">define<pos:position pos:line="3" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="3" pos:column="9">ONE_KILOBYTE<pos:position pos:line="3" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="3" pos:column="22">1024<pos:position pos:line="3" pos:column="26"/></cpp:value></cpp:define>
<cpp:define pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">define<pos:position pos:line="4" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="4" pos:column="9">ONE_MEGABYTE<pos:position pos:line="4" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="4" pos:column="22">(1024* ONE_KILOBYTE)<pos:position pos:line="4" pos:column="42"/></cpp:value></cpp:define>
<cpp:define pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">define<pos:position pos:line="5" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="5" pos:column="9">ONE_GIGABYTE<pos:position pos:line="5" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="5" pos:column="22">(1024* ONE_MEGABYTE)<pos:position pos:line="5" pos:column="42"/></cpp:value></cpp:define>
<cpp:define pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">define<pos:position pos:line="6" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="6" pos:column="9">ONE_TERABYTE<pos:position pos:line="6" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="6" pos:column="22">((curl_off_t)1024* ONE_GIGABYTE)<pos:position pos:line="6" pos:column="54"/></cpp:value></cpp:define>
<cpp:define pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">define<pos:position pos:line="7" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="7" pos:column="9">ONE_PETABYTE<pos:position pos:line="7" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="7" pos:column="22">((curl_off_t)1024* ONE_TERABYTE)<pos:position pos:line="7" pos:column="54"/></cpp:value></cpp:define>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">bytes<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">&lt;<pos:position pos:line="9" pos:column="16"/></operator> <literal type="number" pos:line="9" pos:column="14">100000<pos:position pos:line="9" pos:column="20"/></literal></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">snprintf<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">max5<pos:position pos:line="10" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="20">6<pos:position pos:line="10" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="23">"%5"<pos:position pos:line="10" pos:column="27"/></literal> <name pos:line="10" pos:column="28">FORMAT_OFF_T<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">bytes<pos:position pos:line="10" pos:column="47"/></name></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then>
  <elseif pos:line="12" pos:column="3">else <if pos:line="12" pos:column="8">if<condition pos:line="12" pos:column="10">(<expr><name pos:line="12" pos:column="11">bytes<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&lt;<pos:position pos:line="12" pos:column="21"/></operator> <operator pos:line="12" pos:column="19">(<pos:position pos:line="12" pos:column="20"/></operator><literal type="number" pos:line="12" pos:column="20">10000<pos:position pos:line="12" pos:column="25"/></literal><operator pos:line="12" pos:column="25">*<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">ONE_KILOBYTE<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">)<pos:position pos:line="12" pos:column="39"/></operator></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40"> <block pos:line="12" pos:column="41">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">snprintf<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">max5<pos:position pos:line="13" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="20">6<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="23">"%4"<pos:position pos:line="13" pos:column="27"/></literal> <name pos:line="13" pos:column="28">FORMAT_OFF_T<pos:position pos:line="13" pos:column="40"/></name> <literal type="string" pos:line="13" pos:column="41">"k"<pos:position pos:line="13" pos:column="44"/></literal></expr></argument>, <argument><expr><call pos:line="13" pos:column="46">(<name pos:line="13" pos:column="47">curl_off_t<pos:position pos:line="13" pos:column="57"/></name>)<argument_list pos:line="13" pos:column="58">(<argument><expr><name pos:line="13" pos:column="59">bytes<pos:position pos:line="13" pos:column="64"/></name><operator pos:line="13" pos:column="64">/<pos:position pos:line="13" pos:column="65"/></operator><name pos:line="13" pos:column="65">ONE_KILOBYTE<pos:position pos:line="13" pos:column="77"/></name></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="80"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="15" pos:column="3">else <if pos:line="15" pos:column="8">if<condition pos:line="15" pos:column="10">(<expr><name pos:line="15" pos:column="11">bytes<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">&lt;<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="19">(<pos:position pos:line="15" pos:column="20"/></operator><literal type="number" pos:line="15" pos:column="20">100<pos:position pos:line="15" pos:column="23"/></literal><operator pos:line="15" pos:column="23">*<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">ONE_MEGABYTE<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">)<pos:position pos:line="15" pos:column="37"/></operator></expr>)<pos:position pos:line="15" pos:column="38"/></condition><then pos:line="15" pos:column="38"> <block pos:line="15" pos:column="39">{
    <comment type="block" pos:line="16" pos:column="5">/* 'XX.XM' is good as long as we're less than 100 megs */</comment>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">snprintf<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">max5<pos:position pos:line="17" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="20">6<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="23">"%2d.%0dM"<pos:position pos:line="17" pos:column="33"/></literal></expr></argument>,
             <argument><expr><call pos:line="18" pos:column="14">(<name pos:line="18" pos:column="15">int<pos:position pos:line="18" pos:column="18"/></name>)<argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">bytes<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">/<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">ONE_MEGABYTE<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr></argument>,
             <argument><expr><call pos:line="19" pos:column="14">(<name pos:line="19" pos:column="15">int<pos:position pos:line="19" pos:column="18"/></name>)<argument_list pos:line="19" pos:column="19">(<argument><expr><name pos:line="19" pos:column="20">bytes<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">%<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">ONE_MEGABYTE<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call><operator pos:line="19" pos:column="39">/<pos:position pos:line="19" pos:column="40"/></operator><operator pos:line="19" pos:column="40">(<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">ONE_MEGABYTE<pos:position pos:line="19" pos:column="53"/></name><operator pos:line="19" pos:column="53">/<pos:position pos:line="19" pos:column="54"/></operator><literal type="number" pos:line="19" pos:column="54">10<pos:position pos:line="19" pos:column="56"/></literal><operator pos:line="19" pos:column="56">)<pos:position pos:line="19" pos:column="57"/></operator></expr></argument> )<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="60"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if></elseif>
<cpp:if pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">if<pos:position pos:line="21" pos:column="4"/></cpp:directive> <expr><name pos:line="21" pos:column="5">SIZEOF_CURL_OFF_T<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&gt;<pos:position pos:line="21" pos:column="27"/></operator> <literal type="number" pos:line="21" pos:column="25">4<pos:position pos:line="21" pos:column="26"/></literal></expr></cpp:if>
  <elseif pos:line="22" pos:column="3">else <if pos:line="22" pos:column="8">if<condition pos:line="22" pos:column="10">(<expr><name pos:line="22" pos:column="11">bytes<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">&lt;<pos:position pos:line="22" pos:column="21"/></operator> <operator pos:line="22" pos:column="19">(<pos:position pos:line="22" pos:column="20"/></operator> <operator pos:line="22" pos:column="21">(<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">curl_off_t<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">)<pos:position pos:line="22" pos:column="33"/></operator><literal type="number" pos:line="22" pos:column="33">10000<pos:position pos:line="22" pos:column="38"/></literal><operator pos:line="22" pos:column="38">*<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">ONE_MEGABYTE<pos:position pos:line="22" pos:column="51"/></name><operator pos:line="22" pos:column="51">)<pos:position pos:line="22" pos:column="52"/></operator></expr>)<pos:position pos:line="22" pos:column="53"/></condition><then pos:line="22" pos:column="53">
    <comment type="block" pos:line="23" pos:column="5">/* 'XXXXM' is good until we're at 10000MB or above */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">snprintf<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">max5<pos:position pos:line="24" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="20">6<pos:position pos:line="24" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="23">"%4"<pos:position pos:line="24" pos:column="27"/></literal> <name pos:line="24" pos:column="28">FORMAT_OFF_T<pos:position pos:line="24" pos:column="40"/></name> <literal type="string" pos:line="24" pos:column="41">"M"<pos:position pos:line="24" pos:column="44"/></literal></expr></argument>, <argument><expr><call pos:line="24" pos:column="46">(<name pos:line="24" pos:column="47">curl_off_t<pos:position pos:line="24" pos:column="57"/></name>)<argument_list pos:line="24" pos:column="58">(<argument><expr><name pos:line="24" pos:column="59">bytes<pos:position pos:line="24" pos:column="64"/></name><operator pos:line="24" pos:column="64">/<pos:position pos:line="24" pos:column="65"/></operator><name pos:line="24" pos:column="65">ONE_MEGABYTE<pos:position pos:line="24" pos:column="77"/></name></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="80"/></expr_stmt></block></then></if></elseif>

  <elseif pos:line="26" pos:column="3">else <if pos:line="26" pos:column="8">if<condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">bytes<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">&lt;<pos:position pos:line="26" pos:column="21"/></operator> <operator pos:line="26" pos:column="19">(<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">curl_off_t<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">)<pos:position pos:line="26" pos:column="31"/></operator><literal type="number" pos:line="26" pos:column="31">100<pos:position pos:line="26" pos:column="34"/></literal><operator pos:line="26" pos:column="34">*<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">ONE_GIGABYTE<pos:position pos:line="26" pos:column="47"/></name></expr>)<pos:position pos:line="26" pos:column="48"/></condition><then pos:line="26" pos:column="48">
    <comment type="block" pos:line="27" pos:column="5">/* 10000 MB - 100 GB, we show it as XX.XG */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="5">snprintf<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">(<argument><expr><name pos:line="28" pos:column="14">max5<pos:position pos:line="28" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="20">6<pos:position pos:line="28" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="23">"%2d.%0dG"<pos:position pos:line="28" pos:column="33"/></literal></expr></argument>,
             <argument><expr><call pos:line="29" pos:column="14">(<name pos:line="29" pos:column="15">int<pos:position pos:line="29" pos:column="18"/></name>)<argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">bytes<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">/<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="26">ONE_GIGABYTE<pos:position pos:line="29" pos:column="38"/></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr></argument>,
             <argument><expr><call pos:line="30" pos:column="14">(<name pos:line="30" pos:column="15">int<pos:position pos:line="30" pos:column="18"/></name>)<argument_list pos:line="30" pos:column="19">(<argument><expr><name pos:line="30" pos:column="20">bytes<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">%<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="26">ONE_GIGABYTE<pos:position pos:line="30" pos:column="38"/></name></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call><operator pos:line="30" pos:column="39">/<pos:position pos:line="30" pos:column="40"/></operator><operator pos:line="30" pos:column="40">(<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="41">ONE_GIGABYTE<pos:position pos:line="30" pos:column="53"/></name><operator pos:line="30" pos:column="53">/<pos:position pos:line="30" pos:column="54"/></operator><literal type="number" pos:line="30" pos:column="54">10<pos:position pos:line="30" pos:column="56"/></literal><operator pos:line="30" pos:column="56">)<pos:position pos:line="30" pos:column="57"/></operator></expr></argument> )<pos:position pos:line="30" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="60"/></expr_stmt></block></then></if></elseif>

  <elseif pos:line="32" pos:column="3">else <if pos:line="32" pos:column="8">if<condition pos:line="32" pos:column="10">(<expr><name pos:line="32" pos:column="11">bytes<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">&lt;<pos:position pos:line="32" pos:column="21"/></operator> <operator pos:line="32" pos:column="19">(<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">curl_off_t<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">)<pos:position pos:line="32" pos:column="31"/></operator><literal type="number" pos:line="32" pos:column="31">10000<pos:position pos:line="32" pos:column="36"/></literal> <operator pos:line="32" pos:column="37">*<pos:position pos:line="32" pos:column="38"/></operator> <name pos:line="32" pos:column="39">ONE_GIGABYTE<pos:position pos:line="32" pos:column="51"/></name></expr>)<pos:position pos:line="32" pos:column="52"/></condition><then pos:line="32" pos:column="52">
    <comment type="block" pos:line="33" pos:column="5">/* up to 10000GB, display without decimal: XXXXG */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="5">snprintf<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><name pos:line="34" pos:column="14">max5<pos:position pos:line="34" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="20">6<pos:position pos:line="34" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="23">"%4dG"<pos:position pos:line="34" pos:column="29"/></literal></expr></argument>, <argument><expr><call pos:line="34" pos:column="31">(<name pos:line="34" pos:column="32">int<pos:position pos:line="34" pos:column="35"/></name>)<argument_list pos:line="34" pos:column="36">(<argument><expr><name pos:line="34" pos:column="37">bytes<pos:position pos:line="34" pos:column="42"/></name><operator pos:line="34" pos:column="42">/<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="43">ONE_GIGABYTE<pos:position pos:line="34" pos:column="55"/></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt></block></then></if></elseif>

  <elseif pos:line="36" pos:column="3">else <if pos:line="36" pos:column="8">if<condition pos:line="36" pos:column="10">(<expr><name pos:line="36" pos:column="11">bytes<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">&lt;<pos:position pos:line="36" pos:column="21"/></operator> <operator pos:line="36" pos:column="19">(<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="20">curl_off_t<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">)<pos:position pos:line="36" pos:column="31"/></operator><literal type="number" pos:line="36" pos:column="31">10000<pos:position pos:line="36" pos:column="36"/></literal> <operator pos:line="36" pos:column="37">*<pos:position pos:line="36" pos:column="38"/></operator> <name pos:line="36" pos:column="39">ONE_TERABYTE<pos:position pos:line="36" pos:column="51"/></name></expr>)<pos:position pos:line="36" pos:column="52"/></condition><then pos:line="36" pos:column="52">
    <comment type="block" pos:line="37" pos:column="5">/* up to 10000TB, display without decimal: XXXXT */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="5">snprintf<pos:position pos:line="38" pos:column="13"/></name><argument_list pos:line="38" pos:column="13">(<argument><expr><name pos:line="38" pos:column="14">max5<pos:position pos:line="38" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="20">6<pos:position pos:line="38" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="23">"%4dT"<pos:position pos:line="38" pos:column="29"/></literal></expr></argument>, <argument><expr><call pos:line="38" pos:column="31">(<name pos:line="38" pos:column="32">int<pos:position pos:line="38" pos:column="35"/></name>)<argument_list pos:line="38" pos:column="36">(<argument><expr><name pos:line="38" pos:column="37">bytes<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">/<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="43">ONE_TERABYTE<pos:position pos:line="38" pos:column="55"/></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="58"/></expr_stmt></block></then></if></elseif>
  <else pos:line="39" pos:column="3">else <block pos:line="39" pos:column="8">{
    <comment type="block" pos:line="40" pos:column="5">/* up to 10000PB, display without decimal: XXXXP */</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">snprintf<pos:position pos:line="41" pos:column="13"/></name><argument_list pos:line="41" pos:column="13">(<argument><expr><name pos:line="41" pos:column="14">max5<pos:position pos:line="41" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="20">6<pos:position pos:line="41" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="23">"%4dP"<pos:position pos:line="41" pos:column="29"/></literal></expr></argument>, <argument><expr><call pos:line="41" pos:column="31">(<name pos:line="41" pos:column="32">int<pos:position pos:line="41" pos:column="35"/></name>)<argument_list pos:line="41" pos:column="36">(<argument><expr><name pos:line="41" pos:column="37">bytes<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">/<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="43">ONE_PETABYTE<pos:position pos:line="41" pos:column="55"/></name></expr></argument>)<pos:position pos:line="41" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt>

    <comment type="block" pos:line="43" pos:column="5">/* 16384 petabytes (16 exabytes) is maximum a 64 bit number can hold,
       but this type is signed so 8192PB will be max.*/</comment>
  }<pos:position pos:line="45" pos:column="4"/></block></else>

<cpp:else pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">else<pos:position pos:line="47" pos:column="6"/></cpp:directive></cpp:else>
  <else pos:line="48" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="5">snprintf<pos:position pos:line="49" pos:column="13"/></name><argument_list pos:line="49" pos:column="13">(<argument><expr><name pos:line="49" pos:column="14">max5<pos:position pos:line="49" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="20">6<pos:position pos:line="49" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="23">"%4"<pos:position pos:line="49" pos:column="27"/></literal> <name pos:line="49" pos:column="28">FORMAT_OFF_T<pos:position pos:line="49" pos:column="40"/></name> <literal type="string" pos:line="49" pos:column="41">"M"<pos:position pos:line="49" pos:column="44"/></literal></expr></argument>, <argument><expr><call pos:line="49" pos:column="46">(<name pos:line="49" pos:column="47">curl_off_t<pos:position pos:line="49" pos:column="57"/></name>)<argument_list pos:line="49" pos:column="58">(<argument><expr><name pos:line="49" pos:column="59">bytes<pos:position pos:line="49" pos:column="64"/></name><operator pos:line="49" pos:column="64">/<pos:position pos:line="49" pos:column="65"/></operator><name pos:line="49" pos:column="65">ONE_MEGABYTE<pos:position pos:line="49" pos:column="77"/></name></expr></argument>)<pos:position pos:line="49" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="80"/></expr_stmt></block></else></if>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="52" pos:column="3">return <expr><name pos:line="52" pos:column="10">max5<pos:position pos:line="52" pos:column="14"/></name></expr>;<pos:position pos:line="52" pos:column="15"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

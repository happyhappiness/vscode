<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2367_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">Curl_ossl_init<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">ENABLE_SSLKEYLOGFILE<pos:position pos:line="3" pos:column="28"/></name></cpp:ifdef>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">keylog_file_name<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
<cpp:endif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">endif<pos:position pos:line="5" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">OPENSSL_load_builtin_modules<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">()<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>

<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">HAVE_ENGINE_LOAD_BUILTIN_ENGINES<pos:position pos:line="9" pos:column="40"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">ENGINE_load_builtin_engines<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">()<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="13" pos:column="3">/* OPENSSL_config(NULL); is "strongly recommended" to use but unfortunately
     that function makes an exit() call on wrongly formatted config files
     which makes it hard to use in some situations. OPENSSL_config() itself
     calls CONF_modules_load_file() and we use that instead and we ignore
     its return code! */</comment>

  <comment type="block" pos:line="19" pos:column="3">/* CONF_MFLAGS_DEFAULT_SECTION introduced some time between 0.9.8b and
     0.9.8e */</comment>
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef<pos:position pos:line="21" pos:column="8"/></cpp:directive> <name pos:line="21" pos:column="9">CONF_MFLAGS_DEFAULT_SECTION<pos:position pos:line="21" pos:column="36"/></name></cpp:ifndef>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define<pos:position pos:line="22" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">CONF_MFLAGS_DEFAULT_SECTION<pos:position pos:line="22" pos:column="36"/></name></cpp:macro> <cpp:value pos:line="22" pos:column="37">0x0<pos:position pos:line="22" pos:column="40"/></cpp:value></cpp:define>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">CONF_modules_load_file<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">NULL<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">NULL<pos:position pos:line="25" pos:column="36"/></name></expr></argument>,
                         <argument><expr><name pos:line="26" pos:column="26">CONF_MFLAGS_DEFAULT_SECTION<pos:position pos:line="26" pos:column="53"/></name><operator pos:line="26" pos:column="53">|<pos:position pos:line="26" pos:column="54"/></operator>
                         <name pos:line="27" pos:column="26">CONF_MFLAGS_IGNORE_MISSING_FILE<pos:position pos:line="27" pos:column="57"/></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt>

<cpp:if pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">if<pos:position pos:line="29" pos:column="4"/></cpp:directive> <expr><operator pos:line="29" pos:column="5">(<pos:position pos:line="29" pos:column="6"/></operator><name pos:line="29" pos:column="6">OPENSSL_VERSION_NUMBER<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">&gt;=<pos:position pos:line="29" pos:column="34"/></operator> <literal type="number" pos:line="29" pos:column="32">0x10100000L<pos:position pos:line="29" pos:column="43"/></literal><operator pos:line="29" pos:column="43">)<pos:position pos:line="29" pos:column="44"/></operator> <operator pos:line="29" pos:column="45">&amp;&amp;<pos:position pos:line="29" pos:column="55"/></operator> \
    <operator pos:line="30" pos:column="5">!<pos:position pos:line="30" pos:column="6"/></operator><call><name pos:line="30" pos:column="6">defined<pos:position pos:line="30" pos:column="13"/></name><argument_list pos:line="30" pos:column="13">(<argument><expr><name pos:line="30" pos:column="14">LIBRESSL_VERSION_NUMBER<pos:position pos:line="30" pos:column="37"/></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="31" pos:column="3">/* OpenSSL 1.1.0+ takes care of initialization itself */</comment>
<cpp:else pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">else<pos:position pos:line="32" pos:column="6"/></cpp:directive></cpp:else>
  <comment type="block" pos:line="33" pos:column="3">/* Lets get nice error messages */</comment>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">SSL_load_error_strings<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">()<pos:position pos:line="34" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="36" pos:column="3">/* Init the global ciphers and digests */</comment>
  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">(<expr><operator pos:line="37" pos:column="6">!<pos:position pos:line="37" pos:column="7"/></operator><call><name pos:line="37" pos:column="7">SSLeay_add_ssl_algorithms<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">()<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="35"/></condition><then pos:line="37" pos:column="35">
    <block type="pseudo"><return pos:line="38" pos:column="5">return <expr><literal type="number" pos:line="38" pos:column="12">0<pos:position pos:line="38" pos:column="13"/></literal></expr>;<pos:position pos:line="38" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">OpenSSL_add_all_algorithms<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">()<pos:position pos:line="40" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">ifdef<pos:position pos:line="43" pos:column="7"/></cpp:directive> <name pos:line="43" pos:column="8">ENABLE_SSLKEYLOGFILE<pos:position pos:line="43" pos:column="28"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="44" pos:column="3">keylog_file_name<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <call><name pos:line="44" pos:column="22">curl_getenv<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><literal type="string" pos:line="44" pos:column="34">"SSLKEYLOGFILE"<pos:position pos:line="44" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>
  <if pos:line="45" pos:column="3">if<condition pos:line="45" pos:column="5">(<expr><name pos:line="45" pos:column="6">keylog_file_name<pos:position pos:line="45" pos:column="22"/></name> <operator pos:line="45" pos:column="23">&amp;&amp;<pos:position pos:line="45" pos:column="33"/></operator> <operator pos:line="45" pos:column="26">!<pos:position pos:line="45" pos:column="27"/></operator><name pos:line="45" pos:column="27">keylog_file_fp<pos:position pos:line="45" pos:column="41"/></name></expr>)<pos:position pos:line="45" pos:column="42"/></condition><then pos:line="45" pos:column="42"> <block pos:line="45" pos:column="43">{
    <expr_stmt><expr><name pos:line="46" pos:column="5">keylog_file_fp<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <call><name pos:line="46" pos:column="22">fopen<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">keylog_file_name<pos:position pos:line="46" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="46">FOPEN_APPENDTEXT<pos:position pos:line="46" pos:column="62"/></name></expr></argument>)<pos:position pos:line="46" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="64"/></expr_stmt>
    <if pos:line="47" pos:column="5">if<condition pos:line="47" pos:column="7">(<expr><name pos:line="47" pos:column="8">keylog_file_fp<pos:position pos:line="47" pos:column="22"/></name></expr>)<pos:position pos:line="47" pos:column="23"/></condition><then pos:line="47" pos:column="23"> <block pos:line="47" pos:column="24">{
      <if pos:line="48" pos:column="7">if<condition pos:line="48" pos:column="9">(<expr><call><name pos:line="48" pos:column="10">setvbuf<pos:position pos:line="48" pos:column="17"/></name><argument_list pos:line="48" pos:column="17">(<argument><expr><name pos:line="48" pos:column="18">keylog_file_fp<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="34">NULL<pos:position pos:line="48" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="40">_IOLBF<pos:position pos:line="48" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="48">4096<pos:position pos:line="48" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="54"/></condition><then pos:line="48" pos:column="54"> <block pos:line="48" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">fclose<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">keylog_file_fp<pos:position pos:line="49" pos:column="30"/></name></expr></argument>)<pos:position pos:line="49" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="50" pos:column="9">keylog_file_fp<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">=<pos:position pos:line="50" pos:column="25"/></operator> <name pos:line="50" pos:column="26">NULL<pos:position pos:line="50" pos:column="30"/></name></expr>;<pos:position pos:line="50" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="51" pos:column="8"/></block></then></if>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="56" pos:column="3">return <expr><literal type="number" pos:line="56" pos:column="10">1<pos:position pos:line="56" pos:column="11"/></literal></expr>;<pos:position pos:line="56" pos:column="12"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1313_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">init_resolve_thread<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">connectdata<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">conn<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">hostname<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">int<pos:position pos:line="2" pos:column="58"/></name></type> <name pos:line="2" pos:column="59">port<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="3" pos:column="33">const<pos:position pos:line="3" pos:column="38"/></specifier> <name><name pos:line="3" pos:column="39">struct<pos:position pos:line="3" pos:column="45"/></name> <name pos:line="3" pos:column="46">addrinfo<pos:position pos:line="3" pos:column="54"/></name></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier></type><name pos:line="3" pos:column="56">hints<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">thread_data<pos:position pos:line="5" pos:column="21"/></name></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">td<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><call><name pos:line="5" pos:column="28">calloc<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><literal type="number" pos:line="5" pos:column="35">1<pos:position pos:line="5" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="38">sizeof<argument_list pos:line="5" pos:column="44">(<argument><expr pos:line="5" pos:column="45">struct <name pos:line="5" pos:column="52">thread_data<pos:position pos:line="5" pos:column="63"/></name></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="66"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">err<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><name pos:line="6" pos:column="13">ENOMEM<pos:position pos:line="6" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="8" pos:column="3">conn<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">-&gt;<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="9">async<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">os_specific<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">=<pos:position pos:line="8" pos:column="28"/></operator> <operator pos:line="8" pos:column="29">(<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">void<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></operator><operator pos:line="8" pos:column="36">)<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="37">td<pos:position pos:line="8" pos:column="39"/></name></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">!<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">td<pos:position pos:line="9" pos:column="9"/></name></expr>)<pos:position pos:line="9" pos:column="10"/></condition><then pos:line="9" pos:column="10">
    <block type="pseudo"><goto pos:line="10" pos:column="5">goto <name pos:line="10" pos:column="10">errno_exit<pos:position pos:line="10" pos:column="20"/></name>;<pos:position pos:line="10" pos:column="21"/></goto></block></then></if>

  <expr_stmt><expr><name><name pos:line="12" pos:column="3">conn<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">async<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">.<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">port<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">port<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">conn<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">async<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">.<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">done<pos:position pos:line="13" pos:column="19"/></name></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">FALSE<pos:position pos:line="13" pos:column="27"/></name></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">conn<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">async<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">.<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">status<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">conn<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">async<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">.<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">dns<pos:position pos:line="15" pos:column="18"/></name></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <name pos:line="15" pos:column="21">NULL<pos:position pos:line="15" pos:column="25"/></name></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">td<pos:position pos:line="16" pos:column="5"/></name><operator pos:line="16" pos:column="5">-&gt;<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="7">thread_hnd<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">curl_thread_t_null<pos:position pos:line="16" pos:column="38"/></name></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><operator pos:line="18" pos:column="6">!<pos:position pos:line="18" pos:column="7"/></operator><call><name pos:line="18" pos:column="7">init_thread_sync_data<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">td<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">hostname<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">port<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">hints<pos:position pos:line="18" pos:column="54"/></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="56"/></condition><then pos:line="18" pos:column="56"> <block pos:line="18" pos:column="57">{
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">conn<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">async<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">.<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">os_specific<pos:position pos:line="19" pos:column="28"/></name></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">NULL<pos:position pos:line="19" pos:column="35"/></name></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">free<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><name pos:line="20" pos:column="10">td<pos:position pos:line="20" pos:column="12"/></name></expr></argument>)<pos:position pos:line="20" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="14"/></expr_stmt>
    <goto pos:line="21" pos:column="5">goto <name pos:line="21" pos:column="10">errno_exit<pos:position pos:line="21" pos:column="20"/></name>;<pos:position pos:line="21" pos:column="21"/></goto>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">free<pos:position pos:line="24" pos:column="7"/></name><argument_list pos:line="24" pos:column="7">(<argument><expr><name><name pos:line="24" pos:column="8">conn<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">async<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">.<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">hostname<pos:position pos:line="24" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">conn<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">async<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">.<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">hostname<pos:position pos:line="25" pos:column="23"/></name></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <call><name pos:line="25" pos:column="26">strdup<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">hostname<pos:position pos:line="25" pos:column="41"/></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><operator pos:line="26" pos:column="6">!<pos:position pos:line="26" pos:column="7"/></operator><name><name pos:line="26" pos:column="7">conn<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">async<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">.<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">hostname<pos:position pos:line="26" pos:column="27"/></name></name></expr>)<pos:position pos:line="26" pos:column="28"/></condition><then pos:line="26" pos:column="28">
    <block type="pseudo"><goto pos:line="27" pos:column="5">goto <name pos:line="27" pos:column="10">err_exit<pos:position pos:line="27" pos:column="18"/></name>;<pos:position pos:line="27" pos:column="19"/></goto></block></then></if>

  <comment type="block" pos:line="29" pos:column="3">/* The thread will set this to 1 when complete. */</comment>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">td<pos:position pos:line="30" pos:column="5"/></name><operator pos:line="30" pos:column="5">-&gt;<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="7">tsd<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">.<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">done<pos:position pos:line="30" pos:column="15"/></name></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>

<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef<pos:position pos:line="32" pos:column="7"/></cpp:directive> <name pos:line="32" pos:column="8">HAVE_GETADDRINFO<pos:position pos:line="32" pos:column="24"/></name></cpp:ifdef>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">td<pos:position pos:line="33" pos:column="5"/></name><operator pos:line="33" pos:column="5">-&gt;<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="7">thread_hnd<pos:position pos:line="33" pos:column="17"/></name></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <call><name pos:line="33" pos:column="20">Curl_thread_create<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">getaddrinfo_thread<pos:position pos:line="33" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="59">&amp;<pos:position pos:line="33" pos:column="64"/></operator><name><name pos:line="33" pos:column="60">td<pos:position pos:line="33" pos:column="62"/></name><operator pos:line="33" pos:column="62">-&gt;<pos:position pos:line="33" pos:column="67"/></operator><name pos:line="33" pos:column="64">tsd<pos:position pos:line="33" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="69"/></expr_stmt>
<cpp:else pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">else<pos:position pos:line="34" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">td<pos:position pos:line="35" pos:column="5"/></name><operator pos:line="35" pos:column="5">-&gt;<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="7">thread_hnd<pos:position pos:line="35" pos:column="17"/></name></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <call><name pos:line="35" pos:column="20">Curl_thread_create<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name pos:line="35" pos:column="39">gethostbyname_thread<pos:position pos:line="35" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="61">&amp;<pos:position pos:line="35" pos:column="66"/></operator><name><name pos:line="35" pos:column="62">td<pos:position pos:line="35" pos:column="64"/></name><operator pos:line="35" pos:column="64">-&gt;<pos:position pos:line="35" pos:column="69"/></operator><name pos:line="35" pos:column="66">tsd<pos:position pos:line="35" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="38" pos:column="3">if<condition pos:line="38" pos:column="5">(<expr><operator pos:line="38" pos:column="6">!<pos:position pos:line="38" pos:column="7"/></operator><name><name pos:line="38" pos:column="7">td<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">thread_hnd<pos:position pos:line="38" pos:column="21"/></name></name></expr>)<pos:position pos:line="38" pos:column="22"/></condition><then pos:line="38" pos:column="22"> <block pos:line="38" pos:column="23">{
    <comment type="block" pos:line="39" pos:column="5">/* The thread never started, so mark it as done here for proper cleanup. */</comment>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">td<pos:position pos:line="40" pos:column="7"/></name><operator pos:line="40" pos:column="7">-&gt;<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="9">tsd<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">.<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">done<pos:position pos:line="40" pos:column="17"/></name></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <literal type="number" pos:line="40" pos:column="20">1<pos:position pos:line="40" pos:column="21"/></literal></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">err<pos:position pos:line="41" pos:column="8"/></name> <operator pos:line="41" pos:column="9">=<pos:position pos:line="41" pos:column="10"/></operator> <name pos:line="41" pos:column="11">errno<pos:position pos:line="41" pos:column="16"/></name></expr>;<pos:position pos:line="41" pos:column="17"/></expr_stmt>
    <goto pos:line="42" pos:column="5">goto <name pos:line="42" pos:column="10">err_exit<pos:position pos:line="42" pos:column="18"/></name>;<pos:position pos:line="42" pos:column="19"/></goto>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <return pos:line="45" pos:column="3">return <expr><name pos:line="45" pos:column="10">TRUE<pos:position pos:line="45" pos:column="14"/></name></expr>;<pos:position pos:line="45" pos:column="15"/></return>

 <label><name pos:line="47" pos:column="2">err_exit<pos:position pos:line="47" pos:column="10"/></name>:<pos:position pos:line="47" pos:column="11"/></label>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">destroy_async_data<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><operator pos:line="48" pos:column="22">&amp;<pos:position pos:line="48" pos:column="27"/></operator><name><name pos:line="48" pos:column="23">conn<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">-&gt;<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="29">async<pos:position pos:line="48" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt>

 <label><name pos:line="50" pos:column="2">errno_exit<pos:position pos:line="50" pos:column="12"/></name>:<pos:position pos:line="50" pos:column="13"/></label>
  <expr_stmt><expr><name pos:line="51" pos:column="3">errno<pos:position pos:line="51" pos:column="8"/></name> <operator pos:line="51" pos:column="9">=<pos:position pos:line="51" pos:column="10"/></operator> <name pos:line="51" pos:column="11">err<pos:position pos:line="51" pos:column="14"/></name></expr>;<pos:position pos:line="51" pos:column="15"/></expr_stmt>
  <return pos:line="52" pos:column="3">return <expr><name pos:line="52" pos:column="10">FALSE<pos:position pos:line="52" pos:column="15"/></name></expr>;<pos:position pos:line="52" pos:column="16"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

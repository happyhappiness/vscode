<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_function_16954.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">GetLine<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">int<pos:position pos:line="2" pos:column="16"/></name></type> <name pos:line="2" pos:column="17">sockfd<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">buf<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="36">struct<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">connectdata<pos:position pos:line="2" pos:column="54"/></name></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">conn<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ssize_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">nread<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">read_rc<pos:position pos:line="5" pos:column="14"/></name><init pos:line="5" pos:column="14">=<expr><literal type="number" pos:line="5" pos:column="15">1<pos:position pos:line="5" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">ptr<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">UrlData<pos:position pos:line="7" pos:column="17"/></name></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">data<pos:position pos:line="7" pos:column="23"/></name><init pos:line="7" pos:column="23">=<expr><name><name pos:line="7" pos:column="24">conn<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">data<pos:position pos:line="7" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">ptr<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">=<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">buf<pos:position pos:line="9" pos:column="10"/></name></expr>;<pos:position pos:line="9" pos:column="11"/></expr_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* get us a full line, terminated with a newline */</comment>
  <for pos:line="12" pos:column="3">for<control pos:line="12" pos:column="6">(<init><expr><name pos:line="12" pos:column="7">nread<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></init>
      <condition><expr><operator pos:line="13" pos:column="7">(<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">nread<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">&lt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">BUFSIZE<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">)<pos:position pos:line="13" pos:column="22"/></operator> <operator pos:line="13" pos:column="23">&amp;&amp;<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="26">read_rc<pos:position pos:line="13" pos:column="33"/></name></expr>;<pos:position pos:line="13" pos:column="34"/></condition>
      <incr><expr><name pos:line="14" pos:column="7">nread<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">++<pos:position pos:line="14" pos:column="14"/></operator></expr><operator pos:line="14" pos:column="14">,<pos:position pos:line="14" pos:column="15"/></operator> <expr><name pos:line="14" pos:column="16">ptr<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">++<pos:position pos:line="14" pos:column="21"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="22"/></control> <block pos:line="14" pos:column="23">{
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><operator pos:line="15" pos:column="8">(<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="9">CURLE_OK<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">!=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">Curl_read<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">conn<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="37">sockfd<pos:position pos:line="15" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="45">ptr<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="50">1<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="53">&amp;<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="54">nread<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call><operator pos:line="15" pos:column="60">)<pos:position pos:line="15" pos:column="61"/></operator> <operator pos:line="15" pos:column="62">||<pos:position pos:line="15" pos:column="64"/></operator>
       <operator pos:line="16" pos:column="8">(<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">nread<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">&lt;=<pos:position pos:line="16" pos:column="20"/></operator> <literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal><operator pos:line="16" pos:column="19">)<pos:position pos:line="16" pos:column="20"/></operator> <operator pos:line="16" pos:column="21">||<pos:position pos:line="16" pos:column="23"/></operator>
       <operator pos:line="17" pos:column="8">(<pos:position pos:line="17" pos:column="9"/></operator><operator pos:line="17" pos:column="9">*<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">ptr<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">==<pos:position pos:line="17" pos:column="16"/></operator> <literal type="char" pos:line="17" pos:column="17">'\n'<pos:position pos:line="17" pos:column="21"/></literal><operator pos:line="17" pos:column="21">)<pos:position pos:line="17" pos:column="22"/></operator></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23">
      <block type="pseudo"><break pos:line="18" pos:column="7">break;<pos:position pos:line="18" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="19" pos:column="4"/></block></for>
  <expr_stmt><expr><operator pos:line="20" pos:column="3">*<pos:position pos:line="20" pos:column="4"/></operator><name pos:line="20" pos:column="4">ptr<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator><literal type="number" pos:line="20" pos:column="8">0<pos:position pos:line="20" pos:column="9"/></literal></expr>;<pos:position pos:line="20" pos:column="10"/></expr_stmt> <comment type="block" pos:line="20" pos:column="11">/* zero terminate */</comment>
  
  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name><name pos:line="22" pos:column="6">data<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">bits<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">.<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">verbose<pos:position pos:line="22" pos:column="24"/></name></name></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25"> <block pos:line="22" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">fputs<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><literal type="string" pos:line="23" pos:column="11">"&lt; "<pos:position pos:line="23" pos:column="18"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="17">data<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">err<pos:position pos:line="23" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">fwrite<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">buf<pos:position pos:line="24" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="17">1<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="20">nread<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="27">data<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">-&gt;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="33">err<pos:position pos:line="24" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">fputs<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><literal type="string" pos:line="25" pos:column="11">"\n"<pos:position pos:line="25" pos:column="15"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="17">data<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">err<pos:position pos:line="25" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>
  <return pos:line="27" pos:column="3">return <expr><ternary><condition><expr><name pos:line="27" pos:column="10">nread<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">&gt;<pos:position pos:line="27" pos:column="19"/></operator><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>?<pos:position pos:line="27" pos:column="18"/></condition><then><expr><name pos:line="27" pos:column="18">nread<pos:position pos:line="27" pos:column="23"/></name></expr></then><else pos:line="27" pos:column="23">:<expr><literal type="number" pos:line="27" pos:column="24">0<pos:position pos:line="27" pos:column="25"/></literal></expr></else></ternary></expr>;<pos:position pos:line="27" pos:column="26"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_407_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">res<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURL<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">curl<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">hd_src<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">hd<pos:position pos:line="6" pos:column="9"/></name></decl>;<pos:position pos:line="6" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">struct_stat<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">file_info<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLM<pos:position pos:line="8" pos:column="8"/></name> <modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">m<pos:position pos:line="8" pos:column="11"/></name> <init pos:line="8" pos:column="12">= <expr><name pos:line="8" pos:column="14">NULL<pos:position pos:line="8" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">ReadWriteSockets<pos:position pos:line="9" pos:column="26"/></name></name></type> <name pos:line="9" pos:column="27">sockets<pos:position pos:line="9" pos:column="34"/></name> <init pos:line="9" pos:column="35">= <expr><block pos:line="9" pos:column="37">{<expr><block pos:line="9" pos:column="38">{<expr><name pos:line="9" pos:column="39">NULL<pos:position pos:line="9" pos:column="43"/></name></expr>, <expr><literal type="number" pos:line="9" pos:column="45">0<pos:position pos:line="9" pos:column="46"/></literal></expr>, <expr><literal type="number" pos:line="9" pos:column="48">0<pos:position pos:line="9" pos:column="49"/></literal></expr>}<pos:position pos:line="9" pos:column="50"/></block></expr>, <expr><block pos:line="9" pos:column="52">{<expr><name pos:line="9" pos:column="53">NULL<pos:position pos:line="9" pos:column="57"/></name></expr>, <expr><literal type="number" pos:line="9" pos:column="59">0<pos:position pos:line="9" pos:column="60"/></literal></expr>, <expr><literal type="number" pos:line="9" pos:column="62">0<pos:position pos:line="9" pos:column="63"/></literal></expr>}<pos:position pos:line="9" pos:column="64"/></block></expr>}<pos:position pos:line="9" pos:column="65"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="66"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">timeval<pos:position pos:line="10" pos:column="17"/></name></name></type> <name pos:line="10" pos:column="18">timeout<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><block pos:line="10" pos:column="28">{<expr><operator pos:line="10" pos:column="29">-<pos:position pos:line="10" pos:column="30"/></operator><literal type="number" pos:line="10" pos:column="30">1<pos:position pos:line="10" pos:column="31"/></literal></expr>, <expr><literal type="number" pos:line="10" pos:column="33">0<pos:position pos:line="10" pos:column="34"/></literal></expr>}<pos:position pos:line="10" pos:column="35"/></block></expr></init></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">success<pos:position pos:line="11" pos:column="14"/></name> <init pos:line="11" pos:column="15">= <expr><literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">start_test_timing<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">()<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">libtest_arg3<pos:position pos:line="15" pos:column="19"/></name></expr>)<pos:position pos:line="15" pos:column="20"/></condition><then pos:line="15" pos:column="20"> <block pos:line="15" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">fprintf<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">stderr<pos:position pos:line="16" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="21">"Usage: lib582 [url] [filename] [username]\n"<pos:position pos:line="16" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">TEST_ERR_USAGE<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="20" pos:column="3">hd_src<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <call><name pos:line="20" pos:column="12">fopen<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">libtest_arg2<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="32">"rb"<pos:position pos:line="20" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><name pos:line="21" pos:column="6">NULL<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">==<pos:position pos:line="21" pos:column="13"/></operator> <name pos:line="21" pos:column="14">hd_src<pos:position pos:line="21" pos:column="20"/></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21"> <block pos:line="21" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">fprintf<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">stderr<pos:position pos:line="22" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="21">"fopen() failed with error: %d (%s)\n"<pos:position pos:line="22" pos:column="59"/></literal></expr></argument>,
            <argument><expr><name pos:line="23" pos:column="13">errno<pos:position pos:line="23" pos:column="18"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="20">strerror<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">errno<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">fprintf<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">stderr<pos:position pos:line="24" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="21">"Error opening file: (%s)\n"<pos:position pos:line="24" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">libtest_arg2<pos:position pos:line="24" pos:column="63"/></name></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">TEST_ERR_FOPEN<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="28" pos:column="3">/* get the file size of the local file */</comment>
  <expr_stmt><expr><name pos:line="29" pos:column="3">hd<pos:position pos:line="29" pos:column="5"/></name> <operator pos:line="29" pos:column="6">=<pos:position pos:line="29" pos:column="7"/></operator> <call><name pos:line="29" pos:column="8">fstat<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><call><name pos:line="29" pos:column="14">fileno<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">hd_src<pos:position pos:line="29" pos:column="27"/></name></expr></argument>)<pos:position pos:line="29" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="29" pos:column="30">&amp;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="31">file_info<pos:position pos:line="29" pos:column="40"/></name></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><name pos:line="30" pos:column="6">hd<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">==<pos:position pos:line="30" pos:column="11"/></operator> <operator pos:line="30" pos:column="12">-<pos:position pos:line="30" pos:column="13"/></operator><literal type="number" pos:line="30" pos:column="13">1<pos:position pos:line="30" pos:column="14"/></literal></expr>)<pos:position pos:line="30" pos:column="15"/></condition><then pos:line="30" pos:column="15"> <block pos:line="30" pos:column="16">{
    <comment type="block" pos:line="31" pos:column="5">/* can't open file, bail out */</comment>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">fprintf<pos:position pos:line="32" pos:column="12"/></name><argument_list pos:line="32" pos:column="12">(<argument><expr><name pos:line="32" pos:column="13">stderr<pos:position pos:line="32" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="21">"fstat() failed with error: %d (%s)\n"<pos:position pos:line="32" pos:column="59"/></literal></expr></argument>,
            <argument><expr><name pos:line="33" pos:column="13">errno<pos:position pos:line="33" pos:column="18"/></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="20">strerror<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name pos:line="33" pos:column="29">errno<pos:position pos:line="33" pos:column="34"/></name></expr></argument>)<pos:position pos:line="33" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">fprintf<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">stderr<pos:position pos:line="34" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="21">"ERROR: cannot open file (%s)\n"<pos:position pos:line="34" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="55">libtest_arg2<pos:position pos:line="34" pos:column="67"/></name></expr></argument>)<pos:position pos:line="34" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">fclose<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">(<argument><expr><name pos:line="35" pos:column="12">hd_src<pos:position pos:line="35" pos:column="18"/></name></expr></argument>)<pos:position pos:line="35" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="20"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">TEST_ERR_FSTAT<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">fprintf<pos:position pos:line="38" pos:column="10"/></name><argument_list pos:line="38" pos:column="10">(<argument><expr><name pos:line="38" pos:column="11">stderr<pos:position pos:line="38" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="19">"Set to upload %d bytes\n"<pos:position pos:line="38" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="38" pos:column="47">(<pos:position pos:line="38" pos:column="48"/></operator><name pos:line="38" pos:column="48">int<pos:position pos:line="38" pos:column="51"/></name><operator pos:line="38" pos:column="51">)<pos:position pos:line="38" pos:column="52"/></operator><name><name pos:line="38" pos:column="52">file_info<pos:position pos:line="38" pos:column="61"/></name><operator pos:line="38" pos:column="61">.<pos:position pos:line="38" pos:column="62"/></operator><name pos:line="38" pos:column="62">st_size<pos:position pos:line="38" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="71"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">res_global_init<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><name pos:line="40" pos:column="19">CURL_GLOBAL_ALL<pos:position pos:line="40" pos:column="34"/></name></expr></argument>)<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>
  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><name pos:line="41" pos:column="6">res<pos:position pos:line="41" pos:column="9"/></name></expr>)<pos:position pos:line="41" pos:column="10"/></condition><then pos:line="41" pos:column="10"> <block pos:line="41" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">fclose<pos:position pos:line="42" pos:column="11"/></name><argument_list pos:line="42" pos:column="11">(<argument><expr><name pos:line="42" pos:column="12">hd_src<pos:position pos:line="42" pos:column="18"/></name></expr></argument>)<pos:position pos:line="42" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="20"/></expr_stmt>
    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">res<pos:position pos:line="43" pos:column="15"/></name></expr>;<pos:position pos:line="43" pos:column="16"/></return>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="46" pos:column="3">easy_init<pos:position pos:line="46" pos:column="12"/></name><argument_list pos:line="46" pos:column="12">(<argument><expr><name pos:line="46" pos:column="13">curl<pos:position pos:line="46" pos:column="17"/></name></expr></argument>)<pos:position pos:line="46" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="48" pos:column="3">/* enable uploading */</comment>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">easy_setopt<pos:position pos:line="49" pos:column="14"/></name><argument_list pos:line="49" pos:column="14">(<argument><expr><name pos:line="49" pos:column="15">curl<pos:position pos:line="49" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="21">CURLOPT_UPLOAD<pos:position pos:line="49" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="37">1L<pos:position pos:line="49" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="51" pos:column="3">/* specify target */</comment>
  <expr_stmt><expr><call><name pos:line="52" pos:column="3">easy_setopt<pos:position pos:line="52" pos:column="14"/></name><argument_list pos:line="52" pos:column="14">(<argument><expr><name pos:line="52" pos:column="15">curl<pos:position pos:line="52" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="21">CURLOPT_URL<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="34">URL<pos:position pos:line="52" pos:column="37"/></name></expr></argument>)<pos:position pos:line="52" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt>

  <comment type="block" pos:line="54" pos:column="3">/* go verbose */</comment>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">easy_setopt<pos:position pos:line="55" pos:column="14"/></name><argument_list pos:line="55" pos:column="14">(<argument><expr><name pos:line="55" pos:column="15">curl<pos:position pos:line="55" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="21">CURLOPT_VERBOSE<pos:position pos:line="55" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="38">1L<pos:position pos:line="55" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="42"/></expr_stmt>

  <comment type="block" pos:line="57" pos:column="3">/* now specify which file to upload */</comment>
  <expr_stmt><expr><call><name pos:line="58" pos:column="3">easy_setopt<pos:position pos:line="58" pos:column="14"/></name><argument_list pos:line="58" pos:column="14">(<argument><expr><name pos:line="58" pos:column="15">curl<pos:position pos:line="58" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="21">CURLOPT_READDATA<pos:position pos:line="58" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="39">hd_src<pos:position pos:line="58" pos:column="45"/></name></expr></argument>)<pos:position pos:line="58" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="47"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="60" pos:column="3">easy_setopt<pos:position pos:line="60" pos:column="14"/></name><argument_list pos:line="60" pos:column="14">(<argument><expr><name pos:line="60" pos:column="15">curl<pos:position pos:line="60" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="21">CURLOPT_USERPWD<pos:position pos:line="60" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="38">libtest_arg3<pos:position pos:line="60" pos:column="50"/></name></expr></argument>)<pos:position pos:line="60" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="61" pos:column="3">easy_setopt<pos:position pos:line="61" pos:column="14"/></name><argument_list pos:line="61" pos:column="14">(<argument><expr><name pos:line="61" pos:column="15">curl<pos:position pos:line="61" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="21">CURLOPT_SSH_PUBLIC_KEYFILE<pos:position pos:line="61" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="49">"curl_client_key.pub"<pos:position pos:line="61" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="62" pos:column="3">easy_setopt<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">(<argument><expr><name pos:line="62" pos:column="15">curl<pos:position pos:line="62" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="21">CURLOPT_SSH_PRIVATE_KEYFILE<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="50">"curl_client_key"<pos:position pos:line="62" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="69"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="64" pos:column="3">easy_setopt<pos:position pos:line="64" pos:column="14"/></name><argument_list pos:line="64" pos:column="14">(<argument><expr><name pos:line="64" pos:column="15">curl<pos:position pos:line="64" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="21">CURLOPT_INFILESIZE_LARGE<pos:position pos:line="64" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="47">(<pos:position pos:line="64" pos:column="48"/></operator><name pos:line="64" pos:column="48">curl_off_t<pos:position pos:line="64" pos:column="58"/></name><operator pos:line="64" pos:column="58">)<pos:position pos:line="64" pos:column="59"/></operator><name><name pos:line="64" pos:column="59">file_info<pos:position pos:line="64" pos:column="68"/></name><operator pos:line="64" pos:column="68">.<pos:position pos:line="64" pos:column="69"/></operator><name pos:line="64" pos:column="69">st_size<pos:position pos:line="64" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="78"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="66" pos:column="3">multi_init<pos:position pos:line="66" pos:column="13"/></name><argument_list pos:line="66" pos:column="13">(<argument><expr><name pos:line="66" pos:column="14">m<pos:position pos:line="66" pos:column="15"/></name></expr></argument>)<pos:position pos:line="66" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="68" pos:column="3">multi_setopt<pos:position pos:line="68" pos:column="15"/></name><argument_list pos:line="68" pos:column="15">(<argument><expr><name pos:line="68" pos:column="16">m<pos:position pos:line="68" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="19">CURLMOPT_SOCKETFUNCTION<pos:position pos:line="68" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="44">curlSocketCallback<pos:position pos:line="68" pos:column="62"/></name></expr></argument>)<pos:position pos:line="68" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="69" pos:column="3">multi_setopt<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><name pos:line="69" pos:column="16">m<pos:position pos:line="69" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="19">CURLMOPT_SOCKETDATA<pos:position pos:line="69" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="40">&amp;<pos:position pos:line="69" pos:column="45"/></operator><name pos:line="69" pos:column="41">sockets<pos:position pos:line="69" pos:column="48"/></name></expr></argument>)<pos:position pos:line="69" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="71" pos:column="3">multi_setopt<pos:position pos:line="71" pos:column="15"/></name><argument_list pos:line="71" pos:column="15">(<argument><expr><name pos:line="71" pos:column="16">m<pos:position pos:line="71" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="19">CURLMOPT_TIMERFUNCTION<pos:position pos:line="71" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="43">curlTimerCallback<pos:position pos:line="71" pos:column="60"/></name></expr></argument>)<pos:position pos:line="71" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">multi_setopt<pos:position pos:line="72" pos:column="15"/></name><argument_list pos:line="72" pos:column="15">(<argument><expr><name pos:line="72" pos:column="16">m<pos:position pos:line="72" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="19">CURLMOPT_TIMERDATA<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="39">&amp;<pos:position pos:line="72" pos:column="44"/></operator><name pos:line="72" pos:column="40">timeout<pos:position pos:line="72" pos:column="47"/></name></expr></argument>)<pos:position pos:line="72" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="49"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="74" pos:column="3">multi_add_handle<pos:position pos:line="74" pos:column="19"/></name><argument_list pos:line="74" pos:column="19">(<argument><expr><name pos:line="74" pos:column="20">m<pos:position pos:line="74" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="23">curl<pos:position pos:line="74" pos:column="27"/></name></expr></argument>)<pos:position pos:line="74" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="29"/></expr_stmt>

  <while pos:line="76" pos:column="3">while<condition pos:line="76" pos:column="8">(<expr><operator pos:line="76" pos:column="9">!<pos:position pos:line="76" pos:column="10"/></operator><call><name pos:line="76" pos:column="10">checkForCompletion<pos:position pos:line="76" pos:column="28"/></name><argument_list pos:line="76" pos:column="28">(<argument><expr><name pos:line="76" pos:column="29">m<pos:position pos:line="76" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="32">&amp;<pos:position pos:line="76" pos:column="37"/></operator><name pos:line="76" pos:column="33">success<pos:position pos:line="76" pos:column="40"/></name></expr></argument>)<pos:position pos:line="76" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="42"/></condition> <block pos:line="76" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="77" pos:column="5">fd_set<pos:position pos:line="77" pos:column="11"/></name></type> <name pos:line="77" pos:column="12">readSet<pos:position pos:line="77" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="77" pos:column="21">writeSet<pos:position pos:line="77" pos:column="29"/></name></decl>;<pos:position pos:line="77" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="78" pos:column="5">curl_socket_t<pos:position pos:line="78" pos:column="18"/></name></type> <name pos:line="78" pos:column="19">maxFd<pos:position pos:line="78" pos:column="24"/></name> <init pos:line="78" pos:column="25">= <expr><literal type="number" pos:line="78" pos:column="27">0<pos:position pos:line="78" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="78" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="79" pos:column="5">struct<pos:position pos:line="79" pos:column="11"/></name> <name pos:line="79" pos:column="12">timeval<pos:position pos:line="79" pos:column="19"/></name></name></type> <name pos:line="79" pos:column="20">tv<pos:position pos:line="79" pos:column="22"/></name> <init pos:line="79" pos:column="23">= <expr><block pos:line="79" pos:column="25">{<expr><literal type="number" pos:line="79" pos:column="26">10<pos:position pos:line="79" pos:column="28"/></literal></expr>, <expr><literal type="number" pos:line="79" pos:column="30">0<pos:position pos:line="79" pos:column="31"/></literal></expr>}<pos:position pos:line="79" pos:column="32"/></block></expr></init></decl>;<pos:position pos:line="79" pos:column="33"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="81" pos:column="5">FD_ZERO<pos:position pos:line="81" pos:column="12"/></name><argument_list pos:line="81" pos:column="12">(<argument><expr><operator pos:line="81" pos:column="13">&amp;<pos:position pos:line="81" pos:column="18"/></operator><name pos:line="81" pos:column="14">readSet<pos:position pos:line="81" pos:column="21"/></name></expr></argument>)<pos:position pos:line="81" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">FD_ZERO<pos:position pos:line="82" pos:column="12"/></name><argument_list pos:line="82" pos:column="12">(<argument><expr><operator pos:line="82" pos:column="13">&amp;<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="14">writeSet<pos:position pos:line="82" pos:column="22"/></name></expr></argument>)<pos:position pos:line="82" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">updateFdSet<pos:position pos:line="83" pos:column="16"/></name><argument_list pos:line="83" pos:column="16">(<argument><expr><operator pos:line="83" pos:column="17">&amp;<pos:position pos:line="83" pos:column="22"/></operator><name><name pos:line="83" pos:column="18">sockets<pos:position pos:line="83" pos:column="25"/></name><operator pos:line="83" pos:column="25">.<pos:position pos:line="83" pos:column="26"/></operator><name pos:line="83" pos:column="26">read<pos:position pos:line="83" pos:column="30"/></name></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="32">&amp;<pos:position pos:line="83" pos:column="37"/></operator><name pos:line="83" pos:column="33">readSet<pos:position pos:line="83" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="42">&amp;<pos:position pos:line="83" pos:column="47"/></operator><name pos:line="83" pos:column="43">maxFd<pos:position pos:line="83" pos:column="48"/></name></expr></argument>)<pos:position pos:line="83" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">updateFdSet<pos:position pos:line="84" pos:column="16"/></name><argument_list pos:line="84" pos:column="16">(<argument><expr><operator pos:line="84" pos:column="17">&amp;<pos:position pos:line="84" pos:column="22"/></operator><name><name pos:line="84" pos:column="18">sockets<pos:position pos:line="84" pos:column="25"/></name><operator pos:line="84" pos:column="25">.<pos:position pos:line="84" pos:column="26"/></operator><name pos:line="84" pos:column="26">write<pos:position pos:line="84" pos:column="31"/></name></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="33">&amp;<pos:position pos:line="84" pos:column="38"/></operator><name pos:line="84" pos:column="34">writeSet<pos:position pos:line="84" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="44">&amp;<pos:position pos:line="84" pos:column="49"/></operator><name pos:line="84" pos:column="45">maxFd<pos:position pos:line="84" pos:column="50"/></name></expr></argument>)<pos:position pos:line="84" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="52"/></expr_stmt>

    <if pos:line="86" pos:column="5">if<condition pos:line="86" pos:column="7">(<expr><name><name pos:line="86" pos:column="8">timeout<pos:position pos:line="86" pos:column="15"/></name><operator pos:line="86" pos:column="15">.<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="16">tv_sec<pos:position pos:line="86" pos:column="22"/></name></name> <operator pos:line="86" pos:column="23">!=<pos:position pos:line="86" pos:column="25"/></operator> <operator pos:line="86" pos:column="26">-<pos:position pos:line="86" pos:column="27"/></operator><literal type="number" pos:line="86" pos:column="27">1<pos:position pos:line="86" pos:column="28"/></literal></expr>)<pos:position pos:line="86" pos:column="29"/></condition><then pos:line="86" pos:column="29"> <block pos:line="86" pos:column="30">{
      <decl_stmt><decl><type><name pos:line="87" pos:column="7">int<pos:position pos:line="87" pos:column="10"/></name></type> <name pos:line="87" pos:column="11">usTimeout<pos:position pos:line="87" pos:column="20"/></name> <init pos:line="87" pos:column="21">= <expr><call><name pos:line="87" pos:column="23">getMicroSecondTimeout<pos:position pos:line="87" pos:column="44"/></name><argument_list pos:line="87" pos:column="44">(<argument><expr><operator pos:line="87" pos:column="45">&amp;<pos:position pos:line="87" pos:column="50"/></operator><name pos:line="87" pos:column="46">timeout<pos:position pos:line="87" pos:column="53"/></name></expr></argument>)<pos:position pos:line="87" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="87" pos:column="55"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="88" pos:column="7">tv<pos:position pos:line="88" pos:column="9"/></name><operator pos:line="88" pos:column="9">.<pos:position pos:line="88" pos:column="10"/></operator><name pos:line="88" pos:column="10">tv_sec<pos:position pos:line="88" pos:column="16"/></name></name> <operator pos:line="88" pos:column="17">=<pos:position pos:line="88" pos:column="18"/></operator> <name pos:line="88" pos:column="19">usTimeout<pos:position pos:line="88" pos:column="28"/></name> <operator pos:line="88" pos:column="29">/<pos:position pos:line="88" pos:column="30"/></operator> <literal type="number" pos:line="88" pos:column="31">1000000<pos:position pos:line="88" pos:column="38"/></literal></expr>;<pos:position pos:line="88" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="89" pos:column="7">tv<pos:position pos:line="89" pos:column="9"/></name><operator pos:line="89" pos:column="9">.<pos:position pos:line="89" pos:column="10"/></operator><name pos:line="89" pos:column="10">tv_usec<pos:position pos:line="89" pos:column="17"/></name></name> <operator pos:line="89" pos:column="18">=<pos:position pos:line="89" pos:column="19"/></operator> <name pos:line="89" pos:column="20">usTimeout<pos:position pos:line="89" pos:column="29"/></name> <operator pos:line="89" pos:column="30">%<pos:position pos:line="89" pos:column="31"/></operator> <literal type="number" pos:line="89" pos:column="32">1000000<pos:position pos:line="89" pos:column="39"/></literal></expr>;<pos:position pos:line="89" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then>
    <elseif pos:line="91" pos:column="5">else <if pos:line="91" pos:column="10">if<condition pos:line="91" pos:column="12">(<expr><name pos:line="91" pos:column="13">maxFd<pos:position pos:line="91" pos:column="18"/></name> <operator pos:line="91" pos:column="19">&lt;=<pos:position pos:line="91" pos:column="24"/></operator> <literal type="number" pos:line="91" pos:column="22">0<pos:position pos:line="91" pos:column="23"/></literal></expr>)<pos:position pos:line="91" pos:column="24"/></condition><then pos:line="91" pos:column="24"> <block pos:line="91" pos:column="25">{
      <expr_stmt><expr><name><name pos:line="92" pos:column="7">tv<pos:position pos:line="92" pos:column="9"/></name><operator pos:line="92" pos:column="9">.<pos:position pos:line="92" pos:column="10"/></operator><name pos:line="92" pos:column="10">tv_sec<pos:position pos:line="92" pos:column="16"/></name></name> <operator pos:line="92" pos:column="17">=<pos:position pos:line="92" pos:column="18"/></operator> <literal type="number" pos:line="92" pos:column="19">0<pos:position pos:line="92" pos:column="20"/></literal></expr>;<pos:position pos:line="92" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="93" pos:column="7">tv<pos:position pos:line="93" pos:column="9"/></name><operator pos:line="93" pos:column="9">.<pos:position pos:line="93" pos:column="10"/></operator><name pos:line="93" pos:column="10">tv_usec<pos:position pos:line="93" pos:column="17"/></name></name> <operator pos:line="93" pos:column="18">=<pos:position pos:line="93" pos:column="19"/></operator> <literal type="number" pos:line="93" pos:column="20">100000<pos:position pos:line="93" pos:column="26"/></literal></expr>;<pos:position pos:line="93" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="96" pos:column="5">select_test<pos:position pos:line="96" pos:column="16"/></name><argument_list pos:line="96" pos:column="16">(<argument><expr><operator pos:line="96" pos:column="17">(<pos:position pos:line="96" pos:column="18"/></operator><name pos:line="96" pos:column="18">int<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">)<pos:position pos:line="96" pos:column="22"/></operator><name pos:line="96" pos:column="22">maxFd<pos:position pos:line="96" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="29">&amp;<pos:position pos:line="96" pos:column="34"/></operator><name pos:line="96" pos:column="30">readSet<pos:position pos:line="96" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="39">&amp;<pos:position pos:line="96" pos:column="44"/></operator><name pos:line="96" pos:column="40">writeSet<pos:position pos:line="96" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="50">NULL<pos:position pos:line="96" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="56">&amp;<pos:position pos:line="96" pos:column="61"/></operator><name pos:line="96" pos:column="57">tv<pos:position pos:line="96" pos:column="59"/></name></expr></argument>)<pos:position pos:line="96" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="61"/></expr_stmt>

    <comment type="block" pos:line="98" pos:column="5">/* Check the sockets for reading / writing */</comment>
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">checkFdSet<pos:position pos:line="99" pos:column="15"/></name><argument_list pos:line="99" pos:column="15">(<argument><expr><name pos:line="99" pos:column="16">m<pos:position pos:line="99" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="19">&amp;<pos:position pos:line="99" pos:column="24"/></operator><name><name pos:line="99" pos:column="20">sockets<pos:position pos:line="99" pos:column="27"/></name><operator pos:line="99" pos:column="27">.<pos:position pos:line="99" pos:column="28"/></operator><name pos:line="99" pos:column="28">read<pos:position pos:line="99" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="34">&amp;<pos:position pos:line="99" pos:column="39"/></operator><name pos:line="99" pos:column="35">readSet<pos:position pos:line="99" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="44">CURL_CSELECT_IN<pos:position pos:line="99" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="61">"read"<pos:position pos:line="99" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="100" pos:column="5">checkFdSet<pos:position pos:line="100" pos:column="15"/></name><argument_list pos:line="100" pos:column="15">(<argument><expr><name pos:line="100" pos:column="16">m<pos:position pos:line="100" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="19">&amp;<pos:position pos:line="100" pos:column="24"/></operator><name><name pos:line="100" pos:column="20">sockets<pos:position pos:line="100" pos:column="27"/></name><operator pos:line="100" pos:column="27">.<pos:position pos:line="100" pos:column="28"/></operator><name pos:line="100" pos:column="28">write<pos:position pos:line="100" pos:column="33"/></name></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="35">&amp;<pos:position pos:line="100" pos:column="40"/></operator><name pos:line="100" pos:column="36">writeSet<pos:position pos:line="100" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="46">CURL_CSELECT_OUT<pos:position pos:line="100" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="64">"write"<pos:position pos:line="100" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="73"/></expr_stmt>

    <if pos:line="102" pos:column="5">if<condition pos:line="102" pos:column="7">(<expr><name><name pos:line="102" pos:column="8">timeout<pos:position pos:line="102" pos:column="15"/></name><operator pos:line="102" pos:column="15">.<pos:position pos:line="102" pos:column="16"/></operator><name pos:line="102" pos:column="16">tv_sec<pos:position pos:line="102" pos:column="22"/></name></name> <operator pos:line="102" pos:column="23">!=<pos:position pos:line="102" pos:column="25"/></operator> <operator pos:line="102" pos:column="26">-<pos:position pos:line="102" pos:column="27"/></operator><literal type="number" pos:line="102" pos:column="27">1<pos:position pos:line="102" pos:column="28"/></literal> <operator pos:line="102" pos:column="29">&amp;&amp;<pos:position pos:line="102" pos:column="39"/></operator> <call><name pos:line="102" pos:column="32">getMicroSecondTimeout<pos:position pos:line="102" pos:column="53"/></name><argument_list pos:line="102" pos:column="53">(<argument><expr><operator pos:line="102" pos:column="54">&amp;<pos:position pos:line="102" pos:column="59"/></operator><name pos:line="102" pos:column="55">timeout<pos:position pos:line="102" pos:column="62"/></name></expr></argument>)<pos:position pos:line="102" pos:column="63"/></argument_list></call> <operator pos:line="102" pos:column="64">==<pos:position pos:line="102" pos:column="66"/></operator> <literal type="number" pos:line="102" pos:column="67">0<pos:position pos:line="102" pos:column="68"/></literal></expr>)<pos:position pos:line="102" pos:column="69"/></condition><then pos:line="102" pos:column="69"> <block pos:line="102" pos:column="70">{
      <comment type="block" pos:line="103" pos:column="7">/* Curl's timer has elapsed. */</comment>
      <expr_stmt><expr><call><name pos:line="104" pos:column="7">notifyCurl<pos:position pos:line="104" pos:column="17"/></name><argument_list pos:line="104" pos:column="17">(<argument><expr><name pos:line="104" pos:column="18">m<pos:position pos:line="104" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="21">CURL_SOCKET_TIMEOUT<pos:position pos:line="104" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="42">0<pos:position pos:line="104" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="45">"timeout"<pos:position pos:line="104" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="105" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="107" pos:column="5">abort_on_test_timeout<pos:position pos:line="107" pos:column="26"/></name><argument_list pos:line="107" pos:column="26">()<pos:position pos:line="107" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="108" pos:column="4"/></block></while>

  <if pos:line="110" pos:column="3">if<condition pos:line="110" pos:column="5">(<expr><operator pos:line="110" pos:column="6">!<pos:position pos:line="110" pos:column="7"/></operator><name pos:line="110" pos:column="7">success<pos:position pos:line="110" pos:column="14"/></name></expr>)<pos:position pos:line="110" pos:column="15"/></condition><then pos:line="110" pos:column="15"> <block pos:line="110" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="111" pos:column="5">fprintf<pos:position pos:line="111" pos:column="12"/></name><argument_list pos:line="111" pos:column="12">(<argument><expr><name pos:line="111" pos:column="13">stderr<pos:position pos:line="111" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="21">"Error uploading file.\n"<pos:position pos:line="111" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="112" pos:column="5">res<pos:position pos:line="112" pos:column="8"/></name> <operator pos:line="112" pos:column="9">=<pos:position pos:line="112" pos:column="10"/></operator> <name pos:line="112" pos:column="11">TEST_ERR_MAJOR_BAD<pos:position pos:line="112" pos:column="29"/></name></expr>;<pos:position pos:line="112" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="113" pos:column="4"/></block></then></if>

<label><name pos:line="115" pos:column="1">test_cleanup<pos:position pos:line="115" pos:column="13"/></name>:<pos:position pos:line="115" pos:column="14"/></label>

  <comment type="block" pos:line="117" pos:column="3">/* proper cleanup sequence - type PB */</comment>

  <expr_stmt><expr><call><name pos:line="119" pos:column="3">curl_multi_remove_handle<pos:position pos:line="119" pos:column="27"/></name><argument_list pos:line="119" pos:column="27">(<argument><expr><name pos:line="119" pos:column="28">m<pos:position pos:line="119" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="31">curl<pos:position pos:line="119" pos:column="35"/></name></expr></argument>)<pos:position pos:line="119" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="120" pos:column="3">curl_easy_cleanup<pos:position pos:line="120" pos:column="20"/></name><argument_list pos:line="120" pos:column="20">(<argument><expr><name pos:line="120" pos:column="21">curl<pos:position pos:line="120" pos:column="25"/></name></expr></argument>)<pos:position pos:line="120" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="121" pos:column="3">curl_multi_cleanup<pos:position pos:line="121" pos:column="21"/></name><argument_list pos:line="121" pos:column="21">(<argument><expr><name pos:line="121" pos:column="22">m<pos:position pos:line="121" pos:column="23"/></name></expr></argument>)<pos:position pos:line="121" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="122" pos:column="3">curl_global_cleanup<pos:position pos:line="122" pos:column="22"/></name><argument_list pos:line="122" pos:column="22">()<pos:position pos:line="122" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="124" pos:column="3">/* close the local file */</comment>
  <expr_stmt><expr><call><name pos:line="125" pos:column="3">fclose<pos:position pos:line="125" pos:column="9"/></name><argument_list pos:line="125" pos:column="9">(<argument><expr><name pos:line="125" pos:column="10">hd_src<pos:position pos:line="125" pos:column="16"/></name></expr></argument>)<pos:position pos:line="125" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="18"/></expr_stmt>

  <comment type="block" pos:line="127" pos:column="3">/* free local memory */</comment>
  <expr_stmt><expr><call><name pos:line="128" pos:column="3">free<pos:position pos:line="128" pos:column="7"/></name><argument_list pos:line="128" pos:column="7">(<argument><expr><name><name pos:line="128" pos:column="8">sockets<pos:position pos:line="128" pos:column="15"/></name><operator pos:line="128" pos:column="15">.<pos:position pos:line="128" pos:column="16"/></operator><name pos:line="128" pos:column="16">read<pos:position pos:line="128" pos:column="20"/></name><operator pos:line="128" pos:column="20">.<pos:position pos:line="128" pos:column="21"/></operator><name pos:line="128" pos:column="21">sockets<pos:position pos:line="128" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="129" pos:column="3">free<pos:position pos:line="129" pos:column="7"/></name><argument_list pos:line="129" pos:column="7">(<argument><expr><name><name pos:line="129" pos:column="8">sockets<pos:position pos:line="129" pos:column="15"/></name><operator pos:line="129" pos:column="15">.<pos:position pos:line="129" pos:column="16"/></operator><name pos:line="129" pos:column="16">write<pos:position pos:line="129" pos:column="21"/></name><operator pos:line="129" pos:column="21">.<pos:position pos:line="129" pos:column="22"/></operator><name pos:line="129" pos:column="22">sockets<pos:position pos:line="129" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="31"/></expr_stmt>

  <return pos:line="131" pos:column="3">return <expr><name pos:line="131" pos:column="10">res<pos:position pos:line="131" pos:column="13"/></name></expr>;<pos:position pos:line="131" pos:column="14"/></return>
}<pos:position pos:line="132" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_551.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_easy_statemach<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">connectdata<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">conn<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">curl_socket_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">sock<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><name><name pos:line="3" pos:column="24">conn<pos:position pos:line="3" pos:column="28"/></name><operator pos:line="3" pos:column="28">-&gt;<pos:position pos:line="3" pos:column="33"/></operator><name pos:line="3" pos:column="30">sock<pos:position pos:line="3" pos:column="34"/></name><index pos:line="3" pos:column="34">[<expr><name pos:line="3" pos:column="35">FIRSTSOCKET<pos:position pos:line="3" pos:column="46"/></name></expr>]<pos:position pos:line="3" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">rc<pos:position pos:line="4" pos:column="9"/></name></decl>;<pos:position pos:line="4" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">SessionHandle<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">data<pos:position pos:line="5" pos:column="29"/></name><init pos:line="5" pos:column="29">=<expr><name><name pos:line="5" pos:column="30">conn<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">-&gt;<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="36">data<pos:position pos:line="5" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">FTP<pos:position pos:line="6" pos:column="13"/></name></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">ftp<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name><name pos:line="6" pos:column="21">conn<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">proto<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">.<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">ftp<pos:position pos:line="6" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">result<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">CURLE_OK<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>

  <while pos:line="9" pos:column="3">while<condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">ftp<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">state<pos:position pos:line="9" pos:column="19"/></name></name> <operator pos:line="9" pos:column="20">!=<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="23">FTP_STOP<pos:position pos:line="9" pos:column="31"/></name></expr>)<pos:position pos:line="9" pos:column="32"/></condition> <block pos:line="9" pos:column="33">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">long<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">timeout_ms<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><call><name pos:line="10" pos:column="23">ftp_state_timeout<pos:position pos:line="10" pos:column="40"/></name><argument_list pos:line="10" pos:column="40">(<argument><expr><name pos:line="10" pos:column="41">conn<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="47"/></decl_stmt>

    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">(<expr><name pos:line="12" pos:column="8">timeout_ms<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">&lt;=<pos:position pos:line="12" pos:column="24"/></operator><literal type="number" pos:line="12" pos:column="21">0<pos:position pos:line="12" pos:column="22"/></literal></expr> )<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24"> <block pos:line="12" pos:column="25">{
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">failf<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">data<pos:position pos:line="13" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="19">"FTP response timeout"<pos:position pos:line="13" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
      <return pos:line="14" pos:column="7">return <expr><name pos:line="14" pos:column="14">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="14" pos:column="38"/></name></expr>;<pos:position pos:line="14" pos:column="39"/></return> <comment type="block" pos:line="14" pos:column="40">/* already too little time */</comment>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">rc<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">Curl_select<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><ternary><condition><expr><name><name pos:line="17" pos:column="22">ftp<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">sendleft<pos:position pos:line="17" pos:column="35"/></name></name></expr>?<pos:position pos:line="17" pos:column="36"/></condition><then><expr><name pos:line="17" pos:column="36">CURL_SOCKET_BAD<pos:position pos:line="17" pos:column="51"/></name></expr></then><else pos:line="17" pos:column="51">:<expr><name pos:line="17" pos:column="52">sock<pos:position pos:line="17" pos:column="56"/></name></expr></else></ternary></expr></argument>, <comment type="block" pos:line="17" pos:column="58">/* reading */</comment>
                     <argument><expr><ternary><condition><expr><name><name pos:line="18" pos:column="22">ftp<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">sendleft<pos:position pos:line="18" pos:column="35"/></name></name></expr>?<pos:position pos:line="18" pos:column="36"/></condition><then><expr><name pos:line="18" pos:column="36">sock<pos:position pos:line="18" pos:column="40"/></name></expr></then><else pos:line="18" pos:column="40">:<expr><name pos:line="18" pos:column="41">CURL_SOCKET_BAD<pos:position pos:line="18" pos:column="56"/></name></expr></else></ternary></expr></argument>, <comment type="block" pos:line="18" pos:column="58">/* writing */</comment>
                     <argument><expr><operator pos:line="19" pos:column="22">(<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">int<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">)<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="27">timeout_ms<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>

    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><name pos:line="21" pos:column="8">rc<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">==<pos:position pos:line="21" pos:column="13"/></operator> <operator pos:line="21" pos:column="14">-<pos:position pos:line="21" pos:column="15"/></operator><literal type="number" pos:line="21" pos:column="15">1<pos:position pos:line="21" pos:column="16"/></literal></expr>)<pos:position pos:line="21" pos:column="17"/></condition><then pos:line="21" pos:column="17"> <block pos:line="21" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">failf<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">data<pos:position pos:line="22" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="19">"select error"<pos:position pos:line="22" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
      <return pos:line="23" pos:column="7">return <expr><name pos:line="23" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="23" pos:column="33"/></name></expr>;<pos:position pos:line="23" pos:column="34"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if<condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">rc<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">==<pos:position pos:line="25" pos:column="18"/></operator> <literal type="number" pos:line="25" pos:column="19">0<pos:position pos:line="25" pos:column="20"/></literal></expr>)<pos:position pos:line="25" pos:column="21"/></condition><then pos:line="25" pos:column="21"> <block pos:line="25" pos:column="22">{
      <expr_stmt><expr><name pos:line="26" pos:column="7">result<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="16">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="26" pos:column="40"/></name></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
      <break pos:line="27" pos:column="7">break;<pos:position pos:line="27" pos:column="13"/></break>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if></elseif>
    <else pos:line="29" pos:column="5">else <block pos:line="29" pos:column="10">{
      <expr_stmt><expr><name pos:line="30" pos:column="7">result<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">ftp_statemach_act<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">conn<pos:position pos:line="30" pos:column="38"/></name></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
      <if pos:line="31" pos:column="7">if<condition pos:line="31" pos:column="9">(<expr><name pos:line="31" pos:column="10">result<pos:position pos:line="31" pos:column="16"/></name></expr>)<pos:position pos:line="31" pos:column="17"/></condition><then pos:line="31" pos:column="17">
        <block type="pseudo"><break pos:line="32" pos:column="9">break;<pos:position pos:line="32" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="33" pos:column="6"/></block></else></if>
  }<pos:position pos:line="34" pos:column="4"/></block></while>

  <return pos:line="36" pos:column="3">return <expr><name pos:line="36" pos:column="10">result<pos:position pos:line="36" pos:column="16"/></name></expr>;<pos:position pos:line="36" pos:column="17"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

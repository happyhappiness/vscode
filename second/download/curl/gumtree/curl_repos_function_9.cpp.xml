<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_9.cpp" pos:tabs="8"><function><name pos:line="1" pos:column="1">main<pos:position pos:line="1" pos:column="5"/></name><parameter_list pos:line="1" pos:column="5">(<parameter><decl><type><name pos:line="1" pos:column="6">int<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">argc<pos:position pos:line="1" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="16">char<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier><modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">argv<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list> <block pos:line="1" pos:column="29">{
	
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">CURL<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">ch<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">errstr<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">err<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">( <expr><operator pos:line="7" pos:column="14">!<pos:position pos:line="7" pos:column="15"/></operator> <operator pos:line="7" pos:column="16">(<pos:position pos:line="7" pos:column="17"/></operator> <name pos:line="7" pos:column="18">ch<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <call><name pos:line="7" pos:column="23">curl_easy_init<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">()<pos:position pos:line="7" pos:column="39"/></argument_list></call> <operator pos:line="7" pos:column="40">)<pos:position pos:line="7" pos:column="41"/></operator></expr> )<pos:position pos:line="7" pos:column="43"/></condition><then pos:line="7" pos:column="43"> <block pos:line="7" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">fprintf<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">stderr<pos:position pos:line="8" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="8" pos:column="32">"%s: Fucked up init\n"<pos:position pos:line="8" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="56">argv<pos:position pos:line="8" pos:column="60"/></name><index pos:line="8" pos:column="60">[<expr><literal type="number" pos:line="8" pos:column="61">0<pos:position pos:line="8" pos:column="62"/></literal></expr>]<pos:position pos:line="8" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(
	<expr><call><name pos:line="12" pos:column="9">curl_easy_setopt<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">ch<pos:position pos:line="12" pos:column="28"/></name></expr></argument>,
		<argument><expr><name pos:line="13" pos:column="17">CURLOPT_POST<pos:position pos:line="13" pos:column="29"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="13" pos:column="30">1<pos:position pos:line="13" pos:column="31"/></literal></expr></argument>,
		<argument><expr><name pos:line="14" pos:column="17">CURLOPT_VERBOSE<pos:position pos:line="14" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="14" pos:column="33">1<pos:position pos:line="14" pos:column="34"/></literal></expr></argument>,
		<argument><expr><name pos:line="15" pos:column="17">CURLOPT_POSTFIELDS<pos:position pos:line="15" pos:column="35"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="15" pos:column="36">"hello=fuckeroo"<pos:position pos:line="15" pos:column="52"/></literal></expr></argument>,
		<argument><expr><name pos:line="16" pos:column="17">CURLOPT_URL<pos:position pos:line="16" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="16" pos:column="29">"http://www.async.com.br/~kiko/test.php?get=ok"<pos:position pos:line="16" pos:column="76"/></literal></expr></argument>,
		<argument><expr><name pos:line="17" pos:column="17">CURLOPT_ERRORBUFFER<pos:position pos:line="17" pos:column="36"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="37">errstr<pos:position pos:line="17" pos:column="43"/></name></expr></argument>
	)<pos:position pos:line="18" pos:column="10"/></argument_list></call></expr> )<pos:position pos:line="18" pos:column="12"/></condition><then pos:line="18" pos:column="12"> <block pos:line="18" pos:column="13">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">fprintf<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">stderr<pos:position pos:line="19" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="19" pos:column="32">"%s: Fucked up setopt\n"<pos:position pos:line="19" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="58">argv<pos:position pos:line="19" pos:column="62"/></name><index pos:line="19" pos:column="62">[<expr><literal type="number" pos:line="19" pos:column="63">0<pos:position pos:line="19" pos:column="64"/></literal></expr>]<pos:position pos:line="19" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if><empty_stmt pos:line="20" pos:column="10">;<pos:position pos:line="20" pos:column="11"/></empty_stmt>
	
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">( <expr><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">err<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator><call><name pos:line="22" pos:column="20">curl_easy_perform<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">ch<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call> <operator pos:line="22" pos:column="42">)<pos:position pos:line="22" pos:column="43"/></operator></expr> )<pos:position pos:line="22" pos:column="45"/></condition><then pos:line="22" pos:column="45"> <block pos:line="22" pos:column="46">{
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">fprintf<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">stderr<pos:position pos:line="23" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="23" pos:column="32">"%s: Fucked up perform: %d\n"<pos:position pos:line="23" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="63">argv<pos:position pos:line="23" pos:column="67"/></name><index pos:line="23" pos:column="67">[<expr><literal type="number" pos:line="23" pos:column="68">0<pos:position pos:line="23" pos:column="69"/></literal></expr>]<pos:position pos:line="23" pos:column="70"/></index></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="72">err<pos:position pos:line="23" pos:column="75"/></name></expr></argument> )<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">fprintf<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">stderr<pos:position pos:line="24" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="24" pos:column="32">"%s: reason given was: %s\n"<pos:position pos:line="24" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="62">argv<pos:position pos:line="24" pos:column="66"/></name><index pos:line="24" pos:column="66">[<expr><literal type="number" pos:line="24" pos:column="67">0<pos:position pos:line="24" pos:column="68"/></literal></expr>]<pos:position pos:line="24" pos:column="69"/></index></name></expr></argument>,<argument><expr><name pos:line="24" pos:column="70">errstr<pos:position pos:line="24" pos:column="76"/></name></expr></argument> )<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="79"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if><empty_stmt pos:line="25" pos:column="10">;<pos:position pos:line="25" pos:column="11"/></empty_stmt>

}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2151_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLMcode<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">Curl_pipeline_set_server_blacklist<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">servers<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                             <parameter><decl><type><name><name pos:line="2" pos:column="46">struct<pos:position pos:line="2" pos:column="52"/></name> <name pos:line="2" pos:column="53">curl_llist<pos:position pos:line="2" pos:column="63"/></name></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">list<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* Free the old list */</comment>
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name><name pos:line="5" pos:column="6">list<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">size<pos:position pos:line="5" pos:column="16"/></name></name></expr>)<pos:position pos:line="5" pos:column="17"/></condition><then pos:line="5" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="5">Curl_llist_destroy<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name pos:line="6" pos:column="24">list<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="30">NULL<pos:position pos:line="6" pos:column="34"/></name></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt></block></then></if>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name pos:line="8" pos:column="6">servers<pos:position pos:line="8" pos:column="13"/></name></expr>)<pos:position pos:line="8" pos:column="14"/></condition><then pos:line="8" pos:column="14"> <block pos:line="8" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">Curl_llist_init<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">list<pos:position pos:line="9" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="27">(<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">curl_llist_dtor<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">)<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="45">server_blacklist_llist_dtor<pos:position pos:line="9" pos:column="72"/></name></expr></argument>)<pos:position pos:line="9" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="74"/></expr_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* Parse the URLs and populate the list */</comment>
    <while pos:line="12" pos:column="5">while<condition pos:line="12" pos:column="10">(<expr><operator pos:line="12" pos:column="11">*<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">servers<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition> <block pos:line="12" pos:column="21">{
      <decl_stmt><decl><type><name><name pos:line="13" pos:column="7">struct<pos:position pos:line="13" pos:column="13"/></name> <name pos:line="13" pos:column="14">blacklist_node<pos:position pos:line="13" pos:column="28"/></name></name> <modifier pos:line="13" pos:column="29">*<pos:position pos:line="13" pos:column="30"/></modifier></type><name pos:line="13" pos:column="30">n<pos:position pos:line="13" pos:column="31"/></name></decl>;<pos:position pos:line="13" pos:column="32"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="14" pos:column="7">size_t<pos:position pos:line="14" pos:column="13"/></name></type> <name pos:line="14" pos:column="14">len<pos:position pos:line="14" pos:column="17"/></name> <init pos:line="14" pos:column="18">= <expr><call><name pos:line="14" pos:column="20">strlen<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><operator pos:line="14" pos:column="27">*<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">servers<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="37"/></decl_stmt>

      <expr_stmt><expr><name pos:line="16" pos:column="7">n<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <call><name pos:line="16" pos:column="11">malloc<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><sizeof pos:line="16" pos:column="18">sizeof<argument_list pos:line="16" pos:column="24">(<argument><expr pos:line="16" pos:column="25">struct <name pos:line="16" pos:column="32">blacklist_node<pos:position pos:line="16" pos:column="46"/></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></sizeof> <operator pos:line="16" pos:column="48">+<pos:position pos:line="16" pos:column="49"/></operator> <name pos:line="16" pos:column="50">len<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
      <if pos:line="17" pos:column="7">if<condition pos:line="17" pos:column="9">(<expr><operator pos:line="17" pos:column="10">!<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">n<pos:position pos:line="17" pos:column="12"/></name></expr>)<pos:position pos:line="17" pos:column="13"/></condition><then pos:line="17" pos:column="13"> <block pos:line="17" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">Curl_llist_destroy<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">list<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">NULL<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">CURLM_OUT_OF_MEMORY<pos:position pos:line="19" pos:column="35"/></name></expr>;<pos:position pos:line="19" pos:column="36"/></return>
      }<pos:position pos:line="20" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">strcpy<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><name><name pos:line="21" pos:column="14">n<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">server_name<pos:position pos:line="21" pos:column="28"/></name></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="30">*<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">servers<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="23" pos:column="7">Curl_llist_insert_next<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">list<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="36">list<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">-&gt;<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="42">tail<pos:position pos:line="23" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="48">n<pos:position pos:line="23" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="51">&amp;<pos:position pos:line="23" pos:column="56"/></operator><name><name pos:line="23" pos:column="52">n<pos:position pos:line="23" pos:column="53"/></name><operator pos:line="23" pos:column="53">-&gt;<pos:position pos:line="23" pos:column="58"/></operator><name pos:line="23" pos:column="55">list<pos:position pos:line="23" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><name pos:line="24" pos:column="7">servers<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">++<pos:position pos:line="24" pos:column="16"/></operator></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></while>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>


  <return pos:line="29" pos:column="3">return <expr><name pos:line="29" pos:column="10">CURLM_OK<pos:position pos:line="29" pos:column="18"/></name></expr>;<pos:position pos:line="29" pos:column="19"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1019_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_conncontrol<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">connectdata<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">conn<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">ctrl<pos:position pos:line="2" pos:column="31"/></name></decl></parameter> <comment type="block" pos:line="2" pos:column="32">/* see defines in header */</comment>
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><call><name pos:line="3" pos:column="5">defined<pos:position pos:line="3" pos:column="12"/></name><argument_list pos:line="3" pos:column="12">(<argument><expr><name pos:line="3" pos:column="13">DEBUGBUILD<pos:position pos:line="3" pos:column="23"/></name></expr></argument>)<pos:position pos:line="3" pos:column="24"/></argument_list></call> <operator pos:line="3" pos:column="25">&amp;&amp;<pos:position pos:line="3" pos:column="35"/></operator> <operator pos:line="3" pos:column="28">!<pos:position pos:line="3" pos:column="29"/></operator><call><name pos:line="3" pos:column="29">defined<pos:position pos:line="3" pos:column="36"/></name><argument_list pos:line="3" pos:column="36">(<argument><expr><name pos:line="3" pos:column="37">CURL_DISABLE_VERBOSE_STRINGS<pos:position pos:line="3" pos:column="65"/></name></expr></argument>)<pos:position pos:line="3" pos:column="66"/></argument_list></call></expr></cpp:if>
                      , <parameter><decl><type><specifier pos:line="4" pos:column="25">const<pos:position pos:line="4" pos:column="30"/></specifier> <name pos:line="4" pos:column="31">char<pos:position pos:line="4" pos:column="35"/></name> <modifier pos:line="4" pos:column="36">*<pos:position pos:line="4" pos:column="37"/></modifier></type><name pos:line="4" pos:column="37">reason<pos:position pos:line="4" pos:column="43"/></name></decl></parameter>
<cpp:endif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">endif<pos:position pos:line="5" pos:column="7"/></cpp:directive></cpp:endif>
  )<pos:position pos:line="6" pos:column="4"/></parameter_list>
<block pos:line="7" pos:column="1">{
  <comment type="block" pos:line="8" pos:column="3">/* close if a connection, or a stream that isn't multiplexed */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">bool<pos:position pos:line="9" pos:column="7"/></name></type> <name pos:line="9" pos:column="8">closeit<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><operator pos:line="9" pos:column="18">(<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">ctrl<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">==<pos:position pos:line="9" pos:column="26"/></operator> <name pos:line="9" pos:column="27">CONNCTRL_CONNECTION<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">)<pos:position pos:line="9" pos:column="47"/></operator> <operator pos:line="9" pos:column="48">||<pos:position pos:line="9" pos:column="50"/></operator>
    <operator pos:line="10" pos:column="5">(<pos:position pos:line="10" pos:column="6"/></operator><operator pos:line="10" pos:column="6">(<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">ctrl<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">==<pos:position pos:line="10" pos:column="14"/></operator> <name pos:line="10" pos:column="15">CONNCTRL_STREAM<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">)<pos:position pos:line="10" pos:column="31"/></operator> <operator pos:line="10" pos:column="32">&amp;&amp;<pos:position pos:line="10" pos:column="42"/></operator> <operator pos:line="10" pos:column="35">!<pos:position pos:line="10" pos:column="36"/></operator><operator pos:line="10" pos:column="36">(<pos:position pos:line="10" pos:column="37"/></operator><name><name pos:line="10" pos:column="37">conn<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">handler<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">-&gt;<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="52">flags<pos:position pos:line="10" pos:column="57"/></name></name> <operator pos:line="10" pos:column="58">&amp;<pos:position pos:line="10" pos:column="63"/></operator> <name pos:line="10" pos:column="60">PROTOPT_STREAM<pos:position pos:line="10" pos:column="74"/></name><operator pos:line="10" pos:column="74">)<pos:position pos:line="10" pos:column="75"/></operator><operator pos:line="10" pos:column="75">)<pos:position pos:line="10" pos:column="76"/></operator></expr></init></decl>;<pos:position pos:line="10" pos:column="77"/></decl_stmt>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">(<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">ctrl<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">==<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">CONNCTRL_STREAM<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">)<pos:position pos:line="11" pos:column="31"/></operator> <operator pos:line="11" pos:column="32">&amp;&amp;<pos:position pos:line="11" pos:column="42"/></operator>
     <operator pos:line="12" pos:column="6">(<pos:position pos:line="12" pos:column="7"/></operator><name><name pos:line="12" pos:column="7">conn<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">handler<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">flags<pos:position pos:line="12" pos:column="27"/></name></name> <operator pos:line="12" pos:column="28">&amp;<pos:position pos:line="12" pos:column="33"/></operator> <name pos:line="12" pos:column="30">PROTOPT_STREAM<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">)<pos:position pos:line="12" pos:column="45"/></operator></expr>)<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="5">DEBUGF<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><call><name pos:line="13" pos:column="12">infof<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><name><name pos:line="13" pos:column="18">conn<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">data<pos:position pos:line="13" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="30">"Kill stream: %s\n"<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">reason<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt></block></then>
  <elseif pos:line="14" pos:column="3">else <if pos:line="14" pos:column="8">if<condition pos:line="14" pos:column="10">(<expr><name pos:line="14" pos:column="11">closeit<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">!=<pos:position pos:line="14" pos:column="21"/></operator> <name><name pos:line="14" pos:column="22">conn<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">bits<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">.<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">close<pos:position pos:line="14" pos:column="38"/></name></name></expr>)<pos:position pos:line="14" pos:column="39"/></condition><then pos:line="14" pos:column="39"> <block pos:line="14" pos:column="40">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">DEBUGF<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><call><name pos:line="15" pos:column="12">infof<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name><name pos:line="15" pos:column="18">conn<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">data<pos:position pos:line="15" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="30">"Marked for [%s]: %s\n"<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>,
                 <argument><expr><ternary><condition><expr><name pos:line="16" pos:column="18">closeit<pos:position pos:line="16" pos:column="25"/></name></expr>?<pos:position pos:line="16" pos:column="26"/></condition><then><expr><literal type="string" pos:line="16" pos:column="26">"closure"<pos:position pos:line="16" pos:column="35"/></literal></expr></then><else pos:line="16" pos:column="35">:<expr><literal type="string" pos:line="16" pos:column="36">"keep alive"<pos:position pos:line="16" pos:column="48"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="16" pos:column="50">reason<pos:position pos:line="16" pos:column="56"/></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">conn<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">-&gt;<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="11">bits<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">.<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">close<pos:position pos:line="17" pos:column="21"/></name></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="24">closeit<pos:position pos:line="17" pos:column="31"/></name></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt> <comment type="block" pos:line="17" pos:column="33">/* the only place in the source code that
                                   should assign this bit */</comment>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if></elseif></if>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_12_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">void<pos:position pos:line="2" pos:column="5"/></name></type> <name pos:line="2" pos:column="6">dump<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><specifier pos:line="2" pos:column="11">const<pos:position pos:line="2" pos:column="16"/></specifier> <name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">text<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">unsigned<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">ptr<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">size_t<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">size<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
          <parameter><decl><type><name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">nohex<pos:position pos:line="3" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="22"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">i<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">c<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">unsigned<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">int<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">width<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">0x10<pos:position pos:line="8" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name pos:line="10" pos:column="6">nohex<pos:position pos:line="10" pos:column="11"/></name></expr>)<pos:position pos:line="10" pos:column="12"/></condition><then pos:line="10" pos:column="12">
    <comment type="block" pos:line="11" pos:column="5">/* without the hex output, we can fit more on screen */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">width<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <literal type="number" pos:line="12" pos:column="13">0x40<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">fprintf<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><name pos:line="14" pos:column="11">stderr<pos:position pos:line="14" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="19">"%s, %ld bytes (0x%lx)\n"<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>,
          <argument><expr><name pos:line="15" pos:column="11">text<pos:position pos:line="15" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="17">(<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">long<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">)<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">size<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="29">(<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">long<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">)<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="35">size<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>

  <for pos:line="17" pos:column="3">for<control pos:line="17" pos:column="6">(<init><expr><name pos:line="17" pos:column="7">i<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <literal type="number" pos:line="17" pos:column="11">0<pos:position pos:line="17" pos:column="12"/></literal></expr>;<pos:position pos:line="17" pos:column="13"/></init> <condition><expr><name pos:line="17" pos:column="14">i<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">&lt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">size<pos:position pos:line="17" pos:column="20"/></name></expr>;<pos:position pos:line="17" pos:column="21"/></condition> <incr><expr><name pos:line="17" pos:column="22">i<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">+=<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">width<pos:position pos:line="17" pos:column="32"/></name></expr></incr>)<pos:position pos:line="17" pos:column="33"/></control> <block pos:line="17" pos:column="34">{

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">fprintf<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">stderr<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="21">"%4.4lx: "<pos:position pos:line="19" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="33">(<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">long<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">)<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="39">i<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>

    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><operator pos:line="21" pos:column="8">!<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">nohex<pos:position pos:line="21" pos:column="14"/></name></expr>)<pos:position pos:line="21" pos:column="15"/></condition><then pos:line="21" pos:column="15"> <block pos:line="21" pos:column="16">{
      <comment type="block" pos:line="22" pos:column="7">/* hex not disabled, show it */</comment>
      <for pos:line="23" pos:column="7">for<control pos:line="23" pos:column="10">(<init><expr><name pos:line="23" pos:column="11">c<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <literal type="number" pos:line="23" pos:column="15">0<pos:position pos:line="23" pos:column="16"/></literal></expr>;<pos:position pos:line="23" pos:column="17"/></init> <condition><expr><name pos:line="23" pos:column="18">c<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">&lt;<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="22">width<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></condition> <incr><expr><name pos:line="23" pos:column="29">c<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">++<pos:position pos:line="23" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="33"/></control>
        <block type="pseudo"><if pos:line="24" pos:column="9">if<condition pos:line="24" pos:column="11">(<expr><name pos:line="24" pos:column="12">i<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">+<pos:position pos:line="24" pos:column="15"/></operator> <name pos:line="24" pos:column="16">c<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">&lt;<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="20">size<pos:position pos:line="24" pos:column="24"/></name></expr>)<pos:position pos:line="24" pos:column="25"/></condition><then pos:line="24" pos:column="25">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="11">fprintf<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">stderr<pos:position pos:line="25" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="27">"%02x "<pos:position pos:line="25" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="36">ptr<pos:position pos:line="25" pos:column="39"/></name><index pos:line="25" pos:column="39">[<expr><name pos:line="25" pos:column="40">i<pos:position pos:line="25" pos:column="41"/></name> <operator pos:line="25" pos:column="42">+<pos:position pos:line="25" pos:column="43"/></operator> <name pos:line="25" pos:column="44">c<pos:position pos:line="25" pos:column="45"/></name></expr>]<pos:position pos:line="25" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt></block></then>
        <else pos:line="26" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="11">fputs<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><literal type="string" pos:line="27" pos:column="17">"   "<pos:position pos:line="27" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="24">stderr<pos:position pos:line="27" pos:column="30"/></name></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt></block></else></if></block></for>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <for pos:line="30" pos:column="5">for<control pos:line="30" pos:column="8">(<init><expr><name pos:line="30" pos:column="9">c<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <literal type="number" pos:line="30" pos:column="13">0<pos:position pos:line="30" pos:column="14"/></literal></expr>;<pos:position pos:line="30" pos:column="15"/></init> <condition><expr><operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">c<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">&lt;<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="21">width<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">)<pos:position pos:line="30" pos:column="27"/></operator> <operator pos:line="30" pos:column="28">&amp;&amp;<pos:position pos:line="30" pos:column="38"/></operator> <operator pos:line="30" pos:column="31">(<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">i<pos:position pos:line="30" pos:column="33"/></name> <operator pos:line="30" pos:column="34">+<pos:position pos:line="30" pos:column="35"/></operator> <name pos:line="30" pos:column="36">c<pos:position pos:line="30" pos:column="37"/></name> <operator pos:line="30" pos:column="38">&lt;<pos:position pos:line="30" pos:column="42"/></operator> <name pos:line="30" pos:column="40">size<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">)<pos:position pos:line="30" pos:column="45"/></operator></expr>;<pos:position pos:line="30" pos:column="46"/></condition> <incr><expr><name pos:line="30" pos:column="47">c<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">++<pos:position pos:line="30" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="51"/></control> <block pos:line="30" pos:column="52">{
      <comment type="block" pos:line="31" pos:column="7">/* check for 0D0A; if found, skip past and start a new line of output */</comment>
      <if pos:line="32" pos:column="7">if<condition pos:line="32" pos:column="9">(<expr><name pos:line="32" pos:column="10">nohex<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">&amp;&amp;<pos:position pos:line="32" pos:column="26"/></operator> <operator pos:line="32" pos:column="19">(<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">i<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">+<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="24">c<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">+<pos:position pos:line="32" pos:column="27"/></operator> <literal type="number" pos:line="32" pos:column="28">1<pos:position pos:line="32" pos:column="29"/></literal> <operator pos:line="32" pos:column="30">&lt;<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="32">size<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">)<pos:position pos:line="32" pos:column="37"/></operator> <operator pos:line="32" pos:column="38">&amp;&amp;<pos:position pos:line="32" pos:column="48"/></operator> <name><name pos:line="32" pos:column="41">ptr<pos:position pos:line="32" pos:column="44"/></name><index pos:line="32" pos:column="44">[<expr><name pos:line="32" pos:column="45">i<pos:position pos:line="32" pos:column="46"/></name> <operator pos:line="32" pos:column="47">+<pos:position pos:line="32" pos:column="48"/></operator> <name pos:line="32" pos:column="49">c<pos:position pos:line="32" pos:column="50"/></name></expr>]<pos:position pos:line="32" pos:column="51"/></index></name> <operator pos:line="32" pos:column="52">==<pos:position pos:line="32" pos:column="54"/></operator> <literal type="number" pos:line="32" pos:column="55">0x0D<pos:position pos:line="32" pos:column="59"/></literal> <operator pos:line="32" pos:column="60">&amp;&amp;<pos:position pos:line="32" pos:column="70"/></operator>
         <name><name pos:line="33" pos:column="10">ptr<pos:position pos:line="33" pos:column="13"/></name><index pos:line="33" pos:column="13">[<expr><name pos:line="33" pos:column="14">i<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">+<pos:position pos:line="33" pos:column="17"/></operator> <name pos:line="33" pos:column="18">c<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">+<pos:position pos:line="33" pos:column="21"/></operator> <literal type="number" pos:line="33" pos:column="22">1<pos:position pos:line="33" pos:column="23"/></literal></expr>]<pos:position pos:line="33" pos:column="24"/></index></name> <operator pos:line="33" pos:column="25">==<pos:position pos:line="33" pos:column="27"/></operator> <literal type="number" pos:line="33" pos:column="28">0x0A<pos:position pos:line="33" pos:column="32"/></literal></expr>)<pos:position pos:line="33" pos:column="33"/></condition><then pos:line="33" pos:column="33"> <block pos:line="33" pos:column="34">{
        <expr_stmt><expr><name pos:line="34" pos:column="9">i<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">+=<pos:position pos:line="34" pos:column="13"/></operator> <operator pos:line="34" pos:column="14">(<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">c<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">+<pos:position pos:line="34" pos:column="18"/></operator> <literal type="number" pos:line="34" pos:column="19">2<pos:position pos:line="34" pos:column="20"/></literal> <operator pos:line="34" pos:column="21">-<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="23">width<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">)<pos:position pos:line="34" pos:column="29"/></operator></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
        <break pos:line="35" pos:column="9">break;<pos:position pos:line="35" pos:column="15"/></break>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">fprintf<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><name pos:line="37" pos:column="15">stderr<pos:position pos:line="37" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="23">"%c"<pos:position pos:line="37" pos:column="27"/></literal></expr></argument>,
              <argument><expr><ternary><condition><expr><operator pos:line="38" pos:column="15">(<pos:position pos:line="38" pos:column="16"/></operator><name><name pos:line="38" pos:column="16">ptr<pos:position pos:line="38" pos:column="19"/></name><index pos:line="38" pos:column="19">[<expr><name pos:line="38" pos:column="20">i<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">+<pos:position pos:line="38" pos:column="23"/></operator> <name pos:line="38" pos:column="24">c<pos:position pos:line="38" pos:column="25"/></name></expr>]<pos:position pos:line="38" pos:column="26"/></index></name> <operator pos:line="38" pos:column="27">&gt;=<pos:position pos:line="38" pos:column="32"/></operator> <literal type="number" pos:line="38" pos:column="30">0x20<pos:position pos:line="38" pos:column="34"/></literal><operator pos:line="38" pos:column="34">)<pos:position pos:line="38" pos:column="35"/></operator> <operator pos:line="38" pos:column="36">&amp;&amp;<pos:position pos:line="38" pos:column="46"/></operator> <operator pos:line="38" pos:column="39">(<pos:position pos:line="38" pos:column="40"/></operator><name><name pos:line="38" pos:column="40">ptr<pos:position pos:line="38" pos:column="43"/></name><index pos:line="38" pos:column="43">[<expr><name pos:line="38" pos:column="44">i<pos:position pos:line="38" pos:column="45"/></name> <operator pos:line="38" pos:column="46">+<pos:position pos:line="38" pos:column="47"/></operator> <name pos:line="38" pos:column="48">c<pos:position pos:line="38" pos:column="49"/></name></expr>]<pos:position pos:line="38" pos:column="50"/></index></name><operator pos:line="38" pos:column="50">&lt;<pos:position pos:line="38" pos:column="54"/></operator><literal type="number" pos:line="38" pos:column="51">0x80<pos:position pos:line="38" pos:column="55"/></literal><operator pos:line="38" pos:column="55">)<pos:position pos:line="38" pos:column="56"/></operator></expr>?<pos:position pos:line="38" pos:column="57"/></condition><then><expr><name><name pos:line="38" pos:column="57">ptr<pos:position pos:line="38" pos:column="60"/></name><index pos:line="38" pos:column="60">[<expr><name pos:line="38" pos:column="61">i<pos:position pos:line="38" pos:column="62"/></name> <operator pos:line="38" pos:column="63">+<pos:position pos:line="38" pos:column="64"/></operator> <name pos:line="38" pos:column="65">c<pos:position pos:line="38" pos:column="66"/></name></expr>]<pos:position pos:line="38" pos:column="67"/></index></name></expr></then><else pos:line="38" pos:column="67">:<expr><literal type="char" pos:line="38" pos:column="68">'.'<pos:position pos:line="38" pos:column="71"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="38" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="73"/></expr_stmt>
      <comment type="block" pos:line="39" pos:column="7">/* check again for 0D0A, to avoid an extra \n if it's at width */</comment>
      <if pos:line="40" pos:column="7">if<condition pos:line="40" pos:column="9">(<expr><name pos:line="40" pos:column="10">nohex<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">&amp;&amp;<pos:position pos:line="40" pos:column="26"/></operator> <operator pos:line="40" pos:column="19">(<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">i<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">+<pos:position pos:line="40" pos:column="23"/></operator> <name pos:line="40" pos:column="24">c<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">+<pos:position pos:line="40" pos:column="27"/></operator> <literal type="number" pos:line="40" pos:column="28">2<pos:position pos:line="40" pos:column="29"/></literal> <operator pos:line="40" pos:column="30">&lt;<pos:position pos:line="40" pos:column="34"/></operator> <name pos:line="40" pos:column="32">size<pos:position pos:line="40" pos:column="36"/></name><operator pos:line="40" pos:column="36">)<pos:position pos:line="40" pos:column="37"/></operator> <operator pos:line="40" pos:column="38">&amp;&amp;<pos:position pos:line="40" pos:column="48"/></operator> <name><name pos:line="40" pos:column="41">ptr<pos:position pos:line="40" pos:column="44"/></name><index pos:line="40" pos:column="44">[<expr><name pos:line="40" pos:column="45">i<pos:position pos:line="40" pos:column="46"/></name> <operator pos:line="40" pos:column="47">+<pos:position pos:line="40" pos:column="48"/></operator> <name pos:line="40" pos:column="49">c<pos:position pos:line="40" pos:column="50"/></name> <operator pos:line="40" pos:column="51">+<pos:position pos:line="40" pos:column="52"/></operator> <literal type="number" pos:line="40" pos:column="53">1<pos:position pos:line="40" pos:column="54"/></literal></expr>]<pos:position pos:line="40" pos:column="55"/></index></name> <operator pos:line="40" pos:column="56">==<pos:position pos:line="40" pos:column="58"/></operator> <literal type="number" pos:line="40" pos:column="59">0x0D<pos:position pos:line="40" pos:column="63"/></literal> <operator pos:line="40" pos:column="64">&amp;&amp;<pos:position pos:line="40" pos:column="74"/></operator>
         <name><name pos:line="41" pos:column="10">ptr<pos:position pos:line="41" pos:column="13"/></name><index pos:line="41" pos:column="13">[<expr><name pos:line="41" pos:column="14">i<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">+<pos:position pos:line="41" pos:column="17"/></operator> <name pos:line="41" pos:column="18">c<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">+<pos:position pos:line="41" pos:column="21"/></operator> <literal type="number" pos:line="41" pos:column="22">2<pos:position pos:line="41" pos:column="23"/></literal></expr>]<pos:position pos:line="41" pos:column="24"/></index></name> <operator pos:line="41" pos:column="25">==<pos:position pos:line="41" pos:column="27"/></operator> <literal type="number" pos:line="41" pos:column="28">0x0A<pos:position pos:line="41" pos:column="32"/></literal></expr>)<pos:position pos:line="41" pos:column="33"/></condition><then pos:line="41" pos:column="33"> <block pos:line="41" pos:column="34">{
        <expr_stmt><expr><name pos:line="42" pos:column="9">i<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">+=<pos:position pos:line="42" pos:column="13"/></operator> <operator pos:line="42" pos:column="14">(<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">c<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">+<pos:position pos:line="42" pos:column="18"/></operator> <literal type="number" pos:line="42" pos:column="19">3<pos:position pos:line="42" pos:column="20"/></literal> <operator pos:line="42" pos:column="21">-<pos:position pos:line="42" pos:column="22"/></operator> <name pos:line="42" pos:column="23">width<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">)<pos:position pos:line="42" pos:column="29"/></operator></expr>;<pos:position pos:line="42" pos:column="30"/></expr_stmt>
        <break pos:line="43" pos:column="9">break;<pos:position pos:line="43" pos:column="15"/></break>
      }<pos:position pos:line="44" pos:column="8"/></block></then></if>
    }<pos:position pos:line="45" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">fputc<pos:position pos:line="46" pos:column="10"/></name><argument_list pos:line="46" pos:column="10">(<argument><expr><literal type="char" pos:line="46" pos:column="11">'\n'<pos:position pos:line="46" pos:column="15"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="17">stderr<pos:position pos:line="46" pos:column="23"/></name></expr></argument>)<pos:position pos:line="46" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="25"/></expr_stmt> <comment type="block" pos:line="46" pos:column="26">/* newline */</comment>
  }<pos:position pos:line="47" pos:column="4"/></block></for>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

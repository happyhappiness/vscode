<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_166_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">curl_version_ccsid<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">unsigned<pos:position pos:line="2" pos:column="28"/></name> <name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">ccsid<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>

<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type> <name pos:line="6" pos:column="10">aversion<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type> <name pos:line="7" pos:column="10">eversion<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">aversion<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">curl_version<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">()<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">aversion<pos:position pos:line="11" pos:column="16"/></name></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">aversion<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">i<pos:position pos:line="14" pos:column="4"/></name> <operator pos:line="14" pos:column="5">=<pos:position pos:line="14" pos:column="6"/></operator> <call><name pos:line="14" pos:column="7">strlen<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><name pos:line="14" pos:column="14">aversion<pos:position pos:line="14" pos:column="22"/></name></expr></argument>)<pos:position pos:line="14" pos:column="23"/></argument_list></call> <operator pos:line="14" pos:column="24">+<pos:position pos:line="14" pos:column="25"/></operator> <literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">i<pos:position pos:line="15" pos:column="4"/></name> <operator pos:line="15" pos:column="5">*=<pos:position pos:line="15" pos:column="7"/></operator> <name pos:line="15" pos:column="8">MAX_CONV_EXPANSION<pos:position pos:line="15" pos:column="26"/></name></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">!<pos:position pos:line="17" pos:column="8"/></operator><operator pos:line="17" pos:column="8">(<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">eversion<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <call><name pos:line="17" pos:column="20">Curl_thread_buffer<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">LK_CURL_VERSION<pos:position pos:line="17" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="56">i<pos:position pos:line="17" pos:column="57"/></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call><operator pos:line="17" pos:column="58">)<pos:position pos:line="17" pos:column="59"/></operator></expr>)<pos:position pos:line="17" pos:column="60"/></condition><then pos:line="17" pos:column="60">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">char<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">*<pos:position pos:line="18" pos:column="19"/></operator><operator pos:line="18" pos:column="19">)<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">NULL<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></return></block></then></if>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><call><name pos:line="20" pos:column="7">convert<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">eversion<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="25">i<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="28">ccsid<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">aversion<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="45">-<pos:position pos:line="20" pos:column="46"/></operator><literal type="number" pos:line="20" pos:column="46">1<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">ASCII_CCSID<pos:position pos:line="20" pos:column="60"/></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call> <operator pos:line="20" pos:column="62">&lt;<pos:position pos:line="20" pos:column="66"/></operator> <literal type="number" pos:line="20" pos:column="64">0<pos:position pos:line="20" pos:column="65"/></literal></expr>)<pos:position pos:line="20" pos:column="66"/></condition><then pos:line="20" pos:column="66">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">char<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">*<pos:position pos:line="21" pos:column="19"/></operator><operator pos:line="21" pos:column="19">)<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">NULL<pos:position pos:line="21" pos:column="25"/></name></expr>;<pos:position pos:line="21" pos:column="26"/></return></block></then></if>

  <return pos:line="23" pos:column="3">return <expr><name pos:line="23" pos:column="10">eversion<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

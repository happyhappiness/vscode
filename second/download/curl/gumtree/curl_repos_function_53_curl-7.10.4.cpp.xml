<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_53_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">GlobCode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">glob_set<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">URLGlob<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">glob<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">pattern<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">pos<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">int<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">amount<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* processes a set expression with the point behind the opening '{'
     ','-separated elements are collected until the next closing '}'
  */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name><modifier pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></modifier></type> <name pos:line="6" pos:column="9">buf<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name><name pos:line="6" pos:column="15">glob<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">glob_buffer<pos:position pos:line="6" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">URLPattern<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">pat<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">pat<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">URLPattern<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></operator><operator pos:line="9" pos:column="21">)<pos:position pos:line="9" pos:column="22"/></operator><operator pos:line="9" pos:column="22">&amp;<pos:position pos:line="9" pos:column="27"/></operator><name><name pos:line="9" pos:column="23">glob<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">pattern<pos:position pos:line="9" pos:column="36"/></name><index pos:line="9" pos:column="36">[<expr><name><name pos:line="9" pos:column="37">glob<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">size<pos:position pos:line="9" pos:column="47"/></name></name> <operator pos:line="9" pos:column="48">/<pos:position pos:line="9" pos:column="49"/></operator> <literal type="number" pos:line="9" pos:column="50">2<pos:position pos:line="9" pos:column="51"/></literal></expr>]<pos:position pos:line="9" pos:column="52"/></index></name></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
  <comment type="block" pos:line="10" pos:column="3">/* patterns 0,1,2,... correspond to size=1,3,5,... */</comment>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">pat<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">type<pos:position pos:line="11" pos:column="12"/></name></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">UPTSet<pos:position pos:line="11" pos:column="21"/></name></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">pat<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">content<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">.<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">Set<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">.<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">size<pos:position pos:line="12" pos:column="24"/></name></name> <operator pos:line="12" pos:column="25">=<pos:position pos:line="12" pos:column="26"/></operator> <literal type="number" pos:line="12" pos:column="27">0<pos:position pos:line="12" pos:column="28"/></literal></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">pat<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">-&gt;<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="8">content<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">.<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">Set<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">.<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">ptr_s<pos:position pos:line="13" pos:column="25"/></name></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <literal type="number" pos:line="13" pos:column="28">0<pos:position pos:line="13" pos:column="29"/></literal></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">pat<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">content<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">.<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">Set<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">.<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="20">elements<pos:position pos:line="14" pos:column="28"/></name></name> <operator pos:line="14" pos:column="29">=<pos:position pos:line="14" pos:column="30"/></operator> <operator pos:line="14" pos:column="31">(<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="32">char<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">*<pos:position pos:line="14" pos:column="37"/></operator><operator pos:line="14" pos:column="37">*<pos:position pos:line="14" pos:column="38"/></operator><operator pos:line="14" pos:column="38">)<pos:position pos:line="14" pos:column="39"/></operator><call><name pos:line="14" pos:column="39">malloc<pos:position pos:line="14" pos:column="45"/></name><argument_list pos:line="14" pos:column="45">(<argument><expr><literal type="number" pos:line="14" pos:column="46">0<pos:position pos:line="14" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="15" pos:column="3">++<pos:position pos:line="15" pos:column="5"/></operator><name><name pos:line="15" pos:column="5">glob<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">size<pos:position pos:line="15" pos:column="15"/></name></name></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt>

  <while pos:line="17" pos:column="3">while <condition pos:line="17" pos:column="9">(<expr><literal type="number" pos:line="17" pos:column="10">1<pos:position pos:line="17" pos:column="11"/></literal></expr>)<pos:position pos:line="17" pos:column="12"/></condition> <block pos:line="17" pos:column="13">{
    <switch pos:line="18" pos:column="5">switch <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">pattern<pos:position pos:line="18" pos:column="21"/></name></expr>)<pos:position pos:line="18" pos:column="22"/></condition> <block pos:line="18" pos:column="23">{
    <case pos:line="19" pos:column="5">case <expr><literal type="char" pos:line="19" pos:column="10">'\0'<pos:position pos:line="19" pos:column="14"/></literal></expr>:<pos:position pos:line="19" pos:column="15"/></case>			<comment type="block" pos:line="19" pos:column="33">/* URL ended while set was still open */</comment>
      <comment type="block" pos:line="20" pos:column="7">/*printf("error: unmatched brace at pos %d\n", pos);*/</comment>
      <return pos:line="21" pos:column="7">return <expr><name pos:line="21" pos:column="14">GLOB_ERROR<pos:position pos:line="21" pos:column="24"/></name></expr>;<pos:position pos:line="21" pos:column="25"/></return>

    <case pos:line="23" pos:column="5">case <expr><literal type="char" pos:line="23" pos:column="10">'{'<pos:position pos:line="23" pos:column="13"/></literal></expr>:<pos:position pos:line="23" pos:column="14"/></case>
    <case pos:line="24" pos:column="5">case <expr><literal type="char" pos:line="24" pos:column="10">'['<pos:position pos:line="24" pos:column="13"/></literal></expr>:<pos:position pos:line="24" pos:column="14"/></case>			<comment type="block" pos:line="24" pos:column="33">/* no nested expressions at this time */</comment>
      <comment type="block" pos:line="25" pos:column="7">/*printf("error: nested braces not supported %d\n", pos);*/</comment>
      <return pos:line="26" pos:column="7">return <expr><name pos:line="26" pos:column="14">GLOB_ERROR<pos:position pos:line="26" pos:column="24"/></name></expr>;<pos:position pos:line="26" pos:column="25"/></return>

    <case pos:line="28" pos:column="5">case <expr><literal type="char" pos:line="28" pos:column="10">','<pos:position pos:line="28" pos:column="13"/></literal></expr>:<pos:position pos:line="28" pos:column="14"/></case>
    <case pos:line="29" pos:column="5">case <expr><literal type="char" pos:line="29" pos:column="10">'}'<pos:position pos:line="29" pos:column="13"/></literal></expr>:<pos:position pos:line="29" pos:column="14"/></case>				<comment type="block" pos:line="29" pos:column="41">/* set element completed */</comment>
      <expr_stmt><expr><operator pos:line="30" pos:column="7">*<pos:position pos:line="30" pos:column="8"/></operator><name pos:line="30" pos:column="8">buf<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <literal type="char" pos:line="30" pos:column="14">'\0'<pos:position pos:line="30" pos:column="18"/></literal></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="31" pos:column="7">pat<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">content<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">.<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">Set<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">.<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">elements<pos:position pos:line="31" pos:column="32"/></name></name> <operator pos:line="31" pos:column="33">=<pos:position pos:line="31" pos:column="34"/></operator>
        <call><name pos:line="32" pos:column="9">realloc<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><name><name pos:line="32" pos:column="17">pat<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">content<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">.<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">Set<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">.<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="34">elements<pos:position pos:line="32" pos:column="42"/></name></name></expr></argument>,
                <argument><expr><operator pos:line="33" pos:column="17">(<pos:position pos:line="33" pos:column="18"/></operator><name><name pos:line="33" pos:column="18">pat<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">content<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">.<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="31">Set<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">.<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="35">size<pos:position pos:line="33" pos:column="39"/></name></name> <operator pos:line="33" pos:column="40">+<pos:position pos:line="33" pos:column="41"/></operator> <literal type="number" pos:line="33" pos:column="42">1<pos:position pos:line="33" pos:column="43"/></literal><operator pos:line="33" pos:column="43">)<pos:position pos:line="33" pos:column="44"/></operator> <operator pos:line="33" pos:column="45">*<pos:position pos:line="33" pos:column="46"/></operator> <sizeof pos:line="33" pos:column="47">sizeof<argument_list pos:line="33" pos:column="53">(<argument><expr><name pos:line="33" pos:column="54">char<pos:position pos:line="33" pos:column="58"/></name><operator pos:line="33" pos:column="58">*<pos:position pos:line="33" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><operator pos:line="34" pos:column="11">!<pos:position pos:line="34" pos:column="12"/></operator><name><name pos:line="34" pos:column="12">pat<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">content<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">.<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">Set<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">.<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="29">elements<pos:position pos:line="34" pos:column="37"/></name></name></expr>)<pos:position pos:line="34" pos:column="38"/></condition><then pos:line="34" pos:column="38"> <block pos:line="34" pos:column="39">{
	<comment type="block" pos:line="35" pos:column="9">/*printf("out of memory in set pattern\n");*/</comment>
        <return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">GLOB_ERROR<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></return>
      }<pos:position pos:line="37" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="38" pos:column="7">pat<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">content<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">Set<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">.<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="24">elements<pos:position pos:line="38" pos:column="32"/></name><index pos:line="38" pos:column="32">[<expr><name><name pos:line="38" pos:column="33">pat<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-&gt;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="38">content<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">.<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="46">Set<pos:position pos:line="38" pos:column="49"/></name><operator pos:line="38" pos:column="49">.<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="50">size<pos:position pos:line="38" pos:column="54"/></name></name></expr>]<pos:position pos:line="38" pos:column="55"/></index></name> <operator pos:line="38" pos:column="56">=<pos:position pos:line="38" pos:column="57"/></operator>
        <call><name pos:line="39" pos:column="9">strdup<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><name><name pos:line="39" pos:column="16">glob<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">glob_buffer<pos:position pos:line="39" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="40" pos:column="7">++<pos:position pos:line="40" pos:column="9"/></operator><name><name pos:line="40" pos:column="9">pat<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">-&gt;<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="14">content<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">.<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">Set<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">.<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="26">size<pos:position pos:line="40" pos:column="30"/></name></name></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt>

      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><operator pos:line="42" pos:column="11">*<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="12">pattern<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">==<pos:position pos:line="42" pos:column="22"/></operator> <literal type="char" pos:line="42" pos:column="23">'}'<pos:position pos:line="42" pos:column="26"/></literal></expr>)<pos:position pos:line="42" pos:column="27"/></condition><then pos:line="42" pos:column="27"> <block pos:line="42" pos:column="28">{
        <comment type="block" pos:line="43" pos:column="9">/* entire set pattern completed */</comment>
        <decl_stmt><decl><type><name pos:line="44" pos:column="9">int<pos:position pos:line="44" pos:column="12"/></name></type> <name pos:line="44" pos:column="13">wordamount<pos:position pos:line="44" pos:column="23"/></name></decl>;<pos:position pos:line="44" pos:column="24"/></decl_stmt>

	<comment type="block" pos:line="46" pos:column="9">/* always check for a literal (may be "") between patterns */</comment>
        <if pos:line="47" pos:column="9">if<condition pos:line="47" pos:column="11">(<expr><name pos:line="47" pos:column="12">GLOB_ERROR<pos:position pos:line="47" pos:column="22"/></name> <operator pos:line="47" pos:column="23">==<pos:position pos:line="47" pos:column="25"/></operator> <call><name pos:line="47" pos:column="26">glob_word<pos:position pos:line="47" pos:column="35"/></name><argument_list pos:line="47" pos:column="35">(<argument><expr><name pos:line="47" pos:column="36">glob<pos:position pos:line="47" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="42">++<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="44">pattern<pos:position pos:line="47" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="53">++<pos:position pos:line="47" pos:column="55"/></operator><name pos:line="47" pos:column="55">pos<pos:position pos:line="47" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="60">&amp;<pos:position pos:line="47" pos:column="65"/></operator><name pos:line="47" pos:column="61">wordamount<pos:position pos:line="47" pos:column="71"/></name></expr></argument>)<pos:position pos:line="47" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="73"/></condition><then pos:line="47" pos:column="73">
          <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="11">wordamount<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator><literal type="number" pos:line="48" pos:column="22">1<pos:position pos:line="48" pos:column="23"/></literal></expr>;<pos:position pos:line="48" pos:column="24"/></expr_stmt></block></then></if>
	<expr_stmt><expr><operator pos:line="49" pos:column="9">*<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">amount<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <name><name pos:line="49" pos:column="19">pat<pos:position pos:line="49" pos:column="22"/></name><operator pos:line="49" pos:column="22">-&gt;<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="24">content<pos:position pos:line="49" pos:column="31"/></name><operator pos:line="49" pos:column="31">.<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="32">Set<pos:position pos:line="49" pos:column="35"/></name><operator pos:line="49" pos:column="35">.<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="36">size<pos:position pos:line="49" pos:column="40"/></name></name> <operator pos:line="49" pos:column="41">*<pos:position pos:line="49" pos:column="42"/></operator> <name pos:line="49" pos:column="43">wordamount<pos:position pos:line="49" pos:column="53"/></name></expr>;<pos:position pos:line="49" pos:column="54"/></expr_stmt>

        <return pos:line="51" pos:column="9">return <expr><name pos:line="51" pos:column="16">GLOB_OK<pos:position pos:line="51" pos:column="23"/></name></expr>;<pos:position pos:line="51" pos:column="24"/></return>
      }<pos:position pos:line="52" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="54" pos:column="7">buf<pos:position pos:line="54" pos:column="10"/></name> <operator pos:line="54" pos:column="11">=<pos:position pos:line="54" pos:column="12"/></operator> <name><name pos:line="54" pos:column="13">glob<pos:position pos:line="54" pos:column="17"/></name><operator pos:line="54" pos:column="17">-&gt;<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="19">glob_buffer<pos:position pos:line="54" pos:column="30"/></name></name></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="55" pos:column="7">++<pos:position pos:line="55" pos:column="9"/></operator><name pos:line="55" pos:column="9">pattern<pos:position pos:line="55" pos:column="16"/></name></expr>;<pos:position pos:line="55" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="56" pos:column="7">++<pos:position pos:line="56" pos:column="9"/></operator><name pos:line="56" pos:column="9">pos<pos:position pos:line="56" pos:column="12"/></name></expr>;<pos:position pos:line="56" pos:column="13"/></expr_stmt>
      <break pos:line="57" pos:column="7">break;<pos:position pos:line="57" pos:column="13"/></break>

    <case pos:line="59" pos:column="5">case <expr><literal type="char" pos:line="59" pos:column="10">']'<pos:position pos:line="59" pos:column="13"/></literal></expr>:<pos:position pos:line="59" pos:column="14"/></case>				<comment type="block" pos:line="59" pos:column="41">/* illegal closing bracket */</comment>
      <comment type="block" pos:line="60" pos:column="7">/*printf("error: illegal pattern at pos %d\n", pos);*/</comment>
      <return pos:line="61" pos:column="7">return <expr><name pos:line="61" pos:column="14">GLOB_ERROR<pos:position pos:line="61" pos:column="24"/></name></expr>;<pos:position pos:line="61" pos:column="25"/></return>

    <case pos:line="63" pos:column="5">case <expr><literal type="char" pos:line="63" pos:column="10">'\\'<pos:position pos:line="63" pos:column="14"/></literal></expr>:<pos:position pos:line="63" pos:column="15"/></case>				<comment type="block" pos:line="63" pos:column="41">/* escaped character, skip '\' */</comment>
      <if pos:line="64" pos:column="7">if <condition pos:line="64" pos:column="10">(<expr><operator pos:line="64" pos:column="11">*<pos:position pos:line="64" pos:column="12"/></operator><operator pos:line="64" pos:column="12">(<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="13">buf<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">+<pos:position pos:line="64" pos:column="17"/></operator><literal type="number" pos:line="64" pos:column="17">1<pos:position pos:line="64" pos:column="18"/></literal><operator pos:line="64" pos:column="18">)<pos:position pos:line="64" pos:column="19"/></operator> <operator pos:line="64" pos:column="20">==<pos:position pos:line="64" pos:column="22"/></operator> <literal type="char" pos:line="64" pos:column="23">'\0'<pos:position pos:line="64" pos:column="27"/></literal></expr>)<pos:position pos:line="64" pos:column="28"/></condition><then pos:line="64" pos:column="28"> <block pos:line="64" pos:column="29">{		<comment type="block" pos:line="64" pos:column="41">/* but no escaping of '\0'! */</comment>
	<comment type="block" pos:line="65" pos:column="9">/*printf("error: illegal pattern at pos %d\n", pos); */</comment>
	<return pos:line="66" pos:column="9">return <expr><name pos:line="66" pos:column="16">GLOB_ERROR<pos:position pos:line="66" pos:column="26"/></name></expr>;<pos:position pos:line="66" pos:column="27"/></return>
      }<pos:position pos:line="67" pos:column="8"/></block></then></if>
      <expr_stmt><expr><operator pos:line="68" pos:column="7">++<pos:position pos:line="68" pos:column="9"/></operator><name pos:line="68" pos:column="9">pattern<pos:position pos:line="68" pos:column="16"/></name></expr>;<pos:position pos:line="68" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="69" pos:column="7">++<pos:position pos:line="69" pos:column="9"/></operator><name pos:line="69" pos:column="9">pos<pos:position pos:line="69" pos:column="12"/></name></expr>;<pos:position pos:line="69" pos:column="13"/></expr_stmt>				<comment type="block" pos:line="69" pos:column="41">/* intentional fallthrough */</comment>

    <default pos:line="71" pos:column="5">default:<pos:position pos:line="71" pos:column="13"/></default>
      <expr_stmt><expr><operator pos:line="72" pos:column="7">*<pos:position pos:line="72" pos:column="8"/></operator><name pos:line="72" pos:column="8">buf<pos:position pos:line="72" pos:column="11"/></name><operator pos:line="72" pos:column="11">++<pos:position pos:line="72" pos:column="13"/></operator> <operator pos:line="72" pos:column="14">=<pos:position pos:line="72" pos:column="15"/></operator> <operator pos:line="72" pos:column="16">*<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="17">pattern<pos:position pos:line="72" pos:column="24"/></name><operator pos:line="72" pos:column="24">++<pos:position pos:line="72" pos:column="26"/></operator></expr>;<pos:position pos:line="72" pos:column="27"/></expr_stmt>		<comment type="block" pos:line="72" pos:column="41">/* copy character to set element */</comment>
      <expr_stmt><expr><operator pos:line="73" pos:column="7">++<pos:position pos:line="73" pos:column="9"/></operator><name pos:line="73" pos:column="9">pos<pos:position pos:line="73" pos:column="12"/></name></expr>;<pos:position pos:line="73" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></switch>
  }<pos:position pos:line="75" pos:column="4"/></block></while>
  <return pos:line="76" pos:column="3">return <expr><name pos:line="76" pos:column="10">GLOB_ERROR<pos:position pos:line="76" pos:column="20"/></name></expr>;<pos:position pos:line="76" pos:column="21"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2320_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">auth_digest_get_key_value<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">chlg<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                                      <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">key<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="3" pos:column="39">char<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">value<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="4" pos:column="39">size_t<pos:position pos:line="4" pos:column="45"/></name></type> <name pos:line="4" pos:column="46">max_val_len<pos:position pos:line="4" pos:column="57"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="5" pos:column="39">char<pos:position pos:line="5" pos:column="43"/></name></type> <name pos:line="5" pos:column="44">end_char<pos:position pos:line="5" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="53"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">find_pos<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">find_pos<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">strstr<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">chlg<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="27">key<pos:position pos:line="10" pos:column="30"/></name></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">!<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">find_pos<pos:position pos:line="11" pos:column="15"/></name></expr>)<pos:position pos:line="11" pos:column="16"/></condition><then pos:line="11" pos:column="16">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">FALSE<pos:position pos:line="12" pos:column="17"/></name></expr>;<pos:position pos:line="12" pos:column="18"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">find_pos<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">+=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">strlen<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">key<pos:position pos:line="14" pos:column="25"/></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>

  <for pos:line="16" pos:column="3">for<control pos:line="16" pos:column="6">(<init><expr><name pos:line="16" pos:column="7">i<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <literal type="number" pos:line="16" pos:column="11">0<pos:position pos:line="16" pos:column="12"/></literal></expr>;<pos:position pos:line="16" pos:column="13"/></init> <condition><expr><operator pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">find_pos<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">&amp;&amp;<pos:position pos:line="16" pos:column="34"/></operator> <operator pos:line="16" pos:column="27">*<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="28">find_pos<pos:position pos:line="16" pos:column="36"/></name> <operator pos:line="16" pos:column="37">!=<pos:position pos:line="16" pos:column="39"/></operator> <name pos:line="16" pos:column="40">end_char<pos:position pos:line="16" pos:column="48"/></name> <operator pos:line="16" pos:column="49">&amp;&amp;<pos:position pos:line="16" pos:column="59"/></operator> <name pos:line="16" pos:column="52">i<pos:position pos:line="16" pos:column="53"/></name> <operator pos:line="16" pos:column="54">&lt;<pos:position pos:line="16" pos:column="58"/></operator> <name pos:line="16" pos:column="56">max_val_len<pos:position pos:line="16" pos:column="67"/></name> <operator pos:line="16" pos:column="68">-<pos:position pos:line="16" pos:column="69"/></operator> <literal type="number" pos:line="16" pos:column="70">1<pos:position pos:line="16" pos:column="71"/></literal></expr>;<pos:position pos:line="16" pos:column="72"/></condition> <incr><expr><operator pos:line="16" pos:column="73">++<pos:position pos:line="16" pos:column="75"/></operator><name pos:line="16" pos:column="75">i<pos:position pos:line="16" pos:column="76"/></name></expr></incr>)<pos:position pos:line="16" pos:column="77"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="5">value<pos:position pos:line="17" pos:column="10"/></name><index pos:line="17" pos:column="10">[<expr><name pos:line="17" pos:column="11">i<pos:position pos:line="17" pos:column="12"/></name></expr>]<pos:position pos:line="17" pos:column="13"/></index></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <operator pos:line="17" pos:column="16">*<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">find_pos<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">++<pos:position pos:line="17" pos:column="27"/></operator></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt></block></for>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">value<pos:position pos:line="18" pos:column="8"/></name><index pos:line="18" pos:column="8">[<expr><name pos:line="18" pos:column="9">i<pos:position pos:line="18" pos:column="10"/></name></expr>]<pos:position pos:line="18" pos:column="11"/></index></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <literal type="char" pos:line="18" pos:column="14">'\0'<pos:position pos:line="18" pos:column="18"/></literal></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>

  <return pos:line="20" pos:column="3">return <expr><name pos:line="20" pos:column="10">TRUE<pos:position pos:line="20" pos:column="14"/></name></expr>;<pos:position pos:line="20" pos:column="15"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

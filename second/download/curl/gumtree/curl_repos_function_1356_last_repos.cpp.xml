<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1356_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">curl_formget<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name><name pos:line="1" pos:column="18">struct<pos:position pos:line="1" pos:column="24"/></name> <name pos:line="1" pos:column="25">curl_httppost<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">form<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">void<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">arg<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                 <parameter><decl><type><name pos:line="2" pos:column="18">curl_formget_callback<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">append<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">curl_mimepart<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">toppart<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">Curl_mime_initpart<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><operator pos:line="7" pos:column="22">&amp;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="23">toppart<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="32">NULL<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt> <comment type="block" pos:line="7" pos:column="39">/* default form is empty */</comment>
  <expr_stmt><expr><name pos:line="8" pos:column="3">result<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">Curl_getformdata<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">NULL<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="35">&amp;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="36">toppart<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="45">form<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">NULL<pos:position pos:line="8" pos:column="55"/></name></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="57"/></expr_stmt>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">!<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">result<pos:position pos:line="9" pos:column="13"/></name></expr>)<pos:position pos:line="9" pos:column="14"/></condition><then pos:line="9" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">result<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">Curl_mime_prepare_headers<pos:position pos:line="10" pos:column="39"/></name><argument_list pos:line="10" pos:column="39">(<argument><expr><operator pos:line="10" pos:column="40">&amp;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="41">toppart<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="50">"multipart/form-data"<pos:position pos:line="10" pos:column="71"/></literal></expr></argument>,
                                       <argument><expr><name pos:line="11" pos:column="40">NULL<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">MIMESTRATEGY_FORM<pos:position pos:line="11" pos:column="63"/></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt></block></then></if>

  <while pos:line="13" pos:column="3">while<condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">result<pos:position pos:line="13" pos:column="16"/></name></expr>)<pos:position pos:line="13" pos:column="17"/></condition> <block pos:line="13" pos:column="18">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name></type> <name><name pos:line="14" pos:column="10">buffer<pos:position pos:line="14" pos:column="16"/></name><index pos:line="14" pos:column="16">[<expr><literal type="number" pos:line="14" pos:column="17">8192<pos:position pos:line="14" pos:column="21"/></literal></expr>]<pos:position pos:line="14" pos:column="22"/></index></name></decl>;<pos:position pos:line="14" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">size_t<pos:position pos:line="15" pos:column="11"/></name></type> <name pos:line="15" pos:column="12">nread<pos:position pos:line="15" pos:column="17"/></name> <init pos:line="15" pos:column="18">= <expr><call><name pos:line="15" pos:column="20">Curl_mime_read<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">buffer<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="43">1<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="46">sizeof <name pos:line="15" pos:column="53">buffer<pos:position pos:line="15" pos:column="59"/></name></sizeof></expr></argument>, <argument><expr><operator pos:line="15" pos:column="61">&amp;<pos:position pos:line="15" pos:column="66"/></operator><name pos:line="15" pos:column="62">toppart<pos:position pos:line="15" pos:column="69"/></name></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="71"/></decl_stmt>

    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><operator pos:line="17" pos:column="8">!<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">nread<pos:position pos:line="17" pos:column="14"/></name></expr>)<pos:position pos:line="17" pos:column="15"/></condition><then pos:line="17" pos:column="15">
      <block type="pseudo"><break pos:line="18" pos:column="7">break;<pos:position pos:line="18" pos:column="13"/></break></block></then></if>

    <switch pos:line="20" pos:column="5">switch<condition pos:line="20" pos:column="11">(<expr><name pos:line="20" pos:column="12">nread<pos:position pos:line="20" pos:column="17"/></name></expr>)<pos:position pos:line="20" pos:column="18"/></condition> <block pos:line="20" pos:column="19">{
    <default pos:line="21" pos:column="5">default:<pos:position pos:line="21" pos:column="13"/></default>
      <if pos:line="22" pos:column="7">if<condition pos:line="22" pos:column="9">(<expr><call><name pos:line="22" pos:column="10">append<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">arg<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="22">buffer<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="30">nread<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call> <operator pos:line="22" pos:column="37">!=<pos:position pos:line="22" pos:column="39"/></operator> <name pos:line="22" pos:column="40">nread<pos:position pos:line="22" pos:column="45"/></name></expr>)<pos:position pos:line="22" pos:column="46"/></condition><then pos:line="22" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="9">result<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">CURLE_READ_ERROR<pos:position pos:line="23" pos:column="34"/></name></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt></block></then></if>
      <break pos:line="24" pos:column="7">break;<pos:position pos:line="24" pos:column="13"/></break>
    <case pos:line="25" pos:column="5">case <expr><name pos:line="25" pos:column="10">CURL_READFUNC_ABORT<pos:position pos:line="25" pos:column="29"/></name></expr>:<pos:position pos:line="25" pos:column="30"/></case>
    <case pos:line="26" pos:column="5">case <expr><name pos:line="26" pos:column="10">CURL_READFUNC_PAUSE<pos:position pos:line="26" pos:column="29"/></name></expr>:<pos:position pos:line="26" pos:column="30"/></case>
      <break pos:line="27" pos:column="7">break;<pos:position pos:line="27" pos:column="13"/></break>
    }<pos:position pos:line="28" pos:column="6"/></block></switch>
  }<pos:position pos:line="29" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="31" pos:column="3">Curl_mime_cleanpart<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><operator pos:line="31" pos:column="23">&amp;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="24">toppart<pos:position pos:line="31" pos:column="31"/></name></expr></argument>)<pos:position pos:line="31" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
  <return pos:line="32" pos:column="3">return <expr><operator pos:line="32" pos:column="10">(<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="11">int<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">)<pos:position pos:line="32" pos:column="15"/></operator> <name pos:line="32" pos:column="16">result<pos:position pos:line="32" pos:column="22"/></name></expr>;<pos:position pos:line="32" pos:column="23"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

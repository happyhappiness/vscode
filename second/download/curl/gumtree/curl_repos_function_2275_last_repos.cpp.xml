<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2275_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">Curl_easy<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">curl_easy_duphandle<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">Curl_easy<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">data<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Curl_easy<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">outcurl<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><call><name pos:line="3" pos:column="31">calloc<pos:position pos:line="3" pos:column="37"/></name><argument_list pos:line="3" pos:column="37">(<argument><expr><literal type="number" pos:line="3" pos:column="38">1<pos:position pos:line="3" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="41">sizeof<argument_list pos:line="3" pos:column="47">(<argument><expr pos:line="3" pos:column="48">struct <name pos:line="3" pos:column="55">Curl_easy<pos:position pos:line="3" pos:column="64"/></name></expr></argument>)<pos:position pos:line="3" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="67"/></decl_stmt>
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><name pos:line="4" pos:column="6">NULL<pos:position pos:line="4" pos:column="10"/></name> <operator pos:line="4" pos:column="11">==<pos:position pos:line="4" pos:column="13"/></operator> <name pos:line="4" pos:column="14">outcurl<pos:position pos:line="4" pos:column="21"/></name></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22">
    <block type="pseudo"><goto pos:line="5" pos:column="5">goto <name pos:line="5" pos:column="10">fail<pos:position pos:line="5" pos:column="14"/></name>;<pos:position pos:line="5" pos:column="15"/></goto></block></then></if>

  <comment type="block" pos:line="7" pos:column="3">/*
   * We setup a few buffers we need. We should probably make them
   * get setup on-demand in the code, as that would probably decrease
   * the likeliness of us forgetting to init a buffer here in the future.
   */</comment>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">outcurl<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">set<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">.<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">buffer_size<pos:position pos:line="12" pos:column="27"/></name></name> <operator pos:line="12" pos:column="28">=<pos:position pos:line="12" pos:column="29"/></operator> <name><name pos:line="12" pos:column="30">data<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">set<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">.<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">buffer_size<pos:position pos:line="12" pos:column="51"/></name></name></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">outcurl<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">state<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">buffer<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <call><name pos:line="13" pos:column="27">malloc<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name><name pos:line="13" pos:column="34">outcurl<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">set<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">.<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="47">buffer_size<pos:position pos:line="13" pos:column="58"/></name></name> <operator pos:line="13" pos:column="59">+<pos:position pos:line="13" pos:column="60"/></operator> <literal type="number" pos:line="13" pos:column="61">1<pos:position pos:line="13" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><operator pos:line="14" pos:column="6">!<pos:position pos:line="14" pos:column="7"/></operator><name><name pos:line="14" pos:column="7">outcurl<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">state<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">.<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">buffer<pos:position pos:line="14" pos:column="28"/></name></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29">
    <block type="pseudo"><goto pos:line="15" pos:column="5">goto <name pos:line="15" pos:column="10">fail<pos:position pos:line="15" pos:column="14"/></name>;<pos:position pos:line="15" pos:column="15"/></goto></block></then></if>

  <expr_stmt><expr><name><name pos:line="17" pos:column="3">outcurl<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">state<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">.<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">headerbuff<pos:position pos:line="17" pos:column="28"/></name></name> <operator pos:line="17" pos:column="29">=<pos:position pos:line="17" pos:column="30"/></operator> <call><name pos:line="17" pos:column="31">malloc<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">HEADERSIZE<pos:position pos:line="17" pos:column="48"/></name></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><operator pos:line="18" pos:column="6">!<pos:position pos:line="18" pos:column="7"/></operator><name><name pos:line="18" pos:column="7">outcurl<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">state<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">.<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">headerbuff<pos:position pos:line="18" pos:column="32"/></name></name></expr>)<pos:position pos:line="18" pos:column="33"/></condition><then pos:line="18" pos:column="33">
    <block type="pseudo"><goto pos:line="19" pos:column="5">goto <name pos:line="19" pos:column="10">fail<pos:position pos:line="19" pos:column="14"/></name>;<pos:position pos:line="19" pos:column="15"/></goto></block></then></if>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">outcurl<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">state<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">.<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">headersize<pos:position pos:line="20" pos:column="28"/></name></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <name pos:line="20" pos:column="31">HEADERSIZE<pos:position pos:line="20" pos:column="41"/></name></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* copy all userdefined values */</comment>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><call><name pos:line="23" pos:column="6">Curl_dupset<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">outcurl<pos:position pos:line="23" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="27">data<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33">
    <block type="pseudo"><goto pos:line="24" pos:column="5">goto <name pos:line="24" pos:column="10">fail<pos:position pos:line="24" pos:column="14"/></name>;<pos:position pos:line="24" pos:column="15"/></goto></block></then></if>

  <comment type="block" pos:line="26" pos:column="3">/* the connection cache is setup on demand */</comment>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">outcurl<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">state<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">.<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">conn_cache<pos:position pos:line="27" pos:column="28"/></name></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">NULL<pos:position pos:line="27" pos:column="35"/></name></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="29" pos:column="3">outcurl<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">state<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">lastconnect<pos:position pos:line="29" pos:column="29"/></name></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <name pos:line="29" pos:column="32">NULL<pos:position pos:line="29" pos:column="36"/></name></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="31" pos:column="3">outcurl<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">progress<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">.<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">flags<pos:position pos:line="31" pos:column="26"/></name></name>    <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <name><name pos:line="31" pos:column="32">data<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">progress<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">.<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="47">flags<pos:position pos:line="31" pos:column="52"/></name></name></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">outcurl<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">progress<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">.<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">callback<pos:position pos:line="32" pos:column="29"/></name></name> <operator pos:line="32" pos:column="30">=<pos:position pos:line="32" pos:column="31"/></operator> <name><name pos:line="32" pos:column="32">data<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">progress<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">.<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="47">callback<pos:position pos:line="32" pos:column="55"/></name></name></expr>;<pos:position pos:line="32" pos:column="56"/></expr_stmt>

  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><name><name pos:line="34" pos:column="6">data<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">cookies<pos:position pos:line="34" pos:column="19"/></name></name></expr>)<pos:position pos:line="34" pos:column="20"/></condition><then pos:line="34" pos:column="20"> <block pos:line="34" pos:column="21">{
    <comment type="block" pos:line="35" pos:column="5">/* If cookies are enabled in the parent handle, we enable them
       in the clone as well! */</comment>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">outcurl<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">cookies<pos:position pos:line="37" pos:column="21"/></name></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <call><name pos:line="37" pos:column="24">Curl_cookie_init<pos:position pos:line="37" pos:column="40"/></name><argument_list pos:line="37" pos:column="40">(<argument><expr><name pos:line="37" pos:column="41">data<pos:position pos:line="37" pos:column="45"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="38" pos:column="41">data<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">-&gt;<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="47">cookies<pos:position pos:line="38" pos:column="54"/></name><operator pos:line="38" pos:column="54">-&gt;<pos:position pos:line="38" pos:column="59"/></operator><name pos:line="38" pos:column="56">filename<pos:position pos:line="38" pos:column="64"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="39" pos:column="41">outcurl<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">cookies<pos:position pos:line="39" pos:column="57"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="40" pos:column="41">data<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">-&gt;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="47">set<pos:position pos:line="40" pos:column="50"/></name><operator pos:line="40" pos:column="50">.<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="51">cookiesession<pos:position pos:line="40" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="66"/></expr_stmt>
    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><operator pos:line="41" pos:column="8">!<pos:position pos:line="41" pos:column="9"/></operator><name><name pos:line="41" pos:column="9">outcurl<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">cookies<pos:position pos:line="41" pos:column="25"/></name></name></expr>)<pos:position pos:line="41" pos:column="26"/></condition><then pos:line="41" pos:column="26">
      <block type="pseudo"><goto pos:line="42" pos:column="7">goto <name pos:line="42" pos:column="12">fail<pos:position pos:line="42" pos:column="16"/></name>;<pos:position pos:line="42" pos:column="17"/></goto></block></then></if>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="45" pos:column="3">/* duplicate all values in 'change' */</comment>
  <if pos:line="46" pos:column="3">if<condition pos:line="46" pos:column="5">(<expr><name><name pos:line="46" pos:column="6">data<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">-&gt;<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="12">change<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">.<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="19">cookielist<pos:position pos:line="46" pos:column="29"/></name></name></expr>)<pos:position pos:line="46" pos:column="30"/></condition><then pos:line="46" pos:column="30"> <block pos:line="46" pos:column="31">{
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">outcurl<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">-&gt;<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="14">change<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">.<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="21">cookielist<pos:position pos:line="47" pos:column="31"/></name></name> <operator pos:line="47" pos:column="32">=<pos:position pos:line="47" pos:column="33"/></operator>
      <call><name pos:line="48" pos:column="7">Curl_slist_duplicate<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><name><name pos:line="48" pos:column="28">data<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">-&gt;<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="34">change<pos:position pos:line="48" pos:column="40"/></name><operator pos:line="48" pos:column="40">.<pos:position pos:line="48" pos:column="41"/></operator><name pos:line="48" pos:column="41">cookielist<pos:position pos:line="48" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="53"/></expr_stmt>
    <if pos:line="49" pos:column="5">if<condition pos:line="49" pos:column="7">(<expr><operator pos:line="49" pos:column="8">!<pos:position pos:line="49" pos:column="9"/></operator><name><name pos:line="49" pos:column="9">outcurl<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">change<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">.<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="25">cookielist<pos:position pos:line="49" pos:column="35"/></name></name></expr>)<pos:position pos:line="49" pos:column="36"/></condition><then pos:line="49" pos:column="36">
      <block type="pseudo"><goto pos:line="50" pos:column="7">goto <name pos:line="50" pos:column="12">fail<pos:position pos:line="50" pos:column="16"/></name>;<pos:position pos:line="50" pos:column="17"/></goto></block></then></if>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <if pos:line="53" pos:column="3">if<condition pos:line="53" pos:column="5">(<expr><name><name pos:line="53" pos:column="6">data<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">change<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">.<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="19">url<pos:position pos:line="53" pos:column="22"/></name></name></expr>)<pos:position pos:line="53" pos:column="23"/></condition><then pos:line="53" pos:column="23"> <block pos:line="53" pos:column="24">{
    <expr_stmt><expr><name><name pos:line="54" pos:column="5">outcurl<pos:position pos:line="54" pos:column="12"/></name><operator pos:line="54" pos:column="12">-&gt;<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="14">change<pos:position pos:line="54" pos:column="20"/></name><operator pos:line="54" pos:column="20">.<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="21">url<pos:position pos:line="54" pos:column="24"/></name></name> <operator pos:line="54" pos:column="25">=<pos:position pos:line="54" pos:column="26"/></operator> <call><name pos:line="54" pos:column="27">strdup<pos:position pos:line="54" pos:column="33"/></name><argument_list pos:line="54" pos:column="33">(<argument><expr><name><name pos:line="54" pos:column="34">data<pos:position pos:line="54" pos:column="38"/></name><operator pos:line="54" pos:column="38">-&gt;<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="40">change<pos:position pos:line="54" pos:column="46"/></name><operator pos:line="54" pos:column="46">.<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="47">url<pos:position pos:line="54" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="52"/></expr_stmt>
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><operator pos:line="55" pos:column="8">!<pos:position pos:line="55" pos:column="9"/></operator><name><name pos:line="55" pos:column="9">outcurl<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">-&gt;<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="18">change<pos:position pos:line="55" pos:column="24"/></name><operator pos:line="55" pos:column="24">.<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="25">url<pos:position pos:line="55" pos:column="28"/></name></name></expr>)<pos:position pos:line="55" pos:column="29"/></condition><then pos:line="55" pos:column="29">
      <block type="pseudo"><goto pos:line="56" pos:column="7">goto <name pos:line="56" pos:column="12">fail<pos:position pos:line="56" pos:column="16"/></name>;<pos:position pos:line="56" pos:column="17"/></goto></block></then></if>
    <expr_stmt><expr><name><name pos:line="57" pos:column="5">outcurl<pos:position pos:line="57" pos:column="12"/></name><operator pos:line="57" pos:column="12">-&gt;<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="14">change<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">.<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="21">url_alloc<pos:position pos:line="57" pos:column="30"/></name></name> <operator pos:line="57" pos:column="31">=<pos:position pos:line="57" pos:column="32"/></operator> <name pos:line="57" pos:column="33">TRUE<pos:position pos:line="57" pos:column="37"/></name></expr>;<pos:position pos:line="57" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>

  <if pos:line="60" pos:column="3">if<condition pos:line="60" pos:column="5">(<expr><name><name pos:line="60" pos:column="6">data<pos:position pos:line="60" pos:column="10"/></name><operator pos:line="60" pos:column="10">-&gt;<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="12">change<pos:position pos:line="60" pos:column="18"/></name><operator pos:line="60" pos:column="18">.<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="19">referer<pos:position pos:line="60" pos:column="26"/></name></name></expr>)<pos:position pos:line="60" pos:column="27"/></condition><then pos:line="60" pos:column="27"> <block pos:line="60" pos:column="28">{
    <expr_stmt><expr><name><name pos:line="61" pos:column="5">outcurl<pos:position pos:line="61" pos:column="12"/></name><operator pos:line="61" pos:column="12">-&gt;<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="14">change<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">.<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="21">referer<pos:position pos:line="61" pos:column="28"/></name></name> <operator pos:line="61" pos:column="29">=<pos:position pos:line="61" pos:column="30"/></operator> <call><name pos:line="61" pos:column="31">strdup<pos:position pos:line="61" pos:column="37"/></name><argument_list pos:line="61" pos:column="37">(<argument><expr><name><name pos:line="61" pos:column="38">data<pos:position pos:line="61" pos:column="42"/></name><operator pos:line="61" pos:column="42">-&gt;<pos:position pos:line="61" pos:column="47"/></operator><name pos:line="61" pos:column="44">change<pos:position pos:line="61" pos:column="50"/></name><operator pos:line="61" pos:column="50">.<pos:position pos:line="61" pos:column="51"/></operator><name pos:line="61" pos:column="51">referer<pos:position pos:line="61" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="60"/></expr_stmt>
    <if pos:line="62" pos:column="5">if<condition pos:line="62" pos:column="7">(<expr><operator pos:line="62" pos:column="8">!<pos:position pos:line="62" pos:column="9"/></operator><name><name pos:line="62" pos:column="9">outcurl<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">-&gt;<pos:position pos:line="62" pos:column="21"/></operator><name pos:line="62" pos:column="18">change<pos:position pos:line="62" pos:column="24"/></name><operator pos:line="62" pos:column="24">.<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="25">referer<pos:position pos:line="62" pos:column="32"/></name></name></expr>)<pos:position pos:line="62" pos:column="33"/></condition><then pos:line="62" pos:column="33">
      <block type="pseudo"><goto pos:line="63" pos:column="7">goto <name pos:line="63" pos:column="12">fail<pos:position pos:line="63" pos:column="16"/></name>;<pos:position pos:line="63" pos:column="17"/></goto></block></then></if>
    <expr_stmt><expr><name><name pos:line="64" pos:column="5">outcurl<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">-&gt;<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="14">change<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">.<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="21">referer_alloc<pos:position pos:line="64" pos:column="34"/></name></name> <operator pos:line="64" pos:column="35">=<pos:position pos:line="64" pos:column="36"/></operator> <name pos:line="64" pos:column="37">TRUE<pos:position pos:line="64" pos:column="41"/></name></expr>;<pos:position pos:line="64" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="65" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="67" pos:column="3">/* Clone the resolver handle, if present, for the new handle */</comment>
  <if pos:line="68" pos:column="3">if<condition pos:line="68" pos:column="5">(<expr><call><name pos:line="68" pos:column="6">Curl_resolver_duphandle<pos:position pos:line="68" pos:column="29"/></name><argument_list pos:line="68" pos:column="29">(<argument><expr><operator pos:line="68" pos:column="30">&amp;<pos:position pos:line="68" pos:column="35"/></operator><name><name pos:line="68" pos:column="31">outcurl<pos:position pos:line="68" pos:column="38"/></name><operator pos:line="68" pos:column="38">-&gt;<pos:position pos:line="68" pos:column="43"/></operator><name pos:line="68" pos:column="40">state<pos:position pos:line="68" pos:column="45"/></name><operator pos:line="68" pos:column="45">.<pos:position pos:line="68" pos:column="46"/></operator><name pos:line="68" pos:column="46">resolver<pos:position pos:line="68" pos:column="54"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="69" pos:column="30">data<pos:position pos:line="69" pos:column="34"/></name><operator pos:line="69" pos:column="34">-&gt;<pos:position pos:line="69" pos:column="39"/></operator><name pos:line="69" pos:column="36">state<pos:position pos:line="69" pos:column="41"/></name><operator pos:line="69" pos:column="41">.<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="42">resolver<pos:position pos:line="69" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="52"/></condition><then pos:line="69" pos:column="52">
    <block type="pseudo"><goto pos:line="70" pos:column="5">goto <name pos:line="70" pos:column="10">fail<pos:position pos:line="70" pos:column="14"/></name>;<pos:position pos:line="70" pos:column="15"/></goto></block></then></if>

  <expr_stmt><expr><call><name pos:line="72" pos:column="3">Curl_convert_setup<pos:position pos:line="72" pos:column="21"/></name><argument_list pos:line="72" pos:column="21">(<argument><expr><name pos:line="72" pos:column="22">outcurl<pos:position pos:line="72" pos:column="29"/></name></expr></argument>)<pos:position pos:line="72" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="74" pos:column="3">Curl_initinfo<pos:position pos:line="74" pos:column="16"/></name><argument_list pos:line="74" pos:column="16">(<argument><expr><name pos:line="74" pos:column="17">outcurl<pos:position pos:line="74" pos:column="24"/></name></expr></argument>)<pos:position pos:line="74" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="76" pos:column="3">outcurl<pos:position pos:line="76" pos:column="10"/></name><operator pos:line="76" pos:column="10">-&gt;<pos:position pos:line="76" pos:column="15"/></operator><name pos:line="76" pos:column="12">magic<pos:position pos:line="76" pos:column="17"/></name></name> <operator pos:line="76" pos:column="18">=<pos:position pos:line="76" pos:column="19"/></operator> <name pos:line="76" pos:column="20">CURLEASY_MAGIC_NUMBER<pos:position pos:line="76" pos:column="41"/></name></expr>;<pos:position pos:line="76" pos:column="42"/></expr_stmt>

  <comment type="block" pos:line="78" pos:column="3">/* we reach this point and thus we are OK */</comment>

  <return pos:line="80" pos:column="3">return <expr><name pos:line="80" pos:column="10">outcurl<pos:position pos:line="80" pos:column="17"/></name></expr>;<pos:position pos:line="80" pos:column="18"/></return>

  <label><name pos:line="82" pos:column="3">fail<pos:position pos:line="82" pos:column="7"/></name>:<pos:position pos:line="82" pos:column="8"/></label>

  <if pos:line="84" pos:column="3">if<condition pos:line="84" pos:column="5">(<expr><name pos:line="84" pos:column="6">outcurl<pos:position pos:line="84" pos:column="13"/></name></expr>)<pos:position pos:line="84" pos:column="14"/></condition><then pos:line="84" pos:column="14"> <block pos:line="84" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">curl_slist_free_all<pos:position pos:line="85" pos:column="24"/></name><argument_list pos:line="85" pos:column="24">(<argument><expr><name><name pos:line="85" pos:column="25">outcurl<pos:position pos:line="85" pos:column="32"/></name><operator pos:line="85" pos:column="32">-&gt;<pos:position pos:line="85" pos:column="37"/></operator><name pos:line="85" pos:column="34">change<pos:position pos:line="85" pos:column="40"/></name><operator pos:line="85" pos:column="40">.<pos:position pos:line="85" pos:column="41"/></operator><name pos:line="85" pos:column="41">cookielist<pos:position pos:line="85" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="86" pos:column="5">outcurl<pos:position pos:line="86" pos:column="12"/></name><operator pos:line="86" pos:column="12">-&gt;<pos:position pos:line="86" pos:column="17"/></operator><name pos:line="86" pos:column="14">change<pos:position pos:line="86" pos:column="20"/></name><operator pos:line="86" pos:column="20">.<pos:position pos:line="86" pos:column="21"/></operator><name pos:line="86" pos:column="21">cookielist<pos:position pos:line="86" pos:column="31"/></name></name> <operator pos:line="86" pos:column="32">=<pos:position pos:line="86" pos:column="33"/></operator> <name pos:line="86" pos:column="34">NULL<pos:position pos:line="86" pos:column="38"/></name></expr>;<pos:position pos:line="86" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">Curl_safefree<pos:position pos:line="87" pos:column="18"/></name><argument_list pos:line="87" pos:column="18">(<argument><expr><name><name pos:line="87" pos:column="19">outcurl<pos:position pos:line="87" pos:column="26"/></name><operator pos:line="87" pos:column="26">-&gt;<pos:position pos:line="87" pos:column="31"/></operator><name pos:line="87" pos:column="28">state<pos:position pos:line="87" pos:column="33"/></name><operator pos:line="87" pos:column="33">.<pos:position pos:line="87" pos:column="34"/></operator><name pos:line="87" pos:column="34">buffer<pos:position pos:line="87" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">Curl_safefree<pos:position pos:line="88" pos:column="18"/></name><argument_list pos:line="88" pos:column="18">(<argument><expr><name><name pos:line="88" pos:column="19">outcurl<pos:position pos:line="88" pos:column="26"/></name><operator pos:line="88" pos:column="26">-&gt;<pos:position pos:line="88" pos:column="31"/></operator><name pos:line="88" pos:column="28">state<pos:position pos:line="88" pos:column="33"/></name><operator pos:line="88" pos:column="33">.<pos:position pos:line="88" pos:column="34"/></operator><name pos:line="88" pos:column="34">headerbuff<pos:position pos:line="88" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">Curl_safefree<pos:position pos:line="89" pos:column="18"/></name><argument_list pos:line="89" pos:column="18">(<argument><expr><name><name pos:line="89" pos:column="19">outcurl<pos:position pos:line="89" pos:column="26"/></name><operator pos:line="89" pos:column="26">-&gt;<pos:position pos:line="89" pos:column="31"/></operator><name pos:line="89" pos:column="28">change<pos:position pos:line="89" pos:column="34"/></name><operator pos:line="89" pos:column="34">.<pos:position pos:line="89" pos:column="35"/></operator><name pos:line="89" pos:column="35">url<pos:position pos:line="89" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">Curl_safefree<pos:position pos:line="90" pos:column="18"/></name><argument_list pos:line="90" pos:column="18">(<argument><expr><name><name pos:line="90" pos:column="19">outcurl<pos:position pos:line="90" pos:column="26"/></name><operator pos:line="90" pos:column="26">-&gt;<pos:position pos:line="90" pos:column="31"/></operator><name pos:line="90" pos:column="28">change<pos:position pos:line="90" pos:column="34"/></name><operator pos:line="90" pos:column="34">.<pos:position pos:line="90" pos:column="35"/></operator><name pos:line="90" pos:column="35">referer<pos:position pos:line="90" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">Curl_freeset<pos:position pos:line="91" pos:column="17"/></name><argument_list pos:line="91" pos:column="17">(<argument><expr><name pos:line="91" pos:column="18">outcurl<pos:position pos:line="91" pos:column="25"/></name></expr></argument>)<pos:position pos:line="91" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">free<pos:position pos:line="92" pos:column="9"/></name><argument_list pos:line="92" pos:column="9">(<argument><expr><name pos:line="92" pos:column="10">outcurl<pos:position pos:line="92" pos:column="17"/></name></expr></argument>)<pos:position pos:line="92" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="93" pos:column="4"/></block></then></if>

  <return pos:line="95" pos:column="3">return <expr><name pos:line="95" pos:column="10">NULL<pos:position pos:line="95" pos:column="14"/></name></expr>;<pos:position pos:line="95" pos:column="15"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

"                                  _   _ ____  _     \n"
"  Project                     ___| | | |  _ \\| |    \n"
"                             / __| | | | |_) | |    \n"
"                            | (__| |_| |  _ <| |___ \n"
"                             \\___|\\___/|_| \\_\\_____|\n"
"NAME\n"
"       curl - transfer a URL\n"
"\n"
"SYNOPSIS\n"
"       curl [options] [URL...]\n"
"\n"
"DESCRIPTION\n"
"       curl is a client to get documents/files from or send docu-\n"
"       ments to a server, using any of  the  supported  protocols\n"
);
 puts(
"       (HTTP,  HTTPS,  FTP,  GOPHER, DICT, TELNET, LDAP or FILE).\n"
"       The command is designed to work without  user  interaction\n"
"       or any kind of interactivity.\n"
"\n"
"       curl offers a busload of useful tricks like proxy support,\n"
"       user authentication, ftp upload, HTTP post,  SSL  (https:)\n"
"       connections, cookies, file transfer resume and more.\n"
"\n"
"URL\n"
"       The  URL  syntax  is  protocol  dependent.  You'll  find a\n"
"       detailed description in RFC 2396.\n"
"\n"
);
 puts(
"       You can specify multiple URLs or parts of URLs by  writing\n"
"       part sets within braces as in:\n"
"\n"
"        http://site.{one,two,three}.com\n"
"\n"
"       or  you  can get sequences of alphanumeric series by using\n"
"       [] as in:\n"
"\n"
"        ftp://ftp.numericals.com/file[1-100].txt\n"
"        ftp://ftp.numericals.com/file[001-100].txt    (with lead-\n"
"       ing zeros)\n"
"        ftp://ftp.letters.com/file[a-z].txt\n"
"\n"
"       It  is  possible  to  specify up to 9 sets or series for a\n"
);
 puts(
"       URL, but no nesting is supported at the moment:\n"
"\n"
"        http://www.any.org/archive[1996-1999]/vol-\n"
"       ume[1-4]part{a,b,c,index}.html\n"
"\n"
"       You  can  specify  any amount of URLs on the command line.\n"
"       They will be fetched in a sequential manner in the  speci-\n"
"       fied order.\n"
"\n"
"       Curl  will attempt to re-use connections for multiple file\n"
"       transfers, so that getting many files from the same server\n"
"       will  not do multiple connects / handshakes. This improves\n"
);
 puts(
"       speed. Of course this is only done on files specified on a\n"
"       single  command  line  and cannot be used between separate\n"
"       curl invokes.\n"
"\n"
"OPTIONS\n"
"       -a/--append\n"
"              (FTP) When used in a ftp  upload,  this  will  tell\n"
"              curl  to append to the target file instead of over-\n"
"              writing it. If the file doesn't exist, it  will  be\n"
"              created.\n"
"\n"
"              If  this  option is used twice, the second one will\n"
);
 puts(
"              disable append mode again.\n"
"\n"
"       -A/--user-agent <agent string>\n"
"              (HTTP) Specify the User-Agent string to send to the\n"
"              HTTP  server.  Some badly done CGIs fail if its not\n"
"              set to \"Mozilla/4.0\".   To  encode  blanks  in  the\n"
"              string,  surround  the  string  with  single  quote\n"
"              marks.  This can also be set with  the  -H/--header\n"
"              flag of course.\n"
"\n"
);
 puts(
"              If  this option is set more than once, the last one\n"
"              will be the one that's used.\n"
"\n"
"       -b/--cookie <name=data>\n"
"              (HTTP) Pass the  data  to  the  HTTP  server  as  a\n"
"              cookie.   It  is  supposedly  the  data  previously\n"
"              received from the server in a  \"Set-Cookie:\"  line.\n"
"              The  data  should  be  in the format \"NAME1=VALUE1;\n"
"              NAME2=VALUE2\".\n"
"\n"
);
 puts(
"              If no '=' letter is used in the line, it is treated\n"
"              as  a  filename  to  use  to read previously stored\n"
"              cookie lines from, which should  be  used  in  this\n"
"              session if they match. Using this method also acti-\n"
"              vates the \"cookie  parser\"  which  will  make  curl\n"
"              record  incoming cookies too, which may be handy if\n"
"              you're  using  this   in   combination   with   the\n"
);
 puts(
"              -L/--location  option.  The file format of the file\n"
"              to read cookies from should be plain  HTTP  headers\n"
"              or the Netscape/Mozilla cookie file format.\n"
"\n"
"              NOTE  that  the  file specified with -b/--cookie is\n"
"              only used as input. No cookies will  be  stored  in\n"
"              the  file.  To store cookies, save the HTTP headers\n"
"              to a file using -D/--dump-header!\n"
"\n"
);
 puts(
"              If this option is set more than once, the last  one\n"
"              will be the one that's used.\n"
"\n"
"       -B/--use-ascii\n"
"              Use ASCII transfer when getting an FTP file or LDAP\n"
"              info. For FTP, this can also be enforced  by  using\n"
"              an URL that ends with \";type=A\". This option causes\n"
"              data sent to stdout to be in text  mode  for  win32\n"
"              systems.\n"
"\n"
"              If  this  option is used twice, the second one will\n"
);
 puts(
"              disable ASCII usage.\n"
"       --ciphers <list of ciphers>\n"
"              (SSL) Specifies which ciphers to use in the connec-\n"
"              tion.  The  list  of  ciphers  must  be using valid\n"
"              ciphers. Read up on SSL cipher list details on this\n"
"              URL:  http://www.openssl.org/docs/apps/ciphers.html\n"
"              (Option added in curl 7.9)\n"
"\n"
"              If this option is used several times, the last  one\n"
"              will override the others.\n"
"\n"
);
 puts(
"       --connect-timeout <seconds>\n"
"              Maximum  time in seconds that you allow the connec-\n"
"              tion to the server to take.  This only  limits  the\n"
"              connection  phase,  once  curl  has  connected this\n"
"              option is of no more use. See also  the  --max-time\n"
"              option.\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       -c/--cookie-jar <file name>\n"
);
 puts(
"              Specify to which file you want curl  to  write  all\n"
"              cookies  after  a  completed operation. Curl writes\n"
"              all cookies previously read from a  specified  file\n"
"              as   well  as  all  cookies  received  from  remote\n"
"              server(s). If no cookies are known, no file will be\n"
"              written.   The  file  will  be  written  using  the\n"
"              Netscape cookie file format. If you  set  the  file\n"
);
 puts(
"              name  to  a  single  dash, \"-\", the cookies will be\n"
"              written to stdout. (Option added in curl 7.9)\n"
"\n"
"              If this option is  used  several  times,  the  last\n"
"              specfied file name will be used.\n"
"\n"
"       -C/--continue-at <offset>\n"
"              Continue/Resume  a  previous  file  transfer at the\n"
"              given offset. The given offset is the exact  number\n"
"              of  bytes  that  will  be  skipped counted from the\n"
);
 puts(
"              beginning of the source file before  it  is  trans-\n"
"              fered  to  the  destination.  If used with uploads,\n"
"              the ftp server command SIZE will  not  be  used  by\n"
"              curl.\n"
"\n"
"              Use  \"-C  -\" to tell curl to automatically find out\n"
"              where/how to resume the transfer. It then uses  the\n"
"              given output/input files to figure that out.\n"
"\n"
"              If  this option is used several times, the last one\n"
);
 puts(
"              will be used.\n"
"\n"
"       ---create-dirs\n"
"              When used in conjunction with the -o  option,  curl\n"
"              will create the necessary local directory hierarchy\n"
"              as needed.\n"
"       --crlf (FTP) Convert LF to CRLF in upload. Useful for  MVS\n"
"              (OS/390).\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable crlf converting.\n"
"\n"
"       -d/--data <data>\n"
"              (HTTP) Sends the specified data in a  POST  request\n"
);
 puts(
"              to the HTTP server, in a way that can emulate as if\n"
"              a user has filled in a HTML form  and  pressed  the\n"
"              submit  button.  Note that the data is sent exactly\n"
"              as specified with no  extra  processing  (with  all\n"
"              newlines  cut  off).   The  data  is expected to be\n"
"              \"url-encoded\". This will cause  curl  to  pass  the\n"
"              data  to the server using the content-type applica-\n"
);
 puts(
"              tion/x-www-form-urlencoded. Compare to -F. If  more\n"
"              than  one -d/--data option is used on the same com-\n"
"              mand line, the data pieces specified will be merged\n"
"              together  with  a  separating &-letter. Thus, using\n"
"              '-d name=daniel -d skill=lousy'  would  generate  a\n"
"              post        chunk       that       looks       like\n"
"              'name=daniel&skill=lousy'.\n"
"\n"
);
 puts(
"              If you start the data with the letter @,  the  rest\n"
"              should  be  a file name to read the data from, or -\n"
"              if you want curl to read the data from stdin.   The\n"
"              contents  of  the file must already be url-encoded.\n"
"              Multiple files can also be specified. Posting  data\n"
"              from  a file named 'foobar' would thus be done with\n"
"              \"--data @foobar\".\n"
"\n"
"              To post data purely binary, you should instead  use\n"
);
 puts(
"              the --data-binary option.\n"
"\n"
"              -d/--data is the same as --data-ascii.\n"
"\n"
"              If this option is used several times, the ones fol-\n"
"              lowing the first will append data.\n"
"\n"
"       --data-ascii <data>\n"
"              (HTTP) This is an alias for the -d/--data option.\n"
"\n"
"              If this option is used several times, the ones fol-\n"
"              lowing the first will append data.\n"
"\n"
"       --data-binary <data>\n"
);
 puts(
"              (HTTP)  This  posts  data  in  a  similar manner as\n"
"              --data-ascii does, although when using this  option\n"
"              the  entire  context of the posted data is kept as-\n"
"              is. If you want to post a binary file  without  the\n"
"              strip-newlines  feature of the --data-ascii option,\n"
"              this is for you.\n"
"\n"
"              If this option is  used  several  times,  the  ones\n"
"              following the first will append data.\n"
"\n"
);
 puts(
"       --disable-epsv\n"
"              (FTP) Tell curl to disable the use of the EPSV com-\n"
"              mand when doing passive FTP  downloads.  Curl  will\n"
"              normally  always  first  attempt to use EPSV before\n"
"              PASV, but with this option, it will not  try  using\n"
"              EPSV.\n"
"\n"
"              If  this  option is used several times, each occur-\n"
"              rence will toggle this on/off.\n"
"\n"
"       -D/--dump-header <file>\n"
);
 puts(
"              Write the protocol headers to the specified file.\n"
"\n"
"              This option is handy to use when you want to  store\n"
"              the  cookies  that  a  HTTP  site sends to you. The\n"
"              cookies could then be read in a second curl  invoke\n"
"              by using the -b/--cookie option!\n"
"\n"
"              When used on FTP, the ftp server response lines are\n"
"              considered  being  \"headers\"  and  thus  are  saved\n"
"              there.\n"
"\n"
);
 puts(
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       -e/--referer <URL>\n"
"              (HTTP) Sends the \"Referer Page\" information to  the\n"
"              HTTP   server.  This  can  also  be  set  with  the\n"
"              -H/--header  flag  of  course.   When   used   with\n"
"              -L/--location you can append \";auto\" to the referer\n"
"              URL to make curl automatically set the previous URL\n"
);
 puts(
"              when  it  follows  a  Location: header. The \";auto\"\n"
"              string can be used alone, even if you don't set  an\n"
"              initial referer.\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       --environment\n"
"              (RISC OS ONLY) Sets a range  of  environment  vari-\n"
"              ables,  using  the names the -w option supports, to\n"
"              easier allow extraction of useful information after\n"
);
 puts(
"              having run curl.\n"
"\n"
"              If  this  option is used several times, each occur-\n"
"              rence will toggle this on/off.\n"
"\n"
"       --egd-file <file>\n"
"              (HTTPS) Specify the path name to the Entropy  Gath-\n"
"              ering Daemon socket. The socket is used to seed the\n"
"              random engine for SSL  connections.  See  also  the\n"
"              --random-file option.\n"
"       -E/--cert <certificate[:password]>\n"
);
 puts(
"              (HTTPS) Tells curl to use the specified certificate\n"
"              file when getting a file with HTTPS.  The  certifi-\n"
"              cate  must be in PEM format.  If the optional pass-\n"
"              word isn't specified, it will be queried for on the\n"
"              terminal. Note that this certificate is the private\n"
"              key and the private certificate concatenated!\n"
"\n"
"              If this option is used several times, the last  one\n"
"              will be used.\n"
"\n"
);
 puts(
"       --cacert <CA certificate>\n"
"              (HTTPS) Tells curl to use the specified certificate\n"
"              file to verify the peer. The file may contain  mul-\n"
"              tiple  CA  certificates. The certificate(s) must be\n"
"              in PEM format.\n"
"\n"
"              curl  recognizes  the  environment  variable  named\n"
"              'CURL_CA_BUNDLE' if that is set, and uses the given\n"
"              path as a path to a CA  cert  bundle.  This  option\n"
"              overrides that variable.\n"
"\n"
);
 puts(
"              The windows version of curl will automatically look\n"
"              for a CA  certs  file  named  'curl-ca-bundle.crt',\n"
"              either in the same directory as curl.exe, or in the\n"
"              Current Working Directory, or in any  folder  along\n"
"              your PATH.\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       --capath <CA certificate directory>\n"
"              (HTTPS) Tells curl to use the specified certificate\n"
);
 puts(
"              directory to verify the peer. The certificates must\n"
"              be in PEM format, and the directory must have  been\n"
"              processed  using the c_rehash utility supplied with\n"
"              openssl. Using --capath  can  allow  curl  to  make\n"
"              https  connections much more efficiently than using\n"
"              --cacert if the --cacert file contains many CA cer-\n"
"              tificates.\n"
"\n"
"              If  this option is used several times, the last one\n"
);
 puts(
"              will be used.\n"
"\n"
"       -f/--fail\n"
"              (HTTP) Fail silently (no output at all)  on  server\n"
"              errors.  This  is  mostly  done like this to better\n"
"              enable scripts  etc  to  better  deal  with  failed\n"
"              attempts.  In normal cases when a HTTP server fails\n"
"              to deliver a document, it returns a  HTML  document\n"
"              stating  so  (which  often  also  describes why and\n"
);
 puts(
"              more). This flag will prevent curl from  outputting\n"
"              that and fail silently instead.\n"
"              If this option is used twice, the second will again\n"
"              disable silent failure.\n"
"\n"
"       -F/--form <name=content>\n"
"              (HTTP) This lets curl emulate a filled in  form  in\n"
"              which  a  user  has pressed the submit button. This\n"
"              causes curl to POST  data  using  the  content-type\n"
);
 puts(
"              multipart/form-data   according  to  RFC1867.  This\n"
"              enables uploading of binary files etc. To force the\n"
"              'content'  part  to  be  be a file, prefix the file\n"
"              name with an @ sign. To just get the  content  part\n"
"              from  a  file, prefix the file name with the letter\n"
"              <. The difference between @ and < is  then  that  @\n"
"              makes  a  file  get  attached in the post as a file\n"
);
 puts(
"              upload, while the < makes a text field and just get\n"
"              the contents for that text field from a file.\n"
"\n"
"              Example,  to send your password file to the server,\n"
"              where 'password' is the name of the  form-field  to\n"
"              which /etc/passwd will be the input:\n"
"\n"
"              curl -F password=@/etc/passwd www.mypasswords.com\n"
"\n"
"              To  read  the file's content from stdin insted of a\n"
);
 puts(
"              file, use - where the  file  name  should've  been.\n"
"              This goes for both @ and < constructs.\n"
"\n"
"              This option can be used multiple times.\n"
"\n"
"       -g/--globoff\n"
"              This option switches off the \"URL globbing parser\".\n"
"              When you set this option, you can specify URLs that\n"
"              contain  the letters {}[] without having them being\n"
"              interpreted by curl itself. Note that these letters\n"
);
 puts(
"              are  not  normal legal URL contents but they should\n"
"              be encoded according to the URI standard.\n"
"\n"
"       -G/--get\n"
"              When used, this option will make all data specified\n"
"              with  -d/--data  or  --data-binary  to be used in a\n"
"              HTTP GET request instead of the POST  request  that\n"
"              otherwise  would be used. The data will be appended\n"
"              to the URL with a '?'  separator. (Option added  in\n"
"              curl 7.9)\n"
"\n"
);
 puts(
"              If  used in combination with -I, the POST data will\n"
"              instead be appended to the URL with a HEAD request.\n"
"\n"
"              If used multiple times, nothing special happens.\n"
"\n"
"       -h/--help\n"
"              Usage help.\n"
"       -H/--header <header>\n"
"              (HTTP) Extra header to use when getting a web page.\n"
"              You may specify any number of extra  headers.  Note\n"
"              that if you should add a custom header that has the\n"
);
 puts(
"              same name as one of the internal  ones  curl  would\n"
"              use,  your  externally  set  header  will  be  used\n"
"              instead of the internal one.  This  allows  you  to\n"
"              make  even  trickier stuff than curl would normally\n"
"              do. You should not replace internally  set  headers\n"
"              without  knowing  perfectly well what you're doing.\n"
"              Replacing an internal header with one without  con-\n"
);
 puts(
"              tent  on  the  right side of the colon will prevent\n"
"              that header from appearing.\n"
"\n"
"              This  option  can  be  used   multiple   times   to\n"
"              add/replace/remove multiple headers.\n"
"\n"
"       -i/--include\n"
"              (HTTP)  Include  the HTTP-header in the output. The\n"
"              HTTP-header includes things like server-name,  date\n"
"              of the document, HTTP-version and more...\n"
"\n"
);
 puts(
"              If this option is used twice, the second will again\n"
"              disable header include.\n"
"\n"
"       --interface <name>\n"
"              Perform an operation using a  specified  interface.\n"
"              You  can  enter  interface name, IP address or host\n"
"              name. An example could look like:\n"
"\n"
"              curl --interface eth0:1 http://www.netscape.com/\n"
"\n"
"              If this option is used several times, the last  one\n"
"              will be used.\n"
"\n"
"       -I/--head\n"
);
 puts(
"              (HTTP/FTP) Fetch the HTTP-header only! HTTP-servers\n"
"              feature the command HEAD which  this  uses  to  get\n"
"              nothing  but the header of a document. When used on\n"
"              a FTP file, curl displays the file size only.\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable header only.\n"
"\n"
"       -j/--junk-session-cookies\n"
"              (HTTP)  When  curl  is  told to read cookies from a\n"
);
 puts(
"              given file, this option will make  it  discard  all\n"
"              \"session  cookies\". This will basicly have the same\n"
"              effect as if a  new  session  is  started.  Typical\n"
"              browsers   always   discard  session  cookies  when\n"
"              they're closed down. (Added in 7.9.7)\n"
"\n"
"              If this option is used several times,  each  occur-\n"
"              rence will toggle this on/off.\n"
"       -k/--insecure\n"
);
 puts(
"              (SSL) This option explicitly allows curl to perform\n"
"              \"insecure\" SSL connections and transfers.  Starting\n"
"              with   curl  7.10,  all  SSL  connections  will  be\n"
"              attempted to be made secure by using  the  CA  cer-\n"
"              tificate  bundle  installed  by default. This makes\n"
"              all  connections  considered  \"insecure\"  to   fail\n"
"              unless -k/--insecure is used.\n"
"\n"
);
 puts(
"              This  option  is ignored if --cacert or --capath is\n"
"              used!\n"
"\n"
"              If this option is used twice, the second time  will\n"
"              again disable it.\n"
"\n"
"       --krb4 <level>\n"
"              (FTP)  Enable kerberos4 authentication and use. The\n"
"              level must be entered and should be one of 'clear',\n"
"              'safe', 'confidential' or 'private'. Should you use\n"
"              a level that is not one of  these,  'private'  will\n"
);
 puts(
"              instead be used.\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       -K/--config <config file>\n"
"              Specify which config file to  read  curl  arguments\n"
"              from.  The config file is a text file in which com-\n"
"              mand line arguments can be written which then  will\n"
"              be  used as if they were written on the actual com-\n"
"              mand line. Options and  their  parameters  must  be\n"
);
 puts(
"              specified  on  the  same  config  file line. If the\n"
"              parameter is to contain white spaces, the parameter\n"
"              must  be inclosed within quotes.  If the first col-\n"
"              umn of a config line is a '#' character,  the  rest\n"
"              of the line will be treated as a comment.\n"
"\n"
"              Specify  the  filename as '-' to make curl read the\n"
"              file from stdin.\n"
"\n"
"              Note that to be able to specify a URL in the config\n"
);
 puts(
"              file,  you  need  to  specify  it  using  the --url\n"
"              option, and not by simply writing the  URL  on  its\n"
"              own line. So, it could look similar to this:\n"
"\n"
"              url = \"http://curl.haxx.se/docs/\"\n"
"\n"
"              This option can be used multiple times.\n"
"\n"
"       --limit-rate <speed>\n"
"              Specify  the maximum transfer rate you want curl to\n"
"              use. This feature is useful if you have  a  limited\n"
);
 puts(
"              pipe  and  you'd  like  your  transfer not use your\n"
"              entire bandwidth.\n"
"              The given speed is measured in bytes/second, unless\n"
"              a  suffix  is  appended.  Appending 'k' or 'K' will\n"
"              count the number as kilobytes, 'm' or M'  makes  it\n"
"              megabytes  while  'g'  or  'G'  makes it gigabytes.\n"
"              Examples: 200K, 3m and 1G.\n"
"\n"
"              This option was introduced in curl 7.10.\n"
"\n"
);
 puts(
"              If this option is used several times, the last  one\n"
"              will be used.\n"
"\n"
"       -l/--list-only\n"
"              (FTP)  When  listing  an FTP directory, this switch\n"
"              forces a name-only view.  Especially useful if  you\n"
"              want to machine-parse the contents of an FTP direc-\n"
"              tory since the normal directory view doesn't use  a\n"
"              standard look or format.\n"
"\n"
"              This  option causes an FTP NLST command to be sent.\n"
);
 puts(
"              Some FTP servers list only files in their  response\n"
"              to  NLST;  they  do  not include subdirectories and\n"
"              symbolic links.\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable list only.\n"
"\n"
"       -L/--location\n"
"              (HTTP/HTTPS)   If   the  server  reports  that  the\n"
"              requested page has a different location  (indicated\n"
"              with  the header line Location:) this flag will let\n"
);
 puts(
"              curl attempt to reattempt the get on the new place.\n"
"              If  used  together  with -i or -I, headers from all\n"
"              requested pages will be shown. If this flag is used\n"
"              when  making  a  HTTP POST, curl will automatically\n"
"              switch to GET after the initial POST has been done.\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable location following.\n"
"\n"
"       -m/--max-time <seconds>\n"
);
 puts(
"              Maximum time in seconds that you  allow  the  whole\n"
"              operation  to  take.  This is useful for preventing\n"
"              your batch jobs from hanging for hours due to  slow\n"
"              networks  or  links  going down.  This doesn't work\n"
"              fully in win32 systems.  See  also  the  --connect-\n"
"              timeout option.\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       -M/--manual\n"
);
 puts(
"              Manual. Display the huge help text.\n"
"       -n/--netrc\n"
"              Makes curl scan the .netrc file in the user's  home\n"
"              directory for login name and password. This is typ-\n"
"              ically used for ftp on unix.  If  used  with  http,\n"
"              curl  will enable user authentication. See netrc(4)\n"
"              or ftp(1) for details on the file format. Curl will\n"
"              not  complain if that file hasn't the right permis-\n"
);
 puts(
"              sions (it should not be world nor group  readable).\n"
"              The environment variable \"HOME\" is used to find the\n"
"              home directory.\n"
"\n"
"              A quick and very simple example of how to  setup  a\n"
"              .netrc   to  allow  curl  to  ftp  to  the  machine\n"
"              host.domain.com with user name 'myself'  and  pass-\n"
"              word 'secret' should look similar to:\n"
"\n"
"              machine   host.domain.com   login  myself  password\n"
);
 puts(
"              secret\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable netrc usage.\n"
"\n"
"       -N/--no-buffer\n"
"              Disables  the  buffering  of  the output stream. In\n"
"              normal work situations, curl will  use  a  standard\n"
"              buffered  output  stream  that will have the effect\n"
"              that it will output the data in chunks, not  neces-\n"
"              sarily  exactly  when the data arrives.  Using this\n"
);
 puts(
"              option will disable that buffering.\n"
"\n"
"              If this option is used twice, the second will again\n"
"              switch on buffering.\n"
"\n"
"       -o/--output <file>\n"
"              Write  output  to  <file> instead of stdout. If you\n"
"              are using {} or [] to fetch multiple documents, you\n"
"              can  use  '#'  followed  by  a number in the <file>\n"
"              specifier. That variable will be replaced with  the\n"
);
 puts(
"              current string for the URL being fetched. Like in:\n"
"\n"
"                curl http://{one,two}.site.com -o \"file_#1.txt\"\n"
"\n"
"              or use several variables like:\n"
"\n"
"                curl http://{site,host}.host[1-5].com -o \"#1_#2\"\n"
"\n"
"              You  may  use this option as many times as you have\n"
"              number of URLs.\n"
"\n"
"              See also the --create-dirs  option  to  create  the\n"
"              local directories dynamically.\n"
"\n"
"       -O/--remote-name\n"
);
 puts(
"              Write  output to a local file named like the remote\n"
"              file we get. (Only the file part of the remote file\n"
"              is used, the path is cut off.)\n"
"\n"
"              You  may  use this option as many times as you have\n"
"              number of URLs.\n"
"\n"
"       -p/--proxytunnel\n"
"              When an HTTP proxy is used, this option will  cause\n"
"              non-HTTP protocols to attempt to tunnel through the\n"
"              proxy instead of merely using it  to  do  HTTP-like\n"
);
 puts(
"              operations.  The  tunnel  approach is made with the\n"
"              HTTP proxy CONNECT request and  requires  that  the\n"
"              proxy allows direct connect to the remote port num-\n"
"              ber curl wants to tunnel through to.\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable proxy tunnel.\n"
"\n"
"       -P/--ftpport <address>\n"
"              (FTP)  Reverses  the  initiator/listener roles when\n"
);
 puts(
"              connecting with ftp. This switch makes Curl use the\n"
"              PORT  command  instead  of  PASV. In practice, PORT\n"
"              tells the server to connect to the client's  speci-\n"
"              fied  address  and port, while PASV asks the server\n"
"              for an ip address and port to connect to. <address>\n"
"              should be one of:\n"
"\n"
"              interface   i.e \"eth0\" to specify which interface's\n"
"                          IP address you want to use  (Unix only)\n"
"\n"
);
 puts(
"              IP address  i.e  \"192.168.10.1\" to specify exact IP\n"
"                          number\n"
"\n"
"              host name   i.e \"my.host.domain\" to specify machine\n"
"\n"
"              -           (any  single-letter  string) to make it\n"
"                          pick the machine's default\n"
"\n"
"       If this option is used several times, the last one will be\n"
"       used.\n"
"\n"
"       -q     If used as the first parameter on the command line,\n"
);
 puts(
"              the $HOME/.curlrc file will not be read and used as\n"
"              a config file.\n"
"\n"
"       -Q/--quote <comand>\n"
"              (FTP)  Send  an arbitrary command to the remote FTP\n"
"              server, by using the QUOTE command of  the  server.\n"
"              Not  all  servers support this command, and the set\n"
"              of QUOTE commands are server specific!  Quote  com-\n"
"              mands are sent BEFORE the transfer is taking place.\n"
);
 puts(
"              To make commands  take  place  after  a  successful\n"
"              transfer,  prefix  them  with  a  dash '-'. You may\n"
"              specify any amount of commands to be run before and\n"
"              after  the  transfer. If the server returns failure\n"
"              for one of the commands, the entire operation  will\n"
"              be aborted.\n"
"\n"
"              This option can be used multiple times.\n"
"\n"
"       --random-file <file>\n"
);
 puts(
"              (HTTPS)  Specify  the  path name to file containing\n"
"              what will be considered as random data. The data is\n"
"              used to seed the random engine for SSL connections.\n"
"              See also the --edg-file option.\n"
"\n"
"       -r/--range <range>\n"
"              (HTTP/FTP) Retrieve a byte  range  (i.e  a  partial\n"
"              document) from a HTTP/1.1 or FTP server. Ranges can\n"
"              be specified in a number of ways.\n"
"\n"
);
 puts(
"              0-499     specifies the first 500 bytes\n"
"\n"
"              500-999   specifies the second 500 bytes\n"
"\n"
"              -500      specifies the last 500 bytes\n"
"\n"
"              9500      specifies the bytes from offset 9500  and\n"
"                        forward\n"
"\n"
"              0-0,-1    specifies   the   first   and  last  byte\n"
"                        only(*)(H)\n"
"\n"
"              500-700,600-799\n"
"                        specifies 300 bytes from offset 500(H)\n"
"\n"
"              100-199,500-599\n"
);
 puts(
"                        specifies   two   separate   100    bytes\n"
"                        ranges(*)(H)\n"
"\n"
"       (*) = NOTE that this will cause the server to reply with a\n"
"       multipart response!\n"
"\n"
"       You should also be aware that many HTTP/1.1 servers do not\n"
"       have this feature enabled, so that when you attempt to get\n"
"       a range, you'll instead get the whole document.\n"
"\n"
"       FTP range downloads only support the simple syntax 'start-\n"
);
 puts(
"       stop'  (optionally  with  one  of the numbers omitted). It\n"
"       depends on the non-RFC command SIZE.\n"
"\n"
"       If this option is used several times, the last one will be\n"
"       used.\n"
"\n"
"       -R/--remote-time\n"
"              When used, this will make libcurl attempt to figure\n"
"              out the timestamp of the remote file, and  if  that\n"
"              is  available  make  the  local  file get that same\n"
"              timestamp.\n"
"\n"
);
 puts(
"              If this option is used twice, the second time  dis-\n"
"              ables this again.\n"
"\n"
"       -s/--silent\n"
"              Silent  mode.  Don't  show  progress meter or error\n"
"              messages.  Makes Curl mute.\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable mute.\n"
"\n"
"       -S/--show-error\n"
"              When  used with -s it makes curl show error message\n"
"              if it fails.\n"
"\n"
);
 puts(
"              If this option is used twice, the second will again\n"
"              disable show error.\n"
"\n"
"       --stderr <file>\n"
"              Redirect all writes to stderr to the specified file\n"
"              instead. If the file name is a  plain  '-',  it  is\n"
"              instead written to stdout. This option has no point\n"
"              when you're using a shell with  decent  redirecting\n"
"              capabilities.\n"
"\n"
"              If  this option is used several times, the last one\n"
);
 puts(
"              will be used.\n"
"\n"
"       -t/--telnet-option <OPT=val>\n"
"              Pass options  to  the  telnet  protocol.  Supported\n"
"              options are:\n"
"\n"
"              TTYPE=<term> Sets the terminal type.\n"
"\n"
"              XDISPLOC=<X display> Sets the X display location.\n"
"\n"
"              NEW_ENV=<var,val> Sets an environment variable.\n"
"\n"
"       -T/--upload-file <file>\n"
"              This  transfers  the  specified  local  file to the\n"
);
 puts(
"              remote URL. If there is no file part in the  speci-\n"
"              fied  URL,  Curl  will  append the local file name.\n"
"              NOTE that you must use a trailing  /  on  the  last\n"
"              directory  to really prove to Curl that there is no\n"
"              file name or curl will think that your last  direc-\n"
"              tory name is the remote file name to use. That will\n"
"              most likely cause the upload operation to fail.  If\n"
);
 puts(
"              this  is  used on a http(s) server, the PUT command\n"
"              will be used.\n"
"\n"
"              Use the file name \"-\" (a single dash) to use  stdin\n"
"              instead of a given file.\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       --trace <file>\n"
"              Enables a full trace dump of all incoming and  out-\n"
"              going  data,  including descriptive information, to\n"
);
 puts(
"              the given output file. Use \"-\" as filename to  have\n"
"              the output sent to stdout.\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used. (Added in curl 7.9.7)\n"
"\n"
"       --trace-ascii <file>\n"
"              Enables a full trace dump of all incoming and  out-\n"
"              going  data,  including descriptive information, to\n"
"              the given output file. Use \"-\" as filename to  have\n"
"              the output sent to stdout.\n"
"\n"
);
 puts(
"              This is very similar to --trace, but leaves out the\n"
"              hex part and only shows the ASCII part of the dump.\n"
"              It  makes  smaller  output  that might be easier to\n"
"              read for untrained humans.\n"
"\n"
"              If this option is used several times, the last  one\n"
"              will be used. (Added in curl 7.9.7)\n"
"\n"
"       -u/--user <user:password>\n"
"              Specify  user  and  password  to use when fetching.\n"
);
 puts(
"              Read the MANUAL for detailed examples of how to use\n"
"              this.  If  no  password is specified, curl will ask\n"
"              for it interactively.\n"
"\n"
"              If this option is used several times, the last  one\n"
"              will be used.\n"
"\n"
"       -U/--proxy-user <user:password>\n"
"              Specify  user and password to use for Proxy authen-\n"
"              tication. If no password is  specified,  curl  will\n"
"              ask for it interactively.\n"
"\n"
);
 puts(
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       --url <URL>\n"
"              Specify a URL to fetch. This option is mostly handy\n"
"              when you want to specify URL(s) in a config file.\n"
"\n"
"              This  option  may  be  used any number of times. To\n"
"              control where this URL is written, use  the  -o  or\n"
"              the -O options.\n"
"\n"
"       -v/--verbose\n"
"              Makes  the  fetching more verbose/talkative. Mostly\n"
);
 puts(
"              usable for debugging. Lines starting with '>' means\n"
"              data  sent by curl, '<' means data received by curl\n"
"              that is hidden in normal cases and  lines  starting\n"
"              with '*' means additional info provided by curl.\n"
"\n"
"              Note  that  if  you want to see HTTP headers in the\n"
"              output, -i/--include might be option you're looking\n"
"              for.\n"
"\n"
"              If  you  think  this  option still doesn't give you\n"
);
 puts(
"              enough details, consider using --trace or  --trace-\n"
"              ascii instead.\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable verbose.\n"
"\n"
"       -V/--version\n"
"              Displays the full  version  of  curl,  libcurl  and\n"
"              other  3rd  party  libraries  linked  with the exe-\n"
"              cutable.\n"
"\n"
"       -w/--write-out <format>\n"
"              Defines what to display after a completed and  suc-\n"
);
 puts(
"              cessful  operation. The format is a string that may\n"
"              contain plain text mixed with any number  of  vari-\n"
"              ables.  The string can be specified as \"string\", to\n"
"              get read from a  particular  file  you  specify  it\n"
"              \"@filename\"  and  to  tell  curl to read the format\n"
"              from stdin you write \"@-\".\n"
"\n"
"              The variables present in the output format will  be\n"
);
 puts(
"              substituted  by  the value or text that curl thinks\n"
"              fit, as described below. All variables  are  speci-\n"
"              fied like %{variable_name} and to output a normal %\n"
"              you just write them like %%. You can output a  new-\n"
"              line  by  using \\n, a carriage return with \\r and a\n"
"              tab space with \\t.\n"
"\n"
"              NOTE: The %-letter  is  a  special  letter  in  the\n"
"              win32-environment,  where all occurrences of % must\n"
);
 puts(
"              be doubled when using this option.\n"
"\n"
"              Available variables are at this point:\n"
"\n"
"              url_effective  The URL that was fetched last.  This\n"
"                             is  mostly meaningful if you've told\n"
"                             curl to follow location: headers.\n"
"\n"
"              http_code      The numerical code that was found in\n"
"                             the last retrieved HTTP(S) page.\n"
"\n"
"              time_total     The total time, in seconds, that the\n"
);
 puts(
"                             full operation lasted. The time will\n"
"                             be  displayed with millisecond reso-\n"
"                             lution.\n"
"              time_namelookup\n"
"                             The time, in seconds, it  took  from\n"
"                             the  start  until the name resolving\n"
"                             was completed.\n"
"\n"
"              time_connect   The time, in seconds, it  took  from\n"
);
 puts(
"                             the  start  until the connect to the\n"
"                             remote  host  (or  proxy)  was  com-\n"
"                             pleted.\n"
"\n"
"              time_pretransfer\n"
"                             The  time,  in seconds, it took from\n"
"                             the start until the file transfer is\n"
"                             just  about  to begin. This includes\n"
"                             all pre-transfer commands and  nego-\n"
);
 puts(
"                             tiations  that  are  specific to the\n"
"                             particular protocol(s) involved.\n"
"\n"
"              time_starttransfer\n"
"                             The time, in seconds, it  took  from\n"
"                             the  start  until  the first byte is\n"
"                             just about to  be  transfered.  This\n"
"                             includes  time_pretransfer  and also\n"
"                             the time the server needs to  calcu-\n"
);
 puts(
"                             late the result.\n"
"\n"
"              size_download  The  total amount of bytes that were\n"
"                             downloaded.\n"
"\n"
"              size_upload    The total amount of bytes that  were\n"
"                             uploaded.\n"
"\n"
"              size_header    The  total  amount  of  bytes of the\n"
"                             downloaded headers.\n"
"\n"
"              size_request   The total amount of bytes that  were\n"
"                             sent in the HTTP request.\n"
"\n"
);
 puts(
"              speed_download The average download speed that curl\n"
"                             measured for the complete  download.\n"
"\n"
"              speed_upload   The  average  upload speed that curl\n"
"                             measured for the complete upload.\n"
"\n"
"              content_type   The Content-Type  of  the  requested\n"
"                             document,  if  there was any. (Added\n"
"                             in 7.9.5)\n"
"\n"
);
 puts(
"       If this option is used several times, the last one will be\n"
"       used.\n"
"\n"
"       -x/--proxy <proxyhost[:port]>\n"
"              Use specified HTTP proxy. If the port number is not\n"
"              specified, it is assumed at port 1080.\n"
"              This option overrides  existing  environment  vari-\n"
"              ables  that  sets proxy to use. If there's an envi-\n"
"              ronment variable setting a proxy, you can set proxy\n"
"              to \"\" to override it.\n"
"\n"
);
 puts(
"              Note  that all operations that are performed over a\n"
"              HTTP proxy will transparantly be converted to HTTP.\n"
"              It  means that certain protocol specific operations\n"
"              might not be available. This is not the case if you\n"
"              can  tunnel  through  the  proxy,  as done with the\n"
"              -p/--proxytunnel option.\n"
"\n"
"              If this option is used several times, the last  one\n"
"              will be used.\n"
"\n"
"       -X/--request <command>\n"
);
 puts(
"              (HTTP)  Specifies a custom request to use when com-\n"
"              municating with the  HTTP  server.   The  specified\n"
"              request  will  be used instead of the standard GET.\n"
"              Read the HTTP 1.1  specification  for  details  and\n"
"              explanations.\n"
"\n"
"              (FTP) Specifies a custom FTP command to use instead\n"
"              of LIST when doing file lists with ftp.\n"
"\n"
"              If this option is used several times, the last  one\n"
);
 puts(
"              will be used.\n"
"\n"
"       -y/--speed-time <time>\n"
"              If  a download is slower than speed-limit bytes per\n"
"              second during a  speed-time  period,  the  download\n"
"              gets  aborted.  If  speed-time is used, the default\n"
"              speed-limit will be 1 unless set with -y.\n"
"\n"
"              This option controls transfers and  thus  will  not\n"
"              affect  slow connects etc. If this is a concern for\n"
"              you, try the --connect-timeout option.\n"
"\n"
);
 puts(
"              If this option is used several times, the last  one\n"
"              will be used.\n"
"\n"
"       -Y/--speed-limit <speed>\n"
"              If  a  download is slower than this given speed, in\n"
"              bytes per second, for speed-time  seconds  it  gets\n"
"              aborted. speed-time is set with -Y and is 30 if not\n"
"              set.\n"
"\n"
"              If this option is used several times, the last  one\n"
"              will be used.\n"
"\n"
"       -z/--time-cond <date expression>\n"
);
 puts(
"              (HTTP) Request to get a file that has been modified\n"
"              later than the given time and date, or one that has\n"
"              been modified before that time. The date expression\n"
"              can be all sorts of date strings or if  it  doesn't\n"
"              match  any  internal ones, it tries to get the time\n"
"              from a given file name instead! See the GNU date(1)\n"
"              or  curl_getdate(3)  man  pages for date expression\n"
"              details.\n"
"\n"
);
 puts(
"              Start the date expression with a dash (-)  to  make\n"
"              it  request  for  a document that is older than the\n"
"              given date/time, default  is  a  document  that  is\n"
"              newer than the specified date/time.\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       -Z/--max-redirs <num>\n"
"              Set  maximum   number   of   redirection-followings\n"
);
 puts(
"              allowed.  If -L/--location is used, this option can\n"
"              be used to prevent curl from following redirections\n"
"              \"in absurdum\".\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       -3/--sslv3\n"
"              (HTTPS) Forces curl to use SSL version 3 when nego-\n"
"              tiating with a remote SSL server.\n"
"\n"
"       -2/--sslv2\n"
"              (HTTPS) Forces curl to use SSL version 2 when nego-\n"
);
 puts(
"              tiating with a remote SSL server.\n"
"\n"
"       -0/--http1.0\n"
"              (HTTP) Forces curl to issue its requests using HTTP\n"
"              1.0 instead of using its internally preferred: HTTP\n"
"              1.1.\n"
"\n"
"       -#/--progress-bar\n"
"              Make  curl  display  progress  information   as   a\n"
"              progress bar instead of the default statistics.\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable the progress bar.\n"
"\n"
"FILES\n"
);
 puts(
"       ~/.curlrc\n"
"              Default config file.\n"
"\n"
"ENVIRONMENT\n"
"       http_proxy [protocol://]<host>[:port]\n"
"              Sets proxy server to use for HTTP.\n"
"\n"
"       HTTPS_PROXY [protocol://]<host>[:port]\n"
"              Sets proxy server to use for HTTPS.\n"
"       FTP_PROXY [protocol://]<host>[:port]\n"
"              Sets proxy server to use for FTP.\n"
"\n"
"       GOPHER_PROXY [protocol://]<host>[:port]\n"
"              Sets proxy server to use for GOPHER.\n"
"\n"
"       ALL_PROXY [protocol://]<host>[:port]\n"
);
 puts(
"              Sets proxy server to use  if  no  protocol-specific\n"
"              proxy is set.\n"
"\n"
"       NO_PROXY <comma-separated list of hosts>\n"
"              list  of  host  names that shouldn't go through any\n"
"              proxy. If set to a asterisk\n"
"\n"
"EXIT CODES\n"
"       There exists a bunch of different error  codes  and  their\n"
"       corresponding  error  messages  that may appear during bad\n"
"       conditions. At the time of this writing,  the  exit  codes\n"
"       are:\n"
"\n"
);
 puts(
"       1      Unsupported  protocol.  This  build  of curl has no\n"
"              support for this protocol.\n"
"\n"
"       2      Failed to initialize.\n"
"\n"
"       3      URL malformat. The syntax was not correct.\n"
"\n"
"       4      URL user malformatted. The  user-part  of  the  URL\n"
"              syntax was not correct.\n"
"\n"
"       5      Couldn't  resolve proxy. The given proxy host could\n"
"              not be resolved.\n"
"\n"
"       6      Couldn't resolve host. The given  remote  host  was\n"
"              not resolved.\n"
);
 puts(
"\n"
"       7      Failed to connect to host.\n"
"\n"
"       8      FTP  weird  server reply. The server sent data curl\n"
"              couldn't parse.\n"
"\n"
"       9      FTP access denied. The server denied login.\n"
"\n"
"       10     FTP user/password incorrect.  Either  one  or  both\n"
"              were not accepted by the server.\n"
"\n"
"       11     FTP weird PASS reply. Curl couldn't parse the reply\n"
"              sent to the PASS request.\n"
"\n"
"       12     FTP weird USER reply. Curl couldn't parse the reply\n"
);
 puts(
"              sent to the USER request.\n"
"\n"
"       13     FTP weird PASV reply, Curl couldn't parse the reply\n"
"              sent to the PASV request.\n"
"       14     FTP weird  227  format.  Curl  couldn't  parse  the\n"
"              227-line the server sent.\n"
"\n"
"       15     FTP can't get host. Couldn't resolve the host IP we\n"
"              got in the 227-line.\n"
"\n"
"       16     FTP can't reconnect. Couldn't connect to  the  host\n"
"              we got in the 227-line.\n"
"\n"
);
 puts(
"       17     FTP  couldn't  set binary. Couldn't change transfer\n"
"              method to binary.\n"
"\n"
"       18     Partial file. Only a part of the  file  was  trans-\n"
"              fered.\n"
"\n"
"       19     FTP  couldn't  download/access  the given file, the\n"
"              RETR (or similar) command failed.\n"
"\n"
"       20     FTP write error. The transfer was reported  bad  by\n"
"              the server.\n"
"\n"
"       21     FTP  quote  error.  A  quote command returned error\n"
"              from the server.\n"
"\n"
);
 puts(
"       22     HTTP page not retrieved. The requested url was  not\n"
"              found or returned another error with the HTTP error\n"
"              code being 400 or  above.  This  return  code  only\n"
"              appears if --fail is used.\n"
"\n"
"       23     Write  error.  Curl  couldn't write data to a local\n"
"              filesystem or similar.\n"
"\n"
"       24     Malformat user. User name badly specified.\n"
"\n"
"       25     FTP couldn't STOR file. The server denied the  STOR\n"
"              operation.\n"
"\n"
);
 puts(
"       26     Read error. Various reading problems.\n"
"\n"
"       27     Out  of memory. A memory allocation request failed.\n"
"\n"
"       28     Operation timeout. The  specified  time-out  period\n"
"              was reached according to the conditions.\n"
"\n"
"       29     FTP  couldn't  set  ASCII.  The  server returned an\n"
"              unknown reply.\n"
"\n"
"       30     FTP PORT failed. The PORT command failed.\n"
"\n"
"       31     FTP couldn't use REST. The REST command failed.\n"
"\n"
);
 puts(
"       32     FTP couldn't use SIZE. The SIZE command failed. The\n"
"              command  is  an  extension to the original FTP spec\n"
"              RFC 959.\n"
"       33     HTTP range error. The range \"command\" didn't  work.\n"
"\n"
"       34     HTTP  post  error. Internal post-request generation\n"
"              error.\n"
"\n"
"       35     SSL connect error. The SSL handshaking failed.\n"
"\n"
"       36     FTP bad download resume. Couldn't continue an  ear-\n"
"              lier aborted download.\n"
"\n"
);
 puts(
"       37     FILE  couldn't  read file. Failed to open the file.\n"
"              Permissions?\n"
"\n"
"       38     LDAP cannot bind. LDAP bind operation failed.\n"
"\n"
"       39     LDAP search failed.\n"
"\n"
"       40     Library not found. The LDAP library was not  found.\n"
"\n"
"       41     Function  not  found.  A required LDAP function was\n"
"              not found.\n"
"\n"
"       42     Aborted by callback. An application  told  curl  to\n"
"              abort the operation.\n"
"\n"
);
 puts(
"       43     Internal  error.  A  function was called with a bad\n"
"              parameter.\n"
"\n"
"       44     Internal error. A function  was  called  in  a  bad\n"
"              order.\n"
"\n"
"       45     Interface  error.  A  specified  outgoing interface\n"
"              could not be used.\n"
"\n"
"       46     Bad password entered. An error  was  signaled  when\n"
"              the password was entered.\n"
"\n"
"       47     Too  many redirects. When following redirects, curl\n"
"              hit the maximum amount.\n"
"\n"
);
 puts(
"       48     Unknown TELNET option specified.\n"
"\n"
"       49     Malformed telnet option.\n"
"\n"
"       51     The remote peer's SSL certificate wasn't ok\n"
"\n"
"       52     The server didn't reply  anything,  which  here  is\n"
"              considered an error.\n"
"\n"
"       53     SSL crypto engine not found\n"
"\n"
"       54     Cannot set SSL crypto engine as default\n"
"\n"
"       55     Failed sending network data\n"
"       56     Failure in receiving network data\n"
"\n"
"       57     Share is in use (internal error)\n"
"\n"
);
 puts(
"       58     Problem with the local certificate\n"
"\n"
"       59     Couldn't use specified SSL cipher\n"
"\n"
"       60     Problem with the CA cert (path? permission?)\n"
"\n"
"       61     Unrecognized transfer encoding\n"
"\n"
"       XX     There  will  appear more error codes here in future\n"
"              releases. The existing  ones  are  meant  to  never\n"
"              change.\n"
"\n"
"BUGS\n"
"       If you do find bugs, mail them to curl-bug@haxx.se.\n"
"\n"
"AUTHORS / CONTRIBUTORS\n"
);
 puts(
"       Daniel  Stenberg is the main author, but the whole list of\n"
"       contributors is found in the separate THANKS file.\n"
"\n"
"WWW\n"
"       http://curl.haxx.se\n"
"\n"
"FTP\n"
"       ftp://ftp.sunet.se/pub/www/utilities/curl/\n"
"\n"
"SEE ALSO\n"
"       ftp(1), wget(1), snarf(1)\n"
"\n"
"LATEST VERSION\n"
"\n"
"  You always find news about what's going on as well as the latest versions\n"
"  from the curl web pages, located at:\n"
"\n"
"        http://curl.haxx.se\n"
"\n"
"SIMPLE USAGE\n"
"\n"
"  Get the main page from netscape's web-server:\n"
"\n"
);
 puts(
"        curl http://www.netscape.com/\n"
"\n"
"  Get the root README file from funet's ftp-server:\n"
"\n"
"        curl ftp://ftp.funet.fi/README\n"
"\n"
"  Get a web page from a server using port 8000:\n"
"\n"
"        curl http://www.weirdserver.com:8000/\n"
"\n"
"  Get a list of the root directory of an FTP site:\n"
"\n"
"        curl ftp://cool.haxx.se/\n"
"\n"

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_65_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">void<pos:position pos:line="1" pos:column="14"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="15"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">http_handle<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLM<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">multi_handle<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">still_running<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt> <comment type="block" pos:line="6" pos:column="22">/* keep number of running handles */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">repeats<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">curl_global_init<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">CURL_GLOBAL_DEFAULT<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">http_handle<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <call><name pos:line="11" pos:column="17">curl_easy_init<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">()<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* set the options (I left out a few, you'll get the point anyway) */</comment>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">curl_easy_setopt<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">http_handle<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">CURLOPT_URL<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="46">"http://www.example.com/"<pos:position pos:line="14" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>

  <comment type="block" pos:line="16" pos:column="3">/* init a multi stack */</comment>
  <expr_stmt><expr><name pos:line="17" pos:column="3">multi_handle<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">curl_multi_init<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">()<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* add the individual transfers */</comment>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">curl_multi_add_handle<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">multi_handle<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="39">http_handle<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* we start some action by calling perform right away */</comment>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">curl_multi_perform<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">multi_handle<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="36">&amp;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="37">still_running<pos:position pos:line="23" pos:column="50"/></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>

  <do pos:line="25" pos:column="3">do <block pos:line="25" pos:column="6">{
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">CURLMcode<pos:position pos:line="26" pos:column="14"/></name></type> <name pos:line="26" pos:column="15">mc<pos:position pos:line="26" pos:column="17"/></name></decl>;<pos:position pos:line="26" pos:column="18"/></decl_stmt> <comment type="block" pos:line="26" pos:column="19">/* curl_multi_wait() return code */</comment>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">numfds<pos:position pos:line="27" pos:column="15"/></name></decl>;<pos:position pos:line="27" pos:column="16"/></decl_stmt>

    <comment type="block" pos:line="29" pos:column="5">/* wait for activity, timeout or "nothing" */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">mc<pos:position pos:line="30" pos:column="7"/></name> <operator pos:line="30" pos:column="8">=<pos:position pos:line="30" pos:column="9"/></operator> <call><name pos:line="30" pos:column="10">curl_multi_wait<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">multi_handle<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">NULL<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="46">0<pos:position pos:line="30" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="49">1000<pos:position pos:line="30" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="55">&amp;<pos:position pos:line="30" pos:column="60"/></operator><name pos:line="30" pos:column="56">numfds<pos:position pos:line="30" pos:column="62"/></name></expr></argument>)<pos:position pos:line="30" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="64"/></expr_stmt>

    <if pos:line="32" pos:column="5">if<condition pos:line="32" pos:column="7">(<expr><name pos:line="32" pos:column="8">mc<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">!=<pos:position pos:line="32" pos:column="13"/></operator> <name pos:line="32" pos:column="14">CURLM_OK<pos:position pos:line="32" pos:column="22"/></name></expr>)<pos:position pos:line="32" pos:column="23"/></condition><then pos:line="32" pos:column="23"> <block pos:line="32" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">fprintf<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><name pos:line="33" pos:column="15">stderr<pos:position pos:line="33" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="23">"curl_multi_wait() failed, code %d.\n"<pos:position pos:line="33" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="63">mc<pos:position pos:line="33" pos:column="65"/></name></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt>
      <break pos:line="34" pos:column="7">break;<pos:position pos:line="34" pos:column="13"/></break>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="37" pos:column="5">/* 'numfds' being zero means either a timeout or no file descriptors to
       wait for. Try timeout on first occurrence, then assume no file
       descriptors and no file descriptors to wait for means wait for 100
       milliseconds. */</comment>

    <if pos:line="42" pos:column="5">if<condition pos:line="42" pos:column="7">(<expr><operator pos:line="42" pos:column="8">!<pos:position pos:line="42" pos:column="9"/></operator><name pos:line="42" pos:column="9">numfds<pos:position pos:line="42" pos:column="15"/></name></expr>)<pos:position pos:line="42" pos:column="16"/></condition><then pos:line="42" pos:column="16"> <block pos:line="42" pos:column="17">{
      <expr_stmt><expr><name pos:line="43" pos:column="7">repeats<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">++<pos:position pos:line="43" pos:column="16"/></operator></expr>;<pos:position pos:line="43" pos:column="17"/></expr_stmt> <comment type="block" pos:line="43" pos:column="18">/* count number of repeated zero numfds */</comment>
      <if pos:line="44" pos:column="7">if<condition pos:line="44" pos:column="9">(<expr><name pos:line="44" pos:column="10">repeats<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">&gt;<pos:position pos:line="44" pos:column="22"/></operator> <literal type="number" pos:line="44" pos:column="20">1<pos:position pos:line="44" pos:column="21"/></literal></expr>)<pos:position pos:line="44" pos:column="22"/></condition><then pos:line="44" pos:column="22"> <block pos:line="44" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">WAITMS<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><literal type="number" pos:line="45" pos:column="16">100<pos:position pos:line="45" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt> <comment type="block" pos:line="45" pos:column="22">/* sleep 100 milliseconds */</comment>
      }<pos:position pos:line="46" pos:column="8"/></block></then></if>
    }<pos:position pos:line="47" pos:column="6"/></block></then>
    <else pos:line="48" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="7">repeats<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">=<pos:position pos:line="49" pos:column="16"/></operator> <literal type="number" pos:line="49" pos:column="17">0<pos:position pos:line="49" pos:column="18"/></literal></expr>;<pos:position pos:line="49" pos:column="19"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="51" pos:column="5">curl_multi_perform<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><name pos:line="51" pos:column="24">multi_handle<pos:position pos:line="51" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="38">&amp;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="39">still_running<pos:position pos:line="51" pos:column="52"/></name></expr></argument>)<pos:position pos:line="51" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="54"/></expr_stmt>
  }<pos:position pos:line="52" pos:column="4"/></block> while<condition pos:line="52" pos:column="10">(<expr><name pos:line="52" pos:column="11">still_running<pos:position pos:line="52" pos:column="24"/></name></expr>)<pos:position pos:line="52" pos:column="25"/></condition>;<pos:position pos:line="52" pos:column="26"/></do>

  <expr_stmt><expr><call><name pos:line="54" pos:column="3">curl_multi_remove_handle<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><name pos:line="54" pos:column="28">multi_handle<pos:position pos:line="54" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="42">http_handle<pos:position pos:line="54" pos:column="53"/></name></expr></argument>)<pos:position pos:line="54" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="56" pos:column="3">curl_easy_cleanup<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><name pos:line="56" pos:column="21">http_handle<pos:position pos:line="56" pos:column="32"/></name></expr></argument>)<pos:position pos:line="56" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="58" pos:column="3">curl_multi_cleanup<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><name pos:line="58" pos:column="22">multi_handle<pos:position pos:line="58" pos:column="34"/></name></expr></argument>)<pos:position pos:line="58" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="60" pos:column="3">curl_global_cleanup<pos:position pos:line="60" pos:column="22"/></name><argument_list pos:line="60" pos:column="22">()<pos:position pos:line="60" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="25"/></expr_stmt>

  <return pos:line="62" pos:column="3">return <expr><literal type="number" pos:line="62" pos:column="10">0<pos:position pos:line="62" pos:column="11"/></literal></expr>;<pos:position pos:line="62" pos:column="12"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

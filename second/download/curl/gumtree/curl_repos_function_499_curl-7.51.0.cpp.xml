<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_499_curl-7.51.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">res<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLSHcode<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">scode<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">CURLSHE_OK<pos:position pos:line="4" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">url<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Tdata<pos:position pos:line="6" pos:column="15"/></name></name></type> <name pos:line="6" pos:column="16">tdata<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURL<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">curl<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLSH<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">share<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">i<pos:position pos:line="9" pos:column="8"/></name></decl>;<pos:position pos:line="9" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">userdata<pos:position pos:line="10" pos:column="18"/></name></name></type> <name pos:line="10" pos:column="19">user<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="12" pos:column="3">user<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">.<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">text<pos:position pos:line="12" pos:column="12"/></name></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <operator pos:line="12" pos:column="15">(<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">char<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></operator><operator pos:line="12" pos:column="22">)<pos:position pos:line="12" pos:column="23"/></operator><literal type="string" pos:line="12" pos:column="23">"Pigs in space"<pos:position pos:line="12" pos:column="38"/></literal></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">user<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">.<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">counter<pos:position pos:line="13" pos:column="15"/></name></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">printf<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><literal type="string" pos:line="15" pos:column="10">"GLOBAL_INIT\n"<pos:position pos:line="15" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><call><name pos:line="16" pos:column="6">curl_global_init<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">CURL_GLOBAL_ALL<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call> <operator pos:line="16" pos:column="40">!=<pos:position pos:line="16" pos:column="42"/></operator> <name pos:line="16" pos:column="43">CURLE_OK<pos:position pos:line="16" pos:column="51"/></name></expr>)<pos:position pos:line="16" pos:column="52"/></condition><then pos:line="16" pos:column="52"> <block pos:line="16" pos:column="53">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">fprintf<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">stderr<pos:position pos:line="17" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="21">"curl_global_init() failed\n"<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="18" pos:column="30"/></name></expr>;<pos:position pos:line="18" pos:column="31"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="21" pos:column="3">/* prepare share */</comment>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">printf<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><literal type="string" pos:line="22" pos:column="10">"SHARE_INIT\n"<pos:position pos:line="22" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">(<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">share<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">curl_share_init<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">()<pos:position pos:line="23" pos:column="32"/></argument_list></call><operator pos:line="23" pos:column="32">)<pos:position pos:line="23" pos:column="33"/></operator> <operator pos:line="23" pos:column="34">==<pos:position pos:line="23" pos:column="36"/></operator> <name pos:line="23" pos:column="37">NULL<pos:position pos:line="23" pos:column="41"/></name></expr>)<pos:position pos:line="23" pos:column="42"/></condition><then pos:line="23" pos:column="42"> <block pos:line="23" pos:column="43">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">fprintf<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">stderr<pos:position pos:line="24" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="21">"curl_share_init() failed\n"<pos:position pos:line="24" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">curl_global_cleanup<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">()<pos:position pos:line="25" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="26" pos:column="30"/></name></expr>;<pos:position pos:line="26" pos:column="31"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">(<expr><name pos:line="29" pos:column="6">CURLSHE_OK<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">==<pos:position pos:line="29" pos:column="19"/></operator> <name pos:line="29" pos:column="20">scode<pos:position pos:line="29" pos:column="25"/></name></expr>)<pos:position pos:line="29" pos:column="26"/></condition><then pos:line="29" pos:column="26"> <block pos:line="29" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">printf<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><literal type="string" pos:line="30" pos:column="12">"CURLSHOPT_LOCKFUNC\n"<pos:position pos:line="30" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">scode<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <call><name pos:line="31" pos:column="13">curl_share_setopt<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">share<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">CURLSHOPT_LOCKFUNC<pos:position pos:line="31" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="58">my_lock<pos:position pos:line="31" pos:column="65"/></name></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="67"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>
  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><name pos:line="33" pos:column="6">CURLSHE_OK<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">==<pos:position pos:line="33" pos:column="19"/></operator> <name pos:line="33" pos:column="20">scode<pos:position pos:line="33" pos:column="25"/></name></expr>)<pos:position pos:line="33" pos:column="26"/></condition><then pos:line="33" pos:column="26"> <block pos:line="33" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">printf<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="string" pos:line="34" pos:column="12">"CURLSHOPT_UNLOCKFUNC\n"<pos:position pos:line="34" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">scode<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <call><name pos:line="35" pos:column="13">curl_share_setopt<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">share<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="38">CURLSHOPT_UNLOCKFUNC<pos:position pos:line="35" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="60">my_unlock<pos:position pos:line="35" pos:column="69"/></name></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>
  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">(<expr><name pos:line="37" pos:column="6">CURLSHE_OK<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">==<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">scode<pos:position pos:line="37" pos:column="25"/></name></expr>)<pos:position pos:line="37" pos:column="26"/></condition><then pos:line="37" pos:column="26"> <block pos:line="37" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">printf<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><literal type="string" pos:line="38" pos:column="12">"CURLSHOPT_USERDATA\n"<pos:position pos:line="38" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">scode<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <call><name pos:line="39" pos:column="13">curl_share_setopt<pos:position pos:line="39" pos:column="30"/></name><argument_list pos:line="39" pos:column="30">(<argument><expr><name pos:line="39" pos:column="31">share<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">CURLSHOPT_USERDATA<pos:position pos:line="39" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="58">&amp;<pos:position pos:line="39" pos:column="63"/></operator><name pos:line="39" pos:column="59">user<pos:position pos:line="39" pos:column="63"/></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="65"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>
  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><name pos:line="41" pos:column="6">CURLSHE_OK<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">==<pos:position pos:line="41" pos:column="19"/></operator> <name pos:line="41" pos:column="20">scode<pos:position pos:line="41" pos:column="25"/></name></expr>)<pos:position pos:line="41" pos:column="26"/></condition><then pos:line="41" pos:column="26"> <block pos:line="41" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">printf<pos:position pos:line="42" pos:column="11"/></name><argument_list pos:line="42" pos:column="11">(<argument><expr><literal type="string" pos:line="42" pos:column="12">"CURL_LOCK_DATA_SSL_SESSION\n"<pos:position pos:line="42" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">scode<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <call><name pos:line="43" pos:column="13">curl_share_setopt<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">share<pos:position pos:line="43" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="38">CURLSHOPT_SHARE<pos:position pos:line="43" pos:column="53"/></name></expr></argument>,
                              <argument><expr><name pos:line="44" pos:column="31">CURL_LOCK_DATA_SSL_SESSION<pos:position pos:line="44" pos:column="57"/></name></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="59"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <if pos:line="47" pos:column="3">if<condition pos:line="47" pos:column="5">(<expr><name pos:line="47" pos:column="6">CURLSHE_OK<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">!=<pos:position pos:line="47" pos:column="19"/></operator> <name pos:line="47" pos:column="20">scode<pos:position pos:line="47" pos:column="25"/></name></expr>)<pos:position pos:line="47" pos:column="26"/></condition><then pos:line="47" pos:column="26"> <block pos:line="47" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">fprintf<pos:position pos:line="48" pos:column="12"/></name><argument_list pos:line="48" pos:column="12">(<argument><expr><name pos:line="48" pos:column="13">stderr<pos:position pos:line="48" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="21">"curl_share_setopt() failed\n"<pos:position pos:line="48" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">curl_share_cleanup<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><name pos:line="49" pos:column="24">share<pos:position pos:line="49" pos:column="29"/></name></expr></argument>)<pos:position pos:line="49" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">curl_global_cleanup<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">()<pos:position pos:line="50" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><name pos:line="51" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="51" pos:column="30"/></name></expr>;<pos:position pos:line="51" pos:column="31"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>


  <expr_stmt><expr><name pos:line="55" pos:column="3">res<pos:position pos:line="55" pos:column="6"/></name> <operator pos:line="55" pos:column="7">=<pos:position pos:line="55" pos:column="8"/></operator> <literal type="number" pos:line="55" pos:column="9">0<pos:position pos:line="55" pos:column="10"/></literal></expr>;<pos:position pos:line="55" pos:column="11"/></expr_stmt>

  <comment type="block" pos:line="57" pos:column="3">/* start treads */</comment>
  <for pos:line="58" pos:column="3">for<control pos:line="58" pos:column="6">(<init><expr><name pos:line="58" pos:column="7">i<pos:position pos:line="58" pos:column="8"/></name><operator pos:line="58" pos:column="8">=<pos:position pos:line="58" pos:column="9"/></operator><literal type="number" pos:line="58" pos:column="9">1<pos:position pos:line="58" pos:column="10"/></literal></expr>;<pos:position pos:line="58" pos:column="11"/></init> <condition><expr><name pos:line="58" pos:column="12">i<pos:position pos:line="58" pos:column="13"/></name><operator pos:line="58" pos:column="13">&lt;=<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="15">THREADS<pos:position pos:line="58" pos:column="22"/></name></expr>;<pos:position pos:line="58" pos:column="23"/></condition> <incr><expr><name pos:line="58" pos:column="24">i<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">++<pos:position pos:line="58" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="58" pos:column="28"/></control> <block pos:line="58" pos:column="29">{

    <comment type="block" pos:line="60" pos:column="5">/* set thread data */</comment>
    <expr_stmt><expr><name><name pos:line="61" pos:column="5">tdata<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">.<pos:position pos:line="61" pos:column="11"/></operator><name pos:line="61" pos:column="11">url<pos:position pos:line="61" pos:column="14"/></name></name>   <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <name pos:line="61" pos:column="19">URL<pos:position pos:line="61" pos:column="22"/></name></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">tdata<pos:position pos:line="62" pos:column="10"/></name><operator pos:line="62" pos:column="10">.<pos:position pos:line="62" pos:column="11"/></operator><name pos:line="62" pos:column="11">share<pos:position pos:line="62" pos:column="16"/></name></name> <operator pos:line="62" pos:column="17">=<pos:position pos:line="62" pos:column="18"/></operator> <name pos:line="62" pos:column="19">share<pos:position pos:line="62" pos:column="24"/></name></expr>;<pos:position pos:line="62" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="64" pos:column="5">/* simulate thread, direct call of "thread" function */</comment>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">printf<pos:position pos:line="65" pos:column="11"/></name><argument_list pos:line="65" pos:column="11">(<argument><expr><literal type="string" pos:line="65" pos:column="12">"*** run %d\n"<pos:position pos:line="65" pos:column="26"/></literal></expr></argument>,<argument><expr><name pos:line="65" pos:column="27">i<pos:position pos:line="65" pos:column="28"/></name></expr></argument>)<pos:position pos:line="65" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">fire<pos:position pos:line="66" pos:column="9"/></name><argument_list pos:line="66" pos:column="9">(<argument><expr><operator pos:line="66" pos:column="10">&amp;<pos:position pos:line="66" pos:column="15"/></operator><name pos:line="66" pos:column="11">tdata<pos:position pos:line="66" pos:column="16"/></name></expr></argument>)<pos:position pos:line="66" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="67" pos:column="4"/></block></for>


  <comment type="block" pos:line="70" pos:column="3">/* fetch a another one */</comment>
  <expr_stmt><expr><call><name pos:line="71" pos:column="3">printf<pos:position pos:line="71" pos:column="9"/></name><argument_list pos:line="71" pos:column="9">(<argument><expr><literal type="string" pos:line="71" pos:column="10">"*** run %d\n"<pos:position pos:line="71" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="26">i<pos:position pos:line="71" pos:column="27"/></name></expr></argument>)<pos:position pos:line="71" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="29"/></expr_stmt>
  <if pos:line="72" pos:column="3">if<condition pos:line="72" pos:column="5">(<expr><operator pos:line="72" pos:column="6">(<pos:position pos:line="72" pos:column="7"/></operator><name pos:line="72" pos:column="7">curl<pos:position pos:line="72" pos:column="11"/></name> <operator pos:line="72" pos:column="12">=<pos:position pos:line="72" pos:column="13"/></operator> <call><name pos:line="72" pos:column="14">curl_easy_init<pos:position pos:line="72" pos:column="28"/></name><argument_list pos:line="72" pos:column="28">()<pos:position pos:line="72" pos:column="30"/></argument_list></call><operator pos:line="72" pos:column="30">)<pos:position pos:line="72" pos:column="31"/></operator> <operator pos:line="72" pos:column="32">==<pos:position pos:line="72" pos:column="34"/></operator> <name pos:line="72" pos:column="35">NULL<pos:position pos:line="72" pos:column="39"/></name></expr>)<pos:position pos:line="72" pos:column="40"/></condition><then pos:line="72" pos:column="40"> <block pos:line="72" pos:column="41">{
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">fprintf<pos:position pos:line="73" pos:column="12"/></name><argument_list pos:line="73" pos:column="12">(<argument><expr><name pos:line="73" pos:column="13">stderr<pos:position pos:line="73" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="21">"curl_easy_init() failed\n"<pos:position pos:line="73" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">curl_share_cleanup<pos:position pos:line="74" pos:column="23"/></name><argument_list pos:line="74" pos:column="23">(<argument><expr><name pos:line="74" pos:column="24">share<pos:position pos:line="74" pos:column="29"/></name></expr></argument>)<pos:position pos:line="74" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">curl_global_cleanup<pos:position pos:line="75" pos:column="24"/></name><argument_list pos:line="75" pos:column="24">()<pos:position pos:line="75" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="27"/></expr_stmt>
    <return pos:line="76" pos:column="5">return <expr><name pos:line="76" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="76" pos:column="30"/></name></expr>;<pos:position pos:line="76" pos:column="31"/></return>
  }<pos:position pos:line="77" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="79" pos:column="3">url<pos:position pos:line="79" pos:column="6"/></name> <operator pos:line="79" pos:column="7">=<pos:position pos:line="79" pos:column="8"/></operator> <name pos:line="79" pos:column="9">URL<pos:position pos:line="79" pos:column="12"/></name></expr>;<pos:position pos:line="79" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="80" pos:column="3">test_setopt<pos:position pos:line="80" pos:column="14"/></name><argument_list pos:line="80" pos:column="14">(<argument><expr><name pos:line="80" pos:column="15">curl<pos:position pos:line="80" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="21">CURLOPT_URL<pos:position pos:line="80" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="34">url<pos:position pos:line="80" pos:column="37"/></name></expr></argument>)<pos:position pos:line="80" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">printf<pos:position pos:line="81" pos:column="9"/></name><argument_list pos:line="81" pos:column="9">(<argument><expr><literal type="string" pos:line="81" pos:column="10">"CURLOPT_SHARE\n"<pos:position pos:line="81" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="82" pos:column="3">test_setopt<pos:position pos:line="82" pos:column="14"/></name><argument_list pos:line="82" pos:column="14">(<argument><expr><name pos:line="82" pos:column="15">curl<pos:position pos:line="82" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="21">CURLOPT_SHARE<pos:position pos:line="82" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="36">share<pos:position pos:line="82" pos:column="41"/></name></expr></argument>)<pos:position pos:line="82" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="84" pos:column="3">printf<pos:position pos:line="84" pos:column="9"/></name><argument_list pos:line="84" pos:column="9">(<argument><expr><literal type="string" pos:line="84" pos:column="10">"PERFORM\n"<pos:position pos:line="84" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="85" pos:column="3">curl_easy_perform<pos:position pos:line="85" pos:column="20"/></name><argument_list pos:line="85" pos:column="20">(<argument><expr><name pos:line="85" pos:column="21">curl<pos:position pos:line="85" pos:column="25"/></name></expr></argument>)<pos:position pos:line="85" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="27"/></expr_stmt>

  <comment type="block" pos:line="87" pos:column="3">/* try to free share, expect to fail because share is in use*/</comment>
  <expr_stmt><expr><call><name pos:line="88" pos:column="3">printf<pos:position pos:line="88" pos:column="9"/></name><argument_list pos:line="88" pos:column="9">(<argument><expr><literal type="string" pos:line="88" pos:column="10">"try SHARE_CLEANUP...\n"<pos:position pos:line="88" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name pos:line="89" pos:column="3">scode<pos:position pos:line="89" pos:column="8"/></name> <operator pos:line="89" pos:column="9">=<pos:position pos:line="89" pos:column="10"/></operator> <call><name pos:line="89" pos:column="11">curl_share_cleanup<pos:position pos:line="89" pos:column="29"/></name><argument_list pos:line="89" pos:column="29">(<argument><expr><name pos:line="89" pos:column="30">share<pos:position pos:line="89" pos:column="35"/></name></expr></argument>)<pos:position pos:line="89" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="37"/></expr_stmt>
  <if pos:line="90" pos:column="3">if<condition pos:line="90" pos:column="5">(<expr><name pos:line="90" pos:column="6">scode<pos:position pos:line="90" pos:column="11"/></name><operator pos:line="90" pos:column="11">==<pos:position pos:line="90" pos:column="13"/></operator><name pos:line="90" pos:column="13">CURLSHE_OK<pos:position pos:line="90" pos:column="23"/></name></expr>)<pos:position pos:line="90" pos:column="24"/></condition><then pos:line="90" pos:column="24"> <block pos:line="90" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">fprintf<pos:position pos:line="91" pos:column="12"/></name><argument_list pos:line="91" pos:column="12">(<argument><expr><name pos:line="91" pos:column="13">stderr<pos:position pos:line="91" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="21">"curl_share_cleanup succeed but error expected\n"<pos:position pos:line="91" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name pos:line="92" pos:column="5">share<pos:position pos:line="92" pos:column="10"/></name> <operator pos:line="92" pos:column="11">=<pos:position pos:line="92" pos:column="12"/></operator> <name pos:line="92" pos:column="13">NULL<pos:position pos:line="92" pos:column="17"/></name></expr>;<pos:position pos:line="92" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="93" pos:column="4"/></block></then>
  <else pos:line="94" pos:column="3">else <block pos:line="94" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">printf<pos:position pos:line="95" pos:column="11"/></name><argument_list pos:line="95" pos:column="11">(<argument><expr><literal type="string" pos:line="95" pos:column="12">"SHARE_CLEANUP failed, correct\n"<pos:position pos:line="95" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="96" pos:column="4"/></block></else></if>

<label><name pos:line="98" pos:column="1">test_cleanup<pos:position pos:line="98" pos:column="13"/></name>:<pos:position pos:line="98" pos:column="14"/></label>

  <comment type="block" pos:line="100" pos:column="3">/* clean up last handle */</comment>
  <expr_stmt><expr><call><name pos:line="101" pos:column="3">printf<pos:position pos:line="101" pos:column="9"/></name><argument_list pos:line="101" pos:column="9">(<argument><expr><literal type="string" pos:line="101" pos:column="10">"CLEANUP\n"<pos:position pos:line="101" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="102" pos:column="3">curl_easy_cleanup<pos:position pos:line="102" pos:column="20"/></name><argument_list pos:line="102" pos:column="20">(<argument><expr><name pos:line="102" pos:column="21">curl<pos:position pos:line="102" pos:column="25"/></name></expr></argument>)<pos:position pos:line="102" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="27"/></expr_stmt>

  <comment type="block" pos:line="104" pos:column="3">/* free share */</comment>
  <expr_stmt><expr><call><name pos:line="105" pos:column="3">printf<pos:position pos:line="105" pos:column="9"/></name><argument_list pos:line="105" pos:column="9">(<argument><expr><literal type="string" pos:line="105" pos:column="10">"SHARE_CLEANUP\n"<pos:position pos:line="105" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="106" pos:column="3">scode<pos:position pos:line="106" pos:column="8"/></name> <operator pos:line="106" pos:column="9">=<pos:position pos:line="106" pos:column="10"/></operator> <call><name pos:line="106" pos:column="11">curl_share_cleanup<pos:position pos:line="106" pos:column="29"/></name><argument_list pos:line="106" pos:column="29">(<argument><expr><name pos:line="106" pos:column="30">share<pos:position pos:line="106" pos:column="35"/></name></expr></argument>)<pos:position pos:line="106" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="37"/></expr_stmt>
  <if pos:line="107" pos:column="3">if<condition pos:line="107" pos:column="5">(<expr><name pos:line="107" pos:column="6">scode<pos:position pos:line="107" pos:column="11"/></name><operator pos:line="107" pos:column="11">!=<pos:position pos:line="107" pos:column="13"/></operator><name pos:line="107" pos:column="13">CURLSHE_OK<pos:position pos:line="107" pos:column="23"/></name></expr>)<pos:position pos:line="107" pos:column="24"/></condition><then pos:line="107" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="108" pos:column="5">fprintf<pos:position pos:line="108" pos:column="12"/></name><argument_list pos:line="108" pos:column="12">(<argument><expr><name pos:line="108" pos:column="13">stderr<pos:position pos:line="108" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="21">"curl_share_cleanup failed, code errno %d\n"<pos:position pos:line="108" pos:column="65"/></literal></expr></argument>,
            <argument><expr><operator pos:line="109" pos:column="13">(<pos:position pos:line="109" pos:column="14"/></operator><name pos:line="109" pos:column="14">int<pos:position pos:line="109" pos:column="17"/></name><operator pos:line="109" pos:column="17">)<pos:position pos:line="109" pos:column="18"/></operator><name pos:line="109" pos:column="18">scode<pos:position pos:line="109" pos:column="23"/></name></expr></argument>)<pos:position pos:line="109" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="25"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="111" pos:column="3">printf<pos:position pos:line="111" pos:column="9"/></name><argument_list pos:line="111" pos:column="9">(<argument><expr><literal type="string" pos:line="111" pos:column="10">"GLOBAL_CLEANUP\n"<pos:position pos:line="111" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="112" pos:column="3">curl_global_cleanup<pos:position pos:line="112" pos:column="22"/></name><argument_list pos:line="112" pos:column="22">()<pos:position pos:line="112" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="25"/></expr_stmt>

  <return pos:line="114" pos:column="3">return <expr><name pos:line="114" pos:column="10">res<pos:position pos:line="114" pos:column="13"/></name></expr>;<pos:position pos:line="114" pos:column="14"/></return>
}<pos:position pos:line="115" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2201_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">smtp_endofresp<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">connectdata<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">conn<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">line<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">size_t<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">len<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">resp<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">smtp_conn<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">smtpc<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><operator pos:line="4" pos:column="29">&amp;<pos:position pos:line="4" pos:column="34"/></operator><name><name pos:line="4" pos:column="30">conn<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">proto<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">.<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">smtpc<pos:position pos:line="4" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">bool<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">result<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><name pos:line="5" pos:column="17">FALSE<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Nothing for us */</comment>
  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name pos:line="8" pos:column="6">len<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">&lt;<pos:position pos:line="8" pos:column="14"/></operator> <literal type="number" pos:line="8" pos:column="12">4<pos:position pos:line="8" pos:column="13"/></literal> <operator pos:line="8" pos:column="14">||<pos:position pos:line="8" pos:column="16"/></operator> <operator pos:line="8" pos:column="17">!<pos:position pos:line="8" pos:column="18"/></operator><call><name pos:line="8" pos:column="18">ISDIGIT<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name><name pos:line="8" pos:column="26">line<pos:position pos:line="8" pos:column="30"/></name><index pos:line="8" pos:column="30">[<expr><literal type="number" pos:line="8" pos:column="31">0<pos:position pos:line="8" pos:column="32"/></literal></expr>]<pos:position pos:line="8" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call> <operator pos:line="8" pos:column="35">||<pos:position pos:line="8" pos:column="37"/></operator> <operator pos:line="8" pos:column="38">!<pos:position pos:line="8" pos:column="39"/></operator><call><name pos:line="8" pos:column="39">ISDIGIT<pos:position pos:line="8" pos:column="46"/></name><argument_list pos:line="8" pos:column="46">(<argument><expr><name><name pos:line="8" pos:column="47">line<pos:position pos:line="8" pos:column="51"/></name><index pos:line="8" pos:column="51">[<expr><literal type="number" pos:line="8" pos:column="52">1<pos:position pos:line="8" pos:column="53"/></literal></expr>]<pos:position pos:line="8" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call> <operator pos:line="8" pos:column="56">||<pos:position pos:line="8" pos:column="58"/></operator> <operator pos:line="8" pos:column="59">!<pos:position pos:line="8" pos:column="60"/></operator><call><name pos:line="8" pos:column="60">ISDIGIT<pos:position pos:line="8" pos:column="67"/></name><argument_list pos:line="8" pos:column="67">(<argument><expr><name><name pos:line="8" pos:column="68">line<pos:position pos:line="8" pos:column="72"/></name><index pos:line="8" pos:column="72">[<expr><literal type="number" pos:line="8" pos:column="73">2<pos:position pos:line="8" pos:column="74"/></literal></expr>]<pos:position pos:line="8" pos:column="75"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="77"/></condition><then pos:line="8" pos:column="77">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">FALSE<pos:position pos:line="9" pos:column="17"/></name></expr>;<pos:position pos:line="9" pos:column="18"/></return></block></then></if>

  <comment type="block" pos:line="11" pos:column="3">/* Do we have a command response? This should be the response code followed
     by a space and optionally some text as per RFC-5321 and as outlined in
     Section 4. Examples of RFC-4954 but some e-mail servers ignore this and
     only send the response code instead as per Section 4.2. */</comment>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name><name pos:line="15" pos:column="6">line<pos:position pos:line="15" pos:column="10"/></name><index pos:line="15" pos:column="10">[<expr><literal type="number" pos:line="15" pos:column="11">3<pos:position pos:line="15" pos:column="12"/></literal></expr>]<pos:position pos:line="15" pos:column="13"/></index></name> <operator pos:line="15" pos:column="14">==<pos:position pos:line="15" pos:column="16"/></operator> <literal type="char" pos:line="15" pos:column="17">' '<pos:position pos:line="15" pos:column="20"/></literal> <operator pos:line="15" pos:column="21">||<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">len<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">==<pos:position pos:line="15" pos:column="30"/></operator> <literal type="number" pos:line="15" pos:column="31">5<pos:position pos:line="15" pos:column="32"/></literal></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <block pos:line="15" pos:column="34">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">result<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <name pos:line="16" pos:column="14">TRUE<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="17" pos:column="5">*<pos:position pos:line="17" pos:column="6"/></operator><name pos:line="17" pos:column="6">resp<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">curlx_sltosi<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><call><name pos:line="17" pos:column="26">strtol<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">line<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="39">NULL<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="45">10<pos:position pos:line="17" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* Make sure real server never sends internal value */</comment>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><operator pos:line="20" pos:column="8">*<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">resp<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">==<pos:position pos:line="20" pos:column="16"/></operator> <literal type="number" pos:line="20" pos:column="17">1<pos:position pos:line="20" pos:column="18"/></literal></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="21" pos:column="7">*<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">resp<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <literal type="number" pos:line="21" pos:column="15">0<pos:position pos:line="21" pos:column="16"/></literal></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt></block></then></if>
  }<pos:position pos:line="22" pos:column="4"/></block></then>
  <comment type="block" pos:line="23" pos:column="3">/* Do we have a multiline (continuation) response? */</comment>
  <elseif pos:line="24" pos:column="3">else <if pos:line="24" pos:column="8">if<condition pos:line="24" pos:column="10">(<expr><name><name pos:line="24" pos:column="11">line<pos:position pos:line="24" pos:column="15"/></name><index pos:line="24" pos:column="15">[<expr><literal type="number" pos:line="24" pos:column="16">3<pos:position pos:line="24" pos:column="17"/></literal></expr>]<pos:position pos:line="24" pos:column="18"/></index></name> <operator pos:line="24" pos:column="19">==<pos:position pos:line="24" pos:column="21"/></operator> <literal type="char" pos:line="24" pos:column="22">'-'<pos:position pos:line="24" pos:column="25"/></literal> <operator pos:line="24" pos:column="26">&amp;&amp;<pos:position pos:line="24" pos:column="36"/></operator>
          <operator pos:line="25" pos:column="11">(<pos:position pos:line="25" pos:column="12"/></operator><name><name pos:line="25" pos:column="12">smtpc<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">state<pos:position pos:line="25" pos:column="24"/></name></name> <operator pos:line="25" pos:column="25">==<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="28">SMTP_EHLO<pos:position pos:line="25" pos:column="37"/></name> <operator pos:line="25" pos:column="38">||<pos:position pos:line="25" pos:column="40"/></operator> <name><name pos:line="25" pos:column="41">smtpc<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">-&gt;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="48">state<pos:position pos:line="25" pos:column="53"/></name></name> <operator pos:line="25" pos:column="54">==<pos:position pos:line="25" pos:column="56"/></operator> <name pos:line="25" pos:column="57">SMTP_COMMAND<pos:position pos:line="25" pos:column="69"/></name><operator pos:line="25" pos:column="69">)<pos:position pos:line="25" pos:column="70"/></operator></expr>)<pos:position pos:line="25" pos:column="71"/></condition><then pos:line="25" pos:column="71"> <block pos:line="25" pos:column="72">{
    <expr_stmt><expr><name pos:line="26" pos:column="5">result<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">TRUE<pos:position pos:line="26" pos:column="18"/></name></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="27" pos:column="5">*<pos:position pos:line="27" pos:column="6"/></operator><name pos:line="27" pos:column="6">resp<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <literal type="number" pos:line="27" pos:column="13">1<pos:position pos:line="27" pos:column="14"/></literal></expr>;<pos:position pos:line="27" pos:column="15"/></expr_stmt>  <comment type="block" pos:line="27" pos:column="17">/* Internal response code */</comment>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="30" pos:column="3">return <expr><name pos:line="30" pos:column="10">result<pos:position pos:line="30" pos:column="16"/></name></expr>;<pos:position pos:line="30" pos:column="17"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

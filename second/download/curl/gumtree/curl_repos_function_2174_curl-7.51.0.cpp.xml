<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2174_curl-7.51.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_auth_create_plain_message<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">Curl_easy<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">data<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                        <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">userp<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
                                        <parameter><decl><type><specifier pos:line="3" pos:column="41">const<pos:position pos:line="3" pos:column="46"/></specifier> <name pos:line="3" pos:column="47">char<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">passwdp<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="4" pos:column="41">char<pos:position pos:line="4" pos:column="45"/></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier><modifier pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></modifier></type><name pos:line="4" pos:column="48">outptr<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="56">size_t<pos:position pos:line="4" pos:column="62"/></name> <modifier pos:line="4" pos:column="63">*<pos:position pos:line="4" pos:column="64"/></modifier></type><name pos:line="4" pos:column="64">outlen<pos:position pos:line="4" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="71"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">plainauth<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">ulen<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">plen<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">ulen<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">strlen<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">userp<pos:position pos:line="11" pos:column="22"/></name></expr></argument>)<pos:position pos:line="11" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">plen<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <call><name pos:line="12" pos:column="10">strlen<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">passwdp<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">plainauth<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">malloc<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><literal type="number" pos:line="14" pos:column="22">2<pos:position pos:line="14" pos:column="23"/></literal> <operator pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">ulen<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">+<pos:position pos:line="14" pos:column="32"/></operator> <name pos:line="14" pos:column="33">plen<pos:position pos:line="14" pos:column="37"/></name> <operator pos:line="14" pos:column="38">+<pos:position pos:line="14" pos:column="39"/></operator> <literal type="number" pos:line="14" pos:column="40">2<pos:position pos:line="14" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">plainauth<pos:position pos:line="15" pos:column="16"/></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17"> <block pos:line="15" pos:column="18">{
    <expr_stmt><expr><operator pos:line="16" pos:column="5">*<pos:position pos:line="16" pos:column="6"/></operator><name pos:line="16" pos:column="6">outlen<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <literal type="number" pos:line="16" pos:column="15">0<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="17" pos:column="5">*<pos:position pos:line="17" pos:column="6"/></operator><name pos:line="17" pos:column="6">outptr<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">NULL<pos:position pos:line="17" pos:column="19"/></name></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="21" pos:column="3">/* Calculate the reply */</comment>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">memcpy<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><name pos:line="22" pos:column="10">plainauth<pos:position pos:line="22" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="21">userp<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="28">ulen<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">plainauth<pos:position pos:line="23" pos:column="12"/></name><index pos:line="23" pos:column="12">[<expr><name pos:line="23" pos:column="13">ulen<pos:position pos:line="23" pos:column="17"/></name></expr>]<pos:position pos:line="23" pos:column="18"/></index></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <literal type="char" pos:line="23" pos:column="21">'\0'<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">memcpy<pos:position pos:line="24" pos:column="9"/></name><argument_list pos:line="24" pos:column="9">(<argument><expr><name pos:line="24" pos:column="10">plainauth<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">+<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">ulen<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">+<pos:position pos:line="24" pos:column="28"/></operator> <literal type="number" pos:line="24" pos:column="29">1<pos:position pos:line="24" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="32">userp<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="39">ulen<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">plainauth<pos:position pos:line="25" pos:column="12"/></name><index pos:line="25" pos:column="12">[<expr><literal type="number" pos:line="25" pos:column="13">2<pos:position pos:line="25" pos:column="14"/></literal> <operator pos:line="25" pos:column="15">*<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">ulen<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">+<pos:position pos:line="25" pos:column="23"/></operator> <literal type="number" pos:line="25" pos:column="24">1<pos:position pos:line="25" pos:column="25"/></literal></expr>]<pos:position pos:line="25" pos:column="26"/></index></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <literal type="char" pos:line="25" pos:column="29">'\0'<pos:position pos:line="25" pos:column="33"/></literal></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">memcpy<pos:position pos:line="26" pos:column="9"/></name><argument_list pos:line="26" pos:column="9">(<argument><expr><name pos:line="26" pos:column="10">plainauth<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">+<pos:position pos:line="26" pos:column="21"/></operator> <literal type="number" pos:line="26" pos:column="22">2<pos:position pos:line="26" pos:column="23"/></literal> <operator pos:line="26" pos:column="24">*<pos:position pos:line="26" pos:column="25"/></operator> <name pos:line="26" pos:column="26">ulen<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">+<pos:position pos:line="26" pos:column="32"/></operator> <literal type="number" pos:line="26" pos:column="33">2<pos:position pos:line="26" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="36">passwdp<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">plen<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>

  <comment type="block" pos:line="28" pos:column="3">/* Base64 encode the reply */</comment>
  <expr_stmt><expr><name pos:line="29" pos:column="3">result<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <call><name pos:line="29" pos:column="12">Curl_base64_encode<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">data<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="37">plainauth<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="48">2<pos:position pos:line="29" pos:column="49"/></literal> <operator pos:line="29" pos:column="50">*<pos:position pos:line="29" pos:column="51"/></operator> <name pos:line="29" pos:column="52">ulen<pos:position pos:line="29" pos:column="56"/></name> <operator pos:line="29" pos:column="57">+<pos:position pos:line="29" pos:column="58"/></operator> <name pos:line="29" pos:column="59">plen<pos:position pos:line="29" pos:column="63"/></name> <operator pos:line="29" pos:column="64">+<pos:position pos:line="29" pos:column="65"/></operator> <literal type="number" pos:line="29" pos:column="66">2<pos:position pos:line="29" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="69">outptr<pos:position pos:line="29" pos:column="75"/></name></expr></argument>,
                              <argument><expr><name pos:line="30" pos:column="31">outlen<pos:position pos:line="30" pos:column="37"/></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">free<pos:position pos:line="31" pos:column="7"/></name><argument_list pos:line="31" pos:column="7">(<argument><expr><name pos:line="31" pos:column="8">plainauth<pos:position pos:line="31" pos:column="17"/></name></expr></argument>)<pos:position pos:line="31" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="19"/></expr_stmt>

  <return pos:line="33" pos:column="3">return <expr><name pos:line="33" pos:column="10">result<pos:position pos:line="33" pos:column="16"/></name></expr>;<pos:position pos:line="33" pos:column="17"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

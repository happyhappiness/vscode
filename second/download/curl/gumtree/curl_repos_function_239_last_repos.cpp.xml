<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_239_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">close_socket<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">clientp<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">curl_socket_t<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">item<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">fprintf<pos:position pos:line="3" pos:column="10"/></name><argument_list pos:line="3" pos:column="10">(<argument><expr><name pos:line="3" pos:column="11">MSG_OUT<pos:position pos:line="3" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="20">"\nclose_socket : %d"<pos:position pos:line="3" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="43">item<pos:position pos:line="3" pos:column="47"/></name></expr></argument>)<pos:position pos:line="3" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="49"/></expr_stmt>

  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">std<pos:position pos:line="5" pos:column="6"/></name><operator pos:line="5" pos:column="6">::<pos:position pos:line="5" pos:column="8"/></operator><name><name pos:line="5" pos:column="8">map<pos:position pos:line="5" pos:column="11"/></name><argument_list type="generic" pos:line="5" pos:column="11">&lt;<argument><expr><name pos:line="5" pos:column="12">curl_socket_t<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="27">boost<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">::<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="34">asio<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">::<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">ip<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">::<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="44">tcp<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">::<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="49">socket<pos:position pos:line="5" pos:column="55"/></name></name> <operator pos:line="5" pos:column="56">*<pos:position pos:line="5" pos:column="57"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="61"/></argument_list></name><operator pos:line="5" pos:column="58">::<pos:position pos:line="5" pos:column="60"/></operator><name pos:line="5" pos:column="60">iterator<pos:position pos:line="5" pos:column="68"/></name></name></type> <name pos:line="5" pos:column="69">it<pos:position pos:line="5" pos:column="71"/></name> <init pos:line="5" pos:column="72">=
    <expr><call><name><name pos:line="6" pos:column="5">socket_map<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">.<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">find<pos:position pos:line="6" pos:column="20"/></name></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">item<pos:position pos:line="6" pos:column="25"/></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name pos:line="8" pos:column="6">it<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">!=<pos:position pos:line="8" pos:column="11"/></operator> <call><name><name pos:line="8" pos:column="12">socket_map<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">.<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">end<pos:position pos:line="8" pos:column="26"/></name></name><argument_list pos:line="8" pos:column="26">()<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <block pos:line="8" pos:column="30">{
    <expr_stmt><expr><operator pos:line="9" pos:column="5">delete<pos:position pos:line="9" pos:column="11"/></operator> <name><name pos:line="9" pos:column="12">it<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">second<pos:position pos:line="9" pos:column="22"/></name></name></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">socket_map<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">.<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">erase<pos:position pos:line="10" pos:column="21"/></name></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">it<pos:position pos:line="10" pos:column="24"/></name></expr></argument>)<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <return pos:line="13" pos:column="3">return <expr><literal type="number" pos:line="13" pos:column="10">0<pos:position pos:line="13" pos:column="11"/></literal></expr>;<pos:position pos:line="13" pos:column="12"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

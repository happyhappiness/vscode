<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1112_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">contains_trailers<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">p<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">size_t<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">len<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">end<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">p<pos:position pos:line="3" pos:column="22"/></name> <operator pos:line="3" pos:column="23">+<pos:position pos:line="3" pos:column="24"/></operator> <name pos:line="3" pos:column="25">len<pos:position pos:line="3" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <for pos:line="4" pos:column="3">for<control pos:line="4" pos:column="6">(<init pos:line="4" pos:column="7">;<pos:position pos:line="4" pos:column="8"/></init><condition pos:line="4" pos:column="8">;<pos:position pos:line="4" pos:column="9"/></condition><incr/>)<pos:position pos:line="4" pos:column="10"/></control> <block pos:line="4" pos:column="11">{
    <for pos:line="5" pos:column="5">for<control pos:line="5" pos:column="8">(<init pos:line="5" pos:column="9">;<pos:position pos:line="5" pos:column="10"/></init> <condition><expr><name pos:line="5" pos:column="11">p<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">!=<pos:position pos:line="5" pos:column="15"/></operator> <name pos:line="5" pos:column="16">end<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">&amp;&amp;<pos:position pos:line="5" pos:column="30"/></operator> <operator pos:line="5" pos:column="23">(<pos:position pos:line="5" pos:column="24"/></operator><operator pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">p<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">==<pos:position pos:line="5" pos:column="29"/></operator> <literal type="char" pos:line="5" pos:column="30">' '<pos:position pos:line="5" pos:column="33"/></literal> <operator pos:line="5" pos:column="34">||<pos:position pos:line="5" pos:column="36"/></operator> <operator pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">p<pos:position pos:line="5" pos:column="39"/></name> <operator pos:line="5" pos:column="40">==<pos:position pos:line="5" pos:column="42"/></operator> <literal type="char" pos:line="5" pos:column="43">'\t'<pos:position pos:line="5" pos:column="47"/></literal><operator pos:line="5" pos:column="47">)<pos:position pos:line="5" pos:column="48"/></operator></expr>;<pos:position pos:line="5" pos:column="49"/></condition> <incr><expr><operator pos:line="5" pos:column="50">++<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="52">p<pos:position pos:line="5" pos:column="53"/></name></expr></incr>)<pos:position pos:line="5" pos:column="54"/></control>
      <block type="pseudo"><empty_stmt pos:line="6" pos:column="7">;<pos:position pos:line="6" pos:column="8"/></empty_stmt></block></for>
    <if pos:line="7" pos:column="5">if<condition pos:line="7" pos:column="7">(<expr><name pos:line="7" pos:column="8">p<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">==<pos:position pos:line="7" pos:column="12"/></operator> <name pos:line="7" pos:column="13">end<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">||<pos:position pos:line="7" pos:column="19"/></operator> <call pos:line="7" pos:column="20">(<name pos:line="7" pos:column="21">size_t<pos:position pos:line="7" pos:column="27"/></name>)<argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">end<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">-<pos:position pos:line="7" pos:column="34"/></operator> <name pos:line="7" pos:column="35">p<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call> <operator pos:line="7" pos:column="38">&lt;<pos:position pos:line="7" pos:column="42"/></operator> <sizeof pos:line="7" pos:column="40">sizeof<argument_list pos:line="7" pos:column="46">(<argument><expr><literal type="string" pos:line="7" pos:column="47">"trailers"<pos:position pos:line="7" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></sizeof> <operator pos:line="7" pos:column="59">-<pos:position pos:line="7" pos:column="60"/></operator> <literal type="number" pos:line="7" pos:column="61">1<pos:position pos:line="7" pos:column="62"/></literal></expr>)<pos:position pos:line="7" pos:column="63"/></condition><then pos:line="7" pos:column="63">
      <block type="pseudo"><return pos:line="8" pos:column="7">return <expr><name pos:line="8" pos:column="14">FALSE<pos:position pos:line="8" pos:column="19"/></name></expr>;<pos:position pos:line="8" pos:column="20"/></return></block></then></if>
    <if pos:line="9" pos:column="5">if<condition pos:line="9" pos:column="7">(<expr><call><name pos:line="9" pos:column="8">strncasecompare<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><literal type="string" pos:line="9" pos:column="24">"trailers"<pos:position pos:line="9" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="36">p<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="39">sizeof<argument_list pos:line="9" pos:column="45">(<argument><expr><literal type="string" pos:line="9" pos:column="46">"trailers"<pos:position pos:line="9" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></sizeof> <operator pos:line="9" pos:column="58">-<pos:position pos:line="9" pos:column="59"/></operator> <literal type="number" pos:line="9" pos:column="60">1<pos:position pos:line="9" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="63"/></condition><then pos:line="9" pos:column="63"> <block pos:line="9" pos:column="64">{
      <expr_stmt><expr><name pos:line="10" pos:column="7">p<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">+=<pos:position pos:line="10" pos:column="11"/></operator> <sizeof pos:line="10" pos:column="12">sizeof<argument_list pos:line="10" pos:column="18">(<argument><expr><literal type="string" pos:line="10" pos:column="19">"trailers"<pos:position pos:line="10" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></sizeof> <operator pos:line="10" pos:column="31">-<pos:position pos:line="10" pos:column="32"/></operator> <literal type="number" pos:line="10" pos:column="33">1<pos:position pos:line="10" pos:column="34"/></literal></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
      <for pos:line="11" pos:column="7">for<control pos:line="11" pos:column="10">(<init pos:line="11" pos:column="11">;<pos:position pos:line="11" pos:column="12"/></init> <condition><expr><name pos:line="11" pos:column="13">p<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">!=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">end<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">&amp;&amp;<pos:position pos:line="11" pos:column="32"/></operator> <operator pos:line="11" pos:column="25">(<pos:position pos:line="11" pos:column="26"/></operator><operator pos:line="11" pos:column="26">*<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">p<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">==<pos:position pos:line="11" pos:column="31"/></operator> <literal type="char" pos:line="11" pos:column="32">' '<pos:position pos:line="11" pos:column="35"/></literal> <operator pos:line="11" pos:column="36">||<pos:position pos:line="11" pos:column="38"/></operator> <operator pos:line="11" pos:column="39">*<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="40">p<pos:position pos:line="11" pos:column="41"/></name> <operator pos:line="11" pos:column="42">==<pos:position pos:line="11" pos:column="44"/></operator> <literal type="char" pos:line="11" pos:column="45">'\t'<pos:position pos:line="11" pos:column="49"/></literal><operator pos:line="11" pos:column="49">)<pos:position pos:line="11" pos:column="50"/></operator></expr>;<pos:position pos:line="11" pos:column="51"/></condition> <incr><expr><operator pos:line="11" pos:column="52">++<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="54">p<pos:position pos:line="11" pos:column="55"/></name></expr></incr>)<pos:position pos:line="11" pos:column="56"/></control>
        <block type="pseudo"><empty_stmt pos:line="12" pos:column="9">;<pos:position pos:line="12" pos:column="10"/></empty_stmt></block></for>
      <if pos:line="13" pos:column="7">if<condition pos:line="13" pos:column="9">(<expr><name pos:line="13" pos:column="10">p<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">==<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">end<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">||<pos:position pos:line="13" pos:column="21"/></operator> <operator pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">p<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">==<pos:position pos:line="13" pos:column="27"/></operator> <literal type="char" pos:line="13" pos:column="28">','<pos:position pos:line="13" pos:column="31"/></literal></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">TRUE<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return></block></then></if>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="16" pos:column="5">/* skip to next token */</comment>
    <for pos:line="17" pos:column="5">for<control pos:line="17" pos:column="8">(<init pos:line="17" pos:column="9">;<pos:position pos:line="17" pos:column="10"/></init> <condition><expr><name pos:line="17" pos:column="11">p<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">!=<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">end<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">&amp;&amp;<pos:position pos:line="17" pos:column="30"/></operator> <operator pos:line="17" pos:column="23">*<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">p<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">!=<pos:position pos:line="17" pos:column="28"/></operator> <literal type="char" pos:line="17" pos:column="29">','<pos:position pos:line="17" pos:column="32"/></literal></expr>;<pos:position pos:line="17" pos:column="33"/></condition> <incr><expr><operator pos:line="17" pos:column="34">++<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="36">p<pos:position pos:line="17" pos:column="37"/></name></expr></incr>)<pos:position pos:line="17" pos:column="38"/></control>
      <block type="pseudo"><empty_stmt pos:line="18" pos:column="7">;<pos:position pos:line="18" pos:column="8"/></empty_stmt></block></for>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><name pos:line="19" pos:column="8">p<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">==<pos:position pos:line="19" pos:column="12"/></operator> <name pos:line="19" pos:column="13">end<pos:position pos:line="19" pos:column="16"/></name></expr>)<pos:position pos:line="19" pos:column="17"/></condition><then pos:line="19" pos:column="17">
      <block type="pseudo"><return pos:line="20" pos:column="7">return <expr><name pos:line="20" pos:column="14">FALSE<pos:position pos:line="20" pos:column="19"/></name></expr>;<pos:position pos:line="20" pos:column="20"/></return></block></then></if>
    <expr_stmt><expr><operator pos:line="21" pos:column="5">++<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">p<pos:position pos:line="21" pos:column="8"/></name></expr>;<pos:position pos:line="21" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></for>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

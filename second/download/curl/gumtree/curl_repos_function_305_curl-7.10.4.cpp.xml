<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_305_curl-7.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">MakeIP<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">unsigned<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">long<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">num<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">addr<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">addr_len<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><call><name pos:line="3" pos:column="5">defined<pos:position pos:line="3" pos:column="12"/></name><argument_list pos:line="3" pos:column="12">(<argument><expr><name pos:line="3" pos:column="13">HAVE_INET_NTOA<pos:position pos:line="3" pos:column="27"/></name></expr></argument>)<pos:position pos:line="3" pos:column="28"/></argument_list></call> <operator pos:line="3" pos:column="29">||<pos:position pos:line="3" pos:column="31"/></operator> <call><name pos:line="3" pos:column="32">defined<pos:position pos:line="3" pos:column="39"/></name><argument_list pos:line="3" pos:column="39">(<argument><expr><name pos:line="3" pos:column="40">HAVE_INET_NTOA_R<pos:position pos:line="3" pos:column="56"/></name></expr></argument>)<pos:position pos:line="3" pos:column="57"/></argument_list></call></expr></cpp:if>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">in_addr<pos:position pos:line="4" pos:column="17"/></name></name></type> <name pos:line="4" pos:column="18">in<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="5" pos:column="3">in<pos:position pos:line="5" pos:column="5"/></name><operator pos:line="5" pos:column="5">.<pos:position pos:line="5" pos:column="6"/></operator><name pos:line="5" pos:column="6">s_addr<pos:position pos:line="5" pos:column="12"/></name></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <call><name pos:line="5" pos:column="15">htonl<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">num<pos:position pos:line="5" pos:column="24"/></name></expr></argument>)<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt>

<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><call><name pos:line="7" pos:column="5">defined<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">HAVE_INET_NTOA_R<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">inet_ntoa_r<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">in<pos:position pos:line="8" pos:column="17"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="18">addr<pos:position pos:line="8" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="23">addr_len<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
<cpp:else pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">else<pos:position pos:line="9" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">strncpy<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><name pos:line="10" pos:column="11">addr<pos:position pos:line="10" pos:column="15"/></name></expr></argument>,<argument><expr><call><name pos:line="10" pos:column="16">inet_ntoa<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">in<pos:position pos:line="10" pos:column="28"/></name></expr></argument>)<pos:position pos:line="10" pos:column="29"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="10" pos:column="30">addr_len<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">unsigned<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">char<pos:position pos:line="13" pos:column="16"/></name> <modifier pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></modifier></type><name pos:line="13" pos:column="18">paddr<pos:position pos:line="13" pos:column="23"/></name></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">num<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <call><name pos:line="15" pos:column="9">htonl<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">num<pos:position pos:line="15" pos:column="18"/></name></expr></argument>)<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>  <comment type="block" pos:line="15" pos:column="22">/* htonl() added to avoid endian probs */</comment>
  <expr_stmt><expr><name pos:line="16" pos:column="3">paddr<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <operator pos:line="16" pos:column="11">(<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">unsigned<pos:position pos:line="16" pos:column="20"/></name> <name pos:line="16" pos:column="21">char<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">*<pos:position pos:line="16" pos:column="27"/></operator><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator><operator pos:line="16" pos:column="28">&amp;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="29">num<pos:position pos:line="16" pos:column="32"/></name></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">sprintf<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><name pos:line="17" pos:column="11">addr<pos:position pos:line="17" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="17">"%u.%u.%u.%u"<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="32">paddr<pos:position pos:line="17" pos:column="37"/></name><index pos:line="17" pos:column="37">[<expr><literal type="number" pos:line="17" pos:column="38">0<pos:position pos:line="17" pos:column="39"/></literal></expr>]<pos:position pos:line="17" pos:column="40"/></index></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="42">paddr<pos:position pos:line="17" pos:column="47"/></name><index pos:line="17" pos:column="47">[<expr><literal type="number" pos:line="17" pos:column="48">1<pos:position pos:line="17" pos:column="49"/></literal></expr>]<pos:position pos:line="17" pos:column="50"/></index></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="52">paddr<pos:position pos:line="17" pos:column="57"/></name><index pos:line="17" pos:column="57">[<expr><literal type="number" pos:line="17" pos:column="58">2<pos:position pos:line="17" pos:column="59"/></literal></expr>]<pos:position pos:line="17" pos:column="60"/></index></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="62">paddr<pos:position pos:line="17" pos:column="67"/></name><index pos:line="17" pos:column="67">[<expr><literal type="number" pos:line="17" pos:column="68">3<pos:position pos:line="17" pos:column="69"/></literal></expr>]<pos:position pos:line="17" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="19" pos:column="3">return <expr><operator pos:line="19" pos:column="10">(<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">addr<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

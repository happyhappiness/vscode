<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_458_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLSH<pos:position pos:line="1" pos:column="7"/></name> <modifier pos:line="1" pos:column="8">*<pos:position pos:line="1" pos:column="9"/></modifier></type>
<name pos:line="2" pos:column="1">curl_share_init<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">void<pos:position pos:line="2" pos:column="21"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_share<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">share<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">=
    <expr><operator pos:line="5" pos:column="5">(<pos:position pos:line="5" pos:column="6"/></operator>struct <name pos:line="5" pos:column="13">Curl_share<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></operator><operator pos:line="5" pos:column="25">)<pos:position pos:line="5" pos:column="26"/></operator><call><name pos:line="5" pos:column="26">malloc<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><sizeof pos:line="5" pos:column="33">sizeof<argument_list pos:line="5" pos:column="39">(<argument><expr pos:line="5" pos:column="40">struct <name pos:line="5" pos:column="47">Curl_share<pos:position pos:line="5" pos:column="57"/></name></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">share<pos:position pos:line="6" pos:column="12"/></name></expr>)<pos:position pos:line="6" pos:column="13"/></condition><then pos:line="6" pos:column="13"> <block pos:line="6" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">memset<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">share<pos:position pos:line="7" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="23">sizeof<argument_list pos:line="7" pos:column="29">(<argument><expr pos:line="7" pos:column="30">struct <name pos:line="7" pos:column="37">Curl_share<pos:position pos:line="7" pos:column="47"/></name></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">share<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">specifier<pos:position pos:line="8" pos:column="21"/></name></name> <operator pos:line="8" pos:column="22">|=<pos:position pos:line="8" pos:column="24"/></operator> <operator pos:line="8" pos:column="25">(<pos:position pos:line="8" pos:column="26"/></operator><literal type="number" pos:line="8" pos:column="26">1<pos:position pos:line="8" pos:column="27"/></literal><operator pos:line="8" pos:column="27">&lt;&lt;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="29">CURL_LOCK_DATA_SHARE<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">)<pos:position pos:line="8" pos:column="50"/></operator></expr>;<pos:position pos:line="8" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">share<pos:position pos:line="11" pos:column="15"/></name></expr>;<pos:position pos:line="11" pos:column="16"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

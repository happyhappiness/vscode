<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_713.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">curl_global_init<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">long<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">flags<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">initialized<pos:position pos:line="3" pos:column="18"/></name></expr>)<pos:position pos:line="3" pos:column="19"/></condition><then pos:line="3" pos:column="19">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><name pos:line="4" pos:column="12">CURLE_OK<pos:position pos:line="4" pos:column="20"/></name></expr>;<pos:position pos:line="4" pos:column="21"/></return></block></then></if>

  <comment type="block" pos:line="6" pos:column="3">/* Setup the default memory functions here (again) */</comment>
  <expr_stmt><expr><name pos:line="7" pos:column="3">Curl_cmalloc<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <operator pos:line="7" pos:column="18">(<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">curl_malloc_callback<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">)<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">malloc<pos:position pos:line="7" pos:column="46"/></name></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name pos:line="8" pos:column="3">Curl_cfree<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">curl_free_callback<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">)<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">free<pos:position pos:line="8" pos:column="40"/></name></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">Curl_crealloc<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <operator pos:line="9" pos:column="19">(<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">curl_realloc_callback<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">)<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">realloc<pos:position pos:line="9" pos:column="49"/></name></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name pos:line="10" pos:column="3">Curl_cstrdup<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <operator pos:line="10" pos:column="18">(<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">curl_strdup_callback<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">strdup<pos:position pos:line="10" pos:column="46"/></name></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name pos:line="11" pos:column="3">Curl_ccalloc<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <operator pos:line="11" pos:column="18">(<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">curl_calloc_callback<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">)<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="40">calloc<pos:position pos:line="11" pos:column="46"/></name></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">flags<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">&amp;<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="15">CURL_GLOBAL_SSL<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31">
    <block type="pseudo"><if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><call><name pos:line="14" pos:column="10">Curl_ssl_init<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">()<pos:position pos:line="14" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
      <block type="pseudo"><return pos:line="15" pos:column="7">return <expr><name pos:line="15" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="15" pos:column="31"/></name></expr>;<pos:position pos:line="15" pos:column="32"/></return></block></then></if></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">flags<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">&amp;<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="15">CURL_GLOBAL_WIN32<pos:position pos:line="17" pos:column="32"/></name></expr>)<pos:position pos:line="17" pos:column="33"/></condition><then pos:line="17" pos:column="33">
    <block type="pseudo"><if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">win32_init<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">()<pos:position pos:line="18" pos:column="21"/></argument_list></call> <operator pos:line="18" pos:column="22">!=<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="25">CURLE_OK<pos:position pos:line="18" pos:column="33"/></name></expr>)<pos:position pos:line="18" pos:column="34"/></condition><then pos:line="18" pos:column="34">
      <block type="pseudo"><return pos:line="19" pos:column="7">return <expr><name pos:line="19" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></return></block></then></if></block></then></if>

<cpp:ifdef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifdef<pos:position pos:line="21" pos:column="7"/></cpp:directive> <name pos:line="21" pos:column="8">_AMIGASF<pos:position pos:line="21" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><operator pos:line="22" pos:column="6">!<pos:position pos:line="22" pos:column="7"/></operator><call><name pos:line="22" pos:column="7">amiga_init<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">()<pos:position pos:line="22" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="20"/></condition><then pos:line="22" pos:column="20">
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">CURLE_FAILED_INIT<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></return></block></then></if>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifdef<pos:position pos:line="26" pos:column="7"/></cpp:directive> <name pos:line="26" pos:column="8">USE_LIBIDN<pos:position pos:line="26" pos:column="18"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">idna_init<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">()<pos:position pos:line="27" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="15"/></expr_stmt>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="30" pos:column="3">initialized<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <literal type="number" pos:line="30" pos:column="17">1<pos:position pos:line="30" pos:column="18"/></literal></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="31" pos:column="3">init_flags<pos:position pos:line="31" pos:column="13"/></name>  <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <name pos:line="31" pos:column="17">flags<pos:position pos:line="31" pos:column="22"/></name></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>

  <return pos:line="33" pos:column="3">return <expr><name pos:line="33" pos:column="10">CURLE_OK<pos:position pos:line="33" pos:column="18"/></name></expr>;<pos:position pos:line="33" pos:column="19"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

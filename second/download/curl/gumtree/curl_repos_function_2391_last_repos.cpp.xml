<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2391_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">get_cert_chain<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">connectdata<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">conn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                               <parameter><decl><type><name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">ssl_connect_data<pos:position pos:line="2" pos:column="55"/></name></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">connssl<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>

<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">STACK_OF<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">X509<pos:position pos:line="6" pos:column="16"/></name></expr></argument>)<pos:position pos:line="6" pos:column="17"/></argument_list></call> <operator pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">sk<pos:position pos:line="6" pos:column="21"/></name></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">Curl_easy<pos:position pos:line="8" pos:column="19"/></name></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">data<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name><name pos:line="8" pos:column="28">conn<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">data<pos:position pos:line="8" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">numcerts<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">BIO<pos:position pos:line="10" pos:column="6"/></name> <modifier pos:line="10" pos:column="7">*<pos:position pos:line="10" pos:column="8"/></modifier></type><name pos:line="10" pos:column="8">mem<pos:position pos:line="10" pos:column="11"/></name></decl>;<pos:position pos:line="10" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">sk<pos:position pos:line="12" pos:column="5"/></name> <operator pos:line="12" pos:column="6">=<pos:position pos:line="12" pos:column="7"/></operator> <call><name pos:line="12" pos:column="8">SSL_get_peer_cert_chain<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name><name pos:line="12" pos:column="32">BACKEND<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">handle<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><operator pos:line="13" pos:column="6">!<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">sk<pos:position pos:line="13" pos:column="9"/></name></expr>)<pos:position pos:line="13" pos:column="10"/></condition><then pos:line="13" pos:column="10"> <block pos:line="13" pos:column="11">{
    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">numcerts<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">sk_X509_num<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">sk<pos:position pos:line="17" pos:column="28"/></name></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">result<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">Curl_ssl_init_certinfo<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><name pos:line="19" pos:column="35">data<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="41">numcerts<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name pos:line="20" pos:column="6">result<pos:position pos:line="20" pos:column="12"/></name></expr>)<pos:position pos:line="20" pos:column="13"/></condition><then pos:line="20" pos:column="13"> <block pos:line="20" pos:column="14">{
    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">result<pos:position pos:line="21" pos:column="18"/></name></expr>;<pos:position pos:line="21" pos:column="19"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="24" pos:column="3">mem<pos:position pos:line="24" pos:column="6"/></name> <operator pos:line="24" pos:column="7">=<pos:position pos:line="24" pos:column="8"/></operator> <call><name pos:line="24" pos:column="9">BIO_new<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><call><name pos:line="24" pos:column="17">BIO_s_mem<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">()<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>

  <for pos:line="26" pos:column="3">for<control pos:line="26" pos:column="6">(<init><expr><name pos:line="26" pos:column="7">i<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <literal type="number" pos:line="26" pos:column="11">0<pos:position pos:line="26" pos:column="12"/></literal></expr>;<pos:position pos:line="26" pos:column="13"/></init> <condition><expr><name pos:line="26" pos:column="14">i<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">&lt;<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="18">numcerts<pos:position pos:line="26" pos:column="26"/></name></expr>;<pos:position pos:line="26" pos:column="27"/></condition> <incr><expr><name pos:line="26" pos:column="28">i<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">++<pos:position pos:line="26" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="32"/></control> <block pos:line="26" pos:column="33">{
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">ASN1_INTEGER<pos:position pos:line="27" pos:column="17"/></name> <modifier pos:line="27" pos:column="18">*<pos:position pos:line="27" pos:column="19"/></modifier></type><name pos:line="27" pos:column="19">num<pos:position pos:line="27" pos:column="22"/></name></decl>;<pos:position pos:line="27" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">X509<pos:position pos:line="28" pos:column="9"/></name> <modifier pos:line="28" pos:column="10">*<pos:position pos:line="28" pos:column="11"/></modifier></type><name pos:line="28" pos:column="11">x<pos:position pos:line="28" pos:column="12"/></name> <init pos:line="28" pos:column="13">= <expr><call><name pos:line="28" pos:column="15">sk_X509_value<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">sk<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="33">i<pos:position pos:line="28" pos:column="34"/></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">EVP_PKEY<pos:position pos:line="29" pos:column="13"/></name> <modifier pos:line="29" pos:column="14">*<pos:position pos:line="29" pos:column="15"/></modifier></type><name pos:line="29" pos:column="15">pubkey<pos:position pos:line="29" pos:column="21"/></name> <init pos:line="29" pos:column="22">= <expr><name pos:line="29" pos:column="24">NULL<pos:position pos:line="29" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">int<pos:position pos:line="30" pos:column="8"/></name></type> <name pos:line="30" pos:column="9">j<pos:position pos:line="30" pos:column="10"/></name></decl>;<pos:position pos:line="30" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">char<pos:position pos:line="31" pos:column="9"/></name> <modifier pos:line="31" pos:column="10">*<pos:position pos:line="31" pos:column="11"/></modifier></type><name pos:line="31" pos:column="11">ptr<pos:position pos:line="31" pos:column="14"/></name></decl>;<pos:position pos:line="31" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="32" pos:column="5">const<pos:position pos:line="32" pos:column="10"/></specifier> <name pos:line="32" pos:column="11">ASN1_BIT_STRING<pos:position pos:line="32" pos:column="26"/></name> <modifier pos:line="32" pos:column="27">*<pos:position pos:line="32" pos:column="28"/></modifier></type><name pos:line="32" pos:column="28">psig<pos:position pos:line="32" pos:column="32"/></name> <init pos:line="32" pos:column="33">= <expr><name pos:line="32" pos:column="35">NULL<pos:position pos:line="32" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="32" pos:column="40"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">X509_NAME_print_ex<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">mem<pos:position pos:line="34" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="29">X509_get_subject_name<pos:position pos:line="34" pos:column="50"/></name><argument_list pos:line="34" pos:column="50">(<argument><expr><name pos:line="34" pos:column="51">x<pos:position pos:line="34" pos:column="52"/></name></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="55">0<pos:position pos:line="34" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="58">XN_FLAG_ONELINE<pos:position pos:line="34" pos:column="73"/></name></expr></argument>)<pos:position pos:line="34" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">push_certinfo<pos:position pos:line="35" pos:column="18"/></name><argument_list pos:line="35" pos:column="18">(<argument><expr><literal type="string" pos:line="35" pos:column="19">"Subject"<pos:position pos:line="35" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="30">i<pos:position pos:line="35" pos:column="31"/></name></expr></argument>)<pos:position pos:line="35" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">X509_NAME_print_ex<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">mem<pos:position pos:line="37" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="29">X509_get_issuer_name<pos:position pos:line="37" pos:column="49"/></name><argument_list pos:line="37" pos:column="49">(<argument><expr><name pos:line="37" pos:column="50">x<pos:position pos:line="37" pos:column="51"/></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="54">0<pos:position pos:line="37" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="57">XN_FLAG_ONELINE<pos:position pos:line="37" pos:column="72"/></name></expr></argument>)<pos:position pos:line="37" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">push_certinfo<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><literal type="string" pos:line="38" pos:column="19">"Issuer"<pos:position pos:line="38" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="29">i<pos:position pos:line="38" pos:column="30"/></name></expr></argument>)<pos:position pos:line="38" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">BIO_printf<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><name pos:line="40" pos:column="16">mem<pos:position pos:line="40" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="21">"%lx"<pos:position pos:line="40" pos:column="26"/></literal></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="28">X509_get_version<pos:position pos:line="40" pos:column="44"/></name><argument_list pos:line="40" pos:column="44">(<argument><expr><name pos:line="40" pos:column="45">x<pos:position pos:line="40" pos:column="46"/></name></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">push_certinfo<pos:position pos:line="41" pos:column="18"/></name><argument_list pos:line="41" pos:column="18">(<argument><expr><literal type="string" pos:line="41" pos:column="19">"Version"<pos:position pos:line="41" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="30">i<pos:position pos:line="41" pos:column="31"/></name></expr></argument>)<pos:position pos:line="41" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name pos:line="43" pos:column="5">num<pos:position pos:line="43" pos:column="8"/></name> <operator pos:line="43" pos:column="9">=<pos:position pos:line="43" pos:column="10"/></operator> <call><name pos:line="43" pos:column="11">X509_get_serialNumber<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">x<pos:position pos:line="43" pos:column="34"/></name></expr></argument>)<pos:position pos:line="43" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
    <if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><name><name pos:line="44" pos:column="8">num<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">-&gt;<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="13">type<pos:position pos:line="44" pos:column="17"/></name></name> <operator pos:line="44" pos:column="18">==<pos:position pos:line="44" pos:column="20"/></operator> <name pos:line="44" pos:column="21">V_ASN1_NEG_INTEGER<pos:position pos:line="44" pos:column="39"/></name></expr>)<pos:position pos:line="44" pos:column="40"/></condition><then pos:line="44" pos:column="40">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="7">BIO_puts<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><name pos:line="45" pos:column="16">mem<pos:position pos:line="45" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="21">"-"<pos:position pos:line="45" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt></block></then></if>
    <for pos:line="46" pos:column="5">for<control pos:line="46" pos:column="8">(<init><expr><name pos:line="46" pos:column="9">j<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">=<pos:position pos:line="46" pos:column="12"/></operator> <literal type="number" pos:line="46" pos:column="13">0<pos:position pos:line="46" pos:column="14"/></literal></expr>;<pos:position pos:line="46" pos:column="15"/></init> <condition><expr><name pos:line="46" pos:column="16">j<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">&lt;<pos:position pos:line="46" pos:column="22"/></operator> <name><name pos:line="46" pos:column="20">num<pos:position pos:line="46" pos:column="23"/></name><operator pos:line="46" pos:column="23">-&gt;<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="25">length<pos:position pos:line="46" pos:column="31"/></name></name></expr>;<pos:position pos:line="46" pos:column="32"/></condition> <incr><expr><name pos:line="46" pos:column="33">j<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">++<pos:position pos:line="46" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="46" pos:column="37"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="7">BIO_printf<pos:position pos:line="47" pos:column="17"/></name><argument_list pos:line="47" pos:column="17">(<argument><expr><name pos:line="47" pos:column="18">mem<pos:position pos:line="47" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="23">"%02x"<pos:position pos:line="47" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="31">num<pos:position pos:line="47" pos:column="34"/></name><operator pos:line="47" pos:column="34">-&gt;<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="36">data<pos:position pos:line="47" pos:column="40"/></name><index pos:line="47" pos:column="40">[<expr><name pos:line="47" pos:column="41">j<pos:position pos:line="47" pos:column="42"/></name></expr>]<pos:position pos:line="47" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt></block></for>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">push_certinfo<pos:position pos:line="48" pos:column="18"/></name><argument_list pos:line="48" pos:column="18">(<argument><expr><literal type="string" pos:line="48" pos:column="19">"Serial Number"<pos:position pos:line="48" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="36">i<pos:position pos:line="48" pos:column="37"/></name></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>

<cpp:if pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">if<pos:position pos:line="50" pos:column="4"/></cpp:directive> <expr><call><name pos:line="50" pos:column="5">defined<pos:position pos:line="50" pos:column="12"/></name><argument_list pos:line="50" pos:column="12">(<argument><expr><name pos:line="50" pos:column="13">HAVE_X509_GET0_SIGNATURE<pos:position pos:line="50" pos:column="37"/></name></expr></argument>)<pos:position pos:line="50" pos:column="38"/></argument_list></call> <operator pos:line="50" pos:column="39">&amp;&amp;<pos:position pos:line="50" pos:column="49"/></operator> <call><name pos:line="50" pos:column="42">defined<pos:position pos:line="50" pos:column="49"/></name><argument_list pos:line="50" pos:column="49">(<argument><expr><name pos:line="50" pos:column="50">HAVE_X509_GET0_EXTENSIONS<pos:position pos:line="50" pos:column="75"/></name></expr></argument>)<pos:position pos:line="50" pos:column="76"/></argument_list></call></expr></cpp:if>
    <block pos:line="51" pos:column="5">{
      <decl_stmt><decl><type><specifier pos:line="52" pos:column="7">const<pos:position pos:line="52" pos:column="12"/></specifier> <name pos:line="52" pos:column="13">X509_ALGOR<pos:position pos:line="52" pos:column="23"/></name> <modifier pos:line="52" pos:column="24">*<pos:position pos:line="52" pos:column="25"/></modifier></type><name pos:line="52" pos:column="25">palg<pos:position pos:line="52" pos:column="29"/></name> <init pos:line="52" pos:column="30">= <expr><name pos:line="52" pos:column="32">NULL<pos:position pos:line="52" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="52" pos:column="37"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="53" pos:column="7">ASN1_STRING<pos:position pos:line="53" pos:column="18"/></name> <modifier pos:line="53" pos:column="19">*<pos:position pos:line="53" pos:column="20"/></modifier></type><name pos:line="53" pos:column="20">a<pos:position pos:line="53" pos:column="21"/></name> <init pos:line="53" pos:column="22">= <expr><call><name pos:line="53" pos:column="24">ASN1_STRING_new<pos:position pos:line="53" pos:column="39"/></name><argument_list pos:line="53" pos:column="39">()<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="53" pos:column="42"/></decl_stmt>
      <if pos:line="54" pos:column="7">if<condition pos:line="54" pos:column="9">(<expr><name pos:line="54" pos:column="10">a<pos:position pos:line="54" pos:column="11"/></name></expr>)<pos:position pos:line="54" pos:column="12"/></condition><then pos:line="54" pos:column="12"> <block pos:line="54" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">X509_get0_signature<pos:position pos:line="55" pos:column="28"/></name><argument_list pos:line="55" pos:column="28">(<argument><expr><operator pos:line="55" pos:column="29">&amp;<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="30">psig<pos:position pos:line="55" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="36">&amp;<pos:position pos:line="55" pos:column="41"/></operator><name pos:line="55" pos:column="37">palg<pos:position pos:line="55" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="43">x<pos:position pos:line="55" pos:column="44"/></name></expr></argument>)<pos:position pos:line="55" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">X509_signature_print<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">mem<pos:position pos:line="56" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="35">palg<pos:position pos:line="56" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="41">a<pos:position pos:line="56" pos:column="42"/></name></expr></argument>)<pos:position pos:line="56" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">ASN1_STRING_free<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name pos:line="57" pos:column="26">a<pos:position pos:line="57" pos:column="27"/></name></expr></argument>)<pos:position pos:line="57" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="29"/></expr_stmt>

        <if pos:line="59" pos:column="9">if<condition pos:line="59" pos:column="11">(<expr><name pos:line="59" pos:column="12">palg<pos:position pos:line="59" pos:column="16"/></name></expr>)<pos:position pos:line="59" pos:column="17"/></condition><then pos:line="59" pos:column="17"> <block pos:line="59" pos:column="18">{
          <expr_stmt><expr><call><name pos:line="60" pos:column="11">i2a_ASN1_OBJECT<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">mem<pos:position pos:line="60" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="32">palg<pos:position pos:line="60" pos:column="36"/></name><operator pos:line="60" pos:column="36">-&gt;<pos:position pos:line="60" pos:column="41"/></operator><name pos:line="60" pos:column="38">algorithm<pos:position pos:line="60" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="49"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="61" pos:column="11">push_certinfo<pos:position pos:line="61" pos:column="24"/></name><argument_list pos:line="61" pos:column="24">(<argument><expr><literal type="string" pos:line="61" pos:column="25">"Public Key Algorithm"<pos:position pos:line="61" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="49">i<pos:position pos:line="61" pos:column="50"/></name></expr></argument>)<pos:position pos:line="61" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if>
      }<pos:position pos:line="63" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">X509V3_ext<pos:position pos:line="64" pos:column="17"/></name><argument_list pos:line="64" pos:column="17">(<argument><expr><name pos:line="64" pos:column="18">data<pos:position pos:line="64" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="24">i<pos:position pos:line="64" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="27">X509_get0_extensions<pos:position pos:line="64" pos:column="47"/></name><argument_list pos:line="64" pos:column="47">(<argument><expr><name pos:line="64" pos:column="48">x<pos:position pos:line="64" pos:column="49"/></name></expr></argument>)<pos:position pos:line="64" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block>
<cpp:else pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">else<pos:position pos:line="66" pos:column="6"/></cpp:directive></cpp:else>
    <block pos:line="67" pos:column="5">{
      <comment type="block" pos:line="68" pos:column="7">/* before OpenSSL 1.0.2 */</comment>
      <decl_stmt><decl><type><name pos:line="69" pos:column="7">X509_CINF<pos:position pos:line="69" pos:column="16"/></name> <modifier pos:line="69" pos:column="17">*<pos:position pos:line="69" pos:column="18"/></modifier></type><name pos:line="69" pos:column="18">cinf<pos:position pos:line="69" pos:column="22"/></name> <init pos:line="69" pos:column="23">= <expr><name><name pos:line="69" pos:column="25">x<pos:position pos:line="69" pos:column="26"/></name><operator pos:line="69" pos:column="26">-&gt;<pos:position pos:line="69" pos:column="31"/></operator><name pos:line="69" pos:column="28">cert_info<pos:position pos:line="69" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="69" pos:column="38"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="71" pos:column="7">i2a_ASN1_OBJECT<pos:position pos:line="71" pos:column="22"/></name><argument_list pos:line="71" pos:column="22">(<argument><expr><name pos:line="71" pos:column="23">mem<pos:position pos:line="71" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="28">cinf<pos:position pos:line="71" pos:column="32"/></name><operator pos:line="71" pos:column="32">-&gt;<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="34">signature<pos:position pos:line="71" pos:column="43"/></name><operator pos:line="71" pos:column="43">-&gt;<pos:position pos:line="71" pos:column="48"/></operator><name pos:line="71" pos:column="45">algorithm<pos:position pos:line="71" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="72" pos:column="7">push_certinfo<pos:position pos:line="72" pos:column="20"/></name><argument_list pos:line="72" pos:column="20">(<argument><expr><literal type="string" pos:line="72" pos:column="21">"Signature Algorithm"<pos:position pos:line="72" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="44">i<pos:position pos:line="72" pos:column="45"/></name></expr></argument>)<pos:position pos:line="72" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="47"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="74" pos:column="7">i2a_ASN1_OBJECT<pos:position pos:line="74" pos:column="22"/></name><argument_list pos:line="74" pos:column="22">(<argument><expr><name pos:line="74" pos:column="23">mem<pos:position pos:line="74" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="28">cinf<pos:position pos:line="74" pos:column="32"/></name><operator pos:line="74" pos:column="32">-&gt;<pos:position pos:line="74" pos:column="37"/></operator><name pos:line="74" pos:column="34">key<pos:position pos:line="74" pos:column="37"/></name><operator pos:line="74" pos:column="37">-&gt;<pos:position pos:line="74" pos:column="42"/></operator><name pos:line="74" pos:column="39">algor<pos:position pos:line="74" pos:column="44"/></name><operator pos:line="74" pos:column="44">-&gt;<pos:position pos:line="74" pos:column="49"/></operator><name pos:line="74" pos:column="46">algorithm<pos:position pos:line="74" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="75" pos:column="7">push_certinfo<pos:position pos:line="75" pos:column="20"/></name><argument_list pos:line="75" pos:column="20">(<argument><expr><literal type="string" pos:line="75" pos:column="21">"Public Key Algorithm"<pos:position pos:line="75" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="45">i<pos:position pos:line="75" pos:column="46"/></name></expr></argument>)<pos:position pos:line="75" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="48"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="77" pos:column="7">X509V3_ext<pos:position pos:line="77" pos:column="17"/></name><argument_list pos:line="77" pos:column="17">(<argument><expr><name pos:line="77" pos:column="18">data<pos:position pos:line="77" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="24">i<pos:position pos:line="77" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="27">cinf<pos:position pos:line="77" pos:column="31"/></name><operator pos:line="77" pos:column="31">-&gt;<pos:position pos:line="77" pos:column="36"/></operator><name pos:line="77" pos:column="33">extensions<pos:position pos:line="77" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="45"/></expr_stmt>

      <expr_stmt><expr><name pos:line="79" pos:column="7">psig<pos:position pos:line="79" pos:column="11"/></name> <operator pos:line="79" pos:column="12">=<pos:position pos:line="79" pos:column="13"/></operator> <name><name pos:line="79" pos:column="14">x<pos:position pos:line="79" pos:column="15"/></name><operator pos:line="79" pos:column="15">-&gt;<pos:position pos:line="79" pos:column="20"/></operator><name pos:line="79" pos:column="17">signature<pos:position pos:line="79" pos:column="26"/></name></name></expr>;<pos:position pos:line="79" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block>
<cpp:endif pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">endif<pos:position pos:line="81" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="83" pos:column="5">ASN1_TIME_print<pos:position pos:line="83" pos:column="20"/></name><argument_list pos:line="83" pos:column="20">(<argument><expr><name pos:line="83" pos:column="21">mem<pos:position pos:line="83" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="83" pos:column="26">X509_get0_notBefore<pos:position pos:line="83" pos:column="45"/></name><argument_list pos:line="83" pos:column="45">(<argument><expr><name pos:line="83" pos:column="46">x<pos:position pos:line="83" pos:column="47"/></name></expr></argument>)<pos:position pos:line="83" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">push_certinfo<pos:position pos:line="84" pos:column="18"/></name><argument_list pos:line="84" pos:column="18">(<argument><expr><literal type="string" pos:line="84" pos:column="19">"Start date"<pos:position pos:line="84" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="33">i<pos:position pos:line="84" pos:column="34"/></name></expr></argument>)<pos:position pos:line="84" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="86" pos:column="5">ASN1_TIME_print<pos:position pos:line="86" pos:column="20"/></name><argument_list pos:line="86" pos:column="20">(<argument><expr><name pos:line="86" pos:column="21">mem<pos:position pos:line="86" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="26">X509_get0_notAfter<pos:position pos:line="86" pos:column="44"/></name><argument_list pos:line="86" pos:column="44">(<argument><expr><name pos:line="86" pos:column="45">x<pos:position pos:line="86" pos:column="46"/></name></expr></argument>)<pos:position pos:line="86" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">push_certinfo<pos:position pos:line="87" pos:column="18"/></name><argument_list pos:line="87" pos:column="18">(<argument><expr><literal type="string" pos:line="87" pos:column="19">"Expire date"<pos:position pos:line="87" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="34">i<pos:position pos:line="87" pos:column="35"/></name></expr></argument>)<pos:position pos:line="87" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name pos:line="89" pos:column="5">pubkey<pos:position pos:line="89" pos:column="11"/></name> <operator pos:line="89" pos:column="12">=<pos:position pos:line="89" pos:column="13"/></operator> <call><name pos:line="89" pos:column="14">X509_get_pubkey<pos:position pos:line="89" pos:column="29"/></name><argument_list pos:line="89" pos:column="29">(<argument><expr><name pos:line="89" pos:column="30">x<pos:position pos:line="89" pos:column="31"/></name></expr></argument>)<pos:position pos:line="89" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="33"/></expr_stmt>
    <if pos:line="90" pos:column="5">if<condition pos:line="90" pos:column="7">(<expr><operator pos:line="90" pos:column="8">!<pos:position pos:line="90" pos:column="9"/></operator><name pos:line="90" pos:column="9">pubkey<pos:position pos:line="90" pos:column="15"/></name></expr>)<pos:position pos:line="90" pos:column="16"/></condition><then pos:line="90" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="91" pos:column="7">infof<pos:position pos:line="91" pos:column="12"/></name><argument_list pos:line="91" pos:column="12">(<argument><expr><name pos:line="91" pos:column="13">data<pos:position pos:line="91" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="19">"   Unable to load public key\n"<pos:position pos:line="91" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="53"/></expr_stmt></block></then>
    <else pos:line="92" pos:column="5">else <block pos:line="92" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="93" pos:column="7">int<pos:position pos:line="93" pos:column="10"/></name></type> <name pos:line="93" pos:column="11">pktype<pos:position pos:line="93" pos:column="17"/></name></decl>;<pos:position pos:line="93" pos:column="18"/></decl_stmt>
<cpp:ifdef pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">ifdef<pos:position pos:line="94" pos:column="7"/></cpp:directive> <name pos:line="94" pos:column="8">HAVE_OPAQUE_EVP_PKEY<pos:position pos:line="94" pos:column="28"/></name></cpp:ifdef>
      <expr_stmt><expr><name pos:line="95" pos:column="7">pktype<pos:position pos:line="95" pos:column="13"/></name> <operator pos:line="95" pos:column="14">=<pos:position pos:line="95" pos:column="15"/></operator> <call><name pos:line="95" pos:column="16">EVP_PKEY_id<pos:position pos:line="95" pos:column="27"/></name><argument_list pos:line="95" pos:column="27">(<argument><expr><name pos:line="95" pos:column="28">pubkey<pos:position pos:line="95" pos:column="34"/></name></expr></argument>)<pos:position pos:line="95" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="36"/></expr_stmt>
<cpp:else pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">else<pos:position pos:line="96" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><name pos:line="97" pos:column="7">pktype<pos:position pos:line="97" pos:column="13"/></name> <operator pos:line="97" pos:column="14">=<pos:position pos:line="97" pos:column="15"/></operator> <name><name pos:line="97" pos:column="16">pubkey<pos:position pos:line="97" pos:column="22"/></name><operator pos:line="97" pos:column="22">-&gt;<pos:position pos:line="97" pos:column="27"/></operator><name pos:line="97" pos:column="24">type<pos:position pos:line="97" pos:column="28"/></name></name></expr>;<pos:position pos:line="97" pos:column="29"/></expr_stmt>
<cpp:endif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">endif<pos:position pos:line="98" pos:column="7"/></cpp:directive></cpp:endif>
      <switch pos:line="99" pos:column="7">switch<condition pos:line="99" pos:column="13">(<expr><name pos:line="99" pos:column="14">pktype<pos:position pos:line="99" pos:column="20"/></name></expr>)<pos:position pos:line="99" pos:column="21"/></condition> <block pos:line="99" pos:column="22">{
      <case pos:line="100" pos:column="7">case <expr><name pos:line="100" pos:column="12">EVP_PKEY_RSA<pos:position pos:line="100" pos:column="24"/></name></expr>:<pos:position pos:line="100" pos:column="25"/></case>
      <block pos:line="101" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="102" pos:column="9">RSA<pos:position pos:line="102" pos:column="12"/></name> <modifier pos:line="102" pos:column="13">*<pos:position pos:line="102" pos:column="14"/></modifier></type><name pos:line="102" pos:column="14">rsa<pos:position pos:line="102" pos:column="17"/></name></decl>;<pos:position pos:line="102" pos:column="18"/></decl_stmt>
<cpp:ifdef pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">ifdef<pos:position pos:line="103" pos:column="7"/></cpp:directive> <name pos:line="103" pos:column="8">HAVE_OPAQUE_EVP_PKEY<pos:position pos:line="103" pos:column="28"/></name></cpp:ifdef>
        <expr_stmt><expr><name pos:line="104" pos:column="9">rsa<pos:position pos:line="104" pos:column="12"/></name> <operator pos:line="104" pos:column="13">=<pos:position pos:line="104" pos:column="14"/></operator> <call><name pos:line="104" pos:column="15">EVP_PKEY_get0_RSA<pos:position pos:line="104" pos:column="32"/></name><argument_list pos:line="104" pos:column="32">(<argument><expr><name pos:line="104" pos:column="33">pubkey<pos:position pos:line="104" pos:column="39"/></name></expr></argument>)<pos:position pos:line="104" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="41"/></expr_stmt>
<cpp:else pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">else<pos:position pos:line="105" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="106" pos:column="9">rsa<pos:position pos:line="106" pos:column="12"/></name> <operator pos:line="106" pos:column="13">=<pos:position pos:line="106" pos:column="14"/></operator> <name><name pos:line="106" pos:column="15">pubkey<pos:position pos:line="106" pos:column="21"/></name><operator pos:line="106" pos:column="21">-&gt;<pos:position pos:line="106" pos:column="26"/></operator><name pos:line="106" pos:column="23">pkey<pos:position pos:line="106" pos:column="27"/></name><operator pos:line="106" pos:column="27">.<pos:position pos:line="106" pos:column="28"/></operator><name pos:line="106" pos:column="28">rsa<pos:position pos:line="106" pos:column="31"/></name></name></expr>;<pos:position pos:line="106" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">endif<pos:position pos:line="107" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">ifdef<pos:position pos:line="109" pos:column="7"/></cpp:directive> <name pos:line="109" pos:column="8">HAVE_OPAQUE_RSA_DSA_DH<pos:position pos:line="109" pos:column="30"/></name></cpp:ifdef>
        <block pos:line="110" pos:column="9">{
          <decl_stmt><decl><type><specifier pos:line="111" pos:column="11">const<pos:position pos:line="111" pos:column="16"/></specifier> <name pos:line="111" pos:column="17">BIGNUM<pos:position pos:line="111" pos:column="23"/></name> <modifier pos:line="111" pos:column="24">*<pos:position pos:line="111" pos:column="25"/></modifier></type><name pos:line="111" pos:column="25">n<pos:position pos:line="111" pos:column="26"/></name></decl>;<pos:position pos:line="111" pos:column="27"/></decl_stmt>
          <decl_stmt><decl><type><specifier pos:line="112" pos:column="11">const<pos:position pos:line="112" pos:column="16"/></specifier> <name pos:line="112" pos:column="17">BIGNUM<pos:position pos:line="112" pos:column="23"/></name> <modifier pos:line="112" pos:column="24">*<pos:position pos:line="112" pos:column="25"/></modifier></type><name pos:line="112" pos:column="25">e<pos:position pos:line="112" pos:column="26"/></name></decl>;<pos:position pos:line="112" pos:column="27"/></decl_stmt>

          <expr_stmt><expr><call><name pos:line="114" pos:column="11">RSA_get0_key<pos:position pos:line="114" pos:column="23"/></name><argument_list pos:line="114" pos:column="23">(<argument><expr><name pos:line="114" pos:column="24">rsa<pos:position pos:line="114" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="29">&amp;<pos:position pos:line="114" pos:column="34"/></operator><name pos:line="114" pos:column="30">n<pos:position pos:line="114" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="33">&amp;<pos:position pos:line="114" pos:column="38"/></operator><name pos:line="114" pos:column="34">e<pos:position pos:line="114" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="37">NULL<pos:position pos:line="114" pos:column="41"/></name></expr></argument>)<pos:position pos:line="114" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="43"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="115" pos:column="11">BN_print<pos:position pos:line="115" pos:column="19"/></name><argument_list pos:line="115" pos:column="19">(<argument><expr><name pos:line="115" pos:column="20">mem<pos:position pos:line="115" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="25">n<pos:position pos:line="115" pos:column="26"/></name></expr></argument>)<pos:position pos:line="115" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="28"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="116" pos:column="11">push_certinfo<pos:position pos:line="116" pos:column="24"/></name><argument_list pos:line="116" pos:column="24">(<argument><expr><literal type="string" pos:line="116" pos:column="25">"RSA Public Key"<pos:position pos:line="116" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="43">i<pos:position pos:line="116" pos:column="44"/></name></expr></argument>)<pos:position pos:line="116" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="46"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="117" pos:column="11">print_pubkey_BN<pos:position pos:line="117" pos:column="26"/></name><argument_list pos:line="117" pos:column="26">(<argument><expr><name pos:line="117" pos:column="27">rsa<pos:position pos:line="117" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="32">n<pos:position pos:line="117" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="35">i<pos:position pos:line="117" pos:column="36"/></name></expr></argument>)<pos:position pos:line="117" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="38"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="118" pos:column="11">print_pubkey_BN<pos:position pos:line="118" pos:column="26"/></name><argument_list pos:line="118" pos:column="26">(<argument><expr><name pos:line="118" pos:column="27">rsa<pos:position pos:line="118" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="32">e<pos:position pos:line="118" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="35">i<pos:position pos:line="118" pos:column="36"/></name></expr></argument>)<pos:position pos:line="118" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="119" pos:column="10"/></block>
<cpp:else pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">else<pos:position pos:line="120" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><call><name pos:line="121" pos:column="9">BIO_printf<pos:position pos:line="121" pos:column="19"/></name><argument_list pos:line="121" pos:column="19">(<argument><expr><name pos:line="121" pos:column="20">mem<pos:position pos:line="121" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="25">"%d"<pos:position pos:line="121" pos:column="29"/></literal></expr></argument>, <argument><expr><call><name pos:line="121" pos:column="31">BN_num_bits<pos:position pos:line="121" pos:column="42"/></name><argument_list pos:line="121" pos:column="42">(<argument><expr><name><name pos:line="121" pos:column="43">rsa<pos:position pos:line="121" pos:column="46"/></name><operator pos:line="121" pos:column="46">-&gt;<pos:position pos:line="121" pos:column="51"/></operator><name pos:line="121" pos:column="48">n<pos:position pos:line="121" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="122" pos:column="9">push_certinfo<pos:position pos:line="122" pos:column="22"/></name><argument_list pos:line="122" pos:column="22">(<argument><expr><literal type="string" pos:line="122" pos:column="23">"RSA Public Key"<pos:position pos:line="122" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="122" pos:column="41">i<pos:position pos:line="122" pos:column="42"/></name></expr></argument>)<pos:position pos:line="122" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="123" pos:column="9">print_pubkey_BN<pos:position pos:line="123" pos:column="24"/></name><argument_list pos:line="123" pos:column="24">(<argument><expr><name pos:line="123" pos:column="25">rsa<pos:position pos:line="123" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="30">n<pos:position pos:line="123" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="33">i<pos:position pos:line="123" pos:column="34"/></name></expr></argument>)<pos:position pos:line="123" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="124" pos:column="9">print_pubkey_BN<pos:position pos:line="124" pos:column="24"/></name><argument_list pos:line="124" pos:column="24">(<argument><expr><name pos:line="124" pos:column="25">rsa<pos:position pos:line="124" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="30">e<pos:position pos:line="124" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="33">i<pos:position pos:line="124" pos:column="34"/></name></expr></argument>)<pos:position pos:line="124" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">endif<pos:position pos:line="125" pos:column="7"/></cpp:directive></cpp:endif>

        <break pos:line="127" pos:column="9">break;<pos:position pos:line="127" pos:column="15"/></break>
      }<pos:position pos:line="128" pos:column="8"/></block>
      <case pos:line="129" pos:column="7">case <expr><name pos:line="129" pos:column="12">EVP_PKEY_DSA<pos:position pos:line="129" pos:column="24"/></name></expr>:<pos:position pos:line="129" pos:column="25"/></case>
      <block pos:line="130" pos:column="7">{
<cpp:ifndef pos:line="131" pos:column="1">#<cpp:directive pos:line="131" pos:column="2">ifndef<pos:position pos:line="131" pos:column="8"/></cpp:directive> <name pos:line="131" pos:column="9">OPENSSL_NO_DSA<pos:position pos:line="131" pos:column="23"/></name></cpp:ifndef>
        <decl_stmt><decl><type><name pos:line="132" pos:column="9">DSA<pos:position pos:line="132" pos:column="12"/></name> <modifier pos:line="132" pos:column="13">*<pos:position pos:line="132" pos:column="14"/></modifier></type><name pos:line="132" pos:column="14">dsa<pos:position pos:line="132" pos:column="17"/></name></decl>;<pos:position pos:line="132" pos:column="18"/></decl_stmt>
<cpp:ifdef pos:line="133" pos:column="1">#<cpp:directive pos:line="133" pos:column="2">ifdef<pos:position pos:line="133" pos:column="7"/></cpp:directive> <name pos:line="133" pos:column="8">HAVE_OPAQUE_EVP_PKEY<pos:position pos:line="133" pos:column="28"/></name></cpp:ifdef>
        <expr_stmt><expr><name pos:line="134" pos:column="9">dsa<pos:position pos:line="134" pos:column="12"/></name> <operator pos:line="134" pos:column="13">=<pos:position pos:line="134" pos:column="14"/></operator> <call><name pos:line="134" pos:column="15">EVP_PKEY_get0_DSA<pos:position pos:line="134" pos:column="32"/></name><argument_list pos:line="134" pos:column="32">(<argument><expr><name pos:line="134" pos:column="33">pubkey<pos:position pos:line="134" pos:column="39"/></name></expr></argument>)<pos:position pos:line="134" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="41"/></expr_stmt>
<cpp:else pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">else<pos:position pos:line="135" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="136" pos:column="9">dsa<pos:position pos:line="136" pos:column="12"/></name> <operator pos:line="136" pos:column="13">=<pos:position pos:line="136" pos:column="14"/></operator> <name><name pos:line="136" pos:column="15">pubkey<pos:position pos:line="136" pos:column="21"/></name><operator pos:line="136" pos:column="21">-&gt;<pos:position pos:line="136" pos:column="26"/></operator><name pos:line="136" pos:column="23">pkey<pos:position pos:line="136" pos:column="27"/></name><operator pos:line="136" pos:column="27">.<pos:position pos:line="136" pos:column="28"/></operator><name pos:line="136" pos:column="28">dsa<pos:position pos:line="136" pos:column="31"/></name></name></expr>;<pos:position pos:line="136" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="137" pos:column="1">#<cpp:directive pos:line="137" pos:column="2">endif<pos:position pos:line="137" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">ifdef<pos:position pos:line="138" pos:column="7"/></cpp:directive> <name pos:line="138" pos:column="8">HAVE_OPAQUE_RSA_DSA_DH<pos:position pos:line="138" pos:column="30"/></name></cpp:ifdef>
        <block pos:line="139" pos:column="9">{
          <decl_stmt><decl><type><specifier pos:line="140" pos:column="11">const<pos:position pos:line="140" pos:column="16"/></specifier> <name pos:line="140" pos:column="17">BIGNUM<pos:position pos:line="140" pos:column="23"/></name> <modifier pos:line="140" pos:column="24">*<pos:position pos:line="140" pos:column="25"/></modifier></type><name pos:line="140" pos:column="25">p<pos:position pos:line="140" pos:column="26"/></name></decl>;<pos:position pos:line="140" pos:column="27"/></decl_stmt>
          <decl_stmt><decl><type><specifier pos:line="141" pos:column="11">const<pos:position pos:line="141" pos:column="16"/></specifier> <name pos:line="141" pos:column="17">BIGNUM<pos:position pos:line="141" pos:column="23"/></name> <modifier pos:line="141" pos:column="24">*<pos:position pos:line="141" pos:column="25"/></modifier></type><name pos:line="141" pos:column="25">q<pos:position pos:line="141" pos:column="26"/></name></decl>;<pos:position pos:line="141" pos:column="27"/></decl_stmt>
          <decl_stmt><decl><type><specifier pos:line="142" pos:column="11">const<pos:position pos:line="142" pos:column="16"/></specifier> <name pos:line="142" pos:column="17">BIGNUM<pos:position pos:line="142" pos:column="23"/></name> <modifier pos:line="142" pos:column="24">*<pos:position pos:line="142" pos:column="25"/></modifier></type><name pos:line="142" pos:column="25">g<pos:position pos:line="142" pos:column="26"/></name></decl>;<pos:position pos:line="142" pos:column="27"/></decl_stmt>
          <decl_stmt><decl><type><specifier pos:line="143" pos:column="11">const<pos:position pos:line="143" pos:column="16"/></specifier> <name pos:line="143" pos:column="17">BIGNUM<pos:position pos:line="143" pos:column="23"/></name> <modifier pos:line="143" pos:column="24">*<pos:position pos:line="143" pos:column="25"/></modifier></type><name pos:line="143" pos:column="25">pub_key<pos:position pos:line="143" pos:column="32"/></name></decl>;<pos:position pos:line="143" pos:column="33"/></decl_stmt>

          <expr_stmt><expr><call><name pos:line="145" pos:column="11">DSA_get0_pqg<pos:position pos:line="145" pos:column="23"/></name><argument_list pos:line="145" pos:column="23">(<argument><expr><name pos:line="145" pos:column="24">dsa<pos:position pos:line="145" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="145" pos:column="29">&amp;<pos:position pos:line="145" pos:column="34"/></operator><name pos:line="145" pos:column="30">p<pos:position pos:line="145" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="145" pos:column="33">&amp;<pos:position pos:line="145" pos:column="38"/></operator><name pos:line="145" pos:column="34">q<pos:position pos:line="145" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="145" pos:column="37">&amp;<pos:position pos:line="145" pos:column="42"/></operator><name pos:line="145" pos:column="38">g<pos:position pos:line="145" pos:column="39"/></name></expr></argument>)<pos:position pos:line="145" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="41"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="146" pos:column="11">DSA_get0_key<pos:position pos:line="146" pos:column="23"/></name><argument_list pos:line="146" pos:column="23">(<argument><expr><name pos:line="146" pos:column="24">dsa<pos:position pos:line="146" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="146" pos:column="29">&amp;<pos:position pos:line="146" pos:column="34"/></operator><name pos:line="146" pos:column="30">pub_key<pos:position pos:line="146" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="39">NULL<pos:position pos:line="146" pos:column="43"/></name></expr></argument>)<pos:position pos:line="146" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="45"/></expr_stmt>

          <expr_stmt><expr><call><name pos:line="148" pos:column="11">print_pubkey_BN<pos:position pos:line="148" pos:column="26"/></name><argument_list pos:line="148" pos:column="26">(<argument><expr><name pos:line="148" pos:column="27">dsa<pos:position pos:line="148" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="32">p<pos:position pos:line="148" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="35">i<pos:position pos:line="148" pos:column="36"/></name></expr></argument>)<pos:position pos:line="148" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="38"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="149" pos:column="11">print_pubkey_BN<pos:position pos:line="149" pos:column="26"/></name><argument_list pos:line="149" pos:column="26">(<argument><expr><name pos:line="149" pos:column="27">dsa<pos:position pos:line="149" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="32">q<pos:position pos:line="149" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="35">i<pos:position pos:line="149" pos:column="36"/></name></expr></argument>)<pos:position pos:line="149" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="38"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="150" pos:column="11">print_pubkey_BN<pos:position pos:line="150" pos:column="26"/></name><argument_list pos:line="150" pos:column="26">(<argument><expr><name pos:line="150" pos:column="27">dsa<pos:position pos:line="150" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="32">g<pos:position pos:line="150" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="35">i<pos:position pos:line="150" pos:column="36"/></name></expr></argument>)<pos:position pos:line="150" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="38"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="151" pos:column="11">print_pubkey_BN<pos:position pos:line="151" pos:column="26"/></name><argument_list pos:line="151" pos:column="26">(<argument><expr><name pos:line="151" pos:column="27">dsa<pos:position pos:line="151" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="32">pub_key<pos:position pos:line="151" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="41">i<pos:position pos:line="151" pos:column="42"/></name></expr></argument>)<pos:position pos:line="151" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="152" pos:column="10"/></block>
<cpp:else pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">else<pos:position pos:line="153" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><call><name pos:line="154" pos:column="9">print_pubkey_BN<pos:position pos:line="154" pos:column="24"/></name><argument_list pos:line="154" pos:column="24">(<argument><expr><name pos:line="154" pos:column="25">dsa<pos:position pos:line="154" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="30">p<pos:position pos:line="154" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="33">i<pos:position pos:line="154" pos:column="34"/></name></expr></argument>)<pos:position pos:line="154" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="155" pos:column="9">print_pubkey_BN<pos:position pos:line="155" pos:column="24"/></name><argument_list pos:line="155" pos:column="24">(<argument><expr><name pos:line="155" pos:column="25">dsa<pos:position pos:line="155" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="30">q<pos:position pos:line="155" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="33">i<pos:position pos:line="155" pos:column="34"/></name></expr></argument>)<pos:position pos:line="155" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="156" pos:column="9">print_pubkey_BN<pos:position pos:line="156" pos:column="24"/></name><argument_list pos:line="156" pos:column="24">(<argument><expr><name pos:line="156" pos:column="25">dsa<pos:position pos:line="156" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="30">g<pos:position pos:line="156" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="33">i<pos:position pos:line="156" pos:column="34"/></name></expr></argument>)<pos:position pos:line="156" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="157" pos:column="9">print_pubkey_BN<pos:position pos:line="157" pos:column="24"/></name><argument_list pos:line="157" pos:column="24">(<argument><expr><name pos:line="157" pos:column="25">dsa<pos:position pos:line="157" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="30">pub_key<pos:position pos:line="157" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="39">i<pos:position pos:line="157" pos:column="40"/></name></expr></argument>)<pos:position pos:line="157" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="158" pos:column="1">#<cpp:directive pos:line="158" pos:column="2">endif<pos:position pos:line="158" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">endif<pos:position pos:line="159" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="159" pos:column="8">/* !OPENSSL_NO_DSA */</comment>
        <break pos:line="160" pos:column="9">break;<pos:position pos:line="160" pos:column="15"/></break>
      }<pos:position pos:line="161" pos:column="8"/></block>
      <case pos:line="162" pos:column="7">case <expr><name pos:line="162" pos:column="12">EVP_PKEY_DH<pos:position pos:line="162" pos:column="23"/></name></expr>:<pos:position pos:line="162" pos:column="24"/></case>
      <block pos:line="163" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="164" pos:column="9">DH<pos:position pos:line="164" pos:column="11"/></name> <modifier pos:line="164" pos:column="12">*<pos:position pos:line="164" pos:column="13"/></modifier></type><name pos:line="164" pos:column="13">dh<pos:position pos:line="164" pos:column="15"/></name></decl>;<pos:position pos:line="164" pos:column="16"/></decl_stmt>
<cpp:ifdef pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">ifdef<pos:position pos:line="165" pos:column="7"/></cpp:directive> <name pos:line="165" pos:column="8">HAVE_OPAQUE_EVP_PKEY<pos:position pos:line="165" pos:column="28"/></name></cpp:ifdef>
        <expr_stmt><expr><name pos:line="166" pos:column="9">dh<pos:position pos:line="166" pos:column="11"/></name> <operator pos:line="166" pos:column="12">=<pos:position pos:line="166" pos:column="13"/></operator> <call><name pos:line="166" pos:column="14">EVP_PKEY_get0_DH<pos:position pos:line="166" pos:column="30"/></name><argument_list pos:line="166" pos:column="30">(<argument><expr><name pos:line="166" pos:column="31">pubkey<pos:position pos:line="166" pos:column="37"/></name></expr></argument>)<pos:position pos:line="166" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="39"/></expr_stmt>
<cpp:else pos:line="167" pos:column="1">#<cpp:directive pos:line="167" pos:column="2">else<pos:position pos:line="167" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="168" pos:column="9">dh<pos:position pos:line="168" pos:column="11"/></name> <operator pos:line="168" pos:column="12">=<pos:position pos:line="168" pos:column="13"/></operator> <name><name pos:line="168" pos:column="14">pubkey<pos:position pos:line="168" pos:column="20"/></name><operator pos:line="168" pos:column="20">-&gt;<pos:position pos:line="168" pos:column="25"/></operator><name pos:line="168" pos:column="22">pkey<pos:position pos:line="168" pos:column="26"/></name><operator pos:line="168" pos:column="26">.<pos:position pos:line="168" pos:column="27"/></operator><name pos:line="168" pos:column="27">dh<pos:position pos:line="168" pos:column="29"/></name></name></expr>;<pos:position pos:line="168" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="169" pos:column="1">#<cpp:directive pos:line="169" pos:column="2">endif<pos:position pos:line="169" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="170" pos:column="1">#<cpp:directive pos:line="170" pos:column="2">ifdef<pos:position pos:line="170" pos:column="7"/></cpp:directive> <name pos:line="170" pos:column="8">HAVE_OPAQUE_RSA_DSA_DH<pos:position pos:line="170" pos:column="30"/></name></cpp:ifdef>
        <block pos:line="171" pos:column="9">{
          <decl_stmt><decl><type><specifier pos:line="172" pos:column="11">const<pos:position pos:line="172" pos:column="16"/></specifier> <name pos:line="172" pos:column="17">BIGNUM<pos:position pos:line="172" pos:column="23"/></name> <modifier pos:line="172" pos:column="24">*<pos:position pos:line="172" pos:column="25"/></modifier></type><name pos:line="172" pos:column="25">p<pos:position pos:line="172" pos:column="26"/></name></decl>;<pos:position pos:line="172" pos:column="27"/></decl_stmt>
          <decl_stmt><decl><type><specifier pos:line="173" pos:column="11">const<pos:position pos:line="173" pos:column="16"/></specifier> <name pos:line="173" pos:column="17">BIGNUM<pos:position pos:line="173" pos:column="23"/></name> <modifier pos:line="173" pos:column="24">*<pos:position pos:line="173" pos:column="25"/></modifier></type><name pos:line="173" pos:column="25">q<pos:position pos:line="173" pos:column="26"/></name></decl>;<pos:position pos:line="173" pos:column="27"/></decl_stmt>
          <decl_stmt><decl><type><specifier pos:line="174" pos:column="11">const<pos:position pos:line="174" pos:column="16"/></specifier> <name pos:line="174" pos:column="17">BIGNUM<pos:position pos:line="174" pos:column="23"/></name> <modifier pos:line="174" pos:column="24">*<pos:position pos:line="174" pos:column="25"/></modifier></type><name pos:line="174" pos:column="25">g<pos:position pos:line="174" pos:column="26"/></name></decl>;<pos:position pos:line="174" pos:column="27"/></decl_stmt>
          <decl_stmt><decl><type><specifier pos:line="175" pos:column="11">const<pos:position pos:line="175" pos:column="16"/></specifier> <name pos:line="175" pos:column="17">BIGNUM<pos:position pos:line="175" pos:column="23"/></name> <modifier pos:line="175" pos:column="24">*<pos:position pos:line="175" pos:column="25"/></modifier></type><name pos:line="175" pos:column="25">pub_key<pos:position pos:line="175" pos:column="32"/></name></decl>;<pos:position pos:line="175" pos:column="33"/></decl_stmt>
          <expr_stmt><expr><call><name pos:line="176" pos:column="11">DH_get0_pqg<pos:position pos:line="176" pos:column="22"/></name><argument_list pos:line="176" pos:column="22">(<argument><expr><name pos:line="176" pos:column="23">dh<pos:position pos:line="176" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="176" pos:column="27">&amp;<pos:position pos:line="176" pos:column="32"/></operator><name pos:line="176" pos:column="28">p<pos:position pos:line="176" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="176" pos:column="31">&amp;<pos:position pos:line="176" pos:column="36"/></operator><name pos:line="176" pos:column="32">q<pos:position pos:line="176" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="176" pos:column="35">&amp;<pos:position pos:line="176" pos:column="40"/></operator><name pos:line="176" pos:column="36">g<pos:position pos:line="176" pos:column="37"/></name></expr></argument>)<pos:position pos:line="176" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="39"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="177" pos:column="11">DH_get0_key<pos:position pos:line="177" pos:column="22"/></name><argument_list pos:line="177" pos:column="22">(<argument><expr><name pos:line="177" pos:column="23">dh<pos:position pos:line="177" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="177" pos:column="27">&amp;<pos:position pos:line="177" pos:column="32"/></operator><name pos:line="177" pos:column="28">pub_key<pos:position pos:line="177" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="37">NULL<pos:position pos:line="177" pos:column="41"/></name></expr></argument>)<pos:position pos:line="177" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="43"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="178" pos:column="11">print_pubkey_BN<pos:position pos:line="178" pos:column="26"/></name><argument_list pos:line="178" pos:column="26">(<argument><expr><name pos:line="178" pos:column="27">dh<pos:position pos:line="178" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="31">p<pos:position pos:line="178" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="34">i<pos:position pos:line="178" pos:column="35"/></name></expr></argument>)<pos:position pos:line="178" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="179" pos:column="11">print_pubkey_BN<pos:position pos:line="179" pos:column="26"/></name><argument_list pos:line="179" pos:column="26">(<argument><expr><name pos:line="179" pos:column="27">dh<pos:position pos:line="179" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="31">q<pos:position pos:line="179" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="34">i<pos:position pos:line="179" pos:column="35"/></name></expr></argument>)<pos:position pos:line="179" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="180" pos:column="11">print_pubkey_BN<pos:position pos:line="180" pos:column="26"/></name><argument_list pos:line="180" pos:column="26">(<argument><expr><name pos:line="180" pos:column="27">dh<pos:position pos:line="180" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="31">g<pos:position pos:line="180" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="34">i<pos:position pos:line="180" pos:column="35"/></name></expr></argument>)<pos:position pos:line="180" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="181" pos:column="11">print_pubkey_BN<pos:position pos:line="181" pos:column="26"/></name><argument_list pos:line="181" pos:column="26">(<argument><expr><name pos:line="181" pos:column="27">dh<pos:position pos:line="181" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="31">pub_key<pos:position pos:line="181" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="40">i<pos:position pos:line="181" pos:column="41"/></name></expr></argument>)<pos:position pos:line="181" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="43"/></expr_stmt>
       }<pos:position pos:line="182" pos:column="9"/></block>
<cpp:else pos:line="183" pos:column="1">#<cpp:directive pos:line="183" pos:column="2">else<pos:position pos:line="183" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><call><name pos:line="184" pos:column="9">print_pubkey_BN<pos:position pos:line="184" pos:column="24"/></name><argument_list pos:line="184" pos:column="24">(<argument><expr><name pos:line="184" pos:column="25">dh<pos:position pos:line="184" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="29">p<pos:position pos:line="184" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="32">i<pos:position pos:line="184" pos:column="33"/></name></expr></argument>)<pos:position pos:line="184" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="185" pos:column="9">print_pubkey_BN<pos:position pos:line="185" pos:column="24"/></name><argument_list pos:line="185" pos:column="24">(<argument><expr><name pos:line="185" pos:column="25">dh<pos:position pos:line="185" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="29">g<pos:position pos:line="185" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="32">i<pos:position pos:line="185" pos:column="33"/></name></expr></argument>)<pos:position pos:line="185" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="186" pos:column="9">print_pubkey_BN<pos:position pos:line="186" pos:column="24"/></name><argument_list pos:line="186" pos:column="24">(<argument><expr><name pos:line="186" pos:column="25">dh<pos:position pos:line="186" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="29">pub_key<pos:position pos:line="186" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="38">i<pos:position pos:line="186" pos:column="39"/></name></expr></argument>)<pos:position pos:line="186" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="187" pos:column="1">#<cpp:directive pos:line="187" pos:column="2">endif<pos:position pos:line="187" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="188" pos:column="9">break;<pos:position pos:line="188" pos:column="15"/></break>
      }<pos:position pos:line="189" pos:column="8"/></block>
<cpp:if pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">if<pos:position pos:line="190" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="190" pos:column="5">0<pos:position pos:line="190" pos:column="6"/></literal></expr></cpp:if>
      case EVP_PKEY_EC: <comment type="block" pos:line="191" pos:column="25">/* symbol not present in OpenSSL 0.9.6 */</comment>
        <comment type="block" pos:line="192" pos:column="9">/* left TODO */</comment>
        break;
<cpp:endif pos:line="194" pos:column="1">#<cpp:directive pos:line="194" pos:column="2">endif<pos:position pos:line="194" pos:column="7"/></cpp:directive></cpp:endif>
      }<pos:position pos:line="195" pos:column="8"/></block></switch>
      <expr_stmt><expr><call><name pos:line="196" pos:column="7">EVP_PKEY_free<pos:position pos:line="196" pos:column="20"/></name><argument_list pos:line="196" pos:column="20">(<argument><expr><name pos:line="196" pos:column="21">pubkey<pos:position pos:line="196" pos:column="27"/></name></expr></argument>)<pos:position pos:line="196" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="197" pos:column="6"/></block></else></if>

    <if pos:line="199" pos:column="5">if<condition pos:line="199" pos:column="7">(<expr><name pos:line="199" pos:column="8">psig<pos:position pos:line="199" pos:column="12"/></name></expr>)<pos:position pos:line="199" pos:column="13"/></condition><then pos:line="199" pos:column="13"> <block pos:line="199" pos:column="14">{
      <for pos:line="200" pos:column="7">for<control pos:line="200" pos:column="10">(<init><expr><name pos:line="200" pos:column="11">j<pos:position pos:line="200" pos:column="12"/></name> <operator pos:line="200" pos:column="13">=<pos:position pos:line="200" pos:column="14"/></operator> <literal type="number" pos:line="200" pos:column="15">0<pos:position pos:line="200" pos:column="16"/></literal></expr>;<pos:position pos:line="200" pos:column="17"/></init> <condition><expr><name pos:line="200" pos:column="18">j<pos:position pos:line="200" pos:column="19"/></name> <operator pos:line="200" pos:column="20">&lt;<pos:position pos:line="200" pos:column="24"/></operator> <name><name pos:line="200" pos:column="22">psig<pos:position pos:line="200" pos:column="26"/></name><operator pos:line="200" pos:column="26">-&gt;<pos:position pos:line="200" pos:column="31"/></operator><name pos:line="200" pos:column="28">length<pos:position pos:line="200" pos:column="34"/></name></name></expr>;<pos:position pos:line="200" pos:column="35"/></condition> <incr><expr><name pos:line="200" pos:column="36">j<pos:position pos:line="200" pos:column="37"/></name><operator pos:line="200" pos:column="37">++<pos:position pos:line="200" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="200" pos:column="40"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="201" pos:column="9">BIO_printf<pos:position pos:line="201" pos:column="19"/></name><argument_list pos:line="201" pos:column="19">(<argument><expr><name pos:line="201" pos:column="20">mem<pos:position pos:line="201" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="201" pos:column="25">"%02x:"<pos:position pos:line="201" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="201" pos:column="34">psig<pos:position pos:line="201" pos:column="38"/></name><operator pos:line="201" pos:column="38">-&gt;<pos:position pos:line="201" pos:column="43"/></operator><name pos:line="201" pos:column="40">data<pos:position pos:line="201" pos:column="44"/></name><index pos:line="201" pos:column="44">[<expr><name pos:line="201" pos:column="45">j<pos:position pos:line="201" pos:column="46"/></name></expr>]<pos:position pos:line="201" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="201" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="49"/></expr_stmt></block></for>
      <expr_stmt><expr><call><name pos:line="202" pos:column="7">push_certinfo<pos:position pos:line="202" pos:column="20"/></name><argument_list pos:line="202" pos:column="20">(<argument><expr><literal type="string" pos:line="202" pos:column="21">"Signature"<pos:position pos:line="202" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="202" pos:column="34">i<pos:position pos:line="202" pos:column="35"/></name></expr></argument>)<pos:position pos:line="202" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="203" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="205" pos:column="5">PEM_write_bio_X509<pos:position pos:line="205" pos:column="23"/></name><argument_list pos:line="205" pos:column="23">(<argument><expr><name pos:line="205" pos:column="24">mem<pos:position pos:line="205" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="29">x<pos:position pos:line="205" pos:column="30"/></name></expr></argument>)<pos:position pos:line="205" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="206" pos:column="5">push_certinfo<pos:position pos:line="206" pos:column="18"/></name><argument_list pos:line="206" pos:column="18">(<argument><expr><literal type="string" pos:line="206" pos:column="19">"Cert"<pos:position pos:line="206" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="206" pos:column="27">i<pos:position pos:line="206" pos:column="28"/></name></expr></argument>)<pos:position pos:line="206" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="207" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="209" pos:column="3">BIO_free<pos:position pos:line="209" pos:column="11"/></name><argument_list pos:line="209" pos:column="11">(<argument><expr><name pos:line="209" pos:column="12">mem<pos:position pos:line="209" pos:column="15"/></name></expr></argument>)<pos:position pos:line="209" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="17"/></expr_stmt>

  <return pos:line="211" pos:column="3">return <expr><name pos:line="211" pos:column="10">CURLE_OK<pos:position pos:line="211" pos:column="18"/></name></expr>;<pos:position pos:line="211" pos:column="19"/></return>
}<pos:position pos:line="212" pos:column="2"/></block></function></unit>

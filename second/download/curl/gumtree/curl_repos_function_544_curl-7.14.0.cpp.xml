<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_544_curl-7.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_state_get_resp<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">connectdata<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">conn<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">ftpcode<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">ftpstate<pos:position pos:line="3" pos:column="45"/></name></type> <name pos:line="3" pos:column="46">instate<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="54"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">CURLE_OK<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">SessionHandle<pos:position pos:line="6" pos:column="23"/></name></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">data<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name><name pos:line="6" pos:column="32">conn<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">-&gt;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="38">data<pos:position pos:line="6" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">FTP<pos:position pos:line="7" pos:column="13"/></name></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">ftp<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name><name pos:line="7" pos:column="21">conn<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">proto<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">.<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">ftp<pos:position pos:line="7" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">buf<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><name><name pos:line="8" pos:column="15">data<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">state<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">.<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">buffer<pos:position pos:line="8" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">(<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">ftpcode<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">==<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="18">150<pos:position pos:line="10" pos:column="21"/></literal><operator pos:line="10" pos:column="21">)<pos:position pos:line="10" pos:column="22"/></operator> <operator pos:line="10" pos:column="23">||<pos:position pos:line="10" pos:column="25"/></operator> <operator pos:line="10" pos:column="26">(<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">ftpcode<pos:position pos:line="10" pos:column="34"/></name> <operator pos:line="10" pos:column="35">==<pos:position pos:line="10" pos:column="37"/></operator> <literal type="number" pos:line="10" pos:column="38">125<pos:position pos:line="10" pos:column="41"/></literal><operator pos:line="10" pos:column="41">)<pos:position pos:line="10" pos:column="42"/></operator></expr>)<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43"> <block pos:line="10" pos:column="44">{

    <comment type="block" pos:line="12" pos:column="5">/*
      A;
      150 Opening BINARY mode data connection for /etc/passwd (2241
      bytes).  (ok, the file is being transfered)

      B:
      150 Opening ASCII mode data connection for /bin/ls

      C:
      150 ASCII data connection for /bin/ls (137.167.104.91,37445) (0 bytes).

      D:
      150 Opening ASCII mode data connection for /linux/fisk/kpanelrc (0.0.0.0,0) (545 bytes).

      E:
      125 Data connection already open; Transfer starting. */</comment>

    <decl_stmt><decl><type><name pos:line="29" pos:column="5">curl_off_t<pos:position pos:line="29" pos:column="15"/></name></type> <name pos:line="29" pos:column="16">size<pos:position pos:line="29" pos:column="20"/></name><init pos:line="29" pos:column="20">=<expr><operator pos:line="29" pos:column="21">-<pos:position pos:line="29" pos:column="22"/></operator><literal type="number" pos:line="29" pos:column="22">1<pos:position pos:line="29" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="24"/></decl_stmt> <comment type="block" pos:line="29" pos:column="25">/* default unknown size */</comment>


    <comment type="block" pos:line="32" pos:column="5">/*
     * It appears that there are FTP-servers that return size 0 for files when
     * SIZE is used on the file while being in BINARY mode. To work around
     * that (stupid) behavior, we attempt to parse the RETR response even if
     * the SIZE returned size zero.
     *
     * Debugging help from Salvatore Sorrentino on February 26, 2003.
     */</comment>

    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><operator pos:line="41" pos:column="8">(<pos:position pos:line="41" pos:column="9"/></operator><name pos:line="41" pos:column="9">instate<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">!=<pos:position pos:line="41" pos:column="19"/></operator> <name pos:line="41" pos:column="20">FTP_LIST<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">)<pos:position pos:line="41" pos:column="29"/></operator> <operator pos:line="41" pos:column="30">&amp;&amp;<pos:position pos:line="41" pos:column="40"/></operator>
       <operator pos:line="42" pos:column="8">!<pos:position pos:line="42" pos:column="9"/></operator><name><name pos:line="42" pos:column="9">data<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">-&gt;<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="15">set<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">.<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="19">ftp_ascii<pos:position pos:line="42" pos:column="28"/></name></name> <operator pos:line="42" pos:column="29">&amp;&amp;<pos:position pos:line="42" pos:column="39"/></operator>
       <operator pos:line="43" pos:column="8">(<pos:position pos:line="43" pos:column="9"/></operator><name><name pos:line="43" pos:column="9">ftp<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">-&gt;<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="14">downloadsize<pos:position pos:line="43" pos:column="26"/></name></name> <operator pos:line="43" pos:column="27">&lt;<pos:position pos:line="43" pos:column="31"/></operator> <literal type="number" pos:line="43" pos:column="29">1<pos:position pos:line="43" pos:column="30"/></literal><operator pos:line="43" pos:column="30">)<pos:position pos:line="43" pos:column="31"/></operator></expr>)<pos:position pos:line="43" pos:column="32"/></condition><then pos:line="43" pos:column="32"> <block pos:line="43" pos:column="33">{
      <comment type="block" pos:line="44" pos:column="7">/*
       * It seems directory listings either don't show the size or very
       * often uses size 0 anyway. ASCII transfers may very well turn out
       * that the transfered amount of data is not the same as this line
       * tells, why using this number in those cases only confuses us.
       *
       * Example D above makes this parsing a little tricky */</comment>
      <decl_stmt><decl><type><name pos:line="51" pos:column="7">char<pos:position pos:line="51" pos:column="11"/></name> <modifier pos:line="51" pos:column="12">*<pos:position pos:line="51" pos:column="13"/></modifier></type><name pos:line="51" pos:column="13">bytes<pos:position pos:line="51" pos:column="18"/></name></decl>;<pos:position pos:line="51" pos:column="19"/></decl_stmt>
      <expr_stmt><expr><name pos:line="52" pos:column="7">bytes<pos:position pos:line="52" pos:column="12"/></name><operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator><call><name pos:line="52" pos:column="13">strstr<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><name pos:line="52" pos:column="20">buf<pos:position pos:line="52" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="25">" bytes"<pos:position pos:line="52" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="35"/></expr_stmt>
      <if pos:line="53" pos:column="7">if<condition pos:line="53" pos:column="9">(<expr><name pos:line="53" pos:column="10">bytes<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">--<pos:position pos:line="53" pos:column="17"/></operator></expr>)<pos:position pos:line="53" pos:column="18"/></condition><then pos:line="53" pos:column="18"> <block pos:line="53" pos:column="19">{
        <decl_stmt><decl><type><name pos:line="54" pos:column="9">long<pos:position pos:line="54" pos:column="13"/></name></type> <name pos:line="54" pos:column="14">in<pos:position pos:line="54" pos:column="16"/></name><init pos:line="54" pos:column="16">=<expr><call pos:line="54" pos:column="17">(<name pos:line="54" pos:column="18">long<pos:position pos:line="54" pos:column="22"/></name>)<argument_list pos:line="54" pos:column="23">(<argument><expr><name pos:line="54" pos:column="24">bytes<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">-<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="30">buf<pos:position pos:line="54" pos:column="33"/></name></expr></argument>)<pos:position pos:line="54" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="54" pos:column="35"/></decl_stmt>
        <comment type="block" pos:line="55" pos:column="9">/* this is a hint there is size information in there! ;-) */</comment>
        <while pos:line="56" pos:column="9">while<condition pos:line="56" pos:column="14">(<expr><operator pos:line="56" pos:column="15">--<pos:position pos:line="56" pos:column="17"/></operator><name pos:line="56" pos:column="17">in<pos:position pos:line="56" pos:column="19"/></name></expr>)<pos:position pos:line="56" pos:column="20"/></condition> <block pos:line="56" pos:column="21">{
          <comment type="block" pos:line="57" pos:column="11">/* scan for the left parenthesis and break there */</comment>
          <if pos:line="58" pos:column="11">if<condition pos:line="58" pos:column="13">(<expr><literal type="char" pos:line="58" pos:column="14">'('<pos:position pos:line="58" pos:column="17"/></literal> <operator pos:line="58" pos:column="18">==<pos:position pos:line="58" pos:column="20"/></operator> <operator pos:line="58" pos:column="21">*<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="22">bytes<pos:position pos:line="58" pos:column="27"/></name></expr>)<pos:position pos:line="58" pos:column="28"/></condition><then pos:line="58" pos:column="28">
            <block type="pseudo"><break pos:line="59" pos:column="13">break;<pos:position pos:line="59" pos:column="19"/></break></block></then></if>
          <comment type="block" pos:line="60" pos:column="11">/* skip only digits */</comment>
          <if pos:line="61" pos:column="11">if<condition pos:line="61" pos:column="13">(<expr><operator pos:line="61" pos:column="14">!<pos:position pos:line="61" pos:column="15"/></operator><call><name pos:line="61" pos:column="15">isdigit<pos:position pos:line="61" pos:column="22"/></name><argument_list pos:line="61" pos:column="22">(<argument><expr><operator pos:line="61" pos:column="23">(<pos:position pos:line="61" pos:column="24"/></operator><name pos:line="61" pos:column="24">int<pos:position pos:line="61" pos:column="27"/></name><operator pos:line="61" pos:column="27">)<pos:position pos:line="61" pos:column="28"/></operator><operator pos:line="61" pos:column="28">*<pos:position pos:line="61" pos:column="29"/></operator><name pos:line="61" pos:column="29">bytes<pos:position pos:line="61" pos:column="34"/></name></expr></argument>)<pos:position pos:line="61" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="36"/></condition><then pos:line="61" pos:column="36"> <block pos:line="61" pos:column="37">{
            <expr_stmt><expr><name pos:line="62" pos:column="13">bytes<pos:position pos:line="62" pos:column="18"/></name><operator pos:line="62" pos:column="18">=<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="19">NULL<pos:position pos:line="62" pos:column="23"/></name></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>
            <break pos:line="63" pos:column="13">break;<pos:position pos:line="63" pos:column="19"/></break>
          }<pos:position pos:line="64" pos:column="12"/></block></then></if>
          <comment type="block" pos:line="65" pos:column="11">/* one more estep backwards */</comment>
          <expr_stmt><expr><name pos:line="66" pos:column="11">bytes<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">--<pos:position pos:line="66" pos:column="18"/></operator></expr>;<pos:position pos:line="66" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="67" pos:column="10"/></block></while>
        <comment type="block" pos:line="68" pos:column="9">/* if we have nothing but digits: */</comment>
        <if pos:line="69" pos:column="9">if<condition pos:line="69" pos:column="11">(<expr><name pos:line="69" pos:column="12">bytes<pos:position pos:line="69" pos:column="17"/></name><operator pos:line="69" pos:column="17">++<pos:position pos:line="69" pos:column="19"/></operator></expr>)<pos:position pos:line="69" pos:column="20"/></condition><then pos:line="69" pos:column="20"> <block pos:line="69" pos:column="21">{
          <comment type="block" pos:line="70" pos:column="11">/* get the number! */</comment>
          <expr_stmt><expr><name pos:line="71" pos:column="11">size<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <call><name pos:line="71" pos:column="18">curlx_strtoofft<pos:position pos:line="71" pos:column="33"/></name><argument_list pos:line="71" pos:column="33">(<argument><expr><name pos:line="71" pos:column="34">bytes<pos:position pos:line="71" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="41">NULL<pos:position pos:line="71" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="47">0<pos:position pos:line="71" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></then></if>
      }<pos:position pos:line="73" pos:column="8"/></block></then></if>
    }<pos:position pos:line="74" pos:column="6"/></block></then>
    <elseif pos:line="75" pos:column="5">else <if pos:line="75" pos:column="10">if<condition pos:line="75" pos:column="12">(<expr><name><name pos:line="75" pos:column="13">ftp<pos:position pos:line="75" pos:column="16"/></name><operator pos:line="75" pos:column="16">-&gt;<pos:position pos:line="75" pos:column="21"/></operator><name pos:line="75" pos:column="18">downloadsize<pos:position pos:line="75" pos:column="30"/></name></name> <operator pos:line="75" pos:column="31">&gt;<pos:position pos:line="75" pos:column="35"/></operator> <operator pos:line="75" pos:column="33">-<pos:position pos:line="75" pos:column="34"/></operator><literal type="number" pos:line="75" pos:column="34">1<pos:position pos:line="75" pos:column="35"/></literal></expr>)<pos:position pos:line="75" pos:column="36"/></condition><then pos:line="75" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="7">size<pos:position pos:line="76" pos:column="11"/></name> <operator pos:line="76" pos:column="12">=<pos:position pos:line="76" pos:column="13"/></operator> <name><name pos:line="76" pos:column="14">ftp<pos:position pos:line="76" pos:column="17"/></name><operator pos:line="76" pos:column="17">-&gt;<pos:position pos:line="76" pos:column="22"/></operator><name pos:line="76" pos:column="19">downloadsize<pos:position pos:line="76" pos:column="31"/></name></name></expr>;<pos:position pos:line="76" pos:column="32"/></expr_stmt></block></then></if></elseif></if>

    <if pos:line="78" pos:column="5">if<condition pos:line="78" pos:column="7">(<expr><name><name pos:line="78" pos:column="8">data<pos:position pos:line="78" pos:column="12"/></name><operator pos:line="78" pos:column="12">-&gt;<pos:position pos:line="78" pos:column="17"/></operator><name pos:line="78" pos:column="14">set<pos:position pos:line="78" pos:column="17"/></name><operator pos:line="78" pos:column="17">.<pos:position pos:line="78" pos:column="18"/></operator><name pos:line="78" pos:column="18">ftp_use_port<pos:position pos:line="78" pos:column="30"/></name></name></expr>)<pos:position pos:line="78" pos:column="31"/></condition><then pos:line="78" pos:column="31"> <block pos:line="78" pos:column="32">{
      <comment type="block" pos:line="79" pos:column="7">/* BLOCKING */</comment>
      <expr_stmt><expr><name pos:line="80" pos:column="7">result<pos:position pos:line="80" pos:column="13"/></name> <operator pos:line="80" pos:column="14">=<pos:position pos:line="80" pos:column="15"/></operator> <call><name pos:line="80" pos:column="16">AllowServerConnect<pos:position pos:line="80" pos:column="34"/></name><argument_list pos:line="80" pos:column="34">(<argument><expr><name pos:line="80" pos:column="35">conn<pos:position pos:line="80" pos:column="39"/></name></expr></argument>)<pos:position pos:line="80" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="41"/></expr_stmt>
      <if pos:line="81" pos:column="7">if<condition pos:line="81" pos:column="9">( <expr><name pos:line="81" pos:column="11">result<pos:position pos:line="81" pos:column="17"/></name></expr> )<pos:position pos:line="81" pos:column="19"/></condition><then pos:line="81" pos:column="19">
        <block type="pseudo"><return pos:line="82" pos:column="9">return <expr><name pos:line="82" pos:column="16">result<pos:position pos:line="82" pos:column="22"/></name></expr>;<pos:position pos:line="82" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>

    <if pos:line="85" pos:column="5">if<condition pos:line="85" pos:column="7">(<expr><name><name pos:line="85" pos:column="8">conn<pos:position pos:line="85" pos:column="12"/></name><operator pos:line="85" pos:column="12">-&gt;<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="14">ssl<pos:position pos:line="85" pos:column="17"/></name><index pos:line="85" pos:column="17">[<expr><name pos:line="85" pos:column="18">SECONDARYSOCKET<pos:position pos:line="85" pos:column="33"/></name></expr>]<pos:position pos:line="85" pos:column="34"/></index></name><operator pos:line="85" pos:column="34">.<pos:position pos:line="85" pos:column="35"/></operator><name pos:line="85" pos:column="35">use<pos:position pos:line="85" pos:column="38"/></name></expr>)<pos:position pos:line="85" pos:column="39"/></condition><then pos:line="85" pos:column="39"> <block pos:line="85" pos:column="40">{
      <comment type="block" pos:line="86" pos:column="7">/* since we only have a plaintext TCP connection here, we must now
         do the TLS stuff */</comment>
      <expr_stmt><expr><call><name pos:line="88" pos:column="7">infof<pos:position pos:line="88" pos:column="12"/></name><argument_list pos:line="88" pos:column="12">(<argument><expr><name pos:line="88" pos:column="13">data<pos:position pos:line="88" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="19">"Doing the SSL/TLS handshake on the data stream\n"<pos:position pos:line="88" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><name pos:line="89" pos:column="7">result<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">=<pos:position pos:line="89" pos:column="15"/></operator> <call><name pos:line="89" pos:column="16">Curl_ssl_connect<pos:position pos:line="89" pos:column="32"/></name><argument_list pos:line="89" pos:column="32">(<argument><expr><name pos:line="89" pos:column="33">conn<pos:position pos:line="89" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="39">SECONDARYSOCKET<pos:position pos:line="89" pos:column="54"/></name></expr></argument>)<pos:position pos:line="89" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="56"/></expr_stmt>
      <if pos:line="90" pos:column="7">if<condition pos:line="90" pos:column="9">(<expr><name pos:line="90" pos:column="10">result<pos:position pos:line="90" pos:column="16"/></name></expr>)<pos:position pos:line="90" pos:column="17"/></condition><then pos:line="90" pos:column="17">
        <block type="pseudo"><return pos:line="91" pos:column="9">return <expr><name pos:line="91" pos:column="16">result<pos:position pos:line="91" pos:column="22"/></name></expr>;<pos:position pos:line="91" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>

    <if pos:line="94" pos:column="5">if<condition pos:line="94" pos:column="7">(<expr><name pos:line="94" pos:column="8">size<pos:position pos:line="94" pos:column="12"/></name> <operator pos:line="94" pos:column="13">&gt;<pos:position pos:line="94" pos:column="17"/></operator> <name><name pos:line="94" pos:column="15">conn<pos:position pos:line="94" pos:column="19"/></name><operator pos:line="94" pos:column="19">-&gt;<pos:position pos:line="94" pos:column="24"/></operator><name pos:line="94" pos:column="21">maxdownload<pos:position pos:line="94" pos:column="32"/></name></name> <operator pos:line="94" pos:column="33">&amp;&amp;<pos:position pos:line="94" pos:column="43"/></operator> <name><name pos:line="94" pos:column="36">conn<pos:position pos:line="94" pos:column="40"/></name><operator pos:line="94" pos:column="40">-&gt;<pos:position pos:line="94" pos:column="45"/></operator><name pos:line="94" pos:column="42">maxdownload<pos:position pos:line="94" pos:column="53"/></name></name> <operator pos:line="94" pos:column="54">&gt;<pos:position pos:line="94" pos:column="58"/></operator> <literal type="number" pos:line="94" pos:column="56">0<pos:position pos:line="94" pos:column="57"/></literal></expr>)<pos:position pos:line="94" pos:column="58"/></condition><then pos:line="94" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="7">size<pos:position pos:line="95" pos:column="11"/></name> <operator pos:line="95" pos:column="12">=<pos:position pos:line="95" pos:column="13"/></operator> <name><name pos:line="95" pos:column="14">conn<pos:position pos:line="95" pos:column="18"/></name><operator pos:line="95" pos:column="18">-&gt;<pos:position pos:line="95" pos:column="23"/></operator><name pos:line="95" pos:column="20">size<pos:position pos:line="95" pos:column="24"/></name></name> <operator pos:line="95" pos:column="25">=<pos:position pos:line="95" pos:column="26"/></operator> <name><name pos:line="95" pos:column="27">conn<pos:position pos:line="95" pos:column="31"/></name><operator pos:line="95" pos:column="31">-&gt;<pos:position pos:line="95" pos:column="36"/></operator><name pos:line="95" pos:column="33">maxdownload<pos:position pos:line="95" pos:column="44"/></name></name></expr>;<pos:position pos:line="95" pos:column="45"/></expr_stmt></block></then></if>

    <if pos:line="97" pos:column="5">if<condition pos:line="97" pos:column="7">(<expr><name pos:line="97" pos:column="8">instate<pos:position pos:line="97" pos:column="15"/></name> <operator pos:line="97" pos:column="16">!=<pos:position pos:line="97" pos:column="18"/></operator> <name pos:line="97" pos:column="19">FTP_LIST<pos:position pos:line="97" pos:column="27"/></name></expr>)<pos:position pos:line="97" pos:column="28"/></condition><then pos:line="97" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="7">infof<pos:position pos:line="98" pos:column="12"/></name><argument_list pos:line="98" pos:column="12">(<argument><expr><name pos:line="98" pos:column="13">data<pos:position pos:line="98" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="19">"Getting file with size: %"<pos:position pos:line="98" pos:column="46"/></literal> <name pos:line="98" pos:column="47">FORMAT_OFF_T<pos:position pos:line="98" pos:column="59"/></name> <literal type="string" pos:line="98" pos:column="60">"\n"<pos:position pos:line="98" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="66">size<pos:position pos:line="98" pos:column="70"/></name></expr></argument>)<pos:position pos:line="98" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="72"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="100" pos:column="5">/* FTP download: */</comment>
    <expr_stmt><expr><name pos:line="101" pos:column="5">result<pos:position pos:line="101" pos:column="11"/></name><operator pos:line="101" pos:column="11">=<pos:position pos:line="101" pos:column="12"/></operator><call><name pos:line="101" pos:column="12">Curl_Transfer<pos:position pos:line="101" pos:column="25"/></name><argument_list pos:line="101" pos:column="25">(<argument><expr><name pos:line="101" pos:column="26">conn<pos:position pos:line="101" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="32">SECONDARYSOCKET<pos:position pos:line="101" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="49">size<pos:position pos:line="101" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="55">FALSE<pos:position pos:line="101" pos:column="60"/></name></expr></argument>,
                         <argument><expr><name><name pos:line="102" pos:column="26">ftp<pos:position pos:line="102" pos:column="29"/></name><operator pos:line="102" pos:column="29">-&gt;<pos:position pos:line="102" pos:column="34"/></operator><name pos:line="102" pos:column="31">bytecountp<pos:position pos:line="102" pos:column="41"/></name></name></expr></argument>,
                         <argument><expr><operator pos:line="103" pos:column="26">-<pos:position pos:line="103" pos:column="27"/></operator><literal type="number" pos:line="103" pos:column="27">1<pos:position pos:line="103" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="30">NULL<pos:position pos:line="103" pos:column="34"/></name></expr></argument>)<pos:position pos:line="103" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="36"/></expr_stmt> <comment type="block" pos:line="103" pos:column="37">/* no upload here */</comment>
    <if pos:line="104" pos:column="5">if<condition pos:line="104" pos:column="7">(<expr><name pos:line="104" pos:column="8">result<pos:position pos:line="104" pos:column="14"/></name></expr>)<pos:position pos:line="104" pos:column="15"/></condition><then pos:line="104" pos:column="15">
      <block type="pseudo"><return pos:line="105" pos:column="7">return <expr><name pos:line="105" pos:column="14">result<pos:position pos:line="105" pos:column="20"/></name></expr>;<pos:position pos:line="105" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="107" pos:column="5">state<pos:position pos:line="107" pos:column="10"/></name><argument_list pos:line="107" pos:column="10">(<argument><expr><name pos:line="107" pos:column="11">conn<pos:position pos:line="107" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="17">FTP_STOP<pos:position pos:line="107" pos:column="25"/></name></expr></argument>)<pos:position pos:line="107" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="108" pos:column="4"/></block></then>
  <else pos:line="109" pos:column="3">else <block pos:line="109" pos:column="8">{
    <if pos:line="110" pos:column="5">if<condition pos:line="110" pos:column="7">(<expr><operator pos:line="110" pos:column="8">(<pos:position pos:line="110" pos:column="9"/></operator><name pos:line="110" pos:column="9">instate<pos:position pos:line="110" pos:column="16"/></name> <operator pos:line="110" pos:column="17">==<pos:position pos:line="110" pos:column="19"/></operator> <name pos:line="110" pos:column="20">FTP_LIST<pos:position pos:line="110" pos:column="28"/></name><operator pos:line="110" pos:column="28">)<pos:position pos:line="110" pos:column="29"/></operator> <operator pos:line="110" pos:column="30">&amp;&amp;<pos:position pos:line="110" pos:column="40"/></operator> <operator pos:line="110" pos:column="33">(<pos:position pos:line="110" pos:column="34"/></operator><name pos:line="110" pos:column="34">ftpcode<pos:position pos:line="110" pos:column="41"/></name> <operator pos:line="110" pos:column="42">==<pos:position pos:line="110" pos:column="44"/></operator> <literal type="number" pos:line="110" pos:column="45">450<pos:position pos:line="110" pos:column="48"/></literal><operator pos:line="110" pos:column="48">)<pos:position pos:line="110" pos:column="49"/></operator></expr>)<pos:position pos:line="110" pos:column="50"/></condition><then pos:line="110" pos:column="50"> <block pos:line="110" pos:column="51">{
      <comment type="block" pos:line="111" pos:column="7">/* simply no matching files in the dir listing */</comment>
      <expr_stmt><expr><name><name pos:line="112" pos:column="7">ftp<pos:position pos:line="112" pos:column="10"/></name><operator pos:line="112" pos:column="10">-&gt;<pos:position pos:line="112" pos:column="15"/></operator><name pos:line="112" pos:column="12">no_transfer<pos:position pos:line="112" pos:column="23"/></name></name> <operator pos:line="112" pos:column="24">=<pos:position pos:line="112" pos:column="25"/></operator> <name pos:line="112" pos:column="26">TRUE<pos:position pos:line="112" pos:column="30"/></name></expr>;<pos:position pos:line="112" pos:column="31"/></expr_stmt> <comment type="block" pos:line="112" pos:column="32">/* don't download anything */</comment>
      <expr_stmt><expr><call><name pos:line="113" pos:column="7">state<pos:position pos:line="113" pos:column="12"/></name><argument_list pos:line="113" pos:column="12">(<argument><expr><name pos:line="113" pos:column="13">conn<pos:position pos:line="113" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="19">FTP_STOP<pos:position pos:line="113" pos:column="27"/></name></expr></argument>)<pos:position pos:line="113" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="29"/></expr_stmt> <comment type="block" pos:line="113" pos:column="30">/* this phase is over */</comment>
    }<pos:position pos:line="114" pos:column="6"/></block></then>
    <else pos:line="115" pos:column="5">else <block pos:line="115" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="116" pos:column="7">failf<pos:position pos:line="116" pos:column="12"/></name><argument_list pos:line="116" pos:column="12">(<argument><expr><name pos:line="116" pos:column="13">data<pos:position pos:line="116" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="19">"RETR response: %03d"<pos:position pos:line="116" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="42">ftpcode<pos:position pos:line="116" pos:column="49"/></name></expr></argument>)<pos:position pos:line="116" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="51"/></expr_stmt>
      <return pos:line="117" pos:column="7">return <expr><name pos:line="117" pos:column="14">CURLE_FTP_COULDNT_RETR_FILE<pos:position pos:line="117" pos:column="41"/></name></expr>;<pos:position pos:line="117" pos:column="42"/></return>
    }<pos:position pos:line="118" pos:column="6"/></block></else></if>
  }<pos:position pos:line="119" pos:column="4"/></block></else></if>

  <return pos:line="121" pos:column="3">return <expr><name pos:line="121" pos:column="10">result<pos:position pos:line="121" pos:column="16"/></name></expr>;<pos:position pos:line="121" pos:column="17"/></return>
}<pos:position pos:line="122" pos:column="2"/></block></function></unit>

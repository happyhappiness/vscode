<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_621_curl-7.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">krb4_decode<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">void<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">app_data<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">void<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">buf<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">len<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">level<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
            <parameter><decl><type><name><name pos:line="3" pos:column="13">struct<pos:position pos:line="3" pos:column="19"/></name> <name pos:line="3" pos:column="20">connectdata<pos:position pos:line="3" pos:column="31"/></name></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">conn<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="38"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">MSG_DAT<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">m<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">e<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">krb4_data<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">d<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">app_data<pos:position pos:line="7" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">level<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">prot_safe<pos:position pos:line="9" pos:column="24"/></name></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">e<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">krb_rd_safe<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">buf<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="26">len<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="31">&amp;<pos:position pos:line="10" pos:column="36"/></operator><name><name pos:line="10" pos:column="32">d<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">-&gt;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="35">key<pos:position pos:line="10" pos:column="38"/></name></name></expr></argument>,
                    <argument><expr><operator pos:line="11" pos:column="21">(<pos:position pos:line="11" pos:column="22"/></operator>struct <name pos:line="11" pos:column="29">sockaddr_in<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">*<pos:position pos:line="11" pos:column="42"/></operator><operator pos:line="11" pos:column="42">)<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="43">REMOTE_ADDR<pos:position pos:line="11" pos:column="54"/></name></expr></argument>,
                    <argument><expr><operator pos:line="12" pos:column="21">(<pos:position pos:line="12" pos:column="22"/></operator>struct <name pos:line="12" pos:column="29">sockaddr_in<pos:position pos:line="12" pos:column="40"/></name> <operator pos:line="12" pos:column="41">*<pos:position pos:line="12" pos:column="42"/></operator><operator pos:line="12" pos:column="42">)<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="43">LOCAL_ADDR<pos:position pos:line="12" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="55">&amp;<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="56">m<pos:position pos:line="12" pos:column="57"/></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt></block></then>
  <else pos:line="13" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="5">e<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <call><name pos:line="14" pos:column="9">krb_rd_priv<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">buf<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="26">len<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="31">d<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">schedule<pos:position pos:line="14" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="44">&amp;<pos:position pos:line="14" pos:column="49"/></operator><name><name pos:line="14" pos:column="45">d<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">-&gt;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="48">key<pos:position pos:line="14" pos:column="51"/></name></name></expr></argument>,
                    <argument><expr><operator pos:line="15" pos:column="21">(<pos:position pos:line="15" pos:column="22"/></operator>struct <name pos:line="15" pos:column="29">sockaddr_in<pos:position pos:line="15" pos:column="40"/></name> <operator pos:line="15" pos:column="41">*<pos:position pos:line="15" pos:column="42"/></operator><operator pos:line="15" pos:column="42">)<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">REMOTE_ADDR<pos:position pos:line="15" pos:column="54"/></name></expr></argument>,
                    <argument><expr><operator pos:line="16" pos:column="21">(<pos:position pos:line="16" pos:column="22"/></operator>struct <name pos:line="16" pos:column="29">sockaddr_in<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">*<pos:position pos:line="16" pos:column="42"/></operator><operator pos:line="16" pos:column="42">)<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="43">LOCAL_ADDR<pos:position pos:line="16" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="55">&amp;<pos:position pos:line="16" pos:column="60"/></operator><name pos:line="16" pos:column="56">m<pos:position pos:line="16" pos:column="57"/></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt></block></else></if>
  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name pos:line="17" pos:column="6">e<pos:position pos:line="17" pos:column="7"/></name></expr>)<pos:position pos:line="17" pos:column="8"/></condition><then pos:line="17" pos:column="8"> <block pos:line="17" pos:column="9">{
    <decl_stmt><decl><type><name><name pos:line="18" pos:column="5">struct<pos:position pos:line="18" pos:column="11"/></name> <name pos:line="18" pos:column="12">SessionHandle<pos:position pos:line="18" pos:column="25"/></name></name> <modifier pos:line="18" pos:column="26">*<pos:position pos:line="18" pos:column="27"/></modifier></type><name pos:line="18" pos:column="27">data<pos:position pos:line="18" pos:column="31"/></name> <init pos:line="18" pos:column="32">= <expr><name><name pos:line="18" pos:column="34">conn<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">data<pos:position pos:line="18" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="18" pos:column="45"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">infof<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><name pos:line="19" pos:column="11">data<pos:position pos:line="19" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="17">"krb4_decode: %s\n"<pos:position pos:line="19" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="38">krb_get_err_text<pos:position pos:line="19" pos:column="54"/></name><argument_list pos:line="19" pos:column="54">(<argument><expr><name pos:line="19" pos:column="55">e<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">-<pos:position pos:line="20" pos:column="13"/></operator><literal type="number" pos:line="20" pos:column="13">1<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">memmove<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><name pos:line="22" pos:column="11">buf<pos:position pos:line="22" pos:column="14"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="16">m<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">.<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">app_data<pos:position pos:line="22" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="28">m<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">.<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">app_length<pos:position pos:line="22" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
  <return pos:line="23" pos:column="3">return <expr><name><name pos:line="23" pos:column="10">m<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">.<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">app_length<pos:position pos:line="23" pos:column="22"/></name></name></expr>;<pos:position pos:line="23" pos:column="23"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

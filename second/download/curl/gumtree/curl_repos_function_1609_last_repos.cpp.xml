<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1609_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLMcode<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">curl_multi_fdset<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">Curl_multi<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">multi<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">fd_set<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">read_fd_set<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">fd_set<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">write_fd_set<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="3" pos:column="28">fd_set<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">exc_fd_set<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="48">int<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">max_fd<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="60"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <comment type="block" pos:line="5" pos:column="3">/* Scan through all the easy handles to get the file descriptors set.
     Some easy handles may not have connected to the remote host yet,
     and then we must make sure that is done. */</comment>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">Curl_easy<pos:position pos:line="8" pos:column="19"/></name></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">data<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">this_max_fd<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><operator pos:line="9" pos:column="21">-<pos:position pos:line="9" pos:column="22"/></operator><literal type="number" pos:line="9" pos:column="22">1<pos:position pos:line="9" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">curl_socket_t<pos:position pos:line="10" pos:column="16"/></name></type> <name><name pos:line="10" pos:column="17">sockbunch<pos:position pos:line="10" pos:column="26"/></name><index pos:line="10" pos:column="26">[<expr><name pos:line="10" pos:column="27">MAX_SOCKSPEREASYHANDLE<pos:position pos:line="10" pos:column="49"/></name></expr>]<pos:position pos:line="10" pos:column="50"/></index></name></decl>;<pos:position pos:line="10" pos:column="51"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">bitmap<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">i<pos:position pos:line="12" pos:column="8"/></name></decl>;<pos:position pos:line="12" pos:column="9"/></decl_stmt>
  <expr_stmt><expr><operator pos:line="13" pos:column="3">(<pos:position pos:line="13" pos:column="4"/></operator><name pos:line="13" pos:column="4">void<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">)<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">exc_fd_set<pos:position pos:line="13" pos:column="19"/></name></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt> <comment type="block" pos:line="13" pos:column="21">/* not used */</comment>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><call><name pos:line="15" pos:column="7">GOOD_MULTI_HANDLE<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">multi<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">CURLM_BAD_HANDLE<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="18" pos:column="3">data<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <name><name pos:line="18" pos:column="10">multi<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">easyp<pos:position pos:line="18" pos:column="22"/></name></name></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
  <while pos:line="19" pos:column="3">while<condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">data<pos:position pos:line="19" pos:column="13"/></name></expr>)<pos:position pos:line="19" pos:column="14"/></condition> <block pos:line="19" pos:column="15">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">bitmap<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name pos:line="20" pos:column="14">multi_getsock<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">data<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">sockbunch<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">MAX_SOCKSPEREASYHANDLE<pos:position pos:line="20" pos:column="67"/></name></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="69"/></expr_stmt>

    <for pos:line="22" pos:column="5">for<control pos:line="22" pos:column="8">(<init><expr><name pos:line="22" pos:column="9">i<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <literal type="number" pos:line="22" pos:column="13">0<pos:position pos:line="22" pos:column="14"/></literal></expr>;<pos:position pos:line="22" pos:column="15"/></init> <condition><expr><name pos:line="22" pos:column="16">i<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">&lt;<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="19">MAX_SOCKSPEREASYHANDLE<pos:position pos:line="22" pos:column="41"/></name></expr>;<pos:position pos:line="22" pos:column="42"/></condition> <incr><expr><name pos:line="22" pos:column="43">i<pos:position pos:line="22" pos:column="44"/></name><operator pos:line="22" pos:column="44">++<pos:position pos:line="22" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="47"/></control> <block pos:line="22" pos:column="48">{
      <decl_stmt><decl><type><name pos:line="23" pos:column="7">curl_socket_t<pos:position pos:line="23" pos:column="20"/></name></type> <name pos:line="23" pos:column="21">s<pos:position pos:line="23" pos:column="22"/></name> <init pos:line="23" pos:column="23">= <expr><name pos:line="23" pos:column="25">CURL_SOCKET_BAD<pos:position pos:line="23" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="41"/></decl_stmt>

      <if pos:line="25" pos:column="7">if<condition pos:line="25" pos:column="9">(<expr><operator pos:line="25" pos:column="10">(<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">bitmap<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">&amp;<pos:position pos:line="25" pos:column="23"/></operator> <call><name pos:line="25" pos:column="20">GETSOCK_READSOCK<pos:position pos:line="25" pos:column="36"/></name><argument_list pos:line="25" pos:column="36">(<argument><expr><name pos:line="25" pos:column="37">i<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call><operator pos:line="25" pos:column="39">)<pos:position pos:line="25" pos:column="40"/></operator> <operator pos:line="25" pos:column="41">&amp;&amp;<pos:position pos:line="25" pos:column="51"/></operator> <call><name pos:line="25" pos:column="44">VALID_SOCK<pos:position pos:line="25" pos:column="54"/></name><argument_list pos:line="25" pos:column="54">(<argument><expr><operator pos:line="25" pos:column="55">(<pos:position pos:line="25" pos:column="56"/></operator><name><name pos:line="25" pos:column="56">sockbunch<pos:position pos:line="25" pos:column="65"/></name><index pos:line="25" pos:column="65">[<expr><name pos:line="25" pos:column="66">i<pos:position pos:line="25" pos:column="67"/></name></expr>]<pos:position pos:line="25" pos:column="68"/></index></name><operator pos:line="25" pos:column="68">)<pos:position pos:line="25" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="71"/></condition><then pos:line="25" pos:column="71"> <block pos:line="25" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">FD_SET<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name><name pos:line="26" pos:column="16">sockbunch<pos:position pos:line="26" pos:column="25"/></name><index pos:line="26" pos:column="25">[<expr><name pos:line="26" pos:column="26">i<pos:position pos:line="26" pos:column="27"/></name></expr>]<pos:position pos:line="26" pos:column="28"/></index></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="30">read_fd_set<pos:position pos:line="26" pos:column="41"/></name></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">s<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <name><name pos:line="27" pos:column="13">sockbunch<pos:position pos:line="27" pos:column="22"/></name><index pos:line="27" pos:column="22">[<expr><name pos:line="27" pos:column="23">i<pos:position pos:line="27" pos:column="24"/></name></expr>]<pos:position pos:line="27" pos:column="25"/></index></name></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="28" pos:column="8"/></block></then></if>
      <if pos:line="29" pos:column="7">if<condition pos:line="29" pos:column="9">(<expr><operator pos:line="29" pos:column="10">(<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">bitmap<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">&amp;<pos:position pos:line="29" pos:column="23"/></operator> <call><name pos:line="29" pos:column="20">GETSOCK_WRITESOCK<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">i<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call><operator pos:line="29" pos:column="40">)<pos:position pos:line="29" pos:column="41"/></operator> <operator pos:line="29" pos:column="42">&amp;&amp;<pos:position pos:line="29" pos:column="52"/></operator> <call><name pos:line="29" pos:column="45">VALID_SOCK<pos:position pos:line="29" pos:column="55"/></name><argument_list pos:line="29" pos:column="55">(<argument><expr><operator pos:line="29" pos:column="56">(<pos:position pos:line="29" pos:column="57"/></operator><name><name pos:line="29" pos:column="57">sockbunch<pos:position pos:line="29" pos:column="66"/></name><index pos:line="29" pos:column="66">[<expr><name pos:line="29" pos:column="67">i<pos:position pos:line="29" pos:column="68"/></name></expr>]<pos:position pos:line="29" pos:column="69"/></index></name><operator pos:line="29" pos:column="69">)<pos:position pos:line="29" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="72"/></condition><then pos:line="29" pos:column="72"> <block pos:line="29" pos:column="73">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">FD_SET<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><name><name pos:line="30" pos:column="16">sockbunch<pos:position pos:line="30" pos:column="25"/></name><index pos:line="30" pos:column="25">[<expr><name pos:line="30" pos:column="26">i<pos:position pos:line="30" pos:column="27"/></name></expr>]<pos:position pos:line="30" pos:column="28"/></index></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="30">write_fd_set<pos:position pos:line="30" pos:column="42"/></name></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="31" pos:column="9">s<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <name><name pos:line="31" pos:column="13">sockbunch<pos:position pos:line="31" pos:column="22"/></name><index pos:line="31" pos:column="22">[<expr><name pos:line="31" pos:column="23">i<pos:position pos:line="31" pos:column="24"/></name></expr>]<pos:position pos:line="31" pos:column="25"/></index></name></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="32" pos:column="8"/></block></then></if>
      <if pos:line="33" pos:column="7">if<condition pos:line="33" pos:column="9">(<expr><name pos:line="33" pos:column="10">s<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">==<pos:position pos:line="33" pos:column="14"/></operator> <name pos:line="33" pos:column="15">CURL_SOCKET_BAD<pos:position pos:line="33" pos:column="30"/></name></expr>)<pos:position pos:line="33" pos:column="31"/></condition><then pos:line="33" pos:column="31">
        <comment type="block" pos:line="34" pos:column="9">/* this socket is unused, break out of loop */</comment>
        <block type="pseudo"><break pos:line="35" pos:column="9">break;<pos:position pos:line="35" pos:column="15"/></break></block></then></if>
      <if pos:line="36" pos:column="7">if<condition pos:line="36" pos:column="9">(<expr><operator pos:line="36" pos:column="10">(<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">int<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">)<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">s<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">&gt;<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="19">this_max_fd<pos:position pos:line="36" pos:column="30"/></name></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="9">this_max_fd<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <operator pos:line="37" pos:column="23">(<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="24">int<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">)<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="28">s<pos:position pos:line="37" pos:column="29"/></name></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="40" pos:column="5">data<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <name><name pos:line="40" pos:column="12">data<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">next<pos:position pos:line="40" pos:column="22"/></name></name></expr>;<pos:position pos:line="40" pos:column="23"/></expr_stmt> <comment type="block" pos:line="40" pos:column="24">/* check next handle */</comment>
  }<pos:position pos:line="41" pos:column="4"/></block></while>

  <expr_stmt><expr><operator pos:line="43" pos:column="3">*<pos:position pos:line="43" pos:column="4"/></operator><name pos:line="43" pos:column="4">max_fd<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <name pos:line="43" pos:column="13">this_max_fd<pos:position pos:line="43" pos:column="24"/></name></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>

  <return pos:line="45" pos:column="3">return <expr><name pos:line="45" pos:column="10">CURLM_OK<pos:position pos:line="45" pos:column="18"/></name></expr>;<pos:position pos:line="45" pos:column="19"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

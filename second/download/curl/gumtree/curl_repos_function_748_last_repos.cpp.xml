<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_748_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_request<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">curl_socket_t<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">sock<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">httprequest<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">req<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">error<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">fail<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><literal type="number" pos:line="4" pos:column="14">0<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">done_processing<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><literal type="number" pos:line="5" pos:column="25">0<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">reqbuf<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><name><name pos:line="6" pos:column="18">req<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">reqbuf<pos:position pos:line="6" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">ssize_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">got<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">pipereq<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><name pos:line="9" pos:column="19">NULL<pos:position pos:line="9" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">pipereq_length<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><literal type="number" pos:line="10" pos:column="27">0<pos:position pos:line="10" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name><name pos:line="12" pos:column="6">req<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">pipelining<pos:position pos:line="12" pos:column="21"/></name></name></expr>)<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22"> <block pos:line="12" pos:column="23">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">pipereq<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">reqbuf<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">+<pos:position pos:line="13" pos:column="23"/></operator> <name><name pos:line="13" pos:column="24">req<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">checkindex<pos:position pos:line="13" pos:column="39"/></name></name></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">pipereq_length<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <name><name pos:line="14" pos:column="22">req<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">offset<pos:position pos:line="14" pos:column="33"/></name></name> <operator pos:line="14" pos:column="34">-<pos:position pos:line="14" pos:column="35"/></operator> <name><name pos:line="14" pos:column="36">req<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">-&gt;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="41">checkindex<pos:position pos:line="14" pos:column="51"/></name></name></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="17" pos:column="3">/*** Init the httprequest structure properly for the upcoming request ***/</comment>

  <expr_stmt><expr><name><name pos:line="19" pos:column="3">req<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">checkindex<pos:position pos:line="19" pos:column="18"/></name></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <literal type="number" pos:line="19" pos:column="21">0<pos:position pos:line="19" pos:column="22"/></literal></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">req<pos:position pos:line="20" pos:column="6"/></name><operator pos:line="20" pos:column="6">-&gt;<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="8">offset<pos:position pos:line="20" pos:column="14"/></name></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <literal type="number" pos:line="20" pos:column="17">0<pos:position pos:line="20" pos:column="18"/></literal></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">req<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">-&gt;<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="8">testno<pos:position pos:line="21" pos:column="14"/></name></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">DOCNUMBER_NOTHING<pos:position pos:line="21" pos:column="34"/></name></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">req<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">-&gt;<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="8">partno<pos:position pos:line="22" pos:column="14"/></name></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">req<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">open<pos:position pos:line="23" pos:column="12"/></name></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">TRUE<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">req<pos:position pos:line="24" pos:column="6"/></name><operator pos:line="24" pos:column="6">-&gt;<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="8">auth_req<pos:position pos:line="24" pos:column="16"/></name></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">FALSE<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">req<pos:position pos:line="25" pos:column="6"/></name><operator pos:line="25" pos:column="6">-&gt;<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="8">auth<pos:position pos:line="25" pos:column="12"/></name></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <name pos:line="25" pos:column="15">FALSE<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">req<pos:position pos:line="26" pos:column="6"/></name><operator pos:line="26" pos:column="6">-&gt;<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="8">cl<pos:position pos:line="26" pos:column="10"/></name></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <literal type="number" pos:line="26" pos:column="13">0<pos:position pos:line="26" pos:column="14"/></literal></expr>;<pos:position pos:line="26" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">req<pos:position pos:line="27" pos:column="6"/></name><operator pos:line="27" pos:column="6">-&gt;<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="8">digest<pos:position pos:line="27" pos:column="14"/></name></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">FALSE<pos:position pos:line="27" pos:column="22"/></name></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">req<pos:position pos:line="28" pos:column="6"/></name><operator pos:line="28" pos:column="6">-&gt;<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="8">ntlm<pos:position pos:line="28" pos:column="12"/></name></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <name pos:line="28" pos:column="15">FALSE<pos:position pos:line="28" pos:column="20"/></name></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">req<pos:position pos:line="29" pos:column="6"/></name><operator pos:line="29" pos:column="6">-&gt;<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="8">pipe<pos:position pos:line="29" pos:column="12"/></name></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <literal type="number" pos:line="29" pos:column="15">0<pos:position pos:line="29" pos:column="16"/></literal></expr>;<pos:position pos:line="29" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">req<pos:position pos:line="30" pos:column="6"/></name><operator pos:line="30" pos:column="6">-&gt;<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="8">skip<pos:position pos:line="30" pos:column="12"/></name></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <literal type="number" pos:line="30" pos:column="15">0<pos:position pos:line="30" pos:column="16"/></literal></expr>;<pos:position pos:line="30" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">req<pos:position pos:line="31" pos:column="6"/></name><operator pos:line="31" pos:column="6">-&gt;<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="8">rcmd<pos:position pos:line="31" pos:column="12"/></name></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <name pos:line="31" pos:column="15">RCMD_NORMALREQ<pos:position pos:line="31" pos:column="29"/></name></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">req<pos:position pos:line="32" pos:column="6"/></name><operator pos:line="32" pos:column="6">-&gt;<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="8">protocol<pos:position pos:line="32" pos:column="16"/></name></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <name pos:line="32" pos:column="19">RPROT_NONE<pos:position pos:line="32" pos:column="29"/></name></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">req<pos:position pos:line="33" pos:column="6"/></name><operator pos:line="33" pos:column="6">-&gt;<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="8">prot_version<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <literal type="number" pos:line="33" pos:column="23">0<pos:position pos:line="33" pos:column="24"/></literal></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="34" pos:column="3">req<pos:position pos:line="34" pos:column="6"/></name><operator pos:line="34" pos:column="6">-&gt;<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="8">pipelining<pos:position pos:line="34" pos:column="18"/></name></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">FALSE<pos:position pos:line="34" pos:column="26"/></name></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">req<pos:position pos:line="35" pos:column="6"/></name><operator pos:line="35" pos:column="6">-&gt;<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="8">rtp_buffer<pos:position pos:line="35" pos:column="18"/></name></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <name pos:line="35" pos:column="21">NULL<pos:position pos:line="35" pos:column="25"/></name></expr>;<pos:position pos:line="35" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="36" pos:column="3">req<pos:position pos:line="36" pos:column="6"/></name><operator pos:line="36" pos:column="6">-&gt;<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="8">rtp_buffersize<pos:position pos:line="36" pos:column="22"/></name></name> <operator pos:line="36" pos:column="23">=<pos:position pos:line="36" pos:column="24"/></operator> <literal type="number" pos:line="36" pos:column="25">0<pos:position pos:line="36" pos:column="26"/></literal></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>

  <comment type="block" format="doxygen" pos:line="38" pos:column="3">/*** end of httprequest init ***/</comment>

  <while pos:line="40" pos:column="3">while<condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">!<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">done_processing<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">&amp;&amp;<pos:position pos:line="40" pos:column="36"/></operator> <operator pos:line="40" pos:column="29">(<pos:position pos:line="40" pos:column="30"/></operator><name><name pos:line="40" pos:column="30">req<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">offset<pos:position pos:line="40" pos:column="41"/></name></name> <operator pos:line="40" pos:column="42">&lt;<pos:position pos:line="40" pos:column="46"/></operator> <name pos:line="40" pos:column="44">REQBUFSIZ<pos:position pos:line="40" pos:column="53"/></name><operator pos:line="40" pos:column="53">-<pos:position pos:line="40" pos:column="54"/></operator><literal type="number" pos:line="40" pos:column="54">1<pos:position pos:line="40" pos:column="55"/></literal><operator pos:line="40" pos:column="55">)<pos:position pos:line="40" pos:column="56"/></operator></expr>)<pos:position pos:line="40" pos:column="57"/></condition> <block pos:line="40" pos:column="58">{
    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><name pos:line="41" pos:column="8">pipereq_length<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">&amp;&amp;<pos:position pos:line="41" pos:column="33"/></operator> <name pos:line="41" pos:column="26">pipereq<pos:position pos:line="41" pos:column="33"/></name></expr>)<pos:position pos:line="41" pos:column="34"/></condition><then pos:line="41" pos:column="34"> <block pos:line="41" pos:column="35">{
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">memmove<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><name pos:line="42" pos:column="15">reqbuf<pos:position pos:line="42" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="23">pipereq<pos:position pos:line="42" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="32">pipereq_length<pos:position pos:line="42" pos:column="46"/></name></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name pos:line="43" pos:column="7">got<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <call><name pos:line="43" pos:column="13">curlx_uztosz<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">pipereq_length<pos:position pos:line="43" pos:column="40"/></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name pos:line="44" pos:column="7">pipereq_length<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <literal type="number" pos:line="44" pos:column="24">0<pos:position pos:line="44" pos:column="25"/></literal></expr>;<pos:position pos:line="44" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then>
    <else pos:line="46" pos:column="5">else <block pos:line="46" pos:column="10">{
      <if pos:line="47" pos:column="7">if<condition pos:line="47" pos:column="9">(<expr><name><name pos:line="47" pos:column="10">req<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">skip<pos:position pos:line="47" pos:column="19"/></name></name></expr>)<pos:position pos:line="47" pos:column="20"/></condition><then pos:line="47" pos:column="20">
        <comment type="block" pos:line="48" pos:column="9">/* we are instructed to not read the entire thing, so we make sure to
           only read what we're supposed to and NOT read the enire thing the
           client wants to send! */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="9">got<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">=<pos:position pos:line="51" pos:column="14"/></operator> <call><name pos:line="51" pos:column="15">sread<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">(<argument><expr><name pos:line="51" pos:column="21">sock<pos:position pos:line="51" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="27">reqbuf<pos:position pos:line="51" pos:column="33"/></name> <operator pos:line="51" pos:column="34">+<pos:position pos:line="51" pos:column="35"/></operator> <name><name pos:line="51" pos:column="36">req<pos:position pos:line="51" pos:column="39"/></name><operator pos:line="51" pos:column="39">-&gt;<pos:position pos:line="51" pos:column="44"/></operator><name pos:line="51" pos:column="41">offset<pos:position pos:line="51" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="49">req<pos:position pos:line="51" pos:column="52"/></name><operator pos:line="51" pos:column="52">-&gt;<pos:position pos:line="51" pos:column="57"/></operator><name pos:line="51" pos:column="54">cl<pos:position pos:line="51" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt></block></then>
      <else pos:line="52" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="9">got<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <call><name pos:line="53" pos:column="15">sread<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><name pos:line="53" pos:column="21">sock<pos:position pos:line="53" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="27">reqbuf<pos:position pos:line="53" pos:column="33"/></name> <operator pos:line="53" pos:column="34">+<pos:position pos:line="53" pos:column="35"/></operator> <name><name pos:line="53" pos:column="36">req<pos:position pos:line="53" pos:column="39"/></name><operator pos:line="53" pos:column="39">-&gt;<pos:position pos:line="53" pos:column="44"/></operator><name pos:line="53" pos:column="41">offset<pos:position pos:line="53" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="49">REQBUFSIZ<pos:position pos:line="53" pos:column="58"/></name><operator pos:line="53" pos:column="58">-<pos:position pos:line="53" pos:column="59"/></operator><literal type="number" pos:line="53" pos:column="59">1<pos:position pos:line="53" pos:column="60"/></literal> <operator pos:line="53" pos:column="61">-<pos:position pos:line="53" pos:column="62"/></operator> <name><name pos:line="53" pos:column="63">req<pos:position pos:line="53" pos:column="66"/></name><operator pos:line="53" pos:column="66">-&gt;<pos:position pos:line="53" pos:column="71"/></operator><name pos:line="53" pos:column="68">offset<pos:position pos:line="53" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="76"/></expr_stmt></block></else></if>
    }<pos:position pos:line="54" pos:column="6"/></block></else></if>
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><name pos:line="55" pos:column="8">got_exit_signal<pos:position pos:line="55" pos:column="23"/></name></expr>)<pos:position pos:line="55" pos:column="24"/></condition><then pos:line="55" pos:column="24">
      <block type="pseudo"><return pos:line="56" pos:column="7">return <expr><literal type="number" pos:line="56" pos:column="14">1<pos:position pos:line="56" pos:column="15"/></literal></expr>;<pos:position pos:line="56" pos:column="16"/></return></block></then></if>
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">(<expr><name pos:line="57" pos:column="8">got<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">==<pos:position pos:line="57" pos:column="14"/></operator> <literal type="number" pos:line="57" pos:column="15">0<pos:position pos:line="57" pos:column="16"/></literal></expr>)<pos:position pos:line="57" pos:column="17"/></condition><then pos:line="57" pos:column="17"> <block pos:line="57" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">logmsg<pos:position pos:line="58" pos:column="13"/></name><argument_list pos:line="58" pos:column="13">(<argument><expr><literal type="string" pos:line="58" pos:column="14">"Connection closed by client"<pos:position pos:line="58" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name pos:line="59" pos:column="7">fail<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <literal type="number" pos:line="59" pos:column="14">1<pos:position pos:line="59" pos:column="15"/></literal></expr>;<pos:position pos:line="59" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then>
    <elseif pos:line="61" pos:column="5">else <if pos:line="61" pos:column="10">if<condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">got<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">&lt;<pos:position pos:line="61" pos:column="21"/></operator> <literal type="number" pos:line="61" pos:column="19">0<pos:position pos:line="61" pos:column="20"/></literal></expr>)<pos:position pos:line="61" pos:column="21"/></condition><then pos:line="61" pos:column="21"> <block pos:line="61" pos:column="22">{
      <expr_stmt><expr><name pos:line="62" pos:column="7">error<pos:position pos:line="62" pos:column="12"/></name> <operator pos:line="62" pos:column="13">=<pos:position pos:line="62" pos:column="14"/></operator> <name pos:line="62" pos:column="15">SOCKERRNO<pos:position pos:line="62" pos:column="24"/></name></expr>;<pos:position pos:line="62" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="63" pos:column="7">logmsg<pos:position pos:line="63" pos:column="13"/></name><argument_list pos:line="63" pos:column="13">(<argument><expr><literal type="string" pos:line="63" pos:column="14">"recv() returned error: (%d) %s"<pos:position pos:line="63" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="48">error<pos:position pos:line="63" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="55">strerror<pos:position pos:line="63" pos:column="63"/></name><argument_list pos:line="63" pos:column="63">(<argument><expr><name pos:line="63" pos:column="64">error<pos:position pos:line="63" pos:column="69"/></name></expr></argument>)<pos:position pos:line="63" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="72"/></expr_stmt>
      <expr_stmt><expr><name pos:line="64" pos:column="7">fail<pos:position pos:line="64" pos:column="11"/></name> <operator pos:line="64" pos:column="12">=<pos:position pos:line="64" pos:column="13"/></operator> <literal type="number" pos:line="64" pos:column="14">1<pos:position pos:line="64" pos:column="15"/></literal></expr>;<pos:position pos:line="64" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if></elseif></if>
    <if pos:line="66" pos:column="5">if<condition pos:line="66" pos:column="7">(<expr><name pos:line="66" pos:column="8">fail<pos:position pos:line="66" pos:column="12"/></name></expr>)<pos:position pos:line="66" pos:column="13"/></condition><then pos:line="66" pos:column="13"> <block pos:line="66" pos:column="14">{
      <comment type="block" pos:line="67" pos:column="7">/* dump the request received so far to the external file */</comment>
      <expr_stmt><expr><name><name pos:line="68" pos:column="7">reqbuf<pos:position pos:line="68" pos:column="13"/></name><index pos:line="68" pos:column="13">[<expr><name><name pos:line="68" pos:column="14">req<pos:position pos:line="68" pos:column="17"/></name><operator pos:line="68" pos:column="17">-&gt;<pos:position pos:line="68" pos:column="22"/></operator><name pos:line="68" pos:column="19">offset<pos:position pos:line="68" pos:column="25"/></name></name></expr>]<pos:position pos:line="68" pos:column="26"/></index></name> <operator pos:line="68" pos:column="27">=<pos:position pos:line="68" pos:column="28"/></operator> <literal type="char" pos:line="68" pos:column="29">'\0'<pos:position pos:line="68" pos:column="33"/></literal></expr>;<pos:position pos:line="68" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="69" pos:column="7">storerequest<pos:position pos:line="69" pos:column="19"/></name><argument_list pos:line="69" pos:column="19">(<argument><expr><name pos:line="69" pos:column="20">reqbuf<pos:position pos:line="69" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="28">req<pos:position pos:line="69" pos:column="31"/></name><operator pos:line="69" pos:column="31">-&gt;<pos:position pos:line="69" pos:column="36"/></operator><name pos:line="69" pos:column="33">offset<pos:position pos:line="69" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="41"/></expr_stmt>
      <return pos:line="70" pos:column="7">return <expr><literal type="number" pos:line="70" pos:column="14">1<pos:position pos:line="70" pos:column="15"/></literal></expr>;<pos:position pos:line="70" pos:column="16"/></return>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">logmsg<pos:position pos:line="73" pos:column="11"/></name><argument_list pos:line="73" pos:column="11">(<argument><expr><literal type="string" pos:line="73" pos:column="12">"Read %zd bytes"<pos:position pos:line="73" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="30">got<pos:position pos:line="73" pos:column="33"/></name></expr></argument>)<pos:position pos:line="73" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="75" pos:column="5">req<pos:position pos:line="75" pos:column="8"/></name><operator pos:line="75" pos:column="8">-&gt;<pos:position pos:line="75" pos:column="13"/></operator><name pos:line="75" pos:column="10">offset<pos:position pos:line="75" pos:column="16"/></name></name> <operator pos:line="75" pos:column="17">+=<pos:position pos:line="75" pos:column="19"/></operator> <operator pos:line="75" pos:column="20">(<pos:position pos:line="75" pos:column="21"/></operator><name pos:line="75" pos:column="21">size_t<pos:position pos:line="75" pos:column="27"/></name><operator pos:line="75" pos:column="27">)<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="28">got<pos:position pos:line="75" pos:column="31"/></name></expr>;<pos:position pos:line="75" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="76" pos:column="5">reqbuf<pos:position pos:line="76" pos:column="11"/></name><index pos:line="76" pos:column="11">[<expr><name><name pos:line="76" pos:column="12">req<pos:position pos:line="76" pos:column="15"/></name><operator pos:line="76" pos:column="15">-&gt;<pos:position pos:line="76" pos:column="20"/></operator><name pos:line="76" pos:column="17">offset<pos:position pos:line="76" pos:column="23"/></name></name></expr>]<pos:position pos:line="76" pos:column="24"/></index></name> <operator pos:line="76" pos:column="25">=<pos:position pos:line="76" pos:column="26"/></operator> <literal type="char" pos:line="76" pos:column="27">'\0'<pos:position pos:line="76" pos:column="31"/></literal></expr>;<pos:position pos:line="76" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name pos:line="78" pos:column="5">done_processing<pos:position pos:line="78" pos:column="20"/></name> <operator pos:line="78" pos:column="21">=<pos:position pos:line="78" pos:column="22"/></operator> <call><name pos:line="78" pos:column="23">ProcessRequest<pos:position pos:line="78" pos:column="37"/></name><argument_list pos:line="78" pos:column="37">(<argument><expr><name pos:line="78" pos:column="38">req<pos:position pos:line="78" pos:column="41"/></name></expr></argument>)<pos:position pos:line="78" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="43"/></expr_stmt>
    <if pos:line="79" pos:column="5">if<condition pos:line="79" pos:column="7">(<expr><name pos:line="79" pos:column="8">got_exit_signal<pos:position pos:line="79" pos:column="23"/></name></expr>)<pos:position pos:line="79" pos:column="24"/></condition><then pos:line="79" pos:column="24">
      <block type="pseudo"><return pos:line="80" pos:column="7">return <expr><literal type="number" pos:line="80" pos:column="14">1<pos:position pos:line="80" pos:column="15"/></literal></expr>;<pos:position pos:line="80" pos:column="16"/></return></block></then></if>
    <if pos:line="81" pos:column="5">if<condition pos:line="81" pos:column="7">(<expr><name pos:line="81" pos:column="8">done_processing<pos:position pos:line="81" pos:column="23"/></name> <operator pos:line="81" pos:column="24">&amp;&amp;<pos:position pos:line="81" pos:column="34"/></operator> <name><name pos:line="81" pos:column="27">req<pos:position pos:line="81" pos:column="30"/></name><operator pos:line="81" pos:column="30">-&gt;<pos:position pos:line="81" pos:column="35"/></operator><name pos:line="81" pos:column="32">pipe<pos:position pos:line="81" pos:column="36"/></name></name></expr>)<pos:position pos:line="81" pos:column="37"/></condition><then pos:line="81" pos:column="37"> <block pos:line="81" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="82" pos:column="7">logmsg<pos:position pos:line="82" pos:column="13"/></name><argument_list pos:line="82" pos:column="13">(<argument><expr><literal type="string" pos:line="82" pos:column="14">"Waiting for another piped request"<pos:position pos:line="82" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="83" pos:column="7">done_processing<pos:position pos:line="83" pos:column="22"/></name> <operator pos:line="83" pos:column="23">=<pos:position pos:line="83" pos:column="24"/></operator> <literal type="number" pos:line="83" pos:column="25">0<pos:position pos:line="83" pos:column="26"/></literal></expr>;<pos:position pos:line="83" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="84" pos:column="7">req<pos:position pos:line="84" pos:column="10"/></name><operator pos:line="84" pos:column="10">-&gt;<pos:position pos:line="84" pos:column="15"/></operator><name pos:line="84" pos:column="12">pipe<pos:position pos:line="84" pos:column="16"/></name></name><operator pos:line="84" pos:column="16">--<pos:position pos:line="84" pos:column="18"/></operator></expr>;<pos:position pos:line="84" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>
  }<pos:position pos:line="86" pos:column="4"/></block></while>

  <if pos:line="88" pos:column="3">if<condition pos:line="88" pos:column="5">(<expr><operator pos:line="88" pos:column="6">(<pos:position pos:line="88" pos:column="7"/></operator><name><name pos:line="88" pos:column="7">req<pos:position pos:line="88" pos:column="10"/></name><operator pos:line="88" pos:column="10">-&gt;<pos:position pos:line="88" pos:column="15"/></operator><name pos:line="88" pos:column="12">offset<pos:position pos:line="88" pos:column="18"/></name></name> <operator pos:line="88" pos:column="19">==<pos:position pos:line="88" pos:column="21"/></operator> <name pos:line="88" pos:column="22">REQBUFSIZ<pos:position pos:line="88" pos:column="31"/></name><operator pos:line="88" pos:column="31">-<pos:position pos:line="88" pos:column="32"/></operator><literal type="number" pos:line="88" pos:column="32">1<pos:position pos:line="88" pos:column="33"/></literal><operator pos:line="88" pos:column="33">)<pos:position pos:line="88" pos:column="34"/></operator> <operator pos:line="88" pos:column="35">&amp;&amp;<pos:position pos:line="88" pos:column="45"/></operator> <operator pos:line="88" pos:column="38">(<pos:position pos:line="88" pos:column="39"/></operator><name pos:line="88" pos:column="39">got<pos:position pos:line="88" pos:column="42"/></name> <operator pos:line="88" pos:column="43">&gt;<pos:position pos:line="88" pos:column="47"/></operator> <literal type="number" pos:line="88" pos:column="45">0<pos:position pos:line="88" pos:column="46"/></literal><operator pos:line="88" pos:column="46">)<pos:position pos:line="88" pos:column="47"/></operator></expr>)<pos:position pos:line="88" pos:column="48"/></condition><then pos:line="88" pos:column="48"> <block pos:line="88" pos:column="49">{
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">logmsg<pos:position pos:line="89" pos:column="11"/></name><argument_list pos:line="89" pos:column="11">(<argument><expr><literal type="string" pos:line="89" pos:column="12">"Request would overflow buffer, closing connection"<pos:position pos:line="89" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="65"/></expr_stmt>
    <comment type="block" pos:line="90" pos:column="5">/* dump request received so far to external file anyway */</comment>
    <expr_stmt><expr><name><name pos:line="91" pos:column="5">reqbuf<pos:position pos:line="91" pos:column="11"/></name><index pos:line="91" pos:column="11">[<expr><name pos:line="91" pos:column="12">REQBUFSIZ<pos:position pos:line="91" pos:column="21"/></name><operator pos:line="91" pos:column="21">-<pos:position pos:line="91" pos:column="22"/></operator><literal type="number" pos:line="91" pos:column="22">1<pos:position pos:line="91" pos:column="23"/></literal></expr>]<pos:position pos:line="91" pos:column="24"/></index></name> <operator pos:line="91" pos:column="25">=<pos:position pos:line="91" pos:column="26"/></operator> <literal type="char" pos:line="91" pos:column="27">'\0'<pos:position pos:line="91" pos:column="31"/></literal></expr>;<pos:position pos:line="91" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="92" pos:column="5">fail<pos:position pos:line="92" pos:column="9"/></name> <operator pos:line="92" pos:column="10">=<pos:position pos:line="92" pos:column="11"/></operator> <literal type="number" pos:line="92" pos:column="12">1<pos:position pos:line="92" pos:column="13"/></literal></expr>;<pos:position pos:line="92" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="93" pos:column="4"/></block></then>
  <elseif pos:line="94" pos:column="3">else <if pos:line="94" pos:column="8">if<condition pos:line="94" pos:column="10">(<expr><name><name pos:line="94" pos:column="11">req<pos:position pos:line="94" pos:column="14"/></name><operator pos:line="94" pos:column="14">-&gt;<pos:position pos:line="94" pos:column="19"/></operator><name pos:line="94" pos:column="16">offset<pos:position pos:line="94" pos:column="22"/></name></name> <operator pos:line="94" pos:column="23">&gt;<pos:position pos:line="94" pos:column="27"/></operator> <name pos:line="94" pos:column="25">REQBUFSIZ<pos:position pos:line="94" pos:column="34"/></name><operator pos:line="94" pos:column="34">-<pos:position pos:line="94" pos:column="35"/></operator><literal type="number" pos:line="94" pos:column="35">1<pos:position pos:line="94" pos:column="36"/></literal></expr>)<pos:position pos:line="94" pos:column="37"/></condition><then pos:line="94" pos:column="37"> <block pos:line="94" pos:column="38">{
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">logmsg<pos:position pos:line="95" pos:column="11"/></name><argument_list pos:line="95" pos:column="11">(<argument><expr><literal type="string" pos:line="95" pos:column="12">"Request buffer overflow, closing connection"<pos:position pos:line="95" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="59"/></expr_stmt>
    <comment type="block" pos:line="96" pos:column="5">/* dump request received so far to external file anyway */</comment>
    <expr_stmt><expr><name><name pos:line="97" pos:column="5">reqbuf<pos:position pos:line="97" pos:column="11"/></name><index pos:line="97" pos:column="11">[<expr><name pos:line="97" pos:column="12">REQBUFSIZ<pos:position pos:line="97" pos:column="21"/></name><operator pos:line="97" pos:column="21">-<pos:position pos:line="97" pos:column="22"/></operator><literal type="number" pos:line="97" pos:column="22">1<pos:position pos:line="97" pos:column="23"/></literal></expr>]<pos:position pos:line="97" pos:column="24"/></index></name> <operator pos:line="97" pos:column="25">=<pos:position pos:line="97" pos:column="26"/></operator> <literal type="char" pos:line="97" pos:column="27">'\0'<pos:position pos:line="97" pos:column="31"/></literal></expr>;<pos:position pos:line="97" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="98" pos:column="5">fail<pos:position pos:line="98" pos:column="9"/></name> <operator pos:line="98" pos:column="10">=<pos:position pos:line="98" pos:column="11"/></operator> <literal type="number" pos:line="98" pos:column="12">1<pos:position pos:line="98" pos:column="13"/></literal></expr>;<pos:position pos:line="98" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="99" pos:column="4"/></block></then></if></elseif>
  <else pos:line="100" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="101" pos:column="5">reqbuf<pos:position pos:line="101" pos:column="11"/></name><index pos:line="101" pos:column="11">[<expr><name><name pos:line="101" pos:column="12">req<pos:position pos:line="101" pos:column="15"/></name><operator pos:line="101" pos:column="15">-&gt;<pos:position pos:line="101" pos:column="20"/></operator><name pos:line="101" pos:column="17">offset<pos:position pos:line="101" pos:column="23"/></name></name></expr>]<pos:position pos:line="101" pos:column="24"/></index></name> <operator pos:line="101" pos:column="25">=<pos:position pos:line="101" pos:column="26"/></operator> <literal type="char" pos:line="101" pos:column="27">'\0'<pos:position pos:line="101" pos:column="31"/></literal></expr>;<pos:position pos:line="101" pos:column="32"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="103" pos:column="3">/* dump the request to an external file */</comment>
  <expr_stmt><expr><call><name pos:line="104" pos:column="3">storerequest<pos:position pos:line="104" pos:column="15"/></name><argument_list pos:line="104" pos:column="15">(<argument><expr><name pos:line="104" pos:column="16">reqbuf<pos:position pos:line="104" pos:column="22"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="104" pos:column="24">req<pos:position pos:line="104" pos:column="27"/></name><operator pos:line="104" pos:column="27">-&gt;<pos:position pos:line="104" pos:column="32"/></operator><name pos:line="104" pos:column="29">pipelining<pos:position pos:line="104" pos:column="39"/></name></name></expr> ?<pos:position pos:line="104" pos:column="41"/></condition><then pos:line="104" pos:column="41"> <expr><name><name pos:line="104" pos:column="42">req<pos:position pos:line="104" pos:column="45"/></name><operator pos:line="104" pos:column="45">-&gt;<pos:position pos:line="104" pos:column="50"/></operator><name pos:line="104" pos:column="47">checkindex<pos:position pos:line="104" pos:column="57"/></name></name></expr> <pos:position pos:line="104" pos:column="58"/></then><else pos:line="104" pos:column="58">: <expr><name><name pos:line="104" pos:column="60">req<pos:position pos:line="104" pos:column="63"/></name><operator pos:line="104" pos:column="63">-&gt;<pos:position pos:line="104" pos:column="68"/></operator><name pos:line="104" pos:column="65">offset<pos:position pos:line="104" pos:column="71"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="104" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="73"/></expr_stmt>
  <if pos:line="105" pos:column="3">if<condition pos:line="105" pos:column="5">(<expr><name pos:line="105" pos:column="6">got_exit_signal<pos:position pos:line="105" pos:column="21"/></name></expr>)<pos:position pos:line="105" pos:column="22"/></condition><then pos:line="105" pos:column="22">
    <block type="pseudo"><return pos:line="106" pos:column="5">return <expr><literal type="number" pos:line="106" pos:column="12">1<pos:position pos:line="106" pos:column="13"/></literal></expr>;<pos:position pos:line="106" pos:column="14"/></return></block></then></if>

  <return pos:line="108" pos:column="3">return <expr><name pos:line="108" pos:column="10">fail<pos:position pos:line="108" pos:column="14"/></name></expr>;<pos:position pos:line="108" pos:column="15"/></return> <comment type="block" pos:line="108" pos:column="16">/* return 0 on success */</comment>
}<pos:position pos:line="109" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1406_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">http_output_basic<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">connectdata<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">conn<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">bool<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">proxy<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">size<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><literal type="number" pos:line="3" pos:column="17">0<pos:position pos:line="3" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">authorization<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">NULL<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Curl_easy<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">data<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">conn<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">data<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier><modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">userp<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">user<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">pwd<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">CURLcode<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">result<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">out<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">proxy<pos:position pos:line="12" pos:column="11"/></name></expr>)<pos:position pos:line="12" pos:column="12"/></condition><then pos:line="12" pos:column="12"> <block pos:line="12" pos:column="13">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">userp<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <operator pos:line="13" pos:column="13">&amp;<pos:position pos:line="13" pos:column="18"/></operator><name><name pos:line="13" pos:column="14">conn<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">allocptr<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">.<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">proxyuserpwd<pos:position pos:line="13" pos:column="41"/></name></name></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">user<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <name><name pos:line="14" pos:column="12">conn<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">http_proxy<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">.<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="29">user<pos:position pos:line="14" pos:column="33"/></name></name></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">pwd<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <name><name pos:line="15" pos:column="11">conn<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">http_proxy<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">.<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">passwd<pos:position pos:line="15" pos:column="34"/></name></name></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then>
  <else pos:line="17" pos:column="3">else <block pos:line="17" pos:column="8">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">userp<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <operator pos:line="18" pos:column="13">&amp;<pos:position pos:line="18" pos:column="18"/></operator><name><name pos:line="18" pos:column="14">conn<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">allocptr<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">.<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">userpwd<pos:position pos:line="18" pos:column="36"/></name></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">user<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <name><name pos:line="19" pos:column="12">conn<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">user<pos:position pos:line="19" pos:column="22"/></name></name></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">pwd<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <name><name pos:line="20" pos:column="11">conn<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">passwd<pos:position pos:line="20" pos:column="23"/></name></name></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="23" pos:column="3">out<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <call><name pos:line="23" pos:column="9">aprintf<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><literal type="string" pos:line="23" pos:column="17">"%s:%s"<pos:position pos:line="23" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="26">user<pos:position pos:line="23" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="32">pwd<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><operator pos:line="24" pos:column="6">!<pos:position pos:line="24" pos:column="7"/></operator><name pos:line="24" pos:column="7">out<pos:position pos:line="24" pos:column="10"/></name></expr>)<pos:position pos:line="24" pos:column="11"/></condition><then pos:line="24" pos:column="11">
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="25" pos:column="31"/></name></expr>;<pos:position pos:line="25" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="27" pos:column="3">result<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <call><name pos:line="27" pos:column="12">Curl_base64_encode<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">data<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="37">out<pos:position pos:line="27" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="42">strlen<pos:position pos:line="27" pos:column="48"/></name><argument_list pos:line="27" pos:column="48">(<argument><expr><name pos:line="27" pos:column="49">out<pos:position pos:line="27" pos:column="52"/></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="27" pos:column="55">&amp;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="56">authorization<pos:position pos:line="27" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="71">&amp;<pos:position pos:line="27" pos:column="76"/></operator><name pos:line="27" pos:column="72">size<pos:position pos:line="27" pos:column="76"/></name></expr></argument>)<pos:position pos:line="27" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="78"/></expr_stmt>
  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><name pos:line="28" pos:column="6">result<pos:position pos:line="28" pos:column="12"/></name></expr>)<pos:position pos:line="28" pos:column="13"/></condition><then pos:line="28" pos:column="13">
    <block type="pseudo"><goto pos:line="29" pos:column="5">goto <name pos:line="29" pos:column="10">fail<pos:position pos:line="29" pos:column="14"/></name>;<pos:position pos:line="29" pos:column="15"/></goto></block></then></if>

  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><operator pos:line="31" pos:column="6">!<pos:position pos:line="31" pos:column="7"/></operator><name pos:line="31" pos:column="7">authorization<pos:position pos:line="31" pos:column="20"/></name></expr>)<pos:position pos:line="31" pos:column="21"/></condition><then pos:line="31" pos:column="21"> <block pos:line="31" pos:column="22">{
    <expr_stmt><expr><name pos:line="32" pos:column="5">result<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <name pos:line="32" pos:column="14">CURLE_REMOTE_ACCESS_DENIED<pos:position pos:line="32" pos:column="40"/></name></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
    <goto pos:line="33" pos:column="5">goto <name pos:line="33" pos:column="10">fail<pos:position pos:line="33" pos:column="14"/></name>;<pos:position pos:line="33" pos:column="15"/></goto>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="36" pos:column="3">free<pos:position pos:line="36" pos:column="7"/></name><argument_list pos:line="36" pos:column="7">(<argument><expr><operator pos:line="36" pos:column="8">*<pos:position pos:line="36" pos:column="9"/></operator><name pos:line="36" pos:column="9">userp<pos:position pos:line="36" pos:column="14"/></name></expr></argument>)<pos:position pos:line="36" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="37" pos:column="3">*<pos:position pos:line="37" pos:column="4"/></operator><name pos:line="37" pos:column="4">userp<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <call><name pos:line="37" pos:column="12">aprintf<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><literal type="string" pos:line="37" pos:column="20">"%sAuthorization: Basic %s\r\n"<pos:position pos:line="37" pos:column="51"/></literal></expr></argument>,
                   <argument><expr><ternary><condition><expr><name pos:line="38" pos:column="20">proxy<pos:position pos:line="38" pos:column="25"/></name></expr> ?<pos:position pos:line="38" pos:column="27"/></condition><then pos:line="38" pos:column="27"> <expr><literal type="string" pos:line="38" pos:column="28">"Proxy-"<pos:position pos:line="38" pos:column="36"/></literal></expr> <pos:position pos:line="38" pos:column="37"/></then><else pos:line="38" pos:column="37">: <expr><literal type="string" pos:line="38" pos:column="39">""<pos:position pos:line="38" pos:column="41"/></literal></expr></else></ternary></expr></argument>,
                   <argument><expr><name pos:line="39" pos:column="20">authorization<pos:position pos:line="39" pos:column="33"/></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">free<pos:position pos:line="40" pos:column="7"/></name><argument_list pos:line="40" pos:column="7">(<argument><expr><name pos:line="40" pos:column="8">authorization<pos:position pos:line="40" pos:column="21"/></name></expr></argument>)<pos:position pos:line="40" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="23"/></expr_stmt>
  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><operator pos:line="41" pos:column="6">!<pos:position pos:line="41" pos:column="7"/></operator><operator pos:line="41" pos:column="7">*<pos:position pos:line="41" pos:column="8"/></operator><name pos:line="41" pos:column="8">userp<pos:position pos:line="41" pos:column="13"/></name></expr>)<pos:position pos:line="41" pos:column="14"/></condition><then pos:line="41" pos:column="14"> <block pos:line="41" pos:column="15">{
    <expr_stmt><expr><name pos:line="42" pos:column="5">result<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <name pos:line="42" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="42" pos:column="33"/></name></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt>
    <goto pos:line="43" pos:column="5">goto <name pos:line="43" pos:column="10">fail<pos:position pos:line="43" pos:column="14"/></name>;<pos:position pos:line="43" pos:column="15"/></goto>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <label><name pos:line="46" pos:column="3">fail<pos:position pos:line="46" pos:column="7"/></name>:<pos:position pos:line="46" pos:column="8"/></label>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">free<pos:position pos:line="47" pos:column="7"/></name><argument_list pos:line="47" pos:column="7">(<argument><expr><name pos:line="47" pos:column="8">out<pos:position pos:line="47" pos:column="11"/></name></expr></argument>)<pos:position pos:line="47" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="13"/></expr_stmt>
  <return pos:line="48" pos:column="3">return <expr><name pos:line="48" pos:column="10">result<pos:position pos:line="48" pos:column="16"/></name></expr>;<pos:position pos:line="48" pos:column="17"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

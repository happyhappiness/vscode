<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2054_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">Curl_ldap<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">bool<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">done<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">rc<pos:position pos:line="4" pos:column="9"/></name> <init pos:line="4" pos:column="10">= <expr><literal type="number" pos:line="4" pos:column="12">0<pos:position pos:line="4" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">LDAP<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">server<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">LDAPURLDesc<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">ludp<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">NULL<pos:position pos:line="6" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">LDAPMessage<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">ldapmsg<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">LDAPMessage<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">entryIterator<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">num<pos:position pos:line="9" pos:column="10"/></name> <init pos:line="9" pos:column="11">= <expr><literal type="number" pos:line="9" pos:column="13">0<pos:position pos:line="9" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">Curl_easy<pos:position pos:line="10" pos:column="19"/></name></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">data<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><name><name pos:line="10" pos:column="28">conn<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">data<pos:position pos:line="10" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">ldap_proto<pos:position pos:line="11" pos:column="17"/></name> <init pos:line="11" pos:column="18">= <expr><name pos:line="11" pos:column="20">LDAP_VERSION3<pos:position pos:line="11" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">ldap_ssl<pos:position pos:line="12" pos:column="15"/></name> <init pos:line="12" pos:column="16">= <expr><literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">val_b64<pos:position pos:line="13" pos:column="16"/></name> <init pos:line="13" pos:column="17">= <expr><name pos:line="13" pos:column="19">NULL<pos:position pos:line="13" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">size_t<pos:position pos:line="14" pos:column="9"/></name></type> <name pos:line="14" pos:column="10">val_b64_sz<pos:position pos:line="14" pos:column="20"/></name> <init pos:line="14" pos:column="21">= <expr><literal type="number" pos:line="14" pos:column="23">0<pos:position pos:line="14" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">curl_off_t<pos:position pos:line="15" pos:column="13"/></name></type> <name pos:line="15" pos:column="14">dlsize<pos:position pos:line="15" pos:column="20"/></name> <init pos:line="15" pos:column="21">= <expr><literal type="number" pos:line="15" pos:column="23">0<pos:position pos:line="15" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="25"/></decl_stmt>
<cpp:ifdef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifdef<pos:position pos:line="16" pos:column="7"/></cpp:directive> <name pos:line="16" pos:column="8">LDAP_OPT_NETWORK_TIMEOUT<pos:position pos:line="16" pos:column="32"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="17" pos:column="3">struct<pos:position pos:line="17" pos:column="9"/></name> <name pos:line="17" pos:column="10">timeval<pos:position pos:line="17" pos:column="17"/></name></name></type> <name pos:line="17" pos:column="18">ldap_timeout<pos:position pos:line="17" pos:column="30"/></name> <init pos:line="17" pos:column="31">= <expr><block pos:line="17" pos:column="33">{<expr><literal type="number" pos:line="17" pos:column="34">10<pos:position pos:line="17" pos:column="36"/></literal></expr>, <expr><literal type="number" pos:line="17" pos:column="38">0<pos:position pos:line="17" pos:column="39"/></literal></expr>}<pos:position pos:line="17" pos:column="40"/></block></expr></init></decl>;<pos:position pos:line="17" pos:column="41"/></decl_stmt> <comment type="block" pos:line="17" pos:column="42">/* 10 sec connection/search timeout */</comment>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><call><name pos:line="19" pos:column="5">defined<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="19" pos:column="27"/></name></expr></argument>)<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">TCHAR<pos:position pos:line="20" pos:column="8"/></name> <modifier pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></modifier></type><name pos:line="20" pos:column="10">host<pos:position pos:line="20" pos:column="14"/></name> <init pos:line="20" pos:column="15">= <expr><name pos:line="20" pos:column="17">NULL<pos:position pos:line="20" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="22"/></decl_stmt>
<cpp:else pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">else<pos:position pos:line="21" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">char<pos:position pos:line="22" pos:column="7"/></name> <modifier pos:line="22" pos:column="8">*<pos:position pos:line="22" pos:column="9"/></modifier></type><name pos:line="22" pos:column="9">host<pos:position pos:line="22" pos:column="13"/></name> <init pos:line="22" pos:column="14">= <expr><name pos:line="22" pos:column="16">NULL<pos:position pos:line="22" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="21"/></decl_stmt>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">char<pos:position pos:line="24" pos:column="7"/></name> <modifier pos:line="24" pos:column="8">*<pos:position pos:line="24" pos:column="9"/></modifier></type><name pos:line="24" pos:column="9">user<pos:position pos:line="24" pos:column="13"/></name> <init pos:line="24" pos:column="14">= <expr><name pos:line="24" pos:column="16">NULL<pos:position pos:line="24" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="25" pos:column="3">char<pos:position pos:line="25" pos:column="7"/></name> <modifier pos:line="25" pos:column="8">*<pos:position pos:line="25" pos:column="9"/></modifier></type><name pos:line="25" pos:column="9">passwd<pos:position pos:line="25" pos:column="15"/></name> <init pos:line="25" pos:column="16">= <expr><name pos:line="25" pos:column="18">NULL<pos:position pos:line="25" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="27" pos:column="3">*<pos:position pos:line="27" pos:column="4"/></operator><name pos:line="27" pos:column="4">done<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">=<pos:position pos:line="27" pos:column="10"/></operator> <name pos:line="27" pos:column="11">TRUE<pos:position pos:line="27" pos:column="15"/></name></expr>;<pos:position pos:line="27" pos:column="16"/></expr_stmt> <comment type="block" pos:line="27" pos:column="17">/* unconditionally */</comment>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">infof<pos:position pos:line="28" pos:column="8"/></name><argument_list pos:line="28" pos:column="8">(<argument><expr><name pos:line="28" pos:column="9">data<pos:position pos:line="28" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="15">"LDAP local: LDAP Vendor = %s ; LDAP Version = %d\n"<pos:position pos:line="28" pos:column="67"/></literal></expr></argument>,
          <argument><expr><name pos:line="29" pos:column="11">LDAP_VENDOR_NAME<pos:position pos:line="29" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="29">LDAP_VENDOR_VERSION<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">infof<pos:position pos:line="30" pos:column="8"/></name><argument_list pos:line="30" pos:column="8">(<argument><expr><name pos:line="30" pos:column="9">data<pos:position pos:line="30" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="15">"LDAP local: %s\n"<pos:position pos:line="30" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="35">data<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">change<pos:position pos:line="30" pos:column="47"/></name><operator pos:line="30" pos:column="47">.<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="48">url<pos:position pos:line="30" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>

<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef<pos:position pos:line="32" pos:column="7"/></cpp:directive> <name pos:line="32" pos:column="8">HAVE_LDAP_URL_PARSE<pos:position pos:line="32" pos:column="27"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="33" pos:column="3">rc<pos:position pos:line="33" pos:column="5"/></name> <operator pos:line="33" pos:column="6">=<pos:position pos:line="33" pos:column="7"/></operator> <call><name pos:line="33" pos:column="8">ldap_url_parse<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name><name pos:line="33" pos:column="23">data<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">change<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">.<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="36">url<pos:position pos:line="33" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="41">&amp;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="42">ludp<pos:position pos:line="33" pos:column="46"/></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
<cpp:else pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">else<pos:position pos:line="34" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="35" pos:column="3">rc<pos:position pos:line="35" pos:column="5"/></name> <operator pos:line="35" pos:column="6">=<pos:position pos:line="35" pos:column="7"/></operator> <call><name pos:line="35" pos:column="8">_ldap_url_parse<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">conn<pos:position pos:line="35" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="30">&amp;<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="31">ludp<pos:position pos:line="35" pos:column="35"/></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">(<expr><name pos:line="37" pos:column="6">rc<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">!=<pos:position pos:line="37" pos:column="11"/></operator> <literal type="number" pos:line="37" pos:column="12">0<pos:position pos:line="37" pos:column="13"/></literal></expr>)<pos:position pos:line="37" pos:column="14"/></condition><then pos:line="37" pos:column="14"> <block pos:line="37" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">failf<pos:position pos:line="38" pos:column="10"/></name><argument_list pos:line="38" pos:column="10">(<argument><expr><name pos:line="38" pos:column="11">data<pos:position pos:line="38" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="17">"LDAP local: %s"<pos:position pos:line="38" pos:column="33"/></literal></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="35">ldap_err2string<pos:position pos:line="38" pos:column="50"/></name><argument_list pos:line="38" pos:column="50">(<argument><expr><name pos:line="38" pos:column="51">rc<pos:position pos:line="38" pos:column="53"/></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">result<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <name pos:line="39" pos:column="14">CURLE_LDAP_INVALID_URL<pos:position pos:line="39" pos:column="36"/></name></expr>;<pos:position pos:line="39" pos:column="37"/></expr_stmt>
    <goto pos:line="40" pos:column="5">goto <name pos:line="40" pos:column="10">quit<pos:position pos:line="40" pos:column="14"/></name>;<pos:position pos:line="40" pos:column="15"/></goto>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="43" pos:column="3">/* Get the URL scheme (either ldap or ldaps) */</comment>
  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><name><name pos:line="44" pos:column="6">conn<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">given<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">-&gt;<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="19">flags<pos:position pos:line="44" pos:column="24"/></name></name> <operator pos:line="44" pos:column="25">&amp;<pos:position pos:line="44" pos:column="30"/></operator> <name pos:line="44" pos:column="27">PROTOPT_SSL<pos:position pos:line="44" pos:column="38"/></name></expr>)<pos:position pos:line="44" pos:column="39"/></condition><then pos:line="44" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="5">ldap_ssl<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <literal type="number" pos:line="45" pos:column="16">1<pos:position pos:line="45" pos:column="17"/></literal></expr>;<pos:position pos:line="45" pos:column="18"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">infof<pos:position pos:line="46" pos:column="8"/></name><argument_list pos:line="46" pos:column="8">(<argument><expr><name pos:line="46" pos:column="9">data<pos:position pos:line="46" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="15">"LDAP local: trying to establish %s connection\n"<pos:position pos:line="46" pos:column="64"/></literal></expr></argument>,
          <argument><expr><ternary><condition><expr><name pos:line="47" pos:column="11">ldap_ssl<pos:position pos:line="47" pos:column="19"/></name></expr> ?<pos:position pos:line="47" pos:column="21"/></condition><then pos:line="47" pos:column="21"> <expr><literal type="string" pos:line="47" pos:column="22">"encrypted"<pos:position pos:line="47" pos:column="33"/></literal></expr> <pos:position pos:line="47" pos:column="34"/></then><else pos:line="47" pos:column="34">: <expr><literal type="string" pos:line="47" pos:column="36">"cleartext"<pos:position pos:line="47" pos:column="47"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="47" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="49"/></expr_stmt>

<cpp:if pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">if<pos:position pos:line="49" pos:column="4"/></cpp:directive> <expr><call><name pos:line="49" pos:column="5">defined<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="49" pos:column="27"/></name></expr></argument>)<pos:position pos:line="49" pos:column="28"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><name pos:line="50" pos:column="3">host<pos:position pos:line="50" pos:column="7"/></name> <operator pos:line="50" pos:column="8">=<pos:position pos:line="50" pos:column="9"/></operator> <call><name pos:line="50" pos:column="10">Curl_convert_UTF8_to_tchar<pos:position pos:line="50" pos:column="36"/></name><argument_list pos:line="50" pos:column="36">(<argument><expr><name><name pos:line="50" pos:column="37">conn<pos:position pos:line="50" pos:column="41"/></name><operator pos:line="50" pos:column="41">-&gt;<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="43">host<pos:position pos:line="50" pos:column="47"/></name><operator pos:line="50" pos:column="47">.<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="48">name<pos:position pos:line="50" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="54"/></expr_stmt>
  <if pos:line="51" pos:column="3">if<condition pos:line="51" pos:column="5">(<expr><operator pos:line="51" pos:column="6">!<pos:position pos:line="51" pos:column="7"/></operator><name pos:line="51" pos:column="7">host<pos:position pos:line="51" pos:column="11"/></name></expr>)<pos:position pos:line="51" pos:column="12"/></condition><then pos:line="51" pos:column="12"> <block pos:line="51" pos:column="13">{
    <expr_stmt><expr><name pos:line="52" pos:column="5">result<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <name pos:line="52" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="52" pos:column="33"/></name></expr>;<pos:position pos:line="52" pos:column="34"/></expr_stmt>

    <goto pos:line="54" pos:column="5">goto <name pos:line="54" pos:column="10">quit<pos:position pos:line="54" pos:column="14"/></name>;<pos:position pos:line="54" pos:column="15"/></goto>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>
<cpp:else pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">else<pos:position pos:line="56" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="57" pos:column="3">host<pos:position pos:line="57" pos:column="7"/></name> <operator pos:line="57" pos:column="8">=<pos:position pos:line="57" pos:column="9"/></operator> <name><name pos:line="57" pos:column="10">conn<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">-&gt;<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="16">host<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">.<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="21">name<pos:position pos:line="57" pos:column="25"/></name></name></expr>;<pos:position pos:line="57" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="60" pos:column="3">if<condition pos:line="60" pos:column="5">(<expr><name><name pos:line="60" pos:column="6">conn<pos:position pos:line="60" pos:column="10"/></name><operator pos:line="60" pos:column="10">-&gt;<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="12">bits<pos:position pos:line="60" pos:column="16"/></name><operator pos:line="60" pos:column="16">.<pos:position pos:line="60" pos:column="17"/></operator><name pos:line="60" pos:column="17">user_passwd<pos:position pos:line="60" pos:column="28"/></name></name></expr>)<pos:position pos:line="60" pos:column="29"/></condition><then pos:line="60" pos:column="29"> <block pos:line="60" pos:column="30">{
    <expr_stmt><expr><name pos:line="61" pos:column="5">user<pos:position pos:line="61" pos:column="9"/></name> <operator pos:line="61" pos:column="10">=<pos:position pos:line="61" pos:column="11"/></operator> <name><name pos:line="61" pos:column="12">conn<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">-&gt;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="18">user<pos:position pos:line="61" pos:column="22"/></name></name></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="62" pos:column="5">passwd<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <name><name pos:line="62" pos:column="14">conn<pos:position pos:line="62" pos:column="18"/></name><operator pos:line="62" pos:column="18">-&gt;<pos:position pos:line="62" pos:column="23"/></operator><name pos:line="62" pos:column="20">passwd<pos:position pos:line="62" pos:column="26"/></name></name></expr>;<pos:position pos:line="62" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="63" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">ifdef<pos:position pos:line="65" pos:column="7"/></cpp:directive> <name pos:line="65" pos:column="8">LDAP_OPT_NETWORK_TIMEOUT<pos:position pos:line="65" pos:column="32"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="66" pos:column="3">ldap_set_option<pos:position pos:line="66" pos:column="18"/></name><argument_list pos:line="66" pos:column="18">(<argument><expr><name pos:line="66" pos:column="19">NULL<pos:position pos:line="66" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="25">LDAP_OPT_NETWORK_TIMEOUT<pos:position pos:line="66" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="51">&amp;<pos:position pos:line="66" pos:column="56"/></operator><name pos:line="66" pos:column="52">ldap_timeout<pos:position pos:line="66" pos:column="64"/></name></expr></argument>)<pos:position pos:line="66" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="66"/></expr_stmt>
<cpp:endif pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">endif<pos:position pos:line="67" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="68" pos:column="3">ldap_set_option<pos:position pos:line="68" pos:column="18"/></name><argument_list pos:line="68" pos:column="18">(<argument><expr><name pos:line="68" pos:column="19">NULL<pos:position pos:line="68" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="25">LDAP_OPT_PROTOCOL_VERSION<pos:position pos:line="68" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="52">&amp;<pos:position pos:line="68" pos:column="57"/></operator><name pos:line="68" pos:column="53">ldap_proto<pos:position pos:line="68" pos:column="63"/></name></expr></argument>)<pos:position pos:line="68" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="65"/></expr_stmt>

  <if pos:line="70" pos:column="3">if<condition pos:line="70" pos:column="5">(<expr><name pos:line="70" pos:column="6">ldap_ssl<pos:position pos:line="70" pos:column="14"/></name></expr>)<pos:position pos:line="70" pos:column="15"/></condition><then pos:line="70" pos:column="15"> <block pos:line="70" pos:column="16">{
<cpp:ifdef pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">ifdef<pos:position pos:line="71" pos:column="7"/></cpp:directive> <name pos:line="71" pos:column="8">HAVE_LDAP_SSL<pos:position pos:line="71" pos:column="21"/></name></cpp:ifdef>
<cpp:ifdef pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">ifdef<pos:position pos:line="72" pos:column="7"/></cpp:directive> <name pos:line="72" pos:column="8">USE_WIN32_LDAP<pos:position pos:line="72" pos:column="22"/></name></cpp:ifdef>
    <comment type="block" pos:line="73" pos:column="5">/* Win32 LDAP SDK doesn't support insecure mode without CA! */</comment>
    <expr_stmt><expr><name pos:line="74" pos:column="5">server<pos:position pos:line="74" pos:column="11"/></name> <operator pos:line="74" pos:column="12">=<pos:position pos:line="74" pos:column="13"/></operator> <call><name pos:line="74" pos:column="14">ldap_sslinit<pos:position pos:line="74" pos:column="26"/></name><argument_list pos:line="74" pos:column="26">(<argument><expr><name pos:line="74" pos:column="27">host<pos:position pos:line="74" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="33">(<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="34">int<pos:position pos:line="74" pos:column="37"/></name><operator pos:line="74" pos:column="37">)<pos:position pos:line="74" pos:column="38"/></operator><name><name pos:line="74" pos:column="38">conn<pos:position pos:line="74" pos:column="42"/></name><operator pos:line="74" pos:column="42">-&gt;<pos:position pos:line="74" pos:column="47"/></operator><name pos:line="74" pos:column="44">port<pos:position pos:line="74" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="50">1<pos:position pos:line="74" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">ldap_set_option<pos:position pos:line="75" pos:column="20"/></name><argument_list pos:line="75" pos:column="20">(<argument><expr><name pos:line="75" pos:column="21">server<pos:position pos:line="75" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="29">LDAP_OPT_SSL<pos:position pos:line="75" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="43">LDAP_OPT_ON<pos:position pos:line="75" pos:column="54"/></name></expr></argument>)<pos:position pos:line="75" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="56"/></expr_stmt>
<cpp:else pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">else<pos:position pos:line="76" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="77" pos:column="5">int<pos:position pos:line="77" pos:column="8"/></name></type> <name pos:line="77" pos:column="9">ldap_option<pos:position pos:line="77" pos:column="20"/></name></decl>;<pos:position pos:line="77" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="78" pos:column="5">char<pos:position pos:line="78" pos:column="9"/></name> <modifier pos:line="78" pos:column="10">*<pos:position pos:line="78" pos:column="11"/></modifier></type><name pos:line="78" pos:column="11">ldap_ca<pos:position pos:line="78" pos:column="18"/></name> <init pos:line="78" pos:column="19">= <expr><name><name pos:line="78" pos:column="21">conn<pos:position pos:line="78" pos:column="25"/></name><operator pos:line="78" pos:column="25">-&gt;<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="27">ssl_config<pos:position pos:line="78" pos:column="37"/></name><operator pos:line="78" pos:column="37">.<pos:position pos:line="78" pos:column="38"/></operator><name pos:line="78" pos:column="38">CAfile<pos:position pos:line="78" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="78" pos:column="45"/></decl_stmt>
<cpp:if pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">if<pos:position pos:line="79" pos:column="4"/></cpp:directive> <expr><call><name pos:line="79" pos:column="5">defined<pos:position pos:line="79" pos:column="12"/></name><argument_list pos:line="79" pos:column="12">(<argument><expr><name pos:line="79" pos:column="13">CURL_HAS_NOVELL_LDAPSDK<pos:position pos:line="79" pos:column="36"/></name></expr></argument>)<pos:position pos:line="79" pos:column="37"/></argument_list></call></expr></cpp:if>
    <expr_stmt><expr><name pos:line="80" pos:column="5">rc<pos:position pos:line="80" pos:column="7"/></name> <operator pos:line="80" pos:column="8">=<pos:position pos:line="80" pos:column="9"/></operator> <call><name pos:line="80" pos:column="10">ldapssl_client_init<pos:position pos:line="80" pos:column="29"/></name><argument_list pos:line="80" pos:column="29">(<argument><expr><name pos:line="80" pos:column="30">NULL<pos:position pos:line="80" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="36">NULL<pos:position pos:line="80" pos:column="40"/></name></expr></argument>)<pos:position pos:line="80" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="42"/></expr_stmt>
    <if pos:line="81" pos:column="5">if<condition pos:line="81" pos:column="7">(<expr><name pos:line="81" pos:column="8">rc<pos:position pos:line="81" pos:column="10"/></name> <operator pos:line="81" pos:column="11">!=<pos:position pos:line="81" pos:column="13"/></operator> <name pos:line="81" pos:column="14">LDAP_SUCCESS<pos:position pos:line="81" pos:column="26"/></name></expr>)<pos:position pos:line="81" pos:column="27"/></condition><then pos:line="81" pos:column="27"> <block pos:line="81" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="82" pos:column="7">failf<pos:position pos:line="82" pos:column="12"/></name><argument_list pos:line="82" pos:column="12">(<argument><expr><name pos:line="82" pos:column="13">data<pos:position pos:line="82" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="19">"LDAP local: ldapssl_client_init %s"<pos:position pos:line="82" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="82" pos:column="57">ldap_err2string<pos:position pos:line="82" pos:column="72"/></name><argument_list pos:line="82" pos:column="72">(<argument><expr><name pos:line="82" pos:column="73">rc<pos:position pos:line="82" pos:column="75"/></name></expr></argument>)<pos:position pos:line="82" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="78"/></expr_stmt>
      <expr_stmt><expr><name pos:line="83" pos:column="7">result<pos:position pos:line="83" pos:column="13"/></name> <operator pos:line="83" pos:column="14">=<pos:position pos:line="83" pos:column="15"/></operator> <name pos:line="83" pos:column="16">CURLE_SSL_CERTPROBLEM<pos:position pos:line="83" pos:column="37"/></name></expr>;<pos:position pos:line="83" pos:column="38"/></expr_stmt>
      <goto pos:line="84" pos:column="7">goto <name pos:line="84" pos:column="12">quit<pos:position pos:line="84" pos:column="16"/></name>;<pos:position pos:line="84" pos:column="17"/></goto>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>
    <if pos:line="86" pos:column="5">if<condition pos:line="86" pos:column="7">(<expr><name><name pos:line="86" pos:column="8">conn<pos:position pos:line="86" pos:column="12"/></name><operator pos:line="86" pos:column="12">-&gt;<pos:position pos:line="86" pos:column="17"/></operator><name pos:line="86" pos:column="14">ssl_config<pos:position pos:line="86" pos:column="24"/></name><operator pos:line="86" pos:column="24">.<pos:position pos:line="86" pos:column="25"/></operator><name pos:line="86" pos:column="25">verifypeer<pos:position pos:line="86" pos:column="35"/></name></name></expr>)<pos:position pos:line="86" pos:column="36"/></condition><then pos:line="86" pos:column="36"> <block pos:line="86" pos:column="37">{
      <comment type="block" pos:line="87" pos:column="7">/* Novell SDK supports DER or BASE64 files. */</comment>
      <decl_stmt><decl><type><name pos:line="88" pos:column="7">int<pos:position pos:line="88" pos:column="10"/></name></type> <name pos:line="88" pos:column="11">cert_type<pos:position pos:line="88" pos:column="20"/></name> <init pos:line="88" pos:column="21">= <expr><name pos:line="88" pos:column="23">LDAPSSL_CERT_FILETYPE_B64<pos:position pos:line="88" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="88" pos:column="49"/></decl_stmt>
      <if pos:line="89" pos:column="7">if<condition pos:line="89" pos:column="9">(<expr><operator pos:line="89" pos:column="10">(<pos:position pos:line="89" pos:column="11"/></operator><name><name pos:line="89" pos:column="11">data<pos:position pos:line="89" pos:column="15"/></name><operator pos:line="89" pos:column="15">-&gt;<pos:position pos:line="89" pos:column="20"/></operator><name pos:line="89" pos:column="17">set<pos:position pos:line="89" pos:column="20"/></name><operator pos:line="89" pos:column="20">.<pos:position pos:line="89" pos:column="21"/></operator><name pos:line="89" pos:column="21">ssl<pos:position pos:line="89" pos:column="24"/></name><operator pos:line="89" pos:column="24">.<pos:position pos:line="89" pos:column="25"/></operator><name pos:line="89" pos:column="25">cert_type<pos:position pos:line="89" pos:column="34"/></name></name><operator pos:line="89" pos:column="34">)<pos:position pos:line="89" pos:column="35"/></operator> <operator pos:line="89" pos:column="36">&amp;&amp;<pos:position pos:line="89" pos:column="46"/></operator>
         <operator pos:line="90" pos:column="10">(<pos:position pos:line="90" pos:column="11"/></operator><call><name pos:line="90" pos:column="11">strcasecompare<pos:position pos:line="90" pos:column="25"/></name><argument_list pos:line="90" pos:column="25">(<argument><expr><name><name pos:line="90" pos:column="26">data<pos:position pos:line="90" pos:column="30"/></name><operator pos:line="90" pos:column="30">-&gt;<pos:position pos:line="90" pos:column="35"/></operator><name pos:line="90" pos:column="32">set<pos:position pos:line="90" pos:column="35"/></name><operator pos:line="90" pos:column="35">.<pos:position pos:line="90" pos:column="36"/></operator><name pos:line="90" pos:column="36">ssl<pos:position pos:line="90" pos:column="39"/></name><operator pos:line="90" pos:column="39">.<pos:position pos:line="90" pos:column="40"/></operator><name pos:line="90" pos:column="40">cert_type<pos:position pos:line="90" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="51">"DER"<pos:position pos:line="90" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="57"/></argument_list></call><operator pos:line="90" pos:column="57">)<pos:position pos:line="90" pos:column="58"/></operator></expr>)<pos:position pos:line="90" pos:column="59"/></condition><then pos:line="90" pos:column="59">
        <block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="9">cert_type<pos:position pos:line="91" pos:column="18"/></name> <operator pos:line="91" pos:column="19">=<pos:position pos:line="91" pos:column="20"/></operator> <name pos:line="91" pos:column="21">LDAPSSL_CERT_FILETYPE_DER<pos:position pos:line="91" pos:column="46"/></name></expr>;<pos:position pos:line="91" pos:column="47"/></expr_stmt></block></then></if>
      <if pos:line="92" pos:column="7">if<condition pos:line="92" pos:column="9">(<expr><operator pos:line="92" pos:column="10">!<pos:position pos:line="92" pos:column="11"/></operator><name pos:line="92" pos:column="11">ldap_ca<pos:position pos:line="92" pos:column="18"/></name></expr>)<pos:position pos:line="92" pos:column="19"/></condition><then pos:line="92" pos:column="19"> <block pos:line="92" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">failf<pos:position pos:line="93" pos:column="14"/></name><argument_list pos:line="93" pos:column="14">(<argument><expr><name pos:line="93" pos:column="15">data<pos:position pos:line="93" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="21">"LDAP local: ERROR %s CA cert not set!"<pos:position pos:line="93" pos:column="60"/></literal></expr></argument>,
              <argument><expr><operator pos:line="94" pos:column="15">(<pos:position pos:line="94" pos:column="16"/></operator><ternary><condition><expr><name pos:line="94" pos:column="16">cert_type<pos:position pos:line="94" pos:column="25"/></name> <operator pos:line="94" pos:column="26">==<pos:position pos:line="94" pos:column="28"/></operator> <name pos:line="94" pos:column="29">LDAPSSL_CERT_FILETYPE_DER<pos:position pos:line="94" pos:column="54"/></name></expr> ?<pos:position pos:line="94" pos:column="56"/></condition><then pos:line="94" pos:column="56"> <expr><literal type="string" pos:line="94" pos:column="57">"DER"<pos:position pos:line="94" pos:column="62"/></literal></expr> <pos:position pos:line="94" pos:column="63"/></then><else pos:line="94" pos:column="63">: <expr><literal type="string" pos:line="94" pos:column="65">"PEM"<pos:position pos:line="94" pos:column="70"/></literal></expr></else></ternary><operator pos:line="94" pos:column="70">)<pos:position pos:line="94" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="94" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name pos:line="95" pos:column="9">result<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">=<pos:position pos:line="95" pos:column="17"/></operator> <name pos:line="95" pos:column="18">CURLE_SSL_CERTPROBLEM<pos:position pos:line="95" pos:column="39"/></name></expr>;<pos:position pos:line="95" pos:column="40"/></expr_stmt>
        <goto pos:line="96" pos:column="9">goto <name pos:line="96" pos:column="14">quit<pos:position pos:line="96" pos:column="18"/></name>;<pos:position pos:line="96" pos:column="19"/></goto>
      }<pos:position pos:line="97" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">infof<pos:position pos:line="98" pos:column="12"/></name><argument_list pos:line="98" pos:column="12">(<argument><expr><name pos:line="98" pos:column="13">data<pos:position pos:line="98" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="19">"LDAP local: using %s CA cert '%s'\n"<pos:position pos:line="98" pos:column="56"/></literal></expr></argument>,
              <argument><expr><operator pos:line="99" pos:column="15">(<pos:position pos:line="99" pos:column="16"/></operator><ternary><condition><expr><name pos:line="99" pos:column="16">cert_type<pos:position pos:line="99" pos:column="25"/></name> <operator pos:line="99" pos:column="26">==<pos:position pos:line="99" pos:column="28"/></operator> <name pos:line="99" pos:column="29">LDAPSSL_CERT_FILETYPE_DER<pos:position pos:line="99" pos:column="54"/></name></expr> ?<pos:position pos:line="99" pos:column="56"/></condition><then pos:line="99" pos:column="56"> <expr><literal type="string" pos:line="99" pos:column="57">"DER"<pos:position pos:line="99" pos:column="62"/></literal></expr> <pos:position pos:line="99" pos:column="63"/></then><else pos:line="99" pos:column="63">: <expr><literal type="string" pos:line="99" pos:column="65">"PEM"<pos:position pos:line="99" pos:column="70"/></literal></expr></else></ternary><operator pos:line="99" pos:column="70">)<pos:position pos:line="99" pos:column="71"/></operator></expr></argument>,
              <argument><expr><name pos:line="100" pos:column="15">ldap_ca<pos:position pos:line="100" pos:column="22"/></name></expr></argument>)<pos:position pos:line="100" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="101" pos:column="7">rc<pos:position pos:line="101" pos:column="9"/></name> <operator pos:line="101" pos:column="10">=<pos:position pos:line="101" pos:column="11"/></operator> <call><name pos:line="101" pos:column="12">ldapssl_add_trusted_cert<pos:position pos:line="101" pos:column="36"/></name><argument_list pos:line="101" pos:column="36">(<argument><expr><name pos:line="101" pos:column="37">ldap_ca<pos:position pos:line="101" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="46">cert_type<pos:position pos:line="101" pos:column="55"/></name></expr></argument>)<pos:position pos:line="101" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="57"/></expr_stmt>
      <if pos:line="102" pos:column="7">if<condition pos:line="102" pos:column="9">(<expr><name pos:line="102" pos:column="10">rc<pos:position pos:line="102" pos:column="12"/></name> <operator pos:line="102" pos:column="13">!=<pos:position pos:line="102" pos:column="15"/></operator> <name pos:line="102" pos:column="16">LDAP_SUCCESS<pos:position pos:line="102" pos:column="28"/></name></expr>)<pos:position pos:line="102" pos:column="29"/></condition><then pos:line="102" pos:column="29"> <block pos:line="102" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="103" pos:column="9">failf<pos:position pos:line="103" pos:column="14"/></name><argument_list pos:line="103" pos:column="14">(<argument><expr><name pos:line="103" pos:column="15">data<pos:position pos:line="103" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="21">"LDAP local: ERROR setting %s CA cert: %s"<pos:position pos:line="103" pos:column="63"/></literal></expr></argument>,
                <argument><expr><operator pos:line="104" pos:column="17">(<pos:position pos:line="104" pos:column="18"/></operator><ternary><condition><expr><name pos:line="104" pos:column="18">cert_type<pos:position pos:line="104" pos:column="27"/></name> <operator pos:line="104" pos:column="28">==<pos:position pos:line="104" pos:column="30"/></operator> <name pos:line="104" pos:column="31">LDAPSSL_CERT_FILETYPE_DER<pos:position pos:line="104" pos:column="56"/></name></expr> ?<pos:position pos:line="104" pos:column="58"/></condition><then pos:line="104" pos:column="58"> <expr><literal type="string" pos:line="104" pos:column="59">"DER"<pos:position pos:line="104" pos:column="64"/></literal></expr> <pos:position pos:line="104" pos:column="65"/></then><else pos:line="104" pos:column="65">: <expr><literal type="string" pos:line="104" pos:column="67">"PEM"<pos:position pos:line="104" pos:column="72"/></literal></expr></else></ternary><operator pos:line="104" pos:column="72">)<pos:position pos:line="104" pos:column="73"/></operator></expr></argument>,
                <argument><expr><call><name pos:line="105" pos:column="17">ldap_err2string<pos:position pos:line="105" pos:column="32"/></name><argument_list pos:line="105" pos:column="32">(<argument><expr><name pos:line="105" pos:column="33">rc<pos:position pos:line="105" pos:column="35"/></name></expr></argument>)<pos:position pos:line="105" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="105" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="106" pos:column="9">result<pos:position pos:line="106" pos:column="15"/></name> <operator pos:line="106" pos:column="16">=<pos:position pos:line="106" pos:column="17"/></operator> <name pos:line="106" pos:column="18">CURLE_SSL_CERTPROBLEM<pos:position pos:line="106" pos:column="39"/></name></expr>;<pos:position pos:line="106" pos:column="40"/></expr_stmt>
        <goto pos:line="107" pos:column="9">goto <name pos:line="107" pos:column="14">quit<pos:position pos:line="107" pos:column="18"/></name>;<pos:position pos:line="107" pos:column="19"/></goto>
      }<pos:position pos:line="108" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="109" pos:column="7">ldap_option<pos:position pos:line="109" pos:column="18"/></name> <operator pos:line="109" pos:column="19">=<pos:position pos:line="109" pos:column="20"/></operator> <name pos:line="109" pos:column="21">LDAPSSL_VERIFY_SERVER<pos:position pos:line="109" pos:column="42"/></name></expr>;<pos:position pos:line="109" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="110" pos:column="6"/></block></then>
    <else pos:line="111" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="112" pos:column="7">ldap_option<pos:position pos:line="112" pos:column="18"/></name> <operator pos:line="112" pos:column="19">=<pos:position pos:line="112" pos:column="20"/></operator> <name pos:line="112" pos:column="21">LDAPSSL_VERIFY_NONE<pos:position pos:line="112" pos:column="40"/></name></expr>;<pos:position pos:line="112" pos:column="41"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name pos:line="113" pos:column="5">rc<pos:position pos:line="113" pos:column="7"/></name> <operator pos:line="113" pos:column="8">=<pos:position pos:line="113" pos:column="9"/></operator> <call><name pos:line="113" pos:column="10">ldapssl_set_verify_mode<pos:position pos:line="113" pos:column="33"/></name><argument_list pos:line="113" pos:column="33">(<argument><expr><name pos:line="113" pos:column="34">ldap_option<pos:position pos:line="113" pos:column="45"/></name></expr></argument>)<pos:position pos:line="113" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="47"/></expr_stmt>
    <if pos:line="114" pos:column="5">if<condition pos:line="114" pos:column="7">(<expr><name pos:line="114" pos:column="8">rc<pos:position pos:line="114" pos:column="10"/></name> <operator pos:line="114" pos:column="11">!=<pos:position pos:line="114" pos:column="13"/></operator> <name pos:line="114" pos:column="14">LDAP_SUCCESS<pos:position pos:line="114" pos:column="26"/></name></expr>)<pos:position pos:line="114" pos:column="27"/></condition><then pos:line="114" pos:column="27"> <block pos:line="114" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="115" pos:column="7">failf<pos:position pos:line="115" pos:column="12"/></name><argument_list pos:line="115" pos:column="12">(<argument><expr><name pos:line="115" pos:column="13">data<pos:position pos:line="115" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="19">"LDAP local: ERROR setting cert verify mode: %s"<pos:position pos:line="115" pos:column="67"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="116" pos:column="15">ldap_err2string<pos:position pos:line="116" pos:column="30"/></name><argument_list pos:line="116" pos:column="30">(<argument><expr><name pos:line="116" pos:column="31">rc<pos:position pos:line="116" pos:column="33"/></name></expr></argument>)<pos:position pos:line="116" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="116" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name pos:line="117" pos:column="7">result<pos:position pos:line="117" pos:column="13"/></name> <operator pos:line="117" pos:column="14">=<pos:position pos:line="117" pos:column="15"/></operator> <name pos:line="117" pos:column="16">CURLE_SSL_CERTPROBLEM<pos:position pos:line="117" pos:column="37"/></name></expr>;<pos:position pos:line="117" pos:column="38"/></expr_stmt>
      <goto pos:line="118" pos:column="7">goto <name pos:line="118" pos:column="12">quit<pos:position pos:line="118" pos:column="16"/></name>;<pos:position pos:line="118" pos:column="17"/></goto>
    }<pos:position pos:line="119" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="120" pos:column="5">server<pos:position pos:line="120" pos:column="11"/></name> <operator pos:line="120" pos:column="12">=<pos:position pos:line="120" pos:column="13"/></operator> <call><name pos:line="120" pos:column="14">ldapssl_init<pos:position pos:line="120" pos:column="26"/></name><argument_list pos:line="120" pos:column="26">(<argument><expr><name pos:line="120" pos:column="27">host<pos:position pos:line="120" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="120" pos:column="33">(<pos:position pos:line="120" pos:column="34"/></operator><name pos:line="120" pos:column="34">int<pos:position pos:line="120" pos:column="37"/></name><operator pos:line="120" pos:column="37">)<pos:position pos:line="120" pos:column="38"/></operator><name><name pos:line="120" pos:column="38">conn<pos:position pos:line="120" pos:column="42"/></name><operator pos:line="120" pos:column="42">-&gt;<pos:position pos:line="120" pos:column="47"/></operator><name pos:line="120" pos:column="44">port<pos:position pos:line="120" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="120" pos:column="50">1<pos:position pos:line="120" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="53"/></expr_stmt>
    <if pos:line="121" pos:column="5">if<condition pos:line="121" pos:column="7">(<expr><name pos:line="121" pos:column="8">server<pos:position pos:line="121" pos:column="14"/></name> <operator pos:line="121" pos:column="15">==<pos:position pos:line="121" pos:column="17"/></operator> <name pos:line="121" pos:column="18">NULL<pos:position pos:line="121" pos:column="22"/></name></expr>)<pos:position pos:line="121" pos:column="23"/></condition><then pos:line="121" pos:column="23"> <block pos:line="121" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="122" pos:column="7">failf<pos:position pos:line="122" pos:column="12"/></name><argument_list pos:line="122" pos:column="12">(<argument><expr><name pos:line="122" pos:column="13">data<pos:position pos:line="122" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="19">"LDAP local: Cannot connect to %s:%ld"<pos:position pos:line="122" pos:column="57"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="123" pos:column="13">conn<pos:position pos:line="123" pos:column="17"/></name><operator pos:line="123" pos:column="17">-&gt;<pos:position pos:line="123" pos:column="22"/></operator><name pos:line="123" pos:column="19">host<pos:position pos:line="123" pos:column="23"/></name><operator pos:line="123" pos:column="23">.<pos:position pos:line="123" pos:column="24"/></operator><name pos:line="123" pos:column="24">dispname<pos:position pos:line="123" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="123" pos:column="34">conn<pos:position pos:line="123" pos:column="38"/></name><operator pos:line="123" pos:column="38">-&gt;<pos:position pos:line="123" pos:column="43"/></operator><name pos:line="123" pos:column="40">port<pos:position pos:line="123" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><name pos:line="124" pos:column="7">result<pos:position pos:line="124" pos:column="13"/></name> <operator pos:line="124" pos:column="14">=<pos:position pos:line="124" pos:column="15"/></operator> <name pos:line="124" pos:column="16">CURLE_COULDNT_CONNECT<pos:position pos:line="124" pos:column="37"/></name></expr>;<pos:position pos:line="124" pos:column="38"/></expr_stmt>
      <goto pos:line="125" pos:column="7">goto <name pos:line="125" pos:column="12">quit<pos:position pos:line="125" pos:column="16"/></name>;<pos:position pos:line="125" pos:column="17"/></goto>
    }<pos:position pos:line="126" pos:column="6"/></block></then></if>
<cpp:elif pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">elif<pos:position pos:line="127" pos:column="6"/></cpp:directive> <expr><call><name pos:line="127" pos:column="7">defined<pos:position pos:line="127" pos:column="14"/></name><argument_list pos:line="127" pos:column="14">(<argument><expr><name pos:line="127" pos:column="15">LDAP_OPT_X_TLS<pos:position pos:line="127" pos:column="29"/></name></expr></argument>)<pos:position pos:line="127" pos:column="30"/></argument_list></call></expr></cpp:elif>
    <if pos:line="128" pos:column="5">if<condition pos:line="128" pos:column="7">(<expr><name><name pos:line="128" pos:column="8">conn<pos:position pos:line="128" pos:column="12"/></name><operator pos:line="128" pos:column="12">-&gt;<pos:position pos:line="128" pos:column="17"/></operator><name pos:line="128" pos:column="14">ssl_config<pos:position pos:line="128" pos:column="24"/></name><operator pos:line="128" pos:column="24">.<pos:position pos:line="128" pos:column="25"/></operator><name pos:line="128" pos:column="25">verifypeer<pos:position pos:line="128" pos:column="35"/></name></name></expr>)<pos:position pos:line="128" pos:column="36"/></condition><then pos:line="128" pos:column="36"> <block pos:line="128" pos:column="37">{
      <comment type="block" pos:line="129" pos:column="7">/* OpenLDAP SDK supports BASE64 files. */</comment>
      <if pos:line="130" pos:column="7">if<condition pos:line="130" pos:column="9">(<expr><operator pos:line="130" pos:column="10">(<pos:position pos:line="130" pos:column="11"/></operator><name><name pos:line="130" pos:column="11">data<pos:position pos:line="130" pos:column="15"/></name><operator pos:line="130" pos:column="15">-&gt;<pos:position pos:line="130" pos:column="20"/></operator><name pos:line="130" pos:column="17">set<pos:position pos:line="130" pos:column="20"/></name><operator pos:line="130" pos:column="20">.<pos:position pos:line="130" pos:column="21"/></operator><name pos:line="130" pos:column="21">ssl<pos:position pos:line="130" pos:column="24"/></name><operator pos:line="130" pos:column="24">.<pos:position pos:line="130" pos:column="25"/></operator><name pos:line="130" pos:column="25">cert_type<pos:position pos:line="130" pos:column="34"/></name></name><operator pos:line="130" pos:column="34">)<pos:position pos:line="130" pos:column="35"/></operator> <operator pos:line="130" pos:column="36">&amp;&amp;<pos:position pos:line="130" pos:column="46"/></operator>
         <operator pos:line="131" pos:column="10">(<pos:position pos:line="131" pos:column="11"/></operator><operator pos:line="131" pos:column="11">!<pos:position pos:line="131" pos:column="12"/></operator><call><name pos:line="131" pos:column="12">strcasecompare<pos:position pos:line="131" pos:column="26"/></name><argument_list pos:line="131" pos:column="26">(<argument><expr><name><name pos:line="131" pos:column="27">data<pos:position pos:line="131" pos:column="31"/></name><operator pos:line="131" pos:column="31">-&gt;<pos:position pos:line="131" pos:column="36"/></operator><name pos:line="131" pos:column="33">set<pos:position pos:line="131" pos:column="36"/></name><operator pos:line="131" pos:column="36">.<pos:position pos:line="131" pos:column="37"/></operator><name pos:line="131" pos:column="37">ssl<pos:position pos:line="131" pos:column="40"/></name><operator pos:line="131" pos:column="40">.<pos:position pos:line="131" pos:column="41"/></operator><name pos:line="131" pos:column="41">cert_type<pos:position pos:line="131" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="52">"PEM"<pos:position pos:line="131" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="58"/></argument_list></call><operator pos:line="131" pos:column="58">)<pos:position pos:line="131" pos:column="59"/></operator></expr>)<pos:position pos:line="131" pos:column="60"/></condition><then pos:line="131" pos:column="60"> <block pos:line="131" pos:column="61">{
        <expr_stmt><expr><call><name pos:line="132" pos:column="9">failf<pos:position pos:line="132" pos:column="14"/></name><argument_list pos:line="132" pos:column="14">(<argument><expr><name pos:line="132" pos:column="15">data<pos:position pos:line="132" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="21">"LDAP local: ERROR OpenLDAP only supports PEM cert-type!"<pos:position pos:line="132" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><name pos:line="133" pos:column="9">result<pos:position pos:line="133" pos:column="15"/></name> <operator pos:line="133" pos:column="16">=<pos:position pos:line="133" pos:column="17"/></operator> <name pos:line="133" pos:column="18">CURLE_SSL_CERTPROBLEM<pos:position pos:line="133" pos:column="39"/></name></expr>;<pos:position pos:line="133" pos:column="40"/></expr_stmt>
        <goto pos:line="134" pos:column="9">goto <name pos:line="134" pos:column="14">quit<pos:position pos:line="134" pos:column="18"/></name>;<pos:position pos:line="134" pos:column="19"/></goto>
      }<pos:position pos:line="135" pos:column="8"/></block></then></if>
      <if pos:line="136" pos:column="7">if<condition pos:line="136" pos:column="9">(<expr><operator pos:line="136" pos:column="10">!<pos:position pos:line="136" pos:column="11"/></operator><name pos:line="136" pos:column="11">ldap_ca<pos:position pos:line="136" pos:column="18"/></name></expr>)<pos:position pos:line="136" pos:column="19"/></condition><then pos:line="136" pos:column="19"> <block pos:line="136" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="137" pos:column="9">failf<pos:position pos:line="137" pos:column="14"/></name><argument_list pos:line="137" pos:column="14">(<argument><expr><name pos:line="137" pos:column="15">data<pos:position pos:line="137" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="21">"LDAP local: ERROR PEM CA cert not set!"<pos:position pos:line="137" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><name pos:line="138" pos:column="9">result<pos:position pos:line="138" pos:column="15"/></name> <operator pos:line="138" pos:column="16">=<pos:position pos:line="138" pos:column="17"/></operator> <name pos:line="138" pos:column="18">CURLE_SSL_CERTPROBLEM<pos:position pos:line="138" pos:column="39"/></name></expr>;<pos:position pos:line="138" pos:column="40"/></expr_stmt>
        <goto pos:line="139" pos:column="9">goto <name pos:line="139" pos:column="14">quit<pos:position pos:line="139" pos:column="18"/></name>;<pos:position pos:line="139" pos:column="19"/></goto>
      }<pos:position pos:line="140" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="141" pos:column="7">infof<pos:position pos:line="141" pos:column="12"/></name><argument_list pos:line="141" pos:column="12">(<argument><expr><name pos:line="141" pos:column="13">data<pos:position pos:line="141" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="19">"LDAP local: using PEM CA cert: %s\n"<pos:position pos:line="141" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="141" pos:column="58">ldap_ca<pos:position pos:line="141" pos:column="65"/></name></expr></argument>)<pos:position pos:line="141" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><name pos:line="142" pos:column="7">rc<pos:position pos:line="142" pos:column="9"/></name> <operator pos:line="142" pos:column="10">=<pos:position pos:line="142" pos:column="11"/></operator> <call><name pos:line="142" pos:column="12">ldap_set_option<pos:position pos:line="142" pos:column="27"/></name><argument_list pos:line="142" pos:column="27">(<argument><expr><name pos:line="142" pos:column="28">NULL<pos:position pos:line="142" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="34">LDAP_OPT_X_TLS_CACERTFILE<pos:position pos:line="142" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="61">ldap_ca<pos:position pos:line="142" pos:column="68"/></name></expr></argument>)<pos:position pos:line="142" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="70"/></expr_stmt>
      <if pos:line="143" pos:column="7">if<condition pos:line="143" pos:column="9">(<expr><name pos:line="143" pos:column="10">rc<pos:position pos:line="143" pos:column="12"/></name> <operator pos:line="143" pos:column="13">!=<pos:position pos:line="143" pos:column="15"/></operator> <name pos:line="143" pos:column="16">LDAP_SUCCESS<pos:position pos:line="143" pos:column="28"/></name></expr>)<pos:position pos:line="143" pos:column="29"/></condition><then pos:line="143" pos:column="29"> <block pos:line="143" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="144" pos:column="9">failf<pos:position pos:line="144" pos:column="14"/></name><argument_list pos:line="144" pos:column="14">(<argument><expr><name pos:line="144" pos:column="15">data<pos:position pos:line="144" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="21">"LDAP local: ERROR setting PEM CA cert: %s"<pos:position pos:line="144" pos:column="64"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="145" pos:column="17">ldap_err2string<pos:position pos:line="145" pos:column="32"/></name><argument_list pos:line="145" pos:column="32">(<argument><expr><name pos:line="145" pos:column="33">rc<pos:position pos:line="145" pos:column="35"/></name></expr></argument>)<pos:position pos:line="145" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="145" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="146" pos:column="9">result<pos:position pos:line="146" pos:column="15"/></name> <operator pos:line="146" pos:column="16">=<pos:position pos:line="146" pos:column="17"/></operator> <name pos:line="146" pos:column="18">CURLE_SSL_CERTPROBLEM<pos:position pos:line="146" pos:column="39"/></name></expr>;<pos:position pos:line="146" pos:column="40"/></expr_stmt>
        <goto pos:line="147" pos:column="9">goto <name pos:line="147" pos:column="14">quit<pos:position pos:line="147" pos:column="18"/></name>;<pos:position pos:line="147" pos:column="19"/></goto>
      }<pos:position pos:line="148" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="149" pos:column="7">ldap_option<pos:position pos:line="149" pos:column="18"/></name> <operator pos:line="149" pos:column="19">=<pos:position pos:line="149" pos:column="20"/></operator> <name pos:line="149" pos:column="21">LDAP_OPT_X_TLS_DEMAND<pos:position pos:line="149" pos:column="42"/></name></expr>;<pos:position pos:line="149" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="150" pos:column="6"/></block></then>
    <else pos:line="151" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="152" pos:column="7">ldap_option<pos:position pos:line="152" pos:column="18"/></name> <operator pos:line="152" pos:column="19">=<pos:position pos:line="152" pos:column="20"/></operator> <name pos:line="152" pos:column="21">LDAP_OPT_X_TLS_NEVER<pos:position pos:line="152" pos:column="41"/></name></expr>;<pos:position pos:line="152" pos:column="42"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="154" pos:column="5">rc<pos:position pos:line="154" pos:column="7"/></name> <operator pos:line="154" pos:column="8">=<pos:position pos:line="154" pos:column="9"/></operator> <call><name pos:line="154" pos:column="10">ldap_set_option<pos:position pos:line="154" pos:column="25"/></name><argument_list pos:line="154" pos:column="25">(<argument><expr><name pos:line="154" pos:column="26">NULL<pos:position pos:line="154" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="32">LDAP_OPT_X_TLS_REQUIRE_CERT<pos:position pos:line="154" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="154" pos:column="61">&amp;<pos:position pos:line="154" pos:column="66"/></operator><name pos:line="154" pos:column="62">ldap_option<pos:position pos:line="154" pos:column="73"/></name></expr></argument>)<pos:position pos:line="154" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="75"/></expr_stmt>
    <if pos:line="155" pos:column="5">if<condition pos:line="155" pos:column="7">(<expr><name pos:line="155" pos:column="8">rc<pos:position pos:line="155" pos:column="10"/></name> <operator pos:line="155" pos:column="11">!=<pos:position pos:line="155" pos:column="13"/></operator> <name pos:line="155" pos:column="14">LDAP_SUCCESS<pos:position pos:line="155" pos:column="26"/></name></expr>)<pos:position pos:line="155" pos:column="27"/></condition><then pos:line="155" pos:column="27"> <block pos:line="155" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="156" pos:column="7">failf<pos:position pos:line="156" pos:column="12"/></name><argument_list pos:line="156" pos:column="12">(<argument><expr><name pos:line="156" pos:column="13">data<pos:position pos:line="156" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="19">"LDAP local: ERROR setting cert verify mode: %s"<pos:position pos:line="156" pos:column="67"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="157" pos:column="15">ldap_err2string<pos:position pos:line="157" pos:column="30"/></name><argument_list pos:line="157" pos:column="30">(<argument><expr><name pos:line="157" pos:column="31">rc<pos:position pos:line="157" pos:column="33"/></name></expr></argument>)<pos:position pos:line="157" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="157" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name pos:line="158" pos:column="7">result<pos:position pos:line="158" pos:column="13"/></name> <operator pos:line="158" pos:column="14">=<pos:position pos:line="158" pos:column="15"/></operator> <name pos:line="158" pos:column="16">CURLE_SSL_CERTPROBLEM<pos:position pos:line="158" pos:column="37"/></name></expr>;<pos:position pos:line="158" pos:column="38"/></expr_stmt>
      <goto pos:line="159" pos:column="7">goto <name pos:line="159" pos:column="12">quit<pos:position pos:line="159" pos:column="16"/></name>;<pos:position pos:line="159" pos:column="17"/></goto>
    }<pos:position pos:line="160" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="161" pos:column="5">server<pos:position pos:line="161" pos:column="11"/></name> <operator pos:line="161" pos:column="12">=<pos:position pos:line="161" pos:column="13"/></operator> <call><name pos:line="161" pos:column="14">ldap_init<pos:position pos:line="161" pos:column="23"/></name><argument_list pos:line="161" pos:column="23">(<argument><expr><name pos:line="161" pos:column="24">host<pos:position pos:line="161" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="161" pos:column="30">(<pos:position pos:line="161" pos:column="31"/></operator><name pos:line="161" pos:column="31">int<pos:position pos:line="161" pos:column="34"/></name><operator pos:line="161" pos:column="34">)<pos:position pos:line="161" pos:column="35"/></operator><name><name pos:line="161" pos:column="35">conn<pos:position pos:line="161" pos:column="39"/></name><operator pos:line="161" pos:column="39">-&gt;<pos:position pos:line="161" pos:column="44"/></operator><name pos:line="161" pos:column="41">port<pos:position pos:line="161" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="161" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="47"/></expr_stmt>
    <if pos:line="162" pos:column="5">if<condition pos:line="162" pos:column="7">(<expr><name pos:line="162" pos:column="8">server<pos:position pos:line="162" pos:column="14"/></name> <operator pos:line="162" pos:column="15">==<pos:position pos:line="162" pos:column="17"/></operator> <name pos:line="162" pos:column="18">NULL<pos:position pos:line="162" pos:column="22"/></name></expr>)<pos:position pos:line="162" pos:column="23"/></condition><then pos:line="162" pos:column="23"> <block pos:line="162" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="163" pos:column="7">failf<pos:position pos:line="163" pos:column="12"/></name><argument_list pos:line="163" pos:column="12">(<argument><expr><name pos:line="163" pos:column="13">data<pos:position pos:line="163" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="19">"LDAP local: Cannot connect to %s:%ld"<pos:position pos:line="163" pos:column="57"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="164" pos:column="13">conn<pos:position pos:line="164" pos:column="17"/></name><operator pos:line="164" pos:column="17">-&gt;<pos:position pos:line="164" pos:column="22"/></operator><name pos:line="164" pos:column="19">host<pos:position pos:line="164" pos:column="23"/></name><operator pos:line="164" pos:column="23">.<pos:position pos:line="164" pos:column="24"/></operator><name pos:line="164" pos:column="24">dispname<pos:position pos:line="164" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="164" pos:column="34">conn<pos:position pos:line="164" pos:column="38"/></name><operator pos:line="164" pos:column="38">-&gt;<pos:position pos:line="164" pos:column="43"/></operator><name pos:line="164" pos:column="40">port<pos:position pos:line="164" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="164" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><name pos:line="165" pos:column="7">result<pos:position pos:line="165" pos:column="13"/></name> <operator pos:line="165" pos:column="14">=<pos:position pos:line="165" pos:column="15"/></operator> <name pos:line="165" pos:column="16">CURLE_COULDNT_CONNECT<pos:position pos:line="165" pos:column="37"/></name></expr>;<pos:position pos:line="165" pos:column="38"/></expr_stmt>
      <goto pos:line="166" pos:column="7">goto <name pos:line="166" pos:column="12">quit<pos:position pos:line="166" pos:column="16"/></name>;<pos:position pos:line="166" pos:column="17"/></goto>
    }<pos:position pos:line="167" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="168" pos:column="5">ldap_option<pos:position pos:line="168" pos:column="16"/></name> <operator pos:line="168" pos:column="17">=<pos:position pos:line="168" pos:column="18"/></operator> <name pos:line="168" pos:column="19">LDAP_OPT_X_TLS_HARD<pos:position pos:line="168" pos:column="38"/></name></expr>;<pos:position pos:line="168" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="169" pos:column="5">rc<pos:position pos:line="169" pos:column="7"/></name> <operator pos:line="169" pos:column="8">=<pos:position pos:line="169" pos:column="9"/></operator> <call><name pos:line="169" pos:column="10">ldap_set_option<pos:position pos:line="169" pos:column="25"/></name><argument_list pos:line="169" pos:column="25">(<argument><expr><name pos:line="169" pos:column="26">server<pos:position pos:line="169" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="34">LDAP_OPT_X_TLS<pos:position pos:line="169" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="169" pos:column="50">&amp;<pos:position pos:line="169" pos:column="55"/></operator><name pos:line="169" pos:column="51">ldap_option<pos:position pos:line="169" pos:column="62"/></name></expr></argument>)<pos:position pos:line="169" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="64"/></expr_stmt>
    <if pos:line="170" pos:column="5">if<condition pos:line="170" pos:column="7">(<expr><name pos:line="170" pos:column="8">rc<pos:position pos:line="170" pos:column="10"/></name> <operator pos:line="170" pos:column="11">!=<pos:position pos:line="170" pos:column="13"/></operator> <name pos:line="170" pos:column="14">LDAP_SUCCESS<pos:position pos:line="170" pos:column="26"/></name></expr>)<pos:position pos:line="170" pos:column="27"/></condition><then pos:line="170" pos:column="27"> <block pos:line="170" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="171" pos:column="7">failf<pos:position pos:line="171" pos:column="12"/></name><argument_list pos:line="171" pos:column="12">(<argument><expr><name pos:line="171" pos:column="13">data<pos:position pos:line="171" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="19">"LDAP local: ERROR setting SSL/TLS mode: %s"<pos:position pos:line="171" pos:column="63"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="172" pos:column="15">ldap_err2string<pos:position pos:line="172" pos:column="30"/></name><argument_list pos:line="172" pos:column="30">(<argument><expr><name pos:line="172" pos:column="31">rc<pos:position pos:line="172" pos:column="33"/></name></expr></argument>)<pos:position pos:line="172" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="172" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name pos:line="173" pos:column="7">result<pos:position pos:line="173" pos:column="13"/></name> <operator pos:line="173" pos:column="14">=<pos:position pos:line="173" pos:column="15"/></operator> <name pos:line="173" pos:column="16">CURLE_SSL_CERTPROBLEM<pos:position pos:line="173" pos:column="37"/></name></expr>;<pos:position pos:line="173" pos:column="38"/></expr_stmt>
      <goto pos:line="174" pos:column="7">goto <name pos:line="174" pos:column="12">quit<pos:position pos:line="174" pos:column="16"/></name>;<pos:position pos:line="174" pos:column="17"/></goto>
    }<pos:position pos:line="175" pos:column="6"/></block></then></if>
<comment type="block" pos:line="176" pos:column="1">/*
    rc = ldap_start_tls_s(server, NULL, NULL);
    if(rc != LDAP_SUCCESS) {
      failf(data, "LDAP local: ERROR starting SSL/TLS mode: %s",
              ldap_err2string(rc));
      result = CURLE_SSL_CERTPROBLEM;
      goto quit;
    }
*/</comment>
<cpp:else pos:line="185" pos:column="1">#<cpp:directive pos:line="185" pos:column="2">else<pos:position pos:line="185" pos:column="6"/></cpp:directive></cpp:else>
    <comment type="block" pos:line="186" pos:column="5">/* we should probably never come up to here since configure
       should check in first place if we can support LDAP SSL/TLS */</comment>
    <expr_stmt><expr><call><name pos:line="188" pos:column="5">failf<pos:position pos:line="188" pos:column="10"/></name><argument_list pos:line="188" pos:column="10">(<argument><expr><name pos:line="188" pos:column="11">data<pos:position pos:line="188" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="188" pos:column="17">"LDAP local: SSL/TLS not supported with this version "<pos:position pos:line="188" pos:column="71"/></literal>
            <literal type="string" pos:line="189" pos:column="13">"of the OpenLDAP toolkit\n"<pos:position pos:line="189" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="189" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="190" pos:column="5">result<pos:position pos:line="190" pos:column="11"/></name> <operator pos:line="190" pos:column="12">=<pos:position pos:line="190" pos:column="13"/></operator> <name pos:line="190" pos:column="14">CURLE_SSL_CERTPROBLEM<pos:position pos:line="190" pos:column="35"/></name></expr>;<pos:position pos:line="190" pos:column="36"/></expr_stmt>
    <goto pos:line="191" pos:column="5">goto <name pos:line="191" pos:column="10">quit<pos:position pos:line="191" pos:column="14"/></name>;<pos:position pos:line="191" pos:column="15"/></goto>
<cpp:endif pos:line="192" pos:column="1">#<cpp:directive pos:line="192" pos:column="2">endif<pos:position pos:line="192" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="193" pos:column="1">#<cpp:directive pos:line="193" pos:column="2">endif<pos:position pos:line="193" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="194" pos:column="1">#<cpp:directive pos:line="194" pos:column="2">endif<pos:position pos:line="194" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="194" pos:column="8">/* CURL_LDAP_USE_SSL */</comment>
  }<pos:position pos:line="195" pos:column="4"/></block></then>
  <else pos:line="196" pos:column="3">else <block pos:line="196" pos:column="8">{
    <expr_stmt><expr><name pos:line="197" pos:column="5">server<pos:position pos:line="197" pos:column="11"/></name> <operator pos:line="197" pos:column="12">=<pos:position pos:line="197" pos:column="13"/></operator> <call><name pos:line="197" pos:column="14">ldap_init<pos:position pos:line="197" pos:column="23"/></name><argument_list pos:line="197" pos:column="23">(<argument><expr><name pos:line="197" pos:column="24">host<pos:position pos:line="197" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="197" pos:column="30">(<pos:position pos:line="197" pos:column="31"/></operator><name pos:line="197" pos:column="31">int<pos:position pos:line="197" pos:column="34"/></name><operator pos:line="197" pos:column="34">)<pos:position pos:line="197" pos:column="35"/></operator><name><name pos:line="197" pos:column="35">conn<pos:position pos:line="197" pos:column="39"/></name><operator pos:line="197" pos:column="39">-&gt;<pos:position pos:line="197" pos:column="44"/></operator><name pos:line="197" pos:column="41">port<pos:position pos:line="197" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="197" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="47"/></expr_stmt>
    <if pos:line="198" pos:column="5">if<condition pos:line="198" pos:column="7">(<expr><name pos:line="198" pos:column="8">server<pos:position pos:line="198" pos:column="14"/></name> <operator pos:line="198" pos:column="15">==<pos:position pos:line="198" pos:column="17"/></operator> <name pos:line="198" pos:column="18">NULL<pos:position pos:line="198" pos:column="22"/></name></expr>)<pos:position pos:line="198" pos:column="23"/></condition><then pos:line="198" pos:column="23"> <block pos:line="198" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="199" pos:column="7">failf<pos:position pos:line="199" pos:column="12"/></name><argument_list pos:line="199" pos:column="12">(<argument><expr><name pos:line="199" pos:column="13">data<pos:position pos:line="199" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="199" pos:column="19">"LDAP local: Cannot connect to %s:%ld"<pos:position pos:line="199" pos:column="57"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="200" pos:column="13">conn<pos:position pos:line="200" pos:column="17"/></name><operator pos:line="200" pos:column="17">-&gt;<pos:position pos:line="200" pos:column="22"/></operator><name pos:line="200" pos:column="19">host<pos:position pos:line="200" pos:column="23"/></name><operator pos:line="200" pos:column="23">.<pos:position pos:line="200" pos:column="24"/></operator><name pos:line="200" pos:column="24">dispname<pos:position pos:line="200" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="200" pos:column="34">conn<pos:position pos:line="200" pos:column="38"/></name><operator pos:line="200" pos:column="38">-&gt;<pos:position pos:line="200" pos:column="43"/></operator><name pos:line="200" pos:column="40">port<pos:position pos:line="200" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="200" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><name pos:line="201" pos:column="7">result<pos:position pos:line="201" pos:column="13"/></name> <operator pos:line="201" pos:column="14">=<pos:position pos:line="201" pos:column="15"/></operator> <name pos:line="201" pos:column="16">CURLE_COULDNT_CONNECT<pos:position pos:line="201" pos:column="37"/></name></expr>;<pos:position pos:line="201" pos:column="38"/></expr_stmt>
      <goto pos:line="202" pos:column="7">goto <name pos:line="202" pos:column="12">quit<pos:position pos:line="202" pos:column="16"/></name>;<pos:position pos:line="202" pos:column="17"/></goto>
    }<pos:position pos:line="203" pos:column="6"/></block></then></if>
  }<pos:position pos:line="204" pos:column="4"/></block></else></if>
<cpp:ifdef pos:line="205" pos:column="1">#<cpp:directive pos:line="205" pos:column="2">ifdef<pos:position pos:line="205" pos:column="7"/></cpp:directive> <name pos:line="205" pos:column="8">USE_WIN32_LDAP<pos:position pos:line="205" pos:column="22"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="206" pos:column="3">ldap_set_option<pos:position pos:line="206" pos:column="18"/></name><argument_list pos:line="206" pos:column="18">(<argument><expr><name pos:line="206" pos:column="19">server<pos:position pos:line="206" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="27">LDAP_OPT_PROTOCOL_VERSION<pos:position pos:line="206" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="206" pos:column="54">&amp;<pos:position pos:line="206" pos:column="59"/></operator><name pos:line="206" pos:column="55">ldap_proto<pos:position pos:line="206" pos:column="65"/></name></expr></argument>)<pos:position pos:line="206" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="67"/></expr_stmt>
<cpp:endif pos:line="207" pos:column="1">#<cpp:directive pos:line="207" pos:column="2">endif<pos:position pos:line="207" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="209" pos:column="1">#<cpp:directive pos:line="209" pos:column="2">ifdef<pos:position pos:line="209" pos:column="7"/></cpp:directive> <name pos:line="209" pos:column="8">USE_WIN32_LDAP<pos:position pos:line="209" pos:column="22"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="210" pos:column="3">rc<pos:position pos:line="210" pos:column="5"/></name> <operator pos:line="210" pos:column="6">=<pos:position pos:line="210" pos:column="7"/></operator> <call><name pos:line="210" pos:column="8">ldap_win_bind<pos:position pos:line="210" pos:column="21"/></name><argument_list pos:line="210" pos:column="21">(<argument><expr><name pos:line="210" pos:column="22">conn<pos:position pos:line="210" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="28">server<pos:position pos:line="210" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="36">user<pos:position pos:line="210" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="42">passwd<pos:position pos:line="210" pos:column="48"/></name></expr></argument>)<pos:position pos:line="210" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="50"/></expr_stmt>
<cpp:else pos:line="211" pos:column="1">#<cpp:directive pos:line="211" pos:column="2">else<pos:position pos:line="211" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="212" pos:column="3">rc<pos:position pos:line="212" pos:column="5"/></name> <operator pos:line="212" pos:column="6">=<pos:position pos:line="212" pos:column="7"/></operator> <call><name pos:line="212" pos:column="8">ldap_simple_bind_s<pos:position pos:line="212" pos:column="26"/></name><argument_list pos:line="212" pos:column="26">(<argument><expr><name pos:line="212" pos:column="27">server<pos:position pos:line="212" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="35">user<pos:position pos:line="212" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="41">passwd<pos:position pos:line="212" pos:column="47"/></name></expr></argument>)<pos:position pos:line="212" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="213" pos:column="1">#<cpp:directive pos:line="213" pos:column="2">endif<pos:position pos:line="213" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="214" pos:column="3">if<condition pos:line="214" pos:column="5">(<expr><operator pos:line="214" pos:column="6">!<pos:position pos:line="214" pos:column="7"/></operator><name pos:line="214" pos:column="7">ldap_ssl<pos:position pos:line="214" pos:column="15"/></name> <operator pos:line="214" pos:column="16">&amp;&amp;<pos:position pos:line="214" pos:column="26"/></operator> <name pos:line="214" pos:column="19">rc<pos:position pos:line="214" pos:column="21"/></name> <operator pos:line="214" pos:column="22">!=<pos:position pos:line="214" pos:column="24"/></operator> <literal type="number" pos:line="214" pos:column="25">0<pos:position pos:line="214" pos:column="26"/></literal></expr>)<pos:position pos:line="214" pos:column="27"/></condition><then pos:line="214" pos:column="27"> <block pos:line="214" pos:column="28">{
    <expr_stmt><expr><name pos:line="215" pos:column="5">ldap_proto<pos:position pos:line="215" pos:column="15"/></name> <operator pos:line="215" pos:column="16">=<pos:position pos:line="215" pos:column="17"/></operator> <name pos:line="215" pos:column="18">LDAP_VERSION2<pos:position pos:line="215" pos:column="31"/></name></expr>;<pos:position pos:line="215" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="216" pos:column="5">ldap_set_option<pos:position pos:line="216" pos:column="20"/></name><argument_list pos:line="216" pos:column="20">(<argument><expr><name pos:line="216" pos:column="21">server<pos:position pos:line="216" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="29">LDAP_OPT_PROTOCOL_VERSION<pos:position pos:line="216" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="216" pos:column="56">&amp;<pos:position pos:line="216" pos:column="61"/></operator><name pos:line="216" pos:column="57">ldap_proto<pos:position pos:line="216" pos:column="67"/></name></expr></argument>)<pos:position pos:line="216" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="69"/></expr_stmt>
<cpp:ifdef pos:line="217" pos:column="1">#<cpp:directive pos:line="217" pos:column="2">ifdef<pos:position pos:line="217" pos:column="7"/></cpp:directive> <name pos:line="217" pos:column="8">USE_WIN32_LDAP<pos:position pos:line="217" pos:column="22"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="218" pos:column="5">rc<pos:position pos:line="218" pos:column="7"/></name> <operator pos:line="218" pos:column="8">=<pos:position pos:line="218" pos:column="9"/></operator> <call><name pos:line="218" pos:column="10">ldap_win_bind<pos:position pos:line="218" pos:column="23"/></name><argument_list pos:line="218" pos:column="23">(<argument><expr><name pos:line="218" pos:column="24">conn<pos:position pos:line="218" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="30">server<pos:position pos:line="218" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="38">user<pos:position pos:line="218" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="44">passwd<pos:position pos:line="218" pos:column="50"/></name></expr></argument>)<pos:position pos:line="218" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="52"/></expr_stmt>
<cpp:else pos:line="219" pos:column="1">#<cpp:directive pos:line="219" pos:column="2">else<pos:position pos:line="219" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="220" pos:column="5">rc<pos:position pos:line="220" pos:column="7"/></name> <operator pos:line="220" pos:column="8">=<pos:position pos:line="220" pos:column="9"/></operator> <call><name pos:line="220" pos:column="10">ldap_simple_bind_s<pos:position pos:line="220" pos:column="28"/></name><argument_list pos:line="220" pos:column="28">(<argument><expr><name pos:line="220" pos:column="29">server<pos:position pos:line="220" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="220" pos:column="37">user<pos:position pos:line="220" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="220" pos:column="43">passwd<pos:position pos:line="220" pos:column="49"/></name></expr></argument>)<pos:position pos:line="220" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="221" pos:column="1">#<cpp:directive pos:line="221" pos:column="2">endif<pos:position pos:line="221" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="222" pos:column="4"/></block></then></if>
  <if pos:line="223" pos:column="3">if<condition pos:line="223" pos:column="5">(<expr><name pos:line="223" pos:column="6">rc<pos:position pos:line="223" pos:column="8"/></name> <operator pos:line="223" pos:column="9">!=<pos:position pos:line="223" pos:column="11"/></operator> <literal type="number" pos:line="223" pos:column="12">0<pos:position pos:line="223" pos:column="13"/></literal></expr>)<pos:position pos:line="223" pos:column="14"/></condition><then pos:line="223" pos:column="14"> <block pos:line="223" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="224" pos:column="5">failf<pos:position pos:line="224" pos:column="10"/></name><argument_list pos:line="224" pos:column="10">(<argument><expr><name pos:line="224" pos:column="11">data<pos:position pos:line="224" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="224" pos:column="17">"LDAP local: ldap_simple_bind_s %s"<pos:position pos:line="224" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="224" pos:column="54">ldap_err2string<pos:position pos:line="224" pos:column="69"/></name><argument_list pos:line="224" pos:column="69">(<argument><expr><name pos:line="224" pos:column="70">rc<pos:position pos:line="224" pos:column="72"/></name></expr></argument>)<pos:position pos:line="224" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="224" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><name pos:line="225" pos:column="5">result<pos:position pos:line="225" pos:column="11"/></name> <operator pos:line="225" pos:column="12">=<pos:position pos:line="225" pos:column="13"/></operator> <name pos:line="225" pos:column="14">CURLE_LDAP_CANNOT_BIND<pos:position pos:line="225" pos:column="36"/></name></expr>;<pos:position pos:line="225" pos:column="37"/></expr_stmt>
    <goto pos:line="226" pos:column="5">goto <name pos:line="226" pos:column="10">quit<pos:position pos:line="226" pos:column="14"/></name>;<pos:position pos:line="226" pos:column="15"/></goto>
  }<pos:position pos:line="227" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="229" pos:column="3">rc<pos:position pos:line="229" pos:column="5"/></name> <operator pos:line="229" pos:column="6">=<pos:position pos:line="229" pos:column="7"/></operator> <call><name pos:line="229" pos:column="8">ldap_search_s<pos:position pos:line="229" pos:column="21"/></name><argument_list pos:line="229" pos:column="21">(<argument><expr><name pos:line="229" pos:column="22">server<pos:position pos:line="229" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="229" pos:column="30">ludp<pos:position pos:line="229" pos:column="34"/></name><operator pos:line="229" pos:column="34">-&gt;<pos:position pos:line="229" pos:column="39"/></operator><name pos:line="229" pos:column="36">lud_dn<pos:position pos:line="229" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="229" pos:column="44">ludp<pos:position pos:line="229" pos:column="48"/></name><operator pos:line="229" pos:column="48">-&gt;<pos:position pos:line="229" pos:column="53"/></operator><name pos:line="229" pos:column="50">lud_scope<pos:position pos:line="229" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><name><name pos:line="230" pos:column="22">ludp<pos:position pos:line="230" pos:column="26"/></name><operator pos:line="230" pos:column="26">-&gt;<pos:position pos:line="230" pos:column="31"/></operator><name pos:line="230" pos:column="28">lud_filter<pos:position pos:line="230" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="230" pos:column="40">ludp<pos:position pos:line="230" pos:column="44"/></name><operator pos:line="230" pos:column="44">-&gt;<pos:position pos:line="230" pos:column="49"/></operator><name pos:line="230" pos:column="46">lud_attrs<pos:position pos:line="230" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="230" pos:column="57">0<pos:position pos:line="230" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="230" pos:column="60">&amp;<pos:position pos:line="230" pos:column="65"/></operator><name pos:line="230" pos:column="61">ldapmsg<pos:position pos:line="230" pos:column="68"/></name></expr></argument>)<pos:position pos:line="230" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="70"/></expr_stmt>

  <if pos:line="232" pos:column="3">if<condition pos:line="232" pos:column="5">(<expr><name pos:line="232" pos:column="6">rc<pos:position pos:line="232" pos:column="8"/></name> <operator pos:line="232" pos:column="9">!=<pos:position pos:line="232" pos:column="11"/></operator> <literal type="number" pos:line="232" pos:column="12">0<pos:position pos:line="232" pos:column="13"/></literal> <operator pos:line="232" pos:column="14">&amp;&amp;<pos:position pos:line="232" pos:column="24"/></operator> <name pos:line="232" pos:column="17">rc<pos:position pos:line="232" pos:column="19"/></name> <operator pos:line="232" pos:column="20">!=<pos:position pos:line="232" pos:column="22"/></operator> <name pos:line="232" pos:column="23">LDAP_SIZELIMIT_EXCEEDED<pos:position pos:line="232" pos:column="46"/></name></expr>)<pos:position pos:line="232" pos:column="47"/></condition><then pos:line="232" pos:column="47"> <block pos:line="232" pos:column="48">{
    <expr_stmt><expr><call><name pos:line="233" pos:column="5">failf<pos:position pos:line="233" pos:column="10"/></name><argument_list pos:line="233" pos:column="10">(<argument><expr><name pos:line="233" pos:column="11">data<pos:position pos:line="233" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="233" pos:column="17">"LDAP remote: %s"<pos:position pos:line="233" pos:column="34"/></literal></expr></argument>, <argument><expr><call><name pos:line="233" pos:column="36">ldap_err2string<pos:position pos:line="233" pos:column="51"/></name><argument_list pos:line="233" pos:column="51">(<argument><expr><name pos:line="233" pos:column="52">rc<pos:position pos:line="233" pos:column="54"/></name></expr></argument>)<pos:position pos:line="233" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="233" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="234" pos:column="5">result<pos:position pos:line="234" pos:column="11"/></name> <operator pos:line="234" pos:column="12">=<pos:position pos:line="234" pos:column="13"/></operator> <name pos:line="234" pos:column="14">CURLE_LDAP_SEARCH_FAILED<pos:position pos:line="234" pos:column="38"/></name></expr>;<pos:position pos:line="234" pos:column="39"/></expr_stmt>
    <goto pos:line="235" pos:column="5">goto <name pos:line="235" pos:column="10">quit<pos:position pos:line="235" pos:column="14"/></name>;<pos:position pos:line="235" pos:column="15"/></goto>
  }<pos:position pos:line="236" pos:column="4"/></block></then></if>

  <for pos:line="238" pos:column="3">for<control pos:line="238" pos:column="6">(<init><expr><name pos:line="238" pos:column="7">num<pos:position pos:line="238" pos:column="10"/></name> <operator pos:line="238" pos:column="11">=<pos:position pos:line="238" pos:column="12"/></operator> <literal type="number" pos:line="238" pos:column="13">0<pos:position pos:line="238" pos:column="14"/></literal></expr><operator pos:line="238" pos:column="14">,<pos:position pos:line="238" pos:column="15"/></operator> <expr><name pos:line="238" pos:column="16">entryIterator<pos:position pos:line="238" pos:column="29"/></name> <operator pos:line="238" pos:column="30">=<pos:position pos:line="238" pos:column="31"/></operator> <call><name pos:line="238" pos:column="32">ldap_first_entry<pos:position pos:line="238" pos:column="48"/></name><argument_list pos:line="238" pos:column="48">(<argument><expr><name pos:line="238" pos:column="49">server<pos:position pos:line="238" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="57">ldapmsg<pos:position pos:line="238" pos:column="64"/></name></expr></argument>)<pos:position pos:line="238" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="66"/></init>
      <condition><expr><name pos:line="239" pos:column="7">entryIterator<pos:position pos:line="239" pos:column="20"/></name></expr>;<pos:position pos:line="239" pos:column="21"/></condition>
      <incr><expr><name pos:line="240" pos:column="7">entryIterator<pos:position pos:line="240" pos:column="20"/></name> <operator pos:line="240" pos:column="21">=<pos:position pos:line="240" pos:column="22"/></operator> <call><name pos:line="240" pos:column="23">ldap_next_entry<pos:position pos:line="240" pos:column="38"/></name><argument_list pos:line="240" pos:column="38">(<argument><expr><name pos:line="240" pos:column="39">server<pos:position pos:line="240" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="240" pos:column="47">entryIterator<pos:position pos:line="240" pos:column="60"/></name></expr></argument>)<pos:position pos:line="240" pos:column="61"/></argument_list></call></expr><operator pos:line="240" pos:column="61">,<pos:position pos:line="240" pos:column="62"/></operator> <expr><name pos:line="240" pos:column="63">num<pos:position pos:line="240" pos:column="66"/></name><operator pos:line="240" pos:column="66">++<pos:position pos:line="240" pos:column="68"/></operator></expr></incr>)<pos:position pos:line="240" pos:column="69"/></control> <block pos:line="240" pos:column="70">{
    <decl_stmt><decl><type><name pos:line="241" pos:column="5">BerElement<pos:position pos:line="241" pos:column="15"/></name> <modifier pos:line="241" pos:column="16">*<pos:position pos:line="241" pos:column="17"/></modifier></type><name pos:line="241" pos:column="17">ber<pos:position pos:line="241" pos:column="20"/></name> <init pos:line="241" pos:column="21">= <expr><name pos:line="241" pos:column="23">NULL<pos:position pos:line="241" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="241" pos:column="28"/></decl_stmt>
<cpp:if pos:line="242" pos:column="1">#<cpp:directive pos:line="242" pos:column="2">if<pos:position pos:line="242" pos:column="4"/></cpp:directive> <expr><call><name pos:line="242" pos:column="5">defined<pos:position pos:line="242" pos:column="12"/></name><argument_list pos:line="242" pos:column="12">(<argument><expr><name pos:line="242" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="242" pos:column="27"/></name></expr></argument>)<pos:position pos:line="242" pos:column="28"/></argument_list></call></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="243" pos:column="5">TCHAR<pos:position pos:line="243" pos:column="10"/></name> <modifier pos:line="243" pos:column="11">*<pos:position pos:line="243" pos:column="12"/></modifier></type><name pos:line="243" pos:column="12">attribute<pos:position pos:line="243" pos:column="21"/></name></decl>;<pos:position pos:line="243" pos:column="22"/></decl_stmt>
<cpp:else pos:line="244" pos:column="1">#<cpp:directive pos:line="244" pos:column="2">else<pos:position pos:line="244" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="245" pos:column="5">char<pos:position pos:line="245" pos:column="9"/></name>  <modifier pos:line="245" pos:column="11">*<pos:position pos:line="245" pos:column="12"/></modifier></type><name pos:line="245" pos:column="12">attribute<pos:position pos:line="245" pos:column="21"/></name></decl>;<pos:position pos:line="245" pos:column="22"/></decl_stmt>       <comment type="block" format="doxygen" pos:line="245" pos:column="29">/*! suspicious that this isn't 'const' */</comment>
<cpp:endif pos:line="246" pos:column="1">#<cpp:directive pos:line="246" pos:column="2">endif<pos:position pos:line="246" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="247" pos:column="5">int<pos:position pos:line="247" pos:column="8"/></name></type> <name pos:line="247" pos:column="9">i<pos:position pos:line="247" pos:column="10"/></name></decl>;<pos:position pos:line="247" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="249" pos:column="5">/* Get the DN and write it to the client */</comment>
    <block pos:line="250" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="251" pos:column="7">char<pos:position pos:line="251" pos:column="11"/></name> <modifier pos:line="251" pos:column="12">*<pos:position pos:line="251" pos:column="13"/></modifier></type><name pos:line="251" pos:column="13">name<pos:position pos:line="251" pos:column="17"/></name></decl>;<pos:position pos:line="251" pos:column="18"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="252" pos:column="7">size_t<pos:position pos:line="252" pos:column="13"/></name></type> <name pos:line="252" pos:column="14">name_len<pos:position pos:line="252" pos:column="22"/></name></decl>;<pos:position pos:line="252" pos:column="23"/></decl_stmt>
<cpp:if pos:line="253" pos:column="1">#<cpp:directive pos:line="253" pos:column="2">if<pos:position pos:line="253" pos:column="4"/></cpp:directive> <expr><call><name pos:line="253" pos:column="5">defined<pos:position pos:line="253" pos:column="12"/></name><argument_list pos:line="253" pos:column="12">(<argument><expr><name pos:line="253" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="253" pos:column="27"/></name></expr></argument>)<pos:position pos:line="253" pos:column="28"/></argument_list></call></expr></cpp:if>
      <decl_stmt><decl><type><name pos:line="254" pos:column="7">TCHAR<pos:position pos:line="254" pos:column="12"/></name> <modifier pos:line="254" pos:column="13">*<pos:position pos:line="254" pos:column="14"/></modifier></type><name pos:line="254" pos:column="14">dn<pos:position pos:line="254" pos:column="16"/></name> <init pos:line="254" pos:column="17">= <expr><call><name pos:line="254" pos:column="19">ldap_get_dn<pos:position pos:line="254" pos:column="30"/></name><argument_list pos:line="254" pos:column="30">(<argument><expr><name pos:line="254" pos:column="31">server<pos:position pos:line="254" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="254" pos:column="39">entryIterator<pos:position pos:line="254" pos:column="52"/></name></expr></argument>)<pos:position pos:line="254" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="254" pos:column="54"/></decl_stmt>
      <expr_stmt><expr><name pos:line="255" pos:column="7">name<pos:position pos:line="255" pos:column="11"/></name> <operator pos:line="255" pos:column="12">=<pos:position pos:line="255" pos:column="13"/></operator> <call><name pos:line="255" pos:column="14">Curl_convert_tchar_to_UTF8<pos:position pos:line="255" pos:column="40"/></name><argument_list pos:line="255" pos:column="40">(<argument><expr><name pos:line="255" pos:column="41">dn<pos:position pos:line="255" pos:column="43"/></name></expr></argument>)<pos:position pos:line="255" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="45"/></expr_stmt>
      <if pos:line="256" pos:column="7">if<condition pos:line="256" pos:column="9">(<expr><operator pos:line="256" pos:column="10">!<pos:position pos:line="256" pos:column="11"/></operator><name pos:line="256" pos:column="11">name<pos:position pos:line="256" pos:column="15"/></name></expr>)<pos:position pos:line="256" pos:column="16"/></condition><then pos:line="256" pos:column="16"> <block pos:line="256" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="257" pos:column="9">ldap_memfree<pos:position pos:line="257" pos:column="21"/></name><argument_list pos:line="257" pos:column="21">(<argument><expr><name pos:line="257" pos:column="22">dn<pos:position pos:line="257" pos:column="24"/></name></expr></argument>)<pos:position pos:line="257" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><name pos:line="259" pos:column="9">result<pos:position pos:line="259" pos:column="15"/></name> <operator pos:line="259" pos:column="16">=<pos:position pos:line="259" pos:column="17"/></operator> <name pos:line="259" pos:column="18">CURLE_OUT_OF_MEMORY<pos:position pos:line="259" pos:column="37"/></name></expr>;<pos:position pos:line="259" pos:column="38"/></expr_stmt>

        <goto pos:line="261" pos:column="9">goto <name pos:line="261" pos:column="14">quit<pos:position pos:line="261" pos:column="18"/></name>;<pos:position pos:line="261" pos:column="19"/></goto>
      }<pos:position pos:line="262" pos:column="8"/></block></then></if>
<cpp:else pos:line="263" pos:column="1">#<cpp:directive pos:line="263" pos:column="2">else<pos:position pos:line="263" pos:column="6"/></cpp:directive></cpp:else>
      <decl_stmt><decl><type><name pos:line="264" pos:column="7">char<pos:position pos:line="264" pos:column="11"/></name> <modifier pos:line="264" pos:column="12">*<pos:position pos:line="264" pos:column="13"/></modifier></type><name pos:line="264" pos:column="13">dn<pos:position pos:line="264" pos:column="15"/></name> <init pos:line="264" pos:column="16">= <expr><name pos:line="264" pos:column="18">name<pos:position pos:line="264" pos:column="22"/></name> <operator pos:line="264" pos:column="23">=<pos:position pos:line="264" pos:column="24"/></operator> <call><name pos:line="264" pos:column="25">ldap_get_dn<pos:position pos:line="264" pos:column="36"/></name><argument_list pos:line="264" pos:column="36">(<argument><expr><name pos:line="264" pos:column="37">server<pos:position pos:line="264" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="264" pos:column="45">entryIterator<pos:position pos:line="264" pos:column="58"/></name></expr></argument>)<pos:position pos:line="264" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="264" pos:column="60"/></decl_stmt>
<cpp:endif pos:line="265" pos:column="1">#<cpp:directive pos:line="265" pos:column="2">endif<pos:position pos:line="265" pos:column="7"/></cpp:directive></cpp:endif>
      <expr_stmt><expr><name pos:line="266" pos:column="7">name_len<pos:position pos:line="266" pos:column="15"/></name> <operator pos:line="266" pos:column="16">=<pos:position pos:line="266" pos:column="17"/></operator> <call><name pos:line="266" pos:column="18">strlen<pos:position pos:line="266" pos:column="24"/></name><argument_list pos:line="266" pos:column="24">(<argument><expr><name pos:line="266" pos:column="25">name<pos:position pos:line="266" pos:column="29"/></name></expr></argument>)<pos:position pos:line="266" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="31"/></expr_stmt>

      <expr_stmt><expr><name pos:line="268" pos:column="7">result<pos:position pos:line="268" pos:column="13"/></name> <operator pos:line="268" pos:column="14">=<pos:position pos:line="268" pos:column="15"/></operator> <call><name pos:line="268" pos:column="16">Curl_client_write<pos:position pos:line="268" pos:column="33"/></name><argument_list pos:line="268" pos:column="33">(<argument><expr><name pos:line="268" pos:column="34">conn<pos:position pos:line="268" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="268" pos:column="40">CLIENTWRITE_BODY<pos:position pos:line="268" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="268" pos:column="58">(<pos:position pos:line="268" pos:column="59"/></operator><name pos:line="268" pos:column="59">char<pos:position pos:line="268" pos:column="63"/></name> <operator pos:line="268" pos:column="64">*<pos:position pos:line="268" pos:column="65"/></operator><operator pos:line="268" pos:column="65">)<pos:position pos:line="268" pos:column="66"/></operator><literal type="string" pos:line="268" pos:column="66">"DN: "<pos:position pos:line="268" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="268" pos:column="74">4<pos:position pos:line="268" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="268" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="77"/></expr_stmt>
      <if pos:line="269" pos:column="7">if<condition pos:line="269" pos:column="9">(<expr><name pos:line="269" pos:column="10">result<pos:position pos:line="269" pos:column="16"/></name></expr>)<pos:position pos:line="269" pos:column="17"/></condition><then pos:line="269" pos:column="17"> <block pos:line="269" pos:column="18">{
<cpp:if pos:line="270" pos:column="1">#<cpp:directive pos:line="270" pos:column="2">if<pos:position pos:line="270" pos:column="4"/></cpp:directive> <expr><call><name pos:line="270" pos:column="5">defined<pos:position pos:line="270" pos:column="12"/></name><argument_list pos:line="270" pos:column="12">(<argument><expr><name pos:line="270" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="270" pos:column="27"/></name></expr></argument>)<pos:position pos:line="270" pos:column="28"/></argument_list></call></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="271" pos:column="9">Curl_unicodefree<pos:position pos:line="271" pos:column="25"/></name><argument_list pos:line="271" pos:column="25">(<argument><expr><name pos:line="271" pos:column="26">name<pos:position pos:line="271" pos:column="30"/></name></expr></argument>)<pos:position pos:line="271" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="272" pos:column="1">#<cpp:directive pos:line="272" pos:column="2">endif<pos:position pos:line="272" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="273" pos:column="9">ldap_memfree<pos:position pos:line="273" pos:column="21"/></name><argument_list pos:line="273" pos:column="21">(<argument><expr><name pos:line="273" pos:column="22">dn<pos:position pos:line="273" pos:column="24"/></name></expr></argument>)<pos:position pos:line="273" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="26"/></expr_stmt>

        <goto pos:line="275" pos:column="9">goto <name pos:line="275" pos:column="14">quit<pos:position pos:line="275" pos:column="18"/></name>;<pos:position pos:line="275" pos:column="19"/></goto>
      }<pos:position pos:line="276" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="278" pos:column="7">result<pos:position pos:line="278" pos:column="13"/></name> <operator pos:line="278" pos:column="14">=<pos:position pos:line="278" pos:column="15"/></operator> <call><name pos:line="278" pos:column="16">Curl_client_write<pos:position pos:line="278" pos:column="33"/></name><argument_list pos:line="278" pos:column="33">(<argument><expr><name pos:line="278" pos:column="34">conn<pos:position pos:line="278" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="40">CLIENTWRITE_BODY<pos:position pos:line="278" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="278" pos:column="58">(<pos:position pos:line="278" pos:column="59"/></operator><name pos:line="278" pos:column="59">char<pos:position pos:line="278" pos:column="63"/></name> <operator pos:line="278" pos:column="64">*<pos:position pos:line="278" pos:column="65"/></operator><operator pos:line="278" pos:column="65">)<pos:position pos:line="278" pos:column="66"/></operator> <name pos:line="278" pos:column="67">name<pos:position pos:line="278" pos:column="71"/></name></expr></argument>,
                                 <argument><expr><name pos:line="279" pos:column="34">name_len<pos:position pos:line="279" pos:column="42"/></name></expr></argument>)<pos:position pos:line="279" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="44"/></expr_stmt>
      <if pos:line="280" pos:column="7">if<condition pos:line="280" pos:column="9">(<expr><name pos:line="280" pos:column="10">result<pos:position pos:line="280" pos:column="16"/></name></expr>)<pos:position pos:line="280" pos:column="17"/></condition><then pos:line="280" pos:column="17"> <block pos:line="280" pos:column="18">{
<cpp:if pos:line="281" pos:column="1">#<cpp:directive pos:line="281" pos:column="2">if<pos:position pos:line="281" pos:column="4"/></cpp:directive> <expr><call><name pos:line="281" pos:column="5">defined<pos:position pos:line="281" pos:column="12"/></name><argument_list pos:line="281" pos:column="12">(<argument><expr><name pos:line="281" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="281" pos:column="27"/></name></expr></argument>)<pos:position pos:line="281" pos:column="28"/></argument_list></call></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="282" pos:column="9">Curl_unicodefree<pos:position pos:line="282" pos:column="25"/></name><argument_list pos:line="282" pos:column="25">(<argument><expr><name pos:line="282" pos:column="26">name<pos:position pos:line="282" pos:column="30"/></name></expr></argument>)<pos:position pos:line="282" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="283" pos:column="1">#<cpp:directive pos:line="283" pos:column="2">endif<pos:position pos:line="283" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="284" pos:column="9">ldap_memfree<pos:position pos:line="284" pos:column="21"/></name><argument_list pos:line="284" pos:column="21">(<argument><expr><name pos:line="284" pos:column="22">dn<pos:position pos:line="284" pos:column="24"/></name></expr></argument>)<pos:position pos:line="284" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="26"/></expr_stmt>

        <goto pos:line="286" pos:column="9">goto <name pos:line="286" pos:column="14">quit<pos:position pos:line="286" pos:column="18"/></name>;<pos:position pos:line="286" pos:column="19"/></goto>
      }<pos:position pos:line="287" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="289" pos:column="7">result<pos:position pos:line="289" pos:column="13"/></name> <operator pos:line="289" pos:column="14">=<pos:position pos:line="289" pos:column="15"/></operator> <call><name pos:line="289" pos:column="16">Curl_client_write<pos:position pos:line="289" pos:column="33"/></name><argument_list pos:line="289" pos:column="33">(<argument><expr><name pos:line="289" pos:column="34">conn<pos:position pos:line="289" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="289" pos:column="40">CLIENTWRITE_BODY<pos:position pos:line="289" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="289" pos:column="58">(<pos:position pos:line="289" pos:column="59"/></operator><name pos:line="289" pos:column="59">char<pos:position pos:line="289" pos:column="63"/></name> <operator pos:line="289" pos:column="64">*<pos:position pos:line="289" pos:column="65"/></operator><operator pos:line="289" pos:column="65">)<pos:position pos:line="289" pos:column="66"/></operator><literal type="string" pos:line="289" pos:column="66">"\n"<pos:position pos:line="289" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="289" pos:column="72">1<pos:position pos:line="289" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="289" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="75"/></expr_stmt>
      <if pos:line="290" pos:column="7">if<condition pos:line="290" pos:column="9">(<expr><name pos:line="290" pos:column="10">result<pos:position pos:line="290" pos:column="16"/></name></expr>)<pos:position pos:line="290" pos:column="17"/></condition><then pos:line="290" pos:column="17"> <block pos:line="290" pos:column="18">{
<cpp:if pos:line="291" pos:column="1">#<cpp:directive pos:line="291" pos:column="2">if<pos:position pos:line="291" pos:column="4"/></cpp:directive> <expr><call><name pos:line="291" pos:column="5">defined<pos:position pos:line="291" pos:column="12"/></name><argument_list pos:line="291" pos:column="12">(<argument><expr><name pos:line="291" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="291" pos:column="27"/></name></expr></argument>)<pos:position pos:line="291" pos:column="28"/></argument_list></call></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="292" pos:column="9">Curl_unicodefree<pos:position pos:line="292" pos:column="25"/></name><argument_list pos:line="292" pos:column="25">(<argument><expr><name pos:line="292" pos:column="26">name<pos:position pos:line="292" pos:column="30"/></name></expr></argument>)<pos:position pos:line="292" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="293" pos:column="1">#<cpp:directive pos:line="293" pos:column="2">endif<pos:position pos:line="293" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="294" pos:column="9">ldap_memfree<pos:position pos:line="294" pos:column="21"/></name><argument_list pos:line="294" pos:column="21">(<argument><expr><name pos:line="294" pos:column="22">dn<pos:position pos:line="294" pos:column="24"/></name></expr></argument>)<pos:position pos:line="294" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="26"/></expr_stmt>

        <goto pos:line="296" pos:column="9">goto <name pos:line="296" pos:column="14">quit<pos:position pos:line="296" pos:column="18"/></name>;<pos:position pos:line="296" pos:column="19"/></goto>
      }<pos:position pos:line="297" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="299" pos:column="7">dlsize<pos:position pos:line="299" pos:column="13"/></name> <operator pos:line="299" pos:column="14">+=<pos:position pos:line="299" pos:column="16"/></operator> <name pos:line="299" pos:column="17">name_len<pos:position pos:line="299" pos:column="25"/></name> <operator pos:line="299" pos:column="26">+<pos:position pos:line="299" pos:column="27"/></operator> <literal type="number" pos:line="299" pos:column="28">5<pos:position pos:line="299" pos:column="29"/></literal></expr>;<pos:position pos:line="299" pos:column="30"/></expr_stmt>

<cpp:if pos:line="301" pos:column="1">#<cpp:directive pos:line="301" pos:column="2">if<pos:position pos:line="301" pos:column="4"/></cpp:directive> <expr><call><name pos:line="301" pos:column="5">defined<pos:position pos:line="301" pos:column="12"/></name><argument_list pos:line="301" pos:column="12">(<argument><expr><name pos:line="301" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="301" pos:column="27"/></name></expr></argument>)<pos:position pos:line="301" pos:column="28"/></argument_list></call></expr></cpp:if>
      <expr_stmt><expr><call><name pos:line="302" pos:column="7">Curl_unicodefree<pos:position pos:line="302" pos:column="23"/></name><argument_list pos:line="302" pos:column="23">(<argument><expr><name pos:line="302" pos:column="24">name<pos:position pos:line="302" pos:column="28"/></name></expr></argument>)<pos:position pos:line="302" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="303" pos:column="1">#<cpp:directive pos:line="303" pos:column="2">endif<pos:position pos:line="303" pos:column="7"/></cpp:directive></cpp:endif>
      <expr_stmt><expr><call><name pos:line="304" pos:column="7">ldap_memfree<pos:position pos:line="304" pos:column="19"/></name><argument_list pos:line="304" pos:column="19">(<argument><expr><name pos:line="304" pos:column="20">dn<pos:position pos:line="304" pos:column="22"/></name></expr></argument>)<pos:position pos:line="304" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="305" pos:column="6"/></block>

    <comment type="block" pos:line="307" pos:column="5">/* Get the attributes and write them to the client */</comment>
    <for pos:line="308" pos:column="5">for<control pos:line="308" pos:column="8">(<init><expr><name pos:line="308" pos:column="9">attribute<pos:position pos:line="308" pos:column="18"/></name> <operator pos:line="308" pos:column="19">=<pos:position pos:line="308" pos:column="20"/></operator> <call><name pos:line="308" pos:column="21">ldap_first_attribute<pos:position pos:line="308" pos:column="41"/></name><argument_list pos:line="308" pos:column="41">(<argument><expr><name pos:line="308" pos:column="42">server<pos:position pos:line="308" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="308" pos:column="50">entryIterator<pos:position pos:line="308" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="308" pos:column="65">&amp;<pos:position pos:line="308" pos:column="70"/></operator><name pos:line="308" pos:column="66">ber<pos:position pos:line="308" pos:column="69"/></name></expr></argument>)<pos:position pos:line="308" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="71"/></init>
        <condition><expr><name pos:line="309" pos:column="9">attribute<pos:position pos:line="309" pos:column="18"/></name></expr>;<pos:position pos:line="309" pos:column="19"/></condition>
        <incr><expr><name pos:line="310" pos:column="9">attribute<pos:position pos:line="310" pos:column="18"/></name> <operator pos:line="310" pos:column="19">=<pos:position pos:line="310" pos:column="20"/></operator> <call><name pos:line="310" pos:column="21">ldap_next_attribute<pos:position pos:line="310" pos:column="40"/></name><argument_list pos:line="310" pos:column="40">(<argument><expr><name pos:line="310" pos:column="41">server<pos:position pos:line="310" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="49">entryIterator<pos:position pos:line="310" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="64">ber<pos:position pos:line="310" pos:column="67"/></name></expr></argument>)<pos:position pos:line="310" pos:column="68"/></argument_list></call></expr></incr>)<pos:position pos:line="310" pos:column="69"/></control> <block pos:line="310" pos:column="70">{
      <decl_stmt><decl><type><name pos:line="311" pos:column="7">BerValue<pos:position pos:line="311" pos:column="15"/></name> <modifier pos:line="311" pos:column="16">*<pos:position pos:line="311" pos:column="17"/></modifier><modifier pos:line="311" pos:column="17">*<pos:position pos:line="311" pos:column="18"/></modifier></type><name pos:line="311" pos:column="18">vals<pos:position pos:line="311" pos:column="22"/></name></decl>;<pos:position pos:line="311" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="312" pos:column="7">size_t<pos:position pos:line="312" pos:column="13"/></name></type> <name pos:line="312" pos:column="14">attr_len<pos:position pos:line="312" pos:column="22"/></name></decl>;<pos:position pos:line="312" pos:column="23"/></decl_stmt>
<cpp:if pos:line="313" pos:column="1">#<cpp:directive pos:line="313" pos:column="2">if<pos:position pos:line="313" pos:column="4"/></cpp:directive> <expr><call><name pos:line="313" pos:column="5">defined<pos:position pos:line="313" pos:column="12"/></name><argument_list pos:line="313" pos:column="12">(<argument><expr><name pos:line="313" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="313" pos:column="27"/></name></expr></argument>)<pos:position pos:line="313" pos:column="28"/></argument_list></call></expr></cpp:if>
      <decl_stmt><decl><type><name pos:line="314" pos:column="7">char<pos:position pos:line="314" pos:column="11"/></name> <modifier pos:line="314" pos:column="12">*<pos:position pos:line="314" pos:column="13"/></modifier></type><name pos:line="314" pos:column="13">attr<pos:position pos:line="314" pos:column="17"/></name> <init pos:line="314" pos:column="18">= <expr><call><name pos:line="314" pos:column="20">Curl_convert_tchar_to_UTF8<pos:position pos:line="314" pos:column="46"/></name><argument_list pos:line="314" pos:column="46">(<argument><expr><name pos:line="314" pos:column="47">attribute<pos:position pos:line="314" pos:column="56"/></name></expr></argument>)<pos:position pos:line="314" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="314" pos:column="58"/></decl_stmt>
      <if pos:line="315" pos:column="7">if<condition pos:line="315" pos:column="9">(<expr><operator pos:line="315" pos:column="10">!<pos:position pos:line="315" pos:column="11"/></operator><name pos:line="315" pos:column="11">attr<pos:position pos:line="315" pos:column="15"/></name></expr>)<pos:position pos:line="315" pos:column="16"/></condition><then pos:line="315" pos:column="16"> <block pos:line="315" pos:column="17">{
        <if pos:line="316" pos:column="9">if<condition pos:line="316" pos:column="11">(<expr><name pos:line="316" pos:column="12">ber<pos:position pos:line="316" pos:column="15"/></name></expr>)<pos:position pos:line="316" pos:column="16"/></condition><then pos:line="316" pos:column="16">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="317" pos:column="11">ber_free<pos:position pos:line="317" pos:column="19"/></name><argument_list pos:line="317" pos:column="19">(<argument><expr><name pos:line="317" pos:column="20">ber<pos:position pos:line="317" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="317" pos:column="25">0<pos:position pos:line="317" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="317" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="28"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="319" pos:column="9">result<pos:position pos:line="319" pos:column="15"/></name> <operator pos:line="319" pos:column="16">=<pos:position pos:line="319" pos:column="17"/></operator> <name pos:line="319" pos:column="18">CURLE_OUT_OF_MEMORY<pos:position pos:line="319" pos:column="37"/></name></expr>;<pos:position pos:line="319" pos:column="38"/></expr_stmt>

        <goto pos:line="321" pos:column="9">goto <name pos:line="321" pos:column="14">quit<pos:position pos:line="321" pos:column="18"/></name>;<pos:position pos:line="321" pos:column="19"/></goto>
    }<pos:position pos:line="322" pos:column="6"/></block></then></if>
<cpp:else pos:line="323" pos:column="1">#<cpp:directive pos:line="323" pos:column="2">else<pos:position pos:line="323" pos:column="6"/></cpp:directive></cpp:else>
      <decl_stmt><decl><type><name pos:line="324" pos:column="7">char<pos:position pos:line="324" pos:column="11"/></name> <modifier pos:line="324" pos:column="12">*<pos:position pos:line="324" pos:column="13"/></modifier></type><name pos:line="324" pos:column="13">attr<pos:position pos:line="324" pos:column="17"/></name> <init pos:line="324" pos:column="18">= <expr><name pos:line="324" pos:column="20">attribute<pos:position pos:line="324" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="324" pos:column="30"/></decl_stmt>
<cpp:endif pos:line="325" pos:column="1">#<cpp:directive pos:line="325" pos:column="2">endif<pos:position pos:line="325" pos:column="7"/></cpp:directive></cpp:endif>
      <expr_stmt><expr><name pos:line="326" pos:column="7">attr_len<pos:position pos:line="326" pos:column="15"/></name> <operator pos:line="326" pos:column="16">=<pos:position pos:line="326" pos:column="17"/></operator> <call><name pos:line="326" pos:column="18">strlen<pos:position pos:line="326" pos:column="24"/></name><argument_list pos:line="326" pos:column="24">(<argument><expr><name pos:line="326" pos:column="25">attr<pos:position pos:line="326" pos:column="29"/></name></expr></argument>)<pos:position pos:line="326" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="31"/></expr_stmt>

      <expr_stmt><expr><name pos:line="328" pos:column="7">vals<pos:position pos:line="328" pos:column="11"/></name> <operator pos:line="328" pos:column="12">=<pos:position pos:line="328" pos:column="13"/></operator> <call><name pos:line="328" pos:column="14">ldap_get_values_len<pos:position pos:line="328" pos:column="33"/></name><argument_list pos:line="328" pos:column="33">(<argument><expr><name pos:line="328" pos:column="34">server<pos:position pos:line="328" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="42">entryIterator<pos:position pos:line="328" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="57">attribute<pos:position pos:line="328" pos:column="66"/></name></expr></argument>)<pos:position pos:line="328" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="68"/></expr_stmt>
      <if pos:line="329" pos:column="7">if<condition pos:line="329" pos:column="9">(<expr><name pos:line="329" pos:column="10">vals<pos:position pos:line="329" pos:column="14"/></name> <operator pos:line="329" pos:column="15">!=<pos:position pos:line="329" pos:column="17"/></operator> <name pos:line="329" pos:column="18">NULL<pos:position pos:line="329" pos:column="22"/></name></expr>)<pos:position pos:line="329" pos:column="23"/></condition><then pos:line="329" pos:column="23"> <block pos:line="329" pos:column="24">{
        <for pos:line="330" pos:column="9">for<control pos:line="330" pos:column="12">(<init><expr><name pos:line="330" pos:column="13">i<pos:position pos:line="330" pos:column="14"/></name> <operator pos:line="330" pos:column="15">=<pos:position pos:line="330" pos:column="16"/></operator> <literal type="number" pos:line="330" pos:column="17">0<pos:position pos:line="330" pos:column="18"/></literal></expr>;<pos:position pos:line="330" pos:column="19"/></init> <condition><expr><operator pos:line="330" pos:column="20">(<pos:position pos:line="330" pos:column="21"/></operator><name><name pos:line="330" pos:column="21">vals<pos:position pos:line="330" pos:column="25"/></name><index pos:line="330" pos:column="25">[<expr><name pos:line="330" pos:column="26">i<pos:position pos:line="330" pos:column="27"/></name></expr>]<pos:position pos:line="330" pos:column="28"/></index></name> <operator pos:line="330" pos:column="29">!=<pos:position pos:line="330" pos:column="31"/></operator> <name pos:line="330" pos:column="32">NULL<pos:position pos:line="330" pos:column="36"/></name><operator pos:line="330" pos:column="36">)<pos:position pos:line="330" pos:column="37"/></operator></expr>;<pos:position pos:line="330" pos:column="38"/></condition> <incr><expr><name pos:line="330" pos:column="39">i<pos:position pos:line="330" pos:column="40"/></name><operator pos:line="330" pos:column="40">++<pos:position pos:line="330" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="330" pos:column="43"/></control> <block pos:line="330" pos:column="44">{
          <expr_stmt><expr><name pos:line="331" pos:column="11">result<pos:position pos:line="331" pos:column="17"/></name> <operator pos:line="331" pos:column="18">=<pos:position pos:line="331" pos:column="19"/></operator> <call><name pos:line="331" pos:column="20">Curl_client_write<pos:position pos:line="331" pos:column="37"/></name><argument_list pos:line="331" pos:column="37">(<argument><expr><name pos:line="331" pos:column="38">conn<pos:position pos:line="331" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="331" pos:column="44">CLIENTWRITE_BODY<pos:position pos:line="331" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="331" pos:column="62">(<pos:position pos:line="331" pos:column="63"/></operator><name pos:line="331" pos:column="63">char<pos:position pos:line="331" pos:column="67"/></name> <operator pos:line="331" pos:column="68">*<pos:position pos:line="331" pos:column="69"/></operator><operator pos:line="331" pos:column="69">)<pos:position pos:line="331" pos:column="70"/></operator><literal type="string" pos:line="331" pos:column="70">"\t"<pos:position pos:line="331" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="331" pos:column="76">1<pos:position pos:line="331" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="331" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="79"/></expr_stmt>
          <if pos:line="332" pos:column="11">if<condition pos:line="332" pos:column="13">(<expr><name pos:line="332" pos:column="14">result<pos:position pos:line="332" pos:column="20"/></name></expr>)<pos:position pos:line="332" pos:column="21"/></condition><then pos:line="332" pos:column="21"> <block pos:line="332" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="333" pos:column="13">ldap_value_free_len<pos:position pos:line="333" pos:column="32"/></name><argument_list pos:line="333" pos:column="32">(<argument><expr><name pos:line="333" pos:column="33">vals<pos:position pos:line="333" pos:column="37"/></name></expr></argument>)<pos:position pos:line="333" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="39"/></expr_stmt>
<cpp:if pos:line="334" pos:column="1">#<cpp:directive pos:line="334" pos:column="2">if<pos:position pos:line="334" pos:column="4"/></cpp:directive> <expr><call><name pos:line="334" pos:column="5">defined<pos:position pos:line="334" pos:column="12"/></name><argument_list pos:line="334" pos:column="12">(<argument><expr><name pos:line="334" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="334" pos:column="27"/></name></expr></argument>)<pos:position pos:line="334" pos:column="28"/></argument_list></call></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="335" pos:column="13">Curl_unicodefree<pos:position pos:line="335" pos:column="29"/></name><argument_list pos:line="335" pos:column="29">(<argument><expr><name pos:line="335" pos:column="30">attr<pos:position pos:line="335" pos:column="34"/></name></expr></argument>)<pos:position pos:line="335" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="336" pos:column="1">#<cpp:directive pos:line="336" pos:column="2">endif<pos:position pos:line="336" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name pos:line="337" pos:column="13">ldap_memfree<pos:position pos:line="337" pos:column="25"/></name><argument_list pos:line="337" pos:column="25">(<argument><expr><name pos:line="337" pos:column="26">attribute<pos:position pos:line="337" pos:column="35"/></name></expr></argument>)<pos:position pos:line="337" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="37"/></expr_stmt>
            <if pos:line="338" pos:column="13">if<condition pos:line="338" pos:column="15">(<expr><name pos:line="338" pos:column="16">ber<pos:position pos:line="338" pos:column="19"/></name></expr>)<pos:position pos:line="338" pos:column="20"/></condition><then pos:line="338" pos:column="20">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="339" pos:column="15">ber_free<pos:position pos:line="339" pos:column="23"/></name><argument_list pos:line="339" pos:column="23">(<argument><expr><name pos:line="339" pos:column="24">ber<pos:position pos:line="339" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="339" pos:column="29">0<pos:position pos:line="339" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="339" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="32"/></expr_stmt></block></then></if>

            <goto pos:line="341" pos:column="13">goto <name pos:line="341" pos:column="18">quit<pos:position pos:line="341" pos:column="22"/></name>;<pos:position pos:line="341" pos:column="23"/></goto>
          }<pos:position pos:line="342" pos:column="12"/></block></then></if>

          <expr_stmt><expr><name pos:line="344" pos:column="11">result<pos:position pos:line="344" pos:column="17"/></name> <operator pos:line="344" pos:column="18">=<pos:position pos:line="344" pos:column="19"/></operator> <call><name pos:line="344" pos:column="20">Curl_client_write<pos:position pos:line="344" pos:column="37"/></name><argument_list pos:line="344" pos:column="37">(<argument><expr><name pos:line="344" pos:column="38">conn<pos:position pos:line="344" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="344" pos:column="44">CLIENTWRITE_BODY<pos:position pos:line="344" pos:column="60"/></name></expr></argument>,
                                     <argument><expr><operator pos:line="345" pos:column="38">(<pos:position pos:line="345" pos:column="39"/></operator><name pos:line="345" pos:column="39">char<pos:position pos:line="345" pos:column="43"/></name> <operator pos:line="345" pos:column="44">*<pos:position pos:line="345" pos:column="45"/></operator><operator pos:line="345" pos:column="45">)<pos:position pos:line="345" pos:column="46"/></operator> <name pos:line="345" pos:column="47">attr<pos:position pos:line="345" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="345" pos:column="53">attr_len<pos:position pos:line="345" pos:column="61"/></name></expr></argument>)<pos:position pos:line="345" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="63"/></expr_stmt>
          <if pos:line="346" pos:column="11">if<condition pos:line="346" pos:column="13">(<expr><name pos:line="346" pos:column="14">result<pos:position pos:line="346" pos:column="20"/></name></expr>)<pos:position pos:line="346" pos:column="21"/></condition><then pos:line="346" pos:column="21"> <block pos:line="346" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="347" pos:column="13">ldap_value_free_len<pos:position pos:line="347" pos:column="32"/></name><argument_list pos:line="347" pos:column="32">(<argument><expr><name pos:line="347" pos:column="33">vals<pos:position pos:line="347" pos:column="37"/></name></expr></argument>)<pos:position pos:line="347" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="39"/></expr_stmt>
<cpp:if pos:line="348" pos:column="1">#<cpp:directive pos:line="348" pos:column="2">if<pos:position pos:line="348" pos:column="4"/></cpp:directive> <expr><call><name pos:line="348" pos:column="5">defined<pos:position pos:line="348" pos:column="12"/></name><argument_list pos:line="348" pos:column="12">(<argument><expr><name pos:line="348" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="348" pos:column="27"/></name></expr></argument>)<pos:position pos:line="348" pos:column="28"/></argument_list></call></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="349" pos:column="13">Curl_unicodefree<pos:position pos:line="349" pos:column="29"/></name><argument_list pos:line="349" pos:column="29">(<argument><expr><name pos:line="349" pos:column="30">attr<pos:position pos:line="349" pos:column="34"/></name></expr></argument>)<pos:position pos:line="349" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="350" pos:column="1">#<cpp:directive pos:line="350" pos:column="2">endif<pos:position pos:line="350" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name pos:line="351" pos:column="13">ldap_memfree<pos:position pos:line="351" pos:column="25"/></name><argument_list pos:line="351" pos:column="25">(<argument><expr><name pos:line="351" pos:column="26">attribute<pos:position pos:line="351" pos:column="35"/></name></expr></argument>)<pos:position pos:line="351" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="37"/></expr_stmt>
            <if pos:line="352" pos:column="13">if<condition pos:line="352" pos:column="15">(<expr><name pos:line="352" pos:column="16">ber<pos:position pos:line="352" pos:column="19"/></name></expr>)<pos:position pos:line="352" pos:column="20"/></condition><then pos:line="352" pos:column="20">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="353" pos:column="15">ber_free<pos:position pos:line="353" pos:column="23"/></name><argument_list pos:line="353" pos:column="23">(<argument><expr><name pos:line="353" pos:column="24">ber<pos:position pos:line="353" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="353" pos:column="29">0<pos:position pos:line="353" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="353" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="32"/></expr_stmt></block></then></if>

            <goto pos:line="355" pos:column="13">goto <name pos:line="355" pos:column="18">quit<pos:position pos:line="355" pos:column="22"/></name>;<pos:position pos:line="355" pos:column="23"/></goto>
          }<pos:position pos:line="356" pos:column="12"/></block></then></if>

          <expr_stmt><expr><name pos:line="358" pos:column="11">result<pos:position pos:line="358" pos:column="17"/></name> <operator pos:line="358" pos:column="18">=<pos:position pos:line="358" pos:column="19"/></operator> <call><name pos:line="358" pos:column="20">Curl_client_write<pos:position pos:line="358" pos:column="37"/></name><argument_list pos:line="358" pos:column="37">(<argument><expr><name pos:line="358" pos:column="38">conn<pos:position pos:line="358" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="358" pos:column="44">CLIENTWRITE_BODY<pos:position pos:line="358" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="358" pos:column="62">(<pos:position pos:line="358" pos:column="63"/></operator><name pos:line="358" pos:column="63">char<pos:position pos:line="358" pos:column="67"/></name> <operator pos:line="358" pos:column="68">*<pos:position pos:line="358" pos:column="69"/></operator><operator pos:line="358" pos:column="69">)<pos:position pos:line="358" pos:column="70"/></operator><literal type="string" pos:line="358" pos:column="70">": "<pos:position pos:line="358" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="358" pos:column="76">2<pos:position pos:line="358" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="358" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="358" pos:column="79"/></expr_stmt>
          <if pos:line="359" pos:column="11">if<condition pos:line="359" pos:column="13">(<expr><name pos:line="359" pos:column="14">result<pos:position pos:line="359" pos:column="20"/></name></expr>)<pos:position pos:line="359" pos:column="21"/></condition><then pos:line="359" pos:column="21"> <block pos:line="359" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="360" pos:column="13">ldap_value_free_len<pos:position pos:line="360" pos:column="32"/></name><argument_list pos:line="360" pos:column="32">(<argument><expr><name pos:line="360" pos:column="33">vals<pos:position pos:line="360" pos:column="37"/></name></expr></argument>)<pos:position pos:line="360" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="360" pos:column="39"/></expr_stmt>
<cpp:if pos:line="361" pos:column="1">#<cpp:directive pos:line="361" pos:column="2">if<pos:position pos:line="361" pos:column="4"/></cpp:directive> <expr><call><name pos:line="361" pos:column="5">defined<pos:position pos:line="361" pos:column="12"/></name><argument_list pos:line="361" pos:column="12">(<argument><expr><name pos:line="361" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="361" pos:column="27"/></name></expr></argument>)<pos:position pos:line="361" pos:column="28"/></argument_list></call></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="362" pos:column="13">Curl_unicodefree<pos:position pos:line="362" pos:column="29"/></name><argument_list pos:line="362" pos:column="29">(<argument><expr><name pos:line="362" pos:column="30">attr<pos:position pos:line="362" pos:column="34"/></name></expr></argument>)<pos:position pos:line="362" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="362" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="363" pos:column="1">#<cpp:directive pos:line="363" pos:column="2">endif<pos:position pos:line="363" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name pos:line="364" pos:column="13">ldap_memfree<pos:position pos:line="364" pos:column="25"/></name><argument_list pos:line="364" pos:column="25">(<argument><expr><name pos:line="364" pos:column="26">attribute<pos:position pos:line="364" pos:column="35"/></name></expr></argument>)<pos:position pos:line="364" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="37"/></expr_stmt>
            <if pos:line="365" pos:column="13">if<condition pos:line="365" pos:column="15">(<expr><name pos:line="365" pos:column="16">ber<pos:position pos:line="365" pos:column="19"/></name></expr>)<pos:position pos:line="365" pos:column="20"/></condition><then pos:line="365" pos:column="20">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="366" pos:column="15">ber_free<pos:position pos:line="366" pos:column="23"/></name><argument_list pos:line="366" pos:column="23">(<argument><expr><name pos:line="366" pos:column="24">ber<pos:position pos:line="366" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="366" pos:column="29">0<pos:position pos:line="366" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="366" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="32"/></expr_stmt></block></then></if>

            <goto pos:line="368" pos:column="13">goto <name pos:line="368" pos:column="18">quit<pos:position pos:line="368" pos:column="22"/></name>;<pos:position pos:line="368" pos:column="23"/></goto>
          }<pos:position pos:line="369" pos:column="12"/></block></then></if>

          <expr_stmt><expr><name pos:line="371" pos:column="11">dlsize<pos:position pos:line="371" pos:column="17"/></name> <operator pos:line="371" pos:column="18">+=<pos:position pos:line="371" pos:column="20"/></operator> <name pos:line="371" pos:column="21">attr_len<pos:position pos:line="371" pos:column="29"/></name> <operator pos:line="371" pos:column="30">+<pos:position pos:line="371" pos:column="31"/></operator> <literal type="number" pos:line="371" pos:column="32">3<pos:position pos:line="371" pos:column="33"/></literal></expr>;<pos:position pos:line="371" pos:column="34"/></expr_stmt>

          <if pos:line="373" pos:column="11">if<condition pos:line="373" pos:column="13">(<expr><operator pos:line="373" pos:column="14">(<pos:position pos:line="373" pos:column="15"/></operator><name pos:line="373" pos:column="15">attr_len<pos:position pos:line="373" pos:column="23"/></name> <operator pos:line="373" pos:column="24">&gt;<pos:position pos:line="373" pos:column="28"/></operator> <literal type="number" pos:line="373" pos:column="26">7<pos:position pos:line="373" pos:column="27"/></literal><operator pos:line="373" pos:column="27">)<pos:position pos:line="373" pos:column="28"/></operator> <operator pos:line="373" pos:column="29">&amp;&amp;<pos:position pos:line="373" pos:column="39"/></operator>
             <operator pos:line="374" pos:column="14">(<pos:position pos:line="374" pos:column="15"/></operator><call><name pos:line="374" pos:column="15">strcmp<pos:position pos:line="374" pos:column="21"/></name><argument_list pos:line="374" pos:column="21">(<argument><expr><literal type="string" pos:line="374" pos:column="22">";binary"<pos:position pos:line="374" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="374" pos:column="33">(<pos:position pos:line="374" pos:column="34"/></operator><name pos:line="374" pos:column="34">char<pos:position pos:line="374" pos:column="38"/></name> <operator pos:line="374" pos:column="39">*<pos:position pos:line="374" pos:column="40"/></operator><operator pos:line="374" pos:column="40">)<pos:position pos:line="374" pos:column="41"/></operator> <name pos:line="374" pos:column="42">attr<pos:position pos:line="374" pos:column="46"/></name> <operator pos:line="374" pos:column="47">+<pos:position pos:line="374" pos:column="48"/></operator> <operator pos:line="374" pos:column="49">(<pos:position pos:line="374" pos:column="50"/></operator><name pos:line="374" pos:column="50">attr_len<pos:position pos:line="374" pos:column="58"/></name> <operator pos:line="374" pos:column="59">-<pos:position pos:line="374" pos:column="60"/></operator> <literal type="number" pos:line="374" pos:column="61">7<pos:position pos:line="374" pos:column="62"/></literal><operator pos:line="374" pos:column="62">)<pos:position pos:line="374" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="374" pos:column="64"/></argument_list></call> <operator pos:line="374" pos:column="65">==<pos:position pos:line="374" pos:column="67"/></operator> <literal type="number" pos:line="374" pos:column="68">0<pos:position pos:line="374" pos:column="69"/></literal><operator pos:line="374" pos:column="69">)<pos:position pos:line="374" pos:column="70"/></operator></expr>)<pos:position pos:line="374" pos:column="71"/></condition><then pos:line="374" pos:column="71"> <block pos:line="374" pos:column="72">{
            <comment type="block" pos:line="375" pos:column="13">/* Binary attribute, encode to base64. */</comment>
            <expr_stmt><expr><name pos:line="376" pos:column="13">result<pos:position pos:line="376" pos:column="19"/></name> <operator pos:line="376" pos:column="20">=<pos:position pos:line="376" pos:column="21"/></operator> <call><name pos:line="376" pos:column="22">Curl_base64_encode<pos:position pos:line="376" pos:column="40"/></name><argument_list pos:line="376" pos:column="40">(<argument><expr><name pos:line="376" pos:column="41">data<pos:position pos:line="376" pos:column="45"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="377" pos:column="41">vals<pos:position pos:line="377" pos:column="45"/></name><index pos:line="377" pos:column="45">[<expr><name pos:line="377" pos:column="46">i<pos:position pos:line="377" pos:column="47"/></name></expr>]<pos:position pos:line="377" pos:column="48"/></index></name><operator pos:line="377" pos:column="48">-&gt;<pos:position pos:line="377" pos:column="53"/></operator><name pos:line="377" pos:column="50">bv_val<pos:position pos:line="377" pos:column="56"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="378" pos:column="41">vals<pos:position pos:line="378" pos:column="45"/></name><index pos:line="378" pos:column="45">[<expr><name pos:line="378" pos:column="46">i<pos:position pos:line="378" pos:column="47"/></name></expr>]<pos:position pos:line="378" pos:column="48"/></index></name><operator pos:line="378" pos:column="48">-&gt;<pos:position pos:line="378" pos:column="53"/></operator><name pos:line="378" pos:column="50">bv_len<pos:position pos:line="378" pos:column="56"/></name></expr></argument>,
                                        <argument><expr><operator pos:line="379" pos:column="41">&amp;<pos:position pos:line="379" pos:column="46"/></operator><name pos:line="379" pos:column="42">val_b64<pos:position pos:line="379" pos:column="49"/></name></expr></argument>,
                                        <argument><expr><operator pos:line="380" pos:column="41">&amp;<pos:position pos:line="380" pos:column="46"/></operator><name pos:line="380" pos:column="42">val_b64_sz<pos:position pos:line="380" pos:column="52"/></name></expr></argument>)<pos:position pos:line="380" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="380" pos:column="54"/></expr_stmt>
            <if pos:line="381" pos:column="13">if<condition pos:line="381" pos:column="15">(<expr><name pos:line="381" pos:column="16">result<pos:position pos:line="381" pos:column="22"/></name></expr>)<pos:position pos:line="381" pos:column="23"/></condition><then pos:line="381" pos:column="23"> <block pos:line="381" pos:column="24">{
              <expr_stmt><expr><call><name pos:line="382" pos:column="15">ldap_value_free_len<pos:position pos:line="382" pos:column="34"/></name><argument_list pos:line="382" pos:column="34">(<argument><expr><name pos:line="382" pos:column="35">vals<pos:position pos:line="382" pos:column="39"/></name></expr></argument>)<pos:position pos:line="382" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="382" pos:column="41"/></expr_stmt>
<cpp:if pos:line="383" pos:column="1">#<cpp:directive pos:line="383" pos:column="2">if<pos:position pos:line="383" pos:column="4"/></cpp:directive> <expr><call><name pos:line="383" pos:column="5">defined<pos:position pos:line="383" pos:column="12"/></name><argument_list pos:line="383" pos:column="12">(<argument><expr><name pos:line="383" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="383" pos:column="27"/></name></expr></argument>)<pos:position pos:line="383" pos:column="28"/></argument_list></call></expr></cpp:if>
              <expr_stmt><expr><call><name pos:line="384" pos:column="15">Curl_unicodefree<pos:position pos:line="384" pos:column="31"/></name><argument_list pos:line="384" pos:column="31">(<argument><expr><name pos:line="384" pos:column="32">attr<pos:position pos:line="384" pos:column="36"/></name></expr></argument>)<pos:position pos:line="384" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="385" pos:column="1">#<cpp:directive pos:line="385" pos:column="2">endif<pos:position pos:line="385" pos:column="7"/></cpp:directive></cpp:endif>
              <expr_stmt><expr><call><name pos:line="386" pos:column="15">ldap_memfree<pos:position pos:line="386" pos:column="27"/></name><argument_list pos:line="386" pos:column="27">(<argument><expr><name pos:line="386" pos:column="28">attribute<pos:position pos:line="386" pos:column="37"/></name></expr></argument>)<pos:position pos:line="386" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="386" pos:column="39"/></expr_stmt>
              <if pos:line="387" pos:column="15">if<condition pos:line="387" pos:column="17">(<expr><name pos:line="387" pos:column="18">ber<pos:position pos:line="387" pos:column="21"/></name></expr>)<pos:position pos:line="387" pos:column="22"/></condition><then pos:line="387" pos:column="22">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="388" pos:column="17">ber_free<pos:position pos:line="388" pos:column="25"/></name><argument_list pos:line="388" pos:column="25">(<argument><expr><name pos:line="388" pos:column="26">ber<pos:position pos:line="388" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="388" pos:column="31">0<pos:position pos:line="388" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="388" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="388" pos:column="34"/></expr_stmt></block></then></if>

              <goto pos:line="390" pos:column="15">goto <name pos:line="390" pos:column="20">quit<pos:position pos:line="390" pos:column="24"/></name>;<pos:position pos:line="390" pos:column="25"/></goto>
            }<pos:position pos:line="391" pos:column="14"/></block></then></if>

            <if pos:line="393" pos:column="13">if<condition pos:line="393" pos:column="15">(<expr><name pos:line="393" pos:column="16">val_b64_sz<pos:position pos:line="393" pos:column="26"/></name> <operator pos:line="393" pos:column="27">&gt;<pos:position pos:line="393" pos:column="31"/></operator> <literal type="number" pos:line="393" pos:column="29">0<pos:position pos:line="393" pos:column="30"/></literal></expr>)<pos:position pos:line="393" pos:column="31"/></condition><then pos:line="393" pos:column="31"> <block pos:line="393" pos:column="32">{
              <expr_stmt><expr><name pos:line="394" pos:column="15">result<pos:position pos:line="394" pos:column="21"/></name> <operator pos:line="394" pos:column="22">=<pos:position pos:line="394" pos:column="23"/></operator> <call><name pos:line="394" pos:column="24">Curl_client_write<pos:position pos:line="394" pos:column="41"/></name><argument_list pos:line="394" pos:column="41">(<argument><expr><name pos:line="394" pos:column="42">conn<pos:position pos:line="394" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="394" pos:column="48">CLIENTWRITE_BODY<pos:position pos:line="394" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="394" pos:column="66">val_b64<pos:position pos:line="394" pos:column="73"/></name></expr></argument>,
                                         <argument><expr><name pos:line="395" pos:column="42">val_b64_sz<pos:position pos:line="395" pos:column="52"/></name></expr></argument>)<pos:position pos:line="395" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="54"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="396" pos:column="15">free<pos:position pos:line="396" pos:column="19"/></name><argument_list pos:line="396" pos:column="19">(<argument><expr><name pos:line="396" pos:column="20">val_b64<pos:position pos:line="396" pos:column="27"/></name></expr></argument>)<pos:position pos:line="396" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="396" pos:column="29"/></expr_stmt>
              <if pos:line="397" pos:column="15">if<condition pos:line="397" pos:column="17">(<expr><name pos:line="397" pos:column="18">result<pos:position pos:line="397" pos:column="24"/></name></expr>)<pos:position pos:line="397" pos:column="25"/></condition><then pos:line="397" pos:column="25"> <block pos:line="397" pos:column="26">{
                <expr_stmt><expr><call><name pos:line="398" pos:column="17">ldap_value_free_len<pos:position pos:line="398" pos:column="36"/></name><argument_list pos:line="398" pos:column="36">(<argument><expr><name pos:line="398" pos:column="37">vals<pos:position pos:line="398" pos:column="41"/></name></expr></argument>)<pos:position pos:line="398" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="398" pos:column="43"/></expr_stmt>
<cpp:if pos:line="399" pos:column="1">#<cpp:directive pos:line="399" pos:column="2">if<pos:position pos:line="399" pos:column="4"/></cpp:directive> <expr><call><name pos:line="399" pos:column="5">defined<pos:position pos:line="399" pos:column="12"/></name><argument_list pos:line="399" pos:column="12">(<argument><expr><name pos:line="399" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="399" pos:column="27"/></name></expr></argument>)<pos:position pos:line="399" pos:column="28"/></argument_list></call></expr></cpp:if>
                <expr_stmt><expr><call><name pos:line="400" pos:column="17">Curl_unicodefree<pos:position pos:line="400" pos:column="33"/></name><argument_list pos:line="400" pos:column="33">(<argument><expr><name pos:line="400" pos:column="34">attr<pos:position pos:line="400" pos:column="38"/></name></expr></argument>)<pos:position pos:line="400" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="400" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="401" pos:column="1">#<cpp:directive pos:line="401" pos:column="2">endif<pos:position pos:line="401" pos:column="7"/></cpp:directive></cpp:endif>
                <expr_stmt><expr><call><name pos:line="402" pos:column="17">ldap_memfree<pos:position pos:line="402" pos:column="29"/></name><argument_list pos:line="402" pos:column="29">(<argument><expr><name pos:line="402" pos:column="30">attribute<pos:position pos:line="402" pos:column="39"/></name></expr></argument>)<pos:position pos:line="402" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="402" pos:column="41"/></expr_stmt>
                <if pos:line="403" pos:column="17">if<condition pos:line="403" pos:column="19">(<expr><name pos:line="403" pos:column="20">ber<pos:position pos:line="403" pos:column="23"/></name></expr>)<pos:position pos:line="403" pos:column="24"/></condition><then pos:line="403" pos:column="24">
                  <block type="pseudo"><expr_stmt><expr><call><name pos:line="404" pos:column="19">ber_free<pos:position pos:line="404" pos:column="27"/></name><argument_list pos:line="404" pos:column="27">(<argument><expr><name pos:line="404" pos:column="28">ber<pos:position pos:line="404" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="404" pos:column="33">0<pos:position pos:line="404" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="404" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="404" pos:column="36"/></expr_stmt></block></then></if>

                <goto pos:line="406" pos:column="17">goto <name pos:line="406" pos:column="22">quit<pos:position pos:line="406" pos:column="26"/></name>;<pos:position pos:line="406" pos:column="27"/></goto>
              }<pos:position pos:line="407" pos:column="16"/></block></then></if>

              <expr_stmt><expr><name pos:line="409" pos:column="15">dlsize<pos:position pos:line="409" pos:column="21"/></name> <operator pos:line="409" pos:column="22">+=<pos:position pos:line="409" pos:column="24"/></operator> <name pos:line="409" pos:column="25">val_b64_sz<pos:position pos:line="409" pos:column="35"/></name></expr>;<pos:position pos:line="409" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="410" pos:column="14"/></block></then></if>
          }<pos:position pos:line="411" pos:column="12"/></block></then>
          <else pos:line="412" pos:column="11">else <block pos:line="412" pos:column="16">{
            <expr_stmt><expr><name pos:line="413" pos:column="13">result<pos:position pos:line="413" pos:column="19"/></name> <operator pos:line="413" pos:column="20">=<pos:position pos:line="413" pos:column="21"/></operator> <call><name pos:line="413" pos:column="22">Curl_client_write<pos:position pos:line="413" pos:column="39"/></name><argument_list pos:line="413" pos:column="39">(<argument><expr><name pos:line="413" pos:column="40">conn<pos:position pos:line="413" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="413" pos:column="46">CLIENTWRITE_BODY<pos:position pos:line="413" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="413" pos:column="64">vals<pos:position pos:line="413" pos:column="68"/></name><index pos:line="413" pos:column="68">[<expr><name pos:line="413" pos:column="69">i<pos:position pos:line="413" pos:column="70"/></name></expr>]<pos:position pos:line="413" pos:column="71"/></index></name><operator pos:line="413" pos:column="71">-&gt;<pos:position pos:line="413" pos:column="76"/></operator><name pos:line="413" pos:column="73">bv_val<pos:position pos:line="413" pos:column="79"/></name></expr></argument>,
                                       <argument><expr><name><name pos:line="414" pos:column="40">vals<pos:position pos:line="414" pos:column="44"/></name><index pos:line="414" pos:column="44">[<expr><name pos:line="414" pos:column="45">i<pos:position pos:line="414" pos:column="46"/></name></expr>]<pos:position pos:line="414" pos:column="47"/></index></name><operator pos:line="414" pos:column="47">-&gt;<pos:position pos:line="414" pos:column="52"/></operator><name pos:line="414" pos:column="49">bv_len<pos:position pos:line="414" pos:column="55"/></name></expr></argument>)<pos:position pos:line="414" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="414" pos:column="57"/></expr_stmt>
            <if pos:line="415" pos:column="13">if<condition pos:line="415" pos:column="15">(<expr><name pos:line="415" pos:column="16">result<pos:position pos:line="415" pos:column="22"/></name></expr>)<pos:position pos:line="415" pos:column="23"/></condition><then pos:line="415" pos:column="23"> <block pos:line="415" pos:column="24">{
              <expr_stmt><expr><call><name pos:line="416" pos:column="15">ldap_value_free_len<pos:position pos:line="416" pos:column="34"/></name><argument_list pos:line="416" pos:column="34">(<argument><expr><name pos:line="416" pos:column="35">vals<pos:position pos:line="416" pos:column="39"/></name></expr></argument>)<pos:position pos:line="416" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="416" pos:column="41"/></expr_stmt>
<cpp:if pos:line="417" pos:column="1">#<cpp:directive pos:line="417" pos:column="2">if<pos:position pos:line="417" pos:column="4"/></cpp:directive> <expr><call><name pos:line="417" pos:column="5">defined<pos:position pos:line="417" pos:column="12"/></name><argument_list pos:line="417" pos:column="12">(<argument><expr><name pos:line="417" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="417" pos:column="27"/></name></expr></argument>)<pos:position pos:line="417" pos:column="28"/></argument_list></call></expr></cpp:if>
              <expr_stmt><expr><call><name pos:line="418" pos:column="15">Curl_unicodefree<pos:position pos:line="418" pos:column="31"/></name><argument_list pos:line="418" pos:column="31">(<argument><expr><name pos:line="418" pos:column="32">attr<pos:position pos:line="418" pos:column="36"/></name></expr></argument>)<pos:position pos:line="418" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="418" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="419" pos:column="1">#<cpp:directive pos:line="419" pos:column="2">endif<pos:position pos:line="419" pos:column="7"/></cpp:directive></cpp:endif>
              <expr_stmt><expr><call><name pos:line="420" pos:column="15">ldap_memfree<pos:position pos:line="420" pos:column="27"/></name><argument_list pos:line="420" pos:column="27">(<argument><expr><name pos:line="420" pos:column="28">attribute<pos:position pos:line="420" pos:column="37"/></name></expr></argument>)<pos:position pos:line="420" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="420" pos:column="39"/></expr_stmt>
              <if pos:line="421" pos:column="15">if<condition pos:line="421" pos:column="17">(<expr><name pos:line="421" pos:column="18">ber<pos:position pos:line="421" pos:column="21"/></name></expr>)<pos:position pos:line="421" pos:column="22"/></condition><then pos:line="421" pos:column="22">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="422" pos:column="17">ber_free<pos:position pos:line="422" pos:column="25"/></name><argument_list pos:line="422" pos:column="25">(<argument><expr><name pos:line="422" pos:column="26">ber<pos:position pos:line="422" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="422" pos:column="31">0<pos:position pos:line="422" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="422" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="422" pos:column="34"/></expr_stmt></block></then></if>

              <goto pos:line="424" pos:column="15">goto <name pos:line="424" pos:column="20">quit<pos:position pos:line="424" pos:column="24"/></name>;<pos:position pos:line="424" pos:column="25"/></goto>
            }<pos:position pos:line="425" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="427" pos:column="13">dlsize<pos:position pos:line="427" pos:column="19"/></name> <operator pos:line="427" pos:column="20">+=<pos:position pos:line="427" pos:column="22"/></operator> <name><name pos:line="427" pos:column="23">vals<pos:position pos:line="427" pos:column="27"/></name><index pos:line="427" pos:column="27">[<expr><name pos:line="427" pos:column="28">i<pos:position pos:line="427" pos:column="29"/></name></expr>]<pos:position pos:line="427" pos:column="30"/></index></name><operator pos:line="427" pos:column="30">-&gt;<pos:position pos:line="427" pos:column="35"/></operator><name pos:line="427" pos:column="32">bv_len<pos:position pos:line="427" pos:column="38"/></name></expr>;<pos:position pos:line="427" pos:column="39"/></expr_stmt>
          }<pos:position pos:line="428" pos:column="12"/></block></else></if>

          <expr_stmt><expr><name pos:line="430" pos:column="11">result<pos:position pos:line="430" pos:column="17"/></name> <operator pos:line="430" pos:column="18">=<pos:position pos:line="430" pos:column="19"/></operator> <call><name pos:line="430" pos:column="20">Curl_client_write<pos:position pos:line="430" pos:column="37"/></name><argument_list pos:line="430" pos:column="37">(<argument><expr><name pos:line="430" pos:column="38">conn<pos:position pos:line="430" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="430" pos:column="44">CLIENTWRITE_BODY<pos:position pos:line="430" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="430" pos:column="62">(<pos:position pos:line="430" pos:column="63"/></operator><name pos:line="430" pos:column="63">char<pos:position pos:line="430" pos:column="67"/></name> <operator pos:line="430" pos:column="68">*<pos:position pos:line="430" pos:column="69"/></operator><operator pos:line="430" pos:column="69">)<pos:position pos:line="430" pos:column="70"/></operator><literal type="string" pos:line="430" pos:column="70">"\n"<pos:position pos:line="430" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="430" pos:column="76">1<pos:position pos:line="430" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="430" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="430" pos:column="79"/></expr_stmt>
          <if pos:line="431" pos:column="11">if<condition pos:line="431" pos:column="13">(<expr><name pos:line="431" pos:column="14">result<pos:position pos:line="431" pos:column="20"/></name></expr>)<pos:position pos:line="431" pos:column="21"/></condition><then pos:line="431" pos:column="21"> <block pos:line="431" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="432" pos:column="13">ldap_value_free_len<pos:position pos:line="432" pos:column="32"/></name><argument_list pos:line="432" pos:column="32">(<argument><expr><name pos:line="432" pos:column="33">vals<pos:position pos:line="432" pos:column="37"/></name></expr></argument>)<pos:position pos:line="432" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="432" pos:column="39"/></expr_stmt>
<cpp:if pos:line="433" pos:column="1">#<cpp:directive pos:line="433" pos:column="2">if<pos:position pos:line="433" pos:column="4"/></cpp:directive> <expr><call><name pos:line="433" pos:column="5">defined<pos:position pos:line="433" pos:column="12"/></name><argument_list pos:line="433" pos:column="12">(<argument><expr><name pos:line="433" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="433" pos:column="27"/></name></expr></argument>)<pos:position pos:line="433" pos:column="28"/></argument_list></call></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="434" pos:column="13">Curl_unicodefree<pos:position pos:line="434" pos:column="29"/></name><argument_list pos:line="434" pos:column="29">(<argument><expr><name pos:line="434" pos:column="30">attr<pos:position pos:line="434" pos:column="34"/></name></expr></argument>)<pos:position pos:line="434" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="434" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="435" pos:column="1">#<cpp:directive pos:line="435" pos:column="2">endif<pos:position pos:line="435" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name pos:line="436" pos:column="13">ldap_memfree<pos:position pos:line="436" pos:column="25"/></name><argument_list pos:line="436" pos:column="25">(<argument><expr><name pos:line="436" pos:column="26">attribute<pos:position pos:line="436" pos:column="35"/></name></expr></argument>)<pos:position pos:line="436" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="436" pos:column="37"/></expr_stmt>
            <if pos:line="437" pos:column="13">if<condition pos:line="437" pos:column="15">(<expr><name pos:line="437" pos:column="16">ber<pos:position pos:line="437" pos:column="19"/></name></expr>)<pos:position pos:line="437" pos:column="20"/></condition><then pos:line="437" pos:column="20">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="438" pos:column="15">ber_free<pos:position pos:line="438" pos:column="23"/></name><argument_list pos:line="438" pos:column="23">(<argument><expr><name pos:line="438" pos:column="24">ber<pos:position pos:line="438" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="438" pos:column="29">0<pos:position pos:line="438" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="438" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="438" pos:column="32"/></expr_stmt></block></then></if>

            <goto pos:line="440" pos:column="13">goto <name pos:line="440" pos:column="18">quit<pos:position pos:line="440" pos:column="22"/></name>;<pos:position pos:line="440" pos:column="23"/></goto>
          }<pos:position pos:line="441" pos:column="12"/></block></then></if>

          <expr_stmt><expr><name pos:line="443" pos:column="11">dlsize<pos:position pos:line="443" pos:column="17"/></name><operator pos:line="443" pos:column="17">++<pos:position pos:line="443" pos:column="19"/></operator></expr>;<pos:position pos:line="443" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="444" pos:column="10"/></block></for>

        <comment type="block" pos:line="446" pos:column="9">/* Free memory used to store values */</comment>
        <expr_stmt><expr><call><name pos:line="447" pos:column="9">ldap_value_free_len<pos:position pos:line="447" pos:column="28"/></name><argument_list pos:line="447" pos:column="28">(<argument><expr><name pos:line="447" pos:column="29">vals<pos:position pos:line="447" pos:column="33"/></name></expr></argument>)<pos:position pos:line="447" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="447" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="448" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="450" pos:column="7">/* Free the attribute as we are done with it */</comment>
<cpp:if pos:line="451" pos:column="1">#<cpp:directive pos:line="451" pos:column="2">if<pos:position pos:line="451" pos:column="4"/></cpp:directive> <expr><call><name pos:line="451" pos:column="5">defined<pos:position pos:line="451" pos:column="12"/></name><argument_list pos:line="451" pos:column="12">(<argument><expr><name pos:line="451" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="451" pos:column="27"/></name></expr></argument>)<pos:position pos:line="451" pos:column="28"/></argument_list></call></expr></cpp:if>
      <expr_stmt><expr><call><name pos:line="452" pos:column="7">Curl_unicodefree<pos:position pos:line="452" pos:column="23"/></name><argument_list pos:line="452" pos:column="23">(<argument><expr><name pos:line="452" pos:column="24">attr<pos:position pos:line="452" pos:column="28"/></name></expr></argument>)<pos:position pos:line="452" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="452" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="453" pos:column="1">#<cpp:directive pos:line="453" pos:column="2">endif<pos:position pos:line="453" pos:column="7"/></cpp:directive></cpp:endif>
      <expr_stmt><expr><call><name pos:line="454" pos:column="7">ldap_memfree<pos:position pos:line="454" pos:column="19"/></name><argument_list pos:line="454" pos:column="19">(<argument><expr><name pos:line="454" pos:column="20">attribute<pos:position pos:line="454" pos:column="29"/></name></expr></argument>)<pos:position pos:line="454" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="454" pos:column="31"/></expr_stmt>

      <expr_stmt><expr><name pos:line="456" pos:column="7">result<pos:position pos:line="456" pos:column="13"/></name> <operator pos:line="456" pos:column="14">=<pos:position pos:line="456" pos:column="15"/></operator> <call><name pos:line="456" pos:column="16">Curl_client_write<pos:position pos:line="456" pos:column="33"/></name><argument_list pos:line="456" pos:column="33">(<argument><expr><name pos:line="456" pos:column="34">conn<pos:position pos:line="456" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="456" pos:column="40">CLIENTWRITE_BODY<pos:position pos:line="456" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="456" pos:column="58">(<pos:position pos:line="456" pos:column="59"/></operator><name pos:line="456" pos:column="59">char<pos:position pos:line="456" pos:column="63"/></name> <operator pos:line="456" pos:column="64">*<pos:position pos:line="456" pos:column="65"/></operator><operator pos:line="456" pos:column="65">)<pos:position pos:line="456" pos:column="66"/></operator><literal type="string" pos:line="456" pos:column="66">"\n"<pos:position pos:line="456" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="456" pos:column="72">1<pos:position pos:line="456" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="456" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="456" pos:column="75"/></expr_stmt>
      <if pos:line="457" pos:column="7">if<condition pos:line="457" pos:column="9">(<expr><name pos:line="457" pos:column="10">result<pos:position pos:line="457" pos:column="16"/></name></expr>)<pos:position pos:line="457" pos:column="17"/></condition><then pos:line="457" pos:column="17">
        <block type="pseudo"><goto pos:line="458" pos:column="9">goto <name pos:line="458" pos:column="14">quit<pos:position pos:line="458" pos:column="18"/></name>;<pos:position pos:line="458" pos:column="19"/></goto></block></then></if>
      <expr_stmt><expr><name pos:line="459" pos:column="7">dlsize<pos:position pos:line="459" pos:column="13"/></name><operator pos:line="459" pos:column="13">++<pos:position pos:line="459" pos:column="15"/></operator></expr>;<pos:position pos:line="459" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="460" pos:column="7">Curl_pgrsSetDownloadCounter<pos:position pos:line="460" pos:column="34"/></name><argument_list pos:line="460" pos:column="34">(<argument><expr><name pos:line="460" pos:column="35">data<pos:position pos:line="460" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="460" pos:column="41">dlsize<pos:position pos:line="460" pos:column="47"/></name></expr></argument>)<pos:position pos:line="460" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="460" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="461" pos:column="6"/></block></for>

    <if pos:line="463" pos:column="5">if<condition pos:line="463" pos:column="7">(<expr><name pos:line="463" pos:column="8">ber<pos:position pos:line="463" pos:column="11"/></name></expr>)<pos:position pos:line="463" pos:column="12"/></condition><then pos:line="463" pos:column="12">
       <block type="pseudo"><expr_stmt><expr><call><name pos:line="464" pos:column="8">ber_free<pos:position pos:line="464" pos:column="16"/></name><argument_list pos:line="464" pos:column="16">(<argument><expr><name pos:line="464" pos:column="17">ber<pos:position pos:line="464" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="464" pos:column="22">0<pos:position pos:line="464" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="464" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="464" pos:column="25"/></expr_stmt></block></then></if>
  }<pos:position pos:line="465" pos:column="4"/></block></for>

<label><name pos:line="467" pos:column="1">quit<pos:position pos:line="467" pos:column="5"/></name>:<pos:position pos:line="467" pos:column="6"/></label>
  <if pos:line="468" pos:column="3">if<condition pos:line="468" pos:column="5">(<expr><name pos:line="468" pos:column="6">ldapmsg<pos:position pos:line="468" pos:column="13"/></name></expr>)<pos:position pos:line="468" pos:column="14"/></condition><then pos:line="468" pos:column="14"> <block pos:line="468" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="469" pos:column="5">ldap_msgfree<pos:position pos:line="469" pos:column="17"/></name><argument_list pos:line="469" pos:column="17">(<argument><expr><name pos:line="469" pos:column="18">ldapmsg<pos:position pos:line="469" pos:column="25"/></name></expr></argument>)<pos:position pos:line="469" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="469" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="470" pos:column="5">LDAP_TRACE<pos:position pos:line="470" pos:column="15"/></name><argument_list pos:line="470" pos:column="15">(<argument><expr><operator pos:line="470" pos:column="16">(<pos:position pos:line="470" pos:column="17"/></operator><literal type="string" pos:line="470" pos:column="17">"Received %d entries\n"<pos:position pos:line="470" pos:column="40"/></literal><operator pos:line="470" pos:column="40">,<pos:position pos:line="470" pos:column="41"/></operator> <name pos:line="470" pos:column="42">num<pos:position pos:line="470" pos:column="45"/></name><operator pos:line="470" pos:column="45">)<pos:position pos:line="470" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="470" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="470" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="471" pos:column="4"/></block></then></if>
  <if pos:line="472" pos:column="3">if<condition pos:line="472" pos:column="5">(<expr><name pos:line="472" pos:column="6">rc<pos:position pos:line="472" pos:column="8"/></name> <operator pos:line="472" pos:column="9">==<pos:position pos:line="472" pos:column="11"/></operator> <name pos:line="472" pos:column="12">LDAP_SIZELIMIT_EXCEEDED<pos:position pos:line="472" pos:column="35"/></name></expr>)<pos:position pos:line="472" pos:column="36"/></condition><then pos:line="472" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="473" pos:column="5">infof<pos:position pos:line="473" pos:column="10"/></name><argument_list pos:line="473" pos:column="10">(<argument><expr><name pos:line="473" pos:column="11">data<pos:position pos:line="473" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="473" pos:column="17">"There are more than %d entries\n"<pos:position pos:line="473" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="473" pos:column="53">num<pos:position pos:line="473" pos:column="56"/></name></expr></argument>)<pos:position pos:line="473" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="473" pos:column="58"/></expr_stmt></block></then></if>
  <if pos:line="474" pos:column="3">if<condition pos:line="474" pos:column="5">(<expr><name pos:line="474" pos:column="6">ludp<pos:position pos:line="474" pos:column="10"/></name></expr>)<pos:position pos:line="474" pos:column="11"/></condition><then pos:line="474" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="475" pos:column="5">ldap_free_urldesc<pos:position pos:line="475" pos:column="22"/></name><argument_list pos:line="475" pos:column="22">(<argument><expr><name pos:line="475" pos:column="23">ludp<pos:position pos:line="475" pos:column="27"/></name></expr></argument>)<pos:position pos:line="475" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="475" pos:column="29"/></expr_stmt></block></then></if>
  <if pos:line="476" pos:column="3">if<condition pos:line="476" pos:column="5">(<expr><name pos:line="476" pos:column="6">server<pos:position pos:line="476" pos:column="12"/></name></expr>)<pos:position pos:line="476" pos:column="13"/></condition><then pos:line="476" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="477" pos:column="5">ldap_unbind_s<pos:position pos:line="477" pos:column="18"/></name><argument_list pos:line="477" pos:column="18">(<argument><expr><name pos:line="477" pos:column="19">server<pos:position pos:line="477" pos:column="25"/></name></expr></argument>)<pos:position pos:line="477" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="477" pos:column="27"/></expr_stmt></block></then></if>
<cpp:if pos:line="478" pos:column="1">#<cpp:directive pos:line="478" pos:column="2">if<pos:position pos:line="478" pos:column="4"/></cpp:directive> <expr><call><name pos:line="478" pos:column="5">defined<pos:position pos:line="478" pos:column="12"/></name><argument_list pos:line="478" pos:column="12">(<argument><expr><name pos:line="478" pos:column="13">HAVE_LDAP_SSL<pos:position pos:line="478" pos:column="26"/></name></expr></argument>)<pos:position pos:line="478" pos:column="27"/></argument_list></call> <operator pos:line="478" pos:column="28">&amp;&amp;<pos:position pos:line="478" pos:column="38"/></operator> <call><name pos:line="478" pos:column="31">defined<pos:position pos:line="478" pos:column="38"/></name><argument_list pos:line="478" pos:column="38">(<argument><expr><name pos:line="478" pos:column="39">CURL_HAS_NOVELL_LDAPSDK<pos:position pos:line="478" pos:column="62"/></name></expr></argument>)<pos:position pos:line="478" pos:column="63"/></argument_list></call></expr></cpp:if>
  <if pos:line="479" pos:column="3">if<condition pos:line="479" pos:column="5">(<expr><name pos:line="479" pos:column="6">ldap_ssl<pos:position pos:line="479" pos:column="14"/></name></expr>)<pos:position pos:line="479" pos:column="15"/></condition><then pos:line="479" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="480" pos:column="5">ldapssl_client_deinit<pos:position pos:line="480" pos:column="26"/></name><argument_list pos:line="480" pos:column="26">()<pos:position pos:line="480" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="480" pos:column="29"/></expr_stmt></block></then></if>
<cpp:endif pos:line="481" pos:column="1">#<cpp:directive pos:line="481" pos:column="2">endif<pos:position pos:line="481" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="481" pos:column="8">/* HAVE_LDAP_SSL &amp;&amp; CURL_HAS_NOVELL_LDAPSDK */</comment>

<cpp:if pos:line="483" pos:column="1">#<cpp:directive pos:line="483" pos:column="2">if<pos:position pos:line="483" pos:column="4"/></cpp:directive> <expr><call><name pos:line="483" pos:column="5">defined<pos:position pos:line="483" pos:column="12"/></name><argument_list pos:line="483" pos:column="12">(<argument><expr><name pos:line="483" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="483" pos:column="27"/></name></expr></argument>)<pos:position pos:line="483" pos:column="28"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="484" pos:column="3">Curl_unicodefree<pos:position pos:line="484" pos:column="19"/></name><argument_list pos:line="484" pos:column="19">(<argument><expr><name pos:line="484" pos:column="20">host<pos:position pos:line="484" pos:column="24"/></name></expr></argument>)<pos:position pos:line="484" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="484" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="485" pos:column="1">#<cpp:directive pos:line="485" pos:column="2">endif<pos:position pos:line="485" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="487" pos:column="3">/* no data to transfer */</comment>
  <expr_stmt><expr><call><name pos:line="488" pos:column="3">Curl_setup_transfer<pos:position pos:line="488" pos:column="22"/></name><argument_list pos:line="488" pos:column="22">(<argument><expr><name pos:line="488" pos:column="23">conn<pos:position pos:line="488" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="488" pos:column="29">-<pos:position pos:line="488" pos:column="30"/></operator><literal type="number" pos:line="488" pos:column="30">1<pos:position pos:line="488" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="488" pos:column="33">-<pos:position pos:line="488" pos:column="34"/></operator><literal type="number" pos:line="488" pos:column="34">1<pos:position pos:line="488" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="488" pos:column="37">FALSE<pos:position pos:line="488" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="488" pos:column="44">NULL<pos:position pos:line="488" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="488" pos:column="50">-<pos:position pos:line="488" pos:column="51"/></operator><literal type="number" pos:line="488" pos:column="51">1<pos:position pos:line="488" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="488" pos:column="54">NULL<pos:position pos:line="488" pos:column="58"/></name></expr></argument>)<pos:position pos:line="488" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="488" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="489" pos:column="3">connclose<pos:position pos:line="489" pos:column="12"/></name><argument_list pos:line="489" pos:column="12">(<argument><expr><name pos:line="489" pos:column="13">conn<pos:position pos:line="489" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="489" pos:column="19">"LDAP connection always disable re-use"<pos:position pos:line="489" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="489" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="489" pos:column="60"/></expr_stmt>

  <return pos:line="491" pos:column="3">return <expr><name pos:line="491" pos:column="10">result<pos:position pos:line="491" pos:column="16"/></name></expr>;<pos:position pos:line="491" pos:column="17"/></return>
}<pos:position pos:line="492" pos:column="2"/></block></function></unit>

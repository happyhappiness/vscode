<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_877_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">convert_char<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">curl_infotype<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">infotype<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">this_char<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
<comment type="block" pos:line="3" pos:column="1">/* determine how this specific character should be displayed */</comment>
  <switch pos:line="4" pos:column="3">switch<condition pos:line="4" pos:column="9">(<expr><name pos:line="4" pos:column="10">infotype<pos:position pos:line="4" pos:column="18"/></name></expr>)<pos:position pos:line="4" pos:column="19"/></condition> <block pos:line="4" pos:column="20">{
  <case pos:line="5" pos:column="3">case <expr><name pos:line="5" pos:column="8">CURLINFO_DATA_IN<pos:position pos:line="5" pos:column="24"/></name></expr>:<pos:position pos:line="5" pos:column="25"/></case>
  <case pos:line="6" pos:column="3">case <expr><name pos:line="6" pos:column="8">CURLINFO_DATA_OUT<pos:position pos:line="6" pos:column="25"/></name></expr>:<pos:position pos:line="6" pos:column="26"/></case>
  <case pos:line="7" pos:column="3">case <expr><name pos:line="7" pos:column="8">CURLINFO_SSL_DATA_IN<pos:position pos:line="7" pos:column="28"/></name></expr>:<pos:position pos:line="7" pos:column="29"/></case>
  <case pos:line="8" pos:column="3">case <expr><name pos:line="8" pos:column="8">CURLINFO_SSL_DATA_OUT<pos:position pos:line="8" pos:column="29"/></name></expr>:<pos:position pos:line="8" pos:column="30"/></case>
    <comment type="block" pos:line="9" pos:column="5">/* data, treat as ASCII */</comment>
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><operator pos:line="10" pos:column="8">(<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">this_char<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">&gt;=<pos:position pos:line="10" pos:column="24"/></operator> <literal type="number" pos:line="10" pos:column="22">0x20<pos:position pos:line="10" pos:column="26"/></literal><operator pos:line="10" pos:column="26">)<pos:position pos:line="10" pos:column="27"/></operator> <operator pos:line="10" pos:column="28">&amp;&amp;<pos:position pos:line="10" pos:column="38"/></operator> <operator pos:line="10" pos:column="31">(<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">this_char<pos:position pos:line="10" pos:column="41"/></name> <operator pos:line="10" pos:column="42">&lt;<pos:position pos:line="10" pos:column="46"/></operator> <literal type="number" pos:line="10" pos:column="44">0x7f<pos:position pos:line="10" pos:column="48"/></literal><operator pos:line="10" pos:column="48">)<pos:position pos:line="10" pos:column="49"/></operator></expr>)<pos:position pos:line="10" pos:column="50"/></condition><then pos:line="10" pos:column="50"> <block pos:line="10" pos:column="51">{
      <comment type="block" pos:line="11" pos:column="7">/* printable ASCII hex value: convert to host encoding */</comment>
      <expr_stmt><expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">void<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">)<pos:position pos:line="12" pos:column="13"/></operator><call><name pos:line="12" pos:column="13">convert_from_network<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><operator pos:line="12" pos:column="34">&amp;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="35">this_char<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="46">1<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then>
    <else pos:line="14" pos:column="5">else <block pos:line="14" pos:column="10">{
      <comment type="block" pos:line="15" pos:column="7">/* non-printable ASCII, use a replacement character */</comment>
      <return pos:line="16" pos:column="7">return <expr><name pos:line="16" pos:column="14">UNPRINTABLE_CHAR<pos:position pos:line="16" pos:column="30"/></name></expr>;<pos:position pos:line="16" pos:column="31"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></else></if>
    <comment type="block" pos:line="18" pos:column="5">/* fall through to default */</comment>
  <default pos:line="19" pos:column="3">default:<pos:position pos:line="19" pos:column="11"/></default>
    <comment type="block" pos:line="20" pos:column="5">/* treat as host encoding */</comment>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><call><name pos:line="21" pos:column="8">ISPRINT<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">this_char<pos:position pos:line="21" pos:column="25"/></name></expr></argument>)<pos:position pos:line="21" pos:column="26"/></argument_list></call>
       <operator pos:line="22" pos:column="8">&amp;&amp;<pos:position pos:line="22" pos:column="18"/></operator>  <operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">this_char<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">!=<pos:position pos:line="22" pos:column="25"/></operator> <literal type="char" pos:line="22" pos:column="26">'\t'<pos:position pos:line="22" pos:column="30"/></literal><operator pos:line="22" pos:column="30">)<pos:position pos:line="22" pos:column="31"/></operator>
       <operator pos:line="23" pos:column="8">&amp;&amp;<pos:position pos:line="23" pos:column="18"/></operator>  <operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">this_char<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">!=<pos:position pos:line="23" pos:column="25"/></operator> <literal type="char" pos:line="23" pos:column="26">'\r'<pos:position pos:line="23" pos:column="30"/></literal><operator pos:line="23" pos:column="30">)<pos:position pos:line="23" pos:column="31"/></operator>
       <operator pos:line="24" pos:column="8">&amp;&amp;<pos:position pos:line="24" pos:column="18"/></operator>  <operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">this_char<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">!=<pos:position pos:line="24" pos:column="25"/></operator> <literal type="char" pos:line="24" pos:column="26">'\n'<pos:position pos:line="24" pos:column="30"/></literal><operator pos:line="24" pos:column="30">)<pos:position pos:line="24" pos:column="31"/></operator></expr>)<pos:position pos:line="24" pos:column="32"/></condition><then pos:line="24" pos:column="32"> <block pos:line="24" pos:column="33">{
      <comment type="block" pos:line="25" pos:column="7">/* printable characters excluding tabs and line end characters */</comment>
      <return pos:line="26" pos:column="7">return <expr><name pos:line="26" pos:column="14">this_char<pos:position pos:line="26" pos:column="23"/></name></expr>;<pos:position pos:line="26" pos:column="24"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <break pos:line="28" pos:column="5">break;<pos:position pos:line="28" pos:column="11"/></break>
  }<pos:position pos:line="29" pos:column="4"/></block></switch>
  <comment type="block" pos:line="30" pos:column="3">/* non-printable, use a replacement character  */</comment>
  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">UNPRINTABLE_CHAR<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

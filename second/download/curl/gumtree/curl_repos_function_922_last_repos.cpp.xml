<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_922_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">main_free<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">GlobalConfig<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">config<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* Cleanup the easy handle */</comment>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">curl_easy_cleanup<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name><name pos:line="4" pos:column="21">config<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">easy<pos:position pos:line="4" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="5" pos:column="3">config<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">-&gt;<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="11">easy<pos:position pos:line="5" pos:column="15"/></name></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Main cleanup */</comment>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">curl_global_cleanup<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">()<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">convert_cleanup<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">()<pos:position pos:line="9" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">metalink_cleanup<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">()<pos:position pos:line="10" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>
<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">USE_NSS<pos:position pos:line="11" pos:column="15"/></name></cpp:ifdef>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><call><name pos:line="12" pos:column="6">PR_Initialized<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">()<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="23"/></condition><then pos:line="12" pos:column="23"> <block pos:line="12" pos:column="24">{
    <comment type="block" pos:line="13" pos:column="5">/* prevent valgrind from reporting still reachable mem from NSRP arenas */</comment>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">PL_ArenaFinish<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">()<pos:position pos:line="14" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
    <comment type="block" pos:line="15" pos:column="5">/* prevent valgrind from reporting possibly lost memory (fd cache, ...) */</comment>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">PR_Cleanup<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">()<pos:position pos:line="16" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">free_config_fields<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">config<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* Free the config structures */</comment>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">config_free<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><name><name pos:line="22" pos:column="15">config<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">last<pos:position pos:line="22" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">config<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">first<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">NULL<pos:position pos:line="23" pos:column="23"/></name></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">config<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">-&gt;<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="11">last<pos:position pos:line="24" pos:column="15"/></name></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">NULL<pos:position pos:line="24" pos:column="22"/></name></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_960_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">unslashquote<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">line<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">param<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <while pos:line="3" pos:column="3">while<condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">line<pos:position pos:line="3" pos:column="14"/></name> <operator pos:line="3" pos:column="15">&amp;&amp;<pos:position pos:line="3" pos:column="25"/></operator> <operator pos:line="3" pos:column="18">(<pos:position pos:line="3" pos:column="19"/></operator><operator pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="20">line<pos:position pos:line="3" pos:column="24"/></name> <operator pos:line="3" pos:column="25">!=<pos:position pos:line="3" pos:column="27"/></operator> <literal type="char" pos:line="3" pos:column="28">'\"'<pos:position pos:line="3" pos:column="32"/></literal><operator pos:line="3" pos:column="32">)<pos:position pos:line="3" pos:column="33"/></operator></expr>)<pos:position pos:line="3" pos:column="34"/></condition> <block pos:line="3" pos:column="35">{
    <if pos:line="4" pos:column="5">if<condition pos:line="4" pos:column="7">(<expr><operator pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></operator><name pos:line="4" pos:column="9">line<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">==<pos:position pos:line="4" pos:column="16"/></operator> <literal type="char" pos:line="4" pos:column="17">'\\'<pos:position pos:line="4" pos:column="21"/></literal></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22"> <block pos:line="4" pos:column="23">{
      <decl_stmt><decl><type><name pos:line="5" pos:column="7">char<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">out<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
      <expr_stmt><expr><name pos:line="6" pos:column="7">line<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">++<pos:position pos:line="6" pos:column="13"/></operator></expr>;<pos:position pos:line="6" pos:column="14"/></expr_stmt>

      <comment type="block" pos:line="8" pos:column="7">/* default is to output the letter after the backslash */</comment>
      <switch pos:line="9" pos:column="7">switch<condition pos:line="9" pos:column="13">(<expr><name pos:line="9" pos:column="14">out<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <operator pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">line<pos:position pos:line="9" pos:column="25"/></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition> <block pos:line="9" pos:column="27">{
      <case pos:line="10" pos:column="7">case <expr><literal type="char" pos:line="10" pos:column="12">'\0'<pos:position pos:line="10" pos:column="16"/></literal></expr>:<pos:position pos:line="10" pos:column="17"/></case>
        <continue pos:line="11" pos:column="9">continue;<pos:position pos:line="11" pos:column="18"/></continue> <comment type="block" pos:line="11" pos:column="19">/* this'll break out of the loop */</comment>
      <case pos:line="12" pos:column="7">case <expr><literal type="char" pos:line="12" pos:column="12">'t'<pos:position pos:line="12" pos:column="15"/></literal></expr>:<pos:position pos:line="12" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="13" pos:column="9">out<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <literal type="char" pos:line="13" pos:column="15">'\t'<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt>
        <break pos:line="14" pos:column="9">break;<pos:position pos:line="14" pos:column="15"/></break>
      <case pos:line="15" pos:column="7">case <expr><literal type="char" pos:line="15" pos:column="12">'n'<pos:position pos:line="15" pos:column="15"/></literal></expr>:<pos:position pos:line="15" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="16" pos:column="9">out<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <literal type="char" pos:line="16" pos:column="15">'\n'<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
        <break pos:line="17" pos:column="9">break;<pos:position pos:line="17" pos:column="15"/></break>
      <case pos:line="18" pos:column="7">case <expr><literal type="char" pos:line="18" pos:column="12">'r'<pos:position pos:line="18" pos:column="15"/></literal></expr>:<pos:position pos:line="18" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="19" pos:column="9">out<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <literal type="char" pos:line="19" pos:column="15">'\r'<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
        <break pos:line="20" pos:column="9">break;<pos:position pos:line="20" pos:column="15"/></break>
      <case pos:line="21" pos:column="7">case <expr><literal type="char" pos:line="21" pos:column="12">'v'<pos:position pos:line="21" pos:column="15"/></literal></expr>:<pos:position pos:line="21" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="22" pos:column="9">out<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <literal type="char" pos:line="22" pos:column="15">'\v'<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
        <break pos:line="23" pos:column="9">break;<pos:position pos:line="23" pos:column="15"/></break>
      }<pos:position pos:line="24" pos:column="8"/></block></switch>
      <expr_stmt><expr><operator pos:line="25" pos:column="7">*<pos:position pos:line="25" pos:column="8"/></operator><name pos:line="25" pos:column="8">param<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">++<pos:position pos:line="25" pos:column="15"/></operator> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="18">out<pos:position pos:line="25" pos:column="21"/></name></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="26" pos:column="7">line<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">++<pos:position pos:line="26" pos:column="13"/></operator></expr>;<pos:position pos:line="26" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then>
    <else pos:line="28" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="29" pos:column="7">*<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">param<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">++<pos:position pos:line="29" pos:column="15"/></operator> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <operator pos:line="29" pos:column="18">*<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">line<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">++<pos:position pos:line="29" pos:column="25"/></operator></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt></block></else></if>
  }<pos:position pos:line="30" pos:column="4"/></block></while>
  <expr_stmt><expr><operator pos:line="31" pos:column="3">*<pos:position pos:line="31" pos:column="4"/></operator><name pos:line="31" pos:column="4">param<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <literal type="char" pos:line="31" pos:column="12">'\0'<pos:position pos:line="31" pos:column="16"/></literal></expr>;<pos:position pos:line="31" pos:column="17"/></expr_stmt> <comment type="block" pos:line="31" pos:column="18">/* always zero terminate */</comment>
  <return pos:line="32" pos:column="3">return <expr><name pos:line="32" pos:column="10">line<pos:position pos:line="32" pos:column="14"/></name></expr>;<pos:position pos:line="32" pos:column="15"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_895_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_connect<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">connectdata<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">conn<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">bool<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">done<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list> <comment type="block" pos:line="2" pos:column="46">/* see description above */</comment>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
<cpp:ifndef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifndef<pos:position pos:line="5" pos:column="8"/></cpp:directive> <name pos:line="5" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="5" pos:column="26"/></name></cpp:ifndef>
  <comment type="block" pos:line="6" pos:column="3">/* for FTP over HTTP proxy */</comment>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">HTTP<pos:position pos:line="7" pos:column="14"/></name></name></type> <name pos:line="7" pos:column="15">http_proxy<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">FTP<pos:position pos:line="8" pos:column="13"/></name></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">ftp_save<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>   <comment type="block" pos:line="9" pos:column="10">/* CURL_DISABLE_HTTP */</comment>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">ftp_conn<pos:position pos:line="10" pos:column="18"/></name></name> <modifier pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></modifier></type><name pos:line="10" pos:column="20">ftpc<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><operator pos:line="10" pos:column="27">&amp;<pos:position pos:line="10" pos:column="32"/></operator><name><name pos:line="10" pos:column="28">conn<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">proto<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">.<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">ftpc<pos:position pos:line="10" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">SessionHandle<pos:position pos:line="11" pos:column="23"/></name></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">data<pos:position pos:line="11" pos:column="29"/></name><init pos:line="11" pos:column="29">=<expr><name><name pos:line="11" pos:column="30">conn<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">-&gt;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="36">data<pos:position pos:line="11" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="41"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="13" pos:column="3">*<pos:position pos:line="13" pos:column="4"/></operator><name pos:line="13" pos:column="4">done<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <name pos:line="13" pos:column="11">FALSE<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt> <comment type="block" pos:line="13" pos:column="18">/* default to not done yet */</comment>

  <comment type="block" pos:line="15" pos:column="3">/* If there already is a protocol-specific struct allocated for this
     sessionhandle, deal with it */</comment>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">Curl_reset_reqproto<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">conn<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">result<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">ftp_init<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">conn<pos:position pos:line="19" pos:column="25"/></name></expr></argument>)<pos:position pos:line="19" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name pos:line="20" pos:column="6">result<pos:position pos:line="20" pos:column="12"/></name></expr>)<pos:position pos:line="20" pos:column="13"/></condition><then pos:line="20" pos:column="13">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">result<pos:position pos:line="21" pos:column="18"/></name></expr>;<pos:position pos:line="21" pos:column="19"/></return></block></then></if>

  <comment type="block" pos:line="23" pos:column="3">/* We always support persistant connections on ftp */</comment>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">conn<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">bits<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">.<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">close<pos:position pos:line="24" pos:column="19"/></name></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">FALSE<pos:position pos:line="24" pos:column="27"/></name></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="26" pos:column="3">ftpc<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">response_time<pos:position pos:line="26" pos:column="22"/></name></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <literal type="number" pos:line="26" pos:column="25">3600000<pos:position pos:line="26" pos:column="32"/></literal></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt> <comment type="block" pos:line="26" pos:column="34">/* set default response time-out */</comment>

<cpp:ifndef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifndef<pos:position pos:line="28" pos:column="8"/></cpp:directive> <name pos:line="28" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="28" pos:column="26"/></name></cpp:ifndef>
  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">(<expr><name><name pos:line="29" pos:column="6">conn<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">bits<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">.<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">tunnel_proxy<pos:position pos:line="29" pos:column="29"/></name></name> <operator pos:line="29" pos:column="30">&amp;&amp;<pos:position pos:line="29" pos:column="40"/></operator> <name><name pos:line="29" pos:column="33">conn<pos:position pos:line="29" pos:column="37"/></name><operator pos:line="29" pos:column="37">-&gt;<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="39">bits<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">.<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="44">httpproxy<pos:position pos:line="29" pos:column="53"/></name></name></expr>)<pos:position pos:line="29" pos:column="54"/></condition><then pos:line="29" pos:column="54"> <block pos:line="29" pos:column="55">{
    <comment type="block" pos:line="30" pos:column="5">/* BLOCKING */</comment>
    <comment type="block" pos:line="31" pos:column="5">/* We want "seamless" FTP operations through HTTP proxy tunnel */</comment>

    <comment type="block" pos:line="33" pos:column="5">/* Curl_proxyCONNECT is based on a pointer to a struct HTTP at the member
     * conn-&gt;proto.http; we want FTP through HTTP and we have to change the
     * member temporarily for connecting to the HTTP proxy. After
     * Curl_proxyCONNECT we have to set back the member to the original struct
     * FTP pointer
     */</comment>
    <expr_stmt><expr><name pos:line="39" pos:column="5">ftp_save<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <name><name pos:line="39" pos:column="16">data<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">state<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">.<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="28">proto<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">.<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="34">ftp<pos:position pos:line="39" pos:column="37"/></name></name></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">memset<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><operator pos:line="40" pos:column="12">&amp;<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="13">http_proxy<pos:position pos:line="40" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="25">0<pos:position pos:line="40" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="28">sizeof<argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">http_proxy<pos:position pos:line="40" pos:column="45"/></name></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">data<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">-&gt;<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="11">state<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">.<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">proto<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">.<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="23">http<pos:position pos:line="41" pos:column="27"/></name></name> <operator pos:line="41" pos:column="28">=<pos:position pos:line="41" pos:column="29"/></operator> <operator pos:line="41" pos:column="30">&amp;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="31">http_proxy<pos:position pos:line="41" pos:column="41"/></name></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><name pos:line="43" pos:column="5">result<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <call><name pos:line="43" pos:column="14">Curl_proxyCONNECT<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><name pos:line="43" pos:column="32">conn<pos:position pos:line="43" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="38">FIRSTSOCKET<pos:position pos:line="43" pos:column="49"/></name></expr></argument>,
                               <argument><expr><name><name pos:line="44" pos:column="32">conn<pos:position pos:line="44" pos:column="36"/></name><operator pos:line="44" pos:column="36">-&gt;<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="38">host<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">.<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="43">name<pos:position pos:line="44" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="49">conn<pos:position pos:line="44" pos:column="53"/></name><operator pos:line="44" pos:column="53">-&gt;<pos:position pos:line="44" pos:column="58"/></operator><name pos:line="44" pos:column="55">remote_port<pos:position pos:line="44" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="68"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="46" pos:column="5">data<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">-&gt;<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="11">state<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">.<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="17">proto<pos:position pos:line="46" pos:column="22"/></name><operator pos:line="46" pos:column="22">.<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="23">ftp<pos:position pos:line="46" pos:column="26"/></name></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <name pos:line="46" pos:column="29">ftp_save<pos:position pos:line="46" pos:column="37"/></name></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>

    <if pos:line="48" pos:column="5">if<condition pos:line="48" pos:column="7">(<expr><name pos:line="48" pos:column="8">CURLE_OK<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">!=<pos:position pos:line="48" pos:column="19"/></operator> <name pos:line="48" pos:column="20">result<pos:position pos:line="48" pos:column="26"/></name></expr>)<pos:position pos:line="48" pos:column="27"/></condition><then pos:line="48" pos:column="27">
      <block type="pseudo"><return pos:line="49" pos:column="7">return <expr><name pos:line="49" pos:column="14">result<pos:position pos:line="49" pos:column="20"/></name></expr>;<pos:position pos:line="49" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>   <comment type="block" pos:line="51" pos:column="10">/* CURL_DISABLE_HTTP */</comment>

  <if pos:line="53" pos:column="3">if<condition pos:line="53" pos:column="5">(<expr><name><name pos:line="53" pos:column="6">conn<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">protocol<pos:position pos:line="53" pos:column="20"/></name></name> <operator pos:line="53" pos:column="21">&amp;<pos:position pos:line="53" pos:column="26"/></operator> <name pos:line="53" pos:column="23">PROT_FTPS<pos:position pos:line="53" pos:column="32"/></name></expr>)<pos:position pos:line="53" pos:column="33"/></condition><then pos:line="53" pos:column="33"> <block pos:line="53" pos:column="34">{
    <comment type="block" pos:line="54" pos:column="5">/* BLOCKING */</comment>
    <comment type="block" pos:line="55" pos:column="5">/* FTPS is simply ftp with SSL for the control channel */</comment>
    <comment type="block" pos:line="56" pos:column="5">/* now, perform the SSL initialization for this socket */</comment>
    <expr_stmt><expr><name pos:line="57" pos:column="5">result<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <call><name pos:line="57" pos:column="14">Curl_ssl_connect<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">conn<pos:position pos:line="57" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="37">FIRSTSOCKET<pos:position pos:line="57" pos:column="48"/></name></expr></argument>)<pos:position pos:line="57" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="50"/></expr_stmt>
    <if pos:line="58" pos:column="5">if<condition pos:line="58" pos:column="7">(<expr><name pos:line="58" pos:column="8">result<pos:position pos:line="58" pos:column="14"/></name></expr>)<pos:position pos:line="58" pos:column="15"/></condition><then pos:line="58" pos:column="15">
      <block type="pseudo"><return pos:line="59" pos:column="7">return <expr><name pos:line="59" pos:column="14">result<pos:position pos:line="59" pos:column="20"/></name></expr>;<pos:position pos:line="59" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="62" pos:column="3">/* When we connect, we start in the state where we await the 220
     response */</comment>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">ftp_respinit<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><name pos:line="64" pos:column="16">conn<pos:position pos:line="64" pos:column="20"/></name></expr></argument>)<pos:position pos:line="64" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="22"/></expr_stmt> <comment type="block" pos:line="64" pos:column="23">/* init the response reader stuff */</comment>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">state<pos:position pos:line="65" pos:column="8"/></name><argument_list pos:line="65" pos:column="8">(<argument><expr><name pos:line="65" pos:column="9">conn<pos:position pos:line="65" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="15">FTP_WAIT220<pos:position pos:line="65" pos:column="26"/></name></expr></argument>)<pos:position pos:line="65" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="66" pos:column="3">ftpc<pos:position pos:line="66" pos:column="7"/></name><operator pos:line="66" pos:column="7">-&gt;<pos:position pos:line="66" pos:column="12"/></operator><name pos:line="66" pos:column="9">response<pos:position pos:line="66" pos:column="17"/></name></name> <operator pos:line="66" pos:column="18">=<pos:position pos:line="66" pos:column="19"/></operator> <call><name pos:line="66" pos:column="20">Curl_tvnow<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">()<pos:position pos:line="66" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="33"/></expr_stmt> <comment type="block" pos:line="66" pos:column="34">/* start response time-out now! */</comment>

  <if pos:line="68" pos:column="3">if<condition pos:line="68" pos:column="5">(<expr><name><name pos:line="68" pos:column="6">data<pos:position pos:line="68" pos:column="10"/></name><operator pos:line="68" pos:column="10">-&gt;<pos:position pos:line="68" pos:column="15"/></operator><name pos:line="68" pos:column="12">state<pos:position pos:line="68" pos:column="17"/></name><operator pos:line="68" pos:column="17">.<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="18">used_interface<pos:position pos:line="68" pos:column="32"/></name></name> <operator pos:line="68" pos:column="33">==<pos:position pos:line="68" pos:column="35"/></operator> <name pos:line="68" pos:column="36">Curl_if_multi<pos:position pos:line="68" pos:column="49"/></name></expr>)<pos:position pos:line="68" pos:column="50"/></condition><then pos:line="68" pos:column="50">
    <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="5">result<pos:position pos:line="69" pos:column="11"/></name> <operator pos:line="69" pos:column="12">=<pos:position pos:line="69" pos:column="13"/></operator> <call><name pos:line="69" pos:column="14">ftp_multi_statemach<pos:position pos:line="69" pos:column="33"/></name><argument_list pos:line="69" pos:column="33">(<argument><expr><name pos:line="69" pos:column="34">conn<pos:position pos:line="69" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="40">done<pos:position pos:line="69" pos:column="44"/></name></expr></argument>)<pos:position pos:line="69" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="46"/></expr_stmt></block></then>
  <else pos:line="70" pos:column="3">else <block pos:line="70" pos:column="8">{
    <expr_stmt><expr><name pos:line="71" pos:column="5">result<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">=<pos:position pos:line="71" pos:column="13"/></operator> <call><name pos:line="71" pos:column="14">ftp_easy_statemach<pos:position pos:line="71" pos:column="32"/></name><argument_list pos:line="71" pos:column="32">(<argument><expr><name pos:line="71" pos:column="33">conn<pos:position pos:line="71" pos:column="37"/></name></expr></argument>)<pos:position pos:line="71" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="39"/></expr_stmt>
    <if pos:line="72" pos:column="5">if<condition pos:line="72" pos:column="7">(<expr><operator pos:line="72" pos:column="8">!<pos:position pos:line="72" pos:column="9"/></operator><name pos:line="72" pos:column="9">result<pos:position pos:line="72" pos:column="15"/></name></expr>)<pos:position pos:line="72" pos:column="16"/></condition><then pos:line="72" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="73" pos:column="7">*<pos:position pos:line="73" pos:column="8"/></operator><name pos:line="73" pos:column="8">done<pos:position pos:line="73" pos:column="12"/></name> <operator pos:line="73" pos:column="13">=<pos:position pos:line="73" pos:column="14"/></operator> <name pos:line="73" pos:column="15">TRUE<pos:position pos:line="73" pos:column="19"/></name></expr>;<pos:position pos:line="73" pos:column="20"/></expr_stmt></block></then></if>
  }<pos:position pos:line="74" pos:column="4"/></block></else></if>

  <return pos:line="76" pos:column="3">return <expr><name pos:line="76" pos:column="10">result<pos:position pos:line="76" pos:column="16"/></name></expr>;<pos:position pos:line="76" pos:column="17"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

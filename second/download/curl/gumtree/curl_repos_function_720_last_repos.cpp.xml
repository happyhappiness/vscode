<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_720_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">writeit<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">testcase<pos:position pos:line="1" pos:column="35"/></name></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">test<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">tftphdr<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier> <specifier pos:line="1" pos:column="60">volatile<pos:position pos:line="1" pos:column="68"/></specifier> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">dpp<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">ct<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">convert<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <expr_stmt><expr><name><name pos:line="4" pos:column="3">bfs<pos:position pos:line="4" pos:column="6"/></name><index pos:line="4" pos:column="6">[<expr><name pos:line="4" pos:column="7">current<pos:position pos:line="4" pos:column="14"/></name></expr>]<pos:position pos:line="4" pos:column="15"/></index></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">counter<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">=<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="26">ct<pos:position pos:line="4" pos:column="28"/></name></expr>;<pos:position pos:line="4" pos:column="29"/></expr_stmt>      <comment type="block" pos:line="4" pos:column="35">/* set size of data to write */</comment>
  <expr_stmt><expr><name pos:line="5" pos:column="3">current<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">current<pos:position pos:line="5" pos:column="21"/></name></expr>;<pos:position pos:line="5" pos:column="22"/></expr_stmt>             <comment type="block" pos:line="5" pos:column="35">/* switch to other buffer */</comment>
  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name><name pos:line="6" pos:column="6">bfs<pos:position pos:line="6" pos:column="9"/></name><index pos:line="6" pos:column="9">[<expr><name pos:line="6" pos:column="10">current<pos:position pos:line="6" pos:column="17"/></name></expr>]<pos:position pos:line="6" pos:column="18"/></index></name><operator pos:line="6" pos:column="18">.<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">counter<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">!=<pos:position pos:line="6" pos:column="29"/></operator> <name pos:line="6" pos:column="30">BF_FREE<pos:position pos:line="6" pos:column="37"/></name></expr>)<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38">     <comment type="block" pos:line="6" pos:column="43">/* if not free */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="5">write_behind<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">test<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="24">convert<pos:position pos:line="7" pos:column="31"/></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt></block></then></if>     <comment type="block" pos:line="7" pos:column="38">/* flush it */</comment>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">bfs<pos:position pos:line="8" pos:column="6"/></name><index pos:line="8" pos:column="6">[<expr><name pos:line="8" pos:column="7">current<pos:position pos:line="8" pos:column="14"/></name></expr>]<pos:position pos:line="8" pos:column="15"/></index></name><operator pos:line="8" pos:column="15">.<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">counter<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="26">BF_ALLOC<pos:position pos:line="8" pos:column="34"/></name></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>        <comment type="block" pos:line="8" pos:column="43">/* mark as alloc'd */</comment>
  <expr_stmt><expr><operator pos:line="9" pos:column="3">*<pos:position pos:line="9" pos:column="4"/></operator><name pos:line="9" pos:column="4">dpp<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator>  <operator pos:line="9" pos:column="11">&amp;<pos:position pos:line="9" pos:column="16"/></operator><name><name pos:line="9" pos:column="12">bfs<pos:position pos:line="9" pos:column="15"/></name><index pos:line="9" pos:column="15">[<expr><name pos:line="9" pos:column="16">current<pos:position pos:line="9" pos:column="23"/></name></expr>]<pos:position pos:line="9" pos:column="24"/></index></name><operator pos:line="9" pos:column="24">.<pos:position pos:line="9" pos:column="25"/></operator><name><name pos:line="9" pos:column="25">buf<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">.<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">hdr<pos:position pos:line="9" pos:column="32"/></name></name></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
  <return pos:line="10" pos:column="3">return <expr><name pos:line="10" pos:column="10">ct<pos:position pos:line="10" pos:column="12"/></name></expr>;<pos:position pos:line="10" pos:column="13"/></return>                      <comment type="block" pos:line="10" pos:column="35">/* this is a lie of course */</comment>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

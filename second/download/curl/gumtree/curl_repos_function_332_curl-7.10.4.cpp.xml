<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_332_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_ftp_nextconnect<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SessionHandle<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name><init pos:line="3" pos:column="29">=<expr><name><name pos:line="3" pos:column="30">conn<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">-&gt;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="36">data<pos:position pos:line="3" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">buf<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name><name pos:line="4" pos:column="15">data<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="21">state<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">.<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">buffer<pos:position pos:line="4" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt> <comment type="block" pos:line="4" pos:column="35">/* this is our buffer */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ssize_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">nread<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">ftpcode<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt> <comment type="block" pos:line="7" pos:column="16">/* for ftp status */</comment>

  <comment type="block" pos:line="9" pos:column="3">/* the ftp struct is already inited in Curl_ftp_connect() */</comment>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">FTP<pos:position pos:line="10" pos:column="13"/></name></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">ftp<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><name><name pos:line="10" pos:column="21">conn<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">proto<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">.<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">ftp<pos:position pos:line="10" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">long<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">bytecountp<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><name><name pos:line="11" pos:column="22">ftp<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">bytecountp<pos:position pos:line="11" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="38"/></decl_stmt>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name><name pos:line="13" pos:column="6">data<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">set<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">.<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">upload<pos:position pos:line="13" pos:column="22"/></name></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23"> <block pos:line="13" pos:column="24">{

    <comment type="block" pos:line="15" pos:column="5">/* Set type to binary (unless specified ASCII) */</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">result<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">ftp_transfertype<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">conn<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="37">data<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">-&gt;<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="43">set<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">.<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="47">ftp_ascii<pos:position pos:line="16" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt>
    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><name pos:line="17" pos:column="8">result<pos:position pos:line="17" pos:column="14"/></name></expr>)<pos:position pos:line="17" pos:column="15"/></condition><then pos:line="17" pos:column="15">
      <block type="pseudo"><return pos:line="18" pos:column="7">return <expr><name pos:line="18" pos:column="14">result<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="20" pos:column="5">/* Send any PREQUOTE strings after transfer type is set? (Wesley Laxton)*/</comment>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><name><name pos:line="21" pos:column="8">data<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">set<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">.<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">prequote<pos:position pos:line="21" pos:column="26"/></name></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><operator pos:line="22" pos:column="11">(<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">result<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <call><name pos:line="22" pos:column="21">ftp_sendquote<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">conn<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="41">data<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">-&gt;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="47">set<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">.<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="51">prequote<pos:position pos:line="22" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call><operator pos:line="22" pos:column="60">)<pos:position pos:line="22" pos:column="61"/></operator> <operator pos:line="22" pos:column="62">!=<pos:position pos:line="22" pos:column="64"/></operator> <name pos:line="22" pos:column="65">CURLE_OK<pos:position pos:line="22" pos:column="73"/></name></expr>)<pos:position pos:line="22" pos:column="74"/></condition><then pos:line="22" pos:column="74">
        <block type="pseudo"><return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">result<pos:position pos:line="23" pos:column="22"/></name></expr>;<pos:position pos:line="23" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name><name pos:line="26" pos:column="8">conn<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">resume_from<pos:position pos:line="26" pos:column="25"/></name></name></expr>)<pos:position pos:line="26" pos:column="26"/></condition><then pos:line="26" pos:column="26"> <block pos:line="26" pos:column="27">{
      <comment type="block" pos:line="27" pos:column="7">/* we're about to continue the uploading of a file */</comment>
      <comment type="block" pos:line="28" pos:column="7">/* 1. get already existing file's size. We use the SIZE
         command for this which may not exist in the server!
         The SIZE command is not in RFC959. */</comment>

      <comment type="block" pos:line="32" pos:column="7">/* 2. This used to set REST. But since we can do append, we
         don't another ftp command. We just skip the source file
         offset and then we APPEND the rest on the file instead */</comment>

      <comment type="block" pos:line="36" pos:column="7">/* 3. pass file-size number of bytes in the source file */</comment>
      <comment type="block" pos:line="37" pos:column="7">/* 4. lower the infilesize counter */</comment>
      <comment type="block" pos:line="38" pos:column="7">/* =&gt; transfer as usual */</comment>

      <if pos:line="40" pos:column="7">if<condition pos:line="40" pos:column="9">(<expr><name><name pos:line="40" pos:column="10">conn<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">-&gt;<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="16">resume_from<pos:position pos:line="40" pos:column="27"/></name></name> <operator pos:line="40" pos:column="28">&lt;<pos:position pos:line="40" pos:column="32"/></operator> <literal type="number" pos:line="40" pos:column="30">0<pos:position pos:line="40" pos:column="31"/></literal></expr> )<pos:position pos:line="40" pos:column="33"/></condition><then pos:line="40" pos:column="33"> <block pos:line="40" pos:column="34">{
        <comment type="block" pos:line="41" pos:column="9">/* we could've got a specified offset from the command line,
           but now we know we didn't */</comment>
        <decl_stmt><decl><type><name pos:line="43" pos:column="9">ssize_t<pos:position pos:line="43" pos:column="16"/></name></type> <name pos:line="43" pos:column="17">gottensize<pos:position pos:line="43" pos:column="27"/></name></decl>;<pos:position pos:line="43" pos:column="28"/></decl_stmt>

        <if pos:line="45" pos:column="9">if<condition pos:line="45" pos:column="11">(<expr><name pos:line="45" pos:column="12">CURLE_OK<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">!=<pos:position pos:line="45" pos:column="23"/></operator> <call><name pos:line="45" pos:column="24">ftp_getsize<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name pos:line="45" pos:column="36">conn<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="42">ftp<pos:position pos:line="45" pos:column="45"/></name><operator pos:line="45" pos:column="45">-&gt;<pos:position pos:line="45" pos:column="50"/></operator><name pos:line="45" pos:column="47">file<pos:position pos:line="45" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="53">&amp;<pos:position pos:line="45" pos:column="58"/></operator><name pos:line="45" pos:column="54">gottensize<pos:position pos:line="45" pos:column="64"/></name></expr></argument>)<pos:position pos:line="45" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="66"/></condition><then pos:line="45" pos:column="66"> <block pos:line="45" pos:column="67">{
          <expr_stmt><expr><call><name pos:line="46" pos:column="11">failf<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">data<pos:position pos:line="46" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="23">"Couldn't get remote file size"<pos:position pos:line="46" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="56"/></expr_stmt>
          <return pos:line="47" pos:column="11">return <expr><name pos:line="47" pos:column="18">CURLE_FTP_COULDNT_GET_SIZE<pos:position pos:line="47" pos:column="44"/></name></expr>;<pos:position pos:line="47" pos:column="45"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="49" pos:column="9">conn<pos:position pos:line="49" pos:column="13"/></name><operator pos:line="49" pos:column="13">-&gt;<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="15">resume_from<pos:position pos:line="49" pos:column="26"/></name></name> <operator pos:line="49" pos:column="27">=<pos:position pos:line="49" pos:column="28"/></operator> <name pos:line="49" pos:column="29">gottensize<pos:position pos:line="49" pos:column="39"/></name></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="50" pos:column="8"/></block></then></if>

      <if pos:line="52" pos:column="7">if<condition pos:line="52" pos:column="9">(<expr><name><name pos:line="52" pos:column="10">conn<pos:position pos:line="52" pos:column="14"/></name><operator pos:line="52" pos:column="14">-&gt;<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="16">resume_from<pos:position pos:line="52" pos:column="27"/></name></name></expr>)<pos:position pos:line="52" pos:column="28"/></condition><then pos:line="52" pos:column="28"> <block pos:line="52" pos:column="29">{
        <comment type="block" pos:line="53" pos:column="9">/* do we still game? */</comment>
        <decl_stmt><decl><type><name pos:line="54" pos:column="9">int<pos:position pos:line="54" pos:column="12"/></name></type> <name pos:line="54" pos:column="13">passed<pos:position pos:line="54" pos:column="19"/></name><init pos:line="54" pos:column="19">=<expr><literal type="number" pos:line="54" pos:column="20">0<pos:position pos:line="54" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="54" pos:column="22"/></decl_stmt>
        <comment type="block" pos:line="55" pos:column="9">/* enable append instead */</comment>
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">data<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">-&gt;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="15">set<pos:position pos:line="56" pos:column="18"/></name><operator pos:line="56" pos:column="18">.<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="19">ftp_append<pos:position pos:line="56" pos:column="29"/></name></name> <operator pos:line="56" pos:column="30">=<pos:position pos:line="56" pos:column="31"/></operator> <literal type="number" pos:line="56" pos:column="32">1<pos:position pos:line="56" pos:column="33"/></literal></expr>;<pos:position pos:line="56" pos:column="34"/></expr_stmt>

        <comment type="block" pos:line="58" pos:column="9">/* Now, let's read off the proper amount of bytes from the
           input. If we knew it was a proper file we could've just
           fseek()ed but we only have a stream here */</comment>
        <do pos:line="61" pos:column="9">do <block pos:line="61" pos:column="12">{
          <decl_stmt><decl><type><name pos:line="62" pos:column="11">int<pos:position pos:line="62" pos:column="14"/></name></type> <name pos:line="62" pos:column="15">readthisamountnow<pos:position pos:line="62" pos:column="32"/></name> <init pos:line="62" pos:column="33">= <expr><operator pos:line="62" pos:column="35">(<pos:position pos:line="62" pos:column="36"/></operator><name><name pos:line="62" pos:column="36">conn<pos:position pos:line="62" pos:column="40"/></name><operator pos:line="62" pos:column="40">-&gt;<pos:position pos:line="62" pos:column="45"/></operator><name pos:line="62" pos:column="42">resume_from<pos:position pos:line="62" pos:column="53"/></name></name> <operator pos:line="62" pos:column="54">-<pos:position pos:line="62" pos:column="55"/></operator> <name pos:line="62" pos:column="56">passed<pos:position pos:line="62" pos:column="62"/></name><operator pos:line="62" pos:column="62">)<pos:position pos:line="62" pos:column="63"/></operator></expr></init></decl>;<pos:position pos:line="62" pos:column="64"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="63" pos:column="11">int<pos:position pos:line="63" pos:column="14"/></name></type> <name pos:line="63" pos:column="15">actuallyread<pos:position pos:line="63" pos:column="27"/></name></decl>;<pos:position pos:line="63" pos:column="28"/></decl_stmt>

          <if pos:line="65" pos:column="11">if<condition pos:line="65" pos:column="13">(<expr><name pos:line="65" pos:column="14">readthisamountnow<pos:position pos:line="65" pos:column="31"/></name> <operator pos:line="65" pos:column="32">&gt;<pos:position pos:line="65" pos:column="36"/></operator> <name pos:line="65" pos:column="34">BUFSIZE<pos:position pos:line="65" pos:column="41"/></name></expr>)<pos:position pos:line="65" pos:column="42"/></condition><then pos:line="65" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="13">readthisamountnow<pos:position pos:line="66" pos:column="30"/></name> <operator pos:line="66" pos:column="31">=<pos:position pos:line="66" pos:column="32"/></operator> <name pos:line="66" pos:column="33">BUFSIZE<pos:position pos:line="66" pos:column="40"/></name></expr>;<pos:position pos:line="66" pos:column="41"/></expr_stmt></block></then></if>

          <expr_stmt><expr><name pos:line="68" pos:column="11">actuallyread<pos:position pos:line="68" pos:column="23"/></name> <operator pos:line="68" pos:column="24">=<pos:position pos:line="68" pos:column="25"/></operator>
            <call><name><name pos:line="69" pos:column="13">conn<pos:position pos:line="69" pos:column="17"/></name><operator pos:line="69" pos:column="17">-&gt;<pos:position pos:line="69" pos:column="22"/></operator><name pos:line="69" pos:column="19">fread<pos:position pos:line="69" pos:column="24"/></name></name><argument_list pos:line="69" pos:column="24">(<argument><expr><name><name pos:line="69" pos:column="25">data<pos:position pos:line="69" pos:column="29"/></name><operator pos:line="69" pos:column="29">-&gt;<pos:position pos:line="69" pos:column="34"/></operator><name pos:line="69" pos:column="31">state<pos:position pos:line="69" pos:column="36"/></name><operator pos:line="69" pos:column="36">.<pos:position pos:line="69" pos:column="37"/></operator><name pos:line="69" pos:column="37">buffer<pos:position pos:line="69" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="45">1<pos:position pos:line="69" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="48">readthisamountnow<pos:position pos:line="69" pos:column="65"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="70" pos:column="25">conn<pos:position pos:line="70" pos:column="29"/></name><operator pos:line="70" pos:column="29">-&gt;<pos:position pos:line="70" pos:column="34"/></operator><name pos:line="70" pos:column="31">fread_in<pos:position pos:line="70" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="41"/></expr_stmt>

          <expr_stmt><expr><name pos:line="72" pos:column="11">passed<pos:position pos:line="72" pos:column="17"/></name> <operator pos:line="72" pos:column="18">+=<pos:position pos:line="72" pos:column="20"/></operator> <name pos:line="72" pos:column="21">actuallyread<pos:position pos:line="72" pos:column="33"/></name></expr>;<pos:position pos:line="72" pos:column="34"/></expr_stmt>
          <if pos:line="73" pos:column="11">if<condition pos:line="73" pos:column="13">(<expr><name pos:line="73" pos:column="14">actuallyread<pos:position pos:line="73" pos:column="26"/></name> <operator pos:line="73" pos:column="27">!=<pos:position pos:line="73" pos:column="29"/></operator> <name pos:line="73" pos:column="30">readthisamountnow<pos:position pos:line="73" pos:column="47"/></name></expr>)<pos:position pos:line="73" pos:column="48"/></condition><then pos:line="73" pos:column="48"> <block pos:line="73" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">failf<pos:position pos:line="74" pos:column="18"/></name><argument_list pos:line="74" pos:column="18">(<argument><expr><name pos:line="74" pos:column="19">data<pos:position pos:line="74" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="25">"Could only read %d bytes from the input"<pos:position pos:line="74" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="68">passed<pos:position pos:line="74" pos:column="74"/></name></expr></argument>)<pos:position pos:line="74" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="76"/></expr_stmt>
            <return pos:line="75" pos:column="13">return <expr><name pos:line="75" pos:column="20">CURLE_FTP_COULDNT_USE_REST<pos:position pos:line="75" pos:column="46"/></name></expr>;<pos:position pos:line="75" pos:column="47"/></return>
          }<pos:position pos:line="76" pos:column="12"/></block></then></if>
        }<pos:position pos:line="77" pos:column="10"/></block>
        while<condition pos:line="78" pos:column="14">(<expr><name pos:line="78" pos:column="15">passed<pos:position pos:line="78" pos:column="21"/></name> <operator pos:line="78" pos:column="22">!=<pos:position pos:line="78" pos:column="24"/></operator> <name><name pos:line="78" pos:column="25">conn<pos:position pos:line="78" pos:column="29"/></name><operator pos:line="78" pos:column="29">-&gt;<pos:position pos:line="78" pos:column="34"/></operator><name pos:line="78" pos:column="31">resume_from<pos:position pos:line="78" pos:column="42"/></name></name></expr>)<pos:position pos:line="78" pos:column="43"/></condition>;<pos:position pos:line="78" pos:column="44"/></do>

        <comment type="block" pos:line="80" pos:column="9">/* now, decrease the size of the read */</comment>
        <if pos:line="81" pos:column="9">if<condition pos:line="81" pos:column="11">(<expr><name><name pos:line="81" pos:column="12">data<pos:position pos:line="81" pos:column="16"/></name><operator pos:line="81" pos:column="16">-&gt;<pos:position pos:line="81" pos:column="21"/></operator><name pos:line="81" pos:column="18">set<pos:position pos:line="81" pos:column="21"/></name><operator pos:line="81" pos:column="21">.<pos:position pos:line="81" pos:column="22"/></operator><name pos:line="81" pos:column="22">infilesize<pos:position pos:line="81" pos:column="32"/></name></name><operator pos:line="81" pos:column="32">&gt;<pos:position pos:line="81" pos:column="36"/></operator><literal type="number" pos:line="81" pos:column="33">0<pos:position pos:line="81" pos:column="34"/></literal></expr>)<pos:position pos:line="81" pos:column="35"/></condition><then pos:line="81" pos:column="35"> <block pos:line="81" pos:column="36">{
          <expr_stmt><expr><name><name pos:line="82" pos:column="11">data<pos:position pos:line="82" pos:column="15"/></name><operator pos:line="82" pos:column="15">-&gt;<pos:position pos:line="82" pos:column="20"/></operator><name pos:line="82" pos:column="17">set<pos:position pos:line="82" pos:column="20"/></name><operator pos:line="82" pos:column="20">.<pos:position pos:line="82" pos:column="21"/></operator><name pos:line="82" pos:column="21">infilesize<pos:position pos:line="82" pos:column="31"/></name></name> <operator pos:line="82" pos:column="32">-=<pos:position pos:line="82" pos:column="34"/></operator> <name><name pos:line="82" pos:column="35">conn<pos:position pos:line="82" pos:column="39"/></name><operator pos:line="82" pos:column="39">-&gt;<pos:position pos:line="82" pos:column="44"/></operator><name pos:line="82" pos:column="41">resume_from<pos:position pos:line="82" pos:column="52"/></name></name></expr>;<pos:position pos:line="82" pos:column="53"/></expr_stmt>

          <if pos:line="84" pos:column="11">if<condition pos:line="84" pos:column="13">(<expr><name><name pos:line="84" pos:column="14">data<pos:position pos:line="84" pos:column="18"/></name><operator pos:line="84" pos:column="18">-&gt;<pos:position pos:line="84" pos:column="23"/></operator><name pos:line="84" pos:column="20">set<pos:position pos:line="84" pos:column="23"/></name><operator pos:line="84" pos:column="23">.<pos:position pos:line="84" pos:column="24"/></operator><name pos:line="84" pos:column="24">infilesize<pos:position pos:line="84" pos:column="34"/></name></name> <operator pos:line="84" pos:column="35">&lt;=<pos:position pos:line="84" pos:column="40"/></operator> <literal type="number" pos:line="84" pos:column="38">0<pos:position pos:line="84" pos:column="39"/></literal></expr>)<pos:position pos:line="84" pos:column="40"/></condition><then pos:line="84" pos:column="40"> <block pos:line="84" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">infof<pos:position pos:line="85" pos:column="18"/></name><argument_list pos:line="85" pos:column="18">(<argument><expr><name pos:line="85" pos:column="19">data<pos:position pos:line="85" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="25">"File already completely uploaded\n"<pos:position pos:line="85" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="63"/></expr_stmt>

            <comment type="block" pos:line="87" pos:column="13">/* no data to transfer */</comment>
            <expr_stmt><expr><name pos:line="88" pos:column="13">result<pos:position pos:line="88" pos:column="19"/></name><operator pos:line="88" pos:column="19">=<pos:position pos:line="88" pos:column="20"/></operator><call><name pos:line="88" pos:column="20">Curl_Transfer<pos:position pos:line="88" pos:column="33"/></name><argument_list pos:line="88" pos:column="33">(<argument><expr><name pos:line="88" pos:column="34">conn<pos:position pos:line="88" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="40">-<pos:position pos:line="88" pos:column="41"/></operator><literal type="number" pos:line="88" pos:column="41">1<pos:position pos:line="88" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="88" pos:column="44">-<pos:position pos:line="88" pos:column="45"/></operator><literal type="number" pos:line="88" pos:column="45">1<pos:position pos:line="88" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="48">FALSE<pos:position pos:line="88" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="55">NULL<pos:position pos:line="88" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="61">-<pos:position pos:line="88" pos:column="62"/></operator><literal type="number" pos:line="88" pos:column="62">1<pos:position pos:line="88" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="65">NULL<pos:position pos:line="88" pos:column="69"/></name></expr></argument>)<pos:position pos:line="88" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="71"/></expr_stmt>
            
            <comment type="block" pos:line="90" pos:column="13">/* Set no_transfer so that we won't get any error in
             * Curl_ftp_done() because we didn't transfer anything! */</comment>
            <expr_stmt><expr><name><name pos:line="92" pos:column="13">ftp<pos:position pos:line="92" pos:column="16"/></name><operator pos:line="92" pos:column="16">-&gt;<pos:position pos:line="92" pos:column="21"/></operator><name pos:line="92" pos:column="18">no_transfer<pos:position pos:line="92" pos:column="29"/></name></name> <operator pos:line="92" pos:column="30">=<pos:position pos:line="92" pos:column="31"/></operator> <name pos:line="92" pos:column="32">TRUE<pos:position pos:line="92" pos:column="36"/></name></expr>;<pos:position pos:line="92" pos:column="37"/></expr_stmt> 

            <return pos:line="94" pos:column="13">return <expr><name pos:line="94" pos:column="20">CURLE_OK<pos:position pos:line="94" pos:column="28"/></name></expr>;<pos:position pos:line="94" pos:column="29"/></return>
          }<pos:position pos:line="95" pos:column="12"/></block></then></if>
        }<pos:position pos:line="96" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="97" pos:column="9">/* we've passed, proceed as normal */</comment>
      }<pos:position pos:line="98" pos:column="8"/></block></then></if>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="101" pos:column="5">/* Send everything on data-&gt;state.in to the socket */</comment>
    <if pos:line="102" pos:column="5">if<condition pos:line="102" pos:column="7">(<expr><name><name pos:line="102" pos:column="8">data<pos:position pos:line="102" pos:column="12"/></name><operator pos:line="102" pos:column="12">-&gt;<pos:position pos:line="102" pos:column="17"/></operator><name pos:line="102" pos:column="14">set<pos:position pos:line="102" pos:column="17"/></name><operator pos:line="102" pos:column="17">.<pos:position pos:line="102" pos:column="18"/></operator><name pos:line="102" pos:column="18">ftp_append<pos:position pos:line="102" pos:column="28"/></name></name></expr>)<pos:position pos:line="102" pos:column="29"/></condition><then pos:line="102" pos:column="29"> <block pos:line="102" pos:column="30">{
      <comment type="block" pos:line="103" pos:column="7">/* we append onto the file instead of rewriting it */</comment>
      <expr_stmt><expr><call><name pos:line="104" pos:column="7">FTPSENDF<pos:position pos:line="104" pos:column="15"/></name><argument_list pos:line="104" pos:column="15">(<argument><expr><name pos:line="104" pos:column="16">conn<pos:position pos:line="104" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="22">"APPE %s"<pos:position pos:line="104" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="33">ftp<pos:position pos:line="104" pos:column="36"/></name><operator pos:line="104" pos:column="36">-&gt;<pos:position pos:line="104" pos:column="41"/></operator><name pos:line="104" pos:column="38">file<pos:position pos:line="104" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="105" pos:column="6"/></block></then>
    <else pos:line="106" pos:column="5">else <block pos:line="106" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="107" pos:column="7">FTPSENDF<pos:position pos:line="107" pos:column="15"/></name><argument_list pos:line="107" pos:column="15">(<argument><expr><name pos:line="107" pos:column="16">conn<pos:position pos:line="107" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="22">"STOR %s"<pos:position pos:line="107" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="33">ftp<pos:position pos:line="107" pos:column="36"/></name><operator pos:line="107" pos:column="36">-&gt;<pos:position pos:line="107" pos:column="41"/></operator><name pos:line="107" pos:column="38">file<pos:position pos:line="107" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="108" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="110" pos:column="5">result<pos:position pos:line="110" pos:column="11"/></name> <operator pos:line="110" pos:column="12">=<pos:position pos:line="110" pos:column="13"/></operator> <call><name pos:line="110" pos:column="14">Curl_GetFTPResponse<pos:position pos:line="110" pos:column="33"/></name><argument_list pos:line="110" pos:column="33">(<argument><expr><operator pos:line="110" pos:column="34">&amp;<pos:position pos:line="110" pos:column="39"/></operator><name pos:line="110" pos:column="35">nread<pos:position pos:line="110" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="42">conn<pos:position pos:line="110" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="110" pos:column="48">&amp;<pos:position pos:line="110" pos:column="53"/></operator><name pos:line="110" pos:column="49">ftpcode<pos:position pos:line="110" pos:column="56"/></name></expr></argument>)<pos:position pos:line="110" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="58"/></expr_stmt>
    <if pos:line="111" pos:column="5">if<condition pos:line="111" pos:column="7">(<expr><name pos:line="111" pos:column="8">result<pos:position pos:line="111" pos:column="14"/></name></expr>)<pos:position pos:line="111" pos:column="15"/></condition><then pos:line="111" pos:column="15">
      <block type="pseudo"><return pos:line="112" pos:column="7">return <expr><name pos:line="112" pos:column="14">result<pos:position pos:line="112" pos:column="20"/></name></expr>;<pos:position pos:line="112" pos:column="21"/></return></block></then></if>

    <if pos:line="114" pos:column="5">if<condition pos:line="114" pos:column="7">(<expr><name pos:line="114" pos:column="8">ftpcode<pos:position pos:line="114" pos:column="15"/></name><operator pos:line="114" pos:column="15">&gt;=<pos:position pos:line="114" pos:column="20"/></operator><literal type="number" pos:line="114" pos:column="17">400<pos:position pos:line="114" pos:column="20"/></literal></expr>)<pos:position pos:line="114" pos:column="21"/></condition><then pos:line="114" pos:column="21"> <block pos:line="114" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="115" pos:column="7">failf<pos:position pos:line="115" pos:column="12"/></name><argument_list pos:line="115" pos:column="12">(<argument><expr><name pos:line="115" pos:column="13">data<pos:position pos:line="115" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="19">"Failed FTP upload:%s"<pos:position pos:line="115" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="115" pos:column="43">buf<pos:position pos:line="115" pos:column="46"/></name><operator pos:line="115" pos:column="46">+<pos:position pos:line="115" pos:column="47"/></operator><literal type="number" pos:line="115" pos:column="47">3<pos:position pos:line="115" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="50"/></expr_stmt>
      <comment type="block" pos:line="116" pos:column="7">/* oops, we never close the sockets! */</comment>
      <return pos:line="117" pos:column="7">return <expr><name pos:line="117" pos:column="14">CURLE_FTP_COULDNT_STOR_FILE<pos:position pos:line="117" pos:column="41"/></name></expr>;<pos:position pos:line="117" pos:column="42"/></return>
    }<pos:position pos:line="118" pos:column="6"/></block></then></if>

    <if pos:line="120" pos:column="5">if<condition pos:line="120" pos:column="7">(<expr><name><name pos:line="120" pos:column="8">data<pos:position pos:line="120" pos:column="12"/></name><operator pos:line="120" pos:column="12">-&gt;<pos:position pos:line="120" pos:column="17"/></operator><name pos:line="120" pos:column="14">set<pos:position pos:line="120" pos:column="17"/></name><operator pos:line="120" pos:column="17">.<pos:position pos:line="120" pos:column="18"/></operator><name pos:line="120" pos:column="18">ftp_use_port<pos:position pos:line="120" pos:column="30"/></name></name></expr>)<pos:position pos:line="120" pos:column="31"/></condition><then pos:line="120" pos:column="31"> <block pos:line="120" pos:column="32">{
      <comment type="block" pos:line="121" pos:column="7">/* PORT means we are now awaiting the server to connect to us. */</comment>
      <expr_stmt><expr><name pos:line="122" pos:column="7">result<pos:position pos:line="122" pos:column="13"/></name> <operator pos:line="122" pos:column="14">=<pos:position pos:line="122" pos:column="15"/></operator> <call><name pos:line="122" pos:column="16">AllowServerConnect<pos:position pos:line="122" pos:column="34"/></name><argument_list pos:line="122" pos:column="34">(<argument><expr><name pos:line="122" pos:column="35">data<pos:position pos:line="122" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="41">conn<pos:position pos:line="122" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="47">conn<pos:position pos:line="122" pos:column="51"/></name><operator pos:line="122" pos:column="51">-&gt;<pos:position pos:line="122" pos:column="56"/></operator><name pos:line="122" pos:column="53">secondarysocket<pos:position pos:line="122" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="70"/></expr_stmt>
      <if pos:line="123" pos:column="7">if<condition pos:line="123" pos:column="9">( <expr><name pos:line="123" pos:column="11">result<pos:position pos:line="123" pos:column="17"/></name></expr> )<pos:position pos:line="123" pos:column="19"/></condition><then pos:line="123" pos:column="19">
        <block type="pseudo"><return pos:line="124" pos:column="9">return <expr><name pos:line="124" pos:column="16">result<pos:position pos:line="124" pos:column="22"/></name></expr>;<pos:position pos:line="124" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="125" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="127" pos:column="5">*<pos:position pos:line="127" pos:column="6"/></operator><name pos:line="127" pos:column="6">bytecountp<pos:position pos:line="127" pos:column="16"/></name><operator pos:line="127" pos:column="16">=<pos:position pos:line="127" pos:column="17"/></operator><literal type="number" pos:line="127" pos:column="17">0<pos:position pos:line="127" pos:column="18"/></literal></expr>;<pos:position pos:line="127" pos:column="19"/></expr_stmt>

    <comment type="block" pos:line="129" pos:column="5">/* When we know we're uploading a specified file, we can get the file
       size prior to the actual upload. */</comment>

    <expr_stmt><expr><call><name pos:line="132" pos:column="5">Curl_pgrsSetUploadSize<pos:position pos:line="132" pos:column="27"/></name><argument_list pos:line="132" pos:column="27">(<argument><expr><name pos:line="132" pos:column="28">data<pos:position pos:line="132" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="34">data<pos:position pos:line="132" pos:column="38"/></name><operator pos:line="132" pos:column="38">-&gt;<pos:position pos:line="132" pos:column="43"/></operator><name pos:line="132" pos:column="40">set<pos:position pos:line="132" pos:column="43"/></name><operator pos:line="132" pos:column="43">.<pos:position pos:line="132" pos:column="44"/></operator><name pos:line="132" pos:column="44">infilesize<pos:position pos:line="132" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><name pos:line="134" pos:column="5">result<pos:position pos:line="134" pos:column="11"/></name> <operator pos:line="134" pos:column="12">=<pos:position pos:line="134" pos:column="13"/></operator> <call><name pos:line="134" pos:column="14">Curl_Transfer<pos:position pos:line="134" pos:column="27"/></name><argument_list pos:line="134" pos:column="27">(<argument><expr><name pos:line="134" pos:column="28">conn<pos:position pos:line="134" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="134" pos:column="34">-<pos:position pos:line="134" pos:column="35"/></operator><literal type="number" pos:line="134" pos:column="35">1<pos:position pos:line="134" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="134" pos:column="38">-<pos:position pos:line="134" pos:column="39"/></operator><literal type="number" pos:line="134" pos:column="39">1<pos:position pos:line="134" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="134" pos:column="42">FALSE<pos:position pos:line="134" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="49">NULL<pos:position pos:line="134" pos:column="53"/></name></expr></argument>, <comment type="block" pos:line="134" pos:column="55">/* no download */</comment>
                      <argument><expr><name><name pos:line="135" pos:column="23">conn<pos:position pos:line="135" pos:column="27"/></name><operator pos:line="135" pos:column="27">-&gt;<pos:position pos:line="135" pos:column="32"/></operator><name pos:line="135" pos:column="29">secondarysocket<pos:position pos:line="135" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="46">bytecountp<pos:position pos:line="135" pos:column="56"/></name></expr></argument>)<pos:position pos:line="135" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="58"/></expr_stmt>
    <if pos:line="136" pos:column="5">if<condition pos:line="136" pos:column="7">(<expr><name pos:line="136" pos:column="8">result<pos:position pos:line="136" pos:column="14"/></name></expr>)<pos:position pos:line="136" pos:column="15"/></condition><then pos:line="136" pos:column="15">
      <block type="pseudo"><return pos:line="137" pos:column="7">return <expr><name pos:line="137" pos:column="14">result<pos:position pos:line="137" pos:column="20"/></name></expr>;<pos:position pos:line="137" pos:column="21"/></return></block></then></if>
      
  }<pos:position pos:line="139" pos:column="4"/></block></then>
  <elseif pos:line="140" pos:column="3">else <if pos:line="140" pos:column="8">if<condition pos:line="140" pos:column="10">(<expr><operator pos:line="140" pos:column="11">!<pos:position pos:line="140" pos:column="12"/></operator><name><name pos:line="140" pos:column="12">data<pos:position pos:line="140" pos:column="16"/></name><operator pos:line="140" pos:column="16">-&gt;<pos:position pos:line="140" pos:column="21"/></operator><name pos:line="140" pos:column="18">set<pos:position pos:line="140" pos:column="21"/></name><operator pos:line="140" pos:column="21">.<pos:position pos:line="140" pos:column="22"/></operator><name pos:line="140" pos:column="22">no_body<pos:position pos:line="140" pos:column="29"/></name></name></expr>)<pos:position pos:line="140" pos:column="30"/></condition><then pos:line="140" pos:column="30"> <block pos:line="140" pos:column="31">{
    <comment type="block" pos:line="141" pos:column="5">/* Retrieve file or directory */</comment>
    <decl_stmt><decl><type><name pos:line="142" pos:column="5">bool<pos:position pos:line="142" pos:column="9"/></name></type> <name pos:line="142" pos:column="10">dirlist<pos:position pos:line="142" pos:column="17"/></name><init pos:line="142" pos:column="17">=<expr><name pos:line="142" pos:column="18">FALSE<pos:position pos:line="142" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="142" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="143" pos:column="5">long<pos:position pos:line="143" pos:column="9"/></name></type> <name pos:line="143" pos:column="10">downloadsize<pos:position pos:line="143" pos:column="22"/></name><init pos:line="143" pos:column="22">=<expr><operator pos:line="143" pos:column="23">-<pos:position pos:line="143" pos:column="24"/></operator><literal type="number" pos:line="143" pos:column="24">1<pos:position pos:line="143" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="143" pos:column="26"/></decl_stmt>

    <if pos:line="145" pos:column="5">if<condition pos:line="145" pos:column="7">(<expr><name><name pos:line="145" pos:column="8">conn<pos:position pos:line="145" pos:column="12"/></name><operator pos:line="145" pos:column="12">-&gt;<pos:position pos:line="145" pos:column="17"/></operator><name pos:line="145" pos:column="14">bits<pos:position pos:line="145" pos:column="18"/></name><operator pos:line="145" pos:column="18">.<pos:position pos:line="145" pos:column="19"/></operator><name pos:line="145" pos:column="19">use_range<pos:position pos:line="145" pos:column="28"/></name></name> <operator pos:line="145" pos:column="29">&amp;&amp;<pos:position pos:line="145" pos:column="39"/></operator> <name><name pos:line="145" pos:column="32">conn<pos:position pos:line="145" pos:column="36"/></name><operator pos:line="145" pos:column="36">-&gt;<pos:position pos:line="145" pos:column="41"/></operator><name pos:line="145" pos:column="38">range<pos:position pos:line="145" pos:column="43"/></name></name></expr>)<pos:position pos:line="145" pos:column="44"/></condition><then pos:line="145" pos:column="44"> <block pos:line="145" pos:column="45">{
      <decl_stmt><decl><type><name pos:line="146" pos:column="7">long<pos:position pos:line="146" pos:column="11"/></name></type> <name pos:line="146" pos:column="12">from<pos:position pos:line="146" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="146" pos:column="18">to<pos:position pos:line="146" pos:column="20"/></name></decl>;<pos:position pos:line="146" pos:column="21"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="147" pos:column="7">int<pos:position pos:line="147" pos:column="10"/></name></type> <name pos:line="147" pos:column="11">totalsize<pos:position pos:line="147" pos:column="20"/></name><init pos:line="147" pos:column="20">=<expr><operator pos:line="147" pos:column="21">-<pos:position pos:line="147" pos:column="22"/></operator><literal type="number" pos:line="147" pos:column="22">1<pos:position pos:line="147" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="147" pos:column="24"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="148" pos:column="7">char<pos:position pos:line="148" pos:column="11"/></name> <modifier pos:line="148" pos:column="12">*<pos:position pos:line="148" pos:column="13"/></modifier></type><name pos:line="148" pos:column="13">ptr<pos:position pos:line="148" pos:column="16"/></name></decl>;<pos:position pos:line="148" pos:column="17"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="149" pos:column="7">char<pos:position pos:line="149" pos:column="11"/></name> <modifier pos:line="149" pos:column="12">*<pos:position pos:line="149" pos:column="13"/></modifier></type><name pos:line="149" pos:column="13">ptr2<pos:position pos:line="149" pos:column="17"/></name></decl>;<pos:position pos:line="149" pos:column="18"/></decl_stmt>

      <expr_stmt><expr><name pos:line="151" pos:column="7">from<pos:position pos:line="151" pos:column="11"/></name><operator pos:line="151" pos:column="11">=<pos:position pos:line="151" pos:column="12"/></operator><call><name pos:line="151" pos:column="12">strtol<pos:position pos:line="151" pos:column="18"/></name><argument_list pos:line="151" pos:column="18">(<argument><expr><name><name pos:line="151" pos:column="19">conn<pos:position pos:line="151" pos:column="23"/></name><operator pos:line="151" pos:column="23">-&gt;<pos:position pos:line="151" pos:column="28"/></operator><name pos:line="151" pos:column="25">range<pos:position pos:line="151" pos:column="30"/></name></name></expr></argument>, <argument><expr><operator pos:line="151" pos:column="32">&amp;<pos:position pos:line="151" pos:column="37"/></operator><name pos:line="151" pos:column="33">ptr<pos:position pos:line="151" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="151" pos:column="38">0<pos:position pos:line="151" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="41"/></expr_stmt>
      <while pos:line="152" pos:column="7">while<condition pos:line="152" pos:column="12">(<expr><name pos:line="152" pos:column="13">ptr<pos:position pos:line="152" pos:column="16"/></name> <operator pos:line="152" pos:column="17">&amp;&amp;<pos:position pos:line="152" pos:column="27"/></operator> <operator pos:line="152" pos:column="20">*<pos:position pos:line="152" pos:column="21"/></operator><name pos:line="152" pos:column="21">ptr<pos:position pos:line="152" pos:column="24"/></name> <operator pos:line="152" pos:column="25">&amp;&amp;<pos:position pos:line="152" pos:column="35"/></operator> <operator pos:line="152" pos:column="28">(<pos:position pos:line="152" pos:column="29"/></operator><call><name pos:line="152" pos:column="29">isspace<pos:position pos:line="152" pos:column="36"/></name><argument_list pos:line="152" pos:column="36">(<argument><expr><operator pos:line="152" pos:column="37">(<pos:position pos:line="152" pos:column="38"/></operator><name pos:line="152" pos:column="38">int<pos:position pos:line="152" pos:column="41"/></name><operator pos:line="152" pos:column="41">)<pos:position pos:line="152" pos:column="42"/></operator><operator pos:line="152" pos:column="42">*<pos:position pos:line="152" pos:column="43"/></operator><name pos:line="152" pos:column="43">ptr<pos:position pos:line="152" pos:column="46"/></name></expr></argument>)<pos:position pos:line="152" pos:column="47"/></argument_list></call> <operator pos:line="152" pos:column="48">||<pos:position pos:line="152" pos:column="50"/></operator> <operator pos:line="152" pos:column="51">(<pos:position pos:line="152" pos:column="52"/></operator><operator pos:line="152" pos:column="52">*<pos:position pos:line="152" pos:column="53"/></operator><name pos:line="152" pos:column="53">ptr<pos:position pos:line="152" pos:column="56"/></name><operator pos:line="152" pos:column="56">==<pos:position pos:line="152" pos:column="58"/></operator><literal type="char" pos:line="152" pos:column="58">'-'<pos:position pos:line="152" pos:column="61"/></literal><operator pos:line="152" pos:column="61">)<pos:position pos:line="152" pos:column="62"/></operator><operator pos:line="152" pos:column="62">)<pos:position pos:line="152" pos:column="63"/></operator></expr>)<pos:position pos:line="152" pos:column="64"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="153" pos:column="9">ptr<pos:position pos:line="153" pos:column="12"/></name><operator pos:line="153" pos:column="12">++<pos:position pos:line="153" pos:column="14"/></operator></expr>;<pos:position pos:line="153" pos:column="15"/></expr_stmt></block></while>
      <expr_stmt><expr><name pos:line="154" pos:column="7">to<pos:position pos:line="154" pos:column="9"/></name><operator pos:line="154" pos:column="9">=<pos:position pos:line="154" pos:column="10"/></operator><call><name pos:line="154" pos:column="10">strtol<pos:position pos:line="154" pos:column="16"/></name><argument_list pos:line="154" pos:column="16">(<argument><expr><name pos:line="154" pos:column="17">ptr<pos:position pos:line="154" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="154" pos:column="22">&amp;<pos:position pos:line="154" pos:column="27"/></operator><name pos:line="154" pos:column="23">ptr2<pos:position pos:line="154" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="154" pos:column="29">0<pos:position pos:line="154" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="32"/></expr_stmt>
      <if pos:line="155" pos:column="7">if<condition pos:line="155" pos:column="9">(<expr><name pos:line="155" pos:column="10">ptr<pos:position pos:line="155" pos:column="13"/></name> <operator pos:line="155" pos:column="14">==<pos:position pos:line="155" pos:column="16"/></operator> <name pos:line="155" pos:column="17">ptr2<pos:position pos:line="155" pos:column="21"/></name></expr>)<pos:position pos:line="155" pos:column="22"/></condition><then pos:line="155" pos:column="22"> <block pos:line="155" pos:column="23">{
        <comment type="block" pos:line="156" pos:column="9">/* we didn't get any digit */</comment>
        <expr_stmt><expr><name pos:line="157" pos:column="9">to<pos:position pos:line="157" pos:column="11"/></name><operator pos:line="157" pos:column="11">=<pos:position pos:line="157" pos:column="12"/></operator><operator pos:line="157" pos:column="12">-<pos:position pos:line="157" pos:column="13"/></operator><literal type="number" pos:line="157" pos:column="13">1<pos:position pos:line="157" pos:column="14"/></literal></expr>;<pos:position pos:line="157" pos:column="15"/></expr_stmt>
      }<pos:position pos:line="158" pos:column="8"/></block></then></if>
      <if pos:line="159" pos:column="7">if<condition pos:line="159" pos:column="9">(<expr><operator pos:line="159" pos:column="10">(<pos:position pos:line="159" pos:column="11"/></operator><operator pos:line="159" pos:column="11">-<pos:position pos:line="159" pos:column="12"/></operator><literal type="number" pos:line="159" pos:column="12">1<pos:position pos:line="159" pos:column="13"/></literal> <operator pos:line="159" pos:column="14">==<pos:position pos:line="159" pos:column="16"/></operator> <name pos:line="159" pos:column="17">to<pos:position pos:line="159" pos:column="19"/></name><operator pos:line="159" pos:column="19">)<pos:position pos:line="159" pos:column="20"/></operator> <operator pos:line="159" pos:column="21">&amp;&amp;<pos:position pos:line="159" pos:column="31"/></operator> <operator pos:line="159" pos:column="24">(<pos:position pos:line="159" pos:column="25"/></operator><name pos:line="159" pos:column="25">from<pos:position pos:line="159" pos:column="29"/></name><operator pos:line="159" pos:column="29">&gt;=<pos:position pos:line="159" pos:column="34"/></operator><literal type="number" pos:line="159" pos:column="31">0<pos:position pos:line="159" pos:column="32"/></literal><operator pos:line="159" pos:column="32">)<pos:position pos:line="159" pos:column="33"/></operator></expr>)<pos:position pos:line="159" pos:column="34"/></condition><then pos:line="159" pos:column="34"> <block pos:line="159" pos:column="35">{
        <comment type="block" pos:line="160" pos:column="9">/* X - */</comment>
        <expr_stmt><expr><name><name pos:line="161" pos:column="9">conn<pos:position pos:line="161" pos:column="13"/></name><operator pos:line="161" pos:column="13">-&gt;<pos:position pos:line="161" pos:column="18"/></operator><name pos:line="161" pos:column="15">resume_from<pos:position pos:line="161" pos:column="26"/></name></name> <operator pos:line="161" pos:column="27">=<pos:position pos:line="161" pos:column="28"/></operator> <name pos:line="161" pos:column="29">from<pos:position pos:line="161" pos:column="33"/></name></expr>;<pos:position pos:line="161" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="162" pos:column="9">infof<pos:position pos:line="162" pos:column="14"/></name><argument_list pos:line="162" pos:column="14">(<argument><expr><name pos:line="162" pos:column="15">data<pos:position pos:line="162" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="21">"FTP RANGE %d to end of file\n"<pos:position pos:line="162" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="162" pos:column="54">from<pos:position pos:line="162" pos:column="58"/></name></expr></argument>)<pos:position pos:line="162" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="163" pos:column="8"/></block></then>
      <elseif pos:line="164" pos:column="7">else <if pos:line="164" pos:column="12">if<condition pos:line="164" pos:column="14">(<expr><name pos:line="164" pos:column="15">from<pos:position pos:line="164" pos:column="19"/></name> <operator pos:line="164" pos:column="20">&lt;<pos:position pos:line="164" pos:column="24"/></operator> <literal type="number" pos:line="164" pos:column="22">0<pos:position pos:line="164" pos:column="23"/></literal></expr>)<pos:position pos:line="164" pos:column="24"/></condition><then pos:line="164" pos:column="24"> <block pos:line="164" pos:column="25">{
        <comment type="block" pos:line="165" pos:column="9">/* -Y */</comment>
        <expr_stmt><expr><name pos:line="166" pos:column="9">totalsize<pos:position pos:line="166" pos:column="18"/></name> <operator pos:line="166" pos:column="19">=<pos:position pos:line="166" pos:column="20"/></operator> <operator pos:line="166" pos:column="21">-<pos:position pos:line="166" pos:column="22"/></operator><name pos:line="166" pos:column="22">from<pos:position pos:line="166" pos:column="26"/></name></expr>;<pos:position pos:line="166" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="167" pos:column="9">conn<pos:position pos:line="167" pos:column="13"/></name><operator pos:line="167" pos:column="13">-&gt;<pos:position pos:line="167" pos:column="18"/></operator><name pos:line="167" pos:column="15">maxdownload<pos:position pos:line="167" pos:column="26"/></name></name> <operator pos:line="167" pos:column="27">=<pos:position pos:line="167" pos:column="28"/></operator> <operator pos:line="167" pos:column="29">-<pos:position pos:line="167" pos:column="30"/></operator><name pos:line="167" pos:column="30">from<pos:position pos:line="167" pos:column="34"/></name></expr>;<pos:position pos:line="167" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="168" pos:column="9">conn<pos:position pos:line="168" pos:column="13"/></name><operator pos:line="168" pos:column="13">-&gt;<pos:position pos:line="168" pos:column="18"/></operator><name pos:line="168" pos:column="15">resume_from<pos:position pos:line="168" pos:column="26"/></name></name> <operator pos:line="168" pos:column="27">=<pos:position pos:line="168" pos:column="28"/></operator> <name pos:line="168" pos:column="29">from<pos:position pos:line="168" pos:column="33"/></name></expr>;<pos:position pos:line="168" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="169" pos:column="9">infof<pos:position pos:line="169" pos:column="14"/></name><argument_list pos:line="169" pos:column="14">(<argument><expr><name pos:line="169" pos:column="15">data<pos:position pos:line="169" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="21">"FTP RANGE the last %d bytes\n"<pos:position pos:line="169" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="169" pos:column="54">totalsize<pos:position pos:line="169" pos:column="63"/></name></expr></argument>)<pos:position pos:line="169" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="170" pos:column="8"/></block></then></if></elseif>
      <else pos:line="171" pos:column="7">else <block pos:line="171" pos:column="12">{
        <comment type="block" pos:line="172" pos:column="9">/* X-Y */</comment>
        <expr_stmt><expr><name pos:line="173" pos:column="9">totalsize<pos:position pos:line="173" pos:column="18"/></name> <operator pos:line="173" pos:column="19">=<pos:position pos:line="173" pos:column="20"/></operator> <name pos:line="173" pos:column="21">to<pos:position pos:line="173" pos:column="23"/></name><operator pos:line="173" pos:column="23">-<pos:position pos:line="173" pos:column="24"/></operator><name pos:line="173" pos:column="24">from<pos:position pos:line="173" pos:column="28"/></name></expr>;<pos:position pos:line="173" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="174" pos:column="9">conn<pos:position pos:line="174" pos:column="13"/></name><operator pos:line="174" pos:column="13">-&gt;<pos:position pos:line="174" pos:column="18"/></operator><name pos:line="174" pos:column="15">maxdownload<pos:position pos:line="174" pos:column="26"/></name></name> <operator pos:line="174" pos:column="27">=<pos:position pos:line="174" pos:column="28"/></operator> <name pos:line="174" pos:column="29">totalsize<pos:position pos:line="174" pos:column="38"/></name><operator pos:line="174" pos:column="38">+<pos:position pos:line="174" pos:column="39"/></operator><literal type="number" pos:line="174" pos:column="39">1<pos:position pos:line="174" pos:column="40"/></literal></expr>;<pos:position pos:line="174" pos:column="41"/></expr_stmt> <comment type="block" pos:line="174" pos:column="42">/* include the last mentioned byte */</comment>
        <expr_stmt><expr><name><name pos:line="175" pos:column="9">conn<pos:position pos:line="175" pos:column="13"/></name><operator pos:line="175" pos:column="13">-&gt;<pos:position pos:line="175" pos:column="18"/></operator><name pos:line="175" pos:column="15">resume_from<pos:position pos:line="175" pos:column="26"/></name></name> <operator pos:line="175" pos:column="27">=<pos:position pos:line="175" pos:column="28"/></operator> <name pos:line="175" pos:column="29">from<pos:position pos:line="175" pos:column="33"/></name></expr>;<pos:position pos:line="175" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="176" pos:column="9">infof<pos:position pos:line="176" pos:column="14"/></name><argument_list pos:line="176" pos:column="14">(<argument><expr><name pos:line="176" pos:column="15">data<pos:position pos:line="176" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="21">"FTP RANGE from %d getting %d bytes\n"<pos:position pos:line="176" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="176" pos:column="61">from<pos:position pos:line="176" pos:column="65"/></name></expr></argument>,
              <argument><expr><name><name pos:line="177" pos:column="15">conn<pos:position pos:line="177" pos:column="19"/></name><operator pos:line="177" pos:column="19">-&gt;<pos:position pos:line="177" pos:column="24"/></operator><name pos:line="177" pos:column="21">maxdownload<pos:position pos:line="177" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="177" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="34"/></expr_stmt>
      }<pos:position pos:line="178" pos:column="8"/></block></else></if>
      <expr_stmt><expr><call><name pos:line="179" pos:column="7">infof<pos:position pos:line="179" pos:column="12"/></name><argument_list pos:line="179" pos:column="12">(<argument><expr><name pos:line="179" pos:column="13">data<pos:position pos:line="179" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="179" pos:column="19">"range-download from %d to %d, totally %d bytes\n"<pos:position pos:line="179" pos:column="69"/></literal></expr></argument>,
            <argument><expr><name pos:line="180" pos:column="13">from<pos:position pos:line="180" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="19">to<pos:position pos:line="180" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="23">totalsize<pos:position pos:line="180" pos:column="32"/></name></expr></argument>)<pos:position pos:line="180" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="181" pos:column="7">ftp<pos:position pos:line="181" pos:column="10"/></name><operator pos:line="181" pos:column="10">-&gt;<pos:position pos:line="181" pos:column="15"/></operator><name pos:line="181" pos:column="12">dont_check<pos:position pos:line="181" pos:column="22"/></name></name> <operator pos:line="181" pos:column="23">=<pos:position pos:line="181" pos:column="24"/></operator> <name pos:line="181" pos:column="25">TRUE<pos:position pos:line="181" pos:column="29"/></name></expr>;<pos:position pos:line="181" pos:column="30"/></expr_stmt> <comment type="block" pos:line="181" pos:column="31">/* dont check for successful transfer */</comment>
    }<pos:position pos:line="182" pos:column="6"/></block></then></if>

    <if pos:line="184" pos:column="5">if<condition pos:line="184" pos:column="7">(<expr><operator pos:line="184" pos:column="8">(<pos:position pos:line="184" pos:column="9"/></operator><name><name pos:line="184" pos:column="9">data<pos:position pos:line="184" pos:column="13"/></name><operator pos:line="184" pos:column="13">-&gt;<pos:position pos:line="184" pos:column="18"/></operator><name pos:line="184" pos:column="15">set<pos:position pos:line="184" pos:column="18"/></name><operator pos:line="184" pos:column="18">.<pos:position pos:line="184" pos:column="19"/></operator><name pos:line="184" pos:column="19">ftp_list_only<pos:position pos:line="184" pos:column="32"/></name></name><operator pos:line="184" pos:column="32">)<pos:position pos:line="184" pos:column="33"/></operator> <operator pos:line="184" pos:column="34">||<pos:position pos:line="184" pos:column="36"/></operator> <operator pos:line="184" pos:column="37">!<pos:position pos:line="184" pos:column="38"/></operator><name><name pos:line="184" pos:column="38">ftp<pos:position pos:line="184" pos:column="41"/></name><operator pos:line="184" pos:column="41">-&gt;<pos:position pos:line="184" pos:column="46"/></operator><name pos:line="184" pos:column="43">file<pos:position pos:line="184" pos:column="47"/></name></name></expr>)<pos:position pos:line="184" pos:column="48"/></condition><then pos:line="184" pos:column="48"> <block pos:line="184" pos:column="49">{
      <comment type="block" pos:line="185" pos:column="7">/* The specified path ends with a slash, and therefore we think this
         is a directory that is requested, use LIST. But before that we
         need to set ASCII transfer mode. */</comment>
      <expr_stmt><expr><name pos:line="188" pos:column="7">dirlist<pos:position pos:line="188" pos:column="14"/></name> <operator pos:line="188" pos:column="15">=<pos:position pos:line="188" pos:column="16"/></operator> <name pos:line="188" pos:column="17">TRUE<pos:position pos:line="188" pos:column="21"/></name></expr>;<pos:position pos:line="188" pos:column="22"/></expr_stmt>

      <comment type="block" pos:line="190" pos:column="7">/* Set type to ASCII */</comment>
      <expr_stmt><expr><name pos:line="191" pos:column="7">result<pos:position pos:line="191" pos:column="13"/></name> <operator pos:line="191" pos:column="14">=<pos:position pos:line="191" pos:column="15"/></operator> <call><name pos:line="191" pos:column="16">ftp_transfertype<pos:position pos:line="191" pos:column="32"/></name><argument_list pos:line="191" pos:column="32">(<argument><expr><name pos:line="191" pos:column="33">conn<pos:position pos:line="191" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="39">TRUE<pos:position pos:line="191" pos:column="43"/></name></expr></argument> <comment type="block" pos:line="191" pos:column="44">/* ASCII enforced */</comment>)<pos:position pos:line="191" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="66"/></expr_stmt>
      <if pos:line="192" pos:column="7">if<condition pos:line="192" pos:column="9">(<expr><name pos:line="192" pos:column="10">result<pos:position pos:line="192" pos:column="16"/></name></expr>)<pos:position pos:line="192" pos:column="17"/></condition><then pos:line="192" pos:column="17">
        <block type="pseudo"><return pos:line="193" pos:column="9">return <expr><name pos:line="193" pos:column="16">result<pos:position pos:line="193" pos:column="22"/></name></expr>;<pos:position pos:line="193" pos:column="23"/></return></block></then></if>

      <comment type="block" pos:line="195" pos:column="7">/* if this output is to be machine-parsed, the NLST command will be
         better used since the LIST command output is not specified or
         standard in any way */</comment>

      <expr_stmt><expr><call><name pos:line="199" pos:column="7">FTPSENDF<pos:position pos:line="199" pos:column="15"/></name><argument_list pos:line="199" pos:column="15">(<argument><expr><name pos:line="199" pos:column="16">conn<pos:position pos:line="199" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="199" pos:column="22">"%s"<pos:position pos:line="199" pos:column="26"/></literal></expr></argument>,
            <argument><expr><ternary><condition><expr><name><name pos:line="200" pos:column="13">data<pos:position pos:line="200" pos:column="17"/></name><operator pos:line="200" pos:column="17">-&gt;<pos:position pos:line="200" pos:column="22"/></operator><name pos:line="200" pos:column="19">set<pos:position pos:line="200" pos:column="22"/></name><operator pos:line="200" pos:column="22">.<pos:position pos:line="200" pos:column="23"/></operator><name pos:line="200" pos:column="23">customrequest<pos:position pos:line="200" pos:column="36"/></name></name></expr>?<pos:position pos:line="200" pos:column="37"/></condition><then><expr><name><name pos:line="200" pos:column="37">data<pos:position pos:line="200" pos:column="41"/></name><operator pos:line="200" pos:column="41">-&gt;<pos:position pos:line="200" pos:column="46"/></operator><name pos:line="200" pos:column="43">set<pos:position pos:line="200" pos:column="46"/></name><operator pos:line="200" pos:column="46">.<pos:position pos:line="200" pos:column="47"/></operator><name pos:line="200" pos:column="47">customrequest<pos:position pos:line="200" pos:column="60"/></name></name></expr></then><else pos:line="200" pos:column="60">:
            <expr><operator pos:line="201" pos:column="13">(<pos:position pos:line="201" pos:column="14"/></operator><ternary><condition><expr><name><name pos:line="201" pos:column="14">data<pos:position pos:line="201" pos:column="18"/></name><operator pos:line="201" pos:column="18">-&gt;<pos:position pos:line="201" pos:column="23"/></operator><name pos:line="201" pos:column="20">set<pos:position pos:line="201" pos:column="23"/></name><operator pos:line="201" pos:column="23">.<pos:position pos:line="201" pos:column="24"/></operator><name pos:line="201" pos:column="24">ftp_list_only<pos:position pos:line="201" pos:column="37"/></name></name></expr>?<pos:position pos:line="201" pos:column="38"/></condition><then><expr><literal type="string" pos:line="201" pos:column="38">"NLST"<pos:position pos:line="201" pos:column="44"/></literal></expr></then><else pos:line="201" pos:column="44">:<expr><literal type="string" pos:line="201" pos:column="45">"LIST"<pos:position pos:line="201" pos:column="51"/></literal></expr></else></ternary><operator pos:line="201" pos:column="51">)<pos:position pos:line="201" pos:column="52"/></operator></expr></else></ternary></expr></argument>)<pos:position pos:line="201" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="202" pos:column="6"/></block></then>
    <else pos:line="203" pos:column="5">else <block pos:line="203" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="204" pos:column="7">ssize_t<pos:position pos:line="204" pos:column="14"/></name></type> <name pos:line="204" pos:column="15">foundsize<pos:position pos:line="204" pos:column="24"/></name></decl>;<pos:position pos:line="204" pos:column="25"/></decl_stmt>

      <comment type="block" pos:line="206" pos:column="7">/* Set type to binary (unless specified ASCII) */</comment>
      <expr_stmt><expr><name pos:line="207" pos:column="7">result<pos:position pos:line="207" pos:column="13"/></name> <operator pos:line="207" pos:column="14">=<pos:position pos:line="207" pos:column="15"/></operator> <call><name pos:line="207" pos:column="16">ftp_transfertype<pos:position pos:line="207" pos:column="32"/></name><argument_list pos:line="207" pos:column="32">(<argument><expr><name pos:line="207" pos:column="33">conn<pos:position pos:line="207" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="207" pos:column="39">data<pos:position pos:line="207" pos:column="43"/></name><operator pos:line="207" pos:column="43">-&gt;<pos:position pos:line="207" pos:column="48"/></operator><name pos:line="207" pos:column="45">set<pos:position pos:line="207" pos:column="48"/></name><operator pos:line="207" pos:column="48">.<pos:position pos:line="207" pos:column="49"/></operator><name pos:line="207" pos:column="49">ftp_ascii<pos:position pos:line="207" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="207" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="60"/></expr_stmt>
      <if pos:line="208" pos:column="7">if<condition pos:line="208" pos:column="9">(<expr><name pos:line="208" pos:column="10">result<pos:position pos:line="208" pos:column="16"/></name></expr>)<pos:position pos:line="208" pos:column="17"/></condition><then pos:line="208" pos:column="17">
        <block type="pseudo"><return pos:line="209" pos:column="9">return <expr><name pos:line="209" pos:column="16">result<pos:position pos:line="209" pos:column="22"/></name></expr>;<pos:position pos:line="209" pos:column="23"/></return></block></then></if>

      <comment type="block" pos:line="211" pos:column="7">/* Send any PREQUOTE strings after transfer type is set? (Wesley Laxton)*/</comment>
      <if pos:line="212" pos:column="7">if<condition pos:line="212" pos:column="9">(<expr><name><name pos:line="212" pos:column="10">data<pos:position pos:line="212" pos:column="14"/></name><operator pos:line="212" pos:column="14">-&gt;<pos:position pos:line="212" pos:column="19"/></operator><name pos:line="212" pos:column="16">set<pos:position pos:line="212" pos:column="19"/></name><operator pos:line="212" pos:column="19">.<pos:position pos:line="212" pos:column="20"/></operator><name pos:line="212" pos:column="20">prequote<pos:position pos:line="212" pos:column="28"/></name></name></expr>)<pos:position pos:line="212" pos:column="29"/></condition><then pos:line="212" pos:column="29"> <block pos:line="212" pos:column="30">{
        <if pos:line="213" pos:column="9">if <condition pos:line="213" pos:column="12">(<expr><operator pos:line="213" pos:column="13">(<pos:position pos:line="213" pos:column="14"/></operator><name pos:line="213" pos:column="14">result<pos:position pos:line="213" pos:column="20"/></name> <operator pos:line="213" pos:column="21">=<pos:position pos:line="213" pos:column="22"/></operator> <call><name pos:line="213" pos:column="23">ftp_sendquote<pos:position pos:line="213" pos:column="36"/></name><argument_list pos:line="213" pos:column="36">(<argument><expr><name pos:line="213" pos:column="37">conn<pos:position pos:line="213" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="213" pos:column="43">data<pos:position pos:line="213" pos:column="47"/></name><operator pos:line="213" pos:column="47">-&gt;<pos:position pos:line="213" pos:column="52"/></operator><name pos:line="213" pos:column="49">set<pos:position pos:line="213" pos:column="52"/></name><operator pos:line="213" pos:column="52">.<pos:position pos:line="213" pos:column="53"/></operator><name pos:line="213" pos:column="53">prequote<pos:position pos:line="213" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="213" pos:column="62"/></argument_list></call><operator pos:line="213" pos:column="62">)<pos:position pos:line="213" pos:column="63"/></operator> <operator pos:line="213" pos:column="64">!=<pos:position pos:line="213" pos:column="66"/></operator> <name pos:line="213" pos:column="67">CURLE_OK<pos:position pos:line="213" pos:column="75"/></name></expr>)<pos:position pos:line="213" pos:column="76"/></condition><then pos:line="213" pos:column="76">
          <block type="pseudo"><return pos:line="214" pos:column="11">return <expr><name pos:line="214" pos:column="18">result<pos:position pos:line="214" pos:column="24"/></name></expr>;<pos:position pos:line="214" pos:column="25"/></return></block></then></if>
      }<pos:position pos:line="215" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="217" pos:column="7">/* Attempt to get the size, it'll be useful in some cases: for resumed
         downloads and when talking to servers that don't give away the size
         in the RETR response line. */</comment>
      <expr_stmt><expr><name pos:line="220" pos:column="7">result<pos:position pos:line="220" pos:column="13"/></name> <operator pos:line="220" pos:column="14">=<pos:position pos:line="220" pos:column="15"/></operator> <call><name pos:line="220" pos:column="16">ftp_getsize<pos:position pos:line="220" pos:column="27"/></name><argument_list pos:line="220" pos:column="27">(<argument><expr><name pos:line="220" pos:column="28">conn<pos:position pos:line="220" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="220" pos:column="34">ftp<pos:position pos:line="220" pos:column="37"/></name><operator pos:line="220" pos:column="37">-&gt;<pos:position pos:line="220" pos:column="42"/></operator><name pos:line="220" pos:column="39">file<pos:position pos:line="220" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="220" pos:column="45">&amp;<pos:position pos:line="220" pos:column="50"/></operator><name pos:line="220" pos:column="46">foundsize<pos:position pos:line="220" pos:column="55"/></name></expr></argument>)<pos:position pos:line="220" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="57"/></expr_stmt>
      <if pos:line="221" pos:column="7">if<condition pos:line="221" pos:column="9">(<expr><name pos:line="221" pos:column="10">CURLE_OK<pos:position pos:line="221" pos:column="18"/></name> <operator pos:line="221" pos:column="19">==<pos:position pos:line="221" pos:column="21"/></operator> <name pos:line="221" pos:column="22">result<pos:position pos:line="221" pos:column="28"/></name></expr>)<pos:position pos:line="221" pos:column="29"/></condition><then pos:line="221" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="222" pos:column="9">downloadsize<pos:position pos:line="222" pos:column="21"/></name> <operator pos:line="222" pos:column="22">=<pos:position pos:line="222" pos:column="23"/></operator> <name pos:line="222" pos:column="24">foundsize<pos:position pos:line="222" pos:column="33"/></name></expr>;<pos:position pos:line="222" pos:column="34"/></expr_stmt></block></then></if>

      <if pos:line="224" pos:column="7">if<condition pos:line="224" pos:column="9">(<expr><name><name pos:line="224" pos:column="10">conn<pos:position pos:line="224" pos:column="14"/></name><operator pos:line="224" pos:column="14">-&gt;<pos:position pos:line="224" pos:column="19"/></operator><name pos:line="224" pos:column="16">resume_from<pos:position pos:line="224" pos:column="27"/></name></name></expr>)<pos:position pos:line="224" pos:column="28"/></condition><then pos:line="224" pos:column="28"> <block pos:line="224" pos:column="29">{

        <comment type="block" pos:line="226" pos:column="9">/* Daniel: (August 4, 1999)
         *
         * We start with trying to use the SIZE command to figure out the size
         * of the file we're gonna get. If we can get the size, this is by far
         * the best way to know if we're trying to resume beyond the EOF.
         *
         * Daniel, November 28, 2001. We *always* get the size on downloads
         * now, so it is done before this even when not doing resumes. I saved
         * the comment above for nostalgical reasons! ;-)
         */</comment>
        <if pos:line="236" pos:column="9">if<condition pos:line="236" pos:column="11">(<expr><name pos:line="236" pos:column="12">CURLE_OK<pos:position pos:line="236" pos:column="20"/></name> <operator pos:line="236" pos:column="21">!=<pos:position pos:line="236" pos:column="23"/></operator> <name pos:line="236" pos:column="24">result<pos:position pos:line="236" pos:column="30"/></name></expr>)<pos:position pos:line="236" pos:column="31"/></condition><then pos:line="236" pos:column="31"> <block pos:line="236" pos:column="32">{
          <expr_stmt><expr><call><name pos:line="237" pos:column="11">infof<pos:position pos:line="237" pos:column="16"/></name><argument_list pos:line="237" pos:column="16">(<argument><expr><name pos:line="237" pos:column="17">data<pos:position pos:line="237" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="237" pos:column="23">"ftp server doesn't support SIZE\n"<pos:position pos:line="237" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="60"/></expr_stmt>
          <comment type="block" pos:line="238" pos:column="11">/* We couldn't get the size and therefore we can't know if there
             really is a part of the file left to get, although the server
             will just close the connection when we start the connection so it
             won't cause us any harm, just not make us exit as nicely. */</comment>
        }<pos:position pos:line="242" pos:column="10"/></block></then>
        <else pos:line="243" pos:column="9">else <block pos:line="243" pos:column="14">{
          <comment type="block" pos:line="244" pos:column="11">/* We got a file size report, so we check that there actually is a
             part of the file left to get, or else we go home.  */</comment>
          <if pos:line="246" pos:column="11">if<condition pos:line="246" pos:column="13">(<expr><name><name pos:line="246" pos:column="14">conn<pos:position pos:line="246" pos:column="18"/></name><operator pos:line="246" pos:column="18">-&gt;<pos:position pos:line="246" pos:column="23"/></operator><name pos:line="246" pos:column="20">resume_from<pos:position pos:line="246" pos:column="31"/></name></name><operator pos:line="246" pos:column="31">&lt;<pos:position pos:line="246" pos:column="35"/></operator> <literal type="number" pos:line="246" pos:column="33">0<pos:position pos:line="246" pos:column="34"/></literal></expr>)<pos:position pos:line="246" pos:column="35"/></condition><then pos:line="246" pos:column="35"> <block pos:line="246" pos:column="36">{
            <comment type="block" pos:line="247" pos:column="13">/* We're supposed to download the last abs(from) bytes */</comment>
            <if pos:line="248" pos:column="13">if<condition pos:line="248" pos:column="15">(<expr><name pos:line="248" pos:column="16">foundsize<pos:position pos:line="248" pos:column="25"/></name> <operator pos:line="248" pos:column="26">&lt;<pos:position pos:line="248" pos:column="30"/></operator> <operator pos:line="248" pos:column="28">-<pos:position pos:line="248" pos:column="29"/></operator><name><name pos:line="248" pos:column="29">conn<pos:position pos:line="248" pos:column="33"/></name><operator pos:line="248" pos:column="33">-&gt;<pos:position pos:line="248" pos:column="38"/></operator><name pos:line="248" pos:column="35">resume_from<pos:position pos:line="248" pos:column="46"/></name></name></expr>)<pos:position pos:line="248" pos:column="47"/></condition><then pos:line="248" pos:column="47"> <block pos:line="248" pos:column="48">{
              <expr_stmt><expr><call><name pos:line="249" pos:column="15">failf<pos:position pos:line="249" pos:column="20"/></name><argument_list pos:line="249" pos:column="20">(<argument><expr><name pos:line="249" pos:column="21">data<pos:position pos:line="249" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="249" pos:column="27">"Offset (%d) was beyond file size (%d)"<pos:position pos:line="249" pos:column="66"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="250" pos:column="21">conn<pos:position pos:line="250" pos:column="25"/></name><operator pos:line="250" pos:column="25">-&gt;<pos:position pos:line="250" pos:column="30"/></operator><name pos:line="250" pos:column="27">resume_from<pos:position pos:line="250" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="40">foundsize<pos:position pos:line="250" pos:column="49"/></name></expr></argument>)<pos:position pos:line="250" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="51"/></expr_stmt>
              <return pos:line="251" pos:column="15">return <expr><name pos:line="251" pos:column="22">CURLE_FTP_BAD_DOWNLOAD_RESUME<pos:position pos:line="251" pos:column="51"/></name></expr>;<pos:position pos:line="251" pos:column="52"/></return>
            }<pos:position pos:line="252" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="253" pos:column="13">/* convert to size to download */</comment>
            <expr_stmt><expr><name pos:line="254" pos:column="13">downloadsize<pos:position pos:line="254" pos:column="25"/></name> <operator pos:line="254" pos:column="26">=<pos:position pos:line="254" pos:column="27"/></operator> <operator pos:line="254" pos:column="28">-<pos:position pos:line="254" pos:column="29"/></operator><name><name pos:line="254" pos:column="29">conn<pos:position pos:line="254" pos:column="33"/></name><operator pos:line="254" pos:column="33">-&gt;<pos:position pos:line="254" pos:column="38"/></operator><name pos:line="254" pos:column="35">resume_from<pos:position pos:line="254" pos:column="46"/></name></name></expr>;<pos:position pos:line="254" pos:column="47"/></expr_stmt>
            <comment type="block" pos:line="255" pos:column="13">/* download from where? */</comment>
            <expr_stmt><expr><name><name pos:line="256" pos:column="13">conn<pos:position pos:line="256" pos:column="17"/></name><operator pos:line="256" pos:column="17">-&gt;<pos:position pos:line="256" pos:column="22"/></operator><name pos:line="256" pos:column="19">resume_from<pos:position pos:line="256" pos:column="30"/></name></name> <operator pos:line="256" pos:column="31">=<pos:position pos:line="256" pos:column="32"/></operator> <name pos:line="256" pos:column="33">foundsize<pos:position pos:line="256" pos:column="42"/></name> <operator pos:line="256" pos:column="43">-<pos:position pos:line="256" pos:column="44"/></operator> <name pos:line="256" pos:column="45">downloadsize<pos:position pos:line="256" pos:column="57"/></name></expr>;<pos:position pos:line="256" pos:column="58"/></expr_stmt>
          }<pos:position pos:line="257" pos:column="12"/></block></then>
          <else pos:line="258" pos:column="11">else <block pos:line="258" pos:column="16">{
            <if pos:line="259" pos:column="13">if<condition pos:line="259" pos:column="15">(<expr><name pos:line="259" pos:column="16">foundsize<pos:position pos:line="259" pos:column="25"/></name> <operator pos:line="259" pos:column="26">&lt;<pos:position pos:line="259" pos:column="30"/></operator> <name><name pos:line="259" pos:column="28">conn<pos:position pos:line="259" pos:column="32"/></name><operator pos:line="259" pos:column="32">-&gt;<pos:position pos:line="259" pos:column="37"/></operator><name pos:line="259" pos:column="34">resume_from<pos:position pos:line="259" pos:column="45"/></name></name></expr>)<pos:position pos:line="259" pos:column="46"/></condition><then pos:line="259" pos:column="46"> <block pos:line="259" pos:column="47">{
              <expr_stmt><expr><call><name pos:line="260" pos:column="15">failf<pos:position pos:line="260" pos:column="20"/></name><argument_list pos:line="260" pos:column="20">(<argument><expr><name pos:line="260" pos:column="21">data<pos:position pos:line="260" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="260" pos:column="27">"Offset (%d) was beyond file size (%d)"<pos:position pos:line="260" pos:column="66"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="261" pos:column="21">conn<pos:position pos:line="261" pos:column="25"/></name><operator pos:line="261" pos:column="25">-&gt;<pos:position pos:line="261" pos:column="30"/></operator><name pos:line="261" pos:column="27">resume_from<pos:position pos:line="261" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="40">foundsize<pos:position pos:line="261" pos:column="49"/></name></expr></argument>)<pos:position pos:line="261" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="51"/></expr_stmt>
              <return pos:line="262" pos:column="15">return <expr><name pos:line="262" pos:column="22">CURLE_FTP_BAD_DOWNLOAD_RESUME<pos:position pos:line="262" pos:column="51"/></name></expr>;<pos:position pos:line="262" pos:column="52"/></return>
            }<pos:position pos:line="263" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="264" pos:column="13">/* Now store the number of bytes we are expected to download */</comment>
            <expr_stmt><expr><name pos:line="265" pos:column="13">downloadsize<pos:position pos:line="265" pos:column="25"/></name> <operator pos:line="265" pos:column="26">=<pos:position pos:line="265" pos:column="27"/></operator> <name pos:line="265" pos:column="28">foundsize<pos:position pos:line="265" pos:column="37"/></name><operator pos:line="265" pos:column="37">-<pos:position pos:line="265" pos:column="38"/></operator><name><name pos:line="265" pos:column="38">conn<pos:position pos:line="265" pos:column="42"/></name><operator pos:line="265" pos:column="42">-&gt;<pos:position pos:line="265" pos:column="47"/></operator><name pos:line="265" pos:column="44">resume_from<pos:position pos:line="265" pos:column="55"/></name></name></expr>;<pos:position pos:line="265" pos:column="56"/></expr_stmt>
          }<pos:position pos:line="266" pos:column="12"/></block></else></if>
        }<pos:position pos:line="267" pos:column="10"/></block></else></if>

        <if pos:line="269" pos:column="9">if <condition pos:line="269" pos:column="12">(<expr><name pos:line="269" pos:column="13">downloadsize<pos:position pos:line="269" pos:column="25"/></name> <operator pos:line="269" pos:column="26">==<pos:position pos:line="269" pos:column="28"/></operator> <literal type="number" pos:line="269" pos:column="29">0<pos:position pos:line="269" pos:column="30"/></literal></expr>)<pos:position pos:line="269" pos:column="31"/></condition><then pos:line="269" pos:column="31"> <block pos:line="269" pos:column="32">{
          <comment type="block" pos:line="270" pos:column="11">/* no data to transfer */</comment>
          <expr_stmt><expr><name pos:line="271" pos:column="11">result<pos:position pos:line="271" pos:column="17"/></name><operator pos:line="271" pos:column="17">=<pos:position pos:line="271" pos:column="18"/></operator><call><name pos:line="271" pos:column="18">Curl_Transfer<pos:position pos:line="271" pos:column="31"/></name><argument_list pos:line="271" pos:column="31">(<argument><expr><name pos:line="271" pos:column="32">conn<pos:position pos:line="271" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="271" pos:column="38">-<pos:position pos:line="271" pos:column="39"/></operator><literal type="number" pos:line="271" pos:column="39">1<pos:position pos:line="271" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="271" pos:column="42">-<pos:position pos:line="271" pos:column="43"/></operator><literal type="number" pos:line="271" pos:column="43">1<pos:position pos:line="271" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="271" pos:column="46">FALSE<pos:position pos:line="271" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="271" pos:column="53">NULL<pos:position pos:line="271" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="271" pos:column="59">-<pos:position pos:line="271" pos:column="60"/></operator><literal type="number" pos:line="271" pos:column="60">1<pos:position pos:line="271" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="271" pos:column="63">NULL<pos:position pos:line="271" pos:column="67"/></name></expr></argument>)<pos:position pos:line="271" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="69"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="272" pos:column="11">infof<pos:position pos:line="272" pos:column="16"/></name><argument_list pos:line="272" pos:column="16">(<argument><expr><name pos:line="272" pos:column="17">data<pos:position pos:line="272" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="272" pos:column="23">"File already completely downloaded\n"<pos:position pos:line="272" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="272" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="63"/></expr_stmt>

          <comment type="block" pos:line="274" pos:column="11">/* Set no_transfer so that we won't get any error in Curl_ftp_done()
           * because we didn't transfer the any file */</comment>
          <expr_stmt><expr><name><name pos:line="276" pos:column="11">ftp<pos:position pos:line="276" pos:column="14"/></name><operator pos:line="276" pos:column="14">-&gt;<pos:position pos:line="276" pos:column="19"/></operator><name pos:line="276" pos:column="16">no_transfer<pos:position pos:line="276" pos:column="27"/></name></name> <operator pos:line="276" pos:column="28">=<pos:position pos:line="276" pos:column="29"/></operator> <name pos:line="276" pos:column="30">TRUE<pos:position pos:line="276" pos:column="34"/></name></expr>;<pos:position pos:line="276" pos:column="35"/></expr_stmt>
          <return pos:line="277" pos:column="11">return <expr><name pos:line="277" pos:column="18">CURLE_OK<pos:position pos:line="277" pos:column="26"/></name></expr>;<pos:position pos:line="277" pos:column="27"/></return>
        }<pos:position pos:line="278" pos:column="10"/></block></then></if>
	
        <comment type="block" pos:line="280" pos:column="9">/* Set resume file transfer offset */</comment>
        <expr_stmt><expr><call><name pos:line="281" pos:column="9">infof<pos:position pos:line="281" pos:column="14"/></name><argument_list pos:line="281" pos:column="14">(<argument><expr><name pos:line="281" pos:column="15">data<pos:position pos:line="281" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="281" pos:column="21">"Instructs server to resume from offset %d\n"<pos:position pos:line="281" pos:column="66"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="282" pos:column="15">conn<pos:position pos:line="282" pos:column="19"/></name><operator pos:line="282" pos:column="19">-&gt;<pos:position pos:line="282" pos:column="24"/></operator><name pos:line="282" pos:column="21">resume_from<pos:position pos:line="282" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="282" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="34"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="284" pos:column="9">FTPSENDF<pos:position pos:line="284" pos:column="17"/></name><argument_list pos:line="284" pos:column="17">(<argument><expr><name pos:line="284" pos:column="18">conn<pos:position pos:line="284" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="284" pos:column="24">"REST %d"<pos:position pos:line="284" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="284" pos:column="35">conn<pos:position pos:line="284" pos:column="39"/></name><operator pos:line="284" pos:column="39">-&gt;<pos:position pos:line="284" pos:column="44"/></operator><name pos:line="284" pos:column="41">resume_from<pos:position pos:line="284" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="284" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="54"/></expr_stmt>

        <expr_stmt><expr><name pos:line="286" pos:column="9">result<pos:position pos:line="286" pos:column="15"/></name> <operator pos:line="286" pos:column="16">=<pos:position pos:line="286" pos:column="17"/></operator> <call><name pos:line="286" pos:column="18">Curl_GetFTPResponse<pos:position pos:line="286" pos:column="37"/></name><argument_list pos:line="286" pos:column="37">(<argument><expr><operator pos:line="286" pos:column="38">&amp;<pos:position pos:line="286" pos:column="43"/></operator><name pos:line="286" pos:column="39">nread<pos:position pos:line="286" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="286" pos:column="46">conn<pos:position pos:line="286" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="286" pos:column="52">&amp;<pos:position pos:line="286" pos:column="57"/></operator><name pos:line="286" pos:column="53">ftpcode<pos:position pos:line="286" pos:column="60"/></name></expr></argument>)<pos:position pos:line="286" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="62"/></expr_stmt>
        <if pos:line="287" pos:column="9">if<condition pos:line="287" pos:column="11">(<expr><name pos:line="287" pos:column="12">result<pos:position pos:line="287" pos:column="18"/></name></expr>)<pos:position pos:line="287" pos:column="19"/></condition><then pos:line="287" pos:column="19">
          <block type="pseudo"><return pos:line="288" pos:column="11">return <expr><name pos:line="288" pos:column="18">result<pos:position pos:line="288" pos:column="24"/></name></expr>;<pos:position pos:line="288" pos:column="25"/></return></block></then></if>

        <if pos:line="290" pos:column="9">if<condition pos:line="290" pos:column="11">(<expr><name pos:line="290" pos:column="12">ftpcode<pos:position pos:line="290" pos:column="19"/></name> <operator pos:line="290" pos:column="20">!=<pos:position pos:line="290" pos:column="22"/></operator> <literal type="number" pos:line="290" pos:column="23">350<pos:position pos:line="290" pos:column="26"/></literal></expr>)<pos:position pos:line="290" pos:column="27"/></condition><then pos:line="290" pos:column="27"> <block pos:line="290" pos:column="28">{
          <expr_stmt><expr><call><name pos:line="291" pos:column="11">failf<pos:position pos:line="291" pos:column="16"/></name><argument_list pos:line="291" pos:column="16">(<argument><expr><name pos:line="291" pos:column="17">data<pos:position pos:line="291" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="291" pos:column="23">"Couldn't use REST: %s"<pos:position pos:line="291" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="291" pos:column="48">buf<pos:position pos:line="291" pos:column="51"/></name><operator pos:line="291" pos:column="51">+<pos:position pos:line="291" pos:column="52"/></operator><literal type="number" pos:line="291" pos:column="52">4<pos:position pos:line="291" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="291" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="55"/></expr_stmt>
          <return pos:line="292" pos:column="11">return <expr><name pos:line="292" pos:column="18">CURLE_FTP_COULDNT_USE_REST<pos:position pos:line="292" pos:column="44"/></name></expr>;<pos:position pos:line="292" pos:column="45"/></return>
        }<pos:position pos:line="293" pos:column="10"/></block></then></if>
      }<pos:position pos:line="294" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="296" pos:column="7">FTPSENDF<pos:position pos:line="296" pos:column="15"/></name><argument_list pos:line="296" pos:column="15">(<argument><expr><name pos:line="296" pos:column="16">conn<pos:position pos:line="296" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="296" pos:column="22">"RETR %s"<pos:position pos:line="296" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="296" pos:column="33">ftp<pos:position pos:line="296" pos:column="36"/></name><operator pos:line="296" pos:column="36">-&gt;<pos:position pos:line="296" pos:column="41"/></operator><name pos:line="296" pos:column="38">file<pos:position pos:line="296" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="296" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="297" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="299" pos:column="5">result<pos:position pos:line="299" pos:column="11"/></name> <operator pos:line="299" pos:column="12">=<pos:position pos:line="299" pos:column="13"/></operator> <call><name pos:line="299" pos:column="14">Curl_GetFTPResponse<pos:position pos:line="299" pos:column="33"/></name><argument_list pos:line="299" pos:column="33">(<argument><expr><operator pos:line="299" pos:column="34">&amp;<pos:position pos:line="299" pos:column="39"/></operator><name pos:line="299" pos:column="35">nread<pos:position pos:line="299" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="299" pos:column="42">conn<pos:position pos:line="299" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="299" pos:column="48">&amp;<pos:position pos:line="299" pos:column="53"/></operator><name pos:line="299" pos:column="49">ftpcode<pos:position pos:line="299" pos:column="56"/></name></expr></argument>)<pos:position pos:line="299" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="58"/></expr_stmt>
    <if pos:line="300" pos:column="5">if<condition pos:line="300" pos:column="7">(<expr><name pos:line="300" pos:column="8">result<pos:position pos:line="300" pos:column="14"/></name></expr>)<pos:position pos:line="300" pos:column="15"/></condition><then pos:line="300" pos:column="15">
      <block type="pseudo"><return pos:line="301" pos:column="7">return <expr><name pos:line="301" pos:column="14">result<pos:position pos:line="301" pos:column="20"/></name></expr>;<pos:position pos:line="301" pos:column="21"/></return></block></then></if>

    <if pos:line="303" pos:column="5">if<condition pos:line="303" pos:column="7">(<expr><operator pos:line="303" pos:column="8">(<pos:position pos:line="303" pos:column="9"/></operator><name pos:line="303" pos:column="9">ftpcode<pos:position pos:line="303" pos:column="16"/></name> <operator pos:line="303" pos:column="17">==<pos:position pos:line="303" pos:column="19"/></operator> <literal type="number" pos:line="303" pos:column="20">150<pos:position pos:line="303" pos:column="23"/></literal><operator pos:line="303" pos:column="23">)<pos:position pos:line="303" pos:column="24"/></operator> <operator pos:line="303" pos:column="25">||<pos:position pos:line="303" pos:column="27"/></operator> <operator pos:line="303" pos:column="28">(<pos:position pos:line="303" pos:column="29"/></operator><name pos:line="303" pos:column="29">ftpcode<pos:position pos:line="303" pos:column="36"/></name> <operator pos:line="303" pos:column="37">==<pos:position pos:line="303" pos:column="39"/></operator> <literal type="number" pos:line="303" pos:column="40">125<pos:position pos:line="303" pos:column="43"/></literal><operator pos:line="303" pos:column="43">)<pos:position pos:line="303" pos:column="44"/></operator></expr>)<pos:position pos:line="303" pos:column="45"/></condition><then pos:line="303" pos:column="45"> <block pos:line="303" pos:column="46">{

      <comment type="block" pos:line="305" pos:column="7">/*
        A;
        150 Opening BINARY mode data connection for /etc/passwd (2241
        bytes).  (ok, the file is being transfered)
	
        B:
        150 Opening ASCII mode data connection for /bin/ls 

        C:
        150 ASCII data connection for /bin/ls (137.167.104.91,37445) (0 bytes).

        D:
        150 Opening ASCII mode data connection for /linux/fisk/kpanelrc (0.0.0.0,0) (545 bytes).
          
        E:
        125 Data connection already open; Transfer starting. */</comment>

      <decl_stmt><decl><type><name pos:line="322" pos:column="7">int<pos:position pos:line="322" pos:column="10"/></name></type> <name pos:line="322" pos:column="11">size<pos:position pos:line="322" pos:column="15"/></name><init pos:line="322" pos:column="15">=<expr><operator pos:line="322" pos:column="16">-<pos:position pos:line="322" pos:column="17"/></operator><literal type="number" pos:line="322" pos:column="17">1<pos:position pos:line="322" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="322" pos:column="19"/></decl_stmt> <comment type="block" pos:line="322" pos:column="20">/* default unknown size */</comment>


      <comment type="block" pos:line="325" pos:column="7">/*
       * It appears that there are FTP-servers that return size 0 for files
       * when SIZE is used on the file while being in BINARY mode. To work
       * around that (stupid) behavior, we attempt to parse the RETR response
       * even if the SIZE returned size zero.
       *
       * Debugging help from Salvatore Sorrentino on February 26, 2003.
       */</comment>

      <if pos:line="334" pos:column="7">if<condition pos:line="334" pos:column="9">(<expr><operator pos:line="334" pos:column="10">!<pos:position pos:line="334" pos:column="11"/></operator><name pos:line="334" pos:column="11">dirlist<pos:position pos:line="334" pos:column="18"/></name> <operator pos:line="334" pos:column="19">&amp;&amp;<pos:position pos:line="334" pos:column="29"/></operator>
         <operator pos:line="335" pos:column="10">!<pos:position pos:line="335" pos:column="11"/></operator><name><name pos:line="335" pos:column="11">data<pos:position pos:line="335" pos:column="15"/></name><operator pos:line="335" pos:column="15">-&gt;<pos:position pos:line="335" pos:column="20"/></operator><name pos:line="335" pos:column="17">set<pos:position pos:line="335" pos:column="20"/></name><operator pos:line="335" pos:column="20">.<pos:position pos:line="335" pos:column="21"/></operator><name pos:line="335" pos:column="21">ftp_ascii<pos:position pos:line="335" pos:column="30"/></name></name> <operator pos:line="335" pos:column="31">&amp;&amp;<pos:position pos:line="335" pos:column="41"/></operator>
         <operator pos:line="336" pos:column="10">(<pos:position pos:line="336" pos:column="11"/></operator><name pos:line="336" pos:column="11">downloadsize<pos:position pos:line="336" pos:column="23"/></name> <operator pos:line="336" pos:column="24">&lt;<pos:position pos:line="336" pos:column="28"/></operator> <literal type="number" pos:line="336" pos:column="26">1<pos:position pos:line="336" pos:column="27"/></literal><operator pos:line="336" pos:column="27">)<pos:position pos:line="336" pos:column="28"/></operator></expr>)<pos:position pos:line="336" pos:column="29"/></condition><then pos:line="336" pos:column="29"> <block pos:line="336" pos:column="30">{
        <comment type="block" pos:line="337" pos:column="9">/*
         * It seems directory listings either don't show the size or very
         * often uses size 0 anyway. ASCII transfers may very well turn out
         * that the transfered amount of data is not the same as this line
         * tells, why using this number in those cases only confuses us.
         *
         * Example D above makes this parsing a little tricky */</comment>
        <decl_stmt><decl><type><name pos:line="344" pos:column="9">char<pos:position pos:line="344" pos:column="13"/></name> <modifier pos:line="344" pos:column="14">*<pos:position pos:line="344" pos:column="15"/></modifier></type><name pos:line="344" pos:column="15">bytes<pos:position pos:line="344" pos:column="20"/></name></decl>;<pos:position pos:line="344" pos:column="21"/></decl_stmt>
        <expr_stmt><expr><name pos:line="345" pos:column="9">bytes<pos:position pos:line="345" pos:column="14"/></name><operator pos:line="345" pos:column="14">=<pos:position pos:line="345" pos:column="15"/></operator><call><name pos:line="345" pos:column="15">strstr<pos:position pos:line="345" pos:column="21"/></name><argument_list pos:line="345" pos:column="21">(<argument><expr><name pos:line="345" pos:column="22">buf<pos:position pos:line="345" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="345" pos:column="27">" bytes"<pos:position pos:line="345" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="345" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="37"/></expr_stmt>
        <if pos:line="346" pos:column="9">if<condition pos:line="346" pos:column="11">(<expr><name pos:line="346" pos:column="12">bytes<pos:position pos:line="346" pos:column="17"/></name><operator pos:line="346" pos:column="17">--<pos:position pos:line="346" pos:column="19"/></operator></expr>)<pos:position pos:line="346" pos:column="20"/></condition><then pos:line="346" pos:column="20"> <block pos:line="346" pos:column="21">{
          <decl_stmt><decl><type><name pos:line="347" pos:column="11">int<pos:position pos:line="347" pos:column="14"/></name></type> <name pos:line="347" pos:column="15">index<pos:position pos:line="347" pos:column="20"/></name><init pos:line="347" pos:column="20">=<expr><name pos:line="347" pos:column="21">bytes<pos:position pos:line="347" pos:column="26"/></name><operator pos:line="347" pos:column="26">-<pos:position pos:line="347" pos:column="27"/></operator><name pos:line="347" pos:column="27">buf<pos:position pos:line="347" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="347" pos:column="31"/></decl_stmt>
          <comment type="block" pos:line="348" pos:column="11">/* this is a hint there is size information in there! ;-) */</comment>
          <while pos:line="349" pos:column="11">while<condition pos:line="349" pos:column="16">(<expr><operator pos:line="349" pos:column="17">--<pos:position pos:line="349" pos:column="19"/></operator><name pos:line="349" pos:column="19">index<pos:position pos:line="349" pos:column="24"/></name></expr>)<pos:position pos:line="349" pos:column="25"/></condition> <block pos:line="349" pos:column="26">{
            <comment type="block" pos:line="350" pos:column="13">/* scan for the parenthesis and break there */</comment>
            <if pos:line="351" pos:column="13">if<condition pos:line="351" pos:column="15">(<expr><literal type="char" pos:line="351" pos:column="16">'('<pos:position pos:line="351" pos:column="19"/></literal> <operator pos:line="351" pos:column="20">==<pos:position pos:line="351" pos:column="22"/></operator> <operator pos:line="351" pos:column="23">*<pos:position pos:line="351" pos:column="24"/></operator><name pos:line="351" pos:column="24">bytes<pos:position pos:line="351" pos:column="29"/></name></expr>)<pos:position pos:line="351" pos:column="30"/></condition><then pos:line="351" pos:column="30">
              <block type="pseudo"><break pos:line="352" pos:column="15">break;<pos:position pos:line="352" pos:column="21"/></break></block></then></if>
            <comment type="block" pos:line="353" pos:column="13">/* if only skip digits, or else we're in deep trouble */</comment>
            <if pos:line="354" pos:column="13">if<condition pos:line="354" pos:column="15">(<expr><operator pos:line="354" pos:column="16">!<pos:position pos:line="354" pos:column="17"/></operator><call><name pos:line="354" pos:column="17">isdigit<pos:position pos:line="354" pos:column="24"/></name><argument_list pos:line="354" pos:column="24">(<argument><expr><operator pos:line="354" pos:column="25">(<pos:position pos:line="354" pos:column="26"/></operator><name pos:line="354" pos:column="26">int<pos:position pos:line="354" pos:column="29"/></name><operator pos:line="354" pos:column="29">)<pos:position pos:line="354" pos:column="30"/></operator><operator pos:line="354" pos:column="30">*<pos:position pos:line="354" pos:column="31"/></operator><name pos:line="354" pos:column="31">bytes<pos:position pos:line="354" pos:column="36"/></name></expr></argument>)<pos:position pos:line="354" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="354" pos:column="38"/></condition><then pos:line="354" pos:column="38"> <block pos:line="354" pos:column="39">{
              <expr_stmt><expr><name pos:line="355" pos:column="15">bytes<pos:position pos:line="355" pos:column="20"/></name><operator pos:line="355" pos:column="20">=<pos:position pos:line="355" pos:column="21"/></operator><name pos:line="355" pos:column="21">NULL<pos:position pos:line="355" pos:column="25"/></name></expr>;<pos:position pos:line="355" pos:column="26"/></expr_stmt>
              <break pos:line="356" pos:column="15">break;<pos:position pos:line="356" pos:column="21"/></break>
            }<pos:position pos:line="357" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="358" pos:column="13">/* one more estep backwards */</comment>
            <expr_stmt><expr><name pos:line="359" pos:column="13">bytes<pos:position pos:line="359" pos:column="18"/></name><operator pos:line="359" pos:column="18">--<pos:position pos:line="359" pos:column="20"/></operator></expr>;<pos:position pos:line="359" pos:column="21"/></expr_stmt>
          }<pos:position pos:line="360" pos:column="12"/></block></while>
          <comment type="block" pos:line="361" pos:column="11">/* only if we have nothing but digits: */</comment>
          <if pos:line="362" pos:column="11">if<condition pos:line="362" pos:column="13">(<expr><name pos:line="362" pos:column="14">bytes<pos:position pos:line="362" pos:column="19"/></name><operator pos:line="362" pos:column="19">++<pos:position pos:line="362" pos:column="21"/></operator></expr>)<pos:position pos:line="362" pos:column="22"/></condition><then pos:line="362" pos:column="22"> <block pos:line="362" pos:column="23">{
            <comment type="block" pos:line="363" pos:column="13">/* get the number! */</comment>
            <expr_stmt><expr><name pos:line="364" pos:column="13">size<pos:position pos:line="364" pos:column="17"/></name> <operator pos:line="364" pos:column="18">=<pos:position pos:line="364" pos:column="19"/></operator> <call><name pos:line="364" pos:column="20">atoi<pos:position pos:line="364" pos:column="24"/></name><argument_list pos:line="364" pos:column="24">(<argument><expr><name pos:line="364" pos:column="25">bytes<pos:position pos:line="364" pos:column="30"/></name></expr></argument>)<pos:position pos:line="364" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="32"/></expr_stmt>
          }<pos:position pos:line="365" pos:column="12"/></block></then></if>
            
        }<pos:position pos:line="367" pos:column="10"/></block></then></if>
      }<pos:position pos:line="368" pos:column="8"/></block></then>
      <elseif pos:line="369" pos:column="7">else <if pos:line="369" pos:column="12">if<condition pos:line="369" pos:column="14">(<expr><name pos:line="369" pos:column="15">downloadsize<pos:position pos:line="369" pos:column="27"/></name> <operator pos:line="369" pos:column="28">&gt;<pos:position pos:line="369" pos:column="32"/></operator> <operator pos:line="369" pos:column="30">-<pos:position pos:line="369" pos:column="31"/></operator><literal type="number" pos:line="369" pos:column="31">1<pos:position pos:line="369" pos:column="32"/></literal></expr>)<pos:position pos:line="369" pos:column="33"/></condition><then pos:line="369" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><name pos:line="370" pos:column="9">size<pos:position pos:line="370" pos:column="13"/></name> <operator pos:line="370" pos:column="14">=<pos:position pos:line="370" pos:column="15"/></operator> <name pos:line="370" pos:column="16">downloadsize<pos:position pos:line="370" pos:column="28"/></name></expr>;<pos:position pos:line="370" pos:column="29"/></expr_stmt></block></then></if></elseif></if>

      <if pos:line="372" pos:column="7">if<condition pos:line="372" pos:column="9">(<expr><name><name pos:line="372" pos:column="10">data<pos:position pos:line="372" pos:column="14"/></name><operator pos:line="372" pos:column="14">-&gt;<pos:position pos:line="372" pos:column="19"/></operator><name pos:line="372" pos:column="16">set<pos:position pos:line="372" pos:column="19"/></name><operator pos:line="372" pos:column="19">.<pos:position pos:line="372" pos:column="20"/></operator><name pos:line="372" pos:column="20">ftp_use_port<pos:position pos:line="372" pos:column="32"/></name></name></expr>)<pos:position pos:line="372" pos:column="33"/></condition><then pos:line="372" pos:column="33"> <block pos:line="372" pos:column="34">{
        <expr_stmt><expr><name pos:line="373" pos:column="9">result<pos:position pos:line="373" pos:column="15"/></name> <operator pos:line="373" pos:column="16">=<pos:position pos:line="373" pos:column="17"/></operator> <call><name pos:line="373" pos:column="18">AllowServerConnect<pos:position pos:line="373" pos:column="36"/></name><argument_list pos:line="373" pos:column="36">(<argument><expr><name pos:line="373" pos:column="37">data<pos:position pos:line="373" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="373" pos:column="43">conn<pos:position pos:line="373" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="373" pos:column="49">conn<pos:position pos:line="373" pos:column="53"/></name><operator pos:line="373" pos:column="53">-&gt;<pos:position pos:line="373" pos:column="58"/></operator><name pos:line="373" pos:column="55">secondarysocket<pos:position pos:line="373" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="373" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="72"/></expr_stmt>
        <if pos:line="374" pos:column="9">if<condition pos:line="374" pos:column="11">( <expr><name pos:line="374" pos:column="13">result<pos:position pos:line="374" pos:column="19"/></name></expr> )<pos:position pos:line="374" pos:column="21"/></condition><then pos:line="374" pos:column="21">
          <block type="pseudo"><return pos:line="375" pos:column="11">return <expr><name pos:line="375" pos:column="18">result<pos:position pos:line="375" pos:column="24"/></name></expr>;<pos:position pos:line="375" pos:column="25"/></return></block></then></if>
      }<pos:position pos:line="376" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="378" pos:column="7">infof<pos:position pos:line="378" pos:column="12"/></name><argument_list pos:line="378" pos:column="12">(<argument><expr><name pos:line="378" pos:column="13">data<pos:position pos:line="378" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="378" pos:column="19">"Getting file with size: %d\n"<pos:position pos:line="378" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="378" pos:column="51">size<pos:position pos:line="378" pos:column="55"/></name></expr></argument>)<pos:position pos:line="378" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="378" pos:column="57"/></expr_stmt>

      <comment type="block" pos:line="380" pos:column="7">/* FTP download: */</comment>
      <expr_stmt><expr><name pos:line="381" pos:column="7">result<pos:position pos:line="381" pos:column="13"/></name><operator pos:line="381" pos:column="13">=<pos:position pos:line="381" pos:column="14"/></operator><call><name pos:line="381" pos:column="14">Curl_Transfer<pos:position pos:line="381" pos:column="27"/></name><argument_list pos:line="381" pos:column="27">(<argument><expr><name pos:line="381" pos:column="28">conn<pos:position pos:line="381" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="381" pos:column="34">conn<pos:position pos:line="381" pos:column="38"/></name><operator pos:line="381" pos:column="38">-&gt;<pos:position pos:line="381" pos:column="43"/></operator><name pos:line="381" pos:column="40">secondarysocket<pos:position pos:line="381" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="381" pos:column="57">size<pos:position pos:line="381" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="381" pos:column="63">FALSE<pos:position pos:line="381" pos:column="68"/></name></expr></argument>,
                           <argument><expr><name pos:line="382" pos:column="28">bytecountp<pos:position pos:line="382" pos:column="38"/></name></expr></argument>,
                           <argument><expr><operator pos:line="383" pos:column="28">-<pos:position pos:line="383" pos:column="29"/></operator><literal type="number" pos:line="383" pos:column="29">1<pos:position pos:line="383" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="383" pos:column="32">NULL<pos:position pos:line="383" pos:column="36"/></name></expr></argument>)<pos:position pos:line="383" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="38"/></expr_stmt> <comment type="block" pos:line="383" pos:column="39">/* no upload here */</comment>
      <if pos:line="384" pos:column="7">if<condition pos:line="384" pos:column="9">(<expr><name pos:line="384" pos:column="10">result<pos:position pos:line="384" pos:column="16"/></name></expr>)<pos:position pos:line="384" pos:column="17"/></condition><then pos:line="384" pos:column="17">
        <block type="pseudo"><return pos:line="385" pos:column="9">return <expr><name pos:line="385" pos:column="16">result<pos:position pos:line="385" pos:column="22"/></name></expr>;<pos:position pos:line="385" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="386" pos:column="6"/></block></then>
    <else pos:line="387" pos:column="5">else <block pos:line="387" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="388" pos:column="7">failf<pos:position pos:line="388" pos:column="12"/></name><argument_list pos:line="388" pos:column="12">(<argument><expr><name pos:line="388" pos:column="13">data<pos:position pos:line="388" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="388" pos:column="19">"%s"<pos:position pos:line="388" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="388" pos:column="25">buf<pos:position pos:line="388" pos:column="28"/></name><operator pos:line="388" pos:column="28">+<pos:position pos:line="388" pos:column="29"/></operator><literal type="number" pos:line="388" pos:column="29">4<pos:position pos:line="388" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="388" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="388" pos:column="32"/></expr_stmt>
      <return pos:line="389" pos:column="7">return <expr><name pos:line="389" pos:column="14">CURLE_FTP_COULDNT_RETR_FILE<pos:position pos:line="389" pos:column="41"/></name></expr>;<pos:position pos:line="389" pos:column="42"/></return>
    }<pos:position pos:line="390" pos:column="6"/></block></else></if>
	
  }<pos:position pos:line="392" pos:column="4"/></block></then></if></elseif></if>
  <comment type="block" pos:line="393" pos:column="3">/* end of transfer */</comment>

  <return pos:line="395" pos:column="3">return <expr><name pos:line="395" pos:column="10">CURLE_OK<pos:position pos:line="395" pos:column="18"/></name></expr>;<pos:position pos:line="395" pos:column="19"/></return>
}<pos:position pos:line="396" pos:column="2"/></block></function></unit>

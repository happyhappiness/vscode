<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1470_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_protocol_connect<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">connectdata<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">conn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">bool<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">protocol_done<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="6" pos:column="3">*<pos:position pos:line="6" pos:column="4"/></operator><name pos:line="6" pos:column="4">protocol_done<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">=<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">FALSE<pos:position pos:line="6" pos:column="25"/></name></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name><name pos:line="8" pos:column="6">conn<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">bits<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">.<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">tcpconnect<pos:position pos:line="8" pos:column="27"/></name><index pos:line="8" pos:column="27">[<expr><name pos:line="8" pos:column="28">FIRSTSOCKET<pos:position pos:line="8" pos:column="39"/></name></expr>]<pos:position pos:line="8" pos:column="40"/></index></name> <operator pos:line="8" pos:column="41">&amp;&amp;<pos:position pos:line="8" pos:column="51"/></operator> <name><name pos:line="8" pos:column="44">conn<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">-&gt;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="50">bits<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">.<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="55">protoconnstart<pos:position pos:line="8" pos:column="69"/></name></name></expr>)<pos:position pos:line="8" pos:column="70"/></condition><then pos:line="8" pos:column="70"> <block pos:line="8" pos:column="71">{
    <comment type="block" pos:line="9" pos:column="5">/* We already are connected, get back. This may happen when the connect
       worked fine in the first call, like when we connect to a local server
       or proxy. Note that we don't know if the protocol is actually done.

       Unless this protocol doesn't have any protocol-connect callback, as
       then we know we're done. */</comment>
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><operator pos:line="15" pos:column="8">!<pos:position pos:line="15" pos:column="9"/></operator><name><name pos:line="15" pos:column="9">conn<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">handler<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">connecting<pos:position pos:line="15" pos:column="34"/></name></name></expr>)<pos:position pos:line="15" pos:column="35"/></condition><then pos:line="15" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="16" pos:column="7">*<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">protocol_done<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">TRUE<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt></block></then></if>

    <return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">CURLE_OK<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><operator pos:line="21" pos:column="6">!<pos:position pos:line="21" pos:column="7"/></operator><name><name pos:line="21" pos:column="7">conn<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">bits<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">.<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">protoconnstart<pos:position pos:line="21" pos:column="32"/></name></name></expr>)<pos:position pos:line="21" pos:column="33"/></condition><then pos:line="21" pos:column="33"> <block pos:line="21" pos:column="34">{

    <expr_stmt><expr><name pos:line="23" pos:column="5">result<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">Curl_proxy_connect<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">conn<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="39">FIRSTSOCKET<pos:position pos:line="23" pos:column="50"/></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><name pos:line="24" pos:column="8">result<pos:position pos:line="24" pos:column="14"/></name></expr>)<pos:position pos:line="24" pos:column="15"/></condition><then pos:line="24" pos:column="15">
      <block type="pseudo"><return pos:line="25" pos:column="7">return <expr><name pos:line="25" pos:column="14">result<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></return></block></then></if>

    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><call><name pos:line="27" pos:column="8">CONNECT_FIRSTSOCKET_PROXY_SSL<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">()<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="40"/></condition><then pos:line="27" pos:column="40">
      <comment type="block" pos:line="28" pos:column="7">/* wait for HTTPS proxy SSL initialization to complete */</comment>
      <block type="pseudo"><return pos:line="29" pos:column="7">return <expr><name pos:line="29" pos:column="14">CURLE_OK<pos:position pos:line="29" pos:column="22"/></name></expr>;<pos:position pos:line="29" pos:column="23"/></return></block></then></if>

    <if pos:line="31" pos:column="5">if<condition pos:line="31" pos:column="7">(<expr><name><name pos:line="31" pos:column="8">conn<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">bits<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">.<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">tunnel_proxy<pos:position pos:line="31" pos:column="31"/></name></name> <operator pos:line="31" pos:column="32">&amp;&amp;<pos:position pos:line="31" pos:column="42"/></operator> <name><name pos:line="31" pos:column="35">conn<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">-&gt;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="41">bits<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">.<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="46">httpproxy<pos:position pos:line="31" pos:column="55"/></name></name> <operator pos:line="31" pos:column="56">&amp;&amp;<pos:position pos:line="31" pos:column="66"/></operator>
       <call><name pos:line="32" pos:column="8">Curl_connect_ongoing<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">conn<pos:position pos:line="32" pos:column="33"/></name></expr></argument>)<pos:position pos:line="32" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="35"/></condition><then pos:line="32" pos:column="35">
      <comment type="block" pos:line="33" pos:column="7">/* when using an HTTP tunnel proxy, await complete tunnel establishment
         before proceeding further. Return CURLE_OK so we'll be called again */</comment>
      <block type="pseudo"><return pos:line="35" pos:column="7">return <expr><name pos:line="35" pos:column="14">CURLE_OK<pos:position pos:line="35" pos:column="22"/></name></expr>;<pos:position pos:line="35" pos:column="23"/></return></block></then></if>

    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><name><name pos:line="37" pos:column="8">conn<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">handler<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">-&gt;<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="23">connect_it<pos:position pos:line="37" pos:column="33"/></name></name></expr>)<pos:position pos:line="37" pos:column="34"/></condition><then pos:line="37" pos:column="34"> <block pos:line="37" pos:column="35">{
      <comment type="block" pos:line="38" pos:column="7">/* is there a protocol-specific connect() procedure? */</comment>

      <comment type="block" pos:line="40" pos:column="7">/* Call the protocol-specific connect function */</comment>
      <expr_stmt><expr><name pos:line="41" pos:column="7">result<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name><name pos:line="41" pos:column="16">conn<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">handler<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">-&gt;<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="31">connect_it<pos:position pos:line="41" pos:column="41"/></name></name><argument_list pos:line="41" pos:column="41">(<argument><expr><name pos:line="41" pos:column="42">conn<pos:position pos:line="41" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="48">protocol_done<pos:position pos:line="41" pos:column="61"/></name></expr></argument>)<pos:position pos:line="41" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then>
    <else pos:line="43" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="44" pos:column="7">*<pos:position pos:line="44" pos:column="8"/></operator><name pos:line="44" pos:column="8">protocol_done<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <name pos:line="44" pos:column="24">TRUE<pos:position pos:line="44" pos:column="28"/></name></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="46" pos:column="5">/* it has started, possibly even completed but that knowledge isn't stored
       in this bit! */</comment>
    <if pos:line="48" pos:column="5">if<condition pos:line="48" pos:column="7">(<expr><operator pos:line="48" pos:column="8">!<pos:position pos:line="48" pos:column="9"/></operator><name pos:line="48" pos:column="9">result<pos:position pos:line="48" pos:column="15"/></name></expr>)<pos:position pos:line="48" pos:column="16"/></condition><then pos:line="48" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="49" pos:column="7">conn<pos:position pos:line="49" pos:column="11"/></name><operator pos:line="49" pos:column="11">-&gt;<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="13">bits<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">.<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">protoconnstart<pos:position pos:line="49" pos:column="32"/></name></name> <operator pos:line="49" pos:column="33">=<pos:position pos:line="49" pos:column="34"/></operator> <name pos:line="49" pos:column="35">TRUE<pos:position pos:line="49" pos:column="39"/></name></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt></block></then></if>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <return pos:line="52" pos:column="3">return <expr><name pos:line="52" pos:column="10">result<pos:position pos:line="52" pos:column="16"/></name></expr>;<pos:position pos:line="52" pos:column="17"/></return> <comment type="block" pos:line="52" pos:column="18">/* pass back status */</comment>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_310_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">curl_version<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">char<pos:position pos:line="3" pos:column="14"/></name></type> <name><name pos:line="3" pos:column="15">version<pos:position pos:line="3" pos:column="22"/></name><index pos:line="3" pos:column="22">[<expr><literal type="number" pos:line="3" pos:column="23">200<pos:position pos:line="3" pos:column="26"/></literal></expr>]<pos:position pos:line="3" pos:column="27"/></index></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ptr<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">long<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">num<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">strcpy<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><name pos:line="6" pos:column="10">version<pos:position pos:line="6" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="19">LIBCURL_NAME<pos:position pos:line="6" pos:column="31"/></name> <literal type="string" pos:line="6" pos:column="32">"/"<pos:position pos:line="6" pos:column="35"/></literal> <name pos:line="6" pos:column="36">LIBCURL_VERSION<pos:position pos:line="6" pos:column="51"/></name></expr></argument> )<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">ptr<pos:position pos:line="7" pos:column="6"/></name><operator pos:line="7" pos:column="6">=<pos:position pos:line="7" pos:column="7"/></operator><call><name pos:line="7" pos:column="7">strchr<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name pos:line="7" pos:column="14">version<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="23">'\0'<pos:position pos:line="7" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt>

<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">USE_SSLEAY<pos:position pos:line="9" pos:column="18"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">getssl_version<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">ptr<pos:position pos:line="10" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="23">&amp;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="24">num<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="11" pos:column="3">ptr<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">=<pos:position pos:line="11" pos:column="7"/></operator><call><name pos:line="11" pos:column="7">strchr<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">version<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="23">'\0'<pos:position pos:line="11" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><operator pos:line="13" pos:column="3">(<pos:position pos:line="13" pos:column="4"/></operator><name pos:line="13" pos:column="4">void<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">)<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">num<pos:position pos:line="13" pos:column="12"/></name></expr>;<pos:position pos:line="13" pos:column="13"/></expr_stmt> <comment type="block" pos:line="13" pos:column="14">/* no compiler warning please */</comment>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifdef<pos:position pos:line="16" pos:column="7"/></cpp:directive> <name pos:line="16" pos:column="8">KRB4<pos:position pos:line="16" pos:column="12"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">sprintf<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><name pos:line="17" pos:column="11">ptr<pos:position pos:line="17" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="16">" krb4"<pos:position pos:line="17" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">ptr<pos:position pos:line="18" pos:column="6"/></name> <operator pos:line="18" pos:column="7">+=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">strlen<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">ptr<pos:position pos:line="18" pos:column="20"/></name></expr></argument>)<pos:position pos:line="18" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifdef<pos:position pos:line="20" pos:column="7"/></cpp:directive> <name pos:line="20" pos:column="8">ENABLE_IPV6<pos:position pos:line="20" pos:column="19"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">sprintf<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><name pos:line="21" pos:column="11">ptr<pos:position pos:line="21" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="16">" ipv6"<pos:position pos:line="21" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">ptr<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">+=<pos:position pos:line="22" pos:column="9"/></operator> <call><name pos:line="22" pos:column="10">strlen<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">ptr<pos:position pos:line="22" pos:column="20"/></name></expr></argument>)<pos:position pos:line="22" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">HAVE_LIBZ<pos:position pos:line="24" pos:column="17"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">sprintf<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">ptr<pos:position pos:line="25" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="16">" zlib/%s"<pos:position pos:line="25" pos:column="26"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="28">zlibVersion<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">()<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name pos:line="26" pos:column="3">ptr<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">+=<pos:position pos:line="26" pos:column="9"/></operator> <call><name pos:line="26" pos:column="10">strlen<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><name pos:line="26" pos:column="17">ptr<pos:position pos:line="26" pos:column="20"/></name></expr></argument>)<pos:position pos:line="26" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="29" pos:column="3">return <expr><name pos:line="29" pos:column="10">version<pos:position pos:line="29" pos:column="17"/></name></expr>;<pos:position pos:line="29" pos:column="18"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

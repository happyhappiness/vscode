<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_372_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">getpass_r<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">prompt<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">buffer<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">size_t<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">buflen<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">i<pos:position pos:line="3" pos:column="11"/></name> <init pos:line="3" pos:column="12">= <expr><literal type="number" pos:line="3" pos:column="14">0<pos:position pos:line="3" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">printf<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><literal type="string" pos:line="5" pos:column="10">"%s"<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="16">prompt<pos:position pos:line="5" pos:column="22"/></name></expr></argument>)<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>
  <do pos:line="6" pos:column="3">do <block pos:line="6" pos:column="6">{
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">buffer<pos:position pos:line="7" pos:column="11"/></name><index pos:line="7" pos:column="11">[<expr><name pos:line="7" pos:column="12">i<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">++<pos:position pos:line="7" pos:column="15"/></operator></expr>]<pos:position pos:line="7" pos:column="16"/></index></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <call><name pos:line="7" pos:column="19">getch<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">()<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">buffer<pos:position pos:line="8" pos:column="15"/></name><index pos:line="8" pos:column="15">[<expr><name pos:line="8" pos:column="16">i<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-<pos:position pos:line="8" pos:column="18"/></operator><literal type="number" pos:line="8" pos:column="18">1<pos:position pos:line="8" pos:column="19"/></literal></expr>]<pos:position pos:line="8" pos:column="20"/></index></name> <operator pos:line="8" pos:column="21">==<pos:position pos:line="8" pos:column="23"/></operator> <literal type="char" pos:line="8" pos:column="24">'\b'<pos:position pos:line="8" pos:column="28"/></literal></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <block pos:line="8" pos:column="30">{
      <comment type="block" pos:line="9" pos:column="7">/* remove this letter and if this is not the first key,
         remove the previous one as well */</comment>
      <if pos:line="11" pos:column="7">if <condition pos:line="11" pos:column="10">(<expr><name pos:line="11" pos:column="11">i<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">&gt;<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="15">1<pos:position pos:line="11" pos:column="16"/></literal></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17"> <block pos:line="11" pos:column="18">{   
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">printf<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="string" pos:line="12" pos:column="16">"\b \b"<pos:position pos:line="12" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="13" pos:column="9">i<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <name pos:line="13" pos:column="13">i<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">-<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="17">2<pos:position pos:line="13" pos:column="18"/></literal></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
      }<pos:position pos:line="14" pos:column="8"/></block></then> <else pos:line="14" pos:column="9">else <block pos:line="14" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">RingTheBell<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">()<pos:position pos:line="15" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">i<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">i<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">-<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="17">1<pos:position pos:line="16" pos:column="18"/></literal></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
      }<pos:position pos:line="17" pos:column="8"/></block></else></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then> <elseif pos:line="18" pos:column="7">else <if pos:line="18" pos:column="12">if <condition pos:line="18" pos:column="15">(<expr><name><name pos:line="18" pos:column="16">buffer<pos:position pos:line="18" pos:column="22"/></name><index pos:line="18" pos:column="22">[<expr><name pos:line="18" pos:column="23">i<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">-<pos:position pos:line="18" pos:column="25"/></operator><literal type="number" pos:line="18" pos:column="25">1<pos:position pos:line="18" pos:column="26"/></literal></expr>]<pos:position pos:line="18" pos:column="27"/></index></name> <operator pos:line="18" pos:column="28">!=<pos:position pos:line="18" pos:column="30"/></operator> <literal type="number" pos:line="18" pos:column="31">13<pos:position pos:line="18" pos:column="33"/></literal></expr>)<pos:position pos:line="18" pos:column="34"/></condition><then pos:line="18" pos:column="34"> <block pos:line="18" pos:column="35">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">putchar<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><literal type="char" pos:line="19" pos:column="15">'*'<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="21" pos:column="4"/></block> while <condition pos:line="21" pos:column="11">(<expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name><name pos:line="21" pos:column="13">buffer<pos:position pos:line="21" pos:column="19"/></name><index pos:line="21" pos:column="19">[<expr><name pos:line="21" pos:column="20">i<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-<pos:position pos:line="21" pos:column="22"/></operator><literal type="number" pos:line="21" pos:column="22">1<pos:position pos:line="21" pos:column="23"/></literal></expr>]<pos:position pos:line="21" pos:column="24"/></index></name> <operator pos:line="21" pos:column="25">!=<pos:position pos:line="21" pos:column="27"/></operator> <literal type="number" pos:line="21" pos:column="28">13<pos:position pos:line="21" pos:column="30"/></literal><operator pos:line="21" pos:column="30">)<pos:position pos:line="21" pos:column="31"/></operator> <operator pos:line="21" pos:column="32">&amp;&amp;<pos:position pos:line="21" pos:column="42"/></operator> <operator pos:line="21" pos:column="35">(<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="36">i<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">&lt;<pos:position pos:line="21" pos:column="42"/></operator> <name pos:line="21" pos:column="40">buflen<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">)<pos:position pos:line="21" pos:column="47"/></operator></expr>)<pos:position pos:line="21" pos:column="48"/></condition>;<pos:position pos:line="21" pos:column="49"/></do>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">buffer<pos:position pos:line="22" pos:column="9"/></name><index pos:line="22" pos:column="9">[<expr><name pos:line="22" pos:column="10">i<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-<pos:position pos:line="22" pos:column="12"/></operator><literal type="number" pos:line="22" pos:column="12">1<pos:position pos:line="22" pos:column="13"/></literal></expr>]<pos:position pos:line="22" pos:column="14"/></index></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">printf<pos:position pos:line="23" pos:column="9"/></name><argument_list pos:line="23" pos:column="9">(<argument><expr><literal type="string" pos:line="23" pos:column="10">"\r\n"<pos:position pos:line="23" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="18"/></expr_stmt>
  <return pos:line="24" pos:column="3">return <expr><name pos:line="24" pos:column="10">buffer<pos:position pos:line="24" pos:column="16"/></name></expr>;<pos:position pos:line="24" pos:column="17"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

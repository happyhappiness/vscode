<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1661_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">get_pre_recved<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">num<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">buf<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">size_t<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">len<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">postponed_data<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier> <specifier pos:line="4" pos:column="27">const<pos:position pos:line="4" pos:column="32"/></specifier></type> <name pos:line="4" pos:column="33">psnd<pos:position pos:line="4" pos:column="37"/></name> <init pos:line="4" pos:column="38">= <expr><operator pos:line="4" pos:column="40">&amp;<pos:position pos:line="4" pos:column="45"/></operator><operator pos:line="4" pos:column="41">(<pos:position pos:line="4" pos:column="42"/></operator><name><name pos:line="4" pos:column="42">conn<pos:position pos:line="4" pos:column="46"/></name><operator pos:line="4" pos:column="46">-&gt;<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="48">postponed<pos:position pos:line="4" pos:column="57"/></name><index pos:line="4" pos:column="57">[<expr><name pos:line="4" pos:column="58">num<pos:position pos:line="4" pos:column="61"/></name></expr>]<pos:position pos:line="4" pos:column="62"/></index></name><operator pos:line="4" pos:column="62">)<pos:position pos:line="4" pos:column="63"/></operator></expr></init></decl>;<pos:position pos:line="4" pos:column="64"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">copysize<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><operator pos:line="6" pos:column="6">!<pos:position pos:line="6" pos:column="7"/></operator><name><name pos:line="6" pos:column="7">psnd<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">buffer<pos:position pos:line="6" pos:column="19"/></name></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">DEBUGASSERT<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><name><name pos:line="9" pos:column="15">psnd<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">allocated_size<pos:position pos:line="9" pos:column="35"/></name></name> <operator pos:line="9" pos:column="36">&gt;<pos:position pos:line="9" pos:column="40"/></operator> <literal type="number" pos:line="9" pos:column="38">0<pos:position pos:line="9" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">DEBUGASSERT<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name><name pos:line="10" pos:column="15">psnd<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">recv_size<pos:position pos:line="10" pos:column="30"/></name></name> <operator pos:line="10" pos:column="31">&lt;=<pos:position pos:line="10" pos:column="36"/></operator> <name><name pos:line="10" pos:column="34">psnd<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">allocated_size<pos:position pos:line="10" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">DEBUGASSERT<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name><name pos:line="11" pos:column="15">psnd<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">recv_processed<pos:position pos:line="11" pos:column="35"/></name></name> <operator pos:line="11" pos:column="36">&lt;=<pos:position pos:line="11" pos:column="41"/></operator> <name><name pos:line="11" pos:column="39">psnd<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">recv_size<pos:position pos:line="11" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>
  <comment type="block" pos:line="12" pos:column="3">/* Check and process data that already received and storied in internal
     intermediate buffer */</comment>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name><name pos:line="14" pos:column="6">psnd<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">recv_size<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">&gt;<pos:position pos:line="14" pos:column="26"/></operator> <name><name pos:line="14" pos:column="24">psnd<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">recv_processed<pos:position pos:line="14" pos:column="44"/></name></name></expr>)<pos:position pos:line="14" pos:column="45"/></condition><then pos:line="14" pos:column="45"> <block pos:line="14" pos:column="46">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">DEBUGASSERT<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name><name pos:line="15" pos:column="17">psnd<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">bindsock<pos:position pos:line="15" pos:column="31"/></name></name> <operator pos:line="15" pos:column="32">==<pos:position pos:line="15" pos:column="34"/></operator> <name><name pos:line="15" pos:column="35">conn<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">sock<pos:position pos:line="15" pos:column="45"/></name><index pos:line="15" pos:column="45">[<expr><name pos:line="15" pos:column="46">num<pos:position pos:line="15" pos:column="49"/></name></expr>]<pos:position pos:line="15" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">copysize<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">CURLMIN<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">len<pos:position pos:line="16" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="29">psnd<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">recv_size<pos:position pos:line="16" pos:column="44"/></name></name> <operator pos:line="16" pos:column="45">-<pos:position pos:line="16" pos:column="46"/></operator> <name><name pos:line="16" pos:column="47">psnd<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">-&gt;<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="53">recv_processed<pos:position pos:line="16" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">memcpy<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name pos:line="17" pos:column="12">buf<pos:position pos:line="17" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="17">psnd<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">buffer<pos:position pos:line="17" pos:column="29"/></name></name> <operator pos:line="17" pos:column="30">+<pos:position pos:line="17" pos:column="31"/></operator> <name><name pos:line="17" pos:column="32">psnd<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">recv_processed<pos:position pos:line="17" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">copysize<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">psnd<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">-&gt;<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="11">recv_processed<pos:position pos:line="18" pos:column="25"/></name></name> <operator pos:line="18" pos:column="26">+=<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">copysize<pos:position pos:line="18" pos:column="37"/></name></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then>
  <else pos:line="20" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="5">copysize<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt></block></else></if> <comment type="block" pos:line="21" pos:column="19">/* buffer was allocated, but nothing was received */</comment>

  <comment type="block" pos:line="23" pos:column="3">/* Free intermediate buffer if it has no unprocessed data */</comment>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><name><name pos:line="24" pos:column="6">psnd<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">recv_processed<pos:position pos:line="24" pos:column="26"/></name></name> <operator pos:line="24" pos:column="27">==<pos:position pos:line="24" pos:column="29"/></operator> <name><name pos:line="24" pos:column="30">psnd<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">recv_size<pos:position pos:line="24" pos:column="45"/></name></name></expr>)<pos:position pos:line="24" pos:column="46"/></condition><then pos:line="24" pos:column="46"> <block pos:line="24" pos:column="47">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">free<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">(<argument><expr><name><name pos:line="25" pos:column="10">psnd<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">buffer<pos:position pos:line="25" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">psnd<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">buffer<pos:position pos:line="26" pos:column="17"/></name></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="20">NULL<pos:position pos:line="26" pos:column="24"/></name></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">psnd<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">-&gt;<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="11">allocated_size<pos:position pos:line="27" pos:column="25"/></name></name> <operator pos:line="27" pos:column="26">=<pos:position pos:line="27" pos:column="27"/></operator> <literal type="number" pos:line="27" pos:column="28">0<pos:position pos:line="27" pos:column="29"/></literal></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">psnd<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">-&gt;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="11">recv_size<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <literal type="number" pos:line="28" pos:column="23">0<pos:position pos:line="28" pos:column="24"/></literal></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">psnd<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">recv_processed<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <literal type="number" pos:line="29" pos:column="28">0<pos:position pos:line="29" pos:column="29"/></literal></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
<cpp:ifdef pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">ifdef<pos:position pos:line="30" pos:column="7"/></cpp:directive> <name pos:line="30" pos:column="8">DEBUGBUILD<pos:position pos:line="30" pos:column="18"/></name></cpp:ifdef>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">psnd<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">bindsock<pos:position pos:line="31" pos:column="19"/></name></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">CURL_SOCKET_BAD<pos:position pos:line="31" pos:column="37"/></name></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="32" pos:column="8">/* DEBUGBUILD */</comment>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>
  <return pos:line="34" pos:column="3">return <expr><operator pos:line="34" pos:column="10">(<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="11">ssize_t<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">)<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="19">copysize<pos:position pos:line="34" pos:column="27"/></name></expr>;<pos:position pos:line="34" pos:column="28"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

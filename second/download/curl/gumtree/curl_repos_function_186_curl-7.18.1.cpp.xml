<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_186_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">CURLE_OK<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">hd_src<pos:position pos:line="5" pos:column="15"/></name></decl> ;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">hd<pos:position pos:line="6" pos:column="9"/></name></decl> ;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">struct_stat<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">file_info<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">error<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">libtest_arg2<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21"> <block pos:line="10" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">fprintf<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">stderr<pos:position pos:line="11" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="21">"Usage: &lt;url&gt; &lt;file-to-upload&gt;\n"<pos:position pos:line="11" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="15" pos:column="3">/* get the file size of the local file */</comment>
  <expr_stmt><expr><name pos:line="16" pos:column="3">hd<pos:position pos:line="16" pos:column="5"/></name> <operator pos:line="16" pos:column="6">=<pos:position pos:line="16" pos:column="7"/></operator> <call><name pos:line="16" pos:column="8">stat<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">libtest_arg2<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="27">&amp;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="28">file_info<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name pos:line="17" pos:column="6">hd<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">==<pos:position pos:line="17" pos:column="11"/></operator> <operator pos:line="17" pos:column="12">-<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr>)<pos:position pos:line="17" pos:column="15"/></condition><then pos:line="17" pos:column="15"> <block pos:line="17" pos:column="16">{
    <comment type="block" pos:line="18" pos:column="5">/* can't open file, bail out */</comment>
    <expr_stmt><expr><name pos:line="19" pos:column="5">error<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <name pos:line="19" pos:column="13">ERRNO<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">fprintf<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">stderr<pos:position pos:line="20" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="21">"stat() failed with error: %d %s\n"<pos:position pos:line="20" pos:column="56"/></literal></expr></argument>,
            <argument><expr><name pos:line="21" pos:column="13">error<pos:position pos:line="21" pos:column="18"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="20">strerror<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">error<pos:position pos:line="21" pos:column="34"/></name></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">fprintf<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">stderr<pos:position pos:line="22" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="21">"WARNING: cannot open file %s\n"<pos:position pos:line="22" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="55">libtest_arg2<pos:position pos:line="22" pos:column="67"/></name></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="69"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">-<pos:position pos:line="23" pos:column="13"/></operator><literal type="number" pos:line="23" pos:column="13">1<pos:position pos:line="23" pos:column="14"/></literal></expr>;<pos:position pos:line="23" pos:column="15"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><operator pos:line="26" pos:column="6">!<pos:position pos:line="26" pos:column="7"/></operator> <name><name pos:line="26" pos:column="8">file_info<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">.<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">st_size<pos:position pos:line="26" pos:column="25"/></name></name></expr>)<pos:position pos:line="26" pos:column="26"/></condition><then pos:line="26" pos:column="26"> <block pos:line="26" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">fprintf<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">stderr<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="21">"WARNING: file %s has no size!\n"<pos:position pos:line="27" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">libtest_arg2<pos:position pos:line="27" pos:column="68"/></name></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">-<pos:position pos:line="28" pos:column="13"/></operator><literal type="number" pos:line="28" pos:column="13">4<pos:position pos:line="28" pos:column="14"/></literal></expr>;<pos:position pos:line="28" pos:column="15"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* get a FILE * of the same file, could also be made with
     fdopen() from the previous descriptor, but hey this is just
     an example! */</comment>
  <expr_stmt><expr><name pos:line="34" pos:column="3">hd_src<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <call><name pos:line="34" pos:column="12">fopen<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">libtest_arg2<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="32">"rb"<pos:position pos:line="34" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><name pos:line="35" pos:column="6">NULL<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">==<pos:position pos:line="35" pos:column="13"/></operator> <name pos:line="35" pos:column="14">hd_src<pos:position pos:line="35" pos:column="20"/></name></expr>)<pos:position pos:line="35" pos:column="21"/></condition><then pos:line="35" pos:column="21"> <block pos:line="35" pos:column="22">{
    <expr_stmt><expr><name pos:line="36" pos:column="5">error<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <name pos:line="36" pos:column="13">ERRNO<pos:position pos:line="36" pos:column="18"/></name></expr>;<pos:position pos:line="36" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">fprintf<pos:position pos:line="37" pos:column="12"/></name><argument_list pos:line="37" pos:column="12">(<argument><expr><name pos:line="37" pos:column="13">stderr<pos:position pos:line="37" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="21">"fopen() failed with error: %d %s\n"<pos:position pos:line="37" pos:column="57"/></literal></expr></argument>,
            <argument><expr><name pos:line="38" pos:column="13">error<pos:position pos:line="38" pos:column="18"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="20">strerror<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">error<pos:position pos:line="38" pos:column="34"/></name></expr></argument>)<pos:position pos:line="38" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">fprintf<pos:position pos:line="39" pos:column="12"/></name><argument_list pos:line="39" pos:column="12">(<argument><expr><name pos:line="39" pos:column="13">stderr<pos:position pos:line="39" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="21">"Error opening file: %s\n"<pos:position pos:line="39" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="49">libtest_arg2<pos:position pos:line="39" pos:column="61"/></name></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="63"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><operator pos:line="40" pos:column="12">-<pos:position pos:line="40" pos:column="13"/></operator><literal type="number" pos:line="40" pos:column="13">2<pos:position pos:line="40" pos:column="14"/></literal></expr>;<pos:position pos:line="40" pos:column="15"/></return> <comment type="block" pos:line="40" pos:column="16">/* if this happens things are major weird */</comment>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><call><name pos:line="43" pos:column="7">curl_global_init<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">CURL_GLOBAL_ALL<pos:position pos:line="43" pos:column="39"/></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call> <operator pos:line="43" pos:column="41">!=<pos:position pos:line="43" pos:column="43"/></operator> <name pos:line="43" pos:column="44">CURLE_OK<pos:position pos:line="43" pos:column="52"/></name></expr>)<pos:position pos:line="43" pos:column="53"/></condition><then pos:line="43" pos:column="53"> <block pos:line="43" pos:column="54">{
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">fprintf<pos:position pos:line="44" pos:column="12"/></name><argument_list pos:line="44" pos:column="12">(<argument><expr><name pos:line="44" pos:column="13">stderr<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="21">"curl_global_init() failed\n"<pos:position pos:line="44" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">fclose<pos:position pos:line="45" pos:column="11"/></name><argument_list pos:line="45" pos:column="11">(<argument><expr><name pos:line="45" pos:column="12">hd_src<pos:position pos:line="45" pos:column="18"/></name></expr></argument>)<pos:position pos:line="45" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="20"/></expr_stmt>
    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="46" pos:column="30"/></name></expr>;<pos:position pos:line="46" pos:column="31"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="49" pos:column="3">/* get a curl handle */</comment>
  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><operator pos:line="50" pos:column="7">(<pos:position pos:line="50" pos:column="8"/></operator><name pos:line="50" pos:column="8">curl<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <call><name pos:line="50" pos:column="15">curl_easy_init<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">()<pos:position pos:line="50" pos:column="31"/></argument_list></call><operator pos:line="50" pos:column="31">)<pos:position pos:line="50" pos:column="32"/></operator> <operator pos:line="50" pos:column="33">==<pos:position pos:line="50" pos:column="35"/></operator> <name pos:line="50" pos:column="36">NULL<pos:position pos:line="50" pos:column="40"/></name></expr>)<pos:position pos:line="50" pos:column="41"/></condition><then pos:line="50" pos:column="41"> <block pos:line="50" pos:column="42">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">fprintf<pos:position pos:line="51" pos:column="12"/></name><argument_list pos:line="51" pos:column="12">(<argument><expr><name pos:line="51" pos:column="13">stderr<pos:position pos:line="51" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="21">"curl_easy_init() failed\n"<pos:position pos:line="51" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">curl_global_cleanup<pos:position pos:line="52" pos:column="24"/></name><argument_list pos:line="52" pos:column="24">()<pos:position pos:line="52" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">fclose<pos:position pos:line="53" pos:column="11"/></name><argument_list pos:line="53" pos:column="11">(<argument><expr><name pos:line="53" pos:column="12">hd_src<pos:position pos:line="53" pos:column="18"/></name></expr></argument>)<pos:position pos:line="53" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="20"/></expr_stmt>
    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="54" pos:column="30"/></name></expr>;<pos:position pos:line="54" pos:column="31"/></return>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="57" pos:column="3">/* enable uploading */</comment>
  <expr_stmt><expr><call><name pos:line="58" pos:column="3">curl_easy_setopt<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><name pos:line="58" pos:column="20">curl<pos:position pos:line="58" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="26">CURLOPT_UPLOAD<pos:position pos:line="58" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="42">TRUE<pos:position pos:line="58" pos:column="46"/></name></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr> ;<pos:position pos:line="58" pos:column="49"/></expr_stmt>

  <comment type="block" pos:line="60" pos:column="3">/* enable verbose */</comment>
  <expr_stmt><expr><call><name pos:line="61" pos:column="3">curl_easy_setopt<pos:position pos:line="61" pos:column="19"/></name><argument_list pos:line="61" pos:column="19">(<argument><expr><name pos:line="61" pos:column="20">curl<pos:position pos:line="61" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="26">CURLOPT_VERBOSE<pos:position pos:line="61" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="43">TRUE<pos:position pos:line="61" pos:column="47"/></name></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call></expr> ;<pos:position pos:line="61" pos:column="50"/></expr_stmt>

  <comment type="block" pos:line="63" pos:column="3">/* specify target */</comment>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">curl_easy_setopt<pos:position pos:line="64" pos:column="19"/></name><argument_list pos:line="64" pos:column="19">(<argument><expr><name pos:line="64" pos:column="20">curl<pos:position pos:line="64" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="64" pos:column="25">CURLOPT_URL<pos:position pos:line="64" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="38">URL<pos:position pos:line="64" pos:column="41"/></name></expr></argument>)<pos:position pos:line="64" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="43"/></expr_stmt>

  <comment type="block" pos:line="66" pos:column="3">/* now specify which file to upload */</comment>
  <expr_stmt><expr><call><name pos:line="67" pos:column="3">curl_easy_setopt<pos:position pos:line="67" pos:column="19"/></name><argument_list pos:line="67" pos:column="19">(<argument><expr><name pos:line="67" pos:column="20">curl<pos:position pos:line="67" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="26">CURLOPT_INFILE<pos:position pos:line="67" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="42">hd_src<pos:position pos:line="67" pos:column="48"/></name></expr></argument>)<pos:position pos:line="67" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="50"/></expr_stmt>

  <comment type="block" pos:line="69" pos:column="3">/* Now run off and do what you've been told! */</comment>
  <expr_stmt><expr><name pos:line="70" pos:column="3">res<pos:position pos:line="70" pos:column="6"/></name> <operator pos:line="70" pos:column="7">=<pos:position pos:line="70" pos:column="8"/></operator> <call><name pos:line="70" pos:column="9">curl_easy_perform<pos:position pos:line="70" pos:column="26"/></name><argument_list pos:line="70" pos:column="26">(<argument><expr><name pos:line="70" pos:column="27">curl<pos:position pos:line="70" pos:column="31"/></name></expr></argument>)<pos:position pos:line="70" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="33"/></expr_stmt>

  <comment type="block" pos:line="72" pos:column="3">/* and now upload the exact same again, but without rewinding so it already
     is at end of file */</comment>
  <expr_stmt><expr><name pos:line="74" pos:column="3">res<pos:position pos:line="74" pos:column="6"/></name> <operator pos:line="74" pos:column="7">=<pos:position pos:line="74" pos:column="8"/></operator> <call><name pos:line="74" pos:column="9">curl_easy_perform<pos:position pos:line="74" pos:column="26"/></name><argument_list pos:line="74" pos:column="26">(<argument><expr><name pos:line="74" pos:column="27">curl<pos:position pos:line="74" pos:column="31"/></name></expr></argument>)<pos:position pos:line="74" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="33"/></expr_stmt>

  <comment type="block" pos:line="76" pos:column="3">/* close the local file */</comment>
  <expr_stmt><expr><call><name pos:line="77" pos:column="3">fclose<pos:position pos:line="77" pos:column="9"/></name><argument_list pos:line="77" pos:column="9">(<argument><expr><name pos:line="77" pos:column="10">hd_src<pos:position pos:line="77" pos:column="16"/></name></expr></argument>)<pos:position pos:line="77" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="79" pos:column="3">curl_easy_cleanup<pos:position pos:line="79" pos:column="20"/></name><argument_list pos:line="79" pos:column="20">(<argument><expr><name pos:line="79" pos:column="21">curl<pos:position pos:line="79" pos:column="25"/></name></expr></argument>)<pos:position pos:line="79" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="80" pos:column="3">curl_global_cleanup<pos:position pos:line="80" pos:column="22"/></name><argument_list pos:line="80" pos:column="22">()<pos:position pos:line="80" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="25"/></expr_stmt>

  <return pos:line="82" pos:column="3">return <expr><name pos:line="82" pos:column="10">res<pos:position pos:line="82" pos:column="13"/></name></expr>;<pos:position pos:line="82" pos:column="14"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

"      ftp://ftp.numericals.com/file[1-100].txt\n"
"      ftp://ftp.numericals.com/file[001-100].txt    (with leading\n"
"     zeros)\n"
"      ftp://ftp.letters.com/file[a-z].txt\n"
"\n"
"     It is possible to specify up to 9 sets or series for a  URL,\n"
);
 puts(
"     but no nesting is supported at the moment:\n"
"\n"
"      http://www.any.org/archive[1996-1999]/vol­\n"
"     ume[1-4]part{a,b,c,index}.html\n"
"\n"
"     Starting with curl 7.6, you can specify any amount  of  URLs\n"
"     on  the  command  line. They will be fetched in a sequential\n"
"     manner in the specified order.\n"
"\n"
"     Starting with curl 7.7, curl will attempt to re-use  connec­\n"
"     tions  for  multiple  file  transfers,  so that getting many\n"
);
 puts(
"     files from  the  same  server  will  not  do  multiple  con­\n"
"     nects/handshakes.  This  improves  speed.  Of course this is\n"
"     only done on files specified on a single  command  line  and\n"
"     cannot be used between separate curl invokes.\n"
"OPTIONS\n"
"     -a/--append\n"
"          (FTP) When used in a ftp upload, this will tell curl to\n"
"          append to the target file instead of overwriting it. If\n"
"          the file doesn't exist, it will be created.\n"
"\n"
);
 puts(
"          If  this option is used twice, the second one will dis­\n"
"          able append mode again.\n"
"\n"
"     -A/--user-agent <agent string>\n"
"          (HTTP) Specify the User-Agent string  to  send  to  the\n"
"          HTTP  server.  Some badly done CGIs fail if its not set\n"
"          to \"Mozilla/4.0\".  To encode blanks in the string, sur­\n"
"          round  the  string  with  single quote marks.  This can\n"
"          also be set with the -H/--header flag of course.\n"
"\n"
);
 puts(
"          If this option is used more than  once,  the  last  one\n"
"          will be the one to be used.\n"
"\n"
"     -b/--cookie <name=data>\n"
"          (HTTP) Pass the data to the HTTP server as a cookie. It\n"
"          is supposedly the data  previously  received  from  the\n"
"          server  in a \"Set-Cookie:\" line.  The data should be in\n"
"          the format \"NAME1=VALUE1; NAME2=VALUE2\".\n"
"\n"
"          If no '=' letter is used in the line, it is treated  as\n"
);
 puts(
"          a  filename  to  use  to  read previously stored cookie\n"
"          lines from, which should be used  in  this  session  if\n"
"          they  match.  Using  this  method  also  activates  the\n"
"          \"cookie parser\" which will make  curl  record  incoming\n"
"          cookies too, which may be handy if you're using this in\n"
"          combination with the  -L/--location  option.  The  file\n"
"          format of the file to read cookies from should be plain\n"
);
 puts(
"          HTTP headers or the netscape cookie file format.\n"
"\n"
"          NOTE that the file specified with -b/--cookie  is  only\n"
"          used  as  input. No cookies will be stored in the file.\n"
"          To store cookies, save the HTTP headers to a file using\n"
"          -D/--dump-header!\n"
"\n"
"          If  this  option  is  used more than once, the last one\n"
"          will be the one to be used.\n"
"\n"
"     -B/--use-ascii\n"
"          Use ASCII transfer when getting an  FTP  file  or  LDAP\n"
);
 puts(
"          info.  For  FTP,  this can also be enforced by using an\n"
"          URL that ends with \";type=A\". This option  causes  data\n"
"          sent to stdout to be in text mode for win32 systems.\n"
"\n"
"          If  this option is used twice, the second one will dis­\n"
"          able ASCII usage.\n"
"     --connect-timeout <seconds>\n"
"          Maximum time in seconds that you allow  the  connection\n"
"          to the server to take.  This only limits the connection\n"
);
 puts(
"          phase, once curl has connected this  option  is  of  no\n"
"          more  use.  This  option doesn't work in win32 systems.\n"
"          See also the --max-time option.\n"
"\n"
"          If this option is used serveral  times,  the  last  one\n"
"          will be used.\n"
"\n"
"     -c/--continue\n"
"          Deprecated. Use '-C -' instead.  Continue/Resume a pre­\n"
"          vious file transfer. This instructs  curl  to  continue\n"
"          appending  data  on  the  file  where it was previously\n"
);
 puts(
"          left, possibly because of a broken  connection  to  the\n"
"          server.  There  must be a named physical file to append\n"
"          to for this to work.  Note: Upload resume  is  depening\n"
"          on  a  command named SIZE not always present in all ftp\n"
"          servers! Upload resume is for FTP only.  HTTP resume is\n"
"          only possible with HTTP/1.1 or later servers.\n"
"\n"
"     -C/--continue-at <offset>\n"
"          Continue/Resume  a  previous file transfer at the given\n"
);
 puts(
"          offset. The given offset is the exact number  of  bytes\n"
"          that  will be skipped counted from the beginning of the\n"
"          source file before it is transfered to the destination.\n"
"          If  used with uploads, the ftp server command SIZE will\n"
"          not be used by curl. Upload resume  is  for  FTP  only.\n"
"          HTTP  resume  is  only  possible with HTTP/1.1 or later\n"
"          servers.\n"
"\n"
"          If this option is used serveral  times,  the  last  one\n"
);
 puts(
"          will be used.\n"
"\n"
"     -d/--data <data>\n"
"          (HTTP)  Sends  the  specified data in a POST request to\n"
"          the HTTP server, in a way that can emulate as if a user\n"
"          has  filled  in a HTML form and pressed the submit but­\n"
"          ton. Note that the data is sent  exactly  as  specified\n"
"          with  no  extra processing (with all newlines cut off).\n"
"          The data is expected to  be  \"url-encoded\".  This  will\n"
);
 puts(
"          cause  curl  to  pass  the data to the server using the\n"
"          content-type application/x-www-form-urlencoded. Compare\n"
"          to -F. If more than one -d/--data option is used on the\n"
"          same command line, the data pieces  specified  will  be\n"
"          merged together with a separating &-letter. Thus, using\n"
"          '-d name=daniel -d skill=lousy' would generate  a  post\n"
"          chunk that looks like\n"
"\n"
"          If you start the data with the letter @, the rest\n"
);
 puts(
"          should be a file name to read the data from, or - if\n"
"          you want curl to read the data from stdin.  The\n"
"          contents of the file must already be url-encoded. Mul­\n"
"          tiple files can also be specified.\n"
"\n"
"          To post data purely binary, you should instead use the\n"
"          --data-binary option.\n"
"\n"
"          -d/--data is the same as --data-ascii.\n"
"\n"
"          If this option is used serveral times, the ones follow­\n"
"          ing the first will append data.\n"
"\n"
);
 puts(
"     --data-ascii <data>\n"
"          (HTTP) This is an alias for the -d/--data option.\n"
"\n"
"          If this option is used serveral times, the ones follow­\n"
"          ing the first will append data.\n"
"\n"
"     --data-binary <data>\n"
"          (HTTP) This posts data in a similar manner as --data-\n"
"          ascii does, although when using this option the entire\n"
"          context of the posted data is kept as-is. If you want\n"
"          to post a binary file without the strip-newlines fea­\n"
);
 puts(
"          ture of the --data-ascii option, this is for you.\n"
"\n"
"          If this option is used serveral times, the last one\n"
"          will be used.\n"
"\n"
"          If this option is used serveral times, the ones follow­\n"

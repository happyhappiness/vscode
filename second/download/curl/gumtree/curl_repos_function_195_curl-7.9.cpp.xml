<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_195_curl-7.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_ftp_done<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">connectdata<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">conn<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SessionHandle<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name><name pos:line="3" pos:column="32">conn<pos:position pos:line="3" pos:column="36"/></name><operator pos:line="3" pos:column="36">-&gt;<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="38">data<pos:position pos:line="3" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">FTP<pos:position pos:line="4" pos:column="13"/></name></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">ftp<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name><name pos:line="4" pos:column="21">conn<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">proto<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">.<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">ftp<pos:position pos:line="4" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ssize_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">nread<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">buf<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name><name pos:line="6" pos:column="15">data<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">state<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">.<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">buffer<pos:position pos:line="6" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt> <comment type="block" pos:line="6" pos:column="35">/* this is our buffer */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">ftpcode<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name><name pos:line="9" pos:column="6">data<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">set<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">upload<pos:position pos:line="9" pos:column="22"/></name></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><operator pos:line="10" pos:column="8">(<pos:position pos:line="10" pos:column="9"/></operator><operator pos:line="10" pos:column="9">-<pos:position pos:line="10" pos:column="10"/></operator><literal type="number" pos:line="10" pos:column="10">1<pos:position pos:line="10" pos:column="11"/></literal> <operator pos:line="10" pos:column="12">!=<pos:position pos:line="10" pos:column="14"/></operator> <name><name pos:line="10" pos:column="15">data<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">set<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">infilesize<pos:position pos:line="10" pos:column="35"/></name></name><operator pos:line="10" pos:column="35">)<pos:position pos:line="10" pos:column="36"/></operator> <operator pos:line="10" pos:column="37">&amp;&amp;<pos:position pos:line="10" pos:column="47"/></operator> <operator pos:line="10" pos:column="40">(<pos:position pos:line="10" pos:column="41"/></operator><name><name pos:line="10" pos:column="41">data<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">-&gt;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="47">set<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">.<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="51">infilesize<pos:position pos:line="10" pos:column="61"/></name></name> <operator pos:line="10" pos:column="62">!=<pos:position pos:line="10" pos:column="64"/></operator> <operator pos:line="10" pos:column="65">*<pos:position pos:line="10" pos:column="66"/></operator><name><name pos:line="10" pos:column="66">ftp<pos:position pos:line="10" pos:column="69"/></name><operator pos:line="10" pos:column="69">-&gt;<pos:position pos:line="10" pos:column="74"/></operator><name pos:line="10" pos:column="71">bytecountp<pos:position pos:line="10" pos:column="81"/></name></name><operator pos:line="10" pos:column="81">)<pos:position pos:line="10" pos:column="82"/></operator></expr>)<pos:position pos:line="10" pos:column="83"/></condition><then pos:line="10" pos:column="83"> <block pos:line="10" pos:column="84">{
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">failf<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">data<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"Wrote only partial file (%d out of %d bytes)"<pos:position pos:line="11" pos:column="65"/></literal></expr></argument>,
            <argument><expr><operator pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></operator><name><name pos:line="12" pos:column="14">ftp<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">bytecountp<pos:position pos:line="12" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="31">data<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">set<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">.<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="41">infilesize<pos:position pos:line="12" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
      <return pos:line="13" pos:column="7">return <expr><name pos:line="13" pos:column="14">CURLE_PARTIAL_FILE<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
  }<pos:position pos:line="15" pos:column="4"/></block></then>
  <else pos:line="16" pos:column="3">else <block pos:line="16" pos:column="8">{
    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><operator pos:line="17" pos:column="8">(<pos:position pos:line="17" pos:column="9"/></operator><operator pos:line="17" pos:column="9">-<pos:position pos:line="17" pos:column="10"/></operator><literal type="number" pos:line="17" pos:column="10">1<pos:position pos:line="17" pos:column="11"/></literal> <operator pos:line="17" pos:column="12">!=<pos:position pos:line="17" pos:column="14"/></operator> <name><name pos:line="17" pos:column="15">conn<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">size<pos:position pos:line="17" pos:column="25"/></name></name><operator pos:line="17" pos:column="25">)<pos:position pos:line="17" pos:column="26"/></operator> <operator pos:line="17" pos:column="27">&amp;&amp;<pos:position pos:line="17" pos:column="37"/></operator> <operator pos:line="17" pos:column="30">(<pos:position pos:line="17" pos:column="31"/></operator><name><name pos:line="17" pos:column="31">conn<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">size<pos:position pos:line="17" pos:column="41"/></name></name> <operator pos:line="17" pos:column="42">!=<pos:position pos:line="17" pos:column="44"/></operator> <operator pos:line="17" pos:column="45">*<pos:position pos:line="17" pos:column="46"/></operator><name><name pos:line="17" pos:column="46">ftp<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">-&gt;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="51">bytecountp<pos:position pos:line="17" pos:column="61"/></name></name><operator pos:line="17" pos:column="61">)<pos:position pos:line="17" pos:column="62"/></operator> <operator pos:line="17" pos:column="63">&amp;&amp;<pos:position pos:line="17" pos:column="73"/></operator>
       <operator pos:line="18" pos:column="8">(<pos:position pos:line="18" pos:column="9"/></operator><name><name pos:line="18" pos:column="9">conn<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">maxdownload<pos:position pos:line="18" pos:column="26"/></name></name> <operator pos:line="18" pos:column="27">!=<pos:position pos:line="18" pos:column="29"/></operator> <operator pos:line="18" pos:column="30">*<pos:position pos:line="18" pos:column="31"/></operator><name><name pos:line="18" pos:column="31">ftp<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">-&gt;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="36">bytecountp<pos:position pos:line="18" pos:column="46"/></name></name><operator pos:line="18" pos:column="46">)<pos:position pos:line="18" pos:column="47"/></operator></expr>)<pos:position pos:line="18" pos:column="48"/></condition><then pos:line="18" pos:column="48"> <block pos:line="18" pos:column="49">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">failf<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">data<pos:position pos:line="19" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="19">"Received only partial file: %d bytes"<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="59">*<pos:position pos:line="19" pos:column="60"/></operator><name><name pos:line="19" pos:column="60">ftp<pos:position pos:line="19" pos:column="63"/></name><operator pos:line="19" pos:column="63">-&gt;<pos:position pos:line="19" pos:column="68"/></operator><name pos:line="19" pos:column="65">bytecountp<pos:position pos:line="19" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="77"/></expr_stmt>
      <return pos:line="20" pos:column="7">return <expr><name pos:line="20" pos:column="14">CURLE_PARTIAL_FILE<pos:position pos:line="20" pos:column="32"/></name></expr>;<pos:position pos:line="20" pos:column="33"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then>
    <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if<condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name><name pos:line="22" pos:column="14">conn<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">bits<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">.<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">resume_done<pos:position pos:line="22" pos:column="36"/></name></name> <operator pos:line="22" pos:column="37">&amp;&amp;<pos:position pos:line="22" pos:column="47"/></operator>
            <operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name><name pos:line="23" pos:column="14">data<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">set<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">.<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">no_body<pos:position pos:line="23" pos:column="31"/></name></name> <operator pos:line="23" pos:column="32">&amp;&amp;<pos:position pos:line="23" pos:column="42"/></operator>
            <operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal> <operator pos:line="24" pos:column="16">==<pos:position pos:line="24" pos:column="18"/></operator> <operator pos:line="24" pos:column="19">*<pos:position pos:line="24" pos:column="20"/></operator><name><name pos:line="24" pos:column="20">ftp<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">-&gt;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="25">bytecountp<pos:position pos:line="24" pos:column="35"/></name></name><operator pos:line="24" pos:column="35">)<pos:position pos:line="24" pos:column="36"/></operator></expr>)<pos:position pos:line="24" pos:column="37"/></condition><then pos:line="24" pos:column="37"> <block pos:line="24" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">failf<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument><expr><name pos:line="25" pos:column="13">data<pos:position pos:line="25" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="19">"No data was received!"<pos:position pos:line="25" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
      <return pos:line="26" pos:column="7">return <expr><name pos:line="26" pos:column="14">CURLE_FTP_COULDNT_RETR_FILE<pos:position pos:line="26" pos:column="41"/></name></expr>;<pos:position pos:line="26" pos:column="42"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="28" pos:column="4"/></block></else></if>

<cpp:ifdef pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">ifdef<pos:position pos:line="30" pos:column="7"/></cpp:directive> <name pos:line="30" pos:column="8">KRB4<pos:position pos:line="30" pos:column="12"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">Curl_sec_fflush_fd<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">conn<pos:position pos:line="31" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="28">conn<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">-&gt;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="34">secondarysocket<pos:position pos:line="31" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>
  <comment type="block" pos:line="33" pos:column="3">/* shut down the socket to inform the server we're done */</comment>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">sclose<pos:position pos:line="34" pos:column="9"/></name><argument_list pos:line="34" pos:column="9">(<argument><expr><name><name pos:line="34" pos:column="10">conn<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">-&gt;<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="16">secondarysocket<pos:position pos:line="34" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">conn<pos:position pos:line="35" pos:column="7"/></name><operator pos:line="35" pos:column="7">-&gt;<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="9">secondarysocket<pos:position pos:line="35" pos:column="24"/></name></name> <operator pos:line="35" pos:column="25">=<pos:position pos:line="35" pos:column="26"/></operator> <operator pos:line="35" pos:column="27">-<pos:position pos:line="35" pos:column="28"/></operator><literal type="number" pos:line="35" pos:column="28">1<pos:position pos:line="35" pos:column="29"/></literal></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>

  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">(<expr><operator pos:line="37" pos:column="6">!<pos:position pos:line="37" pos:column="7"/></operator><name><name pos:line="37" pos:column="7">data<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">-&gt;<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="13">set<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">.<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">no_body<pos:position pos:line="37" pos:column="24"/></name></name> <operator pos:line="37" pos:column="25">&amp;&amp;<pos:position pos:line="37" pos:column="35"/></operator> <operator pos:line="37" pos:column="28">!<pos:position pos:line="37" pos:column="29"/></operator><name><name pos:line="37" pos:column="29">conn<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">-&gt;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="35">bits<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">.<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="40">resume_done<pos:position pos:line="37" pos:column="51"/></name></name></expr>)<pos:position pos:line="37" pos:column="52"/></condition><then pos:line="37" pos:column="52"> <block pos:line="37" pos:column="53">{  
    <comment type="block" pos:line="38" pos:column="5">/* now let's see what the server says about the transfer we
       just performed: */</comment>
    <expr_stmt><expr><name pos:line="40" pos:column="5">nread<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <call><name pos:line="40" pos:column="13">Curl_GetFTPResponse<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name><name pos:line="40" pos:column="33">conn<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">-&gt;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="39">firstsocket<pos:position pos:line="40" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="52">buf<pos:position pos:line="40" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="57">conn<pos:position pos:line="40" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="63">&amp;<pos:position pos:line="40" pos:column="68"/></operator><name pos:line="40" pos:column="64">ftpcode<pos:position pos:line="40" pos:column="71"/></name></expr></argument>)<pos:position pos:line="40" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="73"/></expr_stmt>
    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><name pos:line="41" pos:column="8">nread<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">&lt;<pos:position pos:line="41" pos:column="18"/></operator> <literal type="number" pos:line="41" pos:column="16">0<pos:position pos:line="41" pos:column="17"/></literal></expr>)<pos:position pos:line="41" pos:column="18"/></condition><then pos:line="41" pos:column="18">
      <block type="pseudo"><return pos:line="42" pos:column="7">return <expr><name pos:line="42" pos:column="14">CURLE_OPERATION_TIMEOUTED<pos:position pos:line="42" pos:column="39"/></name></expr>;<pos:position pos:line="42" pos:column="40"/></return></block></then></if>

    <comment type="block" pos:line="44" pos:column="5">/* 226 Transfer complete, 250 Requested file action okay, completed. */</comment>
    <if pos:line="45" pos:column="5">if<condition pos:line="45" pos:column="7">(<expr><operator pos:line="45" pos:column="8">(<pos:position pos:line="45" pos:column="9"/></operator><name pos:line="45" pos:column="9">ftpcode<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">!=<pos:position pos:line="45" pos:column="19"/></operator> <literal type="number" pos:line="45" pos:column="20">226<pos:position pos:line="45" pos:column="23"/></literal><operator pos:line="45" pos:column="23">)<pos:position pos:line="45" pos:column="24"/></operator> <operator pos:line="45" pos:column="25">&amp;&amp;<pos:position pos:line="45" pos:column="35"/></operator> <operator pos:line="45" pos:column="28">(<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="29">ftpcode<pos:position pos:line="45" pos:column="36"/></name> <operator pos:line="45" pos:column="37">!=<pos:position pos:line="45" pos:column="39"/></operator> <literal type="number" pos:line="45" pos:column="40">250<pos:position pos:line="45" pos:column="43"/></literal><operator pos:line="45" pos:column="43">)<pos:position pos:line="45" pos:column="44"/></operator></expr>)<pos:position pos:line="45" pos:column="45"/></condition><then pos:line="45" pos:column="45"> <block pos:line="45" pos:column="46">{
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">failf<pos:position pos:line="46" pos:column="12"/></name><argument_list pos:line="46" pos:column="12">(<argument><expr><name pos:line="46" pos:column="13">data<pos:position pos:line="46" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="19">"server did not report OK, got %d"<pos:position pos:line="46" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="55">ftpcode<pos:position pos:line="46" pos:column="62"/></name></expr></argument>)<pos:position pos:line="46" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="64"/></expr_stmt>
      <return pos:line="47" pos:column="7">return <expr><name pos:line="47" pos:column="14">CURLE_FTP_WRITE_ERROR<pos:position pos:line="47" pos:column="35"/></name></expr>;<pos:position pos:line="47" pos:column="36"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="51" pos:column="3">conn<pos:position pos:line="51" pos:column="7"/></name><operator pos:line="51" pos:column="7">-&gt;<pos:position pos:line="51" pos:column="12"/></operator><name pos:line="51" pos:column="9">bits<pos:position pos:line="51" pos:column="13"/></name><operator pos:line="51" pos:column="13">.<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">resume_done<pos:position pos:line="51" pos:column="25"/></name></name> <operator pos:line="51" pos:column="26">=<pos:position pos:line="51" pos:column="27"/></operator> <name pos:line="51" pos:column="28">FALSE<pos:position pos:line="51" pos:column="33"/></name></expr>;<pos:position pos:line="51" pos:column="34"/></expr_stmt> <comment type="block" pos:line="51" pos:column="35">/* clean this for next connection */</comment>

  <comment type="block" pos:line="53" pos:column="3">/* Send any post-transfer QUOTE strings? */</comment>
  <if pos:line="54" pos:column="3">if<condition pos:line="54" pos:column="5">(<expr><name><name pos:line="54" pos:column="6">data<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">-&gt;<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="12">set<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">.<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="16">postquote<pos:position pos:line="54" pos:column="25"/></name></name></expr>)<pos:position pos:line="54" pos:column="26"/></condition><then pos:line="54" pos:column="26"> <block pos:line="54" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="55" pos:column="5">CURLcode<pos:position pos:line="55" pos:column="13"/></name></type> <name pos:line="55" pos:column="14">result<pos:position pos:line="55" pos:column="20"/></name> <init pos:line="55" pos:column="21">= <expr><call><name pos:line="55" pos:column="23">_ftp_sendquote<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><name pos:line="55" pos:column="38">conn<pos:position pos:line="55" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="44">data<pos:position pos:line="55" pos:column="48"/></name><operator pos:line="55" pos:column="48">-&gt;<pos:position pos:line="55" pos:column="53"/></operator><name pos:line="55" pos:column="50">set<pos:position pos:line="55" pos:column="53"/></name><operator pos:line="55" pos:column="53">.<pos:position pos:line="55" pos:column="54"/></operator><name pos:line="55" pos:column="54">postquote<pos:position pos:line="55" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="55" pos:column="65"/></decl_stmt>
    <return pos:line="56" pos:column="5">return <expr><name pos:line="56" pos:column="12">result<pos:position pos:line="56" pos:column="18"/></name></expr>;<pos:position pos:line="56" pos:column="19"/></return>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <return pos:line="59" pos:column="3">return <expr><name pos:line="59" pos:column="10">CURLE_OK<pos:position pos:line="59" pos:column="18"/></name></expr>;<pos:position pos:line="59" pos:column="19"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1821_curl-7.41.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">choose_mech<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">connectdata<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">conn<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">SessionHandle<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">data<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name><name pos:line="4" pos:column="32">conn<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">data<pos:position pos:line="4" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">Curl_sec_client_mech<pos:position pos:line="5" pos:column="36"/></name></name> <modifier pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></modifier> <specifier pos:line="5" pos:column="39">const<pos:position pos:line="5" pos:column="44"/></specifier> <modifier pos:line="5" pos:column="45">*<pos:position pos:line="5" pos:column="46"/></modifier></type><name pos:line="5" pos:column="46">mech<pos:position pos:line="5" pos:column="50"/></name></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">void<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">tmp_allocation<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">mech_name<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

  <for pos:line="9" pos:column="3">for<control pos:line="9" pos:column="6">(<init><expr><name pos:line="9" pos:column="7">mech<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">mechs<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></init> <condition><expr><operator pos:line="9" pos:column="21">(<pos:position pos:line="9" pos:column="22"/></operator><operator pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">mech<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">)<pos:position pos:line="9" pos:column="28"/></operator></expr>;<pos:position pos:line="9" pos:column="29"/></condition> <incr><expr><operator pos:line="9" pos:column="30">++<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">mech<pos:position pos:line="9" pos:column="36"/></name></expr></incr>)<pos:position pos:line="9" pos:column="37"/></control> <block pos:line="9" pos:column="38">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">mech_name<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name><operator pos:line="10" pos:column="17">(<pos:position pos:line="10" pos:column="18"/></operator><operator pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">mech<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">)<pos:position pos:line="10" pos:column="24"/></operator><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">name<pos:position pos:line="10" pos:column="30"/></name></name></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
    <comment type="block" pos:line="11" pos:column="5">/* We have no mechanism with a NULL name but keep this check */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">DEBUGASSERT<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">mech_name<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">!=<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="30">NULL<pos:position pos:line="12" pos:column="34"/></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">(<expr><name pos:line="13" pos:column="8">mech_name<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">==<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">NULL<pos:position pos:line="13" pos:column="25"/></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <block pos:line="13" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">infof<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">data<pos:position pos:line="14" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="19">"Skipping mechanism with empty name (%p)\n"<pos:position pos:line="14" pos:column="62"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="64">(<pos:position pos:line="14" pos:column="65"/></operator><name pos:line="14" pos:column="65">void<pos:position pos:line="14" pos:column="69"/></name> <operator pos:line="14" pos:column="70">*<pos:position pos:line="14" pos:column="71"/></operator><operator pos:line="14" pos:column="71">)<pos:position pos:line="14" pos:column="72"/></operator><name pos:line="14" pos:column="72">mech<pos:position pos:line="14" pos:column="76"/></name></expr></argument>)<pos:position pos:line="14" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="78"/></expr_stmt>
      <continue pos:line="15" pos:column="7">continue;<pos:position pos:line="15" pos:column="16"/></continue>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="17" pos:column="5">tmp_allocation<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <call><name pos:line="17" pos:column="22">realloc<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name><name pos:line="17" pos:column="30">conn<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">app_data<pos:position pos:line="17" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><operator pos:line="17" pos:column="46">(<pos:position pos:line="17" pos:column="47"/></operator><operator pos:line="17" pos:column="47">*<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="48">mech<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">)<pos:position pos:line="17" pos:column="53"/></operator><operator pos:line="17" pos:column="53">-&gt;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="55">size<pos:position pos:line="17" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>
    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><name pos:line="18" pos:column="8">tmp_allocation<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">==<pos:position pos:line="18" pos:column="25"/></operator> <name pos:line="18" pos:column="26">NULL<pos:position pos:line="18" pos:column="30"/></name></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31"> <block pos:line="18" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">failf<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">data<pos:position pos:line="19" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="19">"Failed realloc of size %u"<pos:position pos:line="19" pos:column="46"/></literal></expr></argument>, <argument><expr><name><operator pos:line="19" pos:column="48">(<pos:position pos:line="19" pos:column="49"/></operator><operator pos:line="19" pos:column="49">*<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="50">mech<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">)<pos:position pos:line="19" pos:column="55"/></operator><operator pos:line="19" pos:column="55">-&gt;<pos:position pos:line="19" pos:column="60"/></operator><name pos:line="19" pos:column="57">size<pos:position pos:line="19" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>
      <expr_stmt><expr><name pos:line="20" pos:column="7">mech<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">NULL<pos:position pos:line="20" pos:column="18"/></name></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
      <return pos:line="21" pos:column="7">return <expr><name pos:line="21" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="21" pos:column="33"/></name></expr>;<pos:position pos:line="21" pos:column="34"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">conn<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">app_data<pos:position pos:line="23" pos:column="19"/></name></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">tmp_allocation<pos:position pos:line="23" pos:column="36"/></name></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>

    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><name><operator pos:line="25" pos:column="8">(<pos:position pos:line="25" pos:column="9"/></operator><operator pos:line="25" pos:column="9">*<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">mech<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">)<pos:position pos:line="25" pos:column="15"/></operator><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">init<pos:position pos:line="25" pos:column="21"/></name></name></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22"> <block pos:line="25" pos:column="23">{
      <expr_stmt><expr><name pos:line="26" pos:column="7">ret<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <call><name><operator pos:line="26" pos:column="13">(<pos:position pos:line="26" pos:column="14"/></operator><operator pos:line="26" pos:column="14">*<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">mech<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">)<pos:position pos:line="26" pos:column="20"/></operator><operator pos:line="26" pos:column="20">-&gt;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="22">init<pos:position pos:line="26" pos:column="26"/></name></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name><name pos:line="26" pos:column="27">conn<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">-&gt;<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="33">app_data<pos:position pos:line="26" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
      <if pos:line="27" pos:column="7">if<condition pos:line="27" pos:column="9">(<expr><name pos:line="27" pos:column="10">ret<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">!=<pos:position pos:line="27" pos:column="16"/></operator> <literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal></expr>)<pos:position pos:line="27" pos:column="19"/></condition><then pos:line="27" pos:column="19"> <block pos:line="27" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">infof<pos:position pos:line="28" pos:column="14"/></name><argument_list pos:line="28" pos:column="14">(<argument><expr><name pos:line="28" pos:column="15">data<pos:position pos:line="28" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="21">"Failed initialization for %s. Skipping it.\n"<pos:position pos:line="28" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="69">mech_name<pos:position pos:line="28" pos:column="78"/></name></expr></argument>)<pos:position pos:line="28" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="80"/></expr_stmt>
        <continue pos:line="29" pos:column="9">continue;<pos:position pos:line="29" pos:column="18"/></continue>
      }<pos:position pos:line="30" pos:column="8"/></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">infof<pos:position pos:line="33" pos:column="10"/></name><argument_list pos:line="33" pos:column="10">(<argument><expr><name pos:line="33" pos:column="11">data<pos:position pos:line="33" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="17">"Trying mechanism %s...\n"<pos:position pos:line="33" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="45">mech_name<pos:position pos:line="33" pos:column="54"/></name></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">ret<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">=<pos:position pos:line="34" pos:column="10"/></operator> <call><name pos:line="34" pos:column="11">ftp_send_command<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">conn<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="34">"AUTH %s"<pos:position pos:line="34" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="45">mech_name<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="56"/></expr_stmt>
    <if pos:line="35" pos:column="5">if<condition pos:line="35" pos:column="7">(<expr><name pos:line="35" pos:column="8">ret<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">&lt;<pos:position pos:line="35" pos:column="16"/></operator> <literal type="number" pos:line="35" pos:column="14">0<pos:position pos:line="35" pos:column="15"/></literal></expr>)<pos:position pos:line="35" pos:column="16"/></condition><then pos:line="35" pos:column="16">
      <comment type="block" pos:line="36" pos:column="7">/* FIXME: This error is too generic but it is OK for now. */</comment>
      <block type="pseudo"><return pos:line="37" pos:column="7">return <expr><name pos:line="37" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="37" pos:column="35"/></name></expr>;<pos:position pos:line="37" pos:column="36"/></return></block></then></if>

    <if pos:line="39" pos:column="5">if<condition pos:line="39" pos:column="7">(<expr><name pos:line="39" pos:column="8">ret<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">/<pos:position pos:line="39" pos:column="12"/></operator><literal type="number" pos:line="39" pos:column="12">100<pos:position pos:line="39" pos:column="15"/></literal> <operator pos:line="39" pos:column="16">!=<pos:position pos:line="39" pos:column="18"/></operator> <literal type="number" pos:line="39" pos:column="19">3<pos:position pos:line="39" pos:column="20"/></literal></expr>)<pos:position pos:line="39" pos:column="21"/></condition><then pos:line="39" pos:column="21"> <block pos:line="39" pos:column="22">{
      <switch pos:line="40" pos:column="7">switch<condition pos:line="40" pos:column="13">(<expr><name pos:line="40" pos:column="14">ret<pos:position pos:line="40" pos:column="17"/></name></expr>)<pos:position pos:line="40" pos:column="18"/></condition> <block pos:line="40" pos:column="19">{
      <case pos:line="41" pos:column="7">case <expr><literal type="number" pos:line="41" pos:column="12">504<pos:position pos:line="41" pos:column="15"/></literal></expr>:<pos:position pos:line="41" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">infof<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><name pos:line="42" pos:column="15">data<pos:position pos:line="42" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="21">"Mechanism %s is not supported by the server (server "<pos:position pos:line="42" pos:column="75"/></literal>
                    <literal type="string" pos:line="43" pos:column="21">"returned ftp code: 504).\n"<pos:position pos:line="43" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="51">mech_name<pos:position pos:line="43" pos:column="60"/></name></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="62"/></expr_stmt>
        <break pos:line="44" pos:column="9">break;<pos:position pos:line="44" pos:column="15"/></break>
      <case pos:line="45" pos:column="7">case <expr><literal type="number" pos:line="45" pos:column="12">534<pos:position pos:line="45" pos:column="15"/></literal></expr>:<pos:position pos:line="45" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">infof<pos:position pos:line="46" pos:column="14"/></name><argument_list pos:line="46" pos:column="14">(<argument><expr><name pos:line="46" pos:column="15">data<pos:position pos:line="46" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="21">"Mechanism %s was rejected by the server (server returned "<pos:position pos:line="46" pos:column="80"/></literal>
                    <literal type="string" pos:line="47" pos:column="21">"ftp code: 534).\n"<pos:position pos:line="47" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="42">mech_name<pos:position pos:line="47" pos:column="51"/></name></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="53"/></expr_stmt>
        <break pos:line="48" pos:column="9">break;<pos:position pos:line="48" pos:column="15"/></break>
      <default pos:line="49" pos:column="7">default:<pos:position pos:line="49" pos:column="15"/></default>
        <if pos:line="50" pos:column="9">if<condition pos:line="50" pos:column="11">(<expr><name pos:line="50" pos:column="12">ret<pos:position pos:line="50" pos:column="15"/></name><operator pos:line="50" pos:column="15">/<pos:position pos:line="50" pos:column="16"/></operator><literal type="number" pos:line="50" pos:column="16">100<pos:position pos:line="50" pos:column="19"/></literal> <operator pos:line="50" pos:column="20">==<pos:position pos:line="50" pos:column="22"/></operator> <literal type="number" pos:line="50" pos:column="23">5<pos:position pos:line="50" pos:column="24"/></literal></expr>)<pos:position pos:line="50" pos:column="25"/></condition><then pos:line="50" pos:column="25"> <block pos:line="50" pos:column="26">{
          <expr_stmt><expr><call><name pos:line="51" pos:column="11">infof<pos:position pos:line="51" pos:column="16"/></name><argument_list pos:line="51" pos:column="16">(<argument><expr><name pos:line="51" pos:column="17">data<pos:position pos:line="51" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="23">"server does not support the security extensions\n"<pos:position pos:line="51" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="76"/></expr_stmt>
          <return pos:line="52" pos:column="11">return <expr><name pos:line="52" pos:column="18">CURLE_USE_SSL_FAILED<pos:position pos:line="52" pos:column="38"/></name></expr>;<pos:position pos:line="52" pos:column="39"/></return>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if>
        <break pos:line="54" pos:column="9">break;<pos:position pos:line="54" pos:column="15"/></break>
      }<pos:position pos:line="55" pos:column="8"/></block></switch>
      <continue pos:line="56" pos:column="7">continue;<pos:position pos:line="56" pos:column="16"/></continue>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="59" pos:column="5">/* Authenticate */</comment>
    <expr_stmt><expr><name pos:line="60" pos:column="5">ret<pos:position pos:line="60" pos:column="8"/></name> <operator pos:line="60" pos:column="9">=<pos:position pos:line="60" pos:column="10"/></operator> <call><name><operator pos:line="60" pos:column="11">(<pos:position pos:line="60" pos:column="12"/></operator><operator pos:line="60" pos:column="12">*<pos:position pos:line="60" pos:column="13"/></operator><name pos:line="60" pos:column="13">mech<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">)<pos:position pos:line="60" pos:column="18"/></operator><operator pos:line="60" pos:column="18">-&gt;<pos:position pos:line="60" pos:column="23"/></operator><name pos:line="60" pos:column="20">auth<pos:position pos:line="60" pos:column="24"/></name></name><argument_list pos:line="60" pos:column="24">(<argument><expr><name><name pos:line="60" pos:column="25">conn<pos:position pos:line="60" pos:column="29"/></name><operator pos:line="60" pos:column="29">-&gt;<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="31">app_data<pos:position pos:line="60" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="41">conn<pos:position pos:line="60" pos:column="45"/></name></expr></argument>)<pos:position pos:line="60" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="47"/></expr_stmt>

    <if pos:line="62" pos:column="5">if<condition pos:line="62" pos:column="7">(<expr><name pos:line="62" pos:column="8">ret<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">==<pos:position pos:line="62" pos:column="14"/></operator> <name pos:line="62" pos:column="15">AUTH_CONTINUE<pos:position pos:line="62" pos:column="28"/></name></expr>)<pos:position pos:line="62" pos:column="29"/></condition><then pos:line="62" pos:column="29">
      <block type="pseudo"><continue pos:line="63" pos:column="7">continue;<pos:position pos:line="63" pos:column="16"/></continue></block></then>
    <elseif pos:line="64" pos:column="5">else <if pos:line="64" pos:column="10">if<condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">ret<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">!=<pos:position pos:line="64" pos:column="19"/></operator> <name pos:line="64" pos:column="20">AUTH_OK<pos:position pos:line="64" pos:column="27"/></name></expr>)<pos:position pos:line="64" pos:column="28"/></condition><then pos:line="64" pos:column="28"> <block pos:line="64" pos:column="29">{
      <comment type="block" pos:line="65" pos:column="7">/* Mechanism has dumped the error to stderr, don't error here. */</comment>
      <return pos:line="66" pos:column="7">return <expr><operator pos:line="66" pos:column="14">-<pos:position pos:line="66" pos:column="15"/></operator><literal type="number" pos:line="66" pos:column="15">1<pos:position pos:line="66" pos:column="16"/></literal></expr>;<pos:position pos:line="66" pos:column="17"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">DEBUGASSERT<pos:position pos:line="68" pos:column="16"/></name><argument_list pos:line="68" pos:column="16">(<argument><expr><name pos:line="68" pos:column="17">ret<pos:position pos:line="68" pos:column="20"/></name> <operator pos:line="68" pos:column="21">==<pos:position pos:line="68" pos:column="23"/></operator> <name pos:line="68" pos:column="24">AUTH_OK<pos:position pos:line="68" pos:column="31"/></name></expr></argument>)<pos:position pos:line="68" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="70" pos:column="5">conn<pos:position pos:line="70" pos:column="9"/></name><operator pos:line="70" pos:column="9">-&gt;<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="11">mech<pos:position pos:line="70" pos:column="15"/></name></name> <operator pos:line="70" pos:column="16">=<pos:position pos:line="70" pos:column="17"/></operator> <operator pos:line="70" pos:column="18">*<pos:position pos:line="70" pos:column="19"/></operator><name pos:line="70" pos:column="19">mech<pos:position pos:line="70" pos:column="23"/></name></expr>;<pos:position pos:line="70" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="71" pos:column="5">conn<pos:position pos:line="71" pos:column="9"/></name><operator pos:line="71" pos:column="9">-&gt;<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="11">sec_complete<pos:position pos:line="71" pos:column="23"/></name></name> <operator pos:line="71" pos:column="24">=<pos:position pos:line="71" pos:column="25"/></operator> <literal type="number" pos:line="71" pos:column="26">1<pos:position pos:line="71" pos:column="27"/></literal></expr>;<pos:position pos:line="71" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="72" pos:column="5">conn<pos:position pos:line="72" pos:column="9"/></name><operator pos:line="72" pos:column="9">-&gt;<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="11">recv<pos:position pos:line="72" pos:column="15"/></name><index pos:line="72" pos:column="15">[<expr><name pos:line="72" pos:column="16">FIRSTSOCKET<pos:position pos:line="72" pos:column="27"/></name></expr>]<pos:position pos:line="72" pos:column="28"/></index></name> <operator pos:line="72" pos:column="29">=<pos:position pos:line="72" pos:column="30"/></operator> <name pos:line="72" pos:column="31">sec_recv<pos:position pos:line="72" pos:column="39"/></name></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="73" pos:column="5">conn<pos:position pos:line="73" pos:column="9"/></name><operator pos:line="73" pos:column="9">-&gt;<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="11">send<pos:position pos:line="73" pos:column="15"/></name><index pos:line="73" pos:column="15">[<expr><name pos:line="73" pos:column="16">FIRSTSOCKET<pos:position pos:line="73" pos:column="27"/></name></expr>]<pos:position pos:line="73" pos:column="28"/></index></name> <operator pos:line="73" pos:column="29">=<pos:position pos:line="73" pos:column="30"/></operator> <name pos:line="73" pos:column="31">sec_send<pos:position pos:line="73" pos:column="39"/></name></expr>;<pos:position pos:line="73" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="74" pos:column="5">conn<pos:position pos:line="74" pos:column="9"/></name><operator pos:line="74" pos:column="9">-&gt;<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="11">recv<pos:position pos:line="74" pos:column="15"/></name><index pos:line="74" pos:column="15">[<expr><name pos:line="74" pos:column="16">SECONDARYSOCKET<pos:position pos:line="74" pos:column="31"/></name></expr>]<pos:position pos:line="74" pos:column="32"/></index></name> <operator pos:line="74" pos:column="33">=<pos:position pos:line="74" pos:column="34"/></operator> <name pos:line="74" pos:column="35">sec_recv<pos:position pos:line="74" pos:column="43"/></name></expr>;<pos:position pos:line="74" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="75" pos:column="5">conn<pos:position pos:line="75" pos:column="9"/></name><operator pos:line="75" pos:column="9">-&gt;<pos:position pos:line="75" pos:column="14"/></operator><name pos:line="75" pos:column="11">send<pos:position pos:line="75" pos:column="15"/></name><index pos:line="75" pos:column="15">[<expr><name pos:line="75" pos:column="16">SECONDARYSOCKET<pos:position pos:line="75" pos:column="31"/></name></expr>]<pos:position pos:line="75" pos:column="32"/></index></name> <operator pos:line="75" pos:column="33">=<pos:position pos:line="75" pos:column="34"/></operator> <name pos:line="75" pos:column="35">sec_send<pos:position pos:line="75" pos:column="43"/></name></expr>;<pos:position pos:line="75" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="76" pos:column="5">conn<pos:position pos:line="76" pos:column="9"/></name><operator pos:line="76" pos:column="9">-&gt;<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="11">command_prot<pos:position pos:line="76" pos:column="23"/></name></name> <operator pos:line="76" pos:column="24">=<pos:position pos:line="76" pos:column="25"/></operator> <name pos:line="76" pos:column="26">PROT_SAFE<pos:position pos:line="76" pos:column="35"/></name></expr>;<pos:position pos:line="76" pos:column="36"/></expr_stmt>
    <comment type="block" pos:line="77" pos:column="5">/* Set the requested protection level */</comment>
    <comment type="block" pos:line="78" pos:column="5">/* BLOCKING */</comment>
    <expr_stmt><expr><operator pos:line="79" pos:column="5">(<pos:position pos:line="79" pos:column="6"/></operator><name pos:line="79" pos:column="6">void<pos:position pos:line="79" pos:column="10"/></name><operator pos:line="79" pos:column="10">)<pos:position pos:line="79" pos:column="11"/></operator><call><name pos:line="79" pos:column="11">sec_set_protection_level<pos:position pos:line="79" pos:column="35"/></name><argument_list pos:line="79" pos:column="35">(<argument><expr><name pos:line="79" pos:column="36">conn<pos:position pos:line="79" pos:column="40"/></name></expr></argument>)<pos:position pos:line="79" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="42"/></expr_stmt>
    <break pos:line="80" pos:column="5">break;<pos:position pos:line="80" pos:column="11"/></break>
  }<pos:position pos:line="81" pos:column="4"/></block></for>

  <return pos:line="83" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="83" pos:column="10">*<pos:position pos:line="83" pos:column="11"/></operator><name pos:line="83" pos:column="11">mech<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">!=<pos:position pos:line="83" pos:column="18"/></operator> <name pos:line="83" pos:column="19">NULL<pos:position pos:line="83" pos:column="23"/></name></expr> ?<pos:position pos:line="83" pos:column="25"/></condition><then pos:line="83" pos:column="25"> <expr><name pos:line="83" pos:column="26">CURLE_OK<pos:position pos:line="83" pos:column="34"/></name></expr> <pos:position pos:line="83" pos:column="35"/></then><else pos:line="83" pos:column="35">: <expr><name pos:line="83" pos:column="37">CURLE_FAILED_INIT<pos:position pos:line="83" pos:column="54"/></name></expr></else></ternary></expr>;<pos:position pos:line="83" pos:column="55"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

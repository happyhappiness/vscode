<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1757_curl-7.51.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">dict_do<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">connectdata<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">conn<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">bool<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">done<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">word<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">eword<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">ppath<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">database<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">strategy<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">nthdef<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><name pos:line="8" pos:column="18">NULL<pos:position pos:line="8" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt> <comment type="block" pos:line="8" pos:column="24">/* This is not part of the protocol, but required
                          by RFC 2229 */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">CURLcode<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">result<pos:position pos:line="10" pos:column="18"/></name><init pos:line="10" pos:column="18">=<expr><name pos:line="10" pos:column="19">CURLE_OK<pos:position pos:line="10" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">Curl_easy<pos:position pos:line="11" pos:column="19"/></name></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">data<pos:position pos:line="11" pos:column="25"/></name><init pos:line="11" pos:column="25">=<expr><name><name pos:line="11" pos:column="26">conn<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">data<pos:position pos:line="11" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">curl_socket_t<pos:position pos:line="12" pos:column="16"/></name></type> <name pos:line="12" pos:column="17">sockfd<pos:position pos:line="12" pos:column="23"/></name> <init pos:line="12" pos:column="24">= <expr><name><name pos:line="12" pos:column="26">conn<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">sock<pos:position pos:line="12" pos:column="36"/></name><index pos:line="12" pos:column="36">[<expr><name pos:line="12" pos:column="37">FIRSTSOCKET<pos:position pos:line="12" pos:column="48"/></name></expr>]<pos:position pos:line="12" pos:column="49"/></index></name></expr></init></decl>;<pos:position pos:line="12" pos:column="50"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">path<pos:position pos:line="14" pos:column="13"/></name> <init pos:line="14" pos:column="14">= <expr><name><name pos:line="14" pos:column="16">data<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">state<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">.<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">path<pos:position pos:line="14" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">curl_off_t<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">bytecount<pos:position pos:line="15" pos:column="24"/></name> <init pos:line="15" pos:column="25">= <expr><operator pos:line="15" pos:column="27">&amp;<pos:position pos:line="15" pos:column="32"/></operator><name><name pos:line="15" pos:column="28">data<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">req<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">.<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">bytecount<pos:position pos:line="15" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="48"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="17" pos:column="3">*<pos:position pos:line="17" pos:column="4"/></operator><name pos:line="17" pos:column="4">done<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <name pos:line="17" pos:column="11">TRUE<pos:position pos:line="17" pos:column="15"/></name></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt> <comment type="block" pos:line="17" pos:column="17">/* unconditionally */</comment>

  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><name><name pos:line="19" pos:column="6">conn<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">bits<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">.<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">user_passwd<pos:position pos:line="19" pos:column="28"/></name></name></expr>)<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29"> <block pos:line="19" pos:column="30">{
    <comment type="block" pos:line="20" pos:column="5">/* AUTH is missing */</comment>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><call><name pos:line="23" pos:column="6">strncasecompare<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">path<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="28">DICT_MATCH<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="40">sizeof<argument_list pos:line="23" pos:column="46">(<argument><expr><name pos:line="23" pos:column="47">DICT_MATCH<pos:position pos:line="23" pos:column="57"/></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></sizeof><operator pos:line="23" pos:column="58">-<pos:position pos:line="23" pos:column="59"/></operator><literal type="number" pos:line="23" pos:column="59">1<pos:position pos:line="23" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call> <operator pos:line="23" pos:column="62">||<pos:position pos:line="23" pos:column="64"/></operator>
     <call><name pos:line="24" pos:column="6">strncasecompare<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><name pos:line="24" pos:column="22">path<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="28">DICT_MATCH2<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="41">sizeof<argument_list pos:line="24" pos:column="47">(<argument><expr><name pos:line="24" pos:column="48">DICT_MATCH2<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></sizeof><operator pos:line="24" pos:column="60">-<pos:position pos:line="24" pos:column="61"/></operator><literal type="number" pos:line="24" pos:column="61">1<pos:position pos:line="24" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call> <operator pos:line="24" pos:column="64">||<pos:position pos:line="24" pos:column="66"/></operator>
     <call><name pos:line="25" pos:column="6">strncasecompare<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">path<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">DICT_MATCH3<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="41">sizeof<argument_list pos:line="25" pos:column="47">(<argument><expr><name pos:line="25" pos:column="48">DICT_MATCH3<pos:position pos:line="25" pos:column="59"/></name></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></sizeof><operator pos:line="25" pos:column="60">-<pos:position pos:line="25" pos:column="61"/></operator><literal type="number" pos:line="25" pos:column="61">1<pos:position pos:line="25" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="64"/></condition><then pos:line="25" pos:column="64"> <block pos:line="25" pos:column="65">{

    <expr_stmt><expr><name pos:line="27" pos:column="5">word<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <call><name pos:line="27" pos:column="12">strchr<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">(<argument><expr><name pos:line="27" pos:column="19">path<pos:position pos:line="27" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="27" pos:column="25">':'<pos:position pos:line="27" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><name pos:line="28" pos:column="8">word<pos:position pos:line="28" pos:column="12"/></name></expr>)<pos:position pos:line="28" pos:column="13"/></condition><then pos:line="28" pos:column="13"> <block pos:line="28" pos:column="14">{
      <expr_stmt><expr><name pos:line="29" pos:column="7">word<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">++<pos:position pos:line="29" pos:column="13"/></operator></expr>;<pos:position pos:line="29" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="30" pos:column="7">database<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">strchr<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">word<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="30" pos:column="31">':'<pos:position pos:line="30" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
      <if pos:line="31" pos:column="7">if<condition pos:line="31" pos:column="9">(<expr><name pos:line="31" pos:column="10">database<pos:position pos:line="31" pos:column="18"/></name></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19"> <block pos:line="31" pos:column="20">{
        <expr_stmt><expr><operator pos:line="32" pos:column="9">*<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">database<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">++<pos:position pos:line="32" pos:column="20"/></operator> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <operator pos:line="32" pos:column="23">(<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">char<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">)<pos:position pos:line="32" pos:column="29"/></operator><literal type="number" pos:line="32" pos:column="29">0<pos:position pos:line="32" pos:column="30"/></literal></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="33" pos:column="9">strategy<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <call><name pos:line="33" pos:column="20">strchr<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name pos:line="33" pos:column="27">database<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="33" pos:column="37">':'<pos:position pos:line="33" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
        <if pos:line="34" pos:column="9">if<condition pos:line="34" pos:column="11">(<expr><name pos:line="34" pos:column="12">strategy<pos:position pos:line="34" pos:column="20"/></name></expr>)<pos:position pos:line="34" pos:column="21"/></condition><then pos:line="34" pos:column="21"> <block pos:line="34" pos:column="22">{
          <expr_stmt><expr><operator pos:line="35" pos:column="11">*<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">strategy<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">++<pos:position pos:line="35" pos:column="22"/></operator> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <operator pos:line="35" pos:column="25">(<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="26">char<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">)<pos:position pos:line="35" pos:column="31"/></operator><literal type="number" pos:line="35" pos:column="31">0<pos:position pos:line="35" pos:column="32"/></literal></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt>
          <expr_stmt><expr><name pos:line="36" pos:column="11">nthdef<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <call><name pos:line="36" pos:column="20">strchr<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">(<argument><expr><name pos:line="36" pos:column="27">strategy<pos:position pos:line="36" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="36" pos:column="37">':'<pos:position pos:line="36" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="42"/></expr_stmt>
          <if pos:line="37" pos:column="11">if<condition pos:line="37" pos:column="13">(<expr><name pos:line="37" pos:column="14">nthdef<pos:position pos:line="37" pos:column="20"/></name></expr>)<pos:position pos:line="37" pos:column="21"/></condition><then pos:line="37" pos:column="21"> <block pos:line="37" pos:column="22">{
            <expr_stmt><expr><operator pos:line="38" pos:column="13">*<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">nthdef<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <operator pos:line="38" pos:column="23">(<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="24">char<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">)<pos:position pos:line="38" pos:column="29"/></operator><literal type="number" pos:line="38" pos:column="29">0<pos:position pos:line="38" pos:column="30"/></literal></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
          }<pos:position pos:line="39" pos:column="12"/></block></then></if>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
      }<pos:position pos:line="41" pos:column="8"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><operator pos:line="44" pos:column="8">(<pos:position pos:line="44" pos:column="9"/></operator><name pos:line="44" pos:column="9">word<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">==<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">NULL<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">)<pos:position pos:line="44" pos:column="22"/></operator> <operator pos:line="44" pos:column="23">||<pos:position pos:line="44" pos:column="25"/></operator> <operator pos:line="44" pos:column="26">(<pos:position pos:line="44" pos:column="27"/></operator><operator pos:line="44" pos:column="27">*<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="28">word<pos:position pos:line="44" pos:column="32"/></name> <operator pos:line="44" pos:column="33">==<pos:position pos:line="44" pos:column="35"/></operator> <operator pos:line="44" pos:column="36">(<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="37">char<pos:position pos:line="44" pos:column="41"/></name><operator pos:line="44" pos:column="41">)<pos:position pos:line="44" pos:column="42"/></operator><literal type="number" pos:line="44" pos:column="42">0<pos:position pos:line="44" pos:column="43"/></literal><operator pos:line="44" pos:column="43">)<pos:position pos:line="44" pos:column="44"/></operator></expr>)<pos:position pos:line="44" pos:column="45"/></condition><then pos:line="44" pos:column="45"> <block pos:line="44" pos:column="46">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">infof<pos:position pos:line="45" pos:column="12"/></name><argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">data<pos:position pos:line="45" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="19">"lookup word is missing\n"<pos:position pos:line="45" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name pos:line="46" pos:column="7">word<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">=<pos:position pos:line="46" pos:column="12"/></operator><operator pos:line="46" pos:column="12">(<pos:position pos:line="46" pos:column="13"/></operator><name pos:line="46" pos:column="13">char<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">*<pos:position pos:line="46" pos:column="19"/></operator><operator pos:line="46" pos:column="19">)<pos:position pos:line="46" pos:column="20"/></operator><literal type="string" pos:line="46" pos:column="20">"default"<pos:position pos:line="46" pos:column="29"/></literal></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <if pos:line="48" pos:column="5">if<condition pos:line="48" pos:column="7">(<expr><operator pos:line="48" pos:column="8">(<pos:position pos:line="48" pos:column="9"/></operator><name pos:line="48" pos:column="9">database<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">==<pos:position pos:line="48" pos:column="20"/></operator> <name pos:line="48" pos:column="21">NULL<pos:position pos:line="48" pos:column="25"/></name><operator pos:line="48" pos:column="25">)<pos:position pos:line="48" pos:column="26"/></operator> <operator pos:line="48" pos:column="27">||<pos:position pos:line="48" pos:column="29"/></operator> <operator pos:line="48" pos:column="30">(<pos:position pos:line="48" pos:column="31"/></operator><operator pos:line="48" pos:column="31">*<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="32">database<pos:position pos:line="48" pos:column="40"/></name> <operator pos:line="48" pos:column="41">==<pos:position pos:line="48" pos:column="43"/></operator> <operator pos:line="48" pos:column="44">(<pos:position pos:line="48" pos:column="45"/></operator><name pos:line="48" pos:column="45">char<pos:position pos:line="48" pos:column="49"/></name><operator pos:line="48" pos:column="49">)<pos:position pos:line="48" pos:column="50"/></operator><literal type="number" pos:line="48" pos:column="50">0<pos:position pos:line="48" pos:column="51"/></literal><operator pos:line="48" pos:column="51">)<pos:position pos:line="48" pos:column="52"/></operator></expr>)<pos:position pos:line="48" pos:column="53"/></condition><then pos:line="48" pos:column="53"> <block pos:line="48" pos:column="54">{
      <expr_stmt><expr><name pos:line="49" pos:column="7">database<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <operator pos:line="49" pos:column="18">(<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="19">char<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">*<pos:position pos:line="49" pos:column="25"/></operator><operator pos:line="49" pos:column="25">)<pos:position pos:line="49" pos:column="26"/></operator><literal type="string" pos:line="49" pos:column="26">"!"<pos:position pos:line="49" pos:column="29"/></literal></expr>;<pos:position pos:line="49" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
    <if pos:line="51" pos:column="5">if<condition pos:line="51" pos:column="7">(<expr><operator pos:line="51" pos:column="8">(<pos:position pos:line="51" pos:column="9"/></operator><name pos:line="51" pos:column="9">strategy<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">==<pos:position pos:line="51" pos:column="20"/></operator> <name pos:line="51" pos:column="21">NULL<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">)<pos:position pos:line="51" pos:column="26"/></operator> <operator pos:line="51" pos:column="27">||<pos:position pos:line="51" pos:column="29"/></operator> <operator pos:line="51" pos:column="30">(<pos:position pos:line="51" pos:column="31"/></operator><operator pos:line="51" pos:column="31">*<pos:position pos:line="51" pos:column="32"/></operator><name pos:line="51" pos:column="32">strategy<pos:position pos:line="51" pos:column="40"/></name> <operator pos:line="51" pos:column="41">==<pos:position pos:line="51" pos:column="43"/></operator> <operator pos:line="51" pos:column="44">(<pos:position pos:line="51" pos:column="45"/></operator><name pos:line="51" pos:column="45">char<pos:position pos:line="51" pos:column="49"/></name><operator pos:line="51" pos:column="49">)<pos:position pos:line="51" pos:column="50"/></operator><literal type="number" pos:line="51" pos:column="50">0<pos:position pos:line="51" pos:column="51"/></literal><operator pos:line="51" pos:column="51">)<pos:position pos:line="51" pos:column="52"/></operator></expr>)<pos:position pos:line="51" pos:column="53"/></condition><then pos:line="51" pos:column="53"> <block pos:line="51" pos:column="54">{
      <expr_stmt><expr><name pos:line="52" pos:column="7">strategy<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <operator pos:line="52" pos:column="18">(<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="19">char<pos:position pos:line="52" pos:column="23"/></name> <operator pos:line="52" pos:column="24">*<pos:position pos:line="52" pos:column="25"/></operator><operator pos:line="52" pos:column="25">)<pos:position pos:line="52" pos:column="26"/></operator><literal type="string" pos:line="52" pos:column="26">"."<pos:position pos:line="52" pos:column="29"/></literal></expr>;<pos:position pos:line="52" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="55" pos:column="5">eword<pos:position pos:line="55" pos:column="10"/></name> <operator pos:line="55" pos:column="11">=<pos:position pos:line="55" pos:column="12"/></operator> <call><name pos:line="55" pos:column="13">unescape_word<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><name pos:line="55" pos:column="27">data<pos:position pos:line="55" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="33">word<pos:position pos:line="55" pos:column="37"/></name></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="39"/></expr_stmt>
    <if pos:line="56" pos:column="5">if<condition pos:line="56" pos:column="7">(<expr><operator pos:line="56" pos:column="8">!<pos:position pos:line="56" pos:column="9"/></operator><name pos:line="56" pos:column="9">eword<pos:position pos:line="56" pos:column="14"/></name></expr>)<pos:position pos:line="56" pos:column="15"/></condition><then pos:line="56" pos:column="15">
      <block type="pseudo"><return pos:line="57" pos:column="7">return <expr><name pos:line="57" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="57" pos:column="33"/></name></expr>;<pos:position pos:line="57" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="59" pos:column="5">result<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <call><name pos:line="59" pos:column="14">Curl_sendf<pos:position pos:line="59" pos:column="24"/></name><argument_list pos:line="59" pos:column="24">(<argument><expr><name pos:line="59" pos:column="25">sockfd<pos:position pos:line="59" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="33">conn<pos:position pos:line="59" pos:column="37"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="60" pos:column="25">"CLIENT "<pos:position pos:line="60" pos:column="34"/></literal> <name pos:line="60" pos:column="35">LIBCURL_NAME<pos:position pos:line="60" pos:column="47"/></name> <literal type="string" pos:line="60" pos:column="48">" "<pos:position pos:line="60" pos:column="51"/></literal> <name pos:line="60" pos:column="52">LIBCURL_VERSION<pos:position pos:line="60" pos:column="67"/></name> <literal type="string" pos:line="60" pos:column="68">"\r\n"<pos:position pos:line="60" pos:column="74"/></literal>
                        <literal type="string" pos:line="61" pos:column="25">"MATCH "<pos:position pos:line="61" pos:column="33"/></literal>
                        <literal type="string" pos:line="62" pos:column="25">"%s "<pos:position pos:line="62" pos:column="30"/></literal>    <comment type="block" pos:line="62" pos:column="34">/* database */</comment>
                        <literal type="string" pos:line="63" pos:column="25">"%s "<pos:position pos:line="63" pos:column="30"/></literal>    <comment type="block" pos:line="63" pos:column="34">/* strategy */</comment>
                        <literal type="string" pos:line="64" pos:column="25">"%s\r\n"<pos:position pos:line="64" pos:column="33"/></literal> <comment type="block" pos:line="64" pos:column="34">/* word */</comment>
                        <literal type="string" pos:line="65" pos:column="25">"QUIT\r\n"<pos:position pos:line="65" pos:column="35"/></literal></expr></argument>,

                        <argument><expr><name pos:line="67" pos:column="25">database<pos:position pos:line="67" pos:column="33"/></name></expr></argument>,
                        <argument><expr><name pos:line="68" pos:column="25">strategy<pos:position pos:line="68" pos:column="33"/></name></expr></argument>,
                        <argument><expr><name pos:line="69" pos:column="25">eword<pos:position pos:line="69" pos:column="30"/></name></expr></argument>
                        )<pos:position pos:line="70" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="72" pos:column="5">free<pos:position pos:line="72" pos:column="9"/></name><argument_list pos:line="72" pos:column="9">(<argument><expr><name pos:line="72" pos:column="10">eword<pos:position pos:line="72" pos:column="15"/></name></expr></argument>)<pos:position pos:line="72" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="17"/></expr_stmt>

    <if pos:line="74" pos:column="5">if<condition pos:line="74" pos:column="7">(<expr><name pos:line="74" pos:column="8">result<pos:position pos:line="74" pos:column="14"/></name></expr>)<pos:position pos:line="74" pos:column="15"/></condition><then pos:line="74" pos:column="15"> <block pos:line="74" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="75" pos:column="7">failf<pos:position pos:line="75" pos:column="12"/></name><argument_list pos:line="75" pos:column="12">(<argument><expr><name pos:line="75" pos:column="13">data<pos:position pos:line="75" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="19">"Failed sending DICT request"<pos:position pos:line="75" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="50"/></expr_stmt>
      <return pos:line="76" pos:column="7">return <expr><name pos:line="76" pos:column="14">result<pos:position pos:line="76" pos:column="20"/></name></expr>;<pos:position pos:line="76" pos:column="21"/></return>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">Curl_setup_transfer<pos:position pos:line="78" pos:column="24"/></name><argument_list pos:line="78" pos:column="24">(<argument><expr><name pos:line="78" pos:column="25">conn<pos:position pos:line="78" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="31">FIRSTSOCKET<pos:position pos:line="78" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="44">-<pos:position pos:line="78" pos:column="45"/></operator><literal type="number" pos:line="78" pos:column="45">1<pos:position pos:line="78" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="48">FALSE<pos:position pos:line="78" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="55">bytecount<pos:position pos:line="78" pos:column="64"/></name></expr></argument>,
                        <argument><expr><operator pos:line="79" pos:column="25">-<pos:position pos:line="79" pos:column="26"/></operator><literal type="number" pos:line="79" pos:column="26">1<pos:position pos:line="79" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="29">NULL<pos:position pos:line="79" pos:column="33"/></name></expr></argument>)<pos:position pos:line="79" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="35"/></expr_stmt> <comment type="block" pos:line="79" pos:column="36">/* no upload */</comment>
  }<pos:position pos:line="80" pos:column="4"/></block></then>
  <elseif pos:line="81" pos:column="3">else <if pos:line="81" pos:column="8">if<condition pos:line="81" pos:column="10">(<expr><call><name pos:line="81" pos:column="11">strncasecompare<pos:position pos:line="81" pos:column="26"/></name><argument_list pos:line="81" pos:column="26">(<argument><expr><name pos:line="81" pos:column="27">path<pos:position pos:line="81" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="33">DICT_DEFINE<pos:position pos:line="81" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="81" pos:column="46">sizeof<argument_list pos:line="81" pos:column="52">(<argument><expr><name pos:line="81" pos:column="53">DICT_DEFINE<pos:position pos:line="81" pos:column="64"/></name></expr></argument>)<pos:position pos:line="81" pos:column="65"/></argument_list></sizeof><operator pos:line="81" pos:column="65">-<pos:position pos:line="81" pos:column="66"/></operator><literal type="number" pos:line="81" pos:column="66">1<pos:position pos:line="81" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="68"/></argument_list></call> <operator pos:line="81" pos:column="69">||<pos:position pos:line="81" pos:column="71"/></operator>
          <call><name pos:line="82" pos:column="11">strncasecompare<pos:position pos:line="82" pos:column="26"/></name><argument_list pos:line="82" pos:column="26">(<argument><expr><name pos:line="82" pos:column="27">path<pos:position pos:line="82" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="33">DICT_DEFINE2<pos:position pos:line="82" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="47">sizeof<argument_list pos:line="82" pos:column="53">(<argument><expr><name pos:line="82" pos:column="54">DICT_DEFINE2<pos:position pos:line="82" pos:column="66"/></name></expr></argument>)<pos:position pos:line="82" pos:column="67"/></argument_list></sizeof><operator pos:line="82" pos:column="67">-<pos:position pos:line="82" pos:column="68"/></operator><literal type="number" pos:line="82" pos:column="68">1<pos:position pos:line="82" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="70"/></argument_list></call> <operator pos:line="82" pos:column="71">||<pos:position pos:line="82" pos:column="73"/></operator>
          <call><name pos:line="83" pos:column="11">strncasecompare<pos:position pos:line="83" pos:column="26"/></name><argument_list pos:line="83" pos:column="26">(<argument><expr><name pos:line="83" pos:column="27">path<pos:position pos:line="83" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="33">DICT_DEFINE3<pos:position pos:line="83" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="83" pos:column="47">sizeof<argument_list pos:line="83" pos:column="53">(<argument><expr><name pos:line="83" pos:column="54">DICT_DEFINE3<pos:position pos:line="83" pos:column="66"/></name></expr></argument>)<pos:position pos:line="83" pos:column="67"/></argument_list></sizeof><operator pos:line="83" pos:column="67">-<pos:position pos:line="83" pos:column="68"/></operator><literal type="number" pos:line="83" pos:column="68">1<pos:position pos:line="83" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="71"/></condition><then pos:line="83" pos:column="71"> <block pos:line="83" pos:column="72">{

    <expr_stmt><expr><name pos:line="85" pos:column="5">word<pos:position pos:line="85" pos:column="9"/></name> <operator pos:line="85" pos:column="10">=<pos:position pos:line="85" pos:column="11"/></operator> <call><name pos:line="85" pos:column="12">strchr<pos:position pos:line="85" pos:column="18"/></name><argument_list pos:line="85" pos:column="18">(<argument><expr><name pos:line="85" pos:column="19">path<pos:position pos:line="85" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="85" pos:column="25">':'<pos:position pos:line="85" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="30"/></expr_stmt>
    <if pos:line="86" pos:column="5">if<condition pos:line="86" pos:column="7">(<expr><name pos:line="86" pos:column="8">word<pos:position pos:line="86" pos:column="12"/></name></expr>)<pos:position pos:line="86" pos:column="13"/></condition><then pos:line="86" pos:column="13"> <block pos:line="86" pos:column="14">{
      <expr_stmt><expr><name pos:line="87" pos:column="7">word<pos:position pos:line="87" pos:column="11"/></name><operator pos:line="87" pos:column="11">++<pos:position pos:line="87" pos:column="13"/></operator></expr>;<pos:position pos:line="87" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="88" pos:column="7">database<pos:position pos:line="88" pos:column="15"/></name> <operator pos:line="88" pos:column="16">=<pos:position pos:line="88" pos:column="17"/></operator> <call><name pos:line="88" pos:column="18">strchr<pos:position pos:line="88" pos:column="24"/></name><argument_list pos:line="88" pos:column="24">(<argument><expr><name pos:line="88" pos:column="25">word<pos:position pos:line="88" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="88" pos:column="31">':'<pos:position pos:line="88" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="36"/></expr_stmt>
      <if pos:line="89" pos:column="7">if<condition pos:line="89" pos:column="9">(<expr><name pos:line="89" pos:column="10">database<pos:position pos:line="89" pos:column="18"/></name></expr>)<pos:position pos:line="89" pos:column="19"/></condition><then pos:line="89" pos:column="19"> <block pos:line="89" pos:column="20">{
        <expr_stmt><expr><operator pos:line="90" pos:column="9">*<pos:position pos:line="90" pos:column="10"/></operator><name pos:line="90" pos:column="10">database<pos:position pos:line="90" pos:column="18"/></name><operator pos:line="90" pos:column="18">++<pos:position pos:line="90" pos:column="20"/></operator> <operator pos:line="90" pos:column="21">=<pos:position pos:line="90" pos:column="22"/></operator> <operator pos:line="90" pos:column="23">(<pos:position pos:line="90" pos:column="24"/></operator><name pos:line="90" pos:column="24">char<pos:position pos:line="90" pos:column="28"/></name><operator pos:line="90" pos:column="28">)<pos:position pos:line="90" pos:column="29"/></operator><literal type="number" pos:line="90" pos:column="29">0<pos:position pos:line="90" pos:column="30"/></literal></expr>;<pos:position pos:line="90" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="91" pos:column="9">nthdef<pos:position pos:line="91" pos:column="15"/></name> <operator pos:line="91" pos:column="16">=<pos:position pos:line="91" pos:column="17"/></operator> <call><name pos:line="91" pos:column="18">strchr<pos:position pos:line="91" pos:column="24"/></name><argument_list pos:line="91" pos:column="24">(<argument><expr><name pos:line="91" pos:column="25">database<pos:position pos:line="91" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="91" pos:column="35">':'<pos:position pos:line="91" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="40"/></expr_stmt>
        <if pos:line="92" pos:column="9">if<condition pos:line="92" pos:column="11">(<expr><name pos:line="92" pos:column="12">nthdef<pos:position pos:line="92" pos:column="18"/></name></expr>)<pos:position pos:line="92" pos:column="19"/></condition><then pos:line="92" pos:column="19"> <block pos:line="92" pos:column="20">{
          <expr_stmt><expr><operator pos:line="93" pos:column="11">*<pos:position pos:line="93" pos:column="12"/></operator><name pos:line="93" pos:column="12">nthdef<pos:position pos:line="93" pos:column="18"/></name> <operator pos:line="93" pos:column="19">=<pos:position pos:line="93" pos:column="20"/></operator> <operator pos:line="93" pos:column="21">(<pos:position pos:line="93" pos:column="22"/></operator><name pos:line="93" pos:column="22">char<pos:position pos:line="93" pos:column="26"/></name><operator pos:line="93" pos:column="26">)<pos:position pos:line="93" pos:column="27"/></operator><literal type="number" pos:line="93" pos:column="27">0<pos:position pos:line="93" pos:column="28"/></literal></expr>;<pos:position pos:line="93" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="94" pos:column="10"/></block></then></if>
      }<pos:position pos:line="95" pos:column="8"/></block></then></if>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if>

    <if pos:line="98" pos:column="5">if<condition pos:line="98" pos:column="7">(<expr><operator pos:line="98" pos:column="8">(<pos:position pos:line="98" pos:column="9"/></operator><name pos:line="98" pos:column="9">word<pos:position pos:line="98" pos:column="13"/></name> <operator pos:line="98" pos:column="14">==<pos:position pos:line="98" pos:column="16"/></operator> <name pos:line="98" pos:column="17">NULL<pos:position pos:line="98" pos:column="21"/></name><operator pos:line="98" pos:column="21">)<pos:position pos:line="98" pos:column="22"/></operator> <operator pos:line="98" pos:column="23">||<pos:position pos:line="98" pos:column="25"/></operator> <operator pos:line="98" pos:column="26">(<pos:position pos:line="98" pos:column="27"/></operator><operator pos:line="98" pos:column="27">*<pos:position pos:line="98" pos:column="28"/></operator><name pos:line="98" pos:column="28">word<pos:position pos:line="98" pos:column="32"/></name> <operator pos:line="98" pos:column="33">==<pos:position pos:line="98" pos:column="35"/></operator> <operator pos:line="98" pos:column="36">(<pos:position pos:line="98" pos:column="37"/></operator><name pos:line="98" pos:column="37">char<pos:position pos:line="98" pos:column="41"/></name><operator pos:line="98" pos:column="41">)<pos:position pos:line="98" pos:column="42"/></operator><literal type="number" pos:line="98" pos:column="42">0<pos:position pos:line="98" pos:column="43"/></literal><operator pos:line="98" pos:column="43">)<pos:position pos:line="98" pos:column="44"/></operator></expr>)<pos:position pos:line="98" pos:column="45"/></condition><then pos:line="98" pos:column="45"> <block pos:line="98" pos:column="46">{
      <expr_stmt><expr><call><name pos:line="99" pos:column="7">infof<pos:position pos:line="99" pos:column="12"/></name><argument_list pos:line="99" pos:column="12">(<argument><expr><name pos:line="99" pos:column="13">data<pos:position pos:line="99" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="19">"lookup word is missing\n"<pos:position pos:line="99" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name pos:line="100" pos:column="7">word<pos:position pos:line="100" pos:column="11"/></name><operator pos:line="100" pos:column="11">=<pos:position pos:line="100" pos:column="12"/></operator><operator pos:line="100" pos:column="12">(<pos:position pos:line="100" pos:column="13"/></operator><name pos:line="100" pos:column="13">char<pos:position pos:line="100" pos:column="17"/></name> <operator pos:line="100" pos:column="18">*<pos:position pos:line="100" pos:column="19"/></operator><operator pos:line="100" pos:column="19">)<pos:position pos:line="100" pos:column="20"/></operator><literal type="string" pos:line="100" pos:column="20">"default"<pos:position pos:line="100" pos:column="29"/></literal></expr>;<pos:position pos:line="100" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>
    <if pos:line="102" pos:column="5">if<condition pos:line="102" pos:column="7">(<expr><operator pos:line="102" pos:column="8">(<pos:position pos:line="102" pos:column="9"/></operator><name pos:line="102" pos:column="9">database<pos:position pos:line="102" pos:column="17"/></name> <operator pos:line="102" pos:column="18">==<pos:position pos:line="102" pos:column="20"/></operator> <name pos:line="102" pos:column="21">NULL<pos:position pos:line="102" pos:column="25"/></name><operator pos:line="102" pos:column="25">)<pos:position pos:line="102" pos:column="26"/></operator> <operator pos:line="102" pos:column="27">||<pos:position pos:line="102" pos:column="29"/></operator> <operator pos:line="102" pos:column="30">(<pos:position pos:line="102" pos:column="31"/></operator><operator pos:line="102" pos:column="31">*<pos:position pos:line="102" pos:column="32"/></operator><name pos:line="102" pos:column="32">database<pos:position pos:line="102" pos:column="40"/></name> <operator pos:line="102" pos:column="41">==<pos:position pos:line="102" pos:column="43"/></operator> <operator pos:line="102" pos:column="44">(<pos:position pos:line="102" pos:column="45"/></operator><name pos:line="102" pos:column="45">char<pos:position pos:line="102" pos:column="49"/></name><operator pos:line="102" pos:column="49">)<pos:position pos:line="102" pos:column="50"/></operator><literal type="number" pos:line="102" pos:column="50">0<pos:position pos:line="102" pos:column="51"/></literal><operator pos:line="102" pos:column="51">)<pos:position pos:line="102" pos:column="52"/></operator></expr>)<pos:position pos:line="102" pos:column="53"/></condition><then pos:line="102" pos:column="53"> <block pos:line="102" pos:column="54">{
      <expr_stmt><expr><name pos:line="103" pos:column="7">database<pos:position pos:line="103" pos:column="15"/></name> <operator pos:line="103" pos:column="16">=<pos:position pos:line="103" pos:column="17"/></operator> <operator pos:line="103" pos:column="18">(<pos:position pos:line="103" pos:column="19"/></operator><name pos:line="103" pos:column="19">char<pos:position pos:line="103" pos:column="23"/></name> <operator pos:line="103" pos:column="24">*<pos:position pos:line="103" pos:column="25"/></operator><operator pos:line="103" pos:column="25">)<pos:position pos:line="103" pos:column="26"/></operator><literal type="string" pos:line="103" pos:column="26">"!"<pos:position pos:line="103" pos:column="29"/></literal></expr>;<pos:position pos:line="103" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="104" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="106" pos:column="5">eword<pos:position pos:line="106" pos:column="10"/></name> <operator pos:line="106" pos:column="11">=<pos:position pos:line="106" pos:column="12"/></operator> <call><name pos:line="106" pos:column="13">unescape_word<pos:position pos:line="106" pos:column="26"/></name><argument_list pos:line="106" pos:column="26">(<argument><expr><name pos:line="106" pos:column="27">data<pos:position pos:line="106" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="33">word<pos:position pos:line="106" pos:column="37"/></name></expr></argument>)<pos:position pos:line="106" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="39"/></expr_stmt>
    <if pos:line="107" pos:column="5">if<condition pos:line="107" pos:column="7">(<expr><operator pos:line="107" pos:column="8">!<pos:position pos:line="107" pos:column="9"/></operator><name pos:line="107" pos:column="9">eword<pos:position pos:line="107" pos:column="14"/></name></expr>)<pos:position pos:line="107" pos:column="15"/></condition><then pos:line="107" pos:column="15">
      <block type="pseudo"><return pos:line="108" pos:column="7">return <expr><name pos:line="108" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="108" pos:column="33"/></name></expr>;<pos:position pos:line="108" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="110" pos:column="5">result<pos:position pos:line="110" pos:column="11"/></name> <operator pos:line="110" pos:column="12">=<pos:position pos:line="110" pos:column="13"/></operator> <call><name pos:line="110" pos:column="14">Curl_sendf<pos:position pos:line="110" pos:column="24"/></name><argument_list pos:line="110" pos:column="24">(<argument><expr><name pos:line="110" pos:column="25">sockfd<pos:position pos:line="110" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="33">conn<pos:position pos:line="110" pos:column="37"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="111" pos:column="25">"CLIENT "<pos:position pos:line="111" pos:column="34"/></literal> <name pos:line="111" pos:column="35">LIBCURL_NAME<pos:position pos:line="111" pos:column="47"/></name> <literal type="string" pos:line="111" pos:column="48">" "<pos:position pos:line="111" pos:column="51"/></literal> <name pos:line="111" pos:column="52">LIBCURL_VERSION<pos:position pos:line="111" pos:column="67"/></name> <literal type="string" pos:line="111" pos:column="68">"\r\n"<pos:position pos:line="111" pos:column="74"/></literal>
                        <literal type="string" pos:line="112" pos:column="25">"DEFINE "<pos:position pos:line="112" pos:column="34"/></literal>
                        <literal type="string" pos:line="113" pos:column="25">"%s "<pos:position pos:line="113" pos:column="30"/></literal>     <comment type="block" pos:line="113" pos:column="35">/* database */</comment>
                        <literal type="string" pos:line="114" pos:column="25">"%s\r\n"<pos:position pos:line="114" pos:column="33"/></literal>  <comment type="block" pos:line="114" pos:column="35">/* word */</comment>
                        <literal type="string" pos:line="115" pos:column="25">"QUIT\r\n"<pos:position pos:line="115" pos:column="35"/></literal></expr></argument>,
                        <argument><expr><name pos:line="116" pos:column="25">database<pos:position pos:line="116" pos:column="33"/></name></expr></argument>,
                        <argument><expr><name pos:line="117" pos:column="25">eword<pos:position pos:line="117" pos:column="30"/></name></expr></argument>)<pos:position pos:line="117" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="119" pos:column="5">free<pos:position pos:line="119" pos:column="9"/></name><argument_list pos:line="119" pos:column="9">(<argument><expr><name pos:line="119" pos:column="10">eword<pos:position pos:line="119" pos:column="15"/></name></expr></argument>)<pos:position pos:line="119" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="17"/></expr_stmt>

    <if pos:line="121" pos:column="5">if<condition pos:line="121" pos:column="7">(<expr><name pos:line="121" pos:column="8">result<pos:position pos:line="121" pos:column="14"/></name></expr>)<pos:position pos:line="121" pos:column="15"/></condition><then pos:line="121" pos:column="15"> <block pos:line="121" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="122" pos:column="7">failf<pos:position pos:line="122" pos:column="12"/></name><argument_list pos:line="122" pos:column="12">(<argument><expr><name pos:line="122" pos:column="13">data<pos:position pos:line="122" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="19">"Failed sending DICT request"<pos:position pos:line="122" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="50"/></expr_stmt>
      <return pos:line="123" pos:column="7">return <expr><name pos:line="123" pos:column="14">result<pos:position pos:line="123" pos:column="20"/></name></expr>;<pos:position pos:line="123" pos:column="21"/></return>
    }<pos:position pos:line="124" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="125" pos:column="5">Curl_setup_transfer<pos:position pos:line="125" pos:column="24"/></name><argument_list pos:line="125" pos:column="24">(<argument><expr><name pos:line="125" pos:column="25">conn<pos:position pos:line="125" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="31">FIRSTSOCKET<pos:position pos:line="125" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="44">-<pos:position pos:line="125" pos:column="45"/></operator><literal type="number" pos:line="125" pos:column="45">1<pos:position pos:line="125" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="125" pos:column="48">FALSE<pos:position pos:line="125" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="55">bytecount<pos:position pos:line="125" pos:column="64"/></name></expr></argument>,
                        <argument><expr><operator pos:line="126" pos:column="25">-<pos:position pos:line="126" pos:column="26"/></operator><literal type="number" pos:line="126" pos:column="26">1<pos:position pos:line="126" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="126" pos:column="29">NULL<pos:position pos:line="126" pos:column="33"/></name></expr></argument>)<pos:position pos:line="126" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="35"/></expr_stmt> <comment type="block" pos:line="126" pos:column="36">/* no upload */</comment>
  }<pos:position pos:line="127" pos:column="4"/></block></then></if></elseif>
  <else pos:line="128" pos:column="3">else <block pos:line="128" pos:column="8">{

    <expr_stmt><expr><name pos:line="130" pos:column="5">ppath<pos:position pos:line="130" pos:column="10"/></name> <operator pos:line="130" pos:column="11">=<pos:position pos:line="130" pos:column="12"/></operator> <call><name pos:line="130" pos:column="13">strchr<pos:position pos:line="130" pos:column="19"/></name><argument_list pos:line="130" pos:column="19">(<argument><expr><name pos:line="130" pos:column="20">path<pos:position pos:line="130" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="130" pos:column="26">'/'<pos:position pos:line="130" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="31"/></expr_stmt>
    <if pos:line="131" pos:column="5">if<condition pos:line="131" pos:column="7">(<expr><name pos:line="131" pos:column="8">ppath<pos:position pos:line="131" pos:column="13"/></name></expr>)<pos:position pos:line="131" pos:column="14"/></condition><then pos:line="131" pos:column="14"> <block pos:line="131" pos:column="15">{
      <decl_stmt><decl><type><name pos:line="132" pos:column="7">int<pos:position pos:line="132" pos:column="10"/></name></type> <name pos:line="132" pos:column="11">i<pos:position pos:line="132" pos:column="12"/></name></decl>;<pos:position pos:line="132" pos:column="13"/></decl_stmt>

      <expr_stmt><expr><name pos:line="134" pos:column="7">ppath<pos:position pos:line="134" pos:column="12"/></name><operator pos:line="134" pos:column="12">++<pos:position pos:line="134" pos:column="14"/></operator></expr>;<pos:position pos:line="134" pos:column="15"/></expr_stmt>
      <for pos:line="135" pos:column="7">for<control pos:line="135" pos:column="10">(<init><expr><name pos:line="135" pos:column="11">i<pos:position pos:line="135" pos:column="12"/></name> <operator pos:line="135" pos:column="13">=<pos:position pos:line="135" pos:column="14"/></operator> <literal type="number" pos:line="135" pos:column="15">0<pos:position pos:line="135" pos:column="16"/></literal></expr>;<pos:position pos:line="135" pos:column="17"/></init> <condition><expr><name><name pos:line="135" pos:column="18">ppath<pos:position pos:line="135" pos:column="23"/></name><index pos:line="135" pos:column="23">[<expr><name pos:line="135" pos:column="24">i<pos:position pos:line="135" pos:column="25"/></name></expr>]<pos:position pos:line="135" pos:column="26"/></index></name></expr>;<pos:position pos:line="135" pos:column="27"/></condition> <incr><expr><name pos:line="135" pos:column="28">i<pos:position pos:line="135" pos:column="29"/></name><operator pos:line="135" pos:column="29">++<pos:position pos:line="135" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="135" pos:column="32"/></control> <block pos:line="135" pos:column="33">{
        <if pos:line="136" pos:column="9">if<condition pos:line="136" pos:column="11">(<expr><name><name pos:line="136" pos:column="12">ppath<pos:position pos:line="136" pos:column="17"/></name><index pos:line="136" pos:column="17">[<expr><name pos:line="136" pos:column="18">i<pos:position pos:line="136" pos:column="19"/></name></expr>]<pos:position pos:line="136" pos:column="20"/></index></name> <operator pos:line="136" pos:column="21">==<pos:position pos:line="136" pos:column="23"/></operator> <literal type="char" pos:line="136" pos:column="24">':'<pos:position pos:line="136" pos:column="27"/></literal></expr>)<pos:position pos:line="136" pos:column="28"/></condition><then pos:line="136" pos:column="28">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="137" pos:column="11">ppath<pos:position pos:line="137" pos:column="16"/></name><index pos:line="137" pos:column="16">[<expr><name pos:line="137" pos:column="17">i<pos:position pos:line="137" pos:column="18"/></name></expr>]<pos:position pos:line="137" pos:column="19"/></index></name> <operator pos:line="137" pos:column="20">=<pos:position pos:line="137" pos:column="21"/></operator> <literal type="char" pos:line="137" pos:column="22">' '<pos:position pos:line="137" pos:column="25"/></literal></expr>;<pos:position pos:line="137" pos:column="26"/></expr_stmt></block></then></if>
      }<pos:position pos:line="138" pos:column="8"/></block></for>
      <expr_stmt><expr><name pos:line="139" pos:column="7">result<pos:position pos:line="139" pos:column="13"/></name> <operator pos:line="139" pos:column="14">=<pos:position pos:line="139" pos:column="15"/></operator> <call><name pos:line="139" pos:column="16">Curl_sendf<pos:position pos:line="139" pos:column="26"/></name><argument_list pos:line="139" pos:column="26">(<argument><expr><name pos:line="139" pos:column="27">sockfd<pos:position pos:line="139" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="35">conn<pos:position pos:line="139" pos:column="39"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="140" pos:column="27">"CLIENT "<pos:position pos:line="140" pos:column="36"/></literal> <name pos:line="140" pos:column="37">LIBCURL_NAME<pos:position pos:line="140" pos:column="49"/></name> <literal type="string" pos:line="140" pos:column="50">" "<pos:position pos:line="140" pos:column="53"/></literal> <name pos:line="140" pos:column="54">LIBCURL_VERSION<pos:position pos:line="140" pos:column="69"/></name> <literal type="string" pos:line="140" pos:column="70">"\r\n"<pos:position pos:line="140" pos:column="76"/></literal>
                          <literal type="string" pos:line="141" pos:column="27">"%s\r\n"<pos:position pos:line="141" pos:column="35"/></literal>
                          <literal type="string" pos:line="142" pos:column="27">"QUIT\r\n"<pos:position pos:line="142" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="142" pos:column="39">ppath<pos:position pos:line="142" pos:column="44"/></name></expr></argument>)<pos:position pos:line="142" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="46"/></expr_stmt>
      <if pos:line="143" pos:column="7">if<condition pos:line="143" pos:column="9">(<expr><name pos:line="143" pos:column="10">result<pos:position pos:line="143" pos:column="16"/></name></expr>)<pos:position pos:line="143" pos:column="17"/></condition><then pos:line="143" pos:column="17"> <block pos:line="143" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="144" pos:column="9">failf<pos:position pos:line="144" pos:column="14"/></name><argument_list pos:line="144" pos:column="14">(<argument><expr><name pos:line="144" pos:column="15">data<pos:position pos:line="144" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="21">"Failed sending DICT request"<pos:position pos:line="144" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="52"/></expr_stmt>
        <return pos:line="145" pos:column="9">return <expr><name pos:line="145" pos:column="16">result<pos:position pos:line="145" pos:column="22"/></name></expr>;<pos:position pos:line="145" pos:column="23"/></return>
      }<pos:position pos:line="146" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="148" pos:column="7">Curl_setup_transfer<pos:position pos:line="148" pos:column="26"/></name><argument_list pos:line="148" pos:column="26">(<argument><expr><name pos:line="148" pos:column="27">conn<pos:position pos:line="148" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="33">FIRSTSOCKET<pos:position pos:line="148" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="148" pos:column="46">-<pos:position pos:line="148" pos:column="47"/></operator><literal type="number" pos:line="148" pos:column="47">1<pos:position pos:line="148" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="148" pos:column="50">FALSE<pos:position pos:line="148" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="57">bytecount<pos:position pos:line="148" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="148" pos:column="68">-<pos:position pos:line="148" pos:column="69"/></operator><literal type="number" pos:line="148" pos:column="69">1<pos:position pos:line="148" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="148" pos:column="72">NULL<pos:position pos:line="148" pos:column="76"/></name></expr></argument>)<pos:position pos:line="148" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="149" pos:column="6"/></block></then></if>
  }<pos:position pos:line="150" pos:column="4"/></block></else></if>

  <return pos:line="152" pos:column="3">return <expr><name pos:line="152" pos:column="10">CURLE_OK<pos:position pos:line="152" pos:column="18"/></name></expr>;<pos:position pos:line="152" pos:column="19"/></return>
}<pos:position pos:line="153" pos:column="2"/></block></function></unit>

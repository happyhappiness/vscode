<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_91_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">void<pos:position pos:line="1" pos:column="14"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="15"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">headerfile<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">pPassphrase<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">NULL<pos:position pos:line="6" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>

  <decl_stmt><decl><specifier pos:line="8" pos:column="3">static<pos:position pos:line="8" pos:column="9"/></specifier> <type><specifier pos:line="8" pos:column="10">const<pos:position pos:line="8" pos:column="15"/></specifier> <name pos:line="8" pos:column="16">char<pos:position pos:line="8" pos:column="20"/></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">pCertFile<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><literal type="string" pos:line="8" pos:column="34">"testcert.pem"<pos:position pos:line="8" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="9" pos:column="3">static<pos:position pos:line="9" pos:column="9"/></specifier> <type><specifier pos:line="9" pos:column="10">const<pos:position pos:line="9" pos:column="15"/></specifier> <name pos:line="9" pos:column="16">char<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">pCACertFile<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><literal type="string" pos:line="9" pos:column="36">"cacert.pem"<pos:position pos:line="9" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="10" pos:column="3">static<pos:position pos:line="10" pos:column="9"/></specifier> <type><specifier pos:line="10" pos:column="10">const<pos:position pos:line="10" pos:column="15"/></specifier> <name pos:line="10" pos:column="16">char<pos:position pos:line="10" pos:column="20"/></name> <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">pHeaderFile<pos:position pos:line="10" pos:column="33"/></name> <init pos:line="10" pos:column="34">= <expr><literal type="string" pos:line="10" pos:column="36">"dumpit"<pos:position pos:line="10" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="45"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="12" pos:column="3">const<pos:position pos:line="12" pos:column="8"/></specifier> <name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">pKeyName<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="13" pos:column="3">const<pos:position pos:line="13" pos:column="8"/></specifier> <name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">pKeyType<pos:position pos:line="13" pos:column="23"/></name></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="15" pos:column="3">const<pos:position pos:line="15" pos:column="8"/></specifier> <name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">pEngine<pos:position pos:line="15" pos:column="22"/></name></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>

<cpp:ifdef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifdef<pos:position pos:line="17" pos:column="7"/></cpp:directive> <name pos:line="17" pos:column="8">USE_ENGINE<pos:position pos:line="17" pos:column="18"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="18" pos:column="3">pKeyName<pos:position pos:line="18" pos:column="11"/></name>  <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <literal type="string" pos:line="18" pos:column="15">"rsa_test"<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">pKeyType<pos:position pos:line="19" pos:column="11"/></name>  <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <literal type="string" pos:line="19" pos:column="15">"ENG"<pos:position pos:line="19" pos:column="20"/></literal></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">pEngine<pos:position pos:line="20" pos:column="10"/></name>   <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <literal type="string" pos:line="20" pos:column="15">"chil"<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>            <comment type="block" pos:line="20" pos:column="34">/* for nChiper HSM... */</comment>
<cpp:else pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">else<pos:position pos:line="21" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="22" pos:column="3">pKeyName<pos:position pos:line="22" pos:column="11"/></name>  <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <literal type="string" pos:line="22" pos:column="15">"testkey.pem"<pos:position pos:line="22" pos:column="28"/></literal></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="23" pos:column="3">pKeyType<pos:position pos:line="23" pos:column="11"/></name>  <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <literal type="string" pos:line="23" pos:column="15">"PEM"<pos:position pos:line="23" pos:column="20"/></literal></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="24" pos:column="3">pEngine<pos:position pos:line="24" pos:column="10"/></name>   <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">NULL<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="27" pos:column="3">headerfile<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">fopen<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">pHeaderFile<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="35">"wb"<pos:position pos:line="27" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="29" pos:column="3">curl_global_init<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">CURL_GLOBAL_DEFAULT<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><name pos:line="31" pos:column="3">curl<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <call><name pos:line="31" pos:column="10">curl_easy_init<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">()<pos:position pos:line="31" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">(<expr><name pos:line="32" pos:column="6">curl<pos:position pos:line="32" pos:column="10"/></name></expr>)<pos:position pos:line="32" pos:column="11"/></condition><then pos:line="32" pos:column="11"> <block pos:line="32" pos:column="12">{
    <comment type="block" pos:line="33" pos:column="5">/* what call to write: */</comment>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">curl_easy_setopt<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">curl<pos:position pos:line="34" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="28">CURLOPT_URL<pos:position pos:line="34" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="41">"HTTPS://your.favourite.ssl.site"<pos:position pos:line="34" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">curl_easy_setopt<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name pos:line="35" pos:column="22">curl<pos:position pos:line="35" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="28">CURLOPT_HEADERDATA<pos:position pos:line="35" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="48">headerfile<pos:position pos:line="35" pos:column="58"/></name></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>

    <do pos:line="37" pos:column="5">do <block pos:line="37" pos:column="8">{ <comment type="block" pos:line="37" pos:column="10">/* dummy loop, just to break out from */</comment>
      <if pos:line="38" pos:column="7">if<condition pos:line="38" pos:column="9">(<expr><name pos:line="38" pos:column="10">pEngine<pos:position pos:line="38" pos:column="17"/></name></expr>)<pos:position pos:line="38" pos:column="18"/></condition><then pos:line="38" pos:column="18"> <block pos:line="38" pos:column="19">{
        <comment type="block" pos:line="39" pos:column="9">/* use crypto engine */</comment>
        <if pos:line="40" pos:column="9">if<condition pos:line="40" pos:column="11">(<expr><call><name pos:line="40" pos:column="12">curl_easy_setopt<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><name pos:line="40" pos:column="29">curl<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="35">CURLOPT_SSLENGINE<pos:position pos:line="40" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="54">pEngine<pos:position pos:line="40" pos:column="61"/></name></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call> <operator pos:line="40" pos:column="63">!=<pos:position pos:line="40" pos:column="65"/></operator> <name pos:line="40" pos:column="66">CURLE_OK<pos:position pos:line="40" pos:column="74"/></name></expr>)<pos:position pos:line="40" pos:column="75"/></condition><then pos:line="40" pos:column="75"> <block pos:line="40" pos:column="76">{
          <comment type="block" pos:line="41" pos:column="11">/* load the crypto engine */</comment>
          <expr_stmt><expr><call><name pos:line="42" pos:column="11">fprintf<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><name pos:line="42" pos:column="19">stderr<pos:position pos:line="42" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="27">"can't set crypto engine\n"<pos:position pos:line="42" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="56"/></expr_stmt>
          <break pos:line="43" pos:column="11">break;<pos:position pos:line="43" pos:column="17"/></break>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>
        <if pos:line="45" pos:column="9">if<condition pos:line="45" pos:column="11">(<expr><call><name pos:line="45" pos:column="12">curl_easy_setopt<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><name pos:line="45" pos:column="29">curl<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="35">CURLOPT_SSLENGINE_DEFAULT<pos:position pos:line="45" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="62">1L<pos:position pos:line="45" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="65"/></argument_list></call> <operator pos:line="45" pos:column="66">!=<pos:position pos:line="45" pos:column="68"/></operator> <name pos:line="45" pos:column="69">CURLE_OK<pos:position pos:line="45" pos:column="77"/></name></expr>)<pos:position pos:line="45" pos:column="78"/></condition><then pos:line="45" pos:column="78"> <block pos:line="45" pos:column="79">{
          <comment type="block" pos:line="46" pos:column="11">/* set the crypto engine as default */</comment>
          <comment type="block" pos:line="47" pos:column="11">/* only needed for the first time you load
             a engine in a curl object... */</comment>
          <expr_stmt><expr><call><name pos:line="49" pos:column="11">fprintf<pos:position pos:line="49" pos:column="18"/></name><argument_list pos:line="49" pos:column="18">(<argument><expr><name pos:line="49" pos:column="19">stderr<pos:position pos:line="49" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="27">"can't set crypto engine as default\n"<pos:position pos:line="49" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="67"/></expr_stmt>
          <break pos:line="50" pos:column="11">break;<pos:position pos:line="50" pos:column="17"/></break>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
      }<pos:position pos:line="52" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="53" pos:column="7">/* cert is stored PEM coded in file... */</comment>
      <comment type="block" pos:line="54" pos:column="7">/* since PEM is default, we needn't set it for PEM */</comment>
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">curl_easy_setopt<pos:position pos:line="55" pos:column="23"/></name><argument_list pos:line="55" pos:column="23">(<argument><expr><name pos:line="55" pos:column="24">curl<pos:position pos:line="55" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="30">CURLOPT_SSLCERTTYPE<pos:position pos:line="55" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="51">"PEM"<pos:position pos:line="55" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="58"/></expr_stmt>

      <comment type="block" pos:line="57" pos:column="7">/* set the cert for client authentication */</comment>
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">curl_easy_setopt<pos:position pos:line="58" pos:column="23"/></name><argument_list pos:line="58" pos:column="23">(<argument><expr><name pos:line="58" pos:column="24">curl<pos:position pos:line="58" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="30">CURLOPT_SSLCERT<pos:position pos:line="58" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="47">pCertFile<pos:position pos:line="58" pos:column="56"/></name></expr></argument>)<pos:position pos:line="58" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="58"/></expr_stmt>

      <comment type="block" pos:line="60" pos:column="7">/* sorry, for engine we must set the passphrase
         (if the key has one...) */</comment>
      <if pos:line="62" pos:column="7">if<condition pos:line="62" pos:column="9">(<expr><name pos:line="62" pos:column="10">pPassphrase<pos:position pos:line="62" pos:column="21"/></name></expr>)<pos:position pos:line="62" pos:column="22"/></condition><then pos:line="62" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="9">curl_easy_setopt<pos:position pos:line="63" pos:column="25"/></name><argument_list pos:line="63" pos:column="25">(<argument><expr><name pos:line="63" pos:column="26">curl<pos:position pos:line="63" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="32">CURLOPT_KEYPASSWD<pos:position pos:line="63" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="51">pPassphrase<pos:position pos:line="63" pos:column="62"/></name></expr></argument>)<pos:position pos:line="63" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="64"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="65" pos:column="7">/* if we use a key stored in a crypto engine,
         we must set the key type to "ENG" */</comment>
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">curl_easy_setopt<pos:position pos:line="67" pos:column="23"/></name><argument_list pos:line="67" pos:column="23">(<argument><expr><name pos:line="67" pos:column="24">curl<pos:position pos:line="67" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="30">CURLOPT_SSLKEYTYPE<pos:position pos:line="67" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="50">pKeyType<pos:position pos:line="67" pos:column="58"/></name></expr></argument>)<pos:position pos:line="67" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="60"/></expr_stmt>

      <comment type="block" pos:line="69" pos:column="7">/* set the private key (file or ID in engine) */</comment>
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">curl_easy_setopt<pos:position pos:line="70" pos:column="23"/></name><argument_list pos:line="70" pos:column="23">(<argument><expr><name pos:line="70" pos:column="24">curl<pos:position pos:line="70" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="30">CURLOPT_SSLKEY<pos:position pos:line="70" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="46">pKeyName<pos:position pos:line="70" pos:column="54"/></name></expr></argument>)<pos:position pos:line="70" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="56"/></expr_stmt>

      <comment type="block" pos:line="72" pos:column="7">/* set the file with the certs vaildating the server */</comment>
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">curl_easy_setopt<pos:position pos:line="73" pos:column="23"/></name><argument_list pos:line="73" pos:column="23">(<argument><expr><name pos:line="73" pos:column="24">curl<pos:position pos:line="73" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="30">CURLOPT_CAINFO<pos:position pos:line="73" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="46">pCACertFile<pos:position pos:line="73" pos:column="57"/></name></expr></argument>)<pos:position pos:line="73" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="59"/></expr_stmt>

      <comment type="block" pos:line="75" pos:column="7">/* disconnect if we can't validate server's cert */</comment>
      <expr_stmt><expr><call><name pos:line="76" pos:column="7">curl_easy_setopt<pos:position pos:line="76" pos:column="23"/></name><argument_list pos:line="76" pos:column="23">(<argument><expr><name pos:line="76" pos:column="24">curl<pos:position pos:line="76" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="30">CURLOPT_SSL_VERIFYPEER<pos:position pos:line="76" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="54">1L<pos:position pos:line="76" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="58"/></expr_stmt>

      <comment type="block" pos:line="78" pos:column="7">/* Perform the request, res will get the return code */</comment>
      <expr_stmt><expr><name pos:line="79" pos:column="7">res<pos:position pos:line="79" pos:column="10"/></name> <operator pos:line="79" pos:column="11">=<pos:position pos:line="79" pos:column="12"/></operator> <call><name pos:line="79" pos:column="13">curl_easy_perform<pos:position pos:line="79" pos:column="30"/></name><argument_list pos:line="79" pos:column="30">(<argument><expr><name pos:line="79" pos:column="31">curl<pos:position pos:line="79" pos:column="35"/></name></expr></argument>)<pos:position pos:line="79" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="37"/></expr_stmt>
      <comment type="block" pos:line="80" pos:column="7">/* Check for errors */</comment>
      <if pos:line="81" pos:column="7">if<condition pos:line="81" pos:column="9">(<expr><name pos:line="81" pos:column="10">res<pos:position pos:line="81" pos:column="13"/></name> <operator pos:line="81" pos:column="14">!=<pos:position pos:line="81" pos:column="16"/></operator> <name pos:line="81" pos:column="17">CURLE_OK<pos:position pos:line="81" pos:column="25"/></name></expr>)<pos:position pos:line="81" pos:column="26"/></condition><then pos:line="81" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="9">fprintf<pos:position pos:line="82" pos:column="16"/></name><argument_list pos:line="82" pos:column="16">(<argument><expr><name pos:line="82" pos:column="17">stderr<pos:position pos:line="82" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="25">"curl_easy_perform() failed: %s\n"<pos:position pos:line="82" pos:column="59"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="83" pos:column="17">curl_easy_strerror<pos:position pos:line="83" pos:column="35"/></name><argument_list pos:line="83" pos:column="35">(<argument><expr><name pos:line="83" pos:column="36">res<pos:position pos:line="83" pos:column="39"/></name></expr></argument>)<pos:position pos:line="83" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="42"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="85" pos:column="7">/* we are done... */</comment>
    }<pos:position pos:line="86" pos:column="6"/></block> while<condition pos:line="86" pos:column="12">(<expr><literal type="number" pos:line="86" pos:column="13">0<pos:position pos:line="86" pos:column="14"/></literal></expr>)<pos:position pos:line="86" pos:column="15"/></condition>;<pos:position pos:line="86" pos:column="16"/></do>
    <comment type="block" pos:line="87" pos:column="5">/* always cleanup */</comment>
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">curl_easy_cleanup<pos:position pos:line="88" pos:column="22"/></name><argument_list pos:line="88" pos:column="22">(<argument><expr><name pos:line="88" pos:column="23">curl<pos:position pos:line="88" pos:column="27"/></name></expr></argument>)<pos:position pos:line="88" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="91" pos:column="3">curl_global_cleanup<pos:position pos:line="91" pos:column="22"/></name><argument_list pos:line="91" pos:column="22">()<pos:position pos:line="91" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="25"/></expr_stmt>

  <return pos:line="93" pos:column="3">return <expr><literal type="number" pos:line="93" pos:column="10">0<pos:position pos:line="93" pos:column="11"/></literal></expr>;<pos:position pos:line="93" pos:column="12"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_249.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">Curl_connect_host<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name><name pos:line="2" pos:column="19">struct<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">SessionHandle<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">data<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>,
                  <parameter><decl><type><name><name pos:line="3" pos:column="19">struct<pos:position pos:line="3" pos:column="25"/></name> <name pos:line="3" pos:column="26">connectdata<pos:position pos:line="3" pos:column="37"/></name></name> <modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier><modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">conn<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="45"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">res<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">CURLE_OK<pos:position pos:line="5" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">urlchanged<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name pos:line="6" pos:column="20">FALSE<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

  <do pos:line="8" pos:column="3">do <block pos:line="8" pos:column="6">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">bool<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">async<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">bool<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">protocol_done<pos:position pos:line="10" pos:column="23"/></name><init pos:line="10" pos:column="23">=<expr><name pos:line="10" pos:column="24">TRUE<pos:position pos:line="10" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt> <comment type="block" pos:line="10" pos:column="30">/* will be TRUE always since this is only used
                                within the easy interface */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">Curl_pgrsTime<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">data<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="25">TIMER_STARTSINGLE<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">data<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">change<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">url_changed<pos:position pos:line="13" pos:column="29"/></name></name> <operator pos:line="13" pos:column="30">=<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">FALSE<pos:position pos:line="13" pos:column="37"/></name></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">res<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <call><name pos:line="14" pos:column="11">Curl_connect<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">data<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="30">conn<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="36">&amp;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="37">async<pos:position pos:line="14" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="44">&amp;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="45">protocol_done<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>

    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><operator pos:line="16" pos:column="8">(<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">CURLE_OK<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">==<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">res<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">)<pos:position pos:line="16" pos:column="25"/></operator> <operator pos:line="16" pos:column="26">&amp;&amp;<pos:position pos:line="16" pos:column="36"/></operator> <name pos:line="16" pos:column="29">async<pos:position pos:line="16" pos:column="34"/></name></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35"> <block pos:line="16" pos:column="36">{
      <comment type="block" pos:line="17" pos:column="7">/* Now, if async is TRUE here, we need to wait for the name
         to resolve */</comment>
      <expr_stmt><expr><name pos:line="19" pos:column="7">res<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <call><name pos:line="19" pos:column="13">Curl_wait_for_resolv<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><operator pos:line="19" pos:column="34">*<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">conn<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="41">NULL<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
      <if pos:line="20" pos:column="7">if<condition pos:line="20" pos:column="9">(<expr><name pos:line="20" pos:column="10">CURLE_OK<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">==<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">res<pos:position pos:line="20" pos:column="25"/></name></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26">
        <comment type="block" pos:line="21" pos:column="9">/* Resolved, continue with the connection */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="9">res<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">Curl_async_resolved<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><operator pos:line="22" pos:column="35">*<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">conn<pos:position pos:line="22" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="42">&amp;<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="43">protocol_done<pos:position pos:line="22" pos:column="56"/></name></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="58"/></expr_stmt></block></then>
      <else pos:line="23" pos:column="7">else
        <comment type="block" pos:line="24" pos:column="9">/* if we can't resolve, we kill this "connection" now */</comment>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">void<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">)<pos:position pos:line="25" pos:column="15"/></operator><call><name pos:line="25" pos:column="15">Curl_disconnect<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><operator pos:line="25" pos:column="31">*<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="32">conn<pos:position pos:line="25" pos:column="36"/></name></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt></block></else></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><name pos:line="27" pos:column="8">res<pos:position pos:line="27" pos:column="11"/></name></expr>)<pos:position pos:line="27" pos:column="12"/></condition><then pos:line="27" pos:column="12">
      <block type="pseudo"><break pos:line="28" pos:column="7">break;<pos:position pos:line="28" pos:column="13"/></break></block></then></if>

    <comment type="block" pos:line="30" pos:column="5">/* If a callback (or something) has altered the URL we should use within
       the Curl_connect(), we detect it here and act as if we are redirected
       to the new URL */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">urlchanged<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <name><name pos:line="33" pos:column="18">data<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">change<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">.<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="31">url_changed<pos:position pos:line="33" pos:column="42"/></name></name></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">CURLE_OK<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">==<pos:position pos:line="34" pos:column="21"/></operator> <name pos:line="34" pos:column="22">res<pos:position pos:line="34" pos:column="25"/></name><operator pos:line="34" pos:column="25">)<pos:position pos:line="34" pos:column="26"/></operator> <operator pos:line="34" pos:column="27">&amp;&amp;<pos:position pos:line="34" pos:column="37"/></operator> <name pos:line="34" pos:column="30">urlchanged<pos:position pos:line="34" pos:column="40"/></name></expr>)<pos:position pos:line="34" pos:column="41"/></condition><then pos:line="34" pos:column="41"> <block pos:line="34" pos:column="42">{
      <expr_stmt><expr><name pos:line="35" pos:column="7">res<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <call><name pos:line="35" pos:column="13">Curl_done<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">conn<pos:position pos:line="35" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="29">res<pos:position pos:line="35" pos:column="32"/></name></expr></argument>)<pos:position pos:line="35" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
      <if pos:line="36" pos:column="7">if<condition pos:line="36" pos:column="9">(<expr><name pos:line="36" pos:column="10">CURLE_OK<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">==<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">res<pos:position pos:line="36" pos:column="25"/></name></expr>)<pos:position pos:line="36" pos:column="26"/></condition><then pos:line="36" pos:column="26"> <block pos:line="36" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="37" pos:column="9">char<pos:position pos:line="37" pos:column="13"/></name> <modifier pos:line="37" pos:column="14">*<pos:position pos:line="37" pos:column="15"/></modifier></type><name pos:line="37" pos:column="15">gotourl<pos:position pos:line="37" pos:column="22"/></name> <init pos:line="37" pos:column="23">= <expr><call><name pos:line="37" pos:column="25">strdup<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name><name pos:line="37" pos:column="32">data<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">-&gt;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="38">change<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">.<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="45">url<pos:position pos:line="37" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="50"/></decl_stmt>
        <expr_stmt><expr><name pos:line="38" pos:column="9">res<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <call><name pos:line="38" pos:column="15">Curl_follow<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><name pos:line="38" pos:column="27">data<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="33">gotourl<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="42">FALSE<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
        <if pos:line="39" pos:column="9">if<condition pos:line="39" pos:column="11">(<expr><name pos:line="39" pos:column="12">res<pos:position pos:line="39" pos:column="15"/></name></expr>)<pos:position pos:line="39" pos:column="16"/></condition><then pos:line="39" pos:column="16">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="11">free<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><name pos:line="40" pos:column="16">gotourl<pos:position pos:line="40" pos:column="23"/></name></expr></argument>)<pos:position pos:line="40" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt></block></then></if>
      }<pos:position pos:line="41" pos:column="8"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
  }<pos:position pos:line="43" pos:column="4"/></block> while <condition pos:line="43" pos:column="11">(<expr><name pos:line="43" pos:column="12">urlchanged<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">&amp;&amp;<pos:position pos:line="43" pos:column="33"/></operator> <name pos:line="43" pos:column="26">res<pos:position pos:line="43" pos:column="29"/></name> <operator pos:line="43" pos:column="30">==<pos:position pos:line="43" pos:column="32"/></operator> <name pos:line="43" pos:column="33">CURLE_OK<pos:position pos:line="43" pos:column="41"/></name></expr>)<pos:position pos:line="43" pos:column="42"/></condition>;<pos:position pos:line="43" pos:column="43"/></do>

  <return pos:line="45" pos:column="3">return <expr><name pos:line="45" pos:column="10">res<pos:position pos:line="45" pos:column="13"/></name></expr>;<pos:position pos:line="45" pos:column="14"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

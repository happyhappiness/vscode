<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2524_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">Curl_cyassl_close<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">sockindex<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">ssl_connect_data<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">connssl<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><operator pos:line="3" pos:column="38">&amp;<pos:position pos:line="3" pos:column="43"/></operator><name><name pos:line="3" pos:column="39">conn<pos:position pos:line="3" pos:column="43"/></name><operator pos:line="3" pos:column="43">-&gt;<pos:position pos:line="3" pos:column="48"/></operator><name pos:line="3" pos:column="45">ssl<pos:position pos:line="3" pos:column="48"/></name><index pos:line="3" pos:column="48">[<expr><name pos:line="3" pos:column="49">sockindex<pos:position pos:line="3" pos:column="58"/></name></expr>]<pos:position pos:line="3" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="3" pos:column="60"/></decl_stmt>

  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name><name pos:line="5" pos:column="6">BACKEND<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">handle<pos:position pos:line="5" pos:column="21"/></name></name></expr>)<pos:position pos:line="5" pos:column="22"/></condition><then pos:line="5" pos:column="22"> <block pos:line="5" pos:column="23">{
    <expr_stmt><expr><operator pos:line="6" pos:column="5">(<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">void<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">)<pos:position pos:line="6" pos:column="11"/></operator><call><name pos:line="6" pos:column="11">SSL_shutdown<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name><name pos:line="6" pos:column="24">BACKEND<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">-&gt;<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="33">handle<pos:position pos:line="6" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">SSL_free<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name><name pos:line="7" pos:column="14">BACKEND<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">handle<pos:position pos:line="7" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">BACKEND<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">handle<pos:position pos:line="8" pos:column="20"/></name></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <name pos:line="8" pos:column="23">NULL<pos:position pos:line="8" pos:column="27"/></name></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name><name pos:line="10" pos:column="6">BACKEND<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">ctx<pos:position pos:line="10" pos:column="18"/></name></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block pos:line="10" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">SSL_CTX_free<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name><name pos:line="11" pos:column="18">BACKEND<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">ctx<pos:position pos:line="11" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">BACKEND<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">ctx<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">NULL<pos:position pos:line="12" pos:column="24"/></name></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

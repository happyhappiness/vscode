<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1881_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ber_slen_t<pos:position pos:line="1" pos:column="18"/></name></type>
<name pos:line="2" pos:column="1">ldapsb_tls_write<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">Sockbuf_IO_Desc<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">sbiod<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">void<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">buf<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">ber_len_t<pos:position pos:line="2" pos:column="62"/></name></type> <name pos:line="2" pos:column="63">len<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">connectdata<pos:position pos:line="4" pos:column="21"/></name></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">conn<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name><name pos:line="4" pos:column="30">sbiod<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">-&gt;<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="37">sbiod_pvt<pos:position pos:line="4" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ldapconninfo<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">li<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name><name pos:line="5" pos:column="22">conn<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">proto<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">.<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="34">generic<pos:position pos:line="5" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ber_slen_t<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">ret<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">err<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name pos:line="7" pos:column="18">CURLE_SEND_ERROR<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">ret<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name><name pos:line="9" pos:column="9">li<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">send<pos:position pos:line="9" pos:column="17"/></name></name><argument_list pos:line="9" pos:column="17">(<argument><expr><name pos:line="9" pos:column="18">conn<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="24">FIRSTSOCKET<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="37">buf<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">len<pos:position pos:line="9" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="47">&amp;<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="48">err<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name pos:line="10" pos:column="6">ret<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">&lt;<pos:position pos:line="10" pos:column="14"/></operator> <literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal> <operator pos:line="10" pos:column="14">&amp;&amp;<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="17">err<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">==<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">CURLE_AGAIN<pos:position pos:line="10" pos:column="35"/></name></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36"> <block pos:line="10" pos:column="37">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">SET_SOCKERRNO<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">EWOULDBLOCK<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>
  <return pos:line="13" pos:column="3">return <expr><name pos:line="13" pos:column="10">ret<pos:position pos:line="13" pos:column="13"/></name></expr>;<pos:position pos:line="13" pos:column="14"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

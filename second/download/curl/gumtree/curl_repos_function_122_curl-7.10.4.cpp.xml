<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_122_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_follow<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">SessionHandle<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">data<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="2" pos:column="22">char<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">newurl<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list> <comment type="block" pos:line="2" pos:column="36">/* this 'newurl' is the Location: string,
                                      and it must be malloc()ed before passed
                                      here */</comment>
<block pos:line="5" pos:column="1">{
  <comment type="block" pos:line="6" pos:column="3">/* Location: redirect */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">prot<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><literal type="number" pos:line="7" pos:column="13">16<pos:position pos:line="7" pos:column="15"/></literal></expr>]<pos:position pos:line="7" pos:column="16"/></index></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt> <comment type="block" pos:line="7" pos:column="18">/* URL protocol string storage */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">letter<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>   <comment type="block" pos:line="8" pos:column="18">/* used for a silly sscanf */</comment>
  
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name><name pos:line="10" pos:column="7">data<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">set<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">.<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">maxredirs<pos:position pos:line="10" pos:column="26"/></name></name> <operator pos:line="10" pos:column="27">&amp;&amp;<pos:position pos:line="10" pos:column="37"/></operator>
      <operator pos:line="11" pos:column="7">(<pos:position pos:line="11" pos:column="8"/></operator><name><name pos:line="11" pos:column="8">data<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">set<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">.<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">followlocation<pos:position pos:line="11" pos:column="32"/></name></name> <operator pos:line="11" pos:column="33">&gt;=<pos:position pos:line="11" pos:column="38"/></operator> <name><name pos:line="11" pos:column="36">data<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">-&gt;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="42">set<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">.<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="46">maxredirs<pos:position pos:line="11" pos:column="55"/></name></name><operator pos:line="11" pos:column="55">)<pos:position pos:line="11" pos:column="56"/></operator></expr>)<pos:position pos:line="11" pos:column="57"/></condition><then pos:line="11" pos:column="57"> <block pos:line="11" pos:column="58">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">failf<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">data<pos:position pos:line="12" pos:column="15"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="12" pos:column="16">"Maximum (%d) redirects followed"<pos:position pos:line="12" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="51">data<pos:position pos:line="12" pos:column="55"/></name><operator pos:line="12" pos:column="55">-&gt;<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="57">set<pos:position pos:line="12" pos:column="60"/></name><operator pos:line="12" pos:column="60">.<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="61">maxredirs<pos:position pos:line="12" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">CURLE_TOO_MANY_REDIRECTS<pos:position pos:line="13" pos:column="36"/></name></expr>;<pos:position pos:line="13" pos:column="37"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="16" pos:column="3">/* mark the next request as a followed location: */</comment>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">data<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">state<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">.<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">this_is_a_follow<pos:position pos:line="17" pos:column="31"/></name></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">TRUE<pos:position pos:line="17" pos:column="38"/></name></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="19" pos:column="3">data<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">set<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">.<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">followlocation<pos:position pos:line="19" pos:column="27"/></name></name><operator pos:line="19" pos:column="27">++<pos:position pos:line="19" pos:column="29"/></operator></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt> <comment type="block" pos:line="19" pos:column="31">/* count location-followers */</comment>

  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><name><name pos:line="21" pos:column="6">data<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">set<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">.<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">http_auto_referer<pos:position pos:line="21" pos:column="33"/></name></name></expr>)<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34"> <block pos:line="21" pos:column="35">{
    <comment type="block" pos:line="22" pos:column="5">/* We are asked to automatically set the previous URL as the
       referer when we get the next URL. We pick the -&gt;url field,
       which may or may not be 100% correct */</comment>

    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name><name pos:line="26" pos:column="8">data<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">change<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">.<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">referer_alloc<pos:position pos:line="26" pos:column="34"/></name></name></expr>)<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35">
      <comment type="block" pos:line="27" pos:column="7">/* If we already have an allocated referer, free this first */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="7">free<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name><name pos:line="28" pos:column="12">data<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">change<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">.<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="25">referer<pos:position pos:line="28" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="30" pos:column="5">data<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">-&gt;<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="11">change<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">.<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">referer<pos:position pos:line="30" pos:column="25"/></name></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator> <call><name pos:line="30" pos:column="28">strdup<pos:position pos:line="30" pos:column="34"/></name><argument_list pos:line="30" pos:column="34">(<argument><expr><name><name pos:line="30" pos:column="35">data<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">change<pos:position pos:line="30" pos:column="47"/></name><operator pos:line="30" pos:column="47">.<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="48">url<pos:position pos:line="30" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">data<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">change<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">.<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">referer_alloc<pos:position pos:line="31" pos:column="31"/></name></name> <operator pos:line="31" pos:column="32">=<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="34">TRUE<pos:position pos:line="31" pos:column="38"/></name></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt> <comment type="block" pos:line="31" pos:column="40">/* yes, free this later */</comment>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><literal type="number" pos:line="34" pos:column="6">2<pos:position pos:line="34" pos:column="7"/></literal> <operator pos:line="34" pos:column="8">!=<pos:position pos:line="34" pos:column="10"/></operator> <call><name pos:line="34" pos:column="11">sscanf<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">newurl<pos:position pos:line="34" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="26">"%15[^?&amp;/:]://%c"<pos:position pos:line="34" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="45">prot<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="51">&amp;<pos:position pos:line="34" pos:column="56"/></operator><name pos:line="34" pos:column="52">letter<pos:position pos:line="34" pos:column="58"/></name></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="60"/></condition><then pos:line="34" pos:column="60"> <block pos:line="34" pos:column="61">{
    <comment type="block" format="doxygen" pos:line="35" pos:column="5">/***
     *DANG* this is an RFC 2068 violation. The URL is supposed
     to be absolute and this doesn't seem to be that!
     ***
     Instead, we have to TRY to append this new path to the old URL
     to the right of the host part. Oh crap, this is doomed to cause
     problems in the future...
    */</comment>
    <decl_stmt><decl><type><name pos:line="43" pos:column="5">char<pos:position pos:line="43" pos:column="9"/></name> <modifier pos:line="43" pos:column="10">*<pos:position pos:line="43" pos:column="11"/></modifier></type><name pos:line="43" pos:column="11">protsep<pos:position pos:line="43" pos:column="18"/></name></decl>;<pos:position pos:line="43" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">char<pos:position pos:line="44" pos:column="9"/></name> <modifier pos:line="44" pos:column="10">*<pos:position pos:line="44" pos:column="11"/></modifier></type><name pos:line="44" pos:column="11">pathsep<pos:position pos:line="44" pos:column="18"/></name></decl>;<pos:position pos:line="44" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="45" pos:column="5">char<pos:position pos:line="45" pos:column="9"/></name> <modifier pos:line="45" pos:column="10">*<pos:position pos:line="45" pos:column="11"/></modifier></type><name pos:line="45" pos:column="11">newest<pos:position pos:line="45" pos:column="17"/></name></decl>;<pos:position pos:line="45" pos:column="18"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="47" pos:column="5">char<pos:position pos:line="47" pos:column="9"/></name> <modifier pos:line="47" pos:column="10">*<pos:position pos:line="47" pos:column="11"/></modifier></type><name pos:line="47" pos:column="11">useurl<pos:position pos:line="47" pos:column="17"/></name> <init pos:line="47" pos:column="18">= <expr><name pos:line="47" pos:column="20">newurl<pos:position pos:line="47" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="47" pos:column="27"/></decl_stmt>

    <comment type="block" pos:line="49" pos:column="5">/* we must make our own copy of the URL to play with, as it may
       point to read-only data */</comment>
    <decl_stmt><decl><type><name pos:line="51" pos:column="5">char<pos:position pos:line="51" pos:column="9"/></name> <modifier pos:line="51" pos:column="10">*<pos:position pos:line="51" pos:column="11"/></modifier></type><name pos:line="51" pos:column="11">url_clone<pos:position pos:line="51" pos:column="20"/></name><init pos:line="51" pos:column="20">=<expr><call><name pos:line="51" pos:column="21">strdup<pos:position pos:line="51" pos:column="27"/></name><argument_list pos:line="51" pos:column="27">(<argument><expr><name><name pos:line="51" pos:column="28">data<pos:position pos:line="51" pos:column="32"/></name><operator pos:line="51" pos:column="32">-&gt;<pos:position pos:line="51" pos:column="37"/></operator><name pos:line="51" pos:column="34">change<pos:position pos:line="51" pos:column="40"/></name><operator pos:line="51" pos:column="40">.<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="41">url<pos:position pos:line="51" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="46"/></decl_stmt>

    <if pos:line="53" pos:column="5">if<condition pos:line="53" pos:column="7">(<expr><operator pos:line="53" pos:column="8">!<pos:position pos:line="53" pos:column="9"/></operator><name pos:line="53" pos:column="9">url_clone<pos:position pos:line="53" pos:column="18"/></name></expr>)<pos:position pos:line="53" pos:column="19"/></condition><then pos:line="53" pos:column="19">
      <block type="pseudo"><return pos:line="54" pos:column="7">return <expr><name pos:line="54" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="54" pos:column="33"/></name></expr>;<pos:position pos:line="54" pos:column="34"/></return></block></then></if> <comment type="block" pos:line="54" pos:column="35">/* skip out of this NOW */</comment>

    <comment type="block" pos:line="56" pos:column="5">/* protsep points to the start of the host name */</comment>
    <expr_stmt><expr><name pos:line="57" pos:column="5">protsep<pos:position pos:line="57" pos:column="12"/></name><operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator><call><name pos:line="57" pos:column="13">strstr<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><name pos:line="57" pos:column="20">url_clone<pos:position pos:line="57" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="31">"//"<pos:position pos:line="57" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="37"/></expr_stmt>
    <if pos:line="58" pos:column="5">if<condition pos:line="58" pos:column="7">(<expr><operator pos:line="58" pos:column="8">!<pos:position pos:line="58" pos:column="9"/></operator><name pos:line="58" pos:column="9">protsep<pos:position pos:line="58" pos:column="16"/></name></expr>)<pos:position pos:line="58" pos:column="17"/></condition><then pos:line="58" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="7">protsep<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">url_clone<pos:position pos:line="59" pos:column="24"/></name></expr>;<pos:position pos:line="59" pos:column="25"/></expr_stmt></block></then>
    <else pos:line="60" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="7">protsep<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">+=<pos:position pos:line="61" pos:column="16"/></operator><literal type="number" pos:line="61" pos:column="16">2<pos:position pos:line="61" pos:column="17"/></literal></expr>;<pos:position pos:line="61" pos:column="18"/></expr_stmt></block></else></if> <comment type="block" pos:line="61" pos:column="19">/* pass the slashes */</comment>

    <if pos:line="63" pos:column="5">if<condition pos:line="63" pos:column="7">(<expr><literal type="char" pos:line="63" pos:column="8">'/'<pos:position pos:line="63" pos:column="11"/></literal> <operator pos:line="63" pos:column="12">!=<pos:position pos:line="63" pos:column="14"/></operator> <name><name pos:line="63" pos:column="15">newurl<pos:position pos:line="63" pos:column="21"/></name><index pos:line="63" pos:column="21">[<expr><literal type="number" pos:line="63" pos:column="22">0<pos:position pos:line="63" pos:column="23"/></literal></expr>]<pos:position pos:line="63" pos:column="24"/></index></name></expr>)<pos:position pos:line="63" pos:column="25"/></condition><then pos:line="63" pos:column="25"> <block pos:line="63" pos:column="26">{
      <decl_stmt><decl><type><name pos:line="64" pos:column="7">int<pos:position pos:line="64" pos:column="10"/></name></type> <name pos:line="64" pos:column="11">level<pos:position pos:line="64" pos:column="16"/></name><init pos:line="64" pos:column="16">=<expr><literal type="number" pos:line="64" pos:column="17">0<pos:position pos:line="64" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="64" pos:column="19"/></decl_stmt>

      <comment type="block" pos:line="66" pos:column="7">/* First we need to find out if there's a ?-letter in the URL,
         and cut it and the right-side of that off */</comment>
      <expr_stmt><expr><name pos:line="68" pos:column="7">pathsep<pos:position pos:line="68" pos:column="14"/></name> <operator pos:line="68" pos:column="15">=<pos:position pos:line="68" pos:column="16"/></operator> <call><name pos:line="68" pos:column="17">strrchr<pos:position pos:line="68" pos:column="24"/></name><argument_list pos:line="68" pos:column="24">(<argument><expr><name pos:line="68" pos:column="25">protsep<pos:position pos:line="68" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="68" pos:column="34">'?'<pos:position pos:line="68" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="39"/></expr_stmt>
      <if pos:line="69" pos:column="7">if<condition pos:line="69" pos:column="9">(<expr><name pos:line="69" pos:column="10">pathsep<pos:position pos:line="69" pos:column="17"/></name></expr>)<pos:position pos:line="69" pos:column="18"/></condition><then pos:line="69" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="70" pos:column="9">*<pos:position pos:line="70" pos:column="10"/></operator><name pos:line="70" pos:column="10">pathsep<pos:position pos:line="70" pos:column="17"/></name><operator pos:line="70" pos:column="17">=<pos:position pos:line="70" pos:column="18"/></operator><literal type="number" pos:line="70" pos:column="18">0<pos:position pos:line="70" pos:column="19"/></literal></expr>;<pos:position pos:line="70" pos:column="20"/></expr_stmt></block></then></if>
      
      <comment type="block" pos:line="72" pos:column="7">/* we have a relative path to append to the last slash if
         there's one available */</comment>
      <expr_stmt><expr><name pos:line="74" pos:column="7">pathsep<pos:position pos:line="74" pos:column="14"/></name> <operator pos:line="74" pos:column="15">=<pos:position pos:line="74" pos:column="16"/></operator> <call><name pos:line="74" pos:column="17">strrchr<pos:position pos:line="74" pos:column="24"/></name><argument_list pos:line="74" pos:column="24">(<argument><expr><name pos:line="74" pos:column="25">protsep<pos:position pos:line="74" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="74" pos:column="34">'/'<pos:position pos:line="74" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="39"/></expr_stmt>
      <if pos:line="75" pos:column="7">if<condition pos:line="75" pos:column="9">(<expr><name pos:line="75" pos:column="10">pathsep<pos:position pos:line="75" pos:column="17"/></name></expr>)<pos:position pos:line="75" pos:column="18"/></condition><then pos:line="75" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="76" pos:column="9">*<pos:position pos:line="76" pos:column="10"/></operator><name pos:line="76" pos:column="10">pathsep<pos:position pos:line="76" pos:column="17"/></name><operator pos:line="76" pos:column="17">=<pos:position pos:line="76" pos:column="18"/></operator><literal type="number" pos:line="76" pos:column="18">0<pos:position pos:line="76" pos:column="19"/></literal></expr>;<pos:position pos:line="76" pos:column="20"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="78" pos:column="7">/* Check if there's any slash after the host name, and if so,
         remember that position instead */</comment>
      <expr_stmt><expr><name pos:line="80" pos:column="7">pathsep<pos:position pos:line="80" pos:column="14"/></name> <operator pos:line="80" pos:column="15">=<pos:position pos:line="80" pos:column="16"/></operator> <call><name pos:line="80" pos:column="17">strchr<pos:position pos:line="80" pos:column="23"/></name><argument_list pos:line="80" pos:column="23">(<argument><expr><name pos:line="80" pos:column="24">protsep<pos:position pos:line="80" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="80" pos:column="33">'/'<pos:position pos:line="80" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="38"/></expr_stmt>
      <if pos:line="81" pos:column="7">if<condition pos:line="81" pos:column="9">(<expr><name pos:line="81" pos:column="10">pathsep<pos:position pos:line="81" pos:column="17"/></name></expr>)<pos:position pos:line="81" pos:column="18"/></condition><then pos:line="81" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="9">protsep<pos:position pos:line="82" pos:column="16"/></name> <operator pos:line="82" pos:column="17">=<pos:position pos:line="82" pos:column="18"/></operator> <name pos:line="82" pos:column="19">pathsep<pos:position pos:line="82" pos:column="26"/></name><operator pos:line="82" pos:column="26">+<pos:position pos:line="82" pos:column="27"/></operator><literal type="number" pos:line="82" pos:column="27">1<pos:position pos:line="82" pos:column="28"/></literal></expr>;<pos:position pos:line="82" pos:column="29"/></expr_stmt></block></then>
      <else pos:line="83" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="9">protsep<pos:position pos:line="84" pos:column="16"/></name> <operator pos:line="84" pos:column="17">=<pos:position pos:line="84" pos:column="18"/></operator> <name pos:line="84" pos:column="19">NULL<pos:position pos:line="84" pos:column="23"/></name></expr>;<pos:position pos:line="84" pos:column="24"/></expr_stmt></block></else></if>

      <comment type="block" pos:line="86" pos:column="7">/* now deal with one "./" or any amount of "../" in the newurl
         and act accordingly */</comment>

      <if pos:line="89" pos:column="7">if<condition pos:line="89" pos:column="9">(<expr><operator pos:line="89" pos:column="10">(<pos:position pos:line="89" pos:column="11"/></operator><name><name pos:line="89" pos:column="11">useurl<pos:position pos:line="89" pos:column="17"/></name><index pos:line="89" pos:column="17">[<expr><literal type="number" pos:line="89" pos:column="18">0<pos:position pos:line="89" pos:column="19"/></literal></expr>]<pos:position pos:line="89" pos:column="20"/></index></name> <operator pos:line="89" pos:column="21">==<pos:position pos:line="89" pos:column="23"/></operator> <literal type="char" pos:line="89" pos:column="24">'.'<pos:position pos:line="89" pos:column="27"/></literal><operator pos:line="89" pos:column="27">)<pos:position pos:line="89" pos:column="28"/></operator> <operator pos:line="89" pos:column="29">&amp;&amp;<pos:position pos:line="89" pos:column="39"/></operator> <operator pos:line="89" pos:column="32">(<pos:position pos:line="89" pos:column="33"/></operator><name><name pos:line="89" pos:column="33">useurl<pos:position pos:line="89" pos:column="39"/></name><index pos:line="89" pos:column="39">[<expr><literal type="number" pos:line="89" pos:column="40">1<pos:position pos:line="89" pos:column="41"/></literal></expr>]<pos:position pos:line="89" pos:column="42"/></index></name> <operator pos:line="89" pos:column="43">==<pos:position pos:line="89" pos:column="45"/></operator> <literal type="char" pos:line="89" pos:column="46">'/'<pos:position pos:line="89" pos:column="49"/></literal><operator pos:line="89" pos:column="49">)<pos:position pos:line="89" pos:column="50"/></operator></expr>)<pos:position pos:line="89" pos:column="51"/></condition><then pos:line="89" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><name pos:line="90" pos:column="9">useurl<pos:position pos:line="90" pos:column="15"/></name><operator pos:line="90" pos:column="15">+=<pos:position pos:line="90" pos:column="17"/></operator><literal type="number" pos:line="90" pos:column="17">2<pos:position pos:line="90" pos:column="18"/></literal></expr>;<pos:position pos:line="90" pos:column="19"/></expr_stmt></block></then></if> <comment type="block" pos:line="90" pos:column="20">/* just skip the "./" */</comment>
            
      <while pos:line="92" pos:column="7">while<condition pos:line="92" pos:column="12">(<expr><operator pos:line="92" pos:column="13">(<pos:position pos:line="92" pos:column="14"/></operator><name><name pos:line="92" pos:column="14">useurl<pos:position pos:line="92" pos:column="20"/></name><index pos:line="92" pos:column="20">[<expr><literal type="number" pos:line="92" pos:column="21">0<pos:position pos:line="92" pos:column="22"/></literal></expr>]<pos:position pos:line="92" pos:column="23"/></index></name> <operator pos:line="92" pos:column="24">==<pos:position pos:line="92" pos:column="26"/></operator> <literal type="char" pos:line="92" pos:column="27">'.'<pos:position pos:line="92" pos:column="30"/></literal><operator pos:line="92" pos:column="30">)<pos:position pos:line="92" pos:column="31"/></operator> <operator pos:line="92" pos:column="32">&amp;&amp;<pos:position pos:line="92" pos:column="42"/></operator>
            <operator pos:line="93" pos:column="13">(<pos:position pos:line="93" pos:column="14"/></operator><name><name pos:line="93" pos:column="14">useurl<pos:position pos:line="93" pos:column="20"/></name><index pos:line="93" pos:column="20">[<expr><literal type="number" pos:line="93" pos:column="21">1<pos:position pos:line="93" pos:column="22"/></literal></expr>]<pos:position pos:line="93" pos:column="23"/></index></name> <operator pos:line="93" pos:column="24">==<pos:position pos:line="93" pos:column="26"/></operator> <literal type="char" pos:line="93" pos:column="27">'.'<pos:position pos:line="93" pos:column="30"/></literal><operator pos:line="93" pos:column="30">)<pos:position pos:line="93" pos:column="31"/></operator> <operator pos:line="93" pos:column="32">&amp;&amp;<pos:position pos:line="93" pos:column="42"/></operator>
            <operator pos:line="94" pos:column="13">(<pos:position pos:line="94" pos:column="14"/></operator><name><name pos:line="94" pos:column="14">useurl<pos:position pos:line="94" pos:column="20"/></name><index pos:line="94" pos:column="20">[<expr><literal type="number" pos:line="94" pos:column="21">2<pos:position pos:line="94" pos:column="22"/></literal></expr>]<pos:position pos:line="94" pos:column="23"/></index></name> <operator pos:line="94" pos:column="24">==<pos:position pos:line="94" pos:column="26"/></operator> <literal type="char" pos:line="94" pos:column="27">'/'<pos:position pos:line="94" pos:column="30"/></literal><operator pos:line="94" pos:column="30">)<pos:position pos:line="94" pos:column="31"/></operator></expr>)<pos:position pos:line="94" pos:column="32"/></condition> <block pos:line="94" pos:column="33">{
        <expr_stmt><expr><name pos:line="95" pos:column="9">level<pos:position pos:line="95" pos:column="14"/></name><operator pos:line="95" pos:column="14">++<pos:position pos:line="95" pos:column="16"/></operator></expr>;<pos:position pos:line="95" pos:column="17"/></expr_stmt> 
        <expr_stmt><expr><name pos:line="96" pos:column="9">useurl<pos:position pos:line="96" pos:column="15"/></name><operator pos:line="96" pos:column="15">+=<pos:position pos:line="96" pos:column="17"/></operator><literal type="number" pos:line="96" pos:column="17">3<pos:position pos:line="96" pos:column="18"/></literal></expr>;<pos:position pos:line="96" pos:column="19"/></expr_stmt> <comment type="block" pos:line="96" pos:column="20">/* pass the "../" */</comment>
      }<pos:position pos:line="97" pos:column="8"/></block></while>

      <if pos:line="99" pos:column="7">if<condition pos:line="99" pos:column="9">(<expr><name pos:line="99" pos:column="10">protsep<pos:position pos:line="99" pos:column="17"/></name></expr>)<pos:position pos:line="99" pos:column="18"/></condition><then pos:line="99" pos:column="18"> <block pos:line="99" pos:column="19">{
        <while pos:line="100" pos:column="9">while<condition pos:line="100" pos:column="14">(<expr><name pos:line="100" pos:column="15">level<pos:position pos:line="100" pos:column="20"/></name><operator pos:line="100" pos:column="20">--<pos:position pos:line="100" pos:column="22"/></operator></expr>)<pos:position pos:line="100" pos:column="23"/></condition> <block pos:line="100" pos:column="24">{
          <comment type="block" pos:line="101" pos:column="11">/* cut off one more level from the right of the original URL */</comment>
          <expr_stmt><expr><name pos:line="102" pos:column="11">pathsep<pos:position pos:line="102" pos:column="18"/></name> <operator pos:line="102" pos:column="19">=<pos:position pos:line="102" pos:column="20"/></operator> <call><name pos:line="102" pos:column="21">strrchr<pos:position pos:line="102" pos:column="28"/></name><argument_list pos:line="102" pos:column="28">(<argument><expr><name pos:line="102" pos:column="29">protsep<pos:position pos:line="102" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="102" pos:column="38">'/'<pos:position pos:line="102" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="43"/></expr_stmt>
          <if pos:line="103" pos:column="11">if<condition pos:line="103" pos:column="13">(<expr><name pos:line="103" pos:column="14">pathsep<pos:position pos:line="103" pos:column="21"/></name></expr>)<pos:position pos:line="103" pos:column="22"/></condition><then pos:line="103" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="104" pos:column="13">*<pos:position pos:line="104" pos:column="14"/></operator><name pos:line="104" pos:column="14">pathsep<pos:position pos:line="104" pos:column="21"/></name><operator pos:line="104" pos:column="21">=<pos:position pos:line="104" pos:column="22"/></operator><literal type="number" pos:line="104" pos:column="22">0<pos:position pos:line="104" pos:column="23"/></literal></expr>;<pos:position pos:line="104" pos:column="24"/></expr_stmt></block></then>
          <else pos:line="105" pos:column="11">else <block pos:line="105" pos:column="16">{
            <expr_stmt><expr><operator pos:line="106" pos:column="13">*<pos:position pos:line="106" pos:column="14"/></operator><name pos:line="106" pos:column="14">protsep<pos:position pos:line="106" pos:column="21"/></name><operator pos:line="106" pos:column="21">=<pos:position pos:line="106" pos:column="22"/></operator><literal type="number" pos:line="106" pos:column="22">0<pos:position pos:line="106" pos:column="23"/></literal></expr>;<pos:position pos:line="106" pos:column="24"/></expr_stmt>
            <break pos:line="107" pos:column="13">break;<pos:position pos:line="107" pos:column="19"/></break>
          }<pos:position pos:line="108" pos:column="12"/></block></else></if>
        }<pos:position pos:line="109" pos:column="10"/></block></while>
      }<pos:position pos:line="110" pos:column="8"/></block></then></if>
    }<pos:position pos:line="111" pos:column="6"/></block></then>
    <else pos:line="112" pos:column="5">else <block pos:line="112" pos:column="10">{
      <comment type="block" pos:line="113" pos:column="7">/* We got a new absolute path for this server, cut off from the
         first slash */</comment>
      <expr_stmt><expr><name pos:line="115" pos:column="7">pathsep<pos:position pos:line="115" pos:column="14"/></name> <operator pos:line="115" pos:column="15">=<pos:position pos:line="115" pos:column="16"/></operator> <call><name pos:line="115" pos:column="17">strchr<pos:position pos:line="115" pos:column="23"/></name><argument_list pos:line="115" pos:column="23">(<argument><expr><name pos:line="115" pos:column="24">protsep<pos:position pos:line="115" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="115" pos:column="33">'/'<pos:position pos:line="115" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="38"/></expr_stmt>
      <if pos:line="116" pos:column="7">if<condition pos:line="116" pos:column="9">(<expr><name pos:line="116" pos:column="10">pathsep<pos:position pos:line="116" pos:column="17"/></name></expr>)<pos:position pos:line="116" pos:column="18"/></condition><then pos:line="116" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="117" pos:column="9">*<pos:position pos:line="117" pos:column="10"/></operator><name pos:line="117" pos:column="10">pathsep<pos:position pos:line="117" pos:column="17"/></name><operator pos:line="117" pos:column="17">=<pos:position pos:line="117" pos:column="18"/></operator><literal type="number" pos:line="117" pos:column="18">0<pos:position pos:line="117" pos:column="19"/></literal></expr>;<pos:position pos:line="117" pos:column="20"/></expr_stmt></block></then></if>
    }<pos:position pos:line="118" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="120" pos:column="5">newest<pos:position pos:line="120" pos:column="11"/></name><operator pos:line="120" pos:column="11">=<pos:position pos:line="120" pos:column="12"/></operator><operator pos:line="120" pos:column="12">(<pos:position pos:line="120" pos:column="13"/></operator><name pos:line="120" pos:column="13">char<pos:position pos:line="120" pos:column="17"/></name> <operator pos:line="120" pos:column="18">*<pos:position pos:line="120" pos:column="19"/></operator><operator pos:line="120" pos:column="19">)<pos:position pos:line="120" pos:column="20"/></operator><call><name pos:line="120" pos:column="20">malloc<pos:position pos:line="120" pos:column="26"/></name><argument_list pos:line="120" pos:column="26">( <argument><expr><call><name pos:line="120" pos:column="28">strlen<pos:position pos:line="120" pos:column="34"/></name><argument_list pos:line="120" pos:column="34">(<argument><expr><name pos:line="120" pos:column="35">url_clone<pos:position pos:line="120" pos:column="44"/></name></expr></argument>)<pos:position pos:line="120" pos:column="45"/></argument_list></call> <operator pos:line="120" pos:column="46">+<pos:position pos:line="120" pos:column="47"/></operator>
                           <literal type="number" pos:line="121" pos:column="28">1<pos:position pos:line="121" pos:column="29"/></literal> <operator pos:line="121" pos:column="30">+<pos:position pos:line="121" pos:column="31"/></operator> <comment type="block" pos:line="121" pos:column="32">/* possible slash */</comment>
                           <call><name pos:line="122" pos:column="28">strlen<pos:position pos:line="122" pos:column="34"/></name><argument_list pos:line="122" pos:column="34">(<argument><expr><name pos:line="122" pos:column="35">useurl<pos:position pos:line="122" pos:column="41"/></name></expr></argument>)<pos:position pos:line="122" pos:column="42"/></argument_list></call> <operator pos:line="122" pos:column="43">+<pos:position pos:line="122" pos:column="44"/></operator> <literal type="number" pos:line="122" pos:column="45">1<pos:position pos:line="122" pos:column="46"/></literal></expr></argument><comment type="block" pos:line="122" pos:column="46">/* zero byte */</comment>)<pos:position pos:line="122" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="63"/></expr_stmt>
    
    <if pos:line="124" pos:column="5">if<condition pos:line="124" pos:column="7">(<expr><operator pos:line="124" pos:column="8">!<pos:position pos:line="124" pos:column="9"/></operator><name pos:line="124" pos:column="9">newest<pos:position pos:line="124" pos:column="15"/></name></expr>)<pos:position pos:line="124" pos:column="16"/></condition><then pos:line="124" pos:column="16">
      <block type="pseudo"><return pos:line="125" pos:column="7">return <expr><name pos:line="125" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="125" pos:column="33"/></name></expr>;<pos:position pos:line="125" pos:column="34"/></return></block></then></if> <comment type="block" pos:line="125" pos:column="35">/* go out from this */</comment>

    <expr_stmt><expr><call><name pos:line="127" pos:column="5">sprintf<pos:position pos:line="127" pos:column="12"/></name><argument_list pos:line="127" pos:column="12">(<argument><expr><name pos:line="127" pos:column="13">newest<pos:position pos:line="127" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="21">"%s%s%s"<pos:position pos:line="127" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="127" pos:column="31">url_clone<pos:position pos:line="127" pos:column="40"/></name></expr></argument>,
            <argument><expr><ternary><condition><expr><operator pos:line="128" pos:column="13">(<pos:position pos:line="128" pos:column="14"/></operator><operator pos:line="128" pos:column="14">(<pos:position pos:line="128" pos:column="15"/></operator><literal type="char" pos:line="128" pos:column="15">'/'<pos:position pos:line="128" pos:column="18"/></literal> <operator pos:line="128" pos:column="19">==<pos:position pos:line="128" pos:column="21"/></operator> <name><name pos:line="128" pos:column="22">useurl<pos:position pos:line="128" pos:column="28"/></name><index pos:line="128" pos:column="28">[<expr><literal type="number" pos:line="128" pos:column="29">0<pos:position pos:line="128" pos:column="30"/></literal></expr>]<pos:position pos:line="128" pos:column="31"/></index></name><operator pos:line="128" pos:column="31">)<pos:position pos:line="128" pos:column="32"/></operator> <operator pos:line="128" pos:column="33">||<pos:position pos:line="128" pos:column="35"/></operator> <operator pos:line="128" pos:column="36">(<pos:position pos:line="128" pos:column="37"/></operator><name pos:line="128" pos:column="37">protsep<pos:position pos:line="128" pos:column="44"/></name> <operator pos:line="128" pos:column="45">&amp;&amp;<pos:position pos:line="128" pos:column="55"/></operator> <operator pos:line="128" pos:column="48">!<pos:position pos:line="128" pos:column="49"/></operator><operator pos:line="128" pos:column="49">*<pos:position pos:line="128" pos:column="50"/></operator><name pos:line="128" pos:column="50">protsep<pos:position pos:line="128" pos:column="57"/></name><operator pos:line="128" pos:column="57">)<pos:position pos:line="128" pos:column="58"/></operator><operator pos:line="128" pos:column="58">)<pos:position pos:line="128" pos:column="59"/></operator></expr>?<pos:position pos:line="128" pos:column="60"/></condition><then><expr><literal type="string" pos:line="128" pos:column="60">""<pos:position pos:line="128" pos:column="62"/></literal></expr></then><else pos:line="128" pos:column="62">:<expr><literal type="string" pos:line="128" pos:column="63">"/"<pos:position pos:line="128" pos:column="66"/></literal></expr></else></ternary></expr></argument>,
            <argument><expr><name pos:line="129" pos:column="13">useurl<pos:position pos:line="129" pos:column="19"/></name></expr></argument>)<pos:position pos:line="129" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="130" pos:column="5">free<pos:position pos:line="130" pos:column="9"/></name><argument_list pos:line="130" pos:column="9">(<argument><expr><name pos:line="130" pos:column="10">newurl<pos:position pos:line="130" pos:column="16"/></name></expr></argument>)<pos:position pos:line="130" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="18"/></expr_stmt> <comment type="block" pos:line="130" pos:column="19">/* newurl is the allocated pointer */</comment>
    <expr_stmt><expr><call><name pos:line="131" pos:column="5">free<pos:position pos:line="131" pos:column="9"/></name><argument_list pos:line="131" pos:column="9">(<argument><expr><name pos:line="131" pos:column="10">url_clone<pos:position pos:line="131" pos:column="19"/></name></expr></argument>)<pos:position pos:line="131" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="132" pos:column="5">newurl<pos:position pos:line="132" pos:column="11"/></name> <operator pos:line="132" pos:column="12">=<pos:position pos:line="132" pos:column="13"/></operator> <name pos:line="132" pos:column="14">newest<pos:position pos:line="132" pos:column="20"/></name></expr>;<pos:position pos:line="132" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="133" pos:column="4"/></block></then>
  <else pos:line="134" pos:column="3">else
    <comment type="block" pos:line="135" pos:column="5">/* This is an absolute URL, don't allow the custom port number */</comment>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="136" pos:column="5">data<pos:position pos:line="136" pos:column="9"/></name><operator pos:line="136" pos:column="9">-&gt;<pos:position pos:line="136" pos:column="14"/></operator><name pos:line="136" pos:column="11">state<pos:position pos:line="136" pos:column="16"/></name><operator pos:line="136" pos:column="16">.<pos:position pos:line="136" pos:column="17"/></operator><name pos:line="136" pos:column="17">allow_port<pos:position pos:line="136" pos:column="27"/></name></name> <operator pos:line="136" pos:column="28">=<pos:position pos:line="136" pos:column="29"/></operator> <name pos:line="136" pos:column="30">FALSE<pos:position pos:line="136" pos:column="35"/></name></expr>;<pos:position pos:line="136" pos:column="36"/></expr_stmt></block></else></if>

  <if pos:line="138" pos:column="3">if<condition pos:line="138" pos:column="5">(<expr><name><name pos:line="138" pos:column="6">data<pos:position pos:line="138" pos:column="10"/></name><operator pos:line="138" pos:column="10">-&gt;<pos:position pos:line="138" pos:column="15"/></operator><name pos:line="138" pos:column="12">change<pos:position pos:line="138" pos:column="18"/></name><operator pos:line="138" pos:column="18">.<pos:position pos:line="138" pos:column="19"/></operator><name pos:line="138" pos:column="19">url_alloc<pos:position pos:line="138" pos:column="28"/></name></name></expr>)<pos:position pos:line="138" pos:column="29"/></condition><then pos:line="138" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="139" pos:column="5">free<pos:position pos:line="139" pos:column="9"/></name><argument_list pos:line="139" pos:column="9">(<argument><expr><name><name pos:line="139" pos:column="10">data<pos:position pos:line="139" pos:column="14"/></name><operator pos:line="139" pos:column="14">-&gt;<pos:position pos:line="139" pos:column="19"/></operator><name pos:line="139" pos:column="16">change<pos:position pos:line="139" pos:column="22"/></name><operator pos:line="139" pos:column="22">.<pos:position pos:line="139" pos:column="23"/></operator><name pos:line="139" pos:column="23">url<pos:position pos:line="139" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="139" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="28"/></expr_stmt></block></then>
  <else pos:line="140" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="141" pos:column="5">data<pos:position pos:line="141" pos:column="9"/></name><operator pos:line="141" pos:column="9">-&gt;<pos:position pos:line="141" pos:column="14"/></operator><name pos:line="141" pos:column="11">change<pos:position pos:line="141" pos:column="17"/></name><operator pos:line="141" pos:column="17">.<pos:position pos:line="141" pos:column="18"/></operator><name pos:line="141" pos:column="18">url_alloc<pos:position pos:line="141" pos:column="27"/></name></name> <operator pos:line="141" pos:column="28">=<pos:position pos:line="141" pos:column="29"/></operator> <name pos:line="141" pos:column="30">TRUE<pos:position pos:line="141" pos:column="34"/></name></expr>;<pos:position pos:line="141" pos:column="35"/></expr_stmt></block></else></if> <comment type="block" pos:line="141" pos:column="36">/* the URL is allocated */</comment>
      
  <comment type="block" pos:line="143" pos:column="3">/* TBD: set the URL with curl_setopt() */</comment>
  <expr_stmt><expr><name><name pos:line="144" pos:column="3">data<pos:position pos:line="144" pos:column="7"/></name><operator pos:line="144" pos:column="7">-&gt;<pos:position pos:line="144" pos:column="12"/></operator><name pos:line="144" pos:column="9">change<pos:position pos:line="144" pos:column="15"/></name><operator pos:line="144" pos:column="15">.<pos:position pos:line="144" pos:column="16"/></operator><name pos:line="144" pos:column="16">url<pos:position pos:line="144" pos:column="19"/></name></name> <operator pos:line="144" pos:column="20">=<pos:position pos:line="144" pos:column="21"/></operator> <name pos:line="144" pos:column="22">newurl<pos:position pos:line="144" pos:column="28"/></name></expr>;<pos:position pos:line="144" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="145" pos:column="3">newurl<pos:position pos:line="145" pos:column="9"/></name> <operator pos:line="145" pos:column="10">=<pos:position pos:line="145" pos:column="11"/></operator> <name pos:line="145" pos:column="12">NULL<pos:position pos:line="145" pos:column="16"/></name></expr>;<pos:position pos:line="145" pos:column="17"/></expr_stmt> <comment type="block" pos:line="145" pos:column="18">/* don't free! */</comment>

  <expr_stmt><expr><call><name pos:line="147" pos:column="3">infof<pos:position pos:line="147" pos:column="8"/></name><argument_list pos:line="147" pos:column="8">(<argument><expr><name pos:line="147" pos:column="9">data<pos:position pos:line="147" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="15">"Follows Location: to new URL: '%s'\n"<pos:position pos:line="147" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="147" pos:column="55">data<pos:position pos:line="147" pos:column="59"/></name><operator pos:line="147" pos:column="59">-&gt;<pos:position pos:line="147" pos:column="64"/></operator><name pos:line="147" pos:column="61">change<pos:position pos:line="147" pos:column="67"/></name><operator pos:line="147" pos:column="67">.<pos:position pos:line="147" pos:column="68"/></operator><name pos:line="147" pos:column="68">url<pos:position pos:line="147" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="73"/></expr_stmt>

  <comment type="block" pos:line="149" pos:column="3">/*
   * We get here when the HTTP code is 300-399. We need to perform
   * differently based on exactly what return code there was.
   * Discussed on the curl mailing list and posted about on the 26th
   * of January 2001.
   */</comment>
  <switch pos:line="155" pos:column="3">switch<condition pos:line="155" pos:column="9">(<expr><name><name pos:line="155" pos:column="10">data<pos:position pos:line="155" pos:column="14"/></name><operator pos:line="155" pos:column="14">-&gt;<pos:position pos:line="155" pos:column="19"/></operator><name pos:line="155" pos:column="16">info<pos:position pos:line="155" pos:column="20"/></name><operator pos:line="155" pos:column="20">.<pos:position pos:line="155" pos:column="21"/></operator><name pos:line="155" pos:column="21">httpcode<pos:position pos:line="155" pos:column="29"/></name></name></expr>)<pos:position pos:line="155" pos:column="30"/></condition> <block pos:line="155" pos:column="31">{
  <case pos:line="156" pos:column="3">case <expr><literal type="number" pos:line="156" pos:column="8">300<pos:position pos:line="156" pos:column="11"/></literal></expr>:<pos:position pos:line="156" pos:column="12"/></case> <comment type="block" pos:line="156" pos:column="13">/* Multiple Choices */</comment>
  <case pos:line="157" pos:column="3">case <expr><literal type="number" pos:line="157" pos:column="8">306<pos:position pos:line="157" pos:column="11"/></literal></expr>:<pos:position pos:line="157" pos:column="12"/></case> <comment type="block" pos:line="157" pos:column="13">/* Not used */</comment>
  <case pos:line="158" pos:column="3">case <expr><literal type="number" pos:line="158" pos:column="8">307<pos:position pos:line="158" pos:column="11"/></literal></expr>:<pos:position pos:line="158" pos:column="12"/></case> <comment type="block" pos:line="158" pos:column="13">/* Temporary Redirect */</comment>
  <default pos:line="159" pos:column="3">default:<pos:position pos:line="159" pos:column="11"/></default>  <comment type="block" pos:line="159" pos:column="13">/* for all unknown ones */</comment>
    <comment type="block" pos:line="160" pos:column="5">/* These are explicitly mention since I've checked RFC2616 and they
     * seem to be OK to POST to.
     */</comment>
    <break pos:line="163" pos:column="5">break;<pos:position pos:line="163" pos:column="11"/></break>
  <case pos:line="164" pos:column="3">case <expr><literal type="number" pos:line="164" pos:column="8">301<pos:position pos:line="164" pos:column="11"/></literal></expr>:<pos:position pos:line="164" pos:column="12"/></case> <comment type="block" pos:line="164" pos:column="13">/* Moved Permanently */</comment>
    <comment type="block" pos:line="165" pos:column="5">/* (quote from RFC2616, section 10.3.2):
     * 
     *  Note: When automatically redirecting a POST request after
     *  receiving a 301 status code, some existing HTTP/1.0 user agents
     *  will erroneously change it into a GET request.
     *
     * ----
     * Warning: Because most of importants user agents do this clear
     * RFC2616 violation, many webservers expect this misbehavior. So
     * these servers often answers to a POST request with an error page.
     * To be sure that libcurl gets the page that most user agents
     * would get, libcurl has to force GET:
     */</comment>
    <if pos:line="178" pos:column="5">if<condition pos:line="178" pos:column="7">( <expr><name><name pos:line="178" pos:column="9">data<pos:position pos:line="178" pos:column="13"/></name><operator pos:line="178" pos:column="13">-&gt;<pos:position pos:line="178" pos:column="18"/></operator><name pos:line="178" pos:column="15">set<pos:position pos:line="178" pos:column="18"/></name><operator pos:line="178" pos:column="18">.<pos:position pos:line="178" pos:column="19"/></operator><name pos:line="178" pos:column="19">httpreq<pos:position pos:line="178" pos:column="26"/></name></name> <operator pos:line="178" pos:column="27">==<pos:position pos:line="178" pos:column="29"/></operator> <name pos:line="178" pos:column="30">HTTPREQ_POST<pos:position pos:line="178" pos:column="42"/></name>
        <operator pos:line="179" pos:column="9">||<pos:position pos:line="179" pos:column="11"/></operator> <name><name pos:line="179" pos:column="12">data<pos:position pos:line="179" pos:column="16"/></name><operator pos:line="179" pos:column="16">-&gt;<pos:position pos:line="179" pos:column="21"/></operator><name pos:line="179" pos:column="18">set<pos:position pos:line="179" pos:column="21"/></name><operator pos:line="179" pos:column="21">.<pos:position pos:line="179" pos:column="22"/></operator><name pos:line="179" pos:column="22">httpreq<pos:position pos:line="179" pos:column="29"/></name></name> <operator pos:line="179" pos:column="30">==<pos:position pos:line="179" pos:column="32"/></operator> <name pos:line="179" pos:column="33">HTTPREQ_POST_FORM<pos:position pos:line="179" pos:column="50"/></name></expr>)<pos:position pos:line="179" pos:column="51"/></condition><then pos:line="179" pos:column="51"> <block pos:line="179" pos:column="52">{
      <expr_stmt><expr><call><name pos:line="180" pos:column="7">infof<pos:position pos:line="180" pos:column="12"/></name><argument_list pos:line="180" pos:column="12">(<argument><expr><name pos:line="180" pos:column="13">data<pos:position pos:line="180" pos:column="17"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="181" pos:column="13">"Violate RFC 2616/10.3.2 and switch from POST to GET\n"<pos:position pos:line="181" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="70"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="182" pos:column="7">data<pos:position pos:line="182" pos:column="11"/></name><operator pos:line="182" pos:column="11">-&gt;<pos:position pos:line="182" pos:column="16"/></operator><name pos:line="182" pos:column="13">set<pos:position pos:line="182" pos:column="16"/></name><operator pos:line="182" pos:column="16">.<pos:position pos:line="182" pos:column="17"/></operator><name pos:line="182" pos:column="17">httpreq<pos:position pos:line="182" pos:column="24"/></name></name> <operator pos:line="182" pos:column="25">=<pos:position pos:line="182" pos:column="26"/></operator> <name pos:line="182" pos:column="27">HTTPREQ_GET<pos:position pos:line="182" pos:column="38"/></name></expr>;<pos:position pos:line="182" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="183" pos:column="6"/></block></then></if>
    <break pos:line="184" pos:column="5">break;<pos:position pos:line="184" pos:column="11"/></break>
  <case pos:line="185" pos:column="3">case <expr><literal type="number" pos:line="185" pos:column="8">302<pos:position pos:line="185" pos:column="11"/></literal></expr>:<pos:position pos:line="185" pos:column="12"/></case> <comment type="block" pos:line="185" pos:column="13">/* Found */</comment>
    <comment type="block" pos:line="186" pos:column="5">/* (From 10.3.3)
       
    Note: RFC 1945 and RFC 2068 specify that the client is not allowed
    to change the method on the redirected request.  However, most
    existing user agent implementations treat 302 as if it were a 303
    response, performing a GET on the Location field-value regardless
    of the original request method. The status codes 303 and 307 have
    been added for servers that wish to make unambiguously clear which
    kind of reaction is expected of the client.
    
    (From 10.3.4)
    
    Note: Many pre-HTTP/1.1 user agents do not understand the 303
    status. When interoperability with such clients is a concern, the
    302 status code may be used instead, since most user agents react
    to a 302 response as described here for 303.             
    */</comment>
  <case pos:line="203" pos:column="3">case <expr><literal type="number" pos:line="203" pos:column="8">303<pos:position pos:line="203" pos:column="11"/></literal></expr>:<pos:position pos:line="203" pos:column="12"/></case> <comment type="block" pos:line="203" pos:column="13">/* See Other */</comment>
    <comment type="block" pos:line="204" pos:column="5">/* Disable both types of POSTs, since doing a second POST when
     * following isn't what anyone would want! */</comment>
    <if pos:line="206" pos:column="5">if<condition pos:line="206" pos:column="7">(<expr><name><name pos:line="206" pos:column="8">data<pos:position pos:line="206" pos:column="12"/></name><operator pos:line="206" pos:column="12">-&gt;<pos:position pos:line="206" pos:column="17"/></operator><name pos:line="206" pos:column="14">set<pos:position pos:line="206" pos:column="17"/></name><operator pos:line="206" pos:column="17">.<pos:position pos:line="206" pos:column="18"/></operator><name pos:line="206" pos:column="18">httpreq<pos:position pos:line="206" pos:column="25"/></name></name> <operator pos:line="206" pos:column="26">!=<pos:position pos:line="206" pos:column="28"/></operator> <name pos:line="206" pos:column="29">HTTPREQ_GET<pos:position pos:line="206" pos:column="40"/></name></expr>)<pos:position pos:line="206" pos:column="41"/></condition><then pos:line="206" pos:column="41"> <block pos:line="206" pos:column="42">{
      <expr_stmt><expr><name><name pos:line="207" pos:column="7">data<pos:position pos:line="207" pos:column="11"/></name><operator pos:line="207" pos:column="11">-&gt;<pos:position pos:line="207" pos:column="16"/></operator><name pos:line="207" pos:column="13">set<pos:position pos:line="207" pos:column="16"/></name><operator pos:line="207" pos:column="16">.<pos:position pos:line="207" pos:column="17"/></operator><name pos:line="207" pos:column="17">httpreq<pos:position pos:line="207" pos:column="24"/></name></name> <operator pos:line="207" pos:column="25">=<pos:position pos:line="207" pos:column="26"/></operator> <name pos:line="207" pos:column="27">HTTPREQ_GET<pos:position pos:line="207" pos:column="38"/></name></expr>;<pos:position pos:line="207" pos:column="39"/></expr_stmt> <comment type="block" pos:line="207" pos:column="40">/* enforce GET request */</comment>
      <expr_stmt><expr><call><name pos:line="208" pos:column="7">infof<pos:position pos:line="208" pos:column="12"/></name><argument_list pos:line="208" pos:column="12">(<argument><expr><name pos:line="208" pos:column="13">data<pos:position pos:line="208" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="19">"Disables POST, goes with %s\n"<pos:position pos:line="208" pos:column="50"/></literal></expr></argument>,
            <argument><expr><ternary><condition><expr><name><name pos:line="209" pos:column="13">data<pos:position pos:line="209" pos:column="17"/></name><operator pos:line="209" pos:column="17">-&gt;<pos:position pos:line="209" pos:column="22"/></operator><name pos:line="209" pos:column="19">set<pos:position pos:line="209" pos:column="22"/></name><operator pos:line="209" pos:column="22">.<pos:position pos:line="209" pos:column="23"/></operator><name pos:line="209" pos:column="23">no_body<pos:position pos:line="209" pos:column="30"/></name></name></expr>?<pos:position pos:line="209" pos:column="31"/></condition><then><expr><literal type="string" pos:line="209" pos:column="31">"HEAD"<pos:position pos:line="209" pos:column="37"/></literal></expr></then><else pos:line="209" pos:column="37">:<expr><literal type="string" pos:line="209" pos:column="38">"GET"<pos:position pos:line="209" pos:column="43"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="209" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="210" pos:column="6"/></block></then></if>
    <break pos:line="211" pos:column="5">break;<pos:position pos:line="211" pos:column="11"/></break>
  <case pos:line="212" pos:column="3">case <expr><literal type="number" pos:line="212" pos:column="8">304<pos:position pos:line="212" pos:column="11"/></literal></expr>:<pos:position pos:line="212" pos:column="12"/></case> <comment type="block" pos:line="212" pos:column="13">/* Not Modified */</comment>
    <comment type="block" pos:line="213" pos:column="5">/* 304 means we did a conditional request and it was "Not modified".
     * We shouldn't get any Location: header in this response!
     */</comment>
    <break pos:line="216" pos:column="5">break;<pos:position pos:line="216" pos:column="11"/></break>
  <case pos:line="217" pos:column="3">case <expr><literal type="number" pos:line="217" pos:column="8">305<pos:position pos:line="217" pos:column="11"/></literal></expr>:<pos:position pos:line="217" pos:column="12"/></case> <comment type="block" pos:line="217" pos:column="13">/* Use Proxy */</comment>
    <comment type="block" pos:line="218" pos:column="5">/* (quote from RFC2616, section 10.3.6):
     * "The requested resource MUST be accessed through the proxy given
     * by the Location field. The Location field gives the URI of the
     * proxy.  The recipient is expected to repeat this single request
     * via the proxy. 305 responses MUST only be generated by origin
     * servers."
     */</comment>
    <break pos:line="225" pos:column="5">break;<pos:position pos:line="225" pos:column="11"/></break>
  }<pos:position pos:line="226" pos:column="4"/></block></switch>
  <expr_stmt><expr><call><name pos:line="227" pos:column="3">Curl_pgrsTime<pos:position pos:line="227" pos:column="16"/></name><argument_list pos:line="227" pos:column="16">(<argument><expr><name pos:line="227" pos:column="17">data<pos:position pos:line="227" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="227" pos:column="23">TIMER_REDIRECT<pos:position pos:line="227" pos:column="37"/></name></expr></argument>)<pos:position pos:line="227" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="228" pos:column="3">Curl_pgrsResetTimes<pos:position pos:line="228" pos:column="22"/></name><argument_list pos:line="228" pos:column="22">(<argument><expr><name pos:line="228" pos:column="23">data<pos:position pos:line="228" pos:column="27"/></name></expr></argument>)<pos:position pos:line="228" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="29"/></expr_stmt>

  <return pos:line="230" pos:column="3">return <expr><name pos:line="230" pos:column="10">CURLE_OK<pos:position pos:line="230" pos:column="18"/></name></expr>;<pos:position pos:line="230" pos:column="19"/></return>
}<pos:position pos:line="231" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1886_curl-7.35.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">smtp_connect<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">connectdata<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">conn<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">bool<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">done<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">smtp_conn<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">smtpc<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><operator pos:line="4" pos:column="29">&amp;<pos:position pos:line="4" pos:column="34"/></operator><name><name pos:line="4" pos:column="30">conn<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">proto<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">.<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">smtpc<pos:position pos:line="4" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">pingpong<pos:position pos:line="5" pos:column="18"/></name></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">pp<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><operator pos:line="5" pos:column="25">&amp;<pos:position pos:line="5" pos:column="30"/></operator><name><name pos:line="5" pos:column="26">smtpc<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">pp<pos:position pos:line="5" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="7" pos:column="3">*<pos:position pos:line="7" pos:column="4"/></operator><name pos:line="7" pos:column="4">done<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <name pos:line="7" pos:column="11">FALSE<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt> <comment type="block" pos:line="7" pos:column="18">/* default to not done yet */</comment>

  <comment type="block" pos:line="9" pos:column="3">/* We always support persistent connections in SMTP */</comment>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">conn<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">bits<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">.<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">close<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">FALSE<pos:position pos:line="10" pos:column="27"/></name></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* Set the default response time-out */</comment>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">pp<pos:position pos:line="13" pos:column="5"/></name><operator pos:line="13" pos:column="5">-&gt;<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="7">response_time<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">RESP_TIMEOUT<pos:position pos:line="13" pos:column="35"/></name></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">pp<pos:position pos:line="14" pos:column="5"/></name><operator pos:line="14" pos:column="5">-&gt;<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="7">statemach_act<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">smtp_statemach_act<pos:position pos:line="14" pos:column="41"/></name></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">pp<pos:position pos:line="15" pos:column="5"/></name><operator pos:line="15" pos:column="5">-&gt;<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="7">endofresp<pos:position pos:line="15" pos:column="16"/></name></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">smtp_endofresp<pos:position pos:line="15" pos:column="33"/></name></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">pp<pos:position pos:line="16" pos:column="5"/></name><operator pos:line="16" pos:column="5">-&gt;<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="7">conn<pos:position pos:line="16" pos:column="11"/></name></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <name pos:line="16" pos:column="14">conn<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="18" pos:column="3">/* Set the default preferred authentication mechanism */</comment>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">smtpc<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">-&gt;<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="10">prefmech<pos:position pos:line="19" pos:column="18"/></name></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <name pos:line="19" pos:column="21">SASL_AUTH_ANY<pos:position pos:line="19" pos:column="34"/></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* Initialise the pingpong layer */</comment>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">Curl_pp_init<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><name pos:line="22" pos:column="16">pp<pos:position pos:line="22" pos:column="18"/></name></expr></argument>)<pos:position pos:line="22" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>

  <comment type="block" pos:line="24" pos:column="3">/* Parse the URL options */</comment>
  <expr_stmt><expr><name pos:line="25" pos:column="3">result<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">smtp_parse_url_options<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">conn<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><name pos:line="26" pos:column="6">result<pos:position pos:line="26" pos:column="12"/></name></expr>)<pos:position pos:line="26" pos:column="13"/></condition><then pos:line="26" pos:column="13">
    <block type="pseudo"><return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">result<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></return></block></then></if>

  <comment type="block" pos:line="29" pos:column="3">/* Parse the URL path */</comment>
  <expr_stmt><expr><name pos:line="30" pos:column="3">result<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator> <call><name pos:line="30" pos:column="12">smtp_parse_url_path<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">conn<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><name pos:line="31" pos:column="6">result<pos:position pos:line="31" pos:column="12"/></name></expr>)<pos:position pos:line="31" pos:column="13"/></condition><then pos:line="31" pos:column="13">
    <block type="pseudo"><return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">result<pos:position pos:line="32" pos:column="18"/></name></expr>;<pos:position pos:line="32" pos:column="19"/></return></block></then></if>

  <comment type="block" pos:line="34" pos:column="3">/* Start off waiting for the server greeting response */</comment>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">state<pos:position pos:line="35" pos:column="8"/></name><argument_list pos:line="35" pos:column="8">(<argument><expr><name pos:line="35" pos:column="9">conn<pos:position pos:line="35" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="15">SMTP_SERVERGREET<pos:position pos:line="35" pos:column="31"/></name></expr></argument>)<pos:position pos:line="35" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><name pos:line="37" pos:column="3">result<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <call><name pos:line="37" pos:column="12">smtp_multi_statemach<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">conn<pos:position pos:line="37" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="39">done<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>

  <return pos:line="39" pos:column="3">return <expr><name pos:line="39" pos:column="10">result<pos:position pos:line="39" pos:column="16"/></name></expr>;<pos:position pos:line="39" pos:column="17"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

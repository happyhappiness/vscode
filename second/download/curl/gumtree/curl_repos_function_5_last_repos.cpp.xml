<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_5_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">void<pos:position pos:line="1" pos:column="14"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="15"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">curl_global_init<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">CURL_GLOBAL_ALL<pos:position pos:line="6" pos:column="35"/></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">curl<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <call><name pos:line="8" pos:column="10">curl_easy_init<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">()<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">curl<pos:position pos:line="9" pos:column="10"/></name></expr>)<pos:position pos:line="9" pos:column="11"/></condition><then pos:line="9" pos:column="11"> <block pos:line="9" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">curl_easy_setopt<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">curl<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="28">CURLOPT_VERBOSE<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="45">1L<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">curl_easy_setopt<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">curl<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">CURLOPT_HEADER<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="44">1L<pos:position pos:line="11" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* get the first document */</comment>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">curl_easy_setopt<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">curl<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="28">CURLOPT_URL<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="41">"http://example.com/"<pos:position pos:line="14" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="64"/></expr_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* Perform the request, res will get the return code */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">res<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <call><name pos:line="17" pos:column="11">curl_easy_perform<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">curl<pos:position pos:line="17" pos:column="33"/></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
    <comment type="block" pos:line="18" pos:column="5">/* Check for errors */</comment>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><name pos:line="19" pos:column="8">res<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">!=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">CURLE_OK<pos:position pos:line="19" pos:column="23"/></name></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="7">fprintf<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">stderr<pos:position pos:line="20" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="23">"curl_easy_perform() failed: %s\n"<pos:position pos:line="20" pos:column="57"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="21" pos:column="15">curl_easy_strerror<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">res<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="23" pos:column="5">/* get another document from the same server using the same
       connection */</comment>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">curl_easy_setopt<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">curl<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">CURLOPT_URL<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="41">"http://example.com/docs/"<pos:position pos:line="25" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="69"/></expr_stmt>

    <comment type="block" pos:line="27" pos:column="5">/* Perform the request, res will get the return code */</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">res<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <call><name pos:line="28" pos:column="11">curl_easy_perform<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">curl<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
    <comment type="block" pos:line="29" pos:column="5">/* Check for errors */</comment>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><name pos:line="30" pos:column="8">res<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">!=<pos:position pos:line="30" pos:column="14"/></operator> <name pos:line="30" pos:column="15">CURLE_OK<pos:position pos:line="30" pos:column="23"/></name></expr>)<pos:position pos:line="30" pos:column="24"/></condition><then pos:line="30" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="7">fprintf<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name pos:line="31" pos:column="15">stderr<pos:position pos:line="31" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="23">"curl_easy_perform() failed: %s\n"<pos:position pos:line="31" pos:column="57"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="32" pos:column="15">curl_easy_strerror<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">res<pos:position pos:line="32" pos:column="37"/></name></expr></argument>)<pos:position pos:line="32" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/* always cleanup */</comment>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">curl_easy_cleanup<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">curl<pos:position pos:line="35" pos:column="27"/></name></expr></argument>)<pos:position pos:line="35" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <return pos:line="38" pos:column="3">return <expr><literal type="number" pos:line="38" pos:column="10">0<pos:position pos:line="38" pos:column="11"/></literal></expr>;<pos:position pos:line="38" pos:column="12"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

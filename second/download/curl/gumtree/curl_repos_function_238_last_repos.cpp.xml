<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_238_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">curl_socket_t<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">opensocket<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">void<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">clientp<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">curlsocktype<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">purpose<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                                <parameter><decl><type><name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">curl_sockaddr<pos:position pos:line="2" pos:column="53"/></name></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">address<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">fprintf<pos:position pos:line="4" pos:column="10"/></name><argument_list pos:line="4" pos:column="10">(<argument><expr><name pos:line="4" pos:column="11">MSG_OUT<pos:position pos:line="4" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="20">"\nopensocket :"<pos:position pos:line="4" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="38"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">curl_socket_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">sockfd<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><name pos:line="6" pos:column="26">CURL_SOCKET_BAD<pos:position pos:line="6" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* restrict to IPv4 */</comment>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">purpose<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">==<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">CURLSOCKTYPE_IPCXN<pos:position pos:line="9" pos:column="35"/></name> <operator pos:line="9" pos:column="36">&amp;&amp;<pos:position pos:line="9" pos:column="46"/></operator> <name><name pos:line="9" pos:column="39">address<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">-&gt;<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="48">family<pos:position pos:line="9" pos:column="54"/></name></name> <operator pos:line="9" pos:column="55">==<pos:position pos:line="9" pos:column="57"/></operator> <name pos:line="9" pos:column="58">AF_INET<pos:position pos:line="9" pos:column="65"/></name></expr>)<pos:position pos:line="9" pos:column="66"/></condition><then pos:line="9" pos:column="66"> <block pos:line="9" pos:column="67">{
    <comment type="block" pos:line="10" pos:column="5">/* create a tcp socket object */</comment>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">boost<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">::<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">asio<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">::<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">ip<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">::<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">tcp<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">::<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">socket<pos:position pos:line="11" pos:column="33"/></name></name> <modifier pos:line="11" pos:column="34">*<pos:position pos:line="11" pos:column="35"/></modifier></type><name pos:line="11" pos:column="35">tcp_socket<pos:position pos:line="11" pos:column="45"/></name> <init pos:line="11" pos:column="46">=
      <expr><operator pos:line="12" pos:column="7">new<pos:position pos:line="12" pos:column="10"/></operator> <call><name><name pos:line="12" pos:column="11">boost<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">::<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">asio<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">::<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">ip<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">::<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">tcp<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">::<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">socket<pos:position pos:line="12" pos:column="39"/></name></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">io_service<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="52"/></decl_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* open it and get the native handle*/</comment>
    <decl_stmt><decl><type><name><name pos:line="15" pos:column="5">boost<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">::<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">system<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">::<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">error_code<pos:position pos:line="15" pos:column="30"/></name></name></type> <name pos:line="15" pos:column="31">ec<pos:position pos:line="15" pos:column="33"/></name></decl>;<pos:position pos:line="15" pos:column="34"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="16" pos:column="5">tcp_socket<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">open<pos:position pos:line="16" pos:column="21"/></name></name><argument_list pos:line="16" pos:column="21">(<argument><expr><call><name><name pos:line="16" pos:column="22">boost<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">::<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">asio<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">::<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="35">ip<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">::<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="39">tcp<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">::<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">v4<pos:position pos:line="16" pos:column="46"/></name></name><argument_list pos:line="16" pos:column="46">()<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="16" pos:column="50">ec<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>

    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><name pos:line="18" pos:column="8">ec<pos:position pos:line="18" pos:column="10"/></name></expr>)<pos:position pos:line="18" pos:column="11"/></condition><then pos:line="18" pos:column="11"> <block pos:line="18" pos:column="12">{
      <comment type="block" pos:line="19" pos:column="7">/* An error occurred */</comment>
      <expr_stmt><expr><name><name pos:line="20" pos:column="7">std<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">::<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">cout<pos:position pos:line="20" pos:column="16"/></name></name> <operator pos:line="20" pos:column="17">&lt;&lt;<pos:position pos:line="20" pos:column="25"/></operator> <name><name pos:line="20" pos:column="20">std<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">::<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">endl<pos:position pos:line="20" pos:column="29"/></name></name> <operator pos:line="20" pos:column="30">&lt;&lt;<pos:position pos:line="20" pos:column="38"/></operator> <literal type="string" pos:line="20" pos:column="33">"Couldn't open socket ["<pos:position pos:line="20" pos:column="57"/></literal> <operator pos:line="20" pos:column="58">&lt;&lt;<pos:position pos:line="20" pos:column="66"/></operator> <name pos:line="20" pos:column="61">ec<pos:position pos:line="20" pos:column="63"/></name> <operator pos:line="20" pos:column="64">&lt;&lt;<pos:position pos:line="20" pos:column="72"/></operator> <literal type="string" pos:line="20" pos:column="67">"]["<pos:position pos:line="20" pos:column="71"/></literal> <operator pos:line="20" pos:column="72">&lt;&lt;<pos:position pos:line="20" pos:column="80"/></operator>
        <call><name><name pos:line="21" pos:column="9">ec<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">.<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">message<pos:position pos:line="21" pos:column="19"/></name></name><argument_list pos:line="21" pos:column="19">()<pos:position pos:line="21" pos:column="21"/></argument_list></call> <operator pos:line="21" pos:column="22">&lt;&lt;<pos:position pos:line="21" pos:column="30"/></operator> <literal type="string" pos:line="21" pos:column="25">"]"<pos:position pos:line="21" pos:column="28"/></literal></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">fprintf<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><name pos:line="22" pos:column="15">MSG_OUT<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="24">"\nERROR: Returning CURL_SOCKET_BAD to signal error"<pos:position pos:line="22" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then>
    <else pos:line="24" pos:column="5">else <block pos:line="24" pos:column="10">{
      <expr_stmt><expr><name pos:line="25" pos:column="7">sockfd<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name><name pos:line="25" pos:column="16">tcp_socket<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">native_handle<pos:position pos:line="25" pos:column="41"/></name></name><argument_list pos:line="25" pos:column="41">()<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">fprintf<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><name pos:line="26" pos:column="15">MSG_OUT<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="24">"\nOpened socket %d"<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">sockfd<pos:position pos:line="26" pos:column="52"/></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="54"/></expr_stmt>

      <comment type="block" pos:line="28" pos:column="7">/* save it for monitoring */</comment>
      <expr_stmt><expr><call><name><name pos:line="29" pos:column="7">socket_map<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">insert<pos:position pos:line="29" pos:column="24"/></name></name><argument_list pos:line="29" pos:column="24">(<argument><expr><call><name><name pos:line="29" pos:column="25">std<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">::<pos:position pos:line="29" pos:column="30"/></operator><name><name pos:line="29" pos:column="30">pair<pos:position pos:line="29" pos:column="34"/></name><argument_list type="generic" pos:line="29" pos:column="34">&lt;<argument><expr><name pos:line="29" pos:column="35">curl_socket_t<pos:position pos:line="29" pos:column="48"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="30" pos:column="25">boost<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">::<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">asio<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">::<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="38">ip<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">::<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="42">tcp<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">::<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="47">socket<pos:position pos:line="30" pos:column="53"/></name></name> <operator pos:line="30" pos:column="54">*<pos:position pos:line="30" pos:column="55"/></operator></expr></argument>&gt;<pos:position pos:line="30" pos:column="59"/></argument_list></name></name><argument_list pos:line="30" pos:column="56">(<argument><expr><name pos:line="30" pos:column="57">sockfd<pos:position pos:line="30" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="65">tcp_socket<pos:position pos:line="30" pos:column="75"/></name></expr></argument>)<pos:position pos:line="30" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></else></if>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <return pos:line="34" pos:column="3">return <expr><name pos:line="34" pos:column="10">sockfd<pos:position pos:line="34" pos:column="16"/></name></expr>;<pos:position pos:line="34" pos:column="17"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

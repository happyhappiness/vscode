<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_15_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">server_push_callback<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">CURL<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">parent<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="2" pos:column="33">CURL<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">easy<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="3" pos:column="33">size_t<pos:position pos:line="3" pos:column="39"/></name></type> <name pos:line="3" pos:column="40">num_headers<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>,
                                <parameter><decl><type><name><name pos:line="4" pos:column="33">struct<pos:position pos:line="4" pos:column="39"/></name> <name pos:line="4" pos:column="40">curl_pushheaders<pos:position pos:line="4" pos:column="56"/></name></name> <modifier pos:line="4" pos:column="57">*<pos:position pos:line="4" pos:column="58"/></modifier></type><name pos:line="4" pos:column="58">headers<pos:position pos:line="4" pos:column="65"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="5" pos:column="33">void<pos:position pos:line="5" pos:column="37"/></name> <modifier pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></modifier></type><name pos:line="5" pos:column="39">userp<pos:position pos:line="5" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="45"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">headp<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name> <modifier pos:line="9" pos:column="7">*<pos:position pos:line="9" pos:column="8"/></modifier></type><name pos:line="9" pos:column="8">transfers<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><operator pos:line="9" pos:column="20">(<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">int<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></operator><operator pos:line="9" pos:column="26">)<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">userp<pos:position pos:line="9" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">filename<pos:position pos:line="10" pos:column="16"/></name><index pos:line="10" pos:column="16">[<expr><literal type="number" pos:line="10" pos:column="17">128<pos:position pos:line="10" pos:column="20"/></literal></expr>]<pos:position pos:line="10" pos:column="21"/></index></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">FILE<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">out<pos:position pos:line="11" pos:column="12"/></name></decl>;<pos:position pos:line="11" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="12" pos:column="3">static<pos:position pos:line="12" pos:column="9"/></specifier> <type><name pos:line="12" pos:column="10">unsigned<pos:position pos:line="12" pos:column="18"/></name> <name pos:line="12" pos:column="19">int<pos:position pos:line="12" pos:column="22"/></name></type> <name pos:line="12" pos:column="23">count<pos:position pos:line="12" pos:column="28"/></name> <init pos:line="12" pos:column="29">= <expr><literal type="number" pos:line="12" pos:column="31">0<pos:position pos:line="12" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="14" pos:column="3">(<pos:position pos:line="14" pos:column="4"/></operator><name pos:line="14" pos:column="4">void<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">)<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">parent<pos:position pos:line="14" pos:column="15"/></name></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt> <comment type="block" pos:line="14" pos:column="17">/* we have no use for this */</comment>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">snprintf<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">filename<pos:position pos:line="16" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="22">128<pos:position pos:line="16" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="27">"push%u"<pos:position pos:line="16" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">count<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">++<pos:position pos:line="16" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>

  <comment type="block" pos:line="18" pos:column="3">/* here's a new stream, save it in a new file for each new push */</comment>
  <expr_stmt><expr><name pos:line="19" pos:column="3">out<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <call><name pos:line="19" pos:column="9">fopen<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">filename<pos:position pos:line="19" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="25">"wb"<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* write to this file */</comment>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">curl_easy_setopt<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">easy<pos:position pos:line="22" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="26">CURLOPT_WRITEDATA<pos:position pos:line="22" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">out<pos:position pos:line="22" pos:column="48"/></name></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">fprintf<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><name pos:line="24" pos:column="11">stderr<pos:position pos:line="24" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="19">"**** push callback approves stream %u, got %d headers!\n"<pos:position pos:line="24" pos:column="77"/></literal></expr></argument>,
          <argument><expr><name pos:line="25" pos:column="11">count<pos:position pos:line="25" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="18">(<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">int<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">)<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">num_headers<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>

  <for pos:line="27" pos:column="3">for<control pos:line="27" pos:column="6">(<init><expr><name pos:line="27" pos:column="7">i<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">=<pos:position pos:line="27" pos:column="10"/></operator> <literal type="number" pos:line="27" pos:column="11">0<pos:position pos:line="27" pos:column="12"/></literal></expr>;<pos:position pos:line="27" pos:column="13"/></init> <condition><expr><name pos:line="27" pos:column="14">i<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">&lt;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="16">num_headers<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></condition> <incr><expr><name pos:line="27" pos:column="29">i<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">++<pos:position pos:line="27" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="33"/></control> <block pos:line="27" pos:column="34">{
    <expr_stmt><expr><name pos:line="28" pos:column="5">headp<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <call><name pos:line="28" pos:column="13">curl_pushheader_bynum<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">headers<pos:position pos:line="28" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="44">i<pos:position pos:line="28" pos:column="45"/></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">fprintf<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name pos:line="29" pos:column="13">stderr<pos:position pos:line="29" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="21">"**** header %u: %s\n"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="45">(<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="46">int<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">)<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="50">i<pos:position pos:line="29" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="53">headp<pos:position pos:line="29" pos:column="58"/></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="32" pos:column="3">headp<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <call><name pos:line="32" pos:column="11">curl_pushheader_byname<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">headers<pos:position pos:line="32" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="43">":path"<pos:position pos:line="32" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt>
  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><name pos:line="33" pos:column="6">headp<pos:position pos:line="33" pos:column="11"/></name></expr>)<pos:position pos:line="33" pos:column="12"/></condition><then pos:line="33" pos:column="12"> <block pos:line="33" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">fprintf<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">stderr<pos:position pos:line="34" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="21">"**** The PATH is %s\n"<pos:position pos:line="34" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="46">headp<pos:position pos:line="34" pos:column="51"/></name></expr></argument> <comment type="block" pos:line="34" pos:column="52">/* skip :path + colon */</comment>)<pos:position pos:line="34" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="78"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="37" pos:column="3">(<pos:position pos:line="37" pos:column="4"/></operator><operator pos:line="37" pos:column="4">*<pos:position pos:line="37" pos:column="5"/></operator><name pos:line="37" pos:column="5">transfers<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">)<pos:position pos:line="37" pos:column="15"/></operator><operator pos:line="37" pos:column="15">++<pos:position pos:line="37" pos:column="17"/></operator></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt> <comment type="block" pos:line="37" pos:column="19">/* one more */</comment>
  <return pos:line="38" pos:column="3">return <expr><name pos:line="38" pos:column="10">CURL_PUSH_OK<pos:position pos:line="38" pos:column="22"/></name></expr>;<pos:position pos:line="38" pos:column="23"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

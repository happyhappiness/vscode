<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1213_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ssh_check_fingerprint<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">connectdata<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">conn<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">ssh_conn<pos:position pos:line="3" pos:column="18"/></name></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">sshc<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><operator pos:line="3" pos:column="27">&amp;<pos:position pos:line="3" pos:column="32"/></operator><name><name pos:line="3" pos:column="28">conn<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">proto<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">.<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="40">sshc<pos:position pos:line="3" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">pubkey_md5<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">data<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">set<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">.<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">str<pos:position pos:line="5" pos:column="41"/></name><index pos:line="5" pos:column="41">[<expr><name pos:line="5" pos:column="42">STRING_SSH_HOST_PUBLIC_KEY_MD5<pos:position pos:line="5" pos:column="72"/></name></expr>]<pos:position pos:line="5" pos:column="73"/></index></name></expr></init></decl>;<pos:position pos:line="5" pos:column="74"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">md5buffer<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><literal type="number" pos:line="6" pos:column="18">33<pos:position pos:line="6" pos:column="20"/></literal></expr>]<pos:position pos:line="6" pos:column="21"/></index></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">fingerprint<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><call><name pos:line="9" pos:column="29">libssh2_hostkey_hash<pos:position pos:line="9" pos:column="49"/></name><argument_list pos:line="9" pos:column="49">(<argument><expr><name><name pos:line="9" pos:column="50">sshc<pos:position pos:line="9" pos:column="54"/></name><operator pos:line="9" pos:column="54">-&gt;<pos:position pos:line="9" pos:column="59"/></operator><name pos:line="9" pos:column="56">ssh_session<pos:position pos:line="9" pos:column="67"/></name></name></expr></argument>,
      <argument><expr><name pos:line="10" pos:column="7">LIBSSH2_HOSTKEY_HASH_MD5<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">fingerprint<pos:position pos:line="12" pos:column="17"/></name></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18"> <block pos:line="12" pos:column="19">{
    <comment type="block" pos:line="13" pos:column="5">/* The fingerprint points to static storage (!), don't free() it. */</comment>
    <for pos:line="14" pos:column="5">for<control pos:line="14" pos:column="8">(<init><expr><name pos:line="14" pos:column="9">i<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></init> <condition><expr><name pos:line="14" pos:column="16">i<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">&lt;<pos:position pos:line="14" pos:column="22"/></operator> <literal type="number" pos:line="14" pos:column="20">16<pos:position pos:line="14" pos:column="22"/></literal></expr>;<pos:position pos:line="14" pos:column="23"/></condition> <incr><expr><name pos:line="14" pos:column="24">i<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">++<pos:position pos:line="14" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="28"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="7">snprintf<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><operator pos:line="15" pos:column="16">&amp;<pos:position pos:line="15" pos:column="21"/></operator><name><name pos:line="15" pos:column="17">md5buffer<pos:position pos:line="15" pos:column="26"/></name><index pos:line="15" pos:column="26">[<expr><name pos:line="15" pos:column="27">i<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></operator><literal type="number" pos:line="15" pos:column="29">2<pos:position pos:line="15" pos:column="30"/></literal></expr>]<pos:position pos:line="15" pos:column="31"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="33">3<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="36">"%02x"<pos:position pos:line="15" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="44">(<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="45">unsigned<pos:position pos:line="15" pos:column="53"/></name> <name pos:line="15" pos:column="54">char<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">)<pos:position pos:line="15" pos:column="59"/></operator> <name><name pos:line="15" pos:column="60">fingerprint<pos:position pos:line="15" pos:column="71"/></name><index pos:line="15" pos:column="71">[<expr><name pos:line="15" pos:column="72">i<pos:position pos:line="15" pos:column="73"/></name></expr>]<pos:position pos:line="15" pos:column="74"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="76"/></expr_stmt></block></for>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">infof<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><name pos:line="16" pos:column="11">data<pos:position pos:line="16" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="17">"SSH MD5 fingerprint: %s\n"<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="46">md5buffer<pos:position pos:line="16" pos:column="55"/></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="19" pos:column="3">/* Before we authenticate we check the hostkey's MD5 fingerprint
   * against a known fingerprint, if available.
   */</comment>
  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name pos:line="22" pos:column="6">pubkey_md5<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">&amp;&amp;<pos:position pos:line="22" pos:column="27"/></operator> <call><name pos:line="22" pos:column="20">strlen<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">pubkey_md5<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call> <operator pos:line="22" pos:column="39">==<pos:position pos:line="22" pos:column="41"/></operator> <literal type="number" pos:line="22" pos:column="42">32<pos:position pos:line="22" pos:column="44"/></literal></expr>)<pos:position pos:line="22" pos:column="45"/></condition><then pos:line="22" pos:column="45"> <block pos:line="22" pos:column="46">{
    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">(<expr><operator pos:line="23" pos:column="8">!<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="9">fingerprint<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">||<pos:position pos:line="23" pos:column="23"/></operator> <operator pos:line="23" pos:column="24">!<pos:position pos:line="23" pos:column="25"/></operator><call><name pos:line="23" pos:column="25">strcasecompare<pos:position pos:line="23" pos:column="39"/></name><argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">md5buffer<pos:position pos:line="23" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="51">pubkey_md5<pos:position pos:line="23" pos:column="61"/></name></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="63"/></condition><then pos:line="23" pos:column="63"> <block pos:line="23" pos:column="64">{
      <if pos:line="24" pos:column="7">if<condition pos:line="24" pos:column="9">(<expr><name pos:line="24" pos:column="10">fingerprint<pos:position pos:line="24" pos:column="21"/></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="9">failf<pos:position pos:line="25" pos:column="14"/></name><argument_list pos:line="25" pos:column="14">(<argument><expr><name pos:line="25" pos:column="15">data<pos:position pos:line="25" pos:column="19"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="26" pos:column="13">"Denied establishing ssh session: mismatch md5 fingerprint. "<pos:position pos:line="26" pos:column="74"/></literal>
            <literal type="string" pos:line="27" pos:column="13">"Remote %s is not equal to %s"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="45">md5buffer<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">pubkey_md5<pos:position pos:line="27" pos:column="66"/></name></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="68"/></expr_stmt></block></then>
      <else pos:line="28" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="9">failf<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">data<pos:position pos:line="29" pos:column="19"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="30" pos:column="13">"Denied establishing ssh session: md5 fingerprint not available"<pos:position pos:line="30" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="79"/></expr_stmt></block></else></if>
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">state<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><name pos:line="31" pos:column="13">conn<pos:position pos:line="31" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="19">SSH_SESSION_FREE<pos:position pos:line="31" pos:column="35"/></name></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="32" pos:column="7">sshc<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">actualcode<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <name pos:line="32" pos:column="26">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="32" pos:column="56"/></name></expr>;<pos:position pos:line="32" pos:column="57"/></expr_stmt>
      <return pos:line="33" pos:column="7">return <expr><name><name pos:line="33" pos:column="14">sshc<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">-&gt;<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="20">actualcode<pos:position pos:line="33" pos:column="30"/></name></name></expr>;<pos:position pos:line="33" pos:column="31"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">infof<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><name pos:line="35" pos:column="11">data<pos:position pos:line="35" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="17">"MD5 checksum match!\n"<pos:position pos:line="35" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
    <comment type="block" pos:line="36" pos:column="5">/* as we already matched, we skip the check for known hosts */</comment>
    <return pos:line="37" pos:column="5">return <expr><name pos:line="37" pos:column="12">CURLE_OK<pos:position pos:line="37" pos:column="20"/></name></expr>;<pos:position pos:line="37" pos:column="21"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>
  <return pos:line="39" pos:column="3">return <expr><call><name pos:line="39" pos:column="10">ssh_knownhost<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">conn<pos:position pos:line="39" pos:column="28"/></name></expr></argument>)<pos:position pos:line="39" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="30"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

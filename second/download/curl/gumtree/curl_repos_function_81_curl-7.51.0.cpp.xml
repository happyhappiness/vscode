<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_81_curl-7.51.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">void<pos:position pos:line="1" pos:column="14"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="15"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">FtpFile<pos:position pos:line="5" pos:column="17"/></name></name></type> <name pos:line="5" pos:column="18">ftpfile<pos:position pos:line="5" pos:column="25"/></name><init pos:line="5" pos:column="25">=<expr><block pos:line="5" pos:column="26">{
    <expr><literal type="string" pos:line="6" pos:column="5">"curl.tar.gz"<pos:position pos:line="6" pos:column="18"/></literal></expr>, <comment type="block" pos:line="6" pos:column="20">/* name to store the file as if successful */</comment>
    <expr><name pos:line="7" pos:column="5">NULL<pos:position pos:line="7" pos:column="9"/></name></expr>
  }<pos:position pos:line="8" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="5"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">curl_global_init<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">CURL_GLOBAL_DEFAULT<pos:position pos:line="10" pos:column="39"/></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">curl<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <call><name pos:line="12" pos:column="10">curl_easy_init<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">()<pos:position pos:line="12" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">curl<pos:position pos:line="13" pos:column="10"/></name></expr>)<pos:position pos:line="13" pos:column="11"/></condition><then pos:line="13" pos:column="11"> <block pos:line="13" pos:column="12">{
    <comment type="block" pos:line="14" pos:column="5">/*
     * You better replace the URL with one that works!
     */</comment>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">curl_easy_setopt<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">curl<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="28">CURLOPT_URL<pos:position pos:line="17" pos:column="39"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="18" pos:column="22">"ftp://ftp.example.com/curl/curl-7.9.2.tar.gz"<pos:position pos:line="18" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="70"/></expr_stmt>
    <comment type="block" pos:line="19" pos:column="5">/* Define our callback to get called when there's data to be written */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">curl_easy_setopt<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">curl<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="28">CURLOPT_WRITEFUNCTION<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">my_fwrite<pos:position pos:line="20" pos:column="60"/></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt>
    <comment type="block" pos:line="21" pos:column="5">/* Set a pointer to our struct to pass to the callback */</comment>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">curl_easy_setopt<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">curl<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="28">CURLOPT_WRITEDATA<pos:position pos:line="22" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="47">&amp;<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="48">ftpfile<pos:position pos:line="22" pos:column="55"/></name></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="24" pos:column="5">/* Switch on full protocol/debug output */</comment>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">curl_easy_setopt<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">curl<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">CURLOPT_VERBOSE<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="45">1L<pos:position pos:line="25" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><name pos:line="27" pos:column="5">res<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">=<pos:position pos:line="27" pos:column="10"/></operator> <call><name pos:line="27" pos:column="11">curl_easy_perform<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">curl<pos:position pos:line="27" pos:column="33"/></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>

    <comment type="block" pos:line="29" pos:column="5">/* always cleanup */</comment>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">curl_easy_cleanup<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">curl<pos:position pos:line="30" pos:column="27"/></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>

    <if pos:line="32" pos:column="5">if<condition pos:line="32" pos:column="7">(<expr><name pos:line="32" pos:column="8">CURLE_OK<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">!=<pos:position pos:line="32" pos:column="19"/></operator> <name pos:line="32" pos:column="20">res<pos:position pos:line="32" pos:column="23"/></name></expr>)<pos:position pos:line="32" pos:column="24"/></condition><then pos:line="32" pos:column="24"> <block pos:line="32" pos:column="25">{
      <comment type="block" pos:line="33" pos:column="7">/* we failed */</comment>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">fprintf<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><name pos:line="34" pos:column="15">stderr<pos:position pos:line="34" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="23">"curl told us %d\n"<pos:position pos:line="34" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="44">res<pos:position pos:line="34" pos:column="47"/></name></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <if pos:line="38" pos:column="3">if<condition pos:line="38" pos:column="5">(<expr><name><name pos:line="38" pos:column="6">ftpfile<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">.<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">stream<pos:position pos:line="38" pos:column="20"/></name></name></expr>)<pos:position pos:line="38" pos:column="21"/></condition><then pos:line="38" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="5">fclose<pos:position pos:line="39" pos:column="11"/></name><argument_list pos:line="39" pos:column="11">(<argument><expr><name><name pos:line="39" pos:column="12">ftpfile<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">.<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="20">stream<pos:position pos:line="39" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt></block></then></if> <comment type="block" pos:line="39" pos:column="29">/* close the local file */</comment>

  <expr_stmt><expr><call><name pos:line="41" pos:column="3">curl_global_cleanup<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">()<pos:position pos:line="41" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="25"/></expr_stmt>

  <return pos:line="43" pos:column="3">return <expr><literal type="number" pos:line="43" pos:column="10">0<pos:position pos:line="43" pos:column="11"/></literal></expr>;<pos:position pos:line="43" pos:column="12"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

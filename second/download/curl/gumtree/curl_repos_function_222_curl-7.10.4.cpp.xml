<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_222_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_http_connect<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">connectdata<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">conn<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SessionHandle<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">data<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator><name><name pos:line="6" pos:column="8">conn<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">data<pos:position pos:line="6" pos:column="18"/></name></name></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* If we are not using a proxy and we want a secure connection,
   * perform SSL initialization &amp; connection now.
   * If using a proxy with https, then we must tell the proxy to CONNECT
   * us to the host we want to talk to.  Only after the connect
   * has occured, can we start talking SSL
   */</comment>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name><name pos:line="15" pos:column="6">conn<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">bits<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">.<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">httpproxy<pos:position pos:line="15" pos:column="26"/></name></name> <operator pos:line="15" pos:column="27">&amp;&amp;<pos:position pos:line="15" pos:column="37"/></operator>
     <operator pos:line="16" pos:column="6">(<pos:position pos:line="16" pos:column="7"/></operator><operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><name><name pos:line="16" pos:column="8">conn<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">protocol<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">&amp;<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="25">PROT_HTTPS<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">)<pos:position pos:line="16" pos:column="36"/></operator> <operator pos:line="16" pos:column="37">||<pos:position pos:line="16" pos:column="39"/></operator> <name><name pos:line="16" pos:column="40">data<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">-&gt;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="46">set<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">.<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="50">tunnel_thru_httpproxy<pos:position pos:line="16" pos:column="71"/></name></name><operator pos:line="16" pos:column="71">)<pos:position pos:line="16" pos:column="72"/></operator></expr>)<pos:position pos:line="16" pos:column="73"/></condition><then pos:line="16" pos:column="73"> <block pos:line="16" pos:column="74">{

    <comment type="block" pos:line="18" pos:column="5">/* either HTTPS over proxy, OR explicitly asked for a tunnel */</comment>
    <expr_stmt><expr><name pos:line="19" pos:column="5">result<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">Curl_ConnectHTTPProxyTunnel<pos:position pos:line="19" pos:column="41"/></name><argument_list pos:line="19" pos:column="41">(<argument><expr><name pos:line="19" pos:column="42">conn<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="48">conn<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">-&gt;<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="54">firstsocket<pos:position pos:line="19" pos:column="65"/></name></name></expr></argument>,
                                         <argument><expr><name><name pos:line="20" pos:column="42">conn<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">-&gt;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="48">hostname<pos:position pos:line="20" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="58">conn<pos:position pos:line="20" pos:column="62"/></name><operator pos:line="20" pos:column="62">-&gt;<pos:position pos:line="20" pos:column="67"/></operator><name pos:line="20" pos:column="64">remote_port<pos:position pos:line="20" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="77"/></expr_stmt>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><name pos:line="21" pos:column="8">CURLE_OK<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">!=<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">result<pos:position pos:line="21" pos:column="26"/></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27">
      <block type="pseudo"><return pos:line="22" pos:column="7">return <expr><name pos:line="22" pos:column="14">result<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>    

  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><name><name pos:line="25" pos:column="6">conn<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">protocol<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">&amp;<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="23">PROT_HTTPS<pos:position pos:line="25" pos:column="33"/></name></expr>)<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34"> <block pos:line="25" pos:column="35">{
    <comment type="block" pos:line="26" pos:column="5">/* now, perform the SSL initialization for this socket */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">result<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">Curl_SSLConnect<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">conn<pos:position pos:line="27" pos:column="34"/></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><name pos:line="28" pos:column="8">result<pos:position pos:line="28" pos:column="14"/></name></expr>)<pos:position pos:line="28" pos:column="15"/></condition><then pos:line="28" pos:column="15">
      <block type="pseudo"><return pos:line="29" pos:column="7">return <expr><name pos:line="29" pos:column="14">result<pos:position pos:line="29" pos:column="20"/></name></expr>;<pos:position pos:line="29" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">(<expr><name><name pos:line="32" pos:column="6">conn<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">bits<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">.<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">user_passwd<pos:position pos:line="32" pos:column="28"/></name></name> <operator pos:line="32" pos:column="29">&amp;&amp;<pos:position pos:line="32" pos:column="39"/></operator> <operator pos:line="32" pos:column="32">!<pos:position pos:line="32" pos:column="33"/></operator><name><name pos:line="32" pos:column="33">data<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">-&gt;<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="39">state<pos:position pos:line="32" pos:column="44"/></name><operator pos:line="32" pos:column="44">.<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="45">this_is_a_follow<pos:position pos:line="32" pos:column="61"/></name></name></expr>)<pos:position pos:line="32" pos:column="62"/></condition><then pos:line="32" pos:column="62"> <block pos:line="32" pos:column="63">{
    <comment type="block" pos:line="33" pos:column="5">/* Authorization: is requested, this is not a followed location, get the
       original host name */</comment>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name><name pos:line="35" pos:column="9">data<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">state<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">.<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="21">auth_host<pos:position pos:line="35" pos:column="30"/></name></name></expr>)<pos:position pos:line="35" pos:column="31"/></condition><then pos:line="35" pos:column="31">
      <comment type="block" pos:line="36" pos:column="7">/* Free to avoid leaking memory on multiple requests*/</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="7">free<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><name><name pos:line="37" pos:column="12">data<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">state<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">.<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="24">auth_host<pos:position pos:line="37" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="39" pos:column="5">data<pos:position pos:line="39" pos:column="9"/></name><operator pos:line="39" pos:column="9">-&gt;<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="11">state<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">.<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">auth_host<pos:position pos:line="39" pos:column="26"/></name></name> <operator pos:line="39" pos:column="27">=<pos:position pos:line="39" pos:column="28"/></operator> <call><name pos:line="39" pos:column="29">strdup<pos:position pos:line="39" pos:column="35"/></name><argument_list pos:line="39" pos:column="35">(<argument><expr><name><name pos:line="39" pos:column="36">conn<pos:position pos:line="39" pos:column="40"/></name><operator pos:line="39" pos:column="40">-&gt;<pos:position pos:line="39" pos:column="45"/></operator><name pos:line="39" pos:column="42">hostname<pos:position pos:line="39" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="52"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <return pos:line="42" pos:column="3">return <expr><name pos:line="42" pos:column="10">CURLE_OK<pos:position pos:line="42" pos:column="18"/></name></expr>;<pos:position pos:line="42" pos:column="19"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

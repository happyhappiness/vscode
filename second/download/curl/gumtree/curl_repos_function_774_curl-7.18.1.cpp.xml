<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_774_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLMcode<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">curl_multi_cleanup<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">CURLM<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">multi_handle<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Curl_multi<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">multi<pos:position pos:line="3" pos:column="27"/></name><init pos:line="3" pos:column="27">=<expr><operator pos:line="3" pos:column="28">(<pos:position pos:line="3" pos:column="29"/></operator>struct <name pos:line="3" pos:column="36">Curl_multi<pos:position pos:line="3" pos:column="46"/></name> <operator pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></operator><operator pos:line="3" pos:column="48">)<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="49">multi_handle<pos:position pos:line="3" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="62"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_one_easy<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">easy<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Curl_one_easy<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">nexteasy<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">closure<pos:position pos:line="7" pos:column="17"/></name></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">cl<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">closure<pos:position pos:line="8" pos:column="17"/></name></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">n<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><call><name pos:line="10" pos:column="6">GOOD_MULTI_HANDLE<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">multi<pos:position pos:line="10" pos:column="29"/></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31"> <block pos:line="10" pos:column="32">{
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">multi<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">type<pos:position pos:line="11" pos:column="16"/></name></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt> <comment type="block" pos:line="11" pos:column="22">/* not good anymore */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">Curl_hash_destroy<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name><name pos:line="12" pos:column="23">multi<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">hostcache<pos:position pos:line="12" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">Curl_hash_destroy<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name><name pos:line="13" pos:column="23">multi<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">sockhash<pos:position pos:line="13" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="15" pos:column="5">/* go over all connections that have close actions */</comment>
    <for pos:line="16" pos:column="5">for<control pos:line="16" pos:column="8">(<init><expr><name pos:line="16" pos:column="9">i<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator><literal type="number" pos:line="16" pos:column="11">0<pos:position pos:line="16" pos:column="12"/></literal></expr>;<pos:position pos:line="16" pos:column="13"/></init> <condition><expr><name pos:line="16" pos:column="14">i<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">&lt;<pos:position pos:line="16" pos:column="19"/></operator> <name><name pos:line="16" pos:column="17">multi<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">connc<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">num<pos:position pos:line="16" pos:column="34"/></name></name></expr>;<pos:position pos:line="16" pos:column="35"/></condition> <incr><expr><name pos:line="16" pos:column="36">i<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">++<pos:position pos:line="16" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="40"/></control> <block pos:line="16" pos:column="41">{
      <if pos:line="17" pos:column="7">if<condition pos:line="17" pos:column="9">(<expr><name><name pos:line="17" pos:column="10">multi<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">connc<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">connects<pos:position pos:line="17" pos:column="32"/></name><index pos:line="17" pos:column="32">[<expr><name pos:line="17" pos:column="33">i<pos:position pos:line="17" pos:column="34"/></name></expr>]<pos:position pos:line="17" pos:column="35"/></index></name> <operator pos:line="17" pos:column="36">&amp;&amp;<pos:position pos:line="17" pos:column="46"/></operator>
         <name><name pos:line="18" pos:column="10">multi<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">connc<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">connects<pos:position pos:line="18" pos:column="32"/></name><index pos:line="18" pos:column="32">[<expr><name pos:line="18" pos:column="33">i<pos:position pos:line="18" pos:column="34"/></name></expr>]<pos:position pos:line="18" pos:column="35"/></index></name><operator pos:line="18" pos:column="35">-&gt;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="37">protocol<pos:position pos:line="18" pos:column="45"/></name> <operator pos:line="18" pos:column="46">&amp;<pos:position pos:line="18" pos:column="51"/></operator> <name pos:line="18" pos:column="48">PROT_CLOSEACTION<pos:position pos:line="18" pos:column="64"/></name></expr>)<pos:position pos:line="18" pos:column="65"/></condition><then pos:line="18" pos:column="65"> <block pos:line="18" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">Curl_disconnect<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name><name pos:line="19" pos:column="25">multi<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">-&gt;<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="32">connc<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">connects<pos:position pos:line="19" pos:column="47"/></name><index pos:line="19" pos:column="47">[<expr><name pos:line="19" pos:column="48">i<pos:position pos:line="19" pos:column="49"/></name></expr>]<pos:position pos:line="19" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">multi<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">connc<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">connects<pos:position pos:line="20" pos:column="31"/></name><index pos:line="20" pos:column="31">[<expr><name pos:line="20" pos:column="32">i<pos:position pos:line="20" pos:column="33"/></name></expr>]<pos:position pos:line="20" pos:column="34"/></index></name> <operator pos:line="20" pos:column="35">=<pos:position pos:line="20" pos:column="36"/></operator> <name pos:line="20" pos:column="37">NULL<pos:position pos:line="20" pos:column="41"/></name></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt>
      }<pos:position pos:line="21" pos:column="8"/></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></for>
    <comment type="block" pos:line="23" pos:column="5">/* now walk through the list of handles we kept around only to be
       able to close connections "properly" */</comment>
    <expr_stmt><expr><name pos:line="25" pos:column="5">cl<pos:position pos:line="25" pos:column="7"/></name> <operator pos:line="25" pos:column="8">=<pos:position pos:line="25" pos:column="9"/></operator> <name><name pos:line="25" pos:column="10">multi<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">closure<pos:position pos:line="25" pos:column="24"/></name></name></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
    <while pos:line="26" pos:column="5">while<condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">cl<pos:position pos:line="26" pos:column="13"/></name></expr>)<pos:position pos:line="26" pos:column="14"/></condition> <block pos:line="26" pos:column="15">{
      <expr_stmt><expr><name><name pos:line="27" pos:column="7">cl<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">-&gt;<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="11">easy_handle<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">state<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">.<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">shared_conn<pos:position pos:line="27" pos:column="41"/></name></name> <operator pos:line="27" pos:column="42">=<pos:position pos:line="27" pos:column="43"/></operator> <name pos:line="27" pos:column="44">NULL<pos:position pos:line="27" pos:column="48"/></name></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt> <comment type="block" pos:line="27" pos:column="50">/* no more shared */</comment>
      <if pos:line="28" pos:column="7">if<condition pos:line="28" pos:column="9">(<expr><name><name pos:line="28" pos:column="10">cl<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">easy_handle<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">-&gt;<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="27">state<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">.<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="33">closed<pos:position pos:line="28" pos:column="39"/></name></name></expr>)<pos:position pos:line="28" pos:column="40"/></condition><then pos:line="28" pos:column="40">
        <comment type="block" pos:line="29" pos:column="9">/* close handle only if curl_easy_cleanup() already has been called
           for this easy handle */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="9">Curl_close<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><name><name pos:line="31" pos:column="20">cl<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">-&gt;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="24">easy_handle<pos:position pos:line="31" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="32" pos:column="7">n<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <name><name pos:line="32" pos:column="11">cl<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">-&gt;<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="15">next<pos:position pos:line="32" pos:column="19"/></name></name></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">free<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><name pos:line="33" pos:column="12">cl<pos:position pos:line="33" pos:column="14"/></name></expr></argument>)<pos:position pos:line="33" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><name pos:line="34" pos:column="7">cl<pos:position pos:line="34" pos:column="9"/></name><operator pos:line="34" pos:column="9">=<pos:position pos:line="34" pos:column="10"/></operator> <name pos:line="34" pos:column="11">n<pos:position pos:line="34" pos:column="12"/></name></expr>;<pos:position pos:line="34" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">Curl_rm_connc<pos:position pos:line="37" pos:column="18"/></name><argument_list pos:line="37" pos:column="18">(<argument><expr><name><name pos:line="37" pos:column="19">multi<pos:position pos:line="37" pos:column="24"/></name><operator pos:line="37" pos:column="24">-&gt;<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="26">connc<pos:position pos:line="37" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="39" pos:column="5">/* remove all easy handles */</comment>
    <expr_stmt><expr><name pos:line="40" pos:column="5">easy<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <name><name pos:line="40" pos:column="12">multi<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">-&gt;<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="19">easy<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">.<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">next<pos:position pos:line="40" pos:column="28"/></name></name></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
    <while pos:line="41" pos:column="5">while<condition pos:line="41" pos:column="10">(<expr><name pos:line="41" pos:column="11">easy<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">!=<pos:position pos:line="41" pos:column="18"/></operator> <operator pos:line="41" pos:column="19">&amp;<pos:position pos:line="41" pos:column="24"/></operator><name><name pos:line="41" pos:column="20">multi<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">-&gt;<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="27">easy<pos:position pos:line="41" pos:column="31"/></name></name></expr>)<pos:position pos:line="41" pos:column="32"/></condition> <block pos:line="41" pos:column="33">{
      <expr_stmt><expr><name pos:line="42" pos:column="7">nexteasy<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator><name><name pos:line="42" pos:column="16">easy<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">-&gt;<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="22">next<pos:position pos:line="42" pos:column="26"/></name></name></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt>
      <if pos:line="43" pos:column="7">if<condition pos:line="43" pos:column="9">(<expr><name><name pos:line="43" pos:column="10">easy<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">easy_handle<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">dns<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">.<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="33">hostcachetype<pos:position pos:line="43" pos:column="46"/></name></name> <operator pos:line="43" pos:column="47">==<pos:position pos:line="43" pos:column="49"/></operator> <name pos:line="43" pos:column="50">HCACHE_MULTI<pos:position pos:line="43" pos:column="62"/></name></expr>)<pos:position pos:line="43" pos:column="63"/></condition><then pos:line="43" pos:column="63"> <block pos:line="43" pos:column="64">{
        <comment type="block" pos:line="44" pos:column="9">/* clear out the usage of the shared DNS cache */</comment>
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">easy<pos:position pos:line="45" pos:column="13"/></name><operator pos:line="45" pos:column="13">-&gt;<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="15">easy_handle<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">-&gt;<pos:position pos:line="45" pos:column="31"/></operator><name pos:line="45" pos:column="28">dns<pos:position pos:line="45" pos:column="31"/></name><operator pos:line="45" pos:column="31">.<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="32">hostcache<pos:position pos:line="45" pos:column="41"/></name></name> <operator pos:line="45" pos:column="42">=<pos:position pos:line="45" pos:column="43"/></operator> <name pos:line="45" pos:column="44">NULL<pos:position pos:line="45" pos:column="48"/></name></expr>;<pos:position pos:line="45" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">easy<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">-&gt;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="15">easy_handle<pos:position pos:line="46" pos:column="26"/></name><operator pos:line="46" pos:column="26">-&gt;<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="28">dns<pos:position pos:line="46" pos:column="31"/></name><operator pos:line="46" pos:column="31">.<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="32">hostcachetype<pos:position pos:line="46" pos:column="45"/></name></name> <operator pos:line="46" pos:column="46">=<pos:position pos:line="46" pos:column="47"/></operator> <name pos:line="46" pos:column="48">HCACHE_NONE<pos:position pos:line="46" pos:column="59"/></name></expr>;<pos:position pos:line="46" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="47" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="49" pos:column="7">/* Clear the pointer to the connection cache */</comment>
      <expr_stmt><expr><name><name pos:line="50" pos:column="7">easy<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">-&gt;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="13">easy_handle<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">-&gt;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="26">state<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">.<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="32">connc<pos:position pos:line="50" pos:column="37"/></name></name> <operator pos:line="50" pos:column="38">=<pos:position pos:line="50" pos:column="39"/></operator> <name pos:line="50" pos:column="40">NULL<pos:position pos:line="50" pos:column="44"/></name></expr>;<pos:position pos:line="50" pos:column="45"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="52" pos:column="7">Curl_easy_addmulti<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name><name pos:line="52" pos:column="26">easy<pos:position pos:line="52" pos:column="30"/></name><operator pos:line="52" pos:column="30">-&gt;<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="32">easy_handle<pos:position pos:line="52" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="45">NULL<pos:position pos:line="52" pos:column="49"/></name></expr></argument>)<pos:position pos:line="52" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="51"/></expr_stmt> <comment type="block" pos:line="52" pos:column="52">/* clear the association */</comment>

      <if pos:line="54" pos:column="7">if<condition pos:line="54" pos:column="9">(<expr><name><name pos:line="54" pos:column="10">easy<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">-&gt;<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="16">msg<pos:position pos:line="54" pos:column="19"/></name></name></expr>)<pos:position pos:line="54" pos:column="20"/></condition><then pos:line="54" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="9">free<pos:position pos:line="55" pos:column="13"/></name><argument_list pos:line="55" pos:column="13">(<argument><expr><name><name pos:line="55" pos:column="14">easy<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">-&gt;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="20">msg<pos:position pos:line="55" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="25"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">free<pos:position pos:line="56" pos:column="11"/></name><argument_list pos:line="56" pos:column="11">(<argument><expr><name pos:line="56" pos:column="12">easy<pos:position pos:line="56" pos:column="16"/></name></expr></argument>)<pos:position pos:line="56" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="57" pos:column="7">easy<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <name pos:line="57" pos:column="14">nexteasy<pos:position pos:line="57" pos:column="22"/></name></expr>;<pos:position pos:line="57" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="60" pos:column="5">free<pos:position pos:line="60" pos:column="9"/></name><argument_list pos:line="60" pos:column="9">(<argument><expr><name pos:line="60" pos:column="10">multi<pos:position pos:line="60" pos:column="15"/></name></expr></argument>)<pos:position pos:line="60" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="17"/></expr_stmt>

    <return pos:line="62" pos:column="5">return <expr><name pos:line="62" pos:column="12">CURLM_OK<pos:position pos:line="62" pos:column="20"/></name></expr>;<pos:position pos:line="62" pos:column="21"/></return>
  }<pos:position pos:line="63" pos:column="4"/></block></then>
  <else pos:line="64" pos:column="3">else
    <block type="pseudo"><return pos:line="65" pos:column="5">return <expr><name pos:line="65" pos:column="12">CURLM_BAD_HANDLE<pos:position pos:line="65" pos:column="28"/></name></expr>;<pos:position pos:line="65" pos:column="29"/></return></block></else></if>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1685_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">pop3_perform_apop<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">connectdata<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">conn<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">pop3_conn<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">pop3c<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><operator pos:line="4" pos:column="29">&amp;<pos:position pos:line="4" pos:column="34"/></operator><name><name pos:line="4" pos:column="30">conn<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">proto<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">.<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">pop3c<pos:position pos:line="4" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">i<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">MD5_context<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">ctxt<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">unsigned<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">char<pos:position pos:line="7" pos:column="16"/></name></type> <name><name pos:line="7" pos:column="17">digest<pos:position pos:line="7" pos:column="23"/></name><index pos:line="7" pos:column="23">[<expr><name pos:line="7" pos:column="24">MD5_DIGEST_LEN<pos:position pos:line="7" pos:column="38"/></name></expr>]<pos:position pos:line="7" pos:column="39"/></index></name></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">secret<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><literal type="number" pos:line="8" pos:column="15">2<pos:position pos:line="8" pos:column="16"/></literal> <operator pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">MD5_DIGEST_LEN<pos:position pos:line="8" pos:column="33"/></name> <operator pos:line="8" pos:column="34">+<pos:position pos:line="8" pos:column="35"/></operator> <literal type="number" pos:line="8" pos:column="36">1<pos:position pos:line="8" pos:column="37"/></literal></expr>]<pos:position pos:line="8" pos:column="38"/></index></name></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Check we have a username and password to authenticate with and end the
     connect phase if we don't */</comment>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><operator pos:line="12" pos:column="6">!<pos:position pos:line="12" pos:column="7"/></operator><name><name pos:line="12" pos:column="7">conn<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">bits<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">.<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">user_passwd<pos:position pos:line="12" pos:column="29"/></name></name></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30"> <block pos:line="12" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">state<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">conn<pos:position pos:line="13" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="17">POP3_STOP<pos:position pos:line="13" pos:column="26"/></name></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>

    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">result<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="18" pos:column="3">/* Create the digest */</comment>
  <expr_stmt><expr><name pos:line="19" pos:column="3">ctxt<pos:position pos:line="19" pos:column="7"/></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <call><name pos:line="19" pos:column="10">Curl_MD5_init<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">Curl_DIGEST_MD5<pos:position pos:line="19" pos:column="39"/></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><operator pos:line="20" pos:column="6">!<pos:position pos:line="20" pos:column="7"/></operator><name pos:line="20" pos:column="7">ctxt<pos:position pos:line="20" pos:column="11"/></name></expr>)<pos:position pos:line="20" pos:column="12"/></condition><then pos:line="20" pos:column="12">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="21" pos:column="31"/></name></expr>;<pos:position pos:line="21" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">Curl_MD5_update<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">ctxt<pos:position pos:line="23" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="25">(<pos:position pos:line="23" pos:column="26"/></operator><specifier pos:line="23" pos:column="26">const<pos:position pos:line="23" pos:column="31"/></specifier> <name pos:line="23" pos:column="32">unsigned<pos:position pos:line="23" pos:column="40"/></name> <name pos:line="23" pos:column="41">char<pos:position pos:line="23" pos:column="45"/></name> <operator pos:line="23" pos:column="46">*<pos:position pos:line="23" pos:column="47"/></operator><operator pos:line="23" pos:column="47">)<pos:position pos:line="23" pos:column="48"/></operator> <name><name pos:line="23" pos:column="49">pop3c<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">-&gt;<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="56">apoptimestamp<pos:position pos:line="23" pos:column="69"/></name></name></expr></argument>,
                  <argument><expr><call><name pos:line="24" pos:column="19">curlx_uztoui<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><call><name pos:line="24" pos:column="32">strlen<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><name><name pos:line="24" pos:column="39">pop3c<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">-&gt;<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="46">apoptimestamp<pos:position pos:line="24" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="26" pos:column="3">Curl_MD5_update<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">ctxt<pos:position pos:line="26" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="25">(<pos:position pos:line="26" pos:column="26"/></operator><specifier pos:line="26" pos:column="26">const<pos:position pos:line="26" pos:column="31"/></specifier> <name pos:line="26" pos:column="32">unsigned<pos:position pos:line="26" pos:column="40"/></name> <name pos:line="26" pos:column="41">char<pos:position pos:line="26" pos:column="45"/></name> <operator pos:line="26" pos:column="46">*<pos:position pos:line="26" pos:column="47"/></operator><operator pos:line="26" pos:column="47">)<pos:position pos:line="26" pos:column="48"/></operator> <name><name pos:line="26" pos:column="49">conn<pos:position pos:line="26" pos:column="53"/></name><operator pos:line="26" pos:column="53">-&gt;<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="55">passwd<pos:position pos:line="26" pos:column="61"/></name></name></expr></argument>,
                  <argument><expr><call><name pos:line="27" pos:column="19">curlx_uztoui<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><call><name pos:line="27" pos:column="32">strlen<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name><name pos:line="27" pos:column="39">conn<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">-&gt;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="45">passwd<pos:position pos:line="27" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>

  <comment type="block" pos:line="29" pos:column="3">/* Finalise the digest */</comment>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">Curl_MD5_final<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><name pos:line="30" pos:column="18">ctxt<pos:position pos:line="30" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="24">digest<pos:position pos:line="30" pos:column="30"/></name></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>

  <comment type="block" pos:line="32" pos:column="3">/* Convert the calculated 16 octet digest into a 32 byte hex string */</comment>
  <for pos:line="33" pos:column="3">for<control pos:line="33" pos:column="6">(<init><expr><name pos:line="33" pos:column="7">i<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">=<pos:position pos:line="33" pos:column="10"/></operator> <literal type="number" pos:line="33" pos:column="11">0<pos:position pos:line="33" pos:column="12"/></literal></expr>;<pos:position pos:line="33" pos:column="13"/></init> <condition><expr><name pos:line="33" pos:column="14">i<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">&lt;<pos:position pos:line="33" pos:column="20"/></operator> <name pos:line="33" pos:column="18">MD5_DIGEST_LEN<pos:position pos:line="33" pos:column="32"/></name></expr>;<pos:position pos:line="33" pos:column="33"/></condition> <incr><expr><name pos:line="33" pos:column="34">i<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">++<pos:position pos:line="33" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="38"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="5">snprintf<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><operator pos:line="34" pos:column="14">&amp;<pos:position pos:line="34" pos:column="19"/></operator><name><name pos:line="34" pos:column="15">secret<pos:position pos:line="34" pos:column="21"/></name><index pos:line="34" pos:column="21">[<expr><literal type="number" pos:line="34" pos:column="22">2<pos:position pos:line="34" pos:column="23"/></literal> <operator pos:line="34" pos:column="24">*<pos:position pos:line="34" pos:column="25"/></operator> <name pos:line="34" pos:column="26">i<pos:position pos:line="34" pos:column="27"/></name></expr>]<pos:position pos:line="34" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="30">3<pos:position pos:line="34" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="33">"%02x"<pos:position pos:line="34" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="41">digest<pos:position pos:line="34" pos:column="47"/></name><index pos:line="34" pos:column="47">[<expr><name pos:line="34" pos:column="48">i<pos:position pos:line="34" pos:column="49"/></name></expr>]<pos:position pos:line="34" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="52"/></expr_stmt></block></for>

  <expr_stmt><expr><name pos:line="36" pos:column="3">result<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <call><name pos:line="36" pos:column="12">Curl_pp_sendf<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><operator pos:line="36" pos:column="26">&amp;<pos:position pos:line="36" pos:column="31"/></operator><name><name pos:line="36" pos:column="27">pop3c<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">-&gt;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="34">pp<pos:position pos:line="36" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="38">"APOP %s %s"<pos:position pos:line="36" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="52">conn<pos:position pos:line="36" pos:column="56"/></name><operator pos:line="36" pos:column="56">-&gt;<pos:position pos:line="36" pos:column="61"/></operator><name pos:line="36" pos:column="58">user<pos:position pos:line="36" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="64">secret<pos:position pos:line="36" pos:column="70"/></name></expr></argument>)<pos:position pos:line="36" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="72"/></expr_stmt>

  <if pos:line="38" pos:column="3">if<condition pos:line="38" pos:column="5">(<expr><operator pos:line="38" pos:column="6">!<pos:position pos:line="38" pos:column="7"/></operator><name pos:line="38" pos:column="7">result<pos:position pos:line="38" pos:column="13"/></name></expr>)<pos:position pos:line="38" pos:column="14"/></condition><then pos:line="38" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="5">state<pos:position pos:line="39" pos:column="10"/></name><argument_list pos:line="39" pos:column="10">(<argument><expr><name pos:line="39" pos:column="11">conn<pos:position pos:line="39" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="17">POP3_APOP<pos:position pos:line="39" pos:column="26"/></name></expr></argument>)<pos:position pos:line="39" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt></block></then></if>

  <return pos:line="41" pos:column="3">return <expr><name pos:line="41" pos:column="10">result<pos:position pos:line="41" pos:column="16"/></name></expr>;<pos:position pos:line="41" pos:column="17"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

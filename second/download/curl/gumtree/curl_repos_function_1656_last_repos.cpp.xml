<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1656_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_write32_le<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">value<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">unsigned<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">buffer<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><name><name pos:line="3" pos:column="3">buffer<pos:position pos:line="3" pos:column="9"/></name><index pos:line="3" pos:column="9">[<expr><literal type="number" pos:line="3" pos:column="10">0<pos:position pos:line="3" pos:column="11"/></literal></expr>]<pos:position pos:line="3" pos:column="12"/></index></name> <operator pos:line="3" pos:column="13">=<pos:position pos:line="3" pos:column="14"/></operator> <call pos:line="3" pos:column="15">(<name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name>)<argument_list pos:line="3" pos:column="21">(<argument><expr><name pos:line="3" pos:column="22">value<pos:position pos:line="3" pos:column="27"/></name> <operator pos:line="3" pos:column="28">&amp;<pos:position pos:line="3" pos:column="33"/></operator> <literal type="number" pos:line="3" pos:column="30">0x000000FF<pos:position pos:line="3" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="4" pos:column="3">buffer<pos:position pos:line="4" pos:column="9"/></name><index pos:line="4" pos:column="9">[<expr><literal type="number" pos:line="4" pos:column="10">1<pos:position pos:line="4" pos:column="11"/></literal></expr>]<pos:position pos:line="4" pos:column="12"/></index></name> <operator pos:line="4" pos:column="13">=<pos:position pos:line="4" pos:column="14"/></operator> <call pos:line="4" pos:column="15">(<name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name>)<argument_list pos:line="4" pos:column="21">(<argument><expr><operator pos:line="4" pos:column="22">(<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">value<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">&amp;<pos:position pos:line="4" pos:column="34"/></operator> <literal type="number" pos:line="4" pos:column="31">0x0000FF00<pos:position pos:line="4" pos:column="41"/></literal><operator pos:line="4" pos:column="41">)<pos:position pos:line="4" pos:column="42"/></operator> <operator pos:line="4" pos:column="43">&gt;&gt;<pos:position pos:line="4" pos:column="48"/></operator> <literal type="number" pos:line="4" pos:column="46">8<pos:position pos:line="4" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="5" pos:column="3">buffer<pos:position pos:line="5" pos:column="9"/></name><index pos:line="5" pos:column="9">[<expr><literal type="number" pos:line="5" pos:column="10">2<pos:position pos:line="5" pos:column="11"/></literal></expr>]<pos:position pos:line="5" pos:column="12"/></index></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <call pos:line="5" pos:column="15">(<name pos:line="5" pos:column="16">char<pos:position pos:line="5" pos:column="20"/></name>)<argument_list pos:line="5" pos:column="21">(<argument><expr><operator pos:line="5" pos:column="22">(<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">value<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">&amp;<pos:position pos:line="5" pos:column="34"/></operator> <literal type="number" pos:line="5" pos:column="31">0x00FF0000<pos:position pos:line="5" pos:column="41"/></literal><operator pos:line="5" pos:column="41">)<pos:position pos:line="5" pos:column="42"/></operator> <operator pos:line="5" pos:column="43">&gt;&gt;<pos:position pos:line="5" pos:column="48"/></operator> <literal type="number" pos:line="5" pos:column="46">16<pos:position pos:line="5" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="6" pos:column="3">buffer<pos:position pos:line="6" pos:column="9"/></name><index pos:line="6" pos:column="9">[<expr><literal type="number" pos:line="6" pos:column="10">3<pos:position pos:line="6" pos:column="11"/></literal></expr>]<pos:position pos:line="6" pos:column="12"/></index></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <call pos:line="6" pos:column="15">(<name pos:line="6" pos:column="16">char<pos:position pos:line="6" pos:column="20"/></name>)<argument_list pos:line="6" pos:column="21">(<argument><expr><operator pos:line="6" pos:column="22">(<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">value<pos:position pos:line="6" pos:column="28"/></name> <operator pos:line="6" pos:column="29">&amp;<pos:position pos:line="6" pos:column="34"/></operator> <literal type="number" pos:line="6" pos:column="31">0xFF000000<pos:position pos:line="6" pos:column="41"/></literal><operator pos:line="6" pos:column="41">)<pos:position pos:line="6" pos:column="42"/></operator> <operator pos:line="6" pos:column="43">&gt;&gt;<pos:position pos:line="6" pos:column="48"/></operator> <literal type="number" pos:line="6" pos:column="46">24<pos:position pos:line="6" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="50"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_228_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_open<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">SessionHandle<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">curl<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* We don't yet support specifying the URL at this point */</comment>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">SessionHandle<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">data<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <comment type="block" pos:line="5" pos:column="3">/* Very simple start-up: alloc the struct, init it with zeroes and return */</comment>
  <expr_stmt><expr><name pos:line="6" pos:column="3">data<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator>struct <name pos:line="6" pos:column="18">SessionHandle<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></operator><operator pos:line="6" pos:column="33">)<pos:position pos:line="6" pos:column="34"/></operator><call><name pos:line="6" pos:column="34">malloc<pos:position pos:line="6" pos:column="40"/></name><argument_list pos:line="6" pos:column="40">(<argument><expr><sizeof pos:line="6" pos:column="41">sizeof<argument_list pos:line="6" pos:column="47">(<argument><expr pos:line="6" pos:column="48">struct <name pos:line="6" pos:column="55">SessionHandle<pos:position pos:line="6" pos:column="68"/></name></expr></argument>)<pos:position pos:line="6" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="71"/></expr_stmt>
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><name pos:line="7" pos:column="7">data<pos:position pos:line="7" pos:column="11"/></name></expr>)<pos:position pos:line="7" pos:column="12"/></condition><then pos:line="7" pos:column="12">
    <comment type="block" pos:line="8" pos:column="5">/* this is a very serious error */</comment>
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">memset<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><name pos:line="11" pos:column="10">data<pos:position pos:line="11" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="19">sizeof<argument_list pos:line="11" pos:column="25">(<argument><expr pos:line="11" pos:column="26">struct <name pos:line="11" pos:column="33">SessionHandle<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* We do some initial setup here, all those fields that can't be just 0 */</comment>

  <expr_stmt><expr><name><name pos:line="15" pos:column="3">data<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">state<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">.<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">headerbuff<pos:position pos:line="15" pos:column="25"/></name></name><operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator><operator pos:line="15" pos:column="26">(<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">char<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></operator><operator pos:line="15" pos:column="32">)<pos:position pos:line="15" pos:column="33"/></operator><call><name pos:line="15" pos:column="33">malloc<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">HEADERSIZE<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><operator pos:line="16" pos:column="6">!<pos:position pos:line="16" pos:column="7"/></operator><name><name pos:line="16" pos:column="7">data<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">state<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">.<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">headerbuff<pos:position pos:line="16" pos:column="29"/></name></name></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30"> <block pos:line="16" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">free<pos:position pos:line="17" pos:column="9"/></name><argument_list pos:line="17" pos:column="9">(<argument><expr><name pos:line="17" pos:column="10">data<pos:position pos:line="17" pos:column="14"/></name></expr></argument>)<pos:position pos:line="17" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt> <comment type="block" pos:line="17" pos:column="17">/* free the memory again */</comment>
    <return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="21" pos:column="3">data<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">state<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">.<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">headersize<pos:position pos:line="21" pos:column="25"/></name></name><operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">HEADERSIZE<pos:position pos:line="21" pos:column="36"/></name></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="23" pos:column="3">data<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">set<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">.<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">out<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">stdout<pos:position pos:line="23" pos:column="25"/></name></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt> <comment type="block" pos:line="23" pos:column="27">/* default output to stdout */</comment>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">data<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">set<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">.<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">in<pos:position pos:line="24" pos:column="15"/></name></name>  <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">stdin<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>  <comment type="block" pos:line="24" pos:column="27">/* default input from stdin */</comment>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">data<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">set<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">.<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">err<pos:position pos:line="25" pos:column="16"/></name></name>  <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">stderr<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>  <comment type="block" pos:line="25" pos:column="29">/* default stderr to stderr */</comment>

  <comment type="block" pos:line="27" pos:column="3">/* use fwrite as default function to store output */</comment>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">data<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">-&gt;<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="9">set<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">.<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">fwrite<pos:position pos:line="28" pos:column="19"/></name></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <operator pos:line="28" pos:column="22">(<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">curl_write_callback<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">)<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="43">fwrite<pos:position pos:line="28" pos:column="49"/></name></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>

  <comment type="block" pos:line="30" pos:column="3">/* use fread as default function to read input */</comment>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">data<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">-&gt;<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="9">set<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">.<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">fread<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <operator pos:line="31" pos:column="21">(<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">curl_read_callback<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">)<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="41">fread<pos:position pos:line="31" pos:column="46"/></name></expr>;<pos:position pos:line="31" pos:column="47"/></expr_stmt>

  <comment type="block" pos:line="33" pos:column="3">/* set the default passwd function */</comment>
  <expr_stmt><expr><name><name pos:line="34" pos:column="3">data<pos:position pos:line="34" pos:column="7"/></name><operator pos:line="34" pos:column="7">-&gt;<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="9">set<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">.<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="13">fpasswd<pos:position pos:line="34" pos:column="20"/></name></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="23">my_getpass<pos:position pos:line="34" pos:column="33"/></name></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="36" pos:column="3">data<pos:position pos:line="36" pos:column="7"/></name><operator pos:line="36" pos:column="7">-&gt;<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="9">set<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">.<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="13">infilesize<pos:position pos:line="36" pos:column="23"/></name></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <operator pos:line="36" pos:column="26">-<pos:position pos:line="36" pos:column="27"/></operator><literal type="number" pos:line="36" pos:column="27">1<pos:position pos:line="36" pos:column="28"/></literal></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt> <comment type="block" pos:line="36" pos:column="30">/* we don't know any size */</comment>

  <expr_stmt><expr><name><name pos:line="38" pos:column="3">data<pos:position pos:line="38" pos:column="7"/></name><operator pos:line="38" pos:column="7">-&gt;<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="9">state<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">.<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">current_speed<pos:position pos:line="38" pos:column="28"/></name></name> <operator pos:line="38" pos:column="29">=<pos:position pos:line="38" pos:column="30"/></operator> <operator pos:line="38" pos:column="31">-<pos:position pos:line="38" pos:column="32"/></operator><literal type="number" pos:line="38" pos:column="32">1<pos:position pos:line="38" pos:column="33"/></literal></expr>;<pos:position pos:line="38" pos:column="34"/></expr_stmt> <comment type="block" pos:line="38" pos:column="35">/* init to negative == impossible */</comment>

  <expr_stmt><expr><name><name pos:line="40" pos:column="3">data<pos:position pos:line="40" pos:column="7"/></name><operator pos:line="40" pos:column="7">-&gt;<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="9">set<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">.<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">httpreq<pos:position pos:line="40" pos:column="20"/></name></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <name pos:line="40" pos:column="23">HTTPREQ_GET<pos:position pos:line="40" pos:column="34"/></name></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt> <comment type="block" pos:line="40" pos:column="36">/* Default HTTP request */</comment>
  <expr_stmt><expr><name><name pos:line="41" pos:column="3">data<pos:position pos:line="41" pos:column="7"/></name><operator pos:line="41" pos:column="7">-&gt;<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="9">set<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">.<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="13">ftp_use_epsv<pos:position pos:line="41" pos:column="25"/></name></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="28">TRUE<pos:position pos:line="41" pos:column="32"/></name></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>   <comment type="block" pos:line="41" pos:column="36">/* FTP defaults to EPSV operations */</comment>

  <expr_stmt><expr><name><name pos:line="43" pos:column="3">data<pos:position pos:line="43" pos:column="7"/></name><operator pos:line="43" pos:column="7">-&gt;<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="9">set<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">.<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="13">dns_cache_timeout<pos:position pos:line="43" pos:column="30"/></name></name> <operator pos:line="43" pos:column="31">=<pos:position pos:line="43" pos:column="32"/></operator> <literal type="number" pos:line="43" pos:column="33">60<pos:position pos:line="43" pos:column="35"/></literal></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt> <comment type="block" pos:line="43" pos:column="37">/* Timeout every 60 seconds by default */</comment>

  <comment type="block" pos:line="45" pos:column="3">/* make libcurl quiet by default: */</comment>
  <expr_stmt><expr><name><name pos:line="46" pos:column="3">data<pos:position pos:line="46" pos:column="7"/></name><operator pos:line="46" pos:column="7">-&gt;<pos:position pos:line="46" pos:column="12"/></operator><name pos:line="46" pos:column="9">set<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">.<pos:position pos:line="46" pos:column="13"/></operator><name pos:line="46" pos:column="13">hide_progress<pos:position pos:line="46" pos:column="26"/></name></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <name pos:line="46" pos:column="29">TRUE<pos:position pos:line="46" pos:column="33"/></name></expr>;<pos:position pos:line="46" pos:column="34"/></expr_stmt>  <comment type="block" pos:line="46" pos:column="36">/* CURLOPT_NOPROGRESS changes these */</comment>
  <expr_stmt><expr><name><name pos:line="47" pos:column="3">data<pos:position pos:line="47" pos:column="7"/></name><operator pos:line="47" pos:column="7">-&gt;<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="9">progress<pos:position pos:line="47" pos:column="17"/></name><operator pos:line="47" pos:column="17">.<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">flags<pos:position pos:line="47" pos:column="23"/></name></name> <operator pos:line="47" pos:column="24">|=<pos:position pos:line="47" pos:column="26"/></operator> <name pos:line="47" pos:column="27">PGRS_HIDE<pos:position pos:line="47" pos:column="36"/></name></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="49" pos:column="3">/* Set the default size of the SSL session ID cache */</comment>
  <expr_stmt><expr><name><name pos:line="50" pos:column="3">data<pos:position pos:line="50" pos:column="7"/></name><operator pos:line="50" pos:column="7">-&gt;<pos:position pos:line="50" pos:column="12"/></operator><name pos:line="50" pos:column="9">set<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">.<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="13">ssl<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">.<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">numsessions<pos:position pos:line="50" pos:column="28"/></name></name> <operator pos:line="50" pos:column="29">=<pos:position pos:line="50" pos:column="30"/></operator> <literal type="number" pos:line="50" pos:column="31">5<pos:position pos:line="50" pos:column="32"/></literal></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="52" pos:column="3">data<pos:position pos:line="52" pos:column="7"/></name><operator pos:line="52" pos:column="7">-&gt;<pos:position pos:line="52" pos:column="12"/></operator><name pos:line="52" pos:column="9">set<pos:position pos:line="52" pos:column="12"/></name><operator pos:line="52" pos:column="12">.<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="13">proxyport<pos:position pos:line="52" pos:column="22"/></name></name> <operator pos:line="52" pos:column="23">=<pos:position pos:line="52" pos:column="24"/></operator> <literal type="number" pos:line="52" pos:column="25">1080<pos:position pos:line="52" pos:column="29"/></literal></expr>;<pos:position pos:line="52" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="54" pos:column="3">data<pos:position pos:line="54" pos:column="7"/></name><operator pos:line="54" pos:column="7">-&gt;<pos:position pos:line="54" pos:column="12"/></operator><name pos:line="54" pos:column="9">set<pos:position pos:line="54" pos:column="12"/></name><operator pos:line="54" pos:column="12">.<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="13">proxytype<pos:position pos:line="54" pos:column="22"/></name></name> <operator pos:line="54" pos:column="23">=<pos:position pos:line="54" pos:column="24"/></operator> <name pos:line="54" pos:column="25">CURLPROXY_HTTP<pos:position pos:line="54" pos:column="39"/></name></expr>;<pos:position pos:line="54" pos:column="40"/></expr_stmt> <comment type="block" pos:line="54" pos:column="41">/* defaults to HTTP proxy */</comment>

  <comment type="block" pos:line="56" pos:column="3">/* create an array with connection data struct pointers */</comment>
  <expr_stmt><expr><name><name pos:line="57" pos:column="3">data<pos:position pos:line="57" pos:column="7"/></name><operator pos:line="57" pos:column="7">-&gt;<pos:position pos:line="57" pos:column="12"/></operator><name pos:line="57" pos:column="9">state<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">.<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="15">numconnects<pos:position pos:line="57" pos:column="26"/></name></name> <operator pos:line="57" pos:column="27">=<pos:position pos:line="57" pos:column="28"/></operator> <literal type="number" pos:line="57" pos:column="29">5<pos:position pos:line="57" pos:column="30"/></literal></expr>;<pos:position pos:line="57" pos:column="31"/></expr_stmt> <comment type="block" pos:line="57" pos:column="32">/* hard-coded right now */</comment>
  <expr_stmt><expr><name><name pos:line="58" pos:column="3">data<pos:position pos:line="58" pos:column="7"/></name><operator pos:line="58" pos:column="7">-&gt;<pos:position pos:line="58" pos:column="12"/></operator><name pos:line="58" pos:column="9">state<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">.<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="15">connects<pos:position pos:line="58" pos:column="23"/></name></name> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <operator pos:line="58" pos:column="26">(<pos:position pos:line="58" pos:column="27"/></operator>struct <name pos:line="58" pos:column="34">connectdata<pos:position pos:line="58" pos:column="45"/></name> <operator pos:line="58" pos:column="46">*<pos:position pos:line="58" pos:column="47"/></operator><operator pos:line="58" pos:column="47">*<pos:position pos:line="58" pos:column="48"/></operator><operator pos:line="58" pos:column="48">)<pos:position pos:line="58" pos:column="49"/></operator>
    <call><name pos:line="59" pos:column="5">malloc<pos:position pos:line="59" pos:column="11"/></name><argument_list pos:line="59" pos:column="11">(<argument><expr><sizeof pos:line="59" pos:column="12">sizeof<argument_list pos:line="59" pos:column="18">(<argument><expr pos:line="59" pos:column="19">struct <name pos:line="59" pos:column="26">connectdata<pos:position pos:line="59" pos:column="37"/></name> <operator pos:line="59" pos:column="38">*<pos:position pos:line="59" pos:column="39"/></operator></expr></argument>)<pos:position pos:line="59" pos:column="40"/></argument_list></sizeof> <operator pos:line="59" pos:column="41">*<pos:position pos:line="59" pos:column="42"/></operator> <name><name pos:line="59" pos:column="43">data<pos:position pos:line="59" pos:column="47"/></name><operator pos:line="59" pos:column="47">-&gt;<pos:position pos:line="59" pos:column="52"/></operator><name pos:line="59" pos:column="49">state<pos:position pos:line="59" pos:column="54"/></name><operator pos:line="59" pos:column="54">.<pos:position pos:line="59" pos:column="55"/></operator><name pos:line="59" pos:column="55">numconnects<pos:position pos:line="59" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="68"/></expr_stmt>

  <if pos:line="61" pos:column="3">if<condition pos:line="61" pos:column="5">(<expr><operator pos:line="61" pos:column="6">!<pos:position pos:line="61" pos:column="7"/></operator><name><name pos:line="61" pos:column="7">data<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">-&gt;<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="13">state<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">.<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="19">connects<pos:position pos:line="61" pos:column="27"/></name></name></expr>)<pos:position pos:line="61" pos:column="28"/></condition><then pos:line="61" pos:column="28"> <block pos:line="61" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">free<pos:position pos:line="62" pos:column="9"/></name><argument_list pos:line="62" pos:column="9">(<argument><expr><name pos:line="62" pos:column="10">data<pos:position pos:line="62" pos:column="14"/></name></expr></argument>)<pos:position pos:line="62" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="16"/></expr_stmt>
    <return pos:line="63" pos:column="5">return <expr><name pos:line="63" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="63" pos:column="31"/></name></expr>;<pos:position pos:line="63" pos:column="32"/></return>
  }<pos:position pos:line="64" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="66" pos:column="3">/*
   * libcurl 7.10 introduces SSL verification *by default*! This needs to be
   * switched off unless wanted.
   */</comment>
  <expr_stmt><expr><name><name pos:line="70" pos:column="3">data<pos:position pos:line="70" pos:column="7"/></name><operator pos:line="70" pos:column="7">-&gt;<pos:position pos:line="70" pos:column="12"/></operator><name pos:line="70" pos:column="9">set<pos:position pos:line="70" pos:column="12"/></name><operator pos:line="70" pos:column="12">.<pos:position pos:line="70" pos:column="13"/></operator><name pos:line="70" pos:column="13">ssl<pos:position pos:line="70" pos:column="16"/></name><operator pos:line="70" pos:column="16">.<pos:position pos:line="70" pos:column="17"/></operator><name pos:line="70" pos:column="17">verifypeer<pos:position pos:line="70" pos:column="27"/></name></name> <operator pos:line="70" pos:column="28">=<pos:position pos:line="70" pos:column="29"/></operator> <name pos:line="70" pos:column="30">TRUE<pos:position pos:line="70" pos:column="34"/></name></expr>;<pos:position pos:line="70" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="71" pos:column="3">data<pos:position pos:line="71" pos:column="7"/></name><operator pos:line="71" pos:column="7">-&gt;<pos:position pos:line="71" pos:column="12"/></operator><name pos:line="71" pos:column="9">set<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">.<pos:position pos:line="71" pos:column="13"/></operator><name pos:line="71" pos:column="13">ssl<pos:position pos:line="71" pos:column="16"/></name><operator pos:line="71" pos:column="16">.<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="17">verifyhost<pos:position pos:line="71" pos:column="27"/></name></name> <operator pos:line="71" pos:column="28">=<pos:position pos:line="71" pos:column="29"/></operator> <literal type="number" pos:line="71" pos:column="30">2<pos:position pos:line="71" pos:column="31"/></literal></expr>;<pos:position pos:line="71" pos:column="32"/></expr_stmt>
<cpp:ifdef pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">ifdef<pos:position pos:line="72" pos:column="7"/></cpp:directive> <name pos:line="72" pos:column="8">CURL_CA_BUNDLE<pos:position pos:line="72" pos:column="22"/></name></cpp:ifdef>
  <comment type="block" pos:line="73" pos:column="3">/* This is our prefered CA cert bundle since install time */</comment>
  <expr_stmt><expr><name><name pos:line="74" pos:column="3">data<pos:position pos:line="74" pos:column="7"/></name><operator pos:line="74" pos:column="7">-&gt;<pos:position pos:line="74" pos:column="12"/></operator><name pos:line="74" pos:column="9">set<pos:position pos:line="74" pos:column="12"/></name><operator pos:line="74" pos:column="12">.<pos:position pos:line="74" pos:column="13"/></operator><name pos:line="74" pos:column="13">ssl<pos:position pos:line="74" pos:column="16"/></name><operator pos:line="74" pos:column="16">.<pos:position pos:line="74" pos:column="17"/></operator><name pos:line="74" pos:column="17">CAfile<pos:position pos:line="74" pos:column="23"/></name></name> <operator pos:line="74" pos:column="24">=<pos:position pos:line="74" pos:column="25"/></operator> <operator pos:line="74" pos:column="26">(<pos:position pos:line="74" pos:column="27"/></operator><name pos:line="74" pos:column="27">char<pos:position pos:line="74" pos:column="31"/></name> <operator pos:line="74" pos:column="32">*<pos:position pos:line="74" pos:column="33"/></operator><operator pos:line="74" pos:column="33">)<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="34">CURL_CA_BUNDLE<pos:position pos:line="74" pos:column="48"/></name></expr>;<pos:position pos:line="74" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">endif<pos:position pos:line="75" pos:column="7"/></cpp:directive></cpp:endif>


  <expr_stmt><expr><call><name pos:line="78" pos:column="3">memset<pos:position pos:line="78" pos:column="9"/></name><argument_list pos:line="78" pos:column="9">(<argument><expr><name><name pos:line="78" pos:column="10">data<pos:position pos:line="78" pos:column="14"/></name><operator pos:line="78" pos:column="14">-&gt;<pos:position pos:line="78" pos:column="19"/></operator><name pos:line="78" pos:column="16">state<pos:position pos:line="78" pos:column="21"/></name><operator pos:line="78" pos:column="21">.<pos:position pos:line="78" pos:column="22"/></operator><name pos:line="78" pos:column="22">connects<pos:position pos:line="78" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="32">0<pos:position pos:line="78" pos:column="33"/></literal></expr></argument>,
         <argument><expr><sizeof pos:line="79" pos:column="10">sizeof<argument_list pos:line="79" pos:column="16">(<argument><expr pos:line="79" pos:column="17">struct <name pos:line="79" pos:column="24">connectdata<pos:position pos:line="79" pos:column="35"/></name> <operator pos:line="79" pos:column="36">*<pos:position pos:line="79" pos:column="37"/></operator></expr></argument>)<pos:position pos:line="79" pos:column="38"/></argument_list></sizeof><operator pos:line="79" pos:column="38">*<pos:position pos:line="79" pos:column="39"/></operator><name><name pos:line="79" pos:column="39">data<pos:position pos:line="79" pos:column="43"/></name><operator pos:line="79" pos:column="43">-&gt;<pos:position pos:line="79" pos:column="48"/></operator><name pos:line="79" pos:column="45">state<pos:position pos:line="79" pos:column="50"/></name><operator pos:line="79" pos:column="50">.<pos:position pos:line="79" pos:column="51"/></operator><name pos:line="79" pos:column="51">numconnects<pos:position pos:line="79" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="64"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="81" pos:column="3">*<pos:position pos:line="81" pos:column="4"/></operator><name pos:line="81" pos:column="4">curl<pos:position pos:line="81" pos:column="8"/></name> <operator pos:line="81" pos:column="9">=<pos:position pos:line="81" pos:column="10"/></operator> <name pos:line="81" pos:column="11">data<pos:position pos:line="81" pos:column="15"/></name></expr>;<pos:position pos:line="81" pos:column="16"/></expr_stmt>
  <return pos:line="82" pos:column="3">return <expr><name pos:line="82" pos:column="10">CURLE_OK<pos:position pos:line="82" pos:column="18"/></name></expr>;<pos:position pos:line="82" pos:column="19"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

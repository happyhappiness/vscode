 fputs(
"                             only enables http and https\n"
"\n"
"              --proto =http,https\n"
"                             also only enables http and https\n"
"\n"
"              Unknown protocols produce a  warning.  This  allows  scripts  to\n"
"              safely  rely on being able to disable potentially dangerous pro-\n"
"              tocols, without relying upon support  for  that  protocol  being\n"
"              built into curl to avoid an error.\n"
"\n"
, stdout);
 fputs(
"              This option can be used multiple times, in which case the effect\n"
"              is the same as concatenating the protocols into one instance  of\n"
"              the option.\n"
"\n"
"              (Added in 7.20.2)\n"
"\n"
"       --proto-redir <protocols>\n"
"              Tells  curl  to  use  the listed protocols after a redirect. See\n"
"              --proto for how protocols are represented.\n"
"\n"
"              (Added in 7.20.2)\n"
"\n"
"       --proxy-anyauth\n"
, stdout);
 fputs(
"              Tells curl to pick a suitable authentication method when  commu-\n"
"              nicating  with  the  given  proxy.  This  might  cause  an extra\n"
"              request/response round-trip. (Added in 7.13.2)\n"
"\n"
"       --proxy-basic\n"
"              Tells curl to use HTTP Basic authentication  when  communicating\n"
"              with the given proxy. Use --basic for enabling HTTP Basic with a\n"
"              remote host. Basic is the  default  authentication  method  curl\n"
, stdout);
 fputs(
"              uses with proxies.\n"
"\n"
"       --proxy-digest\n"
"              Tells  curl to use HTTP Digest authentication when communicating\n"
"              with the given proxy. Use --digest for enabling HTTP Digest with\n"
"              a remote host.\n"
"\n"
"       --proxy-negotiate\n"
"              Tells curl to use HTTP Negotiate authentication when communicat-\n"
"              ing with the given proxy.  Use  --negotiate  for  enabling  HTTP\n"
"              Negotiate with a remote host. (Added in 7.17.1)\n"
"\n"
, stdout);
 fputs(
"       --proxy-ntlm\n"
"              Tells  curl  to  use HTTP NTLM authentication when communicating\n"
"              with the given proxy. Use --ntlm for enabling NTLM with a remote\n"
"              host.\n"
"\n"
"       --proxy1.0 <proxyhost[:port]>\n"
"              Use  the  specified  HTTP  1.0  proxy. If the port number is not\n"
"              specified, it is assumed at port 1080.\n"
"\n"
"              The only difference between this and the HTTP proxy option  (-x,\n"
, stdout);
 fputs(
"              --proxy), is that attempts to use CONNECT through the proxy will\n"
"              specify an HTTP 1.0 protocol instead of the default HTTP 1.1.\n"
"\n"
"       --pubkey <key>\n"
"              (SSH) Public key file name. Allows you to  provide  your  public\n"
"              key in this separate file.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       -q     If  used  as the first parameter on the command line, the curlrc\n"
, stdout);
 fputs(
"              config file will not be read and used. See the -K, --config  for\n"
"              details on the default config file search path.\n"
"\n"
"       -Q, --quote <command>\n"
"              (FTP/SFTP)  Send  an arbitrary command to the remote FTP or SFTP\n"
"              server. Quote commands are sent BEFORE the transfer takes  place\n"
"              (just  after  the  initial PWD command in an FTP transfer, to be\n"
"              exact). To make commands take place after a successful transfer,\n"
, stdout);
 fputs(
"              prefix  them  with  a  dash '-'.  To make commands be sent after\n"
"              curl has changed the working directory, just before the transfer\n"
"              command(s),  prefix  the  command  with a '+' (this is only sup-\n"
"              ported for FTP). You may specify any number of commands. If  the\n"
"              server returns failure for one of the commands, the entire oper-\n"
"              ation will be aborted. You must send syntactically  correct  FTP\n"
, stdout);
 fputs(
"              commands  as  RFC 959 defines to FTP servers, or one of the com-\n"
"              mands listed below to SFTP servers.  This  option  can  be  used\n"
"              multiple  times. When speaking to an FTP server, prefix the com-\n"
"              mand with an asterisk (*) to make curl continue even if the com-\n"
"              mand fails as by default curl will stop at first failure.\n"
"\n"
"              SFTP  is a binary protocol. Unlike for FTP, curl interprets SFTP\n"
, stdout);
 fputs(
"              quote commands itself before sending them to the  server.   File\n"
"              names may be quoted shell-style to embed spaces or special char-\n"
"              acters.  Following is the list of all supported SFTP quote  com-\n"
"              mands:\n"
"\n"
"              chgrp group file\n"
"                     The  chgrp command sets the group ID of the file named by\n"
"                     the file operand to the group ID specified by  the  group\n"
, stdout);
 fputs(
"                     operand. The group operand is a decimal integer group ID.\n"
"\n"
"              chmod mode file\n"
"                     The  chmod  command  modifies  the  file mode bits of the\n"
"                     specified file. The mode operand is an octal integer mode\n"
"                     number.\n"
"\n"
"              chown user file\n"
"                     The chown command sets the owner of the file named by the\n"
"                     file operand to the user ID specified by the  user  oper-\n"
, stdout);
 fputs(
"                     and. The user operand is a decimal integer user ID.\n"
"\n"
"              ln source_file target_file\n"
"                     The ln and symlink commands create a symbolic link at the\n"
"                     target_file location pointing to  the  source_file  loca-\n"
"                     tion.\n"
"\n"
"              mkdir directory_name\n"
"                     The  mkdir  command  creates  the  directory named by the\n"
"                     directory_name operand.\n"
"\n"
, stdout);
 fputs(
"              pwd    The pwd command returns the absolute pathname of the cur-\n"
"                     rent working directory.\n"
"\n"
"              rename source target\n"
"                     The rename command renames the file or directory named by\n"
"                     the source operand to the destination path named  by  the\n"
"                     target operand.\n"
"\n"
"              rm file\n"
"                     The rm command removes the file specified by the file op-\n"
"                     erand.\n"
"\n"
, stdout);
 fputs(
"              rmdir directory\n"
"                     The rmdir command removes the directory  entry  specified\n"
"                     by the directory operand, provided it is empty.\n"
"\n"
"              symlink source_file target_file\n"
"                     See ln.\n"
"\n"
"       -r, --range <range>\n"
"              (HTTP/FTP/SFTP/FILE)  Retrieve a byte range (i.e a partial docu-\n"
"              ment) from a HTTP/1.1, FTP or  SFTP  server  or  a  local  FILE.\n"
"              Ranges can be specified in a number of ways.\n"
"\n"
, stdout);
 fputs(
"              0-499     specifies the first 500 bytes\n"
"\n"

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1166_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">imap_perform_append<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">connectdata<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">conn<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">IMAP<pos:position pos:line="5" pos:column="14"/></name></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">imap<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name><name pos:line="5" pos:column="23">data<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">req<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">.<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">protop<pos:position pos:line="5" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">mailbox<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* Check we have a mailbox */</comment>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">!<pos:position pos:line="9" pos:column="7"/></operator><name><name pos:line="9" pos:column="7">imap<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">mailbox<pos:position pos:line="9" pos:column="20"/></name></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">failf<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><name pos:line="10" pos:column="11">data<pos:position pos:line="10" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="17">"Cannot APPEND without a mailbox."<pos:position pos:line="10" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">CURLE_URL_MALFORMAT<pos:position pos:line="11" pos:column="31"/></name></expr>;<pos:position pos:line="11" pos:column="32"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="14" pos:column="3">/* Prepare the mime data if some. */</comment>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name><name pos:line="15" pos:column="6">data<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">set<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">mimepost<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">.<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">kind<pos:position pos:line="15" pos:column="29"/></name></name> <operator pos:line="15" pos:column="30">!=<pos:position pos:line="15" pos:column="32"/></operator> <name pos:line="15" pos:column="33">MIMEKIND_NONE<pos:position pos:line="15" pos:column="46"/></name></expr>)<pos:position pos:line="15" pos:column="47"/></condition><then pos:line="15" pos:column="47"> <block pos:line="15" pos:column="48">{
    <comment type="block" pos:line="16" pos:column="5">/* Use the whole structure as data. */</comment>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">data<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">-&gt;<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="11">set<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">.<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">mimepost<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">.<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">flags<pos:position pos:line="17" pos:column="29"/></name></name> <operator pos:line="17" pos:column="30">&amp;=<pos:position pos:line="17" pos:column="36"/></operator> <operator pos:line="17" pos:column="33">~<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="34">MIME_BODY_ONLY<pos:position pos:line="17" pos:column="48"/></name></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* Add external headers and mime version. */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">curl_mime_headers<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><operator pos:line="20" pos:column="23">&amp;<pos:position pos:line="20" pos:column="28"/></operator><name><name pos:line="20" pos:column="24">data<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">set<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">.<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">mimepost<pos:position pos:line="20" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="44">data<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">-&gt;<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="50">set<pos:position pos:line="20" pos:column="53"/></name><operator pos:line="20" pos:column="53">.<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="54">headers<pos:position pos:line="20" pos:column="61"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="63">0<pos:position pos:line="20" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">result<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">Curl_mime_prepare_headers<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">(<argument><expr><operator pos:line="21" pos:column="40">&amp;<pos:position pos:line="21" pos:column="45"/></operator><name><name pos:line="21" pos:column="41">data<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">set<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">.<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="51">mimepost<pos:position pos:line="21" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="61">NULL<pos:position pos:line="21" pos:column="65"/></name></expr></argument>,
                                       <argument><expr><name pos:line="22" pos:column="40">NULL<pos:position pos:line="22" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="46">MIMESTRATEGY_MAIL<pos:position pos:line="22" pos:column="63"/></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>

    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><operator pos:line="24" pos:column="8">!<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="9">result<pos:position pos:line="24" pos:column="15"/></name></expr>)<pos:position pos:line="24" pos:column="16"/></condition><then pos:line="24" pos:column="16">
      <block type="pseudo"><if pos:line="25" pos:column="7">if<condition pos:line="25" pos:column="9">(<expr><operator pos:line="25" pos:column="10">!<pos:position pos:line="25" pos:column="11"/></operator><call><name pos:line="25" pos:column="11">Curl_checkheaders<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">conn<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="35">"Mime-Version"<pos:position pos:line="25" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="51"/></condition><then pos:line="25" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="9">result<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <call><name pos:line="26" pos:column="18">Curl_mime_add_header<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><operator pos:line="26" pos:column="39">&amp;<pos:position pos:line="26" pos:column="44"/></operator><name><name pos:line="26" pos:column="40">data<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">-&gt;<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="46">set<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">.<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="50">mimepost<pos:position pos:line="26" pos:column="58"/></name><operator pos:line="26" pos:column="58">.<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="59">curlheaders<pos:position pos:line="26" pos:column="70"/></name></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="27" pos:column="39">"Mime-Version: 1.0"<pos:position pos:line="27" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt></block></then></if></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* Make sure we will read the entire mime structure. */</comment>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><operator pos:line="30" pos:column="8">!<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="9">result<pos:position pos:line="30" pos:column="15"/></name></expr>)<pos:position pos:line="30" pos:column="16"/></condition><then pos:line="30" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">result<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">Curl_mime_rewind<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><operator pos:line="31" pos:column="33">&amp;<pos:position pos:line="31" pos:column="38"/></operator><name><name pos:line="31" pos:column="34">data<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">-&gt;<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="40">set<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">.<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="44">mimepost<pos:position pos:line="31" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt></block></then></if>

    <if pos:line="33" pos:column="5">if<condition pos:line="33" pos:column="7">(<expr><name pos:line="33" pos:column="8">result<pos:position pos:line="33" pos:column="14"/></name></expr>)<pos:position pos:line="33" pos:column="15"/></condition><then pos:line="33" pos:column="15">
      <block type="pseudo"><return pos:line="34" pos:column="7">return <expr><name pos:line="34" pos:column="14">result<pos:position pos:line="34" pos:column="20"/></name></expr>;<pos:position pos:line="34" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="36" pos:column="5">data<pos:position pos:line="36" pos:column="9"/></name><operator pos:line="36" pos:column="9">-&gt;<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="11">state<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">.<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">infilesize<pos:position pos:line="36" pos:column="27"/></name></name> <operator pos:line="36" pos:column="28">=<pos:position pos:line="36" pos:column="29"/></operator> <call><name pos:line="36" pos:column="30">Curl_mime_size<pos:position pos:line="36" pos:column="44"/></name><argument_list pos:line="36" pos:column="44">(<argument><expr><operator pos:line="36" pos:column="45">&amp;<pos:position pos:line="36" pos:column="50"/></operator><name><name pos:line="36" pos:column="46">data<pos:position pos:line="36" pos:column="50"/></name><operator pos:line="36" pos:column="50">-&gt;<pos:position pos:line="36" pos:column="55"/></operator><name pos:line="36" pos:column="52">set<pos:position pos:line="36" pos:column="55"/></name><operator pos:line="36" pos:column="55">.<pos:position pos:line="36" pos:column="56"/></operator><name pos:line="36" pos:column="56">mimepost<pos:position pos:line="36" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="66"/></expr_stmt>

    <comment type="block" pos:line="38" pos:column="5">/* Read from mime structure. */</comment>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">data<pos:position pos:line="39" pos:column="9"/></name><operator pos:line="39" pos:column="9">-&gt;<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="11">state<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">.<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">fread_func<pos:position pos:line="39" pos:column="27"/></name></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <operator pos:line="39" pos:column="30">(<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="31">curl_read_callback<pos:position pos:line="39" pos:column="49"/></name><operator pos:line="39" pos:column="49">)<pos:position pos:line="39" pos:column="50"/></operator> <name pos:line="39" pos:column="51">Curl_mime_read<pos:position pos:line="39" pos:column="65"/></name></expr>;<pos:position pos:line="39" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">data<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="11">state<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">.<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">in<pos:position pos:line="40" pos:column="19"/></name></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <operator pos:line="40" pos:column="22">(<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="23">void<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">*<pos:position pos:line="40" pos:column="29"/></operator><operator pos:line="40" pos:column="29">)<pos:position pos:line="40" pos:column="30"/></operator> <operator pos:line="40" pos:column="31">&amp;<pos:position pos:line="40" pos:column="36"/></operator><name><name pos:line="40" pos:column="32">data<pos:position pos:line="40" pos:column="36"/></name><operator pos:line="40" pos:column="36">-&gt;<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="38">set<pos:position pos:line="40" pos:column="41"/></name><operator pos:line="40" pos:column="41">.<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="42">mimepost<pos:position pos:line="40" pos:column="50"/></name></name></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="43" pos:column="3">/* Check we know the size of the upload */</comment>
  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><name><name pos:line="44" pos:column="6">data<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">state<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">.<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="18">infilesize<pos:position pos:line="44" pos:column="28"/></name></name> <operator pos:line="44" pos:column="29">&lt;<pos:position pos:line="44" pos:column="33"/></operator> <literal type="number" pos:line="44" pos:column="31">0<pos:position pos:line="44" pos:column="32"/></literal></expr>)<pos:position pos:line="44" pos:column="33"/></condition><then pos:line="44" pos:column="33"> <block pos:line="44" pos:column="34">{
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">failf<pos:position pos:line="45" pos:column="10"/></name><argument_list pos:line="45" pos:column="10">(<argument><expr><name pos:line="45" pos:column="11">data<pos:position pos:line="45" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="17">"Cannot APPEND with unknown input file size\n"<pos:position pos:line="45" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="65"/></expr_stmt>
    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">CURLE_UPLOAD_FAILED<pos:position pos:line="46" pos:column="31"/></name></expr>;<pos:position pos:line="46" pos:column="32"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="49" pos:column="3">/* Make sure the mailbox is in the correct atom format */</comment>
  <expr_stmt><expr><name pos:line="50" pos:column="3">mailbox<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator> <call><name pos:line="50" pos:column="13">imap_atom<pos:position pos:line="50" pos:column="22"/></name><argument_list pos:line="50" pos:column="22">(<argument><expr><name><name pos:line="50" pos:column="23">imap<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">-&gt;<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="29">mailbox<pos:position pos:line="50" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="50" pos:column="38">false<pos:position pos:line="50" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="45"/></expr_stmt>
  <if pos:line="51" pos:column="3">if<condition pos:line="51" pos:column="5">(<expr><operator pos:line="51" pos:column="6">!<pos:position pos:line="51" pos:column="7"/></operator><name pos:line="51" pos:column="7">mailbox<pos:position pos:line="51" pos:column="14"/></name></expr>)<pos:position pos:line="51" pos:column="15"/></condition><then pos:line="51" pos:column="15">
    <block type="pseudo"><return pos:line="52" pos:column="5">return <expr><name pos:line="52" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="52" pos:column="31"/></name></expr>;<pos:position pos:line="52" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="54" pos:column="3">/* Send the APPEND command */</comment>
  <expr_stmt><expr><name pos:line="55" pos:column="3">result<pos:position pos:line="55" pos:column="9"/></name> <operator pos:line="55" pos:column="10">=<pos:position pos:line="55" pos:column="11"/></operator> <call><name pos:line="55" pos:column="12">imap_sendf<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">(<argument><expr><name pos:line="55" pos:column="23">conn<pos:position pos:line="55" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="29">"APPEND %s (\\Seen) {%"<pos:position pos:line="55" pos:column="52"/></literal> <name pos:line="55" pos:column="53">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="55" pos:column="75"/></name> <literal type="string" pos:line="55" pos:column="76">"}"<pos:position pos:line="55" pos:column="79"/></literal></expr></argument>,
                      <argument><expr><name pos:line="56" pos:column="23">mailbox<pos:position pos:line="56" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="32">data<pos:position pos:line="56" pos:column="36"/></name><operator pos:line="56" pos:column="36">-&gt;<pos:position pos:line="56" pos:column="41"/></operator><name pos:line="56" pos:column="38">state<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">.<pos:position pos:line="56" pos:column="44"/></operator><name pos:line="56" pos:column="44">infilesize<pos:position pos:line="56" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="56"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="58" pos:column="3">free<pos:position pos:line="58" pos:column="7"/></name><argument_list pos:line="58" pos:column="7">(<argument><expr><name pos:line="58" pos:column="8">mailbox<pos:position pos:line="58" pos:column="15"/></name></expr></argument>)<pos:position pos:line="58" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="17"/></expr_stmt>

  <if pos:line="60" pos:column="3">if<condition pos:line="60" pos:column="5">(<expr><operator pos:line="60" pos:column="6">!<pos:position pos:line="60" pos:column="7"/></operator><name pos:line="60" pos:column="7">result<pos:position pos:line="60" pos:column="13"/></name></expr>)<pos:position pos:line="60" pos:column="14"/></condition><then pos:line="60" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="5">state<pos:position pos:line="61" pos:column="10"/></name><argument_list pos:line="61" pos:column="10">(<argument><expr><name pos:line="61" pos:column="11">conn<pos:position pos:line="61" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="17">IMAP_APPEND<pos:position pos:line="61" pos:column="28"/></name></expr></argument>)<pos:position pos:line="61" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="30"/></expr_stmt></block></then></if>

  <return pos:line="63" pos:column="3">return <expr><name pos:line="63" pos:column="10">result<pos:position pos:line="63" pos:column="16"/></name></expr>;<pos:position pos:line="63" pos:column="17"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

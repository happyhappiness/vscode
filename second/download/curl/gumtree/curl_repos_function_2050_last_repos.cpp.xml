<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2050_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">loop<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name pos:line="1" pos:column="23">unsigned<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">pattern<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">unsigned<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">string<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">loop_state<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">state<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">CURLFNM_LOOP_DEFAULT<pos:position pos:line="3" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">p<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><operator pos:line="4" pos:column="22">(<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">unsigned<pos:position pos:line="4" pos:column="31"/></name> <name pos:line="4" pos:column="32">char<pos:position pos:line="4" pos:column="36"/></name> <operator pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></operator><operator pos:line="4" pos:column="38">)<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="39">pattern<pos:position pos:line="4" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">s<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><operator pos:line="5" pos:column="22">(<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">unsigned<pos:position pos:line="5" pos:column="31"/></name> <name pos:line="5" pos:column="32">char<pos:position pos:line="5" pos:column="36"/></name> <operator pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></operator><operator pos:line="5" pos:column="38">)<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="39">string<pos:position pos:line="5" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name></type> <name><name pos:line="6" pos:column="17">charset<pos:position pos:line="6" pos:column="24"/></name><index pos:line="6" pos:column="24">[<expr><name pos:line="6" pos:column="25">CURLFNM_CHSET_SIZE<pos:position pos:line="6" pos:column="43"/></name></expr>]<pos:position pos:line="6" pos:column="44"/></index></name> <init pos:line="6" pos:column="45">= <expr><block pos:line="6" pos:column="47">{ <expr><literal type="number" pos:line="6" pos:column="49">0<pos:position pos:line="6" pos:column="50"/></literal></expr> }<pos:position pos:line="6" pos:column="52"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rc<pos:position pos:line="7" pos:column="9"/></name> <init pos:line="7" pos:column="10">= <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <for pos:line="9" pos:column="3">for<control pos:line="9" pos:column="6">(<init pos:line="9" pos:column="7">;<pos:position pos:line="9" pos:column="8"/></init><condition pos:line="9" pos:column="8">;<pos:position pos:line="9" pos:column="9"/></condition><incr/>)<pos:position pos:line="9" pos:column="10"/></control> <block pos:line="9" pos:column="11">{
    <switch pos:line="10" pos:column="5">switch<condition pos:line="10" pos:column="11">(<expr><name pos:line="10" pos:column="12">state<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition> <block pos:line="10" pos:column="19">{
    <case pos:line="11" pos:column="5">case <expr><name pos:line="11" pos:column="10">CURLFNM_LOOP_DEFAULT<pos:position pos:line="11" pos:column="30"/></name></expr>:<pos:position pos:line="11" pos:column="31"/></case>
      <if pos:line="12" pos:column="7">if<condition pos:line="12" pos:column="9">(<expr><operator pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">p<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">==<pos:position pos:line="12" pos:column="15"/></operator> <literal type="char" pos:line="12" pos:column="16">'*'<pos:position pos:line="12" pos:column="19"/></literal></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20"> <block pos:line="12" pos:column="21">{
        <while pos:line="13" pos:column="9">while<condition pos:line="13" pos:column="14">(<expr><operator pos:line="13" pos:column="15">*<pos:position pos:line="13" pos:column="16"/></operator><operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">p<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">+<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="21">1<pos:position pos:line="13" pos:column="22"/></literal><operator pos:line="13" pos:column="22">)<pos:position pos:line="13" pos:column="23"/></operator> <operator pos:line="13" pos:column="24">==<pos:position pos:line="13" pos:column="26"/></operator> <literal type="char" pos:line="13" pos:column="27">'*'<pos:position pos:line="13" pos:column="30"/></literal></expr>)<pos:position pos:line="13" pos:column="31"/></condition> <comment type="block" pos:line="13" pos:column="32">/* eliminate multiple stars */</comment>
          <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="11">p<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">++<pos:position pos:line="14" pos:column="14"/></operator></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt></block></while>
        <if pos:line="15" pos:column="9">if<condition pos:line="15" pos:column="11">(<expr><operator pos:line="15" pos:column="12">*<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">s<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">==<pos:position pos:line="15" pos:column="17"/></operator> <literal type="char" pos:line="15" pos:column="18">'\0'<pos:position pos:line="15" pos:column="22"/></literal> <operator pos:line="15" pos:column="23">&amp;&amp;<pos:position pos:line="15" pos:column="33"/></operator> <operator pos:line="15" pos:column="26">*<pos:position pos:line="15" pos:column="27"/></operator><operator pos:line="15" pos:column="27">(<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">p<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">+<pos:position pos:line="15" pos:column="31"/></operator> <literal type="number" pos:line="15" pos:column="32">1<pos:position pos:line="15" pos:column="33"/></literal><operator pos:line="15" pos:column="33">)<pos:position pos:line="15" pos:column="34"/></operator> <operator pos:line="15" pos:column="35">==<pos:position pos:line="15" pos:column="37"/></operator> <literal type="char" pos:line="15" pos:column="38">'\0'<pos:position pos:line="15" pos:column="42"/></literal></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43">
          <block type="pseudo"><return pos:line="16" pos:column="11">return <expr><name pos:line="16" pos:column="18">CURL_FNMATCH_MATCH<pos:position pos:line="16" pos:column="36"/></name></expr>;<pos:position pos:line="16" pos:column="37"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="17" pos:column="9">rc<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">loop<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">p<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">+<pos:position pos:line="17" pos:column="22"/></operator> <literal type="number" pos:line="17" pos:column="23">1<pos:position pos:line="17" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="26">s<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt> <comment type="block" pos:line="17" pos:column="30">/* *.txt matches .txt &lt;=&gt; .txt matches .txt */</comment>
        <if pos:line="18" pos:column="9">if<condition pos:line="18" pos:column="11">(<expr><name pos:line="18" pos:column="12">rc<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">==<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">CURL_FNMATCH_MATCH<pos:position pos:line="18" pos:column="36"/></name></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37">
          <block type="pseudo"><return pos:line="19" pos:column="11">return <expr><name pos:line="19" pos:column="18">CURL_FNMATCH_MATCH<pos:position pos:line="19" pos:column="36"/></name></expr>;<pos:position pos:line="19" pos:column="37"/></return></block></then></if>
        <if pos:line="20" pos:column="9">if<condition pos:line="20" pos:column="11">(<expr><operator pos:line="20" pos:column="12">*<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">s<pos:position pos:line="20" pos:column="14"/></name></expr>)<pos:position pos:line="20" pos:column="15"/></condition><then pos:line="20" pos:column="15"> <comment type="block" pos:line="20" pos:column="16">/* let the star eat up one character */</comment>
          <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="11">s<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">++<pos:position pos:line="21" pos:column="14"/></operator></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt></block></then>
        <else pos:line="22" pos:column="9">else
          <block type="pseudo"><return pos:line="23" pos:column="11">return <expr><name pos:line="23" pos:column="18">CURL_FNMATCH_NOMATCH<pos:position pos:line="23" pos:column="38"/></name></expr>;<pos:position pos:line="23" pos:column="39"/></return></block></else></if>
      }<pos:position pos:line="24" pos:column="8"/></block></then>
      <elseif pos:line="25" pos:column="7">else <if pos:line="25" pos:column="12">if<condition pos:line="25" pos:column="14">(<expr><operator pos:line="25" pos:column="15">*<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">p<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">==<pos:position pos:line="25" pos:column="20"/></operator> <literal type="char" pos:line="25" pos:column="21">'?'<pos:position pos:line="25" pos:column="24"/></literal></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25"> <block pos:line="25" pos:column="26">{
        <if pos:line="26" pos:column="9">if<condition pos:line="26" pos:column="11">(<expr><call><name pos:line="26" pos:column="12">ISPRINT<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><operator pos:line="26" pos:column="20">*<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">s<pos:position pos:line="26" pos:column="22"/></name></expr></argument>)<pos:position pos:line="26" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="24"/></condition><then pos:line="26" pos:column="24"> <block pos:line="26" pos:column="25">{
          <expr_stmt><expr><name pos:line="27" pos:column="11">s<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">++<pos:position pos:line="27" pos:column="14"/></operator></expr>;<pos:position pos:line="27" pos:column="15"/></expr_stmt>
          <expr_stmt><expr><name pos:line="28" pos:column="11">p<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">++<pos:position pos:line="28" pos:column="14"/></operator></expr>;<pos:position pos:line="28" pos:column="15"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then>
        <elseif pos:line="30" pos:column="9">else <if pos:line="30" pos:column="14">if<condition pos:line="30" pos:column="16">(<expr><operator pos:line="30" pos:column="17">*<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">s<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">==<pos:position pos:line="30" pos:column="22"/></operator> <literal type="char" pos:line="30" pos:column="23">'\0'<pos:position pos:line="30" pos:column="27"/></literal></expr>)<pos:position pos:line="30" pos:column="28"/></condition><then pos:line="30" pos:column="28">
          <block type="pseudo"><return pos:line="31" pos:column="11">return <expr><name pos:line="31" pos:column="18">CURL_FNMATCH_NOMATCH<pos:position pos:line="31" pos:column="38"/></name></expr>;<pos:position pos:line="31" pos:column="39"/></return></block></then></if></elseif>
        <else pos:line="32" pos:column="9">else
          <block type="pseudo"><return pos:line="33" pos:column="11">return <expr><name pos:line="33" pos:column="18">CURL_FNMATCH_FAIL<pos:position pos:line="33" pos:column="35"/></name></expr>;<pos:position pos:line="33" pos:column="36"/></return></block></else></if> <comment type="block" pos:line="33" pos:column="37">/* cannot deal with other character */</comment>
      }<pos:position pos:line="34" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="35" pos:column="7">else <if pos:line="35" pos:column="12">if<condition pos:line="35" pos:column="14">(<expr><operator pos:line="35" pos:column="15">*<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">p<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">==<pos:position pos:line="35" pos:column="20"/></operator> <literal type="char" pos:line="35" pos:column="21">'\0'<pos:position pos:line="35" pos:column="25"/></literal></expr>)<pos:position pos:line="35" pos:column="26"/></condition><then pos:line="35" pos:column="26"> <block pos:line="35" pos:column="27">{
        <if pos:line="36" pos:column="9">if<condition pos:line="36" pos:column="11">(<expr><operator pos:line="36" pos:column="12">*<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="13">s<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">==<pos:position pos:line="36" pos:column="17"/></operator> <literal type="char" pos:line="36" pos:column="18">'\0'<pos:position pos:line="36" pos:column="22"/></literal></expr>)<pos:position pos:line="36" pos:column="23"/></condition><then pos:line="36" pos:column="23">
          <block type="pseudo"><return pos:line="37" pos:column="11">return <expr><name pos:line="37" pos:column="18">CURL_FNMATCH_MATCH<pos:position pos:line="37" pos:column="36"/></name></expr>;<pos:position pos:line="37" pos:column="37"/></return></block></then></if>
        <return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">CURL_FNMATCH_NOMATCH<pos:position pos:line="38" pos:column="36"/></name></expr>;<pos:position pos:line="38" pos:column="37"/></return>
      }<pos:position pos:line="39" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="40" pos:column="7">else <if pos:line="40" pos:column="12">if<condition pos:line="40" pos:column="14">(<expr><operator pos:line="40" pos:column="15">*<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="16">p<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">==<pos:position pos:line="40" pos:column="20"/></operator> <literal type="char" pos:line="40" pos:column="21">'\\'<pos:position pos:line="40" pos:column="25"/></literal></expr>)<pos:position pos:line="40" pos:column="26"/></condition><then pos:line="40" pos:column="26"> <block pos:line="40" pos:column="27">{
        <expr_stmt><expr><name pos:line="41" pos:column="9">state<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <name pos:line="41" pos:column="17">CURLFNM_LOOP_BACKSLASH<pos:position pos:line="41" pos:column="39"/></name></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="42" pos:column="9">p<pos:position pos:line="42" pos:column="10"/></name><operator pos:line="42" pos:column="10">++<pos:position pos:line="42" pos:column="12"/></operator></expr>;<pos:position pos:line="42" pos:column="13"/></expr_stmt>
      }<pos:position pos:line="43" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="44" pos:column="7">else <if pos:line="44" pos:column="12">if<condition pos:line="44" pos:column="14">(<expr><operator pos:line="44" pos:column="15">*<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="16">p<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">==<pos:position pos:line="44" pos:column="20"/></operator> <literal type="char" pos:line="44" pos:column="21">'['<pos:position pos:line="44" pos:column="24"/></literal></expr>)<pos:position pos:line="44" pos:column="25"/></condition><then pos:line="44" pos:column="25"> <block pos:line="44" pos:column="26">{
        <decl_stmt><decl><type><name pos:line="45" pos:column="9">unsigned<pos:position pos:line="45" pos:column="17"/></name> <name pos:line="45" pos:column="18">char<pos:position pos:line="45" pos:column="22"/></name> <modifier pos:line="45" pos:column="23">*<pos:position pos:line="45" pos:column="24"/></modifier></type><name pos:line="45" pos:column="24">pp<pos:position pos:line="45" pos:column="26"/></name> <init pos:line="45" pos:column="27">= <expr><name pos:line="45" pos:column="29">p<pos:position pos:line="45" pos:column="30"/></name> <operator pos:line="45" pos:column="31">+<pos:position pos:line="45" pos:column="32"/></operator> <literal type="number" pos:line="45" pos:column="33">1<pos:position pos:line="45" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="45" pos:column="35"/></decl_stmt> <comment type="block" pos:line="45" pos:column="36">/* cannot handle with pointer to register */</comment>
        <if pos:line="46" pos:column="9">if<condition pos:line="46" pos:column="11">(<expr><call><name pos:line="46" pos:column="12">setcharset<pos:position pos:line="46" pos:column="22"/></name><argument_list pos:line="46" pos:column="22">(<argument><expr><operator pos:line="46" pos:column="23">&amp;<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="24">pp<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="28">charset<pos:position pos:line="46" pos:column="35"/></name></expr></argument>)<pos:position pos:line="46" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="37"/></condition><then pos:line="46" pos:column="37"> <block pos:line="46" pos:column="38">{
          <decl_stmt><decl><type><name pos:line="47" pos:column="11">int<pos:position pos:line="47" pos:column="14"/></name></type> <name pos:line="47" pos:column="15">found<pos:position pos:line="47" pos:column="20"/></name> <init pos:line="47" pos:column="21">= <expr><name pos:line="47" pos:column="23">FALSE<pos:position pos:line="47" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="47" pos:column="29"/></decl_stmt>
          <if pos:line="48" pos:column="11">if<condition pos:line="48" pos:column="13">(<expr><name><name pos:line="48" pos:column="14">charset<pos:position pos:line="48" pos:column="21"/></name><index pos:line="48" pos:column="21">[<expr><operator pos:line="48" pos:column="22">(<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="23">unsigned<pos:position pos:line="48" pos:column="31"/></name> <name pos:line="48" pos:column="32">int<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">)<pos:position pos:line="48" pos:column="36"/></operator><operator pos:line="48" pos:column="36">*<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="37">s<pos:position pos:line="48" pos:column="38"/></name></expr>]<pos:position pos:line="48" pos:column="39"/></index></name></expr>)<pos:position pos:line="48" pos:column="40"/></condition><then pos:line="48" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="13">found<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <name pos:line="49" pos:column="21">TRUE<pos:position pos:line="49" pos:column="25"/></name></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt></block></then>
          <elseif pos:line="50" pos:column="11">else <if pos:line="50" pos:column="16">if<condition pos:line="50" pos:column="18">(<expr><name><name pos:line="50" pos:column="19">charset<pos:position pos:line="50" pos:column="26"/></name><index pos:line="50" pos:column="26">[<expr><name pos:line="50" pos:column="27">CURLFNM_ALNUM<pos:position pos:line="50" pos:column="40"/></name></expr>]<pos:position pos:line="50" pos:column="41"/></index></name></expr>)<pos:position pos:line="50" pos:column="42"/></condition><then pos:line="50" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="13">found<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <call><name pos:line="51" pos:column="21">ISALNUM<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><operator pos:line="51" pos:column="29">*<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="30">s<pos:position pos:line="51" pos:column="31"/></name></expr></argument>)<pos:position pos:line="51" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="33"/></expr_stmt></block></then></if></elseif>
          <elseif pos:line="52" pos:column="11">else <if pos:line="52" pos:column="16">if<condition pos:line="52" pos:column="18">(<expr><name><name pos:line="52" pos:column="19">charset<pos:position pos:line="52" pos:column="26"/></name><index pos:line="52" pos:column="26">[<expr><name pos:line="52" pos:column="27">CURLFNM_ALPHA<pos:position pos:line="52" pos:column="40"/></name></expr>]<pos:position pos:line="52" pos:column="41"/></index></name></expr>)<pos:position pos:line="52" pos:column="42"/></condition><then pos:line="52" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="13">found<pos:position pos:line="53" pos:column="18"/></name> <operator pos:line="53" pos:column="19">=<pos:position pos:line="53" pos:column="20"/></operator> <call><name pos:line="53" pos:column="21">ISALPHA<pos:position pos:line="53" pos:column="28"/></name><argument_list pos:line="53" pos:column="28">(<argument><expr><operator pos:line="53" pos:column="29">*<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="30">s<pos:position pos:line="53" pos:column="31"/></name></expr></argument>)<pos:position pos:line="53" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="33"/></expr_stmt></block></then></if></elseif>
          <elseif pos:line="54" pos:column="11">else <if pos:line="54" pos:column="16">if<condition pos:line="54" pos:column="18">(<expr><name><name pos:line="54" pos:column="19">charset<pos:position pos:line="54" pos:column="26"/></name><index pos:line="54" pos:column="26">[<expr><name pos:line="54" pos:column="27">CURLFNM_DIGIT<pos:position pos:line="54" pos:column="40"/></name></expr>]<pos:position pos:line="54" pos:column="41"/></index></name></expr>)<pos:position pos:line="54" pos:column="42"/></condition><then pos:line="54" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="13">found<pos:position pos:line="55" pos:column="18"/></name> <operator pos:line="55" pos:column="19">=<pos:position pos:line="55" pos:column="20"/></operator> <call><name pos:line="55" pos:column="21">ISDIGIT<pos:position pos:line="55" pos:column="28"/></name><argument_list pos:line="55" pos:column="28">(<argument><expr><operator pos:line="55" pos:column="29">*<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="30">s<pos:position pos:line="55" pos:column="31"/></name></expr></argument>)<pos:position pos:line="55" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt></block></then></if></elseif>
          <elseif pos:line="56" pos:column="11">else <if pos:line="56" pos:column="16">if<condition pos:line="56" pos:column="18">(<expr><name><name pos:line="56" pos:column="19">charset<pos:position pos:line="56" pos:column="26"/></name><index pos:line="56" pos:column="26">[<expr><name pos:line="56" pos:column="27">CURLFNM_XDIGIT<pos:position pos:line="56" pos:column="41"/></name></expr>]<pos:position pos:line="56" pos:column="42"/></index></name></expr>)<pos:position pos:line="56" pos:column="43"/></condition><then pos:line="56" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="13">found<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <call><name pos:line="57" pos:column="21">ISXDIGIT<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><operator pos:line="57" pos:column="30">*<pos:position pos:line="57" pos:column="31"/></operator><name pos:line="57" pos:column="31">s<pos:position pos:line="57" pos:column="32"/></name></expr></argument>)<pos:position pos:line="57" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="34"/></expr_stmt></block></then></if></elseif>
          <elseif pos:line="58" pos:column="11">else <if pos:line="58" pos:column="16">if<condition pos:line="58" pos:column="18">(<expr><name><name pos:line="58" pos:column="19">charset<pos:position pos:line="58" pos:column="26"/></name><index pos:line="58" pos:column="26">[<expr><name pos:line="58" pos:column="27">CURLFNM_PRINT<pos:position pos:line="58" pos:column="40"/></name></expr>]<pos:position pos:line="58" pos:column="41"/></index></name></expr>)<pos:position pos:line="58" pos:column="42"/></condition><then pos:line="58" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="13">found<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <call><name pos:line="59" pos:column="21">ISPRINT<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><operator pos:line="59" pos:column="29">*<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="30">s<pos:position pos:line="59" pos:column="31"/></name></expr></argument>)<pos:position pos:line="59" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="33"/></expr_stmt></block></then></if></elseif>
          <elseif pos:line="60" pos:column="11">else <if pos:line="60" pos:column="16">if<condition pos:line="60" pos:column="18">(<expr><name><name pos:line="60" pos:column="19">charset<pos:position pos:line="60" pos:column="26"/></name><index pos:line="60" pos:column="26">[<expr><name pos:line="60" pos:column="27">CURLFNM_SPACE<pos:position pos:line="60" pos:column="40"/></name></expr>]<pos:position pos:line="60" pos:column="41"/></index></name></expr>)<pos:position pos:line="60" pos:column="42"/></condition><then pos:line="60" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="13">found<pos:position pos:line="61" pos:column="18"/></name> <operator pos:line="61" pos:column="19">=<pos:position pos:line="61" pos:column="20"/></operator> <call><name pos:line="61" pos:column="21">ISSPACE<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><operator pos:line="61" pos:column="29">*<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="30">s<pos:position pos:line="61" pos:column="31"/></name></expr></argument>)<pos:position pos:line="61" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="33"/></expr_stmt></block></then></if></elseif>
          <elseif pos:line="62" pos:column="11">else <if pos:line="62" pos:column="16">if<condition pos:line="62" pos:column="18">(<expr><name><name pos:line="62" pos:column="19">charset<pos:position pos:line="62" pos:column="26"/></name><index pos:line="62" pos:column="26">[<expr><name pos:line="62" pos:column="27">CURLFNM_UPPER<pos:position pos:line="62" pos:column="40"/></name></expr>]<pos:position pos:line="62" pos:column="41"/></index></name></expr>)<pos:position pos:line="62" pos:column="42"/></condition><then pos:line="62" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="13">found<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">=<pos:position pos:line="63" pos:column="20"/></operator> <call><name pos:line="63" pos:column="21">ISUPPER<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><operator pos:line="63" pos:column="29">*<pos:position pos:line="63" pos:column="30"/></operator><name pos:line="63" pos:column="30">s<pos:position pos:line="63" pos:column="31"/></name></expr></argument>)<pos:position pos:line="63" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="33"/></expr_stmt></block></then></if></elseif>
          <elseif pos:line="64" pos:column="11">else <if pos:line="64" pos:column="16">if<condition pos:line="64" pos:column="18">(<expr><name><name pos:line="64" pos:column="19">charset<pos:position pos:line="64" pos:column="26"/></name><index pos:line="64" pos:column="26">[<expr><name pos:line="64" pos:column="27">CURLFNM_LOWER<pos:position pos:line="64" pos:column="40"/></name></expr>]<pos:position pos:line="64" pos:column="41"/></index></name></expr>)<pos:position pos:line="64" pos:column="42"/></condition><then pos:line="64" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="13">found<pos:position pos:line="65" pos:column="18"/></name> <operator pos:line="65" pos:column="19">=<pos:position pos:line="65" pos:column="20"/></operator> <call><name pos:line="65" pos:column="21">ISLOWER<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument><expr><operator pos:line="65" pos:column="29">*<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="30">s<pos:position pos:line="65" pos:column="31"/></name></expr></argument>)<pos:position pos:line="65" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="33"/></expr_stmt></block></then></if></elseif>
          <elseif pos:line="66" pos:column="11">else <if pos:line="66" pos:column="16">if<condition pos:line="66" pos:column="18">(<expr><name><name pos:line="66" pos:column="19">charset<pos:position pos:line="66" pos:column="26"/></name><index pos:line="66" pos:column="26">[<expr><name pos:line="66" pos:column="27">CURLFNM_BLANK<pos:position pos:line="66" pos:column="40"/></name></expr>]<pos:position pos:line="66" pos:column="41"/></index></name></expr>)<pos:position pos:line="66" pos:column="42"/></condition><then pos:line="66" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="13">found<pos:position pos:line="67" pos:column="18"/></name> <operator pos:line="67" pos:column="19">=<pos:position pos:line="67" pos:column="20"/></operator> <call><name pos:line="67" pos:column="21">ISBLANK<pos:position pos:line="67" pos:column="28"/></name><argument_list pos:line="67" pos:column="28">(<argument><expr><operator pos:line="67" pos:column="29">*<pos:position pos:line="67" pos:column="30"/></operator><name pos:line="67" pos:column="30">s<pos:position pos:line="67" pos:column="31"/></name></expr></argument>)<pos:position pos:line="67" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="33"/></expr_stmt></block></then></if></elseif>
          <elseif pos:line="68" pos:column="11">else <if pos:line="68" pos:column="16">if<condition pos:line="68" pos:column="18">(<expr><name><name pos:line="68" pos:column="19">charset<pos:position pos:line="68" pos:column="26"/></name><index pos:line="68" pos:column="26">[<expr><name pos:line="68" pos:column="27">CURLFNM_GRAPH<pos:position pos:line="68" pos:column="40"/></name></expr>]<pos:position pos:line="68" pos:column="41"/></index></name></expr>)<pos:position pos:line="68" pos:column="42"/></condition><then pos:line="68" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="13">found<pos:position pos:line="69" pos:column="18"/></name> <operator pos:line="69" pos:column="19">=<pos:position pos:line="69" pos:column="20"/></operator> <call><name pos:line="69" pos:column="21">ISGRAPH<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><operator pos:line="69" pos:column="29">*<pos:position pos:line="69" pos:column="30"/></operator><name pos:line="69" pos:column="30">s<pos:position pos:line="69" pos:column="31"/></name></expr></argument>)<pos:position pos:line="69" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="33"/></expr_stmt></block></then></if></elseif></if>

          <if pos:line="71" pos:column="11">if<condition pos:line="71" pos:column="13">(<expr><name><name pos:line="71" pos:column="14">charset<pos:position pos:line="71" pos:column="21"/></name><index pos:line="71" pos:column="21">[<expr><name pos:line="71" pos:column="22">CURLFNM_NEGATE<pos:position pos:line="71" pos:column="36"/></name></expr>]<pos:position pos:line="71" pos:column="37"/></index></name></expr>)<pos:position pos:line="71" pos:column="38"/></condition><then pos:line="71" pos:column="38">
            <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="13">found<pos:position pos:line="72" pos:column="18"/></name> <operator pos:line="72" pos:column="19">=<pos:position pos:line="72" pos:column="20"/></operator> <operator pos:line="72" pos:column="21">!<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="22">found<pos:position pos:line="72" pos:column="27"/></name></expr>;<pos:position pos:line="72" pos:column="28"/></expr_stmt></block></then></if>

          <if pos:line="74" pos:column="11">if<condition pos:line="74" pos:column="13">(<expr><name pos:line="74" pos:column="14">found<pos:position pos:line="74" pos:column="19"/></name></expr>)<pos:position pos:line="74" pos:column="20"/></condition><then pos:line="74" pos:column="20"> <block pos:line="74" pos:column="21">{
            <expr_stmt><expr><name pos:line="75" pos:column="13">p<pos:position pos:line="75" pos:column="14"/></name> <operator pos:line="75" pos:column="15">=<pos:position pos:line="75" pos:column="16"/></operator> <name pos:line="75" pos:column="17">pp<pos:position pos:line="75" pos:column="19"/></name> <operator pos:line="75" pos:column="20">+<pos:position pos:line="75" pos:column="21"/></operator> <literal type="number" pos:line="75" pos:column="22">1<pos:position pos:line="75" pos:column="23"/></literal></expr>;<pos:position pos:line="75" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name pos:line="76" pos:column="13">s<pos:position pos:line="76" pos:column="14"/></name><operator pos:line="76" pos:column="14">++<pos:position pos:line="76" pos:column="16"/></operator></expr>;<pos:position pos:line="76" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="77" pos:column="13">memset<pos:position pos:line="77" pos:column="19"/></name><argument_list pos:line="77" pos:column="19">(<argument><expr><name pos:line="77" pos:column="20">charset<pos:position pos:line="77" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="29">0<pos:position pos:line="77" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="32">CURLFNM_CHSET_SIZE<pos:position pos:line="77" pos:column="50"/></name></expr></argument>)<pos:position pos:line="77" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="52"/></expr_stmt>
          }<pos:position pos:line="78" pos:column="12"/></block></then>
          <else pos:line="79" pos:column="11">else
            <block type="pseudo"><return pos:line="80" pos:column="13">return <expr><name pos:line="80" pos:column="20">CURL_FNMATCH_NOMATCH<pos:position pos:line="80" pos:column="40"/></name></expr>;<pos:position pos:line="80" pos:column="41"/></return></block></else></if>
        }<pos:position pos:line="81" pos:column="10"/></block></then>
        <else pos:line="82" pos:column="9">else
          <block type="pseudo"><return pos:line="83" pos:column="11">return <expr><name pos:line="83" pos:column="18">CURL_FNMATCH_FAIL<pos:position pos:line="83" pos:column="35"/></name></expr>;<pos:position pos:line="83" pos:column="36"/></return></block></else></if>
      }<pos:position pos:line="84" pos:column="8"/></block></then></if></elseif>
      <else pos:line="85" pos:column="7">else <block pos:line="85" pos:column="12">{
        <if pos:line="86" pos:column="9">if<condition pos:line="86" pos:column="11">(<expr><operator pos:line="86" pos:column="12">*<pos:position pos:line="86" pos:column="13"/></operator><name pos:line="86" pos:column="13">p<pos:position pos:line="86" pos:column="14"/></name><operator pos:line="86" pos:column="14">++<pos:position pos:line="86" pos:column="16"/></operator> <operator pos:line="86" pos:column="17">!=<pos:position pos:line="86" pos:column="19"/></operator> <operator pos:line="86" pos:column="20">*<pos:position pos:line="86" pos:column="21"/></operator><name pos:line="86" pos:column="21">s<pos:position pos:line="86" pos:column="22"/></name><operator pos:line="86" pos:column="22">++<pos:position pos:line="86" pos:column="24"/></operator></expr>)<pos:position pos:line="86" pos:column="25"/></condition><then pos:line="86" pos:column="25">
          <block type="pseudo"><return pos:line="87" pos:column="11">return <expr><name pos:line="87" pos:column="18">CURL_FNMATCH_NOMATCH<pos:position pos:line="87" pos:column="38"/></name></expr>;<pos:position pos:line="87" pos:column="39"/></return></block></then></if>
      }<pos:position pos:line="88" pos:column="8"/></block></else></if>
      <break pos:line="89" pos:column="7">break;<pos:position pos:line="89" pos:column="13"/></break>
    <case pos:line="90" pos:column="5">case <expr><name pos:line="90" pos:column="10">CURLFNM_LOOP_BACKSLASH<pos:position pos:line="90" pos:column="32"/></name></expr>:<pos:position pos:line="90" pos:column="33"/></case>
      <if pos:line="91" pos:column="7">if<condition pos:line="91" pos:column="9">(<expr><call><name pos:line="91" pos:column="10">ISPRINT<pos:position pos:line="91" pos:column="17"/></name><argument_list pos:line="91" pos:column="17">(<argument><expr><operator pos:line="91" pos:column="18">*<pos:position pos:line="91" pos:column="19"/></operator><name pos:line="91" pos:column="19">p<pos:position pos:line="91" pos:column="20"/></name></expr></argument>)<pos:position pos:line="91" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="22"/></condition><then pos:line="91" pos:column="22"> <block pos:line="91" pos:column="23">{
        <if pos:line="92" pos:column="9">if<condition pos:line="92" pos:column="11">(<expr><operator pos:line="92" pos:column="12">*<pos:position pos:line="92" pos:column="13"/></operator><name pos:line="92" pos:column="13">p<pos:position pos:line="92" pos:column="14"/></name><operator pos:line="92" pos:column="14">++<pos:position pos:line="92" pos:column="16"/></operator> <operator pos:line="92" pos:column="17">==<pos:position pos:line="92" pos:column="19"/></operator> <operator pos:line="92" pos:column="20">*<pos:position pos:line="92" pos:column="21"/></operator><name pos:line="92" pos:column="21">s<pos:position pos:line="92" pos:column="22"/></name><operator pos:line="92" pos:column="22">++<pos:position pos:line="92" pos:column="24"/></operator></expr>)<pos:position pos:line="92" pos:column="25"/></condition><then pos:line="92" pos:column="25">
          <block type="pseudo"><expr_stmt><expr><name pos:line="93" pos:column="11">state<pos:position pos:line="93" pos:column="16"/></name> <operator pos:line="93" pos:column="17">=<pos:position pos:line="93" pos:column="18"/></operator> <name pos:line="93" pos:column="19">CURLFNM_LOOP_DEFAULT<pos:position pos:line="93" pos:column="39"/></name></expr>;<pos:position pos:line="93" pos:column="40"/></expr_stmt></block></then>
        <else pos:line="94" pos:column="9">else
          <block type="pseudo"><return pos:line="95" pos:column="11">return <expr><name pos:line="95" pos:column="18">CURL_FNMATCH_NOMATCH<pos:position pos:line="95" pos:column="38"/></name></expr>;<pos:position pos:line="95" pos:column="39"/></return></block></else></if>
      }<pos:position pos:line="96" pos:column="8"/></block></then>
      <else pos:line="97" pos:column="7">else
        <block type="pseudo"><return pos:line="98" pos:column="9">return <expr><name pos:line="98" pos:column="16">CURL_FNMATCH_FAIL<pos:position pos:line="98" pos:column="33"/></name></expr>;<pos:position pos:line="98" pos:column="34"/></return></block></else></if>
      <break pos:line="99" pos:column="7">break;<pos:position pos:line="99" pos:column="13"/></break>
    }<pos:position pos:line="100" pos:column="6"/></block></switch>
  }<pos:position pos:line="101" pos:column="4"/></block></for>
}<pos:position pos:line="102" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2712_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">handshake<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">int<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">sockindex<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="3" pos:column="27">bool<pos:position pos:line="3" pos:column="31"/></name></type> <name pos:line="3" pos:column="32">duringconnect<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="4" pos:column="27">bool<pos:position pos:line="4" pos:column="31"/></name></type> <name pos:line="4" pos:column="32">nonblocking<pos:position pos:line="4" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="44"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_easy<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name><name pos:line="6" pos:column="28">conn<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">data<pos:position pos:line="6" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">ssl_connect_data<pos:position pos:line="7" pos:column="26"/></name></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">connssl<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><operator pos:line="7" pos:column="38">&amp;<pos:position pos:line="7" pos:column="43"/></operator><name><name pos:line="7" pos:column="39">conn<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">ssl<pos:position pos:line="7" pos:column="48"/></name><index pos:line="7" pos:column="48">[<expr><name pos:line="7" pos:column="49">sockindex<pos:position pos:line="7" pos:column="58"/></name></expr>]<pos:position pos:line="7" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gnutls_session_t<pos:position pos:line="8" pos:column="19"/></name></type> <name pos:line="8" pos:column="20">session<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><name><name pos:line="8" pos:column="30">BACKEND<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">session<pos:position pos:line="8" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">curl_socket_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">sockfd<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><name><name pos:line="9" pos:column="26">conn<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">sock<pos:position pos:line="9" pos:column="36"/></name><index pos:line="9" pos:column="36">[<expr><name pos:line="9" pos:column="37">sockindex<pos:position pos:line="9" pos:column="46"/></name></expr>]<pos:position pos:line="9" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">time_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">timeout_ms<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">rc<pos:position pos:line="11" pos:column="9"/></name></decl>;<pos:position pos:line="11" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">what<pos:position pos:line="12" pos:column="11"/></name></decl>;<pos:position pos:line="12" pos:column="12"/></decl_stmt>

  <for pos:line="14" pos:column="3">for<control pos:line="14" pos:column="6">(<init pos:line="14" pos:column="7">;<pos:position pos:line="14" pos:column="8"/></init><condition pos:line="14" pos:column="8">;<pos:position pos:line="14" pos:column="9"/></condition><incr/>)<pos:position pos:line="14" pos:column="10"/></control> <block pos:line="14" pos:column="11">{
    <comment type="block" pos:line="15" pos:column="5">/* check allowed time left */</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">timeout_ms<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">Curl_timeleft<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">data<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">NULL<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">duringconnect<pos:position pos:line="16" pos:column="57"/></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>

    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><name pos:line="18" pos:column="8">timeout_ms<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">&lt;<pos:position pos:line="18" pos:column="23"/></operator> <literal type="number" pos:line="18" pos:column="21">0<pos:position pos:line="18" pos:column="22"/></literal></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23"> <block pos:line="18" pos:column="24">{
      <comment type="block" pos:line="19" pos:column="7">/* no need to continue if time already is up */</comment>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">failf<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">data<pos:position pos:line="20" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="19">"SSL connection timeout"<pos:position pos:line="20" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
      <return pos:line="21" pos:column="7">return <expr><name pos:line="21" pos:column="14">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="21" pos:column="38"/></name></expr>;<pos:position pos:line="21" pos:column="39"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="24" pos:column="5">/* if ssl is expecting something, check if it's available. */</comment>
    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><name><name pos:line="25" pos:column="8">connssl<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">connecting_state<pos:position pos:line="25" pos:column="33"/></name></name> <operator pos:line="25" pos:column="34">==<pos:position pos:line="25" pos:column="36"/></operator> <name pos:line="25" pos:column="37">ssl_connect_2_reading<pos:position pos:line="25" pos:column="58"/></name>
       <operator pos:line="26" pos:column="8">||<pos:position pos:line="26" pos:column="10"/></operator> <name><name pos:line="26" pos:column="11">connssl<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">connecting_state<pos:position pos:line="26" pos:column="36"/></name></name> <operator pos:line="26" pos:column="37">==<pos:position pos:line="26" pos:column="39"/></operator> <name pos:line="26" pos:column="40">ssl_connect_2_writing<pos:position pos:line="26" pos:column="61"/></name></expr>)<pos:position pos:line="26" pos:column="62"/></condition><then pos:line="26" pos:column="62"> <block pos:line="26" pos:column="63">{

      <decl_stmt><decl><type><name pos:line="28" pos:column="7">curl_socket_t<pos:position pos:line="28" pos:column="20"/></name></type> <name pos:line="28" pos:column="21">writefd<pos:position pos:line="28" pos:column="28"/></name> <init pos:line="28" pos:column="29">= <expr><ternary><condition><expr><name pos:line="28" pos:column="31">ssl_connect_2_writing<pos:position pos:line="28" pos:column="52"/></name> <operator pos:line="28" pos:column="53">==<pos:position pos:line="28" pos:column="55"/></operator>
        <name><name pos:line="29" pos:column="9">connssl<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">connecting_state<pos:position pos:line="29" pos:column="34"/></name></name></expr>?<pos:position pos:line="29" pos:column="35"/></condition><then><expr><name pos:line="29" pos:column="35">sockfd<pos:position pos:line="29" pos:column="41"/></name></expr></then><else pos:line="29" pos:column="41">:<expr><name pos:line="29" pos:column="42">CURL_SOCKET_BAD<pos:position pos:line="29" pos:column="57"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="29" pos:column="58"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="30" pos:column="7">curl_socket_t<pos:position pos:line="30" pos:column="20"/></name></type> <name pos:line="30" pos:column="21">readfd<pos:position pos:line="30" pos:column="27"/></name> <init pos:line="30" pos:column="28">= <expr><ternary><condition><expr><name pos:line="30" pos:column="30">ssl_connect_2_reading<pos:position pos:line="30" pos:column="51"/></name> <operator pos:line="30" pos:column="52">==<pos:position pos:line="30" pos:column="54"/></operator>
        <name><name pos:line="31" pos:column="9">connssl<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">connecting_state<pos:position pos:line="31" pos:column="34"/></name></name></expr>?<pos:position pos:line="31" pos:column="35"/></condition><then><expr><name pos:line="31" pos:column="35">sockfd<pos:position pos:line="31" pos:column="41"/></name></expr></then><else pos:line="31" pos:column="41">:<expr><name pos:line="31" pos:column="42">CURL_SOCKET_BAD<pos:position pos:line="31" pos:column="57"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="31" pos:column="58"/></decl_stmt>

      <expr_stmt><expr><name pos:line="33" pos:column="7">what<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <call><name pos:line="33" pos:column="14">Curl_socket_check<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">readfd<pos:position pos:line="33" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="40">CURL_SOCKET_BAD<pos:position pos:line="33" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="57">writefd<pos:position pos:line="33" pos:column="64"/></name></expr></argument>,
                               <argument><expr><ternary><condition><expr><name pos:line="34" pos:column="32">nonblocking<pos:position pos:line="34" pos:column="43"/></name></expr>?<pos:position pos:line="34" pos:column="44"/></condition><then><expr><literal type="number" pos:line="34" pos:column="44">0<pos:position pos:line="34" pos:column="45"/></literal></expr></then><else pos:line="34" pos:column="45">:
                               <expr><ternary><condition><expr><name pos:line="35" pos:column="32">timeout_ms<pos:position pos:line="35" pos:column="42"/></name></expr>?<pos:position pos:line="35" pos:column="43"/></condition><then><expr><name pos:line="35" pos:column="43">timeout_ms<pos:position pos:line="35" pos:column="53"/></name></expr></then><else pos:line="35" pos:column="53">:<expr><literal type="number" pos:line="35" pos:column="54">1000<pos:position pos:line="35" pos:column="58"/></literal></expr></else></ternary></expr></else></ternary></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
      <if pos:line="36" pos:column="7">if<condition pos:line="36" pos:column="9">(<expr><name pos:line="36" pos:column="10">what<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">&lt;<pos:position pos:line="36" pos:column="19"/></operator> <literal type="number" pos:line="36" pos:column="17">0<pos:position pos:line="36" pos:column="18"/></literal></expr>)<pos:position pos:line="36" pos:column="19"/></condition><then pos:line="36" pos:column="19"> <block pos:line="36" pos:column="20">{
        <comment type="block" pos:line="37" pos:column="9">/* fatal error */</comment>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">failf<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><name pos:line="38" pos:column="15">data<pos:position pos:line="38" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="21">"select/poll on SSL socket, errno: %d"<pos:position pos:line="38" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="61">SOCKERRNO<pos:position pos:line="38" pos:column="70"/></name></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="72"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="39" pos:column="39"/></name></expr>;<pos:position pos:line="39" pos:column="40"/></return>
      }<pos:position pos:line="40" pos:column="8"/></block></then>
      <elseif pos:line="41" pos:column="7">else <if pos:line="41" pos:column="12">if<condition pos:line="41" pos:column="14">(<expr><literal type="number" pos:line="41" pos:column="15">0<pos:position pos:line="41" pos:column="16"/></literal> <operator pos:line="41" pos:column="17">==<pos:position pos:line="41" pos:column="19"/></operator> <name pos:line="41" pos:column="20">what<pos:position pos:line="41" pos:column="24"/></name></expr>)<pos:position pos:line="41" pos:column="25"/></condition><then pos:line="41" pos:column="25"> <block pos:line="41" pos:column="26">{
        <if pos:line="42" pos:column="9">if<condition pos:line="42" pos:column="11">(<expr><name pos:line="42" pos:column="12">nonblocking<pos:position pos:line="42" pos:column="23"/></name></expr>)<pos:position pos:line="42" pos:column="24"/></condition><then pos:line="42" pos:column="24">
          <block type="pseudo"><return pos:line="43" pos:column="11">return <expr><name pos:line="43" pos:column="18">CURLE_OK<pos:position pos:line="43" pos:column="26"/></name></expr>;<pos:position pos:line="43" pos:column="27"/></return></block></then>
        <elseif pos:line="44" pos:column="9">else <if pos:line="44" pos:column="14">if<condition pos:line="44" pos:column="16">(<expr><name pos:line="44" pos:column="17">timeout_ms<pos:position pos:line="44" pos:column="27"/></name></expr>)<pos:position pos:line="44" pos:column="28"/></condition><then pos:line="44" pos:column="28"> <block pos:line="44" pos:column="29">{
          <comment type="block" pos:line="45" pos:column="11">/* timeout */</comment>
          <expr_stmt><expr><call><name pos:line="46" pos:column="11">failf<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">data<pos:position pos:line="46" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="23">"SSL connection timeout at %ld"<pos:position pos:line="46" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="46" pos:column="56">(<pos:position pos:line="46" pos:column="57"/></operator><name pos:line="46" pos:column="57">long<pos:position pos:line="46" pos:column="61"/></name><operator pos:line="46" pos:column="61">)<pos:position pos:line="46" pos:column="62"/></operator><name pos:line="46" pos:column="62">timeout_ms<pos:position pos:line="46" pos:column="72"/></name></expr></argument>)<pos:position pos:line="46" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="74"/></expr_stmt>
          <return pos:line="47" pos:column="11">return <expr><name pos:line="47" pos:column="18">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="47" pos:column="42"/></name></expr>;<pos:position pos:line="47" pos:column="43"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if></elseif></if>
      }<pos:position pos:line="49" pos:column="8"/></block></then></if></elseif></if>
      <comment type="block" pos:line="50" pos:column="7">/* socket is readable or writable */</comment>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="53" pos:column="5">rc<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">=<pos:position pos:line="53" pos:column="9"/></operator> <call><name pos:line="53" pos:column="10">gnutls_handshake<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">session<pos:position pos:line="53" pos:column="34"/></name></expr></argument>)<pos:position pos:line="53" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="36"/></expr_stmt>

    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><operator pos:line="55" pos:column="8">(<pos:position pos:line="55" pos:column="9"/></operator><name pos:line="55" pos:column="9">rc<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">==<pos:position pos:line="55" pos:column="14"/></operator> <name pos:line="55" pos:column="15">GNUTLS_E_AGAIN<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">)<pos:position pos:line="55" pos:column="30"/></operator> <operator pos:line="55" pos:column="31">||<pos:position pos:line="55" pos:column="33"/></operator> <operator pos:line="55" pos:column="34">(<pos:position pos:line="55" pos:column="35"/></operator><name pos:line="55" pos:column="35">rc<pos:position pos:line="55" pos:column="37"/></name> <operator pos:line="55" pos:column="38">==<pos:position pos:line="55" pos:column="40"/></operator> <name pos:line="55" pos:column="41">GNUTLS_E_INTERRUPTED<pos:position pos:line="55" pos:column="61"/></name><operator pos:line="55" pos:column="61">)<pos:position pos:line="55" pos:column="62"/></operator></expr>)<pos:position pos:line="55" pos:column="63"/></condition><then pos:line="55" pos:column="63"> <block pos:line="55" pos:column="64">{
      <expr_stmt><expr><name><name pos:line="56" pos:column="7">connssl<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">connecting_state<pos:position pos:line="56" pos:column="32"/></name></name> <operator pos:line="56" pos:column="33">=<pos:position pos:line="56" pos:column="34"/></operator>
        <ternary><condition><expr><call><name pos:line="57" pos:column="9">gnutls_record_get_direction<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><name pos:line="57" pos:column="37">session<pos:position pos:line="57" pos:column="44"/></name></expr></argument>)<pos:position pos:line="57" pos:column="45"/></argument_list></call></expr>?<pos:position pos:line="57" pos:column="46"/></condition><then pos:line="57" pos:column="46">
        <expr><name pos:line="58" pos:column="9">ssl_connect_2_writing<pos:position pos:line="58" pos:column="30"/></name></expr></then><else pos:line="58" pos:column="30">:<expr><name pos:line="58" pos:column="31">ssl_connect_2_reading<pos:position pos:line="58" pos:column="52"/></name></expr></else></ternary></expr>;<pos:position pos:line="58" pos:column="53"/></expr_stmt>
      <continue pos:line="59" pos:column="7">continue;<pos:position pos:line="59" pos:column="16"/></continue>
    }<pos:position pos:line="60" pos:column="6"/></block></then>
    <elseif pos:line="61" pos:column="5">else <if pos:line="61" pos:column="10">if<condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">(<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">rc<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">&lt;<pos:position pos:line="61" pos:column="21"/></operator> <literal type="number" pos:line="61" pos:column="19">0<pos:position pos:line="61" pos:column="20"/></literal><operator pos:line="61" pos:column="20">)<pos:position pos:line="61" pos:column="21"/></operator> <operator pos:line="61" pos:column="22">&amp;&amp;<pos:position pos:line="61" pos:column="32"/></operator> <operator pos:line="61" pos:column="25">!<pos:position pos:line="61" pos:column="26"/></operator><call><name pos:line="61" pos:column="26">gnutls_error_is_fatal<pos:position pos:line="61" pos:column="47"/></name><argument_list pos:line="61" pos:column="47">(<argument><expr><name pos:line="61" pos:column="48">rc<pos:position pos:line="61" pos:column="50"/></name></expr></argument>)<pos:position pos:line="61" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="52"/></condition><then pos:line="61" pos:column="52"> <block pos:line="61" pos:column="53">{
      <decl_stmt><decl><type><specifier pos:line="62" pos:column="7">const<pos:position pos:line="62" pos:column="12"/></specifier> <name pos:line="62" pos:column="13">char<pos:position pos:line="62" pos:column="17"/></name> <modifier pos:line="62" pos:column="18">*<pos:position pos:line="62" pos:column="19"/></modifier></type><name pos:line="62" pos:column="19">strerr<pos:position pos:line="62" pos:column="25"/></name> <init pos:line="62" pos:column="26">= <expr><name pos:line="62" pos:column="28">NULL<pos:position pos:line="62" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="62" pos:column="33"/></decl_stmt>

      <if pos:line="64" pos:column="7">if<condition pos:line="64" pos:column="9">(<expr><name pos:line="64" pos:column="10">rc<pos:position pos:line="64" pos:column="12"/></name> <operator pos:line="64" pos:column="13">==<pos:position pos:line="64" pos:column="15"/></operator> <name pos:line="64" pos:column="16">GNUTLS_E_WARNING_ALERT_RECEIVED<pos:position pos:line="64" pos:column="47"/></name></expr>)<pos:position pos:line="64" pos:column="48"/></condition><then pos:line="64" pos:column="48"> <block pos:line="64" pos:column="49">{
        <decl_stmt><decl><type><name pos:line="65" pos:column="9">int<pos:position pos:line="65" pos:column="12"/></name></type> <name pos:line="65" pos:column="13">alert<pos:position pos:line="65" pos:column="18"/></name> <init pos:line="65" pos:column="19">= <expr><call><name pos:line="65" pos:column="21">gnutls_alert_get<pos:position pos:line="65" pos:column="37"/></name><argument_list pos:line="65" pos:column="37">(<argument><expr><name pos:line="65" pos:column="38">session<pos:position pos:line="65" pos:column="45"/></name></expr></argument>)<pos:position pos:line="65" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="65" pos:column="47"/></decl_stmt>
        <expr_stmt><expr><name pos:line="66" pos:column="9">strerr<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">=<pos:position pos:line="66" pos:column="17"/></operator> <call><name pos:line="66" pos:column="18">gnutls_alert_get_name<pos:position pos:line="66" pos:column="39"/></name><argument_list pos:line="66" pos:column="39">(<argument><expr><name pos:line="66" pos:column="40">alert<pos:position pos:line="66" pos:column="45"/></name></expr></argument>)<pos:position pos:line="66" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="47"/></expr_stmt>
      }<pos:position pos:line="67" pos:column="8"/></block></then></if>

      <if pos:line="69" pos:column="7">if<condition pos:line="69" pos:column="9">(<expr><name pos:line="69" pos:column="10">strerr<pos:position pos:line="69" pos:column="16"/></name> <operator pos:line="69" pos:column="17">==<pos:position pos:line="69" pos:column="19"/></operator> <name pos:line="69" pos:column="20">NULL<pos:position pos:line="69" pos:column="24"/></name></expr>)<pos:position pos:line="69" pos:column="25"/></condition><then pos:line="69" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="9">strerr<pos:position pos:line="70" pos:column="15"/></name> <operator pos:line="70" pos:column="16">=<pos:position pos:line="70" pos:column="17"/></operator> <call><name pos:line="70" pos:column="18">gnutls_strerror<pos:position pos:line="70" pos:column="33"/></name><argument_list pos:line="70" pos:column="33">(<argument><expr><name pos:line="70" pos:column="34">rc<pos:position pos:line="70" pos:column="36"/></name></expr></argument>)<pos:position pos:line="70" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="38"/></expr_stmt></block></then></if>

      <expr_stmt><expr><call><name pos:line="72" pos:column="7">infof<pos:position pos:line="72" pos:column="12"/></name><argument_list pos:line="72" pos:column="12">(<argument><expr><name pos:line="72" pos:column="13">data<pos:position pos:line="72" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="19">"gnutls_handshake() warning: %s\n"<pos:position pos:line="72" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="55">strerr<pos:position pos:line="72" pos:column="61"/></name></expr></argument>)<pos:position pos:line="72" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="63"/></expr_stmt>
      <continue pos:line="73" pos:column="7">continue;<pos:position pos:line="73" pos:column="16"/></continue>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="75" pos:column="5">else <if pos:line="75" pos:column="10">if<condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">rc<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">&lt;<pos:position pos:line="75" pos:column="20"/></operator> <literal type="number" pos:line="75" pos:column="18">0<pos:position pos:line="75" pos:column="19"/></literal></expr>)<pos:position pos:line="75" pos:column="20"/></condition><then pos:line="75" pos:column="20"> <block pos:line="75" pos:column="21">{
      <decl_stmt><decl><type><specifier pos:line="76" pos:column="7">const<pos:position pos:line="76" pos:column="12"/></specifier> <name pos:line="76" pos:column="13">char<pos:position pos:line="76" pos:column="17"/></name> <modifier pos:line="76" pos:column="18">*<pos:position pos:line="76" pos:column="19"/></modifier></type><name pos:line="76" pos:column="19">strerr<pos:position pos:line="76" pos:column="25"/></name> <init pos:line="76" pos:column="26">= <expr><name pos:line="76" pos:column="28">NULL<pos:position pos:line="76" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="76" pos:column="33"/></decl_stmt>

      <if pos:line="78" pos:column="7">if<condition pos:line="78" pos:column="9">(<expr><name pos:line="78" pos:column="10">rc<pos:position pos:line="78" pos:column="12"/></name> <operator pos:line="78" pos:column="13">==<pos:position pos:line="78" pos:column="15"/></operator> <name pos:line="78" pos:column="16">GNUTLS_E_FATAL_ALERT_RECEIVED<pos:position pos:line="78" pos:column="45"/></name></expr>)<pos:position pos:line="78" pos:column="46"/></condition><then pos:line="78" pos:column="46"> <block pos:line="78" pos:column="47">{
        <decl_stmt><decl><type><name pos:line="79" pos:column="9">int<pos:position pos:line="79" pos:column="12"/></name></type> <name pos:line="79" pos:column="13">alert<pos:position pos:line="79" pos:column="18"/></name> <init pos:line="79" pos:column="19">= <expr><call><name pos:line="79" pos:column="21">gnutls_alert_get<pos:position pos:line="79" pos:column="37"/></name><argument_list pos:line="79" pos:column="37">(<argument><expr><name pos:line="79" pos:column="38">session<pos:position pos:line="79" pos:column="45"/></name></expr></argument>)<pos:position pos:line="79" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="79" pos:column="47"/></decl_stmt>
        <expr_stmt><expr><name pos:line="80" pos:column="9">strerr<pos:position pos:line="80" pos:column="15"/></name> <operator pos:line="80" pos:column="16">=<pos:position pos:line="80" pos:column="17"/></operator> <call><name pos:line="80" pos:column="18">gnutls_alert_get_name<pos:position pos:line="80" pos:column="39"/></name><argument_list pos:line="80" pos:column="39">(<argument><expr><name pos:line="80" pos:column="40">alert<pos:position pos:line="80" pos:column="45"/></name></expr></argument>)<pos:position pos:line="80" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="47"/></expr_stmt>
      }<pos:position pos:line="81" pos:column="8"/></block></then></if>

      <if pos:line="83" pos:column="7">if<condition pos:line="83" pos:column="9">(<expr><name pos:line="83" pos:column="10">strerr<pos:position pos:line="83" pos:column="16"/></name> <operator pos:line="83" pos:column="17">==<pos:position pos:line="83" pos:column="19"/></operator> <name pos:line="83" pos:column="20">NULL<pos:position pos:line="83" pos:column="24"/></name></expr>)<pos:position pos:line="83" pos:column="25"/></condition><then pos:line="83" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="9">strerr<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <call><name pos:line="84" pos:column="18">gnutls_strerror<pos:position pos:line="84" pos:column="33"/></name><argument_list pos:line="84" pos:column="33">(<argument><expr><name pos:line="84" pos:column="34">rc<pos:position pos:line="84" pos:column="36"/></name></expr></argument>)<pos:position pos:line="84" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="38"/></expr_stmt></block></then></if>

      <expr_stmt><expr><call><name pos:line="86" pos:column="7">failf<pos:position pos:line="86" pos:column="12"/></name><argument_list pos:line="86" pos:column="12">(<argument><expr><name pos:line="86" pos:column="13">data<pos:position pos:line="86" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="19">"gnutls_handshake() failed: %s"<pos:position pos:line="86" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="52">strerr<pos:position pos:line="86" pos:column="58"/></name></expr></argument>)<pos:position pos:line="86" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="60"/></expr_stmt>
      <return pos:line="87" pos:column="7">return <expr><name pos:line="87" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="87" pos:column="37"/></name></expr>;<pos:position pos:line="87" pos:column="38"/></return>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="90" pos:column="5">/* Reset our connect state machine */</comment>
    <expr_stmt><expr><name><name pos:line="91" pos:column="5">connssl<pos:position pos:line="91" pos:column="12"/></name><operator pos:line="91" pos:column="12">-&gt;<pos:position pos:line="91" pos:column="17"/></operator><name pos:line="91" pos:column="14">connecting_state<pos:position pos:line="91" pos:column="30"/></name></name> <operator pos:line="91" pos:column="31">=<pos:position pos:line="91" pos:column="32"/></operator> <name pos:line="91" pos:column="33">ssl_connect_1<pos:position pos:line="91" pos:column="46"/></name></expr>;<pos:position pos:line="91" pos:column="47"/></expr_stmt>
    <return pos:line="92" pos:column="5">return <expr><name pos:line="92" pos:column="12">CURLE_OK<pos:position pos:line="92" pos:column="20"/></name></expr>;<pos:position pos:line="92" pos:column="21"/></return>
  }<pos:position pos:line="93" pos:column="4"/></block></for>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2240_curl-7.51.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_ossl_random<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">Curl_easy<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">data<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">unsigned<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">entropy<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="2" pos:column="22">size_t<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">length<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><name pos:line="4" pos:column="6">data<pos:position pos:line="4" pos:column="10"/></name></expr>)<pos:position pos:line="4" pos:column="11"/></condition><then pos:line="4" pos:column="11"> <block pos:line="4" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Curl_ossl_seed<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">(<argument><expr><name pos:line="5" pos:column="20">data<pos:position pos:line="5" pos:column="24"/></name></expr></argument>)<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt> <comment type="block" pos:line="5" pos:column="27">/* Initiate the seed if not already done */</comment>
  }<pos:position pos:line="6" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">RAND_bytes<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name pos:line="7" pos:column="14">entropy<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="23">curlx_uztosi<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><name pos:line="7" pos:column="36">length<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt>
  <return pos:line="8" pos:column="3">return <expr><literal type="number" pos:line="8" pos:column="10">0<pos:position pos:line="8" pos:column="11"/></literal></expr>;<pos:position pos:line="8" pos:column="12"/></return> <comment type="block" pos:line="8" pos:column="13">/* 0 as in no problem */</comment>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

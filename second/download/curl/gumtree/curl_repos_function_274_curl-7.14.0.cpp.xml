<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_274_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_ossl_close<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">connectdata<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">conn<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <comment type="block" pos:line="4" pos:column="3">/*
    ERR_remove_state() frees the error queue associated with
    thread pid.  If pid == 0, the current thread will have its
    error queue removed.

    Since error queue data structures are allocated
    automatically for new threads, they must be freed when
    threads are terminated in oder to avoid memory leaks.
  */</comment>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">ERR_remove_state<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="number" pos:line="13" pos:column="20">0<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>

  <for pos:line="15" pos:column="3">for<control pos:line="15" pos:column="6">(<init><expr><name pos:line="15" pos:column="7">i<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator><literal type="number" pos:line="15" pos:column="9">0<pos:position pos:line="15" pos:column="10"/></literal></expr>;<pos:position pos:line="15" pos:column="11"/></init> <condition><expr><name pos:line="15" pos:column="12">i<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">&lt;<pos:position pos:line="15" pos:column="17"/></operator><literal type="number" pos:line="15" pos:column="14">2<pos:position pos:line="15" pos:column="15"/></literal></expr>;<pos:position pos:line="15" pos:column="16"/></condition> <incr><expr><name pos:line="15" pos:column="17">i<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">++<pos:position pos:line="15" pos:column="20"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="21"/></control> <block pos:line="15" pos:column="22">{
    <decl_stmt><decl><type><name><name pos:line="16" pos:column="5">struct<pos:position pos:line="16" pos:column="11"/></name> <name pos:line="16" pos:column="12">ssl_connect_data<pos:position pos:line="16" pos:column="28"/></name></name> <modifier pos:line="16" pos:column="29">*<pos:position pos:line="16" pos:column="30"/></modifier></type><name pos:line="16" pos:column="30">connssl<pos:position pos:line="16" pos:column="37"/></name> <init pos:line="16" pos:column="38">= <expr><operator pos:line="16" pos:column="40">&amp;<pos:position pos:line="16" pos:column="45"/></operator><name><name pos:line="16" pos:column="41">conn<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">ssl<pos:position pos:line="16" pos:column="50"/></name><index pos:line="16" pos:column="50">[<expr><name pos:line="16" pos:column="51">i<pos:position pos:line="16" pos:column="52"/></name></expr>]<pos:position pos:line="16" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="16" pos:column="54"/></decl_stmt>

    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><name><name pos:line="18" pos:column="8">connssl<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">handle<pos:position pos:line="18" pos:column="23"/></name></name></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24"> <block pos:line="18" pos:column="25">{
      <expr_stmt><expr><operator pos:line="19" pos:column="7">(<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">void<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">)<pos:position pos:line="19" pos:column="13"/></operator><call><name pos:line="19" pos:column="13">SSL_shutdown<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name><name pos:line="19" pos:column="26">connssl<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">-&gt;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="35">handle<pos:position pos:line="19" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">SSL_set_connect_state<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name><name pos:line="20" pos:column="29">connssl<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">-&gt;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="38">handle<pos:position pos:line="20" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="22" pos:column="7">SSL_free<pos:position pos:line="22" pos:column="15"/></name> <argument_list pos:line="22" pos:column="16">(<argument><expr><name><name pos:line="22" pos:column="17">connssl<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">-&gt;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="26">handle<pos:position pos:line="22" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="23" pos:column="7">connssl<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">handle<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">NULL<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><name><name pos:line="25" pos:column="8">connssl<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">ctx<pos:position pos:line="25" pos:column="20"/></name></name></expr>)<pos:position pos:line="25" pos:column="21"/></condition><then pos:line="25" pos:column="21"> <block pos:line="25" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">SSL_CTX_free<pos:position pos:line="26" pos:column="19"/></name> <argument_list pos:line="26" pos:column="20">(<argument><expr><name><name pos:line="26" pos:column="21">connssl<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">ctx<pos:position pos:line="26" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="27" pos:column="7">connssl<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">-&gt;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="16">ctx<pos:position pos:line="27" pos:column="19"/></name></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <name pos:line="27" pos:column="22">NULL<pos:position pos:line="27" pos:column="26"/></name></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">connssl<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">use<pos:position pos:line="29" pos:column="17"/></name></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <name pos:line="29" pos:column="20">FALSE<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt> <comment type="block" pos:line="29" pos:column="27">/* get back to ordinary socket usage */</comment>
  }<pos:position pos:line="30" pos:column="4"/></block></for>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

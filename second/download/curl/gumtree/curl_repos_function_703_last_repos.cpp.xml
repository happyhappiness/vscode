<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_703_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">curl_socket_t<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">connect_to<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">ipaddr<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">unsigned<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">short<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">port<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">srvr_sockaddr_union_t<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">serveraddr<pos:position pos:line="3" pos:column="35"/></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">curl_socket_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">serverfd<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">error<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">rc<pos:position pos:line="6" pos:column="9"/></name> <init pos:line="6" pos:column="10">= <expr><literal type="number" pos:line="6" pos:column="12">0<pos:position pos:line="6" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">op_br<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><literal type="string" pos:line="7" pos:column="23">""<pos:position pos:line="7" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">cl_br<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><literal type="string" pos:line="8" pos:column="23">""<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>

<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">ENABLE_IPV6<pos:position pos:line="10" pos:column="19"/></name></cpp:ifdef>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">socket_domain<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">==<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">AF_INET6<pos:position pos:line="11" pos:column="31"/></name></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32"> <block pos:line="11" pos:column="33">{
    <expr_stmt><expr><name pos:line="12" pos:column="5">op_br<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <literal type="string" pos:line="12" pos:column="13">"["<pos:position pos:line="12" pos:column="16"/></literal></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">cl_br<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <literal type="string" pos:line="13" pos:column="13">"]"<pos:position pos:line="13" pos:column="16"/></literal></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><operator pos:line="17" pos:column="6">!<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">ipaddr<pos:position pos:line="17" pos:column="13"/></name></expr>)<pos:position pos:line="17" pos:column="14"/></condition><then pos:line="17" pos:column="14">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">CURL_SOCKET_BAD<pos:position pos:line="18" pos:column="27"/></name></expr>;<pos:position pos:line="18" pos:column="28"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">logmsg<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><literal type="string" pos:line="20" pos:column="10">"about to connect to %s%s%s:%hu"<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>,
         <argument><expr><name pos:line="21" pos:column="10">op_br<pos:position pos:line="21" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="17">ipaddr<pos:position pos:line="21" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="25">cl_br<pos:position pos:line="21" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="32">port<pos:position pos:line="21" pos:column="36"/></name></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>


  <expr_stmt><expr><name pos:line="24" pos:column="3">serverfd<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">socket<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">socket_domain<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="36">SOCK_STREAM<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="49">0<pos:position pos:line="24" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>
  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><name pos:line="25" pos:column="6">CURL_SOCKET_BAD<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">==<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">serverfd<pos:position pos:line="25" pos:column="33"/></name></expr>)<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34"> <block pos:line="25" pos:column="35">{
    <expr_stmt><expr><name pos:line="26" pos:column="5">error<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <name pos:line="26" pos:column="13">SOCKERRNO<pos:position pos:line="26" pos:column="22"/></name></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">logmsg<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="string" pos:line="27" pos:column="12">"Error creating socket for server conection: (%d) %s"<pos:position pos:line="27" pos:column="65"/></literal></expr></argument>,
           <argument><expr><name pos:line="28" pos:column="12">error<pos:position pos:line="28" pos:column="17"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="19">strerror<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">error<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">CURL_SOCKET_BAD<pos:position pos:line="29" pos:column="27"/></name></expr>;<pos:position pos:line="29" pos:column="28"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef<pos:position pos:line="32" pos:column="7"/></cpp:directive> <name pos:line="32" pos:column="8">TCP_NODELAY<pos:position pos:line="32" pos:column="19"/></name></cpp:ifdef>
  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><call><name pos:line="33" pos:column="6">socket_domain_is_ip<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">()<pos:position pos:line="33" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="28"/></condition><then pos:line="33" pos:column="28"> <block pos:line="33" pos:column="29">{
    <comment type="block" pos:line="34" pos:column="5">/* Disable the Nagle algorithm */</comment>
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">curl_socklen_t<pos:position pos:line="35" pos:column="19"/></name></type> <name pos:line="35" pos:column="20">flag<pos:position pos:line="35" pos:column="24"/></name> <init pos:line="35" pos:column="25">= <expr><literal type="number" pos:line="35" pos:column="27">1<pos:position pos:line="35" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="35" pos:column="29"/></decl_stmt>
    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">(<expr><literal type="number" pos:line="36" pos:column="8">0<pos:position pos:line="36" pos:column="9"/></literal> <operator pos:line="36" pos:column="10">!=<pos:position pos:line="36" pos:column="12"/></operator> <call><name pos:line="36" pos:column="13">setsockopt<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">serverfd<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">IPPROTO_TCP<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">TCP_NODELAY<pos:position pos:line="36" pos:column="58"/></name></expr></argument>,
                       <argument><expr><operator pos:line="37" pos:column="24">(<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="25">void<pos:position pos:line="37" pos:column="29"/></name> <operator pos:line="37" pos:column="30">*<pos:position pos:line="37" pos:column="31"/></operator><operator pos:line="37" pos:column="31">)<pos:position pos:line="37" pos:column="32"/></operator><operator pos:line="37" pos:column="32">&amp;<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="33">flag<pos:position pos:line="37" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="39">sizeof<argument_list pos:line="37" pos:column="45">(<argument><expr><name pos:line="37" pos:column="46">flag<pos:position pos:line="37" pos:column="50"/></name></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="53"/></condition><then pos:line="37" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="7">logmsg<pos:position pos:line="38" pos:column="13"/></name><argument_list pos:line="38" pos:column="13">(<argument><expr><literal type="string" pos:line="38" pos:column="14">"====&gt; TCP_NODELAY for server conection failed"<pos:position pos:line="38" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="63"/></expr_stmt></block></then></if>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif>

  <switch pos:line="42" pos:column="3">switch<condition pos:line="42" pos:column="9">(<expr><name pos:line="42" pos:column="10">socket_domain<pos:position pos:line="42" pos:column="23"/></name></expr>)<pos:position pos:line="42" pos:column="24"/></condition> <block pos:line="42" pos:column="25">{
  <case pos:line="43" pos:column="3">case <expr><name pos:line="43" pos:column="8">AF_INET<pos:position pos:line="43" pos:column="15"/></name></expr>:<pos:position pos:line="43" pos:column="16"/></case>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">memset<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><operator pos:line="44" pos:column="12">&amp;<pos:position pos:line="44" pos:column="17"/></operator><name><name pos:line="44" pos:column="13">serveraddr<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">.<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="24">sa4<pos:position pos:line="44" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="29">0<pos:position pos:line="44" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="32">sizeof<argument_list pos:line="44" pos:column="38">(<argument><expr><name><name pos:line="44" pos:column="39">serveraddr<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">.<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="50">sa4<pos:position pos:line="44" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">serveraddr<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">.<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="16">sa4<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">.<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="20">sin_family<pos:position pos:line="45" pos:column="30"/></name></name> <operator pos:line="45" pos:column="31">=<pos:position pos:line="45" pos:column="32"/></operator> <name pos:line="45" pos:column="33">AF_INET<pos:position pos:line="45" pos:column="40"/></name></expr>;<pos:position pos:line="45" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">serveraddr<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">.<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">sa4<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">.<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="20">sin_port<pos:position pos:line="46" pos:column="28"/></name></name> <operator pos:line="46" pos:column="29">=<pos:position pos:line="46" pos:column="30"/></operator> <call><name pos:line="46" pos:column="31">htons<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name pos:line="46" pos:column="37">port<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
    <if pos:line="47" pos:column="5">if<condition pos:line="47" pos:column="7">(<expr><call><name pos:line="47" pos:column="8">Curl_inet_pton<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">(<argument><expr><name pos:line="47" pos:column="23">AF_INET<pos:position pos:line="47" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="32">ipaddr<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="40">&amp;<pos:position pos:line="47" pos:column="45"/></operator><name><name pos:line="47" pos:column="41">serveraddr<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">.<pos:position pos:line="47" pos:column="52"/></operator><name pos:line="47" pos:column="52">sa4<pos:position pos:line="47" pos:column="55"/></name><operator pos:line="47" pos:column="55">.<pos:position pos:line="47" pos:column="56"/></operator><name pos:line="47" pos:column="56">sin_addr<pos:position pos:line="47" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="65"/></argument_list></call> <operator pos:line="47" pos:column="66">&lt;<pos:position pos:line="47" pos:column="70"/></operator> <literal type="number" pos:line="47" pos:column="68">1<pos:position pos:line="47" pos:column="69"/></literal></expr>)<pos:position pos:line="47" pos:column="70"/></condition><then pos:line="47" pos:column="70"> <block pos:line="47" pos:column="71">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">logmsg<pos:position pos:line="48" pos:column="13"/></name><argument_list pos:line="48" pos:column="13">(<argument><expr><literal type="string" pos:line="48" pos:column="14">"Error inet_pton failed AF_INET conversion of '%s'"<pos:position pos:line="48" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="67">ipaddr<pos:position pos:line="48" pos:column="73"/></name></expr></argument>)<pos:position pos:line="48" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="75"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">sclose<pos:position pos:line="49" pos:column="13"/></name><argument_list pos:line="49" pos:column="13">(<argument><expr><name pos:line="49" pos:column="14">serverfd<pos:position pos:line="49" pos:column="22"/></name></expr></argument>)<pos:position pos:line="49" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>
      <return pos:line="50" pos:column="7">return <expr><name pos:line="50" pos:column="14">CURL_SOCKET_BAD<pos:position pos:line="50" pos:column="29"/></name></expr>;<pos:position pos:line="50" pos:column="30"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="53" pos:column="5">rc<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">=<pos:position pos:line="53" pos:column="9"/></operator> <call><name pos:line="53" pos:column="10">connect<pos:position pos:line="53" pos:column="17"/></name><argument_list pos:line="53" pos:column="17">(<argument><expr><name pos:line="53" pos:column="18">serverfd<pos:position pos:line="53" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="28">&amp;<pos:position pos:line="53" pos:column="33"/></operator><name><name pos:line="53" pos:column="29">serveraddr<pos:position pos:line="53" pos:column="39"/></name><operator pos:line="53" pos:column="39">.<pos:position pos:line="53" pos:column="40"/></operator><name pos:line="53" pos:column="40">sa<pos:position pos:line="53" pos:column="42"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="44">sizeof<argument_list pos:line="53" pos:column="50">(<argument><expr><name><name pos:line="53" pos:column="51">serveraddr<pos:position pos:line="53" pos:column="61"/></name><operator pos:line="53" pos:column="61">.<pos:position pos:line="53" pos:column="62"/></operator><name pos:line="53" pos:column="62">sa4<pos:position pos:line="53" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="68"/></expr_stmt>
    <break pos:line="54" pos:column="5">break;<pos:position pos:line="54" pos:column="11"/></break>
<cpp:ifdef pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">ifdef<pos:position pos:line="55" pos:column="7"/></cpp:directive> <name pos:line="55" pos:column="8">ENABLE_IPV6<pos:position pos:line="55" pos:column="19"/></name></cpp:ifdef>
  <case pos:line="56" pos:column="3">case <expr><name pos:line="56" pos:column="8">AF_INET6<pos:position pos:line="56" pos:column="16"/></name></expr>:<pos:position pos:line="56" pos:column="17"/></case>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">memset<pos:position pos:line="57" pos:column="11"/></name><argument_list pos:line="57" pos:column="11">(<argument><expr><operator pos:line="57" pos:column="12">&amp;<pos:position pos:line="57" pos:column="17"/></operator><name><name pos:line="57" pos:column="13">serveraddr<pos:position pos:line="57" pos:column="23"/></name><operator pos:line="57" pos:column="23">.<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="24">sa6<pos:position pos:line="57" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="29">0<pos:position pos:line="57" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="32">sizeof<argument_list pos:line="57" pos:column="38">(<argument><expr><name><name pos:line="57" pos:column="39">serveraddr<pos:position pos:line="57" pos:column="49"/></name><operator pos:line="57" pos:column="49">.<pos:position pos:line="57" pos:column="50"/></operator><name pos:line="57" pos:column="50">sa6<pos:position pos:line="57" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">serveraddr<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">.<pos:position pos:line="58" pos:column="16"/></operator><name pos:line="58" pos:column="16">sa6<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">.<pos:position pos:line="58" pos:column="20"/></operator><name pos:line="58" pos:column="20">sin6_family<pos:position pos:line="58" pos:column="31"/></name></name> <operator pos:line="58" pos:column="32">=<pos:position pos:line="58" pos:column="33"/></operator> <name pos:line="58" pos:column="34">AF_INET6<pos:position pos:line="58" pos:column="42"/></name></expr>;<pos:position pos:line="58" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">serveraddr<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">.<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="16">sa6<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">.<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="20">sin6_port<pos:position pos:line="59" pos:column="29"/></name></name> <operator pos:line="59" pos:column="30">=<pos:position pos:line="59" pos:column="31"/></operator> <call><name pos:line="59" pos:column="32">htons<pos:position pos:line="59" pos:column="37"/></name><argument_list pos:line="59" pos:column="37">(<argument><expr><name pos:line="59" pos:column="38">port<pos:position pos:line="59" pos:column="42"/></name></expr></argument>)<pos:position pos:line="59" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="44"/></expr_stmt>
    <if pos:line="60" pos:column="5">if<condition pos:line="60" pos:column="7">(<expr><call><name pos:line="60" pos:column="8">Curl_inet_pton<pos:position pos:line="60" pos:column="22"/></name><argument_list pos:line="60" pos:column="22">(<argument><expr><name pos:line="60" pos:column="23">AF_INET6<pos:position pos:line="60" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="33">ipaddr<pos:position pos:line="60" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="41">&amp;<pos:position pos:line="60" pos:column="46"/></operator><name><name pos:line="60" pos:column="42">serveraddr<pos:position pos:line="60" pos:column="52"/></name><operator pos:line="60" pos:column="52">.<pos:position pos:line="60" pos:column="53"/></operator><name pos:line="60" pos:column="53">sa6<pos:position pos:line="60" pos:column="56"/></name><operator pos:line="60" pos:column="56">.<pos:position pos:line="60" pos:column="57"/></operator><name pos:line="60" pos:column="57">sin6_addr<pos:position pos:line="60" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="67"/></argument_list></call> <operator pos:line="60" pos:column="68">&lt;<pos:position pos:line="60" pos:column="72"/></operator> <literal type="number" pos:line="60" pos:column="70">1<pos:position pos:line="60" pos:column="71"/></literal></expr>)<pos:position pos:line="60" pos:column="72"/></condition><then pos:line="60" pos:column="72"> <block pos:line="60" pos:column="73">{
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">logmsg<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">(<argument><expr><literal type="string" pos:line="61" pos:column="14">"Error inet_pton failed AF_INET6 conversion of '%s'"<pos:position pos:line="61" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="68">ipaddr<pos:position pos:line="61" pos:column="74"/></name></expr></argument>)<pos:position pos:line="61" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="76"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">sclose<pos:position pos:line="62" pos:column="13"/></name><argument_list pos:line="62" pos:column="13">(<argument><expr><name pos:line="62" pos:column="14">serverfd<pos:position pos:line="62" pos:column="22"/></name></expr></argument>)<pos:position pos:line="62" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>
      <return pos:line="63" pos:column="7">return <expr><name pos:line="63" pos:column="14">CURL_SOCKET_BAD<pos:position pos:line="63" pos:column="29"/></name></expr>;<pos:position pos:line="63" pos:column="30"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="66" pos:column="5">rc<pos:position pos:line="66" pos:column="7"/></name> <operator pos:line="66" pos:column="8">=<pos:position pos:line="66" pos:column="9"/></operator> <call><name pos:line="66" pos:column="10">connect<pos:position pos:line="66" pos:column="17"/></name><argument_list pos:line="66" pos:column="17">(<argument><expr><name pos:line="66" pos:column="18">serverfd<pos:position pos:line="66" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="28">&amp;<pos:position pos:line="66" pos:column="33"/></operator><name><name pos:line="66" pos:column="29">serveraddr<pos:position pos:line="66" pos:column="39"/></name><operator pos:line="66" pos:column="39">.<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="40">sa<pos:position pos:line="66" pos:column="42"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="44">sizeof<argument_list pos:line="66" pos:column="50">(<argument><expr><name><name pos:line="66" pos:column="51">serveraddr<pos:position pos:line="66" pos:column="61"/></name><operator pos:line="66" pos:column="61">.<pos:position pos:line="66" pos:column="62"/></operator><name pos:line="66" pos:column="62">sa6<pos:position pos:line="66" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="68"/></expr_stmt>
    <break pos:line="67" pos:column="5">break;<pos:position pos:line="67" pos:column="11"/></break>
<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif<pos:position pos:line="68" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="68" pos:column="8">/* ENABLE_IPV6 */</comment>
<cpp:ifdef pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">ifdef<pos:position pos:line="69" pos:column="7"/></cpp:directive> <name pos:line="69" pos:column="8">USE_UNIX_SOCKETS<pos:position pos:line="69" pos:column="24"/></name></cpp:ifdef>
  <case pos:line="70" pos:column="3">case <expr><name pos:line="70" pos:column="8">AF_UNIX<pos:position pos:line="70" pos:column="15"/></name></expr>:<pos:position pos:line="70" pos:column="16"/></case>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">logmsg<pos:position pos:line="71" pos:column="11"/></name><argument_list pos:line="71" pos:column="11">(<argument><expr><literal type="string" pos:line="71" pos:column="12">"Proxying through Unix socket is not (yet?) supported."<pos:position pos:line="71" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="69"/></expr_stmt>
    <return pos:line="72" pos:column="5">return <expr><name pos:line="72" pos:column="12">CURL_SOCKET_BAD<pos:position pos:line="72" pos:column="27"/></name></expr>;<pos:position pos:line="72" pos:column="28"/></return>
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="73" pos:column="8">/* USE_UNIX_SOCKETS */</comment>
  }<pos:position pos:line="74" pos:column="4"/></block></switch>

  <if pos:line="76" pos:column="3">if<condition pos:line="76" pos:column="5">(<expr><name pos:line="76" pos:column="6">got_exit_signal<pos:position pos:line="76" pos:column="21"/></name></expr>)<pos:position pos:line="76" pos:column="22"/></condition><then pos:line="76" pos:column="22"> <block pos:line="76" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">sclose<pos:position pos:line="77" pos:column="11"/></name><argument_list pos:line="77" pos:column="11">(<argument><expr><name pos:line="77" pos:column="12">serverfd<pos:position pos:line="77" pos:column="20"/></name></expr></argument>)<pos:position pos:line="77" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="22"/></expr_stmt>
    <return pos:line="78" pos:column="5">return <expr><name pos:line="78" pos:column="12">CURL_SOCKET_BAD<pos:position pos:line="78" pos:column="27"/></name></expr>;<pos:position pos:line="78" pos:column="28"/></return>
  }<pos:position pos:line="79" pos:column="4"/></block></then></if>

  <if pos:line="81" pos:column="3">if<condition pos:line="81" pos:column="5">(<expr><name pos:line="81" pos:column="6">rc<pos:position pos:line="81" pos:column="8"/></name></expr>)<pos:position pos:line="81" pos:column="9"/></condition><then pos:line="81" pos:column="9"> <block pos:line="81" pos:column="10">{
    <expr_stmt><expr><name pos:line="82" pos:column="5">error<pos:position pos:line="82" pos:column="10"/></name> <operator pos:line="82" pos:column="11">=<pos:position pos:line="82" pos:column="12"/></operator> <name pos:line="82" pos:column="13">SOCKERRNO<pos:position pos:line="82" pos:column="22"/></name></expr>;<pos:position pos:line="82" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">logmsg<pos:position pos:line="83" pos:column="11"/></name><argument_list pos:line="83" pos:column="11">(<argument><expr><literal type="string" pos:line="83" pos:column="12">"Error connecting to server port %hu: (%d) %s"<pos:position pos:line="83" pos:column="58"/></literal></expr></argument>,
           <argument><expr><name pos:line="84" pos:column="12">port<pos:position pos:line="84" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="18">error<pos:position pos:line="84" pos:column="23"/></name></expr></argument>, <argument><expr><call><name pos:line="84" pos:column="25">strerror<pos:position pos:line="84" pos:column="33"/></name><argument_list pos:line="84" pos:column="33">(<argument><expr><name pos:line="84" pos:column="34">error<pos:position pos:line="84" pos:column="39"/></name></expr></argument>)<pos:position pos:line="84" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">sclose<pos:position pos:line="85" pos:column="11"/></name><argument_list pos:line="85" pos:column="11">(<argument><expr><name pos:line="85" pos:column="12">serverfd<pos:position pos:line="85" pos:column="20"/></name></expr></argument>)<pos:position pos:line="85" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="22"/></expr_stmt>
    <return pos:line="86" pos:column="5">return <expr><name pos:line="86" pos:column="12">CURL_SOCKET_BAD<pos:position pos:line="86" pos:column="27"/></name></expr>;<pos:position pos:line="86" pos:column="28"/></return>
  }<pos:position pos:line="87" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="89" pos:column="3">logmsg<pos:position pos:line="89" pos:column="9"/></name><argument_list pos:line="89" pos:column="9">(<argument><expr><literal type="string" pos:line="89" pos:column="10">"connected fine to %s%s%s:%hu, now tunnel"<pos:position pos:line="89" pos:column="52"/></literal></expr></argument>,
         <argument><expr><name pos:line="90" pos:column="10">op_br<pos:position pos:line="90" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="17">ipaddr<pos:position pos:line="90" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="25">cl_br<pos:position pos:line="90" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="32">port<pos:position pos:line="90" pos:column="36"/></name></expr></argument>)<pos:position pos:line="90" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="38"/></expr_stmt>

  <return pos:line="92" pos:column="3">return <expr><name pos:line="92" pos:column="10">serverfd<pos:position pos:line="92" pos:column="18"/></name></expr>;<pos:position pos:line="92" pos:column="19"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

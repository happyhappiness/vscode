<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_95_curl-7.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">dprintf_Pass1Report<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">va_stack_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">vto<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">max<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buffer<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><literal type="number" pos:line="4" pos:column="15">128<pos:position pos:line="4" pos:column="18"/></literal></expr>]<pos:position pos:line="4" pos:column="19"/></index></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">bit<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">flags<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>

  <for pos:line="8" pos:column="3">for<control pos:line="8" pos:column="6">(<init><expr><name pos:line="8" pos:column="7">i<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator><literal type="number" pos:line="8" pos:column="9">0<pos:position pos:line="8" pos:column="10"/></literal></expr>;<pos:position pos:line="8" pos:column="11"/></init> <condition><expr><name pos:line="8" pos:column="12">i<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">&lt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">max<pos:position pos:line="8" pos:column="17"/></name></expr>;<pos:position pos:line="8" pos:column="18"/></condition> <incr><expr><name pos:line="8" pos:column="19">i<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">++<pos:position pos:line="8" pos:column="22"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="23"/></control> <block pos:line="8" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">type<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <switch pos:line="10" pos:column="5">switch<condition pos:line="10" pos:column="11">(<expr><name><name pos:line="10" pos:column="12">vto<pos:position pos:line="10" pos:column="15"/></name><index pos:line="10" pos:column="15">[<expr><name pos:line="10" pos:column="16">i<pos:position pos:line="10" pos:column="17"/></name></expr>]<pos:position pos:line="10" pos:column="18"/></index></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">type<pos:position pos:line="10" pos:column="23"/></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition> <block pos:line="10" pos:column="25">{
    <case pos:line="11" pos:column="5">case <expr><name pos:line="11" pos:column="10">FORMAT_UNKNOWN<pos:position pos:line="11" pos:column="24"/></name></expr>:<pos:position pos:line="11" pos:column="25"/></case>
      <expr_stmt><expr><name pos:line="12" pos:column="7">type<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <literal type="string" pos:line="12" pos:column="14">"unknown"<pos:position pos:line="12" pos:column="23"/></literal></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
      <break pos:line="13" pos:column="7">break;<pos:position pos:line="13" pos:column="13"/></break>
    <case pos:line="14" pos:column="5">case <expr><name pos:line="14" pos:column="10">FORMAT_STRING<pos:position pos:line="14" pos:column="23"/></name></expr>:<pos:position pos:line="14" pos:column="24"/></case>
      <expr_stmt><expr><name pos:line="15" pos:column="7">type<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator><literal type="string" pos:line="15" pos:column="13">"string"<pos:position pos:line="15" pos:column="21"/></literal></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
      <break pos:line="16" pos:column="7">break;<pos:position pos:line="16" pos:column="13"/></break>
    <case pos:line="17" pos:column="5">case <expr><name pos:line="17" pos:column="10">FORMAT_PTR<pos:position pos:line="17" pos:column="20"/></name></expr>:<pos:position pos:line="17" pos:column="21"/></case>
      <expr_stmt><expr><name pos:line="18" pos:column="7">type<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator><literal type="string" pos:line="18" pos:column="13">"pointer"<pos:position pos:line="18" pos:column="22"/></literal></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
      <break pos:line="19" pos:column="7">break;<pos:position pos:line="19" pos:column="13"/></break>
    <case pos:line="20" pos:column="5">case <expr><name pos:line="20" pos:column="10">FORMAT_INT<pos:position pos:line="20" pos:column="20"/></name></expr>:<pos:position pos:line="20" pos:column="21"/></case>
      <expr_stmt><expr><name pos:line="21" pos:column="7">type<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <literal type="string" pos:line="21" pos:column="14">"int"<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
      <break pos:line="22" pos:column="7">break;<pos:position pos:line="22" pos:column="13"/></break>
    <case pos:line="23" pos:column="5">case <expr><name pos:line="23" pos:column="10">FORMAT_LONG<pos:position pos:line="23" pos:column="21"/></name></expr>:<pos:position pos:line="23" pos:column="22"/></case>
      <expr_stmt><expr><name pos:line="24" pos:column="7">type<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="string" pos:line="24" pos:column="14">"long"<pos:position pos:line="24" pos:column="20"/></literal></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>
      <break pos:line="25" pos:column="7">break;<pos:position pos:line="25" pos:column="13"/></break>
    <case pos:line="26" pos:column="5">case <expr><name pos:line="26" pos:column="10">FORMAT_LONGLONG<pos:position pos:line="26" pos:column="25"/></name></expr>:<pos:position pos:line="26" pos:column="26"/></case>
      <expr_stmt><expr><name pos:line="27" pos:column="7">type<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <literal type="string" pos:line="27" pos:column="14">"long long"<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
      <break pos:line="28" pos:column="7">break;<pos:position pos:line="28" pos:column="13"/></break>
    <case pos:line="29" pos:column="5">case <expr><name pos:line="29" pos:column="10">FORMAT_DOUBLE<pos:position pos:line="29" pos:column="23"/></name></expr>:<pos:position pos:line="29" pos:column="24"/></case>
      <expr_stmt><expr><name pos:line="30" pos:column="7">type<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <literal type="string" pos:line="30" pos:column="14">"double"<pos:position pos:line="30" pos:column="22"/></literal></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>
      <break pos:line="31" pos:column="7">break;<pos:position pos:line="31" pos:column="13"/></break>
    <case pos:line="32" pos:column="5">case <expr><name pos:line="32" pos:column="10">FORMAT_LONGDOUBLE<pos:position pos:line="32" pos:column="27"/></name></expr>:<pos:position pos:line="32" pos:column="28"/></case>
      <expr_stmt><expr><name pos:line="33" pos:column="7">type<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <literal type="string" pos:line="33" pos:column="14">"long double"<pos:position pos:line="33" pos:column="27"/></literal></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
      <break pos:line="34" pos:column="7">break;<pos:position pos:line="34" pos:column="13"/></break>      
    }<pos:position pos:line="35" pos:column="6"/></block></switch>


    <expr_stmt><expr><name><name pos:line="38" pos:column="5">buffer<pos:position pos:line="38" pos:column="11"/></name><index pos:line="38" pos:column="11">[<expr><literal type="number" pos:line="38" pos:column="12">0<pos:position pos:line="38" pos:column="13"/></literal></expr>]<pos:position pos:line="38" pos:column="14"/></index></name><operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator><literal type="number" pos:line="38" pos:column="15">0<pos:position pos:line="38" pos:column="16"/></literal></expr>;<pos:position pos:line="38" pos:column="17"/></expr_stmt>

    <for pos:line="40" pos:column="5">for<control pos:line="40" pos:column="8">(<init><expr><name pos:line="40" pos:column="9">bit<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator><literal type="number" pos:line="40" pos:column="13">0<pos:position pos:line="40" pos:column="14"/></literal></expr>;<pos:position pos:line="40" pos:column="15"/></init> <condition><expr><name pos:line="40" pos:column="16">bit<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">&lt;<pos:position pos:line="40" pos:column="23"/></operator><literal type="number" pos:line="40" pos:column="20">31<pos:position pos:line="40" pos:column="22"/></literal></expr>;<pos:position pos:line="40" pos:column="23"/></condition> <incr><expr><name pos:line="40" pos:column="24">bit<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">++<pos:position pos:line="40" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="30"/></control> <block pos:line="40" pos:column="31">{
      <expr_stmt><expr><name pos:line="41" pos:column="7">flags<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <name><name pos:line="41" pos:column="15">vto<pos:position pos:line="41" pos:column="18"/></name><index pos:line="41" pos:column="18">[<expr><name pos:line="41" pos:column="19">i<pos:position pos:line="41" pos:column="20"/></name></expr>]<pos:position pos:line="41" pos:column="21"/></index></name><operator pos:line="41" pos:column="21">.<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">flags<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">&amp;<pos:position pos:line="41" pos:column="33"/></operator> <operator pos:line="41" pos:column="30">(<pos:position pos:line="41" pos:column="31"/></operator><literal type="number" pos:line="41" pos:column="31">1<pos:position pos:line="41" pos:column="32"/></literal><operator pos:line="41" pos:column="32">&lt;&lt;<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="34">bit<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">)<pos:position pos:line="41" pos:column="38"/></operator></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>

      <if pos:line="43" pos:column="7">if<condition pos:line="43" pos:column="9">(<expr><name pos:line="43" pos:column="10">flags<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">&amp;<pos:position pos:line="43" pos:column="21"/></operator> <name pos:line="43" pos:column="18">FLAGS_SPACE<pos:position pos:line="43" pos:column="29"/></name></expr>)<pos:position pos:line="43" pos:column="30"/></condition><then pos:line="43" pos:column="30">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="9">strcat<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">buffer<pos:position pos:line="44" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="24">"space "<pos:position pos:line="44" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt></block></then>
      <elseif pos:line="45" pos:column="7">else <if pos:line="45" pos:column="12">if<condition pos:line="45" pos:column="14">(<expr><name pos:line="45" pos:column="15">flags<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">&amp;<pos:position pos:line="45" pos:column="26"/></operator> <name pos:line="45" pos:column="23">FLAGS_SHOWSIGN<pos:position pos:line="45" pos:column="37"/></name></expr>)<pos:position pos:line="45" pos:column="38"/></condition><then pos:line="45" pos:column="38">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="9">strcat<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><name pos:line="46" pos:column="16">buffer<pos:position pos:line="46" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="24">"plus "<pos:position pos:line="46" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="33"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="47" pos:column="7">else <if pos:line="47" pos:column="12">if<condition pos:line="47" pos:column="14">(<expr><name pos:line="47" pos:column="15">flags<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">&amp;<pos:position pos:line="47" pos:column="26"/></operator> <name pos:line="47" pos:column="23">FLAGS_LEFT<pos:position pos:line="47" pos:column="33"/></name></expr>)<pos:position pos:line="47" pos:column="34"/></condition><then pos:line="47" pos:column="34">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="9">strcat<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><name pos:line="48" pos:column="16">buffer<pos:position pos:line="48" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="24">"left "<pos:position pos:line="48" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="49" pos:column="7">else <if pos:line="49" pos:column="12">if<condition pos:line="49" pos:column="14">(<expr><name pos:line="49" pos:column="15">flags<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">&amp;<pos:position pos:line="49" pos:column="26"/></operator> <name pos:line="49" pos:column="23">FLAGS_ALT<pos:position pos:line="49" pos:column="32"/></name></expr>)<pos:position pos:line="49" pos:column="33"/></condition><then pos:line="49" pos:column="33">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="9">strcat<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><name pos:line="50" pos:column="16">buffer<pos:position pos:line="50" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="24">"alt "<pos:position pos:line="50" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="51" pos:column="7">else <if pos:line="51" pos:column="12">if<condition pos:line="51" pos:column="14">(<expr><name pos:line="51" pos:column="15">flags<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">&amp;<pos:position pos:line="51" pos:column="26"/></operator> <name pos:line="51" pos:column="23">FLAGS_SHORT<pos:position pos:line="51" pos:column="34"/></name></expr>)<pos:position pos:line="51" pos:column="35"/></condition><then pos:line="51" pos:column="35">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="9">strcat<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><name pos:line="52" pos:column="16">buffer<pos:position pos:line="52" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="24">"short "<pos:position pos:line="52" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="34"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="53" pos:column="7">else <if pos:line="53" pos:column="12">if<condition pos:line="53" pos:column="14">(<expr><name pos:line="53" pos:column="15">flags<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">&amp;<pos:position pos:line="53" pos:column="26"/></operator> <name pos:line="53" pos:column="23">FLAGS_LONG<pos:position pos:line="53" pos:column="33"/></name></expr>)<pos:position pos:line="53" pos:column="34"/></condition><then pos:line="53" pos:column="34">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="9">strcat<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><name pos:line="54" pos:column="16">buffer<pos:position pos:line="54" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="24">"long "<pos:position pos:line="54" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="55" pos:column="7">else <if pos:line="55" pos:column="12">if<condition pos:line="55" pos:column="14">(<expr><name pos:line="55" pos:column="15">flags<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">&amp;<pos:position pos:line="55" pos:column="26"/></operator> <name pos:line="55" pos:column="23">FLAGS_LONGLONG<pos:position pos:line="55" pos:column="37"/></name></expr>)<pos:position pos:line="55" pos:column="38"/></condition><then pos:line="55" pos:column="38">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="9">strcat<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">(<argument><expr><name pos:line="56" pos:column="16">buffer<pos:position pos:line="56" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="24">"longlong "<pos:position pos:line="56" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="37"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="57" pos:column="7">else <if pos:line="57" pos:column="12">if<condition pos:line="57" pos:column="14">(<expr><name pos:line="57" pos:column="15">flags<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">&amp;<pos:position pos:line="57" pos:column="26"/></operator> <name pos:line="57" pos:column="23">FLAGS_LONGDOUBLE<pos:position pos:line="57" pos:column="39"/></name></expr>)<pos:position pos:line="57" pos:column="40"/></condition><then pos:line="57" pos:column="40">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="9">strcat<pos:position pos:line="58" pos:column="15"/></name><argument_list pos:line="58" pos:column="15">(<argument><expr><name pos:line="58" pos:column="16">buffer<pos:position pos:line="58" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="24">"longdouble "<pos:position pos:line="58" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="59" pos:column="7">else <if pos:line="59" pos:column="12">if<condition pos:line="59" pos:column="14">(<expr><name pos:line="59" pos:column="15">flags<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">&amp;<pos:position pos:line="59" pos:column="26"/></operator> <name pos:line="59" pos:column="23">FLAGS_PAD_NIL<pos:position pos:line="59" pos:column="36"/></name></expr>)<pos:position pos:line="59" pos:column="37"/></condition><then pos:line="59" pos:column="37">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="9">strcat<pos:position pos:line="60" pos:column="15"/></name><argument_list pos:line="60" pos:column="15">(<argument><expr><name pos:line="60" pos:column="16">buffer<pos:position pos:line="60" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="24">"padnil "<pos:position pos:line="60" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="35"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="61" pos:column="7">else <if pos:line="61" pos:column="12">if<condition pos:line="61" pos:column="14">(<expr><name pos:line="61" pos:column="15">flags<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">&amp;<pos:position pos:line="61" pos:column="26"/></operator> <name pos:line="61" pos:column="23">FLAGS_UNSIGNED<pos:position pos:line="61" pos:column="37"/></name></expr>)<pos:position pos:line="61" pos:column="38"/></condition><then pos:line="61" pos:column="38">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="9">strcat<pos:position pos:line="62" pos:column="15"/></name><argument_list pos:line="62" pos:column="15">(<argument><expr><name pos:line="62" pos:column="16">buffer<pos:position pos:line="62" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="24">"unsigned "<pos:position pos:line="62" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="37"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="63" pos:column="7">else <if pos:line="63" pos:column="12">if<condition pos:line="63" pos:column="14">(<expr><name pos:line="63" pos:column="15">flags<pos:position pos:line="63" pos:column="20"/></name> <operator pos:line="63" pos:column="21">&amp;<pos:position pos:line="63" pos:column="26"/></operator> <name pos:line="63" pos:column="23">FLAGS_OCTAL<pos:position pos:line="63" pos:column="34"/></name></expr>)<pos:position pos:line="63" pos:column="35"/></condition><then pos:line="63" pos:column="35">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="9">strcat<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><name pos:line="64" pos:column="16">buffer<pos:position pos:line="64" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="24">"octal "<pos:position pos:line="64" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="34"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="65" pos:column="7">else <if pos:line="65" pos:column="12">if<condition pos:line="65" pos:column="14">(<expr><name pos:line="65" pos:column="15">flags<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">&amp;<pos:position pos:line="65" pos:column="26"/></operator> <name pos:line="65" pos:column="23">FLAGS_HEX<pos:position pos:line="65" pos:column="32"/></name></expr>)<pos:position pos:line="65" pos:column="33"/></condition><then pos:line="65" pos:column="33">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="9">strcat<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><name pos:line="66" pos:column="16">buffer<pos:position pos:line="66" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="24">"hex "<pos:position pos:line="66" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="32"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="67" pos:column="7">else <if pos:line="67" pos:column="12">if<condition pos:line="67" pos:column="14">(<expr><name pos:line="67" pos:column="15">flags<pos:position pos:line="67" pos:column="20"/></name> <operator pos:line="67" pos:column="21">&amp;<pos:position pos:line="67" pos:column="26"/></operator> <name pos:line="67" pos:column="23">FLAGS_UPPER<pos:position pos:line="67" pos:column="34"/></name></expr>)<pos:position pos:line="67" pos:column="35"/></condition><then pos:line="67" pos:column="35">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="9">strcat<pos:position pos:line="68" pos:column="15"/></name><argument_list pos:line="68" pos:column="15">(<argument><expr><name pos:line="68" pos:column="16">buffer<pos:position pos:line="68" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="24">"upper "<pos:position pos:line="68" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="34"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="69" pos:column="7">else <if pos:line="69" pos:column="12">if<condition pos:line="69" pos:column="14">(<expr><name pos:line="69" pos:column="15">flags<pos:position pos:line="69" pos:column="20"/></name> <operator pos:line="69" pos:column="21">&amp;<pos:position pos:line="69" pos:column="26"/></operator> <name pos:line="69" pos:column="23">FLAGS_WIDTH<pos:position pos:line="69" pos:column="34"/></name></expr>)<pos:position pos:line="69" pos:column="35"/></condition><then pos:line="69" pos:column="35">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="9">strcat<pos:position pos:line="70" pos:column="15"/></name><argument_list pos:line="70" pos:column="15">(<argument><expr><name pos:line="70" pos:column="16">buffer<pos:position pos:line="70" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="24">"width "<pos:position pos:line="70" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="34"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="71" pos:column="7">else <if pos:line="71" pos:column="12">if<condition pos:line="71" pos:column="14">(<expr><name pos:line="71" pos:column="15">flags<pos:position pos:line="71" pos:column="20"/></name> <operator pos:line="71" pos:column="21">&amp;<pos:position pos:line="71" pos:column="26"/></operator> <name pos:line="71" pos:column="23">FLAGS_WIDTHPARAM<pos:position pos:line="71" pos:column="39"/></name></expr>)<pos:position pos:line="71" pos:column="40"/></condition><then pos:line="71" pos:column="40">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="9">strcat<pos:position pos:line="72" pos:column="15"/></name><argument_list pos:line="72" pos:column="15">(<argument><expr><name pos:line="72" pos:column="16">buffer<pos:position pos:line="72" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="24">"widthparam "<pos:position pos:line="72" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="39"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="73" pos:column="7">else <if pos:line="73" pos:column="12">if<condition pos:line="73" pos:column="14">(<expr><name pos:line="73" pos:column="15">flags<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">&amp;<pos:position pos:line="73" pos:column="26"/></operator> <name pos:line="73" pos:column="23">FLAGS_PREC<pos:position pos:line="73" pos:column="33"/></name></expr>)<pos:position pos:line="73" pos:column="34"/></condition><then pos:line="73" pos:column="34">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="9">strcat<pos:position pos:line="74" pos:column="15"/></name><argument_list pos:line="74" pos:column="15">(<argument><expr><name pos:line="74" pos:column="16">buffer<pos:position pos:line="74" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="24">"precision "<pos:position pos:line="74" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="38"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="75" pos:column="7">else <if pos:line="75" pos:column="12">if<condition pos:line="75" pos:column="14">(<expr><name pos:line="75" pos:column="15">flags<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">&amp;<pos:position pos:line="75" pos:column="26"/></operator> <name pos:line="75" pos:column="23">FLAGS_PRECPARAM<pos:position pos:line="75" pos:column="38"/></name></expr>)<pos:position pos:line="75" pos:column="39"/></condition><then pos:line="75" pos:column="39">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="9">strcat<pos:position pos:line="76" pos:column="15"/></name><argument_list pos:line="76" pos:column="15">(<argument><expr><name pos:line="76" pos:column="16">buffer<pos:position pos:line="76" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="24">"precparam "<pos:position pos:line="76" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="38"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="77" pos:column="7">else <if pos:line="77" pos:column="12">if<condition pos:line="77" pos:column="14">(<expr><name pos:line="77" pos:column="15">flags<pos:position pos:line="77" pos:column="20"/></name> <operator pos:line="77" pos:column="21">&amp;<pos:position pos:line="77" pos:column="26"/></operator> <name pos:line="77" pos:column="23">FLAGS_CHAR<pos:position pos:line="77" pos:column="33"/></name></expr>)<pos:position pos:line="77" pos:column="34"/></condition><then pos:line="77" pos:column="34">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="9">strcat<pos:position pos:line="78" pos:column="15"/></name><argument_list pos:line="78" pos:column="15">(<argument><expr><name pos:line="78" pos:column="16">buffer<pos:position pos:line="78" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="24">"char "<pos:position pos:line="78" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="33"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="79" pos:column="7">else <if pos:line="79" pos:column="12">if<condition pos:line="79" pos:column="14">(<expr><name pos:line="79" pos:column="15">flags<pos:position pos:line="79" pos:column="20"/></name> <operator pos:line="79" pos:column="21">&amp;<pos:position pos:line="79" pos:column="26"/></operator> <name pos:line="79" pos:column="23">FLAGS_FLOATE<pos:position pos:line="79" pos:column="35"/></name></expr>)<pos:position pos:line="79" pos:column="36"/></condition><then pos:line="79" pos:column="36">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="80" pos:column="9">strcat<pos:position pos:line="80" pos:column="15"/></name><argument_list pos:line="80" pos:column="15">(<argument><expr><name pos:line="80" pos:column="16">buffer<pos:position pos:line="80" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="24">"floate "<pos:position pos:line="80" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="35"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="81" pos:column="7">else <if pos:line="81" pos:column="12">if<condition pos:line="81" pos:column="14">(<expr><name pos:line="81" pos:column="15">flags<pos:position pos:line="81" pos:column="20"/></name> <operator pos:line="81" pos:column="21">&amp;<pos:position pos:line="81" pos:column="26"/></operator> <name pos:line="81" pos:column="23">FLAGS_FLOATG<pos:position pos:line="81" pos:column="35"/></name></expr>)<pos:position pos:line="81" pos:column="36"/></condition><then pos:line="81" pos:column="36">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="9">strcat<pos:position pos:line="82" pos:column="15"/></name><argument_list pos:line="82" pos:column="15">(<argument><expr><name pos:line="82" pos:column="16">buffer<pos:position pos:line="82" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="24">"floatg "<pos:position pos:line="82" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="35"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="83" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">printf<pos:position pos:line="84" pos:column="11"/></name><argument_list pos:line="84" pos:column="11">(<argument><expr><literal type="string" pos:line="84" pos:column="12">"REPORT: %d. %s [%s]\n"<pos:position pos:line="84" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="37">i<pos:position pos:line="84" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="40">type<pos:position pos:line="84" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="46">buffer<pos:position pos:line="84" pos:column="52"/></name></expr></argument>)<pos:position pos:line="84" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="54"/></expr_stmt>

  }<pos:position pos:line="86" pos:column="4"/></block></for>


}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

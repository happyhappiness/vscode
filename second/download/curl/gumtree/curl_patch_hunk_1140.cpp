 "       disabled with --no-option. That is, you use the exact same option  name\n"
 "       but prefix it with \"no-\". However, in this list we mostly only list and\n"
 "       show the --option version of them. (This concept with --no options  was\n"
 "       added  in  7.19.0.  Previously  most  options  were  toggled  on/off on\n"
 "       repeated use of the same command line option.)\n"
 "\n"
-"       -#, --progress-bar\n"
+"       --anyauth\n"
 , stdout);
  fputs(
-"              Make curl display progress as a simple progress bar  instead  of\n"
-"              the standard, more informational, meter.\n"
-"\n"
-"       -:, --next\n"
-"              Tells curl to use a separate operation for the following URL and\n"
-"              associated  options.  This  allows  you  to  send  several   URL\n"
-"              requests,  each  with  their  own specific options, for example,\n"
-"              such as different user names or custom requests for each. (Added\n"
-"              in 7.36.0)\n"
-"\n"
+"              (HTTP) Tells curl to figure out authentication method by itself,\n"
+"              and  use  the most secure one the remote site claims to support.\n"
+"              This is done by first doing a request and checking the response-\n"
+"              headers,  thus  possibly  inducing  an extra network round-trip.\n"
+"              This is  used  instead  of  setting  a  specific  authentication\n"
+"              method,  which  you  can  do with --basic, --digest, --ntlm, and\n"
 , stdout);
  fputs(
-"       -0, --http1.0\n"
-"              (HTTP)  Tells  curl to use HTTP version 1.0 instead of using its\n"
-"              internally preferred: HTTP 1.1.\n"
+"              --negotiate.\n"
 "\n"
-"       --http1.1\n"
-"              (HTTP) Tells curl to use HTTP version 1.1. This is the  internal\n"
-"              default version. (Added in 7.33.0)\n"
+"              Using --anyauth is not recommended if you do uploads from stdin,\n"
+"              since  it  may require data to be sent twice and then the client\n"
+"              must be able to rewind. If the need should arise when  uploading\n"
+"              from stdin, the upload operation will fail.\n"
 "\n"
-"       --http2\n"
-"              (HTTP)  Tells  curl  to  issue  its  requests using HTTP 2. This\n"
-"              requires that the underlying libcurl was built  to  support  it.\n"
-"              (Added in 7.33.0)\n"
+"              Used together with -u, --user.\n"
 "\n"
-, stdout);
- fputs(
-"       --http2-prior-knowledge\n"
-"              (HTTP)  Tells  curl  to  issue  its  non-TLS HTTP requests using\n"
-"              HTTP/2 without HTTP/1.1 Upgrade.  It  requires  prior  knowledge\n"
-"              that  the  server  supports HTTP/2 straight away. HTTPS requests\n"
-"              will still do HTTP/2 the standard way with  negotiated  protocol\n"
-"              version in the TLS handshake.\n"
+"              See also --proxy-anyauth and --basic and --digest.\n"
 "\n"
-"              HTTP/2  support  in  general  also  requires that the underlying\n"
+"       -a, --append\n"
 , stdout);
  fputs(
-"              libcurl was built to support it. (Added in 7.49.0)\n"
-"\n"
-"       --no-npn\n"
-"              Disable the NPN TLS extension. NPN  is  enabled  by  default  if\n"
-"              libcurl  was built with an SSL library that supports NPN. NPN is\n"
-"              used by a libcurl that supports HTTP 2 to negotiate HTTP 2  sup-\n"
-"              port with the server during https sessions.\n"
-"\n"
-"              (Added in 7.36.0)\n"
+"              (FTP SFTP) When used in an upload, this makes curl append to the\n"
+"              target file instead  of  overwriting  it.  If  the  remote  file\n"
+"              doesn't  exist,  it  will  be  created.   Note that this flag is\n"
+"              ignored by some SFTP servers (including OpenSSH).\n"
 "\n"
-"       --no-alpn\n"
+"       --basic\n"
+"              (HTTP) Tells curl to use  HTTP  Basic  authentication  with  the\n"
+"              remote  host.  This  is  the  default and this option is usually\n"
 , stdout);
  fputs(
-"              Disable  the  ALPN  TLS extension. ALPN is enabled by default if\n"
-"              libcurl was built with an SSL library that supports  ALPN.  ALPN\n"
-"              is  used  by  a libcurl that supports HTTP 2 to negotiate HTTP 2\n"
-"              support with the server during https sessions.\n"
-"\n"
-"              (Added in 7.36.0)\n"
+"              pointless, unless you use it to override a previously set option\n"
+"              that  sets  a  different  authentication method (such as --ntlm,\n"
+"              --digest, or --negotiate).\n"
 "\n"
-"       -1, --tlsv1\n"
-"              (SSL) Forces curl to use TLS version 1.x when negotiating with a\n"
-, stdout);
- fputs(
-"              remote  TLS  server.   You can use options --tlsv1.0, --tlsv1.1,\n"
-"              and --tlsv1.2 to control the TLS version more precisely (if  the\n"
-"              SSL backend in use supports such a level of control).\n"
+"              Used together with -u, --user.\n"
 "\n"
-"       -2, --sslv2\n"
-"              (SSL)  Forces  curl to use SSL version 2 when negotiating with a\n"
-"              remote SSL server. Sometimes curl is built  without  SSLv2  sup-\n"
-"              port. SSLv2 is widely considered insecure (see RFC 6176).\n"
+"              See also --proxy-basic.\n"
 "\n"
-"       -3, --sslv3\n"
+"       --cacert <CA certificate>\n"
+"              (TLS) Tells curl to use the specified certificate file to verify\n"
+"              the  peer.  The  file  may contain multiple CA certificates. The\n"
 , stdout);
  fputs(
-"              (SSL)  Forces  curl to use SSL version 3 when negotiating with a\n"
-"              remote SSL server. Sometimes curl is built  without  SSLv3  sup-\n"
-"              port. SSLv3 is widely considered insecure (see RFC 7568).\n"
+"              certificate(s) must be in PEM format. Normally curl is built  to\n"
+"              use a default file for this, so this option is typically used to\n"
+"              alter that default file.\n"
 "\n"
-"       -4, --ipv4\n"
-"              This  option tells curl to resolve names to IPv4 addresses only,\n"
-"              and not for example try IPv6.\n"
+"              curl recognizes the environment variable named  'CURL_CA_BUNDLE'\n"
+"              if  it  is  set,  and uses the given path as a path to a CA cert\n"
+"              bundle. This option overrides that variable.\n"
 "\n"
-"       -6, --ipv6\n"
-"              This option tells curl to resolve names to IPv6 addresses  only,\n"
+"              The windows version of curl will automatically  look  for  a  CA\n"
 , stdout);
  fputs(
-"              and not for example try IPv4.\n"
+"              certs file named 'curl-ca-bundle.crt', either in the same direc-\n"
+"              tory as curl.exe, or in the Current Working Directory, or in any\n"
+"              folder along your PATH.\n"
 "\n"
-"       -a, --append\n"
-"              (FTP/SFTP) When used in an upload, this makes curl append to the\n"
-"              target file instead  of  overwriting  it.  If  the  remote  file\n"
-"              doesn't  exist,  it  will  be  created.   Note that this flag is\n"
-"              ignored by some SFTP servers (including OpenSSH).\n"
+"              If  curl  is  built  against  the  NSS  SSL library, the NSS PEM\n"
+"              PKCS#11 module (libnsspem.so) needs to  be  available  for  this\n"
+"              option to work properly.\n"
 "\n"
-"       -A, --user-agent <agent string>\n"
-"              (HTTP) Specify the User-Agent string to send to the HTTP server.\n"
+"              (iOS  and macOS only) If curl is built against Secure Transport,\n"
 , stdout);
  fputs(
-"              Some   badly   done  CGIs  fail  if  this  field  isn't  set  to\n"
-"              \"Mozilla/4.0\". To encode blanks  in  the  string,  surround  the\n"
-"              string  with  single  quote marks. This can also be set with the\n"
-"              -H, --header option of course.\n"
+"              then this option is supported for  backward  compatibility  with\n"
+"              other  SSL  engines,  but it should not be set. If the option is\n"
+"              not set, then curl will use the certificates in the  system  and\n"
+"              user  Keychain to verify the peer, which is the preferred method\n"
+"              of verifying the peer's certificate chain.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --anyauth\n"
-"              (HTTP) Tells curl to figure out authentication method by itself,\n"
+"       --capath <dir>\n"
 , stdout);
  fputs(
-"              and  use  the most secure one the remote site claims to support.\n"
-"              This is done by first doing a request and checking the response-\n"
-"              headers,  thus  possibly  inducing  an extra network round-trip.\n"
-"              This is  used  instead  of  setting  a  specific  authentication\n"
-"              method,  which  you  can  do with --basic, --digest, --ntlm, and\n"
-"              --negotiate.\n"
-"\n"
+"              (TLS) Tells curl to use the specified certificate  directory  to\n"
+"              verify  the  peer.  Multiple paths can be provided by separating\n"
+"              them with \":\" (e.g.  \"path1:path2:path3\"). The certificates must\n"
+"              be  in  PEM  format,  and  if curl is built against OpenSSL, the\n"
+"              directory must have been processed using  the  c_rehash  utility\n"
+"              supplied  with OpenSSL. Using --capath can allow OpenSSL-powered\n"
 , stdout);
  fputs(
-"              Note that using --anyauth is not recommended if you  do  uploads\n"
-"              from  stdin, since it may require data to be sent twice and then\n"
-"              the client must be able to rewind. If the need should arise when\n"
-"              uploading from stdin, the upload operation will fail.\n"
+"              curl to make SSL-connections much more  efficiently  than  using\n"
+"              --cacert if the --cacert file contains many CA certificates.\n"
 "\n"
-"       -b, --cookie <name=data>\n"
-"              (HTTP)  Pass the data to the HTTP server as a cookie. It is sup-\n"
-"              posedly the data previously received from the server in a  \"Set-\n"
-, stdout);
- fputs(
-"              Cookie:\"  line.  The data should be in the format \"NAME1=VALUE1;\n"
-"              NAME2=VALUE2\".\n"
+"              If this option is set, the default capath value will be ignored,\n"
+"              and if it is used several times, the last one will be used.\n"
 "\n"
-"              If no '=' symbol is used in the line, it is treated as  a  file-\n"
-"              name  to  use to read previously stored cookie lines from, which\n"
-"              should be used in this session if they match. Using this  method\n"
-"              also  activates  the  cookie  engine which will make curl record\n"
+"       --cert-status\n"
+"              (TLS) Tells curl to verify the status of the server  certificate\n"
+"              by using the Certificate Status Request (aka. OCSP stapling) TLS\n"
 , stdout);
  fputs(
-"              incoming cookies too, which may be handy if you're using this in\n"
-"              combination  with  the -L, --location option. The file format of\n"
-"              the file to read cookies from should be plain HTTP headers (Set-\n"
-"              Cookie style) or the Netscape/Mozilla cookie file format.\n"
+"              extension.\n"
 "\n"
-"              The  file  specified with -b, --cookie is only used as input. No\n"
-"              cookies will be written to the file. To store cookies,  use  the\n"
-, stdout);
- fputs(
-"              -c, --cookie-jar option.\n"
+"              If this option is enabled and the server sends an invalid  (e.g.\n"
+"              expired) response, if the response suggests that the server cer-\n"
+"              tificate has been revoked, or no response at  all  is  received,\n"
+"              the verification fails.\n"
 "\n"
-"              Exercise  caution  if  you  are  using  this option and multiple\n"
-"              transfers may occur.  If you use the NAME1=VALUE1; format, or in\n"
-"              a  file  use  the  Set-Cookie format and don't specify a domain,\n"
-"              then the cookie is sent for any domain (even after redirects are\n"
-"              followed)  and cannot be modified by a server-set cookie. If the\n"
+"              This  is  currently  only implemented in the OpenSSL, GnuTLS and\n"
+"              NSS backends.\n"
+"\n"
+"              Added in 7.41.0.\n"
+"\n"
+"       --cert-type <type>\n"
 , stdout);
  fputs(
-"              cookie engine is enabled and a server sets a cookie of the  same\n"
-"              name then both will be sent on a future transfer to that server,\n"
-"              likely not what you intended.  To address  these  issues  set  a\n"
-"              domain  in  Set-Cookie  (doing that will include sub-domains) or\n"
-"              use the Netscape format.\n"
+"              (TLS) Tells curl what certificate type the provided  certificate\n"
+"              is in. PEM, DER and ENG are recognized types.  If not specified,\n"
+"              PEM is assumed.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       -B, --use-ascii\n"
-, stdout);
- fputs(
-"              (FTP/LDAP) Enable ASCII transfer. For  FTP,  this  can  also  be\n"
-"              enforced  by  using an URL that ends with \";type=A\". This option\n"
-"              causes data sent to stdout to be in text mode for win32 systems.\n"
+"              See also -E, --cert and --key and --key-type.\n"
 "\n"
-"       --basic\n"
-"              (HTTP) Tells curl to use  HTTP  Basic  authentication  with  the\n"
-"              remote  host.  This  is  the  default and this option is usually\n"
-"              pointless, unless you use it to override a previously set option\n"
+"       -E, --cert <certificate[:password]>\n"
+"              (TLS) Tells curl to use the specified  client  certificate  file\n"
 , stdout);
  fputs(
-"              that  sets  a  different  authentication method (such as --ntlm,\n"
-"              --digest, or --negotiate).\n"
-"\n"
-"              Used together with -u, --user and -x, --proxy.\n"
-"\n"
-"              See also --proxy-basic.\n"
-"\n"
-"       -c, --cookie-jar <file name>\n"
-"              (HTTP) Specify to which file you want curl to write all  cookies\n"
-"              after  a completed operation. Curl writes all cookies previously\n"
-"              read from a specified file as well as all cookies received  from\n"
+"              when getting a file with HTTPS, FTPS or another SSL-based proto-\n"
+"              col. The certificate must be in PKCS#12 format if  using  Secure\n"
+"              Transport,  or  PEM  format  if  using any other engine.  If the\n"
+"              optional password isn't specified, it will be queried for on the\n"
+"              terminal.  Note  that  this  option assumes a \"certificate\" file\n"
+"              that is the private key and the client certificate concatenated!\n"
 , stdout);
  fputs(
-"              remote server(s). If no cookies are known, no data will be writ-\n"
-"              ten. The file will be written using  the  Netscape  cookie  file\n"
-"              format.  If  you  set  the  file name to a single dash, \"-\", the\n"
-"              cookies will be written to stdout.\n"
-"\n"
-"              This command line option will activate the  cookie  engine  that\n"
-"              makes curl record and use cookies. Another way to activate it is\n"
-"              to use the -b, --cookie option.\n"
+"              See -E, --cert and --key to specify them independently.\n"
 "\n"
+"              If  curl  is  built against the NSS SSL library then this option\n"
+"              can tell curl the nickname of the certificate to use within  the\n"
+"              NSS  database defined by the environment variable SSL_DIR (or by\n"
+"              default /etc/pki/nssdb). If the NSS  PEM  PKCS#11  module  (lib-\n"
+"              nsspem.so)  is  available  then  PEM files may be loaded. If you\n"
 , stdout);
  fputs(
-"              If the cookie jar can't be created or written to, the whole curl\n"
-"              operation  won't  fail or even report an error clearly. Using -v\n"
-"              will get a warning displayed, but that is the only visible feed-\n"
-"              back you get about this possibly lethal situation.\n"
-"\n"
-"              Since 7.43.0 cookies that were imported in the Set-Cookie format\n"
-"              without a domain name are not exported by this option.\n"
+"              want to use a file from the current directory, please precede it\n"
+"              with  \"./\"  prefix, in order to avoid confusion with a nickname.\n"
+"              If the nickname contains \":\", it needs to be preceded by \"\\\"  so\n"
+"              that  it  is not recognized as password delimiter.  If the nick-\n"
+"              name contains \"\\\", it needs to be escaped as \"\\\\\" so that it  is\n"
+"              not recognized as an escape character.\n"
 "\n"
 , stdout);
  fputs(
-"              If this option is used several times, the  last  specified  file\n"
-"              name will be used.\n"
+"              (iOS  and macOS only) If curl is built against Secure Transport,\n"
+"              then the certificate string can either be the name of a certifi-\n"
+"              cate/private  key in the system or user keychain, or the path to\n"
+"              a PKCS#12-encoded certificate and private key. If  you  want  to\n"
+"              use  a  file  from the current directory, please precede it with\n"
+"              \"./\" prefix, in order to avoid confusion with a nickname.\n"
 "\n"
-"       -C, --continue-at <offset>\n"
-"              Continue/Resume  a  previous  file transfer at the given offset.\n"
-"              The given offset is the exact  number  of  bytes  that  will  be\n"
-"              skipped,  counting  from the beginning of the source file before\n"
-"              it is transferred to the destination.  If used with uploads, the\n"
 , stdout);
  fputs(
-"              FTP server command SIZE will not be used by curl.\n"
-"\n"
-"              Use  \"-C  -\" to tell curl to automatically find out where/how to\n"
-"              resume the transfer. It then uses the given  output/input  files\n"
-"              to figure that out.\n"
-"\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
+"              See also --cert-type and --key and --key-type.\n"
+"\n"
 "       --ciphers <list of ciphers>\n"
-"              (SSL) Specifies which ciphers to use in the connection. The list\n"
+"              (TLS) Specifies which ciphers to use in the connection. The list\n"
+"              of  ciphers  must  specify  valid ciphers. Read up on SSL cipher\n"
+"              list details on this URL:\n"
+"\n"
+"               https://www.openssl.org/docs/apps/ciphers.html\n"
+"\n"
 , stdout);
  fputs(
-"              of ciphers must specify valid ciphers. Read  up  on  SSL  cipher\n"
-"              list           details           on           this          URL:\n"
-"              https://www.openssl.org/docs/apps/ciphers.html\n"
-"\n"
 "              NSS ciphers are done differently than OpenSSL  and  GnuTLS.  The\n"
 "              full  list of NSS ciphers is in the NSSCipherSuite entry at this\n"
-"              URL:                                         https://git.fedora-\n"
-, stdout);
- fputs(
+"              URL:\n"
+"\n"
+"               https://git.fedora-\n"
 "              hosted.org/cgit/mod_nss.git/plain/docs/mod_nss.html#Directives\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --compressed\n"
 "              (HTTP) Request a compressed response using one of the algorithms\n"
+, stdout);
+ fputs(
 "              curl supports, and save  the  uncompressed  document.   If  this\n"
 "              option  is  used  and  the server sends an unsupported encoding,\n"
 "              curl will report an error.\n"
 "\n"
-"       --connect-timeout <seconds>\n"
+"       -K, --config <file>\n"
+"              Specify which config file to read curl arguments from. The  con-\n"
+"              fig  file  is a text file in which command line arguments can be\n"
+"              written which then will be used as if they were written  on  the\n"
+"              actual command line.\n"
+"\n"
 , stdout);
  fputs(
-"              Maximum time in seconds that  you  allow  curl's  connection  to\n"
-"              take.   This  only  limits the connection phase, so if curl con-\n"
-"              nects within the given period it will continue - if not it  will\n"
-"              exit.  Since version 7.32.0, this option accepts decimal values.\n"
-"\n"
-"              See also the -m, --max-time option.\n"
-"\n"
-"              If this option is used several times, the last one will be used.\n"
-"\n"
-"       --create-dirs\n"
+"              Options  and their parameters must be specified on the same con-\n"
+"              fig file line, separated by whitespace,  colon,  or  the  equals\n"
+"              sign.  Long  option  names can optionally be given in the config\n"
+"              file without the initial double dashes and if so, the  colon  or\n"
+"              equals  characters  can  be used as separators. If the option is\n"
+"              specified with one or two dashes,  there  can  be  no  colon  or\n"
 , stdout);
  fputs(
-"              When  used  in  conjunction with the -o option, curl will create\n"
-"              the necessary local directory hierarchy as needed.  This  option\n"
-"              creates  the dirs mentioned with the -o option, nothing else. If\n"
-"              the -o file name uses no dir or if the dirs it mentions  already\n"
-"              exist, no dir will be created.\n"
-"\n"
-"              To  create remote directories when using FTP or SFTP, try --ftp-\n"
-"              create-dirs.\n"
+"              equals character between the option and its parameter.\n"
 "\n"
+"              If the parameter is to contain whitespace, the parameter must be\n"
+"              enclosed within quotes.  Within  double  quotes,  the  following\n"
+"              escape  sequences  are  available:  \\\\, \\\", \\t, \\n, \\r and \\v. A\n"
+"              backslash preceding any other letter is ignored.  If  the  first\n"
+"              column of a config line is a '#' character, the rest of the line\n"
 , stdout);
  fputs(
-"       --crlf Convert LF to CRLF in upload. Useful for MVS (OS/390).\n"
-"\n"
-"              (SMTP added in 7.40.0)\n"
+"              will be treated as a comment. Only write one option per physical\n"
+"              line in the config file.\n"
 "\n"
-"       --crlfile <file>\n"
-"              (HTTPS/FTPS) Provide a file using PEM format with a  Certificate\n"
-"              Revocation  List  that may specify peer certificates that are to\n"
-"              be considered revoked.\n"
+"              Specify  the  filename  to -K, --config as '-' to make curl read\n"
+"              the file from stdin.\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
+"              Note that to be able to specify a URL in the  config  file,  you\n"
+"              need  to  specify  it  using the --url option, and not by simply\n"
+"              writing the URL on its own line. So, it could  look  similar  to\n"
+"              this:\n"
 "\n"
-"              (Added in 7.19.7)\n"
-"       -d, --data <data>\n"
 , stdout);
  fputs(
-"              (HTTP) Sends the specified data in a POST request  to  the  HTTP\n"
-"              server,  in  the  same  way  that a browser does when a user has\n"
-"              filled in an HTML form and presses the submit button. This  will\n"
-"              cause curl to pass the data to the server using the content-type\n"
-"              application/x-www-form-urlencoded.  Compare to -F, --form.\n"
+"              url = \"https://curl.haxx.se/docs/\"\n"
 "\n"
-"              -d, --data is the same as --data-ascii. --data-raw is almost the\n"
-, stdout);
- fputs(
-"              same but does not have a special interpretation of the @ charac-\n"
-"              ter. To post data purely binary,  you  should  instead  use  the\n"
-"              --data-binary  option.   To URL-encode the value of a form field\n"
-"              you may use --data-urlencode.\n"
+"              When  curl  is invoked, it always (unless -q, --disable is used)\n"
+"              checks for a default config file  and  uses  it  if  found.  The\n"
+"              default  config  file  is checked for in the following places in\n"
+"              this order:\n"
 "\n"
-"              If any of these options is used more than once on the same  com-\n"
-"              mand  line,  the  data  pieces specified will be merged together\n"
+"              1) curl tries to find the \"home dir\": It first  checks  for  the\n"
+"              CURL_HOME and then the HOME environment variables. Failing that,\n"
 , stdout);
  fputs(
-"              with a separating  &-symbol.  Thus,  using  '-d  name=daniel  -d\n"
-"              skill=lousy'  would  generate  a  post  chunk  that  looks  like\n"
-"              'name=daniel&skill=lousy'.\n"
+"              it uses getpwuid() on Unix-like systems (which returns the  home\n"
+"              dir  given the current user in your system). On Windows, it then\n"
+"              checks for the APPDATA variable, or as a last resort the '%USER-\n"
+"              PROFILE%\\Application Data'.\n"
 "\n"
-"              If you start the data with the letter @, the rest  should  be  a\n"
-"              file  name  to read the data from, or - if you want curl to read\n"
-"              the data from stdin. Multiple files can also be specified. Post-\n"
+"              2)  On  windows, if there is no _curlrc file in the home dir, it\n"
+"              checks for one in the same dir the curl executable is placed. On\n"
 , stdout);
  fputs(
-"              ing  data  from  a  file  named 'foobar' would thus be done with\n"
-"              --data @foobar. When --data is told to read  from  a  file  like\n"
-"              that, carriage returns and newlines will be stripped out. If you\n"
-"              don't want the @ character to have a special interpretation  use\n"
-"              --data-raw instead.\n"
+"              Unix-like  systems,  it will simply try to load .curlrc from the\n"
+"              determined home dir.\n"
 "\n"
-"       -D, --dump-header <file>\n"
-"              Write the protocol headers to the specified file.\n"
+"              # --- Example file ---\n"
+"              # this is a comment\n"
+"              url = \"example.com\"\n"
+"              output = \"curlhere.html\"\n"
+"              user-agent = \"superagent/1.0\"\n"
 "\n"
+"              # and fetch another URL too\n"
+"              url = \"example.com/docs/manpage.html\"\n"
+"              -O\n"
+"              referer = \"http://nowhereatall.example.com/\"\n"
 , stdout);
  fputs(
-"              This  option  is handy to use when you want to store the headers\n"
-"              that an HTTP site sends to you. Cookies from the  headers  could\n"
-"              then  be  read  in  a  second  curl  invocation by using the -b,\n"
-"              --cookie option! The -c, --cookie-jar option is a better way  to\n"
-"              store cookies.\n"
+"              # --- End of example file ---\n"
 "\n"
-"              When  used  in FTP, the FTP server response lines are considered\n"
-"              being \"headers\" and thus are saved there.\n"
+"              This option can be used multiple times to load  multiple  config\n"
+"              files.\n"
 "\n"
+"       --connect-timeout <seconds>\n"
+"              Maximum  time  in  seconds  that  you allow curl's connection to\n"
+"              take.  This only limits the connection phase, so  if  curl  con-\n"
+"              nects  within the given period it will continue - if not it will\n"
+"              exit.  Since version 7.32.0, this option accepts decimal values.\n"
 , stdout);
  fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --data-ascii <data>\n"
-"              See -d, --data.\n"
+"              See also -m, --max-time.\n"
 "\n"
-"       --data-binary <data>\n"
-"              (HTTP) This posts data exactly as specified with no  extra  pro-\n"
-"              cessing whatsoever.\n"
+"       --connect-to <HOST1:PORT1:HOST2:PORT2>\n"
 "\n"
-"              If  you  start  the data with the letter @, the rest should be a\n"
-"              filename.  Data is posted in a similar  manner  as  --data-ascii\n"
+"              For a request to the given HOST:PORT pair, connect  to  CONNECT-\n"
+"              TO-HOST:CONNECT-TO-PORT  instead.   This  option  is suitable to\n"
+"              direct requests at a specific server, e.g. at a specific cluster\n"
+"              node  in  a  cluster  of  servers.   This option is only used to\n"
 , stdout);
  fputs(
-"              does,  except  that  newlines and carriage returns are preserved\n"
-"              and conversions are never done.\n"
+"              establish the network connection. It does NOT affect  the  host-\n"
+"              name/port  that is used for TLS/SSL (e.g. SNI, certificate veri-\n"
+"              fication) or for the application protocols.  \"host\"  and  \"port\"\n"
+"              may  be the empty string, meaning \"any host/port\".  \"connect-to-\n"
+"              host\" and \"connect-to-port\" may also be the empty string,  mean-\n"
+"              ing \"use the request's original host/port\".\n"
 "\n"
-"              If this option is used several times,  the  ones  following  the\n"
-"              first will append data as described in -d, --data.\n"
+, stdout);
+ fputs(
+"              This option can be used many times to add many connect rules.\n"
+"\n"
+"              See also --resolve and -H, --header. Added in 7.49.0.\n"
+"\n"
+"       -C, --continue-at <offset>\n"
+"              Continue/Resume  a  previous  file transfer at the given offset.\n"
+"              The given offset is the exact  number  of  bytes  that  will  be\n"
+"              skipped,  counting  from the beginning of the source file before\n"
+"              it is transferred to the destination.  If used with uploads, the\n"
+, stdout);
+ fputs(
+"              FTP server command SIZE will not be used by curl.\n"
+"\n"
+"              Use  \"-C  -\" to tell curl to automatically find out where/how to\n"
+"              resume the transfer. It then uses the given  output/input  files\n"
+"              to figure that out.\n"
+"\n"
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"              See also -r, --range.\n"
+"\n"
+"       -c, --cookie-jar <filename>\n"
+"              (HTTP)  Specify to which file you want curl to write all cookies\n"
+, stdout);
+ fputs(
+"              after a completed operation. Curl writes all  cookies  from  its\n"
+"              in-memory  cookie storage to the given file at the end of opera-\n"
+"              tions. If no cookies are known, no data  will  be  written.  The\n"
+"              file  will  be written using the Netscape cookie file format. If\n"
+"              you set the file name to a single dash, \"-\", the cookies will be\n"
+"              written to stdout.\n"
+"\n"
+, stdout);
+ fputs(
+"              This  command  line  option will activate the cookie engine that\n"
+"              makes curl record and use cookies. Another way to activate it is\n"
+"              to use the -b, --cookie option.\n"
+"\n"
+"              If the cookie jar can't be created or written to, the whole curl\n"
+"              operation won't fail or even report an error clearly. Using  -v,\n"
+"              --verbose  will  get  a  warning displayed, but that is the only\n"
+, stdout);
+ fputs(
+"              visible feedback you get about this possibly lethal situation.\n"
+"\n"
+"              If this option is used several times, the  last  specified  file\n"
+"              name will be used.\n"
+"\n"
+"       -b, --cookie <data>\n"
+"              (HTTP) Pass the data to the HTTP server in the Cookie header. It\n"
+"              is supposedly the data previously received from the server in  a\n"
+"              \"Set-Cookie:\"   line.    The   data  should  be  in  the  format\n"
+"              \"NAME1=VALUE1; NAME2=VALUE2\".\n"
+"\n"
+, stdout);
+ fputs(
+"              If no '=' symbol is used in the argument, it is instead  treated\n"
+"              as a filename to read previously stored cookie from. This option\n"
+"              also activates the cookie engine which  will  make  curl  record\n"
+"              incoming  cookies,  which  may  be handy if you're using this in\n"
+"              combination with the -L, --location option or  do  multiple  URL\n"
+"              transfers on the same invoke.\n"
+"\n"
+, stdout);
+ fputs(
+"              The file format of the file to read cookies from should be plain\n"
+"              HTTP headers (Set-Cookie style) or the  Netscape/Mozilla  cookie\n"
+"              file format.\n"
+"\n"
+"              The  file  specified with -b, --cookie is only used as input. No\n"
+"              cookies will be written to the file. To store cookies,  use  the\n"
+"              -c, --cookie-jar option.\n"
+"\n"
+"              Exercise  caution  if  you  are  using  this option and multiple\n"
+, stdout);
+ fputs(
+"              transfers may occur.  If you use the NAME1=VALUE1; format, or in\n"
+"              a  file  use  the  Set-Cookie format and don't specify a domain,\n"
+"              then the cookie is sent for any domain (even after redirects are\n"
+"              followed)  and cannot be modified by a server-set cookie. If the\n"
+"              cookie engine is enabled and a server sets a cookie of the  same\n"
+"              name then both will be sent on a future transfer to that server,\n"
+, stdout);
+ fputs(
+"              likely not what you intended.  To address  these  issues  set  a\n"
+"              domain  in  Set-Cookie  (doing that will include sub domains) or\n"
+"              use the Netscape format.\n"
+"\n"
+"              If this option is used several times, the last one will be used.\n"
+"              Users very often want to both read cookies from a file and write\n"
+"              updated  cookies  back to a file, so using both -b, --cookie and\n"
+, stdout);
+ fputs(
+"              -c, --cookie-jar in the same command line is common.\n"
+"\n"
+"       --create-dirs\n"
+"              When used in conjunction with the -o, --output option, curl will\n"
+"              create  the  necessary local directory hierarchy as needed. This\n"
+"              option creates the dirs mentioned with the -o, --output  option,\n"
+"              nothing  else.  If  the --output file name uses no dir or if the\n"
+"              dirs it mentions already exist, no dir will be created.\n"
+"\n"
+, stdout);
+ fputs(
+"              To create remote directories when using FTP or SFTP, try  --ftp-\n"
+"              create-dirs.\n"
+"\n"
+"       --crlf (FTP  SMTP)  Convert  LF  to  CRLF  in  upload.  Useful  for MVS\n"
+"              (OS/390).\n"
+"\n"
+"              (SMTP added in 7.40.0)\n"
+"\n"
+"       --crlfile <file>\n"
+"              (TLS) Provide a file using PEM format with a Certificate Revoca-\n"
+"              tion List that may specify peer certificates that are to be con-\n"
+"              sidered revoked.\n"
+"\n"
+, stdout);
+ fputs(
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"              Added in 7.19.7.\n"
+"\n"
+"       --data-ascii <data>\n"
+"              (HTTP) This is just an alias for -d, --data.\n"
+"\n"
+"       --data-binary <data>\n"
+"              (HTTP) This posts data exactly as specified with no  extra  pro-\n"
+"              cessing whatsoever.\n"
+"\n"
+"              If  you  start  the data with the letter @, the rest should be a\n"
+"              filename.  Data is posted in a  similar  manner  as  -d,  --data\n"
+, stdout);
+ fputs(
+"              does,  except  that  newlines and carriage returns are preserved\n"
+"              and conversions are never done.\n"
+"\n"
+"              If this option is used several times,  the  ones  following  the\n"
+"              first will append data as described in -d, --data.\n"
 "\n"
 "       --data-raw <data>\n"
-"              (HTTP)  This posts data similarly to --data but without the spe-\n"
-"              cial interpretation of the @ character. See -d, --data.   (Added\n"
-"              in 7.43.0)\n"
+"              (HTTP)  This  posts data similarly to -d, --data but without the\n"
+"              special interpretation of the @ character.\n"
+"\n"
+"              See also -d, --data. Added in 7.43.0.\n"
 "\n"
 , stdout);
  fputs(
 "       --data-urlencode <data>\n"
-"              (HTTP) This posts data, similar to the other --data options with\n"
-"              the exception that this performs URL-encoding. (Added in 7.18.0)\n"
-"              To be CGI-compliant, the <data> part should begin  with  a  name\n"
-"              followed  by a separator and a content specification. The <data>\n"
+"              (HTTP) This posts data, similar to the other -d, --data  options\n"
+"              with the exception that this performs URL-encoding.\n"
+"\n"
+"              To  be  CGI-compliant,  the <data> part should begin with a name\n"
+"              followed by a separator and a content specification. The  <data>\n"
 "              part can be passed to curl using one of the following syntaxes:\n"
 "\n"
 "              content\n"
 , stdout);
  fputs(
-"                     This will make curl URL-encode the content and pass  that\n"
-"                     on.  Just  be careful so that the content doesn't contain\n"
-"                     any = or @ symbols, as that will  then  make  the  syntax\n"
+"                     This  will make curl URL-encode the content and pass that\n"
+"                     on. Just be careful so that the content  doesn't  contain\n"
+"                     any  =  or  @  symbols, as that will then make the syntax\n"
 "                     match one of the other cases below!\n"
 "\n"
 "              =content\n"
-"                     This  will make curl URL-encode the content and pass that\n"
+"                     This will make curl URL-encode the content and pass  that\n"
 "                     on. The preceding = symbol is not included in the data.\n"
 "\n"
 , stdout);
  fputs(
 "              name=content\n"
-"                     This will make curl URL-encode the content part and  pass\n"
-"                     that  on.  Note that the name part is expected to be URL-\n"
+"                     This  will make curl URL-encode the content part and pass\n"
+"                     that on. Note that the name part is expected to  be  URL-\n"
 "                     encoded already.\n"
 "\n"
 "              @filename\n"
-"                     This will  make  curl  load  data  from  the  given  file\n"
-"                     (including  any  newlines), URL-encode that data and pass\n"
+"                     This  will  make  curl  load  data  from  the  given file\n"
+"                     (including any newlines), URL-encode that data  and  pass\n"
 "                     it on in the POST.\n"
 "\n"
 "              name@filename\n"
 , stdout);
  fputs(
-"                     This will  make  curl  load  data  from  the  given  file\n"
-"                     (including  any  newlines), URL-encode that data and pass\n"
-"                     it on in the POST. The  name  part  gets  an  equal  sign\n"
+"                     This  will  make  curl  load  data  from  the  given file\n"
+"                     (including any newlines), URL-encode that data  and  pass\n"
+"                     it  on  in  the  POST.  The  name part gets an equal sign\n"
 "                     appended, resulting in name=urlencoded-file-content. Note\n"
 "                     that the name is expected to be URL-encoded already.\n"
+"       See also -d, --data and --data-raw. Added in 7.18.0.\n"
+"\n"
+"       -d, --data <data>\n"
+, stdout);
+ fputs(
+"              (HTTP)  Sends  the  specified data in a POST request to the HTTP\n"
+"              server, in the same way that a browser  does  when  a  user  has\n"
+"              filled  in an HTML form and presses the submit button. This will\n"
+"              cause curl to pass the data to the server using the content-type\n"
+"              application/x-www-form-urlencoded.  Compare to -F, --form.\n"
+"\n"
+"              --data-raw is almost the same but does not have a special inter-\n"
+, stdout);
+ fputs(
+"              pretation of the @ character. To post data  purely  binary,  you\n"
+"              should  instead use the --data-binary option.  To URL-encode the\n"
+"              value of a form field you may use --data-urlencode.\n"
+"\n"
+"              If any of these options is used more than once on the same  com-\n"
+"              mand  line,  the  data  pieces specified will be merged together\n"
+"              with a separating  &-symbol.  Thus,  using  '-d  name=daniel  -d\n"
+, stdout);
+ fputs(
+"              skill=lousy'  would  generate  a  post  chunk  that  looks  like\n"
+"              'name=daniel&skill=lousy'.\n"
+"\n"
+"              If you start the data with the letter @, the rest  should  be  a\n"
+"              file  name  to read the data from, or - if you want curl to read\n"
+"              the data from stdin. Multiple files can also be specified. Post-\n"
+"              ing  data  from  a  file  named  from a file like that, carriage\n"
+, stdout);
+ fputs(
+"              returns and newlines will be stripped out. If you don't want the\n"
+"              @  character  to  have  a  special interpretation use --data-raw\n"
+"              instead.\n"
+"\n"
+"              See also --data-binary and --data-urlencode and --data-raw. This\n"
+"              option overrides -F, --form and -I, --head and --upload.\n"
 "\n"
-"       --delegation LEVEL\n"
-"              Set LEVEL to tell the server what it is allowed to delegate when\n"
+"       --delegation <LEVEL>\n"
+"              (GSS/kerberos)  Set  LEVEL to tell the server what it is allowed\n"
 , stdout);
  fputs(
-"              it comes to user credentials. Used with GSS/kerberos.\n"
+"              to delegate when it comes to user credentials.\n"
 "\n"
 "              none   Don't allow any delegation.\n"
 "\n"
-"              policy Delegates  if  and only if the OK-AS-DELEGATE flag is set\n"
-"                     in the Kerberos service ticket,  which  is  a  matter  of\n"
+"              policy Delegates if and only if the OK-AS-DELEGATE flag  is  set\n"
+"                     in  the  Kerberos  service  ticket,  which is a matter of\n"
 "                     realm policy.\n"
 "\n"
 "              always Unconditionally allow the server to delegate.\n"
 "\n"
 "       --digest\n"
-"              (HTTP)  Enables HTTP Digest authentication. This is an authenti-\n"
+"              (HTTP) Enables HTTP Digest authentication. This is an  authenti-\n"
 , stdout);
  fputs(
-"              cation scheme that prevents the password from  being  sent  over\n"
-"              the  wire in clear text. Use this in combination with the normal\n"
-"              -u, --user option to  set  user  name  and  password.  See  also\n"
-"              --ntlm, --negotiate and --anyauth for related options.\n"
+"              cation  scheme  that  prevents the password from being sent over\n"
+"              the wire in clear text. Use this in combination with the  normal\n"
+"              -u, --user option to set user name and password.\n"
 "\n"
 "              If  this  option  is  used  several times, only the first one is\n"
 "              used.\n"
 "\n"
+"              See also -u,  --user  and  --proxy-digest  and  --anyauth.  This\n"
+"              option overrides --basic and --ntlm and --negotiate.\n"
+"\n"
 "       --disable-eprt\n"
 , stdout);
  fputs(
 "              (FTP) Tell curl to disable the use of the EPRT and LPRT commands\n"
 "              when doing active FTP transfers. Curl will normally always first\n"
-"              attempt to use EPRT, then LPRT before using PORT, but with  this\n"
-"              option,  it  will  use PORT right away. EPRT and LPRT are exten-\n"
-"              sions to the original FTP protocol, and  may  not  work  on  all\n"
+"              attempt  to use EPRT, then LPRT before using PORT, but with this\n"
+"              option, it will use PORT right away. EPRT and  LPRT  are  exten-\n"
+"              sions  to  the  original  FTP  protocol, and may not work on all\n"
 "              servers, but they enable more functionality in a better way than\n"
 , stdout);
  fputs(
 "              the traditional PORT command.\n"
 "\n"
 "              --eprt can be used to explicitly enable EPRT again and --no-eprt\n"
 "              is an alias for --disable-eprt.\n"
 "\n"
-"              If  the  server is an IPv6 host, this option will have no effect\n"
-"              as EPRT is necessary then.\n"
+"              If the server is accessed using IPv6, this option will  have  no\n"
+"              effect as EPRT is necessary then.\n"
 "\n"
-"              Disabling EPRT only changes the active behavior. If you want  to\n"
-"              switch  to  passive  mode  you need to not use -P, --ftp-port or\n"
+"              Disabling  EPRT only changes the active behavior. If you want to\n"
+"              switch to passive mode you need to not  use  -P,  --ftp-port  or\n"
 "              force it with --ftp-pasv.\n"
 "\n"
 , stdout);
  fputs(
 "       --disable-epsv\n"
-"              (FTP) Tell curl to disable the use  of  the  EPSV  command  when\n"
-"              doing  passive  FTP  transfers.  Curl will normally always first\n"
-"              attempt to use EPSV before PASV, but with this option,  it  will\n"
-"              not try using EPSV.\n"
+"              (FTP)  (FTP)  Tell  curl  to disable the use of the EPSV command\n"
+"              when doing passive FTP  transfers.  Curl  will  normally  always\n"
+"              first  attempt to use EPSV before PASV, but with this option, it\n"
+"              will not try using EPSV.\n"
 "\n"
 "              --epsv can be used to explicitly enable EPSV again and --no-epsv\n"
 "              is an alias for --disable-epsv.\n"
 "\n"
-"              If the server is an IPv6 host, this option will have  no  effect\n"
 , stdout);
  fputs(
+"              If  the  server is an IPv6 host, this option will have no effect\n"
 "              as EPSV is necessary then.\n"
 "\n"
 "              Disabling EPSV only changes the passive behavior. If you want to\n"
 "              switch to active mode you need to use -P, --ftp-port.\n"
 "\n"
+"       -q, --disable\n"
+"              If  used  as the first parameter on the command line, the curlrc\n"
+"              config file will not be read and used. See the -K, --config  for\n"
+, stdout);
+ fputs(
+"              details on the default config file search path.\n"
+"\n"
 "       --dns-interface <interface>\n"
-"              Tell curl to send outgoing  DNS  requests  through  <interface>.\n"
-"              This  option  is  a  counterpart  to --interface (which does not\n"
-"              affect DNS). The supplied string must be an interface name  (not\n"
-"              an address).\n"
+"              (DNS)  Tell  curl  to send outgoing DNS requests through <inter-\n"
+"              face>. This option is a counterpart to --interface  (which  does\n"
+"              not  affect  DNS). The supplied string must be an interface name\n"
+"              (not an address).\n"
 "\n"
+"              See also --dns-ipv4-addr  and  --dns-ipv6-addr.  --dns-interface\n"
 , stdout);
  fputs(
-"              This  option  requires  that  libcurl  was built with a resolver\n"
-"              backend that supports this operation. The c-ares backend is  the\n"
-"              only such one. (Added in 7.33.0)\n"
+"              requires  that  the  underlying  libcurl was built to support c-\n"
+"              ares. Added in 7.33.0.\n"
 "\n"
-"       --dns-ipv4-addr <ip-address>\n"
-"              Tell curl to bind to <ip-address> when making IPv4 DNS requests,\n"
-"              so that the DNS requests originate from this address. The  argu-\n"
-"              ment should be a single IPv4 address.\n"
+"       --dns-ipv4-addr <address>\n"
+"              (DNS) Tell curl to bind to <ip-address>  when  making  IPv4  DNS\n"
+"              requests,  so that the DNS requests originate from this address.\n"
+"              The argument should be a single IPv4 address.\n"
 "\n"
+"              See also --dns-interface  and  --dns-ipv6-addr.  --dns-ipv4-addr\n"
 , stdout);
  fputs(
-"              This  option  requires  that  libcurl  was built with a resolver\n"
-"              backend that supports this operation. The c-ares backend is  the\n"
-"              only such one.  (Added in 7.33.0)\n"
+"              requires  that  the  underlying  libcurl was built to support c-\n"
+"              ares. Added in 7.33.0.\n"
 "\n"
-"       --dns-ipv6-addr <ip-address>\n"
-"              Tell curl to bind to <ip-address> when making IPv6 DNS requests,\n"
-"              so that the DNS requests originate from this address. The  argu-\n"
-"              ment should be a single IPv6 address.\n"
+"       --dns-ipv6-addr <address>\n"
+"              (DNS) Tell curl to bind to <ip-address>  when  making  IPv6  DNS\n"
+"              requests,  so that the DNS requests originate from this address.\n"
+"              The argument should be a single IPv6 address.\n"
 "\n"
+"              See also --dns-interface  and  --dns-ipv4-addr.  --dns-ipv6-addr\n"
 , stdout);
  fputs(
-"              This  option  requires  that  libcurl  was built with a resolver\n"
-"              backend that supports this operation. The c-ares backend is  the\n"
-"              only such one.  (Added in 7.33.0)\n"
+"              requires  that  the  underlying  libcurl was built to support c-\n"
+"              ares. Added in 7.33.0.\n"
 "\n"
-"       --dns-servers <ip-address,ip-address>\n"
-"              Set  the  list  of  DNS servers to be used instead of the system\n"
+"       --dns-servers <addresses>\n"
+"              Set the list of DNS servers to be used  instead  of  the  system\n"
 "              default.  The list of IP addresses should be separated with com-\n"
 "              mas. Port numbers may also optionally be given as :<port-number>\n"
-, stdout);
- fputs(
 "              after each IP address.\n"
 "\n"
-"              This option requires that libcurl  was  built  with  a  resolver\n"
-"              backend  that supports this operation. The c-ares backend is the\n"
-"              only such one.  (Added in 7.33.0)\n"
-"\n"
-"       -e, --referer <URL>\n"
-"              (HTTP) Sends the \"Referrer Page\" information to the HTTP server.\n"
-"              This can also be set with the -H, --header flag of course.  When\n"
 , stdout);
  fputs(
-"              used with -L, --location you can append \";auto\" to the --referer\n"
-"              URL to make curl automatically set the previous URL when it fol-\n"
-"              lows a Location: header. The \";auto\" string can be  used  alone,\n"
-"              even if you don't set an initial --referer.\n"
+"              --dns-servers  requires that the underlying libcurl was built to\n"
+"              support c-ares. Added in 7.33.0.\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
+"       -D, --dump-header <filename>\n"
+"              (HTTP FTP) Write the received protocol headers to the  specified\n"
+"              file.\n"
 "\n"
-"       -E, --cert <certificate[:password]>\n"
-"              (SSL)  Tells  curl  to use the specified client certificate file\n"
-, stdout);
- fputs(
-"              when getting a file with HTTPS, FTPS or another SSL-based proto-\n"
-"              col.  The  certificate must be in PKCS#12 format if using Secure\n"
-"              Transport, or PEM format if using  any  other  engine.   If  the\n"
-"              optional password isn't specified, it will be queried for on the\n"
-"              terminal. Note that this option  assumes  a  \"certificate\"  file\n"
-"              that is the private key and the client certificate concatenated!\n"
+"              This  option  is handy to use when you want to store the headers\n"
+"              that an HTTP site sends to you. Cookies from the  headers  could\n"
+"              then  be  read  in  a  second  curl  invocation by using the -b,\n"
 , stdout);
  fputs(
-"              See --cert and --key to specify them independently.\n"
+"              --cookie option! The -c, --cookie-jar option is a better way  to\n"
+"              store cookies.\n"
 "\n"
-"              If curl is built against the NSS SSL library  then  this  option\n"
-"              can  tell curl the nickname of the certificate to use within the\n"
-"              NSS database defined by the environment variable SSL_DIR (or  by\n"
-"              default  /etc/pki/nssdb).  If  the  NSS PEM PKCS#11 module (lib-\n"
-"              nsspem.so) is available then PEM files may  be  loaded.  If  you\n"
-, stdout);
- fputs(
-"              want to use a file from the current directory, please precede it\n"
-"              with \"./\" prefix, in order to avoid confusion with  a  nickname.\n"
-"              If  the nickname contains \":\", it needs to be preceded by \"\\\" so\n"
-"              that it is not recognized as password delimiter.  If  the  nick-\n"
-"              name  contains \"\\\", it needs to be escaped as \"\\\\\" so that it is\n"
-"              not recognized as an escape character.\n"
+"              When  used  in FTP, the FTP server response lines are considered\n"
+"              being \"headers\" and thus are saved there.\n"
 "\n"
-, stdout);
- fputs(
-"              (iOS and macOS only) If curl is built against Secure  Transport,\n"
-"              then the certificate string can either be the name of a certifi-\n"
-"              cate/private key in the system or user keychain, or the path  to\n"
-"              a  PKCS#12-encoded  certificate  and private key. If you want to\n"
-"              use a file from the current directory, please  precede  it  with\n"
-"              \"./\" prefix, in order to avoid confusion with a nickname.\n"
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"              See also -o, --output.\n"
 "\n"
+"       --egd-file <file>\n"
+"              (TLS) Specify the path name  to  the  Entropy  Gathering  Daemon\n"
 , stdout);
  fputs(
-"              If this option is used several times, the last one will be used.\n"
+"              socket.  The  socket  is  used to seed the random engine for SSL\n"
+"              connections.\n"
+"\n"
+"              See also --random-file.\n"
 "\n"
 "       --engine <name>\n"
-"              Select  the  OpenSSL crypto engine to use for cipher operations.\n"
-"              Use --engine list  to  print  a  list  of  build-time  supported\n"
-"              engines.  Note  that  not  all  (or  none) of the engines may be\n"
+"              (TLS) Select the OpenSSL crypto engine to use for cipher  opera-\n"
+"              tions. Use --engine list to print a list of build-time supported\n"
+"              engines. Note that not all (or  none)  of  the  engines  may  be\n"
 "              available at run-time.\n"
 "\n"
 "       --environment\n"
-"              (RISC OS ONLY) Sets a range of environment variables, using  the\n"
 , stdout);
  fputs(
-"              names the -w option supports, to allow easier extraction of use-\n"
+"              Sets  a  range of environment variables, using the names the -w,\n"
+"              --write-out option supports, to allow easier extraction of  use-\n"
 "              ful information after having run curl.\n"
 "\n"
-"       --egd-file <file>\n"
-"              (SSL) Specify the path name  to  the  Entropy  Gathering  Daemon\n"
-"              socket.  The  socket  is  used to seed the random engine for SSL\n"
-"              connections. See also the --random-file option.\n"
+"              --environment  requires that the underlying libcurl was built to\n"
+"              support RISC OS.\n"
 "\n"
 "       --expect100-timeout <seconds>\n"
 "              (HTTP) Maximum time in seconds that you allow curl to wait for a\n"
 , stdout);
  fputs(
 "              100-continue  response  when curl emits an Expects: 100-continue\n"
 "              header in its request. By default curl  will  wait  one  second.\n"
 "              This  option accepts decimal values! When curl stops waiting, it\n"
 "              will continue as if the response has been received.\n"
 "\n"
-"              (Added in 7.47.0)\n"
+"              See also --connect-timeout. Added in 7.47.0.\n"
 "\n"
-"       --cert-type <type>\n"
-"              (SSL) Tells curl what certificate type the provided  certificate\n"
-, stdout);
- fputs(
-"              is in. PEM, DER and ENG are recognized types.  If not specified,\n"
-"              PEM is assumed.\n"
-"\n"
-"              If this option is used several times, the last one will be used.\n"
+"       --fail-early\n"
+"              Fail and exit on first detected error.\n"
 "\n"
-"       --cacert <CA certificate>\n"
-"              (SSL) Tells curl to use the specified certificate file to verify\n"
-"              the  peer.  The  file  may contain multiple CA certificates. The\n"
-"              certificate(s) must be in PEM format. Normally curl is built  to\n"
 , stdout);
  fputs(
-"              use a default file for this, so this option is typically used to\n"
-"              alter that default file.\n"
-"\n"
-"              curl recognizes the environment variable named  'CURL_CA_BUNDLE'\n"
-"              if  it  is  set,  and uses the given path as a path to a CA cert\n"
-"              bundle. This option overrides that variable.\n"
+"              When curl is used to do multiple transfers on the command  line,\n"
+"              it  will  attempt  to  operate on each given URL, one by one. By\n"
+"              default, it will ignore errors if there are more URLs given  and\n"
+"              the  last  URL's  success  will  determine  the  error code curl\n"
+"              returns. So early failures will be \"hidden\" by  subsequent  suc-\n"
+"              cessful transfers.\n"
 "\n"
-"              The windows version of curl will automatically  look  for  a  CA\n"
-"              certs file named 'curl-ca-bundle.crt', either in the same direc-\n"
 , stdout);
  fputs(
-"              tory as curl.exe, or in the Current Working Directory, or in any\n"
-"              folder along your PATH.\n"
+"              Using  this  option,  curl  will  instead return an error on the\n"
+"              first transfers that fails, independent on the  amount  of  more\n"
+"              URLs  that  are given on the command line. This way, no transfer\n"
+"              failures go undetected by scripts and similar.\n"
 "\n"
-"              If  curl  is  built  against  the  NSS  SSL library, the NSS PEM\n"
-"              PKCS#11 module (libnsspem.so) needs to  be  available  for  this\n"
-"              option to work properly.\n"
+"              This option will apply for all given URLs even if  you  use  -:,\n"
+"              --next.\n"
 "\n"
-"              (iOS  and macOS only) If curl is built against Secure Transport,\n"
-"              then this option is supported for  backward  compatibility  with\n"
+"              Added in 7.52.0.\n"
+"\n"
+"       -f, --fail\n"
 , stdout);
  fputs(
-"              other  SSL  engines,  but it should not be set. If the option is\n"
-"              not set, then curl will use the certificates in the  system  and\n"
-"              user  Keychain to verify the peer, which is the preferred method\n"
-"              of verifying the peer's certificate chain.\n"
-"\n"
-"              If this option is used several times, the last one will be used.\n"
+"              (HTTP)  Fail  silently (no output at all) on server errors. This\n"
+"              is mostly done to better enable scripts etc to better deal  with\n"
+"              failed  attempts.  In  normal cases when an HTTP server fails to\n"
+"              deliver a document, it  returns  an  HTML  document  stating  so\n"
+"              (which  often  also describes why and more). This flag will pre-\n"
+"              vent curl from outputting that and return error 22.\n"
 "\n"
-"       --capath <CA certificate directory>\n"
-"              (SSL) Tells curl to use the specified certificate  directory  to\n"
 , stdout);
  fputs(
-"              verify  the  peer.  Multiple paths can be provided by separating\n"
-"              them with \":\" (e.g.  \"path1:path2:path3\"). The certificates must\n"
-"              be  in  PEM  format,  and  if curl is built against OpenSSL, the\n"
-"              directory must have been processed using  the  c_rehash  utility\n"
-"              supplied  with OpenSSL. Using --capath can allow OpenSSL-powered\n"
-"              curl to make SSL-connections much more  efficiently  than  using\n"
+"              This method is not fail-safe and there are occasions where  non-\n"
+"              successful  response  codes  will  slip through, especially when\n"
+"              authentication is involved (response codes 401 and 407).\n"
+"\n"
+"       --false-start\n"
+"              (TLS) Tells curl to use false start during  the  TLS  handshake.\n"
+"              False  start  is  a  mode  where a TLS client will start sending\n"
+"              application data before verifying the server's Finished message,\n"
 , stdout);
  fputs(
-"              --cacert if the --cacert file contains many CA certificates.\n"
+"              thus saving a round trip when performing a full handshake.\n"
 "\n"
-"              If this option is set, the default capath value will be ignored,\n"
-"              and if it is used several times, the last one will be used.\n"
+"              This  is currently only implemented in the NSS and Secure Trans-\n"
+"              port (on iOS 7.0 or later, or OS X 10.9 or later) backends.\n"
+"\n"
+"              Added in 7.42.0.\n"
 "\n"
-"       --pinnedpubkey <pinned public key (hashes)>\n"
-"              (SSL) Tells curl to  use  the  specified  public  key  file  (or\n"
-"              hashes)  to  verify the peer. This can be a path to a file which\n"
+"       --form-string <name=string>\n"
+"              (HTTP) Similar to -F, --form except that the  value  string  for\n"
+"              the named parameter is used literally. Leading '@' and '<' char-\n"
 , stdout);
  fputs(
-"              contains a single public key in PEM or DER format, or any number\n"
-"              of base64 encoded sha256 hashes preceded by 'sha256//' and sepa-\n"
-"              rated by ';'\n"
+"              acters, and the ';type=' string in the  value  have  no  special\n"
+"              meaning.  Use  this  in  preference to -F, --form if there's any\n"
+"              possibility that the string value may accidentally  trigger  the\n"
+"              '@' or '<' features of -F, --form.\n"
 "\n"
-"              When negotiating a TLS or SSL connection,  the  server  sends  a\n"
-"              certificate  indicating  its identity. A public key is extracted\n"
-"              from this certificate and if it does not exactly match the  pub-\n"
+"              See also -F, --form.\n"
+"\n"
+"       -F, --form <name=content>\n"
+"              (HTTP)  This  lets curl emulate a filled-in form in which a user\n"
 , stdout);
  fputs(
-"              lic  key provided to this option, curl will abort the connection\n"
-"              before sending or receiving any data.\n"
-"\n"
-"              PEM/DER support:\n"
-"                7.39.0: OpenSSL, GnuTLS and GSKit\n"
-"                7.43.0: NSS and wolfSSL/CyaSSL\n"
-"                7.47.0: mbedtls\n"
-"                7.49.0: PolarSSL sha256 support:\n"
-"                7.44.0: OpenSSL, GnuTLS, NSS and wolfSSL/CyaSSL.\n"
-"                7.47.0: mbedtls\n"
+"              has pressed the submit button. This causes  curl  to  POST  data\n"
+"              using  the  Content-Type  multipart/form-data  according  to RFC\n"
+"              2388. This enables uploading of binary files etc. To  force  the\n"
+"              'content'  part  to  be  a  file, prefix the file name with an @\n"
+"              sign. To just get the content part from a file, prefix the  file\n"
+"              name  with  the symbol <. The difference between @ and < is then\n"
 , stdout);
  fputs(
-"                7.49.0: PolarSSL Other SSL backends not supported.\n"
+"              that @ makes a file get attached in the post as a  file  upload,\n"
+"              while  the  <  makes  a text field and just get the contents for\n"
+"              that text field from a file.\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
+"              Example: to send an image to a server, where  'profile'  is  the\n"
+"              name of the form-field to which portrait.jpg will be the input:\n"
 "\n"
-"       --cert-status\n"
-"              (SSL) Tells curl to verify the status of the server  certificate\n"
-"              by using the Certificate Status Request (aka. OCSP stapling) TLS\n"
-"              extension.\n"
+"               curl -F profile=@portrait.jpg https://example.com/upload.cgi\n"
 "\n"
-"              If this option is enabled and the server sends an invalid  (e.g.\n"
 , stdout);
  fputs(
-"              expired) response, if the response suggests that the server cer-\n"
-"              tificate has been revoked, or no response at  all  is  received,\n"
-"              the verification fails.\n"
+"              To read content from stdin instead of a file, use - as the file-\n"
+"              name. This goes for both @ and <  constructs.  Unfortunately  it\n"
+"              does  not support reading the file from a named pipe or similar,\n"
+"              as it needs the full size before the transfer starts.\n"
 "\n"
-"              This  is  currently  only implemented in the OpenSSL, GnuTLS and\n"
-"              NSS backends.  (Added in 7.41.0)\n"
+"              You can also  tell  curl  what  Content-Type  to  use  by  using\n"
+"              'type=', in a manner similar to:\n"
 "\n"
-"       --false-start\n"
-"\n"
-"              (SSL) Tells curl to use false start during  the  TLS  handshake.\n"
-, stdout);
- fputs(
-"              False  start  is  a  mode  where a TLS client will start sending\n"
-"              application data before verifying the server's Finished message,\n"
-"              thus saving a round trip when performing a full handshake.\n"
-"\n"
-"              This  is currently only implemented in the NSS and Secure Trans-\n"
-"              port (on iOS 7.0 or later, or OS  X  10.9  or  later)  backends.\n"
-"              (Added in 7.42.0)\n"
-"\n"
-"       -f, --fail\n"
-, stdout);
- fputs(
-"              (HTTP)  Fail  silently (no output at all) on server errors. This\n"
-"              is mostly done to better enable scripts etc to better deal  with\n"
-"              failed  attempts.  In  normal cases when an HTTP server fails to\n"
-"              deliver a document, it  returns  an  HTML  document  stating  so\n"
-"              (which  often  also describes why and more). This flag will pre-\n"
-"              vent curl from outputting that and return error 22.\n"
-"\n"
-, stdout);
- fputs(
-"              This method is not fail-safe and there are occasions where  non-\n"
-"              successful  response  codes  will  slip through, especially when\n"
-"              authentication is involved (response codes 401 and 407).\n"
-"\n"
-"       -F, --form <name=content>\n"
-"              (HTTP) This lets curl emulate a filled-in form in which  a  user\n"
-"              has  pressed  the  submit  button. This causes curl to POST data\n"
-"              using the  Content-Type  multipart/form-data  according  to  RFC\n"
-, stdout);
- fputs(
-"              2388.  This  enables uploading of binary files etc. To force the\n"
-"              'content' part to be a file, prefix the  file  name  with  an  @\n"
-"              sign.  To just get the content part from a file, prefix the file\n"
-"              name with the symbol <. The difference between @ and <  is  then\n"
-"              that  @  makes a file get attached in the post as a file upload,\n"
-"              while the < makes a text field and just  get  the  contents  for\n"
-, stdout);
- fputs(
-"              that text field from a file.\n"
-"\n"
-"              Example:  to  send  an image to a server, where 'profile' is the\n"
-"              name of the form-field to which portrait.jpg will be the input:\n"
-"\n"
-"              curl -F profile=@portrait.jpg https://example.com/upload.cgi\n"
-"\n"
-"              To read content from stdin instead of a file, use - as the file-\n"
-"              name.  This  goes  for both @ and < constructs. Unfortunately it\n"
 , stdout);
  fputs(
-"              does not support reading the file from a named pipe or  similar,\n"
-"              as it needs the full size before the transfer starts.\n"
-"\n"
-"              You  can  also  tell  curl  what  Content-Type  to  use by using\n"
-"              'type=', in a manner similar to:\n"
-"\n"
-"              curl -F \"web=@index.html;type=text/html\" example.com\n"
+"               curl -F \"web=@index.html;type=text/html\" example.com\n"
 "\n"
 "              or\n"
 "\n"
-"              curl -F \"name=daniel;type=text/foo\" example.com\n"
+"               curl -F \"name=daniel;type=text/foo\" example.com\n"
 "\n"
-, stdout);
- fputs(
-"              You can also explicitly change the name field of a  file  upload\n"
+"              You  can  also explicitly change the name field of a file upload\n"
 "              part by setting filename=, like this:\n"
 "\n"
-"              curl -F \"file=@localfile;filename=nameinpost\" example.com\n"
+"               curl -F \"file=@localfile;filename=nameinpost\" example.com\n"
 "\n"
-"              If  filename/path contains ',' or ';', it must be quoted by dou-\n"
+"              If filename/path contains ',' or ';', it must be quoted by  dou-\n"
 "              ble-quotes like:\n"
 "\n"
-"              curl  -F   \"file=@\\\"localfile\\\";filename=\\\"nameinpost\\\"\"   exam-\n"
+, stdout);
+ fputs(
+"               curl   -F  \"file=@\\\"localfile\\\";filename=\\\"nameinpost\\\"\"  exam-\n"
 "              ple.com\n"
 "\n"
 "              or\n"
 "\n"
-, stdout);
- fputs(
-"              curl -F 'file=@\"localfile\";filename=\"nameinpost\"' example.com\n"
+"               curl -F 'file=@\"localfile\";filename=\"nameinpost\"' example.com\n"
 "\n"
-"              Note  that  if  a  filename/path is quoted by double-quotes, any\n"
+"              Note that if a filename/path is  quoted  by  double-quotes,  any\n"
 "              double-quote or backslash within the filename must be escaped by\n"
 "              backslash.\n"
 "\n"
 "              See further examples and details in the MANUAL.\n"
 "\n"
+, stdout);
+ fputs(
 "              This option can be used multiple times.\n"
 "\n"
-"       --ftp-account [data]\n"
+"              This option overrides -d, --data and -I, --head and --upload.\n"
+"\n"
+"       --ftp-account <data>\n"
 "              (FTP) When an FTP server asks for \"account data\" after user name\n"
-, stdout);
- fputs(
-"              and password has been provided, this data is sent off using  the\n"
-"              ACCT command. (Added in 7.13.0)\n"
+"              and  password has been provided, this data is sent off using the\n"
+"              ACCT command.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --ftp-alternative-to-user <command>\n"
-"              (FTP)  If  authenticating with the USER and PASS commands fails,\n"
-"              send this  command.   When  connecting  to  Tumbleweed's  Secure\n"
-"              Transport  server  over  FTPS  using a client certificate, using\n"
+"              Added in 7.13.0.\n"
+"\n"
 , stdout);
  fputs(
-"              \"SITE AUTH\" will tell the server to retrieve the  username  from\n"
-"              the certificate. (Added in 7.15.5)\n"
+"       --ftp-alternative-to-user <command>\n"
+"              (FTP) If authenticating with the USER and PASS  commands  fails,\n"
+"              send  this  command.   When  connecting  to  Tumbleweed's Secure\n"
+"              Transport server over FTPS using  a  client  certificate,  using\n"
+"              \"SITE  AUTH\"  will tell the server to retrieve the username from\n"
+"              the certificate.\n"
+"              Added in 7.15.5.\n"
 "\n"
 "       --ftp-create-dirs\n"
-"              (FTP/SFTP)  When  an  FTP or SFTP URL/operation uses a path that\n"
-"              doesn't currently exist on the server, the standard behavior  of\n"
+, stdout);
+ fputs(
+"              (FTP SFTP) When an FTP or SFTP URL/operation uses  a  path  that\n"
+"              doesn't  currently exist on the server, the standard behavior of\n"
 "              curl is to fail. Using this option, curl will instead attempt to\n"
 "              create missing directories.\n"
 "\n"
-"       --ftp-method [method]\n"
+"              See also --create-dirs.\n"
+"\n"
+"       --ftp-method <method>\n"
+"              (FTP)  Control what method curl should use to reach a file on an\n"
 , stdout);
  fputs(
-"              (FTP) Control what method curl should use to reach a file on  an\n"
-"              FTP(S)  server. The method argument should be one of the follow-\n"
+"              FTP(S) server. The method argument should be one of the  follow-\n"
 "              ing alternatives:\n"
 "\n"
 "              multicwd\n"
-"                     curl does a single CWD operation for each  path  part  in\n"
-"                     the  given URL. For deep hierarchies this means very many\n"
-"                     commands. This is how RFC 1738 says it  should  be  done.\n"
-, stdout);
- fputs(
+"                     curl  does  a  single CWD operation for each path part in\n"
+"                     the given URL. For deep hierarchies this means very  many\n"
+"                     commands.  This  is  how RFC 1738 says it should be done.\n"
 "                     This is the default but the slowest behavior.\n"
 "\n"
-"              nocwd  curl  does  no  CWD at all. curl will do SIZE, RETR, STOR\n"
+, stdout);
+ fputs(
+"              nocwd  curl does no CWD at all. curl will do  SIZE,  RETR,  STOR\n"
 "                     etc and give a full path to the server for all these com-\n"
 "                     mands. This is the fastest behavior.\n"
 "\n"
 "              singlecwd\n"
 "                     curl does one CWD with the full target directory and then\n"
-"                     operates on the file \"normally\"  (like  in  the  multicwd\n"
+"                     operates  on  the  file  \"normally\" (like in the multicwd\n"
+"                     case). This is somewhat  more  standards  compliant  than\n"
 , stdout);
  fputs(
-"                     case).  This  is  somewhat  more standards compliant than\n"
 "                     'nocwd' but without the full penalty of 'multicwd'.\n"
 "\n"
-"              (Added in 7.15.1)\n"
+"       Added in 7.15.1.\n"
 "\n"
 "       --ftp-pasv\n"
-"              (FTP) Use passive mode for the data connection. Passive  is  the\n"
-"              internal  default behavior, but using this option can be used to\n"
-"              override a previous -P/-ftp-port option. (Added in 7.11.0)\n"
+"              (FTP)  Use  passive mode for the data connection. Passive is the\n"
+"              internal default behavior, but using this option can be used  to\n"
+"              override a previous -P, --ftp-port option.\n"
 "\n"
+"              If  this  option  is  used  several times, only the first one is\n"
+"              used. Undoing an enforced passive really isn't  doable  but  you\n"
 , stdout);
  fputs(
-"              If this option is used several times,  only  the  first  one  is\n"
-"              used.  Undoing  an  enforced passive really isn't doable but you\n"
 "              must then instead enforce the correct -P, --ftp-port again.\n"
 "\n"
 "              Passive mode means that curl will try the EPSV command first and\n"
 "              then PASV, unless --disable-epsv is used.\n"
+"              See also --disable-epsv. Added in 7.11.0.\n"
+"\n"
+"       -P, --ftp-port <address>\n"
+"              (FTP) Reverses the default initiator/listener  roles  when  con-\n"
+"              necting  with  FTP. This option makes curl use active mode. curl\n"
+, stdout);
+ fputs(
+"              then tells the server to connect back to the client's  specified\n"
+"              address and port, while passive mode asks the server to setup an\n"
+"              IP address and port for it to connect to.  <address>  should  be\n"
+"              one of:\n"
+"\n"
+"              interface\n"
+"                     i.e  \"eth0\"  to  specify which interface's IP address you\n"
+"                     want to use (Unix only)\n"
+"\n"
+"              IP address\n"
+, stdout);
+ fputs(
+"                     i.e \"192.168.10.1\" to specify the exact IP address\n"
+"\n"
+"              host name\n"
+"                     i.e \"my.host.domain\" to specify the machine\n"
+"\n"
+"              -      make curl pick the same IP address that is  already  used\n"
+"                     for the control connection\n"
+"\n"
+"       If  this  option is used several times, the last one will be used. Dis-\n"
+"       able the use of PORT with --ftp-pasv. Disable the attempt  to  use  the\n"
+, stdout);
+ fputs(
+"       EPRT  command  instead  of PORT by using --disable-eprt. EPRT is really\n"
+"       PORT++.\n"
+"\n"
+"       Since 7.19.5, you can append  \":[start]-[end]\"  to  the  right  of  the\n"
+"       address,  to tell curl what TCP port range to use. That means you spec-\n"
+"       ify a port range, from a lower to a  higher  number.  A  single  number\n"
+"       works  as well, but do note that it increases the risk of failure since\n"
+"       the port may not be available.\n"
+"\n"
+"       See also --ftp-pasv and --disable-eprt.\n"
+"\n"
+, stdout);
+ fputs(
+"       --ftp-pret\n"
+"              (FTP) Tell curl to send a PRET command before PASV  (and  EPSV).\n"
+"              Certain  FTP  servers,  mainly drftpd, require this non-standard\n"
+"              command for directory listings as well as up  and  downloads  in\n"
+"              PASV mode.\n"
+"\n"
+"              Added in 7.20.0.\n"
 "\n"
 "       --ftp-skip-pasv-ip\n"
 "              (FTP) Tell curl to not use the IP address the server suggests in\n"
+"              its response to curl's PASV command when curl connects the  data\n"
 , stdout);
  fputs(
-"              its response to curl's PASV command when curl connects the  data\n"
 "              connection.  Instead  curl  will  re-use  the same IP address it\n"
-"              already uses for the control connection. (Added in 7.14.2)\n"
+"              already uses for the control connection.\n"
 "\n"
 "              This option has no effect if PORT, EPRT or EPSV is used  instead\n"
 "              of PASV.\n"
 "\n"
-"       --ftp-pret\n"
-"              (FTP)  Tell  curl to send a PRET command before PASV (and EPSV).\n"
+"              See also --ftp-pasv. Added in 7.14.2.\n"
+"\n"
+"       --ftp-ssl-ccc-mode <active/passive>\n"
+"              (FTP)  Sets the CCC mode. The passive mode will not initiate the\n"
+"              shutdown, but instead wait for the server to do it, and will not\n"
 , stdout);
  fputs(
-"              Certain FTP servers, mainly drftpd,  require  this  non-standard\n"
-"              command  for  directory  listings as well as up and downloads in\n"
-"              PASV mode.  (Added in 7.20.x)\n"
+"              reply to the shutdown from the server. The active mode initiates\n"
+"              the shutdown and waits for a reply from the server.\n"
+"\n"
+"              See also --ftp-ssl-ccc. Added in 7.16.2.\n"
 "\n"
 "       --ftp-ssl-ccc\n"
 "              (FTP) Use CCC (Clear Command Channel)  Shuts  down  the  SSL/TLS\n"
 "              layer after authenticating. The rest of the control channel com-\n"
 "              munication will be unencrypted. This allows NAT routers to  fol-\n"
 , stdout);
  fputs(
-"              low the FTP transaction. The default mode is passive. See --ftp-\n"
-"              ssl-ccc-mode for other modes.  (Added in 7.16.1)\n"
+"              low the FTP transaction. The default mode is passive.\n"
 "\n"
-"       --ftp-ssl-ccc-mode [active/passive]\n"
-"              (FTP) Use CCC (Clear Command Channel) Sets  the  CCC  mode.  The\n"
-"              passive  mode  will  not initiate the shutdown, but instead wait\n"
-"              for the server to do it, and will not reply to the shutdown from\n"
-, stdout);
- fputs(
-"              the server. The active mode initiates the shutdown and waits for\n"
-"              a reply from the server.  (Added in 7.16.2)\n"
+"              See also --ssl and --ftp-ssl-ccc-mode. Added in 7.16.1.\n"
 "\n"
 "       --ftp-ssl-control\n"
-"              (FTP) Require SSL/TLS for the FTP  login,  clear  for  transfer.\n"
-"              Allows  secure  authentication, but non-encrypted data transfers\n"
-"              for efficiency.  Fails the transfer if the server  doesn't  sup-\n"
-"              port SSL/TLS.  (Added in 7.16.0) that can still be used but will\n"
-, stdout);
- fputs(
-"              be removed in a future version.\n"
+"              (FTP)  Require  SSL/TLS  for  the FTP login, clear for transfer.\n"
+"              Allows secure authentication, but non-encrypted  data  transfers\n"
+"              for  efficiency.   Fails the transfer if the server doesn't sup-\n"
+"              port SSL/TLS.\n"
 "\n"
-"       --ftp-ssl\n"
-"              (FTP) This deprecated option is now known as --ssl.\n"
+"              Added in 7.16.0.\n"
 "\n"
-"       --ftp-ssl-reqd\n"
-"              (FTP) This deprecated option is now known as --ssl-reqd.\n"
+"       -G, --get\n"
+, stdout);
+ fputs(
+"              When used, this option will make all  data  specified  with  -d,\n"
+"              --data,  --data-binary or --data-urlencode to be used in an HTTP\n"
+"              GET request instead of the POST request that otherwise would  be\n"
+"              used. The data will be appended to the URL with a '?' separator.\n"
+"              If  used  in  combination  with  -I,  --head, the POST data will\n"
+"              instead be appended to the URL with a HEAD request.\n"
 "\n"
-"       --form-string <name=string>\n"
-"              (HTTP) Similar to --form except that the value  string  for  the\n"
-"              named  parameter  is used literally. Leading '@' and '<' charac-\n"
-"              ters, and the ';type=' string in the value have no special mean-\n"
 , stdout);
  fputs(
-"              ing. Use this in preference to --form if there's any possibility\n"
-"              that the string value may accidentally trigger the  '@'  or  '<'\n"
-"              features of --form.\n"
+"              If this option is used several times,  only  the  first  one  is\n"
+"              used.  This is because undoing a GET doesn't make sense, but you\n"
+"              should then instead enforce the alternative method you prefer.\n"
 "\n"
 "       -g, --globoff\n"
 "              This option switches off the \"URL globbing parser\". When you set\n"
-"              this option, you can specify URLs that contain the letters  {}[]\n"
-"              without  having them being interpreted by curl itself. Note that\n"
+"              this  option, you can specify URLs that contain the letters {}[]\n"
+"              without having them being interpreted by curl itself. Note  that\n"
 , stdout);
  fputs(
-"              these letters are not normal legal URL contents but they  should\n"
+"              these  letters are not normal legal URL contents but they should\n"
 "              be encoded according to the URI standard.\n"
 "\n"
-"       -G, --get\n"
-"              When  used,  this  option  will make all data specified with -d,\n"
-"              --data, --data-binary or --data-urlencode to be used in an  HTTP\n"
-"              GET  request instead of the POST request that otherwise would be\n"
-"              used. The data will be appended to the URL with a '?' separator.\n"
-, stdout);
- fputs(
-"              If used in combination with -I, the POST data  will  instead  be\n"
-"              appended to the URL with a HEAD request.\n"
-"\n"
-"              If  this  option  is  used  several times, only the first one is\n"
-"              used. This is because undoing a GET doesn't make sense, but  you\n"
-"              should then instead enforce the alternative method you prefer.\n"
+"       -I, --head\n"
+"              (HTTP FTP FILE) Fetch the headers only! HTTP-servers feature the\n"
+"              command  HEAD which this uses to get nothing but the header of a\n"
+"              document. When used on an FTP or FILE file,  curl  displays  the\n"
+"              file size and last modification time only.\n"
 "\n"
 "       -H, --header <header>\n"
-"              (HTTP)  Extra header to include in the request when sending HTTP\n"
 , stdout);
  fputs(
+"              (HTTP)  Extra header to include in the request when sending HTTP\n"
 "              to a server. You may specify any number of extra  headers.  Note\n"
 "              that if you should add a custom header that has the same name as\n"
 "              one of the internal ones curl would  use,  your  externally  set\n"
 "              header will be used instead of the internal one. This allows you\n"
 "              to make even trickier stuff than curl  would  normally  do.  You\n"
-"              should  not  replace internally set headers without knowing per-\n"
 , stdout);
  fputs(
+"              should  not  replace internally set headers without knowing per-\n"
 "              fectly well what you're doing. Remove an internal header by giv-\n"
 "              ing  a  replacement  without  content  on  the right side of the\n"
 "              colon, as in: -H \"Host:\". If you send the custom header with no-\n"
 "              value  then its header must be terminated with a semicolon, such\n"
 "              as -H \"X-Custom-Header;\" to send \"X-Custom-Header:\".\n"
 "\n"
-"              curl will make sure that each header  you  add/replace  is  sent\n"
 , stdout);
  fputs(
+"              curl will make sure that each header  you  add/replace  is  sent\n"
 "              with the proper end-of-line marker, you should thus not add that\n"
 "              as a part of the header content: do not add newlines or carriage\n"
 "              returns, they will only mess things up for you.\n"
 "\n"
 "              See also the -A, --user-agent and -e, --referer options.\n"
 "\n"
 "              Starting in 7.37.0, you need --proxy-header to send custom head-\n"
 "              ers intended for a proxy.\n"
 "\n"
-"              Example:\n"
-"\n"
 , stdout);
  fputs(
-"              # curl -H \"X-First-Name: Joe\" http://example.com/\n"
+"              Example:\n"
+"\n"
+"               curl -H \"X-First-Name: Joe\" http://example.com/\n"
 "\n"
 "              WARNING: headers set  with  this  option  will  be  set  in  all\n"
 "              requests  -  even  after  redirects are followed, like when told\n"
 "              with -L, --location. This can lead to the header being  sent  to\n"
 "              other  hosts than the original host, so sensitive headers should\n"
 "              be used with caution combined with following redirects.\n"
 "\n"
 , stdout);
  fputs(
 "              This option can be used  multiple  times  to  add/replace/remove\n"
 "              multiple headers.\n"
 "\n"
+"       -h, --help\n"
+"              Usage  help.  This lists all current command line options with a\n"
+"              short description.\n"
 "       --hostpubmd5 <md5>\n"
-"              (SCP/SFTP)  Pass  a string containing 32 hexadecimal digits. The\n"
-"              string should be the 128 bit MD5 checksum of the  remote  host's\n"
-"              public key, curl will refuse the connection with the host unless\n"
-"              the md5sums match. (Added in 7.17.1)\n"
-"\n"
-"       --ignore-content-length\n"
+"              (SFTP SCP) Pass a string containing 32 hexadecimal  digits.  The\n"
+"              string  should  be the 128 bit MD5 checksum of the remote host's\n"
 , stdout);
  fputs(
-"              For HTTP, Ignore the Content-Length header. This is particularly\n"
-"              useful  for servers running Apache 1.x, which will report incor-\n"
-"              rect Content-Length for files larger than 2 gigabytes.\n"
+"              public key, curl will refuse the connection with the host unless\n"
+"              the md5sums match.\n"
 "\n"
-"              For FTP (since 7.46.0), skip the RETR command to figure out  the\n"
-"              size before downloading a file.\n"
+"              Added in 7.17.1.\n"
 "\n"
-"       -i, --include\n"
-"              (HTTP)  Include  the  HTTP-header in the output. The HTTP-header\n"
-, stdout);
- fputs(
-"              includes things like server-name, date of  the  document,  HTTP-\n"
-"              version and more...\n"
+"       -0, --http1.0\n"
+"              (HTTP)  Tells  curl to use HTTP version 1.0 instead of using its\n"
+"              internally preferred HTTP version.\n"
 "\n"
-"       -I, --head\n"
-"              (HTTP/FTP/FILE) Fetch the HTTP-header only! HTTP-servers feature\n"
-"              the command HEAD which this uses to get nothing but  the  header\n"
-"              of  a  document. When used on an FTP or FILE file, curl displays\n"
-"              the file size and last modification time only.\n"
+"              This option overrides --http1.1 and --http2.\n"
+"\n"
+"       --http1.1\n"
+"              (HTTP) Tells curl to use HTTP version 1.1.\n"
 "\n"
-"       --interface <name>\n"
 , stdout);
  fputs(
-"              Perform an operation using a specified interface. You can  enter\n"
-"              interface  name,  IP address or host name. An example could look\n"
-"              like:\n"
-"\n"
-"               curl --interface eth0:1 https://www.example.com/\n"
+"              This option  overrides  -0,  --http1.0  and  --http2.  Added  in\n"
+"              7.33.0.\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
+"       --http2-prior-knowledge\n"
+"              (HTTP)  Tells  curl  to  issue  its  non-TLS HTTP requests using\n"
+"              HTTP/2 without HTTP/1.1 Upgrade.  It  requires  prior  knowledge\n"
+"              that  the  server  supports HTTP/2 straight away. HTTPS requests\n"
+"              will still do HTTP/2 the standard way with  negotiated  protocol\n"
+"              version in the TLS handshake.\n"
 "\n"
-"       -j, --junk-session-cookies\n"
-"              (HTTP) When curl is told to read cookies from a given file, this\n"
 , stdout);
  fputs(
-"              option  will  make  it  discard all \"session cookies\". This will\n"
-"              basically have the same effect as if a new session  is  started.\n"
-"              Typical  browsers  always  discard  session cookies when they're\n"
-"              closed down.\n"
+"              --http2-prior-knowledge requires that the underlying libcurl was\n"
+"              built to support HTTP/2. This option overrides --http1.1 and -0,\n"
+"              --http1.0 and --http2. Added in 7.49.0.\n"
 "\n"
-"       -J, --remote-header-name\n"
-"              (HTTP) This option tells the -O, --remote-name option to use the\n"
-"              server-specified   Content-Disposition   filename   instead   of\n"
+"       --http2\n"
+"              (HTTP) Tells curl to use HTTP version 2.\n"
+"\n"
+"              See also --no-alpn. --http2 requires that the underlying libcurl\n"
+"              was built to support HTTP/2. This option overrides --http1.1 and\n"
 , stdout);
  fputs(
-"              extracting a filename from the URL.\n"
+"              -0, --http1.0 and --http2-prior-knowledge. Added in 7.33.0.\n"
 "\n"
-"              If the server specifies a file name and a file  with  that  name\n"
-"              already  exists  in the current working directory it will not be\n"
-"              overwritten and an error will occur. If the server doesn't spec-\n"
-"              ify a file name then this option has no effect.\n"
+"       --ignore-content-length\n"
+"              (FTP  HTTP)  For HTTP, Ignore the Content-Length header. This is\n"
+"              particularly useful for servers running Apache 1.x,  which  will\n"
+"              report  incorrect  Content-Length  for files larger than 2 giga-\n"
+"              bytes.\n"
+"\n"
+"              For FTP (since 7.46.0), skip the RETR command to figure out  the\n"
+"              size before downloading a file.\n"
 "\n"
-"              There's  no  attempt to decode %-sequences (yet) in the provided\n"
 , stdout);
  fputs(
-"              file name, so this option may provide you with rather unexpected\n"
-"              file names.\n"
+"       -i, --include\n"
+"              Include  the HTTP-header in the output. The HTTP-header includes\n"
+"              things like server-name, date of the document, HTTP-version  and\n"
+"              more...\n"
 "\n"
-"              WARNING:  Exercise  judicious  use of this option, especially on\n"
-"              Windows. A rogue server could send you the  name  of  a  DLL  or\n"
-"              other  file  that could possibly be loaded automatically by Win-\n"
-"              dows or some third party software.\n"
+"              See also -v, --verbose.\n"
 "\n"
 "       -k, --insecure\n"
-"              (SSL) This option explicitly allows curl to  perform  \"insecure\"\n"
+"              (TLS)  This  option explicitly allows curl to perform \"insecure\"\n"
+"              SSL connections and transfers. All SSL connections are attempted\n"
+"              to  be  made secure by using the CA certificate bundle installed\n"
 , stdout);
  fputs(
-"              SSL connections and transfers. All SSL connections are attempted\n"
-"              to be made secure by using the CA certificate  bundle  installed\n"
-"              by  default.  This  makes  all connections considered \"insecure\"\n"
+"              by default. This makes  all  connections  considered  \"insecure\"\n"
 "              fail unless -k, --insecure is used.\n"
 "\n"
-"              See    this    online    resource    for    further     details:\n"
-"              https://curl.haxx.se/docs/sslcerts.html\n"
+"              See this online resource for further details:\n"
+"               https://curl.haxx.se/docs/sslcerts.html\n"
 "\n"
-"       -K, --config <config file>\n"
-, stdout);
- fputs(
-"              Specify  which config file to read curl arguments from. The con-\n"
-"              fig file is a text file in which command line arguments  can  be\n"
-"              written  which  then will be used as if they were written on the\n"
-"              actual command line.\n"
+"       --interface <name>\n"
 "\n"
-"              Options and their parameters must be specified on the same  con-\n"
-"              fig  file  line,  separated  by whitespace, colon, or the equals\n"
-, stdout);
- fputs(
-"              sign. Long option names can optionally be given  in  the  config\n"
-"              file  without  the initial double dashes and if so, the colon or\n"
-"              equals characters can be used as separators. If  the  option  is\n"
-"              specified  with  one  or  two  dashes,  there can be no colon or\n"
-"              equals character between the option and its parameter.\n"
+"              Perform  an operation using a specified interface. You can enter\n"
+"              interface name, IP address or host name. An example  could  look\n"
+"              like:\n"
 "\n"
-"              If the parameter is to contain whitespace, the parameter must be\n"
 , stdout);
  fputs(
-"              enclosed  within  quotes.  Within  double  quotes, the following\n"
-"              escape sequences are available: \\\\, \\\", \\t, \\n,  \\r  and  \\v.  A\n"
-"              backslash  preceding  any  other letter is ignored. If the first\n"
-"              column of a config line is a '#' character, the rest of the line\n"
-"              will be treated as a comment. Only write one option per physical\n"
-"              line in the config file.\n"
+"               curl --interface eth0:1 https://www.example.com/\n"
 "\n"
-, stdout);
- fputs(
-"              Specify the filename to -K, --config as '-' to  make  curl  read\n"
-"              the file from stdin.\n"
+"              If this option is used several times, the last one will be used.\n"
 "\n"
-"              Note  that  to  be able to specify a URL in the config file, you\n"
-"              need to specify it using the --url option,  and  not  by  simply\n"
-"              writing  the  URL  on its own line. So, it could look similar to\n"
-"              this:\n"
+"              See also --dns-interface.\n"
 "\n"
-"              url = \"https://curl.haxx.se/docs/\"\n"
+"       -4, --ipv4\n"
+"              This  option tells curl to resolve names to IPv4 addresses only,\n"
+"              and not for example try IPv6.\n"
 "\n"
-, stdout);
- fputs(
-"              When curl is invoked, it always (unless -q is used) checks for a\n"
-"              default  config  file  and  uses it if found. The default config\n"
-"              file is checked for in the following places in this order:\n"
+"              See also  --http1.1  and  --http2.  This  option  overrides  -6,\n"
+"              --ipv6.\n"
 "\n"
-"              1) curl tries to find the \"home dir\": It first  checks  for  the\n"
-"              CURL_HOME and then the HOME environment variables. Failing that,\n"
-"              it uses getpwuid() on Unix-like systems (which returns the  home\n"
+"       -6, --ipv6\n"
 , stdout);
  fputs(
-"              dir  given the current user in your system). On Windows, it then\n"
-"              checks for the APPDATA variable, or as a last resort the '%USER-\n"
-"              PROFILE%\\Application Data'.\n"
+"              This  option tells curl to resolve names to IPv6 addresses only,\n"
+"              and not for example try IPv4.\n"
 "\n"
-"              2)  On  windows, if there is no _curlrc file in the home dir, it\n"
-"              checks for one in the same dir the curl executable is placed. On\n"
-"              Unix-like  systems,  it will simply try to load .curlrc from the\n"
-"              determined home dir.\n"
+"              See also  --http1.1  and  --http2.  This  option  overrides  -6,\n"
+"              --ipv6.\n"
 "\n"
+"       -j, --junk-session-cookies\n"
+"              (HTTP) When curl is told to read cookies from a given file, this\n"
+"              option will make it discard all  \"session  cookies\".  This  will\n"
+"              basically  have  the same effect as if a new session is started.\n"
 , stdout);
  fputs(
-"              # --- Example file ---\n"
-"              # this is a comment\n"
-"              url = \"example.com\"\n"
-"              output = \"curlhere.html\"\n"
-"              user-agent = \"superagent/1.0\"\n"
-"\n"
-"              # and fetch another URL too\n"
-"              url = \"example.com/docs/manpage.html\"\n"
-"              -O\n"
-"              referer = \"http://nowhereatall.example.com/\"\n"
-"              # --- End of example file ---\n"
+"              Typical browsers always discard  session  cookies  when  they're\n"
+"              closed down.\n"
 "\n"
-"              This option can be used multiple times to load  multiple  config\n"
-, stdout);
- fputs(
-"              files.\n"
+"              See also -b, --cookie and -c, --cookie-jar.\n"
 "\n"
 "       --keepalive-time <seconds>\n"
 "              This  option  sets  the  time  a connection needs to remain idle\n"
 "              before sending keepalive probes and the time between  individual\n"
 "              keepalive probes. It is currently effective on operating systems\n"
-"              offering  the  TCP_KEEPIDLE  and  TCP_KEEPINTVL  socket  options\n"
-"              (meaning  Linux, recent AIX, HP-UX and more). This option has no\n"
 , stdout);
  fputs(
-"              effect if --no-keepalive is used. (Added in 7.18.0)\n"
+"              offering  the  TCP_KEEPIDLE  and  TCP_KEEPINTVL  socket  options\n"
+"              (meaning  Linux, recent AIX, HP-UX and more). This option has no\n"
+"              effect if --no-keepalive is used.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "              If unspecified, the option defaults to 60 seconds.\n"
 "\n"
-"       --key <key>\n"
-"              (SSL/SSH) Private key file name. Allows you to provide your pri-\n"
-"              vate key in this separate file. For SSH, if not specified,  curl\n"
-"              tries   the  following  candidates  in  order:  '~/.ssh/id_rsa',\n"
+"              Added in 7.18.0.\n"
+"\n"
+"       --key-type <type>\n"
+"              (TLS)  Private key file type. Specify which type your --key pro-\n"
 , stdout);
  fputs(
-"              '~/.ssh/id_dsa', './id_rsa', './id_dsa'.\n"
+"              vided private key is. DER, PEM, and ENG are  supported.  If  not\n"
+"              specified, PEM is assumed.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --key-type <type>\n"
-"              (SSL) Private key file type. Specify which type your --key  pro-\n"
-"              vided  private  key  is. DER, PEM, and ENG are supported. If not\n"
-"              specified, PEM is assumed.\n"
+"       --key <key>\n"
+"              (TLS SSH) Private key file name. Allows you to provide your pri-\n"
+"              vate key in this separate file. For SSH, if not specified,  curl\n"
+"              tries the following candidates in order:\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --krb <level>\n"
-, stdout);
- fputs(
-"              (FTP) Enable Kerberos authentication and use. The level must  be\n"
+"              (FTP)  Enable Kerberos authentication and use. The level must be\n"
 "              entered and should be one of 'clear', 'safe', 'confidential', or\n"
-"              'private'. Should you use a level that  is  not  one  of  these,\n"
+"              'private'.  Should  you  use  a  level that is not one of these,\n"
 "              'private' will instead be used.\n"
 "\n"
-"              This  option  requires  a  library built with kerberos4 support.\n"
-"              This is not very common. Use -V, --version to see if  your  curl\n"
-"              supports it.\n"
-"\n"
-, stdout);
- fputs(
 "              If this option is used several times, the last one will be used.\n"
-"\n"
-"       --krb4 <level>\n"
-"              (FTP) This is the former name for --krb. Do not use.\n"
-"\n"
-"       -l, --list-only\n"
-"              (FTP)  When listing an FTP directory, this switch forces a name-\n"
-"              only view. This is  especially  useful  if  the  user  wants  to\n"
-"              machine-parse  the contents of an FTP directory since the normal\n"
 , stdout);
  fputs(
-"              directory view doesn't use a standard look or format. When  used\n"
-"              like  this,  the  option causes a NLST command to be sent to the\n"
-"              server instead of LIST.\n"
+"              --krb requires that the underlying libcurl was built to  support\n"
+"              Kerberos.\n"
 "\n"
-"              Note: Some FTP servers list only  files  in  their  response  to\n"
-"              NLST; they do not include sub-directories and symbolic links.\n"
+"       --libcurl <file>\n"
+"              Append  this  option  to any ordinary curl command line, and you\n"
+"              will get a libcurl-using C source code written to the file  that\n"
+"              does the equivalent of what your command-line operation does!\n"
+"\n"
+"              If  this  option is used several times, the last given file name\n"
+"              will be used.\n"
 "\n"
-"              (POP3)  When  retrieving a specific email from POP3, this switch\n"
 , stdout);
  fputs(
-"              forces a LIST command to be performed instead of RETR.  This  is\n"
-"              particularly  useful if the user wants to see if a specific mes-\n"
-"              sage id exists on the server and what size it is.\n"
+"              Added in 7.16.1.\n"
 "\n"
-"              Note: When combined with -X, --request  <command>,  this  option\n"
-"              can be used to send an UIDL command instead, so the user may use\n"
-"              the email's unique identifier rather than  it's  message  id  to\n"
+"       --limit-rate <speed>\n"
+"              Specify the maximum transfer rate you want curl  to  use  -  for\n"
+"              both downloads and uploads. This feature is useful if you have a\n"
+"              limited pipe and you'd like your transfer not to use your entire\n"
+"              bandwidth. To make it slower than it otherwise would be.\n"
+"\n"
+"              The  given speed is measured in bytes/second, unless a suffix is\n"
 , stdout);
  fputs(
-"              make the request. (Added in 7.21.5)\n"
+"              appended.  Appending 'k' or 'K' will count the number  as  kilo-\n"
+"              bytes,  'm'  or M' makes it megabytes, while 'g' or 'G' makes it\n"
+"              gigabytes. Examples: 200K, 3m and 1G.\n"
+"\n"
+"              If you also use the -Y, --speed-limit option, that  option  will\n"
+"              take precedence and might cripple the rate-limiting slightly, to\n"
+"              help keeping the speed-limit logic working.\n"
 "\n"
-"       -L, --location\n"
-"              (HTTP/HTTPS)  If  the server reports that the requested page has\n"
-"              moved to a different location (indicated with a Location: header\n"
-"              and  a  3XX  response code), this option will make curl redo the\n"
-"              request on the new place. If used together with -i, --include or\n"
-"              -I, --head, headers from all requested pages will be shown. When\n"
 , stdout);
  fputs(
-"              authentication is used, curl only sends its credentials  to  the\n"
-"              initial  host.  If a redirect takes curl to a different host, it\n"
-"              won't be able to intercept the user+password. See  also  --loca-\n"
-"              tion-trusted  on how to change this. You can limit the amount of\n"
-"              redirects to follow by using the --max-redirs option.\n"
+"              If this option is used several times, the last one will be used.\n"
 "\n"
-"              When curl follows a redirect and the request is not a plain  GET\n"
+"       -l, --list-only\n"
+"              (FTP POP3) (FTP) When listing  an  FTP  directory,  this  switch\n"
+"              forces  a  name-only view. This is especially useful if the user\n"
+"              wants to machine-parse the contents of an  FTP  directory  since\n"
+"              the normal directory view doesn't use a standard look or format.\n"
+"              When used like this, the option causes a NLST command to be sent\n"
 , stdout);
  fputs(
-"              (for example POST or PUT), it will do the following request with\n"
-"              a GET if the HTTP response was 301, 302, or 303. If the response\n"
-"              code  was  any  other  3xx code, curl will re-send the following\n"
-"              request using the same unmodified method.\n"
+"              to the server instead of LIST.\n"
+"\n"
+"              Note:  Some  FTP  servers  list  only files in their response to\n"
+"              NLST; they do not include sub-directories and symbolic links.\n"
 "\n"
-"              You can tell curl to not change the non-GET  request  method  to\n"
-"              GET  after  a  30x  response  by using the dedicated options for\n"
+"              (POP3) When retrieving a specific email from POP3,  this  switch\n"
+"              forces  a  LIST command to be performed instead of RETR. This is\n"
+"              particularly useful if the user wants to see if a specific  mes-\n"
 , stdout);
  fputs(
-"              that: --post301, --post302 and --post303.\n"
+"              sage id exists on the server and what size it is.\n"
 "\n"
-"       --libcurl <file>\n"
-"              Append this option to any ordinary curl command  line,  and  you\n"
-"              will  get a libcurl-using C source code written to the file that\n"
-"              does the equivalent of what your command-line operation does!\n"
+"              Note:  When combined with -X, --request, this option can be used\n"
+"              to send an UIDL command instead, so the user may use the email's\n"
+"              unique  identifier  rather  than  it's  message  id  to make the\n"
+"              request.\n"
 "\n"
-"              If this option is used several times, the last given  file  name\n"
-"              will be used. (Added in 7.16.1)\n"
+"              Added in 7.21.5.\n"
 "\n"
-"       --limit-rate <speed>\n"
+"       --local-port <num/range>\n"
+"              Set a preferred single number or range (FROM-TO) of  local  port\n"
 , stdout);
  fputs(
-"              Specify  the  maximum  transfer  rate you want curl to use - for\n"
-"              both downloads and uploads. This feature is useful if you have a\n"
-"              limited pipe and you'd like your transfer not to use your entire\n"
-"              bandwidth. To make it slower than it otherwise would be.\n"
+"              numbers to use for the connection(s).  Note that port numbers by\n"
+"              nature are a scarce resource that will be busy at times so  set-\n"
+"              ting  this range to something too narrow might cause unnecessary\n"
+"              connection setup failures.\n"
+"\n"
+"              Added in 7.15.2.\n"
 "\n"
-"              The given speed is measured in bytes/second, unless a suffix  is\n"
-"              appended.   Appending  'k' or 'K' will count the number as kilo-\n"
+"       --location-trusted\n"
+"              (HTTP) Like -L, --location, but will allow sending  the  name  +\n"
+"              password to all hosts that the site may redirect to. This may or\n"
 , stdout);
  fputs(
-"              bytes, 'm' or M' makes it megabytes, while 'g' or 'G'  makes  it\n"
-"              gigabytes. Examples: 200K, 3m and 1G.\n"
+"              may not introduce a security breach if the site redirects you to\n"
+"              a  site  to which you'll send your authentication info (which is\n"
+"              plaintext in the case of HTTP Basic authentication).\n"
 "\n"
-"              If  you  also use the -Y, --speed-limit option, that option will\n"
-"              take precedence and might cripple the rate-limiting slightly, to\n"
-"              help keeping the speed-limit logic working.\n"
-"\n"
-"              If this option is used several times, the last one will be used.\n"
+"              See also -u, --user.\n"
 "\n"
-"       --local-port <num>[-num]\n"
+"       -L, --location\n"
+"              (HTTP) If the server reports that the requested page  has  moved\n"
+"              to a different location (indicated with a Location: header and a\n"
 , stdout);
  fputs(
-"              Set a preferred number or range of local port numbers to use for\n"
-"              the connection(s).  Note that  port  numbers  by  nature  are  a\n"
-"              scarce resource that will be busy at times so setting this range\n"
-"              to something too narrow might cause unnecessary connection setup\n"
-"              failures. (Added in 7.15.2)\n"
-"\n"
-"       --location-trusted\n"
-"              (HTTP/HTTPS)  Like  -L,  --location,  but will allow sending the\n"
+"              3XX response code), this option will make curl redo the  request\n"
+"              on  the  new  place.  If used together with -i, --include or -I,\n"
+"              --head, headers from all requested pages  will  be  shown.  When\n"
+"              authentication  is  used, curl only sends its credentials to the\n"
+"              initial host. If a redirect takes curl to a different  host,  it\n"
+"              won't  be  able to intercept the user+password. See also --loca-\n"
 , stdout);
  fputs(
-"              name + password to all hosts that the site may redirect to. This\n"
-"              may or may not introduce a security breach if the site redirects\n"
-"              you to a site to which  you'll  send  your  authentication  info\n"
-"              (which is plaintext in the case of HTTP Basic authentication).\n"
+"              tion-trusted on how to change this. You can limit the amount  of\n"
+"              redirects to follow by using the --max-redirs option.\n"
 "\n"
-"       -m, --max-time <seconds>\n"
-"              Maximum  time  in  seconds that you allow the whole operation to\n"
+"              When  curl follows a redirect and the request is not a plain GET\n"
+"              (for example POST or PUT), it will do the following request with\n"
+"              a GET if the HTTP response was 301, 302, or 303. If the response\n"
+"              code was any other 3xx code, curl  will  re-send  the  following\n"
 , stdout);
  fputs(
-"              take.  This is useful for preventing your batch jobs from  hang-\n"
-"              ing  for  hours due to slow networks or links going down.  Since\n"
-"              7.32.0, this option accepts decimal values, but the actual time-\n"
-"              out will decrease in accuracy as the specified timeout increases\n"
-"              in decimal precision.  See also the --connect-timeout option.\n"
+"              request using the same unmodified method.\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
+"              You  can  tell  curl to not change the non-GET request method to\n"
+"              GET after a 30x response by  using  the  dedicated  options  for\n"
+"              that: --post301, --post302 and --post303.\n"
 "\n"
-, stdout);
- fputs(
 "       --login-options <options>\n"
-"              Specify the login options to use during server authentication.\n"
+"              (IMAP  POP3 SMTP) Specify the login options to use during server\n"
+"              authentication.\n"
 "\n"
 "              You can use the  login  options  to  specify  protocol  specific\n"
+, stdout);
+ fputs(
 "              options  that may be used during authentication. At present only\n"
 "              IMAP, POP3 and SMTP support login options. For more  information\n"
 "              about  the  login options please see RFC 2384, RFC 5092 and IETF\n"
-"              draft draft-earhart-url-smtp-00.txt (Added in 7.34.0).\n"
+"              draft draft-earhart-url-smtp-00.txt\n"
 "\n"
-, stdout);
- fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
+"              Added in 7.34.0.\n"
+"\n"
 "       --mail-auth <address>\n"
+, stdout);
+ fputs(
 "              (SMTP) Specify a single address. This will be  used  to  specify\n"
 "              the  authentication  address  (identity)  of a submitted message\n"
 "              that is being relayed to another server.\n"
 "\n"
-"              (Added in 7.25.0)\n"
+"              See also --mail-rcpt and --mail-from. Added in 7.25.0.\n"
 "\n"
 "       --mail-from <address>\n"
 "              (SMTP) Specify a single address that the given mail  should  get\n"
 "              sent from.\n"
 "\n"
+"              See also --mail-rcpt and --mail-auth. Added in 7.20.0.\n"
+"\n"
+, stdout);
+ fputs(
+"       --mail-rcpt <address>\n"
+"              (SMTP) Specify a single address, user name or mailing list name.\n"
+"              Repeat this option several times to send to multiple recipients.\n"
+"              When performing a mail transfer, the recipient should specify  a\n"
+"              valid email address to send the mail to.\n"
+"\n"
+"              When  performing  an  address  verification  (VRFY command), the\n"
+"              recipient should be specified as the user name or user name  and\n"
 , stdout);
  fputs(
-"              (Added in 7.20.0)\n"
+"              domain (as per Section 3.5 of RFC5321). (Added in 7.34.0)\n"
+"\n"
+"              When performing a mailing list expand (EXPN command), the recip-\n"
+"              ient should be specified using the mailing list  name,  such  as\n"
+"              \"Friends\" or \"London-Office\".  (Added in 7.34.0)\n"
+"\n"
+"              Added in 7.20.0.\n"
+"\n"
+"       -M, --manual\n"
+"              Manual. Display the huge help text.\n"
 "\n"
 "       --max-filesize <bytes>\n"
+, stdout);
+ fputs(
 "              Specify  the  maximum  size (in bytes) of a file to download. If\n"
 "              the file requested is larger than this value, the transfer  will\n"
 "              not start and curl will return with exit code 63.\n"
 "\n"
 "              NOTE:  The  file size is not always known prior to download, and\n"
 "              for such files this option has no effect even if the file trans-\n"
+"              fer  ends  up  being larger than this given limit. This concerns\n"
 , stdout);
  fputs(
-"              fer  ends  up  being larger than this given limit. This concerns\n"
 "              both FTP and HTTP transfers.\n"
 "\n"
-"       --mail-rcpt <address>\n"
-"              (SMTP) Specify a single address, user name or mailing list name.\n"
-"              Repeat this option several times to send to multiple recipients.\n"
-"              When  performing a mail transfer, the recipient should specify a\n"
-"              valid email address to send the mail to. (Added in 7.20.0)\n"
+"              See also --limit-rate.\n"
+"\n"
+"       --max-redirs <num>\n"
+"              (HTTP) Set maximum  number  of  redirection-followings  allowed.\n"
+"              When  -L,  --location is used, is used to prevent curl from fol-\n"
+"              lowing redirections \"in absurdum\". By default, the limit is  set\n"
+"              to 50 redirections. Set this option to -1 to make it unlimited.\n"
 "\n"
 , stdout);
  fputs(
-"              When performing an  address  verification  (VRFY  command),  the\n"
-"              recipient  should be specified as the user name or user name and\n"
-"              domain (as per Section 3.5 of RFC5321). (Added in 7.34.0)\n"
-"\n"
-"              When performing a mailing list expand (EXPN command), the recip-\n"
-"              ient  should  be  specified using the mailing list name, such as\n"
-"              \"Friends\" or \"London-Office\".  (Added in 7.34.0)\n"
+"              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --max-redirs <num>\n"
+"       -m, --max-time <time>\n"
+"              Maximum  time  in  seconds that you allow the whole operation to\n"
+"              take.  This is useful for preventing your batch jobs from  hang-\n"
+"              ing  for  hours due to slow networks or links going down.  Since\n"
+"              7.32.0, this option accepts decimal values, but the actual time-\n"
 , stdout);
  fputs(
-"              Set maximum number of  redirection-followings  allowed.  If  -L,\n"
-"              --location is used, this option can be used to prevent curl from\n"
-"              following redirections \"in absurdum\". By default, the  limit  is\n"
-"              set  to 50 redirections. Set this option to -1 to make it limit-\n"
-"              less.\n"
+"              out will decrease in accuracy as the specified timeout increases\n"
+"              in decimal precision.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
+"              See also --connect-timeout.\n"
+"\n"
 "       --metalink\n"
-, stdout);
- fputs(
 "              This option can tell curl to parse and process a  given  URI  as\n"
 "              Metalink  file  (both  version 3 and 4 (RFC 5854) are supported)\n"
 "              and make use of the mirrors listed within for failover if  there\n"
+, stdout);
+ fputs(
 "              are  errors (such as the file or server not being available). It\n"
 "              will also verify the hash of the file after  the  download  com-\n"
 "              pletes.  The Metalink file itself is downloaded and processed in\n"
-, stdout);
- fputs(
 "              memory and not stored in the local file system.\n"
 "\n"
 "              Example to use a remote Metalink file:\n"
 "\n"
-"              curl --metalink http://www.example.com/example.metalink\n"
+"               curl --metalink http://www.example.com/example.metalink\n"
 "\n"
+, stdout);
+ fputs(
 "              To use a Metalink file in the local file system, use FILE proto-\n"
 "              col (file://):\n"
 "\n"
-"              curl --metalink file://example.metalink\n"
+"               curl --metalink file://example.metalink\n"
 "\n"
 "              Please  note  that if FILE protocol is disabled, there is no way\n"
-, stdout);
- fputs(
 "              to use a local Metalink file at the time of this  writing.  Also\n"
-"              note  that  if  --metalink  and  --include  are  used  together,\n"
+"              note  that  if  --metalink  and -i, --include are used together,\n"
 "              --include will be ignored. This is because including headers  in\n"
+, stdout);
+ fputs(
 "              the  response  will break Metalink parser and if the headers are\n"
 "              included in the file described in Metalink file, hash check will\n"
 "              fail.\n"
 "\n"
-"              (Added in 7.27.0, if built against the libmetalink library.)\n"
+"              --metalink  requires  that  the  underlying libcurl was built to\n"
+"              support metalink. Added in 7.27.0.\n"
 "\n"
+"       --negotiate\n"
+"              (HTTP) Enables Negotiate (SPNEGO) authentication.\n"
+"\n"
+"              This option requires a library built with GSS-API or  SSPI  sup-\n"
 , stdout);
  fputs(
+"              port.  Use  -V,  --version  to  see  if  your curl supports GSS-\n"
+"              API/SSPI or SPNEGO.\n"
+"\n"
+"              When using this option, you must also provide a fake -u,  --user\n"
+"              option  to  activate the authentication code properly. Sending a\n"
+"              '-u :' is enough as the user name  and  password  from  the  -u,\n"
+"              --user option aren't actually used.\n"
+"\n"
+"              If  this  option  is  used  several times, only the first one is\n"
+, stdout);
+ fputs(
+"              used.\n"
+"\n"
+"              See also --basic and --ntlm and --anyauth and --proxy-negotiate.\n"
+"\n"
+"       --netrc-file <filemame>\n"
+"              This option is similar to -n, --netrc, except that  you  provide\n"
+"              the  path  (absolute  or  relative)  to the netrc file that Curl\n"
+"              should use.  You can only specify one netrc file per invocation.\n"
+"              If  several --netrc-file options are provided, the last one will\n"
+"              be used.\n"
+"\n"
+, stdout);
+ fputs(
+"              It will abide by --netrc-optional if specified.\n"
+"\n"
+"              This option overrides -n, --netrc. Added in 7.21.5.\n"
+"\n"
+"       --netrc-optional\n"
+"              Very similar to -n, --netrc, but this option  makes  the  .netrc\n"
+"              usage optional and not mandatory as the -n, --netrc option does.\n"
+"\n"
+"              See also --netrc-file. This option overrides -n, --netrc.\n"
+"\n"
 "       -n, --netrc\n"
 "              Makes  curl  scan  the  .netrc  (_netrc  on Windows) file in the\n"
+, stdout);
+ fputs(
 "              user's home directory for login name and password. This is typi-\n"
 "              cally  used for FTP on Unix. If used with HTTP, curl will enable\n"
 "              user authentication. See netrc(5) ftp(1) for details on the file\n"
 "              format.  Curl  will  not  complain if that file doesn't have the\n"
 "              right permissions (it should not be either world- or group-read-\n"
-, stdout);
- fputs(
 "              able).  The environment variable \"HOME\" is used to find the home\n"
 "              directory.\n"
 "\n"
+, stdout);
+ fputs(
 "              A quick and very simple example of how  to  setup  a  .netrc  to\n"
 "              allow  curl to FTP to the machine host.domain.com with user name\n"
 "              'myself' and password 'secret' should look similar to:\n"
 "\n"
 "              machine host.domain.com login myself password secret\n"
 "\n"
-"       -N, --no-buffer\n"
+"       -:, --next\n"
+"              Tells curl to use a separate operation for the following URL and\n"
+"              associated   options.  This  allows  you  to  send  several  URL\n"
 , stdout);
  fputs(
-"              Disables the buffering of the output stream. In normal work sit-\n"
-"              uations,  curl  will  use a standard buffered output stream that\n"
-"              will have the effect that it will output the data in chunks, not\n"
-"              necessarily  exactly  when  the data arrives.  Using this option\n"
-"              will disable that buffering.\n"
+"              requests, each with their own  specific  options,  for  example,\n"
+"              such as different user names or custom requests for each.\n"
 "\n"
-"              Note that this is the negated option name  documented.  You  can\n"
-"              thus use --buffer to enforce the buffering.\n"
-"\n"
-, stdout);
- fputs(
-"       --netrc-file\n"
-"              This  option  is similar to --netrc, except that you provide the\n"
-"              path (absolute or relative) to the netrc file that  Curl  should\n"
-"              use.   You  can  only  specify one netrc file per invocation. If\n"
-"              several --netrc-file options are provided,  only  the  last  one\n"
-"              will be used.  (Added in 7.21.5)\n"
+"              -:,  --next  will  reset  all local options and only global ones\n"
+"              will have their values survive over to the  operation  following\n"
+"              the -:, --next instruction. Global options include -v, --verbose\n"
+"              and --fail-early.\n"
 "\n"
-"              This  option  overrides  any use of --netrc as they are mutually\n"
 , stdout);
  fputs(
-"              exclusive.  It will also abide by --netrc-optional if specified.\n"
+"              For example, you can do both a GET and a POST in a  single  com-\n"
+"              mand line:\n"
 "\n"
-"       --netrc-optional\n"
-"              Very similar to --netrc, but this option makes the .netrc  usage\n"
-"              optional and not mandatory as the --netrc option does.\n"
-"\n"
-"       --negotiate\n"
-"              (HTTP) Enables Negotiate (SPNEGO) authentication.\n"
+"               curl www1.example.com --next -d postthis www2.example.com\n"
 "\n"
-"              If  you  want to enable Negotiate (SPNEGO) for proxy authentica-\n"
-"              tion, then use --proxy-negotiate.\n"
+"              Added in 7.36.0.\n"
 "\n"
+"       --no-alpn\n"
+"              (HTTPS)  Disable  the  ALPN  TLS  extension.  ALPN is enabled by\n"
+"              default if libcurl was built with an SSL library  that  supports\n"
+"              ALPN.  ALPN is used by a libcurl that supports HTTP/2 to negoti-\n"
 , stdout);
  fputs(
-"              This option requires a library built with GSS-API or  SSPI  sup-\n"
-"              port.  Use  -V,  --version  to  see  if  your curl supports GSS-\n"
-"              API/SSPI and SPNEGO.\n"
+"              ate HTTP/2 support with the server during https sessions.\n"
 "\n"
-"              When using this option, you must also provide a fake -u,  --user\n"
-"              option  to  activate the authentication code properly. Sending a\n"
-"              '-u :' is enough as the user  name  and  password  from  the  -u\n"
-"              option aren't actually used.\n"
+"              See also --no-npn  and  --http2.  --no-alpn  requires  that  the\n"
+"              underlying libcurl was built to support TLS. Added in 7.36.0.\n"
 "\n"
+"       -N, --no-buffer\n"
+"              Disables the buffering of the output stream. In normal work sit-\n"
+"              uations, curl will use a standard buffered  output  stream  that\n"
+"              will have the effect that it will output the data in chunks, not\n"
 , stdout);
  fputs(
-"              If  this  option  is  used  several times, only the first one is\n"
-"              used.\n"
+"              necessarily exactly when the data arrives.   Using  this  option\n"
+"              will disable that buffering.\n"
+"\n"
+"              Note  that  this  is the negated option name documented. You can\n"
+"              thus use --buffer to enforce the buffering.\n"
 "\n"
 "       --no-keepalive\n"
-"              Disables the use of keepalive messages on the TCP connection, as\n"
-"              by default curl enables them.\n"
+"              Disables the use of keepalive messages on  the  TCP  connection.\n"
+"              curl otherwis enables them by default.\n"
 "\n"
 "              Note  that  this  is the negated option name documented. You can\n"
+, stdout);
+ fputs(
 "              thus use --keepalive to enforce keepalive.\n"
 "\n"
-"       --no-sessionid\n"
-"              (SSL) Disable curl's use of SSL session-ID caching.  By  default\n"
+"       --no-npn\n"
+"              (HTTPS) Disable the NPN TLS extension. NPN is enabled by default\n"
+"              if  libcurl was built with an SSL library that supports NPN. NPN\n"
+"              is used by a libcurl that supports HTTP/2  to  negotiate  HTTP/2\n"
+"              support with the server during https sessions.\n"
+"\n"
+"              See  also  --no-alpn  and  --http2.  --no-npn  requires that the\n"
 , stdout);
  fputs(
+"              underlying libcurl was built to support TLS. Added in 7.36.0.\n"
+"\n"
+"       --no-sessionid\n"
+"              (TLS) Disable curl's use of SSL session-ID caching.  By  default\n"
 "              all  transfers are done using the cache. Note that while nothing\n"
 "              should ever get hurt by attempting  to  reuse  SSL  session-IDs,\n"
 "              there seem to be broken SSL implementations in the wild that may\n"
-"              require you to disable this in order for you to succeed.  (Added\n"
-"              in 7.16.0)\n"
-"\n"
-"              Note  that  this  is the negated option name documented. You can\n"
-"              thus use --sessionid to enforce session-ID caching.\n"
+"              require you to disable this in order for you to succeed.\n"
 "\n"
 , stdout);
  fputs(
+"              Note that this is the negated option name  documented.  You  can\n"
+"              thus use --sessionid to enforce session-ID caching.\n"
+"\n"
+"              Added in 7.16.0.\n"
+"\n"
 "       --noproxy <no-proxy-list>\n"
-"              Comma-separated list of hosts which do not use a proxy,  if  one\n"
-"              is  specified.  The only wildcard is a single * character, which\n"
+"              Comma-separated  list  of hosts which do not use a proxy, if one\n"
+"              is specified.  The only wildcard is a single * character,  which\n"
 "              matches all hosts, and effectively disables the proxy. Each name\n"
-"              in  this  list  is matched as either a domain which contains the\n"
-"              hostname, or the hostname itself. For example,  local.com  would\n"
 , stdout);
  fputs(
-"              match   local.com,  local.com:80,  and  www.local.com,  but  not\n"
-"              www.notlocal.com.  (Added in 7.19.4).\n"
+"              in this list is matched as either a domain  which  contains  the\n"
+"              hostname,  or  the hostname itself. For example, local.com would\n"
+"              match  local.com,  local.com:80,  and  www.local.com,  but   not\n"
+"              www.notlocal.com.\n"
 "\n"
-"       --connect-to <host:port:connect-to-host:connect-to-port>\n"
-"              For a request to the given \"host:port\" pair,  connect  to  \"con-\n"
-"              nect-to-host:connect-to-port\"  instead.   This  is  suitable  to\n"
-"              direct the request at a specific  server,  e.g.  at  a  specific\n"
-, stdout);
- fputs(
-"              cluster  node in a cluster of servers.  This option is only used\n"
-"              to establish the network connection.  It  does  NOT  affect  the\n"
-"              hostname/port  that  is  used for TLS/SSL (e.g. SNI, certificate\n"
-"              verification) or for  the  application  protocols.   \"host\"  and\n"
-"              \"port\"  may be the empty string, meaning \"any host/port\".  \"con-\n"
-"              nect-to-host\"  and  \"connect-to-port\"  may  also  be  the  empty\n"
+"              Added in 7.19.4.\n"
+"\n"
+"       --ntlm-wb\n"
+"              (HTTP) Enables NTLM much in the style --ntlm does, but hand over\n"
+"              the authentication to the separate binary  ntlmauth  application\n"
 , stdout);
  fputs(
-"              string,  meaning  \"use  the request's original host/port\".  This\n"
-"              option can be used many times to add many connect rules.  (Added\n"
-"              in 7.49.0).\n"
+"              that is executed when needed.\n"
+"\n"
+"              See also --ntlm and --proxy-ntlm.\n"
 "\n"
 "       --ntlm (HTTP)  Enables  NTLM  authentication.  The  NTLM authentication\n"
 "              method was designed by Microsoft and is used by IIS web servers.\n"
 "              It  is a proprietary protocol, reverse-engineered by clever peo-\n"
-, stdout);
- fputs(
 "              ple and implemented in curl based on their efforts. This kind of\n"
 "              behavior  should  not be endorsed, you should encourage everyone\n"
+, stdout);
+ fputs(
 "              who uses NTLM to switch to a public and  documented  authentica-\n"
 "              tion method instead, such as Digest.\n"
 "\n"
 "              If  you  want to enable NTLM for your proxy authentication, then\n"
 "              use --proxy-ntlm.\n"
 "\n"
-"              This option requires a library built with SSL support.  Use  -V,\n"
+"              If this option is used several times,  only  the  first  one  is\n"
+"              used.\n"
+"\n"
+"              See  also  --proxy-ntlm.  --ntlm  requires  that  the underlying\n"
 , stdout);
  fputs(
-"              --version to see if your curl supports NTLM.\n"
+"              libcurl was built to support TLS. This option overrides  --basic\n"
+"              and --negotiated and --digest and --anyauth.\n"
 "\n"
-"              If  this  option  is  used  several times, only the first one is\n"
-"              used.\n"
+"       --oauth2-bearer\n"
+"              (IMAP  POP3  SMTP) Specify the Bearer Token for OAUTH 2.0 server\n"
+"              authentication. The Bearer Token is used in conjunction with the\n"
+"              user  name  which  can  be specified as part of the --url or -u,\n"
+"              --user options.\n"
 "\n"
-"       --ntlm-wb\n"
-"              (HTTP) Enables NTLM much in the style --ntlm does, but hand over\n"
-"              the  authentication  to the separate binary ntlmauth application\n"
-"              that is executed when needed.\n"
+, stdout);
+ fputs(
+"              The Bearer Token and user name are formatted  according  to  RFC\n"
+"              6750.\n"
+"\n"
+"              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -o, --output <file>\n"
 "              Write output to <file> instead of stdout. If you are using {} or\n"
+"              [] to fetch multiple documents, you can use '#'  followed  by  a\n"
+"              number  in  the <file> specifier. That variable will be replaced\n"
 , stdout);
  fputs(
-"              []  to  fetch  multiple documents, you can use '#' followed by a\n"
-"              number in the <file> specifier. That variable will  be  replaced\n"
 "              with the current string for the URL being fetched. Like in:\n"
 "\n"
-"                curl http://{one,two}.example.com -o \"file_#1.txt\"\n"
+"               curl http://{one,two}.example.com -o \"file_#1.txt\"\n"
 "\n"
 "              or use several variables like:\n"
 "\n"
-"                curl http://{site,host}.host[1-5].com -o \"#1_#2\"\n"
+"               curl http://{site,host}.host[1-5].com -o \"#1_#2\"\n"
 "\n"
-"              You  may use this option as many times as the number of URLs you\n"
-, stdout);
- fputs(
-"              have. For example, if you specify two URLs on the  same  command\n"
+"              You may use this option as many times as the number of URLs  you\n"
+"              have.  For  example, if you specify two URLs on the same command\n"
 "              line, you can use it like this:\n"
 "\n"
+, stdout);
+ fputs(
 "                curl -o aa example.com -o bb example.net\n"
 "\n"
-"              and  the  order  of  the -o options and the URLs doesn't matter,\n"
-"              just that the first -o is for the first URL and so  on,  so  the\n"
+"              and the order of the -o options and  the  URLs  doesn't  matter,\n"
+"              just  that  the  first -o is for the first URL and so on, so the\n"
 "              above command line can also be written as\n"
 "\n"
 "                curl example.com example.net -o aa -o bb\n"
 "\n"
+"              See also the --create-dirs option to create the  local  directo-\n"
+"              ries  dynamically.  Specifying the output as '-' (a single dash)\n"
 , stdout);
  fputs(
-"              See  also  the --create-dirs option to create the local directo-\n"
-"              ries dynamically. Specifying the output as '-' (a  single  dash)\n"
 "              will force the output to be done to stdout.\n"
 "\n"
-"       -O, --remote-name\n"
-"              Write  output to a local file named like the remote file we get.\n"
-"              (Only the file part of the remote file is used, the path is  cut\n"
-"              off.)\n"
+"              See  also  -O,  --remote-name  and  --remote-name-all  and   -J,\n"
+"              --remote-header-name.\n"
 "\n"
-"              The  file will be saved in the current working directory. If you\n"
-, stdout);
- fputs(
-"              want the file saved in a  different  directory,  make  sure  you\n"
-"              change  the  current working directory before invoking curl with\n"
-"              this option.\n"
+"       --pass <phrase>\n"
+"              (SSH TLS) Passphrase for the private key\n"
 "\n"
-"              The remote file name to use for saving  is  extracted  from  the\n"
-"              given  URL,  nothing  else,  and if it already exists it will be\n"
-"              overwritten. If you want the server to be  able  to  choose  the\n"
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"       --path-as-is\n"
+"              Tell  curl  to  not handle sequences of /../ or /./ in the given\n"
 , stdout);
  fputs(
-"              file name refer to -J, --remote-header-name which can be used in\n"
-"              addition to this option. If the server chooses a file  name  and\n"
-"              that name already exists it will not be overwritten.\n"
+"              URL path. Normally curl will squash or merge them  according  to\n"
+"              standards but with this option set you tell it not to do that.\n"
 "\n"
-"              There is no URL decoding done on the file name. If it has %20 or\n"
-"              other URL encoded parts of the name, they will end up  as-is  as\n"
-"              file name.\n"
+"              Added in 7.42.0.\n"
 "\n"
-"              You  may use this option as many times as the number of URLs you\n"
+"       --pinnedpubkey <hashes>\n"
+"              (TLS)  Tells  curl  to  use  the  specified  public key file (or\n"
+"              hashes) to verify the peer. This can be a path to a  file  which\n"
+"              contains a single public key in PEM or DER format, or any number\n"
 , stdout);
  fputs(
-"              have.\n"
+"              of base64 encoded sha256 hashes preceded by 'sha256//' and sepa-\n"
+"              rated by ';'\n"
 "\n"
-"       --oauth2-bearer\n"
-"              (IMAP, POP3, SMTP) Specify the Bearer Token for OAUTH 2.0 server\n"
-"              authentication. The Bearer Token is used in conjunction with the\n"
-"              user name which can be specified as part of  the  --url  or  -u,\n"
-"              --user options.\n"
+"              When  negotiating  a  TLS  or SSL connection, the server sends a\n"
+"              certificate indicating its identity. A public key  is  extracted\n"
+"              from  this certificate and if it does not exactly match the pub-\n"
+"              lic key provided to this option, curl will abort the  connection\n"
+"              before sending or receiving any data.\n"
 "\n"
-"              The  Bearer  Token  and user name are formatted according to RFC\n"
-"              6750.\n"
+, stdout);
+ fputs(
+"              PEM/DER support:\n"
+"                7.39.0: OpenSSL, GnuTLS and GSKit\n"
+"                7.43.0: NSS and wolfSSL/CyaSSL\n"
+"                7.47.0: mbedtls\n"
+"                7.49.0: PolarSSL sha256 support:\n"
+"                7.44.0: OpenSSL, GnuTLS, NSS and wolfSSL/CyaSSL.\n"
+"                7.47.0: mbedtls\n"
+"                7.49.0: PolarSSL Other SSL backends not supported.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
+"       --post301\n"
 , stdout);
  fputs(
-"       --proxy-header <header>\n"
-"              (HTTP) Extra header to include in the request when sending  HTTP\n"
-"              to a proxy. You may specify any number of extra headers. This is\n"
-"              the equivalent option to -H, --header but is for proxy  communi-\n"
-"              cation  only  like  in CONNECT requests when you want a separate\n"
-"              header sent to the proxy to what is sent to  the  actual  remote\n"
-"              host.\n"
+"              (HTTP) Tells curl to respect RFC 7231/6.4.2 and not convert POST\n"
+"              requests into GET requests when following a 301 redirection. The\n"
+"              non-RFC  behaviour  is  ubiquitous in web browsers, so curl does\n"
+"              the conversion by default to maintain  consistency.  However,  a\n"
+"              server  may  require  a POST to remain a POST after such a redi-\n"
+"              rection. This option is meaningful only when using  -L,  --loca-\n"
+"              tion.\n"
 "\n"
 , stdout);
  fputs(
-"              curl  will  make  sure  that each header you add/replace is sent\n"
-"              with the proper end-of-line marker, you should thus not add that\n"
-"              as a part of the header content: do not add newlines or carriage\n"
-"              returns, they will only mess things up for you.\n"
+"              See  also  --post302  and --post303 and -L, --location. Added in\n"
+"              7.17.1.\n"
 "\n"
-"              Headers specified with this  option  will  not  be  included  in\n"
-"              requests that curl knows will not be sent to a proxy.\n"
+"       --post302\n"
+"              (HTTP) Tells curl to respect RFC 7231/6.4.3 and not convert POST\n"
+"              requests into GET requests when following a 302 redirection. The\n"
+"              non-RFC behaviour is ubiquitous in web browsers,  so  curl  does\n"
+"              the  conversion  by  default to maintain consistency. However, a\n"
+, stdout);
+ fputs(
+"              server may require a POST to remain a POST after  such  a  redi-\n"
+"              rection.  This  option is meaningful only when using -L, --loca-\n"
+"              tion.\n"
 "\n"
+"              See also --post301 and --post303 and -L,  --location.  Added  in\n"
+"              7.19.1.\n"
+"\n"
+"       --post303\n"
+"              (HTTP) Tells curl to respect RFC 7231/6.4.4 and not convert POST\n"
+"              requests into GET requests when following a 303 redirection. The\n"
 , stdout);
  fputs(
-"              This  option  can  be  used multiple times to add/replace/remove\n"
-"              multiple headers.\n"
-"              (Added in 7.37.0)\n"
-"       -p, --proxytunnel\n"
-"              When an HTTP proxy is used (-x, --proxy), this option will cause\n"
-"              non-HTTP  protocols  to  attempt  to  tunnel  through  the proxy\n"
-"              instead of merely using it to do HTTP-like operations. The  tun-\n"
-"              nel  approach  is  made  with the HTTP proxy CONNECT request and\n"
+"              non-RFC  behaviour  is  ubiquitous in web browsers, so curl does\n"
+"              the conversion by default to maintain  consistency.  However,  a\n"
+"              server  may  require  a POST to remain a POST after such a redi-\n"
+"              rection. This option is meaningful only when using  -L,  --loca-\n"
+"              tion.\n"
+"\n"
+"              See  also  --post302  and --post301 and -L, --location. Added in\n"
+"              7.26.0.\n"
+"\n"
+"       --preproxy [protocol://]host[:port]\n"
 , stdout);
  fputs(
-"              requires that the proxy allows direct connect to the remote port\n"
-"              number curl wants to tunnel through to.\n"
+"              Use the specified proxy before connecting to the ordinary proxy.\n"
+"              Hence pre proxy. A pre proxy must be a SOCKS speaking proxy.\n"
 "\n"
-"       -P, --ftp-port <address>\n"
-"              (FTP)  Reverses  the  default initiator/listener roles when con-\n"
-"              necting with FTP. This switch makes curl  use  active  mode.  In\n"
-"              practice,  curl  then  tells  the  server to connect back to the\n"
-"              client's specified address and port, while passive mode asks the\n"
+"              The pre proxy string should be specified with a protocol:// pre-\n"
+"              fix to  specify  alternative  proxy  protocols.  Use  socks4://,\n"
+"              socks4a://,  socks5://  or  socks5h://  to  request the specific\n"
+"              SOCKS version to be used. No protocol specified will  make  curl\n"
 , stdout);
  fputs(
-"              server  to  setup  an  IP address and port for it to connect to.\n"
-"              <address> should be one of:\n"
+"              default to SOCKS4.\n"
 "\n"
-"              interface\n"
-"                     i.e \"eth0\" to specify which interface's  IP  address  you\n"
-"                     want to use (Unix only)\n"
+"              If  the  port number is not specified in the proxy string, it is\n"
+"              assumed to be 1080.\n"
 "\n"
-"              IP address\n"
-"                     i.e \"192.168.10.1\" to specify the exact IP address\n"
+"              User and password that might be provided in the proxy string are\n"
+"              URL  decoded by curl. This allows you to pass in special charac-\n"
+"              ters such as @ by using %40 or pass in a colon with %3a.\n"
 "\n"
-"              host name\n"
-"                     i.e \"my.host.domain\" to specify the machine\n"
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"              Added in 7.52.0.\n"
 "\n"
 , stdout);
  fputs(
-"              -      make  curl  pick the same IP address that is already used\n"
-"                     for the control connection\n"
+"       -#, --progress-bar\n"
+"              Make curl display transfer progress as  a  simple  progress  bar\n"
+"              instead of the standard, more informational, meter.\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
-"              Disable  the use of PORT with --ftp-pasv. Disable the attempt to\n"
-"              use the EPRT command instead of PORT  by  using  --disable-eprt.\n"
-"              EPRT is really PORT++.\n"
+"              This  progress  bar draws a single line of '#' characters across\n"
+"              the screen and shows a percentage if the transfer size is known.\n"
+"              For  transfers  without a known size, it will instead output one\n"
+"              '#' character for every 1024 bytes transferred.\n"
 "\n"
-"              Starting in 7.19.5, you can append \":[start]-[end]\" to the right\n"
 , stdout);
  fputs(
-"              of the address, to tell curl what TCP port range  to  use.  That\n"
-"              means you specify a port range, from a lower to a higher number.\n"
-"              A single number works as well, but do note that it increases the\n"
-"              risk of failure since the port may not be available.\n"
+"       --proto-default <protocol>\n"
+"              Tells curl to use protocol for any URL missing a scheme name.\n"
 "\n"
-"       --pass <phrase>\n"
-"              (SSL/SSH) Passphrase for the private key\n"
+"              Example:\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
+"               curl --proto-default https ftp.mozilla.org\n"
 "\n"
-"       --path-as-is\n"
-, stdout);
- fputs(
-"              Tell  curl  to  not handle sequences of /../ or /./ in the given\n"
-"              URL path. Normally curl will squash or merge them  according  to\n"
-"              standards but with this option set you tell it not to do that.\n"
+"              An unknown or unsupported  protocol  causes  error  CURLE_UNSUP-\n"
+"              PORTED_PROTOCOL (1).\n"
 "\n"
-"              (Added in 7.42.0)\n"
+"              This option does not change the default proxy protocol (http).\n"
 "\n"
-"       --post301\n"
-"              (HTTP) Tells curl to respect RFC 7230/6.4.2 and not convert POST\n"
-"              requests into GET requests when following a 301 redirection. The\n"
+"              Without  this  option curl would make a guess based on the host,\n"
 , stdout);
  fputs(
-"              non-RFC  behaviour  is  ubiquitous in web browsers, so curl does\n"
-"              the conversion by default to maintain  consistency.  However,  a\n"
-"              server  may  require  a POST to remain a POST after such a redi-\n"
-"              rection. This option is meaningful only when using  -L,  --loca-\n"
-"              tion (Added in 7.17.1)\n"
+"              see --url for details.\n"
 "\n"
-"       --post302\n"
-"              (HTTP) Tells curl to respect RFC 7230/6.4.3 and not convert POST\n"
-, stdout);
- fputs(
-"              requests into GET requests when following a 302 redirection. The\n"
-"              non-RFC  behaviour  is  ubiquitous in web browsers, so curl does\n"
-"              the conversion by default to maintain  consistency.  However,  a\n"
-"              server  may  require  a POST to remain a POST after such a redi-\n"
-"              rection. This option is meaningful only when using  -L,  --loca-\n"
-"              tion (Added in 7.19.1)\n"
+"              Added in 7.45.0.\n"
+"\n"
+"       --proto-redir <protocols>\n"
+"              Tells curl to limit what protocols it may use on redirect.  Pro-\n"
+"              tocols  denied by --proto are not overridden by this option. See\n"
+"              --proto for how protocols are represented.\n"
+"\n"
+"              Example, allow only HTTP and HTTPS on redirect:\n"
+"\n"
+"               curl --proto-redir -all,http,https http://example.com\n"
 "\n"
-"       --post303\n"
-, stdout);
- fputs(
-"              (HTTP) Tells curl to respect RFC 7230/6.4.4 and not convert POST\n"
-"              requests into GET requests when following a 303 redirection. The\n"
-"              non-RFC  behaviour  is  ubiquitous in web browsers, so curl does\n"
-"              the conversion by default to maintain  consistency.  However,  a\n"
-"              server  may  require  a POST to remain a POST after such a redi-\n"
-"              rection. This option is meaningful only when using  -L,  --loca-\n"
 , stdout);
  fputs(
-"              tion (Added in 7.26.0)\n"
+"              By default curl will allow all protocols on redirect except sev-\n"
+"              eral  disabled  for  security reasons: Since 7.19.4 FILE and SCP\n"
+"              are disabled, and since 7.40.0 SMB and SMBS are  also  disabled.\n"
+"              Specifying  all  or  +all  enables  all  protocols  on redirect,\n"
+"              including those disabled for security.\n"
+"\n"
+"              Added in 7.20.2.\n"
 "\n"
 "       --proto <protocols>\n"
-"              Tells  curl  to limit what protocols it may use in the transfer.\n"
-"              Protocols are evaluated left to right, are comma separated,  and\n"
+, stdout);
+ fputs(
+"              Tells curl to limit what protocols it may use in  the  transfer.\n"
+"              Protocols  are evaluated left to right, are comma separated, and\n"
 "              are each a protocol name or\n"
 "\n"
 "              +  Permit this protocol in addition to protocols already permit-\n"
 "                 ted (this is the default if no modifier is used).\n"
 "\n"
-"              -  Deny this protocol, removing it from the  list  of  protocols\n"
-, stdout);
- fputs(
+"              -  Deny  this  protocol,  removing it from the list of protocols\n"
 "                 already permitted.\n"
 "\n"
-"              =  Permit  only this protocol (ignoring the list already permit-\n"
-"                 ted), though subject  to  later  modification  by  subsequent\n"
+, stdout);
+ fputs(
+"              =  Permit only this protocol (ignoring the list already  permit-\n"
+"                 ted),  though  subject  to  later  modification by subsequent\n"
 "                 entries in the comma separated list.\n"
 "\n"
 "              For example:\n"
 "\n"
 "              --proto -ftps  uses the default protocols, but disables ftps\n"
 "\n"

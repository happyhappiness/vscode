<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_169.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURL<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">curl_easy_init<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">res<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">UrlData<pos:position pos:line="4" pos:column="17"/></name></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">data<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><call><name pos:line="6" pos:column="6">curl_init<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">()<pos:position pos:line="6" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="18"/></condition><then pos:line="6" pos:column="18">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">NULL<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></return></block></then></if>

  <comment type="block" pos:line="9" pos:column="3">/* We use curl_open() with undefined URL so far */</comment>
  <expr_stmt><expr><name pos:line="10" pos:column="3">res<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">curl_open<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><operator pos:line="10" pos:column="19">(<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="20">CURL<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><operator pos:line="10" pos:column="26">*<pos:position pos:line="10" pos:column="27"/></operator><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator><operator pos:line="10" pos:column="28">&amp;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="29">data<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="35">NULL<pos:position pos:line="10" pos:column="39"/></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">res<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">!=<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">CURLE_OK<pos:position pos:line="11" pos:column="21"/></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">NULL<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="14" pos:column="3">data<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">interf<pos:position pos:line="14" pos:column="15"/></name></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">CURLI_EASY<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt> <comment type="block" pos:line="14" pos:column="30">/* mark it as an easy one */</comment>
  <return pos:line="15" pos:column="3">return <expr><name pos:line="15" pos:column="10">data<pos:position pos:line="15" pos:column="14"/></name></expr>;<pos:position pos:line="15" pos:column="15"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

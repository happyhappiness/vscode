<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_721_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">write_behind<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">testcase<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">test<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">convert<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">writebuf<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">count<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">ct<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">p<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">c<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>                          <comment type="block" pos:line="7" pos:column="35">/* current character */</comment>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">bf<pos:position pos:line="8" pos:column="12"/></name></name> <modifier pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></modifier></type><name pos:line="8" pos:column="14">b<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">tftphdr<pos:position pos:line="9" pos:column="17"/></name></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier></type><name pos:line="9" pos:column="19">dp<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">b<pos:position pos:line="11" pos:column="4"/></name> <operator pos:line="11" pos:column="5">=<pos:position pos:line="11" pos:column="6"/></operator> <operator pos:line="11" pos:column="7">&amp;<pos:position pos:line="11" pos:column="12"/></operator><name><name pos:line="11" pos:column="8">bfs<pos:position pos:line="11" pos:column="11"/></name><index pos:line="11" pos:column="11">[<expr><name pos:line="11" pos:column="12">nextone<pos:position pos:line="11" pos:column="19"/></name></expr>]<pos:position pos:line="11" pos:column="20"/></index></name></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name><name pos:line="12" pos:column="6">b<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">counter<pos:position pos:line="12" pos:column="16"/></name></name> <operator pos:line="12" pos:column="17">&lt;<pos:position pos:line="12" pos:column="21"/></operator> <operator pos:line="12" pos:column="19">-<pos:position pos:line="12" pos:column="20"/></operator><literal type="number" pos:line="12" pos:column="20">1<pos:position pos:line="12" pos:column="21"/></literal></expr>)<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22">            <comment type="block" pos:line="12" pos:column="34">/* anything to flush? */</comment>
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return></block></then></if>                     <comment type="block" pos:line="13" pos:column="35">/* just nop if nothing to do */</comment>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><name><name pos:line="15" pos:column="7">test<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">ofile<pos:position pos:line="15" pos:column="18"/></name></name></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19"> <block pos:line="15" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name></type> <name><name pos:line="16" pos:column="10">outfile<pos:position pos:line="16" pos:column="17"/></name><index pos:line="16" pos:column="17">[<expr><literal type="number" pos:line="16" pos:column="18">256<pos:position pos:line="16" pos:column="21"/></literal></expr>]<pos:position pos:line="16" pos:column="22"/></index></name></decl>;<pos:position pos:line="16" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">snprintf<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">outfile<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="23">sizeof<argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">outfile<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="40">"log/upload.%ld"<pos:position pos:line="17" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="58">test<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">-&gt;<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="64">testno<pos:position pos:line="17" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt>
<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">WIN32<pos:position pos:line="18" pos:column="13"/></name></cpp:ifdef>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">test<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">ofile<pos:position pos:line="19" pos:column="16"/></name></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">open<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">outfile<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="33">O_CREAT<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">|<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">O_RDWR<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">|<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="48">O_BINARY<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="58">0777<pos:position pos:line="19" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>
<cpp:else pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">else<pos:position pos:line="20" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">test<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">-&gt;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="11">ofile<pos:position pos:line="21" pos:column="16"/></name></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">open<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><name pos:line="21" pos:column="24">outfile<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">O_CREAT<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">|<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">O_RDWR<pos:position pos:line="21" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="49">0777<pos:position pos:line="21" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">(<expr><name><name pos:line="23" pos:column="8">test<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">ofile<pos:position pos:line="23" pos:column="19"/></name></name> <operator pos:line="23" pos:column="20">==<pos:position pos:line="23" pos:column="22"/></operator> <operator pos:line="23" pos:column="23">-<pos:position pos:line="23" pos:column="24"/></operator><literal type="number" pos:line="23" pos:column="24">1<pos:position pos:line="23" pos:column="25"/></literal></expr>)<pos:position pos:line="23" pos:column="26"/></condition><then pos:line="23" pos:column="26"> <block pos:line="23" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">logmsg<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><literal type="string" pos:line="24" pos:column="14">"Couldn't create and/or open file %s for upload!"<pos:position pos:line="24" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="65">outfile<pos:position pos:line="24" pos:column="72"/></name></expr></argument>)<pos:position pos:line="24" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="74"/></expr_stmt>
      <return pos:line="25" pos:column="7">return <expr><operator pos:line="25" pos:column="14">-<pos:position pos:line="25" pos:column="15"/></operator><literal type="number" pos:line="25" pos:column="15">1<pos:position pos:line="25" pos:column="16"/></literal></expr>;<pos:position pos:line="25" pos:column="17"/></return> <comment type="block" pos:line="25" pos:column="18">/* failure! */</comment>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="29" pos:column="3">count<pos:position pos:line="29" pos:column="8"/></name> <operator pos:line="29" pos:column="9">=<pos:position pos:line="29" pos:column="10"/></operator> <name><name pos:line="29" pos:column="11">b<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">counter<pos:position pos:line="29" pos:column="21"/></name></name></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>             <comment type="block" pos:line="29" pos:column="35">/* remember byte count */</comment>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">b<pos:position pos:line="30" pos:column="4"/></name><operator pos:line="30" pos:column="4">-&gt;<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="6">counter<pos:position pos:line="30" pos:column="13"/></name></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <name pos:line="30" pos:column="16">BF_FREE<pos:position pos:line="30" pos:column="23"/></name></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>           <comment type="block" pos:line="30" pos:column="35">/* reset flag */</comment>
  <expr_stmt><expr><name pos:line="31" pos:column="3">dp<pos:position pos:line="31" pos:column="5"/></name> <operator pos:line="31" pos:column="6">=<pos:position pos:line="31" pos:column="7"/></operator> <operator pos:line="31" pos:column="8">&amp;<pos:position pos:line="31" pos:column="13"/></operator><name><name pos:line="31" pos:column="9">b<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">buf<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">.<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">hdr<pos:position pos:line="31" pos:column="19"/></name></name></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="32" pos:column="3">nextone<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">nextone<pos:position pos:line="32" pos:column="21"/></name></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>             <comment type="block" pos:line="32" pos:column="35">/* incr for next time */</comment>
  <expr_stmt><expr><name pos:line="33" pos:column="3">writebuf<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <name><name pos:line="33" pos:column="14">dp<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">th_data<pos:position pos:line="33" pos:column="25"/></name></name></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>

  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><name pos:line="35" pos:column="6">count<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">&lt;=<pos:position pos:line="35" pos:column="17"/></operator> <literal type="number" pos:line="35" pos:column="15">0<pos:position pos:line="35" pos:column="16"/></literal></expr>)<pos:position pos:line="35" pos:column="17"/></condition><then pos:line="35" pos:column="17">
    <block type="pseudo"><return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">-<pos:position pos:line="36" pos:column="13"/></operator><literal type="number" pos:line="36" pos:column="13">1<pos:position pos:line="36" pos:column="14"/></literal></expr>;<pos:position pos:line="36" pos:column="15"/></return></block></then></if>                    <comment type="block" pos:line="36" pos:column="35">/* nak logic? */</comment>

  <if pos:line="38" pos:column="3">if<condition pos:line="38" pos:column="5">(<expr><name pos:line="38" pos:column="6">convert<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">==<pos:position pos:line="38" pos:column="16"/></operator> <literal type="number" pos:line="38" pos:column="17">0<pos:position pos:line="38" pos:column="18"/></literal></expr>)<pos:position pos:line="38" pos:column="19"/></condition><then pos:line="38" pos:column="19">
    <block type="pseudo"><return pos:line="39" pos:column="5">return <expr><call><name pos:line="39" pos:column="12">write<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name><name pos:line="39" pos:column="18">test<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">ofile<pos:position pos:line="39" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="31">writebuf<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="41">count<pos:position pos:line="39" pos:column="46"/></name></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="48"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="41" pos:column="3">p<pos:position pos:line="41" pos:column="4"/></name> <operator pos:line="41" pos:column="5">=<pos:position pos:line="41" pos:column="6"/></operator> <name pos:line="41" pos:column="7">writebuf<pos:position pos:line="41" pos:column="15"/></name></expr>;<pos:position pos:line="41" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="42" pos:column="3">ct<pos:position pos:line="42" pos:column="5"/></name> <operator pos:line="42" pos:column="6">=<pos:position pos:line="42" pos:column="7"/></operator> <name pos:line="42" pos:column="8">count<pos:position pos:line="42" pos:column="13"/></name></expr>;<pos:position pos:line="42" pos:column="14"/></expr_stmt>
  <while pos:line="43" pos:column="3">while<condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">ct<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">--<pos:position pos:line="43" pos:column="13"/></operator></expr>)<pos:position pos:line="43" pos:column="14"/></condition> <block pos:line="43" pos:column="15">{                   <comment type="block" pos:line="43" pos:column="35">/* loop over the buffer */</comment>
    <expr_stmt><expr><name pos:line="44" pos:column="5">c<pos:position pos:line="44" pos:column="6"/></name> <operator pos:line="44" pos:column="7">=<pos:position pos:line="44" pos:column="8"/></operator> <operator pos:line="44" pos:column="9">*<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">p<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">++<pos:position pos:line="44" pos:column="13"/></operator></expr>;<pos:position pos:line="44" pos:column="14"/></expr_stmt>                     <comment type="block" pos:line="44" pos:column="35">/* pick up a character */</comment>
    <if pos:line="45" pos:column="5">if<condition pos:line="45" pos:column="7">(<expr><name pos:line="45" pos:column="8">prevchar<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">==<pos:position pos:line="45" pos:column="19"/></operator> <literal type="char" pos:line="45" pos:column="20">'\r'<pos:position pos:line="45" pos:column="24"/></literal></expr>)<pos:position pos:line="45" pos:column="25"/></condition><then pos:line="45" pos:column="25"> <block pos:line="45" pos:column="26">{        <comment type="block" pos:line="45" pos:column="35">/* if prev char was cr */</comment>
      <if pos:line="46" pos:column="7">if<condition pos:line="46" pos:column="9">(<expr><name pos:line="46" pos:column="10">c<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">==<pos:position pos:line="46" pos:column="14"/></operator> <literal type="char" pos:line="46" pos:column="15">'\n'<pos:position pos:line="46" pos:column="19"/></literal></expr>)<pos:position pos:line="46" pos:column="20"/></condition><then pos:line="46" pos:column="20">               <comment type="block" pos:line="46" pos:column="35">/* if have cr,lf then just */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="9">lseek<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><name><name pos:line="47" pos:column="15">test<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">ofile<pos:position pos:line="47" pos:column="26"/></name></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="28">-<pos:position pos:line="47" pos:column="29"/></operator><literal type="number" pos:line="47" pos:column="29">1<pos:position pos:line="47" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="32">SEEK_CUR<pos:position pos:line="47" pos:column="40"/></name></expr></argument>)<pos:position pos:line="47" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="42"/></expr_stmt></block></then> <comment type="block" pos:line="47" pos:column="43">/* smash lf on top of the cr */</comment>
      <elseif pos:line="48" pos:column="7">else
        <if pos:line="49" pos:column="9">if<condition pos:line="49" pos:column="11">(<expr><name pos:line="49" pos:column="12">c<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">==<pos:position pos:line="49" pos:column="16"/></operator> <literal type="char" pos:line="49" pos:column="17">'\0'<pos:position pos:line="49" pos:column="21"/></literal></expr>)<pos:position pos:line="49" pos:column="22"/></condition><then pos:line="49" pos:column="22">             <comment type="block" pos:line="49" pos:column="35">/* if have cr,nul then */</comment>
          <block type="pseudo"><goto pos:line="50" pos:column="11">goto <name pos:line="50" pos:column="16">skipit<pos:position pos:line="50" pos:column="22"/></name>;<pos:position pos:line="50" pos:column="23"/></goto></block></then></if></elseif></if>            <comment type="block" pos:line="50" pos:column="35">/* just skip over the putc */</comment>
      <comment type="block" pos:line="51" pos:column="7">/* else just fall through and allow it */</comment>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="53" pos:column="5">/* formerly
       putc(c, file); */</comment>
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><literal type="number" pos:line="55" pos:column="8">1<pos:position pos:line="55" pos:column="9"/></literal> <operator pos:line="55" pos:column="10">!=<pos:position pos:line="55" pos:column="12"/></operator> <call><name pos:line="55" pos:column="13">write<pos:position pos:line="55" pos:column="18"/></name><argument_list pos:line="55" pos:column="18">(<argument><expr><name><name pos:line="55" pos:column="19">test<pos:position pos:line="55" pos:column="23"/></name><operator pos:line="55" pos:column="23">-&gt;<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="25">ofile<pos:position pos:line="55" pos:column="30"/></name></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="32">&amp;<pos:position pos:line="55" pos:column="37"/></operator><name pos:line="55" pos:column="33">c<pos:position pos:line="55" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="36">1<pos:position pos:line="55" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="39"/></condition><then pos:line="55" pos:column="39">
      <block type="pseudo"><break pos:line="56" pos:column="7">break;<pos:position pos:line="56" pos:column="13"/></break></block></then></if>
    <label><name pos:line="57" pos:column="5">skipit<pos:position pos:line="57" pos:column="11"/></name>:<pos:position pos:line="57" pos:column="12"/></label>
    <expr_stmt><expr><name pos:line="58" pos:column="5">prevchar<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">=<pos:position pos:line="58" pos:column="15"/></operator> <name pos:line="58" pos:column="16">c<pos:position pos:line="58" pos:column="17"/></name></expr>;<pos:position pos:line="58" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="59" pos:column="4"/></block></while>
  <return pos:line="60" pos:column="3">return <expr><name pos:line="60" pos:column="10">count<pos:position pos:line="60" pos:column="15"/></name></expr>;<pos:position pos:line="60" pos:column="16"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

 "\n"
 "       --http2\n"
 "              (HTTP)  Tells  curl  to  issue  its  requests using HTTP 2. This\n"
 "              requires that the underlying libcurl was built  to  support  it.\n"
 "              (Added in 7.33.0)\n"
 "\n"
+"       --http2-prior-knowledge\n"
+"              (HTTP)  Tells  curl  to  issue  its  non-TLS HTTP requests using\n"
+, stdout);
+ fputs(
+"              HTTP/2 without HTTP/1.1 Upgrade.  It  requires  prior  knowledge\n"
+"              that  the  server  supports HTTP/2 straight away. HTTPS requests\n"
+"              will still do HTTP/2 the standard way with  negotiated  protocol\n"
+"              version in the TLS handshake.\n"
+"\n"
+"              HTTP/2  support  in  general  also  requires that the underlying\n"
+"              libcurl was built to support it. (Added in 7.49.0)\n"
+"\n"
 "       --no-npn\n"
-"              Disable  the  NPN  TLS  extension.  NPN is enabled by default if\n"
 , stdout);
  fputs(
-"              libcurl was built with an SSL library that supports NPN. NPN  is\n"
-"              used  by a libcurl that supports HTTP 2 to negotiate HTTP 2 sup-\n"
+"              Disable the NPN TLS extension. NPN  is  enabled  by  default  if\n"
+"              libcurl  was built with an SSL library that supports NPN. NPN is\n"
+"              used by a libcurl that supports HTTP 2 to negotiate HTTP 2  sup-\n"
 "              port with the server during https sessions.\n"
 "\n"
 "              (Added in 7.36.0)\n"
 "\n"
 "       --no-alpn\n"
-"              Disable the ALPN TLS extension. ALPN is enabled  by  default  if\n"
-"              libcurl  was  built with an SSL library that supports ALPN. ALPN\n"
+"              Disable  the  ALPN  TLS extension. ALPN is enabled by default if\n"
 , stdout);
  fputs(
-"              is used by a libcurl that supports HTTP 2 to  negotiate  HTTP  2\n"
+"              libcurl was built with an SSL library that supports  ALPN.  ALPN\n"
+"              is  used  by  a libcurl that supports HTTP 2 to negotiate HTTP 2\n"
 "              support with the server during https sessions.\n"
 "\n"
 "              (Added in 7.36.0)\n"
 "\n"
 "       -1, --tlsv1\n"
 "              (SSL) Forces curl to use TLS version 1.x when negotiating with a\n"
-"              remote TLS server.  You can use  options  --tlsv1.0,  --tlsv1.1,\n"
-"              and  --tlsv1.2 to control the TLS version more precisely (if the\n"
-"              SSL backend in use supports such a level of control).\n"
-"\n"
+"              remote  TLS  server.   You can use options --tlsv1.0, --tlsv1.1,\n"
 , stdout);
  fputs(
+"              and --tlsv1.2 to control the TLS version more precisely (if  the\n"
+"              SSL backend in use supports such a level of control).\n"
+"\n"
 "       -2, --sslv2\n"
-"              (SSL) Forces curl to use SSL version 2 when negotiating  with  a\n"
-"              remote  SSL  server.  Sometimes curl is built without SSLv2 sup-\n"
+"              (SSL)  Forces  curl to use SSL version 2 when negotiating with a\n"
+"              remote SSL server. Sometimes curl is built  without  SSLv2  sup-\n"
 "              port. SSLv2 is widely considered insecure (see RFC 6176).\n"
 "\n"
 "       -3, --sslv3\n"
-"              (SSL) Forces curl to use SSL version 3 when negotiating  with  a\n"
-"              remote  SSL  server.  Sometimes curl is built without SSLv3 sup-\n"
-"              port. SSLv3 is widely considered insecure (see RFC 7568).\n"
-"\n"
+"              (SSL)  Forces  curl to use SSL version 3 when negotiating with a\n"
 , stdout);
  fputs(
+"              remote SSL server. Sometimes curl is built  without  SSLv3  sup-\n"
+"              port. SSLv3 is widely considered insecure (see RFC 7568).\n"
+"\n"
 "       -4, --ipv4\n"
-"              This option tells curl to resolve names to IPv4 addresses  only,\n"
+"              This  option tells curl to resolve names to IPv4 addresses only,\n"
 "              and not for example try IPv6.\n"
 "\n"
 "       -6, --ipv6\n"
-"              This  option tells curl to resolve names to IPv6 addresses only,\n"
+"              This option tells curl to resolve names to IPv6 addresses  only,\n"
 "              and not for example try IPv4.\n"
 "\n"
 "       -a, --append\n"
-"              (FTP/SFTP) When used in an upload, this makes curl append to the\n"
-"              target  file  instead  of  overwriting  it.  If  the remote file\n"
 , stdout);
  fputs(
-"              doesn't exist, it will be  created.   Note  that  this  flag  is\n"
+"              (FTP/SFTP) When used in an upload, this makes curl append to the\n"
+"              target file instead  of  overwriting  it.  If  the  remote  file\n"
+"              doesn't  exist,  it  will  be  created.   Note that this flag is\n"
 "              ignored by some SFTP servers (including OpenSSH).\n"
 "\n"
 "       -A, --user-agent <agent string>\n"
 "              (HTTP) Specify the User-Agent string to send to the HTTP server.\n"
-"              Some  badly  done  CGIs  fail  if  this  field  isn't   set   to\n"
-"              \"Mozilla/4.0\".  To  encode  blanks  in  the string, surround the\n"
-"              string with single quote marks. This can also be  set  with  the\n"
+"              Some   badly   done  CGIs  fail  if  this  field  isn't  set  to\n"
 , stdout);
  fputs(
+"              \"Mozilla/4.0\". To encode blanks  in  the  string,  surround  the\n"
+"              string  with  single  quote marks. This can also be set with the\n"
 "              -H, --header option of course.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --anyauth\n"
 "              (HTTP) Tells curl to figure out authentication method by itself,\n"
-"              and use the most secure one the remote site claims  to  support.\n"
-"              This is done by first doing a request and checking the response-\n"
-"              headers, thus possibly inducing  an  extra  network  round-trip.\n"
+"              and  use  the most secure one the remote site claims to support.\n"
 , stdout);
  fputs(
-"              This  is  used  instead  of  setting  a  specific authentication\n"
-"              method, which you can do with  --basic,  --digest,  --ntlm,  and\n"
+"              This is done by first doing a request and checking the response-\n"
+"              headers,  thus  possibly  inducing  an extra network round-trip.\n"
+"              This is  used  instead  of  setting  a  specific  authentication\n"
+"              method,  which  you  can  do with --basic, --digest, --ntlm, and\n"
 "              --negotiate.\n"
 "\n"
-"              Note  that  using --anyauth is not recommended if you do uploads\n"
-"              from stdin, since it may require data to be sent twice and  then\n"
+"              Note that using --anyauth is not recommended if you  do  uploads\n"
+, stdout);
+ fputs(
+"              from  stdin, since it may require data to be sent twice and then\n"
 "              the client must be able to rewind. If the need should arise when\n"
 "              uploading from stdin, the upload operation will fail.\n"
 "\n"
+"       -b, --cookie <name=data>\n"
+"              (HTTP)  Pass the data to the HTTP server as a cookie. It is sup-\n"
+"              posedly the data previously received from the server in a  \"Set-\n"
+"              Cookie:\"  line.  The data should be in the format \"NAME1=VALUE1;\n"
 , stdout);
  fputs(
-"       -b, --cookie <name=data>\n"
-"              (HTTP) Pass the data to the HTTP server as a cookie. It is  sup-\n"
-"              posedly  the data previously received from the server in a \"Set-\n"
-"              Cookie:\" line.  The data should be in the format  \"NAME1=VALUE1;\n"
 "              NAME2=VALUE2\".\n"
 "\n"
-"              If  no  '=' symbol is used in the line, it is treated as a file-\n"
-"              name to use to read previously stored cookie lines  from,  which\n"
+"              If no '=' symbol is used in the line, it is treated as  a  file-\n"
+"              name  to  use to read previously stored cookie lines from, which\n"
+"              should be used in this session if they match. Using this  method\n"
+"              also  activates  the  cookie  engine which will make curl record\n"
+"              incoming cookies too, which may be handy if you're using this in\n"
 , stdout);
  fputs(
-"              should  be used in this session if they match. Using this method\n"
-"              also activates the cookie engine which  will  make  curl  record\n"
-"              incoming cookies too, which may be handy if you're using this in\n"
-"              combination with the -L, --location option. The file  format  of\n"
+"              combination  with  the -L, --location option. The file format of\n"
 "              the file to read cookies from should be plain HTTP headers (Set-\n"
 "              Cookie style) or the Netscape/Mozilla cookie file format.\n"
 "\n"
-, stdout);
- fputs(
-"              The file specified with -b, --cookie is only used as  input.  No\n"
-"              cookies  will  be written to the file. To store cookies, use the\n"
+"              The  file  specified with -b, --cookie is only used as input. No\n"
+"              cookies will be written to the file. To store cookies,  use  the\n"
 "              -c, --cookie-jar option.\n"
 "\n"
-"              Exercise caution if you  are  using  this  option  and  multiple\n"
-"              transfers may occur.  If you use the NAME1=VALUE1; format, or in\n"
-"              a file use the Set-Cookie format and  don't  specify  a  domain,\n"
 , stdout);
  fputs(
+"              Exercise  caution  if  you  are  using  this option and multiple\n"
+"              transfers may occur.  If you use the NAME1=VALUE1; format, or in\n"
+"              a  file  use  the  Set-Cookie format and don't specify a domain,\n"
 "              then the cookie is sent for any domain (even after redirects are\n"
-"              followed) and cannot be modified by a server-set cookie. If  the\n"
-"              cookie  engine is enabled and a server sets a cookie of the same\n"
-"              name then both will be sent on a future transfer to that server,\n"
-"              likely  not  what  you  intended.  To address these issues set a\n"
-"              domain in Set-Cookie (doing that will  include  sub-domains)  or\n"
+"              followed)  and cannot be modified by a server-set cookie. If the\n"
+"              cookie engine is enabled and a server sets a cookie of the  same\n"
 , stdout);
  fputs(
+"              name then both will be sent on a future transfer to that server,\n"
+"              likely not what you intended.  To address  these  issues  set  a\n"
+"              domain  in  Set-Cookie  (doing that will include sub-domains) or\n"
 "              use the Netscape format.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -B, --use-ascii\n"
-"              (FTP/LDAP)  Enable  ASCII  transfer.  For  FTP, this can also be\n"
-"              enforced by using an URL that ends with \";type=A\".  This  option\n"
+"              (FTP/LDAP) Enable ASCII transfer. For  FTP,  this  can  also  be\n"
+, stdout);
+ fputs(
+"              enforced  by  using an URL that ends with \";type=A\". This option\n"
 "              causes data sent to stdout to be in text mode for win32 systems.\n"
 "\n"
 "       --basic\n"
-"              (HTTP)  Tells  curl  to  use  HTTP Basic authentication with the\n"
+"              (HTTP) Tells curl to use  HTTP  Basic  authentication  with  the\n"
+"              remote  host.  This  is  the  default and this option is usually\n"
+"              pointless, unless you use it to override a previously set option\n"
+"              that  sets  a  different  authentication method (such as --ntlm,\n"
 , stdout);
  fputs(
-"              remote host. This is the default  and  this  option  is  usually\n"
-"              pointless, unless you use it to override a previously set option\n"
-"              that sets a different authentication  method  (such  as  --ntlm,\n"
 "              --digest, or --negotiate).\n"
 "\n"
 "              Used together with -u, --user and -x, --proxy.\n"
 "\n"
 "              See also --proxy-basic.\n"
 "\n"
 "       -c, --cookie-jar <file name>\n"
-"              (HTTP)  Specify to which file you want curl to write all cookies\n"
+"              (HTTP) Specify to which file you want curl to write all  cookies\n"
+"              after  a completed operation. Curl writes all cookies previously\n"
+"              read from a specified file as well as all cookies received  from\n"
+"              remote server(s). If no cookies are known, no data will be writ-\n"
 , stdout);
  fputs(
-"              after a completed operation. Curl writes all cookies  previously\n"
-"              read  from a specified file as well as all cookies received from\n"
-"              remote server(s). If no cookies are known, no data will be writ-\n"
-"              ten.  The  file  will  be written using the Netscape cookie file\n"
-"              format. If you set the file name to  a  single  dash,  \"-\",  the\n"
+"              ten. The file will be written using  the  Netscape  cookie  file\n"
+"              format.  If  you  set  the  file name to a single dash, \"-\", the\n"
 "              cookies will be written to stdout.\n"
 "\n"
-, stdout);
- fputs(
-"              This  command  line  option will activate the cookie engine that\n"
+"              This command line option will activate the  cookie  engine  that\n"
 "              makes curl record and use cookies. Another way to activate it is\n"
 "              to use the -b, --cookie option.\n"
 "\n"
 "              If the cookie jar can't be created or written to, the whole curl\n"
-"              operation won't fail or even report an error clearly.  Using  -v\n"
-"              will get a warning displayed, but that is the only visible feed-\n"
 , stdout);
  fputs(
+"              operation  won't  fail or even report an error clearly. Using -v\n"
+"              will get a warning displayed, but that is the only visible feed-\n"
 "              back you get about this possibly lethal situation.\n"
 "\n"
 "              Since 7.43.0 cookies that were imported in the Set-Cookie format\n"
 "              without a domain name are not exported by this option.\n"
 "\n"
-"              If  this  option  is used several times, the last specified file\n"
+"              If this option is used several times, the  last  specified  file\n"
 "              name will be used.\n"
 "\n"
-"       -C, --continue-at <offset>\n"
-"              Continue/Resume a previous file transfer at  the  given  offset.\n"
 , stdout);
  fputs(
-"              The  given  offset  is  the  exact  number of bytes that will be\n"
-"              skipped, counting from the beginning of the source  file  before\n"
+"       -C, --continue-at <offset>\n"
+"              Continue/Resume  a  previous  file transfer at the given offset.\n"
+"              The given offset is the exact  number  of  bytes  that  will  be\n"
+"              skipped,  counting  from the beginning of the source file before\n"
 "              it is transferred to the destination.  If used with uploads, the\n"
 "              FTP server command SIZE will not be used by curl.\n"
 "\n"
-"              Use \"-C -\" to tell curl to automatically find out  where/how  to\n"
-"              resume  the  transfer. It then uses the given output/input files\n"
-"              to figure that out.\n"
-"\n"
+"              Use  \"-C  -\" to tell curl to automatically find out where/how to\n"
 , stdout);
  fputs(
+"              resume the transfer. It then uses the given  output/input  files\n"
+"              to figure that out.\n"
+"\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --ciphers <list of ciphers>\n"
 "              (SSL) Specifies which ciphers to use in the connection. The list\n"
-"              of  ciphers  must  specify  valid ciphers. Read up on SSL cipher\n"
-"              list          details           on           this           URL:\n"
-"              https://www.openssl.org/docs/apps/ciphers.html\n"
-"\n"
-"              NSS  ciphers  are  done differently than OpenSSL and GnuTLS. The\n"
+"              of ciphers must specify valid ciphers. Read  up  on  SSL  cipher\n"
+"              list           details           on           this          URL:\n"
 , stdout);
  fputs(
-"              full list of NSS ciphers is in the NSSCipherSuite entry at  this\n"
+"              https://www.openssl.org/docs/apps/ciphers.html\n"
+"\n"
+"              NSS ciphers are done differently than OpenSSL  and  GnuTLS.  The\n"
+"              full  list of NSS ciphers is in the NSSCipherSuite entry at this\n"
 "              URL:                                         https://git.fedora-\n"
 "              hosted.org/cgit/mod_nss.git/plain/docs/mod_nss.html#Directives\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --compressed\n"
-"              (HTTP) Request a compressed response using one of the algorithms\n"
-"              curl  supports,  and  save  the  uncompressed document.  If this\n"
 , stdout);
  fputs(
-"              option is used and the server  sends  an  unsupported  encoding,\n"
+"              (HTTP) Request a compressed response using one of the algorithms\n"
+"              curl supports, and save  the  uncompressed  document.   If  this\n"
+"              option  is  used  and  the server sends an unsupported encoding,\n"
 "              curl will report an error.\n"
 "\n"
 "       --connect-timeout <seconds>\n"
-"              Maximum  time  in  seconds  that  you allow curl's connection to\n"
-"              take.  This only limits the connection phase, so  if  curl  con-\n"
-"              nects  within the given period it will continue - if not it will\n"
-"              exit.  Since version 7.32.0, this option accepts decimal values.\n"
-"\n"
+"              Maximum time in seconds that  you  allow  curl's  connection  to\n"
+"              take.   This  only  limits the connection phase, so if curl con-\n"
 , stdout);
  fputs(
+"              nects within the given period it will continue - if not it  will\n"
+"              exit.  Since version 7.32.0, this option accepts decimal values.\n"
+"\n"
 "              See also the -m, --max-time option.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --create-dirs\n"
-"              When used in conjunction with the -o option,  curl  will  create\n"
-"              the  necessary  local directory hierarchy as needed. This option\n"
-"              creates the dirs mentioned with the -o option, nothing else.  If\n"
-"              the  -o file name uses no dir or if the dirs it mentions already\n"
+"              When  used  in  conjunction with the -o option, curl will create\n"
+"              the necessary local directory hierarchy as needed.  This  option\n"
 , stdout);
  fputs(
+"              creates  the dirs mentioned with the -o option, nothing else. If\n"
+"              the -o file name uses no dir or if the dirs it mentions  already\n"
 "              exist, no dir will be created.\n"
 "\n"
-"              To create remote directories when using FTP or SFTP, try  --ftp-\n"
+"              To  create remote directories when using FTP or SFTP, try --ftp-\n"
 "              create-dirs.\n"
 "\n"
 "       --crlf Convert LF to CRLF in upload. Useful for MVS (OS/390).\n"
 "\n"
 "              (SMTP added in 7.40.0)\n"
 "\n"
 "       --crlfile <file>\n"
-"              (HTTPS/FTPS)  Provide a file using PEM format with a Certificate\n"
-"              Revocation List that may specify peer certificates that  are  to\n"
-"              be considered revoked.\n"
-"\n"
 , stdout);
  fputs(
+"              (HTTPS/FTPS) Provide a file using PEM format with a  Certificate\n"
+"              Revocation  List  that may specify peer certificates that are to\n"
+"              be considered revoked.\n"
+"\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "              (Added in 7.19.7)\n"
 "       -d, --data <data>\n"
-"              (HTTP)  Sends  the  specified data in a POST request to the HTTP\n"
-"              server, in the same way that a browser  does  when  a  user  has\n"
-"              filled  in an HTML form and presses the submit button. This will\n"
-"              cause curl to pass the data to the server using the content-type\n"
+"              (HTTP) Sends the specified data in a POST request  to  the  HTTP\n"
+"              server,  in  the  same  way  that a browser does when a user has\n"
 , stdout);
  fputs(
+"              filled in an HTML form and presses the submit button. This  will\n"
+"              cause curl to pass the data to the server using the content-type\n"
 "              application/x-www-form-urlencoded.  Compare to -F, --form.\n"
 "\n"
 "              -d, --data is the same as --data-ascii. --data-raw is almost the\n"
 "              same but does not have a special interpretation of the @ charac-\n"
-"              ter.  To  post  data  purely  binary, you should instead use the\n"
-"              --data-binary option.  To URL-encode the value of a  form  field\n"
-"              you may use --data-urlencode.\n"
-"\n"
+"              ter. To post data purely binary,  you  should  instead  use  the\n"
 , stdout);
  fputs(
-"              If  any of these options is used more than once on the same com-\n"
-"              mand line, the data pieces specified  will  be  merged  together\n"
-"              with  a  separating  &-symbol.  Thus,  using  '-d name=daniel -d\n"
+"              --data-binary  option.   To URL-encode the value of a form field\n"
+"              you may use --data-urlencode.\n"
+"\n"
+"              If any of these options is used more than once on the same  com-\n"
+"              mand  line,  the  data  pieces specified will be merged together\n"
+"              with a separating  &-symbol.  Thus,  using  '-d  name=daniel  -d\n"
 "              skill=lousy'  would  generate  a  post  chunk  that  looks  like\n"
 "              'name=daniel&skill=lousy'.\n"
 "\n"
-"              If  you  start  the data with the letter @, the rest should be a\n"
 , stdout);
  fputs(
-"              file name to read the data from, or - if you want curl  to  read\n"
+"              If you start the data with the letter @, the rest  should  be  a\n"
+"              file  name  to read the data from, or - if you want curl to read\n"
 "              the data from stdin. Multiple files can also be specified. Post-\n"
-"              ing data from a file named 'foobar'  would  thus  be  done  with\n"
-"              --data  @foobar.  When  --data  is told to read from a file like\n"
+"              ing  data  from  a  file  named 'foobar' would thus be done with\n"
+"              --data @foobar. When --data is told to read  from  a  file  like\n"
 "              that, carriage returns and newlines will be stripped out. If you\n"
-"              don't  want the @ character to have a special interpretation use\n"
 , stdout);
  fputs(
+"              don't want the @ character to have a special interpretation  use\n"
 "              --data-raw instead.\n"
 "\n"
 "       -D, --dump-header <file>\n"
 "              Write the protocol headers to the specified file.\n"
 "\n"
-"              This option is handy to use when you want to store  the  headers\n"
-"              that  an  HTTP site sends to you. Cookies from the headers could\n"
-"              then be read in a  second  curl  invocation  by  using  the  -b,\n"
-"              --cookie  option! The -c, --cookie-jar option is a better way to\n"
-"              store cookies.\n"
-"\n"
+"              This  option  is handy to use when you want to store the headers\n"
+"              that an HTTP site sends to you. Cookies from the  headers  could\n"
+"              then  be  read  in  a  second  curl  invocation by using the -b,\n"
 , stdout);
  fputs(
-"              When used in FTP, the FTP server response lines  are  considered\n"
+"              --cookie option! The -c, --cookie-jar option is a better way  to\n"
+"              store cookies.\n"
+"\n"
+"              When  used  in FTP, the FTP server response lines are considered\n"
 "              being \"headers\" and thus are saved there.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --data-ascii <data>\n"
 "              See -d, --data.\n"
 "\n"
 "       --data-binary <data>\n"
-"              (HTTP)  This  posts data exactly as specified with no extra pro-\n"
-"              cessing whatsoever.\n"
-"\n"
-"              If you start the data with the letter @, the rest  should  be  a\n"
+"              (HTTP) This posts data exactly as specified with no  extra  pro-\n"
 , stdout);
  fputs(
-"              filename.   Data  is  posted in a similar manner as --data-ascii\n"
-"              does, except that newlines and carriage  returns  are  preserved\n"
+"              cessing whatsoever.\n"
+"\n"
+"              If  you  start  the data with the letter @, the rest should be a\n"
+"              filename.  Data is posted in a similar  manner  as  --data-ascii\n"
+"              does,  except  that  newlines and carriage returns are preserved\n"
 "              and conversions are never done.\n"
 "\n"
-"              If  this  option  is  used several times, the ones following the\n"
+"              If this option is used several times,  the  ones  following  the\n"
 "              first will append data as described in -d, --data.\n"
 "\n"
 "       --data-raw <data>\n"
-"              (HTTP) This posts data similarly to --data but without the  spe-\n"
 , stdout);
  fputs(
-"              cial  interpretation of the @ character. See -d, --data.  (Added\n"
+"              (HTTP)  This posts data similarly to --data but without the spe-\n"
+"              cial interpretation of the @ character. See -d, --data.   (Added\n"
 "              in 7.43.0)\n"
 "\n"
 "       --data-urlencode <data>\n"
 "              (HTTP) This posts data, similar to the other --data options with\n"
 "              the exception that this performs URL-encoding. (Added in 7.18.0)\n"
-"              To  be  CGI-compliant,  the <data> part should begin with a name\n"
-"              followed by a separator and a content specification. The  <data>\n"
+"              To be CGI-compliant, the <data> part should begin  with  a  name\n"
 , stdout);
  fputs(
+"              followed  by a separator and a content specification. The <data>\n"
 "              part can be passed to curl using one of the following syntaxes:\n"
 "\n"
 "              content\n"
-"                     This  will make curl URL-encode the content and pass that\n"
-"                     on. Just be careful so that the content  doesn't  contain\n"
-"                     any  =  or  @  symbols, as that will then make the syntax\n"
+"                     This will make curl URL-encode the content and pass  that\n"
+"                     on.  Just  be careful so that the content doesn't contain\n"
+"                     any = or @ symbols, as that will  then  make  the  syntax\n"
 "                     match one of the other cases below!\n"
 "\n"
 "              =content\n"
-"                     This will make curl URL-encode the content and pass  that\n"
 , stdout);
  fputs(
+"                     This  will make curl URL-encode the content and pass that\n"
 "                     on. The preceding = symbol is not included in the data.\n"
 "\n"
 "              name=content\n"
-"                     This  will make curl URL-encode the content part and pass\n"
-"                     that on. Note that the name part is expected to  be  URL-\n"
+"                     This will make curl URL-encode the content part and  pass\n"
+"                     that  on.  Note that the name part is expected to be URL-\n"
 "                     encoded already.\n"
 "\n"
 "              @filename\n"
-"                     This  will  make  curl  load  data  from  the  given file\n"
-"                     (including any newlines), URL-encode that data  and  pass\n"
+"                     This will  make  curl  load  data  from  the  given  file\n"
 , stdout);
  fputs(
+"                     (including  any  newlines), URL-encode that data and pass\n"
 "                     it on in the POST.\n"
 "\n"
 "              name@filename\n"
-"                     This  will  make  curl  load  data  from  the  given file\n"
-"                     (including any newlines), URL-encode that data  and  pass\n"
-"                     it  on  in  the  POST.  The  name part gets an equal sign\n"
+"                     This will  make  curl  load  data  from  the  given  file\n"
+"                     (including  any  newlines), URL-encode that data and pass\n"
+"                     it on in the POST. The  name  part  gets  an  equal  sign\n"
 "                     appended, resulting in name=urlencoded-file-content. Note\n"
+, stdout);
+ fputs(
 "                     that the name is expected to be URL-encoded already.\n"
 "\n"
 "       --delegation LEVEL\n"
-, stdout);
- fputs(
 "              Set LEVEL to tell the server what it is allowed to delegate when\n"
 "              it comes to user credentials. Used with GSS/kerberos.\n"
 "\n"
 "              none   Don't allow any delegation.\n"
 "\n"
-"              policy Delegates if and only if the OK-AS-DELEGATE flag  is  set\n"
-"                     in  the  Kerberos  service  ticket,  which is a matter of\n"
+"              policy Delegates  if  and only if the OK-AS-DELEGATE flag is set\n"
+"                     in the Kerberos service ticket,  which  is  a  matter  of\n"
 "                     realm policy.\n"
 "\n"
+, stdout);
+ fputs(
 "              always Unconditionally allow the server to delegate.\n"
 "\n"
 "       --digest\n"
-, stdout);
- fputs(
-"              (HTTP) Enables HTTP Digest authentication. This is an  authenti-\n"
-"              cation  scheme  that  prevents the password from being sent over\n"
-"              the wire in clear text. Use this in combination with the  normal\n"
-"              -u,  --user  option  to  set  user  name  and password. See also\n"
+"              (HTTP)  Enables HTTP Digest authentication. This is an authenti-\n"
+"              cation scheme that prevents the password from  being  sent  over\n"
+"              the  wire in clear text. Use this in combination with the normal\n"
+"              -u, --user option to  set  user  name  and  password.  See  also\n"
 "              --ntlm, --negotiate and --anyauth for related options.\n"
 "\n"
-"              If this option is used several times,  only  the  first  one  is\n"
-"              used.\n"
-"\n"
 , stdout);
  fputs(
+"              If  this  option  is  used  several times, only the first one is\n"
+"              used.\n"
+"\n"
 "       --disable-eprt\n"
 "              (FTP) Tell curl to disable the use of the EPRT and LPRT commands\n"
 "              when doing active FTP transfers. Curl will normally always first\n"
-"              attempt  to use EPRT, then LPRT before using PORT, but with this\n"
-"              option, it will use PORT right away. EPRT and  LPRT  are  exten-\n"
-"              sions  to  the  original  FTP  protocol, and may not work on all\n"
-"              servers, but they enable more functionality in a better way than\n"
+"              attempt to use EPRT, then LPRT before using PORT, but with  this\n"
+"              option,  it  will  use PORT right away. EPRT and LPRT are exten-\n"
 , stdout);
  fputs(
+"              sions to the original FTP protocol, and  may  not  work  on  all\n"
+"              servers, but they enable more functionality in a better way than\n"
 "              the traditional PORT command.\n"
 "\n"
 "              --eprt can be used to explicitly enable EPRT again and --no-eprt\n"
 "              is an alias for --disable-eprt.\n"
 "\n"
-"              If the server is an IPv6 host, this option will have  no  effect\n"
+"              If  the  server is an IPv6 host, this option will have no effect\n"
 "              as EPRT is necessary then.\n"
 "\n"
-"              Disabling  EPRT only changes the active behavior. If you want to\n"
-"              switch to passive mode you need to not  use  -P,  --ftp-port  or\n"
-"              force it with --ftp-pasv.\n"
-"\n"
 , stdout);
  fputs(
+"              Disabling EPRT only changes the active behavior. If you want  to\n"
+"              switch  to  passive  mode  you need to not use -P, --ftp-port or\n"
+"              force it with --ftp-pasv.\n"
+"\n"
 "       --disable-epsv\n"
-"              (FTP)  Tell  curl  to  disable  the use of the EPSV command when\n"
-"              doing passive FTP transfers. Curl  will  normally  always  first\n"
-"              attempt  to  use EPSV before PASV, but with this option, it will\n"
+"              (FTP) Tell curl to disable the use  of  the  EPSV  command  when\n"
+"              doing  passive  FTP  transfers.  Curl will normally always first\n"
+"              attempt to use EPSV before PASV, but with this option,  it  will\n"
 "              not try using EPSV.\n"
 "\n"
+, stdout);
+ fputs(
 "              --epsv can be used to explicitly enable EPSV again and --no-epsv\n"
 "              is an alias for --disable-epsv.\n"
 "\n"
-"              If  the  server is an IPv6 host, this option will have no effect\n"
-, stdout);
- fputs(
+"              If the server is an IPv6 host, this option will have  no  effect\n"
 "              as EPSV is necessary then.\n"
 "\n"
 "              Disabling EPSV only changes the passive behavior. If you want to\n"
 "              switch to active mode you need to use -P, --ftp-port.\n"
 "\n"
 "       --dns-interface <interface>\n"
-"              Tell  curl  to  send  outgoing DNS requests through <interface>.\n"
-"              This option is a counterpart  to  --interface  (which  does  not\n"
-"              affect  DNS). The supplied string must be an interface name (not\n"
-"              an address).\n"
-"\n"
 , stdout);
  fputs(
-"              This option requires that libcurl  was  built  with  a  resolver\n"
-"              backend  that supports this operation. The c-ares backend is the\n"
+"              Tell curl to send outgoing  DNS  requests  through  <interface>.\n"
+"              This  option  is  a  counterpart  to --interface (which does not\n"
+"              affect DNS). The supplied string must be an interface name  (not\n"
+"              an address).\n"
+"\n"
+"              This  option  requires  that  libcurl  was built with a resolver\n"
+"              backend that supports this operation. The c-ares backend is  the\n"
 "              only such one. (Added in 7.33.0)\n"
 "\n"
+, stdout);
+ fputs(
 "       --dns-ipv4-addr <ip-address>\n"
 "              Tell curl to bind to <ip-address> when making IPv4 DNS requests,\n"
-"              so  that the DNS requests originate from this address. The argu-\n"
+"              so that the DNS requests originate from this address. The  argu-\n"
 "              ment should be a single IPv4 address.\n"
 "\n"
-, stdout);
- fputs(
-"              This option requires that libcurl  was  built  with  a  resolver\n"
-"              backend  that supports this operation. The c-ares backend is the\n"
+"              This  option  requires  that  libcurl  was built with a resolver\n"
+"              backend that supports this operation. The c-ares backend is  the\n"
 "              only such one.  (Added in 7.33.0)\n"
 "\n"
 "       --dns-ipv6-addr <ip-address>\n"
+, stdout);
+ fputs(
 "              Tell curl to bind to <ip-address> when making IPv6 DNS requests,\n"
-"              so  that the DNS requests originate from this address. The argu-\n"
+"              so that the DNS requests originate from this address. The  argu-\n"
 "              ment should be a single IPv6 address.\n"
 "\n"
-, stdout);
- fputs(
-"              This option requires that libcurl  was  built  with  a  resolver\n"
-"              backend  that supports this operation. The c-ares backend is the\n"
+"              This  option  requires  that  libcurl  was built with a resolver\n"
+"              backend that supports this operation. The c-ares backend is  the\n"
 "              only such one.  (Added in 7.33.0)\n"
 "\n"
 "       --dns-servers <ip-address,ip-address>\n"
-"              Set the list of DNS servers to be used  instead  of  the  system\n"
-"              default.  The list of IP addresses should be separated with com-\n"
-"              mas. Port numbers may also optionally be given as :<port-number>\n"
 , stdout);
  fputs(
+"              Set  the  list  of  DNS servers to be used instead of the system\n"
+"              default.  The list of IP addresses should be separated with com-\n"
+"              mas. Port numbers may also optionally be given as :<port-number>\n"
 "              after each IP address.\n"
 "\n"
-"              This  option  requires  that  libcurl  was built with a resolver\n"
-"              backend that supports this operation. The c-ares backend is  the\n"
+"              This option requires that libcurl  was  built  with  a  resolver\n"
+"              backend  that supports this operation. The c-ares backend is the\n"
 "              only such one.  (Added in 7.33.0)\n"
 "\n"
+, stdout);
+ fputs(
 "       -e, --referer <URL>\n"
 "              (HTTP) Sends the \"Referrer Page\" information to the HTTP server.\n"
 "              This can also be set with the -H, --header flag of course.  When\n"
-, stdout);
- fputs(
 "              used with -L, --location you can append \";auto\" to the --referer\n"
 "              URL to make curl automatically set the previous URL when it fol-\n"
-"              lows  a  Location: header. The \";auto\" string can be used alone,\n"
+"              lows a Location: header. The \";auto\" string can be  used  alone,\n"
 "              even if you don't set an initial --referer.\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -E, --cert <certificate[:password]>\n"
-"              (SSL) Tells curl to use the specified  client  certificate  file\n"
+"              (SSL)  Tells  curl  to use the specified client certificate file\n"
+"              when getting a file with HTTPS, FTPS or another SSL-based proto-\n"
+"              col.  The  certificate must be in PKCS#12 format if using Secure\n"
+"              Transport, or PEM format if using  any  other  engine.   If  the\n"
 , stdout);
  fputs(
-"              when getting a file with HTTPS, FTPS or another SSL-based proto-\n"
-"              col. The certificate must be in PKCS#12 format if  using  Secure\n"
-"              Transport,  or  PEM  format  if  using any other engine.  If the\n"
 "              optional password isn't specified, it will be queried for on the\n"
-"              terminal.  Note  that  this  option assumes a \"certificate\" file\n"
+"              terminal. Note that this option  assumes  a  \"certificate\"  file\n"
 "              that is the private key and the client certificate concatenated!\n"
-, stdout);
- fputs(
 "              See --cert and --key to specify them independently.\n"
 "\n"
-"              If  curl  is  built against the NSS SSL library then this option\n"
-"              can tell curl the nickname of the certificate to use within  the\n"
-"              NSS  database defined by the environment variable SSL_DIR (or by\n"
-"              default /etc/pki/nssdb). If the NSS  PEM  PKCS#11  module  (lib-\n"
-"              nsspem.so)  is  available  then  PEM files may be loaded. If you\n"
+"              If curl is built against the NSS SSL library  then  this  option\n"
+"              can  tell curl the nickname of the certificate to use within the\n"
 , stdout);
  fputs(
+"              NSS database defined by the environment variable SSL_DIR (or  by\n"
+"              default  /etc/pki/nssdb).  If  the  NSS PEM PKCS#11 module (lib-\n"
+"              nsspem.so) is available then PEM files may  be  loaded.  If  you\n"
 "              want to use a file from the current directory, please precede it\n"
-"              with  \"./\"  prefix, in order to avoid confusion with a nickname.\n"
-"              If the nickname contains \":\", it needs to be preceded by \"\\\"  so\n"
-"              that  it  is not recognized as password delimiter.  If the nick-\n"
-"              name contains \"\\\", it needs to be escaped as \"\\\\\" so that it  is\n"
+"              with \"./\" prefix, in order to avoid confusion with  a  nickname.\n"
+"              If  the nickname contains \":\", it needs to be preceded by \"\\\" so\n"
+, stdout);
+ fputs(
+"              that it is not recognized as password delimiter.  If  the  nick-\n"
+"              name  contains \"\\\", it needs to be escaped as \"\\\\\" so that it is\n"
 "              not recognized as an escape character.\n"
 "\n"
+"              (iOS and Mac OS X only) If curl is built against  Secure  Trans-\n"
+"              port,  then  the  certificate string can either be the name of a\n"
+"              certificate/private key in the system or user keychain,  or  the\n"
 , stdout);
  fputs(
-"              (iOS  and  Mac OS X only) If curl is built against Secure Trans-\n"
-"              port, then the certificate string can either be the  name  of  a\n"
-"              certificate/private  key  in the system or user keychain, or the\n"
-"              path to a PKCS#12-encoded certificate and private  key.  If  you\n"
+"              path  to  a  PKCS#12-encoded certificate and private key. If you\n"
 "              want to use a file from the current directory, please precede it\n"
 "              with \"./\" prefix, in order to avoid confusion with a nickname.\n"
 "\n"
-, stdout);
- fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --engine <name>\n"
-"              Select the OpenSSL crypto engine to use for  cipher  operations.\n"
-"              Use  --engine  list  to  print  a  list  of build-time supported\n"
-"              engines. Note that not all (or  none)  of  the  engines  may  be\n"
+"              Select  the  OpenSSL crypto engine to use for cipher operations.\n"
+"              Use --engine list  to  print  a  list  of  build-time  supported\n"
+, stdout);
+ fputs(
+"              engines.  Note  that  not  all  (or  none) of the engines may be\n"
 "              available at run-time.\n"
 "\n"
 "       --environment\n"
-"              (RISC  OS ONLY) Sets a range of environment variables, using the\n"
-, stdout);
- fputs(
+"              (RISC OS ONLY) Sets a range of environment variables, using  the\n"
 "              names the -w option supports, to allow easier extraction of use-\n"
 "              ful information after having run curl.\n"
 "\n"
 "       --egd-file <file>\n"
-"              (SSL)  Specify  the  path  name  to the Entropy Gathering Daemon\n"
-"              socket. The socket is used to seed the  random  engine  for  SSL\n"
+"              (SSL) Specify the path name  to  the  Entropy  Gathering  Daemon\n"
+, stdout);
+ fputs(
+"              socket.  The  socket  is  used to seed the random engine for SSL\n"
 "              connections. See also the --random-file option.\n"
 "\n"
 "       --expect100-timeout <seconds>\n"
 "              (HTTP) Maximum time in seconds that you allow curl to wait for a\n"
+"              100-continue  response  when curl emits an Expects: 100-continue\n"
+"              header in its request. By default curl  will  wait  one  second.\n"
+"              This  option accepts decimal values! When curl stops waiting, it\n"
 , stdout);
  fputs(
-"              100-continue response when curl emits an  Expects:  100-continue\n"
-"              header  in  its  request.  By default curl will wait one second.\n"
-"              This option accepts decimal values! When curl stops waiting,  it\n"
 "              will continue as if the response has been received.\n"
 "\n"
 "              (Added in 7.47.0)\n"
 "\n"
 "       --cert-type <type>\n"
-"              (SSL)  Tells curl what certificate type the provided certificate\n"
-, stdout);
- fputs(
+"              (SSL) Tells curl what certificate type the provided  certificate\n"
 "              is in. PEM, DER and ENG are recognized types.  If not specified,\n"
 "              PEM is assumed.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --cacert <CA certificate>\n"
-"              (SSL) Tells curl to use the specified certificate file to verify\n"
-"              the peer. The file may contain  multiple  CA  certificates.  The\n"
-"              certificate(s)  must be in PEM format. Normally curl is built to\n"
 , stdout);
  fputs(
+"              (SSL) Tells curl to use the specified certificate file to verify\n"
+"              the  peer.  The  file  may contain multiple CA certificates. The\n"
+"              certificate(s) must be in PEM format. Normally curl is built  to\n"
 "              use a default file for this, so this option is typically used to\n"
 "              alter that default file.\n"
 "\n"
-"              curl  recognizes the environment variable named 'CURL_CA_BUNDLE'\n"
-"              if it is set, and uses the given path as a path  to  a  CA  cert\n"
+"              curl recognizes the environment variable named  'CURL_CA_BUNDLE'\n"
+, stdout);
+ fputs(
+"              if  it  is  set,  and uses the given path as a path to a CA cert\n"
 "              bundle. This option overrides that variable.\n"
 "\n"
-"              The  windows  version  of  curl will automatically look for a CA\n"
+"              The windows version of curl will automatically  look  for  a  CA\n"
 "              certs file named 'curl-ca-bundle.crt', either in the same direc-\n"
-, stdout);
- fputs(
 "              tory as curl.exe, or in the Current Working Directory, or in any\n"
 "              folder along your PATH.\n"
 "\n"
-"              If curl is built against  the  NSS  SSL  library,  the  NSS  PEM\n"
-"              PKCS#11  module  (libnsspem.so)  needs  to be available for this\n"
+"              If  curl  is  built  against  the  NSS  SSL library, the NSS PEM\n"
+, stdout);
+ fputs(
+"              PKCS#11 module (libnsspem.so) needs to  be  available  for  this\n"
 "              option to work properly.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --capath <CA certificate directory>\n"
-, stdout);
- fputs(
-"              (SSL) Tells curl to use the specified certificate  directory  to\n"
-"              verify  the  peer.  Multiple paths can be provided by separating\n"
+"              (SSL)  Tells  curl to use the specified certificate directory to\n"
+"              verify the peer. Multiple paths can be  provided  by  separating\n"
 "              them with \":\" (e.g.  \"path1:path2:path3\"). The certificates must\n"
-"              be  in  PEM  format,  and  if curl is built against OpenSSL, the\n"
-"              directory must have been processed using  the  c_rehash  utility\n"
-"              supplied  with OpenSSL. Using --capath can allow OpenSSL-powered\n"
 , stdout);
  fputs(
-"              curl to make SSL-connections much more  efficiently  than  using\n"
+"              be in PEM format, and if curl  is  built  against  OpenSSL,  the\n"
+"              directory  must  have  been processed using the c_rehash utility\n"
+"              supplied with OpenSSL. Using --capath can allow  OpenSSL-powered\n"
+"              curl  to  make  SSL-connections much more efficiently than using\n"
 "              --cacert if the --cacert file contains many CA certificates.\n"
 "\n"
 "              If this option is set, the default capath value will be ignored,\n"
+, stdout);
+ fputs(
 "              and if it is used several times, the last one will be used.\n"
 "\n"
 "       --pinnedpubkey <pinned public key (hashes)>\n"
-"              (SSL) Tells curl to  use  the  specified  public  key  file  (or\n"
-, stdout);
- fputs(
-"              hashes)  to  verify the peer. This can be a path to a file which\n"
+"              (SSL)  Tells  curl  to  use  the  specified  public key file (or\n"
+"              hashes) to verify the peer. This can be a path to a  file  which\n"
 "              contains a single public key in PEM or DER format, or any number\n"
 "              of base64 encoded sha256 hashes preceded by 'sha256//' and sepa-\n"
 "              rated by ';'\n"
 "\n"
-"              When negotiating a TLS or SSL connection,  the  server  sends  a\n"
-"              certificate  indicating  its identity. A public key is extracted\n"
 , stdout);
  fputs(
-"              from this certificate and if it does not exactly match the  pub-\n"
-"              lic  key provided to this option, curl will abort the connection\n"
+"              When  negotiating  a  TLS  or SSL connection, the server sends a\n"
+"              certificate indicating its identity. A public key  is  extracted\n"
+"              from  this certificate and if it does not exactly match the pub-\n"
+"              lic key provided to this option, curl will abort the  connection\n"
 "              before sending or receiving any data.\n"
 "\n"
-"              Added in 7.39.0 for OpenSSL, GnuTLS and GSKit. Added  in  7.43.0\n"
-"              for  NSS  and wolfSSL/CyaSSL. sha256 support added in 7.44.0 for\n"
-"              OpenSSL, GnuTLS, NSS and wolfSSL/CyaSSL. Other SSL backends  not\n"
-"              supported.\n"
-"\n"
+"              PEM/DER support:\n"
+"                7.39.0: OpenSSL, GnuTLS and GSKit\n"
+"                7.43.0: NSS and wolfSSL/CyaSSL\n"
 , stdout);
  fputs(
+"                7.47.0: mbedtls\n"
+"                7.49.0: PolarSSL sha256 support:\n"
+"                7.44.0: OpenSSL, GnuTLS, NSS and wolfSSL/CyaSSL.\n"
+"                7.47.0: mbedtls\n"
+"                7.49.0: PolarSSL Other SSL backends not supported.\n"
+"\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --cert-status\n"
 "              (SSL)  Tells curl to verify the status of the server certificate\n"
+, stdout);
+ fputs(
 "              by using the Certificate Status Request (aka. OCSP stapling) TLS\n"
 "              extension.\n"
 "\n"
 "              If  this option is enabled and the server sends an invalid (e.g.\n"
 "              expired) response, if the response suggests that the server cer-\n"
-, stdout);
- fputs(
 "              tificate  has  been  revoked, or no response at all is received,\n"
 "              the verification fails.\n"
 "\n"
 "              This is currently only implemented in the  OpenSSL,  GnuTLS  and\n"
+, stdout);
+ fputs(
 "              NSS backends.  (Added in 7.41.0)\n"
 "\n"
 "       --false-start\n"
 "\n"
 "              (SSL)  Tells  curl  to use false start during the TLS handshake.\n"
 "              False start is a mode where a  TLS  client  will  start  sending\n"
-, stdout);
- fputs(
 "              application data before verifying the server's Finished message,\n"
 "              thus saving a round trip when performing a full handshake.\n"
 "\n"
 "              This is currently only implemented in the NSS and Secure  Trans-\n"
+, stdout);
+ fputs(
 "              port  (on  iOS  7.0  or  later, or OS X 10.9 or later) backends.\n"
 "              (Added in 7.42.0)\n"
 "\n"
 "       -f, --fail\n"
 "              (HTTP) Fail silently (no output at all) on server  errors.  This\n"
-, stdout);
- fputs(
 "              is  mostly done to better enable scripts etc to better deal with\n"
 "              failed attempts. In normal cases when an HTTP  server  fails  to\n"
 "              deliver  a  document,  it  returns  an  HTML document stating so\n"
+, stdout);
+ fputs(
 "              (which often also describes why and more). This flag  will  pre-\n"
 "              vent curl from outputting that and return error 22.\n"
 "\n"
 "              This  method is not fail-safe and there are occasions where non-\n"
-, stdout);
- fputs(
 "              successful response codes will  slip  through,  especially  when\n"
 "              authentication is involved (response codes 401 and 407).\n"
 "\n"
 "       -F, --form <name=content>\n"
 "              (HTTP)  This  lets curl emulate a filled-in form in which a user\n"
+, stdout);
+ fputs(
 "              has pressed the submit button. This causes  curl  to  POST  data\n"
 "              using  the  Content-Type  multipart/form-data  according  to RFC\n"
 "              2388. This enables uploading of binary files etc. To  force  the\n"
-, stdout);
- fputs(
 "              'content'  part  to  be  a  file, prefix the file name with an @\n"
 "              sign. To just get the content part from a file, prefix the  file\n"
 "              name  with  the symbol <. The difference between @ and < is then\n"
+, stdout);
+ fputs(
 "              that @ makes a file get attached in the post as a  file  upload,\n"
 "              while  the  <  makes  a text field and just get the contents for\n"
 "              that text field from a file.\n"
 "\n"
-, stdout);
- fputs(
-"              Example, to send your password file to the server, where  'pass-\n"
-"              word' is the name of the form-field to which /etc/passwd will be\n"
-"              the input:\n"
+"              Example: to send an image to a server, where  'profile'  is  the\n"
+"              name of the form-field to which portrait.jpg will be the input:\n"
 "\n"
-"              curl -F password=@/etc/passwd www.mypasswords.com\n"
+"              curl -F profile=@portrait.jpg https://example.com/upload.cgi\n"
 "\n"
-"              To read content from stdin instead of a file, use - as the file-\n"
-"              name.  This  goes  for both @ and < constructs. Unfortunately it\n"
-"              does not support reading the file from a named pipe or  similar,\n"
 , stdout);
  fputs(
+"              To read content from stdin instead of a file, use - as the file-\n"
+"              name. This goes for both @ and <  constructs.  Unfortunately  it\n"
+"              does  not support reading the file from a named pipe or similar,\n"
 "              as it needs the full size before the transfer starts.\n"
 "\n"
-"              You  can  also  tell  curl  what  Content-Type  to  use by using\n"
+"              You can also  tell  curl  what  Content-Type  to  use  by  using\n"
 "              'type=', in a manner similar to:\n"
 "\n"
-"              curl -F \"web=@index.html;type=text/html\" url.com\n"
+"              curl -F \"web=@index.html;type=text/html\" example.com\n"
+, stdout);
+ fputs(
 "\n"
 "              or\n"
 "\n"
-"              curl -F \"name=daniel;type=text/foo\" url.com\n"
+"              curl -F \"name=daniel;type=text/foo\" example.com\n"
 "\n"
-"              You can also explicitly change the name field of a  file  upload\n"
+"              You  can  also explicitly change the name field of a file upload\n"
 "              part by setting filename=, like this:\n"
 "\n"
-, stdout);
- fputs(
-"              curl -F \"file=@localfile;filename=nameinpost\" url.com\n"
+"              curl -F \"file=@localfile;filename=nameinpost\" example.com\n"
 "\n"
-"              If  filename/path contains ',' or ';', it must be quoted by dou-\n"
+"              If filename/path contains ',' or ';', it must be quoted by  dou-\n"
 "              ble-quotes like:\n"
 "\n"
-"              curl -F \"file=@\\\"localfile\\\";filename=\\\"nameinpost\\\"\" url.com\n"
+"              curl   -F   \"file=@\\\"localfile\\\";filename=\\\"nameinpost\\\"\"  exam-\n"
+"              ple.com\n"
 "\n"
+, stdout);
+ fputs(
 "              or\n"
 "\n"
-"              curl -F 'file=@\"localfile\";filename=\"nameinpost\"' url.com\n"
+"              curl -F 'file=@\"localfile\";filename=\"nameinpost\"' example.com\n"
 "\n"
 "              Note that if a filename/path is  quoted  by  double-quotes,  any\n"
-, stdout);
- fputs(
 "              double-quote or backslash within the filename must be escaped by\n"
 "              backslash.\n"
 "\n"
 "              See further examples and details in the MANUAL.\n"
 "\n"
 "              This option can be used multiple times.\n"
 "\n"
 "       --ftp-account [data]\n"
+, stdout);
+ fputs(
 "              (FTP) When an FTP server asks for \"account data\" after user name\n"
 "              and  password has been provided, this data is sent off using the\n"
 "              ACCT command. (Added in 7.13.0)\n"
 "\n"
-, stdout);
- fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --ftp-alternative-to-user <command>\n"
 "              (FTP) If authenticating with the USER and PASS  commands  fails,\n"
 "              send  this  command.   When  connecting  to  Tumbleweed's Secure\n"
+, stdout);
+ fputs(
 "              Transport server over FTPS using  a  client  certificate,  using\n"
 "              \"SITE  AUTH\"  will tell the server to retrieve the username from\n"
 "              the certificate. (Added in 7.15.5)\n"
 "\n"
-, stdout);
- fputs(
 "       --ftp-create-dirs\n"
 "              (FTP/SFTP) When an FTP or SFTP URL/operation uses  a  path  that\n"
 "              doesn't  currently exist on the server, the standard behavior of\n"
 "              curl is to fail. Using this option, curl will instead attempt to\n"
+, stdout);
+ fputs(
 "              create missing directories.\n"
 "\n"
 "       --ftp-method [method]\n"
 "              (FTP)  Control what method curl should use to reach a file on an\n"
 "              FTP(S) server. The method argument should be one of the  follow-\n"
-, stdout);
- fputs(
 "              ing alternatives:\n"
 "\n"
 "              multicwd\n"
 "                     curl  does  a  single CWD operation for each path part in\n"
 "                     the given URL. For deep hierarchies this means very  many\n"
+, stdout);
+ fputs(
 "                     commands.  This  is  how RFC 1738 says it should be done.\n"
 "                     This is the default but the slowest behavior.\n"
 "\n"
 "              nocwd  curl does no CWD at all. curl will do  SIZE,  RETR,  STOR\n"
-, stdout);
- fputs(
 "                     etc and give a full path to the server for all these com-\n"
 "                     mands. This is the fastest behavior.\n"
 "\n"
 "              singlecwd\n"
 "                     curl does one CWD with the full target directory and then\n"
+, stdout);
+ fputs(
 "                     operates  on  the  file  \"normally\" (like in the multicwd\n"
 "                     case). This is somewhat  more  standards  compliant  than\n"
 "                     'nocwd' but without the full penalty of 'multicwd'.\n"
 "\n"
-, stdout);
- fputs(
 "              (Added in 7.15.1)\n"
 "\n"
 "       --ftp-pasv\n"
 "              (FTP)  Use  passive mode for the data connection. Passive is the\n"
 "              internal default behavior, but using this option can be used  to\n"
+, stdout);
+ fputs(
 "              override a previous -P/-ftp-port option. (Added in 7.11.0)\n"
 "\n"
 "              If  this  option  is  used  several times, only the first one is\n"
 "              used. Undoing an enforced passive really isn't  doable  but  you\n"
-, stdout);
- fputs(
 "              must then instead enforce the correct -P, --ftp-port again.\n"
 "\n"
 "              Passive mode means that curl will try the EPSV command first and\n"
 "              then PASV, unless --disable-epsv is used.\n"
 "\n"
 "       --ftp-skip-pasv-ip\n"
+, stdout);
+ fputs(
 "              (FTP) Tell curl to not use the IP address the server suggests in\n"
 "              its  response to curl's PASV command when curl connects the data\n"
 "              connection. Instead curl will re-use  the  same  IP  address  it\n"
-, stdout);
- fputs(
 "              already uses for the control connection. (Added in 7.14.2)\n"
 "\n"
 "              This  option has no effect if PORT, EPRT or EPSV is used instead\n"
 "              of PASV.\n"
 "\n"
 "       --ftp-pret\n"
+, stdout);
+ fputs(
 "              (FTP) Tell curl to send a PRET command before PASV  (and  EPSV).\n"
 "              Certain  FTP  servers,  mainly drftpd, require this non-standard\n"
 "              command for directory listings as well as up  and  downloads  in\n"
 "              PASV mode.  (Added in 7.20.x)\n"
 "\n"
 "       --ftp-ssl-ccc\n"
-, stdout);
- fputs(
 "              (FTP)  Use  CCC  (Clear  Command Channel) Shuts down the SSL/TLS\n"
 "              layer after authenticating. The rest of the control channel com-\n"
+, stdout);
+ fputs(
 "              munication  will be unencrypted. This allows NAT routers to fol-\n"
 "              low the FTP transaction. The default mode is passive. See --ftp-\n"
 "              ssl-ccc-mode for other modes.  (Added in 7.16.1)\n"
 "\n"
 "       --ftp-ssl-ccc-mode [active/passive]\n"
-, stdout);
- fputs(
 "              (FTP)  Use  CCC  (Clear  Command Channel) Sets the CCC mode. The\n"
 "              passive mode will not initiate the shutdown,  but  instead  wait\n"
+, stdout);
+ fputs(
 "              for the server to do it, and will not reply to the shutdown from\n"
 "              the server. The active mode initiates the shutdown and waits for\n"
 "              a reply from the server.  (Added in 7.16.2)\n"
 "\n"
 "       --ftp-ssl-control\n"
 "              (FTP)  Require  SSL/TLS  for  the FTP login, clear for transfer.\n"
-, stdout);
- fputs(
 "              Allows secure authentication, but non-encrypted  data  transfers\n"
 "              for  efficiency.   Fails the transfer if the server doesn't sup-\n"
+, stdout);
+ fputs(
 "              port SSL/TLS.  (Added in 7.16.0) that can still be used but will\n"
 "              be removed in a future version.\n"
 "\n"
+"       --ftp-ssl\n"
+"              (FTP) This deprecated option is now known as --ssl.\n"
+"\n"
+"       --ftp-ssl-reqd\n"
+"              (FTP) This deprecated option is now known as --ssl-reqd.\n"
+"\n"
 "       --form-string <name=string>\n"
 "              (HTTP)  Similar  to  --form except that the value string for the\n"
 "              named parameter is used literally. Leading '@' and  '<'  charac-\n"
 , stdout);
  fputs(
 "              ters, and the ';type=' string in the value have no special mean-\n"

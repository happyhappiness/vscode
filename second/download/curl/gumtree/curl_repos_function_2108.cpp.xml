<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2108.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ssl_tls_trace<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">direction<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">ssl_ver<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">content_type<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                          <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">void<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">buf<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">size_t<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">len<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="56">const<pos:position pos:line="2" pos:column="61"/></specifier> <name pos:line="2" pos:column="62">SSL<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">ssl<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
                          <parameter><decl><type><name><name pos:line="3" pos:column="27">struct<pos:position pos:line="3" pos:column="33"/></name> <name pos:line="3" pos:column="34">connectdata<pos:position pos:line="3" pos:column="45"/></name></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">conn<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">SessionHandle<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">data<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">msg_name<pos:position pos:line="6" pos:column="23"/></name></decl>, <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="26">tls_rt_name<pos:position pos:line="6" pos:column="37"/></name></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">ssl_buf<pos:position pos:line="7" pos:column="15"/></name><index pos:line="7" pos:column="15">[<expr><literal type="number" pos:line="7" pos:column="16">1024<pos:position pos:line="7" pos:column="20"/></literal></expr>]<pos:position pos:line="7" pos:column="21"/></index></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">unknown<pos:position pos:line="8" pos:column="15"/></name><index pos:line="8" pos:column="15">[<expr><literal type="number" pos:line="8" pos:column="16">32<pos:position pos:line="8" pos:column="18"/></literal></expr>]<pos:position pos:line="8" pos:column="19"/></index></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">msg_type<pos:position pos:line="9" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="17">txt_len<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">verstr<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><operator pos:line="12" pos:column="6">!<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">conn<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">||<pos:position pos:line="12" pos:column="14"/></operator> <operator pos:line="12" pos:column="15">!<pos:position pos:line="12" pos:column="16"/></operator><name><name pos:line="12" pos:column="16">conn<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">data<pos:position pos:line="12" pos:column="26"/></name></name> <operator pos:line="12" pos:column="27">||<pos:position pos:line="12" pos:column="29"/></operator> <operator pos:line="12" pos:column="30">!<pos:position pos:line="12" pos:column="31"/></operator><name><name pos:line="12" pos:column="31">conn<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">data<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">-&gt;<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="43">set<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">.<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="47">fdebug<pos:position pos:line="12" pos:column="53"/></name></name> <operator pos:line="12" pos:column="54">||<pos:position pos:line="12" pos:column="56"/></operator>
     <operator pos:line="13" pos:column="6">(<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">direction<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">!=<pos:position pos:line="13" pos:column="19"/></operator> <literal type="number" pos:line="13" pos:column="20">0<pos:position pos:line="13" pos:column="21"/></literal> <operator pos:line="13" pos:column="22">&amp;&amp;<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="25">direction<pos:position pos:line="13" pos:column="34"/></name> <operator pos:line="13" pos:column="35">!=<pos:position pos:line="13" pos:column="37"/></operator> <literal type="number" pos:line="13" pos:column="38">1<pos:position pos:line="13" pos:column="39"/></literal><operator pos:line="13" pos:column="39">)<pos:position pos:line="13" pos:column="40"/></operator></expr>)<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41">
    <block type="pseudo"><return pos:line="14" pos:column="5">return;<pos:position pos:line="14" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">data<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <name><name pos:line="16" pos:column="10">conn<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">data<pos:position pos:line="16" pos:column="20"/></name></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>

  <switch pos:line="18" pos:column="3">switch<condition pos:line="18" pos:column="9">(<expr><name pos:line="18" pos:column="10">ssl_ver<pos:position pos:line="18" pos:column="17"/></name></expr>)<pos:position pos:line="18" pos:column="18"/></condition> <block pos:line="18" pos:column="19">{
<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef<pos:position pos:line="19" pos:column="7"/></cpp:directive> <name pos:line="19" pos:column="8">SSL2_VERSION_MAJOR<pos:position pos:line="19" pos:column="26"/></name></cpp:ifdef> <comment type="block" pos:line="19" pos:column="27">/* removed in recent versions */</comment>
  <case pos:line="20" pos:column="3">case <expr><name pos:line="20" pos:column="8">SSL2_VERSION_MAJOR<pos:position pos:line="20" pos:column="26"/></name></expr>:<pos:position pos:line="20" pos:column="27"/></case>
    <expr_stmt><expr><name pos:line="21" pos:column="5">verstr<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <literal type="string" pos:line="21" pos:column="14">"SSLv2"<pos:position pos:line="21" pos:column="21"/></literal></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
    <break pos:line="22" pos:column="5">break;<pos:position pos:line="22" pos:column="11"/></break>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">SSL3_VERSION<pos:position pos:line="24" pos:column="20"/></name></cpp:ifdef>
  <case pos:line="25" pos:column="3">case <expr><name pos:line="25" pos:column="8">SSL3_VERSION<pos:position pos:line="25" pos:column="20"/></name></expr>:<pos:position pos:line="25" pos:column="21"/></case>
    <expr_stmt><expr><name pos:line="26" pos:column="5">verstr<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <literal type="string" pos:line="26" pos:column="14">"SSLv3"<pos:position pos:line="26" pos:column="21"/></literal></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>
    <break pos:line="27" pos:column="5">break;<pos:position pos:line="27" pos:column="11"/></break>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
  <case pos:line="29" pos:column="3">case <expr><name pos:line="29" pos:column="8">TLS1_VERSION<pos:position pos:line="29" pos:column="20"/></name></expr>:<pos:position pos:line="29" pos:column="21"/></case>
    <expr_stmt><expr><name pos:line="30" pos:column="5">verstr<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <literal type="string" pos:line="30" pos:column="14">"TLSv1.0"<pos:position pos:line="30" pos:column="23"/></literal></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
    <break pos:line="31" pos:column="5">break;<pos:position pos:line="31" pos:column="11"/></break>
<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef<pos:position pos:line="32" pos:column="7"/></cpp:directive> <name pos:line="32" pos:column="8">TLS1_1_VERSION<pos:position pos:line="32" pos:column="22"/></name></cpp:ifdef>
  <case pos:line="33" pos:column="3">case <expr><name pos:line="33" pos:column="8">TLS1_1_VERSION<pos:position pos:line="33" pos:column="22"/></name></expr>:<pos:position pos:line="33" pos:column="23"/></case>
    <expr_stmt><expr><name pos:line="34" pos:column="5">verstr<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <literal type="string" pos:line="34" pos:column="14">"TLSv1.1"<pos:position pos:line="34" pos:column="23"/></literal></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>
    <break pos:line="35" pos:column="5">break;<pos:position pos:line="35" pos:column="11"/></break>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">TLS1_2_VERSION<pos:position pos:line="37" pos:column="22"/></name></cpp:ifdef>
  <case pos:line="38" pos:column="3">case <expr><name pos:line="38" pos:column="8">TLS1_2_VERSION<pos:position pos:line="38" pos:column="22"/></name></expr>:<pos:position pos:line="38" pos:column="23"/></case>
    <expr_stmt><expr><name pos:line="39" pos:column="5">verstr<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <literal type="string" pos:line="39" pos:column="14">"TLSv1.2"<pos:position pos:line="39" pos:column="23"/></literal></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt>
    <break pos:line="40" pos:column="5">break;<pos:position pos:line="40" pos:column="11"/></break>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>
  <default pos:line="42" pos:column="3">default:<pos:position pos:line="42" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">snprintf<pos:position pos:line="43" pos:column="13"/></name><argument_list pos:line="43" pos:column="13">(<argument><expr><name pos:line="43" pos:column="14">unknown<pos:position pos:line="43" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="23">sizeof<argument_list pos:line="43" pos:column="29">(<argument><expr><name pos:line="43" pos:column="30">unknown<pos:position pos:line="43" pos:column="37"/></name></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="40">"(%x)"<pos:position pos:line="43" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="48">ssl_ver<pos:position pos:line="43" pos:column="55"/></name></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">verstr<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <name pos:line="44" pos:column="14">unknown<pos:position pos:line="44" pos:column="21"/></name></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>
    <break pos:line="45" pos:column="5">break;<pos:position pos:line="45" pos:column="11"/></break>
  }<pos:position pos:line="46" pos:column="4"/></block></switch>

  <expr_stmt><expr><name pos:line="48" pos:column="3">ssl_ver<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">&gt;&gt;=<pos:position pos:line="48" pos:column="20"/></operator> <literal type="number" pos:line="48" pos:column="15">8<pos:position pos:line="48" pos:column="16"/></literal></expr>;<pos:position pos:line="48" pos:column="17"/></expr_stmt> <comment type="block" pos:line="48" pos:column="18">/* check the upper 8 bits only below */</comment>

  <comment type="block" pos:line="50" pos:column="3">/* SSLv2 doesn't seem to have TLS record-type headers, so OpenSSL
   * always pass-up content-type as 0. But the interesting message-type
   * is at 'buf[0]'.
   */</comment>
  <if pos:line="54" pos:column="3">if<condition pos:line="54" pos:column="5">(<expr><name pos:line="54" pos:column="6">ssl_ver<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">==<pos:position pos:line="54" pos:column="16"/></operator> <name pos:line="54" pos:column="17">SSL3_VERSION_MAJOR<pos:position pos:line="54" pos:column="35"/></name> <operator pos:line="54" pos:column="36">&amp;&amp;<pos:position pos:line="54" pos:column="46"/></operator> <name pos:line="54" pos:column="39">content_type<pos:position pos:line="54" pos:column="51"/></name> <operator pos:line="54" pos:column="52">!=<pos:position pos:line="54" pos:column="54"/></operator> <literal type="number" pos:line="54" pos:column="55">0<pos:position pos:line="54" pos:column="56"/></literal></expr>)<pos:position pos:line="54" pos:column="57"/></condition><then pos:line="54" pos:column="57">
    <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="5">tls_rt_name<pos:position pos:line="55" pos:column="16"/></name> <operator pos:line="55" pos:column="17">=<pos:position pos:line="55" pos:column="18"/></operator> <call><name pos:line="55" pos:column="19">tls_rt_type<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><name pos:line="55" pos:column="31">content_type<pos:position pos:line="55" pos:column="43"/></name></expr></argument>)<pos:position pos:line="55" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="45"/></expr_stmt></block></then>
  <else pos:line="56" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="5">tls_rt_name<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <literal type="string" pos:line="57" pos:column="19">""<pos:position pos:line="57" pos:column="21"/></literal></expr>;<pos:position pos:line="57" pos:column="22"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name pos:line="59" pos:column="3">msg_type<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <operator pos:line="59" pos:column="14">*<pos:position pos:line="59" pos:column="15"/></operator><operator pos:line="59" pos:column="15">(<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="16">char<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">*<pos:position pos:line="59" pos:column="21"/></operator><operator pos:line="59" pos:column="21">)<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="22">buf<pos:position pos:line="59" pos:column="25"/></name></expr>;<pos:position pos:line="59" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="60" pos:column="3">msg_name<pos:position pos:line="60" pos:column="11"/></name> <operator pos:line="60" pos:column="12">=<pos:position pos:line="60" pos:column="13"/></operator> <call><name pos:line="60" pos:column="14">ssl_msg_type<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">ssl_ver<pos:position pos:line="60" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="36">msg_type<pos:position pos:line="60" pos:column="44"/></name></expr></argument>)<pos:position pos:line="60" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="46"/></expr_stmt>

  <expr_stmt><expr><name pos:line="62" pos:column="3">txt_len<pos:position pos:line="62" pos:column="10"/></name> <operator pos:line="62" pos:column="11">=<pos:position pos:line="62" pos:column="12"/></operator> <call><name pos:line="62" pos:column="13">snprintf<pos:position pos:line="62" pos:column="21"/></name><argument_list pos:line="62" pos:column="21">(<argument><expr><name pos:line="62" pos:column="22">ssl_buf<pos:position pos:line="62" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="31">sizeof<argument_list pos:line="62" pos:column="37">(<argument><expr><name pos:line="62" pos:column="38">ssl_buf<pos:position pos:line="62" pos:column="45"/></name></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="48">"%s, %s%s (%d):\n"<pos:position pos:line="62" pos:column="66"/></literal></expr></argument>,
                     <argument><expr><name pos:line="63" pos:column="22">verstr<pos:position pos:line="63" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="30">tls_rt_name<pos:position pos:line="63" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="43">msg_name<pos:position pos:line="63" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="53">msg_type<pos:position pos:line="63" pos:column="61"/></name></expr></argument>)<pos:position pos:line="63" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">Curl_debug<pos:position pos:line="64" pos:column="13"/></name><argument_list pos:line="64" pos:column="13">(<argument><expr><name pos:line="64" pos:column="14">data<pos:position pos:line="64" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="20">CURLINFO_TEXT<pos:position pos:line="64" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="35">ssl_buf<pos:position pos:line="64" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="44">(<pos:position pos:line="64" pos:column="45"/></operator><name pos:line="64" pos:column="45">size_t<pos:position pos:line="64" pos:column="51"/></name><operator pos:line="64" pos:column="51">)<pos:position pos:line="64" pos:column="52"/></operator><name pos:line="64" pos:column="52">txt_len<pos:position pos:line="64" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="61">NULL<pos:position pos:line="64" pos:column="65"/></name></expr></argument>)<pos:position pos:line="64" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="67"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="66" pos:column="3">Curl_debug<pos:position pos:line="66" pos:column="13"/></name><argument_list pos:line="66" pos:column="13">(<argument><expr><name pos:line="66" pos:column="14">data<pos:position pos:line="66" pos:column="18"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="66" pos:column="20">(<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="21">direction<pos:position pos:line="66" pos:column="30"/></name> <operator pos:line="66" pos:column="31">==<pos:position pos:line="66" pos:column="33"/></operator> <literal type="number" pos:line="66" pos:column="34">1<pos:position pos:line="66" pos:column="35"/></literal><operator pos:line="66" pos:column="35">)<pos:position pos:line="66" pos:column="36"/></operator></expr> ?<pos:position pos:line="66" pos:column="38"/></condition><then pos:line="66" pos:column="38"> <expr><name pos:line="66" pos:column="39">CURLINFO_SSL_DATA_OUT<pos:position pos:line="66" pos:column="60"/></name></expr> <pos:position pos:line="66" pos:column="61"/></then><else pos:line="66" pos:column="61">:
             <expr><name pos:line="67" pos:column="14">CURLINFO_SSL_DATA_IN<pos:position pos:line="67" pos:column="34"/></name></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="67" pos:column="36">(<pos:position pos:line="67" pos:column="37"/></operator><name pos:line="67" pos:column="37">char<pos:position pos:line="67" pos:column="41"/></name> <operator pos:line="67" pos:column="42">*<pos:position pos:line="67" pos:column="43"/></operator><operator pos:line="67" pos:column="43">)<pos:position pos:line="67" pos:column="44"/></operator><name pos:line="67" pos:column="44">buf<pos:position pos:line="67" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="49">len<pos:position pos:line="67" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="54">NULL<pos:position pos:line="67" pos:column="58"/></name></expr></argument>)<pos:position pos:line="67" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="68" pos:column="3">(<pos:position pos:line="68" pos:column="4"/></operator><name pos:line="68" pos:column="4">void<pos:position pos:line="68" pos:column="8"/></name><operator pos:line="68" pos:column="8">)<pos:position pos:line="68" pos:column="9"/></operator> <name pos:line="68" pos:column="10">ssl<pos:position pos:line="68" pos:column="13"/></name></expr>;<pos:position pos:line="68" pos:column="14"/></expr_stmt>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

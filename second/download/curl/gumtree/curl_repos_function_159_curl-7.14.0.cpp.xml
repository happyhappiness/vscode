<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_159_curl-7.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">file2memory<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">FILE<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">file<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">long<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">size<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><literal type="number" pos:line="3" pos:column="15">1024<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">string<pos:position pos:line="4" pos:column="15"/></name><init pos:line="4" pos:column="15">=<expr><name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">newstring<pos:position pos:line="5" pos:column="18"/></name><init pos:line="5" pos:column="18">=<expr><name pos:line="5" pos:column="19">NULL<pos:position pos:line="5" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">len<pos:position pos:line="6" pos:column="13"/></name><init pos:line="6" pos:column="13">=<expr><literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">long<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">stringlen<pos:position pos:line="7" pos:column="17"/></name><init pos:line="7" pos:column="17">=<expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">file<pos:position pos:line="9" pos:column="10"/></name></expr>)<pos:position pos:line="9" pos:column="11"/></condition><then pos:line="9" pos:column="11"> <block pos:line="9" pos:column="12">{
    <while pos:line="10" pos:column="5">while<condition pos:line="10" pos:column="10">(<expr><operator pos:line="10" pos:column="11">(<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">len<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <call><name pos:line="10" pos:column="18">fread<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">buffer<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="32">1<pos:position pos:line="10" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="35">sizeof<argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">buffer<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="10" pos:column="51">file<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call><operator pos:line="10" pos:column="56">)<pos:position pos:line="10" pos:column="57"/></operator></expr>)<pos:position pos:line="10" pos:column="58"/></condition> <block pos:line="10" pos:column="59">{
      <if pos:line="11" pos:column="7">if<condition pos:line="11" pos:column="9">(<expr><name pos:line="11" pos:column="10">string<pos:position pos:line="11" pos:column="16"/></name></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17"> <block pos:line="11" pos:column="18">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">newstring<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <call><name pos:line="12" pos:column="21">realloc<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">string<pos:position pos:line="12" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="37">len<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">+<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="41">stringlen<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>
        <if pos:line="13" pos:column="9">if<condition pos:line="13" pos:column="11">(<expr><name pos:line="13" pos:column="12">newstring<pos:position pos:line="13" pos:column="21"/></name></expr>)<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22">
          <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="11">string<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">newstring<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt></block></then>
        <else pos:line="15" pos:column="9">else
          <block type="pseudo"><break pos:line="16" pos:column="11">break;<pos:position pos:line="16" pos:column="17"/></break></block></else></if> <comment type="block" pos:line="16" pos:column="18">/* no more strings attached! :-) */</comment>
      }<pos:position pos:line="17" pos:column="8"/></block></then>
      <else pos:line="18" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="9">string<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">malloc<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">len<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt></block></else></if>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">memcpy<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><operator pos:line="20" pos:column="14">&amp;<pos:position pos:line="20" pos:column="19"/></operator><name><name pos:line="20" pos:column="15">string<pos:position pos:line="20" pos:column="21"/></name><index pos:line="20" pos:column="21">[<expr><name pos:line="20" pos:column="22">stringlen<pos:position pos:line="20" pos:column="31"/></name></expr>]<pos:position pos:line="20" pos:column="32"/></index></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">buffer<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="42">len<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name pos:line="21" pos:column="7">stringlen<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">+=<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">len<pos:position pos:line="21" pos:column="21"/></name></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></while>
    <expr_stmt><expr><operator pos:line="23" pos:column="5">*<pos:position pos:line="23" pos:column="6"/></operator><name pos:line="23" pos:column="6">size<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <name pos:line="23" pos:column="13">stringlen<pos:position pos:line="23" pos:column="22"/></name></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">string<pos:position pos:line="24" pos:column="18"/></name></expr>;<pos:position pos:line="24" pos:column="19"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then>
  <else pos:line="26" pos:column="3">else
    <block type="pseudo"><return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">NULL<pos:position pos:line="27" pos:column="16"/></name></expr>;<pos:position pos:line="27" pos:column="17"/></return></block></else></if> <comment type="block" pos:line="27" pos:column="18">/* no string */</comment>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

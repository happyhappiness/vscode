<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1044_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_char<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">c<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">base<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifndef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifndef<pos:position pos:line="3" pos:column="8"/></cpp:directive> <name pos:line="3" pos:column="9">NO_RANGE_TEST<pos:position pos:line="3" pos:column="22"/></name></cpp:ifndef>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">value<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><operator pos:line="4" pos:column="15">-<pos:position pos:line="4" pos:column="16"/></operator><literal type="number" pos:line="4" pos:column="16">1<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name pos:line="5" pos:column="6">c<pos:position pos:line="5" pos:column="7"/></name> <operator pos:line="5" pos:column="8">&lt;=<pos:position pos:line="5" pos:column="13"/></operator> <literal type="char" pos:line="5" pos:column="11">'9'<pos:position pos:line="5" pos:column="14"/></literal> <operator pos:line="5" pos:column="15">&amp;&amp;<pos:position pos:line="5" pos:column="25"/></operator> <name pos:line="5" pos:column="18">c<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">&gt;=<pos:position pos:line="5" pos:column="25"/></operator> <literal type="char" pos:line="5" pos:column="23">'0'<pos:position pos:line="5" pos:column="26"/></literal></expr>)<pos:position pos:line="5" pos:column="27"/></condition><then pos:line="5" pos:column="27"> <block pos:line="5" pos:column="28">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">value<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <name pos:line="6" pos:column="13">c<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">-<pos:position pos:line="6" pos:column="16"/></operator> <literal type="char" pos:line="6" pos:column="17">'0'<pos:position pos:line="6" pos:column="20"/></literal></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="7" pos:column="4"/></block></then>
  <elseif pos:line="8" pos:column="3">else <if pos:line="8" pos:column="8">if<condition pos:line="8" pos:column="10">(<expr><name pos:line="8" pos:column="11">c<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">&lt;=<pos:position pos:line="8" pos:column="18"/></operator> <literal type="char" pos:line="8" pos:column="16">'Z'<pos:position pos:line="8" pos:column="19"/></literal> <operator pos:line="8" pos:column="20">&amp;&amp;<pos:position pos:line="8" pos:column="30"/></operator> <name pos:line="8" pos:column="23">c<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">&gt;=<pos:position pos:line="8" pos:column="30"/></operator> <literal type="char" pos:line="8" pos:column="28">'A'<pos:position pos:line="8" pos:column="31"/></literal></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32"> <block pos:line="8" pos:column="33">{
    <expr_stmt><expr><name pos:line="9" pos:column="5">value<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">c<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">-<pos:position pos:line="9" pos:column="16"/></operator> <literal type="char" pos:line="9" pos:column="17">'A'<pos:position pos:line="9" pos:column="20"/></literal> <operator pos:line="9" pos:column="21">+<pos:position pos:line="9" pos:column="22"/></operator> <literal type="number" pos:line="9" pos:column="23">10<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="11" pos:column="3">else <if pos:line="11" pos:column="8">if<condition pos:line="11" pos:column="10">(<expr><name pos:line="11" pos:column="11">c<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">&lt;=<pos:position pos:line="11" pos:column="18"/></operator> <literal type="char" pos:line="11" pos:column="16">'z'<pos:position pos:line="11" pos:column="19"/></literal> <operator pos:line="11" pos:column="20">&amp;&amp;<pos:position pos:line="11" pos:column="30"/></operator> <name pos:line="11" pos:column="23">c<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">&gt;=<pos:position pos:line="11" pos:column="30"/></operator> <literal type="char" pos:line="11" pos:column="28">'a'<pos:position pos:line="11" pos:column="31"/></literal></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32"> <block pos:line="11" pos:column="33">{
    <expr_stmt><expr><name pos:line="12" pos:column="5">value<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">c<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">-<pos:position pos:line="12" pos:column="16"/></operator> <literal type="char" pos:line="12" pos:column="17">'a'<pos:position pos:line="12" pos:column="20"/></literal> <operator pos:line="12" pos:column="21">+<pos:position pos:line="12" pos:column="22"/></operator> <literal type="number" pos:line="12" pos:column="23">10<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if></elseif></if>
<cpp:else pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">else<pos:position pos:line="14" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><specifier pos:line="15" pos:column="3">const<pos:position pos:line="15" pos:column="8"/></specifier> <name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">cp<pos:position pos:line="15" pos:column="17"/></name></decl>;<pos:position pos:line="15" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">value<pos:position pos:line="16" pos:column="12"/></name></decl>;<pos:position pos:line="16" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><name pos:line="18" pos:column="3">cp<pos:position pos:line="18" pos:column="5"/></name> <operator pos:line="18" pos:column="6">=<pos:position pos:line="18" pos:column="7"/></operator> <call><name pos:line="18" pos:column="8">memchr<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">valchars<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="25">c<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="28">10<pos:position pos:line="18" pos:column="30"/></literal> <operator pos:line="18" pos:column="31">+<pos:position pos:line="18" pos:column="32"/></operator> <literal type="number" pos:line="18" pos:column="33">26<pos:position pos:line="18" pos:column="35"/></literal> <operator pos:line="18" pos:column="36">+<pos:position pos:line="18" pos:column="37"/></operator> <literal type="number" pos:line="18" pos:column="38">26<pos:position pos:line="18" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>

  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><operator pos:line="20" pos:column="6">!<pos:position pos:line="20" pos:column="7"/></operator><name pos:line="20" pos:column="7">cp<pos:position pos:line="20" pos:column="9"/></name></expr>)<pos:position pos:line="20" pos:column="10"/></condition><then pos:line="20" pos:column="10">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">-<pos:position pos:line="21" pos:column="13"/></operator><literal type="number" pos:line="21" pos:column="13">1<pos:position pos:line="21" pos:column="14"/></literal></expr>;<pos:position pos:line="21" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="23" pos:column="3">value<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <name pos:line="23" pos:column="11">cp<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">-<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">valchars<pos:position pos:line="23" pos:column="24"/></name></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>

  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><name pos:line="25" pos:column="6">value<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">&gt;=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="15">10<pos:position pos:line="25" pos:column="17"/></literal> <operator pos:line="25" pos:column="18">+<pos:position pos:line="25" pos:column="19"/></operator> <literal type="number" pos:line="25" pos:column="20">26<pos:position pos:line="25" pos:column="22"/></literal></expr>)<pos:position pos:line="25" pos:column="23"/></condition><then pos:line="25" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="5">value<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">-=<pos:position pos:line="26" pos:column="13"/></operator> <literal type="number" pos:line="26" pos:column="14">26<pos:position pos:line="26" pos:column="16"/></literal></expr>;<pos:position pos:line="26" pos:column="17"/></expr_stmt></block></then></if>                <comment type="block" pos:line="26" pos:column="33">/* Lowercase. */</comment>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">(<expr><name pos:line="29" pos:column="6">value<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">&gt;=<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="15">base<pos:position pos:line="29" pos:column="19"/></name></expr>)<pos:position pos:line="29" pos:column="20"/></condition><then pos:line="29" pos:column="20"> <block pos:line="29" pos:column="21">{
    <expr_stmt><expr><name pos:line="30" pos:column="5">value<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <operator pos:line="30" pos:column="13">-<pos:position pos:line="30" pos:column="14"/></operator><literal type="number" pos:line="30" pos:column="14">1<pos:position pos:line="30" pos:column="15"/></literal></expr>;<pos:position pos:line="30" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <return pos:line="33" pos:column="3">return <expr><name pos:line="33" pos:column="10">value<pos:position pos:line="33" pos:column="15"/></name></expr>;<pos:position pos:line="33" pos:column="16"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2244_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_ipv6works<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* the nature of most system is that IPv6 status doesn't come and go
     during a program's lifetime so we only probe the first time and then we
     have the info kept for fast re-use */</comment>
  <decl_stmt><decl><specifier pos:line="6" pos:column="3">static<pos:position pos:line="6" pos:column="9"/></specifier> <type><name pos:line="6" pos:column="10">int<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">ipv6_works<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><operator pos:line="6" pos:column="27">-<pos:position pos:line="6" pos:column="28"/></operator><literal type="number" pos:line="6" pos:column="28">1<pos:position pos:line="6" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">-<pos:position pos:line="7" pos:column="7"/></operator><literal type="number" pos:line="7" pos:column="7">1<pos:position pos:line="7" pos:column="8"/></literal> <operator pos:line="7" pos:column="9">==<pos:position pos:line="7" pos:column="11"/></operator> <name pos:line="7" pos:column="12">ipv6_works<pos:position pos:line="7" pos:column="22"/></name></expr>)<pos:position pos:line="7" pos:column="23"/></condition><then pos:line="7" pos:column="23"> <block pos:line="7" pos:column="24">{
    <comment type="block" pos:line="8" pos:column="5">/* probe to see if we have a working IPv6 stack */</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">curl_socket_t<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">s<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><call><name pos:line="9" pos:column="23">socket<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">PF_INET6<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">SOCK_DGRAM<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="52">0<pos:position pos:line="9" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="55"/></decl_stmt>
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><name pos:line="10" pos:column="8">s<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">==<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">CURL_SOCKET_BAD<pos:position pos:line="10" pos:column="28"/></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29">
      <comment type="block" pos:line="11" pos:column="7">/* an IPv6 address was requested but we can't get/use one */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="7">ipv6_works<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt></block></then>
    <else pos:line="13" pos:column="5">else <block pos:line="13" pos:column="10">{
      <expr_stmt><expr><name pos:line="14" pos:column="7">ipv6_works<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <literal type="number" pos:line="14" pos:column="20">1<pos:position pos:line="14" pos:column="21"/></literal></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">Curl_closesocket<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">NULL<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">s<pos:position pos:line="15" pos:column="31"/></name></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></else></if>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
  <return pos:line="18" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="18" pos:column="10">(<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">ipv6_works<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">&gt;<pos:position pos:line="18" pos:column="25"/></operator><literal type="number" pos:line="18" pos:column="22">0<pos:position pos:line="18" pos:column="23"/></literal><operator pos:line="18" pos:column="23">)<pos:position pos:line="18" pos:column="24"/></operator></expr>?<pos:position pos:line="18" pos:column="25"/></condition><then><expr><name pos:line="18" pos:column="25">TRUE<pos:position pos:line="18" pos:column="29"/></name></expr></then><else pos:line="18" pos:column="29">:<expr><name pos:line="18" pos:column="30">FALSE<pos:position pos:line="18" pos:column="35"/></name></expr></else></ternary></expr>;<pos:position pos:line="18" pos:column="36"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

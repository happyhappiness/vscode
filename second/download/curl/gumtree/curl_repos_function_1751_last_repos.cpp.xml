<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1751_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">create_hostcache_id<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">name<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">port<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* create and return the new allocated entry */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">id<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><call><name pos:line="5" pos:column="14">aprintf<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><literal type="string" pos:line="5" pos:column="22">"%s:%d"<pos:position pos:line="5" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="31">name<pos:position pos:line="5" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="37">port<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">ptr<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name pos:line="6" pos:column="15">id<pos:position pos:line="6" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><name pos:line="7" pos:column="6">ptr<pos:position pos:line="7" pos:column="9"/></name></expr>)<pos:position pos:line="7" pos:column="10"/></condition><then pos:line="7" pos:column="10"> <block pos:line="7" pos:column="11">{
    <comment type="block" pos:line="8" pos:column="5">/* lower case the name part */</comment>
    <while pos:line="9" pos:column="5">while<condition pos:line="9" pos:column="10">(<expr><operator pos:line="9" pos:column="11">*<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">ptr<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">&amp;&amp;<pos:position pos:line="9" pos:column="26"/></operator> <operator pos:line="9" pos:column="19">(<pos:position pos:line="9" pos:column="20"/></operator><operator pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">ptr<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">!=<pos:position pos:line="9" pos:column="27"/></operator> <literal type="char" pos:line="9" pos:column="28">':'<pos:position pos:line="9" pos:column="31"/></literal><operator pos:line="9" pos:column="31">)<pos:position pos:line="9" pos:column="32"/></operator></expr>)<pos:position pos:line="9" pos:column="33"/></condition> <block pos:line="9" pos:column="34">{
      <expr_stmt><expr><operator pos:line="10" pos:column="7">*<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">ptr<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">)<pos:position pos:line="10" pos:column="20"/></operator><call><name pos:line="10" pos:column="20">TOLOWER<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><operator pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">ptr<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name pos:line="11" pos:column="7">ptr<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">++<pos:position pos:line="11" pos:column="12"/></operator></expr>;<pos:position pos:line="11" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></while>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  <return pos:line="14" pos:column="3">return <expr><name pos:line="14" pos:column="10">id<pos:position pos:line="14" pos:column="12"/></name></expr>;<pos:position pos:line="14" pos:column="13"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

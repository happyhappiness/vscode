<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_401_curl-7.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">CURLcode<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">add_buffer<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">send_buffer<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">in<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">void<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">inptr<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">size_t<pos:position pos:line="2" pos:column="63"/></name></type> <name pos:line="2" pos:column="64">size<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">new_rb<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">new_size<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><name><name pos:line="7" pos:column="7">in<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">-&gt;<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="11">buffer<pos:position pos:line="7" pos:column="17"/></name></name> <operator pos:line="7" pos:column="18">||<pos:position pos:line="7" pos:column="20"/></operator>
     <operator pos:line="8" pos:column="6">(<pos:position pos:line="8" pos:column="7"/></operator><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name><name pos:line="8" pos:column="8">in<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">size_used<pos:position pos:line="8" pos:column="21"/></name></name> <operator pos:line="8" pos:column="22">+<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="24">size<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">)<pos:position pos:line="8" pos:column="29"/></operator> <operator pos:line="8" pos:column="30">&gt;<pos:position pos:line="8" pos:column="34"/></operator> <operator pos:line="8" pos:column="32">(<pos:position pos:line="8" pos:column="33"/></operator><name><name pos:line="8" pos:column="33">in<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">size_max<pos:position pos:line="8" pos:column="45"/></name></name> <operator pos:line="8" pos:column="46">-<pos:position pos:line="8" pos:column="47"/></operator> <literal type="number" pos:line="8" pos:column="48">1<pos:position pos:line="8" pos:column="49"/></literal><operator pos:line="8" pos:column="49">)<pos:position pos:line="8" pos:column="50"/></operator><operator pos:line="8" pos:column="50">)<pos:position pos:line="8" pos:column="51"/></operator></expr>)<pos:position pos:line="8" pos:column="52"/></condition><then pos:line="8" pos:column="52"> <block pos:line="8" pos:column="53">{
    <expr_stmt><expr><name pos:line="9" pos:column="5">new_size<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <operator pos:line="9" pos:column="16">(<pos:position pos:line="9" pos:column="17"/></operator><name><name pos:line="9" pos:column="17">in<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">size_used<pos:position pos:line="9" pos:column="30"/></name></name><operator pos:line="9" pos:column="30">+<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">size<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">)<pos:position pos:line="9" pos:column="36"/></operator><operator pos:line="9" pos:column="36">*<pos:position pos:line="9" pos:column="37"/></operator><literal type="number" pos:line="9" pos:column="37">2<pos:position pos:line="9" pos:column="38"/></literal></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><name><name pos:line="10" pos:column="8">in<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">buffer<pos:position pos:line="10" pos:column="18"/></name></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19">
      <comment type="block" pos:line="11" pos:column="7">/* we have a buffer, enlarge the existing one */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="7">new_rb<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <operator pos:line="12" pos:column="16">(<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">char<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></operator><operator pos:line="12" pos:column="23">)<pos:position pos:line="12" pos:column="24"/></operator><call><name pos:line="12" pos:column="24">realloc<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name><name pos:line="12" pos:column="32">in<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">buffer<pos:position pos:line="12" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="44">new_size<pos:position pos:line="12" pos:column="52"/></name></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt></block></then>
    <else pos:line="13" pos:column="5">else
      <comment type="block" pos:line="14" pos:column="7">/* create a new buffer */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="7">new_rb<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <operator pos:line="15" pos:column="16">(<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">char<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></operator><operator pos:line="15" pos:column="23">)<pos:position pos:line="15" pos:column="24"/></operator><call><name pos:line="15" pos:column="24">malloc<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">new_size<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt></block></else></if>

    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><operator pos:line="17" pos:column="8">!<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">new_rb<pos:position pos:line="17" pos:column="15"/></name></expr>)<pos:position pos:line="17" pos:column="16"/></condition><then pos:line="17" pos:column="16">
      <block type="pseudo"><return pos:line="18" pos:column="7">return <expr><name pos:line="18" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="18" pos:column="33"/></name></expr>;<pos:position pos:line="18" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="20" pos:column="5">in<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">buffer<pos:position pos:line="20" pos:column="15"/></name></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">new_rb<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">in<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">size_max<pos:position pos:line="21" pos:column="17"/></name></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">new_size<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">memcpy<pos:position pos:line="23" pos:column="9"/></name><argument_list pos:line="23" pos:column="9">(<argument><expr><operator pos:line="23" pos:column="10">&amp;<pos:position pos:line="23" pos:column="15"/></operator><name><name pos:line="23" pos:column="11">in<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">buffer<pos:position pos:line="23" pos:column="21"/></name><index pos:line="23" pos:column="21">[<expr><name><name pos:line="23" pos:column="22">in<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">size_used<pos:position pos:line="23" pos:column="35"/></name></name></expr>]<pos:position pos:line="23" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">inptr<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">size<pos:position pos:line="23" pos:column="49"/></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="25" pos:column="3">in<pos:position pos:line="25" pos:column="5"/></name><operator pos:line="25" pos:column="5">-&gt;<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="7">size_used<pos:position pos:line="25" pos:column="16"/></name></name> <operator pos:line="25" pos:column="17">+=<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">size<pos:position pos:line="25" pos:column="24"/></name></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>

  <return pos:line="27" pos:column="3">return <expr><name pos:line="27" pos:column="10">CURLE_OK<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

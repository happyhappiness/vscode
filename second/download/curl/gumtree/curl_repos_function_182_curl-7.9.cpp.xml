<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_182_curl-7.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">curl_version<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">char<pos:position pos:line="3" pos:column="14"/></name></type> <name><name pos:line="3" pos:column="15">version<pos:position pos:line="3" pos:column="22"/></name><index pos:line="3" pos:column="22">[<expr><literal type="number" pos:line="3" pos:column="23">200<pos:position pos:line="3" pos:column="26"/></literal></expr>]<pos:position pos:line="3" pos:column="27"/></index></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ptr<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">strcpy<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">version<pos:position pos:line="5" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="19">LIBCURL_NAME<pos:position pos:line="5" pos:column="31"/></name> <literal type="string" pos:line="5" pos:column="32">" "<pos:position pos:line="5" pos:column="35"/></literal> <name pos:line="5" pos:column="36">LIBCURL_VERSION<pos:position pos:line="5" pos:column="51"/></name></expr></argument> )<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><name pos:line="6" pos:column="3">ptr<pos:position pos:line="6" pos:column="6"/></name><operator pos:line="6" pos:column="6">=<pos:position pos:line="6" pos:column="7"/></operator><call><name pos:line="6" pos:column="7">strchr<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><name pos:line="6" pos:column="14">version<pos:position pos:line="6" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="6" pos:column="23">'\0'<pos:position pos:line="6" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>

<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">USE_SSLEAY<pos:position pos:line="8" pos:column="18"/></name></cpp:ifdef>

<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><operator pos:line="10" pos:column="5">(<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">SSLEAY_VERSION_NUMBER<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">&gt;=<pos:position pos:line="10" pos:column="33"/></operator> <literal type="number" pos:line="10" pos:column="31">0x906000<pos:position pos:line="10" pos:column="39"/></literal><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator></expr></cpp:if>
  <block pos:line="11" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name></type> <name><name pos:line="12" pos:column="10">sub<pos:position pos:line="12" pos:column="13"/></name><index pos:line="12" pos:column="13">[<expr><literal type="number" pos:line="12" pos:column="14">2<pos:position pos:line="12" pos:column="15"/></literal></expr>]<pos:position pos:line="12" pos:column="16"/></index></name></decl>;<pos:position pos:line="12" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">sub<pos:position pos:line="13" pos:column="8"/></name><index pos:line="13" pos:column="8">[<expr><literal type="number" pos:line="13" pos:column="9">1<pos:position pos:line="13" pos:column="10"/></literal></expr>]<pos:position pos:line="13" pos:column="11"/></index></name><operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator><literal type="char" pos:line="13" pos:column="12">'\0'<pos:position pos:line="13" pos:column="16"/></literal></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><name pos:line="14" pos:column="8">SSLEAY_VERSION_NUMBER<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">&amp;<pos:position pos:line="14" pos:column="34"/></operator><literal type="number" pos:line="14" pos:column="30">0xff0<pos:position pos:line="14" pos:column="35"/></literal></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36"> <block pos:line="14" pos:column="37">{
      <expr_stmt><expr><name><name pos:line="15" pos:column="7">sub<pos:position pos:line="15" pos:column="10"/></name><index pos:line="15" pos:column="10">[<expr><literal type="number" pos:line="15" pos:column="11">0<pos:position pos:line="15" pos:column="12"/></literal></expr>]<pos:position pos:line="15" pos:column="13"/></index></name><operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator><operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><operator pos:line="15" pos:column="15">(<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">SSLEAY_VERSION_NUMBER<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">&gt;&gt;<pos:position pos:line="15" pos:column="42"/></operator><literal type="number" pos:line="15" pos:column="39">4<pos:position pos:line="15" pos:column="40"/></literal><operator pos:line="15" pos:column="40">)<pos:position pos:line="15" pos:column="41"/></operator><operator pos:line="15" pos:column="41">&amp;<pos:position pos:line="15" pos:column="46"/></operator><literal type="number" pos:line="15" pos:column="42">0xff<pos:position pos:line="15" pos:column="46"/></literal><operator pos:line="15" pos:column="46">)<pos:position pos:line="15" pos:column="47"/></operator> <operator pos:line="15" pos:column="48">+<pos:position pos:line="15" pos:column="49"/></operator> <literal type="char" pos:line="15" pos:column="50">'a'<pos:position pos:line="15" pos:column="53"/></literal> <operator pos:line="15" pos:column="54">-<pos:position pos:line="15" pos:column="55"/></operator><literal type="number" pos:line="15" pos:column="55">1<pos:position pos:line="15" pos:column="56"/></literal></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then>
    <else pos:line="17" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="7">sub<pos:position pos:line="18" pos:column="10"/></name><index pos:line="18" pos:column="10">[<expr><literal type="number" pos:line="18" pos:column="11">0<pos:position pos:line="18" pos:column="12"/></literal></expr>]<pos:position pos:line="18" pos:column="13"/></index></name><operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator><literal type="char" pos:line="18" pos:column="14">'\0'<pos:position pos:line="18" pos:column="18"/></literal></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">sprintf<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">ptr<pos:position pos:line="20" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="18">" (OpenSSL %lx.%lx.%lx%s)"<pos:position pos:line="20" pos:column="44"/></literal></expr></argument>,
            <argument><expr><operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">SSLEAY_VERSION_NUMBER<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">&gt;&gt;<pos:position pos:line="21" pos:column="40"/></operator><literal type="number" pos:line="21" pos:column="37">28<pos:position pos:line="21" pos:column="39"/></literal><operator pos:line="21" pos:column="39">)<pos:position pos:line="21" pos:column="40"/></operator><operator pos:line="21" pos:column="40">&amp;<pos:position pos:line="21" pos:column="45"/></operator><literal type="number" pos:line="21" pos:column="41">0xf<pos:position pos:line="21" pos:column="44"/></literal></expr></argument>,
            <argument><expr><operator pos:line="22" pos:column="13">(<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">SSLEAY_VERSION_NUMBER<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">&gt;&gt;<pos:position pos:line="22" pos:column="40"/></operator><literal type="number" pos:line="22" pos:column="37">20<pos:position pos:line="22" pos:column="39"/></literal><operator pos:line="22" pos:column="39">)<pos:position pos:line="22" pos:column="40"/></operator><operator pos:line="22" pos:column="40">&amp;<pos:position pos:line="22" pos:column="45"/></operator><literal type="number" pos:line="22" pos:column="41">0xff<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>,
            <argument><expr><operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">SSLEAY_VERSION_NUMBER<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">&gt;&gt;<pos:position pos:line="23" pos:column="40"/></operator><literal type="number" pos:line="23" pos:column="37">12<pos:position pos:line="23" pos:column="39"/></literal><operator pos:line="23" pos:column="39">)<pos:position pos:line="23" pos:column="40"/></operator><operator pos:line="23" pos:column="40">&amp;<pos:position pos:line="23" pos:column="45"/></operator><literal type="number" pos:line="23" pos:column="41">0xff<pos:position pos:line="23" pos:column="45"/></literal></expr></argument>,
            <argument><expr><name pos:line="24" pos:column="13">sub<pos:position pos:line="24" pos:column="16"/></name></expr></argument>)<pos:position pos:line="24" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block>

<cpp:else pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">else<pos:position pos:line="27" pos:column="6"/></cpp:directive></cpp:else>
<cpp:if pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">if<pos:position pos:line="28" pos:column="4"/></cpp:directive> <expr><operator pos:line="28" pos:column="5">(<pos:position pos:line="28" pos:column="6"/></operator><name pos:line="28" pos:column="6">SSLEAY_VERSION_NUMBER<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">&gt;=<pos:position pos:line="28" pos:column="33"/></operator> <literal type="number" pos:line="28" pos:column="31">0x900000<pos:position pos:line="28" pos:column="39"/></literal><operator pos:line="28" pos:column="39">)<pos:position pos:line="28" pos:column="40"/></operator></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">sprintf<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><name pos:line="29" pos:column="11">ptr<pos:position pos:line="29" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="16">" (SSL %lx.%lx.%lx)"<pos:position pos:line="29" pos:column="36"/></literal></expr></argument>,
          <argument><expr><operator pos:line="30" pos:column="11">(<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">SSLEAY_VERSION_NUMBER<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">&gt;&gt;<pos:position pos:line="30" pos:column="38"/></operator><literal type="number" pos:line="30" pos:column="35">28<pos:position pos:line="30" pos:column="37"/></literal><operator pos:line="30" pos:column="37">)<pos:position pos:line="30" pos:column="38"/></operator><operator pos:line="30" pos:column="38">&amp;<pos:position pos:line="30" pos:column="43"/></operator><literal type="number" pos:line="30" pos:column="39">0xff<pos:position pos:line="30" pos:column="43"/></literal></expr></argument>,
          <argument><expr><operator pos:line="31" pos:column="11">(<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">SSLEAY_VERSION_NUMBER<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">&gt;&gt;<pos:position pos:line="31" pos:column="38"/></operator><literal type="number" pos:line="31" pos:column="35">20<pos:position pos:line="31" pos:column="37"/></literal><operator pos:line="31" pos:column="37">)<pos:position pos:line="31" pos:column="38"/></operator><operator pos:line="31" pos:column="38">&amp;<pos:position pos:line="31" pos:column="43"/></operator><literal type="number" pos:line="31" pos:column="39">0xff<pos:position pos:line="31" pos:column="43"/></literal></expr></argument>,
          <argument><expr><operator pos:line="32" pos:column="11">(<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">SSLEAY_VERSION_NUMBER<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">&gt;&gt;<pos:position pos:line="32" pos:column="38"/></operator><literal type="number" pos:line="32" pos:column="35">12<pos:position pos:line="32" pos:column="37"/></literal><operator pos:line="32" pos:column="37">)<pos:position pos:line="32" pos:column="38"/></operator><operator pos:line="32" pos:column="38">&amp;<pos:position pos:line="32" pos:column="43"/></operator><literal type="number" pos:line="32" pos:column="39">0xf<pos:position pos:line="32" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>
<cpp:else pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">else<pos:position pos:line="33" pos:column="6"/></cpp:directive></cpp:else>
  <block pos:line="34" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">char<pos:position pos:line="35" pos:column="9"/></name></type> <name><name pos:line="35" pos:column="10">sub<pos:position pos:line="35" pos:column="13"/></name><index pos:line="35" pos:column="13">[<expr><literal type="number" pos:line="35" pos:column="14">2<pos:position pos:line="35" pos:column="15"/></literal></expr>]<pos:position pos:line="35" pos:column="16"/></index></name></decl>;<pos:position pos:line="35" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">sub<pos:position pos:line="36" pos:column="8"/></name><index pos:line="36" pos:column="8">[<expr><literal type="number" pos:line="36" pos:column="9">1<pos:position pos:line="36" pos:column="10"/></literal></expr>]<pos:position pos:line="36" pos:column="11"/></index></name><operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator><literal type="char" pos:line="36" pos:column="12">'\0'<pos:position pos:line="36" pos:column="16"/></literal></expr>;<pos:position pos:line="36" pos:column="17"/></expr_stmt>
    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><name pos:line="37" pos:column="8">SSLEAY_VERSION_NUMBER<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">&amp;<pos:position pos:line="37" pos:column="34"/></operator><literal type="number" pos:line="37" pos:column="30">0x0f<pos:position pos:line="37" pos:column="34"/></literal></expr>)<pos:position pos:line="37" pos:column="35"/></condition><then pos:line="37" pos:column="35"> <block pos:line="37" pos:column="36">{
      <expr_stmt><expr><name><name pos:line="38" pos:column="7">sub<pos:position pos:line="38" pos:column="10"/></name><index pos:line="38" pos:column="10">[<expr><literal type="number" pos:line="38" pos:column="11">0<pos:position pos:line="38" pos:column="12"/></literal></expr>]<pos:position pos:line="38" pos:column="13"/></index></name><operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator><operator pos:line="38" pos:column="14">(<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">SSLEAY_VERSION_NUMBER<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">&amp;<pos:position pos:line="38" pos:column="41"/></operator><literal type="number" pos:line="38" pos:column="37">0x0f<pos:position pos:line="38" pos:column="41"/></literal><operator pos:line="38" pos:column="41">)<pos:position pos:line="38" pos:column="42"/></operator> <operator pos:line="38" pos:column="43">+<pos:position pos:line="38" pos:column="44"/></operator> <literal type="char" pos:line="38" pos:column="45">'a'<pos:position pos:line="38" pos:column="48"/></literal> <operator pos:line="38" pos:column="49">-<pos:position pos:line="38" pos:column="50"/></operator><literal type="number" pos:line="38" pos:column="50">1<pos:position pos:line="38" pos:column="51"/></literal></expr>;<pos:position pos:line="38" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then>
    <else pos:line="40" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="7">sub<pos:position pos:line="41" pos:column="10"/></name><index pos:line="41" pos:column="10">[<expr><literal type="number" pos:line="41" pos:column="11">0<pos:position pos:line="41" pos:column="12"/></literal></expr>]<pos:position pos:line="41" pos:column="13"/></index></name><operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator><literal type="char" pos:line="41" pos:column="14">'\0'<pos:position pos:line="41" pos:column="18"/></literal></expr>;<pos:position pos:line="41" pos:column="19"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">sprintf<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><name pos:line="43" pos:column="13">ptr<pos:position pos:line="43" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="18">" (SSL %x.%x.%x%s)"<pos:position pos:line="43" pos:column="37"/></literal></expr></argument>,
            <argument><expr><operator pos:line="44" pos:column="13">(<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">SSLEAY_VERSION_NUMBER<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">&gt;&gt;<pos:position pos:line="44" pos:column="40"/></operator><literal type="number" pos:line="44" pos:column="37">12<pos:position pos:line="44" pos:column="39"/></literal><operator pos:line="44" pos:column="39">)<pos:position pos:line="44" pos:column="40"/></operator><operator pos:line="44" pos:column="40">&amp;<pos:position pos:line="44" pos:column="45"/></operator><literal type="number" pos:line="44" pos:column="41">0xff<pos:position pos:line="44" pos:column="45"/></literal></expr></argument>,
            <argument><expr><operator pos:line="45" pos:column="13">(<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">SSLEAY_VERSION_NUMBER<pos:position pos:line="45" pos:column="35"/></name><operator pos:line="45" pos:column="35">&gt;&gt;<pos:position pos:line="45" pos:column="40"/></operator><literal type="number" pos:line="45" pos:column="37">8<pos:position pos:line="45" pos:column="38"/></literal><operator pos:line="45" pos:column="38">)<pos:position pos:line="45" pos:column="39"/></operator><operator pos:line="45" pos:column="39">&amp;<pos:position pos:line="45" pos:column="44"/></operator><literal type="number" pos:line="45" pos:column="40">0xf<pos:position pos:line="45" pos:column="43"/></literal></expr></argument>,
            <argument><expr><operator pos:line="46" pos:column="13">(<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">SSLEAY_VERSION_NUMBER<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">&gt;&gt;<pos:position pos:line="46" pos:column="40"/></operator><literal type="number" pos:line="46" pos:column="37">4<pos:position pos:line="46" pos:column="38"/></literal><operator pos:line="46" pos:column="38">)<pos:position pos:line="46" pos:column="39"/></operator><operator pos:line="46" pos:column="39">&amp;<pos:position pos:line="46" pos:column="44"/></operator><literal type="number" pos:line="46" pos:column="40">0xf<pos:position pos:line="46" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="45">sub<pos:position pos:line="46" pos:column="48"/></name></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block>
<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif<pos:position pos:line="48" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><name pos:line="50" pos:column="3">ptr<pos:position pos:line="50" pos:column="6"/></name><operator pos:line="50" pos:column="6">=<pos:position pos:line="50" pos:column="7"/></operator><call><name pos:line="50" pos:column="7">strchr<pos:position pos:line="50" pos:column="13"/></name><argument_list pos:line="50" pos:column="13">(<argument><expr><name pos:line="50" pos:column="14">ptr<pos:position pos:line="50" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="50" pos:column="19">'\0'<pos:position pos:line="50" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">if<pos:position pos:line="53" pos:column="4"/></cpp:directive> <expr><call><name pos:line="53" pos:column="5">defined<pos:position pos:line="53" pos:column="12"/></name><argument_list pos:line="53" pos:column="12">(<argument><expr><name pos:line="53" pos:column="13">KRB4<pos:position pos:line="53" pos:column="17"/></name></expr></argument>)<pos:position pos:line="53" pos:column="18"/></argument_list></call> <operator pos:line="53" pos:column="19">||<pos:position pos:line="53" pos:column="21"/></operator> <call><name pos:line="53" pos:column="22">defined<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">ENABLE_IPV6<pos:position pos:line="53" pos:column="41"/></name></expr></argument>)<pos:position pos:line="53" pos:column="42"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">strcat<pos:position pos:line="54" pos:column="9"/></name><argument_list pos:line="54" pos:column="9">(<argument><expr><name pos:line="54" pos:column="10">ptr<pos:position pos:line="54" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="15">" ("<pos:position pos:line="54" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="55" pos:column="3">ptr<pos:position pos:line="55" pos:column="6"/></name><operator pos:line="55" pos:column="6">+=<pos:position pos:line="55" pos:column="8"/></operator><literal type="number" pos:line="55" pos:column="8">2<pos:position pos:line="55" pos:column="9"/></literal></expr>;<pos:position pos:line="55" pos:column="10"/></expr_stmt>
<cpp:ifdef pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">ifdef<pos:position pos:line="56" pos:column="7"/></cpp:directive> <name pos:line="56" pos:column="8">KRB4<pos:position pos:line="56" pos:column="12"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">sprintf<pos:position pos:line="57" pos:column="10"/></name><argument_list pos:line="57" pos:column="10">(<argument><expr><name pos:line="57" pos:column="11">ptr<pos:position pos:line="57" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="16">"krb4 "<pos:position pos:line="57" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="58" pos:column="3">ptr<pos:position pos:line="58" pos:column="6"/></name> <operator pos:line="58" pos:column="7">+=<pos:position pos:line="58" pos:column="9"/></operator> <call><name pos:line="58" pos:column="10">strlen<pos:position pos:line="58" pos:column="16"/></name><argument_list pos:line="58" pos:column="16">(<argument><expr><name pos:line="58" pos:column="17">ptr<pos:position pos:line="58" pos:column="20"/></name></expr></argument>)<pos:position pos:line="58" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="22"/></expr_stmt>
<cpp:endif pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">endif<pos:position pos:line="59" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">ifdef<pos:position pos:line="60" pos:column="7"/></cpp:directive> <name pos:line="60" pos:column="8">ENABLE_IPV6<pos:position pos:line="60" pos:column="19"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="61" pos:column="3">sprintf<pos:position pos:line="61" pos:column="10"/></name><argument_list pos:line="61" pos:column="10">(<argument><expr><name pos:line="61" pos:column="11">ptr<pos:position pos:line="61" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="16">"ipv6 "<pos:position pos:line="61" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="62" pos:column="3">ptr<pos:position pos:line="62" pos:column="6"/></name> <operator pos:line="62" pos:column="7">+=<pos:position pos:line="62" pos:column="9"/></operator> <call><name pos:line="62" pos:column="10">strlen<pos:position pos:line="62" pos:column="16"/></name><argument_list pos:line="62" pos:column="16">(<argument><expr><name pos:line="62" pos:column="17">ptr<pos:position pos:line="62" pos:column="20"/></name></expr></argument>)<pos:position pos:line="62" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="22"/></expr_stmt>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">sprintf<pos:position pos:line="64" pos:column="10"/></name><argument_list pos:line="64" pos:column="10">(<argument><expr><name pos:line="64" pos:column="11">ptr<pos:position pos:line="64" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="16">"enabled)"<pos:position pos:line="64" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="65" pos:column="3">ptr<pos:position pos:line="65" pos:column="6"/></name> <operator pos:line="65" pos:column="7">+=<pos:position pos:line="65" pos:column="9"/></operator> <call><name pos:line="65" pos:column="10">strlen<pos:position pos:line="65" pos:column="16"/></name><argument_list pos:line="65" pos:column="16">(<argument><expr><name pos:line="65" pos:column="17">ptr<pos:position pos:line="65" pos:column="20"/></name></expr></argument>)<pos:position pos:line="65" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif<pos:position pos:line="66" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">ifdef<pos:position pos:line="68" pos:column="7"/></cpp:directive> <name pos:line="68" pos:column="8">USE_ZLIB<pos:position pos:line="68" pos:column="16"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="69" pos:column="3">sprintf<pos:position pos:line="69" pos:column="10"/></name><argument_list pos:line="69" pos:column="10">(<argument><expr><name pos:line="69" pos:column="11">ptr<pos:position pos:line="69" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="16">" (zlib %s)"<pos:position pos:line="69" pos:column="28"/></literal></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="30">zlibVersion<pos:position pos:line="69" pos:column="41"/></name><argument_list pos:line="69" pos:column="41">()<pos:position pos:line="69" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name pos:line="70" pos:column="3">ptr<pos:position pos:line="70" pos:column="6"/></name> <operator pos:line="70" pos:column="7">+=<pos:position pos:line="70" pos:column="9"/></operator> <call><name pos:line="70" pos:column="10">strlen<pos:position pos:line="70" pos:column="16"/></name><argument_list pos:line="70" pos:column="16">(<argument><expr><name pos:line="70" pos:column="17">ptr<pos:position pos:line="70" pos:column="20"/></name></expr></argument>)<pos:position pos:line="70" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="22"/></expr_stmt>
<cpp:endif pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">endif<pos:position pos:line="71" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="73" pos:column="3">return <expr><name pos:line="73" pos:column="10">version<pos:position pos:line="73" pos:column="17"/></name></expr>;<pos:position pos:line="73" pos:column="18"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2118_curl-7.51.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">curl_easy_pause<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">Curl_easy<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">data<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">action<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SingleRequest<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">k<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><operator pos:line="3" pos:column="29">&amp;<pos:position pos:line="3" pos:column="34"/></operator><name><name pos:line="3" pos:column="30">data<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">-&gt;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="36">req<pos:position pos:line="3" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* first switch off both pause bits */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">newstate<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name><name pos:line="7" pos:column="18">k<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">keepon<pos:position pos:line="7" pos:column="27"/></name></name> <operator pos:line="7" pos:column="28">&amp;<pos:position pos:line="7" pos:column="33"/></operator><operator pos:line="7" pos:column="29">~<pos:position pos:line="7" pos:column="30"/></operator> <operator pos:line="7" pos:column="31">(<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">KEEP_RECV_PAUSE<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">|<pos:position pos:line="7" pos:column="48"/></operator> <name pos:line="7" pos:column="49">KEEP_SEND_PAUSE<pos:position pos:line="7" pos:column="64"/></name><operator pos:line="7" pos:column="64">)<pos:position pos:line="7" pos:column="65"/></operator></expr></init></decl>;<pos:position pos:line="7" pos:column="66"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* set the new desired pause bits */</comment>
  <expr_stmt><expr><name pos:line="10" pos:column="3">newstate<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">|=<pos:position pos:line="10" pos:column="14"/></operator> <operator pos:line="10" pos:column="15">(<pos:position pos:line="10" pos:column="16"/></operator><ternary><condition><expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">action<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">&amp;<pos:position pos:line="10" pos:column="29"/></operator> <name pos:line="10" pos:column="26">CURLPAUSE_RECV<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">)<pos:position pos:line="10" pos:column="41"/></operator></expr>?<pos:position pos:line="10" pos:column="42"/></condition><then><expr><name pos:line="10" pos:column="42">KEEP_RECV_PAUSE<pos:position pos:line="10" pos:column="57"/></name></expr></then><else pos:line="10" pos:column="57">:<expr><literal type="number" pos:line="10" pos:column="58">0<pos:position pos:line="10" pos:column="59"/></literal></expr></else></ternary><operator pos:line="10" pos:column="59">)<pos:position pos:line="10" pos:column="60"/></operator> <operator pos:line="10" pos:column="61">|<pos:position pos:line="10" pos:column="62"/></operator>
    <operator pos:line="11" pos:column="5">(<pos:position pos:line="11" pos:column="6"/></operator><ternary><condition><expr><operator pos:line="11" pos:column="6">(<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">action<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">&amp;<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="16">CURLPAUSE_SEND<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">)<pos:position pos:line="11" pos:column="31"/></operator></expr>?<pos:position pos:line="11" pos:column="32"/></condition><then><expr><name pos:line="11" pos:column="32">KEEP_SEND_PAUSE<pos:position pos:line="11" pos:column="47"/></name></expr></then><else pos:line="11" pos:column="47">:<expr><literal type="number" pos:line="11" pos:column="48">0<pos:position pos:line="11" pos:column="49"/></literal></expr></else></ternary><operator pos:line="11" pos:column="49">)<pos:position pos:line="11" pos:column="50"/></operator></expr>;<pos:position pos:line="11" pos:column="51"/></expr_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* put it back in the keepon */</comment>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">k<pos:position pos:line="14" pos:column="4"/></name><operator pos:line="14" pos:column="4">-&gt;<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="6">keepon<pos:position pos:line="14" pos:column="12"/></name></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">newstate<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><operator pos:line="16" pos:column="6">!<pos:position pos:line="16" pos:column="7"/></operator><operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">newstate<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">&amp;<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="19">KEEP_RECV_PAUSE<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">)<pos:position pos:line="16" pos:column="35"/></operator> <operator pos:line="16" pos:column="36">&amp;&amp;<pos:position pos:line="16" pos:column="46"/></operator> <name><name pos:line="16" pos:column="39">data<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">-&gt;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="45">state<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">.<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="51">tempwrite<pos:position pos:line="16" pos:column="60"/></name></name></expr>)<pos:position pos:line="16" pos:column="61"/></condition><then pos:line="16" pos:column="61"> <block pos:line="16" pos:column="62">{
    <comment type="block" pos:line="17" pos:column="5">/* we have a buffer for sending that we now seem to be able to deliver
       since the receive pausing is lifted! */</comment>

    <comment type="block" pos:line="20" pos:column="5">/* get the pointer in local copy since the function may return PAUSE
       again and then we'll get a new copy allocted and stored in
       the tempwrite variables */</comment>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">char<pos:position pos:line="23" pos:column="9"/></name> <modifier pos:line="23" pos:column="10">*<pos:position pos:line="23" pos:column="11"/></modifier></type><name pos:line="23" pos:column="11">tempwrite<pos:position pos:line="23" pos:column="20"/></name> <init pos:line="23" pos:column="21">= <expr><name><name pos:line="23" pos:column="23">data<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">-&gt;<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="29">state<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">.<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="35">tempwrite<pos:position pos:line="23" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="23" pos:column="45"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="25" pos:column="5">data<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">state<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">.<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">tempwrite<pos:position pos:line="25" pos:column="26"/></name></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <name pos:line="25" pos:column="29">NULL<pos:position pos:line="25" pos:column="33"/></name></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">result<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">Curl_client_chop_write<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">(<argument><expr><name><name pos:line="26" pos:column="37">data<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">easy_conn<pos:position pos:line="26" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="54">data<pos:position pos:line="26" pos:column="58"/></name><operator pos:line="26" pos:column="58">-&gt;<pos:position pos:line="26" pos:column="63"/></operator><name pos:line="26" pos:column="60">state<pos:position pos:line="26" pos:column="65"/></name><operator pos:line="26" pos:column="65">.<pos:position pos:line="26" pos:column="66"/></operator><name pos:line="26" pos:column="66">tempwritetype<pos:position pos:line="26" pos:column="79"/></name></name></expr></argument>,
                                    <argument><expr><name pos:line="27" pos:column="37">tempwrite<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="48">data<pos:position pos:line="27" pos:column="52"/></name><operator pos:line="27" pos:column="52">-&gt;<pos:position pos:line="27" pos:column="57"/></operator><name pos:line="27" pos:column="54">state<pos:position pos:line="27" pos:column="59"/></name><operator pos:line="27" pos:column="59">.<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="60">tempwritesize<pos:position pos:line="27" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">free<pos:position pos:line="28" pos:column="9"/></name><argument_list pos:line="28" pos:column="9">(<argument><expr><name pos:line="28" pos:column="10">tempwrite<pos:position pos:line="28" pos:column="19"/></name></expr></argument>)<pos:position pos:line="28" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* if there's no error and we're not pausing both directions, we want
     to have this handle checked soon */</comment>
  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><operator pos:line="33" pos:column="6">!<pos:position pos:line="33" pos:column="7"/></operator><name pos:line="33" pos:column="7">result<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">&amp;&amp;<pos:position pos:line="33" pos:column="24"/></operator>
     <operator pos:line="34" pos:column="6">(<pos:position pos:line="34" pos:column="7"/></operator><operator pos:line="34" pos:column="7">(<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">newstate<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">&amp;<pos:position pos:line="34" pos:column="21"/></operator><operator pos:line="34" pos:column="17">(<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">KEEP_RECV_PAUSE<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">|<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="34">KEEP_SEND_PAUSE<pos:position pos:line="34" pos:column="49"/></name><operator pos:line="34" pos:column="49">)<pos:position pos:line="34" pos:column="50"/></operator><operator pos:line="34" pos:column="50">)<pos:position pos:line="34" pos:column="51"/></operator> <operator pos:line="34" pos:column="52">!=<pos:position pos:line="34" pos:column="54"/></operator>
      <operator pos:line="35" pos:column="7">(<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">KEEP_RECV_PAUSE<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">|<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="24">KEEP_SEND_PAUSE<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">)<pos:position pos:line="35" pos:column="40"/></operator><operator pos:line="35" pos:column="40">)<pos:position pos:line="35" pos:column="41"/></operator></expr> )<pos:position pos:line="35" pos:column="43"/></condition><then pos:line="35" pos:column="43">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="5">Curl_expire<pos:position pos:line="36" pos:column="16"/></name><argument_list pos:line="36" pos:column="16">(<argument><expr><name pos:line="36" pos:column="17">data<pos:position pos:line="36" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="23">0<pos:position pos:line="36" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt></block></then></if> <comment type="block" pos:line="36" pos:column="27">/* get this handle going again */</comment>

  <return pos:line="38" pos:column="3">return <expr><name pos:line="38" pos:column="10">result<pos:position pos:line="38" pos:column="16"/></name></expr>;<pos:position pos:line="38" pos:column="17"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_461_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">progressKiller<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">arg<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">double<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">dltotal<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="3" pos:column="27">double<pos:position pos:line="3" pos:column="33"/></name></type> <name pos:line="3" pos:column="34">dlnow<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="4" pos:column="27">double<pos:position pos:line="4" pos:column="33"/></name></type> <name pos:line="4" pos:column="34">ultotal<pos:position pos:line="4" pos:column="41"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="5" pos:column="27">double<pos:position pos:line="5" pos:column="33"/></name></type> <name pos:line="5" pos:column="34">ulnow<pos:position pos:line="5" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="40"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <expr_stmt><expr><operator pos:line="7" pos:column="3">(<pos:position pos:line="7" pos:column="4"/></operator><name pos:line="7" pos:column="4">void<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">)<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">arg<pos:position pos:line="7" pos:column="12"/></name></expr>;<pos:position pos:line="7" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="8" pos:column="3">(<pos:position pos:line="8" pos:column="4"/></operator><name pos:line="8" pos:column="4">void<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">)<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">dltotal<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="9" pos:column="3">(<pos:position pos:line="9" pos:column="4"/></operator><name pos:line="9" pos:column="4">void<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">)<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">dlnow<pos:position pos:line="9" pos:column="14"/></name></expr>;<pos:position pos:line="9" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="10" pos:column="3">(<pos:position pos:line="10" pos:column="4"/></operator><name pos:line="10" pos:column="4">void<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">)<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">ultotal<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="11" pos:column="3">(<pos:position pos:line="11" pos:column="4"/></operator><name pos:line="11" pos:column="4">void<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">)<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">ulnow<pos:position pos:line="11" pos:column="14"/></name></expr>;<pos:position pos:line="11" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">printf<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><literal type="string" pos:line="12" pos:column="10">"PROGRESSFUNCTION called\n"<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
  <return pos:line="13" pos:column="3">return <expr><literal type="number" pos:line="13" pos:column="10">1<pos:position pos:line="13" pos:column="11"/></literal></expr>;<pos:position pos:line="13" pos:column="12"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

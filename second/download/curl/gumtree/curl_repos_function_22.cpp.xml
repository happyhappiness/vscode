<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parseconfig<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">filename<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>,
		       <parameter><decl><type><name><name pos:line="2" pos:column="24">struct<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">Configurable<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">config<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">res<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">file<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">configbuffer<pos:position pos:line="6" pos:column="20"/></name><index pos:line="6" pos:column="20">[<expr><literal type="number" pos:line="6" pos:column="21">4096<pos:position pos:line="6" pos:column="25"/></literal></expr>]<pos:position pos:line="6" pos:column="26"/></index></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">filebuffer<pos:position pos:line="7" pos:column="18"/></name><index pos:line="7" pos:column="18">[<expr><literal type="number" pos:line="7" pos:column="19">256<pos:position pos:line="7" pos:column="22"/></literal></expr>]<pos:position pos:line="7" pos:column="23"/></index></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">bool<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">usedarg<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">home<pos:position pos:line="9" pos:column="13"/></name><init pos:line="9" pos:column="13">=<expr><name pos:line="9" pos:column="14">NULL<pos:position pos:line="9" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
  
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">!<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">filename<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">||<pos:position pos:line="11" pos:column="18"/></operator> <operator pos:line="11" pos:column="19">!<pos:position pos:line="11" pos:column="20"/></operator><operator pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">filename<pos:position pos:line="11" pos:column="29"/></name></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30"> <block pos:line="11" pos:column="31">{
    <comment type="block" pos:line="12" pos:column="5">/* NULL or no file name attempts to load .curlrc from the homedir! */</comment>

<cpp:define pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">define<pos:position pos:line="14" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="14" pos:column="9">CURLRC<pos:position pos:line="14" pos:column="15"/></name></cpp:macro> <cpp:value pos:line="14" pos:column="16">DOT_CHAR "curlrc"<pos:position pos:line="14" pos:column="33"/></cpp:value></cpp:define>

    <expr_stmt><expr><name pos:line="16" pos:column="5">home<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">curl_getenv<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="string" pos:line="16" pos:column="24">"HOME"<pos:position pos:line="16" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt> <comment type="block" pos:line="16" pos:column="33">/* portable environment reader */</comment>

    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><operator pos:line="18" pos:column="8">!<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">home<pos:position pos:line="18" pos:column="13"/></name></expr>)<pos:position pos:line="18" pos:column="14"/></condition><then pos:line="18" pos:column="14">
      <block type="pseudo"><return pos:line="19" pos:column="7">return <expr><name pos:line="19" pos:column="14">CURLE_OK<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></return></block></then></if>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><call><name pos:line="20" pos:column="8">strlen<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">home<pos:position pos:line="20" pos:column="19"/></name></expr></argument>)<pos:position pos:line="20" pos:column="20"/></argument_list></call><operator pos:line="20" pos:column="20">&gt;<pos:position pos:line="20" pos:column="24"/></operator><operator pos:line="20" pos:column="21">(<pos:position pos:line="20" pos:column="22"/></operator><sizeof pos:line="20" pos:column="22">sizeof<argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">filebuffer<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></sizeof><operator pos:line="20" pos:column="40">-<pos:position pos:line="20" pos:column="41"/></operator><call><name pos:line="20" pos:column="41">strlen<pos:position pos:line="20" pos:column="47"/></name><argument_list pos:line="20" pos:column="47">(<argument><expr><name pos:line="20" pos:column="48">CURLRC<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call><operator pos:line="20" pos:column="55">)<pos:position pos:line="20" pos:column="56"/></operator></expr>)<pos:position pos:line="20" pos:column="57"/></condition><then pos:line="20" pos:column="57"> <block pos:line="20" pos:column="58">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">free<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><name pos:line="21" pos:column="12">home<pos:position pos:line="21" pos:column="16"/></name></expr></argument>)<pos:position pos:line="21" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt>
      <return pos:line="22" pos:column="7">return <expr><name pos:line="22" pos:column="14">CURLE_OK<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">sprintf<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument><expr><name pos:line="25" pos:column="13">filebuffer<pos:position pos:line="25" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="25">"%s%s%s"<pos:position pos:line="25" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">home<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="41">DIR_CHAR<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">CURLRC<pos:position pos:line="25" pos:column="57"/></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><name pos:line="27" pos:column="5">filename<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">filebuffer<pos:position pos:line="27" pos:column="26"/></name></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><call><name pos:line="30" pos:column="6">strcmp<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><name pos:line="30" pos:column="13">filename<pos:position pos:line="30" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="30" pos:column="22">"-"<pos:position pos:line="30" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="27"/></condition><then pos:line="30" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="5">file<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <call><name pos:line="31" pos:column="12">fopen<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">filename<pos:position pos:line="31" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="28">"r"<pos:position pos:line="31" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt></block></then>
  <else pos:line="32" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="5">file<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <name pos:line="33" pos:column="12">stdin<pos:position pos:line="33" pos:column="17"/></name></expr>;<pos:position pos:line="33" pos:column="18"/></expr_stmt></block></else></if>
  
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><name pos:line="35" pos:column="6">file<pos:position pos:line="35" pos:column="10"/></name></expr>)<pos:position pos:line="35" pos:column="11"/></condition><then pos:line="35" pos:column="11">
  <block pos:line="36" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">char<pos:position pos:line="37" pos:column="9"/></name> <modifier pos:line="37" pos:column="10">*<pos:position pos:line="37" pos:column="11"/></modifier></type><name pos:line="37" pos:column="11">line<pos:position pos:line="37" pos:column="15"/></name></decl>;<pos:position pos:line="37" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">char<pos:position pos:line="38" pos:column="9"/></name> <modifier pos:line="38" pos:column="10">*<pos:position pos:line="38" pos:column="11"/></modifier></type><name pos:line="38" pos:column="11">tok1<pos:position pos:line="38" pos:column="15"/></name></decl>;<pos:position pos:line="38" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">char<pos:position pos:line="39" pos:column="9"/></name> <modifier pos:line="39" pos:column="10">*<pos:position pos:line="39" pos:column="11"/></modifier></type><name pos:line="39" pos:column="11">tok2<pos:position pos:line="39" pos:column="15"/></name></decl>;<pos:position pos:line="39" pos:column="16"/></decl_stmt>

    <while pos:line="41" pos:column="5">while <condition pos:line="41" pos:column="11">(<expr><name pos:line="41" pos:column="12">NULL<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">!=<pos:position pos:line="41" pos:column="19"/></operator> <operator pos:line="41" pos:column="20">(<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">line<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <call><name pos:line="41" pos:column="28">my_get_line<pos:position pos:line="41" pos:column="39"/></name><argument_list pos:line="41" pos:column="39">(<argument><expr><name pos:line="41" pos:column="40">file<pos:position pos:line="41" pos:column="44"/></name></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call><operator pos:line="41" pos:column="45">)<pos:position pos:line="41" pos:column="46"/></operator></expr>)<pos:position pos:line="41" pos:column="47"/></condition>
    <block pos:line="42" pos:column="5">{
      <comment type="block" pos:line="43" pos:column="7">/* lines with # in the fist column is a comment! */</comment>
      <if pos:line="44" pos:column="7">if <condition pos:line="44" pos:column="10">(<expr><literal type="char" pos:line="44" pos:column="11">'#'<pos:position pos:line="44" pos:column="14"/></literal> <operator pos:line="44" pos:column="15">==<pos:position pos:line="44" pos:column="17"/></operator> <name><name pos:line="44" pos:column="18">line<pos:position pos:line="44" pos:column="22"/></name><index pos:line="44" pos:column="22">[<expr><literal type="number" pos:line="44" pos:column="23">0<pos:position pos:line="44" pos:column="24"/></literal></expr>]<pos:position pos:line="44" pos:column="25"/></index></name></expr>)<pos:position pos:line="44" pos:column="26"/></condition><then pos:line="44" pos:column="26">
      <block pos:line="45" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">free<pos:position pos:line="46" pos:column="13"/></name><argument_list pos:line="46" pos:column="13">(<argument><expr><name pos:line="46" pos:column="14">line<pos:position pos:line="46" pos:column="18"/></name></expr></argument>)<pos:position pos:line="46" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="20"/></expr_stmt>
        <continue pos:line="47" pos:column="9">continue;<pos:position pos:line="47" pos:column="18"/></continue>
      }<pos:position pos:line="48" pos:column="8"/></block></then></if>

      <if pos:line="50" pos:column="7">if <condition pos:line="50" pos:column="10">(<expr><name pos:line="50" pos:column="11">NULL<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">==<pos:position pos:line="50" pos:column="18"/></operator> <operator pos:line="50" pos:column="19">(<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="20">tok1<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">=<pos:position pos:line="50" pos:column="26"/></operator> <call><name pos:line="50" pos:column="27">my_get_token<pos:position pos:line="50" pos:column="39"/></name><argument_list pos:line="50" pos:column="39">(<argument><expr><name pos:line="50" pos:column="40">line<pos:position pos:line="50" pos:column="44"/></name></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call><operator pos:line="50" pos:column="45">)<pos:position pos:line="50" pos:column="46"/></operator></expr>)<pos:position pos:line="50" pos:column="47"/></condition><then pos:line="50" pos:column="47">
      <block pos:line="51" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">free<pos:position pos:line="52" pos:column="13"/></name><argument_list pos:line="52" pos:column="13">(<argument><expr><name pos:line="52" pos:column="14">line<pos:position pos:line="52" pos:column="18"/></name></expr></argument>)<pos:position pos:line="52" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="20"/></expr_stmt>
        <continue pos:line="53" pos:column="9">continue;<pos:position pos:line="53" pos:column="18"/></continue>
      }<pos:position pos:line="54" pos:column="8"/></block></then></if>
      <if pos:line="55" pos:column="7">if <condition pos:line="55" pos:column="10">(<expr><literal type="char" pos:line="55" pos:column="11">'-'<pos:position pos:line="55" pos:column="14"/></literal> <operator pos:line="55" pos:column="15">!=<pos:position pos:line="55" pos:column="17"/></operator> <name><name pos:line="55" pos:column="18">tok1<pos:position pos:line="55" pos:column="22"/></name><index pos:line="55" pos:column="22">[<expr><literal type="number" pos:line="55" pos:column="23">0<pos:position pos:line="55" pos:column="24"/></literal></expr>]<pos:position pos:line="55" pos:column="25"/></index></name></expr>)<pos:position pos:line="55" pos:column="26"/></condition><then pos:line="55" pos:column="26">
      <block pos:line="56" pos:column="7">{
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name><name pos:line="57" pos:column="13">config<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">-&gt;<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="21">url<pos:position pos:line="57" pos:column="24"/></name></name></expr>)<pos:position pos:line="57" pos:column="25"/></condition><then pos:line="57" pos:column="25">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="11">free<pos:position pos:line="58" pos:column="15"/></name><argument_list pos:line="58" pos:column="15">(<argument><expr><name><name pos:line="58" pos:column="16">config<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">-&gt;<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="24">url<pos:position pos:line="58" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="29"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="59" pos:column="9">config<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">-&gt;<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="17">url<pos:position pos:line="59" pos:column="20"/></name></name> <operator pos:line="59" pos:column="21">=<pos:position pos:line="59" pos:column="22"/></operator> <name pos:line="59" pos:column="23">tok1<pos:position pos:line="59" pos:column="27"/></name></expr>;<pos:position pos:line="59" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="60" pos:column="8"/></block></then></if>

      <while pos:line="62" pos:column="7">while <condition pos:line="62" pos:column="13">(<expr><operator pos:line="62" pos:column="14">(<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="15">NULL<pos:position pos:line="62" pos:column="19"/></name> <operator pos:line="62" pos:column="20">!=<pos:position pos:line="62" pos:column="22"/></operator> <name pos:line="62" pos:column="23">tok1<pos:position pos:line="62" pos:column="27"/></name><operator pos:line="62" pos:column="27">)<pos:position pos:line="62" pos:column="28"/></operator> <operator pos:line="62" pos:column="29">&amp;&amp;<pos:position pos:line="62" pos:column="39"/></operator> <operator pos:line="62" pos:column="32">(<pos:position pos:line="62" pos:column="33"/></operator><literal type="char" pos:line="62" pos:column="33">'-'<pos:position pos:line="62" pos:column="36"/></literal> <operator pos:line="62" pos:column="37">==<pos:position pos:line="62" pos:column="39"/></operator> <name><name pos:line="62" pos:column="40">tok1<pos:position pos:line="62" pos:column="44"/></name><index pos:line="62" pos:column="44">[<expr><literal type="number" pos:line="62" pos:column="45">0<pos:position pos:line="62" pos:column="46"/></literal></expr>]<pos:position pos:line="62" pos:column="47"/></index></name><operator pos:line="62" pos:column="47">)<pos:position pos:line="62" pos:column="48"/></operator></expr>)<pos:position pos:line="62" pos:column="49"/></condition>
      <block pos:line="63" pos:column="7">{
        <expr_stmt><expr><name pos:line="64" pos:column="9">tok2<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">=<pos:position pos:line="64" pos:column="15"/></operator> <call><name pos:line="64" pos:column="16">my_get_token<pos:position pos:line="64" pos:column="28"/></name><argument_list pos:line="64" pos:column="28">(<argument><expr><name pos:line="64" pos:column="29">NULL<pos:position pos:line="64" pos:column="33"/></name></expr></argument>)<pos:position pos:line="64" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt>
        <while pos:line="65" pos:column="9">while <condition pos:line="65" pos:column="15">(<expr><name pos:line="65" pos:column="16">NULL<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">==<pos:position pos:line="65" pos:column="23"/></operator> <name pos:line="65" pos:column="24">tok2<pos:position pos:line="65" pos:column="28"/></name></expr>)<pos:position pos:line="65" pos:column="29"/></condition>
        <block pos:line="66" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="67" pos:column="11">free<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><name pos:line="67" pos:column="16">line<pos:position pos:line="67" pos:column="20"/></name></expr></argument>)<pos:position pos:line="67" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="22"/></expr_stmt>
          <if pos:line="68" pos:column="11">if <condition pos:line="68" pos:column="14">(<expr><name pos:line="68" pos:column="15">NULL<pos:position pos:line="68" pos:column="19"/></name> <operator pos:line="68" pos:column="20">==<pos:position pos:line="68" pos:column="22"/></operator> <operator pos:line="68" pos:column="23">(<pos:position pos:line="68" pos:column="24"/></operator><name pos:line="68" pos:column="24">line<pos:position pos:line="68" pos:column="28"/></name> <operator pos:line="68" pos:column="29">=<pos:position pos:line="68" pos:column="30"/></operator> <call><name pos:line="68" pos:column="31">my_get_line<pos:position pos:line="68" pos:column="42"/></name><argument_list pos:line="68" pos:column="42">(<argument><expr><name pos:line="68" pos:column="43">file<pos:position pos:line="68" pos:column="47"/></name></expr></argument>)<pos:position pos:line="68" pos:column="48"/></argument_list></call><operator pos:line="68" pos:column="48">)<pos:position pos:line="68" pos:column="49"/></operator></expr>)<pos:position pos:line="68" pos:column="50"/></condition><then pos:line="68" pos:column="50">
            <block type="pseudo"><break pos:line="69" pos:column="13">break;<pos:position pos:line="69" pos:column="19"/></break></block></then></if>
          <if pos:line="70" pos:column="11">if <condition pos:line="70" pos:column="14">(<expr><literal type="char" pos:line="70" pos:column="15">'#'<pos:position pos:line="70" pos:column="18"/></literal> <operator pos:line="70" pos:column="19">==<pos:position pos:line="70" pos:column="21"/></operator> <name><name pos:line="70" pos:column="22">line<pos:position pos:line="70" pos:column="26"/></name><index pos:line="70" pos:column="26">[<expr><literal type="number" pos:line="70" pos:column="27">0<pos:position pos:line="70" pos:column="28"/></literal></expr>]<pos:position pos:line="70" pos:column="29"/></index></name></expr>)<pos:position pos:line="70" pos:column="30"/></condition><then pos:line="70" pos:column="30">
            <block type="pseudo"><continue pos:line="71" pos:column="13">continue;<pos:position pos:line="71" pos:column="22"/></continue></block></then></if>
          <expr_stmt><expr><name pos:line="72" pos:column="11">tok2<pos:position pos:line="72" pos:column="15"/></name> <operator pos:line="72" pos:column="16">=<pos:position pos:line="72" pos:column="17"/></operator> <call><name pos:line="72" pos:column="18">my_get_token<pos:position pos:line="72" pos:column="30"/></name><argument_list pos:line="72" pos:column="30">(<argument><expr><name pos:line="72" pos:column="31">line<pos:position pos:line="72" pos:column="35"/></name></expr></argument>)<pos:position pos:line="72" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="73" pos:column="10"/></block></while>

        <expr_stmt><expr><name pos:line="75" pos:column="9">res<pos:position pos:line="75" pos:column="12"/></name> <operator pos:line="75" pos:column="13">=<pos:position pos:line="75" pos:column="14"/></operator> <call><name pos:line="75" pos:column="15">getparameter<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><name pos:line="75" pos:column="28">tok1<pos:position pos:line="75" pos:column="32"/></name> <operator pos:line="75" pos:column="33">+<pos:position pos:line="75" pos:column="34"/></operator> <literal type="number" pos:line="75" pos:column="35">1<pos:position pos:line="75" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="38">tok2<pos:position pos:line="75" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="44">&amp;<pos:position pos:line="75" pos:column="49"/></operator><name pos:line="75" pos:column="45">usedarg<pos:position pos:line="75" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="54">config<pos:position pos:line="75" pos:column="60"/></name></expr></argument>)<pos:position pos:line="75" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">free<pos:position pos:line="76" pos:column="13"/></name><argument_list pos:line="76" pos:column="13">(<argument><expr><name pos:line="76" pos:column="14">tok1<pos:position pos:line="76" pos:column="18"/></name></expr></argument>)<pos:position pos:line="76" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="20"/></expr_stmt>
        <if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><operator pos:line="77" pos:column="13">!<pos:position pos:line="77" pos:column="14"/></operator><name pos:line="77" pos:column="14">usedarg<pos:position pos:line="77" pos:column="21"/></name></expr>)<pos:position pos:line="77" pos:column="22"/></condition><then pos:line="77" pos:column="22">
          <block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="11">tok1<pos:position pos:line="78" pos:column="15"/></name> <operator pos:line="78" pos:column="16">=<pos:position pos:line="78" pos:column="17"/></operator> <name pos:line="78" pos:column="18">tok2<pos:position pos:line="78" pos:column="22"/></name></expr>;<pos:position pos:line="78" pos:column="23"/></expr_stmt></block></then>
        <else pos:line="79" pos:column="9">else
        <block pos:line="80" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="81" pos:column="11">free<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">(<argument><expr><name pos:line="81" pos:column="16">tok2<pos:position pos:line="81" pos:column="20"/></name></expr></argument>)<pos:position pos:line="81" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="22"/></expr_stmt>
          <break pos:line="82" pos:column="11">break;<pos:position pos:line="82" pos:column="17"/></break>
        }<pos:position pos:line="83" pos:column="10"/></block></else></if>
        <if pos:line="84" pos:column="9">if<condition pos:line="84" pos:column="11">(<expr><name pos:line="84" pos:column="12">res<pos:position pos:line="84" pos:column="15"/></name></expr>)<pos:position pos:line="84" pos:column="16"/></condition><then pos:line="84" pos:column="16">
          <block type="pseudo"><break pos:line="85" pos:column="11">break;<pos:position pos:line="85" pos:column="17"/></break></block></then></if> <comment type="block" pos:line="85" pos:column="18">/* error detected */</comment>
      }<pos:position pos:line="86" pos:column="8"/></block></while>

      <expr_stmt><expr><call><name pos:line="88" pos:column="7">free<pos:position pos:line="88" pos:column="11"/></name><argument_list pos:line="88" pos:column="11">(<argument><expr><name pos:line="88" pos:column="12">line<pos:position pos:line="88" pos:column="16"/></name></expr></argument>)<pos:position pos:line="88" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="89" pos:column="6"/></block></while>
    <if pos:line="90" pos:column="5">if<condition pos:line="90" pos:column="7">(<expr><name pos:line="90" pos:column="8">file<pos:position pos:line="90" pos:column="12"/></name> <operator pos:line="90" pos:column="13">!=<pos:position pos:line="90" pos:column="15"/></operator> <name pos:line="90" pos:column="16">stdin<pos:position pos:line="90" pos:column="21"/></name></expr>)<pos:position pos:line="90" pos:column="22"/></condition><then pos:line="90" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="91" pos:column="7">fclose<pos:position pos:line="91" pos:column="13"/></name><argument_list pos:line="91" pos:column="13">(<argument><expr><name pos:line="91" pos:column="14">file<pos:position pos:line="91" pos:column="18"/></name></expr></argument>)<pos:position pos:line="91" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="20"/></expr_stmt></block></then></if>
  }<pos:position pos:line="92" pos:column="4"/></block></then></if>
  <if pos:line="93" pos:column="3">if<condition pos:line="93" pos:column="5">(<expr><name pos:line="93" pos:column="6">home<pos:position pos:line="93" pos:column="10"/></name></expr>)<pos:position pos:line="93" pos:column="11"/></condition><then pos:line="93" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="5">free<pos:position pos:line="94" pos:column="9"/></name><argument_list pos:line="94" pos:column="9">(<argument><expr><name pos:line="94" pos:column="10">home<pos:position pos:line="94" pos:column="14"/></name></expr></argument>)<pos:position pos:line="94" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="16"/></expr_stmt></block></then></if>
  <return pos:line="95" pos:column="3">return <expr><name pos:line="95" pos:column="10">CURLE_OK<pos:position pos:line="95" pos:column="18"/></name></expr>;<pos:position pos:line="95" pos:column="19"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2517_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">darwinssl_recv<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">num<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="3" pos:column="31">char<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">buf<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="4" pos:column="31">size_t<pos:position pos:line="4" pos:column="37"/></name></type> <name pos:line="4" pos:column="38">buffersize<pos:position pos:line="4" pos:column="48"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="5" pos:column="31">CURLcode<pos:position pos:line="5" pos:column="39"/></name> <modifier pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></modifier></type><name pos:line="5" pos:column="41">curlcode<pos:position pos:line="5" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="50"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <comment type="block" pos:line="7" pos:column="3">/*struct Curl_easy *data = conn-&gt;data;*/</comment>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">ssl_connect_data<pos:position pos:line="8" pos:column="26"/></name></name> <modifier pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></modifier></type><name pos:line="8" pos:column="28">connssl<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">= <expr><operator pos:line="8" pos:column="38">&amp;<pos:position pos:line="8" pos:column="43"/></operator><name><name pos:line="8" pos:column="39">conn<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">ssl<pos:position pos:line="8" pos:column="48"/></name><index pos:line="8" pos:column="48">[<expr><name pos:line="8" pos:column="49">num<pos:position pos:line="8" pos:column="52"/></name></expr>]<pos:position pos:line="8" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="54"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">processed<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><literal type="number" pos:line="9" pos:column="22">0UL<pos:position pos:line="9" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">OSStatus<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">err<pos:position pos:line="10" pos:column="15"/></name> <init pos:line="10" pos:column="16">= <expr><call><name pos:line="10" pos:column="18">SSLRead<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name><name pos:line="10" pos:column="26">BACKEND<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">-&gt;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="35">ssl_ctx<pos:position pos:line="10" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">buf<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">buffersize<pos:position pos:line="10" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="61">&amp;<pos:position pos:line="10" pos:column="66"/></operator><name pos:line="10" pos:column="62">processed<pos:position pos:line="10" pos:column="71"/></name></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="73"/></decl_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">err<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">!=<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">noErr<pos:position pos:line="12" pos:column="18"/></name></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19"> <block pos:line="12" pos:column="20">{
    <switch pos:line="13" pos:column="5">switch<condition pos:line="13" pos:column="11">(<expr><name pos:line="13" pos:column="12">err<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition> <block pos:line="13" pos:column="17">{
      <case pos:line="14" pos:column="7">case <expr><name pos:line="14" pos:column="12">errSSLWouldBlock<pos:position pos:line="14" pos:column="28"/></name></expr>:<pos:position pos:line="14" pos:column="29"/></case>  <comment type="block" pos:line="14" pos:column="31">/* return how much we read (if anything) */</comment>
        <if pos:line="15" pos:column="9">if<condition pos:line="15" pos:column="11">(<expr><name pos:line="15" pos:column="12">processed<pos:position pos:line="15" pos:column="21"/></name></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22">
          <block type="pseudo"><return pos:line="16" pos:column="11">return <expr><operator pos:line="16" pos:column="18">(<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">ssize_t<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">)<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">processed<pos:position pos:line="16" pos:column="36"/></name></expr>;<pos:position pos:line="16" pos:column="37"/></return></block></then></if>
        <expr_stmt><expr><operator pos:line="17" pos:column="9">*<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">curlcode<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">CURLE_AGAIN<pos:position pos:line="17" pos:column="32"/></name></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><operator pos:line="18" pos:column="16">-<pos:position pos:line="18" pos:column="17"/></operator><literal type="number" pos:line="18" pos:column="17">1L<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></return>
        <break pos:line="19" pos:column="9">break;<pos:position pos:line="19" pos:column="15"/></break>

      <comment type="block" pos:line="21" pos:column="7">/* errSSLClosedGraceful - server gracefully shut down the SSL session
         errSSLClosedNoNotify - server hung up on us instead of sending a
           closure alert notice, read() is returning 0
         Either way, inform the caller that the server disconnected. */</comment>
      <case pos:line="25" pos:column="7">case <expr><name pos:line="25" pos:column="12">errSSLClosedGraceful<pos:position pos:line="25" pos:column="32"/></name></expr>:<pos:position pos:line="25" pos:column="33"/></case>
      <case pos:line="26" pos:column="7">case <expr><name pos:line="26" pos:column="12">errSSLClosedNoNotify<pos:position pos:line="26" pos:column="32"/></name></expr>:<pos:position pos:line="26" pos:column="33"/></case>
        <expr_stmt><expr><operator pos:line="27" pos:column="9">*<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">curlcode<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">CURLE_OK<pos:position pos:line="27" pos:column="29"/></name></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><operator pos:line="28" pos:column="16">-<pos:position pos:line="28" pos:column="17"/></operator><literal type="number" pos:line="28" pos:column="17">1L<pos:position pos:line="28" pos:column="19"/></literal></expr>;<pos:position pos:line="28" pos:column="20"/></return>
        <break pos:line="29" pos:column="9">break;<pos:position pos:line="29" pos:column="15"/></break>

      <default pos:line="31" pos:column="7">default:<pos:position pos:line="31" pos:column="15"/></default>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">failf<pos:position pos:line="32" pos:column="14"/></name><argument_list pos:line="32" pos:column="14">(<argument><expr><name><name pos:line="32" pos:column="15">conn<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">-&gt;<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="21">data<pos:position pos:line="32" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="27">"SSLRead() return error %d"<pos:position pos:line="32" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="56">err<pos:position pos:line="32" pos:column="59"/></name></expr></argument>)<pos:position pos:line="32" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="33" pos:column="9">*<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">curlcode<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <name pos:line="33" pos:column="21">CURLE_RECV_ERROR<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
        <return pos:line="34" pos:column="9">return <expr><operator pos:line="34" pos:column="16">-<pos:position pos:line="34" pos:column="17"/></operator><literal type="number" pos:line="34" pos:column="17">1L<pos:position pos:line="34" pos:column="19"/></literal></expr>;<pos:position pos:line="34" pos:column="20"/></return>
        <break pos:line="35" pos:column="9">break;<pos:position pos:line="35" pos:column="15"/></break>
    }<pos:position pos:line="36" pos:column="6"/></block></switch>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>
  <return pos:line="38" pos:column="3">return <expr><operator pos:line="38" pos:column="10">(<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="11">ssize_t<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">)<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">processed<pos:position pos:line="38" pos:column="28"/></name></expr>;<pos:position pos:line="38" pos:column="29"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1221_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ssh_connect<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">connectdata<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">conn<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">bool<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">done<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">CURL_LIBSSH2_DEBUG<pos:position pos:line="3" pos:column="26"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">curl_socket_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">sock<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
<cpp:endif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">endif<pos:position pos:line="5" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">ssh_conn<pos:position pos:line="6" pos:column="18"/></name></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">ssh<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">result<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">Curl_easy<pos:position pos:line="8" pos:column="19"/></name></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">data<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name><name pos:line="8" pos:column="28">conn<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">data<pos:position pos:line="8" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* initialize per-handle data if not already */</comment>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">!<pos:position pos:line="11" pos:column="7"/></operator><name><name pos:line="11" pos:column="7">data<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">req<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">.<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">protop<pos:position pos:line="11" pos:column="23"/></name></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">ssh_setup_connection<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">conn<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="14" pos:column="3">/* We default to persistent connections. We set this already in this connect
     function to make the re-use checks properly be able to check this bit. */</comment>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">connkeep<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">conn<pos:position pos:line="16" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="18">"SSH default"<pos:position pos:line="16" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><name><name pos:line="18" pos:column="6">conn<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">handler<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">protocol<pos:position pos:line="18" pos:column="29"/></name></name> <operator pos:line="18" pos:column="30">&amp;<pos:position pos:line="18" pos:column="35"/></operator> <name pos:line="18" pos:column="32">CURLPROTO_SCP<pos:position pos:line="18" pos:column="45"/></name></expr>)<pos:position pos:line="18" pos:column="46"/></condition><then pos:line="18" pos:column="46"> <block pos:line="18" pos:column="47">{
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">conn<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">recv<pos:position pos:line="19" pos:column="15"/></name><index pos:line="19" pos:column="15">[<expr><name pos:line="19" pos:column="16">FIRSTSOCKET<pos:position pos:line="19" pos:column="27"/></name></expr>]<pos:position pos:line="19" pos:column="28"/></index></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">scp_recv<pos:position pos:line="19" pos:column="39"/></name></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">conn<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">send<pos:position pos:line="20" pos:column="15"/></name><index pos:line="20" pos:column="15">[<expr><name pos:line="20" pos:column="16">FIRSTSOCKET<pos:position pos:line="20" pos:column="27"/></name></expr>]<pos:position pos:line="20" pos:column="28"/></index></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <name pos:line="20" pos:column="31">scp_send<pos:position pos:line="20" pos:column="39"/></name></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then>
  <else pos:line="22" pos:column="3">else <block pos:line="22" pos:column="8">{
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">conn<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">recv<pos:position pos:line="23" pos:column="15"/></name><index pos:line="23" pos:column="15">[<expr><name pos:line="23" pos:column="16">FIRSTSOCKET<pos:position pos:line="23" pos:column="27"/></name></expr>]<pos:position pos:line="23" pos:column="28"/></index></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <name pos:line="23" pos:column="31">sftp_recv<pos:position pos:line="23" pos:column="40"/></name></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">conn<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">-&gt;<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="11">send<pos:position pos:line="24" pos:column="15"/></name><index pos:line="24" pos:column="15">[<expr><name pos:line="24" pos:column="16">FIRSTSOCKET<pos:position pos:line="24" pos:column="27"/></name></expr>]<pos:position pos:line="24" pos:column="28"/></index></name> <operator pos:line="24" pos:column="29">=<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="31">sftp_send<pos:position pos:line="24" pos:column="40"/></name></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name pos:line="26" pos:column="3">ssh<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">=<pos:position pos:line="26" pos:column="8"/></operator> <operator pos:line="26" pos:column="9">&amp;<pos:position pos:line="26" pos:column="14"/></operator><name><name pos:line="26" pos:column="10">conn<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">proto<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">.<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">sshc<pos:position pos:line="26" pos:column="26"/></name></name></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>

<cpp:ifdef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifdef<pos:position pos:line="28" pos:column="7"/></cpp:directive> <name pos:line="28" pos:column="8">CURL_LIBSSH2_DEBUG<pos:position pos:line="28" pos:column="26"/></name></cpp:ifdef>
  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">(<expr><name><name pos:line="29" pos:column="6">conn<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">user<pos:position pos:line="29" pos:column="16"/></name></name></expr>)<pos:position pos:line="29" pos:column="17"/></condition><then pos:line="29" pos:column="17"> <block pos:line="29" pos:column="18">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">infof<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><name pos:line="30" pos:column="11">data<pos:position pos:line="30" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="17">"User: %s\n"<pos:position pos:line="30" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="31">conn<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">user<pos:position pos:line="30" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>
  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">(<expr><name><name pos:line="32" pos:column="6">conn<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">passwd<pos:position pos:line="32" pos:column="18"/></name></name></expr>)<pos:position pos:line="32" pos:column="19"/></condition><then pos:line="32" pos:column="19"> <block pos:line="32" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">infof<pos:position pos:line="33" pos:column="10"/></name><argument_list pos:line="33" pos:column="10">(<argument><expr><name pos:line="33" pos:column="11">data<pos:position pos:line="33" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="17">"Password: %s\n"<pos:position pos:line="33" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="35">conn<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">-&gt;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="41">passwd<pos:position pos:line="33" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="35" pos:column="3">sock<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <name><name pos:line="35" pos:column="10">conn<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">-&gt;<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="16">sock<pos:position pos:line="35" pos:column="20"/></name><index pos:line="35" pos:column="20">[<expr><name pos:line="35" pos:column="21">FIRSTSOCKET<pos:position pos:line="35" pos:column="32"/></name></expr>]<pos:position pos:line="35" pos:column="33"/></index></name></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="36" pos:column="8">/* CURL_LIBSSH2_DEBUG */</comment>

  <expr_stmt><expr><name><name pos:line="38" pos:column="3">ssh<pos:position pos:line="38" pos:column="6"/></name><operator pos:line="38" pos:column="6">-&gt;<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="8">ssh_session<pos:position pos:line="38" pos:column="19"/></name></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <call><name pos:line="38" pos:column="22">libssh2_session_init_ex<pos:position pos:line="38" pos:column="45"/></name><argument_list pos:line="38" pos:column="45">(<argument><expr><name pos:line="38" pos:column="46">my_libssh2_malloc<pos:position pos:line="38" pos:column="63"/></name></expr></argument>,
                                             <argument><expr><name pos:line="39" pos:column="46">my_libssh2_free<pos:position pos:line="39" pos:column="61"/></name></expr></argument>,
                                             <argument><expr><name pos:line="40" pos:column="46">my_libssh2_realloc<pos:position pos:line="40" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="66">conn<pos:position pos:line="40" pos:column="70"/></name></expr></argument>)<pos:position pos:line="40" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="72"/></expr_stmt>
  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><name><name pos:line="41" pos:column="6">ssh<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">-&gt;<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="11">ssh_session<pos:position pos:line="41" pos:column="22"/></name></name> <operator pos:line="41" pos:column="23">==<pos:position pos:line="41" pos:column="25"/></operator> <name pos:line="41" pos:column="26">NULL<pos:position pos:line="41" pos:column="30"/></name></expr>)<pos:position pos:line="41" pos:column="31"/></condition><then pos:line="41" pos:column="31"> <block pos:line="41" pos:column="32">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">failf<pos:position pos:line="42" pos:column="10"/></name><argument_list pos:line="42" pos:column="10">(<argument><expr><name pos:line="42" pos:column="11">data<pos:position pos:line="42" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="17">"Failure initialising ssh session"<pos:position pos:line="42" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="53"/></expr_stmt>
    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">CURLE_FAILED_INIT<pos:position pos:line="43" pos:column="29"/></name></expr>;<pos:position pos:line="43" pos:column="30"/></return>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <if pos:line="46" pos:column="3">if<condition pos:line="46" pos:column="5">(<expr><name><name pos:line="46" pos:column="6">data<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">-&gt;<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="12">set<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">.<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">ssh_compression<pos:position pos:line="46" pos:column="31"/></name></name></expr>)<pos:position pos:line="46" pos:column="32"/></condition><then pos:line="46" pos:column="32"> <block pos:line="46" pos:column="33">{
<cpp:if pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">if<pos:position pos:line="47" pos:column="4"/></cpp:directive> <expr><name pos:line="47" pos:column="5">LIBSSH2_VERSION_NUM<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">&gt;=<pos:position pos:line="47" pos:column="30"/></operator> <literal type="number" pos:line="47" pos:column="28">0x010208<pos:position pos:line="47" pos:column="36"/></literal></expr></cpp:if>
    <if pos:line="48" pos:column="5">if<condition pos:line="48" pos:column="7">(<expr><call><name pos:line="48" pos:column="8">libssh2_session_flag<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name><name pos:line="48" pos:column="29">ssh<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">-&gt;<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="34">ssh_session<pos:position pos:line="48" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="47">LIBSSH2_FLAG_COMPRESS<pos:position pos:line="48" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="70">1<pos:position pos:line="48" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="72"/></argument_list></call> <operator pos:line="48" pos:column="73">&lt;<pos:position pos:line="48" pos:column="77"/></operator> <literal type="number" pos:line="48" pos:column="75">0<pos:position pos:line="48" pos:column="76"/></literal></expr>)<pos:position pos:line="48" pos:column="77"/></condition><then pos:line="48" pos:column="77">
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="7">infof<pos:position pos:line="50" pos:column="12"/></name><argument_list pos:line="50" pos:column="12">(<argument><expr><name pos:line="50" pos:column="13">data<pos:position pos:line="50" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="19">"Failed to enable compression for ssh session\n"<pos:position pos:line="50" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="69"/></expr_stmt></block></then></if>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">ifdef<pos:position pos:line="53" pos:column="7"/></cpp:directive> <name pos:line="53" pos:column="8">HAVE_LIBSSH2_KNOWNHOST_API<pos:position pos:line="53" pos:column="34"/></name></cpp:ifdef>
  <if pos:line="54" pos:column="3">if<condition pos:line="54" pos:column="5">(<expr><name><name pos:line="54" pos:column="6">data<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">-&gt;<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="12">set<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">.<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="16">str<pos:position pos:line="54" pos:column="19"/></name><index pos:line="54" pos:column="19">[<expr><name pos:line="54" pos:column="20">STRING_SSH_KNOWNHOSTS<pos:position pos:line="54" pos:column="41"/></name></expr>]<pos:position pos:line="54" pos:column="42"/></index></name></expr>)<pos:position pos:line="54" pos:column="43"/></condition><then pos:line="54" pos:column="43"> <block pos:line="54" pos:column="44">{
    <decl_stmt><decl><type><name pos:line="55" pos:column="5">int<pos:position pos:line="55" pos:column="8"/></name></type> <name pos:line="55" pos:column="9">rc<pos:position pos:line="55" pos:column="11"/></name></decl>;<pos:position pos:line="55" pos:column="12"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">ssh<pos:position pos:line="56" pos:column="8"/></name><operator pos:line="56" pos:column="8">-&gt;<pos:position pos:line="56" pos:column="13"/></operator><name pos:line="56" pos:column="10">kh<pos:position pos:line="56" pos:column="12"/></name></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <call><name pos:line="56" pos:column="15">libssh2_knownhost_init<pos:position pos:line="56" pos:column="37"/></name><argument_list pos:line="56" pos:column="37">(<argument><expr><name><name pos:line="56" pos:column="38">ssh<pos:position pos:line="56" pos:column="41"/></name><operator pos:line="56" pos:column="41">-&gt;<pos:position pos:line="56" pos:column="46"/></operator><name pos:line="56" pos:column="43">ssh_session<pos:position pos:line="56" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="56"/></expr_stmt>
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">(<expr><operator pos:line="57" pos:column="8">!<pos:position pos:line="57" pos:column="9"/></operator><name><name pos:line="57" pos:column="9">ssh<pos:position pos:line="57" pos:column="12"/></name><operator pos:line="57" pos:column="12">-&gt;<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="14">kh<pos:position pos:line="57" pos:column="16"/></name></name></expr>)<pos:position pos:line="57" pos:column="17"/></condition><then pos:line="57" pos:column="17"> <block pos:line="57" pos:column="18">{
      <comment type="block" pos:line="58" pos:column="7">/* eeek. TODO: free the ssh_session! */</comment>
      <return pos:line="59" pos:column="7">return <expr><name pos:line="59" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="59" pos:column="31"/></name></expr>;<pos:position pos:line="59" pos:column="32"/></return>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="62" pos:column="5">/* read all known hosts from there */</comment>
    <expr_stmt><expr><name pos:line="63" pos:column="5">rc<pos:position pos:line="63" pos:column="7"/></name> <operator pos:line="63" pos:column="8">=<pos:position pos:line="63" pos:column="9"/></operator> <call><name pos:line="63" pos:column="10">libssh2_knownhost_readfile<pos:position pos:line="63" pos:column="36"/></name><argument_list pos:line="63" pos:column="36">(<argument><expr><name><name pos:line="63" pos:column="37">ssh<pos:position pos:line="63" pos:column="40"/></name><operator pos:line="63" pos:column="40">-&gt;<pos:position pos:line="63" pos:column="45"/></operator><name pos:line="63" pos:column="42">kh<pos:position pos:line="63" pos:column="44"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="64" pos:column="37">data<pos:position pos:line="64" pos:column="41"/></name><operator pos:line="64" pos:column="41">-&gt;<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="43">set<pos:position pos:line="64" pos:column="46"/></name><operator pos:line="64" pos:column="46">.<pos:position pos:line="64" pos:column="47"/></operator><name pos:line="64" pos:column="47">str<pos:position pos:line="64" pos:column="50"/></name><index pos:line="64" pos:column="50">[<expr><name pos:line="64" pos:column="51">STRING_SSH_KNOWNHOSTS<pos:position pos:line="64" pos:column="72"/></name></expr>]<pos:position pos:line="64" pos:column="73"/></index></name></expr></argument>,
                                    <argument><expr><name pos:line="65" pos:column="37">LIBSSH2_KNOWNHOST_FILE_OPENSSH<pos:position pos:line="65" pos:column="67"/></name></expr></argument>)<pos:position pos:line="65" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="69"/></expr_stmt>
    <if pos:line="66" pos:column="5">if<condition pos:line="66" pos:column="7">(<expr><name pos:line="66" pos:column="8">rc<pos:position pos:line="66" pos:column="10"/></name> <operator pos:line="66" pos:column="11">&lt;<pos:position pos:line="66" pos:column="15"/></operator> <literal type="number" pos:line="66" pos:column="13">0<pos:position pos:line="66" pos:column="14"/></literal></expr>)<pos:position pos:line="66" pos:column="15"/></condition><then pos:line="66" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="7">infof<pos:position pos:line="67" pos:column="12"/></name><argument_list pos:line="67" pos:column="12">(<argument><expr><name pos:line="67" pos:column="13">data<pos:position pos:line="67" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="19">"Failed to read known hosts from %s\n"<pos:position pos:line="67" pos:column="57"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="68" pos:column="13">data<pos:position pos:line="68" pos:column="17"/></name><operator pos:line="68" pos:column="17">-&gt;<pos:position pos:line="68" pos:column="22"/></operator><name pos:line="68" pos:column="19">set<pos:position pos:line="68" pos:column="22"/></name><operator pos:line="68" pos:column="22">.<pos:position pos:line="68" pos:column="23"/></operator><name pos:line="68" pos:column="23">str<pos:position pos:line="68" pos:column="26"/></name><index pos:line="68" pos:column="26">[<expr><name pos:line="68" pos:column="27">STRING_SSH_KNOWNHOSTS<pos:position pos:line="68" pos:column="48"/></name></expr>]<pos:position pos:line="68" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="68" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="51"/></expr_stmt></block></then></if>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>
<cpp:endif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">endif<pos:position pos:line="70" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="70" pos:column="8">/* HAVE_LIBSSH2_KNOWNHOST_API */</comment>

<cpp:ifdef pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">ifdef<pos:position pos:line="72" pos:column="7"/></cpp:directive> <name pos:line="72" pos:column="8">CURL_LIBSSH2_DEBUG<pos:position pos:line="72" pos:column="26"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="73" pos:column="3">libssh2_trace<pos:position pos:line="73" pos:column="16"/></name><argument_list pos:line="73" pos:column="16">(<argument><expr><name><name pos:line="73" pos:column="17">ssh<pos:position pos:line="73" pos:column="20"/></name><operator pos:line="73" pos:column="20">-&gt;<pos:position pos:line="73" pos:column="25"/></operator><name pos:line="73" pos:column="22">ssh_session<pos:position pos:line="73" pos:column="33"/></name></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="35">~<pos:position pos:line="73" pos:column="36"/></operator><literal type="number" pos:line="73" pos:column="36">0<pos:position pos:line="73" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="74" pos:column="3">infof<pos:position pos:line="74" pos:column="8"/></name><argument_list pos:line="74" pos:column="8">(<argument><expr><name pos:line="74" pos:column="9">data<pos:position pos:line="74" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="15">"SSH socket: %d\n"<pos:position pos:line="74" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="74" pos:column="35">(<pos:position pos:line="74" pos:column="36"/></operator><name pos:line="74" pos:column="36">int<pos:position pos:line="74" pos:column="39"/></name><operator pos:line="74" pos:column="39">)<pos:position pos:line="74" pos:column="40"/></operator><name pos:line="74" pos:column="40">sock<pos:position pos:line="74" pos:column="44"/></name></expr></argument>)<pos:position pos:line="74" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">endif<pos:position pos:line="75" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="75" pos:column="8">/* CURL_LIBSSH2_DEBUG */</comment>

  <expr_stmt><expr><call><name pos:line="77" pos:column="3">state<pos:position pos:line="77" pos:column="8"/></name><argument_list pos:line="77" pos:column="8">(<argument><expr><name pos:line="77" pos:column="9">conn<pos:position pos:line="77" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="15">SSH_INIT<pos:position pos:line="77" pos:column="23"/></name></expr></argument>)<pos:position pos:line="77" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><name pos:line="79" pos:column="3">result<pos:position pos:line="79" pos:column="9"/></name> <operator pos:line="79" pos:column="10">=<pos:position pos:line="79" pos:column="11"/></operator> <call><name pos:line="79" pos:column="12">ssh_multi_statemach<pos:position pos:line="79" pos:column="31"/></name><argument_list pos:line="79" pos:column="31">(<argument><expr><name pos:line="79" pos:column="32">conn<pos:position pos:line="79" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="38">done<pos:position pos:line="79" pos:column="42"/></name></expr></argument>)<pos:position pos:line="79" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="44"/></expr_stmt>

  <return pos:line="81" pos:column="3">return <expr><name pos:line="81" pos:column="10">result<pos:position pos:line="81" pos:column="16"/></name></expr>;<pos:position pos:line="81" pos:column="17"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

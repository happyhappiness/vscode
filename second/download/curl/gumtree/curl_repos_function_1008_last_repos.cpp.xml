<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1008_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_is_connected<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">connectdata<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">conn<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">sockindex<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="3" pos:column="28">bool<pos:position pos:line="3" pos:column="32"/></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">connected<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="44"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Curl_easy<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">data<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">conn<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">data<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">CURLE_OK<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">time_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">allow<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">error<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><literal type="number" pos:line="8" pos:column="15">0<pos:position pos:line="8" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">curltime<pos:position pos:line="9" pos:column="18"/></name></name></type> <name pos:line="9" pos:column="19">now<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">rc<pos:position pos:line="10" pos:column="9"/></name></decl>;<pos:position pos:line="10" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">i<pos:position pos:line="11" pos:column="8"/></name></decl>;<pos:position pos:line="11" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">DEBUGASSERT<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">sockindex<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">&gt;=<pos:position pos:line="13" pos:column="30"/></operator> <name pos:line="13" pos:column="28">FIRSTSOCKET<pos:position pos:line="13" pos:column="39"/></name> <operator pos:line="13" pos:column="40">&amp;&amp;<pos:position pos:line="13" pos:column="50"/></operator> <name pos:line="13" pos:column="43">sockindex<pos:position pos:line="13" pos:column="52"/></name> <operator pos:line="13" pos:column="53">&lt;=<pos:position pos:line="13" pos:column="58"/></operator> <name pos:line="13" pos:column="56">SECONDARYSOCKET<pos:position pos:line="13" pos:column="71"/></name></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="73"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="15" pos:column="3">*<pos:position pos:line="15" pos:column="4"/></operator><name pos:line="15" pos:column="4">connected<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">FALSE<pos:position pos:line="15" pos:column="21"/></name></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt> <comment type="block" pos:line="15" pos:column="23">/* a very negative world view is best */</comment>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name><name pos:line="17" pos:column="6">conn<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">bits<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">.<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">tcpconnect<pos:position pos:line="17" pos:column="27"/></name><index pos:line="17" pos:column="27">[<expr><name pos:line="17" pos:column="28">sockindex<pos:position pos:line="17" pos:column="37"/></name></expr>]<pos:position pos:line="17" pos:column="38"/></index></name></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39"> <block pos:line="17" pos:column="40">{
    <comment type="block" pos:line="18" pos:column="5">/* we are connected already! */</comment>
    <expr_stmt><expr><operator pos:line="19" pos:column="5">*<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">connected<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">TRUE<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">CURLE_OK<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="23" pos:column="3">now<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <call><name pos:line="23" pos:column="9">Curl_tvnow<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">()<pos:position pos:line="23" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* figure out how long time we have left to connect */</comment>
  <expr_stmt><expr><name pos:line="26" pos:column="3">allow<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <call><name pos:line="26" pos:column="11">Curl_timeleft<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">data<pos:position pos:line="26" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="31">&amp;<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="32">now<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="37">TRUE<pos:position pos:line="26" pos:column="41"/></name></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>

  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><name pos:line="28" pos:column="6">allow<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">&lt;<pos:position pos:line="28" pos:column="16"/></operator> <literal type="number" pos:line="28" pos:column="14">0<pos:position pos:line="28" pos:column="15"/></literal></expr>)<pos:position pos:line="28" pos:column="16"/></condition><then pos:line="28" pos:column="16"> <block pos:line="28" pos:column="17">{
    <comment type="block" pos:line="29" pos:column="5">/* time-out, bail out, go home */</comment>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">failf<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><name pos:line="30" pos:column="11">data<pos:position pos:line="30" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="17">"Connection time-out"<pos:position pos:line="30" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="31" pos:column="36"/></name></expr>;<pos:position pos:line="31" pos:column="37"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <for pos:line="34" pos:column="3">for<control pos:line="34" pos:column="6">(<init><expr><name pos:line="34" pos:column="7">i<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">=<pos:position pos:line="34" pos:column="10"/></operator> <literal type="number" pos:line="34" pos:column="11">0<pos:position pos:line="34" pos:column="12"/></literal></expr>;<pos:position pos:line="34" pos:column="13"/></init> <condition><expr><name pos:line="34" pos:column="14">i<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">&lt;<pos:position pos:line="34" pos:column="19"/></operator><literal type="number" pos:line="34" pos:column="16">2<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></condition> <incr><expr><name pos:line="34" pos:column="19">i<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">++<pos:position pos:line="34" pos:column="22"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="23"/></control> <block pos:line="34" pos:column="24">{
    <decl_stmt><decl><type><specifier pos:line="35" pos:column="5">const<pos:position pos:line="35" pos:column="10"/></specifier> <name pos:line="35" pos:column="11">int<pos:position pos:line="35" pos:column="14"/></name></type> <name pos:line="35" pos:column="15">other<pos:position pos:line="35" pos:column="20"/></name> <init pos:line="35" pos:column="21">= <expr><name pos:line="35" pos:column="23">i<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">^<pos:position pos:line="35" pos:column="26"/></operator> <literal type="number" pos:line="35" pos:column="27">1<pos:position pos:line="35" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="35" pos:column="29"/></decl_stmt>
    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">(<expr><name><name pos:line="36" pos:column="8">conn<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">tempsock<pos:position pos:line="36" pos:column="22"/></name><index pos:line="36" pos:column="22">[<expr><name pos:line="36" pos:column="23">i<pos:position pos:line="36" pos:column="24"/></name></expr>]<pos:position pos:line="36" pos:column="25"/></index></name> <operator pos:line="36" pos:column="26">==<pos:position pos:line="36" pos:column="28"/></operator> <name pos:line="36" pos:column="29">CURL_SOCKET_BAD<pos:position pos:line="36" pos:column="44"/></name></expr>)<pos:position pos:line="36" pos:column="45"/></condition><then pos:line="36" pos:column="45">
      <block type="pseudo"><continue pos:line="37" pos:column="7">continue;<pos:position pos:line="37" pos:column="16"/></continue></block></then></if>

<cpp:ifdef pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">ifdef<pos:position pos:line="39" pos:column="7"/></cpp:directive> <name pos:line="39" pos:column="8">mpeix<pos:position pos:line="39" pos:column="13"/></name></cpp:ifdef>
    <comment type="block" pos:line="40" pos:column="5">/* Call this function once now, and ignore the results. We do this to
       "clear" the error state on the socket so that we can later read it
       reliably. This is reported necessary on the MPE/iX operating system. */</comment>
    <expr_stmt><expr><operator pos:line="43" pos:column="5">(<pos:position pos:line="43" pos:column="6"/></operator><name pos:line="43" pos:column="6">void<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">)<pos:position pos:line="43" pos:column="11"/></operator><call><name pos:line="43" pos:column="11">verifyconnect<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name><name pos:line="43" pos:column="25">conn<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">-&gt;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="31">tempsock<pos:position pos:line="43" pos:column="39"/></name><index pos:line="43" pos:column="39">[<expr><name pos:line="43" pos:column="40">i<pos:position pos:line="43" pos:column="41"/></name></expr>]<pos:position pos:line="43" pos:column="42"/></index></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="44">NULL<pos:position pos:line="43" pos:column="48"/></name></expr></argument>)<pos:position pos:line="43" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="50"/></expr_stmt>
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="46" pos:column="5">/* check socket for connect */</comment>
    <expr_stmt><expr><name pos:line="47" pos:column="5">rc<pos:position pos:line="47" pos:column="7"/></name> <operator pos:line="47" pos:column="8">=<pos:position pos:line="47" pos:column="9"/></operator> <call><name pos:line="47" pos:column="10">SOCKET_WRITABLE<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name><name pos:line="47" pos:column="26">conn<pos:position pos:line="47" pos:column="30"/></name><operator pos:line="47" pos:column="30">-&gt;<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="32">tempsock<pos:position pos:line="47" pos:column="40"/></name><index pos:line="47" pos:column="40">[<expr><name pos:line="47" pos:column="41">i<pos:position pos:line="47" pos:column="42"/></name></expr>]<pos:position pos:line="47" pos:column="43"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="45">0<pos:position pos:line="47" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt>

    <if pos:line="49" pos:column="5">if<condition pos:line="49" pos:column="7">(<expr><name pos:line="49" pos:column="8">rc<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">==<pos:position pos:line="49" pos:column="13"/></operator> <literal type="number" pos:line="49" pos:column="14">0<pos:position pos:line="49" pos:column="15"/></literal></expr>)<pos:position pos:line="49" pos:column="16"/></condition><then pos:line="49" pos:column="16"> <block pos:line="49" pos:column="17">{ <comment type="block" pos:line="49" pos:column="19">/* no connection yet */</comment>
      <expr_stmt><expr><name pos:line="50" pos:column="7">error<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <literal type="number" pos:line="50" pos:column="15">0<pos:position pos:line="50" pos:column="16"/></literal></expr>;<pos:position pos:line="50" pos:column="17"/></expr_stmt>
      <if pos:line="51" pos:column="7">if<condition pos:line="51" pos:column="9">(<expr><call><name pos:line="51" pos:column="10">curlx_tvdiff<pos:position pos:line="51" pos:column="22"/></name><argument_list pos:line="51" pos:column="22">(<argument><expr><name pos:line="51" pos:column="23">now<pos:position pos:line="51" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="28">conn<pos:position pos:line="51" pos:column="32"/></name><operator pos:line="51" pos:column="32">-&gt;<pos:position pos:line="51" pos:column="37"/></operator><name pos:line="51" pos:column="34">connecttime<pos:position pos:line="51" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="46"/></argument_list></call> <operator pos:line="51" pos:column="47">&gt;=<pos:position pos:line="51" pos:column="52"/></operator> <name><name pos:line="51" pos:column="50">conn<pos:position pos:line="51" pos:column="54"/></name><operator pos:line="51" pos:column="54">-&gt;<pos:position pos:line="51" pos:column="59"/></operator><name pos:line="51" pos:column="56">timeoutms_per_addr<pos:position pos:line="51" pos:column="74"/></name></name></expr>)<pos:position pos:line="51" pos:column="75"/></condition><then pos:line="51" pos:column="75"> <block pos:line="51" pos:column="76">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">infof<pos:position pos:line="52" pos:column="14"/></name><argument_list pos:line="52" pos:column="14">(<argument><expr><name pos:line="52" pos:column="15">data<pos:position pos:line="52" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="21">"After %ldms connect time, move on!\n"<pos:position pos:line="52" pos:column="59"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="53" pos:column="15">conn<pos:position pos:line="53" pos:column="19"/></name><operator pos:line="53" pos:column="19">-&gt;<pos:position pos:line="53" pos:column="24"/></operator><name pos:line="53" pos:column="21">timeoutms_per_addr<pos:position pos:line="53" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="54" pos:column="9">error<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">=<pos:position pos:line="54" pos:column="16"/></operator> <name pos:line="54" pos:column="17">ETIMEDOUT<pos:position pos:line="54" pos:column="26"/></name></expr>;<pos:position pos:line="54" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="55" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="57" pos:column="7">/* should we try another protocol family? */</comment>
      <if pos:line="58" pos:column="7">if<condition pos:line="58" pos:column="9">(<expr><name pos:line="58" pos:column="10">i<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">==<pos:position pos:line="58" pos:column="14"/></operator> <literal type="number" pos:line="58" pos:column="15">0<pos:position pos:line="58" pos:column="16"/></literal> <operator pos:line="58" pos:column="17">&amp;&amp;<pos:position pos:line="58" pos:column="27"/></operator> <name><name pos:line="58" pos:column="20">conn<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">-&gt;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="26">tempaddr<pos:position pos:line="58" pos:column="34"/></name><index pos:line="58" pos:column="34">[<expr><literal type="number" pos:line="58" pos:column="35">1<pos:position pos:line="58" pos:column="36"/></literal></expr>]<pos:position pos:line="58" pos:column="37"/></index></name> <operator pos:line="58" pos:column="38">==<pos:position pos:line="58" pos:column="40"/></operator> <name pos:line="58" pos:column="41">NULL<pos:position pos:line="58" pos:column="45"/></name> <operator pos:line="58" pos:column="46">&amp;&amp;<pos:position pos:line="58" pos:column="56"/></operator>
         <call><name pos:line="59" pos:column="10">curlx_tvdiff<pos:position pos:line="59" pos:column="22"/></name><argument_list pos:line="59" pos:column="22">(<argument><expr><name pos:line="59" pos:column="23">now<pos:position pos:line="59" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="28">conn<pos:position pos:line="59" pos:column="32"/></name><operator pos:line="59" pos:column="32">-&gt;<pos:position pos:line="59" pos:column="37"/></operator><name pos:line="59" pos:column="34">connecttime<pos:position pos:line="59" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="46"/></argument_list></call> <operator pos:line="59" pos:column="47">&gt;=<pos:position pos:line="59" pos:column="52"/></operator> <name pos:line="59" pos:column="50">HAPPY_EYEBALLS_TIMEOUT<pos:position pos:line="59" pos:column="72"/></name></expr>)<pos:position pos:line="59" pos:column="73"/></condition><then pos:line="59" pos:column="73"> <block pos:line="59" pos:column="74">{
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">trynextip<pos:position pos:line="60" pos:column="18"/></name><argument_list pos:line="60" pos:column="18">(<argument><expr><name pos:line="60" pos:column="19">conn<pos:position pos:line="60" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="25">sockindex<pos:position pos:line="60" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="36">1<pos:position pos:line="60" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="61" pos:column="8"/></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block></then>
    <elseif pos:line="63" pos:column="5">else <if pos:line="63" pos:column="10">if<condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">rc<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">==<pos:position pos:line="63" pos:column="18"/></operator> <name pos:line="63" pos:column="19">CURL_CSELECT_OUT<pos:position pos:line="63" pos:column="35"/></name> <operator pos:line="63" pos:column="36">||<pos:position pos:line="63" pos:column="38"/></operator> <name><name pos:line="63" pos:column="39">conn<pos:position pos:line="63" pos:column="43"/></name><operator pos:line="63" pos:column="43">-&gt;<pos:position pos:line="63" pos:column="48"/></operator><name pos:line="63" pos:column="45">bits<pos:position pos:line="63" pos:column="49"/></name><operator pos:line="63" pos:column="49">.<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="50">tcp_fastopen<pos:position pos:line="63" pos:column="62"/></name></name></expr>)<pos:position pos:line="63" pos:column="63"/></condition><then pos:line="63" pos:column="63"> <block pos:line="63" pos:column="64">{
      <if pos:line="64" pos:column="7">if<condition pos:line="64" pos:column="9">(<expr><call><name pos:line="64" pos:column="10">verifyconnect<pos:position pos:line="64" pos:column="23"/></name><argument_list pos:line="64" pos:column="23">(<argument><expr><name><name pos:line="64" pos:column="24">conn<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">-&gt;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="30">tempsock<pos:position pos:line="64" pos:column="38"/></name><index pos:line="64" pos:column="38">[<expr><name pos:line="64" pos:column="39">i<pos:position pos:line="64" pos:column="40"/></name></expr>]<pos:position pos:line="64" pos:column="41"/></index></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="43">&amp;<pos:position pos:line="64" pos:column="48"/></operator><name pos:line="64" pos:column="44">error<pos:position pos:line="64" pos:column="49"/></name></expr></argument>)<pos:position pos:line="64" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="51"/></condition><then pos:line="64" pos:column="51"> <block pos:line="64" pos:column="52">{
        <comment type="block" pos:line="65" pos:column="9">/* we are connected with TCP, awesome! */</comment>

        <comment type="block" pos:line="67" pos:column="9">/* use this socket from now on */</comment>
        <expr_stmt><expr><name><name pos:line="68" pos:column="9">conn<pos:position pos:line="68" pos:column="13"/></name><operator pos:line="68" pos:column="13">-&gt;<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="15">sock<pos:position pos:line="68" pos:column="19"/></name><index pos:line="68" pos:column="19">[<expr><name pos:line="68" pos:column="20">sockindex<pos:position pos:line="68" pos:column="29"/></name></expr>]<pos:position pos:line="68" pos:column="30"/></index></name> <operator pos:line="68" pos:column="31">=<pos:position pos:line="68" pos:column="32"/></operator> <name><name pos:line="68" pos:column="33">conn<pos:position pos:line="68" pos:column="37"/></name><operator pos:line="68" pos:column="37">-&gt;<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="39">tempsock<pos:position pos:line="68" pos:column="47"/></name><index pos:line="68" pos:column="47">[<expr><name pos:line="68" pos:column="48">i<pos:position pos:line="68" pos:column="49"/></name></expr>]<pos:position pos:line="68" pos:column="50"/></index></name></expr>;<pos:position pos:line="68" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="69" pos:column="9">conn<pos:position pos:line="69" pos:column="13"/></name><operator pos:line="69" pos:column="13">-&gt;<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="15">ip_addr<pos:position pos:line="69" pos:column="22"/></name></name> <operator pos:line="69" pos:column="23">=<pos:position pos:line="69" pos:column="24"/></operator> <name><name pos:line="69" pos:column="25">conn<pos:position pos:line="69" pos:column="29"/></name><operator pos:line="69" pos:column="29">-&gt;<pos:position pos:line="69" pos:column="34"/></operator><name pos:line="69" pos:column="31">tempaddr<pos:position pos:line="69" pos:column="39"/></name><index pos:line="69" pos:column="39">[<expr><name pos:line="69" pos:column="40">i<pos:position pos:line="69" pos:column="41"/></name></expr>]<pos:position pos:line="69" pos:column="42"/></index></name></expr>;<pos:position pos:line="69" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="70" pos:column="9">conn<pos:position pos:line="70" pos:column="13"/></name><operator pos:line="70" pos:column="13">-&gt;<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="15">tempsock<pos:position pos:line="70" pos:column="23"/></name><index pos:line="70" pos:column="23">[<expr><name pos:line="70" pos:column="24">i<pos:position pos:line="70" pos:column="25"/></name></expr>]<pos:position pos:line="70" pos:column="26"/></index></name> <operator pos:line="70" pos:column="27">=<pos:position pos:line="70" pos:column="28"/></operator> <name pos:line="70" pos:column="29">CURL_SOCKET_BAD<pos:position pos:line="70" pos:column="44"/></name></expr>;<pos:position pos:line="70" pos:column="45"/></expr_stmt>

        <comment type="block" pos:line="72" pos:column="9">/* close the other socket, if open */</comment>
        <if pos:line="73" pos:column="9">if<condition pos:line="73" pos:column="11">(<expr><name><name pos:line="73" pos:column="12">conn<pos:position pos:line="73" pos:column="16"/></name><operator pos:line="73" pos:column="16">-&gt;<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="18">tempsock<pos:position pos:line="73" pos:column="26"/></name><index pos:line="73" pos:column="26">[<expr><name pos:line="73" pos:column="27">other<pos:position pos:line="73" pos:column="32"/></name></expr>]<pos:position pos:line="73" pos:column="33"/></index></name> <operator pos:line="73" pos:column="34">!=<pos:position pos:line="73" pos:column="36"/></operator> <name pos:line="73" pos:column="37">CURL_SOCKET_BAD<pos:position pos:line="73" pos:column="52"/></name></expr>)<pos:position pos:line="73" pos:column="53"/></condition><then pos:line="73" pos:column="53"> <block pos:line="73" pos:column="54">{
          <expr_stmt><expr><call><name pos:line="74" pos:column="11">Curl_closesocket<pos:position pos:line="74" pos:column="27"/></name><argument_list pos:line="74" pos:column="27">(<argument><expr><name pos:line="74" pos:column="28">conn<pos:position pos:line="74" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="34">conn<pos:position pos:line="74" pos:column="38"/></name><operator pos:line="74" pos:column="38">-&gt;<pos:position pos:line="74" pos:column="43"/></operator><name pos:line="74" pos:column="40">tempsock<pos:position pos:line="74" pos:column="48"/></name><index pos:line="74" pos:column="48">[<expr><name pos:line="74" pos:column="49">other<pos:position pos:line="74" pos:column="54"/></name></expr>]<pos:position pos:line="74" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="74" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="57"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="75" pos:column="11">conn<pos:position pos:line="75" pos:column="15"/></name><operator pos:line="75" pos:column="15">-&gt;<pos:position pos:line="75" pos:column="20"/></operator><name pos:line="75" pos:column="17">tempsock<pos:position pos:line="75" pos:column="25"/></name><index pos:line="75" pos:column="25">[<expr><name pos:line="75" pos:column="26">other<pos:position pos:line="75" pos:column="31"/></name></expr>]<pos:position pos:line="75" pos:column="32"/></index></name> <operator pos:line="75" pos:column="33">=<pos:position pos:line="75" pos:column="34"/></operator> <name pos:line="75" pos:column="35">CURL_SOCKET_BAD<pos:position pos:line="75" pos:column="50"/></name></expr>;<pos:position pos:line="75" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="76" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="78" pos:column="9">/* see if we need to do any proxy magic first once we connected */</comment>
        <expr_stmt><expr><name pos:line="79" pos:column="9">result<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">=<pos:position pos:line="79" pos:column="17"/></operator> <call><name pos:line="79" pos:column="18">Curl_connected_proxy<pos:position pos:line="79" pos:column="38"/></name><argument_list pos:line="79" pos:column="38">(<argument><expr><name pos:line="79" pos:column="39">conn<pos:position pos:line="79" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="45">sockindex<pos:position pos:line="79" pos:column="54"/></name></expr></argument>)<pos:position pos:line="79" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="56"/></expr_stmt>
        <if pos:line="80" pos:column="9">if<condition pos:line="80" pos:column="11">(<expr><name pos:line="80" pos:column="12">result<pos:position pos:line="80" pos:column="18"/></name></expr>)<pos:position pos:line="80" pos:column="19"/></condition><then pos:line="80" pos:column="19">
          <block type="pseudo"><return pos:line="81" pos:column="11">return <expr><name pos:line="81" pos:column="18">result<pos:position pos:line="81" pos:column="24"/></name></expr>;<pos:position pos:line="81" pos:column="25"/></return></block></then></if>

        <expr_stmt><expr><name><name pos:line="83" pos:column="9">conn<pos:position pos:line="83" pos:column="13"/></name><operator pos:line="83" pos:column="13">-&gt;<pos:position pos:line="83" pos:column="18"/></operator><name pos:line="83" pos:column="15">bits<pos:position pos:line="83" pos:column="19"/></name><operator pos:line="83" pos:column="19">.<pos:position pos:line="83" pos:column="20"/></operator><name pos:line="83" pos:column="20">tcpconnect<pos:position pos:line="83" pos:column="30"/></name><index pos:line="83" pos:column="30">[<expr><name pos:line="83" pos:column="31">sockindex<pos:position pos:line="83" pos:column="40"/></name></expr>]<pos:position pos:line="83" pos:column="41"/></index></name> <operator pos:line="83" pos:column="42">=<pos:position pos:line="83" pos:column="43"/></operator> <name pos:line="83" pos:column="44">TRUE<pos:position pos:line="83" pos:column="48"/></name></expr>;<pos:position pos:line="83" pos:column="49"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="85" pos:column="9">*<pos:position pos:line="85" pos:column="10"/></operator><name pos:line="85" pos:column="10">connected<pos:position pos:line="85" pos:column="19"/></name> <operator pos:line="85" pos:column="20">=<pos:position pos:line="85" pos:column="21"/></operator> <name pos:line="85" pos:column="22">TRUE<pos:position pos:line="85" pos:column="26"/></name></expr>;<pos:position pos:line="85" pos:column="27"/></expr_stmt>
        <if pos:line="86" pos:column="9">if<condition pos:line="86" pos:column="11">(<expr><name pos:line="86" pos:column="12">sockindex<pos:position pos:line="86" pos:column="21"/></name> <operator pos:line="86" pos:column="22">==<pos:position pos:line="86" pos:column="24"/></operator> <name pos:line="86" pos:column="25">FIRSTSOCKET<pos:position pos:line="86" pos:column="36"/></name></expr>)<pos:position pos:line="86" pos:column="37"/></condition><then pos:line="86" pos:column="37">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="11">Curl_pgrsTime<pos:position pos:line="87" pos:column="24"/></name><argument_list pos:line="87" pos:column="24">(<argument><expr><name pos:line="87" pos:column="25">data<pos:position pos:line="87" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="31">TIMER_CONNECT<pos:position pos:line="87" pos:column="44"/></name></expr></argument>)<pos:position pos:line="87" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="46"/></expr_stmt></block></then></if> <comment type="block" pos:line="87" pos:column="47">/* connect done */</comment>
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">Curl_updateconninfo<pos:position pos:line="88" pos:column="28"/></name><argument_list pos:line="88" pos:column="28">(<argument><expr><name pos:line="88" pos:column="29">conn<pos:position pos:line="88" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="35">conn<pos:position pos:line="88" pos:column="39"/></name><operator pos:line="88" pos:column="39">-&gt;<pos:position pos:line="88" pos:column="44"/></operator><name pos:line="88" pos:column="41">sock<pos:position pos:line="88" pos:column="45"/></name><index pos:line="88" pos:column="45">[<expr><name pos:line="88" pos:column="46">sockindex<pos:position pos:line="88" pos:column="55"/></name></expr>]<pos:position pos:line="88" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="88" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="89" pos:column="9">Curl_verboseconnect<pos:position pos:line="89" pos:column="28"/></name><argument_list pos:line="89" pos:column="28">(<argument><expr><name pos:line="89" pos:column="29">conn<pos:position pos:line="89" pos:column="33"/></name></expr></argument>)<pos:position pos:line="89" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="35"/></expr_stmt>

        <return pos:line="91" pos:column="9">return <expr><name pos:line="91" pos:column="16">CURLE_OK<pos:position pos:line="91" pos:column="24"/></name></expr>;<pos:position pos:line="91" pos:column="25"/></return>
      }<pos:position pos:line="92" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="93" pos:column="7">infof<pos:position pos:line="93" pos:column="12"/></name><argument_list pos:line="93" pos:column="12">(<argument><expr><name pos:line="93" pos:column="13">data<pos:position pos:line="93" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="19">"Connection failed\n"<pos:position pos:line="93" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="95" pos:column="5">else <if pos:line="95" pos:column="10">if<condition pos:line="95" pos:column="12">(<expr><name pos:line="95" pos:column="13">rc<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">&amp;<pos:position pos:line="95" pos:column="21"/></operator> <name pos:line="95" pos:column="18">CURL_CSELECT_ERR<pos:position pos:line="95" pos:column="34"/></name></expr>)<pos:position pos:line="95" pos:column="35"/></condition><then pos:line="95" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="96" pos:column="7">(<pos:position pos:line="96" pos:column="8"/></operator><name pos:line="96" pos:column="8">void<pos:position pos:line="96" pos:column="12"/></name><operator pos:line="96" pos:column="12">)<pos:position pos:line="96" pos:column="13"/></operator><call><name pos:line="96" pos:column="13">verifyconnect<pos:position pos:line="96" pos:column="26"/></name><argument_list pos:line="96" pos:column="26">(<argument><expr><name><name pos:line="96" pos:column="27">conn<pos:position pos:line="96" pos:column="31"/></name><operator pos:line="96" pos:column="31">-&gt;<pos:position pos:line="96" pos:column="36"/></operator><name pos:line="96" pos:column="33">tempsock<pos:position pos:line="96" pos:column="41"/></name><index pos:line="96" pos:column="41">[<expr><name pos:line="96" pos:column="42">i<pos:position pos:line="96" pos:column="43"/></name></expr>]<pos:position pos:line="96" pos:column="44"/></index></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="46">&amp;<pos:position pos:line="96" pos:column="51"/></operator><name pos:line="96" pos:column="47">error<pos:position pos:line="96" pos:column="52"/></name></expr></argument>)<pos:position pos:line="96" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="54"/></expr_stmt></block></then></if></elseif></if>

    <comment type="block" pos:line="98" pos:column="5">/*
     * The connection failed here, we should attempt to connect to the "next
     * address" for the given host. But first remember the latest error.
     */</comment>
    <if pos:line="102" pos:column="5">if<condition pos:line="102" pos:column="7">(<expr><name pos:line="102" pos:column="8">error<pos:position pos:line="102" pos:column="13"/></name></expr>)<pos:position pos:line="102" pos:column="14"/></condition><then pos:line="102" pos:column="14"> <block pos:line="102" pos:column="15">{
      <expr_stmt><expr><name><name pos:line="103" pos:column="7">data<pos:position pos:line="103" pos:column="11"/></name><operator pos:line="103" pos:column="11">-&gt;<pos:position pos:line="103" pos:column="16"/></operator><name pos:line="103" pos:column="13">state<pos:position pos:line="103" pos:column="18"/></name><operator pos:line="103" pos:column="18">.<pos:position pos:line="103" pos:column="19"/></operator><name pos:line="103" pos:column="19">os_errno<pos:position pos:line="103" pos:column="27"/></name></name> <operator pos:line="103" pos:column="28">=<pos:position pos:line="103" pos:column="29"/></operator> <name pos:line="103" pos:column="30">error<pos:position pos:line="103" pos:column="35"/></name></expr>;<pos:position pos:line="103" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="104" pos:column="7">SET_SOCKERRNO<pos:position pos:line="104" pos:column="20"/></name><argument_list pos:line="104" pos:column="20">(<argument><expr><name pos:line="104" pos:column="21">error<pos:position pos:line="104" pos:column="26"/></name></expr></argument>)<pos:position pos:line="104" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="28"/></expr_stmt>
      <if pos:line="105" pos:column="7">if<condition pos:line="105" pos:column="9">(<expr><name><name pos:line="105" pos:column="10">conn<pos:position pos:line="105" pos:column="14"/></name><operator pos:line="105" pos:column="14">-&gt;<pos:position pos:line="105" pos:column="19"/></operator><name pos:line="105" pos:column="16">tempaddr<pos:position pos:line="105" pos:column="24"/></name><index pos:line="105" pos:column="24">[<expr><name pos:line="105" pos:column="25">i<pos:position pos:line="105" pos:column="26"/></name></expr>]<pos:position pos:line="105" pos:column="27"/></index></name></expr>)<pos:position pos:line="105" pos:column="28"/></condition><then pos:line="105" pos:column="28"> <block pos:line="105" pos:column="29">{
        <decl_stmt><decl><type><name pos:line="106" pos:column="9">CURLcode<pos:position pos:line="106" pos:column="17"/></name></type> <name pos:line="106" pos:column="18">status<pos:position pos:line="106" pos:column="24"/></name></decl>;<pos:position pos:line="106" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="107" pos:column="9">char<pos:position pos:line="107" pos:column="13"/></name></type> <name><name pos:line="107" pos:column="14">ipaddress<pos:position pos:line="107" pos:column="23"/></name><index pos:line="107" pos:column="23">[<expr><name pos:line="107" pos:column="24">MAX_IPADR_LEN<pos:position pos:line="107" pos:column="37"/></name></expr>]<pos:position pos:line="107" pos:column="38"/></index></name></decl>;<pos:position pos:line="107" pos:column="39"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="108" pos:column="9">Curl_printable_address<pos:position pos:line="108" pos:column="31"/></name><argument_list pos:line="108" pos:column="31">(<argument><expr><name><name pos:line="108" pos:column="32">conn<pos:position pos:line="108" pos:column="36"/></name><operator pos:line="108" pos:column="36">-&gt;<pos:position pos:line="108" pos:column="41"/></operator><name pos:line="108" pos:column="38">tempaddr<pos:position pos:line="108" pos:column="46"/></name><index pos:line="108" pos:column="46">[<expr><name pos:line="108" pos:column="47">i<pos:position pos:line="108" pos:column="48"/></name></expr>]<pos:position pos:line="108" pos:column="49"/></index></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="51">ipaddress<pos:position pos:line="108" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="62">MAX_IPADR_LEN<pos:position pos:line="108" pos:column="75"/></name></expr></argument>)<pos:position pos:line="108" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="109" pos:column="9">infof<pos:position pos:line="109" pos:column="14"/></name><argument_list pos:line="109" pos:column="14">(<argument><expr><name pos:line="109" pos:column="15">data<pos:position pos:line="109" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="21">"connect to %s port %ld failed: %s\n"<pos:position pos:line="109" pos:column="58"/></literal></expr></argument>,
              <argument><expr><name pos:line="110" pos:column="15">ipaddress<pos:position pos:line="110" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="26">conn<pos:position pos:line="110" pos:column="30"/></name><operator pos:line="110" pos:column="30">-&gt;<pos:position pos:line="110" pos:column="35"/></operator><name pos:line="110" pos:column="32">port<pos:position pos:line="110" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="110" pos:column="38">Curl_strerror<pos:position pos:line="110" pos:column="51"/></name><argument_list pos:line="110" pos:column="51">(<argument><expr><name pos:line="110" pos:column="52">conn<pos:position pos:line="110" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="58">error<pos:position pos:line="110" pos:column="63"/></name></expr></argument>)<pos:position pos:line="110" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="110" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="66"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="112" pos:column="9">conn<pos:position pos:line="112" pos:column="13"/></name><operator pos:line="112" pos:column="13">-&gt;<pos:position pos:line="112" pos:column="18"/></operator><name pos:line="112" pos:column="15">timeoutms_per_addr<pos:position pos:line="112" pos:column="33"/></name></name> <operator pos:line="112" pos:column="34">=<pos:position pos:line="112" pos:column="35"/></operator> <ternary><condition><expr><name><name pos:line="112" pos:column="36">conn<pos:position pos:line="112" pos:column="40"/></name><operator pos:line="112" pos:column="40">-&gt;<pos:position pos:line="112" pos:column="45"/></operator><name pos:line="112" pos:column="42">tempaddr<pos:position pos:line="112" pos:column="50"/></name><index pos:line="112" pos:column="50">[<expr><name pos:line="112" pos:column="51">i<pos:position pos:line="112" pos:column="52"/></name></expr>]<pos:position pos:line="112" pos:column="53"/></index></name><operator pos:line="112" pos:column="53">-&gt;<pos:position pos:line="112" pos:column="58"/></operator><name pos:line="112" pos:column="55">ai_next<pos:position pos:line="112" pos:column="62"/></name> <operator pos:line="112" pos:column="63">==<pos:position pos:line="112" pos:column="65"/></operator> <name pos:line="112" pos:column="66">NULL<pos:position pos:line="112" pos:column="70"/></name></expr> ?<pos:position pos:line="112" pos:column="72"/></condition><then pos:line="112" pos:column="72">
                                   <expr><name pos:line="113" pos:column="36">allow<pos:position pos:line="113" pos:column="41"/></name></expr> <pos:position pos:line="113" pos:column="42"/></then><else pos:line="113" pos:column="42">: <expr><name pos:line="113" pos:column="44">allow<pos:position pos:line="113" pos:column="49"/></name> <operator pos:line="113" pos:column="50">/<pos:position pos:line="113" pos:column="51"/></operator> <literal type="number" pos:line="113" pos:column="52">2<pos:position pos:line="113" pos:column="53"/></literal></expr></else></ternary></expr>;<pos:position pos:line="113" pos:column="54"/></expr_stmt>

        <expr_stmt><expr><name pos:line="115" pos:column="9">status<pos:position pos:line="115" pos:column="15"/></name> <operator pos:line="115" pos:column="16">=<pos:position pos:line="115" pos:column="17"/></operator> <call><name pos:line="115" pos:column="18">trynextip<pos:position pos:line="115" pos:column="27"/></name><argument_list pos:line="115" pos:column="27">(<argument><expr><name pos:line="115" pos:column="28">conn<pos:position pos:line="115" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="34">sockindex<pos:position pos:line="115" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="45">i<pos:position pos:line="115" pos:column="46"/></name></expr></argument>)<pos:position pos:line="115" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="48"/></expr_stmt>
        <if pos:line="116" pos:column="9">if<condition pos:line="116" pos:column="11">(<expr><name pos:line="116" pos:column="12">status<pos:position pos:line="116" pos:column="18"/></name> <operator pos:line="116" pos:column="19">!=<pos:position pos:line="116" pos:column="21"/></operator> <name pos:line="116" pos:column="22">CURLE_COULDNT_CONNECT<pos:position pos:line="116" pos:column="43"/></name>
            <operator pos:line="117" pos:column="13">||<pos:position pos:line="117" pos:column="15"/></operator> <name><name pos:line="117" pos:column="16">conn<pos:position pos:line="117" pos:column="20"/></name><operator pos:line="117" pos:column="20">-&gt;<pos:position pos:line="117" pos:column="25"/></operator><name pos:line="117" pos:column="22">tempsock<pos:position pos:line="117" pos:column="30"/></name><index pos:line="117" pos:column="30">[<expr><name pos:line="117" pos:column="31">other<pos:position pos:line="117" pos:column="36"/></name></expr>]<pos:position pos:line="117" pos:column="37"/></index></name> <operator pos:line="117" pos:column="38">==<pos:position pos:line="117" pos:column="40"/></operator> <name pos:line="117" pos:column="41">CURL_SOCKET_BAD<pos:position pos:line="117" pos:column="56"/></name></expr>)<pos:position pos:line="117" pos:column="57"/></condition><then pos:line="117" pos:column="57">
          <comment type="block" pos:line="118" pos:column="11">/* the last attempt failed and no other sockets remain open */</comment>
          <block type="pseudo"><expr_stmt><expr><name pos:line="119" pos:column="11">result<pos:position pos:line="119" pos:column="17"/></name> <operator pos:line="119" pos:column="18">=<pos:position pos:line="119" pos:column="19"/></operator> <name pos:line="119" pos:column="20">status<pos:position pos:line="119" pos:column="26"/></name></expr>;<pos:position pos:line="119" pos:column="27"/></expr_stmt></block></then></if>
      }<pos:position pos:line="120" pos:column="8"/></block></then></if>
    }<pos:position pos:line="121" pos:column="6"/></block></then></if>
  }<pos:position pos:line="122" pos:column="4"/></block></for>

  <if pos:line="124" pos:column="3">if<condition pos:line="124" pos:column="5">(<expr><name pos:line="124" pos:column="6">result<pos:position pos:line="124" pos:column="12"/></name></expr>)<pos:position pos:line="124" pos:column="13"/></condition><then pos:line="124" pos:column="13"> <block pos:line="124" pos:column="14">{
    <comment type="block" pos:line="125" pos:column="5">/* no more addresses to try */</comment>

    <decl_stmt><decl><type><specifier pos:line="127" pos:column="5">const<pos:position pos:line="127" pos:column="10"/></specifier> <name pos:line="127" pos:column="11">char<pos:position pos:line="127" pos:column="15"/></name> <modifier pos:line="127" pos:column="16">*<pos:position pos:line="127" pos:column="17"/></modifier></type><name pos:line="127" pos:column="17">hostname<pos:position pos:line="127" pos:column="25"/></name></decl>;<pos:position pos:line="127" pos:column="26"/></decl_stmt>

    <comment type="block" pos:line="129" pos:column="5">/* if the first address family runs out of addresses to try before
       the happy eyeball timeout, go ahead and try the next family now */</comment>
    <if pos:line="131" pos:column="5">if<condition pos:line="131" pos:column="7">(<expr><name><name pos:line="131" pos:column="8">conn<pos:position pos:line="131" pos:column="12"/></name><operator pos:line="131" pos:column="12">-&gt;<pos:position pos:line="131" pos:column="17"/></operator><name pos:line="131" pos:column="14">tempaddr<pos:position pos:line="131" pos:column="22"/></name><index pos:line="131" pos:column="22">[<expr><literal type="number" pos:line="131" pos:column="23">1<pos:position pos:line="131" pos:column="24"/></literal></expr>]<pos:position pos:line="131" pos:column="25"/></index></name> <operator pos:line="131" pos:column="26">==<pos:position pos:line="131" pos:column="28"/></operator> <name pos:line="131" pos:column="29">NULL<pos:position pos:line="131" pos:column="33"/></name></expr>)<pos:position pos:line="131" pos:column="34"/></condition><then pos:line="131" pos:column="34"> <block pos:line="131" pos:column="35">{
      <expr_stmt><expr><name pos:line="132" pos:column="7">result<pos:position pos:line="132" pos:column="13"/></name> <operator pos:line="132" pos:column="14">=<pos:position pos:line="132" pos:column="15"/></operator> <call><name pos:line="132" pos:column="16">trynextip<pos:position pos:line="132" pos:column="25"/></name><argument_list pos:line="132" pos:column="25">(<argument><expr><name pos:line="132" pos:column="26">conn<pos:position pos:line="132" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="32">sockindex<pos:position pos:line="132" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="132" pos:column="43">1<pos:position pos:line="132" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="46"/></expr_stmt>
      <if pos:line="133" pos:column="7">if<condition pos:line="133" pos:column="9">(<expr><operator pos:line="133" pos:column="10">!<pos:position pos:line="133" pos:column="11"/></operator><name pos:line="133" pos:column="11">result<pos:position pos:line="133" pos:column="17"/></name></expr>)<pos:position pos:line="133" pos:column="18"/></condition><then pos:line="133" pos:column="18">
        <block type="pseudo"><return pos:line="134" pos:column="9">return <expr><name pos:line="134" pos:column="16">result<pos:position pos:line="134" pos:column="22"/></name></expr>;<pos:position pos:line="134" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="135" pos:column="6"/></block></then></if>

    <if pos:line="137" pos:column="5">if<condition pos:line="137" pos:column="7">(<expr><name><name pos:line="137" pos:column="8">conn<pos:position pos:line="137" pos:column="12"/></name><operator pos:line="137" pos:column="12">-&gt;<pos:position pos:line="137" pos:column="17"/></operator><name pos:line="137" pos:column="14">bits<pos:position pos:line="137" pos:column="18"/></name><operator pos:line="137" pos:column="18">.<pos:position pos:line="137" pos:column="19"/></operator><name pos:line="137" pos:column="19">socksproxy<pos:position pos:line="137" pos:column="29"/></name></name></expr>)<pos:position pos:line="137" pos:column="30"/></condition><then pos:line="137" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="138" pos:column="7">hostname<pos:position pos:line="138" pos:column="15"/></name> <operator pos:line="138" pos:column="16">=<pos:position pos:line="138" pos:column="17"/></operator> <name><name pos:line="138" pos:column="18">conn<pos:position pos:line="138" pos:column="22"/></name><operator pos:line="138" pos:column="22">-&gt;<pos:position pos:line="138" pos:column="27"/></operator><name pos:line="138" pos:column="24">socks_proxy<pos:position pos:line="138" pos:column="35"/></name><operator pos:line="138" pos:column="35">.<pos:position pos:line="138" pos:column="36"/></operator><name pos:line="138" pos:column="36">host<pos:position pos:line="138" pos:column="40"/></name><operator pos:line="138" pos:column="40">.<pos:position pos:line="138" pos:column="41"/></operator><name pos:line="138" pos:column="41">name<pos:position pos:line="138" pos:column="45"/></name></name></expr>;<pos:position pos:line="138" pos:column="46"/></expr_stmt></block></then>
    <elseif pos:line="139" pos:column="5">else <if pos:line="139" pos:column="10">if<condition pos:line="139" pos:column="12">(<expr><name><name pos:line="139" pos:column="13">conn<pos:position pos:line="139" pos:column="17"/></name><operator pos:line="139" pos:column="17">-&gt;<pos:position pos:line="139" pos:column="22"/></operator><name pos:line="139" pos:column="19">bits<pos:position pos:line="139" pos:column="23"/></name><operator pos:line="139" pos:column="23">.<pos:position pos:line="139" pos:column="24"/></operator><name pos:line="139" pos:column="24">httpproxy<pos:position pos:line="139" pos:column="33"/></name></name></expr>)<pos:position pos:line="139" pos:column="34"/></condition><then pos:line="139" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><name pos:line="140" pos:column="7">hostname<pos:position pos:line="140" pos:column="15"/></name> <operator pos:line="140" pos:column="16">=<pos:position pos:line="140" pos:column="17"/></operator> <name><name pos:line="140" pos:column="18">conn<pos:position pos:line="140" pos:column="22"/></name><operator pos:line="140" pos:column="22">-&gt;<pos:position pos:line="140" pos:column="27"/></operator><name pos:line="140" pos:column="24">http_proxy<pos:position pos:line="140" pos:column="34"/></name><operator pos:line="140" pos:column="34">.<pos:position pos:line="140" pos:column="35"/></operator><name pos:line="140" pos:column="35">host<pos:position pos:line="140" pos:column="39"/></name><operator pos:line="140" pos:column="39">.<pos:position pos:line="140" pos:column="40"/></operator><name pos:line="140" pos:column="40">name<pos:position pos:line="140" pos:column="44"/></name></name></expr>;<pos:position pos:line="140" pos:column="45"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="141" pos:column="5">else <if pos:line="141" pos:column="10">if<condition pos:line="141" pos:column="12">(<expr><name><name pos:line="141" pos:column="13">conn<pos:position pos:line="141" pos:column="17"/></name><operator pos:line="141" pos:column="17">-&gt;<pos:position pos:line="141" pos:column="22"/></operator><name pos:line="141" pos:column="19">bits<pos:position pos:line="141" pos:column="23"/></name><operator pos:line="141" pos:column="23">.<pos:position pos:line="141" pos:column="24"/></operator><name pos:line="141" pos:column="24">conn_to_host<pos:position pos:line="141" pos:column="36"/></name></name></expr>)<pos:position pos:line="141" pos:column="37"/></condition><then pos:line="141" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><name pos:line="142" pos:column="7">hostname<pos:position pos:line="142" pos:column="15"/></name> <operator pos:line="142" pos:column="16">=<pos:position pos:line="142" pos:column="17"/></operator> <name><name pos:line="142" pos:column="18">conn<pos:position pos:line="142" pos:column="22"/></name><operator pos:line="142" pos:column="22">-&gt;<pos:position pos:line="142" pos:column="27"/></operator><name pos:line="142" pos:column="24">conn_to_host<pos:position pos:line="142" pos:column="36"/></name><operator pos:line="142" pos:column="36">.<pos:position pos:line="142" pos:column="37"/></operator><name pos:line="142" pos:column="37">name<pos:position pos:line="142" pos:column="41"/></name></name></expr>;<pos:position pos:line="142" pos:column="42"/></expr_stmt></block></then></if></elseif>
    <else pos:line="143" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="144" pos:column="7">hostname<pos:position pos:line="144" pos:column="15"/></name> <operator pos:line="144" pos:column="16">=<pos:position pos:line="144" pos:column="17"/></operator> <name><name pos:line="144" pos:column="18">conn<pos:position pos:line="144" pos:column="22"/></name><operator pos:line="144" pos:column="22">-&gt;<pos:position pos:line="144" pos:column="27"/></operator><name pos:line="144" pos:column="24">host<pos:position pos:line="144" pos:column="28"/></name><operator pos:line="144" pos:column="28">.<pos:position pos:line="144" pos:column="29"/></operator><name pos:line="144" pos:column="29">name<pos:position pos:line="144" pos:column="33"/></name></name></expr>;<pos:position pos:line="144" pos:column="34"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="146" pos:column="5">failf<pos:position pos:line="146" pos:column="10"/></name><argument_list pos:line="146" pos:column="10">(<argument><expr><name pos:line="146" pos:column="11">data<pos:position pos:line="146" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="17">"Failed to connect to %s port %ld: %s"<pos:position pos:line="146" pos:column="55"/></literal></expr></argument>,
        <argument><expr><name pos:line="147" pos:column="9">hostname<pos:position pos:line="147" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="147" pos:column="19">conn<pos:position pos:line="147" pos:column="23"/></name><operator pos:line="147" pos:column="23">-&gt;<pos:position pos:line="147" pos:column="28"/></operator><name pos:line="147" pos:column="25">port<pos:position pos:line="147" pos:column="29"/></name></name></expr></argument>, <argument><expr><call><name pos:line="147" pos:column="31">Curl_strerror<pos:position pos:line="147" pos:column="44"/></name><argument_list pos:line="147" pos:column="44">(<argument><expr><name pos:line="147" pos:column="45">conn<pos:position pos:line="147" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="51">error<pos:position pos:line="147" pos:column="56"/></name></expr></argument>)<pos:position pos:line="147" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="147" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="59"/></expr_stmt>
  }<pos:position pos:line="148" pos:column="4"/></block></then></if>

  <return pos:line="150" pos:column="3">return <expr><name pos:line="150" pos:column="10">result<pos:position pos:line="150" pos:column="16"/></name></expr>;<pos:position pos:line="150" pos:column="17"/></return>
}<pos:position pos:line="151" pos:column="2"/></block></function></unit>

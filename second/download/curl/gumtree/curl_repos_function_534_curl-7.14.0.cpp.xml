<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_534_curl-7.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_state_ul_setup<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">connectdata<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">conn<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="2" pos:column="36">bool<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">sizechecked<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">FTP<pos:position pos:line="5" pos:column="13"/></name></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">ftp<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">conn<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">proto<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">.<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">ftp<pos:position pos:line="5" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">SessionHandle<pos:position pos:line="6" pos:column="23"/></name></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">data<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name><name pos:line="6" pos:column="32">conn<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">-&gt;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="38">data<pos:position pos:line="6" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">curl_off_t<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">passed<pos:position pos:line="7" pos:column="20"/></name><init pos:line="7" pos:column="20">=<expr><literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">(<pos:position pos:line="9" pos:column="7"/></operator><name><name pos:line="9" pos:column="7">conn<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">resume_from<pos:position pos:line="9" pos:column="24"/></name></name> <operator pos:line="9" pos:column="25">&amp;&amp;<pos:position pos:line="9" pos:column="35"/></operator> <operator pos:line="9" pos:column="28">!<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">sizechecked<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">)<pos:position pos:line="9" pos:column="41"/></operator> <operator pos:line="9" pos:column="42">||<pos:position pos:line="9" pos:column="44"/></operator>
     <operator pos:line="10" pos:column="6">(<pos:position pos:line="10" pos:column="7"/></operator><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name><name pos:line="10" pos:column="8">conn<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">resume_from<pos:position pos:line="10" pos:column="25"/></name></name> <operator pos:line="10" pos:column="26">&gt;<pos:position pos:line="10" pos:column="30"/></operator> <literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator> <operator pos:line="10" pos:column="31">&amp;&amp;<pos:position pos:line="10" pos:column="41"/></operator> <name pos:line="10" pos:column="34">sizechecked<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">)<pos:position pos:line="10" pos:column="46"/></operator></expr>)<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47"> <block pos:line="10" pos:column="48">{
    <comment type="block" pos:line="11" pos:column="5">/* we're about to continue the uploading of a file */</comment>
    <comment type="block" pos:line="12" pos:column="5">/* 1. get already existing file's size. We use the SIZE command for this
       which may not exist in the server!  The SIZE command is not in
       RFC959. */</comment>

    <comment type="block" pos:line="16" pos:column="5">/* 2. This used to set REST. But since we can do append, we
       don't another ftp command. We just skip the source file
       offset and then we APPEND the rest on the file instead */</comment>

    <comment type="block" pos:line="20" pos:column="5">/* 3. pass file-size number of bytes in the source file */</comment>
    <comment type="block" pos:line="21" pos:column="5">/* 4. lower the infilesize counter */</comment>
    <comment type="block" pos:line="22" pos:column="5">/* =&gt; transfer as usual */</comment>

    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><name><name pos:line="24" pos:column="8">conn<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">resume_from<pos:position pos:line="24" pos:column="25"/></name></name> <operator pos:line="24" pos:column="26">&lt;<pos:position pos:line="24" pos:column="30"/></operator> <literal type="number" pos:line="24" pos:column="28">0<pos:position pos:line="24" pos:column="29"/></literal></expr> )<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31"> <block pos:line="24" pos:column="32">{
      <comment type="block" pos:line="25" pos:column="7">/* Got no given size to start from, figure it out */</comment>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">NBFTPSENDF<pos:position pos:line="26" pos:column="17"/></name><argument_list pos:line="26" pos:column="17">(<argument><expr><name pos:line="26" pos:column="18">conn<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="24">"SIZE %s"<pos:position pos:line="26" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="35">ftp<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">-&gt;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="40">file<pos:position pos:line="26" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">state<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">conn<pos:position pos:line="27" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="19">FTP_STOR_SIZE<pos:position pos:line="27" pos:column="32"/></name></expr></argument>)<pos:position pos:line="27" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
      <return pos:line="28" pos:column="7">return <expr><name pos:line="28" pos:column="14">result<pos:position pos:line="28" pos:column="20"/></name></expr>;<pos:position pos:line="28" pos:column="21"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="31" pos:column="5">/* enable append */</comment>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">data<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">-&gt;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="11">set<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">.<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">ftp_append<pos:position pos:line="32" pos:column="25"/></name></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="28">TRUE<pos:position pos:line="32" pos:column="32"/></name></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="34" pos:column="5">/* Let's read off the proper amount of bytes from the input. If we knew it
       was a proper file we could've just fseek()ed but we only have a stream
       here */</comment>

    <comment type="block" pos:line="38" pos:column="5">/* TODO: allow the ioctlfunction to provide a fast forward function that
       can be used here and use this method only as a fallback! */</comment>
    <do pos:line="40" pos:column="5">do <block pos:line="40" pos:column="8">{
      <decl_stmt><decl><type><name pos:line="41" pos:column="7">curl_off_t<pos:position pos:line="41" pos:column="17"/></name></type> <name pos:line="41" pos:column="18">readthisamountnow<pos:position pos:line="41" pos:column="35"/></name> <init pos:line="41" pos:column="36">= <expr><operator pos:line="41" pos:column="38">(<pos:position pos:line="41" pos:column="39"/></operator><name><name pos:line="41" pos:column="39">conn<pos:position pos:line="41" pos:column="43"/></name><operator pos:line="41" pos:column="43">-&gt;<pos:position pos:line="41" pos:column="48"/></operator><name pos:line="41" pos:column="45">resume_from<pos:position pos:line="41" pos:column="56"/></name></name> <operator pos:line="41" pos:column="57">-<pos:position pos:line="41" pos:column="58"/></operator> <name pos:line="41" pos:column="59">passed<pos:position pos:line="41" pos:column="65"/></name><operator pos:line="41" pos:column="65">)<pos:position pos:line="41" pos:column="66"/></operator></expr></init></decl>;<pos:position pos:line="41" pos:column="67"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="42" pos:column="7">curl_off_t<pos:position pos:line="42" pos:column="17"/></name></type> <name pos:line="42" pos:column="18">actuallyread<pos:position pos:line="42" pos:column="30"/></name></decl>;<pos:position pos:line="42" pos:column="31"/></decl_stmt>

      <if pos:line="44" pos:column="7">if<condition pos:line="44" pos:column="9">(<expr><name pos:line="44" pos:column="10">readthisamountnow<pos:position pos:line="44" pos:column="27"/></name> <operator pos:line="44" pos:column="28">&gt;<pos:position pos:line="44" pos:column="32"/></operator> <name pos:line="44" pos:column="30">BUFSIZE<pos:position pos:line="44" pos:column="37"/></name></expr>)<pos:position pos:line="44" pos:column="38"/></condition><then pos:line="44" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="9">readthisamountnow<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">=<pos:position pos:line="45" pos:column="28"/></operator> <name pos:line="45" pos:column="29">BUFSIZE<pos:position pos:line="45" pos:column="36"/></name></expr>;<pos:position pos:line="45" pos:column="37"/></expr_stmt></block></then></if>

      <expr_stmt><expr><name pos:line="47" pos:column="7">actuallyread<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <operator pos:line="47" pos:column="22">(<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="23">curl_off_t<pos:position pos:line="47" pos:column="33"/></name><operator pos:line="47" pos:column="33">)<pos:position pos:line="47" pos:column="34"/></operator>
        <call><name><name pos:line="48" pos:column="9">conn<pos:position pos:line="48" pos:column="13"/></name><operator pos:line="48" pos:column="13">-&gt;<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="15">fread<pos:position pos:line="48" pos:column="20"/></name></name><argument_list pos:line="48" pos:column="20">(<argument><expr><name><name pos:line="48" pos:column="21">data<pos:position pos:line="48" pos:column="25"/></name><operator pos:line="48" pos:column="25">-&gt;<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="27">state<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">.<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="33">buffer<pos:position pos:line="48" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="41">1<pos:position pos:line="48" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="48" pos:column="44">(<pos:position pos:line="48" pos:column="45"/></operator><name pos:line="48" pos:column="45">size_t<pos:position pos:line="48" pos:column="51"/></name><operator pos:line="48" pos:column="51">)<pos:position pos:line="48" pos:column="52"/></operator><name pos:line="48" pos:column="52">readthisamountnow<pos:position pos:line="48" pos:column="69"/></name></expr></argument>,
                    <argument><expr><name><name pos:line="49" pos:column="21">conn<pos:position pos:line="49" pos:column="25"/></name><operator pos:line="49" pos:column="25">-&gt;<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="27">fread_in<pos:position pos:line="49" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="37"/></expr_stmt>

      <expr_stmt><expr><name pos:line="51" pos:column="7">passed<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">+=<pos:position pos:line="51" pos:column="16"/></operator> <name pos:line="51" pos:column="17">actuallyread<pos:position pos:line="51" pos:column="29"/></name></expr>;<pos:position pos:line="51" pos:column="30"/></expr_stmt>
      <if pos:line="52" pos:column="7">if<condition pos:line="52" pos:column="9">(<expr><name pos:line="52" pos:column="10">actuallyread<pos:position pos:line="52" pos:column="22"/></name> <operator pos:line="52" pos:column="23">!=<pos:position pos:line="52" pos:column="25"/></operator> <name pos:line="52" pos:column="26">readthisamountnow<pos:position pos:line="52" pos:column="43"/></name></expr>)<pos:position pos:line="52" pos:column="44"/></condition><then pos:line="52" pos:column="44"> <block pos:line="52" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">failf<pos:position pos:line="53" pos:column="14"/></name><argument_list pos:line="53" pos:column="14">(<argument><expr><name pos:line="53" pos:column="15">data<pos:position pos:line="53" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="21">"Could only read %"<pos:position pos:line="53" pos:column="40"/></literal> <name pos:line="53" pos:column="41">FORMAT_OFF_T<pos:position pos:line="53" pos:column="53"/></name>
              <literal type="string" pos:line="54" pos:column="15">" bytes from the input"<pos:position pos:line="54" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="40">passed<pos:position pos:line="54" pos:column="46"/></name></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="48"/></expr_stmt>
        <return pos:line="55" pos:column="9">return <expr><name pos:line="55" pos:column="16">CURLE_FTP_COULDNT_USE_REST<pos:position pos:line="55" pos:column="42"/></name></expr>;<pos:position pos:line="55" pos:column="43"/></return>
      }<pos:position pos:line="56" pos:column="8"/></block></then></if>
    }<pos:position pos:line="57" pos:column="6"/></block> while<condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">passed<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">!=<pos:position pos:line="57" pos:column="22"/></operator> <name><name pos:line="57" pos:column="23">conn<pos:position pos:line="57" pos:column="27"/></name><operator pos:line="57" pos:column="27">-&gt;<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="29">resume_from<pos:position pos:line="57" pos:column="40"/></name></name></expr>)<pos:position pos:line="57" pos:column="41"/></condition>;<pos:position pos:line="57" pos:column="42"/></do>

    <comment type="block" pos:line="59" pos:column="5">/* now, decrease the size of the read */</comment>
    <if pos:line="60" pos:column="5">if<condition pos:line="60" pos:column="7">(<expr><name><name pos:line="60" pos:column="8">data<pos:position pos:line="60" pos:column="12"/></name><operator pos:line="60" pos:column="12">-&gt;<pos:position pos:line="60" pos:column="17"/></operator><name pos:line="60" pos:column="14">set<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">.<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="18">infilesize<pos:position pos:line="60" pos:column="28"/></name></name><operator pos:line="60" pos:column="28">&gt;<pos:position pos:line="60" pos:column="32"/></operator><literal type="number" pos:line="60" pos:column="29">0<pos:position pos:line="60" pos:column="30"/></literal></expr>)<pos:position pos:line="60" pos:column="31"/></condition><then pos:line="60" pos:column="31"> <block pos:line="60" pos:column="32">{
      <expr_stmt><expr><name><name pos:line="61" pos:column="7">data<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">-&gt;<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="13">set<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">.<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="17">infilesize<pos:position pos:line="61" pos:column="27"/></name></name> <operator pos:line="61" pos:column="28">-=<pos:position pos:line="61" pos:column="30"/></operator> <name><name pos:line="61" pos:column="31">conn<pos:position pos:line="61" pos:column="35"/></name><operator pos:line="61" pos:column="35">-&gt;<pos:position pos:line="61" pos:column="40"/></operator><name pos:line="61" pos:column="37">resume_from<pos:position pos:line="61" pos:column="48"/></name></name></expr>;<pos:position pos:line="61" pos:column="49"/></expr_stmt>

      <if pos:line="63" pos:column="7">if<condition pos:line="63" pos:column="9">(<expr><name><name pos:line="63" pos:column="10">data<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">-&gt;<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="16">set<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">.<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="20">infilesize<pos:position pos:line="63" pos:column="30"/></name></name> <operator pos:line="63" pos:column="31">&lt;=<pos:position pos:line="63" pos:column="36"/></operator> <literal type="number" pos:line="63" pos:column="34">0<pos:position pos:line="63" pos:column="35"/></literal></expr>)<pos:position pos:line="63" pos:column="36"/></condition><then pos:line="63" pos:column="36"> <block pos:line="63" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">infof<pos:position pos:line="64" pos:column="14"/></name><argument_list pos:line="64" pos:column="14">(<argument><expr><name pos:line="64" pos:column="15">data<pos:position pos:line="64" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="21">"File already completely uploaded\n"<pos:position pos:line="64" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="59"/></expr_stmt>

        <comment type="block" pos:line="66" pos:column="9">/* no data to transfer */</comment>
        <expr_stmt><expr><name pos:line="67" pos:column="9">result<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">=<pos:position pos:line="67" pos:column="16"/></operator><call><name pos:line="67" pos:column="16">Curl_Transfer<pos:position pos:line="67" pos:column="29"/></name><argument_list pos:line="67" pos:column="29">(<argument><expr><name pos:line="67" pos:column="30">conn<pos:position pos:line="67" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="36">-<pos:position pos:line="67" pos:column="37"/></operator><literal type="number" pos:line="67" pos:column="37">1<pos:position pos:line="67" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="67" pos:column="40">-<pos:position pos:line="67" pos:column="41"/></operator><literal type="number" pos:line="67" pos:column="41">1<pos:position pos:line="67" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="44">FALSE<pos:position pos:line="67" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="51">NULL<pos:position pos:line="67" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="57">-<pos:position pos:line="67" pos:column="58"/></operator><literal type="number" pos:line="67" pos:column="58">1<pos:position pos:line="67" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="61">NULL<pos:position pos:line="67" pos:column="65"/></name></expr></argument>)<pos:position pos:line="67" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="67"/></expr_stmt>

        <comment type="block" pos:line="69" pos:column="9">/* Set no_transfer so that we won't get any error in
         * Curl_ftp_done() because we didn't transfer anything! */</comment>
        <expr_stmt><expr><name><name pos:line="71" pos:column="9">ftp<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">-&gt;<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="14">no_transfer<pos:position pos:line="71" pos:column="25"/></name></name> <operator pos:line="71" pos:column="26">=<pos:position pos:line="71" pos:column="27"/></operator> <name pos:line="71" pos:column="28">TRUE<pos:position pos:line="71" pos:column="32"/></name></expr>;<pos:position pos:line="71" pos:column="33"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="73" pos:column="9">state<pos:position pos:line="73" pos:column="14"/></name><argument_list pos:line="73" pos:column="14">(<argument><expr><name pos:line="73" pos:column="15">conn<pos:position pos:line="73" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="21">FTP_STOP<pos:position pos:line="73" pos:column="29"/></name></expr></argument>)<pos:position pos:line="73" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="31"/></expr_stmt>
        <return pos:line="74" pos:column="9">return <expr><name pos:line="74" pos:column="16">CURLE_OK<pos:position pos:line="74" pos:column="24"/></name></expr>;<pos:position pos:line="74" pos:column="25"/></return>
      }<pos:position pos:line="75" pos:column="8"/></block></then></if>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="77" pos:column="5">/* we've passed, proceed as normal */</comment>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if> <comment type="block" pos:line="78" pos:column="5">/* resume_from */</comment>

  <expr_stmt><expr><call><name pos:line="80" pos:column="3">NBFTPSENDF<pos:position pos:line="80" pos:column="13"/></name><argument_list pos:line="80" pos:column="13">(<argument><expr><name pos:line="80" pos:column="14">conn<pos:position pos:line="80" pos:column="18"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="80" pos:column="20">data<pos:position pos:line="80" pos:column="24"/></name><operator pos:line="80" pos:column="24">-&gt;<pos:position pos:line="80" pos:column="29"/></operator><name pos:line="80" pos:column="26">set<pos:position pos:line="80" pos:column="29"/></name><operator pos:line="80" pos:column="29">.<pos:position pos:line="80" pos:column="30"/></operator><name pos:line="80" pos:column="30">ftp_append<pos:position pos:line="80" pos:column="40"/></name></name></expr>?<pos:position pos:line="80" pos:column="41"/></condition><then><expr><literal type="string" pos:line="80" pos:column="41">"APPE %s"<pos:position pos:line="80" pos:column="50"/></literal></expr></then><else pos:line="80" pos:column="50">:<expr><literal type="string" pos:line="80" pos:column="51">"STOR %s"<pos:position pos:line="80" pos:column="60"/></literal></expr></else></ternary></expr></argument>,
             <argument><expr><name><name pos:line="81" pos:column="14">ftp<pos:position pos:line="81" pos:column="17"/></name><operator pos:line="81" pos:column="17">-&gt;<pos:position pos:line="81" pos:column="22"/></operator><name pos:line="81" pos:column="19">file<pos:position pos:line="81" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="83" pos:column="3">state<pos:position pos:line="83" pos:column="8"/></name><argument_list pos:line="83" pos:column="8">(<argument><expr><name pos:line="83" pos:column="9">conn<pos:position pos:line="83" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="15">FTP_STOR<pos:position pos:line="83" pos:column="23"/></name></expr></argument>)<pos:position pos:line="83" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="25"/></expr_stmt>

  <return pos:line="85" pos:column="3">return <expr><name pos:line="85" pos:column="10">result<pos:position pos:line="85" pos:column="16"/></name></expr>;<pos:position pos:line="85" pos:column="17"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

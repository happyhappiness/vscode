<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1425_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_http_done<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">connectdata<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">conn<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="2" pos:column="25">CURLcode<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">status<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">bool<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">premature<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">HTTP<pos:position pos:line="5" pos:column="14"/></name></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">http<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name><name pos:line="5" pos:column="23">data<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">req<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">.<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">protop<pos:position pos:line="5" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Clear multipass flag. If authentication isn't done yet, then it will get
   * a chance to be set back to true when we output the next auth header */</comment>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">data<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">state<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">.<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">authhost<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">.<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">multipass<pos:position pos:line="9" pos:column="33"/></name></name> <operator pos:line="9" pos:column="34">=<pos:position pos:line="9" pos:column="35"/></operator> <name pos:line="9" pos:column="36">FALSE<pos:position pos:line="9" pos:column="41"/></name></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">data<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">state<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">authproxy<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">multipass<pos:position pos:line="10" pos:column="34"/></name></name> <operator pos:line="10" pos:column="35">=<pos:position pos:line="10" pos:column="36"/></operator> <name pos:line="10" pos:column="37">FALSE<pos:position pos:line="10" pos:column="42"/></name></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">Curl_unencode_cleanup<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">conn<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>

<cpp:ifdef pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">ifdef<pos:position pos:line="14" pos:column="7"/></cpp:directive> <name pos:line="14" pos:column="8">USE_SPNEGO<pos:position pos:line="14" pos:column="18"/></name></cpp:ifdef>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name><name pos:line="15" pos:column="6">data<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">state<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">.<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">proxyneg<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">.<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">state<pos:position pos:line="15" pos:column="32"/></name></name> <operator pos:line="15" pos:column="33">==<pos:position pos:line="15" pos:column="35"/></operator> <name pos:line="15" pos:column="36">GSS_AUTHSENT<pos:position pos:line="15" pos:column="48"/></name> <operator pos:line="15" pos:column="49">||<pos:position pos:line="15" pos:column="51"/></operator>
     <name><name pos:line="16" pos:column="6">data<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">state<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">.<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">negotiate<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">.<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="28">state<pos:position pos:line="16" pos:column="33"/></name></name> <operator pos:line="16" pos:column="34">==<pos:position pos:line="16" pos:column="36"/></operator> <name pos:line="16" pos:column="37">GSS_AUTHSENT<pos:position pos:line="16" pos:column="49"/></name></expr>)<pos:position pos:line="16" pos:column="50"/></condition><then pos:line="16" pos:column="50"> <block pos:line="16" pos:column="51">{
    <comment type="block" pos:line="17" pos:column="5">/* add forbid re-use if http-code != 401/407 as a WA only needed for
     * 401/407 that signal auth failure (empty) otherwise state will be RECV
     * with current code.
     * Do not close CONNECT_ONLY connections. */</comment>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><operator pos:line="21" pos:column="8">(<pos:position pos:line="21" pos:column="9"/></operator><name><name pos:line="21" pos:column="9">data<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">req<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">.<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">httpcode<pos:position pos:line="21" pos:column="27"/></name></name> <operator pos:line="21" pos:column="28">!=<pos:position pos:line="21" pos:column="30"/></operator> <literal type="number" pos:line="21" pos:column="31">401<pos:position pos:line="21" pos:column="34"/></literal><operator pos:line="21" pos:column="34">)<pos:position pos:line="21" pos:column="35"/></operator> <operator pos:line="21" pos:column="36">&amp;&amp;<pos:position pos:line="21" pos:column="46"/></operator> <operator pos:line="21" pos:column="39">(<pos:position pos:line="21" pos:column="40"/></operator><name><name pos:line="21" pos:column="40">data<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">req<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">.<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="50">httpcode<pos:position pos:line="21" pos:column="58"/></name></name> <operator pos:line="21" pos:column="59">!=<pos:position pos:line="21" pos:column="61"/></operator> <literal type="number" pos:line="21" pos:column="62">407<pos:position pos:line="21" pos:column="65"/></literal><operator pos:line="21" pos:column="65">)<pos:position pos:line="21" pos:column="66"/></operator> <operator pos:line="21" pos:column="67">&amp;&amp;<pos:position pos:line="21" pos:column="77"/></operator>
       <operator pos:line="22" pos:column="8">!<pos:position pos:line="22" pos:column="9"/></operator><name><name pos:line="22" pos:column="9">data<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">set<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">.<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">connect_only<pos:position pos:line="22" pos:column="31"/></name></name></expr>)<pos:position pos:line="22" pos:column="32"/></condition><then pos:line="22" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="7">streamclose<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">conn<pos:position pos:line="23" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="25">"Negotiate transfer completed"<pos:position pos:line="23" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="57"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">Curl_cleanup_negotiate<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">data<pos:position pos:line="24" pos:column="32"/></name></expr></argument>)<pos:position pos:line="24" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="28" pos:column="3">/* set the proper values (possibly modified on POST) */</comment>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">conn<pos:position pos:line="29" pos:column="7"/></name><operator pos:line="29" pos:column="7">-&gt;<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="9">seek_func<pos:position pos:line="29" pos:column="18"/></name></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <name><name pos:line="29" pos:column="21">data<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">set<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">.<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="31">seek_func<pos:position pos:line="29" pos:column="40"/></name></name></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt> <comment type="block" pos:line="29" pos:column="42">/* restore */</comment>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">conn<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">seek_client<pos:position pos:line="30" pos:column="20"/></name></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <name><name pos:line="30" pos:column="23">data<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">-&gt;<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="29">set<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">.<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="33">seek_client<pos:position pos:line="30" pos:column="44"/></name></name></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt> <comment type="block" pos:line="30" pos:column="46">/* restore */</comment>

  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">(<expr><operator pos:line="32" pos:column="6">!<pos:position pos:line="32" pos:column="7"/></operator><name pos:line="32" pos:column="7">http<pos:position pos:line="32" pos:column="11"/></name></expr>)<pos:position pos:line="32" pos:column="12"/></condition><then pos:line="32" pos:column="12">
    <block type="pseudo"><return pos:line="33" pos:column="5">return <expr><name pos:line="33" pos:column="12">CURLE_OK<pos:position pos:line="33" pos:column="20"/></name></expr>;<pos:position pos:line="33" pos:column="21"/></return></block></then></if>

  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><name><name pos:line="35" pos:column="6">http<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">send_buffer<pos:position pos:line="35" pos:column="23"/></name></name></expr>)<pos:position pos:line="35" pos:column="24"/></condition><then pos:line="35" pos:column="24"> <block pos:line="35" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">Curl_add_buffer_free<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><name><name pos:line="36" pos:column="26">http<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">send_buffer<pos:position pos:line="36" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">http<pos:position pos:line="37" pos:column="9"/></name><operator pos:line="37" pos:column="9">-&gt;<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="11">send_buffer<pos:position pos:line="37" pos:column="22"/></name></name> <operator pos:line="37" pos:column="23">=<pos:position pos:line="37" pos:column="24"/></operator> <name pos:line="37" pos:column="25">NULL<pos:position pos:line="37" pos:column="29"/></name></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt> <comment type="block" pos:line="37" pos:column="31">/* clear the pointer */</comment>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">Curl_http2_done<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><name pos:line="40" pos:column="19">conn<pos:position pos:line="40" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="25">premature<pos:position pos:line="40" pos:column="34"/></name></expr></argument>)<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="42" pos:column="3">Curl_mime_cleanpart<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><operator pos:line="42" pos:column="23">&amp;<pos:position pos:line="42" pos:column="28"/></operator><name><name pos:line="42" pos:column="24">http<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">-&gt;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="30">form<pos:position pos:line="42" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>

  <switch pos:line="44" pos:column="3">switch<condition pos:line="44" pos:column="9">(<expr><name><name pos:line="44" pos:column="10">data<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">set<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">.<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">httpreq<pos:position pos:line="44" pos:column="27"/></name></name></expr>)<pos:position pos:line="44" pos:column="28"/></condition> <block pos:line="44" pos:column="29">{
  <case pos:line="45" pos:column="3">case <expr><name pos:line="45" pos:column="8">HTTPREQ_PUT<pos:position pos:line="45" pos:column="19"/></name></expr>:<pos:position pos:line="45" pos:column="20"/></case>
  <case pos:line="46" pos:column="3">case <expr><name pos:line="46" pos:column="8">HTTPREQ_POST_FORM<pos:position pos:line="46" pos:column="25"/></name></expr>:<pos:position pos:line="46" pos:column="26"/></case>
  <case pos:line="47" pos:column="3">case <expr><name pos:line="47" pos:column="8">HTTPREQ_POST_MIME<pos:position pos:line="47" pos:column="25"/></name></expr>:<pos:position pos:line="47" pos:column="26"/></case>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">data<pos:position pos:line="48" pos:column="9"/></name><operator pos:line="48" pos:column="9">-&gt;<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="11">req<pos:position pos:line="48" pos:column="14"/></name><operator pos:line="48" pos:column="14">.<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="15">bytecount<pos:position pos:line="48" pos:column="24"/></name></name> <operator pos:line="48" pos:column="25">=<pos:position pos:line="48" pos:column="26"/></operator> <name><name pos:line="48" pos:column="27">http<pos:position pos:line="48" pos:column="31"/></name><operator pos:line="48" pos:column="31">-&gt;<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="33">readbytecount<pos:position pos:line="48" pos:column="46"/></name></name> <operator pos:line="48" pos:column="47">+<pos:position pos:line="48" pos:column="48"/></operator> <name><name pos:line="48" pos:column="49">http<pos:position pos:line="48" pos:column="53"/></name><operator pos:line="48" pos:column="53">-&gt;<pos:position pos:line="48" pos:column="58"/></operator><name pos:line="48" pos:column="55">writebytecount<pos:position pos:line="48" pos:column="69"/></name></name></expr>;<pos:position pos:line="48" pos:column="70"/></expr_stmt>
    <break pos:line="49" pos:column="5">break;<pos:position pos:line="49" pos:column="11"/></break>
  <default pos:line="50" pos:column="3">default:<pos:position pos:line="50" pos:column="11"/></default>
    <break pos:line="51" pos:column="5">break;<pos:position pos:line="51" pos:column="11"/></break>
  }<pos:position pos:line="52" pos:column="4"/></block></switch>

  <if pos:line="54" pos:column="3">if<condition pos:line="54" pos:column="5">(<expr><name pos:line="54" pos:column="6">status<pos:position pos:line="54" pos:column="12"/></name></expr>)<pos:position pos:line="54" pos:column="13"/></condition><then pos:line="54" pos:column="13">
    <block type="pseudo"><return pos:line="55" pos:column="5">return <expr><name pos:line="55" pos:column="12">status<pos:position pos:line="55" pos:column="18"/></name></expr>;<pos:position pos:line="55" pos:column="19"/></return></block></then></if>

  <if pos:line="57" pos:column="3">if<condition pos:line="57" pos:column="5">(<expr><operator pos:line="57" pos:column="6">!<pos:position pos:line="57" pos:column="7"/></operator><name pos:line="57" pos:column="7">premature<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">&amp;&amp;<pos:position pos:line="57" pos:column="27"/></operator> <comment type="block" pos:line="57" pos:column="20">/* this check is pointless when DONE is called before the
                      entire operation is complete */</comment>
     <operator pos:line="59" pos:column="6">!<pos:position pos:line="59" pos:column="7"/></operator><name><name pos:line="59" pos:column="7">conn<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">-&gt;<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="13">bits<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">.<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="18">retry<pos:position pos:line="59" pos:column="23"/></name></name> <operator pos:line="59" pos:column="24">&amp;&amp;<pos:position pos:line="59" pos:column="34"/></operator>
     <operator pos:line="60" pos:column="6">!<pos:position pos:line="60" pos:column="7"/></operator><name><name pos:line="60" pos:column="7">data<pos:position pos:line="60" pos:column="11"/></name><operator pos:line="60" pos:column="11">-&gt;<pos:position pos:line="60" pos:column="16"/></operator><name pos:line="60" pos:column="13">set<pos:position pos:line="60" pos:column="16"/></name><operator pos:line="60" pos:column="16">.<pos:position pos:line="60" pos:column="17"/></operator><name pos:line="60" pos:column="17">connect_only<pos:position pos:line="60" pos:column="29"/></name></name> <operator pos:line="60" pos:column="30">&amp;&amp;<pos:position pos:line="60" pos:column="40"/></operator>
     <operator pos:line="61" pos:column="6">(<pos:position pos:line="61" pos:column="7"/></operator><name><name pos:line="61" pos:column="7">http<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">-&gt;<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="13">readbytecount<pos:position pos:line="61" pos:column="26"/></name></name> <operator pos:line="61" pos:column="27">+<pos:position pos:line="61" pos:column="28"/></operator>
      <name><name pos:line="62" pos:column="7">data<pos:position pos:line="62" pos:column="11"/></name><operator pos:line="62" pos:column="11">-&gt;<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="13">req<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">.<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="17">headerbytecount<pos:position pos:line="62" pos:column="32"/></name></name> <operator pos:line="62" pos:column="33">-<pos:position pos:line="62" pos:column="34"/></operator>
      <name><name pos:line="63" pos:column="7">data<pos:position pos:line="63" pos:column="11"/></name><operator pos:line="63" pos:column="11">-&gt;<pos:position pos:line="63" pos:column="16"/></operator><name pos:line="63" pos:column="13">req<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">.<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="17">deductheadercount<pos:position pos:line="63" pos:column="34"/></name></name><operator pos:line="63" pos:column="34">)<pos:position pos:line="63" pos:column="35"/></operator> <operator pos:line="63" pos:column="36">&lt;=<pos:position pos:line="63" pos:column="41"/></operator> <literal type="number" pos:line="63" pos:column="39">0<pos:position pos:line="63" pos:column="40"/></literal></expr>)<pos:position pos:line="63" pos:column="41"/></condition><then pos:line="63" pos:column="41"> <block pos:line="63" pos:column="42">{
    <comment type="block" pos:line="64" pos:column="5">/* If this connection isn't simply closed to be retried, AND nothing was
       read from the HTTP server (that counts), this can't be right so we
       return an error here */</comment>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">failf<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><name pos:line="67" pos:column="11">data<pos:position pos:line="67" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="17">"Empty reply from server"<pos:position pos:line="67" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="44"/></expr_stmt>
    <return pos:line="68" pos:column="5">return <expr><name pos:line="68" pos:column="12">CURLE_GOT_NOTHING<pos:position pos:line="68" pos:column="29"/></name></expr>;<pos:position pos:line="68" pos:column="30"/></return>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>

  <return pos:line="71" pos:column="3">return <expr><name pos:line="71" pos:column="10">CURLE_OK<pos:position pos:line="71" pos:column="18"/></name></expr>;<pos:position pos:line="71" pos:column="19"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

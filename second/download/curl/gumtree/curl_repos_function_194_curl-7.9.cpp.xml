<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_194_curl-7.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_ftp_connect<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* this is FTP and no proxy */</comment>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">nread<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">SessionHandle<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">data<pos:position pos:line="5" pos:column="29"/></name><init pos:line="5" pos:column="29">=<expr><name><name pos:line="5" pos:column="30">conn<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">-&gt;<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="36">data<pos:position pos:line="5" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">buf<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name><name pos:line="6" pos:column="15">data<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">state<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">.<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">buffer<pos:position pos:line="6" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt> <comment type="block" pos:line="6" pos:column="35">/* this is our buffer */</comment>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">FTP<pos:position pos:line="7" pos:column="13"/></name></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">ftp<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLcode<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">result<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">ftpcode<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">myalarm<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><literal type="number" pos:line="11" pos:column="11">0<pos:position pos:line="11" pos:column="12"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="14"/></expr_stmt> <comment type="block" pos:line="11" pos:column="15">/* switch off the alarm stuff */</comment>

  <expr_stmt><expr><name pos:line="13" pos:column="3">ftp<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator>struct <name pos:line="13" pos:column="17">FTP<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></operator><operator pos:line="13" pos:column="22">)<pos:position pos:line="13" pos:column="23"/></operator><call><name pos:line="13" pos:column="23">malloc<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><sizeof pos:line="13" pos:column="30">sizeof<argument_list pos:line="13" pos:column="36">(<argument><expr pos:line="13" pos:column="37">struct <name pos:line="13" pos:column="44">FTP<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><operator pos:line="14" pos:column="6">!<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">ftp<pos:position pos:line="14" pos:column="10"/></name></expr>)<pos:position pos:line="14" pos:column="11"/></condition><then pos:line="14" pos:column="11">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="15" pos:column="31"/></name></expr>;<pos:position pos:line="15" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">memset<pos:position pos:line="17" pos:column="9"/></name><argument_list pos:line="17" pos:column="9">(<argument><expr><name pos:line="17" pos:column="10">ftp<pos:position pos:line="17" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="15">0<pos:position pos:line="17" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="18">sizeof<argument_list pos:line="17" pos:column="24">(<argument><expr pos:line="17" pos:column="25">struct <name pos:line="17" pos:column="32">FTP<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">conn<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">proto<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">.<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">ftp<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">ftp<pos:position pos:line="18" pos:column="24"/></name></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="20" pos:column="3">/* We always support persistant connections on ftp */</comment>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">conn<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">bits<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">.<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">close<pos:position pos:line="21" pos:column="19"/></name></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">FALSE<pos:position pos:line="21" pos:column="27"/></name></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="23" pos:column="3">/* get some initial data into the ftp struct */</comment>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">ftp<pos:position pos:line="24" pos:column="6"/></name><operator pos:line="24" pos:column="6">-&gt;<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="8">bytecountp<pos:position pos:line="24" pos:column="18"/></name></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <operator pos:line="24" pos:column="21">&amp;<pos:position pos:line="24" pos:column="26"/></operator><name><name pos:line="24" pos:column="22">conn<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">bytecount<pos:position pos:line="24" pos:column="37"/></name></name></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>

  <comment type="block" pos:line="26" pos:column="3">/* no need to duplicate them, the data struct won't change */</comment>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">ftp<pos:position pos:line="27" pos:column="6"/></name><operator pos:line="27" pos:column="6">-&gt;<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="8">user<pos:position pos:line="27" pos:column="12"/></name></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <name><name pos:line="27" pos:column="15">data<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">-&gt;<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="21">state<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">.<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="27">user<pos:position pos:line="27" pos:column="31"/></name></name></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">ftp<pos:position pos:line="28" pos:column="6"/></name><operator pos:line="28" pos:column="6">-&gt;<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="8">passwd<pos:position pos:line="28" pos:column="14"/></name></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <name><name pos:line="28" pos:column="17">data<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">state<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">.<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="29">passwd<pos:position pos:line="28" pos:column="35"/></name></name></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name><name pos:line="30" pos:column="7">data<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">set<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">.<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">tunnel_thru_httpproxy<pos:position pos:line="30" pos:column="38"/></name></name></expr>)<pos:position pos:line="30" pos:column="39"/></condition><then pos:line="30" pos:column="39"> <block pos:line="30" pos:column="40">{
    <comment type="block" pos:line="31" pos:column="5">/* We want "seamless" FTP operations through HTTP proxy tunnel */</comment>
    <expr_stmt><expr><name pos:line="32" pos:column="5">result<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">Curl_ConnectHTTPProxyTunnel<pos:position pos:line="32" pos:column="41"/></name><argument_list pos:line="32" pos:column="41">(<argument><expr><name pos:line="32" pos:column="42">conn<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="48">conn<pos:position pos:line="32" pos:column="52"/></name><operator pos:line="32" pos:column="52">-&gt;<pos:position pos:line="32" pos:column="57"/></operator><name pos:line="32" pos:column="54">firstsocket<pos:position pos:line="32" pos:column="65"/></name></name></expr></argument>,
                                         <argument><expr><name><name pos:line="33" pos:column="42">conn<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">-&gt;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="48">hostname<pos:position pos:line="33" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="58">conn<pos:position pos:line="33" pos:column="62"/></name><operator pos:line="33" pos:column="62">-&gt;<pos:position pos:line="33" pos:column="67"/></operator><name pos:line="33" pos:column="64">remote_port<pos:position pos:line="33" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="77"/></expr_stmt>
    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">(<expr><name pos:line="34" pos:column="8">CURLE_OK<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">!=<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">result<pos:position pos:line="34" pos:column="26"/></name></expr>)<pos:position pos:line="34" pos:column="27"/></condition><then pos:line="34" pos:column="27">
      <block type="pseudo"><return pos:line="35" pos:column="7">return <expr><name pos:line="35" pos:column="14">result<pos:position pos:line="35" pos:column="20"/></name></expr>;<pos:position pos:line="35" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <if pos:line="38" pos:column="3">if<condition pos:line="38" pos:column="5">(<expr><name><name pos:line="38" pos:column="6">conn<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">protocol<pos:position pos:line="38" pos:column="20"/></name></name> <operator pos:line="38" pos:column="21">&amp;<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="23">PROT_FTPS<pos:position pos:line="38" pos:column="32"/></name></expr>)<pos:position pos:line="38" pos:column="33"/></condition><then pos:line="38" pos:column="33"> <block pos:line="38" pos:column="34">{
    <comment type="block" pos:line="39" pos:column="5">/* FTPS is simply ftp with SSL for the control channel */</comment>
    <comment type="block" pos:line="40" pos:column="5">/* now, perform the SSL initialization for this socket */</comment>
    <expr_stmt><expr><name pos:line="41" pos:column="5">result<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <call><name pos:line="41" pos:column="14">Curl_SSLConnect<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name pos:line="41" pos:column="30">conn<pos:position pos:line="41" pos:column="34"/></name></expr></argument>)<pos:position pos:line="41" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt>
    <if pos:line="42" pos:column="5">if<condition pos:line="42" pos:column="7">(<expr><name pos:line="42" pos:column="8">result<pos:position pos:line="42" pos:column="14"/></name></expr>)<pos:position pos:line="42" pos:column="15"/></condition><then pos:line="42" pos:column="15">
      <block type="pseudo"><return pos:line="43" pos:column="7">return <expr><name pos:line="43" pos:column="14">result<pos:position pos:line="43" pos:column="20"/></name></expr>;<pos:position pos:line="43" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>


  <comment type="block" pos:line="47" pos:column="3">/* The first thing we do is wait for the "220*" line: */</comment>
  <expr_stmt><expr><name pos:line="48" pos:column="3">nread<pos:position pos:line="48" pos:column="8"/></name> <operator pos:line="48" pos:column="9">=<pos:position pos:line="48" pos:column="10"/></operator> <call><name pos:line="48" pos:column="11">Curl_GetFTPResponse<pos:position pos:line="48" pos:column="30"/></name><argument_list pos:line="48" pos:column="30">(<argument><expr><name><name pos:line="48" pos:column="31">conn<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">-&gt;<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="37">firstsocket<pos:position pos:line="48" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="50">buf<pos:position pos:line="48" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="55">conn<pos:position pos:line="48" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="61">&amp;<pos:position pos:line="48" pos:column="66"/></operator><name pos:line="48" pos:column="62">ftpcode<pos:position pos:line="48" pos:column="69"/></name></expr></argument>)<pos:position pos:line="48" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="71"/></expr_stmt>
  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">(<expr><name pos:line="49" pos:column="6">nread<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">&lt;<pos:position pos:line="49" pos:column="16"/></operator> <literal type="number" pos:line="49" pos:column="14">0<pos:position pos:line="49" pos:column="15"/></literal></expr>)<pos:position pos:line="49" pos:column="16"/></condition><then pos:line="49" pos:column="16">
    <block type="pseudo"><return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">CURLE_OPERATION_TIMEOUTED<pos:position pos:line="50" pos:column="37"/></name></expr>;<pos:position pos:line="50" pos:column="38"/></return></block></then></if>

  <if pos:line="52" pos:column="3">if<condition pos:line="52" pos:column="5">(<expr><name pos:line="52" pos:column="6">ftpcode<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">!=<pos:position pos:line="52" pos:column="16"/></operator> <literal type="number" pos:line="52" pos:column="17">220<pos:position pos:line="52" pos:column="20"/></literal></expr>)<pos:position pos:line="52" pos:column="21"/></condition><then pos:line="52" pos:column="21"> <block pos:line="52" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">failf<pos:position pos:line="53" pos:column="10"/></name><argument_list pos:line="53" pos:column="10">(<argument><expr><name pos:line="53" pos:column="11">data<pos:position pos:line="53" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="17">"This doesn't seem like a nice ftp-server response"<pos:position pos:line="53" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="70"/></expr_stmt>
    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">CURLE_FTP_WEIRD_SERVER_REPLY<pos:position pos:line="54" pos:column="40"/></name></expr>;<pos:position pos:line="54" pos:column="41"/></return>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifdef<pos:position pos:line="57" pos:column="7"/></cpp:directive> <name pos:line="57" pos:column="8">KRB4<pos:position pos:line="57" pos:column="12"/></name></cpp:ifdef>
  <comment type="block" pos:line="58" pos:column="3">/* if not anonymous login, try a secure login */</comment>
  <if pos:line="59" pos:column="3">if<condition pos:line="59" pos:column="5">(<expr><name><name pos:line="59" pos:column="6">data<pos:position pos:line="59" pos:column="10"/></name><operator pos:line="59" pos:column="10">-&gt;<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="12">set<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">.<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="16">krb4<pos:position pos:line="59" pos:column="20"/></name></name></expr>)<pos:position pos:line="59" pos:column="21"/></condition><then pos:line="59" pos:column="21"> <block pos:line="59" pos:column="22">{

    <comment type="block" pos:line="61" pos:column="5">/* request data protection level (default is 'clear') */</comment>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">Curl_sec_request_prot<pos:position pos:line="62" pos:column="26"/></name><argument_list pos:line="62" pos:column="26">(<argument><expr><name pos:line="62" pos:column="27">conn<pos:position pos:line="62" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="33">"private"<pos:position pos:line="62" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="44"/></expr_stmt>

    <comment type="block" pos:line="64" pos:column="5">/* We set private first as default, in case the line below fails to
       set a valid level */</comment>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">Curl_sec_request_prot<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">conn<pos:position pos:line="66" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="33">data<pos:position pos:line="66" pos:column="37"/></name><operator pos:line="66" pos:column="37">-&gt;<pos:position pos:line="66" pos:column="42"/></operator><name pos:line="66" pos:column="39">set<pos:position pos:line="66" pos:column="42"/></name><operator pos:line="66" pos:column="42">.<pos:position pos:line="66" pos:column="43"/></operator><name pos:line="66" pos:column="43">krb4_level<pos:position pos:line="66" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="55"/></expr_stmt>

    <if pos:line="68" pos:column="5">if<condition pos:line="68" pos:column="7">(<expr><call><name pos:line="68" pos:column="8">Curl_sec_login<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">conn<pos:position pos:line="68" pos:column="27"/></name></expr></argument>)<pos:position pos:line="68" pos:column="28"/></argument_list></call> <operator pos:line="68" pos:column="29">!=<pos:position pos:line="68" pos:column="31"/></operator> <literal type="number" pos:line="68" pos:column="32">0<pos:position pos:line="68" pos:column="33"/></literal></expr>)<pos:position pos:line="68" pos:column="34"/></condition><then pos:line="68" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="7">infof<pos:position pos:line="69" pos:column="12"/></name><argument_list pos:line="69" pos:column="12">(<argument><expr><name pos:line="69" pos:column="13">data<pos:position pos:line="69" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="19">"Logging in with password in cleartext!\n"<pos:position pos:line="69" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="63"/></expr_stmt></block></then>
    <else pos:line="70" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="7">infof<pos:position pos:line="71" pos:column="12"/></name><argument_list pos:line="71" pos:column="12">(<argument><expr><name pos:line="71" pos:column="13">data<pos:position pos:line="71" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="19">"Authentication successful\n"<pos:position pos:line="71" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="50"/></expr_stmt></block></else></if>
  }<pos:position pos:line="72" pos:column="4"/></block></then></if>
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif>
  
  <comment type="block" pos:line="75" pos:column="3">/* send USER */</comment>
  <expr_stmt><expr><call><name pos:line="76" pos:column="3">ftpsendf<pos:position pos:line="76" pos:column="11"/></name><argument_list pos:line="76" pos:column="11">(<argument><expr><name><name pos:line="76" pos:column="12">conn<pos:position pos:line="76" pos:column="16"/></name><operator pos:line="76" pos:column="16">-&gt;<pos:position pos:line="76" pos:column="21"/></operator><name pos:line="76" pos:column="18">firstsocket<pos:position pos:line="76" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="31">conn<pos:position pos:line="76" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="37">"USER %s"<pos:position pos:line="76" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="48">ftp<pos:position pos:line="76" pos:column="51"/></name><operator pos:line="76" pos:column="51">-&gt;<pos:position pos:line="76" pos:column="56"/></operator><name pos:line="76" pos:column="53">user<pos:position pos:line="76" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="59"/></expr_stmt>

  <comment type="block" pos:line="78" pos:column="3">/* wait for feedback */</comment>
  <expr_stmt><expr><name pos:line="79" pos:column="3">nread<pos:position pos:line="79" pos:column="8"/></name> <operator pos:line="79" pos:column="9">=<pos:position pos:line="79" pos:column="10"/></operator> <call><name pos:line="79" pos:column="11">Curl_GetFTPResponse<pos:position pos:line="79" pos:column="30"/></name><argument_list pos:line="79" pos:column="30">(<argument><expr><name><name pos:line="79" pos:column="31">conn<pos:position pos:line="79" pos:column="35"/></name><operator pos:line="79" pos:column="35">-&gt;<pos:position pos:line="79" pos:column="40"/></operator><name pos:line="79" pos:column="37">firstsocket<pos:position pos:line="79" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="50">buf<pos:position pos:line="79" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="55">conn<pos:position pos:line="79" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="61">&amp;<pos:position pos:line="79" pos:column="66"/></operator><name pos:line="79" pos:column="62">ftpcode<pos:position pos:line="79" pos:column="69"/></name></expr></argument>)<pos:position pos:line="79" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="71"/></expr_stmt>
  <if pos:line="80" pos:column="3">if<condition pos:line="80" pos:column="5">(<expr><name pos:line="80" pos:column="6">nread<pos:position pos:line="80" pos:column="11"/></name> <operator pos:line="80" pos:column="12">&lt;<pos:position pos:line="80" pos:column="16"/></operator> <literal type="number" pos:line="80" pos:column="14">0<pos:position pos:line="80" pos:column="15"/></literal></expr>)<pos:position pos:line="80" pos:column="16"/></condition><then pos:line="80" pos:column="16">
    <block type="pseudo"><return pos:line="81" pos:column="5">return <expr><name pos:line="81" pos:column="12">CURLE_OPERATION_TIMEOUTED<pos:position pos:line="81" pos:column="37"/></name></expr>;<pos:position pos:line="81" pos:column="38"/></return></block></then></if>

  <if pos:line="83" pos:column="3">if<condition pos:line="83" pos:column="5">(<expr><name pos:line="83" pos:column="6">ftpcode<pos:position pos:line="83" pos:column="13"/></name> <operator pos:line="83" pos:column="14">==<pos:position pos:line="83" pos:column="16"/></operator> <literal type="number" pos:line="83" pos:column="17">530<pos:position pos:line="83" pos:column="20"/></literal></expr>)<pos:position pos:line="83" pos:column="21"/></condition><then pos:line="83" pos:column="21"> <block pos:line="83" pos:column="22">{
    <comment type="block" pos:line="84" pos:column="5">/* 530 User ... access denied
       (the server denies to log the specified user) */</comment>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">failf<pos:position pos:line="86" pos:column="10"/></name><argument_list pos:line="86" pos:column="10">(<argument><expr><name pos:line="86" pos:column="11">data<pos:position pos:line="86" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="17">"Access denied: %s"<pos:position pos:line="86" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="86" pos:column="38">&amp;<pos:position pos:line="86" pos:column="43"/></operator><name><name pos:line="86" pos:column="39">buf<pos:position pos:line="86" pos:column="42"/></name><index pos:line="86" pos:column="42">[<expr><literal type="number" pos:line="86" pos:column="43">4<pos:position pos:line="86" pos:column="44"/></literal></expr>]<pos:position pos:line="86" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="86" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="47"/></expr_stmt>
    <return pos:line="87" pos:column="5">return <expr><name pos:line="87" pos:column="12">CURLE_FTP_ACCESS_DENIED<pos:position pos:line="87" pos:column="35"/></name></expr>;<pos:position pos:line="87" pos:column="36"/></return>
  }<pos:position pos:line="88" pos:column="4"/></block></then>
  <elseif pos:line="89" pos:column="3">else <if pos:line="89" pos:column="8">if<condition pos:line="89" pos:column="10">(<expr><name pos:line="89" pos:column="11">ftpcode<pos:position pos:line="89" pos:column="18"/></name> <operator pos:line="89" pos:column="19">==<pos:position pos:line="89" pos:column="21"/></operator> <literal type="number" pos:line="89" pos:column="22">331<pos:position pos:line="89" pos:column="25"/></literal></expr>)<pos:position pos:line="89" pos:column="26"/></condition><then pos:line="89" pos:column="26"> <block pos:line="89" pos:column="27">{
    <comment type="block" pos:line="90" pos:column="5">/* 331 Password required for ...
       (the server requires to send the user's password too) */</comment>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">ftpsendf<pos:position pos:line="92" pos:column="13"/></name><argument_list pos:line="92" pos:column="13">(<argument><expr><name><name pos:line="92" pos:column="14">conn<pos:position pos:line="92" pos:column="18"/></name><operator pos:line="92" pos:column="18">-&gt;<pos:position pos:line="92" pos:column="23"/></operator><name pos:line="92" pos:column="20">firstsocket<pos:position pos:line="92" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="33">conn<pos:position pos:line="92" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="39">"PASS %s"<pos:position pos:line="92" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="50">ftp<pos:position pos:line="92" pos:column="53"/></name><operator pos:line="92" pos:column="53">-&gt;<pos:position pos:line="92" pos:column="58"/></operator><name pos:line="92" pos:column="55">passwd<pos:position pos:line="92" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name pos:line="93" pos:column="5">nread<pos:position pos:line="93" pos:column="10"/></name> <operator pos:line="93" pos:column="11">=<pos:position pos:line="93" pos:column="12"/></operator> <call><name pos:line="93" pos:column="13">Curl_GetFTPResponse<pos:position pos:line="93" pos:column="32"/></name><argument_list pos:line="93" pos:column="32">(<argument><expr><name><name pos:line="93" pos:column="33">conn<pos:position pos:line="93" pos:column="37"/></name><operator pos:line="93" pos:column="37">-&gt;<pos:position pos:line="93" pos:column="42"/></operator><name pos:line="93" pos:column="39">firstsocket<pos:position pos:line="93" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="52">buf<pos:position pos:line="93" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="57">conn<pos:position pos:line="93" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="63">&amp;<pos:position pos:line="93" pos:column="68"/></operator><name pos:line="93" pos:column="64">ftpcode<pos:position pos:line="93" pos:column="71"/></name></expr></argument>)<pos:position pos:line="93" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="73"/></expr_stmt>
    <if pos:line="94" pos:column="5">if<condition pos:line="94" pos:column="7">(<expr><name pos:line="94" pos:column="8">nread<pos:position pos:line="94" pos:column="13"/></name> <operator pos:line="94" pos:column="14">&lt;<pos:position pos:line="94" pos:column="18"/></operator> <literal type="number" pos:line="94" pos:column="16">0<pos:position pos:line="94" pos:column="17"/></literal></expr>)<pos:position pos:line="94" pos:column="18"/></condition><then pos:line="94" pos:column="18">
      <block type="pseudo"><return pos:line="95" pos:column="7">return <expr><name pos:line="95" pos:column="14">CURLE_OPERATION_TIMEOUTED<pos:position pos:line="95" pos:column="39"/></name></expr>;<pos:position pos:line="95" pos:column="40"/></return></block></then></if>

    <if pos:line="97" pos:column="5">if<condition pos:line="97" pos:column="7">(<expr><name pos:line="97" pos:column="8">ftpcode<pos:position pos:line="97" pos:column="15"/></name> <operator pos:line="97" pos:column="16">==<pos:position pos:line="97" pos:column="18"/></operator> <literal type="number" pos:line="97" pos:column="19">530<pos:position pos:line="97" pos:column="22"/></literal></expr>)<pos:position pos:line="97" pos:column="23"/></condition><then pos:line="97" pos:column="23"> <block pos:line="97" pos:column="24">{
      <comment type="block" pos:line="98" pos:column="7">/* 530 Login incorrect.
         (the username and/or the password are incorrect) */</comment>
      <expr_stmt><expr><call><name pos:line="100" pos:column="7">failf<pos:position pos:line="100" pos:column="12"/></name><argument_list pos:line="100" pos:column="12">(<argument><expr><name pos:line="100" pos:column="13">data<pos:position pos:line="100" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="19">"the username and/or the password are incorrect"<pos:position pos:line="100" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="69"/></expr_stmt>
      <return pos:line="101" pos:column="7">return <expr><name pos:line="101" pos:column="14">CURLE_FTP_USER_PASSWORD_INCORRECT<pos:position pos:line="101" pos:column="47"/></name></expr>;<pos:position pos:line="101" pos:column="48"/></return>
    }<pos:position pos:line="102" pos:column="6"/></block></then>
    <elseif pos:line="103" pos:column="5">else <if pos:line="103" pos:column="10">if<condition pos:line="103" pos:column="12">(<expr><name pos:line="103" pos:column="13">ftpcode<pos:position pos:line="103" pos:column="20"/></name> <operator pos:line="103" pos:column="21">==<pos:position pos:line="103" pos:column="23"/></operator> <literal type="number" pos:line="103" pos:column="24">230<pos:position pos:line="103" pos:column="27"/></literal></expr>)<pos:position pos:line="103" pos:column="28"/></condition><then pos:line="103" pos:column="28"> <block pos:line="103" pos:column="29">{
      <comment type="block" pos:line="104" pos:column="7">/* 230 User ... logged in.
         (user successfully logged in) */</comment>
        
      <expr_stmt><expr><call><name pos:line="107" pos:column="7">infof<pos:position pos:line="107" pos:column="12"/></name><argument_list pos:line="107" pos:column="12">(<argument><expr><name pos:line="107" pos:column="13">data<pos:position pos:line="107" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="19">"We have successfully logged in\n"<pos:position pos:line="107" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="108" pos:column="6"/></block></then></if></elseif>
    <else pos:line="109" pos:column="5">else <block pos:line="109" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="110" pos:column="7">failf<pos:position pos:line="110" pos:column="12"/></name><argument_list pos:line="110" pos:column="12">(<argument><expr><name pos:line="110" pos:column="13">data<pos:position pos:line="110" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="19">"Odd return code after PASS"<pos:position pos:line="110" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="49"/></expr_stmt>
      <return pos:line="111" pos:column="7">return <expr><name pos:line="111" pos:column="14">CURLE_FTP_WEIRD_PASS_REPLY<pos:position pos:line="111" pos:column="40"/></name></expr>;<pos:position pos:line="111" pos:column="41"/></return>
    }<pos:position pos:line="112" pos:column="6"/></block></else></if>
  }<pos:position pos:line="113" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="114" pos:column="3">else <if pos:line="114" pos:column="8">if<condition pos:line="114" pos:column="10">(<expr><name><name pos:line="114" pos:column="11">buf<pos:position pos:line="114" pos:column="14"/></name><index pos:line="114" pos:column="14">[<expr><literal type="number" pos:line="114" pos:column="15">0<pos:position pos:line="114" pos:column="16"/></literal></expr>]<pos:position pos:line="114" pos:column="17"/></index></name> <operator pos:line="114" pos:column="18">==<pos:position pos:line="114" pos:column="20"/></operator> <literal type="char" pos:line="114" pos:column="21">'2'<pos:position pos:line="114" pos:column="24"/></literal></expr>)<pos:position pos:line="114" pos:column="25"/></condition><then pos:line="114" pos:column="25"> <block pos:line="114" pos:column="26">{
    <comment type="block" pos:line="115" pos:column="5">/* 230 User ... logged in.
       (the user logged in without password) */</comment>
    <expr_stmt><expr><call><name pos:line="117" pos:column="5">infof<pos:position pos:line="117" pos:column="10"/></name><argument_list pos:line="117" pos:column="10">(<argument><expr><name pos:line="117" pos:column="11">data<pos:position pos:line="117" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="17">"We have successfully logged in\n"<pos:position pos:line="117" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="53"/></expr_stmt>
<cpp:ifdef pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">ifdef<pos:position pos:line="118" pos:column="7"/></cpp:directive> <name pos:line="118" pos:column="8">KRB4<pos:position pos:line="118" pos:column="12"/></name></cpp:ifdef>
	<comment type="block" pos:line="119" pos:column="9">/* we are logged in (with Kerberos)
	 * now set the requested protection level
	 */</comment>
    <if pos:line="122" pos:column="5">if<condition pos:line="122" pos:column="7">(<expr><name><name pos:line="122" pos:column="8">conn<pos:position pos:line="122" pos:column="12"/></name><operator pos:line="122" pos:column="12">-&gt;<pos:position pos:line="122" pos:column="17"/></operator><name pos:line="122" pos:column="14">sec_complete<pos:position pos:line="122" pos:column="26"/></name></name></expr>)<pos:position pos:line="122" pos:column="27"/></condition><then pos:line="122" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="123" pos:column="7">Curl_sec_set_protection_level<pos:position pos:line="123" pos:column="36"/></name><argument_list pos:line="123" pos:column="36">(<argument><expr><name pos:line="123" pos:column="37">conn<pos:position pos:line="123" pos:column="41"/></name></expr></argument>)<pos:position pos:line="123" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="43"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="125" pos:column="5">/* we may need to issue a KAUTH here to have access to the files
     * do it if user supplied a password
     */</comment>
    <if pos:line="128" pos:column="5">if<condition pos:line="128" pos:column="7">(<expr><name><name pos:line="128" pos:column="8">data<pos:position pos:line="128" pos:column="12"/></name><operator pos:line="128" pos:column="12">-&gt;<pos:position pos:line="128" pos:column="17"/></operator><name pos:line="128" pos:column="14">state<pos:position pos:line="128" pos:column="19"/></name><operator pos:line="128" pos:column="19">.<pos:position pos:line="128" pos:column="20"/></operator><name pos:line="128" pos:column="20">passwd<pos:position pos:line="128" pos:column="26"/></name></name> <operator pos:line="128" pos:column="27">&amp;&amp;<pos:position pos:line="128" pos:column="37"/></operator> <operator pos:line="128" pos:column="30">*<pos:position pos:line="128" pos:column="31"/></operator><name><name pos:line="128" pos:column="31">data<pos:position pos:line="128" pos:column="35"/></name><operator pos:line="128" pos:column="35">-&gt;<pos:position pos:line="128" pos:column="40"/></operator><name pos:line="128" pos:column="37">state<pos:position pos:line="128" pos:column="42"/></name><operator pos:line="128" pos:column="42">.<pos:position pos:line="128" pos:column="43"/></operator><name pos:line="128" pos:column="43">passwd<pos:position pos:line="128" pos:column="49"/></name></name></expr>)<pos:position pos:line="128" pos:column="50"/></condition><then pos:line="128" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="129" pos:column="7">Curl_krb_kauth<pos:position pos:line="129" pos:column="21"/></name><argument_list pos:line="129" pos:column="21">(<argument><expr><name pos:line="129" pos:column="22">conn<pos:position pos:line="129" pos:column="26"/></name></expr></argument>)<pos:position pos:line="129" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="28"/></expr_stmt></block></then></if>
<cpp:endif pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">endif<pos:position pos:line="130" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="131" pos:column="4"/></block></then></if></elseif>
  <else pos:line="132" pos:column="3">else <block pos:line="132" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="133" pos:column="5">failf<pos:position pos:line="133" pos:column="10"/></name><argument_list pos:line="133" pos:column="10">(<argument><expr><name pos:line="133" pos:column="11">data<pos:position pos:line="133" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="17">"Odd return code after USER"<pos:position pos:line="133" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="47"/></expr_stmt>
    <return pos:line="134" pos:column="5">return <expr><name pos:line="134" pos:column="12">CURLE_FTP_WEIRD_USER_REPLY<pos:position pos:line="134" pos:column="38"/></name></expr>;<pos:position pos:line="134" pos:column="39"/></return>
  }<pos:position pos:line="135" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="137" pos:column="3">/* send PWD to discover our entry point */</comment>
  <expr_stmt><expr><call><name pos:line="138" pos:column="3">ftpsendf<pos:position pos:line="138" pos:column="11"/></name><argument_list pos:line="138" pos:column="11">(<argument><expr><name><name pos:line="138" pos:column="12">conn<pos:position pos:line="138" pos:column="16"/></name><operator pos:line="138" pos:column="16">-&gt;<pos:position pos:line="138" pos:column="21"/></operator><name pos:line="138" pos:column="18">firstsocket<pos:position pos:line="138" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="31">conn<pos:position pos:line="138" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="37">"PWD"<pos:position pos:line="138" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="44"/></expr_stmt>

  <comment type="block" pos:line="140" pos:column="3">/* wait for feedback */</comment>
  <expr_stmt><expr><name pos:line="141" pos:column="3">nread<pos:position pos:line="141" pos:column="8"/></name> <operator pos:line="141" pos:column="9">=<pos:position pos:line="141" pos:column="10"/></operator> <call><name pos:line="141" pos:column="11">Curl_GetFTPResponse<pos:position pos:line="141" pos:column="30"/></name><argument_list pos:line="141" pos:column="30">(<argument><expr><name><name pos:line="141" pos:column="31">conn<pos:position pos:line="141" pos:column="35"/></name><operator pos:line="141" pos:column="35">-&gt;<pos:position pos:line="141" pos:column="40"/></operator><name pos:line="141" pos:column="37">firstsocket<pos:position pos:line="141" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="50">buf<pos:position pos:line="141" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="55">conn<pos:position pos:line="141" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="141" pos:column="61">&amp;<pos:position pos:line="141" pos:column="66"/></operator><name pos:line="141" pos:column="62">ftpcode<pos:position pos:line="141" pos:column="69"/></name></expr></argument>)<pos:position pos:line="141" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="71"/></expr_stmt>
  <if pos:line="142" pos:column="3">if<condition pos:line="142" pos:column="5">(<expr><name pos:line="142" pos:column="6">nread<pos:position pos:line="142" pos:column="11"/></name> <operator pos:line="142" pos:column="12">&lt;<pos:position pos:line="142" pos:column="16"/></operator> <literal type="number" pos:line="142" pos:column="14">0<pos:position pos:line="142" pos:column="15"/></literal></expr>)<pos:position pos:line="142" pos:column="16"/></condition><then pos:line="142" pos:column="16">
    <block type="pseudo"><return pos:line="143" pos:column="5">return <expr><name pos:line="143" pos:column="12">CURLE_OPERATION_TIMEOUTED<pos:position pos:line="143" pos:column="37"/></name></expr>;<pos:position pos:line="143" pos:column="38"/></return></block></then></if>

  <if pos:line="145" pos:column="3">if<condition pos:line="145" pos:column="5">(<expr><name pos:line="145" pos:column="6">ftpcode<pos:position pos:line="145" pos:column="13"/></name> <operator pos:line="145" pos:column="14">==<pos:position pos:line="145" pos:column="16"/></operator> <literal type="number" pos:line="145" pos:column="17">257<pos:position pos:line="145" pos:column="20"/></literal></expr>)<pos:position pos:line="145" pos:column="21"/></condition><then pos:line="145" pos:column="21"> <block pos:line="145" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="146" pos:column="5">char<pos:position pos:line="146" pos:column="9"/></name> <modifier pos:line="146" pos:column="10">*<pos:position pos:line="146" pos:column="11"/></modifier></type><name pos:line="146" pos:column="11">dir<pos:position pos:line="146" pos:column="14"/></name> <init pos:line="146" pos:column="15">= <expr><operator pos:line="146" pos:column="17">(<pos:position pos:line="146" pos:column="18"/></operator><name pos:line="146" pos:column="18">char<pos:position pos:line="146" pos:column="22"/></name> <operator pos:line="146" pos:column="23">*<pos:position pos:line="146" pos:column="24"/></operator><operator pos:line="146" pos:column="24">)<pos:position pos:line="146" pos:column="25"/></operator><call><name pos:line="146" pos:column="25">malloc<pos:position pos:line="146" pos:column="31"/></name><argument_list pos:line="146" pos:column="31">(<argument><expr><name pos:line="146" pos:column="32">nread<pos:position pos:line="146" pos:column="37"/></name><operator pos:line="146" pos:column="37">+<pos:position pos:line="146" pos:column="38"/></operator><literal type="number" pos:line="146" pos:column="38">1<pos:position pos:line="146" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="146" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="147" pos:column="5">char<pos:position pos:line="147" pos:column="9"/></name> <modifier pos:line="147" pos:column="10">*<pos:position pos:line="147" pos:column="11"/></modifier></type><name pos:line="147" pos:column="11">store<pos:position pos:line="147" pos:column="16"/></name><init pos:line="147" pos:column="16">=<expr><name pos:line="147" pos:column="17">dir<pos:position pos:line="147" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="147" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="148" pos:column="5">char<pos:position pos:line="148" pos:column="9"/></name> <modifier pos:line="148" pos:column="10">*<pos:position pos:line="148" pos:column="11"/></modifier></type><name pos:line="148" pos:column="11">ptr<pos:position pos:line="148" pos:column="14"/></name><init pos:line="148" pos:column="14">=<expr><operator pos:line="148" pos:column="15">&amp;<pos:position pos:line="148" pos:column="20"/></operator><name><name pos:line="148" pos:column="16">buf<pos:position pos:line="148" pos:column="19"/></name><index pos:line="148" pos:column="19">[<expr><literal type="number" pos:line="148" pos:column="20">4<pos:position pos:line="148" pos:column="21"/></literal></expr>]<pos:position pos:line="148" pos:column="22"/></index></name></expr></init></decl>;<pos:position pos:line="148" pos:column="23"/></decl_stmt> <comment type="block" pos:line="148" pos:column="24">/* start on the first letter */</comment>
    
    <comment type="block" pos:line="150" pos:column="5">/* Reply format is like
       257&lt;space&gt;"&lt;directory-name&gt;"&lt;space&gt;&lt;commentary&gt; and the RFC959 says

       The directory name can contain any character; embedded double-quotes
       should be escaped by double-quotes (the "quote-doubling" convention).
    */</comment>
    <if pos:line="156" pos:column="5">if<condition pos:line="156" pos:column="7">(<expr><literal type="char" pos:line="156" pos:column="8">'\"'<pos:position pos:line="156" pos:column="12"/></literal> <operator pos:line="156" pos:column="13">==<pos:position pos:line="156" pos:column="15"/></operator> <operator pos:line="156" pos:column="16">*<pos:position pos:line="156" pos:column="17"/></operator><name pos:line="156" pos:column="17">ptr<pos:position pos:line="156" pos:column="20"/></name></expr>)<pos:position pos:line="156" pos:column="21"/></condition><then pos:line="156" pos:column="21"> <block pos:line="156" pos:column="22">{
      <comment type="block" pos:line="157" pos:column="7">/* it started good */</comment>
      <expr_stmt><expr><name pos:line="158" pos:column="7">ptr<pos:position pos:line="158" pos:column="10"/></name><operator pos:line="158" pos:column="10">++<pos:position pos:line="158" pos:column="12"/></operator></expr>;<pos:position pos:line="158" pos:column="13"/></expr_stmt>
      <while pos:line="159" pos:column="7">while<condition pos:line="159" pos:column="12">(<expr><name pos:line="159" pos:column="13">ptr<pos:position pos:line="159" pos:column="16"/></name> <operator pos:line="159" pos:column="17">&amp;&amp;<pos:position pos:line="159" pos:column="27"/></operator> <operator pos:line="159" pos:column="20">*<pos:position pos:line="159" pos:column="21"/></operator><name pos:line="159" pos:column="21">ptr<pos:position pos:line="159" pos:column="24"/></name></expr>)<pos:position pos:line="159" pos:column="25"/></condition> <block pos:line="159" pos:column="26">{
        <if pos:line="160" pos:column="9">if<condition pos:line="160" pos:column="11">(<expr><literal type="char" pos:line="160" pos:column="12">'\"'<pos:position pos:line="160" pos:column="16"/></literal> <operator pos:line="160" pos:column="17">==<pos:position pos:line="160" pos:column="19"/></operator> <operator pos:line="160" pos:column="20">*<pos:position pos:line="160" pos:column="21"/></operator><name pos:line="160" pos:column="21">ptr<pos:position pos:line="160" pos:column="24"/></name></expr>)<pos:position pos:line="160" pos:column="25"/></condition><then pos:line="160" pos:column="25"> <block pos:line="160" pos:column="26">{
          <if pos:line="161" pos:column="11">if<condition pos:line="161" pos:column="13">(<expr><literal type="char" pos:line="161" pos:column="14">'\"'<pos:position pos:line="161" pos:column="18"/></literal> <operator pos:line="161" pos:column="19">==<pos:position pos:line="161" pos:column="21"/></operator> <name><name pos:line="161" pos:column="22">ptr<pos:position pos:line="161" pos:column="25"/></name><index pos:line="161" pos:column="25">[<expr><literal type="number" pos:line="161" pos:column="26">1<pos:position pos:line="161" pos:column="27"/></literal></expr>]<pos:position pos:line="161" pos:column="28"/></index></name></expr>)<pos:position pos:line="161" pos:column="29"/></condition><then pos:line="161" pos:column="29"> <block pos:line="161" pos:column="30">{
            <comment type="block" pos:line="162" pos:column="13">/* "quote-doubling" */</comment>
            <expr_stmt><expr><operator pos:line="163" pos:column="13">*<pos:position pos:line="163" pos:column="14"/></operator><name pos:line="163" pos:column="14">store<pos:position pos:line="163" pos:column="19"/></name> <operator pos:line="163" pos:column="20">=<pos:position pos:line="163" pos:column="21"/></operator> <name><name pos:line="163" pos:column="22">ptr<pos:position pos:line="163" pos:column="25"/></name><index pos:line="163" pos:column="25">[<expr><literal type="number" pos:line="163" pos:column="26">1<pos:position pos:line="163" pos:column="27"/></literal></expr>]<pos:position pos:line="163" pos:column="28"/></index></name></expr>;<pos:position pos:line="163" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name pos:line="164" pos:column="13">ptr<pos:position pos:line="164" pos:column="16"/></name><operator pos:line="164" pos:column="16">++<pos:position pos:line="164" pos:column="18"/></operator></expr>;<pos:position pos:line="164" pos:column="19"/></expr_stmt>
          }<pos:position pos:line="165" pos:column="12"/></block></then>
          <else pos:line="166" pos:column="11">else <block pos:line="166" pos:column="16">{
            <comment type="block" pos:line="167" pos:column="13">/* end of path */</comment>
            <expr_stmt><expr><operator pos:line="168" pos:column="13">*<pos:position pos:line="168" pos:column="14"/></operator><name pos:line="168" pos:column="14">store<pos:position pos:line="168" pos:column="19"/></name> <operator pos:line="168" pos:column="20">=<pos:position pos:line="168" pos:column="21"/></operator> <literal type="char" pos:line="168" pos:column="22">'\0'<pos:position pos:line="168" pos:column="26"/></literal></expr>;<pos:position pos:line="168" pos:column="27"/></expr_stmt> <comment type="block" pos:line="168" pos:column="28">/* zero terminate */</comment>
            <break pos:line="169" pos:column="13">break;<pos:position pos:line="169" pos:column="19"/></break> <comment type="block" pos:line="169" pos:column="20">/* get out of this loop */</comment>
          }<pos:position pos:line="170" pos:column="12"/></block></else></if>
        }<pos:position pos:line="171" pos:column="10"/></block></then>
        <else pos:line="172" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><operator pos:line="173" pos:column="11">*<pos:position pos:line="173" pos:column="12"/></operator><name pos:line="173" pos:column="12">store<pos:position pos:line="173" pos:column="17"/></name> <operator pos:line="173" pos:column="18">=<pos:position pos:line="173" pos:column="19"/></operator> <operator pos:line="173" pos:column="20">*<pos:position pos:line="173" pos:column="21"/></operator><name pos:line="173" pos:column="21">ptr<pos:position pos:line="173" pos:column="24"/></name></expr>;<pos:position pos:line="173" pos:column="25"/></expr_stmt></block></else></if>
        <expr_stmt><expr><name pos:line="174" pos:column="9">store<pos:position pos:line="174" pos:column="14"/></name><operator pos:line="174" pos:column="14">++<pos:position pos:line="174" pos:column="16"/></operator></expr>;<pos:position pos:line="174" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><name pos:line="175" pos:column="9">ptr<pos:position pos:line="175" pos:column="12"/></name><operator pos:line="175" pos:column="12">++<pos:position pos:line="175" pos:column="14"/></operator></expr>;<pos:position pos:line="175" pos:column="15"/></expr_stmt>
      }<pos:position pos:line="176" pos:column="8"/></block></while>
      <expr_stmt><expr><name><name pos:line="177" pos:column="7">ftp<pos:position pos:line="177" pos:column="10"/></name><operator pos:line="177" pos:column="10">-&gt;<pos:position pos:line="177" pos:column="15"/></operator><name pos:line="177" pos:column="12">entrypath<pos:position pos:line="177" pos:column="21"/></name></name> <operator pos:line="177" pos:column="22">=<pos:position pos:line="177" pos:column="23"/></operator><name pos:line="177" pos:column="23">dir<pos:position pos:line="177" pos:column="26"/></name></expr>;<pos:position pos:line="177" pos:column="27"/></expr_stmt> <comment type="block" pos:line="177" pos:column="28">/* remember this */</comment>
      <expr_stmt><expr><call><name pos:line="178" pos:column="7">infof<pos:position pos:line="178" pos:column="12"/></name><argument_list pos:line="178" pos:column="12">(<argument><expr><name pos:line="178" pos:column="13">data<pos:position pos:line="178" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="19">"Entry path is '%s'\n"<pos:position pos:line="178" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="178" pos:column="43">ftp<pos:position pos:line="178" pos:column="46"/></name><operator pos:line="178" pos:column="46">-&gt;<pos:position pos:line="178" pos:column="51"/></operator><name pos:line="178" pos:column="48">entrypath<pos:position pos:line="178" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="178" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="179" pos:column="6"/></block></then>
    <else pos:line="180" pos:column="5">else <block pos:line="180" pos:column="10">{
      <comment type="block" pos:line="181" pos:column="7">/* couldn't get the path */</comment>
    }<pos:position pos:line="182" pos:column="6"/></block></else></if>

  }<pos:position pos:line="184" pos:column="4"/></block></then>
  <else pos:line="185" pos:column="3">else <block pos:line="185" pos:column="8">{
    <comment type="block" pos:line="186" pos:column="5">/* We couldn't read the PWD response! */</comment>
  }<pos:position pos:line="187" pos:column="4"/></block></else></if>

  <return pos:line="189" pos:column="3">return <expr><name pos:line="189" pos:column="10">CURLE_OK<pos:position pos:line="189" pos:column="18"/></name></expr>;<pos:position pos:line="189" pos:column="19"/></return>
}<pos:position pos:line="190" pos:column="2"/></block></function></unit>

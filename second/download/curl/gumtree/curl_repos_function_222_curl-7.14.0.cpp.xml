<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_222_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">curl_off_t<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">curlx_strtoll<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">nptr<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier><modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">endptr<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">int<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">base<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">end<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">is_negative<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">overflow<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">curl_off_t<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">value<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">curl_off_t<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">newval<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* Skip leading whitespace. */</comment>
  <expr_stmt><expr><name pos:line="12" pos:column="3">end<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">char<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">*<pos:position pos:line="12" pos:column="16"/></operator><operator pos:line="12" pos:column="16">)<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">nptr<pos:position pos:line="12" pos:column="21"/></name></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
  <while pos:line="13" pos:column="3">while <condition pos:line="13" pos:column="9">(<expr><call><name pos:line="13" pos:column="10">isspace<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><operator pos:line="13" pos:column="18">(<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">int<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">)<pos:position pos:line="13" pos:column="23"/></operator><name><name pos:line="13" pos:column="23">end<pos:position pos:line="13" pos:column="26"/></name><index pos:line="13" pos:column="26">[<expr><literal type="number" pos:line="13" pos:column="27">0<pos:position pos:line="13" pos:column="28"/></literal></expr>]<pos:position pos:line="13" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="31"/></condition> <block pos:line="13" pos:column="32">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">end<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">++<pos:position pos:line="14" pos:column="10"/></operator></expr>;<pos:position pos:line="14" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></while>

  <comment type="block" pos:line="17" pos:column="3">/* Handle the sign, if any. */</comment>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name><name pos:line="18" pos:column="7">end<pos:position pos:line="18" pos:column="10"/></name><index pos:line="18" pos:column="10">[<expr><literal type="number" pos:line="18" pos:column="11">0<pos:position pos:line="18" pos:column="12"/></literal></expr>]<pos:position pos:line="18" pos:column="13"/></index></name> <operator pos:line="18" pos:column="14">==<pos:position pos:line="18" pos:column="16"/></operator> <literal type="char" pos:line="18" pos:column="17">'-'<pos:position pos:line="18" pos:column="20"/></literal></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21"> <block pos:line="18" pos:column="22">{
    <expr_stmt><expr><name pos:line="19" pos:column="5">is_negative<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <literal type="number" pos:line="19" pos:column="19">1<pos:position pos:line="19" pos:column="20"/></literal></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">end<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">++<pos:position pos:line="20" pos:column="10"/></operator></expr>;<pos:position pos:line="20" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then>
  <elseif pos:line="22" pos:column="3">else <if pos:line="22" pos:column="8">if <condition pos:line="22" pos:column="11">(<expr><name><name pos:line="22" pos:column="12">end<pos:position pos:line="22" pos:column="15"/></name><index pos:line="22" pos:column="15">[<expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>]<pos:position pos:line="22" pos:column="18"/></index></name> <operator pos:line="22" pos:column="19">==<pos:position pos:line="22" pos:column="21"/></operator> <literal type="char" pos:line="22" pos:column="22">'+'<pos:position pos:line="22" pos:column="25"/></literal></expr>)<pos:position pos:line="22" pos:column="26"/></condition><then pos:line="22" pos:column="26"> <block pos:line="22" pos:column="27">{
    <expr_stmt><expr><name pos:line="23" pos:column="5">end<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">++<pos:position pos:line="23" pos:column="10"/></operator></expr>;<pos:position pos:line="23" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="25" pos:column="3">else <if pos:line="25" pos:column="8">if <condition pos:line="25" pos:column="11">(<expr><name><name pos:line="25" pos:column="12">end<pos:position pos:line="25" pos:column="15"/></name><index pos:line="25" pos:column="15">[<expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>]<pos:position pos:line="25" pos:column="18"/></index></name> <operator pos:line="25" pos:column="19">==<pos:position pos:line="25" pos:column="21"/></operator> <literal type="char" pos:line="25" pos:column="22">'\0'<pos:position pos:line="25" pos:column="26"/></literal></expr>)<pos:position pos:line="25" pos:column="27"/></condition><then pos:line="25" pos:column="27"> <block pos:line="25" pos:column="28">{
    <comment type="block" pos:line="26" pos:column="5">/* We had nothing but perhaps some whitespace -- there was no number. */</comment>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">endptr<pos:position pos:line="27" pos:column="15"/></name></expr>)<pos:position pos:line="27" pos:column="16"/></condition><then pos:line="27" pos:column="16"> <block pos:line="27" pos:column="17">{
      <expr_stmt><expr><operator pos:line="28" pos:column="7">*<pos:position pos:line="28" pos:column="8"/></operator><name pos:line="28" pos:column="8">endptr<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">end<pos:position pos:line="28" pos:column="20"/></name></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <return pos:line="30" pos:column="5">return <expr><literal type="number" pos:line="30" pos:column="12">0<pos:position pos:line="30" pos:column="13"/></literal></expr>;<pos:position pos:line="30" pos:column="14"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if></elseif></if>

  <comment type="block" pos:line="33" pos:column="3">/* Handle special beginnings, if present and allowed. */</comment>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name><name pos:line="34" pos:column="7">end<pos:position pos:line="34" pos:column="10"/></name><index pos:line="34" pos:column="10">[<expr><literal type="number" pos:line="34" pos:column="11">0<pos:position pos:line="34" pos:column="12"/></literal></expr>]<pos:position pos:line="34" pos:column="13"/></index></name> <operator pos:line="34" pos:column="14">==<pos:position pos:line="34" pos:column="16"/></operator> <literal type="char" pos:line="34" pos:column="17">'0'<pos:position pos:line="34" pos:column="20"/></literal> <operator pos:line="34" pos:column="21">&amp;&amp;<pos:position pos:line="34" pos:column="31"/></operator> <name><name pos:line="34" pos:column="24">end<pos:position pos:line="34" pos:column="27"/></name><index pos:line="34" pos:column="27">[<expr><literal type="number" pos:line="34" pos:column="28">1<pos:position pos:line="34" pos:column="29"/></literal></expr>]<pos:position pos:line="34" pos:column="30"/></index></name> <operator pos:line="34" pos:column="31">==<pos:position pos:line="34" pos:column="33"/></operator> <literal type="char" pos:line="34" pos:column="34">'x'<pos:position pos:line="34" pos:column="37"/></literal></expr>)<pos:position pos:line="34" pos:column="38"/></condition><then pos:line="34" pos:column="38"> <block pos:line="34" pos:column="39">{
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">base<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">==<pos:position pos:line="35" pos:column="16"/></operator> <literal type="number" pos:line="35" pos:column="17">16<pos:position pos:line="35" pos:column="19"/></literal> <operator pos:line="35" pos:column="20">||<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="23">base<pos:position pos:line="35" pos:column="27"/></name> <operator pos:line="35" pos:column="28">==<pos:position pos:line="35" pos:column="30"/></operator> <literal type="number" pos:line="35" pos:column="31">0<pos:position pos:line="35" pos:column="32"/></literal></expr>)<pos:position pos:line="35" pos:column="33"/></condition><then pos:line="35" pos:column="33"> <block pos:line="35" pos:column="34">{
      <expr_stmt><expr><name pos:line="36" pos:column="7">end<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">+=<pos:position pos:line="36" pos:column="13"/></operator> <literal type="number" pos:line="36" pos:column="14">2<pos:position pos:line="36" pos:column="15"/></literal></expr>;<pos:position pos:line="36" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><name pos:line="37" pos:column="7">base<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <literal type="number" pos:line="37" pos:column="14">16<pos:position pos:line="37" pos:column="16"/></literal></expr>;<pos:position pos:line="37" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
  }<pos:position pos:line="39" pos:column="4"/></block></then>
  <elseif pos:line="40" pos:column="3">else <if pos:line="40" pos:column="8">if <condition pos:line="40" pos:column="11">(<expr><name><name pos:line="40" pos:column="12">end<pos:position pos:line="40" pos:column="15"/></name><index pos:line="40" pos:column="15">[<expr><literal type="number" pos:line="40" pos:column="16">0<pos:position pos:line="40" pos:column="17"/></literal></expr>]<pos:position pos:line="40" pos:column="18"/></index></name> <operator pos:line="40" pos:column="19">==<pos:position pos:line="40" pos:column="21"/></operator> <literal type="char" pos:line="40" pos:column="22">'0'<pos:position pos:line="40" pos:column="25"/></literal></expr>)<pos:position pos:line="40" pos:column="26"/></condition><then pos:line="40" pos:column="26"> <block pos:line="40" pos:column="27">{
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">base<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">==<pos:position pos:line="41" pos:column="16"/></operator> <literal type="number" pos:line="41" pos:column="17">8<pos:position pos:line="41" pos:column="18"/></literal> <operator pos:line="41" pos:column="19">||<pos:position pos:line="41" pos:column="21"/></operator> <name pos:line="41" pos:column="22">base<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">==<pos:position pos:line="41" pos:column="29"/></operator> <literal type="number" pos:line="41" pos:column="30">0<pos:position pos:line="41" pos:column="31"/></literal></expr>)<pos:position pos:line="41" pos:column="32"/></condition><then pos:line="41" pos:column="32"> <block pos:line="41" pos:column="33">{
      <expr_stmt><expr><name pos:line="42" pos:column="7">end<pos:position pos:line="42" pos:column="10"/></name><operator pos:line="42" pos:column="10">++<pos:position pos:line="42" pos:column="12"/></operator></expr>;<pos:position pos:line="42" pos:column="13"/></expr_stmt>
      <expr_stmt><expr><name pos:line="43" pos:column="7">base<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <literal type="number" pos:line="43" pos:column="14">8<pos:position pos:line="43" pos:column="15"/></literal></expr>;<pos:position pos:line="43" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if></elseif></if>

  <comment type="block" pos:line="47" pos:column="3">/* Matching strtol, if the base is 0 and it doesn't look like
   * the number is octal or hex, we assume it's base 10.
   */</comment>
  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name pos:line="50" pos:column="7">base<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">==<pos:position pos:line="50" pos:column="14"/></operator> <literal type="number" pos:line="50" pos:column="15">0<pos:position pos:line="50" pos:column="16"/></literal></expr>)<pos:position pos:line="50" pos:column="17"/></condition><then pos:line="50" pos:column="17"> <block pos:line="50" pos:column="18">{
    <expr_stmt><expr><name pos:line="51" pos:column="5">base<pos:position pos:line="51" pos:column="9"/></name> <operator pos:line="51" pos:column="10">=<pos:position pos:line="51" pos:column="11"/></operator> <literal type="number" pos:line="51" pos:column="12">10<pos:position pos:line="51" pos:column="14"/></literal></expr>;<pos:position pos:line="51" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="54" pos:column="3">/* Loop handling digits. */</comment>
  <expr_stmt><expr><name pos:line="55" pos:column="3">value<pos:position pos:line="55" pos:column="8"/></name> <operator pos:line="55" pos:column="9">=<pos:position pos:line="55" pos:column="10"/></operator> <literal type="number" pos:line="55" pos:column="11">0<pos:position pos:line="55" pos:column="12"/></literal></expr>;<pos:position pos:line="55" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="56" pos:column="3">overflow<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <literal type="number" pos:line="56" pos:column="14">0<pos:position pos:line="56" pos:column="15"/></literal></expr>;<pos:position pos:line="56" pos:column="16"/></expr_stmt>
  <for pos:line="57" pos:column="3">for <control pos:line="57" pos:column="7">(<init><expr><name pos:line="57" pos:column="8">i<pos:position pos:line="57" pos:column="9"/></name> <operator pos:line="57" pos:column="10">=<pos:position pos:line="57" pos:column="11"/></operator> <call><name pos:line="57" pos:column="12">get_char<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><name><name pos:line="57" pos:column="21">end<pos:position pos:line="57" pos:column="24"/></name><index pos:line="57" pos:column="24">[<expr><literal type="number" pos:line="57" pos:column="25">0<pos:position pos:line="57" pos:column="26"/></literal></expr>]<pos:position pos:line="57" pos:column="27"/></index></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="29">base<pos:position pos:line="57" pos:column="33"/></name></expr></argument>)<pos:position pos:line="57" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="35"/></init>
       <condition><expr><name pos:line="58" pos:column="8">i<pos:position pos:line="58" pos:column="9"/></name> <operator pos:line="58" pos:column="10">!=<pos:position pos:line="58" pos:column="12"/></operator> <operator pos:line="58" pos:column="13">-<pos:position pos:line="58" pos:column="14"/></operator><literal type="number" pos:line="58" pos:column="14">1<pos:position pos:line="58" pos:column="15"/></literal></expr>;<pos:position pos:line="58" pos:column="16"/></condition>
       <incr><expr><name pos:line="59" pos:column="8">end<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">++<pos:position pos:line="59" pos:column="13"/></operator></expr><operator pos:line="59" pos:column="13">,<pos:position pos:line="59" pos:column="14"/></operator> <expr><name pos:line="59" pos:column="15">i<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <call><name pos:line="59" pos:column="19">get_char<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><name><name pos:line="59" pos:column="28">end<pos:position pos:line="59" pos:column="31"/></name><index pos:line="59" pos:column="31">[<expr><literal type="number" pos:line="59" pos:column="32">0<pos:position pos:line="59" pos:column="33"/></literal></expr>]<pos:position pos:line="59" pos:column="34"/></index></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="36">base<pos:position pos:line="59" pos:column="40"/></name></expr></argument>)<pos:position pos:line="59" pos:column="41"/></argument_list></call></expr></incr>)<pos:position pos:line="59" pos:column="42"/></control> <block pos:line="59" pos:column="43">{
    <expr_stmt><expr><name pos:line="60" pos:column="5">newval<pos:position pos:line="60" pos:column="11"/></name> <operator pos:line="60" pos:column="12">=<pos:position pos:line="60" pos:column="13"/></operator> <name pos:line="60" pos:column="14">base<pos:position pos:line="60" pos:column="18"/></name> <operator pos:line="60" pos:column="19">*<pos:position pos:line="60" pos:column="20"/></operator> <name pos:line="60" pos:column="21">value<pos:position pos:line="60" pos:column="26"/></name> <operator pos:line="60" pos:column="27">+<pos:position pos:line="60" pos:column="28"/></operator> <name pos:line="60" pos:column="29">i<pos:position pos:line="60" pos:column="30"/></name></expr>;<pos:position pos:line="60" pos:column="31"/></expr_stmt>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">newval<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">&lt;<pos:position pos:line="61" pos:column="20"/></operator> <name pos:line="61" pos:column="18">value<pos:position pos:line="61" pos:column="23"/></name></expr>)<pos:position pos:line="61" pos:column="24"/></condition><then pos:line="61" pos:column="24"> <block pos:line="61" pos:column="25">{
      <comment type="block" pos:line="62" pos:column="7">/* We've overflowed. */</comment>
      <expr_stmt><expr><name pos:line="63" pos:column="7">overflow<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <literal type="number" pos:line="63" pos:column="18">1<pos:position pos:line="63" pos:column="19"/></literal></expr>;<pos:position pos:line="63" pos:column="20"/></expr_stmt>
      <break pos:line="64" pos:column="7">break;<pos:position pos:line="64" pos:column="13"/></break>
    }<pos:position pos:line="65" pos:column="6"/></block></then>
    <else pos:line="66" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="7">value<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">=<pos:position pos:line="67" pos:column="14"/></operator> <name pos:line="67" pos:column="15">newval<pos:position pos:line="67" pos:column="21"/></name></expr>;<pos:position pos:line="67" pos:column="22"/></expr_stmt></block></else></if>
  }<pos:position pos:line="68" pos:column="4"/></block></for>

  <if pos:line="70" pos:column="3">if <condition pos:line="70" pos:column="6">(<expr><operator pos:line="70" pos:column="7">!<pos:position pos:line="70" pos:column="8"/></operator><name pos:line="70" pos:column="8">overflow<pos:position pos:line="70" pos:column="16"/></name></expr>)<pos:position pos:line="70" pos:column="17"/></condition><then pos:line="70" pos:column="17"> <block pos:line="70" pos:column="18">{
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">is_negative<pos:position pos:line="71" pos:column="20"/></name></expr>)<pos:position pos:line="71" pos:column="21"/></condition><then pos:line="71" pos:column="21"> <block pos:line="71" pos:column="22">{
      <comment type="block" pos:line="72" pos:column="7">/* Fix the sign. */</comment>
      <expr_stmt><expr><name pos:line="73" pos:column="7">value<pos:position pos:line="73" pos:column="12"/></name> <operator pos:line="73" pos:column="13">*=<pos:position pos:line="73" pos:column="15"/></operator> <operator pos:line="73" pos:column="16">-<pos:position pos:line="73" pos:column="17"/></operator><literal type="number" pos:line="73" pos:column="17">1<pos:position pos:line="73" pos:column="18"/></literal></expr>;<pos:position pos:line="73" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>
  }<pos:position pos:line="75" pos:column="4"/></block></then>
  <else pos:line="76" pos:column="3">else <block pos:line="76" pos:column="8">{
    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><name pos:line="77" pos:column="9">is_negative<pos:position pos:line="77" pos:column="20"/></name></expr>)<pos:position pos:line="77" pos:column="21"/></condition><then pos:line="77" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="7">value<pos:position pos:line="78" pos:column="12"/></name> <operator pos:line="78" pos:column="13">=<pos:position pos:line="78" pos:column="14"/></operator> <name pos:line="78" pos:column="15">CURL_LLONG_MIN<pos:position pos:line="78" pos:column="29"/></name></expr>;<pos:position pos:line="78" pos:column="30"/></expr_stmt></block></then>
    <else pos:line="79" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="7">value<pos:position pos:line="80" pos:column="12"/></name> <operator pos:line="80" pos:column="13">=<pos:position pos:line="80" pos:column="14"/></operator> <name pos:line="80" pos:column="15">CURL_LLONG_MAX<pos:position pos:line="80" pos:column="29"/></name></expr>;<pos:position pos:line="80" pos:column="30"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="82" pos:column="5">errno<pos:position pos:line="82" pos:column="10"/></name> <operator pos:line="82" pos:column="11">=<pos:position pos:line="82" pos:column="12"/></operator> <name pos:line="82" pos:column="13">ERANGE<pos:position pos:line="82" pos:column="19"/></name></expr>;<pos:position pos:line="82" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="83" pos:column="4"/></block></else></if>

  <if pos:line="85" pos:column="3">if <condition pos:line="85" pos:column="6">(<expr><name pos:line="85" pos:column="7">endptr<pos:position pos:line="85" pos:column="13"/></name></expr>)<pos:position pos:line="85" pos:column="14"/></condition><then pos:line="85" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="86" pos:column="5">*<pos:position pos:line="86" pos:column="6"/></operator><name pos:line="86" pos:column="6">endptr<pos:position pos:line="86" pos:column="12"/></name> <operator pos:line="86" pos:column="13">=<pos:position pos:line="86" pos:column="14"/></operator> <name pos:line="86" pos:column="15">end<pos:position pos:line="86" pos:column="18"/></name></expr>;<pos:position pos:line="86" pos:column="19"/></expr_stmt></block></then></if>

  <return pos:line="88" pos:column="3">return <expr><name pos:line="88" pos:column="10">value<pos:position pos:line="88" pos:column="15"/></name></expr>;<pos:position pos:line="88" pos:column="16"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

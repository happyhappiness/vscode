<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2281_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">Curl_freeaddrinfo<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">Curl_addrinfo<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">cahead<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">Curl_addrinfo<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier><name pos:line="4" pos:column="18">vqualifier<pos:position pos:line="4" pos:column="28"/></name></type> <name pos:line="4" pos:column="29">canext<pos:position pos:line="4" pos:column="35"/></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">Curl_addrinfo<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">ca<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

  <for pos:line="7" pos:column="3">for<control pos:line="7" pos:column="6">(<init><expr><name pos:line="7" pos:column="7">ca<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <name pos:line="7" pos:column="12">cahead<pos:position pos:line="7" pos:column="18"/></name></expr>;<pos:position pos:line="7" pos:column="19"/></init> <condition><expr><name pos:line="7" pos:column="20">ca<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">!=<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name></expr>;<pos:position pos:line="7" pos:column="31"/></condition> <incr><expr><name pos:line="7" pos:column="32">ca<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">=<pos:position pos:line="7" pos:column="36"/></operator> <name pos:line="7" pos:column="37">canext<pos:position pos:line="7" pos:column="43"/></name></expr></incr>)<pos:position pos:line="7" pos:column="44"/></control> <block pos:line="7" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">free<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name><name pos:line="8" pos:column="10">ca<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">ai_addr<pos:position pos:line="8" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">free<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><name><name pos:line="9" pos:column="10">ca<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">ai_canonname<pos:position pos:line="9" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">canext<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name><name pos:line="10" pos:column="14">ca<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">ai_next<pos:position pos:line="10" pos:column="25"/></name></name></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">free<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><name pos:line="12" pos:column="10">ca<pos:position pos:line="12" pos:column="12"/></name></expr></argument>)<pos:position pos:line="12" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></for>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

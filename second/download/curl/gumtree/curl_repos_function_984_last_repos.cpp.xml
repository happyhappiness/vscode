<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_984_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">tool_go_sleep<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">long<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">ms<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><call><name pos:line="3" pos:column="5">defined<pos:position pos:line="3" pos:column="12"/></name><argument_list pos:line="3" pos:column="12">(<argument><expr><name pos:line="3" pos:column="13">MSDOS<pos:position pos:line="3" pos:column="18"/></name></expr></argument>)<pos:position pos:line="3" pos:column="19"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">delay<pos:position pos:line="4" pos:column="8"/></name><argument_list pos:line="4" pos:column="8">(<argument><expr><name pos:line="4" pos:column="9">ms<pos:position pos:line="4" pos:column="11"/></name></expr></argument>)<pos:position pos:line="4" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="13"/></expr_stmt>
<cpp:elif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">elif<pos:position pos:line="5" pos:column="6"/></cpp:directive> <expr><call><name pos:line="5" pos:column="7">defined<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><name pos:line="5" pos:column="15">WIN32<pos:position pos:line="5" pos:column="20"/></name></expr></argument>)<pos:position pos:line="5" pos:column="21"/></argument_list></call></expr></cpp:elif>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">Sleep<pos:position pos:line="6" pos:column="8"/></name><argument_list pos:line="6" pos:column="8">(<argument><expr><name pos:line="6" pos:column="9">ms<pos:position pos:line="6" pos:column="11"/></name></expr></argument>)<pos:position pos:line="6" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="13"/></expr_stmt>
<cpp:elif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">elif<pos:position pos:line="7" pos:column="6"/></cpp:directive> <expr><call><name pos:line="7" pos:column="7">defined<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">HAVE_POLL_FINE<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr></cpp:elif>
  <expr_stmt><expr><operator pos:line="8" pos:column="3">(<pos:position pos:line="8" pos:column="4"/></operator><name pos:line="8" pos:column="4">void<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">)<pos:position pos:line="8" pos:column="9"/></operator><call><name pos:line="8" pos:column="9">poll<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><operator pos:line="8" pos:column="14">(<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">void<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></operator><operator pos:line="8" pos:column="21">)<pos:position pos:line="8" pos:column="22"/></operator><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="28">(<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">int<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">)<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">ms<pos:position pos:line="8" pos:column="35"/></name></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>
<cpp:else pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">else<pos:position pos:line="9" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">timeval<pos:position pos:line="10" pos:column="17"/></name></name></type> <name pos:line="10" pos:column="18">timeout<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">timeout<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">.<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">tv_sec<pos:position pos:line="11" pos:column="17"/></name></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">ms<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">/<pos:position pos:line="11" pos:column="24"/></operator> <literal type="number" pos:line="11" pos:column="25">1000L<pos:position pos:line="11" pos:column="30"/></literal></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">ms<pos:position pos:line="12" pos:column="5"/></name> <operator pos:line="12" pos:column="6">=<pos:position pos:line="12" pos:column="7"/></operator> <name pos:line="12" pos:column="8">ms<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">%<pos:position pos:line="12" pos:column="12"/></operator> <literal type="number" pos:line="12" pos:column="13">1000L<pos:position pos:line="12" pos:column="18"/></literal></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">timeout<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">.<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">tv_usec<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">int<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">)<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">ms<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">*<pos:position pos:line="13" pos:column="30"/></operator> <literal type="number" pos:line="13" pos:column="31">1000<pos:position pos:line="13" pos:column="35"/></literal></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">select<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">(<argument><expr><literal type="number" pos:line="14" pos:column="10">0<pos:position pos:line="14" pos:column="11"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="13">NULL<pos:position pos:line="14" pos:column="17"/></name></expr></argument>,  <argument><expr><name pos:line="14" pos:column="20">NULL<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="26">NULL<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="32">&amp;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="33">timeout<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

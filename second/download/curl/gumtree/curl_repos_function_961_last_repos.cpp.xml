<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_961_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">my_get_line<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">FILE<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">fp<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><literal type="number" pos:line="3" pos:column="12">4096<pos:position pos:line="3" pos:column="16"/></literal></expr>]<pos:position pos:line="3" pos:column="17"/></index></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">nl<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><name pos:line="4" pos:column="14">NULL<pos:position pos:line="4" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">line<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

  <do pos:line="7" pos:column="3">do <block pos:line="7" pos:column="6">{
    <if pos:line="8" pos:column="5">if<condition pos:line="8" pos:column="7">(<expr><name pos:line="8" pos:column="8">NULL<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">==<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">fgets<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">buf<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="27">sizeof<argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">buf<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="8" pos:column="40">fp<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44">
      <block type="pseudo"><break pos:line="9" pos:column="7">break;<pos:position pos:line="9" pos:column="13"/></break></block></then></if>
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><operator pos:line="10" pos:column="8">!<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">line<pos:position pos:line="10" pos:column="13"/></name></expr>)<pos:position pos:line="10" pos:column="14"/></condition><then pos:line="10" pos:column="14"> <block pos:line="10" pos:column="15">{
      <expr_stmt><expr><name pos:line="11" pos:column="7">line<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">strdup<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">buf<pos:position pos:line="11" pos:column="24"/></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
      <if pos:line="12" pos:column="7">if<condition pos:line="12" pos:column="9">(<expr><operator pos:line="12" pos:column="10">!<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">line<pos:position pos:line="12" pos:column="15"/></name></expr>)<pos:position pos:line="12" pos:column="16"/></condition><then pos:line="12" pos:column="16">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return></block></then></if>
    }<pos:position pos:line="14" pos:column="6"/></block></then>
    <else pos:line="15" pos:column="5">else <block pos:line="15" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="16" pos:column="7">char<pos:position pos:line="16" pos:column="11"/></name> <modifier pos:line="16" pos:column="12">*<pos:position pos:line="16" pos:column="13"/></modifier></type><name pos:line="16" pos:column="13">ptr<pos:position pos:line="16" pos:column="16"/></name></decl>;<pos:position pos:line="16" pos:column="17"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="17" pos:column="7">size_t<pos:position pos:line="17" pos:column="13"/></name></type> <name pos:line="17" pos:column="14">linelen<pos:position pos:line="17" pos:column="21"/></name> <init pos:line="17" pos:column="22">= <expr><call><name pos:line="17" pos:column="24">strlen<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">line<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="37"/></decl_stmt>
      <expr_stmt><expr><name pos:line="18" pos:column="7">ptr<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">realloc<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">line<pos:position pos:line="18" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="27">linelen<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">+<pos:position pos:line="18" pos:column="36"/></operator> <call><name pos:line="18" pos:column="37">strlen<pos:position pos:line="18" pos:column="43"/></name><argument_list pos:line="18" pos:column="43">(<argument><expr><name pos:line="18" pos:column="44">buf<pos:position pos:line="18" pos:column="47"/></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call> <operator pos:line="18" pos:column="49">+<pos:position pos:line="18" pos:column="50"/></operator> <literal type="number" pos:line="18" pos:column="51">1<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>
      <if pos:line="19" pos:column="7">if<condition pos:line="19" pos:column="9">(<expr><operator pos:line="19" pos:column="10">!<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">ptr<pos:position pos:line="19" pos:column="14"/></name></expr>)<pos:position pos:line="19" pos:column="15"/></condition><then pos:line="19" pos:column="15"> <block pos:line="19" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">Curl_safefree<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">line<pos:position pos:line="20" pos:column="27"/></name></expr></argument>)<pos:position pos:line="20" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">NULL<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></return>
      }<pos:position pos:line="22" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="23" pos:column="7">line<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <name pos:line="23" pos:column="14">ptr<pos:position pos:line="23" pos:column="17"/></name></expr>;<pos:position pos:line="23" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">strcpy<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><operator pos:line="24" pos:column="14">&amp;<pos:position pos:line="24" pos:column="19"/></operator><name><name pos:line="24" pos:column="15">line<pos:position pos:line="24" pos:column="19"/></name><index pos:line="24" pos:column="19">[<expr><name pos:line="24" pos:column="20">linelen<pos:position pos:line="24" pos:column="27"/></name></expr>]<pos:position pos:line="24" pos:column="28"/></index></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="30">buf<pos:position pos:line="24" pos:column="33"/></name></expr></argument>)<pos:position pos:line="24" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="26" pos:column="5">nl<pos:position pos:line="26" pos:column="7"/></name> <operator pos:line="26" pos:column="8">=<pos:position pos:line="26" pos:column="9"/></operator> <call><name pos:line="26" pos:column="10">strchr<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><name pos:line="26" pos:column="17">line<pos:position pos:line="26" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="23">'\n'<pos:position pos:line="26" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block> while<condition pos:line="27" pos:column="10">(<expr><operator pos:line="27" pos:column="11">!<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">nl<pos:position pos:line="27" pos:column="14"/></name></expr>)<pos:position pos:line="27" pos:column="15"/></condition>;<pos:position pos:line="27" pos:column="16"/></do>

  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">(<expr><name pos:line="29" pos:column="6">nl<pos:position pos:line="29" pos:column="8"/></name></expr>)<pos:position pos:line="29" pos:column="9"/></condition><then pos:line="29" pos:column="9">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="30" pos:column="5">*<pos:position pos:line="30" pos:column="6"/></operator><name pos:line="30" pos:column="6">nl<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <literal type="char" pos:line="30" pos:column="11">'\0'<pos:position pos:line="30" pos:column="15"/></literal></expr>;<pos:position pos:line="30" pos:column="16"/></expr_stmt></block></then></if>

  <return pos:line="32" pos:column="3">return <expr><name pos:line="32" pos:column="10">line<pos:position pos:line="32" pos:column="14"/></name></expr>;<pos:position pos:line="32" pos:column="15"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

"              'private'. Should you use a level that  is  not  one  of  these,\n"
, stdout);
 fputs(
"              'private' will instead be used.\n"
"\n"
"              This  option  requires  a library built with kerberos4 or GSSAPI\n"
"              (GSS-Negotiate) support. This is not very common. Use -V, --ver-\n"
"              sion to see if your curl supports it.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       -l, --list-only\n"
"              (FTP)  When listing an FTP directory, this switch forces a name-\n"
, stdout);
 fputs(
"              only view.  Especially useful if you want to  machine-parse  the\n"
"              contents  of  an  FTP  directory since the normal directory view\n"
"              doesn't use a standard look or format.\n"
"\n"
"              This option causes an FTP NLST command to  be  sent.   Some  FTP\n"
"              servers  list  only files in their response to NLST; they do not\n"
"              include subdirectories and symbolic links.\n"
"\n"
"       -L, --location\n"
, stdout);
 fputs(
"              (HTTP/HTTPS) If the server reports that the requested  page  has\n"
"              moved to a different location (indicated with a Location: header\n"
"              and a 3XX response code), this option will make  curl  redo  the\n"
"              request on the new place. If used together with -i, --include or\n"
"              -I, --head, headers from all requested pages will be shown. When\n"
"              authentication  is  used, curl only sends its credentials to the\n"
, stdout);
 fputs(
"              initial host. If a redirect takes curl to a different  host,  it\n"
"              won't  be  able to intercept the user+password. See also --loca-\n"
"              tion-trusted on how to change this. You can limit the amount  of\n"
"              redirects to follow by using the --max-redirs option.\n"
"\n"
"              When  curl follows a redirect and the request is not a plain GET\n"
"              (for example POST or PUT), it will do the following request with\n"
, stdout);
 fputs(
"              a GET if the HTTP response was 301, 302, or 303. If the response\n"
"              code was any other 3xx code, curl  will  re-send  the  following\n"
"              request using the same unmodified method.\n"
"\n"
"       --libcurl <file>\n"
"              Append  this  option  to any ordinary curl command line, and you\n"
"              will get a libcurl-using source code written to  the  file  that\n"
"              does the equivalent of what your command-line operation does!\n"
"\n"
, stdout);
 fputs(
"              NOTE:  this does not properly support -F and the sending of mul-\n"
"              tipart formposts, so in those cases the output program  will  be\n"
"              missing necessary calls to curl_formadd(3), and possibly more.\n"
"\n"
"              If  this  option is used several times, the last given file name\n"
"              will be used. (Added in 7.16.1)\n"
"\n"
"       --limit-rate <speed>\n"
"              Specify the maximum transfer rate you want  curl  to  use.  This\n"
, stdout);
 fputs(
"              feature is useful if you have a limited pipe and you'd like your\n"
"              transfer not to use your entire bandwidth.\n"
"\n"
"              The given speed is measured in bytes/second, unless a suffix  is\n"
"              appended.   Appending  'k' or 'K' will count the number as kilo-\n"
"              bytes, 'm' or M' makes it megabytes, while 'g' or 'G'  makes  it\n"
"              gigabytes. Examples: 200K, 3m and 1G.\n"
"\n"
, stdout);
 fputs(
"              The  given  rate  is the average speed counted during the entire\n"
"              transfer. It means that curl might use higher transfer speeds in\n"
"              short bursts, but over time it uses no more than the given rate.\n"
"              If  you  also use the -Y, --speed-limit option, that option will\n"
"              take precedence and might cripple the rate-limiting slightly, to\n"
"              help keeping the speed-limit logic working.\n"
"\n"
, stdout);
 fputs(
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --local-port <num>[-num]\n"
"              Set a preferred number or range of local port numbers to use for\n"
"              the connection(s).  Note that  port  numbers  by  nature  are  a\n"
"              scarce resource that will be busy at times so setting this range\n"
"              to something too narrow might cause unnecessary connection setup\n"
"              failures. (Added in 7.15.2)\n"
"\n"
"       --location-trusted\n"
, stdout);
 fputs(
"              (HTTP/HTTPS)  Like  -L,  --location,  but will allow sending the\n"
"              name + password to all hosts that the site may redirect to. This\n"
"              may or may not introduce a security breach if the site redirects\n"
"              you to a site to which  you'll  send  your  authentication  info\n"
"              (which is plaintext in the case of HTTP Basic authentication).\n"
"\n"
"       -m, --max-time <seconds>\n"
, stdout);
 fputs(
"              Maximum  time  in  seconds that you allow the whole operation to\n"
"              take.  This is useful for preventing your batch jobs from  hang-\n"
"              ing  for  hours  due  to slow networks or links going down.  See\n"
"              also the --connect-timeout option.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --mail-from <address>\n"
"              (SMTP) Specify a single address that the given mail  should  get\n"
"              sent from.\n"
, stdout);
 fputs(
"\n"
"              (Added in 7.20.0)\n"
"\n"
"       --max-filesize <bytes>\n"
"              Specify  the  maximum  size (in bytes) of a file to download. If\n"
"              the file requested is larger than this value, the transfer  will\n"
"              not start and curl will return with exit code 63.\n"
"\n"
"              NOTE:  The  file size is not always known prior to download, and\n"
"              for such files this option has no effect even if the file trans-\n"
, stdout);
 fputs(
"              fer  ends  up  being larger than this given limit. This concerns\n"
"              both FTP and HTTP transfers.\n"
"\n"
"       --mail-rcpt <address>\n"
"              (SMTP) Specify a single address that the given mail  should  get\n"
"              sent  to. This option can be used multiple times to specify many\n"
"              recipients.\n"
"\n"
"              (Added in 7.20.0)\n"
"\n"
"       --max-redirs <num>\n"
"              Set maximum number of  redirection-followings  allowed.  If  -L,\n"
, stdout);
 fputs(
"              --location is used, this option can be used to prevent curl from\n"
"              following redirections \"in absurdum\". By default, the  limit  is\n"
"              set  to 50 redirections. Set this option to -1 to make it limit-\n"
"              less.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       -n, --netrc\n"
"              Makes curl scan the .netrc  (_netrc  on  Windows)  file  in  the\n"
, stdout);
 fputs(
"              user's home directory for login name and password. This is typi-\n"
"              cally used for FTP on UNIX. If used with HTTP, curl will  enable\n"
"              user  authentication.  See netrc(4) or ftp(1) for details on the\n"
"              file format. Curl will not complain if that  file  doesn't  have\n"
"              the  right permissions (it should not be either world- or group-\n"
"              readable). The environment variable \"HOME\" is used to  find  the\n"
, stdout);
 fputs(
"              home directory.\n"
"\n"
"              A  quick  and  very  simple  example of how to setup a .netrc to\n"
"              allow curl to FTP to the machine host.domain.com with user  name\n"
"              'myself' and password 'secret' should look similar to:\n"
"\n"
"              machine host.domain.com login myself password secret\n"
"\n"
"       -N, --no-buffer\n"
"              Disables the buffering of the output stream. In normal work sit-\n"
, stdout);
 fputs(
"              uations, curl will use a standard buffered  output  stream  that\n"
"              will have the effect that it will output the data in chunks, not\n"
"              necessarily exactly when the data arrives.   Using  this  option\n"
"              will disable that buffering.\n"
"\n"
"              Note  that  this  is the negated option name documented. You can\n"
"              thus use --buffer to enforce the buffering.\n"
"\n"
"       --netrc-file\n"
, stdout);
 fputs(
"              This option is similar to --netrc, except that you  provide  the\n"
"              path  (absolute  or relative) to the netrc file that Curl should\n"
"              use.  You can only specify one netrc  file  per  invocation.  If\n"
"              several  --netrc-file  options  are  provided, only the last one\n"
"              will be used.  (Added in 7.21.5)\n"
"\n"
"              This option overrides any use of --netrc as  they  are  mutually\n"
, stdout);
 fputs(
"              exclusive.  It will also abide by --netrc-optional if specified.\n"
"\n"
"       --netrc-optional\n"
"              Very  similar to --netrc, but this option makes the .netrc usage\n"
"              optional and not mandatory as the --netrc option does.\n"
"\n"
"       --negotiate\n"
"              (HTTP) Enables GSS-Negotiate authentication.  The  GSS-Negotiate\n"
"              method was designed by Microsoft and is used in their web appli-\n"
, stdout);
 fputs(
"              cations. It is  primarily  meant  as  a  support  for  Kerberos5\n"
"              authentication but may be also used along with another authenti-\n"
"              cation method. For more information see IETF draft draft-brezak-\n"
"              spnego-http-04.txt.\n"
"\n"
"              If  you  want to enable Negotiate for your proxy authentication,\n"
"              then use --proxy-negotiate.\n"
"\n"
"              This option requires a library built with GSSAPI  support.  This\n"
, stdout);
 fputs(
"              is  not  very  common.  Use -V, --version to see if your version\n"
"              supports GSS-Negotiate.\n"
"\n"
"              When using this option, you must also provide a fake -u,  --user\n"
"              option  to  activate the authentication code properly. Sending a\n"
"              '-u :' is enough as the user  name  and  password  from  the  -u\n"
"              option aren't actually used.\n"
"\n"
"              If  this option is used several times, the following occurrences\n"
, stdout);
 fputs(
"              make no difference.\n"
"\n"
"       --no-keepalive\n"
"              Disables the use of keepalive messages on the TCP connection, as\n"
"              by default curl enables them.\n"
"\n"
"              Note  that  this  is the negated option name documented. You can\n"
"              thus use --keepalive to enforce keepalive.\n"
"\n"
"       --no-sessionid\n"
"              (SSL) Disable curl's use of SSL session-ID caching.  By  default\n"
"              all  transfers are done using the cache. Note that while nothing\n"
, stdout);
 fputs(
"              should ever get hurt by attempting  to  reuse  SSL  session-IDs,\n"
"              there seem to be broken SSL implementations in the wild that may\n"
"              require you to disable this in order for you to succeed.  (Added\n"
"              in 7.16.0)\n"
"\n"
"              Note  that  this  is the negated option name documented. You can\n"
"              thus use --sessionid to enforce session-ID caching.\n"
"\n"
"       --noproxy <no-proxy-list>\n"
, stdout);
 fputs(
"              Comma-separated list of hosts which do not use a proxy,  if  one\n"
"              is  specified.  The only wildcard is a single * character, which\n"
"              matches all hosts, and effectively disables the proxy. Each name\n"
"              in  this  list  is matched as either a domain which contains the\n"
"              hostname, or the hostname itself. For example,  local.com  would\n"
"              match   local.com,  local.com:80,  and  www.local.com,  but  not\n"
, stdout);
 fputs(
"              www.notlocal.com.  (Added in 7.19.4).\n"
"\n"
"       --ntlm (HTTP) Enables  NTLM  authentication.  The  NTLM  authentication\n"
"              method was designed by Microsoft and is used by IIS web servers.\n"
"              It is a proprietary protocol, reverse-engineered by clever  peo-\n"
"              ple and implemented in curl based on their efforts. This kind of\n"
"              behavior should not be endorsed, you should  encourage  everyone\n"
, stdout);
 fputs(
"              who  uses  NTLM to switch to a public and documented authentica-\n"
"              tion method instead, such as Digest.\n"
"\n"
"              If you want to enable NTLM for your proxy  authentication,  then\n"
"              use --proxy-ntlm.\n"
"\n"
"              This  option  requires a library built with SSL support. Use -V,\n"
"              --version to see if your curl supports NTLM.\n"
"\n"
"              If this option is used several times, the following  occurrences\n"
"              make no difference.\n"
, stdout);
 fputs(
"       -o, --output <file>\n"
"              Write output to <file> instead of stdout. If you are using {} or\n"
"              [] to fetch multiple documents, you can use '#'  followed  by  a\n"
"              number  in  the <file> specifier. That variable will be replaced\n"
"              with the current string for the URL being fetched. Like in:\n"
"\n"
"                curl http://{one,two}.site.com -o \"file_#1.txt\"\n"
"\n"
"              or use several variables like:\n"
"\n"
, stdout);
 fputs(
"                curl http://{site,host}.host[1-5].com -o \"#1_#2\"\n"
"\n"
"              You may use this option as many times as the number of URLs  you\n"
"              have.\n"
"\n"
"              See  also  the --create-dirs option to create the local directo-\n"
"              ries dynamically. Specifying the output as '-' (a  single  dash)\n"
"              will force the output to be done to stdout.\n"
"\n"
"       -O, --remote-name\n"
"              Write  output to a local file named like the remote file we get.\n"
, stdout);
 fputs(
"              (Only the file part of the remote file is used, the path is  cut\n"
"              off.)\n"
"\n"
"              The  remote  file  name  to use for saving is extracted from the\n"
"              given URL, nothing else.\n"
"\n"
"              Consequentially, the file will be saved in the  current  working\n"
"              directory.  If you want the file saved in a different directory,\n"
"              make sure you change current working directory before you invoke\n"
, stdout);
 fputs(
"              curl with the -O, --remote-name flag!\n"
"\n"
"              You  may use this option as many times as the number of URLs you\n"
"              have.\n"
"\n"
"       -p, --proxytunnel\n"
"              When an HTTP proxy is used (-x, --proxy), this option will cause\n"
"              non-HTTP  protocols  to  attempt  to  tunnel  through  the proxy\n"
"              instead of merely using it to do HTTP-like operations. The  tun-\n"
"              nel  approach  is  made  with the HTTP proxy CONNECT request and\n"
, stdout);
 fputs(
"              requires that the proxy allows direct connect to the remote port\n"
"              number curl wants to tunnel through to.\n"
"\n"
"       -P, --ftp-port <address>\n"
"              (FTP)  Reverses  the  default initiator/listener roles when con-\n"
"              necting with FTP. This switch makes curl  use  active  mode.  In\n"
"              practice,  curl  then  tells  the  server to connect back to the\n"
"              client's specified address and port, while passive mode asks the\n"
, stdout);
 fputs(
"              server  to  setup  an  IP address and port for it to connect to.\n"
"              <address> should be one of:\n"
"\n"
"              interface\n"
"                     i.e \"eth0\" to specify which interface's  IP  address  you\n"
"                     want to use (Unix only)\n"
"\n"
"              IP address\n"
"                     i.e \"192.168.10.1\" to specify the exact IP address\n"
"\n"
"              host name\n"
"                     i.e \"my.host.domain\" to specify the machine\n"
"\n"
, stdout);
 fputs(
"              -      make  curl  pick the same IP address that is already used\n"
"                     for the control connection\n"
"\n"
"       If this option is used several times, the last one will be  used.  Dis-\n"
"       able  the  use  of PORT with --ftp-pasv. Disable the attempt to use the\n"
"       EPRT command instead of PORT by using --disable-eprt.  EPRT  is  really\n"
"       PORT++.\n"
"\n"
"       Starting in 7.19.5, you can append \":[start]-[end]\" to the right of the\n"
, stdout);
 fputs(
"       address, to tell curl what TCP port range to use. That means you  spec-\n"
"       ify  a  port  range,  from  a lower to a higher number. A single number\n"
"       works as well, but do note that it increases the risk of failure  since\n"
"       the port may not be available.\n"
"\n"
"       --pass <phrase>\n"
"              (SSL/SSH) Passphrase for the private key\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"

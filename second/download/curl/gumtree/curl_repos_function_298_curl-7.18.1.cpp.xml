<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_298_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">hugehelp<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">void<pos:position pos:line="1" pos:column="19"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">unsigned<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name></type> <name><name pos:line="3" pos:column="17">buf<pos:position pos:line="3" pos:column="20"/></name><index pos:line="3" pos:column="20">[<expr><literal type="number" pos:line="3" pos:column="21">0x10000<pos:position pos:line="3" pos:column="28"/></literal></expr>]<pos:position pos:line="3" pos:column="29"/></index></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>,<decl><type ref="prev"/><name pos:line="4" pos:column="14">headerlen<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">z_stream<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">z<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Make sure no gzip options are set */</comment>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">hugehelpgz<pos:position pos:line="8" pos:column="17"/></name><index pos:line="8" pos:column="17">[<expr><literal type="number" pos:line="8" pos:column="18">3<pos:position pos:line="8" pos:column="19"/></literal></expr>]<pos:position pos:line="8" pos:column="20"/></index></name> <operator pos:line="8" pos:column="21">&amp;<pos:position pos:line="8" pos:column="26"/></operator> <literal type="number" pos:line="8" pos:column="23">0xfe<pos:position pos:line="8" pos:column="27"/></literal></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28">
    <block type="pseudo"><return pos:line="9" pos:column="5">return;<pos:position pos:line="9" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">headerlen<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <literal type="number" pos:line="11" pos:column="15">10<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">z<pos:position pos:line="12" pos:column="4"/></name><operator pos:line="12" pos:column="4">.<pos:position pos:line="12" pos:column="5"/></operator><name pos:line="12" pos:column="5">avail_in<pos:position pos:line="12" pos:column="13"/></name></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call pos:line="12" pos:column="16">(<name pos:line="12" pos:column="17">unsigned<pos:position pos:line="12" pos:column="25"/></name> <name pos:line="12" pos:column="26">int<pos:position pos:line="12" pos:column="29"/></name>)<argument_list pos:line="12" pos:column="30">(<argument><expr><sizeof pos:line="12" pos:column="31">sizeof<argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">hugehelpgz<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></sizeof> <operator pos:line="12" pos:column="50">-<pos:position pos:line="12" pos:column="51"/></operator> <name pos:line="12" pos:column="52">headerlen<pos:position pos:line="12" pos:column="61"/></name></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">z<pos:position pos:line="13" pos:column="4"/></name><operator pos:line="13" pos:column="4">.<pos:position pos:line="13" pos:column="5"/></operator><name pos:line="13" pos:column="5">next_in<pos:position pos:line="13" pos:column="12"/></name></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <operator pos:line="13" pos:column="15">(<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">unsigned<pos:position pos:line="13" pos:column="24"/></name> <name pos:line="13" pos:column="25">char<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">*<pos:position pos:line="13" pos:column="31"/></operator><operator pos:line="13" pos:column="31">)<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">hugehelpgz<pos:position pos:line="13" pos:column="42"/></name> <operator pos:line="13" pos:column="43">+<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="45">headerlen<pos:position pos:line="13" pos:column="54"/></name></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">z<pos:position pos:line="14" pos:column="4"/></name><operator pos:line="14" pos:column="4">.<pos:position pos:line="14" pos:column="5"/></operator><name pos:line="14" pos:column="5">zalloc<pos:position pos:line="14" pos:column="11"/></name></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">alloc_func<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">)<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">Z_NULL<pos:position pos:line="14" pos:column="32"/></name></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">z<pos:position pos:line="15" pos:column="4"/></name><operator pos:line="15" pos:column="4">.<pos:position pos:line="15" pos:column="5"/></operator><name pos:line="15" pos:column="5">zfree<pos:position pos:line="15" pos:column="10"/></name></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">free_func<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">)<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">Z_NULL<pos:position pos:line="15" pos:column="30"/></name></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">z<pos:position pos:line="16" pos:column="4"/></name><operator pos:line="16" pos:column="4">.<pos:position pos:line="16" pos:column="5"/></operator><name pos:line="16" pos:column="5">opaque<pos:position pos:line="16" pos:column="11"/></name></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <literal type="number" pos:line="16" pos:column="14">0<pos:position pos:line="16" pos:column="15"/></literal></expr>;<pos:position pos:line="16" pos:column="16"/></expr_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><call><name pos:line="18" pos:column="7">inflateInit2<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><operator pos:line="18" pos:column="20">&amp;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="21">z<pos:position pos:line="18" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="24">-<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">MAX_WBITS<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call> <operator pos:line="18" pos:column="36">!=<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="39">Z_OK<pos:position pos:line="18" pos:column="43"/></name></expr>)<pos:position pos:line="18" pos:column="44"/></condition><then pos:line="18" pos:column="44">
    <block type="pseudo"><return pos:line="19" pos:column="5">return;<pos:position pos:line="19" pos:column="12"/></return></block></then></if>

  <while pos:line="21" pos:column="3">while<condition pos:line="21" pos:column="8">(<expr><literal type="number" pos:line="21" pos:column="9">1<pos:position pos:line="21" pos:column="10"/></literal></expr>)<pos:position pos:line="21" pos:column="11"/></condition> <block pos:line="21" pos:column="12">{
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">z<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">.<pos:position pos:line="22" pos:column="7"/></operator><name pos:line="22" pos:column="7">avail_out<pos:position pos:line="22" pos:column="16"/></name></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <operator pos:line="22" pos:column="19">(<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">int<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">)<pos:position pos:line="22" pos:column="24"/></operator><sizeof pos:line="22" pos:column="24">sizeof<argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">buf<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></sizeof></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">z<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">.<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">next_out<pos:position pos:line="23" pos:column="15"/></name></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">buf<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">status<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">inflate<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><operator pos:line="24" pos:column="22">&amp;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="23">z<pos:position pos:line="24" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="26">Z_SYNC_FLUSH<pos:position pos:line="24" pos:column="38"/></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">status<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">==<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">Z_OK<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">||<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">status<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">==<pos:position pos:line="25" pos:column="36"/></operator> <name pos:line="25" pos:column="37">Z_STREAM_END<pos:position pos:line="25" pos:column="49"/></name></expr>)<pos:position pos:line="25" pos:column="50"/></condition><then pos:line="25" pos:column="50"> <block pos:line="25" pos:column="51">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">fwrite<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><name pos:line="26" pos:column="14">buf<pos:position pos:line="26" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="19">sizeof<argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">buf<pos:position pos:line="26" pos:column="29"/></name></expr></argument>)<pos:position pos:line="26" pos:column="30"/></argument_list></sizeof> <operator pos:line="26" pos:column="31">-<pos:position pos:line="26" pos:column="32"/></operator> <name><name pos:line="26" pos:column="33">z<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">.<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">avail_out<pos:position pos:line="26" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="46">1<pos:position pos:line="26" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="49">stdout<pos:position pos:line="26" pos:column="55"/></name></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="57"/></expr_stmt>
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><name pos:line="27" pos:column="11">status<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">==<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">Z_STREAM_END<pos:position pos:line="27" pos:column="33"/></name></expr>)<pos:position pos:line="27" pos:column="34"/></condition><then pos:line="27" pos:column="34">
         <block type="pseudo"><break pos:line="28" pos:column="10">break;<pos:position pos:line="28" pos:column="16"/></break></block></then></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then>
     <else pos:line="30" pos:column="6">else
      <block type="pseudo"><break pos:line="31" pos:column="7">break;<pos:position pos:line="31" pos:column="13"/></break></block></else></if>    <comment type="block" pos:line="31" pos:column="17">/* Error */</comment>
  }<pos:position pos:line="32" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">inflateEnd<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><operator pos:line="33" pos:column="14">&amp;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="15">z<pos:position pos:line="33" pos:column="16"/></name></expr></argument>)<pos:position pos:line="33" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="18"/></expr_stmt>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

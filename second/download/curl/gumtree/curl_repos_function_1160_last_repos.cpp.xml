<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1160_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">imap_perform_authenticate<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">connectdata<pos:position pos:line="1" pos:column="61"/></name></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">conn<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                                          <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">mech<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
                                          <parameter><decl><type><specifier pos:line="3" pos:column="43">const<pos:position pos:line="3" pos:column="48"/></specifier> <name pos:line="3" pos:column="49">char<pos:position pos:line="3" pos:column="53"/></name> <modifier pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></modifier></type><name pos:line="3" pos:column="55">initresp<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="64"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">CURLE_OK<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><name pos:line="7" pos:column="6">initresp<pos:position pos:line="7" pos:column="14"/></name></expr>)<pos:position pos:line="7" pos:column="15"/></condition><then pos:line="7" pos:column="15"> <block pos:line="7" pos:column="16">{
    <comment type="block" pos:line="8" pos:column="5">/* Send the AUTHENTICATE command with the initial response */</comment>
    <expr_stmt><expr><name pos:line="9" pos:column="5">result<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">imap_sendf<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">conn<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="31">"AUTHENTICATE %s %s"<pos:position pos:line="9" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="53">mech<pos:position pos:line="9" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="59">initresp<pos:position pos:line="9" pos:column="67"/></name></expr></argument>)<pos:position pos:line="9" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="69"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></then>
  <else pos:line="11" pos:column="3">else <block pos:line="11" pos:column="8">{
    <comment type="block" pos:line="12" pos:column="5">/* Send the AUTHENTICATE command */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">result<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">imap_sendf<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">conn<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="31">"AUTHENTICATE %s"<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">mech<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></else></if>

  <return pos:line="16" pos:column="3">return <expr><name pos:line="16" pos:column="10">result<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_666_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_http_connect<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">connectdata<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">conn<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">bool<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">done<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SessionHandle<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">data<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator><name><name pos:line="6" pos:column="8">conn<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">data<pos:position pos:line="6" pos:column="18"/></name></name></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* We default to persistent connections. We set this already in this connect
     function to make the re-use checks properly be able to check this bit. */</comment>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">conn<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">bits<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">.<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">close<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">FALSE<pos:position pos:line="10" pos:column="27"/></name></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* If we are not using a proxy and we want a secure connection, perform SSL
   * initialization &amp; connection now.  If using a proxy with https, then we
   * must tell the proxy to CONNECT to the host we want to talk to.  Only
   * after the connect has occurred, can we start talking SSL
   */</comment>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><name><name pos:line="18" pos:column="6">conn<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">bits<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">.<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">tunnel_proxy<pos:position pos:line="18" pos:column="29"/></name></name> <operator pos:line="18" pos:column="30">&amp;&amp;<pos:position pos:line="18" pos:column="40"/></operator> <name><name pos:line="18" pos:column="33">conn<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">-&gt;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="39">bits<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">.<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="44">httpproxy<pos:position pos:line="18" pos:column="53"/></name></name></expr>)<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54"> <block pos:line="18" pos:column="55">{

    <comment type="block" pos:line="20" pos:column="5">/* either SSL over proxy, or explicitly asked for */</comment>
    <expr_stmt><expr><name pos:line="21" pos:column="5">result<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">Curl_proxyCONNECT<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">conn<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">FIRSTSOCKET<pos:position pos:line="21" pos:column="49"/></name></expr></argument>,
                               <argument><expr><name><name pos:line="22" pos:column="32">conn<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">host<pos:position pos:line="22" pos:column="42"/></name><operator pos:line="22" pos:column="42">.<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="43">name<pos:position pos:line="22" pos:column="47"/></name></name></expr></argument>,
                               <argument><expr><name><name pos:line="23" pos:column="32">conn<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">remote_port<pos:position pos:line="23" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><name pos:line="24" pos:column="8">CURLE_OK<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">!=<pos:position pos:line="24" pos:column="19"/></operator> <name pos:line="24" pos:column="20">result<pos:position pos:line="24" pos:column="26"/></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition><then pos:line="24" pos:column="27">
      <block type="pseudo"><return pos:line="25" pos:column="7">return <expr><name pos:line="25" pos:column="14">result<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><name><name pos:line="28" pos:column="6">conn<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">bits<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">.<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">tunnel_connecting<pos:position pos:line="28" pos:column="34"/></name></name></expr>)<pos:position pos:line="28" pos:column="35"/></condition><then pos:line="28" pos:column="35"> <block pos:line="28" pos:column="36">{
    <comment type="block" pos:line="29" pos:column="5">/* nothing else to do except wait right now - we're not done here. */</comment>
    <return pos:line="30" pos:column="5">return <expr><name pos:line="30" pos:column="12">CURLE_OK<pos:position pos:line="30" pos:column="20"/></name></expr>;<pos:position pos:line="30" pos:column="21"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><operator pos:line="33" pos:column="6">!<pos:position pos:line="33" pos:column="7"/></operator><name><name pos:line="33" pos:column="7">data<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">-&gt;<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="13">state<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">.<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="19">this_is_a_follow<pos:position pos:line="33" pos:column="35"/></name></name></expr>)<pos:position pos:line="33" pos:column="36"/></condition><then pos:line="33" pos:column="36"> <block pos:line="33" pos:column="37">{
    <comment type="block" pos:line="34" pos:column="5">/* this is not a followed location, get the original host name */</comment>
    <if pos:line="35" pos:column="5">if<condition pos:line="35" pos:column="7">(<expr><name><name pos:line="35" pos:column="8">data<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">state<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">.<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="20">first_host<pos:position pos:line="35" pos:column="30"/></name></name></expr>)<pos:position pos:line="35" pos:column="31"/></condition><then pos:line="35" pos:column="31">
      <comment type="block" pos:line="36" pos:column="7">/* Free to avoid leaking memory on multiple requests*/</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="7">free<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><name><name pos:line="37" pos:column="12">data<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">state<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">.<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="24">first_host<pos:position pos:line="37" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="39" pos:column="5">data<pos:position pos:line="39" pos:column="9"/></name><operator pos:line="39" pos:column="9">-&gt;<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="11">state<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">.<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">first_host<pos:position pos:line="39" pos:column="27"/></name></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <call><name pos:line="39" pos:column="30">strdup<pos:position pos:line="39" pos:column="36"/></name><argument_list pos:line="39" pos:column="36">(<argument><expr><name><name pos:line="39" pos:column="37">conn<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">-&gt;<pos:position pos:line="39" pos:column="46"/></operator><name pos:line="39" pos:column="43">host<pos:position pos:line="39" pos:column="47"/></name><operator pos:line="39" pos:column="47">.<pos:position pos:line="39" pos:column="48"/></operator><name pos:line="39" pos:column="48">name<pos:position pos:line="39" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt>
    <if pos:line="40" pos:column="5">if<condition pos:line="40" pos:column="7">(<expr><operator pos:line="40" pos:column="8">!<pos:position pos:line="40" pos:column="9"/></operator><name><name pos:line="40" pos:column="9">data<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">state<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">.<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">first_host<pos:position pos:line="40" pos:column="31"/></name></name></expr>)<pos:position pos:line="40" pos:column="32"/></condition><then pos:line="40" pos:column="32">
      <block type="pseudo"><return pos:line="41" pos:column="7">return <expr><name pos:line="41" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="41" pos:column="33"/></name></expr>;<pos:position pos:line="41" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><name><name pos:line="44" pos:column="6">conn<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">protocol<pos:position pos:line="44" pos:column="20"/></name></name> <operator pos:line="44" pos:column="21">&amp;<pos:position pos:line="44" pos:column="26"/></operator> <name pos:line="44" pos:column="23">PROT_HTTPS<pos:position pos:line="44" pos:column="33"/></name></expr>)<pos:position pos:line="44" pos:column="34"/></condition><then pos:line="44" pos:column="34"> <block pos:line="44" pos:column="35">{
    <comment type="block" pos:line="45" pos:column="5">/* perform SSL initialization */</comment>
    <if pos:line="46" pos:column="5">if<condition pos:line="46" pos:column="7">(<expr><name><name pos:line="46" pos:column="8">data<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">-&gt;<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="14">state<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">.<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="20">used_interface<pos:position pos:line="46" pos:column="34"/></name></name> <operator pos:line="46" pos:column="35">==<pos:position pos:line="46" pos:column="37"/></operator> <name pos:line="46" pos:column="38">Curl_if_multi<pos:position pos:line="46" pos:column="51"/></name></expr>)<pos:position pos:line="46" pos:column="52"/></condition><then pos:line="46" pos:column="52"> <block pos:line="46" pos:column="53">{
      <expr_stmt><expr><name pos:line="47" pos:column="7">result<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <call><name pos:line="47" pos:column="16">https_connecting<pos:position pos:line="47" pos:column="32"/></name><argument_list pos:line="47" pos:column="32">(<argument><expr><name pos:line="47" pos:column="33">conn<pos:position pos:line="47" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="39">done<pos:position pos:line="47" pos:column="43"/></name></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt>
      <if pos:line="48" pos:column="7">if<condition pos:line="48" pos:column="9">(<expr><name pos:line="48" pos:column="10">result<pos:position pos:line="48" pos:column="16"/></name></expr>)<pos:position pos:line="48" pos:column="17"/></condition><then pos:line="48" pos:column="17">
        <block type="pseudo"><return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">result<pos:position pos:line="49" pos:column="22"/></name></expr>;<pos:position pos:line="49" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="50" pos:column="6"/></block></then>
    <else pos:line="51" pos:column="5">else <block pos:line="51" pos:column="10">{
      <comment type="block" pos:line="52" pos:column="7">/* BLOCKING */</comment>
      <expr_stmt><expr><name pos:line="53" pos:column="7">result<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <call><name pos:line="53" pos:column="16">Curl_ssl_connect<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><name pos:line="53" pos:column="33">conn<pos:position pos:line="53" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="39">FIRSTSOCKET<pos:position pos:line="53" pos:column="50"/></name></expr></argument>)<pos:position pos:line="53" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="52"/></expr_stmt>
      <if pos:line="54" pos:column="7">if<condition pos:line="54" pos:column="9">(<expr><name pos:line="54" pos:column="10">result<pos:position pos:line="54" pos:column="16"/></name></expr>)<pos:position pos:line="54" pos:column="17"/></condition><then pos:line="54" pos:column="17">
        <block type="pseudo"><return pos:line="55" pos:column="9">return <expr><name pos:line="55" pos:column="16">result<pos:position pos:line="55" pos:column="22"/></name></expr>;<pos:position pos:line="55" pos:column="23"/></return></block></then></if>
      <expr_stmt><expr><operator pos:line="56" pos:column="7">*<pos:position pos:line="56" pos:column="8"/></operator><name pos:line="56" pos:column="8">done<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <name pos:line="56" pos:column="15">TRUE<pos:position pos:line="56" pos:column="19"/></name></expr>;<pos:position pos:line="56" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></else></if>
  }<pos:position pos:line="58" pos:column="4"/></block></then>
  <else pos:line="59" pos:column="3">else <block pos:line="59" pos:column="8">{
    <expr_stmt><expr><operator pos:line="60" pos:column="5">*<pos:position pos:line="60" pos:column="6"/></operator><name pos:line="60" pos:column="6">done<pos:position pos:line="60" pos:column="10"/></name> <operator pos:line="60" pos:column="11">=<pos:position pos:line="60" pos:column="12"/></operator> <name pos:line="60" pos:column="13">TRUE<pos:position pos:line="60" pos:column="17"/></name></expr>;<pos:position pos:line="60" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="61" pos:column="4"/></block></else></if>

  <return pos:line="63" pos:column="3">return <expr><name pos:line="63" pos:column="10">CURLE_OK<pos:position pos:line="63" pos:column="18"/></name></expr>;<pos:position pos:line="63" pos:column="19"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

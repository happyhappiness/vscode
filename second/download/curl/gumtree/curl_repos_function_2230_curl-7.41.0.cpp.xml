<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2230_curl-7.41.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">axtls_send<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">int<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">sockindex<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,
                          <parameter><decl><type><specifier pos:line="3" pos:column="27">const<pos:position pos:line="3" pos:column="32"/></specifier> <name pos:line="3" pos:column="33">void<pos:position pos:line="3" pos:column="37"/></name> <modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier></type><name pos:line="3" pos:column="39">mem<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="4" pos:column="27">size_t<pos:position pos:line="4" pos:column="33"/></name></type> <name pos:line="4" pos:column="34">len<pos:position pos:line="4" pos:column="37"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="5" pos:column="27">CURLcode<pos:position pos:line="5" pos:column="35"/></name> <modifier pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></modifier></type><name pos:line="5" pos:column="37">err<pos:position pos:line="5" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="41"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <comment type="block" pos:line="7" pos:column="3">/* ssl_write() returns 'int' while write() and send() returns 'size_t' */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">rc<pos:position pos:line="8" pos:column="9"/></name> <init pos:line="8" pos:column="10">= <expr><call><name pos:line="8" pos:column="12">ssl_write<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name><name pos:line="8" pos:column="22">conn<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">ssl<pos:position pos:line="8" pos:column="31"/></name><index pos:line="8" pos:column="31">[<expr><name pos:line="8" pos:column="32">sockindex<pos:position pos:line="8" pos:column="41"/></name></expr>]<pos:position pos:line="8" pos:column="42"/></index></name><operator pos:line="8" pos:column="42">.<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="43">ssl<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="48">mem<pos:position pos:line="8" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="53">(<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="54">int<pos:position pos:line="8" pos:column="57"/></name><operator pos:line="8" pos:column="57">)<pos:position pos:line="8" pos:column="58"/></operator><name pos:line="8" pos:column="58">len<pos:position pos:line="8" pos:column="61"/></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="63"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">infof<pos:position pos:line="10" pos:column="8"/></name><argument_list pos:line="10" pos:column="8">(<argument><expr><name><name pos:line="10" pos:column="9">conn<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">data<pos:position pos:line="10" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="21">"  axtls_send\n"<pos:position pos:line="10" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">rc<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">&lt;<pos:position pos:line="12" pos:column="13"/></operator> <literal type="number" pos:line="12" pos:column="11">0<pos:position pos:line="12" pos:column="12"/></literal></expr> )<pos:position pos:line="12" pos:column="14"/></condition><then pos:line="12" pos:column="14"> <block pos:line="12" pos:column="15">{
    <expr_stmt><expr><operator pos:line="13" pos:column="5">*<pos:position pos:line="13" pos:column="6"/></operator><name pos:line="13" pos:column="6">err<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <call><name pos:line="13" pos:column="12">map_error_to_curl<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">rc<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">rc<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <operator pos:line="14" pos:column="10">-<pos:position pos:line="14" pos:column="11"/></operator><literal type="number" pos:line="14" pos:column="11">1<pos:position pos:line="14" pos:column="12"/></literal></expr>;<pos:position pos:line="14" pos:column="13"/></expr_stmt> <comment type="block" pos:line="14" pos:column="14">/* generic error code for send failure */</comment>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="17" pos:column="3">*<pos:position pos:line="17" pos:column="4"/></operator><name pos:line="17" pos:column="4">err<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <name pos:line="17" pos:column="10">CURLE_OK<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>
  <return pos:line="18" pos:column="3">return <expr><name pos:line="18" pos:column="10">rc<pos:position pos:line="18" pos:column="12"/></name></expr>;<pos:position pos:line="18" pos:column="13"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

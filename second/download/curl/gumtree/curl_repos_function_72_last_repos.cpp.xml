<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_72_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">setsock<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">SockInfo<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">f<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">curl_socket_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">s<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">CURL<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">e<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">int<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">act<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="2" pos:column="21">GlobalInfo<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">g<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">printf<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><literal type="string" pos:line="4" pos:column="10">"%s  \n"<pos:position pos:line="4" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="20">__PRETTY_FUNCTION__<pos:position pos:line="4" pos:column="39"/></name></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="41"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">kind<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><operator pos:line="6" pos:column="14">(<pos:position pos:line="6" pos:column="15"/></operator><ternary><condition><expr><name pos:line="6" pos:column="15">act<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">&amp;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="19">CURL_POLL_IN<pos:position pos:line="6" pos:column="31"/></name></expr>?<pos:position pos:line="6" pos:column="32"/></condition><then><expr><name pos:line="6" pos:column="32">EV_READ<pos:position pos:line="6" pos:column="39"/></name></expr></then><else pos:line="6" pos:column="39">:<expr><literal type="number" pos:line="6" pos:column="40">0<pos:position pos:line="6" pos:column="41"/></literal></expr></else></ternary><operator pos:line="6" pos:column="41">)<pos:position pos:line="6" pos:column="42"/></operator><operator pos:line="6" pos:column="42">|<pos:position pos:line="6" pos:column="43"/></operator><operator pos:line="6" pos:column="43">(<pos:position pos:line="6" pos:column="44"/></operator><ternary><condition><expr><name pos:line="6" pos:column="44">act<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">&amp;<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="48">CURL_POLL_OUT<pos:position pos:line="6" pos:column="61"/></name></expr>?<pos:position pos:line="6" pos:column="62"/></condition><then><expr><name pos:line="6" pos:column="62">EV_WRITE<pos:position pos:line="6" pos:column="70"/></name></expr></then><else pos:line="6" pos:column="70">:<expr><literal type="number" pos:line="6" pos:column="71">0<pos:position pos:line="6" pos:column="72"/></literal></expr></else></ternary><operator pos:line="6" pos:column="72">)<pos:position pos:line="6" pos:column="73"/></operator></expr></init></decl>;<pos:position pos:line="6" pos:column="74"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="8" pos:column="3">f<pos:position pos:line="8" pos:column="4"/></name><operator pos:line="8" pos:column="4">-&gt;<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="6">sockfd<pos:position pos:line="8" pos:column="12"/></name></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">s<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">f<pos:position pos:line="9" pos:column="4"/></name><operator pos:line="9" pos:column="4">-&gt;<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="6">action<pos:position pos:line="9" pos:column="12"/></name></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">act<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">f<pos:position pos:line="10" pos:column="4"/></name><operator pos:line="10" pos:column="4">-&gt;<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="6">easy<pos:position pos:line="10" pos:column="10"/></name></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">e<pos:position pos:line="10" pos:column="14"/></name></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name><name pos:line="11" pos:column="6">f<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">-&gt;<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="9">evset<pos:position pos:line="11" pos:column="14"/></name></name></expr>)<pos:position pos:line="11" pos:column="15"/></condition><then pos:line="11" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">ev_io_stop<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name><name pos:line="12" pos:column="16">g<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">loop<pos:position pos:line="12" pos:column="23"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="25">&amp;<pos:position pos:line="12" pos:column="30"/></operator><name><name pos:line="12" pos:column="26">f<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">ev<pos:position pos:line="12" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">ev_io_init<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><operator pos:line="13" pos:column="14">&amp;<pos:position pos:line="13" pos:column="19"/></operator><name><name pos:line="13" pos:column="15">f<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">ev<pos:position pos:line="13" pos:column="20"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="22">event_cb<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="32">f<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">-&gt;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="35">sockfd<pos:position pos:line="13" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="43">kind<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">f<pos:position pos:line="14" pos:column="4"/></name><operator pos:line="14" pos:column="4">-&gt;<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="6">ev<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">.<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">data<pos:position pos:line="14" pos:column="13"/></name></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">g<pos:position pos:line="14" pos:column="17"/></name></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">f<pos:position pos:line="15" pos:column="4"/></name><operator pos:line="15" pos:column="4">-&gt;<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="6">evset<pos:position pos:line="15" pos:column="11"/></name></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <literal type="number" pos:line="15" pos:column="14">1<pos:position pos:line="15" pos:column="15"/></literal></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">ev_io_start<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><name><name pos:line="16" pos:column="15">g<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">loop<pos:position pos:line="16" pos:column="22"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="24">&amp;<pos:position pos:line="16" pos:column="29"/></operator><name><name pos:line="16" pos:column="25">f<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">ev<pos:position pos:line="16" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_885_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_state_stor_resp<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">connectdata<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">conn<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">ftpcode<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">SessionHandle<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">data<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name><name pos:line="5" pos:column="32">conn<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">data<pos:position pos:line="5" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">FTP<pos:position pos:line="6" pos:column="13"/></name></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">ftp<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">state<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">.<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">proto<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">.<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="39">ftp<pos:position pos:line="6" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name pos:line="8" pos:column="6">ftpcode<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">&gt;=<pos:position pos:line="8" pos:column="18"/></operator><literal type="number" pos:line="8" pos:column="15">400<pos:position pos:line="8" pos:column="18"/></literal></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19"> <block pos:line="8" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">failf<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><name pos:line="9" pos:column="11">data<pos:position pos:line="9" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="17">"Failed FTP upload: %0d"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="43">ftpcode<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>
    <comment type="block" pos:line="10" pos:column="5">/* oops, we never close the sockets! */</comment>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">CURLE_UPLOAD_FAILED<pos:position pos:line="11" pos:column="31"/></name></expr>;<pos:position pos:line="11" pos:column="32"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name><name pos:line="14" pos:column="6">data<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">set<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">.<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">ftp_use_port<pos:position pos:line="14" pos:column="28"/></name></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29"> <block pos:line="14" pos:column="30">{
    <comment type="block" pos:line="15" pos:column="5">/* BLOCKING */</comment>
    <comment type="block" pos:line="16" pos:column="5">/* PORT means we are now awaiting the server to connect to us. */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">result<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">AllowServerConnect<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">conn<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">( <expr><name pos:line="18" pos:column="9">result<pos:position pos:line="18" pos:column="15"/></name></expr> )<pos:position pos:line="18" pos:column="17"/></condition><then pos:line="18" pos:column="17">
      <block type="pseudo"><return pos:line="19" pos:column="7">return <expr><name pos:line="19" pos:column="14">result<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name><name pos:line="22" pos:column="6">conn<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">ssl<pos:position pos:line="22" pos:column="15"/></name><index pos:line="22" pos:column="15">[<expr><name pos:line="22" pos:column="16">SECONDARYSOCKET<pos:position pos:line="22" pos:column="31"/></name></expr>]<pos:position pos:line="22" pos:column="32"/></index></name><operator pos:line="22" pos:column="32">.<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">use<pos:position pos:line="22" pos:column="36"/></name></expr>)<pos:position pos:line="22" pos:column="37"/></condition><then pos:line="22" pos:column="37"> <block pos:line="22" pos:column="38">{
    <comment type="block" pos:line="23" pos:column="5">/* since we only have a plaintext TCP connection here, we must now
       do the TLS stuff */</comment>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">infof<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">data<pos:position pos:line="25" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="17">"Doing the SSL/TLS handshake on the data stream\n"<pos:position pos:line="25" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="69"/></expr_stmt>
    <comment type="block" pos:line="26" pos:column="5">/* BLOCKING */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">result<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">Curl_ssl_connect<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">conn<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="37">SECONDARYSOCKET<pos:position pos:line="27" pos:column="52"/></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt>
    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><name pos:line="28" pos:column="8">result<pos:position pos:line="28" pos:column="14"/></name></expr>)<pos:position pos:line="28" pos:column="15"/></condition><then pos:line="28" pos:column="15">
      <block type="pseudo"><return pos:line="29" pos:column="7">return <expr><name pos:line="29" pos:column="14">result<pos:position pos:line="29" pos:column="20"/></name></expr>;<pos:position pos:line="29" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="32" pos:column="3">*<pos:position pos:line="32" pos:column="4"/></operator><operator pos:line="32" pos:column="4">(<pos:position pos:line="32" pos:column="5"/></operator><name><name pos:line="32" pos:column="5">ftp<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">-&gt;<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="10">bytecountp<pos:position pos:line="32" pos:column="20"/></name></name><operator pos:line="32" pos:column="20">)<pos:position pos:line="32" pos:column="21"/></operator><operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator><literal type="number" pos:line="32" pos:column="22">0<pos:position pos:line="32" pos:column="23"/></literal></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="34" pos:column="3">/* When we know we're uploading a specified file, we can get the file
     size prior to the actual upload. */</comment>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">Curl_pgrsSetUploadSize<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">data<pos:position pos:line="37" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="32">data<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">-&gt;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="38">set<pos:position pos:line="37" pos:column="41"/></name><operator pos:line="37" pos:column="41">.<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="42">infilesize<pos:position pos:line="37" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt>

  <expr_stmt><expr><name pos:line="39" pos:column="3">result<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <call><name pos:line="39" pos:column="12">Curl_setup_transfer<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><name pos:line="39" pos:column="32">conn<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="38">-<pos:position pos:line="39" pos:column="39"/></operator><literal type="number" pos:line="39" pos:column="39">1<pos:position pos:line="39" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="39" pos:column="42">-<pos:position pos:line="39" pos:column="43"/></operator><literal type="number" pos:line="39" pos:column="43">1<pos:position pos:line="39" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="46">FALSE<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="53">NULL<pos:position pos:line="39" pos:column="57"/></name></expr></argument>, <comment type="block" pos:line="39" pos:column="59">/* no download */</comment>
                               <argument><expr><name pos:line="40" pos:column="32">SECONDARYSOCKET<pos:position pos:line="40" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="49">ftp<pos:position pos:line="40" pos:column="52"/></name><operator pos:line="40" pos:column="52">-&gt;<pos:position pos:line="40" pos:column="57"/></operator><name pos:line="40" pos:column="54">bytecountp<pos:position pos:line="40" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">state<pos:position pos:line="41" pos:column="8"/></name><argument_list pos:line="41" pos:column="8">(<argument><expr><name pos:line="41" pos:column="9">conn<pos:position pos:line="41" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="15">FTP_STOP<pos:position pos:line="41" pos:column="23"/></name></expr></argument>)<pos:position pos:line="41" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="25"/></expr_stmt>

  <return pos:line="43" pos:column="3">return <expr><name pos:line="43" pos:column="10">result<pos:position pos:line="43" pos:column="16"/></name></expr>;<pos:position pos:line="43" pos:column="17"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

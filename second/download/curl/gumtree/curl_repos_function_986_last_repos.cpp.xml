<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_986_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">vms_special_exit<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">code<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">vms_show<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">vms_code<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* The Posix exit mode is only available after VMS 7.0 */</comment>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">__CRTL_VER<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">&gt;=<pos:position pos:line="6" pos:column="21"/></operator> <literal type="number" pos:line="6" pos:column="19">70000000<pos:position pos:line="6" pos:column="27"/></literal></expr></cpp:if>
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><call><name pos:line="7" pos:column="6">is_vms_shell<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">()<pos:position pos:line="7" pos:column="20"/></argument_list></call> <operator pos:line="7" pos:column="21">==<pos:position pos:line="7" pos:column="23"/></operator> <literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26"> <block pos:line="7" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">decc$__posix_exit<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">code<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">code<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">&gt;<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="13">CURL_LAST<pos:position pos:line="12" pos:column="22"/></name></expr>)<pos:position pos:line="12" pos:column="23"/></condition><then pos:line="12" pos:column="23"> <block pos:line="12" pos:column="24">{   <comment type="block" pos:line="12" pos:column="28">/* If CURL_LAST exceeded then */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">vms_code<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">CURL_LAST<pos:position pos:line="13" pos:column="25"/></name></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>  <comment type="block" pos:line="13" pos:column="28">/* curlmsg.h is out of sync.  */</comment>
  }<pos:position pos:line="14" pos:column="4"/></block></then>
  <else pos:line="15" pos:column="3">else <block pos:line="15" pos:column="8">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">vms_code<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name><name pos:line="16" pos:column="16">vms_cond<pos:position pos:line="16" pos:column="24"/></name><index pos:line="16" pos:column="24">[<expr><name pos:line="16" pos:column="25">code<pos:position pos:line="16" pos:column="29"/></name></expr>]<pos:position pos:line="16" pos:column="30"/></index></name> <operator pos:line="16" pos:column="31">|<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="33">vms_show<pos:position pos:line="16" pos:column="41"/></name></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">decc$exit<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">vms_code<pos:position pos:line="18" pos:column="21"/></name></expr></argument>)<pos:position pos:line="18" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

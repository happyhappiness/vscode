 fputs(
"              initial host. If a redirect takes curl to a different  host,  it\n"
"              won’t  be  able to intercept the user+password. See also --loca‐\n"
"              tion-trusted on how to change this. You can limit the amount  of\n"
"              redirects to follow by using the --max-redirs option.\n"
"\n"
"              When  curl follows a redirect and the request is not a plain GET\n"
"              (for example POST or PUT), it will do the following request with\n"
, stdout);
 fputs(
"              a GET if the HTTP response was 301, 302, or 303. If the response\n"
"              code was any other 3xx code, curl  will  re-send  the  following\n"
"              request using the same unmodified method.\n"
"\n"
"              If  this  option  is  used  twice, the second will again disable\n"
"              location following.\n"
"\n"
"       --location-trusted\n"
"              (HTTP/HTTPS) Like -L/--location, but will allow sending the name\n"
, stdout);
 fputs(
"              +  password to all hosts that the site may redirect to. This may\n"
"              or may not introduce a security breach if the site redirects you\n"
"              do  a  site to which you’ll send your authentication info (which\n"
"              is plaintext in the case of HTTP Basic authentication).\n"
"\n"
"              If this option is used twice,  the  second  will  again  disable\n"
"              location following.\n"
"\n"
"       --max-filesize <bytes>\n"
, stdout);
 fputs(
"              Specify  the  maximum  size (in bytes) of a file to download. If\n"
"              the file requested is larger than this value, the transfer  will\n"
"              not start and curl will return with exit code 63.\n"
"\n"
"              NOTE:  The  file size is not always known prior to download, and\n"
"              for such files this option has no effect even if the file trans‐\n"
"              fer  ends  up  being larger than this given limit. This concerns\n"
, stdout);
 fputs(
"              both FTP and HTTP transfers.\n"
"\n"
"       -m/--max-time <seconds>\n"
"              Maximum time in seconds that you allow the  whole  operation  to\n"
"              take.   This is useful for preventing your batch jobs from hang‐\n"
"              ing for hours due to slow networks or  links  going  down.   See\n"
"              also the --connect-timeout option.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       -M/--manual\n"
, stdout);
 fputs(
"              Manual. Display the huge help text.\n"
"\n"
"       -n/--netrc\n"
"              Makes curl scan the .netrc file in the user’s home directory for\n"
"              login name and password. This is typically used for ftp on unix.\n"
"              If used with http, curl will  enable  user  authentication.  See\n"
"              netrc(4) or ftp(1) for details on the file format. Curl will not\n"
"              complain if that file hasn’t the right  permissions  (it  should\n"
, stdout);
 fputs(
"              not  be  world  nor  group  readable).  The environment variable\n"
"              \"HOME\" is used to find the home directory.\n"
"\n"
"              A quick and very simple example of how  to  setup  a  .netrc  to\n"
"              allow  curl to ftp to the machine host.domain.com with user name\n"
"              ’myself’ and password ’secret’ should look similar to:\n"
"\n"
"              machine host.domain.com login myself password secret\n"
"\n"
, stdout);
 fputs(
"              If this option is used twice,  the  second  will  again  disable\n"
"              netrc usage.\n"
"\n"
"       --netrc-optional\n"
"              Very  similar to --netrc, but this option makes the .netrc usage\n"
"              optional and not mandatory as the --netrc does.\n"
"\n"
"       --negotiate\n"
"              (HTTP) Enables GSS-Negotiate authentication.  The  GSS-Negotiate\n"
"              method was designed by Microsoft and is used in their web appli‐\n"
, stdout);
 fputs(
"              cations. It is  primarily  meant  as  a  support  for  Kerberos5\n"
"              authentication but may be also used along with another authenti‐\n"
"              cation methods. For  more  information  see  IETF  draft  draft-\n"
"              brezak-spnego-http-04.txt.\n"
"\n"
"              This option requires that the library was built with GSSAPI sup‐\n"
"              port. This is not very common. Use -V/--version to see  if  your\n"
"              version supports GSS-Negotiate.\n"
"\n"
, stdout);
 fputs(
"              When  using  this option, you must also provide a fake -u/--user\n"
"              option to activate the authentication code properly.  Sending  a\n"
"              ’-u  :’  is  enough  as  the  user name and password from the -u\n"
"              option aren’t actually used.\n"
"\n"
"              If this option is used several times, the following  occurrences\n"
"              make no difference.\n"
"\n"
"       -N/--no-buffer\n"
, stdout);
 fputs(
"              Disables the buffering of the output stream. In normal work sit‐\n"
"              uations, curl will use a standard buffered  output  stream  that\n"
"              will have the effect that it will output the data in chunks, not\n"
"              necessarily exactly when the data arrives.   Using  this  option\n"
"              will disable that buffering.\n"
"\n"
"              If  this  option  is used twice, the second will again switch on\n"
"              buffering.\n"
"\n"
"       --no-sessionid\n"
, stdout);
 fputs(
"              (SSL) Disable curl’s use of SSL session-ID caching.  By  default\n"
"              all  transfers are done using the cache. Note that while nothing\n"
"              ever should get hurt by attempting  to  reuse  SSL  session-IDs,\n"
"              there seem to be broken SSL implementations in the wild that may\n"
"              require you to disable this in order for you to succeed.  (Added\n"
"              in 7.16.0)\n"

"              machine host.domain.com login myself password secret\n"
"\n"
"       --netrc-optional\n"
"              Very similar to --netrc, but this option makes the .netrc  usage\n"
"              optional and not mandatory as the --netrc option does.\n"
"\n"
"       --negotiate\n"
"              (HTTP)  Enables  GSS-Negotiate authentication. The GSS-Negotiate\n"
, stdout);
 fputs(
"              method was designed by Microsoft and is used in their web appli-\n"
"              cations.  It  is  primarily  meant  as  a  support for Kerberos5\n"
"              authentication but may be also used along with another authenti-\n"
"              cation method. For more information see IETF draft draft-brezak-\n"
"              spnego-http-04.txt.\n"
"\n"
"              If you want to enable Negotiate for your  proxy  authentication,\n"
"              then use --proxy-negotiate.\n"
"\n"
, stdout);
 fputs(
"              This  option  requires a library built with GSSAPI support. This\n"
"              is not very common. Use -V/--version to see if your version sup-\n"
"              ports GSS-Negotiate.\n"
"\n"
"              When  using  this option, you must also provide a fake -u/--user\n"
"              option to activate the authentication code properly.  Sending  a\n"
"              '-u  :'  is  enough  as  the  user name and password from the -u\n"
"              option aren't actually used.\n"
"\n"
, stdout);
 fputs(
"              If this option is used several times, the following  occurrences\n"
"              make no difference.\n"
"\n"
"       -N/--no-buffer\n"
"              Disables the buffering of the output stream. In normal work sit-\n"
"              uations, curl will use a standard buffered  output  stream  that\n"
"              will have the effect that it will output the data in chunks, not\n"
"              necessarily exactly when the data arrives.   Using  this  option\n"
"              will disable that buffering.\n"
"\n"
, stdout);
 fputs(
"              Note  that  this  is the negated option name documented. You can\n"
"              thus use --buffer to enforce the buffering.\n"
"\n"
"       --no-keepalive\n"
"              Disables the use of keepalive messages on the TCP connection, as\n"
"              by default curl enables them.\n"
"\n"
"              Note  that  this  is the negated option name documented. You can\n"
"              thus use --keepalive to enforce keepalive.\n"
"\n"
"       --no-sessionid\n"
, stdout);
 fputs(
"              (SSL) Disable curl's use of SSL session-ID caching.  By  default\n"
"              all  transfers are done using the cache. Note that while nothing\n"
"              should ever get hurt by attempting  to  reuse  SSL  session-IDs,\n"
"              there seem to be broken SSL implementations in the wild that may\n"
"              require you to disable this in order for you to succeed.  (Added\n"
"              in 7.16.0)\n"
"\n"
"              Note  that  this  is the negated option name documented. You can\n"
, stdout);
 fputs(
"              thus use --sessionid to enforce session-ID caching.\n"
"\n"
"       --noproxy <no-proxy-list>\n"
"              Comma-separated list of hosts which do not use a proxy,  if  one\n"
"              is  specified.  The only wildcard is a single * character, which\n"
"              matches all hosts, and effectively disables the proxy. Each name\n"
"              in  this  list  is matched as either a domain which contains the\n"
"              hostname, or the hostname itself. For example,  local.com  would\n"
, stdout);
 fputs(
"              match   local.com,  local.com:80,  and  www.local.com,  but  not\n"
"              www.notlocal.com.  (Added in 7.19.4).\n"
"\n"
"       --ntlm (HTTP) Enables  NTLM  authentication.  The  NTLM  authentication\n"
"              method was designed by Microsoft and is used by IIS web servers.\n"
"              It is a proprietary protocol, reverse-engineered by clever  peo-\n"
"              ple and implemented in curl based on their efforts. This kind of\n"
, stdout);
 fputs(
"              behavior should not be endorsed, you should  encourage  everyone\n"
"              who  uses  NTLM to switch to a public and documented authentica-\n"
"              tion method instead, such as Digest.\n"
"\n"
"              If you want to enable NTLM for your proxy  authentication,  then\n"
"              use --proxy-ntlm.\n"
"\n"
"              This  option  requires  a  library  built  with SSL support. Use\n"
"              -V/--version to see if your curl supports NTLM.\n"
"\n"
, stdout);
 fputs(
"              If this option is used several times, the following  occurrences\n"
"              make no difference.\n"
"\n"
"       -o/--output <file>\n"
"              Write output to <file> instead of stdout. If you are using {} or\n"
"              [] to fetch multiple documents, you can use '#'  followed  by  a\n"
"              number  in  the <file> specifier. That variable will be replaced\n"
"              with the current string for the URL being fetched. Like in:\n"
"\n"
, stdout);
 fputs(
"                curl http://{one,two}.site.com -o \"file_#1.txt\"\n"
"\n"
"              or use several variables like:\n"
"\n"
"                curl http://{site,host}.host[1-5].com -o \"#1_#2\"\n"
"\n"
"              You may use this option as many times as the number of URLs  you\n"
"              have.\n"
"\n"
"              See  also  the --create-dirs option to create the local directo-\n"
"              ries dynamically. Specifying the output as '-' (a  single  dash)\n"
"              will force the output to be done to stdout.\n"
"\n"
, stdout);
 fputs(
"       -O/--remote-name\n"
"              Write  output to a local file named like the remote file we get.\n"
"              (Only the file part of the remote file is used, the path is  cut\n"
"              off.)\n"
"\n"
"              The  remote  file  name  to use for saving is extracted from the\n"
"              given URL, nothing else.\n"
"\n"
"              You may use this option as many times as the number of URLs  you\n"
"              have.\n"
"\n"
"       --remote-name-all\n"
, stdout);
 fputs(
"              This  option changes the default action for all given URLs to be\n"
"              dealt with as if -O/--remote-name were used for each one. So  if\n"
"              you want to disable that for a specific URL after --remote-name-\n"
"              all has been used, you must  use  \"-o  -\"  or  --no-remote-name.\n"
"              (Added in 7.19.0)\n"
"\n"
"       --pass <phrase>\n"
"              (SSL/SSH) Passphrase for the private key\n"
"\n"
, stdout);
 fputs(
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --post301\n"
"              Tells  curl  to  respect  RFC  2616/10.3.2  and not convert POST\n"
"              requests into GET requests when following a 301 redirection. The\n"
"              non-RFC  behaviour  is  ubiquitous in web browsers, so curl does\n"
"              the conversion by default to maintain  consistency.  However,  a\n"
"              server  may  require  a POST to remain a POST after such a redi-\n"
, stdout);
 fputs(
"              rection. This option is meaningful only when using -L/--location\n"
"              (Added in 7.17.1)\n"
"\n"
"       --post302\n"
"              Tells  curl  to  respect  RFC  2616/10.3.2  and not convert POST\n"
"              requests into GET requests when following a 302 redirection. The\n"
"              non-RFC  behaviour  is  ubiquitous in web browsers, so curl does\n"
"              the conversion by default to maintain  consistency.  However,  a\n"
, stdout);
 fputs(
"              server  may  require  a POST to remain a POST after such a redi-\n"
"              rection. This option is meaningful only when using -L/--location\n"
"              (Added in 7.19.1)\n"
"\n"
"       --proto <protocols>\n"
"              Tells   curl  to  use  the  listed  protocols  for  its  initial\n"
"              retrieval. Protocols are evaluated left to right, are comma sep-\n"
"              arated,  and  are each a protocol name or 'all', optionally pre-\n"
, stdout);
 fputs(
"              fixed by zero or more modifiers. Available modifiers are:\n"
"\n"
"              +  Permit this protocol in addition to protocols already permit-\n"
"                 ted (this is the default if no modifier is used).\n"
"\n"
"              -  Deny  this  protocol,  removing it from the list of protocols\n"
"                 already permitted.\n"
"\n"
"              =  Permit only this protocol (ignoring the list already  permit-\n"
"                 ted),  though  subject  to  later  modification by subsequent\n"
, stdout);
 fputs(
"                 entries in the comma separated list.\n"
"\n"
"              For example:\n"
"\n"
"              --proto -ftps  uses the default protocols, but disables ftps\n"
"\n"
"              --proto -all,https,+http\n"
"                             only enables http and https\n"
"\n"
"              --proto =http,https\n"
"                             also only enables http and https\n"
"\n"
"              Unknown protocols produce a  warning.  This  allows  scripts  to\n"
, stdout);
 fputs(
"              safely  rely on being able to disable potentially dangerous pro-\n"
"              tocols, without relying upon support  for  that  protocol  being\n"
"              built into curl to avoid an error.\n"
"\n"
"              This option can be used multiple times, in which case the effect\n"
"              is the same as concatenating the protocols into one instance  of\n"
"              the option.\n"
"\n"
"              (Added in 7.20.2)\n"
"\n"
"       --proto-redir <protocols>\n"
, stdout);
 fputs(
"              Tells  curl  to  use  the listed protocols after a redirect. See\n"
"              --proto for how protocols are represented.\n"
"\n"
"              (Added in 7.20.2)\n"
"\n"
"       --proxy-anyauth\n"
"              Tells curl to pick a suitable authentication method when  commu-\n"
"              nicating  with  the  given  proxy.  This  might  cause  an extra\n"
"              request/response round-trip. (Added in 7.13.2)\n"
"\n"
"       --proxy-basic\n"
, stdout);
 fputs(
"              Tells curl to use HTTP Basic authentication  when  communicating\n"
"              with the given proxy. Use --basic for enabling HTTP Basic with a\n"
"              remote host. Basic is the  default  authentication  method  curl\n"
"              uses with proxies.\n"
"\n"
"       --proxy-digest\n"
"              Tells  curl to use HTTP Digest authentication when communicating\n"
"              with the given proxy. Use --digest for enabling HTTP Digest with\n"
"              a remote host.\n"
"\n"
, stdout);
 fputs(
"       --proxy-negotiate\n"
"              Tells curl to use HTTP Negotiate authentication when communicat-\n"
"              ing with the given proxy.  Use  --negotiate  for  enabling  HTTP\n"
"              Negotiate with a remote host. (Added in 7.17.1)\n"
"\n"
"       --proxy-ntlm\n"
"              Tells  curl  to  use HTTP NTLM authentication when communicating\n"

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2616_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">any_cipher_enabled<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">unsigned<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">int<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">i<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

  <for pos:line="5" pos:column="3">for<control pos:line="5" pos:column="6">(<init><expr><name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">=<pos:position pos:line="5" pos:column="10"/></operator> <literal type="number" pos:line="5" pos:column="11">0<pos:position pos:line="5" pos:column="12"/></literal></expr>;<pos:position pos:line="5" pos:column="13"/></init> <condition><expr><name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">&lt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">NUM_OF_CIPHERS<pos:position pos:line="5" pos:column="30"/></name></expr>;<pos:position pos:line="5" pos:column="31"/></condition> <incr><expr><name pos:line="5" pos:column="32">i<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">++<pos:position pos:line="5" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="36"/></control> <block pos:line="5" pos:column="37">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">PRInt32<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">policy<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">SSL_CipherPolicyGet<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name><name pos:line="7" pos:column="25">cipherlist<pos:position pos:line="7" pos:column="35"/></name><index pos:line="7" pos:column="35">[<expr><name pos:line="7" pos:column="36">i<pos:position pos:line="7" pos:column="37"/></name></expr>]<pos:position pos:line="7" pos:column="38"/></index></name><operator pos:line="7" pos:column="38">.<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="39">num<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="44">&amp;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="45">policy<pos:position pos:line="7" pos:column="51"/></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>
    <if pos:line="8" pos:column="5">if<condition pos:line="8" pos:column="7">(<expr><name pos:line="8" pos:column="8">policy<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15">
      <block type="pseudo"><return pos:line="9" pos:column="7">return <expr><name pos:line="9" pos:column="14">TRUE<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></return></block></then></if>
  }<pos:position pos:line="10" pos:column="4"/></block></for>

  <return pos:line="12" pos:column="3">return <expr><name pos:line="12" pos:column="10">FALSE<pos:position pos:line="12" pos:column="15"/></name></expr>;<pos:position pos:line="12" pos:column="16"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

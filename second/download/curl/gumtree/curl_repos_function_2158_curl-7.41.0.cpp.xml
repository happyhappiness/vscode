<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2158_curl-7.41.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">schannel_connect_step1<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name><name pos:line="2" pos:column="24">struct<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">connectdata<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">conn<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">int<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">sockindex<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ssize_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">written<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><operator pos:line="4" pos:column="21">-<pos:position pos:line="4" pos:column="22"/></operator><literal type="number" pos:line="4" pos:column="22">1<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">SessionHandle<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">data<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name><name pos:line="5" pos:column="32">conn<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">data<pos:position pos:line="5" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">ssl_connect_data<pos:position pos:line="6" pos:column="26"/></name></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">connssl<pos:position pos:line="6" pos:column="35"/></name> <init pos:line="6" pos:column="36">= <expr><operator pos:line="6" pos:column="38">&amp;<pos:position pos:line="6" pos:column="43"/></operator><name><name pos:line="6" pos:column="39">conn<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">-&gt;<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="45">ssl<pos:position pos:line="6" pos:column="48"/></name><index pos:line="6" pos:column="48">[<expr><name pos:line="6" pos:column="49">sockindex<pos:position pos:line="6" pos:column="58"/></name></expr>]<pos:position pos:line="6" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">SecBuffer<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">outbuf<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">SecBufferDesc<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">outbuf_desc<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">SCHANNEL_CRED<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">schannel_cred<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">SECURITY_STATUS<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">sspi_status<pos:position pos:line="10" pos:column="30"/></name> <init pos:line="10" pos:column="31">= <expr><name pos:line="10" pos:column="33">SEC_E_OK<pos:position pos:line="10" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">curl_schannel_cred<pos:position pos:line="11" pos:column="28"/></name></name> <modifier pos:line="11" pos:column="29">*<pos:position pos:line="11" pos:column="30"/></modifier></type><name pos:line="11" pos:column="30">old_cred<pos:position pos:line="11" pos:column="38"/></name> <init pos:line="11" pos:column="39">= <expr><name pos:line="11" pos:column="41">NULL<pos:position pos:line="11" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">struct<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">in_addr<pos:position pos:line="12" pos:column="17"/></name></name></type> <name pos:line="12" pos:column="18">addr<pos:position pos:line="12" pos:column="22"/></name></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">ENABLE_IPV6<pos:position pos:line="13" pos:column="19"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="14" pos:column="3">struct<pos:position pos:line="14" pos:column="9"/></name> <name pos:line="14" pos:column="10">in6_addr<pos:position pos:line="14" pos:column="18"/></name></name></type> <name pos:line="14" pos:column="19">addr6<pos:position pos:line="14" pos:column="24"/></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">TCHAR<pos:position pos:line="16" pos:column="8"/></name> <modifier pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></modifier></type><name pos:line="16" pos:column="10">host_name<pos:position pos:line="16" pos:column="19"/></name></decl>;<pos:position pos:line="16" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">CURLcode<pos:position pos:line="17" pos:column="11"/></name></type> <name pos:line="17" pos:column="12">result<pos:position pos:line="17" pos:column="18"/></name></decl>;<pos:position pos:line="17" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="19" pos:column="3">infof<pos:position pos:line="19" pos:column="8"/></name><argument_list pos:line="19" pos:column="8">(<argument><expr><name pos:line="19" pos:column="9">data<pos:position pos:line="19" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="15">"schannel: SSL/TLS connection with %s port %hu (step 1/3)\n"<pos:position pos:line="19" pos:column="75"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="20" pos:column="9">conn<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">host<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">.<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">name<pos:position pos:line="20" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="26">conn<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">remote_port<pos:position pos:line="20" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* check for an existing re-usable credential handle */</comment>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">!<pos:position pos:line="23" pos:column="7"/></operator><call><name pos:line="23" pos:column="7">Curl_ssl_getsessionid<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">conn<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="35">(<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="36">void<pos:position pos:line="23" pos:column="40"/></name> <operator pos:line="23" pos:column="41">*<pos:position pos:line="23" pos:column="42"/></operator><operator pos:line="23" pos:column="42">*<pos:position pos:line="23" pos:column="43"/></operator><operator pos:line="23" pos:column="43">)<pos:position pos:line="23" pos:column="44"/></operator><operator pos:line="23" pos:column="44">&amp;<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="45">old_cred<pos:position pos:line="23" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="55">NULL<pos:position pos:line="23" pos:column="59"/></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="61"/></condition><then pos:line="23" pos:column="61"> <block pos:line="23" pos:column="62">{
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">connssl<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">cred<pos:position pos:line="24" pos:column="18"/></name></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">old_cred<pos:position pos:line="24" pos:column="29"/></name></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">infof<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">data<pos:position pos:line="25" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="17">"schannel: re-using existing credential handle\n"<pos:position pos:line="25" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="68"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then>
  <else pos:line="27" pos:column="3">else <block pos:line="27" pos:column="8">{
    <comment type="block" pos:line="28" pos:column="5">/* setup Schannel API options */</comment>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">memset<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><operator pos:line="29" pos:column="12">&amp;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="13">schannel_cred<pos:position pos:line="29" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="28">0<pos:position pos:line="29" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="31">sizeof<argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">schannel_cred<pos:position pos:line="29" pos:column="51"/></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">schannel_cred<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">.<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="19">dwVersion<pos:position pos:line="30" pos:column="28"/></name></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <name pos:line="30" pos:column="31">SCHANNEL_CRED_VERSION<pos:position pos:line="30" pos:column="52"/></name></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>

    <if pos:line="32" pos:column="5">if<condition pos:line="32" pos:column="7">(<expr><name><name pos:line="32" pos:column="8">data<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">set<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">.<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">ssl<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">.<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">verifypeer<pos:position pos:line="32" pos:column="32"/></name></name></expr>)<pos:position pos:line="32" pos:column="33"/></condition><then pos:line="32" pos:column="33"> <block pos:line="32" pos:column="34">{
<cpp:ifdef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifdef<pos:position pos:line="33" pos:column="7"/></cpp:directive> <name pos:line="33" pos:column="8">_WIN32_WCE<pos:position pos:line="33" pos:column="18"/></name></cpp:ifdef>
      <comment type="block" pos:line="34" pos:column="7">/* certificate validation on CE doesn't seem to work right; we'll
         do it following a more manual process. */</comment>
      <expr_stmt><expr><name><name pos:line="36" pos:column="7">schannel_cred<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">.<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">dwFlags<pos:position pos:line="36" pos:column="28"/></name></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <name pos:line="36" pos:column="31">SCH_CRED_MANUAL_CRED_VALIDATION<pos:position pos:line="36" pos:column="62"/></name> <operator pos:line="36" pos:column="63">|<pos:position pos:line="36" pos:column="64"/></operator>
                              <name pos:line="37" pos:column="31">SCH_CRED_IGNORE_NO_REVOCATION_CHECK<pos:position pos:line="37" pos:column="66"/></name> <operator pos:line="37" pos:column="67">|<pos:position pos:line="37" pos:column="68"/></operator>
                              <name pos:line="38" pos:column="31">SCH_CRED_IGNORE_REVOCATION_OFFLINE<pos:position pos:line="38" pos:column="65"/></name></expr>;<pos:position pos:line="38" pos:column="66"/></expr_stmt>
<cpp:else pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">else<pos:position pos:line="39" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><name><name pos:line="40" pos:column="7">schannel_cred<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">.<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">dwFlags<pos:position pos:line="40" pos:column="28"/></name></name> <operator pos:line="40" pos:column="29">=<pos:position pos:line="40" pos:column="30"/></operator> <name pos:line="40" pos:column="31">SCH_CRED_AUTO_CRED_VALIDATION<pos:position pos:line="40" pos:column="60"/></name> <operator pos:line="40" pos:column="61">|<pos:position pos:line="40" pos:column="62"/></operator>
                              <name pos:line="41" pos:column="31">SCH_CRED_REVOCATION_CHECK_CHAIN<pos:position pos:line="41" pos:column="62"/></name></expr>;<pos:position pos:line="41" pos:column="63"/></expr_stmt>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">infof<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><name pos:line="43" pos:column="13">data<pos:position pos:line="43" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="19">"schannel: checking server certificate revocation\n"<pos:position pos:line="43" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then>
    <else pos:line="45" pos:column="5">else <block pos:line="45" pos:column="10">{
      <expr_stmt><expr><name><name pos:line="46" pos:column="7">schannel_cred<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">.<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="21">dwFlags<pos:position pos:line="46" pos:column="28"/></name></name> <operator pos:line="46" pos:column="29">=<pos:position pos:line="46" pos:column="30"/></operator> <name pos:line="46" pos:column="31">SCH_CRED_MANUAL_CRED_VALIDATION<pos:position pos:line="46" pos:column="62"/></name> <operator pos:line="46" pos:column="63">|<pos:position pos:line="46" pos:column="64"/></operator>
                              <name pos:line="47" pos:column="31">SCH_CRED_IGNORE_NO_REVOCATION_CHECK<pos:position pos:line="47" pos:column="66"/></name> <operator pos:line="47" pos:column="67">|<pos:position pos:line="47" pos:column="68"/></operator>
                              <name pos:line="48" pos:column="31">SCH_CRED_IGNORE_REVOCATION_OFFLINE<pos:position pos:line="48" pos:column="65"/></name></expr>;<pos:position pos:line="48" pos:column="66"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">infof<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">data<pos:position pos:line="49" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="19">"schannel: disable server certificate revocation checks\n"<pos:position pos:line="49" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></else></if>

    <if pos:line="52" pos:column="5">if<condition pos:line="52" pos:column="7">(<expr><operator pos:line="52" pos:column="8">!<pos:position pos:line="52" pos:column="9"/></operator><name><name pos:line="52" pos:column="9">data<pos:position pos:line="52" pos:column="13"/></name><operator pos:line="52" pos:column="13">-&gt;<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="15">set<pos:position pos:line="52" pos:column="18"/></name><operator pos:line="52" pos:column="18">.<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="19">ssl<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">.<pos:position pos:line="52" pos:column="23"/></operator><name pos:line="52" pos:column="23">verifyhost<pos:position pos:line="52" pos:column="33"/></name></name></expr>)<pos:position pos:line="52" pos:column="34"/></condition><then pos:line="52" pos:column="34"> <block pos:line="52" pos:column="35">{
      <expr_stmt><expr><name><name pos:line="53" pos:column="7">schannel_cred<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">.<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="21">dwFlags<pos:position pos:line="53" pos:column="28"/></name></name> <operator pos:line="53" pos:column="29">|=<pos:position pos:line="53" pos:column="31"/></operator> <name pos:line="53" pos:column="32">SCH_CRED_NO_SERVERNAME_CHECK<pos:position pos:line="53" pos:column="60"/></name></expr>;<pos:position pos:line="53" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">infof<pos:position pos:line="54" pos:column="12"/></name><argument_list pos:line="54" pos:column="12">(<argument><expr><name pos:line="54" pos:column="13">data<pos:position pos:line="54" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="19">"schannel: verifyhost setting prevents Schannel from "<pos:position pos:line="54" pos:column="73"/></literal>
                  <literal type="string" pos:line="55" pos:column="19">"comparing the supplied target name with the subject "<pos:position pos:line="55" pos:column="73"/></literal>
                  <literal type="string" pos:line="56" pos:column="19">"names in server certificates. Also disables SNI.\n"<pos:position pos:line="56" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <switch pos:line="59" pos:column="5">switch<condition pos:line="59" pos:column="11">(<expr><name><name pos:line="59" pos:column="12">data<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">-&gt;<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="18">set<pos:position pos:line="59" pos:column="21"/></name><operator pos:line="59" pos:column="21">.<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="22">ssl<pos:position pos:line="59" pos:column="25"/></name><operator pos:line="59" pos:column="25">.<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="26">version<pos:position pos:line="59" pos:column="33"/></name></name></expr>)<pos:position pos:line="59" pos:column="34"/></condition> <block pos:line="59" pos:column="35">{
      <default pos:line="60" pos:column="7">default:<pos:position pos:line="60" pos:column="15"/></default>
      <case pos:line="61" pos:column="7">case <expr><name pos:line="61" pos:column="12">CURL_SSLVERSION_DEFAULT<pos:position pos:line="61" pos:column="35"/></name></expr>:<pos:position pos:line="61" pos:column="36"/></case>
      <case pos:line="62" pos:column="7">case <expr><name pos:line="62" pos:column="12">CURL_SSLVERSION_TLSv1<pos:position pos:line="62" pos:column="33"/></name></expr>:<pos:position pos:line="62" pos:column="34"/></case>
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">schannel_cred<pos:position pos:line="63" pos:column="22"/></name><operator pos:line="63" pos:column="22">.<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="23">grbitEnabledProtocols<pos:position pos:line="63" pos:column="44"/></name></name> <operator pos:line="63" pos:column="45">=<pos:position pos:line="63" pos:column="46"/></operator> <name pos:line="63" pos:column="47">SP_PROT_TLS1_0_CLIENT<pos:position pos:line="63" pos:column="68"/></name> <operator pos:line="63" pos:column="69">|<pos:position pos:line="63" pos:column="70"/></operator>
                                              <name pos:line="64" pos:column="47">SP_PROT_TLS1_1_CLIENT<pos:position pos:line="64" pos:column="68"/></name> <operator pos:line="64" pos:column="69">|<pos:position pos:line="64" pos:column="70"/></operator>
                                              <name pos:line="65" pos:column="47">SP_PROT_TLS1_2_CLIENT<pos:position pos:line="65" pos:column="68"/></name></expr>;<pos:position pos:line="65" pos:column="69"/></expr_stmt>
        <break pos:line="66" pos:column="9">break;<pos:position pos:line="66" pos:column="15"/></break>
      <case pos:line="67" pos:column="7">case <expr><name pos:line="67" pos:column="12">CURL_SSLVERSION_TLSv1_0<pos:position pos:line="67" pos:column="35"/></name></expr>:<pos:position pos:line="67" pos:column="36"/></case>
        <expr_stmt><expr><name><name pos:line="68" pos:column="9">schannel_cred<pos:position pos:line="68" pos:column="22"/></name><operator pos:line="68" pos:column="22">.<pos:position pos:line="68" pos:column="23"/></operator><name pos:line="68" pos:column="23">grbitEnabledProtocols<pos:position pos:line="68" pos:column="44"/></name></name> <operator pos:line="68" pos:column="45">=<pos:position pos:line="68" pos:column="46"/></operator> <name pos:line="68" pos:column="47">SP_PROT_TLS1_0_CLIENT<pos:position pos:line="68" pos:column="68"/></name></expr>;<pos:position pos:line="68" pos:column="69"/></expr_stmt>
        <break pos:line="69" pos:column="9">break;<pos:position pos:line="69" pos:column="15"/></break>
      <case pos:line="70" pos:column="7">case <expr><name pos:line="70" pos:column="12">CURL_SSLVERSION_TLSv1_1<pos:position pos:line="70" pos:column="35"/></name></expr>:<pos:position pos:line="70" pos:column="36"/></case>
        <expr_stmt><expr><name><name pos:line="71" pos:column="9">schannel_cred<pos:position pos:line="71" pos:column="22"/></name><operator pos:line="71" pos:column="22">.<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="23">grbitEnabledProtocols<pos:position pos:line="71" pos:column="44"/></name></name> <operator pos:line="71" pos:column="45">=<pos:position pos:line="71" pos:column="46"/></operator> <name pos:line="71" pos:column="47">SP_PROT_TLS1_1_CLIENT<pos:position pos:line="71" pos:column="68"/></name></expr>;<pos:position pos:line="71" pos:column="69"/></expr_stmt>
        <break pos:line="72" pos:column="9">break;<pos:position pos:line="72" pos:column="15"/></break>
      <case pos:line="73" pos:column="7">case <expr><name pos:line="73" pos:column="12">CURL_SSLVERSION_TLSv1_2<pos:position pos:line="73" pos:column="35"/></name></expr>:<pos:position pos:line="73" pos:column="36"/></case>
        <expr_stmt><expr><name><name pos:line="74" pos:column="9">schannel_cred<pos:position pos:line="74" pos:column="22"/></name><operator pos:line="74" pos:column="22">.<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="23">grbitEnabledProtocols<pos:position pos:line="74" pos:column="44"/></name></name> <operator pos:line="74" pos:column="45">=<pos:position pos:line="74" pos:column="46"/></operator> <name pos:line="74" pos:column="47">SP_PROT_TLS1_2_CLIENT<pos:position pos:line="74" pos:column="68"/></name></expr>;<pos:position pos:line="74" pos:column="69"/></expr_stmt>
        <break pos:line="75" pos:column="9">break;<pos:position pos:line="75" pos:column="15"/></break>
      <case pos:line="76" pos:column="7">case <expr><name pos:line="76" pos:column="12">CURL_SSLVERSION_SSLv3<pos:position pos:line="76" pos:column="33"/></name></expr>:<pos:position pos:line="76" pos:column="34"/></case>
        <expr_stmt><expr><name><name pos:line="77" pos:column="9">schannel_cred<pos:position pos:line="77" pos:column="22"/></name><operator pos:line="77" pos:column="22">.<pos:position pos:line="77" pos:column="23"/></operator><name pos:line="77" pos:column="23">grbitEnabledProtocols<pos:position pos:line="77" pos:column="44"/></name></name> <operator pos:line="77" pos:column="45">=<pos:position pos:line="77" pos:column="46"/></operator> <name pos:line="77" pos:column="47">SP_PROT_SSL3_CLIENT<pos:position pos:line="77" pos:column="66"/></name></expr>;<pos:position pos:line="77" pos:column="67"/></expr_stmt>
        <break pos:line="78" pos:column="9">break;<pos:position pos:line="78" pos:column="15"/></break>
      <case pos:line="79" pos:column="7">case <expr><name pos:line="79" pos:column="12">CURL_SSLVERSION_SSLv2<pos:position pos:line="79" pos:column="33"/></name></expr>:<pos:position pos:line="79" pos:column="34"/></case>
        <expr_stmt><expr><name><name pos:line="80" pos:column="9">schannel_cred<pos:position pos:line="80" pos:column="22"/></name><operator pos:line="80" pos:column="22">.<pos:position pos:line="80" pos:column="23"/></operator><name pos:line="80" pos:column="23">grbitEnabledProtocols<pos:position pos:line="80" pos:column="44"/></name></name> <operator pos:line="80" pos:column="45">=<pos:position pos:line="80" pos:column="46"/></operator> <name pos:line="80" pos:column="47">SP_PROT_SSL2_CLIENT<pos:position pos:line="80" pos:column="66"/></name></expr>;<pos:position pos:line="80" pos:column="67"/></expr_stmt>
        <break pos:line="81" pos:column="9">break;<pos:position pos:line="81" pos:column="15"/></break>
    }<pos:position pos:line="82" pos:column="6"/></block></switch>

    <comment type="block" pos:line="84" pos:column="5">/* allocate memory for the re-usable credential handle */</comment>
    <expr_stmt><expr><name><name pos:line="85" pos:column="5">connssl<pos:position pos:line="85" pos:column="12"/></name><operator pos:line="85" pos:column="12">-&gt;<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="14">cred<pos:position pos:line="85" pos:column="18"/></name></name> <operator pos:line="85" pos:column="19">=<pos:position pos:line="85" pos:column="20"/></operator> <operator pos:line="85" pos:column="21">(<pos:position pos:line="85" pos:column="22"/></operator>struct <name pos:line="85" pos:column="29">curl_schannel_cred<pos:position pos:line="85" pos:column="47"/></name> <operator pos:line="85" pos:column="48">*<pos:position pos:line="85" pos:column="49"/></operator><operator pos:line="85" pos:column="49">)<pos:position pos:line="85" pos:column="50"/></operator>
                     <call><name pos:line="86" pos:column="22">malloc<pos:position pos:line="86" pos:column="28"/></name><argument_list pos:line="86" pos:column="28">(<argument><expr><sizeof pos:line="86" pos:column="29">sizeof<argument_list pos:line="86" pos:column="35">(<argument><expr pos:line="86" pos:column="36">struct <name pos:line="86" pos:column="43">curl_schannel_cred<pos:position pos:line="86" pos:column="61"/></name></expr></argument>)<pos:position pos:line="86" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="86" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="64"/></expr_stmt>
    <if pos:line="87" pos:column="5">if<condition pos:line="87" pos:column="7">(<expr><operator pos:line="87" pos:column="8">!<pos:position pos:line="87" pos:column="9"/></operator><name><name pos:line="87" pos:column="9">connssl<pos:position pos:line="87" pos:column="16"/></name><operator pos:line="87" pos:column="16">-&gt;<pos:position pos:line="87" pos:column="21"/></operator><name pos:line="87" pos:column="18">cred<pos:position pos:line="87" pos:column="22"/></name></name></expr>)<pos:position pos:line="87" pos:column="23"/></condition><then pos:line="87" pos:column="23"> <block pos:line="87" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="88" pos:column="7">failf<pos:position pos:line="88" pos:column="12"/></name><argument_list pos:line="88" pos:column="12">(<argument><expr><name pos:line="88" pos:column="13">data<pos:position pos:line="88" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="19">"schannel: unable to allocate memory"<pos:position pos:line="88" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="58"/></expr_stmt>
      <return pos:line="89" pos:column="7">return <expr><name pos:line="89" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="89" pos:column="33"/></name></expr>;<pos:position pos:line="89" pos:column="34"/></return>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">memset<pos:position pos:line="91" pos:column="11"/></name><argument_list pos:line="91" pos:column="11">(<argument><expr><name><name pos:line="91" pos:column="12">connssl<pos:position pos:line="91" pos:column="19"/></name><operator pos:line="91" pos:column="19">-&gt;<pos:position pos:line="91" pos:column="24"/></operator><name pos:line="91" pos:column="21">cred<pos:position pos:line="91" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="27">0<pos:position pos:line="91" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="91" pos:column="30">sizeof<argument_list pos:line="91" pos:column="36">(<argument><expr pos:line="91" pos:column="37">struct <name pos:line="91" pos:column="44">curl_schannel_cred<pos:position pos:line="91" pos:column="62"/></name></expr></argument>)<pos:position pos:line="91" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="91" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="65"/></expr_stmt>

    <comment type="block" pos:line="93" pos:column="5">/* http://msdn.microsoft.com/en-us/library/windows/desktop/aa374716.aspx */</comment>
    <expr_stmt><expr><name pos:line="94" pos:column="5">sspi_status<pos:position pos:line="94" pos:column="16"/></name> <operator pos:line="94" pos:column="17">=<pos:position pos:line="94" pos:column="18"/></operator> <call><name><name pos:line="94" pos:column="19">s_pSecFn<pos:position pos:line="94" pos:column="27"/></name><operator pos:line="94" pos:column="27">-&gt;<pos:position pos:line="94" pos:column="32"/></operator><name pos:line="94" pos:column="29">AcquireCredentialsHandle<pos:position pos:line="94" pos:column="53"/></name></name><argument_list pos:line="94" pos:column="53">(<argument><expr><name pos:line="94" pos:column="54">NULL<pos:position pos:line="94" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="60">(<pos:position pos:line="94" pos:column="61"/></operator><name pos:line="94" pos:column="61">TCHAR<pos:position pos:line="94" pos:column="66"/></name> <operator pos:line="94" pos:column="67">*<pos:position pos:line="94" pos:column="68"/></operator><operator pos:line="94" pos:column="68">)<pos:position pos:line="94" pos:column="69"/></operator><name pos:line="94" pos:column="69">UNISP_NAME<pos:position pos:line="94" pos:column="79"/></name></expr></argument>,
      <argument><expr><name pos:line="95" pos:column="7">SECPKG_CRED_OUTBOUND<pos:position pos:line="95" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="29">NULL<pos:position pos:line="95" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="35">&amp;<pos:position pos:line="95" pos:column="40"/></operator><name pos:line="95" pos:column="36">schannel_cred<pos:position pos:line="95" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="51">NULL<pos:position pos:line="95" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="57">NULL<pos:position pos:line="95" pos:column="61"/></name></expr></argument>,
      <argument><expr><operator pos:line="96" pos:column="7">&amp;<pos:position pos:line="96" pos:column="12"/></operator><name><name pos:line="96" pos:column="8">connssl<pos:position pos:line="96" pos:column="15"/></name><operator pos:line="96" pos:column="15">-&gt;<pos:position pos:line="96" pos:column="20"/></operator><name pos:line="96" pos:column="17">cred<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">-&gt;<pos:position pos:line="96" pos:column="26"/></operator><name pos:line="96" pos:column="23">cred_handle<pos:position pos:line="96" pos:column="34"/></name></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="36">&amp;<pos:position pos:line="96" pos:column="41"/></operator><name><name pos:line="96" pos:column="37">connssl<pos:position pos:line="96" pos:column="44"/></name><operator pos:line="96" pos:column="44">-&gt;<pos:position pos:line="96" pos:column="49"/></operator><name pos:line="96" pos:column="46">cred<pos:position pos:line="96" pos:column="50"/></name><operator pos:line="96" pos:column="50">-&gt;<pos:position pos:line="96" pos:column="55"/></operator><name pos:line="96" pos:column="52">time_stamp<pos:position pos:line="96" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="64"/></expr_stmt>

    <if pos:line="98" pos:column="5">if<condition pos:line="98" pos:column="7">(<expr><name pos:line="98" pos:column="8">sspi_status<pos:position pos:line="98" pos:column="19"/></name> <operator pos:line="98" pos:column="20">!=<pos:position pos:line="98" pos:column="22"/></operator> <name pos:line="98" pos:column="23">SEC_E_OK<pos:position pos:line="98" pos:column="31"/></name></expr>)<pos:position pos:line="98" pos:column="32"/></condition><then pos:line="98" pos:column="32"> <block pos:line="98" pos:column="33">{
      <if pos:line="99" pos:column="7">if<condition pos:line="99" pos:column="9">(<expr><name pos:line="99" pos:column="10">sspi_status<pos:position pos:line="99" pos:column="21"/></name> <operator pos:line="99" pos:column="22">==<pos:position pos:line="99" pos:column="24"/></operator> <name pos:line="99" pos:column="25">SEC_E_WRONG_PRINCIPAL<pos:position pos:line="99" pos:column="46"/></name></expr>)<pos:position pos:line="99" pos:column="47"/></condition><then pos:line="99" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="100" pos:column="9">failf<pos:position pos:line="100" pos:column="14"/></name><argument_list pos:line="100" pos:column="14">(<argument><expr><name pos:line="100" pos:column="15">data<pos:position pos:line="100" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="21">"schannel: SNI or certificate check failed: %s"<pos:position pos:line="100" pos:column="68"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="101" pos:column="15">Curl_sspi_strerror<pos:position pos:line="101" pos:column="33"/></name><argument_list pos:line="101" pos:column="33">(<argument><expr><name pos:line="101" pos:column="34">conn<pos:position pos:line="101" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="40">sspi_status<pos:position pos:line="101" pos:column="51"/></name></expr></argument>)<pos:position pos:line="101" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="101" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="54"/></expr_stmt></block></then>
      <else pos:line="102" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="9">failf<pos:position pos:line="103" pos:column="14"/></name><argument_list pos:line="103" pos:column="14">(<argument><expr><name pos:line="103" pos:column="15">data<pos:position pos:line="103" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="21">"schannel: AcquireCredentialsHandle failed: %s"<pos:position pos:line="103" pos:column="68"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="104" pos:column="15">Curl_sspi_strerror<pos:position pos:line="104" pos:column="33"/></name><argument_list pos:line="104" pos:column="33">(<argument><expr><name pos:line="104" pos:column="34">conn<pos:position pos:line="104" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="40">sspi_status<pos:position pos:line="104" pos:column="51"/></name></expr></argument>)<pos:position pos:line="104" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="104" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="54"/></expr_stmt></block></else></if>
      <expr_stmt><expr><call><name pos:line="105" pos:column="7">Curl_safefree<pos:position pos:line="105" pos:column="20"/></name><argument_list pos:line="105" pos:column="20">(<argument><expr><name><name pos:line="105" pos:column="21">connssl<pos:position pos:line="105" pos:column="28"/></name><operator pos:line="105" pos:column="28">-&gt;<pos:position pos:line="105" pos:column="33"/></operator><name pos:line="105" pos:column="30">cred<pos:position pos:line="105" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="36"/></expr_stmt>
      <return pos:line="106" pos:column="7">return <expr><name pos:line="106" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="106" pos:column="37"/></name></expr>;<pos:position pos:line="106" pos:column="38"/></return>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if>
  }<pos:position pos:line="108" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="110" pos:column="3">/* Warn if SNI is disabled due to use of an IP address */</comment>
  <if pos:line="111" pos:column="3">if<condition pos:line="111" pos:column="5">(<expr><call><name pos:line="111" pos:column="6">Curl_inet_pton<pos:position pos:line="111" pos:column="20"/></name><argument_list pos:line="111" pos:column="20">(<argument><expr><name pos:line="111" pos:column="21">AF_INET<pos:position pos:line="111" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="30">conn<pos:position pos:line="111" pos:column="34"/></name><operator pos:line="111" pos:column="34">-&gt;<pos:position pos:line="111" pos:column="39"/></operator><name pos:line="111" pos:column="36">host<pos:position pos:line="111" pos:column="40"/></name><operator pos:line="111" pos:column="40">.<pos:position pos:line="111" pos:column="41"/></operator><name pos:line="111" pos:column="41">name<pos:position pos:line="111" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="111" pos:column="47">&amp;<pos:position pos:line="111" pos:column="52"/></operator><name pos:line="111" pos:column="48">addr<pos:position pos:line="111" pos:column="52"/></name></expr></argument>)<pos:position pos:line="111" pos:column="53"/></argument_list></call>
<cpp:ifdef pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">ifdef<pos:position pos:line="112" pos:column="7"/></cpp:directive> <name pos:line="112" pos:column="8">ENABLE_IPV6<pos:position pos:line="112" pos:column="19"/></name></cpp:ifdef>
     <operator pos:line="113" pos:column="6">||<pos:position pos:line="113" pos:column="8"/></operator> <call><name pos:line="113" pos:column="9">Curl_inet_pton<pos:position pos:line="113" pos:column="23"/></name><argument_list pos:line="113" pos:column="23">(<argument><expr><name pos:line="113" pos:column="24">AF_INET6<pos:position pos:line="113" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="34">conn<pos:position pos:line="113" pos:column="38"/></name><operator pos:line="113" pos:column="38">-&gt;<pos:position pos:line="113" pos:column="43"/></operator><name pos:line="113" pos:column="40">host<pos:position pos:line="113" pos:column="44"/></name><operator pos:line="113" pos:column="44">.<pos:position pos:line="113" pos:column="45"/></operator><name pos:line="113" pos:column="45">name<pos:position pos:line="113" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="113" pos:column="51">&amp;<pos:position pos:line="113" pos:column="56"/></operator><name pos:line="113" pos:column="52">addr6<pos:position pos:line="113" pos:column="57"/></name></expr></argument>)<pos:position pos:line="113" pos:column="58"/></argument_list></call></expr>
<cpp:endif pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">endif<pos:position pos:line="114" pos:column="7"/></cpp:directive></cpp:endif>
    )<pos:position pos:line="115" pos:column="6"/></condition><then pos:line="115" pos:column="6"> <block pos:line="115" pos:column="7">{
    <expr_stmt><expr><call><name pos:line="116" pos:column="5">infof<pos:position pos:line="116" pos:column="10"/></name><argument_list pos:line="116" pos:column="10">(<argument><expr><name pos:line="116" pos:column="11">data<pos:position pos:line="116" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="17">"schannel: using IP address, SNI is not supported by OS.\n"<pos:position pos:line="116" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="78"/></expr_stmt>
  }<pos:position pos:line="117" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="119" pos:column="3">/* setup output buffer */</comment>
  <expr_stmt><expr><call><name pos:line="120" pos:column="3">InitSecBuffer<pos:position pos:line="120" pos:column="16"/></name><argument_list pos:line="120" pos:column="16">(<argument><expr><operator pos:line="120" pos:column="17">&amp;<pos:position pos:line="120" pos:column="22"/></operator><name pos:line="120" pos:column="18">outbuf<pos:position pos:line="120" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="26">SECBUFFER_EMPTY<pos:position pos:line="120" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="43">NULL<pos:position pos:line="120" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="120" pos:column="49">0<pos:position pos:line="120" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="121" pos:column="3">InitSecBufferDesc<pos:position pos:line="121" pos:column="20"/></name><argument_list pos:line="121" pos:column="20">(<argument><expr><operator pos:line="121" pos:column="21">&amp;<pos:position pos:line="121" pos:column="26"/></operator><name pos:line="121" pos:column="22">outbuf_desc<pos:position pos:line="121" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="35">&amp;<pos:position pos:line="121" pos:column="40"/></operator><name pos:line="121" pos:column="36">outbuf<pos:position pos:line="121" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="44">1<pos:position pos:line="121" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="47"/></expr_stmt>

  <comment type="block" pos:line="123" pos:column="3">/* setup request flags */</comment>
  <expr_stmt><expr><name><name pos:line="124" pos:column="3">connssl<pos:position pos:line="124" pos:column="10"/></name><operator pos:line="124" pos:column="10">-&gt;<pos:position pos:line="124" pos:column="15"/></operator><name pos:line="124" pos:column="12">req_flags<pos:position pos:line="124" pos:column="21"/></name></name> <operator pos:line="124" pos:column="22">=<pos:position pos:line="124" pos:column="23"/></operator> <name pos:line="124" pos:column="24">ISC_REQ_SEQUENCE_DETECT<pos:position pos:line="124" pos:column="47"/></name> <operator pos:line="124" pos:column="48">|<pos:position pos:line="124" pos:column="49"/></operator> <name pos:line="124" pos:column="50">ISC_REQ_REPLAY_DETECT<pos:position pos:line="124" pos:column="71"/></name> <operator pos:line="124" pos:column="72">|<pos:position pos:line="124" pos:column="73"/></operator>
                       <name pos:line="125" pos:column="24">ISC_REQ_CONFIDENTIALITY<pos:position pos:line="125" pos:column="47"/></name> <operator pos:line="125" pos:column="48">|<pos:position pos:line="125" pos:column="49"/></operator> <name pos:line="125" pos:column="50">ISC_REQ_ALLOCATE_MEMORY<pos:position pos:line="125" pos:column="73"/></name> <operator pos:line="125" pos:column="74">|<pos:position pos:line="125" pos:column="75"/></operator>
                       <name pos:line="126" pos:column="24">ISC_REQ_STREAM<pos:position pos:line="126" pos:column="38"/></name></expr>;<pos:position pos:line="126" pos:column="39"/></expr_stmt>

  <comment type="block" pos:line="128" pos:column="3">/* allocate memory for the security context handle */</comment>
  <expr_stmt><expr><name><name pos:line="129" pos:column="3">connssl<pos:position pos:line="129" pos:column="10"/></name><operator pos:line="129" pos:column="10">-&gt;<pos:position pos:line="129" pos:column="15"/></operator><name pos:line="129" pos:column="12">ctxt<pos:position pos:line="129" pos:column="16"/></name></name> <operator pos:line="129" pos:column="17">=<pos:position pos:line="129" pos:column="18"/></operator> <operator pos:line="129" pos:column="19">(<pos:position pos:line="129" pos:column="20"/></operator>struct <name pos:line="129" pos:column="27">curl_schannel_ctxt<pos:position pos:line="129" pos:column="45"/></name> <operator pos:line="129" pos:column="46">*<pos:position pos:line="129" pos:column="47"/></operator><operator pos:line="129" pos:column="47">)<pos:position pos:line="129" pos:column="48"/></operator>
                   <call><name pos:line="130" pos:column="20">malloc<pos:position pos:line="130" pos:column="26"/></name><argument_list pos:line="130" pos:column="26">(<argument><expr><sizeof pos:line="130" pos:column="27">sizeof<argument_list pos:line="130" pos:column="33">(<argument><expr pos:line="130" pos:column="34">struct <name pos:line="130" pos:column="41">curl_schannel_ctxt<pos:position pos:line="130" pos:column="59"/></name></expr></argument>)<pos:position pos:line="130" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="130" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="62"/></expr_stmt>
  <if pos:line="131" pos:column="3">if<condition pos:line="131" pos:column="5">(<expr><operator pos:line="131" pos:column="6">!<pos:position pos:line="131" pos:column="7"/></operator><name><name pos:line="131" pos:column="7">connssl<pos:position pos:line="131" pos:column="14"/></name><operator pos:line="131" pos:column="14">-&gt;<pos:position pos:line="131" pos:column="19"/></operator><name pos:line="131" pos:column="16">ctxt<pos:position pos:line="131" pos:column="20"/></name></name></expr>)<pos:position pos:line="131" pos:column="21"/></condition><then pos:line="131" pos:column="21"> <block pos:line="131" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="132" pos:column="5">failf<pos:position pos:line="132" pos:column="10"/></name><argument_list pos:line="132" pos:column="10">(<argument><expr><name pos:line="132" pos:column="11">data<pos:position pos:line="132" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="17">"schannel: unable to allocate memory"<pos:position pos:line="132" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="56"/></expr_stmt>
    <return pos:line="133" pos:column="5">return <expr><name pos:line="133" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="133" pos:column="31"/></name></expr>;<pos:position pos:line="133" pos:column="32"/></return>
  }<pos:position pos:line="134" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="135" pos:column="3">memset<pos:position pos:line="135" pos:column="9"/></name><argument_list pos:line="135" pos:column="9">(<argument><expr><name><name pos:line="135" pos:column="10">connssl<pos:position pos:line="135" pos:column="17"/></name><operator pos:line="135" pos:column="17">-&gt;<pos:position pos:line="135" pos:column="22"/></operator><name pos:line="135" pos:column="19">ctxt<pos:position pos:line="135" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="135" pos:column="25">0<pos:position pos:line="135" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="135" pos:column="28">sizeof<argument_list pos:line="135" pos:column="34">(<argument><expr pos:line="135" pos:column="35">struct <name pos:line="135" pos:column="42">curl_schannel_ctxt<pos:position pos:line="135" pos:column="60"/></name></expr></argument>)<pos:position pos:line="135" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="135" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="63"/></expr_stmt>

  <expr_stmt><expr><name pos:line="137" pos:column="3">host_name<pos:position pos:line="137" pos:column="12"/></name> <operator pos:line="137" pos:column="13">=<pos:position pos:line="137" pos:column="14"/></operator> <call><name pos:line="137" pos:column="15">Curl_convert_UTF8_to_tchar<pos:position pos:line="137" pos:column="41"/></name><argument_list pos:line="137" pos:column="41">(<argument><expr><name><name pos:line="137" pos:column="42">conn<pos:position pos:line="137" pos:column="46"/></name><operator pos:line="137" pos:column="46">-&gt;<pos:position pos:line="137" pos:column="51"/></operator><name pos:line="137" pos:column="48">host<pos:position pos:line="137" pos:column="52"/></name><operator pos:line="137" pos:column="52">.<pos:position pos:line="137" pos:column="53"/></operator><name pos:line="137" pos:column="53">name<pos:position pos:line="137" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="137" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="59"/></expr_stmt>
  <if pos:line="138" pos:column="3">if<condition pos:line="138" pos:column="5">(<expr><operator pos:line="138" pos:column="6">!<pos:position pos:line="138" pos:column="7"/></operator><name pos:line="138" pos:column="7">host_name<pos:position pos:line="138" pos:column="16"/></name></expr>)<pos:position pos:line="138" pos:column="17"/></condition><then pos:line="138" pos:column="17">
    <block type="pseudo"><return pos:line="139" pos:column="5">return <expr><name pos:line="139" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="139" pos:column="31"/></name></expr>;<pos:position pos:line="139" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="141" pos:column="3">/* http://msdn.microsoft.com/en-us/library/windows/desktop/aa375924.aspx */</comment>

  <expr_stmt><expr><name pos:line="143" pos:column="3">sspi_status<pos:position pos:line="143" pos:column="14"/></name> <operator pos:line="143" pos:column="15">=<pos:position pos:line="143" pos:column="16"/></operator> <call><name><name pos:line="143" pos:column="17">s_pSecFn<pos:position pos:line="143" pos:column="25"/></name><operator pos:line="143" pos:column="25">-&gt;<pos:position pos:line="143" pos:column="30"/></operator><name pos:line="143" pos:column="27">InitializeSecurityContext<pos:position pos:line="143" pos:column="52"/></name></name><argument_list pos:line="143" pos:column="52">(
    <argument><expr><operator pos:line="144" pos:column="5">&amp;<pos:position pos:line="144" pos:column="10"/></operator><name><name pos:line="144" pos:column="6">connssl<pos:position pos:line="144" pos:column="13"/></name><operator pos:line="144" pos:column="13">-&gt;<pos:position pos:line="144" pos:column="18"/></operator><name pos:line="144" pos:column="15">cred<pos:position pos:line="144" pos:column="19"/></name><operator pos:line="144" pos:column="19">-&gt;<pos:position pos:line="144" pos:column="24"/></operator><name pos:line="144" pos:column="21">cred_handle<pos:position pos:line="144" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="34">NULL<pos:position pos:line="144" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="40">host_name<pos:position pos:line="144" pos:column="49"/></name></expr></argument>,
    <argument><expr><name><name pos:line="145" pos:column="5">connssl<pos:position pos:line="145" pos:column="12"/></name><operator pos:line="145" pos:column="12">-&gt;<pos:position pos:line="145" pos:column="17"/></operator><name pos:line="145" pos:column="14">req_flags<pos:position pos:line="145" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="25">0<pos:position pos:line="145" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="28">0<pos:position pos:line="145" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="145" pos:column="31">NULL<pos:position pos:line="145" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="37">0<pos:position pos:line="145" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="145" pos:column="40">&amp;<pos:position pos:line="145" pos:column="45"/></operator><name><name pos:line="145" pos:column="41">connssl<pos:position pos:line="145" pos:column="48"/></name><operator pos:line="145" pos:column="48">-&gt;<pos:position pos:line="145" pos:column="53"/></operator><name pos:line="145" pos:column="50">ctxt<pos:position pos:line="145" pos:column="54"/></name><operator pos:line="145" pos:column="54">-&gt;<pos:position pos:line="145" pos:column="59"/></operator><name pos:line="145" pos:column="56">ctxt_handle<pos:position pos:line="145" pos:column="67"/></name></name></expr></argument>,
    <argument><expr><operator pos:line="146" pos:column="5">&amp;<pos:position pos:line="146" pos:column="10"/></operator><name pos:line="146" pos:column="6">outbuf_desc<pos:position pos:line="146" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="146" pos:column="19">&amp;<pos:position pos:line="146" pos:column="24"/></operator><name><name pos:line="146" pos:column="20">connssl<pos:position pos:line="146" pos:column="27"/></name><operator pos:line="146" pos:column="27">-&gt;<pos:position pos:line="146" pos:column="32"/></operator><name pos:line="146" pos:column="29">ret_flags<pos:position pos:line="146" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="146" pos:column="40">&amp;<pos:position pos:line="146" pos:column="45"/></operator><name><name pos:line="146" pos:column="41">connssl<pos:position pos:line="146" pos:column="48"/></name><operator pos:line="146" pos:column="48">-&gt;<pos:position pos:line="146" pos:column="53"/></operator><name pos:line="146" pos:column="50">ctxt<pos:position pos:line="146" pos:column="54"/></name><operator pos:line="146" pos:column="54">-&gt;<pos:position pos:line="146" pos:column="59"/></operator><name pos:line="146" pos:column="56">time_stamp<pos:position pos:line="146" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="146" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="68"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="148" pos:column="3">Curl_unicodefree<pos:position pos:line="148" pos:column="19"/></name><argument_list pos:line="148" pos:column="19">(<argument><expr><name pos:line="148" pos:column="20">host_name<pos:position pos:line="148" pos:column="29"/></name></expr></argument>)<pos:position pos:line="148" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="31"/></expr_stmt>

  <if pos:line="150" pos:column="3">if<condition pos:line="150" pos:column="5">(<expr><name pos:line="150" pos:column="6">sspi_status<pos:position pos:line="150" pos:column="17"/></name> <operator pos:line="150" pos:column="18">!=<pos:position pos:line="150" pos:column="20"/></operator> <name pos:line="150" pos:column="21">SEC_I_CONTINUE_NEEDED<pos:position pos:line="150" pos:column="42"/></name></expr>)<pos:position pos:line="150" pos:column="43"/></condition><then pos:line="150" pos:column="43"> <block pos:line="150" pos:column="44">{
    <if pos:line="151" pos:column="5">if<condition pos:line="151" pos:column="7">(<expr><name pos:line="151" pos:column="8">sspi_status<pos:position pos:line="151" pos:column="19"/></name> <operator pos:line="151" pos:column="20">==<pos:position pos:line="151" pos:column="22"/></operator> <name pos:line="151" pos:column="23">SEC_E_WRONG_PRINCIPAL<pos:position pos:line="151" pos:column="44"/></name></expr>)<pos:position pos:line="151" pos:column="45"/></condition><then pos:line="151" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="152" pos:column="7">failf<pos:position pos:line="152" pos:column="12"/></name><argument_list pos:line="152" pos:column="12">(<argument><expr><name pos:line="152" pos:column="13">data<pos:position pos:line="152" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="19">"schannel: SNI or certificate check failed: %s"<pos:position pos:line="152" pos:column="66"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="153" pos:column="13">Curl_sspi_strerror<pos:position pos:line="153" pos:column="31"/></name><argument_list pos:line="153" pos:column="31">(<argument><expr><name pos:line="153" pos:column="32">conn<pos:position pos:line="153" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="38">sspi_status<pos:position pos:line="153" pos:column="49"/></name></expr></argument>)<pos:position pos:line="153" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="153" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="52"/></expr_stmt></block></then>
    <else pos:line="154" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="155" pos:column="7">failf<pos:position pos:line="155" pos:column="12"/></name><argument_list pos:line="155" pos:column="12">(<argument><expr><name pos:line="155" pos:column="13">data<pos:position pos:line="155" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="19">"schannel: initial InitializeSecurityContext failed: %s"<pos:position pos:line="155" pos:column="75"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="156" pos:column="13">Curl_sspi_strerror<pos:position pos:line="156" pos:column="31"/></name><argument_list pos:line="156" pos:column="31">(<argument><expr><name pos:line="156" pos:column="32">conn<pos:position pos:line="156" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="38">sspi_status<pos:position pos:line="156" pos:column="49"/></name></expr></argument>)<pos:position pos:line="156" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="156" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="52"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="157" pos:column="5">Curl_safefree<pos:position pos:line="157" pos:column="18"/></name><argument_list pos:line="157" pos:column="18">(<argument><expr><name><name pos:line="157" pos:column="19">connssl<pos:position pos:line="157" pos:column="26"/></name><operator pos:line="157" pos:column="26">-&gt;<pos:position pos:line="157" pos:column="31"/></operator><name pos:line="157" pos:column="28">ctxt<pos:position pos:line="157" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="34"/></expr_stmt>
    <return pos:line="158" pos:column="5">return <expr><name pos:line="158" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="158" pos:column="35"/></name></expr>;<pos:position pos:line="158" pos:column="36"/></return>
  }<pos:position pos:line="159" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="161" pos:column="3">infof<pos:position pos:line="161" pos:column="8"/></name><argument_list pos:line="161" pos:column="8">(<argument><expr><name pos:line="161" pos:column="9">data<pos:position pos:line="161" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="15">"schannel: sending initial handshake data: "<pos:position pos:line="161" pos:column="59"/></literal>
        <literal type="string" pos:line="162" pos:column="9">"sending %lu bytes...\n"<pos:position pos:line="162" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="162" pos:column="35">outbuf<pos:position pos:line="162" pos:column="41"/></name><operator pos:line="162" pos:column="41">.<pos:position pos:line="162" pos:column="42"/></operator><name pos:line="162" pos:column="42">cbBuffer<pos:position pos:line="162" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="162" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="164" pos:column="3">/* send initial handshake data which is now stored in output buffer */</comment>
  <expr_stmt><expr><name pos:line="165" pos:column="3">result<pos:position pos:line="165" pos:column="9"/></name> <operator pos:line="165" pos:column="10">=<pos:position pos:line="165" pos:column="11"/></operator> <call><name pos:line="165" pos:column="12">Curl_write_plain<pos:position pos:line="165" pos:column="28"/></name><argument_list pos:line="165" pos:column="28">(<argument><expr><name pos:line="165" pos:column="29">conn<pos:position pos:line="165" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="35">conn<pos:position pos:line="165" pos:column="39"/></name><operator pos:line="165" pos:column="39">-&gt;<pos:position pos:line="165" pos:column="44"/></operator><name pos:line="165" pos:column="41">sock<pos:position pos:line="165" pos:column="45"/></name><index pos:line="165" pos:column="45">[<expr><name pos:line="165" pos:column="46">sockindex<pos:position pos:line="165" pos:column="55"/></name></expr>]<pos:position pos:line="165" pos:column="56"/></index></name></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="58">outbuf<pos:position pos:line="165" pos:column="64"/></name><operator pos:line="165" pos:column="64">.<pos:position pos:line="165" pos:column="65"/></operator><name pos:line="165" pos:column="65">pvBuffer<pos:position pos:line="165" pos:column="73"/></name></name></expr></argument>,
                            <argument><expr><name><name pos:line="166" pos:column="29">outbuf<pos:position pos:line="166" pos:column="35"/></name><operator pos:line="166" pos:column="35">.<pos:position pos:line="166" pos:column="36"/></operator><name pos:line="166" pos:column="36">cbBuffer<pos:position pos:line="166" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="166" pos:column="46">&amp;<pos:position pos:line="166" pos:column="51"/></operator><name pos:line="166" pos:column="47">written<pos:position pos:line="166" pos:column="54"/></name></expr></argument>)<pos:position pos:line="166" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="167" pos:column="3">s_pSecFn<pos:position pos:line="167" pos:column="11"/></name><operator pos:line="167" pos:column="11">-&gt;<pos:position pos:line="167" pos:column="16"/></operator><name pos:line="167" pos:column="13">FreeContextBuffer<pos:position pos:line="167" pos:column="30"/></name></name><argument_list pos:line="167" pos:column="30">(<argument><expr><name><name pos:line="167" pos:column="31">outbuf<pos:position pos:line="167" pos:column="37"/></name><operator pos:line="167" pos:column="37">.<pos:position pos:line="167" pos:column="38"/></operator><name pos:line="167" pos:column="38">pvBuffer<pos:position pos:line="167" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="167" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="48"/></expr_stmt>
  <if pos:line="168" pos:column="3">if<condition pos:line="168" pos:column="5">(<expr><operator pos:line="168" pos:column="6">(<pos:position pos:line="168" pos:column="7"/></operator><name pos:line="168" pos:column="7">result<pos:position pos:line="168" pos:column="13"/></name> <operator pos:line="168" pos:column="14">!=<pos:position pos:line="168" pos:column="16"/></operator> <name pos:line="168" pos:column="17">CURLE_OK<pos:position pos:line="168" pos:column="25"/></name><operator pos:line="168" pos:column="25">)<pos:position pos:line="168" pos:column="26"/></operator> <operator pos:line="168" pos:column="27">||<pos:position pos:line="168" pos:column="29"/></operator> <operator pos:line="168" pos:column="30">(<pos:position pos:line="168" pos:column="31"/></operator><name><name pos:line="168" pos:column="31">outbuf<pos:position pos:line="168" pos:column="37"/></name><operator pos:line="168" pos:column="37">.<pos:position pos:line="168" pos:column="38"/></operator><name pos:line="168" pos:column="38">cbBuffer<pos:position pos:line="168" pos:column="46"/></name></name> <operator pos:line="168" pos:column="47">!=<pos:position pos:line="168" pos:column="49"/></operator> <operator pos:line="168" pos:column="50">(<pos:position pos:line="168" pos:column="51"/></operator><name pos:line="168" pos:column="51">size_t<pos:position pos:line="168" pos:column="57"/></name><operator pos:line="168" pos:column="57">)<pos:position pos:line="168" pos:column="58"/></operator> <name pos:line="168" pos:column="59">written<pos:position pos:line="168" pos:column="66"/></name><operator pos:line="168" pos:column="66">)<pos:position pos:line="168" pos:column="67"/></operator></expr>)<pos:position pos:line="168" pos:column="68"/></condition><then pos:line="168" pos:column="68"> <block pos:line="168" pos:column="69">{
    <expr_stmt><expr><call><name pos:line="169" pos:column="5">failf<pos:position pos:line="169" pos:column="10"/></name><argument_list pos:line="169" pos:column="10">(<argument><expr><name pos:line="169" pos:column="11">data<pos:position pos:line="169" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="17">"schannel: failed to send initial handshake data: "<pos:position pos:line="169" pos:column="68"/></literal>
          <literal type="string" pos:line="170" pos:column="11">"sent %zd of %lu bytes"<pos:position pos:line="170" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="170" pos:column="36">written<pos:position pos:line="170" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="170" pos:column="45">outbuf<pos:position pos:line="170" pos:column="51"/></name><operator pos:line="170" pos:column="51">.<pos:position pos:line="170" pos:column="52"/></operator><name pos:line="170" pos:column="52">cbBuffer<pos:position pos:line="170" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="170" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="62"/></expr_stmt>
    <return pos:line="171" pos:column="5">return <expr><name pos:line="171" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="171" pos:column="35"/></name></expr>;<pos:position pos:line="171" pos:column="36"/></return>
  }<pos:position pos:line="172" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="174" pos:column="3">infof<pos:position pos:line="174" pos:column="8"/></name><argument_list pos:line="174" pos:column="8">(<argument><expr><name pos:line="174" pos:column="9">data<pos:position pos:line="174" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="15">"schannel: sent initial handshake data: "<pos:position pos:line="174" pos:column="56"/></literal>
        <literal type="string" pos:line="175" pos:column="9">"sent %zd bytes\n"<pos:position pos:line="175" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="175" pos:column="29">written<pos:position pos:line="175" pos:column="36"/></name></expr></argument>)<pos:position pos:line="175" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="38"/></expr_stmt>

  <comment type="block" pos:line="177" pos:column="3">/* continue to second handshake step */</comment>
  <expr_stmt><expr><name><name pos:line="178" pos:column="3">connssl<pos:position pos:line="178" pos:column="10"/></name><operator pos:line="178" pos:column="10">-&gt;<pos:position pos:line="178" pos:column="15"/></operator><name pos:line="178" pos:column="12">connecting_state<pos:position pos:line="178" pos:column="28"/></name></name> <operator pos:line="178" pos:column="29">=<pos:position pos:line="178" pos:column="30"/></operator> <name pos:line="178" pos:column="31">ssl_connect_2<pos:position pos:line="178" pos:column="44"/></name></expr>;<pos:position pos:line="178" pos:column="45"/></expr_stmt>

  <return pos:line="180" pos:column="3">return <expr><name pos:line="180" pos:column="10">CURLE_OK<pos:position pos:line="180" pos:column="18"/></name></expr>;<pos:position pos:line="180" pos:column="19"/></return>
}<pos:position pos:line="181" pos:column="2"/></block></function></unit>

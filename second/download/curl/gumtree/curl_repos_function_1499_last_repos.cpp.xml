<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1499_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_init_do<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">Curl_easy<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">data<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">connectdata<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">conn<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SingleRequest<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">k<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><operator pos:line="3" pos:column="29">&amp;<pos:position pos:line="3" pos:column="34"/></operator><name><name pos:line="3" pos:column="30">data<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">-&gt;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="36">req<pos:position pos:line="3" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>

  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name pos:line="5" pos:column="6">conn<pos:position pos:line="5" pos:column="10"/></name></expr>)<pos:position pos:line="5" pos:column="11"/></condition><then pos:line="5" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="6" pos:column="5">conn<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">bits<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">.<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">do_more<pos:position pos:line="6" pos:column="23"/></name></name> <operator pos:line="6" pos:column="24">=<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="26">FALSE<pos:position pos:line="6" pos:column="31"/></name></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt></block></then></if> <comment type="block" pos:line="6" pos:column="33">/* by default there's no curl_do_more() to
                                 * use */</comment>

  <expr_stmt><expr><name><name pos:line="9" pos:column="3">data<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">state<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">.<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">done<pos:position pos:line="9" pos:column="19"/></name></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">FALSE<pos:position pos:line="9" pos:column="27"/></name></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt> <comment type="block" pos:line="9" pos:column="29">/* *_done() is not called yet */</comment>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">data<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">state<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">expect100header<pos:position pos:line="10" pos:column="30"/></name></name> <operator pos:line="10" pos:column="31">=<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="33">FALSE<pos:position pos:line="10" pos:column="38"/></name></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name><name pos:line="12" pos:column="6">data<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">set<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">.<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">opt_no_body<pos:position pos:line="12" pos:column="27"/></name></name></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28">
    <comment type="block" pos:line="13" pos:column="5">/* in HTTP lingo, no body means using the HEAD request... */</comment>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="5">data<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">set<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">.<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">httpreq<pos:position pos:line="14" pos:column="22"/></name></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">HTTPREQ_HEAD<pos:position pos:line="14" pos:column="37"/></name></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt></block></then>
  <elseif pos:line="15" pos:column="3">else <if pos:line="15" pos:column="8">if<condition pos:line="15" pos:column="10">(<expr><name pos:line="15" pos:column="11">HTTPREQ_HEAD<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">==<pos:position pos:line="15" pos:column="26"/></operator> <name><name pos:line="15" pos:column="27">data<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">set<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">.<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="37">httpreq<pos:position pos:line="15" pos:column="44"/></name></name></expr>)<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45">
    <comment type="block" pos:line="16" pos:column="5">/* ... but if unset there really is no perfect method that is the
       "opposite" of HEAD but in reality most people probably think GET
       then. The important thing is that we can't let it remain HEAD if the
       opt_no_body is set FALSE since then we'll behave wrong when getting
       HTTP. */</comment>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="5">data<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">-&gt;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="11">set<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">.<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">httpreq<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">HTTPREQ_GET<pos:position pos:line="21" pos:column="36"/></name></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt></block></then></if></elseif></if>

  <expr_stmt><expr><name><name pos:line="23" pos:column="3">k<pos:position pos:line="23" pos:column="4"/></name><operator pos:line="23" pos:column="4">-&gt;<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="6">start<pos:position pos:line="23" pos:column="11"/></name></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">Curl_tvnow<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">()<pos:position pos:line="23" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt> <comment type="block" pos:line="23" pos:column="28">/* start time */</comment>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">k<pos:position pos:line="24" pos:column="4"/></name><operator pos:line="24" pos:column="4">-&gt;<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="6">now<pos:position pos:line="24" pos:column="9"/></name></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <name><name pos:line="24" pos:column="12">k<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">start<pos:position pos:line="24" pos:column="20"/></name></name></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>   <comment type="block" pos:line="24" pos:column="24">/* current time is now */</comment>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">k<pos:position pos:line="25" pos:column="4"/></name><operator pos:line="25" pos:column="4">-&gt;<pos:position pos:line="25" pos:column="9"/></operator><name pos:line="25" pos:column="6">header<pos:position pos:line="25" pos:column="12"/></name></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <name pos:line="25" pos:column="15">TRUE<pos:position pos:line="25" pos:column="19"/></name></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt> <comment type="block" pos:line="25" pos:column="21">/* assume header */</comment>

  <expr_stmt><expr><name><name pos:line="27" pos:column="3">k<pos:position pos:line="27" pos:column="4"/></name><operator pos:line="27" pos:column="4">-&gt;<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="6">bytecount<pos:position pos:line="27" pos:column="15"/></name></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="29" pos:column="3">k<pos:position pos:line="29" pos:column="4"/></name><operator pos:line="29" pos:column="4">-&gt;<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="6">buf<pos:position pos:line="29" pos:column="9"/></name></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <name><name pos:line="29" pos:column="12">data<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">state<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">.<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">buffer<pos:position pos:line="29" pos:column="30"/></name></name></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">k<pos:position pos:line="30" pos:column="4"/></name><operator pos:line="30" pos:column="4">-&gt;<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="6">hbufp<pos:position pos:line="30" pos:column="11"/></name></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <name><name pos:line="30" pos:column="14">data<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">-&gt;<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="20">state<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">.<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="26">headerbuff<pos:position pos:line="30" pos:column="36"/></name></name></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">k<pos:position pos:line="31" pos:column="4"/></name><operator pos:line="31" pos:column="4">-&gt;<pos:position pos:line="31" pos:column="9"/></operator><name pos:line="31" pos:column="6">ignorebody<pos:position pos:line="31" pos:column="16"/></name></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">FALSE<pos:position pos:line="31" pos:column="24"/></name></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">Curl_speedinit<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><name pos:line="33" pos:column="18">data<pos:position pos:line="33" pos:column="22"/></name></expr></argument>)<pos:position pos:line="33" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="35" pos:column="3">Curl_pgrsSetUploadCounter<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><name pos:line="35" pos:column="29">data<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="35">0<pos:position pos:line="35" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">Curl_pgrsSetDownloadCounter<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">data<pos:position pos:line="36" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="37">0<pos:position pos:line="36" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>

  <return pos:line="38" pos:column="3">return <expr><name pos:line="38" pos:column="10">CURLE_OK<pos:position pos:line="38" pos:column="18"/></name></expr>;<pos:position pos:line="38" pos:column="19"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

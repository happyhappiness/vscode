<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2353_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_auth_user_contains_domain<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">user<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">bool<pos:position pos:line="3" pos:column="7"/></name></type> <name pos:line="3" pos:column="8">valid<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">FALSE<pos:position pos:line="3" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name pos:line="5" pos:column="6">user<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">&amp;&amp;<pos:position pos:line="5" pos:column="21"/></operator> <operator pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">user<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20"> <block pos:line="5" pos:column="21">{
    <comment type="block" pos:line="6" pos:column="5">/* Check we have a domain name or UPN present */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">p<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><call><name pos:line="7" pos:column="15">strpbrk<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">user<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="29">"\\/@"<pos:position pos:line="7" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">valid<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <operator pos:line="9" pos:column="13">(<pos:position pos:line="9" pos:column="14"/></operator><ternary><condition><expr><name pos:line="9" pos:column="14">p<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">!=<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">NULL<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">&amp;&amp;<pos:position pos:line="9" pos:column="34"/></operator> <name pos:line="9" pos:column="27">p<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">&gt;<pos:position pos:line="9" pos:column="33"/></operator> <name pos:line="9" pos:column="31">user<pos:position pos:line="9" pos:column="35"/></name> <operator pos:line="9" pos:column="36">&amp;&amp;<pos:position pos:line="9" pos:column="46"/></operator> <name pos:line="9" pos:column="39">p<pos:position pos:line="9" pos:column="40"/></name> <operator pos:line="9" pos:column="41">&lt;<pos:position pos:line="9" pos:column="45"/></operator> <name pos:line="9" pos:column="43">user<pos:position pos:line="9" pos:column="47"/></name> <operator pos:line="9" pos:column="48">+<pos:position pos:line="9" pos:column="49"/></operator> <call><name pos:line="9" pos:column="50">strlen<pos:position pos:line="9" pos:column="56"/></name><argument_list pos:line="9" pos:column="56">(<argument><expr><name pos:line="9" pos:column="57">user<pos:position pos:line="9" pos:column="61"/></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call> <operator pos:line="9" pos:column="63">-<pos:position pos:line="9" pos:column="64"/></operator> <literal type="number" pos:line="9" pos:column="65">1<pos:position pos:line="9" pos:column="66"/></literal></expr> ?<pos:position pos:line="9" pos:column="68"/></condition><then pos:line="9" pos:column="68"> <expr><name pos:line="9" pos:column="69">TRUE<pos:position pos:line="9" pos:column="73"/></name></expr> <pos:position pos:line="9" pos:column="74"/></then><else pos:line="9" pos:column="74">:
                                                                    <expr><name pos:line="10" pos:column="69">FALSE<pos:position pos:line="10" pos:column="74"/></name></expr></else></ternary><operator pos:line="10" pos:column="74">)<pos:position pos:line="10" pos:column="75"/></operator></expr>;<pos:position pos:line="10" pos:column="76"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then>
<cpp:if pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">if<pos:position pos:line="12" pos:column="4"/></cpp:directive> <expr><call><name pos:line="12" pos:column="5">defined<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">HAVE_GSSAPI<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call> <operator pos:line="12" pos:column="26">||<pos:position pos:line="12" pos:column="28"/></operator> <call><name pos:line="12" pos:column="29">defined<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><name pos:line="12" pos:column="37">USE_WINDOWS_SSPI<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr></cpp:if>
  <else pos:line="13" pos:column="3">else
    <comment type="block" pos:line="14" pos:column="5">/* User and domain are obtained from the GSS-API credientials cache or the
       currently logged in user from Windows */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="5">valid<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">TRUE<pos:position pos:line="16" pos:column="17"/></name></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt></block></else></if>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="19" pos:column="3">return <expr><name pos:line="19" pos:column="10">valid<pos:position pos:line="19" pos:column="15"/></name></expr>;<pos:position pos:line="19" pos:column="16"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2017_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">file_upload<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">connectdata<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">conn<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">FILEPROTO<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">file<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name><name pos:line="3" pos:column="28">conn<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">data<pos:position pos:line="3" pos:column="38"/></name><operator pos:line="3" pos:column="38">-&gt;<pos:position pos:line="3" pos:column="43"/></operator><name pos:line="3" pos:column="40">req<pos:position pos:line="3" pos:column="43"/></name><operator pos:line="3" pos:column="43">.<pos:position pos:line="3" pos:column="44"/></operator><name pos:line="3" pos:column="44">protop<pos:position pos:line="3" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">dir<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><call><name pos:line="4" pos:column="21">strchr<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">(<argument><expr><name><name pos:line="4" pos:column="28">file<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">path<pos:position pos:line="4" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="40">DIRSEP<pos:position pos:line="4" pos:column="46"/></name></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">fd<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">mode<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">result<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">CURLE_OK<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">Curl_easy<pos:position pos:line="8" pos:column="19"/></name></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">data<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name><name pos:line="8" pos:column="28">conn<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">data<pos:position pos:line="8" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">buf<pos:position pos:line="9" pos:column="12"/></name> <init pos:line="9" pos:column="13">= <expr><name><name pos:line="9" pos:column="15">data<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">state<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">.<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">buffer<pos:position pos:line="9" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">nread<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">nwrite<pos:position pos:line="11" pos:column="16"/></name></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">curl_off_t<pos:position pos:line="12" pos:column="13"/></name></type> <name pos:line="12" pos:column="14">bytecount<pos:position pos:line="12" pos:column="23"/></name> <init pos:line="12" pos:column="24">= <expr><literal type="number" pos:line="12" pos:column="26">0<pos:position pos:line="12" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">struct_stat<pos:position pos:line="13" pos:column="14"/></name></type> <name pos:line="13" pos:column="15">file_stat<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="14" pos:column="3">const<pos:position pos:line="14" pos:column="8"/></specifier> <name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">buf2<pos:position pos:line="14" pos:column="19"/></name></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>

  <comment type="block" pos:line="16" pos:column="3">/*
   * Since FILE: doesn't do the full init, we need to provide some extra
   * assignments here.
   */</comment>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">conn<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">data<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">req<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">.<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">upload_fromhere<pos:position pos:line="20" pos:column="34"/></name></name> <operator pos:line="20" pos:column="35">=<pos:position pos:line="20" pos:column="36"/></operator> <name pos:line="20" pos:column="37">buf<pos:position pos:line="20" pos:column="40"/></name></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>

  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><operator pos:line="22" pos:column="6">!<pos:position pos:line="22" pos:column="7"/></operator><name pos:line="22" pos:column="7">dir<pos:position pos:line="22" pos:column="10"/></name></expr>)<pos:position pos:line="22" pos:column="11"/></condition><then pos:line="22" pos:column="11">
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">CURLE_FILE_COULDNT_READ_FILE<pos:position pos:line="23" pos:column="40"/></name></expr>;<pos:position pos:line="23" pos:column="41"/></return></block></then></if> <comment type="block" pos:line="23" pos:column="42">/* fix: better error code */</comment>

  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><operator pos:line="25" pos:column="6">!<pos:position pos:line="25" pos:column="7"/></operator><name><name pos:line="25" pos:column="7">dir<pos:position pos:line="25" pos:column="10"/></name><index pos:line="25" pos:column="10">[<expr><literal type="number" pos:line="25" pos:column="11">1<pos:position pos:line="25" pos:column="12"/></literal></expr>]<pos:position pos:line="25" pos:column="13"/></index></name></expr>)<pos:position pos:line="25" pos:column="14"/></condition><then pos:line="25" pos:column="14">
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">CURLE_FILE_COULDNT_READ_FILE<pos:position pos:line="26" pos:column="40"/></name></expr>;<pos:position pos:line="26" pos:column="41"/></return></block></then></if> <comment type="block" pos:line="26" pos:column="42">/* fix: better error code */</comment>

<cpp:ifdef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifdef<pos:position pos:line="28" pos:column="7"/></cpp:directive> <name pos:line="28" pos:column="8">O_BINARY<pos:position pos:line="28" pos:column="16"/></name></cpp:ifdef>
<cpp:define pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">define<pos:position pos:line="29" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="29" pos:column="9">MODE_DEFAULT<pos:position pos:line="29" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="29" pos:column="22">O_WRONLY|O_CREAT|O_BINARY<pos:position pos:line="29" pos:column="47"/></cpp:value></cpp:define>
<cpp:else pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">else<pos:position pos:line="30" pos:column="6"/></cpp:directive></cpp:else>
<cpp:define pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">define<pos:position pos:line="31" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="31" pos:column="9">MODE_DEFAULT<pos:position pos:line="31" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="31" pos:column="22">O_WRONLY|O_CREAT<pos:position pos:line="31" pos:column="38"/></cpp:value></cpp:define>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><name><name pos:line="34" pos:column="6">data<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">state<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">.<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">resume_from<pos:position pos:line="34" pos:column="29"/></name></name></expr>)<pos:position pos:line="34" pos:column="30"/></condition><then pos:line="34" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="5">mode<pos:position pos:line="35" pos:column="9"/></name> <operator pos:line="35" pos:column="10">=<pos:position pos:line="35" pos:column="11"/></operator> <name pos:line="35" pos:column="12">MODE_DEFAULT<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">|<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">O_APPEND<pos:position pos:line="35" pos:column="33"/></name></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt></block></then>
  <else pos:line="36" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="5">mode<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <name pos:line="37" pos:column="12">MODE_DEFAULT<pos:position pos:line="37" pos:column="24"/></name><operator pos:line="37" pos:column="24">|<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="25">O_TRUNC<pos:position pos:line="37" pos:column="32"/></name></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name pos:line="39" pos:column="3">fd<pos:position pos:line="39" pos:column="5"/></name> <operator pos:line="39" pos:column="6">=<pos:position pos:line="39" pos:column="7"/></operator> <call><name pos:line="39" pos:column="8">open<pos:position pos:line="39" pos:column="12"/></name><argument_list pos:line="39" pos:column="12">(<argument><expr><name><name pos:line="39" pos:column="13">file<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">-&gt;<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="19">path<pos:position pos:line="39" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="25">mode<pos:position pos:line="39" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="31">conn<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">-&gt;<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="37">data<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">-&gt;<pos:position pos:line="39" pos:column="46"/></operator><name pos:line="39" pos:column="43">set<pos:position pos:line="39" pos:column="46"/></name><operator pos:line="39" pos:column="46">.<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="47">new_file_perms<pos:position pos:line="39" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="63"/></expr_stmt>
  <if pos:line="40" pos:column="3">if<condition pos:line="40" pos:column="5">(<expr><name pos:line="40" pos:column="6">fd<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">&lt;<pos:position pos:line="40" pos:column="13"/></operator> <literal type="number" pos:line="40" pos:column="11">0<pos:position pos:line="40" pos:column="12"/></literal></expr>)<pos:position pos:line="40" pos:column="13"/></condition><then pos:line="40" pos:column="13"> <block pos:line="40" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">failf<pos:position pos:line="41" pos:column="10"/></name><argument_list pos:line="41" pos:column="10">(<argument><expr><name pos:line="41" pos:column="11">data<pos:position pos:line="41" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="17">"Can't open %s for writing"<pos:position pos:line="41" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="46">file<pos:position pos:line="41" pos:column="50"/></name><operator pos:line="41" pos:column="50">-&gt;<pos:position pos:line="41" pos:column="55"/></operator><name pos:line="41" pos:column="52">path<pos:position pos:line="41" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">CURLE_WRITE_ERROR<pos:position pos:line="42" pos:column="29"/></name></expr>;<pos:position pos:line="42" pos:column="30"/></return>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <if pos:line="45" pos:column="3">if<condition pos:line="45" pos:column="5">(<expr><operator pos:line="45" pos:column="6">-<pos:position pos:line="45" pos:column="7"/></operator><literal type="number" pos:line="45" pos:column="7">1<pos:position pos:line="45" pos:column="8"/></literal> <operator pos:line="45" pos:column="9">!=<pos:position pos:line="45" pos:column="11"/></operator> <name><name pos:line="45" pos:column="12">data<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">-&gt;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="18">state<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">.<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">infilesize<pos:position pos:line="45" pos:column="34"/></name></name></expr>)<pos:position pos:line="45" pos:column="35"/></condition><then pos:line="45" pos:column="35">
    <comment type="block" pos:line="46" pos:column="5">/* known size of data to "upload" */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="5">Curl_pgrsSetUploadSize<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">data<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="34">data<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">-&gt;<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="40">state<pos:position pos:line="47" pos:column="45"/></name><operator pos:line="47" pos:column="45">.<pos:position pos:line="47" pos:column="46"/></operator><name pos:line="47" pos:column="46">infilesize<pos:position pos:line="47" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="58"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="49" pos:column="3">/* treat the negative resume offset value as the case of "-" */</comment>
  <if pos:line="50" pos:column="3">if<condition pos:line="50" pos:column="5">(<expr><name><name pos:line="50" pos:column="6">data<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">state<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">.<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">resume_from<pos:position pos:line="50" pos:column="29"/></name></name> <operator pos:line="50" pos:column="30">&lt;<pos:position pos:line="50" pos:column="34"/></operator> <literal type="number" pos:line="50" pos:column="32">0<pos:position pos:line="50" pos:column="33"/></literal></expr>)<pos:position pos:line="50" pos:column="34"/></condition><then pos:line="50" pos:column="34"> <block pos:line="50" pos:column="35">{
    <if pos:line="51" pos:column="5">if<condition pos:line="51" pos:column="7">(<expr><call><name pos:line="51" pos:column="8">fstat<pos:position pos:line="51" pos:column="13"/></name><argument_list pos:line="51" pos:column="13">(<argument><expr><name pos:line="51" pos:column="14">fd<pos:position pos:line="51" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="18">&amp;<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="19">file_stat<pos:position pos:line="51" pos:column="28"/></name></expr></argument>)<pos:position pos:line="51" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="30"/></condition><then pos:line="51" pos:column="30"> <block pos:line="51" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">close<pos:position pos:line="52" pos:column="12"/></name><argument_list pos:line="52" pos:column="12">(<argument><expr><name pos:line="52" pos:column="13">fd<pos:position pos:line="52" pos:column="15"/></name></expr></argument>)<pos:position pos:line="52" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">failf<pos:position pos:line="53" pos:column="12"/></name><argument_list pos:line="53" pos:column="12">(<argument><expr><name pos:line="53" pos:column="13">data<pos:position pos:line="53" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="19">"Can't get the size of %s"<pos:position pos:line="53" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="47">file<pos:position pos:line="53" pos:column="51"/></name><operator pos:line="53" pos:column="51">-&gt;<pos:position pos:line="53" pos:column="56"/></operator><name pos:line="53" pos:column="53">path<pos:position pos:line="53" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="59"/></expr_stmt>
      <return pos:line="54" pos:column="7">return <expr><name pos:line="54" pos:column="14">CURLE_WRITE_ERROR<pos:position pos:line="54" pos:column="31"/></name></expr>;<pos:position pos:line="54" pos:column="32"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">data<pos:position pos:line="56" pos:column="9"/></name><operator pos:line="56" pos:column="9">-&gt;<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="11">state<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">.<pos:position pos:line="56" pos:column="17"/></operator><name pos:line="56" pos:column="17">resume_from<pos:position pos:line="56" pos:column="28"/></name></name> <operator pos:line="56" pos:column="29">=<pos:position pos:line="56" pos:column="30"/></operator> <operator pos:line="56" pos:column="31">(<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="32">curl_off_t<pos:position pos:line="56" pos:column="42"/></name><operator pos:line="56" pos:column="42">)<pos:position pos:line="56" pos:column="43"/></operator><name><name pos:line="56" pos:column="43">file_stat<pos:position pos:line="56" pos:column="52"/></name><operator pos:line="56" pos:column="52">.<pos:position pos:line="56" pos:column="53"/></operator><name pos:line="56" pos:column="53">st_size<pos:position pos:line="56" pos:column="60"/></name></name></expr>;<pos:position pos:line="56" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <while pos:line="59" pos:column="3">while<condition pos:line="59" pos:column="8">(<expr><operator pos:line="59" pos:column="9">!<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">result<pos:position pos:line="59" pos:column="16"/></name></expr>)<pos:position pos:line="59" pos:column="17"/></condition> <block pos:line="59" pos:column="18">{
    <decl_stmt><decl><type><name pos:line="60" pos:column="5">int<pos:position pos:line="60" pos:column="8"/></name></type> <name pos:line="60" pos:column="9">readcount<pos:position pos:line="60" pos:column="18"/></name></decl>;<pos:position pos:line="60" pos:column="19"/></decl_stmt>
    <expr_stmt><expr><name pos:line="61" pos:column="5">result<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <call><name pos:line="61" pos:column="14">Curl_fillreadbuffer<pos:position pos:line="61" pos:column="33"/></name><argument_list pos:line="61" pos:column="33">(<argument><expr><name pos:line="61" pos:column="34">conn<pos:position pos:line="61" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="40">(<pos:position pos:line="61" pos:column="41"/></operator><name pos:line="61" pos:column="41">int<pos:position pos:line="61" pos:column="44"/></name><operator pos:line="61" pos:column="44">)<pos:position pos:line="61" pos:column="45"/></operator><name><name pos:line="61" pos:column="45">data<pos:position pos:line="61" pos:column="49"/></name><operator pos:line="61" pos:column="49">-&gt;<pos:position pos:line="61" pos:column="54"/></operator><name pos:line="61" pos:column="51">set<pos:position pos:line="61" pos:column="54"/></name><operator pos:line="61" pos:column="54">.<pos:position pos:line="61" pos:column="55"/></operator><name pos:line="61" pos:column="55">buffer_size<pos:position pos:line="61" pos:column="66"/></name></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="68">&amp;<pos:position pos:line="61" pos:column="73"/></operator><name pos:line="61" pos:column="69">readcount<pos:position pos:line="61" pos:column="78"/></name></expr></argument>)<pos:position pos:line="61" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="80"/></expr_stmt>
    <if pos:line="62" pos:column="5">if<condition pos:line="62" pos:column="7">(<expr><name pos:line="62" pos:column="8">result<pos:position pos:line="62" pos:column="14"/></name></expr>)<pos:position pos:line="62" pos:column="15"/></condition><then pos:line="62" pos:column="15">
      <block type="pseudo"><break pos:line="63" pos:column="7">break;<pos:position pos:line="63" pos:column="13"/></break></block></then></if>

    <if pos:line="65" pos:column="5">if<condition pos:line="65" pos:column="7">(<expr><name pos:line="65" pos:column="8">readcount<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">&lt;=<pos:position pos:line="65" pos:column="23"/></operator> <literal type="number" pos:line="65" pos:column="21">0<pos:position pos:line="65" pos:column="22"/></literal></expr>)<pos:position pos:line="65" pos:column="23"/></condition><then pos:line="65" pos:column="23">  <comment type="block" pos:line="65" pos:column="25">/* fix questionable compare error. curlvms */</comment>
      <block type="pseudo"><break pos:line="66" pos:column="7">break;<pos:position pos:line="66" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="68" pos:column="5">nread<pos:position pos:line="68" pos:column="10"/></name> <operator pos:line="68" pos:column="11">=<pos:position pos:line="68" pos:column="12"/></operator> <operator pos:line="68" pos:column="13">(<pos:position pos:line="68" pos:column="14"/></operator><name pos:line="68" pos:column="14">size_t<pos:position pos:line="68" pos:column="20"/></name><operator pos:line="68" pos:column="20">)<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="21">readcount<pos:position pos:line="68" pos:column="30"/></name></expr>;<pos:position pos:line="68" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="70" pos:column="5">/*skip bytes before resume point*/</comment>
    <if pos:line="71" pos:column="5">if<condition pos:line="71" pos:column="7">(<expr><name><name pos:line="71" pos:column="8">data<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">-&gt;<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="14">state<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">.<pos:position pos:line="71" pos:column="20"/></operator><name pos:line="71" pos:column="20">resume_from<pos:position pos:line="71" pos:column="31"/></name></name></expr>)<pos:position pos:line="71" pos:column="32"/></condition><then pos:line="71" pos:column="32"> <block pos:line="71" pos:column="33">{
      <if pos:line="72" pos:column="7">if<condition pos:line="72" pos:column="9">(<expr><operator pos:line="72" pos:column="10">(<pos:position pos:line="72" pos:column="11"/></operator><name pos:line="72" pos:column="11">curl_off_t<pos:position pos:line="72" pos:column="21"/></name><operator pos:line="72" pos:column="21">)<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="22">nread<pos:position pos:line="72" pos:column="27"/></name> <operator pos:line="72" pos:column="28">&lt;=<pos:position pos:line="72" pos:column="33"/></operator> <name><name pos:line="72" pos:column="31">data<pos:position pos:line="72" pos:column="35"/></name><operator pos:line="72" pos:column="35">-&gt;<pos:position pos:line="72" pos:column="40"/></operator><name pos:line="72" pos:column="37">state<pos:position pos:line="72" pos:column="42"/></name><operator pos:line="72" pos:column="42">.<pos:position pos:line="72" pos:column="43"/></operator><name pos:line="72" pos:column="43">resume_from<pos:position pos:line="72" pos:column="54"/></name></name></expr>)<pos:position pos:line="72" pos:column="55"/></condition><then pos:line="72" pos:column="55"> <block pos:line="72" pos:column="56">{
        <expr_stmt><expr><name><name pos:line="73" pos:column="9">data<pos:position pos:line="73" pos:column="13"/></name><operator pos:line="73" pos:column="13">-&gt;<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="15">state<pos:position pos:line="73" pos:column="20"/></name><operator pos:line="73" pos:column="20">.<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="21">resume_from<pos:position pos:line="73" pos:column="32"/></name></name> <operator pos:line="73" pos:column="33">-=<pos:position pos:line="73" pos:column="35"/></operator> <name pos:line="73" pos:column="36">nread<pos:position pos:line="73" pos:column="41"/></name></expr>;<pos:position pos:line="73" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="74" pos:column="9">nread<pos:position pos:line="74" pos:column="14"/></name> <operator pos:line="74" pos:column="15">=<pos:position pos:line="74" pos:column="16"/></operator> <literal type="number" pos:line="74" pos:column="17">0<pos:position pos:line="74" pos:column="18"/></literal></expr>;<pos:position pos:line="74" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="75" pos:column="9">buf2<pos:position pos:line="75" pos:column="13"/></name> <operator pos:line="75" pos:column="14">=<pos:position pos:line="75" pos:column="15"/></operator> <name pos:line="75" pos:column="16">buf<pos:position pos:line="75" pos:column="19"/></name></expr>;<pos:position pos:line="75" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="76" pos:column="8"/></block></then>
      <else pos:line="77" pos:column="7">else <block pos:line="77" pos:column="12">{
        <expr_stmt><expr><name pos:line="78" pos:column="9">buf2<pos:position pos:line="78" pos:column="13"/></name> <operator pos:line="78" pos:column="14">=<pos:position pos:line="78" pos:column="15"/></operator> <name pos:line="78" pos:column="16">buf<pos:position pos:line="78" pos:column="19"/></name> <operator pos:line="78" pos:column="20">+<pos:position pos:line="78" pos:column="21"/></operator> <name><name pos:line="78" pos:column="22">data<pos:position pos:line="78" pos:column="26"/></name><operator pos:line="78" pos:column="26">-&gt;<pos:position pos:line="78" pos:column="31"/></operator><name pos:line="78" pos:column="28">state<pos:position pos:line="78" pos:column="33"/></name><operator pos:line="78" pos:column="33">.<pos:position pos:line="78" pos:column="34"/></operator><name pos:line="78" pos:column="34">resume_from<pos:position pos:line="78" pos:column="45"/></name></name></expr>;<pos:position pos:line="78" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="79" pos:column="9">nread<pos:position pos:line="79" pos:column="14"/></name> <operator pos:line="79" pos:column="15">-=<pos:position pos:line="79" pos:column="17"/></operator> <operator pos:line="79" pos:column="18">(<pos:position pos:line="79" pos:column="19"/></operator><name pos:line="79" pos:column="19">size_t<pos:position pos:line="79" pos:column="25"/></name><operator pos:line="79" pos:column="25">)<pos:position pos:line="79" pos:column="26"/></operator><name><name pos:line="79" pos:column="26">data<pos:position pos:line="79" pos:column="30"/></name><operator pos:line="79" pos:column="30">-&gt;<pos:position pos:line="79" pos:column="35"/></operator><name pos:line="79" pos:column="32">state<pos:position pos:line="79" pos:column="37"/></name><operator pos:line="79" pos:column="37">.<pos:position pos:line="79" pos:column="38"/></operator><name pos:line="79" pos:column="38">resume_from<pos:position pos:line="79" pos:column="49"/></name></name></expr>;<pos:position pos:line="79" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="80" pos:column="9">data<pos:position pos:line="80" pos:column="13"/></name><operator pos:line="80" pos:column="13">-&gt;<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="15">state<pos:position pos:line="80" pos:column="20"/></name><operator pos:line="80" pos:column="20">.<pos:position pos:line="80" pos:column="21"/></operator><name pos:line="80" pos:column="21">resume_from<pos:position pos:line="80" pos:column="32"/></name></name> <operator pos:line="80" pos:column="33">=<pos:position pos:line="80" pos:column="34"/></operator> <literal type="number" pos:line="80" pos:column="35">0<pos:position pos:line="80" pos:column="36"/></literal></expr>;<pos:position pos:line="80" pos:column="37"/></expr_stmt>
      }<pos:position pos:line="81" pos:column="8"/></block></else></if>
    }<pos:position pos:line="82" pos:column="6"/></block></then>
    <else pos:line="83" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="7">buf2<pos:position pos:line="84" pos:column="11"/></name> <operator pos:line="84" pos:column="12">=<pos:position pos:line="84" pos:column="13"/></operator> <name pos:line="84" pos:column="14">buf<pos:position pos:line="84" pos:column="17"/></name></expr>;<pos:position pos:line="84" pos:column="18"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="86" pos:column="5">/* write the data to the target */</comment>
    <expr_stmt><expr><name pos:line="87" pos:column="5">nwrite<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">=<pos:position pos:line="87" pos:column="13"/></operator> <call><name pos:line="87" pos:column="14">write<pos:position pos:line="87" pos:column="19"/></name><argument_list pos:line="87" pos:column="19">(<argument><expr><name pos:line="87" pos:column="20">fd<pos:position pos:line="87" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="24">buf2<pos:position pos:line="87" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="30">nread<pos:position pos:line="87" pos:column="35"/></name></expr></argument>)<pos:position pos:line="87" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="37"/></expr_stmt>
    <if pos:line="88" pos:column="5">if<condition pos:line="88" pos:column="7">(<expr><name pos:line="88" pos:column="8">nwrite<pos:position pos:line="88" pos:column="14"/></name> <operator pos:line="88" pos:column="15">!=<pos:position pos:line="88" pos:column="17"/></operator> <name pos:line="88" pos:column="18">nread<pos:position pos:line="88" pos:column="23"/></name></expr>)<pos:position pos:line="88" pos:column="24"/></condition><then pos:line="88" pos:column="24"> <block pos:line="88" pos:column="25">{
      <expr_stmt><expr><name pos:line="89" pos:column="7">result<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">=<pos:position pos:line="89" pos:column="15"/></operator> <name pos:line="89" pos:column="16">CURLE_SEND_ERROR<pos:position pos:line="89" pos:column="32"/></name></expr>;<pos:position pos:line="89" pos:column="33"/></expr_stmt>
      <break pos:line="90" pos:column="7">break;<pos:position pos:line="90" pos:column="13"/></break>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="93" pos:column="5">bytecount<pos:position pos:line="93" pos:column="14"/></name> <operator pos:line="93" pos:column="15">+=<pos:position pos:line="93" pos:column="17"/></operator> <name pos:line="93" pos:column="18">nread<pos:position pos:line="93" pos:column="23"/></name></expr>;<pos:position pos:line="93" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="95" pos:column="5">Curl_pgrsSetUploadCounter<pos:position pos:line="95" pos:column="30"/></name><argument_list pos:line="95" pos:column="30">(<argument><expr><name pos:line="95" pos:column="31">data<pos:position pos:line="95" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="37">bytecount<pos:position pos:line="95" pos:column="46"/></name></expr></argument>)<pos:position pos:line="95" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="48"/></expr_stmt>

    <if pos:line="97" pos:column="5">if<condition pos:line="97" pos:column="7">(<expr><call><name pos:line="97" pos:column="8">Curl_pgrsUpdate<pos:position pos:line="97" pos:column="23"/></name><argument_list pos:line="97" pos:column="23">(<argument><expr><name pos:line="97" pos:column="24">conn<pos:position pos:line="97" pos:column="28"/></name></expr></argument>)<pos:position pos:line="97" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="30"/></condition><then pos:line="97" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="7">result<pos:position pos:line="98" pos:column="13"/></name> <operator pos:line="98" pos:column="14">=<pos:position pos:line="98" pos:column="15"/></operator> <name pos:line="98" pos:column="16">CURLE_ABORTED_BY_CALLBACK<pos:position pos:line="98" pos:column="41"/></name></expr>;<pos:position pos:line="98" pos:column="42"/></expr_stmt></block></then>
    <else pos:line="99" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="7">result<pos:position pos:line="100" pos:column="13"/></name> <operator pos:line="100" pos:column="14">=<pos:position pos:line="100" pos:column="15"/></operator> <call><name pos:line="100" pos:column="16">Curl_speedcheck<pos:position pos:line="100" pos:column="31"/></name><argument_list pos:line="100" pos:column="31">(<argument><expr><name pos:line="100" pos:column="32">data<pos:position pos:line="100" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="100" pos:column="38">Curl_tvnow<pos:position pos:line="100" pos:column="48"/></name><argument_list pos:line="100" pos:column="48">()<pos:position pos:line="100" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="100" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="52"/></expr_stmt></block></else></if>
  }<pos:position pos:line="101" pos:column="4"/></block></while>
  <if pos:line="102" pos:column="3">if<condition pos:line="102" pos:column="5">(<expr><operator pos:line="102" pos:column="6">!<pos:position pos:line="102" pos:column="7"/></operator><name pos:line="102" pos:column="7">result<pos:position pos:line="102" pos:column="13"/></name> <operator pos:line="102" pos:column="14">&amp;&amp;<pos:position pos:line="102" pos:column="24"/></operator> <call><name pos:line="102" pos:column="17">Curl_pgrsUpdate<pos:position pos:line="102" pos:column="32"/></name><argument_list pos:line="102" pos:column="32">(<argument><expr><name pos:line="102" pos:column="33">conn<pos:position pos:line="102" pos:column="37"/></name></expr></argument>)<pos:position pos:line="102" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="39"/></condition><then pos:line="102" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><name pos:line="103" pos:column="5">result<pos:position pos:line="103" pos:column="11"/></name> <operator pos:line="103" pos:column="12">=<pos:position pos:line="103" pos:column="13"/></operator> <name pos:line="103" pos:column="14">CURLE_ABORTED_BY_CALLBACK<pos:position pos:line="103" pos:column="39"/></name></expr>;<pos:position pos:line="103" pos:column="40"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="105" pos:column="3">close<pos:position pos:line="105" pos:column="8"/></name><argument_list pos:line="105" pos:column="8">(<argument><expr><name pos:line="105" pos:column="9">fd<pos:position pos:line="105" pos:column="11"/></name></expr></argument>)<pos:position pos:line="105" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="13"/></expr_stmt>

  <return pos:line="107" pos:column="3">return <expr><name pos:line="107" pos:column="10">result<pos:position pos:line="107" pos:column="16"/></name></expr>;<pos:position pos:line="107" pos:column="17"/></return>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

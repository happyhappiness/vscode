<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_246_curl-7.35.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">void<pos:position pos:line="1" pos:column="14"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="15"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLM<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">mcurl<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">still_running<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">1<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">timeval<pos:position pos:line="6" pos:column="17"/></name></name></type> <name pos:line="6" pos:column="18">mp_start<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">curl_global_init<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">CURL_GLOBAL_DEFAULT<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">curl<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">curl_easy_init<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">()<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">!<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">curl<pos:position pos:line="11" pos:column="11"/></name></expr>)<pos:position pos:line="11" pos:column="12"/></condition><then pos:line="11" pos:column="12">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><literal type="number" pos:line="12" pos:column="12">1<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">mcurl<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <call><name pos:line="14" pos:column="11">curl_multi_init<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">()<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">mcurl<pos:position pos:line="15" pos:column="12"/></name></expr>)<pos:position pos:line="15" pos:column="13"/></condition><then pos:line="15" pos:column="13">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><literal type="number" pos:line="16" pos:column="12">2<pos:position pos:line="16" pos:column="13"/></literal></expr>;<pos:position pos:line="16" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="18" pos:column="3">/* Set username and password */</comment>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">curl_easy_setopt<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><name pos:line="19" pos:column="20">curl<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="26">CURLOPT_USERNAME<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="44">"user"<pos:position pos:line="19" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">curl_easy_setopt<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">curl<pos:position pos:line="20" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="26">CURLOPT_PASSWORD<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="44">"secret"<pos:position pos:line="20" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* This will retreive message 1 from the user's mailbox */</comment>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">curl_easy_setopt<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">curl<pos:position pos:line="23" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="26">CURLOPT_URL<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="39">"pop3://pop.example.com/1"<pos:position pos:line="23" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* Tell the multi stack about our easy handle */</comment>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">curl_multi_add_handle<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">mcurl<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="32">curl<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>

  <comment type="block" pos:line="28" pos:column="3">/* Record the start time which we can use later */</comment>
  <expr_stmt><expr><name pos:line="29" pos:column="3">mp_start<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">tvnow<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">()<pos:position pos:line="29" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="31" pos:column="3">/* We start some action by calling perform right away */</comment>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">curl_multi_perform<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">mcurl<pos:position pos:line="32" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="29">&amp;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="30">still_running<pos:position pos:line="32" pos:column="43"/></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt>

  <while pos:line="34" pos:column="3">while<condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">still_running<pos:position pos:line="34" pos:column="22"/></name></expr>)<pos:position pos:line="34" pos:column="23"/></condition> <block pos:line="34" pos:column="24">{
    <decl_stmt><decl><type><name><name pos:line="35" pos:column="5">struct<pos:position pos:line="35" pos:column="11"/></name> <name pos:line="35" pos:column="12">timeval<pos:position pos:line="35" pos:column="19"/></name></name></type> <name pos:line="35" pos:column="20">timeout<pos:position pos:line="35" pos:column="27"/></name></decl>;<pos:position pos:line="35" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">fd_set<pos:position pos:line="36" pos:column="11"/></name></type> <name pos:line="36" pos:column="12">fdread<pos:position pos:line="36" pos:column="18"/></name></decl>;<pos:position pos:line="36" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">fd_set<pos:position pos:line="37" pos:column="11"/></name></type> <name pos:line="37" pos:column="12">fdwrite<pos:position pos:line="37" pos:column="19"/></name></decl>;<pos:position pos:line="37" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">fd_set<pos:position pos:line="38" pos:column="11"/></name></type> <name pos:line="38" pos:column="12">fdexcep<pos:position pos:line="38" pos:column="19"/></name></decl>;<pos:position pos:line="38" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">int<pos:position pos:line="39" pos:column="8"/></name></type> <name pos:line="39" pos:column="9">maxfd<pos:position pos:line="39" pos:column="14"/></name> <init pos:line="39" pos:column="15">= <expr><operator pos:line="39" pos:column="17">-<pos:position pos:line="39" pos:column="18"/></operator><literal type="number" pos:line="39" pos:column="18">1<pos:position pos:line="39" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">int<pos:position pos:line="40" pos:column="8"/></name></type> <name pos:line="40" pos:column="9">rc<pos:position pos:line="40" pos:column="11"/></name></decl>;<pos:position pos:line="40" pos:column="12"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="42" pos:column="5">long<pos:position pos:line="42" pos:column="9"/></name></type> <name pos:line="42" pos:column="10">curl_timeo<pos:position pos:line="42" pos:column="20"/></name> <init pos:line="42" pos:column="21">= <expr><operator pos:line="42" pos:column="23">-<pos:position pos:line="42" pos:column="24"/></operator><literal type="number" pos:line="42" pos:column="24">1<pos:position pos:line="42" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="42" pos:column="26"/></decl_stmt>

    <comment type="block" pos:line="44" pos:column="5">/* Initialise the file descriptors */</comment>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">FD_ZERO<pos:position pos:line="45" pos:column="12"/></name><argument_list pos:line="45" pos:column="12">(<argument><expr><operator pos:line="45" pos:column="13">&amp;<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="14">fdread<pos:position pos:line="45" pos:column="20"/></name></expr></argument>)<pos:position pos:line="45" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">FD_ZERO<pos:position pos:line="46" pos:column="12"/></name><argument_list pos:line="46" pos:column="12">(<argument><expr><operator pos:line="46" pos:column="13">&amp;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="14">fdwrite<pos:position pos:line="46" pos:column="21"/></name></expr></argument>)<pos:position pos:line="46" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">FD_ZERO<pos:position pos:line="47" pos:column="12"/></name><argument_list pos:line="47" pos:column="12">(<argument><expr><operator pos:line="47" pos:column="13">&amp;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="14">fdexcep<pos:position pos:line="47" pos:column="21"/></name></expr></argument>)<pos:position pos:line="47" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="49" pos:column="5">/* Set a suitable timeout to play around with */</comment>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">timeout<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">.<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="13">tv_sec<pos:position pos:line="50" pos:column="19"/></name></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <literal type="number" pos:line="50" pos:column="22">1<pos:position pos:line="50" pos:column="23"/></literal></expr>;<pos:position pos:line="50" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">timeout<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">.<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="13">tv_usec<pos:position pos:line="51" pos:column="20"/></name></name> <operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator> <literal type="number" pos:line="51" pos:column="23">0<pos:position pos:line="51" pos:column="24"/></literal></expr>;<pos:position pos:line="51" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="53" pos:column="5">curl_multi_timeout<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">mcurl<pos:position pos:line="53" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="31">&amp;<pos:position pos:line="53" pos:column="36"/></operator><name pos:line="53" pos:column="32">curl_timeo<pos:position pos:line="53" pos:column="42"/></name></expr></argument>)<pos:position pos:line="53" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt>
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><name pos:line="54" pos:column="8">curl_timeo<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">&gt;=<pos:position pos:line="54" pos:column="24"/></operator> <literal type="number" pos:line="54" pos:column="22">0<pos:position pos:line="54" pos:column="23"/></literal></expr>)<pos:position pos:line="54" pos:column="24"/></condition><then pos:line="54" pos:column="24"> <block pos:line="54" pos:column="25">{
      <expr_stmt><expr><name><name pos:line="55" pos:column="7">timeout<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">.<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="15">tv_sec<pos:position pos:line="55" pos:column="21"/></name></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <name pos:line="55" pos:column="24">curl_timeo<pos:position pos:line="55" pos:column="34"/></name> <operator pos:line="55" pos:column="35">/<pos:position pos:line="55" pos:column="36"/></operator> <literal type="number" pos:line="55" pos:column="37">1000<pos:position pos:line="55" pos:column="41"/></literal></expr>;<pos:position pos:line="55" pos:column="42"/></expr_stmt>
      <if pos:line="56" pos:column="7">if<condition pos:line="56" pos:column="9">(<expr><name><name pos:line="56" pos:column="10">timeout<pos:position pos:line="56" pos:column="17"/></name><operator pos:line="56" pos:column="17">.<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="18">tv_sec<pos:position pos:line="56" pos:column="24"/></name></name> <operator pos:line="56" pos:column="25">&gt;<pos:position pos:line="56" pos:column="29"/></operator> <literal type="number" pos:line="56" pos:column="27">1<pos:position pos:line="56" pos:column="28"/></literal></expr>)<pos:position pos:line="56" pos:column="29"/></condition><then pos:line="56" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="57" pos:column="9">timeout<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">.<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="17">tv_sec<pos:position pos:line="57" pos:column="23"/></name></name> <operator pos:line="57" pos:column="24">=<pos:position pos:line="57" pos:column="25"/></operator> <literal type="number" pos:line="57" pos:column="26">1<pos:position pos:line="57" pos:column="27"/></literal></expr>;<pos:position pos:line="57" pos:column="28"/></expr_stmt></block></then>
      <else pos:line="58" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="59" pos:column="9">timeout<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">.<pos:position pos:line="59" pos:column="17"/></operator><name pos:line="59" pos:column="17">tv_usec<pos:position pos:line="59" pos:column="24"/></name></name> <operator pos:line="59" pos:column="25">=<pos:position pos:line="59" pos:column="26"/></operator> <operator pos:line="59" pos:column="27">(<pos:position pos:line="59" pos:column="28"/></operator><name pos:line="59" pos:column="28">curl_timeo<pos:position pos:line="59" pos:column="38"/></name> <operator pos:line="59" pos:column="39">%<pos:position pos:line="59" pos:column="40"/></operator> <literal type="number" pos:line="59" pos:column="41">1000<pos:position pos:line="59" pos:column="45"/></literal><operator pos:line="59" pos:column="45">)<pos:position pos:line="59" pos:column="46"/></operator> <operator pos:line="59" pos:column="47">*<pos:position pos:line="59" pos:column="48"/></operator> <literal type="number" pos:line="59" pos:column="49">1000<pos:position pos:line="59" pos:column="53"/></literal></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt></block></else></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="62" pos:column="5">/* Get file descriptors from the transfers */</comment>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">curl_multi_fdset<pos:position pos:line="63" pos:column="21"/></name><argument_list pos:line="63" pos:column="21">(<argument><expr><name pos:line="63" pos:column="22">mcurl<pos:position pos:line="63" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="29">&amp;<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="30">fdread<pos:position pos:line="63" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="38">&amp;<pos:position pos:line="63" pos:column="43"/></operator><name pos:line="63" pos:column="39">fdwrite<pos:position pos:line="63" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="48">&amp;<pos:position pos:line="63" pos:column="53"/></operator><name pos:line="63" pos:column="49">fdexcep<pos:position pos:line="63" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="58">&amp;<pos:position pos:line="63" pos:column="63"/></operator><name pos:line="63" pos:column="59">maxfd<pos:position pos:line="63" pos:column="64"/></name></expr></argument>)<pos:position pos:line="63" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="66"/></expr_stmt>

    <comment type="block" pos:line="65" pos:column="5">/* In a real-world program you OF COURSE check the return code of the
       function calls. On success, the value of maxfd is guaranteed to be
       greater or equal than -1. We call select(maxfd + 1, ...), specially in
       case of (maxfd == -1), we call select(0, ...), which is basically equal
       to sleep. */</comment>
    <expr_stmt><expr><name pos:line="70" pos:column="5">rc<pos:position pos:line="70" pos:column="7"/></name> <operator pos:line="70" pos:column="8">=<pos:position pos:line="70" pos:column="9"/></operator> <call><name pos:line="70" pos:column="10">select<pos:position pos:line="70" pos:column="16"/></name><argument_list pos:line="70" pos:column="16">(<argument><expr><name pos:line="70" pos:column="17">maxfd<pos:position pos:line="70" pos:column="22"/></name> <operator pos:line="70" pos:column="23">+<pos:position pos:line="70" pos:column="24"/></operator> <literal type="number" pos:line="70" pos:column="25">1<pos:position pos:line="70" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="70" pos:column="28">&amp;<pos:position pos:line="70" pos:column="33"/></operator><name pos:line="70" pos:column="29">fdread<pos:position pos:line="70" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="37">&amp;<pos:position pos:line="70" pos:column="42"/></operator><name pos:line="70" pos:column="38">fdwrite<pos:position pos:line="70" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="47">&amp;<pos:position pos:line="70" pos:column="52"/></operator><name pos:line="70" pos:column="48">fdexcep<pos:position pos:line="70" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="57">&amp;<pos:position pos:line="70" pos:column="62"/></operator><name pos:line="70" pos:column="58">timeout<pos:position pos:line="70" pos:column="65"/></name></expr></argument>)<pos:position pos:line="70" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="67"/></expr_stmt>

    <if pos:line="72" pos:column="5">if<condition pos:line="72" pos:column="7">(<expr><call><name pos:line="72" pos:column="8">tvdiff<pos:position pos:line="72" pos:column="14"/></name><argument_list pos:line="72" pos:column="14">(<argument><expr><call><name pos:line="72" pos:column="15">tvnow<pos:position pos:line="72" pos:column="20"/></name><argument_list pos:line="72" pos:column="20">()<pos:position pos:line="72" pos:column="22"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="72" pos:column="24">mp_start<pos:position pos:line="72" pos:column="32"/></name></expr></argument>)<pos:position pos:line="72" pos:column="33"/></argument_list></call> <operator pos:line="72" pos:column="34">&gt;<pos:position pos:line="72" pos:column="38"/></operator> <name pos:line="72" pos:column="36">MULTI_PERFORM_HANG_TIMEOUT<pos:position pos:line="72" pos:column="62"/></name></expr>)<pos:position pos:line="72" pos:column="63"/></condition><then pos:line="72" pos:column="63"> <block pos:line="72" pos:column="64">{
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">fprintf<pos:position pos:line="73" pos:column="14"/></name><argument_list pos:line="73" pos:column="14">(<argument><expr><name pos:line="73" pos:column="15">stderr<pos:position pos:line="73" pos:column="21"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="74" pos:column="15">"ABORTING: Since it seems that we would have run forever.\n"<pos:position pos:line="74" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="77"/></expr_stmt>
      <break pos:line="75" pos:column="7">break;<pos:position pos:line="75" pos:column="13"/></break>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

    <switch pos:line="78" pos:column="5">switch<condition pos:line="78" pos:column="11">(<expr><name pos:line="78" pos:column="12">rc<pos:position pos:line="78" pos:column="14"/></name></expr>)<pos:position pos:line="78" pos:column="15"/></condition> <block pos:line="78" pos:column="16">{
    <case pos:line="79" pos:column="5">case <expr><operator pos:line="79" pos:column="10">-<pos:position pos:line="79" pos:column="11"/></operator><literal type="number" pos:line="79" pos:column="11">1<pos:position pos:line="79" pos:column="12"/></literal></expr>:<pos:position pos:line="79" pos:column="13"/></case>  <comment type="block" pos:line="79" pos:column="15">/* select error */</comment>
      <break pos:line="80" pos:column="7">break;<pos:position pos:line="80" pos:column="13"/></break>
    <case pos:line="81" pos:column="5">case <expr><literal type="number" pos:line="81" pos:column="10">0<pos:position pos:line="81" pos:column="11"/></literal></expr>:<pos:position pos:line="81" pos:column="12"/></case>   <comment type="block" pos:line="81" pos:column="15">/* timeout */</comment>
    <default pos:line="82" pos:column="5">default:<pos:position pos:line="82" pos:column="13"/></default>  <comment type="block" pos:line="82" pos:column="15">/* action */</comment>
      <expr_stmt><expr><call><name pos:line="83" pos:column="7">curl_multi_perform<pos:position pos:line="83" pos:column="25"/></name><argument_list pos:line="83" pos:column="25">(<argument><expr><name pos:line="83" pos:column="26">mcurl<pos:position pos:line="83" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="33">&amp;<pos:position pos:line="83" pos:column="38"/></operator><name pos:line="83" pos:column="34">still_running<pos:position pos:line="83" pos:column="47"/></name></expr></argument>)<pos:position pos:line="83" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="49"/></expr_stmt>
      <break pos:line="84" pos:column="7">break;<pos:position pos:line="84" pos:column="13"/></break>
    }<pos:position pos:line="85" pos:column="6"/></block></switch>
  }<pos:position pos:line="86" pos:column="4"/></block></while>

  <comment type="block" pos:line="88" pos:column="3">/* Always cleanup */</comment>
  <expr_stmt><expr><call><name pos:line="89" pos:column="3">curl_multi_remove_handle<pos:position pos:line="89" pos:column="27"/></name><argument_list pos:line="89" pos:column="27">(<argument><expr><name pos:line="89" pos:column="28">mcurl<pos:position pos:line="89" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="35">curl<pos:position pos:line="89" pos:column="39"/></name></expr></argument>)<pos:position pos:line="89" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="90" pos:column="3">curl_multi_cleanup<pos:position pos:line="90" pos:column="21"/></name><argument_list pos:line="90" pos:column="21">(<argument><expr><name pos:line="90" pos:column="22">mcurl<pos:position pos:line="90" pos:column="27"/></name></expr></argument>)<pos:position pos:line="90" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="91" pos:column="3">curl_easy_cleanup<pos:position pos:line="91" pos:column="20"/></name><argument_list pos:line="91" pos:column="20">(<argument><expr><name pos:line="91" pos:column="21">curl<pos:position pos:line="91" pos:column="25"/></name></expr></argument>)<pos:position pos:line="91" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="92" pos:column="3">curl_global_cleanup<pos:position pos:line="92" pos:column="22"/></name><argument_list pos:line="92" pos:column="22">()<pos:position pos:line="92" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="25"/></expr_stmt>

  <return pos:line="94" pos:column="3">return <expr><literal type="number" pos:line="94" pos:column="10">0<pos:position pos:line="94" pos:column="11"/></literal></expr>;<pos:position pos:line="94" pos:column="12"/></return>
}<pos:position pos:line="95" pos:column="2"/></block></function></unit>

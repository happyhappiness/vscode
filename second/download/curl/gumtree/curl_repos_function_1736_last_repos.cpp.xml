<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1736_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_resolver_is_resolved<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">connectdata<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">conn<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                   <parameter><decl><type><name><name pos:line="2" pos:column="36">struct<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">Curl_dns_entry<pos:position pos:line="2" pos:column="57"/></name></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier><modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">dns<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">ResolverResults<pos:position pos:line="5" pos:column="25"/></name></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">res<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><operator pos:line="5" pos:column="33">(<pos:position pos:line="5" pos:column="34"/></operator>struct <name pos:line="5" pos:column="41">ResolverResults<pos:position pos:line="5" pos:column="56"/></name> <operator pos:line="5" pos:column="57">*<pos:position pos:line="5" pos:column="58"/></operator><operator pos:line="5" pos:column="58">)<pos:position pos:line="5" pos:column="59"/></operator>
    <name><name pos:line="6" pos:column="5">conn<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">async<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">.<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">os_specific<pos:position pos:line="6" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">result<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">CURLE_OK<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="9" pos:column="3">*<pos:position pos:line="9" pos:column="4"/></operator><name pos:line="9" pos:column="4">dns<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <name pos:line="9" pos:column="10">NULL<pos:position pos:line="9" pos:column="14"/></name></expr>;<pos:position pos:line="9" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">waitperform<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">conn<pos:position pos:line="11" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="21">0<pos:position pos:line="11" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">res<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">&amp;&amp;<pos:position pos:line="13" pos:column="20"/></operator> <operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name><name pos:line="13" pos:column="14">res<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">num_pending<pos:position pos:line="13" pos:column="30"/></name></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
    <expr_stmt><expr><operator pos:line="14" pos:column="5">(<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">void<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">)<pos:position pos:line="14" pos:column="11"/></operator><call><name pos:line="14" pos:column="11">Curl_addrinfo_callback<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">conn<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="40">res<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">-&gt;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="45">last_status<pos:position pos:line="14" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="58">res<pos:position pos:line="14" pos:column="61"/></name><operator pos:line="14" pos:column="61">-&gt;<pos:position pos:line="14" pos:column="66"/></operator><name pos:line="14" pos:column="63">temp_ai<pos:position pos:line="14" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt>
    <comment type="block" pos:line="15" pos:column="5">/* temp_ai ownership is moved to the connection, so we need not free-up
       them */</comment>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">res<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">-&gt;<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="10">temp_ai<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">NULL<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><operator pos:line="18" pos:column="8">!<pos:position pos:line="18" pos:column="9"/></operator><name><name pos:line="18" pos:column="9">conn<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">async<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">.<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">dns<pos:position pos:line="18" pos:column="24"/></name></name></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25"> <block pos:line="18" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">failf<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">data<pos:position pos:line="19" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="19">"Could not resolve: %s (%s)"<pos:position pos:line="19" pos:column="47"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="20" pos:column="13">conn<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">async<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">hostname<pos:position pos:line="20" pos:column="33"/></name></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="35">ares_strerror<pos:position pos:line="20" pos:column="48"/></name><argument_list pos:line="20" pos:column="48">(<argument><expr><name><name pos:line="20" pos:column="49">conn<pos:position pos:line="20" pos:column="53"/></name><operator pos:line="20" pos:column="53">-&gt;<pos:position pos:line="20" pos:column="58"/></operator><name pos:line="20" pos:column="55">async<pos:position pos:line="20" pos:column="60"/></name><operator pos:line="20" pos:column="60">.<pos:position pos:line="20" pos:column="61"/></operator><name pos:line="20" pos:column="61">status<pos:position pos:line="20" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="70"/></expr_stmt>
      <expr_stmt><expr><name pos:line="21" pos:column="7">result<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <ternary><condition><expr><name><name pos:line="21" pos:column="16">conn<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">bits<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">.<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="27">proxy<pos:position pos:line="21" pos:column="32"/></name></name></expr>?<pos:position pos:line="21" pos:column="33"/></condition><then><expr><name pos:line="21" pos:column="33">CURLE_COULDNT_RESOLVE_PROXY<pos:position pos:line="21" pos:column="60"/></name></expr></then><else pos:line="21" pos:column="60">:
        <expr><name pos:line="22" pos:column="9">CURLE_COULDNT_RESOLVE_HOST<pos:position pos:line="22" pos:column="35"/></name></expr></else></ternary></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then>
    <else pos:line="24" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="25" pos:column="7">*<pos:position pos:line="25" pos:column="8"/></operator><name pos:line="25" pos:column="8">dns<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <name><name pos:line="25" pos:column="14">conn<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">async<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">.<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">dns<pos:position pos:line="25" pos:column="29"/></name></name></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">destroy_async_data<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><operator pos:line="27" pos:column="24">&amp;<pos:position pos:line="27" pos:column="29"/></operator><name><name pos:line="27" pos:column="25">conn<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">async<pos:position pos:line="27" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <return pos:line="30" pos:column="3">return <expr><name pos:line="30" pos:column="10">result<pos:position pos:line="30" pos:column="16"/></name></expr>;<pos:position pos:line="30" pos:column="17"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1451_curl-7.41.0.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">Curl_multi<pos:position pos:line="1" pos:column="18"/></name></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">Curl_multi_handle<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">hashsize<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="52">/* socket hash */</comment>
                                     <parameter><decl><type><name pos:line="2" pos:column="38">int<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">chashsize<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list> <comment type="block" pos:line="2" pos:column="53">/* connection hash */</comment>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_multi<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">multi<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><call><name pos:line="4" pos:column="30">calloc<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">(<argument><expr><literal type="number" pos:line="4" pos:column="37">1<pos:position pos:line="4" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="40">sizeof<argument_list pos:line="4" pos:column="46">(<argument><expr pos:line="4" pos:column="47">struct <name pos:line="4" pos:column="54">Curl_multi<pos:position pos:line="4" pos:column="64"/></name></expr></argument>)<pos:position pos:line="4" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="67"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><operator pos:line="6" pos:column="6">!<pos:position pos:line="6" pos:column="7"/></operator><name pos:line="6" pos:column="7">multi<pos:position pos:line="6" pos:column="12"/></name></expr>)<pos:position pos:line="6" pos:column="13"/></condition><then pos:line="6" pos:column="13">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">NULL<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="9" pos:column="3">multi<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">-&gt;<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="10">type<pos:position pos:line="9" pos:column="14"/></name></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">CURL_MULTI_HANDLE<pos:position pos:line="9" pos:column="34"/></name></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="11" pos:column="3">multi<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">-&gt;<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="10">hostcache<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <call><name pos:line="11" pos:column="22">Curl_mk_dnscache<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">()<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><operator pos:line="12" pos:column="6">!<pos:position pos:line="12" pos:column="7"/></operator><name><name pos:line="12" pos:column="7">multi<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">hostcache<pos:position pos:line="12" pos:column="23"/></name></name></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24">
    <block type="pseudo"><goto pos:line="13" pos:column="5">goto <name pos:line="13" pos:column="10">error<pos:position pos:line="13" pos:column="15"/></name>;<pos:position pos:line="13" pos:column="16"/></goto></block></then></if>

  <expr_stmt><expr><name><name pos:line="15" pos:column="3">multi<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">sockhash<pos:position pos:line="15" pos:column="18"/></name></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">sh_init<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">hashsize<pos:position pos:line="15" pos:column="37"/></name></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><operator pos:line="16" pos:column="6">!<pos:position pos:line="16" pos:column="7"/></operator><name><name pos:line="16" pos:column="7">multi<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">sockhash<pos:position pos:line="16" pos:column="22"/></name></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
    <block type="pseudo"><goto pos:line="17" pos:column="5">goto <name pos:line="17" pos:column="10">error<pos:position pos:line="17" pos:column="15"/></name>;<pos:position pos:line="17" pos:column="16"/></goto></block></then></if>

  <expr_stmt><expr><name><name pos:line="19" pos:column="3">multi<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">-&gt;<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="10">conn_cache<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <call><name pos:line="19" pos:column="23">Curl_conncache_init<pos:position pos:line="19" pos:column="42"/></name><argument_list pos:line="19" pos:column="42">(<argument><expr><name pos:line="19" pos:column="43">chashsize<pos:position pos:line="19" pos:column="52"/></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><operator pos:line="20" pos:column="6">!<pos:position pos:line="20" pos:column="7"/></operator><name><name pos:line="20" pos:column="7">multi<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">conn_cache<pos:position pos:line="20" pos:column="24"/></name></name></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25">
    <block type="pseudo"><goto pos:line="21" pos:column="5">goto <name pos:line="21" pos:column="10">error<pos:position pos:line="21" pos:column="15"/></name>;<pos:position pos:line="21" pos:column="16"/></goto></block></then></if>

  <expr_stmt><expr><name><name pos:line="23" pos:column="3">multi<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">-&gt;<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="10">msglist<pos:position pos:line="23" pos:column="17"/></name></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <call><name pos:line="23" pos:column="20">Curl_llist_alloc<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name pos:line="23" pos:column="37">multi_freeamsg<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><operator pos:line="24" pos:column="6">!<pos:position pos:line="24" pos:column="7"/></operator><name><name pos:line="24" pos:column="7">multi<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">msglist<pos:position pos:line="24" pos:column="21"/></name></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22">
    <block type="pseudo"><goto pos:line="25" pos:column="5">goto <name pos:line="25" pos:column="10">error<pos:position pos:line="25" pos:column="15"/></name>;<pos:position pos:line="25" pos:column="16"/></goto></block></then></if>

  <expr_stmt><expr><name><name pos:line="27" pos:column="3">multi<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">-&gt;<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="10">pending<pos:position pos:line="27" pos:column="17"/></name></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <call><name pos:line="27" pos:column="20">Curl_llist_alloc<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><name pos:line="27" pos:column="37">multi_freeamsg<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><operator pos:line="28" pos:column="6">!<pos:position pos:line="28" pos:column="7"/></operator><name><name pos:line="28" pos:column="7">multi<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">pending<pos:position pos:line="28" pos:column="21"/></name></name></expr>)<pos:position pos:line="28" pos:column="22"/></condition><then pos:line="28" pos:column="22">
    <block type="pseudo"><goto pos:line="29" pos:column="5">goto <name pos:line="29" pos:column="10">error<pos:position pos:line="29" pos:column="15"/></name>;<pos:position pos:line="29" pos:column="16"/></goto></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* allocate a new easy handle to use when closing cached connections */</comment>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">multi<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">-&gt;<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="10">closure_handle<pos:position pos:line="32" pos:column="24"/></name></name> <operator pos:line="32" pos:column="25">=<pos:position pos:line="32" pos:column="26"/></operator> <call><name pos:line="32" pos:column="27">curl_easy_init<pos:position pos:line="32" pos:column="41"/></name><argument_list pos:line="32" pos:column="41">()<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>
  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><operator pos:line="33" pos:column="6">!<pos:position pos:line="33" pos:column="7"/></operator><name><name pos:line="33" pos:column="7">multi<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">closure_handle<pos:position pos:line="33" pos:column="28"/></name></name></expr>)<pos:position pos:line="33" pos:column="29"/></condition><then pos:line="33" pos:column="29">
    <block type="pseudo"><goto pos:line="34" pos:column="5">goto <name pos:line="34" pos:column="10">error<pos:position pos:line="34" pos:column="15"/></name>;<pos:position pos:line="34" pos:column="16"/></goto></block></then></if>

  <expr_stmt><expr><name><name pos:line="36" pos:column="3">multi<pos:position pos:line="36" pos:column="8"/></name><operator pos:line="36" pos:column="8">-&gt;<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="10">closure_handle<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">-&gt;<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="26">multi<pos:position pos:line="36" pos:column="31"/></name></name> <operator pos:line="36" pos:column="32">=<pos:position pos:line="36" pos:column="33"/></operator> <name pos:line="36" pos:column="34">multi<pos:position pos:line="36" pos:column="39"/></name></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="37" pos:column="3">multi<pos:position pos:line="37" pos:column="8"/></name><operator pos:line="37" pos:column="8">-&gt;<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="10">closure_handle<pos:position pos:line="37" pos:column="24"/></name><operator pos:line="37" pos:column="24">-&gt;<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="26">state<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">.<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="32">conn_cache<pos:position pos:line="37" pos:column="42"/></name></name> <operator pos:line="37" pos:column="43">=<pos:position pos:line="37" pos:column="44"/></operator> <name><name pos:line="37" pos:column="45">multi<pos:position pos:line="37" pos:column="50"/></name><operator pos:line="37" pos:column="50">-&gt;<pos:position pos:line="37" pos:column="55"/></operator><name pos:line="37" pos:column="52">conn_cache<pos:position pos:line="37" pos:column="62"/></name></name></expr>;<pos:position pos:line="37" pos:column="63"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="39" pos:column="3">multi<pos:position pos:line="39" pos:column="8"/></name><operator pos:line="39" pos:column="8">-&gt;<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="10">max_pipeline_length<pos:position pos:line="39" pos:column="29"/></name></name> <operator pos:line="39" pos:column="30">=<pos:position pos:line="39" pos:column="31"/></operator> <literal type="number" pos:line="39" pos:column="32">5<pos:position pos:line="39" pos:column="33"/></literal></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>

  <comment type="block" pos:line="41" pos:column="3">/* -1 means it not set by user, use the default value */</comment>
  <expr_stmt><expr><name><name pos:line="42" pos:column="3">multi<pos:position pos:line="42" pos:column="8"/></name><operator pos:line="42" pos:column="8">-&gt;<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="10">maxconnects<pos:position pos:line="42" pos:column="21"/></name></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <operator pos:line="42" pos:column="24">-<pos:position pos:line="42" pos:column="25"/></operator><literal type="number" pos:line="42" pos:column="25">1<pos:position pos:line="42" pos:column="26"/></literal></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt>
  <return pos:line="43" pos:column="3">return <expr><operator pos:line="43" pos:column="10">(<pos:position pos:line="43" pos:column="11"/></operator><name pos:line="43" pos:column="11">CURLM<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">*<pos:position pos:line="43" pos:column="18"/></operator><operator pos:line="43" pos:column="18">)<pos:position pos:line="43" pos:column="19"/></operator> <name pos:line="43" pos:column="20">multi<pos:position pos:line="43" pos:column="25"/></name></expr>;<pos:position pos:line="43" pos:column="26"/></return>

  <label><name pos:line="45" pos:column="3">error<pos:position pos:line="45" pos:column="8"/></name>:<pos:position pos:line="45" pos:column="9"/></label>

  <expr_stmt><expr><call><name pos:line="47" pos:column="3">Curl_hash_destroy<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name><name pos:line="47" pos:column="21">multi<pos:position pos:line="47" pos:column="26"/></name><operator pos:line="47" pos:column="26">-&gt;<pos:position pos:line="47" pos:column="31"/></operator><name pos:line="47" pos:column="28">sockhash<pos:position pos:line="47" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="48" pos:column="3">multi<pos:position pos:line="48" pos:column="8"/></name><operator pos:line="48" pos:column="8">-&gt;<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="10">sockhash<pos:position pos:line="48" pos:column="18"/></name></name> <operator pos:line="48" pos:column="19">=<pos:position pos:line="48" pos:column="20"/></operator> <name pos:line="48" pos:column="21">NULL<pos:position pos:line="48" pos:column="25"/></name></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">Curl_hash_destroy<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><name><name pos:line="49" pos:column="21">multi<pos:position pos:line="49" pos:column="26"/></name><operator pos:line="49" pos:column="26">-&gt;<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="28">hostcache<pos:position pos:line="49" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="50" pos:column="3">multi<pos:position pos:line="50" pos:column="8"/></name><operator pos:line="50" pos:column="8">-&gt;<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="10">hostcache<pos:position pos:line="50" pos:column="19"/></name></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <name pos:line="50" pos:column="22">NULL<pos:position pos:line="50" pos:column="26"/></name></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">Curl_conncache_destroy<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><name><name pos:line="51" pos:column="26">multi<pos:position pos:line="51" pos:column="31"/></name><operator pos:line="51" pos:column="31">-&gt;<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="33">conn_cache<pos:position pos:line="51" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="52" pos:column="3">multi<pos:position pos:line="52" pos:column="8"/></name><operator pos:line="52" pos:column="8">-&gt;<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="10">conn_cache<pos:position pos:line="52" pos:column="20"/></name></name> <operator pos:line="52" pos:column="21">=<pos:position pos:line="52" pos:column="22"/></operator> <name pos:line="52" pos:column="23">NULL<pos:position pos:line="52" pos:column="27"/></name></expr>;<pos:position pos:line="52" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="53" pos:column="3">Curl_close<pos:position pos:line="53" pos:column="13"/></name><argument_list pos:line="53" pos:column="13">(<argument><expr><name><name pos:line="53" pos:column="14">multi<pos:position pos:line="53" pos:column="19"/></name><operator pos:line="53" pos:column="19">-&gt;<pos:position pos:line="53" pos:column="24"/></operator><name pos:line="53" pos:column="21">closure_handle<pos:position pos:line="53" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="54" pos:column="3">multi<pos:position pos:line="54" pos:column="8"/></name><operator pos:line="54" pos:column="8">-&gt;<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="10">closure_handle<pos:position pos:line="54" pos:column="24"/></name></name> <operator pos:line="54" pos:column="25">=<pos:position pos:line="54" pos:column="26"/></operator> <name pos:line="54" pos:column="27">NULL<pos:position pos:line="54" pos:column="31"/></name></expr>;<pos:position pos:line="54" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">Curl_llist_destroy<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">(<argument><expr><name><name pos:line="55" pos:column="22">multi<pos:position pos:line="55" pos:column="27"/></name><operator pos:line="55" pos:column="27">-&gt;<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="29">msglist<pos:position pos:line="55" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="38">NULL<pos:position pos:line="55" pos:column="42"/></name></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">Curl_llist_destroy<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name><name pos:line="56" pos:column="22">multi<pos:position pos:line="56" pos:column="27"/></name><operator pos:line="56" pos:column="27">-&gt;<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="29">pending<pos:position pos:line="56" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="38">NULL<pos:position pos:line="56" pos:column="42"/></name></expr></argument>)<pos:position pos:line="56" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="58" pos:column="3">free<pos:position pos:line="58" pos:column="7"/></name><argument_list pos:line="58" pos:column="7">(<argument><expr><name pos:line="58" pos:column="8">multi<pos:position pos:line="58" pos:column="13"/></name></expr></argument>)<pos:position pos:line="58" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="15"/></expr_stmt>
  <return pos:line="59" pos:column="3">return <expr><name pos:line="59" pos:column="10">NULL<pos:position pos:line="59" pos:column="14"/></name></expr>;<pos:position pos:line="59" pos:column="15"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

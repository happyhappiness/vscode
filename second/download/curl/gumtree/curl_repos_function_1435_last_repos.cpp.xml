<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1435_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">header_append<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">Curl_easy<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">data<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                              <parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">SingleRequest<pos:position pos:line="2" pos:column="51"/></name></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">k<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="3" pos:column="31">size_t<pos:position pos:line="3" pos:column="37"/></name></type> <name pos:line="3" pos:column="38">length<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="45"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name><name pos:line="5" pos:column="6">k<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">-&gt;<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="9">hbuflen<pos:position pos:line="5" pos:column="16"/></name></name> <operator pos:line="5" pos:column="17">+<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">length<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">&gt;=<pos:position pos:line="5" pos:column="31"/></operator> <name><name pos:line="5" pos:column="29">data<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">state<pos:position pos:line="5" pos:column="40"/></name><operator pos:line="5" pos:column="40">.<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="41">headersize<pos:position pos:line="5" pos:column="51"/></name></name></expr>)<pos:position pos:line="5" pos:column="52"/></condition><then pos:line="5" pos:column="52"> <block pos:line="5" pos:column="53">{
    <comment type="block" pos:line="6" pos:column="5">/* We enlarge the header buffer as it is too small */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">newbuff<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">size_t<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">hbufp_index<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">size_t<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">newsize<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

    <if pos:line="11" pos:column="5">if<condition pos:line="11" pos:column="7">(<expr><name><name pos:line="11" pos:column="8">k<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">-&gt;<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="11">hbuflen<pos:position pos:line="11" pos:column="18"/></name></name> <operator pos:line="11" pos:column="19">+<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">length<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">&gt;<pos:position pos:line="11" pos:column="32"/></operator> <name pos:line="11" pos:column="30">CURL_MAX_HTTP_HEADER<pos:position pos:line="11" pos:column="50"/></name></expr>)<pos:position pos:line="11" pos:column="51"/></condition><then pos:line="11" pos:column="51"> <block pos:line="11" pos:column="52">{
      <comment type="block" pos:line="12" pos:column="7">/* The reason to have a max limit for this is to avoid the risk of a bad
         server feeding libcurl with a never-ending header that will cause
         reallocs infinitely */</comment>
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">failf<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">data<pos:position pos:line="15" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="19">"Avoided giant realloc for header (max is %d)!"<pos:position pos:line="15" pos:column="66"/></literal></expr></argument>,
            <argument><expr><name pos:line="16" pos:column="13">CURL_MAX_HTTP_HEADER<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
      <return pos:line="17" pos:column="7">return <expr><name pos:line="17" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="17" pos:column="33"/></name></expr>;<pos:position pos:line="17" pos:column="34"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">newsize<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">CURLMAX<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><operator pos:line="20" pos:column="23">(<pos:position pos:line="20" pos:column="24"/></operator><name><name pos:line="20" pos:column="24">k<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">-&gt;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="27">hbuflen<pos:position pos:line="20" pos:column="34"/></name></name> <operator pos:line="20" pos:column="35">+<pos:position pos:line="20" pos:column="36"/></operator> <name pos:line="20" pos:column="37">length<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">)<pos:position pos:line="20" pos:column="44"/></operator> <operator pos:line="20" pos:column="45">*<pos:position pos:line="20" pos:column="46"/></operator> <literal type="number" pos:line="20" pos:column="47">3<pos:position pos:line="20" pos:column="48"/></literal> <operator pos:line="20" pos:column="49">/<pos:position pos:line="20" pos:column="50"/></operator> <literal type="number" pos:line="20" pos:column="51">2<pos:position pos:line="20" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="54">data<pos:position pos:line="20" pos:column="58"/></name><operator pos:line="20" pos:column="58">-&gt;<pos:position pos:line="20" pos:column="63"/></operator><name pos:line="20" pos:column="60">state<pos:position pos:line="20" pos:column="65"/></name><operator pos:line="20" pos:column="65">.<pos:position pos:line="20" pos:column="66"/></operator><name pos:line="20" pos:column="66">headersize<pos:position pos:line="20" pos:column="76"/></name></name><operator pos:line="20" pos:column="76">*<pos:position pos:line="20" pos:column="77"/></operator><literal type="number" pos:line="20" pos:column="77">2<pos:position pos:line="20" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">hbufp_index<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name><name pos:line="21" pos:column="19">k<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">hbufp<pos:position pos:line="21" pos:column="27"/></name></name> <operator pos:line="21" pos:column="28">-<pos:position pos:line="21" pos:column="29"/></operator> <name><name pos:line="21" pos:column="30">data<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">state<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">.<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="42">headerbuff<pos:position pos:line="21" pos:column="52"/></name></name></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">newbuff<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">realloc<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name><name pos:line="22" pos:column="23">data<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">-&gt;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="29">state<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">.<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="35">headerbuff<pos:position pos:line="22" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="47">newsize<pos:position pos:line="22" pos:column="54"/></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt>
    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">(<expr><operator pos:line="23" pos:column="8">!<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="9">newbuff<pos:position pos:line="23" pos:column="16"/></name></expr>)<pos:position pos:line="23" pos:column="17"/></condition><then pos:line="23" pos:column="17"> <block pos:line="23" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">failf<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">data<pos:position pos:line="24" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="19">"Failed to alloc memory for big header!"<pos:position pos:line="24" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>
      <return pos:line="25" pos:column="7">return <expr><name pos:line="25" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="25" pos:column="33"/></name></expr>;<pos:position pos:line="25" pos:column="34"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">data<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">-&gt;<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="11">state<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">.<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">headersize<pos:position pos:line="27" pos:column="27"/></name></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <name pos:line="27" pos:column="30">newsize<pos:position pos:line="27" pos:column="37"/></name></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">data<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">-&gt;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="11">state<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">.<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">headerbuff<pos:position pos:line="28" pos:column="27"/></name></name> <operator pos:line="28" pos:column="28">=<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="30">newbuff<pos:position pos:line="28" pos:column="37"/></name></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">k<pos:position pos:line="29" pos:column="6"/></name><operator pos:line="29" pos:column="6">-&gt;<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="8">hbufp<pos:position pos:line="29" pos:column="13"/></name></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <name><name pos:line="29" pos:column="16">data<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">state<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">.<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="28">headerbuff<pos:position pos:line="29" pos:column="38"/></name></name> <operator pos:line="29" pos:column="39">+<pos:position pos:line="29" pos:column="40"/></operator> <name pos:line="29" pos:column="41">hbufp_index<pos:position pos:line="29" pos:column="52"/></name></expr>;<pos:position pos:line="29" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">memcpy<pos:position pos:line="31" pos:column="9"/></name><argument_list pos:line="31" pos:column="9">(<argument><expr><name><name pos:line="31" pos:column="10">k<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">hbufp<pos:position pos:line="31" pos:column="18"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="20">k<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">str_start<pos:position pos:line="31" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">length<pos:position pos:line="31" pos:column="40"/></name></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">k<pos:position pos:line="32" pos:column="4"/></name><operator pos:line="32" pos:column="4">-&gt;<pos:position pos:line="32" pos:column="9"/></operator><name pos:line="32" pos:column="6">hbufp<pos:position pos:line="32" pos:column="11"/></name></name> <operator pos:line="32" pos:column="12">+=<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">length<pos:position pos:line="32" pos:column="21"/></name></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">k<pos:position pos:line="33" pos:column="4"/></name><operator pos:line="33" pos:column="4">-&gt;<pos:position pos:line="33" pos:column="9"/></operator><name pos:line="33" pos:column="6">hbuflen<pos:position pos:line="33" pos:column="13"/></name></name> <operator pos:line="33" pos:column="14">+=<pos:position pos:line="33" pos:column="16"/></operator> <name pos:line="33" pos:column="17">length<pos:position pos:line="33" pos:column="23"/></name></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="34" pos:column="3">*<pos:position pos:line="34" pos:column="4"/></operator><name><name pos:line="34" pos:column="4">k<pos:position pos:line="34" pos:column="5"/></name><operator pos:line="34" pos:column="5">-&gt;<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="7">hbufp<pos:position pos:line="34" pos:column="12"/></name></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <literal type="number" pos:line="34" pos:column="15">0<pos:position pos:line="34" pos:column="16"/></literal></expr>;<pos:position pos:line="34" pos:column="17"/></expr_stmt>

  <return pos:line="36" pos:column="3">return <expr><name pos:line="36" pos:column="10">CURLE_OK<pos:position pos:line="36" pos:column="18"/></name></expr>;<pos:position pos:line="36" pos:column="19"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_706.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">inet_pton4<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">char<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">src<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">unsigned<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">dst<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="4" pos:column="3">static<pos:position pos:line="4" pos:column="9"/></specifier> <type><specifier pos:line="4" pos:column="10">const<pos:position pos:line="4" pos:column="15"/></specifier> <name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name></type> <name><name pos:line="4" pos:column="21">digits<pos:position pos:line="4" pos:column="27"/></name><index pos:line="4" pos:column="27">[]<pos:position pos:line="4" pos:column="29"/></index></name> <init pos:line="4" pos:column="30">= <expr><literal type="string" pos:line="4" pos:column="32">"0123456789"<pos:position pos:line="4" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">saw_digit<pos:position pos:line="5" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="18">octets<pos:position pos:line="5" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="26">ch<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name></type> <name><name pos:line="6" pos:column="17">tmp<pos:position pos:line="6" pos:column="20"/></name><index pos:line="6" pos:column="20">[<expr><name pos:line="6" pos:column="21">INADDRSZ<pos:position pos:line="6" pos:column="29"/></name></expr>]<pos:position pos:line="6" pos:column="30"/></index></name></decl>, <modifier pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="33">tp<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">saw_digit<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <literal type="number" pos:line="8" pos:column="15">0<pos:position pos:line="8" pos:column="16"/></literal></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">octets<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name pos:line="10" pos:column="3">tp<pos:position pos:line="10" pos:column="5"/></name> <operator pos:line="10" pos:column="6">=<pos:position pos:line="10" pos:column="7"/></operator> <name pos:line="10" pos:column="8">tmp<pos:position pos:line="10" pos:column="11"/></name></expr>;<pos:position pos:line="10" pos:column="12"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="11" pos:column="3">*<pos:position pos:line="11" pos:column="4"/></operator><name pos:line="11" pos:column="4">tp<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <literal type="number" pos:line="11" pos:column="9">0<pos:position pos:line="11" pos:column="10"/></literal></expr>;<pos:position pos:line="11" pos:column="11"/></expr_stmt>
  <while pos:line="12" pos:column="3">while <condition pos:line="12" pos:column="9">(<expr><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">ch<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <operator pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">src<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">++<pos:position pos:line="12" pos:column="22"/></operator><operator pos:line="12" pos:column="22">)<pos:position pos:line="12" pos:column="23"/></operator> <operator pos:line="12" pos:column="24">!=<pos:position pos:line="12" pos:column="26"/></operator> <literal type="char" pos:line="12" pos:column="27">'\0'<pos:position pos:line="12" pos:column="31"/></literal></expr>)<pos:position pos:line="12" pos:column="32"/></condition> <block pos:line="12" pos:column="33">{
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">char<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">pch<pos:position pos:line="13" pos:column="20"/></name></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">pch<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">strchr<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">digits<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">ch<pos:position pos:line="15" pos:column="33"/></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></call><operator pos:line="15" pos:column="34">)<pos:position pos:line="15" pos:column="35"/></operator> <operator pos:line="15" pos:column="36">!=<pos:position pos:line="15" pos:column="38"/></operator> <name pos:line="15" pos:column="39">NULL<pos:position pos:line="15" pos:column="43"/></name></expr>)<pos:position pos:line="15" pos:column="44"/></condition><then pos:line="15" pos:column="44"> <block pos:line="15" pos:column="45">{
      <decl_stmt><decl><type><name pos:line="16" pos:column="7">u_int<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">val<pos:position pos:line="16" pos:column="16"/></name> <init pos:line="16" pos:column="17">= <expr><operator pos:line="16" pos:column="19">*<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">tp<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></operator> <literal type="number" pos:line="16" pos:column="25">10<pos:position pos:line="16" pos:column="27"/></literal> <operator pos:line="16" pos:column="28">+<pos:position pos:line="16" pos:column="29"/></operator> <call pos:line="16" pos:column="30">(<name pos:line="16" pos:column="31">u_int<pos:position pos:line="16" pos:column="36"/></name>)<argument_list pos:line="16" pos:column="37">(<argument><expr><name pos:line="16" pos:column="38">pch<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">-<pos:position pos:line="16" pos:column="43"/></operator> <name pos:line="16" pos:column="44">digits<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="52"/></decl_stmt>

      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><name pos:line="18" pos:column="11">val<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">&gt;<pos:position pos:line="18" pos:column="19"/></operator> <literal type="number" pos:line="18" pos:column="17">255<pos:position pos:line="18" pos:column="20"/></literal></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21">
        <block type="pseudo"><return pos:line="19" pos:column="9">return <expr><operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal><operator pos:line="19" pos:column="18">)<pos:position pos:line="19" pos:column="19"/></operator></expr>;<pos:position pos:line="19" pos:column="20"/></return></block></then></if>
      <expr_stmt><expr><operator pos:line="20" pos:column="7">*<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">tp<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <name pos:line="20" pos:column="13">val<pos:position pos:line="20" pos:column="16"/></name></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><operator pos:line="21" pos:column="11">!<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">saw_digit<pos:position pos:line="21" pos:column="22"/></name></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23"> <block pos:line="21" pos:column="24">{
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">++<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">octets<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">&gt;<pos:position pos:line="22" pos:column="26"/></operator> <literal type="number" pos:line="22" pos:column="24">4<pos:position pos:line="22" pos:column="25"/></literal></expr>)<pos:position pos:line="22" pos:column="26"/></condition><then pos:line="22" pos:column="26">
          <block type="pseudo"><return pos:line="23" pos:column="11">return <expr><operator pos:line="23" pos:column="18">(<pos:position pos:line="23" pos:column="19"/></operator><literal type="number" pos:line="23" pos:column="19">0<pos:position pos:line="23" pos:column="20"/></literal><operator pos:line="23" pos:column="20">)<pos:position pos:line="23" pos:column="21"/></operator></expr>;<pos:position pos:line="23" pos:column="22"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="24" pos:column="9">saw_digit<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <literal type="number" pos:line="24" pos:column="21">1<pos:position pos:line="24" pos:column="22"/></literal></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="25" pos:column="8"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then> <elseif pos:line="26" pos:column="7">else <if pos:line="26" pos:column="12">if <condition pos:line="26" pos:column="15">(<expr><name pos:line="26" pos:column="16">ch<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">==<pos:position pos:line="26" pos:column="21"/></operator> <literal type="char" pos:line="26" pos:column="22">'.'<pos:position pos:line="26" pos:column="25"/></literal> <operator pos:line="26" pos:column="26">&amp;&amp;<pos:position pos:line="26" pos:column="36"/></operator> <name pos:line="26" pos:column="29">saw_digit<pos:position pos:line="26" pos:column="38"/></name></expr>)<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39"> <block pos:line="26" pos:column="40">{
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><name pos:line="27" pos:column="11">octets<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">==<pos:position pos:line="27" pos:column="20"/></operator> <literal type="number" pos:line="27" pos:column="21">4<pos:position pos:line="27" pos:column="22"/></literal></expr>)<pos:position pos:line="27" pos:column="23"/></condition><then pos:line="27" pos:column="23">
        <block type="pseudo"><return pos:line="28" pos:column="9">return <expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><literal type="number" pos:line="28" pos:column="17">0<pos:position pos:line="28" pos:column="18"/></literal><operator pos:line="28" pos:column="18">)<pos:position pos:line="28" pos:column="19"/></operator></expr>;<pos:position pos:line="28" pos:column="20"/></return></block></then></if>
      <expr_stmt><expr><operator pos:line="29" pos:column="7">*<pos:position pos:line="29" pos:column="8"/></operator><operator pos:line="29" pos:column="8">++<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">tp<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <literal type="number" pos:line="29" pos:column="15">0<pos:position pos:line="29" pos:column="16"/></literal></expr>;<pos:position pos:line="29" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="30" pos:column="7">saw_digit<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <literal type="number" pos:line="30" pos:column="19">0<pos:position pos:line="30" pos:column="20"/></literal></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if></elseif> <else pos:line="31" pos:column="7">else
      <block type="pseudo"><return pos:line="32" pos:column="7">return <expr><operator pos:line="32" pos:column="14">(<pos:position pos:line="32" pos:column="15"/></operator><literal type="number" pos:line="32" pos:column="15">0<pos:position pos:line="32" pos:column="16"/></literal><operator pos:line="32" pos:column="16">)<pos:position pos:line="32" pos:column="17"/></operator></expr>;<pos:position pos:line="32" pos:column="18"/></return></block></else></if>
  }<pos:position pos:line="33" pos:column="4"/></block></while>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">octets<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">&lt;<pos:position pos:line="34" pos:column="18"/></operator> <literal type="number" pos:line="34" pos:column="16">4<pos:position pos:line="34" pos:column="17"/></literal></expr>)<pos:position pos:line="34" pos:column="18"/></condition><then pos:line="34" pos:column="18">
    <block type="pseudo"><return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">(<pos:position pos:line="35" pos:column="13"/></operator><literal type="number" pos:line="35" pos:column="13">0<pos:position pos:line="35" pos:column="14"/></literal><operator pos:line="35" pos:column="14">)<pos:position pos:line="35" pos:column="15"/></operator></expr>;<pos:position pos:line="35" pos:column="16"/></return></block></then></if>
  <comment type="block" pos:line="36" pos:column="3">/* bcopy(tmp, dst, INADDRSZ); */</comment>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">memcpy<pos:position pos:line="37" pos:column="9"/></name><argument_list pos:line="37" pos:column="9">(<argument><expr><name pos:line="37" pos:column="10">dst<pos:position pos:line="37" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="15">tmp<pos:position pos:line="37" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="20">INADDRSZ<pos:position pos:line="37" pos:column="28"/></name></expr></argument>)<pos:position pos:line="37" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt>
  <return pos:line="38" pos:column="3">return <expr><operator pos:line="38" pos:column="10">(<pos:position pos:line="38" pos:column="11"/></operator><literal type="number" pos:line="38" pos:column="11">1<pos:position pos:line="38" pos:column="12"/></literal><operator pos:line="38" pos:column="12">)<pos:position pos:line="38" pos:column="13"/></operator></expr>;<pos:position pos:line="38" pos:column="14"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

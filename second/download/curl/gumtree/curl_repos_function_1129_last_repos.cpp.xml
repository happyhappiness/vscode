<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1129_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">rtsp_do<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">connectdata<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">conn<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">bool<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">done<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Curl_easy<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">data<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name><name pos:line="3" pos:column="28">conn<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">data<pos:position pos:line="3" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">Curl_RtspReq<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">rtspreq<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><name><name pos:line="5" pos:column="26">data<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="32">set<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">.<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="36">rtspreq<pos:position pos:line="5" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">RTSP<pos:position pos:line="6" pos:column="14"/></name></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">rtsp<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name><name pos:line="6" pos:column="23">data<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">req<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">.<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">protop<pos:position pos:line="6" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">HTTP<pos:position pos:line="7" pos:column="14"/></name></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">http<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">Curl_send_buffer<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">req_buffer<pos:position pos:line="8" pos:column="31"/></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">curl_off_t<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">postsize<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt> <comment type="block" pos:line="9" pos:column="28">/* for ANNOUNCE and SET_PARAMETER */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">curl_off_t<pos:position pos:line="10" pos:column="13"/></name></type> <name pos:line="10" pos:column="14">putsize<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt> <comment type="block" pos:line="10" pos:column="27">/* for ANNOUNCE and SET_PARAMETER */</comment>

  <decl_stmt><decl><type><specifier pos:line="12" pos:column="3">const<pos:position pos:line="12" pos:column="8"/></specifier> <name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">p_request<pos:position pos:line="12" pos:column="24"/></name> <init pos:line="12" pos:column="25">= <expr><name pos:line="12" pos:column="27">NULL<pos:position pos:line="12" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="13" pos:column="3">const<pos:position pos:line="13" pos:column="8"/></specifier> <name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">p_session_id<pos:position pos:line="13" pos:column="27"/></name> <init pos:line="13" pos:column="28">= <expr><name pos:line="13" pos:column="30">NULL<pos:position pos:line="13" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="14" pos:column="3">const<pos:position pos:line="14" pos:column="8"/></specifier> <name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">p_accept<pos:position pos:line="14" pos:column="23"/></name> <init pos:line="14" pos:column="24">= <expr><name pos:line="14" pos:column="26">NULL<pos:position pos:line="14" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="15" pos:column="3">const<pos:position pos:line="15" pos:column="8"/></specifier> <name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">p_accept_encoding<pos:position pos:line="15" pos:column="32"/></name> <init pos:line="15" pos:column="33">= <expr><name pos:line="15" pos:column="35">NULL<pos:position pos:line="15" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="16" pos:column="3">const<pos:position pos:line="16" pos:column="8"/></specifier> <name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">p_range<pos:position pos:line="16" pos:column="22"/></name> <init pos:line="16" pos:column="23">= <expr><name pos:line="16" pos:column="25">NULL<pos:position pos:line="16" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="17" pos:column="3">const<pos:position pos:line="17" pos:column="8"/></specifier> <name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name pos:line="17" pos:column="15">p_referrer<pos:position pos:line="17" pos:column="25"/></name> <init pos:line="17" pos:column="26">= <expr><name pos:line="17" pos:column="28">NULL<pos:position pos:line="17" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="18" pos:column="3">const<pos:position pos:line="18" pos:column="8"/></specifier> <name pos:line="18" pos:column="9">char<pos:position pos:line="18" pos:column="13"/></name> <modifier pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></modifier></type><name pos:line="18" pos:column="15">p_stream_uri<pos:position pos:line="18" pos:column="27"/></name> <init pos:line="18" pos:column="28">= <expr><name pos:line="18" pos:column="30">NULL<pos:position pos:line="18" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="19" pos:column="3">const<pos:position pos:line="19" pos:column="8"/></specifier> <name pos:line="19" pos:column="9">char<pos:position pos:line="19" pos:column="13"/></name> <modifier pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></modifier></type><name pos:line="19" pos:column="15">p_transport<pos:position pos:line="19" pos:column="26"/></name> <init pos:line="19" pos:column="27">= <expr><name pos:line="19" pos:column="29">NULL<pos:position pos:line="19" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="20" pos:column="3">const<pos:position pos:line="20" pos:column="8"/></specifier> <name pos:line="20" pos:column="9">char<pos:position pos:line="20" pos:column="13"/></name> <modifier pos:line="20" pos:column="14">*<pos:position pos:line="20" pos:column="15"/></modifier></type><name pos:line="20" pos:column="15">p_uagent<pos:position pos:line="20" pos:column="23"/></name> <init pos:line="20" pos:column="24">= <expr><name pos:line="20" pos:column="26">NULL<pos:position pos:line="20" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="21" pos:column="3">const<pos:position pos:line="21" pos:column="8"/></specifier> <name pos:line="21" pos:column="9">char<pos:position pos:line="21" pos:column="13"/></name> <modifier pos:line="21" pos:column="14">*<pos:position pos:line="21" pos:column="15"/></modifier></type><name pos:line="21" pos:column="15">p_proxyuserpwd<pos:position pos:line="21" pos:column="29"/></name> <init pos:line="21" pos:column="30">= <expr><name pos:line="21" pos:column="32">NULL<pos:position pos:line="21" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="22" pos:column="3">const<pos:position pos:line="22" pos:column="8"/></specifier> <name pos:line="22" pos:column="9">char<pos:position pos:line="22" pos:column="13"/></name> <modifier pos:line="22" pos:column="14">*<pos:position pos:line="22" pos:column="15"/></modifier></type><name pos:line="22" pos:column="15">p_userpwd<pos:position pos:line="22" pos:column="24"/></name> <init pos:line="22" pos:column="25">= <expr><name pos:line="22" pos:column="27">NULL<pos:position pos:line="22" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="32"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="24" pos:column="3">*<pos:position pos:line="24" pos:column="4"/></operator><name pos:line="24" pos:column="4">done<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <name pos:line="24" pos:column="11">TRUE<pos:position pos:line="24" pos:column="15"/></name></expr>;<pos:position pos:line="24" pos:column="16"/></expr_stmt>

  <expr_stmt><expr><name pos:line="26" pos:column="3">http<pos:position pos:line="26" pos:column="7"/></name> <operator pos:line="26" pos:column="8">=<pos:position pos:line="26" pos:column="9"/></operator> <operator pos:line="26" pos:column="10">&amp;<pos:position pos:line="26" pos:column="15"/></operator><operator pos:line="26" pos:column="11">(<pos:position pos:line="26" pos:column="12"/></operator><name><name pos:line="26" pos:column="12">rtsp<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">http_wrapper<pos:position pos:line="26" pos:column="30"/></name></name><operator pos:line="26" pos:column="30">)<pos:position pos:line="26" pos:column="31"/></operator></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
  <comment type="block" pos:line="27" pos:column="3">/* Assert that no one has changed the RTSP struct in an evil way */</comment>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">DEBUGASSERT<pos:position pos:line="28" pos:column="14"/></name><argument_list pos:line="28" pos:column="14">(<argument><expr><operator pos:line="28" pos:column="15">(<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="16">void<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">*<pos:position pos:line="28" pos:column="22"/></operator><operator pos:line="28" pos:column="22">)<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">http<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">==<pos:position pos:line="28" pos:column="30"/></operator> <operator pos:line="28" pos:column="31">(<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="32">void<pos:position pos:line="28" pos:column="36"/></name> <operator pos:line="28" pos:column="37">*<pos:position pos:line="28" pos:column="38"/></operator><operator pos:line="28" pos:column="38">)<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">rtsp<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="30" pos:column="3">rtsp<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">CSeq_sent<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <name><name pos:line="30" pos:column="21">data<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">state<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">.<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="33">rtsp_next_client_CSeq<pos:position pos:line="30" pos:column="54"/></name></name></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">rtsp<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">-&gt;<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="9">CSeq_recv<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <literal type="number" pos:line="31" pos:column="21">0<pos:position pos:line="31" pos:column="22"/></literal></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>

  <comment type="block" pos:line="33" pos:column="3">/* Setup the 'p_request' pointer to the proper p_request string
   * Since all RTSP requests are included here, there is no need to
   * support custom requests like HTTP.
   **/</comment>
  <expr_stmt><expr><name><name pos:line="37" pos:column="3">data<pos:position pos:line="37" pos:column="7"/></name><operator pos:line="37" pos:column="7">-&gt;<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="9">set<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">.<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="13">opt_no_body<pos:position pos:line="37" pos:column="24"/></name></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <name pos:line="37" pos:column="27">TRUE<pos:position pos:line="37" pos:column="31"/></name></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt> <comment type="block" pos:line="37" pos:column="33">/* most requests don't contain a body */</comment>
  <switch pos:line="38" pos:column="3">switch<condition pos:line="38" pos:column="9">(<expr><name pos:line="38" pos:column="10">rtspreq<pos:position pos:line="38" pos:column="17"/></name></expr>)<pos:position pos:line="38" pos:column="18"/></condition> <block pos:line="38" pos:column="19">{
  <default pos:line="39" pos:column="3">default:<pos:position pos:line="39" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">failf<pos:position pos:line="40" pos:column="10"/></name><argument_list pos:line="40" pos:column="10">(<argument><expr><name pos:line="40" pos:column="11">data<pos:position pos:line="40" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="17">"Got invalid RTSP request"<pos:position pos:line="40" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="45"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><name pos:line="41" pos:column="12">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="41" pos:column="39"/></name></expr>;<pos:position pos:line="41" pos:column="40"/></return>
  <case pos:line="42" pos:column="3">case <expr><name pos:line="42" pos:column="8">RTSPREQ_OPTIONS<pos:position pos:line="42" pos:column="23"/></name></expr>:<pos:position pos:line="42" pos:column="24"/></case>
    <expr_stmt><expr><name pos:line="43" pos:column="5">p_request<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <literal type="string" pos:line="43" pos:column="17">"OPTIONS"<pos:position pos:line="43" pos:column="26"/></literal></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt>
    <break pos:line="44" pos:column="5">break;<pos:position pos:line="44" pos:column="11"/></break>
  <case pos:line="45" pos:column="3">case <expr><name pos:line="45" pos:column="8">RTSPREQ_DESCRIBE<pos:position pos:line="45" pos:column="24"/></name></expr>:<pos:position pos:line="45" pos:column="25"/></case>
    <expr_stmt><expr><name pos:line="46" pos:column="5">p_request<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator> <literal type="string" pos:line="46" pos:column="17">"DESCRIBE"<pos:position pos:line="46" pos:column="27"/></literal></expr>;<pos:position pos:line="46" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">data<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">-&gt;<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="11">set<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">.<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="15">opt_no_body<pos:position pos:line="47" pos:column="26"/></name></name> <operator pos:line="47" pos:column="27">=<pos:position pos:line="47" pos:column="28"/></operator> <name pos:line="47" pos:column="29">FALSE<pos:position pos:line="47" pos:column="34"/></name></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
    <break pos:line="48" pos:column="5">break;<pos:position pos:line="48" pos:column="11"/></break>
  <case pos:line="49" pos:column="3">case <expr><name pos:line="49" pos:column="8">RTSPREQ_ANNOUNCE<pos:position pos:line="49" pos:column="24"/></name></expr>:<pos:position pos:line="49" pos:column="25"/></case>
    <expr_stmt><expr><name pos:line="50" pos:column="5">p_request<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <literal type="string" pos:line="50" pos:column="17">"ANNOUNCE"<pos:position pos:line="50" pos:column="27"/></literal></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>
    <break pos:line="51" pos:column="5">break;<pos:position pos:line="51" pos:column="11"/></break>
  <case pos:line="52" pos:column="3">case <expr><name pos:line="52" pos:column="8">RTSPREQ_SETUP<pos:position pos:line="52" pos:column="21"/></name></expr>:<pos:position pos:line="52" pos:column="22"/></case>
    <expr_stmt><expr><name pos:line="53" pos:column="5">p_request<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">=<pos:position pos:line="53" pos:column="16"/></operator> <literal type="string" pos:line="53" pos:column="17">"SETUP"<pos:position pos:line="53" pos:column="24"/></literal></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt>
    <break pos:line="54" pos:column="5">break;<pos:position pos:line="54" pos:column="11"/></break>
  <case pos:line="55" pos:column="3">case <expr><name pos:line="55" pos:column="8">RTSPREQ_PLAY<pos:position pos:line="55" pos:column="20"/></name></expr>:<pos:position pos:line="55" pos:column="21"/></case>
    <expr_stmt><expr><name pos:line="56" pos:column="5">p_request<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">=<pos:position pos:line="56" pos:column="16"/></operator> <literal type="string" pos:line="56" pos:column="17">"PLAY"<pos:position pos:line="56" pos:column="23"/></literal></expr>;<pos:position pos:line="56" pos:column="24"/></expr_stmt>
    <break pos:line="57" pos:column="5">break;<pos:position pos:line="57" pos:column="11"/></break>
  <case pos:line="58" pos:column="3">case <expr><name pos:line="58" pos:column="8">RTSPREQ_PAUSE<pos:position pos:line="58" pos:column="21"/></name></expr>:<pos:position pos:line="58" pos:column="22"/></case>
    <expr_stmt><expr><name pos:line="59" pos:column="5">p_request<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">=<pos:position pos:line="59" pos:column="16"/></operator> <literal type="string" pos:line="59" pos:column="17">"PAUSE"<pos:position pos:line="59" pos:column="24"/></literal></expr>;<pos:position pos:line="59" pos:column="25"/></expr_stmt>
    <break pos:line="60" pos:column="5">break;<pos:position pos:line="60" pos:column="11"/></break>
  <case pos:line="61" pos:column="3">case <expr><name pos:line="61" pos:column="8">RTSPREQ_TEARDOWN<pos:position pos:line="61" pos:column="24"/></name></expr>:<pos:position pos:line="61" pos:column="25"/></case>
    <expr_stmt><expr><name pos:line="62" pos:column="5">p_request<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">=<pos:position pos:line="62" pos:column="16"/></operator> <literal type="string" pos:line="62" pos:column="17">"TEARDOWN"<pos:position pos:line="62" pos:column="27"/></literal></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
    <break pos:line="63" pos:column="5">break;<pos:position pos:line="63" pos:column="11"/></break>
  <case pos:line="64" pos:column="3">case <expr><name pos:line="64" pos:column="8">RTSPREQ_GET_PARAMETER<pos:position pos:line="64" pos:column="29"/></name></expr>:<pos:position pos:line="64" pos:column="30"/></case>
    <comment type="block" pos:line="65" pos:column="5">/* GET_PARAMETER's no_body status is determined later */</comment>
    <expr_stmt><expr><name pos:line="66" pos:column="5">p_request<pos:position pos:line="66" pos:column="14"/></name> <operator pos:line="66" pos:column="15">=<pos:position pos:line="66" pos:column="16"/></operator> <literal type="string" pos:line="66" pos:column="17">"GET_PARAMETER"<pos:position pos:line="66" pos:column="32"/></literal></expr>;<pos:position pos:line="66" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">data<pos:position pos:line="67" pos:column="9"/></name><operator pos:line="67" pos:column="9">-&gt;<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="11">set<pos:position pos:line="67" pos:column="14"/></name><operator pos:line="67" pos:column="14">.<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="15">opt_no_body<pos:position pos:line="67" pos:column="26"/></name></name> <operator pos:line="67" pos:column="27">=<pos:position pos:line="67" pos:column="28"/></operator> <name pos:line="67" pos:column="29">FALSE<pos:position pos:line="67" pos:column="34"/></name></expr>;<pos:position pos:line="67" pos:column="35"/></expr_stmt>
    <break pos:line="68" pos:column="5">break;<pos:position pos:line="68" pos:column="11"/></break>
  <case pos:line="69" pos:column="3">case <expr><name pos:line="69" pos:column="8">RTSPREQ_SET_PARAMETER<pos:position pos:line="69" pos:column="29"/></name></expr>:<pos:position pos:line="69" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="70" pos:column="5">p_request<pos:position pos:line="70" pos:column="14"/></name> <operator pos:line="70" pos:column="15">=<pos:position pos:line="70" pos:column="16"/></operator> <literal type="string" pos:line="70" pos:column="17">"SET_PARAMETER"<pos:position pos:line="70" pos:column="32"/></literal></expr>;<pos:position pos:line="70" pos:column="33"/></expr_stmt>
    <break pos:line="71" pos:column="5">break;<pos:position pos:line="71" pos:column="11"/></break>
  <case pos:line="72" pos:column="3">case <expr><name pos:line="72" pos:column="8">RTSPREQ_RECORD<pos:position pos:line="72" pos:column="22"/></name></expr>:<pos:position pos:line="72" pos:column="23"/></case>
    <expr_stmt><expr><name pos:line="73" pos:column="5">p_request<pos:position pos:line="73" pos:column="14"/></name> <operator pos:line="73" pos:column="15">=<pos:position pos:line="73" pos:column="16"/></operator> <literal type="string" pos:line="73" pos:column="17">"RECORD"<pos:position pos:line="73" pos:column="25"/></literal></expr>;<pos:position pos:line="73" pos:column="26"/></expr_stmt>
    <break pos:line="74" pos:column="5">break;<pos:position pos:line="74" pos:column="11"/></break>
  <case pos:line="75" pos:column="3">case <expr><name pos:line="75" pos:column="8">RTSPREQ_RECEIVE<pos:position pos:line="75" pos:column="23"/></name></expr>:<pos:position pos:line="75" pos:column="24"/></case>
    <expr_stmt><expr><name pos:line="76" pos:column="5">p_request<pos:position pos:line="76" pos:column="14"/></name> <operator pos:line="76" pos:column="15">=<pos:position pos:line="76" pos:column="16"/></operator> <literal type="string" pos:line="76" pos:column="17">""<pos:position pos:line="76" pos:column="19"/></literal></expr>;<pos:position pos:line="76" pos:column="20"/></expr_stmt>
    <comment type="block" pos:line="77" pos:column="5">/* Treat interleaved RTP as body*/</comment>
    <expr_stmt><expr><name><name pos:line="78" pos:column="5">data<pos:position pos:line="78" pos:column="9"/></name><operator pos:line="78" pos:column="9">-&gt;<pos:position pos:line="78" pos:column="14"/></operator><name pos:line="78" pos:column="11">set<pos:position pos:line="78" pos:column="14"/></name><operator pos:line="78" pos:column="14">.<pos:position pos:line="78" pos:column="15"/></operator><name pos:line="78" pos:column="15">opt_no_body<pos:position pos:line="78" pos:column="26"/></name></name> <operator pos:line="78" pos:column="27">=<pos:position pos:line="78" pos:column="28"/></operator> <name pos:line="78" pos:column="29">FALSE<pos:position pos:line="78" pos:column="34"/></name></expr>;<pos:position pos:line="78" pos:column="35"/></expr_stmt>
    <break pos:line="79" pos:column="5">break;<pos:position pos:line="79" pos:column="11"/></break>
  <case pos:line="80" pos:column="3">case <expr><name pos:line="80" pos:column="8">RTSPREQ_LAST<pos:position pos:line="80" pos:column="20"/></name></expr>:<pos:position pos:line="80" pos:column="21"/></case>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">failf<pos:position pos:line="81" pos:column="10"/></name><argument_list pos:line="81" pos:column="10">(<argument><expr><name pos:line="81" pos:column="11">data<pos:position pos:line="81" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="17">"Got invalid RTSP request: RTSPREQ_LAST"<pos:position pos:line="81" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="59"/></expr_stmt>
    <return pos:line="82" pos:column="5">return <expr><name pos:line="82" pos:column="12">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="82" pos:column="39"/></name></expr>;<pos:position pos:line="82" pos:column="40"/></return>
  }<pos:position pos:line="83" pos:column="4"/></block></switch>

  <if pos:line="85" pos:column="3">if<condition pos:line="85" pos:column="5">(<expr><name pos:line="85" pos:column="6">rtspreq<pos:position pos:line="85" pos:column="13"/></name> <operator pos:line="85" pos:column="14">==<pos:position pos:line="85" pos:column="16"/></operator> <name pos:line="85" pos:column="17">RTSPREQ_RECEIVE<pos:position pos:line="85" pos:column="32"/></name></expr>)<pos:position pos:line="85" pos:column="33"/></condition><then pos:line="85" pos:column="33"> <block pos:line="85" pos:column="34">{
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">Curl_setup_transfer<pos:position pos:line="86" pos:column="24"/></name><argument_list pos:line="86" pos:column="24">(<argument><expr><name pos:line="86" pos:column="25">conn<pos:position pos:line="86" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="31">FIRSTSOCKET<pos:position pos:line="86" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="44">-<pos:position pos:line="86" pos:column="45"/></operator><literal type="number" pos:line="86" pos:column="45">1<pos:position pos:line="86" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="48">TRUE<pos:position pos:line="86" pos:column="52"/></name></expr></argument>,
                        <argument><expr><operator pos:line="87" pos:column="25">&amp;<pos:position pos:line="87" pos:column="30"/></operator><name><name pos:line="87" pos:column="26">http<pos:position pos:line="87" pos:column="30"/></name><operator pos:line="87" pos:column="30">-&gt;<pos:position pos:line="87" pos:column="35"/></operator><name pos:line="87" pos:column="32">readbytecount<pos:position pos:line="87" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="47">-<pos:position pos:line="87" pos:column="48"/></operator><literal type="number" pos:line="87" pos:column="48">1<pos:position pos:line="87" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="51">NULL<pos:position pos:line="87" pos:column="55"/></name></expr></argument>)<pos:position pos:line="87" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="57"/></expr_stmt>

    <return pos:line="89" pos:column="5">return <expr><name pos:line="89" pos:column="12">result<pos:position pos:line="89" pos:column="18"/></name></expr>;<pos:position pos:line="89" pos:column="19"/></return>
  }<pos:position pos:line="90" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="92" pos:column="3">p_session_id<pos:position pos:line="92" pos:column="15"/></name> <operator pos:line="92" pos:column="16">=<pos:position pos:line="92" pos:column="17"/></operator> <name><name pos:line="92" pos:column="18">data<pos:position pos:line="92" pos:column="22"/></name><operator pos:line="92" pos:column="22">-&gt;<pos:position pos:line="92" pos:column="27"/></operator><name pos:line="92" pos:column="24">set<pos:position pos:line="92" pos:column="27"/></name><operator pos:line="92" pos:column="27">.<pos:position pos:line="92" pos:column="28"/></operator><name pos:line="92" pos:column="28">str<pos:position pos:line="92" pos:column="31"/></name><index pos:line="92" pos:column="31">[<expr><name pos:line="92" pos:column="32">STRING_RTSP_SESSION_ID<pos:position pos:line="92" pos:column="54"/></name></expr>]<pos:position pos:line="92" pos:column="55"/></index></name></expr>;<pos:position pos:line="92" pos:column="56"/></expr_stmt>
  <if pos:line="93" pos:column="3">if<condition pos:line="93" pos:column="5">(<expr><operator pos:line="93" pos:column="6">!<pos:position pos:line="93" pos:column="7"/></operator><name pos:line="93" pos:column="7">p_session_id<pos:position pos:line="93" pos:column="19"/></name> <operator pos:line="93" pos:column="20">&amp;&amp;<pos:position pos:line="93" pos:column="30"/></operator>
     <operator pos:line="94" pos:column="6">(<pos:position pos:line="94" pos:column="7"/></operator><name pos:line="94" pos:column="7">rtspreq<pos:position pos:line="94" pos:column="14"/></name> <operator pos:line="94" pos:column="15">&amp;<pos:position pos:line="94" pos:column="20"/></operator> <operator pos:line="94" pos:column="17">~<pos:position pos:line="94" pos:column="18"/></operator><operator pos:line="94" pos:column="18">(<pos:position pos:line="94" pos:column="19"/></operator><name pos:line="94" pos:column="19">RTSPREQ_OPTIONS<pos:position pos:line="94" pos:column="34"/></name> <operator pos:line="94" pos:column="35">|<pos:position pos:line="94" pos:column="36"/></operator> <name pos:line="94" pos:column="37">RTSPREQ_DESCRIBE<pos:position pos:line="94" pos:column="53"/></name> <operator pos:line="94" pos:column="54">|<pos:position pos:line="94" pos:column="55"/></operator> <name pos:line="94" pos:column="56">RTSPREQ_SETUP<pos:position pos:line="94" pos:column="69"/></name><operator pos:line="94" pos:column="69">)<pos:position pos:line="94" pos:column="70"/></operator><operator pos:line="94" pos:column="70">)<pos:position pos:line="94" pos:column="71"/></operator></expr>)<pos:position pos:line="94" pos:column="72"/></condition><then pos:line="94" pos:column="72"> <block pos:line="94" pos:column="73">{
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">failf<pos:position pos:line="95" pos:column="10"/></name><argument_list pos:line="95" pos:column="10">(<argument><expr><name pos:line="95" pos:column="11">data<pos:position pos:line="95" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="17">"Refusing to issue an RTSP request [%s] without a session ID."<pos:position pos:line="95" pos:column="79"/></literal></expr></argument>,
          <argument><expr><name pos:line="96" pos:column="11">p_request<pos:position pos:line="96" pos:column="20"/></name></expr></argument>)<pos:position pos:line="96" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="22"/></expr_stmt>
    <return pos:line="97" pos:column="5">return <expr><name pos:line="97" pos:column="12">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="97" pos:column="39"/></name></expr>;<pos:position pos:line="97" pos:column="40"/></return>
  }<pos:position pos:line="98" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="100" pos:column="3">/* TODO: proxy? */</comment>

  <comment type="block" pos:line="102" pos:column="3">/* Stream URI. Default to server '*' if not specified */</comment>
  <if pos:line="103" pos:column="3">if<condition pos:line="103" pos:column="5">(<expr><name><name pos:line="103" pos:column="6">data<pos:position pos:line="103" pos:column="10"/></name><operator pos:line="103" pos:column="10">-&gt;<pos:position pos:line="103" pos:column="15"/></operator><name pos:line="103" pos:column="12">set<pos:position pos:line="103" pos:column="15"/></name><operator pos:line="103" pos:column="15">.<pos:position pos:line="103" pos:column="16"/></operator><name pos:line="103" pos:column="16">str<pos:position pos:line="103" pos:column="19"/></name><index pos:line="103" pos:column="19">[<expr><name pos:line="103" pos:column="20">STRING_RTSP_STREAM_URI<pos:position pos:line="103" pos:column="42"/></name></expr>]<pos:position pos:line="103" pos:column="43"/></index></name></expr>)<pos:position pos:line="103" pos:column="44"/></condition><then pos:line="103" pos:column="44"> <block pos:line="103" pos:column="45">{
    <expr_stmt><expr><name pos:line="104" pos:column="5">p_stream_uri<pos:position pos:line="104" pos:column="17"/></name> <operator pos:line="104" pos:column="18">=<pos:position pos:line="104" pos:column="19"/></operator> <name><name pos:line="104" pos:column="20">data<pos:position pos:line="104" pos:column="24"/></name><operator pos:line="104" pos:column="24">-&gt;<pos:position pos:line="104" pos:column="29"/></operator><name pos:line="104" pos:column="26">set<pos:position pos:line="104" pos:column="29"/></name><operator pos:line="104" pos:column="29">.<pos:position pos:line="104" pos:column="30"/></operator><name pos:line="104" pos:column="30">str<pos:position pos:line="104" pos:column="33"/></name><index pos:line="104" pos:column="33">[<expr><name pos:line="104" pos:column="34">STRING_RTSP_STREAM_URI<pos:position pos:line="104" pos:column="56"/></name></expr>]<pos:position pos:line="104" pos:column="57"/></index></name></expr>;<pos:position pos:line="104" pos:column="58"/></expr_stmt>
  }<pos:position pos:line="105" pos:column="4"/></block></then>
  <else pos:line="106" pos:column="3">else <block pos:line="106" pos:column="8">{
    <expr_stmt><expr><name pos:line="107" pos:column="5">p_stream_uri<pos:position pos:line="107" pos:column="17"/></name> <operator pos:line="107" pos:column="18">=<pos:position pos:line="107" pos:column="19"/></operator> <literal type="string" pos:line="107" pos:column="20">"*"<pos:position pos:line="107" pos:column="23"/></literal></expr>;<pos:position pos:line="107" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="108" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="110" pos:column="3">/* Transport Header for SETUP requests */</comment>
  <expr_stmt><expr><name pos:line="111" pos:column="3">p_transport<pos:position pos:line="111" pos:column="14"/></name> <operator pos:line="111" pos:column="15">=<pos:position pos:line="111" pos:column="16"/></operator> <call><name pos:line="111" pos:column="17">Curl_checkheaders<pos:position pos:line="111" pos:column="34"/></name><argument_list pos:line="111" pos:column="34">(<argument><expr><name pos:line="111" pos:column="35">conn<pos:position pos:line="111" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="41">"Transport:"<pos:position pos:line="111" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="55"/></expr_stmt>
  <if pos:line="112" pos:column="3">if<condition pos:line="112" pos:column="5">(<expr><name pos:line="112" pos:column="6">rtspreq<pos:position pos:line="112" pos:column="13"/></name> <operator pos:line="112" pos:column="14">==<pos:position pos:line="112" pos:column="16"/></operator> <name pos:line="112" pos:column="17">RTSPREQ_SETUP<pos:position pos:line="112" pos:column="30"/></name> <operator pos:line="112" pos:column="31">&amp;&amp;<pos:position pos:line="112" pos:column="41"/></operator> <operator pos:line="112" pos:column="34">!<pos:position pos:line="112" pos:column="35"/></operator><name pos:line="112" pos:column="35">p_transport<pos:position pos:line="112" pos:column="46"/></name></expr>)<pos:position pos:line="112" pos:column="47"/></condition><then pos:line="112" pos:column="47"> <block pos:line="112" pos:column="48">{
    <comment type="block" pos:line="113" pos:column="5">/* New Transport: setting? */</comment>
    <if pos:line="114" pos:column="5">if<condition pos:line="114" pos:column="7">(<expr><name><name pos:line="114" pos:column="8">data<pos:position pos:line="114" pos:column="12"/></name><operator pos:line="114" pos:column="12">-&gt;<pos:position pos:line="114" pos:column="17"/></operator><name pos:line="114" pos:column="14">set<pos:position pos:line="114" pos:column="17"/></name><operator pos:line="114" pos:column="17">.<pos:position pos:line="114" pos:column="18"/></operator><name pos:line="114" pos:column="18">str<pos:position pos:line="114" pos:column="21"/></name><index pos:line="114" pos:column="21">[<expr><name pos:line="114" pos:column="22">STRING_RTSP_TRANSPORT<pos:position pos:line="114" pos:column="43"/></name></expr>]<pos:position pos:line="114" pos:column="44"/></index></name></expr>)<pos:position pos:line="114" pos:column="45"/></condition><then pos:line="114" pos:column="45"> <block pos:line="114" pos:column="46">{
      <expr_stmt><expr><call><name pos:line="115" pos:column="7">Curl_safefree<pos:position pos:line="115" pos:column="20"/></name><argument_list pos:line="115" pos:column="20">(<argument><expr><name><name pos:line="115" pos:column="21">conn<pos:position pos:line="115" pos:column="25"/></name><operator pos:line="115" pos:column="25">-&gt;<pos:position pos:line="115" pos:column="30"/></operator><name pos:line="115" pos:column="27">allocptr<pos:position pos:line="115" pos:column="35"/></name><operator pos:line="115" pos:column="35">.<pos:position pos:line="115" pos:column="36"/></operator><name pos:line="115" pos:column="36">rtsp_transport<pos:position pos:line="115" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="52"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="117" pos:column="7">conn<pos:position pos:line="117" pos:column="11"/></name><operator pos:line="117" pos:column="11">-&gt;<pos:position pos:line="117" pos:column="16"/></operator><name pos:line="117" pos:column="13">allocptr<pos:position pos:line="117" pos:column="21"/></name><operator pos:line="117" pos:column="21">.<pos:position pos:line="117" pos:column="22"/></operator><name pos:line="117" pos:column="22">rtsp_transport<pos:position pos:line="117" pos:column="36"/></name></name> <operator pos:line="117" pos:column="37">=<pos:position pos:line="117" pos:column="38"/></operator>
        <call><name pos:line="118" pos:column="9">aprintf<pos:position pos:line="118" pos:column="16"/></name><argument_list pos:line="118" pos:column="16">(<argument><expr><literal type="string" pos:line="118" pos:column="17">"Transport: %s\r\n"<pos:position pos:line="118" pos:column="36"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="119" pos:column="17">data<pos:position pos:line="119" pos:column="21"/></name><operator pos:line="119" pos:column="21">-&gt;<pos:position pos:line="119" pos:column="26"/></operator><name pos:line="119" pos:column="23">set<pos:position pos:line="119" pos:column="26"/></name><operator pos:line="119" pos:column="26">.<pos:position pos:line="119" pos:column="27"/></operator><name pos:line="119" pos:column="27">str<pos:position pos:line="119" pos:column="30"/></name><index pos:line="119" pos:column="30">[<expr><name pos:line="119" pos:column="31">STRING_RTSP_TRANSPORT<pos:position pos:line="119" pos:column="52"/></name></expr>]<pos:position pos:line="119" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="119" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="55"/></expr_stmt>
      <if pos:line="120" pos:column="7">if<condition pos:line="120" pos:column="9">(<expr><operator pos:line="120" pos:column="10">!<pos:position pos:line="120" pos:column="11"/></operator><name><name pos:line="120" pos:column="11">conn<pos:position pos:line="120" pos:column="15"/></name><operator pos:line="120" pos:column="15">-&gt;<pos:position pos:line="120" pos:column="20"/></operator><name pos:line="120" pos:column="17">allocptr<pos:position pos:line="120" pos:column="25"/></name><operator pos:line="120" pos:column="25">.<pos:position pos:line="120" pos:column="26"/></operator><name pos:line="120" pos:column="26">rtsp_transport<pos:position pos:line="120" pos:column="40"/></name></name></expr>)<pos:position pos:line="120" pos:column="41"/></condition><then pos:line="120" pos:column="41">
        <block type="pseudo"><return pos:line="121" pos:column="9">return <expr><name pos:line="121" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="121" pos:column="35"/></name></expr>;<pos:position pos:line="121" pos:column="36"/></return></block></then></if>
    }<pos:position pos:line="122" pos:column="6"/></block></then>
    <else pos:line="123" pos:column="5">else <block pos:line="123" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="124" pos:column="7">failf<pos:position pos:line="124" pos:column="12"/></name><argument_list pos:line="124" pos:column="12">(<argument><expr><name pos:line="124" pos:column="13">data<pos:position pos:line="124" pos:column="17"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="125" pos:column="13">"Refusing to issue an RTSP SETUP without a Transport: header."<pos:position pos:line="125" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="77"/></expr_stmt>
      <return pos:line="126" pos:column="7">return <expr><name pos:line="126" pos:column="14">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="126" pos:column="41"/></name></expr>;<pos:position pos:line="126" pos:column="42"/></return>
    }<pos:position pos:line="127" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="129" pos:column="5">p_transport<pos:position pos:line="129" pos:column="16"/></name> <operator pos:line="129" pos:column="17">=<pos:position pos:line="129" pos:column="18"/></operator> <name><name pos:line="129" pos:column="19">conn<pos:position pos:line="129" pos:column="23"/></name><operator pos:line="129" pos:column="23">-&gt;<pos:position pos:line="129" pos:column="28"/></operator><name pos:line="129" pos:column="25">allocptr<pos:position pos:line="129" pos:column="33"/></name><operator pos:line="129" pos:column="33">.<pos:position pos:line="129" pos:column="34"/></operator><name pos:line="129" pos:column="34">rtsp_transport<pos:position pos:line="129" pos:column="48"/></name></name></expr>;<pos:position pos:line="129" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="130" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="132" pos:column="3">/* Accept Headers for DESCRIBE requests */</comment>
  <if pos:line="133" pos:column="3">if<condition pos:line="133" pos:column="5">(<expr><name pos:line="133" pos:column="6">rtspreq<pos:position pos:line="133" pos:column="13"/></name> <operator pos:line="133" pos:column="14">==<pos:position pos:line="133" pos:column="16"/></operator> <name pos:line="133" pos:column="17">RTSPREQ_DESCRIBE<pos:position pos:line="133" pos:column="33"/></name></expr>)<pos:position pos:line="133" pos:column="34"/></condition><then pos:line="133" pos:column="34"> <block pos:line="133" pos:column="35">{
    <comment type="block" pos:line="134" pos:column="5">/* Accept Header */</comment>
    <expr_stmt><expr><name pos:line="135" pos:column="5">p_accept<pos:position pos:line="135" pos:column="13"/></name> <operator pos:line="135" pos:column="14">=<pos:position pos:line="135" pos:column="15"/></operator> <ternary><condition><expr><call><name pos:line="135" pos:column="16">Curl_checkheaders<pos:position pos:line="135" pos:column="33"/></name><argument_list pos:line="135" pos:column="33">(<argument><expr><name pos:line="135" pos:column="34">conn<pos:position pos:line="135" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="40">"Accept:"<pos:position pos:line="135" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="50"/></argument_list></call></expr>?<pos:position pos:line="135" pos:column="51"/></condition><then pos:line="135" pos:column="51">
      <expr><name pos:line="136" pos:column="7">NULL<pos:position pos:line="136" pos:column="11"/></name></expr></then><else pos:line="136" pos:column="11">:<expr><literal type="string" pos:line="136" pos:column="12">"Accept: application/sdp\r\n"<pos:position pos:line="136" pos:column="41"/></literal></expr></else></ternary></expr>;<pos:position pos:line="136" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="138" pos:column="5">/* Accept-Encoding header */</comment>
    <if pos:line="139" pos:column="5">if<condition pos:line="139" pos:column="7">(<expr><operator pos:line="139" pos:column="8">!<pos:position pos:line="139" pos:column="9"/></operator><call><name pos:line="139" pos:column="9">Curl_checkheaders<pos:position pos:line="139" pos:column="26"/></name><argument_list pos:line="139" pos:column="26">(<argument><expr><name pos:line="139" pos:column="27">conn<pos:position pos:line="139" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="33">"Accept-Encoding:"<pos:position pos:line="139" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="52"/></argument_list></call> <operator pos:line="139" pos:column="53">&amp;&amp;<pos:position pos:line="139" pos:column="63"/></operator>
       <name><name pos:line="140" pos:column="8">data<pos:position pos:line="140" pos:column="12"/></name><operator pos:line="140" pos:column="12">-&gt;<pos:position pos:line="140" pos:column="17"/></operator><name pos:line="140" pos:column="14">set<pos:position pos:line="140" pos:column="17"/></name><operator pos:line="140" pos:column="17">.<pos:position pos:line="140" pos:column="18"/></operator><name pos:line="140" pos:column="18">str<pos:position pos:line="140" pos:column="21"/></name><index pos:line="140" pos:column="21">[<expr><name pos:line="140" pos:column="22">STRING_ENCODING<pos:position pos:line="140" pos:column="37"/></name></expr>]<pos:position pos:line="140" pos:column="38"/></index></name></expr>)<pos:position pos:line="140" pos:column="39"/></condition><then pos:line="140" pos:column="39"> <block pos:line="140" pos:column="40">{
      <expr_stmt><expr><call><name pos:line="141" pos:column="7">Curl_safefree<pos:position pos:line="141" pos:column="20"/></name><argument_list pos:line="141" pos:column="20">(<argument><expr><name><name pos:line="141" pos:column="21">conn<pos:position pos:line="141" pos:column="25"/></name><operator pos:line="141" pos:column="25">-&gt;<pos:position pos:line="141" pos:column="30"/></operator><name pos:line="141" pos:column="27">allocptr<pos:position pos:line="141" pos:column="35"/></name><operator pos:line="141" pos:column="35">.<pos:position pos:line="141" pos:column="36"/></operator><name pos:line="141" pos:column="36">accept_encoding<pos:position pos:line="141" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="141" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="142" pos:column="7">conn<pos:position pos:line="142" pos:column="11"/></name><operator pos:line="142" pos:column="11">-&gt;<pos:position pos:line="142" pos:column="16"/></operator><name pos:line="142" pos:column="13">allocptr<pos:position pos:line="142" pos:column="21"/></name><operator pos:line="142" pos:column="21">.<pos:position pos:line="142" pos:column="22"/></operator><name pos:line="142" pos:column="22">accept_encoding<pos:position pos:line="142" pos:column="37"/></name></name> <operator pos:line="142" pos:column="38">=<pos:position pos:line="142" pos:column="39"/></operator>
        <call><name pos:line="143" pos:column="9">aprintf<pos:position pos:line="143" pos:column="16"/></name><argument_list pos:line="143" pos:column="16">(<argument><expr><literal type="string" pos:line="143" pos:column="17">"Accept-Encoding: %s\r\n"<pos:position pos:line="143" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="143" pos:column="44">data<pos:position pos:line="143" pos:column="48"/></name><operator pos:line="143" pos:column="48">-&gt;<pos:position pos:line="143" pos:column="53"/></operator><name pos:line="143" pos:column="50">set<pos:position pos:line="143" pos:column="53"/></name><operator pos:line="143" pos:column="53">.<pos:position pos:line="143" pos:column="54"/></operator><name pos:line="143" pos:column="54">str<pos:position pos:line="143" pos:column="57"/></name><index pos:line="143" pos:column="57">[<expr><name pos:line="143" pos:column="58">STRING_ENCODING<pos:position pos:line="143" pos:column="73"/></name></expr>]<pos:position pos:line="143" pos:column="74"/></index></name></expr></argument>)<pos:position pos:line="143" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="76"/></expr_stmt>

      <if pos:line="145" pos:column="7">if<condition pos:line="145" pos:column="9">(<expr><operator pos:line="145" pos:column="10">!<pos:position pos:line="145" pos:column="11"/></operator><name><name pos:line="145" pos:column="11">conn<pos:position pos:line="145" pos:column="15"/></name><operator pos:line="145" pos:column="15">-&gt;<pos:position pos:line="145" pos:column="20"/></operator><name pos:line="145" pos:column="17">allocptr<pos:position pos:line="145" pos:column="25"/></name><operator pos:line="145" pos:column="25">.<pos:position pos:line="145" pos:column="26"/></operator><name pos:line="145" pos:column="26">accept_encoding<pos:position pos:line="145" pos:column="41"/></name></name></expr>)<pos:position pos:line="145" pos:column="42"/></condition><then pos:line="145" pos:column="42">
        <block type="pseudo"><return pos:line="146" pos:column="9">return <expr><name pos:line="146" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="146" pos:column="35"/></name></expr>;<pos:position pos:line="146" pos:column="36"/></return></block></then></if>

      <expr_stmt><expr><name pos:line="148" pos:column="7">p_accept_encoding<pos:position pos:line="148" pos:column="24"/></name> <operator pos:line="148" pos:column="25">=<pos:position pos:line="148" pos:column="26"/></operator> <name><name pos:line="148" pos:column="27">conn<pos:position pos:line="148" pos:column="31"/></name><operator pos:line="148" pos:column="31">-&gt;<pos:position pos:line="148" pos:column="36"/></operator><name pos:line="148" pos:column="33">allocptr<pos:position pos:line="148" pos:column="41"/></name><operator pos:line="148" pos:column="41">.<pos:position pos:line="148" pos:column="42"/></operator><name pos:line="148" pos:column="42">accept_encoding<pos:position pos:line="148" pos:column="57"/></name></name></expr>;<pos:position pos:line="148" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="149" pos:column="6"/></block></then></if>
  }<pos:position pos:line="150" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="152" pos:column="3">/* The User-Agent string might have been allocated in url.c already, because
     it might have been used in the proxy connect, but if we have got a header
     with the user-agent string specified, we erase the previously made string
     here. */</comment>
  <if pos:line="156" pos:column="3">if<condition pos:line="156" pos:column="5">(<expr><call><name pos:line="156" pos:column="6">Curl_checkheaders<pos:position pos:line="156" pos:column="23"/></name><argument_list pos:line="156" pos:column="23">(<argument><expr><name pos:line="156" pos:column="24">conn<pos:position pos:line="156" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="30">"User-Agent:"<pos:position pos:line="156" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="44"/></argument_list></call> <operator pos:line="156" pos:column="45">&amp;&amp;<pos:position pos:line="156" pos:column="55"/></operator> <name><name pos:line="156" pos:column="48">conn<pos:position pos:line="156" pos:column="52"/></name><operator pos:line="156" pos:column="52">-&gt;<pos:position pos:line="156" pos:column="57"/></operator><name pos:line="156" pos:column="54">allocptr<pos:position pos:line="156" pos:column="62"/></name><operator pos:line="156" pos:column="62">.<pos:position pos:line="156" pos:column="63"/></operator><name pos:line="156" pos:column="63">uagent<pos:position pos:line="156" pos:column="69"/></name></name></expr>)<pos:position pos:line="156" pos:column="70"/></condition><then pos:line="156" pos:column="70"> <block pos:line="156" pos:column="71">{
    <expr_stmt><expr><call><name pos:line="157" pos:column="5">Curl_safefree<pos:position pos:line="157" pos:column="18"/></name><argument_list pos:line="157" pos:column="18">(<argument><expr><name><name pos:line="157" pos:column="19">conn<pos:position pos:line="157" pos:column="23"/></name><operator pos:line="157" pos:column="23">-&gt;<pos:position pos:line="157" pos:column="28"/></operator><name pos:line="157" pos:column="25">allocptr<pos:position pos:line="157" pos:column="33"/></name><operator pos:line="157" pos:column="33">.<pos:position pos:line="157" pos:column="34"/></operator><name pos:line="157" pos:column="34">uagent<pos:position pos:line="157" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="158" pos:column="5">conn<pos:position pos:line="158" pos:column="9"/></name><operator pos:line="158" pos:column="9">-&gt;<pos:position pos:line="158" pos:column="14"/></operator><name pos:line="158" pos:column="11">allocptr<pos:position pos:line="158" pos:column="19"/></name><operator pos:line="158" pos:column="19">.<pos:position pos:line="158" pos:column="20"/></operator><name pos:line="158" pos:column="20">uagent<pos:position pos:line="158" pos:column="26"/></name></name> <operator pos:line="158" pos:column="27">=<pos:position pos:line="158" pos:column="28"/></operator> <name pos:line="158" pos:column="29">NULL<pos:position pos:line="158" pos:column="33"/></name></expr>;<pos:position pos:line="158" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="159" pos:column="4"/></block></then>
  <elseif pos:line="160" pos:column="3">else <if pos:line="160" pos:column="8">if<condition pos:line="160" pos:column="10">(<expr><operator pos:line="160" pos:column="11">!<pos:position pos:line="160" pos:column="12"/></operator><call><name pos:line="160" pos:column="12">Curl_checkheaders<pos:position pos:line="160" pos:column="29"/></name><argument_list pos:line="160" pos:column="29">(<argument><expr><name pos:line="160" pos:column="30">conn<pos:position pos:line="160" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="36">"User-Agent:"<pos:position pos:line="160" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="50"/></argument_list></call> <operator pos:line="160" pos:column="51">&amp;&amp;<pos:position pos:line="160" pos:column="61"/></operator>
          <name><name pos:line="161" pos:column="11">data<pos:position pos:line="161" pos:column="15"/></name><operator pos:line="161" pos:column="15">-&gt;<pos:position pos:line="161" pos:column="20"/></operator><name pos:line="161" pos:column="17">set<pos:position pos:line="161" pos:column="20"/></name><operator pos:line="161" pos:column="20">.<pos:position pos:line="161" pos:column="21"/></operator><name pos:line="161" pos:column="21">str<pos:position pos:line="161" pos:column="24"/></name><index pos:line="161" pos:column="24">[<expr><name pos:line="161" pos:column="25">STRING_USERAGENT<pos:position pos:line="161" pos:column="41"/></name></expr>]<pos:position pos:line="161" pos:column="42"/></index></name></expr>)<pos:position pos:line="161" pos:column="43"/></condition><then pos:line="161" pos:column="43"> <block pos:line="161" pos:column="44">{
    <expr_stmt><expr><name pos:line="162" pos:column="5">p_uagent<pos:position pos:line="162" pos:column="13"/></name> <operator pos:line="162" pos:column="14">=<pos:position pos:line="162" pos:column="15"/></operator> <name><name pos:line="162" pos:column="16">conn<pos:position pos:line="162" pos:column="20"/></name><operator pos:line="162" pos:column="20">-&gt;<pos:position pos:line="162" pos:column="25"/></operator><name pos:line="162" pos:column="22">allocptr<pos:position pos:line="162" pos:column="30"/></name><operator pos:line="162" pos:column="30">.<pos:position pos:line="162" pos:column="31"/></operator><name pos:line="162" pos:column="31">uagent<pos:position pos:line="162" pos:column="37"/></name></name></expr>;<pos:position pos:line="162" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="163" pos:column="4"/></block></then></if></elseif></if>

  <comment type="block" pos:line="165" pos:column="3">/* setup the authentication headers */</comment>
  <expr_stmt><expr><name pos:line="166" pos:column="3">result<pos:position pos:line="166" pos:column="9"/></name> <operator pos:line="166" pos:column="10">=<pos:position pos:line="166" pos:column="11"/></operator> <call><name pos:line="166" pos:column="12">Curl_http_output_auth<pos:position pos:line="166" pos:column="33"/></name><argument_list pos:line="166" pos:column="33">(<argument><expr><name pos:line="166" pos:column="34">conn<pos:position pos:line="166" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="40">p_request<pos:position pos:line="166" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="51">p_stream_uri<pos:position pos:line="166" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="65">FALSE<pos:position pos:line="166" pos:column="70"/></name></expr></argument>)<pos:position pos:line="166" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="72"/></expr_stmt>
  <if pos:line="167" pos:column="3">if<condition pos:line="167" pos:column="5">(<expr><name pos:line="167" pos:column="6">result<pos:position pos:line="167" pos:column="12"/></name></expr>)<pos:position pos:line="167" pos:column="13"/></condition><then pos:line="167" pos:column="13">
    <block type="pseudo"><return pos:line="168" pos:column="5">return <expr><name pos:line="168" pos:column="12">result<pos:position pos:line="168" pos:column="18"/></name></expr>;<pos:position pos:line="168" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="170" pos:column="3">p_proxyuserpwd<pos:position pos:line="170" pos:column="17"/></name> <operator pos:line="170" pos:column="18">=<pos:position pos:line="170" pos:column="19"/></operator> <name><name pos:line="170" pos:column="20">conn<pos:position pos:line="170" pos:column="24"/></name><operator pos:line="170" pos:column="24">-&gt;<pos:position pos:line="170" pos:column="29"/></operator><name pos:line="170" pos:column="26">allocptr<pos:position pos:line="170" pos:column="34"/></name><operator pos:line="170" pos:column="34">.<pos:position pos:line="170" pos:column="35"/></operator><name pos:line="170" pos:column="35">proxyuserpwd<pos:position pos:line="170" pos:column="47"/></name></name></expr>;<pos:position pos:line="170" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name pos:line="171" pos:column="3">p_userpwd<pos:position pos:line="171" pos:column="12"/></name> <operator pos:line="171" pos:column="13">=<pos:position pos:line="171" pos:column="14"/></operator> <name><name pos:line="171" pos:column="15">conn<pos:position pos:line="171" pos:column="19"/></name><operator pos:line="171" pos:column="19">-&gt;<pos:position pos:line="171" pos:column="24"/></operator><name pos:line="171" pos:column="21">allocptr<pos:position pos:line="171" pos:column="29"/></name><operator pos:line="171" pos:column="29">.<pos:position pos:line="171" pos:column="30"/></operator><name pos:line="171" pos:column="30">userpwd<pos:position pos:line="171" pos:column="37"/></name></name></expr>;<pos:position pos:line="171" pos:column="38"/></expr_stmt>

  <comment type="block" pos:line="173" pos:column="3">/* Referrer */</comment>
  <expr_stmt><expr><call><name pos:line="174" pos:column="3">Curl_safefree<pos:position pos:line="174" pos:column="16"/></name><argument_list pos:line="174" pos:column="16">(<argument><expr><name><name pos:line="174" pos:column="17">conn<pos:position pos:line="174" pos:column="21"/></name><operator pos:line="174" pos:column="21">-&gt;<pos:position pos:line="174" pos:column="26"/></operator><name pos:line="174" pos:column="23">allocptr<pos:position pos:line="174" pos:column="31"/></name><operator pos:line="174" pos:column="31">.<pos:position pos:line="174" pos:column="32"/></operator><name pos:line="174" pos:column="32">ref<pos:position pos:line="174" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="174" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="37"/></expr_stmt>
  <if pos:line="175" pos:column="3">if<condition pos:line="175" pos:column="5">(<expr><name><name pos:line="175" pos:column="6">data<pos:position pos:line="175" pos:column="10"/></name><operator pos:line="175" pos:column="10">-&gt;<pos:position pos:line="175" pos:column="15"/></operator><name pos:line="175" pos:column="12">change<pos:position pos:line="175" pos:column="18"/></name><operator pos:line="175" pos:column="18">.<pos:position pos:line="175" pos:column="19"/></operator><name pos:line="175" pos:column="19">referer<pos:position pos:line="175" pos:column="26"/></name></name> <operator pos:line="175" pos:column="27">&amp;&amp;<pos:position pos:line="175" pos:column="37"/></operator> <operator pos:line="175" pos:column="30">!<pos:position pos:line="175" pos:column="31"/></operator><call><name pos:line="175" pos:column="31">Curl_checkheaders<pos:position pos:line="175" pos:column="48"/></name><argument_list pos:line="175" pos:column="48">(<argument><expr><name pos:line="175" pos:column="49">conn<pos:position pos:line="175" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="55">"Referer:"<pos:position pos:line="175" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="175" pos:column="67"/></condition><then pos:line="175" pos:column="67">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="176" pos:column="5">conn<pos:position pos:line="176" pos:column="9"/></name><operator pos:line="176" pos:column="9">-&gt;<pos:position pos:line="176" pos:column="14"/></operator><name pos:line="176" pos:column="11">allocptr<pos:position pos:line="176" pos:column="19"/></name><operator pos:line="176" pos:column="19">.<pos:position pos:line="176" pos:column="20"/></operator><name pos:line="176" pos:column="20">ref<pos:position pos:line="176" pos:column="23"/></name></name> <operator pos:line="176" pos:column="24">=<pos:position pos:line="176" pos:column="25"/></operator> <call><name pos:line="176" pos:column="26">aprintf<pos:position pos:line="176" pos:column="33"/></name><argument_list pos:line="176" pos:column="33">(<argument><expr><literal type="string" pos:line="176" pos:column="34">"Referer: %s\r\n"<pos:position pos:line="176" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="53">data<pos:position pos:line="176" pos:column="57"/></name><operator pos:line="176" pos:column="57">-&gt;<pos:position pos:line="176" pos:column="62"/></operator><name pos:line="176" pos:column="59">change<pos:position pos:line="176" pos:column="65"/></name><operator pos:line="176" pos:column="65">.<pos:position pos:line="176" pos:column="66"/></operator><name pos:line="176" pos:column="66">referer<pos:position pos:line="176" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="176" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="75"/></expr_stmt></block></then>
  <else pos:line="177" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="178" pos:column="5">conn<pos:position pos:line="178" pos:column="9"/></name><operator pos:line="178" pos:column="9">-&gt;<pos:position pos:line="178" pos:column="14"/></operator><name pos:line="178" pos:column="11">allocptr<pos:position pos:line="178" pos:column="19"/></name><operator pos:line="178" pos:column="19">.<pos:position pos:line="178" pos:column="20"/></operator><name pos:line="178" pos:column="20">ref<pos:position pos:line="178" pos:column="23"/></name></name> <operator pos:line="178" pos:column="24">=<pos:position pos:line="178" pos:column="25"/></operator> <name pos:line="178" pos:column="26">NULL<pos:position pos:line="178" pos:column="30"/></name></expr>;<pos:position pos:line="178" pos:column="31"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name pos:line="180" pos:column="3">p_referrer<pos:position pos:line="180" pos:column="13"/></name> <operator pos:line="180" pos:column="14">=<pos:position pos:line="180" pos:column="15"/></operator> <name><name pos:line="180" pos:column="16">conn<pos:position pos:line="180" pos:column="20"/></name><operator pos:line="180" pos:column="20">-&gt;<pos:position pos:line="180" pos:column="25"/></operator><name pos:line="180" pos:column="22">allocptr<pos:position pos:line="180" pos:column="30"/></name><operator pos:line="180" pos:column="30">.<pos:position pos:line="180" pos:column="31"/></operator><name pos:line="180" pos:column="31">ref<pos:position pos:line="180" pos:column="34"/></name></name></expr>;<pos:position pos:line="180" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="182" pos:column="3">/*
   * Range Header
   * Only applies to PLAY, PAUSE, RECORD
   *
   * Go ahead and use the Range stuff supplied for HTTP
   */</comment>
  <if pos:line="188" pos:column="3">if<condition pos:line="188" pos:column="5">(<expr><name><name pos:line="188" pos:column="6">data<pos:position pos:line="188" pos:column="10"/></name><operator pos:line="188" pos:column="10">-&gt;<pos:position pos:line="188" pos:column="15"/></operator><name pos:line="188" pos:column="12">state<pos:position pos:line="188" pos:column="17"/></name><operator pos:line="188" pos:column="17">.<pos:position pos:line="188" pos:column="18"/></operator><name pos:line="188" pos:column="18">use_range<pos:position pos:line="188" pos:column="27"/></name></name> <operator pos:line="188" pos:column="28">&amp;&amp;<pos:position pos:line="188" pos:column="38"/></operator>
     <operator pos:line="189" pos:column="6">(<pos:position pos:line="189" pos:column="7"/></operator><name pos:line="189" pos:column="7">rtspreq<pos:position pos:line="189" pos:column="14"/></name>  <operator pos:line="189" pos:column="16">&amp;<pos:position pos:line="189" pos:column="21"/></operator> <operator pos:line="189" pos:column="18">(<pos:position pos:line="189" pos:column="19"/></operator><name pos:line="189" pos:column="19">RTSPREQ_PLAY<pos:position pos:line="189" pos:column="31"/></name> <operator pos:line="189" pos:column="32">|<pos:position pos:line="189" pos:column="33"/></operator> <name pos:line="189" pos:column="34">RTSPREQ_PAUSE<pos:position pos:line="189" pos:column="47"/></name> <operator pos:line="189" pos:column="48">|<pos:position pos:line="189" pos:column="49"/></operator> <name pos:line="189" pos:column="50">RTSPREQ_RECORD<pos:position pos:line="189" pos:column="64"/></name><operator pos:line="189" pos:column="64">)<pos:position pos:line="189" pos:column="65"/></operator><operator pos:line="189" pos:column="65">)<pos:position pos:line="189" pos:column="66"/></operator></expr>)<pos:position pos:line="189" pos:column="67"/></condition><then pos:line="189" pos:column="67"> <block pos:line="189" pos:column="68">{

    <comment type="block" pos:line="191" pos:column="5">/* Check to see if there is a range set in the custom headers */</comment>
    <if pos:line="192" pos:column="5">if<condition pos:line="192" pos:column="7">(<expr><operator pos:line="192" pos:column="8">!<pos:position pos:line="192" pos:column="9"/></operator><call><name pos:line="192" pos:column="9">Curl_checkheaders<pos:position pos:line="192" pos:column="26"/></name><argument_list pos:line="192" pos:column="26">(<argument><expr><name pos:line="192" pos:column="27">conn<pos:position pos:line="192" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="33">"Range:"<pos:position pos:line="192" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="42"/></argument_list></call> <operator pos:line="192" pos:column="43">&amp;&amp;<pos:position pos:line="192" pos:column="53"/></operator> <name><name pos:line="192" pos:column="46">data<pos:position pos:line="192" pos:column="50"/></name><operator pos:line="192" pos:column="50">-&gt;<pos:position pos:line="192" pos:column="55"/></operator><name pos:line="192" pos:column="52">state<pos:position pos:line="192" pos:column="57"/></name><operator pos:line="192" pos:column="57">.<pos:position pos:line="192" pos:column="58"/></operator><name pos:line="192" pos:column="58">range<pos:position pos:line="192" pos:column="63"/></name></name></expr>)<pos:position pos:line="192" pos:column="64"/></condition><then pos:line="192" pos:column="64"> <block pos:line="192" pos:column="65">{
      <expr_stmt><expr><call><name pos:line="193" pos:column="7">Curl_safefree<pos:position pos:line="193" pos:column="20"/></name><argument_list pos:line="193" pos:column="20">(<argument><expr><name><name pos:line="193" pos:column="21">conn<pos:position pos:line="193" pos:column="25"/></name><operator pos:line="193" pos:column="25">-&gt;<pos:position pos:line="193" pos:column="30"/></operator><name pos:line="193" pos:column="27">allocptr<pos:position pos:line="193" pos:column="35"/></name><operator pos:line="193" pos:column="35">.<pos:position pos:line="193" pos:column="36"/></operator><name pos:line="193" pos:column="36">rangeline<pos:position pos:line="193" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="193" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="194" pos:column="7">conn<pos:position pos:line="194" pos:column="11"/></name><operator pos:line="194" pos:column="11">-&gt;<pos:position pos:line="194" pos:column="16"/></operator><name pos:line="194" pos:column="13">allocptr<pos:position pos:line="194" pos:column="21"/></name><operator pos:line="194" pos:column="21">.<pos:position pos:line="194" pos:column="22"/></operator><name pos:line="194" pos:column="22">rangeline<pos:position pos:line="194" pos:column="31"/></name></name> <operator pos:line="194" pos:column="32">=<pos:position pos:line="194" pos:column="33"/></operator> <call><name pos:line="194" pos:column="34">aprintf<pos:position pos:line="194" pos:column="41"/></name><argument_list pos:line="194" pos:column="41">(<argument><expr><literal type="string" pos:line="194" pos:column="42">"Range: %s\r\n"<pos:position pos:line="194" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="194" pos:column="59">data<pos:position pos:line="194" pos:column="63"/></name><operator pos:line="194" pos:column="63">-&gt;<pos:position pos:line="194" pos:column="68"/></operator><name pos:line="194" pos:column="65">state<pos:position pos:line="194" pos:column="70"/></name><operator pos:line="194" pos:column="70">.<pos:position pos:line="194" pos:column="71"/></operator><name pos:line="194" pos:column="71">range<pos:position pos:line="194" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="194" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="78"/></expr_stmt>
      <expr_stmt><expr><name pos:line="195" pos:column="7">p_range<pos:position pos:line="195" pos:column="14"/></name> <operator pos:line="195" pos:column="15">=<pos:position pos:line="195" pos:column="16"/></operator> <name><name pos:line="195" pos:column="17">conn<pos:position pos:line="195" pos:column="21"/></name><operator pos:line="195" pos:column="21">-&gt;<pos:position pos:line="195" pos:column="26"/></operator><name pos:line="195" pos:column="23">allocptr<pos:position pos:line="195" pos:column="31"/></name><operator pos:line="195" pos:column="31">.<pos:position pos:line="195" pos:column="32"/></operator><name pos:line="195" pos:column="32">rangeline<pos:position pos:line="195" pos:column="41"/></name></name></expr>;<pos:position pos:line="195" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="196" pos:column="6"/></block></then></if>
  }<pos:position pos:line="197" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="199" pos:column="3">/*
   * Sanity check the custom headers
   */</comment>
  <if pos:line="202" pos:column="3">if<condition pos:line="202" pos:column="5">(<expr><call><name pos:line="202" pos:column="6">Curl_checkheaders<pos:position pos:line="202" pos:column="23"/></name><argument_list pos:line="202" pos:column="23">(<argument><expr><name pos:line="202" pos:column="24">conn<pos:position pos:line="202" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="202" pos:column="30">"CSeq:"<pos:position pos:line="202" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="202" pos:column="39"/></condition><then pos:line="202" pos:column="39"> <block pos:line="202" pos:column="40">{
    <expr_stmt><expr><call><name pos:line="203" pos:column="5">failf<pos:position pos:line="203" pos:column="10"/></name><argument_list pos:line="203" pos:column="10">(<argument><expr><name pos:line="203" pos:column="11">data<pos:position pos:line="203" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="203" pos:column="17">"CSeq cannot be set as a custom header."<pos:position pos:line="203" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="59"/></expr_stmt>
    <return pos:line="204" pos:column="5">return <expr><name pos:line="204" pos:column="12">CURLE_RTSP_CSEQ_ERROR<pos:position pos:line="204" pos:column="33"/></name></expr>;<pos:position pos:line="204" pos:column="34"/></return>
  }<pos:position pos:line="205" pos:column="4"/></block></then></if>
  <if pos:line="206" pos:column="3">if<condition pos:line="206" pos:column="5">(<expr><call><name pos:line="206" pos:column="6">Curl_checkheaders<pos:position pos:line="206" pos:column="23"/></name><argument_list pos:line="206" pos:column="23">(<argument><expr><name pos:line="206" pos:column="24">conn<pos:position pos:line="206" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="206" pos:column="30">"Session:"<pos:position pos:line="206" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="206" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="206" pos:column="42"/></condition><then pos:line="206" pos:column="42"> <block pos:line="206" pos:column="43">{
    <expr_stmt><expr><call><name pos:line="207" pos:column="5">failf<pos:position pos:line="207" pos:column="10"/></name><argument_list pos:line="207" pos:column="10">(<argument><expr><name pos:line="207" pos:column="11">data<pos:position pos:line="207" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="207" pos:column="17">"Session ID cannot be set as a custom header."<pos:position pos:line="207" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="207" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="65"/></expr_stmt>
    <return pos:line="208" pos:column="5">return <expr><name pos:line="208" pos:column="12">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="208" pos:column="39"/></name></expr>;<pos:position pos:line="208" pos:column="40"/></return>
  }<pos:position pos:line="209" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="211" pos:column="3">/* Initialize a dynamic send buffer */</comment>
  <expr_stmt><expr><name pos:line="212" pos:column="3">req_buffer<pos:position pos:line="212" pos:column="13"/></name> <operator pos:line="212" pos:column="14">=<pos:position pos:line="212" pos:column="15"/></operator> <call><name pos:line="212" pos:column="16">Curl_add_buffer_init<pos:position pos:line="212" pos:column="36"/></name><argument_list pos:line="212" pos:column="36">()<pos:position pos:line="212" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="39"/></expr_stmt>

  <if pos:line="214" pos:column="3">if<condition pos:line="214" pos:column="5">(<expr><operator pos:line="214" pos:column="6">!<pos:position pos:line="214" pos:column="7"/></operator><name pos:line="214" pos:column="7">req_buffer<pos:position pos:line="214" pos:column="17"/></name></expr>)<pos:position pos:line="214" pos:column="18"/></condition><then pos:line="214" pos:column="18">
    <block type="pseudo"><return pos:line="215" pos:column="5">return <expr><name pos:line="215" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="215" pos:column="31"/></name></expr>;<pos:position pos:line="215" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="217" pos:column="3">result<pos:position pos:line="217" pos:column="9"/></name> <operator pos:line="217" pos:column="10">=<pos:position pos:line="217" pos:column="11"/></operator>
    <call><name pos:line="218" pos:column="5">Curl_add_bufferf<pos:position pos:line="218" pos:column="21"/></name><argument_list pos:line="218" pos:column="21">(<argument><expr><name pos:line="218" pos:column="22">req_buffer<pos:position pos:line="218" pos:column="32"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="219" pos:column="22">"%s %s RTSP/1.0\r\n"<pos:position pos:line="219" pos:column="42"/></literal> <comment type="block" pos:line="219" pos:column="43">/* Request Stream-URI RTSP/1.0 */</comment>
                     <literal type="string" pos:line="220" pos:column="22">"CSeq: %ld\r\n"<pos:position pos:line="220" pos:column="37"/></literal></expr></argument>, <comment type="block" pos:line="220" pos:column="39">/* CSeq */</comment>
                     <argument><expr><name pos:line="221" pos:column="22">p_request<pos:position pos:line="221" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="33">p_stream_uri<pos:position pos:line="221" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="221" pos:column="47">rtsp<pos:position pos:line="221" pos:column="51"/></name><operator pos:line="221" pos:column="51">-&gt;<pos:position pos:line="221" pos:column="56"/></operator><name pos:line="221" pos:column="53">CSeq_sent<pos:position pos:line="221" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="221" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="64"/></expr_stmt>
  <if pos:line="222" pos:column="3">if<condition pos:line="222" pos:column="5">(<expr><name pos:line="222" pos:column="6">result<pos:position pos:line="222" pos:column="12"/></name></expr>)<pos:position pos:line="222" pos:column="13"/></condition><then pos:line="222" pos:column="13">
    <block type="pseudo"><return pos:line="223" pos:column="5">return <expr><name pos:line="223" pos:column="12">result<pos:position pos:line="223" pos:column="18"/></name></expr>;<pos:position pos:line="223" pos:column="19"/></return></block></then></if>

  <comment type="block" pos:line="225" pos:column="3">/*
   * Rather than do a normal alloc line, keep the session_id unformatted
   * to make comparison easier
   */</comment>
  <if pos:line="229" pos:column="3">if<condition pos:line="229" pos:column="5">(<expr><name pos:line="229" pos:column="6">p_session_id<pos:position pos:line="229" pos:column="18"/></name></expr>)<pos:position pos:line="229" pos:column="19"/></condition><then pos:line="229" pos:column="19"> <block pos:line="229" pos:column="20">{
    <expr_stmt><expr><name pos:line="230" pos:column="5">result<pos:position pos:line="230" pos:column="11"/></name> <operator pos:line="230" pos:column="12">=<pos:position pos:line="230" pos:column="13"/></operator> <call><name pos:line="230" pos:column="14">Curl_add_bufferf<pos:position pos:line="230" pos:column="30"/></name><argument_list pos:line="230" pos:column="30">(<argument><expr><name pos:line="230" pos:column="31">req_buffer<pos:position pos:line="230" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="43">"Session: %s\r\n"<pos:position pos:line="230" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="230" pos:column="62">p_session_id<pos:position pos:line="230" pos:column="74"/></name></expr></argument>)<pos:position pos:line="230" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="76"/></expr_stmt>
    <if pos:line="231" pos:column="5">if<condition pos:line="231" pos:column="7">(<expr><name pos:line="231" pos:column="8">result<pos:position pos:line="231" pos:column="14"/></name></expr>)<pos:position pos:line="231" pos:column="15"/></condition><then pos:line="231" pos:column="15">
      <block type="pseudo"><return pos:line="232" pos:column="7">return <expr><name pos:line="232" pos:column="14">result<pos:position pos:line="232" pos:column="20"/></name></expr>;<pos:position pos:line="232" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="233" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="235" pos:column="3">/*
   * Shared HTTP-like options
   */</comment>
  <expr_stmt><expr><name pos:line="238" pos:column="3">result<pos:position pos:line="238" pos:column="9"/></name> <operator pos:line="238" pos:column="10">=<pos:position pos:line="238" pos:column="11"/></operator> <call><name pos:line="238" pos:column="12">Curl_add_bufferf<pos:position pos:line="238" pos:column="28"/></name><argument_list pos:line="238" pos:column="28">(<argument><expr><name pos:line="238" pos:column="29">req_buffer<pos:position pos:line="238" pos:column="39"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="239" pos:column="29">"%s"<pos:position pos:line="239" pos:column="33"/></literal> <comment type="block" pos:line="239" pos:column="34">/* transport */</comment>
                            <literal type="string" pos:line="240" pos:column="29">"%s"<pos:position pos:line="240" pos:column="33"/></literal> <comment type="block" pos:line="240" pos:column="34">/* accept */</comment>
                            <literal type="string" pos:line="241" pos:column="29">"%s"<pos:position pos:line="241" pos:column="33"/></literal> <comment type="block" pos:line="241" pos:column="34">/* accept-encoding */</comment>
                            <literal type="string" pos:line="242" pos:column="29">"%s"<pos:position pos:line="242" pos:column="33"/></literal> <comment type="block" pos:line="242" pos:column="34">/* range */</comment>
                            <literal type="string" pos:line="243" pos:column="29">"%s"<pos:position pos:line="243" pos:column="33"/></literal> <comment type="block" pos:line="243" pos:column="34">/* referrer */</comment>
                            <literal type="string" pos:line="244" pos:column="29">"%s"<pos:position pos:line="244" pos:column="33"/></literal> <comment type="block" pos:line="244" pos:column="34">/* user-agent */</comment>
                            <literal type="string" pos:line="245" pos:column="29">"%s"<pos:position pos:line="245" pos:column="33"/></literal> <comment type="block" pos:line="245" pos:column="34">/* proxyuserpwd */</comment>
                            <literal type="string" pos:line="246" pos:column="29">"%s"<pos:position pos:line="246" pos:column="33"/></literal></expr></argument> <comment type="block" pos:line="246" pos:column="34">/* userpwd */</comment>
                            ,
                            <argument><expr><ternary><condition><expr><name pos:line="248" pos:column="29">p_transport<pos:position pos:line="248" pos:column="40"/></name></expr> ?<pos:position pos:line="248" pos:column="42"/></condition><then pos:line="248" pos:column="42"> <expr><name pos:line="248" pos:column="43">p_transport<pos:position pos:line="248" pos:column="54"/></name></expr> <pos:position pos:line="248" pos:column="55"/></then><else pos:line="248" pos:column="55">: <expr><literal type="string" pos:line="248" pos:column="57">""<pos:position pos:line="248" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
                            <argument><expr><ternary><condition><expr><name pos:line="249" pos:column="29">p_accept<pos:position pos:line="249" pos:column="37"/></name></expr> ?<pos:position pos:line="249" pos:column="39"/></condition><then pos:line="249" pos:column="39"> <expr><name pos:line="249" pos:column="40">p_accept<pos:position pos:line="249" pos:column="48"/></name></expr> <pos:position pos:line="249" pos:column="49"/></then><else pos:line="249" pos:column="49">: <expr><literal type="string" pos:line="249" pos:column="51">""<pos:position pos:line="249" pos:column="53"/></literal></expr></else></ternary></expr></argument>,
                            <argument><expr><ternary><condition><expr><name pos:line="250" pos:column="29">p_accept_encoding<pos:position pos:line="250" pos:column="46"/></name></expr> ?<pos:position pos:line="250" pos:column="48"/></condition><then pos:line="250" pos:column="48"> <expr><name pos:line="250" pos:column="49">p_accept_encoding<pos:position pos:line="250" pos:column="66"/></name></expr> <pos:position pos:line="250" pos:column="67"/></then><else pos:line="250" pos:column="67">: <expr><literal type="string" pos:line="250" pos:column="69">""<pos:position pos:line="250" pos:column="71"/></literal></expr></else></ternary></expr></argument>,
                            <argument><expr><ternary><condition><expr><name pos:line="251" pos:column="29">p_range<pos:position pos:line="251" pos:column="36"/></name></expr> ?<pos:position pos:line="251" pos:column="38"/></condition><then pos:line="251" pos:column="38"> <expr><name pos:line="251" pos:column="39">p_range<pos:position pos:line="251" pos:column="46"/></name></expr> <pos:position pos:line="251" pos:column="47"/></then><else pos:line="251" pos:column="47">: <expr><literal type="string" pos:line="251" pos:column="49">""<pos:position pos:line="251" pos:column="51"/></literal></expr></else></ternary></expr></argument>,
                            <argument><expr><ternary><condition><expr><name pos:line="252" pos:column="29">p_referrer<pos:position pos:line="252" pos:column="39"/></name></expr> ?<pos:position pos:line="252" pos:column="41"/></condition><then pos:line="252" pos:column="41"> <expr><name pos:line="252" pos:column="42">p_referrer<pos:position pos:line="252" pos:column="52"/></name></expr> <pos:position pos:line="252" pos:column="53"/></then><else pos:line="252" pos:column="53">: <expr><literal type="string" pos:line="252" pos:column="55">""<pos:position pos:line="252" pos:column="57"/></literal></expr></else></ternary></expr></argument>,
                            <argument><expr><ternary><condition><expr><name pos:line="253" pos:column="29">p_uagent<pos:position pos:line="253" pos:column="37"/></name></expr> ?<pos:position pos:line="253" pos:column="39"/></condition><then pos:line="253" pos:column="39"> <expr><name pos:line="253" pos:column="40">p_uagent<pos:position pos:line="253" pos:column="48"/></name></expr> <pos:position pos:line="253" pos:column="49"/></then><else pos:line="253" pos:column="49">: <expr><literal type="string" pos:line="253" pos:column="51">""<pos:position pos:line="253" pos:column="53"/></literal></expr></else></ternary></expr></argument>,
                            <argument><expr><ternary><condition><expr><name pos:line="254" pos:column="29">p_proxyuserpwd<pos:position pos:line="254" pos:column="43"/></name></expr> ?<pos:position pos:line="254" pos:column="45"/></condition><then pos:line="254" pos:column="45"> <expr><name pos:line="254" pos:column="46">p_proxyuserpwd<pos:position pos:line="254" pos:column="60"/></name></expr> <pos:position pos:line="254" pos:column="61"/></then><else pos:line="254" pos:column="61">: <expr><literal type="string" pos:line="254" pos:column="63">""<pos:position pos:line="254" pos:column="65"/></literal></expr></else></ternary></expr></argument>,
                            <argument><expr><ternary><condition><expr><name pos:line="255" pos:column="29">p_userpwd<pos:position pos:line="255" pos:column="38"/></name></expr> ?<pos:position pos:line="255" pos:column="40"/></condition><then pos:line="255" pos:column="40"> <expr><name pos:line="255" pos:column="41">p_userpwd<pos:position pos:line="255" pos:column="50"/></name></expr> <pos:position pos:line="255" pos:column="51"/></then><else pos:line="255" pos:column="51">: <expr><literal type="string" pos:line="255" pos:column="53">""<pos:position pos:line="255" pos:column="55"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="255" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="57"/></expr_stmt>

  <comment type="block" pos:line="257" pos:column="3">/*
   * Free userpwd now --- cannot reuse this for Negotiate and possibly NTLM
   * with basic and digest, it will be freed anyway by the next request
   */</comment>
  <expr_stmt><expr><call><name pos:line="261" pos:column="3">Curl_safefree<pos:position pos:line="261" pos:column="16"/></name><argument_list pos:line="261" pos:column="16">(<argument><expr><name><name pos:line="261" pos:column="17">conn<pos:position pos:line="261" pos:column="21"/></name><operator pos:line="261" pos:column="21">-&gt;<pos:position pos:line="261" pos:column="26"/></operator><name pos:line="261" pos:column="23">allocptr<pos:position pos:line="261" pos:column="31"/></name><operator pos:line="261" pos:column="31">.<pos:position pos:line="261" pos:column="32"/></operator><name pos:line="261" pos:column="32">userpwd<pos:position pos:line="261" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="261" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="262" pos:column="3">conn<pos:position pos:line="262" pos:column="7"/></name><operator pos:line="262" pos:column="7">-&gt;<pos:position pos:line="262" pos:column="12"/></operator><name pos:line="262" pos:column="9">allocptr<pos:position pos:line="262" pos:column="17"/></name><operator pos:line="262" pos:column="17">.<pos:position pos:line="262" pos:column="18"/></operator><name pos:line="262" pos:column="18">userpwd<pos:position pos:line="262" pos:column="25"/></name></name> <operator pos:line="262" pos:column="26">=<pos:position pos:line="262" pos:column="27"/></operator> <name pos:line="262" pos:column="28">NULL<pos:position pos:line="262" pos:column="32"/></name></expr>;<pos:position pos:line="262" pos:column="33"/></expr_stmt>

  <if pos:line="264" pos:column="3">if<condition pos:line="264" pos:column="5">(<expr><name pos:line="264" pos:column="6">result<pos:position pos:line="264" pos:column="12"/></name></expr>)<pos:position pos:line="264" pos:column="13"/></condition><then pos:line="264" pos:column="13">
    <block type="pseudo"><return pos:line="265" pos:column="5">return <expr><name pos:line="265" pos:column="12">result<pos:position pos:line="265" pos:column="18"/></name></expr>;<pos:position pos:line="265" pos:column="19"/></return></block></then></if>

  <if pos:line="267" pos:column="3">if<condition pos:line="267" pos:column="5">(<expr><operator pos:line="267" pos:column="6">(<pos:position pos:line="267" pos:column="7"/></operator><name pos:line="267" pos:column="7">rtspreq<pos:position pos:line="267" pos:column="14"/></name> <operator pos:line="267" pos:column="15">==<pos:position pos:line="267" pos:column="17"/></operator> <name pos:line="267" pos:column="18">RTSPREQ_SETUP<pos:position pos:line="267" pos:column="31"/></name><operator pos:line="267" pos:column="31">)<pos:position pos:line="267" pos:column="32"/></operator> <operator pos:line="267" pos:column="33">||<pos:position pos:line="267" pos:column="35"/></operator> <operator pos:line="267" pos:column="36">(<pos:position pos:line="267" pos:column="37"/></operator><name pos:line="267" pos:column="37">rtspreq<pos:position pos:line="267" pos:column="44"/></name> <operator pos:line="267" pos:column="45">==<pos:position pos:line="267" pos:column="47"/></operator> <name pos:line="267" pos:column="48">RTSPREQ_DESCRIBE<pos:position pos:line="267" pos:column="64"/></name><operator pos:line="267" pos:column="64">)<pos:position pos:line="267" pos:column="65"/></operator></expr>)<pos:position pos:line="267" pos:column="66"/></condition><then pos:line="267" pos:column="66"> <block pos:line="267" pos:column="67">{
    <expr_stmt><expr><name pos:line="268" pos:column="5">result<pos:position pos:line="268" pos:column="11"/></name> <operator pos:line="268" pos:column="12">=<pos:position pos:line="268" pos:column="13"/></operator> <call><name pos:line="268" pos:column="14">Curl_add_timecondition<pos:position pos:line="268" pos:column="36"/></name><argument_list pos:line="268" pos:column="36">(<argument><expr><name pos:line="268" pos:column="37">data<pos:position pos:line="268" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="268" pos:column="43">req_buffer<pos:position pos:line="268" pos:column="53"/></name></expr></argument>)<pos:position pos:line="268" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="55"/></expr_stmt>
    <if pos:line="269" pos:column="5">if<condition pos:line="269" pos:column="7">(<expr><name pos:line="269" pos:column="8">result<pos:position pos:line="269" pos:column="14"/></name></expr>)<pos:position pos:line="269" pos:column="15"/></condition><then pos:line="269" pos:column="15">
      <block type="pseudo"><return pos:line="270" pos:column="7">return <expr><name pos:line="270" pos:column="14">result<pos:position pos:line="270" pos:column="20"/></name></expr>;<pos:position pos:line="270" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="271" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="273" pos:column="3">result<pos:position pos:line="273" pos:column="9"/></name> <operator pos:line="273" pos:column="10">=<pos:position pos:line="273" pos:column="11"/></operator> <call><name pos:line="273" pos:column="12">Curl_add_custom_headers<pos:position pos:line="273" pos:column="35"/></name><argument_list pos:line="273" pos:column="35">(<argument><expr><name pos:line="273" pos:column="36">conn<pos:position pos:line="273" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="273" pos:column="42">FALSE<pos:position pos:line="273" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="273" pos:column="49">req_buffer<pos:position pos:line="273" pos:column="59"/></name></expr></argument>)<pos:position pos:line="273" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="61"/></expr_stmt>
  <if pos:line="274" pos:column="3">if<condition pos:line="274" pos:column="5">(<expr><name pos:line="274" pos:column="6">result<pos:position pos:line="274" pos:column="12"/></name></expr>)<pos:position pos:line="274" pos:column="13"/></condition><then pos:line="274" pos:column="13">
    <block type="pseudo"><return pos:line="275" pos:column="5">return <expr><name pos:line="275" pos:column="12">result<pos:position pos:line="275" pos:column="18"/></name></expr>;<pos:position pos:line="275" pos:column="19"/></return></block></then></if>

  <if pos:line="277" pos:column="3">if<condition pos:line="277" pos:column="5">(<expr><name pos:line="277" pos:column="6">rtspreq<pos:position pos:line="277" pos:column="13"/></name> <operator pos:line="277" pos:column="14">==<pos:position pos:line="277" pos:column="16"/></operator> <name pos:line="277" pos:column="17">RTSPREQ_ANNOUNCE<pos:position pos:line="277" pos:column="33"/></name> <operator pos:line="277" pos:column="34">||<pos:position pos:line="277" pos:column="36"/></operator>
     <name pos:line="278" pos:column="6">rtspreq<pos:position pos:line="278" pos:column="13"/></name> <operator pos:line="278" pos:column="14">==<pos:position pos:line="278" pos:column="16"/></operator> <name pos:line="278" pos:column="17">RTSPREQ_SET_PARAMETER<pos:position pos:line="278" pos:column="38"/></name> <operator pos:line="278" pos:column="39">||<pos:position pos:line="278" pos:column="41"/></operator>
     <name pos:line="279" pos:column="6">rtspreq<pos:position pos:line="279" pos:column="13"/></name> <operator pos:line="279" pos:column="14">==<pos:position pos:line="279" pos:column="16"/></operator> <name pos:line="279" pos:column="17">RTSPREQ_GET_PARAMETER<pos:position pos:line="279" pos:column="38"/></name></expr>)<pos:position pos:line="279" pos:column="39"/></condition><then pos:line="279" pos:column="39"> <block pos:line="279" pos:column="40">{

    <if pos:line="281" pos:column="5">if<condition pos:line="281" pos:column="7">(<expr><name><name pos:line="281" pos:column="8">data<pos:position pos:line="281" pos:column="12"/></name><operator pos:line="281" pos:column="12">-&gt;<pos:position pos:line="281" pos:column="17"/></operator><name pos:line="281" pos:column="14">set<pos:position pos:line="281" pos:column="17"/></name><operator pos:line="281" pos:column="17">.<pos:position pos:line="281" pos:column="18"/></operator><name pos:line="281" pos:column="18">upload<pos:position pos:line="281" pos:column="24"/></name></name></expr>)<pos:position pos:line="281" pos:column="25"/></condition><then pos:line="281" pos:column="25"> <block pos:line="281" pos:column="26">{
      <expr_stmt><expr><name pos:line="282" pos:column="7">putsize<pos:position pos:line="282" pos:column="14"/></name> <operator pos:line="282" pos:column="15">=<pos:position pos:line="282" pos:column="16"/></operator> <name><name pos:line="282" pos:column="17">data<pos:position pos:line="282" pos:column="21"/></name><operator pos:line="282" pos:column="21">-&gt;<pos:position pos:line="282" pos:column="26"/></operator><name pos:line="282" pos:column="23">state<pos:position pos:line="282" pos:column="28"/></name><operator pos:line="282" pos:column="28">.<pos:position pos:line="282" pos:column="29"/></operator><name pos:line="282" pos:column="29">infilesize<pos:position pos:line="282" pos:column="39"/></name></name></expr>;<pos:position pos:line="282" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="283" pos:column="7">data<pos:position pos:line="283" pos:column="11"/></name><operator pos:line="283" pos:column="11">-&gt;<pos:position pos:line="283" pos:column="16"/></operator><name pos:line="283" pos:column="13">set<pos:position pos:line="283" pos:column="16"/></name><operator pos:line="283" pos:column="16">.<pos:position pos:line="283" pos:column="17"/></operator><name pos:line="283" pos:column="17">httpreq<pos:position pos:line="283" pos:column="24"/></name></name> <operator pos:line="283" pos:column="25">=<pos:position pos:line="283" pos:column="26"/></operator> <name pos:line="283" pos:column="27">HTTPREQ_PUT<pos:position pos:line="283" pos:column="38"/></name></expr>;<pos:position pos:line="283" pos:column="39"/></expr_stmt>

    }<pos:position pos:line="285" pos:column="6"/></block></then>
    <else pos:line="286" pos:column="5">else <block pos:line="286" pos:column="10">{
      <expr_stmt><expr><name pos:line="287" pos:column="7">postsize<pos:position pos:line="287" pos:column="15"/></name> <operator pos:line="287" pos:column="16">=<pos:position pos:line="287" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="287" pos:column="18">(<pos:position pos:line="287" pos:column="19"/></operator><name><name pos:line="287" pos:column="19">data<pos:position pos:line="287" pos:column="23"/></name><operator pos:line="287" pos:column="23">-&gt;<pos:position pos:line="287" pos:column="28"/></operator><name pos:line="287" pos:column="25">state<pos:position pos:line="287" pos:column="30"/></name><operator pos:line="287" pos:column="30">.<pos:position pos:line="287" pos:column="31"/></operator><name pos:line="287" pos:column="31">infilesize<pos:position pos:line="287" pos:column="41"/></name></name> <operator pos:line="287" pos:column="42">!=<pos:position pos:line="287" pos:column="44"/></operator> <operator pos:line="287" pos:column="45">-<pos:position pos:line="287" pos:column="46"/></operator><literal type="number" pos:line="287" pos:column="46">1<pos:position pos:line="287" pos:column="47"/></literal><operator pos:line="287" pos:column="47">)<pos:position pos:line="287" pos:column="48"/></operator></expr>?<pos:position pos:line="287" pos:column="49"/></condition><then pos:line="287" pos:column="49">
        <expr><name><name pos:line="288" pos:column="9">data<pos:position pos:line="288" pos:column="13"/></name><operator pos:line="288" pos:column="13">-&gt;<pos:position pos:line="288" pos:column="18"/></operator><name pos:line="288" pos:column="15">state<pos:position pos:line="288" pos:column="20"/></name><operator pos:line="288" pos:column="20">.<pos:position pos:line="288" pos:column="21"/></operator><name pos:line="288" pos:column="21">infilesize<pos:position pos:line="288" pos:column="31"/></name></name></expr></then><else pos:line="288" pos:column="31">:
        <expr><operator pos:line="289" pos:column="9">(<pos:position pos:line="289" pos:column="10"/></operator><ternary><condition><expr><name><name pos:line="289" pos:column="10">data<pos:position pos:line="289" pos:column="14"/></name><operator pos:line="289" pos:column="14">-&gt;<pos:position pos:line="289" pos:column="19"/></operator><name pos:line="289" pos:column="16">set<pos:position pos:line="289" pos:column="19"/></name><operator pos:line="289" pos:column="19">.<pos:position pos:line="289" pos:column="20"/></operator><name pos:line="289" pos:column="20">postfields<pos:position pos:line="289" pos:column="30"/></name></name></expr>?<pos:position pos:line="289" pos:column="31"/></condition><then pos:line="289" pos:column="31"> <expr><operator pos:line="289" pos:column="32">(<pos:position pos:line="289" pos:column="33"/></operator><name pos:line="289" pos:column="33">curl_off_t<pos:position pos:line="289" pos:column="43"/></name><operator pos:line="289" pos:column="43">)<pos:position pos:line="289" pos:column="44"/></operator><call><name pos:line="289" pos:column="44">strlen<pos:position pos:line="289" pos:column="50"/></name><argument_list pos:line="289" pos:column="50">(<argument><expr><name><name pos:line="289" pos:column="51">data<pos:position pos:line="289" pos:column="55"/></name><operator pos:line="289" pos:column="55">-&gt;<pos:position pos:line="289" pos:column="60"/></operator><name pos:line="289" pos:column="57">set<pos:position pos:line="289" pos:column="60"/></name><operator pos:line="289" pos:column="60">.<pos:position pos:line="289" pos:column="61"/></operator><name pos:line="289" pos:column="61">postfields<pos:position pos:line="289" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="289" pos:column="72"/></argument_list></call></expr></then><else pos:line="289" pos:column="72">:<expr><literal type="number" pos:line="289" pos:column="73">0<pos:position pos:line="289" pos:column="74"/></literal></expr></else></ternary><operator pos:line="289" pos:column="74">)<pos:position pos:line="289" pos:column="75"/></operator></expr></else></ternary></expr>;<pos:position pos:line="289" pos:column="76"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="290" pos:column="7">data<pos:position pos:line="290" pos:column="11"/></name><operator pos:line="290" pos:column="11">-&gt;<pos:position pos:line="290" pos:column="16"/></operator><name pos:line="290" pos:column="13">set<pos:position pos:line="290" pos:column="16"/></name><operator pos:line="290" pos:column="16">.<pos:position pos:line="290" pos:column="17"/></operator><name pos:line="290" pos:column="17">httpreq<pos:position pos:line="290" pos:column="24"/></name></name> <operator pos:line="290" pos:column="25">=<pos:position pos:line="290" pos:column="26"/></operator> <name pos:line="290" pos:column="27">HTTPREQ_POST<pos:position pos:line="290" pos:column="39"/></name></expr>;<pos:position pos:line="290" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="291" pos:column="6"/></block></else></if>

    <if pos:line="293" pos:column="5">if<condition pos:line="293" pos:column="7">(<expr><name pos:line="293" pos:column="8">putsize<pos:position pos:line="293" pos:column="15"/></name> <operator pos:line="293" pos:column="16">&gt;<pos:position pos:line="293" pos:column="20"/></operator> <literal type="number" pos:line="293" pos:column="18">0<pos:position pos:line="293" pos:column="19"/></literal> <operator pos:line="293" pos:column="20">||<pos:position pos:line="293" pos:column="22"/></operator> <name pos:line="293" pos:column="23">postsize<pos:position pos:line="293" pos:column="31"/></name> <operator pos:line="293" pos:column="32">&gt;<pos:position pos:line="293" pos:column="36"/></operator> <literal type="number" pos:line="293" pos:column="34">0<pos:position pos:line="293" pos:column="35"/></literal></expr>)<pos:position pos:line="293" pos:column="36"/></condition><then pos:line="293" pos:column="36"> <block pos:line="293" pos:column="37">{
      <comment type="block" pos:line="294" pos:column="7">/* As stated in the http comments, it is probably not wise to
       * actually set a custom Content-Length in the headers */</comment>
      <if pos:line="296" pos:column="7">if<condition pos:line="296" pos:column="9">(<expr><operator pos:line="296" pos:column="10">!<pos:position pos:line="296" pos:column="11"/></operator><call><name pos:line="296" pos:column="11">Curl_checkheaders<pos:position pos:line="296" pos:column="28"/></name><argument_list pos:line="296" pos:column="28">(<argument><expr><name pos:line="296" pos:column="29">conn<pos:position pos:line="296" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="296" pos:column="35">"Content-Length:"<pos:position pos:line="296" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="296" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="296" pos:column="54"/></condition><then pos:line="296" pos:column="54"> <block pos:line="296" pos:column="55">{
        <expr_stmt><expr><name pos:line="297" pos:column="9">result<pos:position pos:line="297" pos:column="15"/></name> <operator pos:line="297" pos:column="16">=<pos:position pos:line="297" pos:column="17"/></operator> <call><name pos:line="297" pos:column="18">Curl_add_bufferf<pos:position pos:line="297" pos:column="34"/></name><argument_list pos:line="297" pos:column="34">(<argument><expr><name pos:line="297" pos:column="35">req_buffer<pos:position pos:line="297" pos:column="45"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="298" pos:column="13">"Content-Length: %"<pos:position pos:line="298" pos:column="32"/></literal> <name pos:line="298" pos:column="33">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="298" pos:column="55"/></name><literal type="string" pos:line="298" pos:column="55">"\r\n"<pos:position pos:line="298" pos:column="61"/></literal></expr></argument>,
            <argument><expr><operator pos:line="299" pos:column="13">(<pos:position pos:line="299" pos:column="14"/></operator><ternary><condition><expr><name><name pos:line="299" pos:column="14">data<pos:position pos:line="299" pos:column="18"/></name><operator pos:line="299" pos:column="18">-&gt;<pos:position pos:line="299" pos:column="23"/></operator><name pos:line="299" pos:column="20">set<pos:position pos:line="299" pos:column="23"/></name><operator pos:line="299" pos:column="23">.<pos:position pos:line="299" pos:column="24"/></operator><name pos:line="299" pos:column="24">upload<pos:position pos:line="299" pos:column="30"/></name></name></expr> ?<pos:position pos:line="299" pos:column="32"/></condition><then pos:line="299" pos:column="32"> <expr><name pos:line="299" pos:column="33">putsize<pos:position pos:line="299" pos:column="40"/></name></expr> <pos:position pos:line="299" pos:column="41"/></then><else pos:line="299" pos:column="41">: <expr><name pos:line="299" pos:column="43">postsize<pos:position pos:line="299" pos:column="51"/></name></expr></else></ternary><operator pos:line="299" pos:column="51">)<pos:position pos:line="299" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="299" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="54"/></expr_stmt>
        <if pos:line="300" pos:column="9">if<condition pos:line="300" pos:column="11">(<expr><name pos:line="300" pos:column="12">result<pos:position pos:line="300" pos:column="18"/></name></expr>)<pos:position pos:line="300" pos:column="19"/></condition><then pos:line="300" pos:column="19">
          <block type="pseudo"><return pos:line="301" pos:column="11">return <expr><name pos:line="301" pos:column="18">result<pos:position pos:line="301" pos:column="24"/></name></expr>;<pos:position pos:line="301" pos:column="25"/></return></block></then></if>
      }<pos:position pos:line="302" pos:column="8"/></block></then></if>

      <if pos:line="304" pos:column="7">if<condition pos:line="304" pos:column="9">(<expr><name pos:line="304" pos:column="10">rtspreq<pos:position pos:line="304" pos:column="17"/></name> <operator pos:line="304" pos:column="18">==<pos:position pos:line="304" pos:column="20"/></operator> <name pos:line="304" pos:column="21">RTSPREQ_SET_PARAMETER<pos:position pos:line="304" pos:column="42"/></name> <operator pos:line="304" pos:column="43">||<pos:position pos:line="304" pos:column="45"/></operator>
         <name pos:line="305" pos:column="10">rtspreq<pos:position pos:line="305" pos:column="17"/></name> <operator pos:line="305" pos:column="18">==<pos:position pos:line="305" pos:column="20"/></operator> <name pos:line="305" pos:column="21">RTSPREQ_GET_PARAMETER<pos:position pos:line="305" pos:column="42"/></name></expr>)<pos:position pos:line="305" pos:column="43"/></condition><then pos:line="305" pos:column="43"> <block pos:line="305" pos:column="44">{
        <if pos:line="306" pos:column="9">if<condition pos:line="306" pos:column="11">(<expr><operator pos:line="306" pos:column="12">!<pos:position pos:line="306" pos:column="13"/></operator><call><name pos:line="306" pos:column="13">Curl_checkheaders<pos:position pos:line="306" pos:column="30"/></name><argument_list pos:line="306" pos:column="30">(<argument><expr><name pos:line="306" pos:column="31">conn<pos:position pos:line="306" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="306" pos:column="37">"Content-Type:"<pos:position pos:line="306" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="306" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="306" pos:column="54"/></condition><then pos:line="306" pos:column="54"> <block pos:line="306" pos:column="55">{
          <expr_stmt><expr><name pos:line="307" pos:column="11">result<pos:position pos:line="307" pos:column="17"/></name> <operator pos:line="307" pos:column="18">=<pos:position pos:line="307" pos:column="19"/></operator> <call><name pos:line="307" pos:column="20">Curl_add_bufferf<pos:position pos:line="307" pos:column="36"/></name><argument_list pos:line="307" pos:column="36">(<argument><expr><name pos:line="307" pos:column="37">req_buffer<pos:position pos:line="307" pos:column="47"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="308" pos:column="15">"Content-Type: text/parameters\r\n"<pos:position pos:line="308" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="308" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="52"/></expr_stmt>
          <if pos:line="309" pos:column="11">if<condition pos:line="309" pos:column="13">(<expr><name pos:line="309" pos:column="14">result<pos:position pos:line="309" pos:column="20"/></name></expr>)<pos:position pos:line="309" pos:column="21"/></condition><then pos:line="309" pos:column="21">
            <block type="pseudo"><return pos:line="310" pos:column="13">return <expr><name pos:line="310" pos:column="20">result<pos:position pos:line="310" pos:column="26"/></name></expr>;<pos:position pos:line="310" pos:column="27"/></return></block></then></if>
        }<pos:position pos:line="311" pos:column="10"/></block></then></if>
      }<pos:position pos:line="312" pos:column="8"/></block></then></if>

      <if pos:line="314" pos:column="7">if<condition pos:line="314" pos:column="9">(<expr><name pos:line="314" pos:column="10">rtspreq<pos:position pos:line="314" pos:column="17"/></name> <operator pos:line="314" pos:column="18">==<pos:position pos:line="314" pos:column="20"/></operator> <name pos:line="314" pos:column="21">RTSPREQ_ANNOUNCE<pos:position pos:line="314" pos:column="37"/></name></expr>)<pos:position pos:line="314" pos:column="38"/></condition><then pos:line="314" pos:column="38"> <block pos:line="314" pos:column="39">{
        <if pos:line="315" pos:column="9">if<condition pos:line="315" pos:column="11">(<expr><operator pos:line="315" pos:column="12">!<pos:position pos:line="315" pos:column="13"/></operator><call><name pos:line="315" pos:column="13">Curl_checkheaders<pos:position pos:line="315" pos:column="30"/></name><argument_list pos:line="315" pos:column="30">(<argument><expr><name pos:line="315" pos:column="31">conn<pos:position pos:line="315" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="315" pos:column="37">"Content-Type:"<pos:position pos:line="315" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="315" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="315" pos:column="54"/></condition><then pos:line="315" pos:column="54"> <block pos:line="315" pos:column="55">{
          <expr_stmt><expr><name pos:line="316" pos:column="11">result<pos:position pos:line="316" pos:column="17"/></name> <operator pos:line="316" pos:column="18">=<pos:position pos:line="316" pos:column="19"/></operator> <call><name pos:line="316" pos:column="20">Curl_add_bufferf<pos:position pos:line="316" pos:column="36"/></name><argument_list pos:line="316" pos:column="36">(<argument><expr><name pos:line="316" pos:column="37">req_buffer<pos:position pos:line="316" pos:column="47"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="317" pos:column="15">"Content-Type: application/sdp\r\n"<pos:position pos:line="317" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="317" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="52"/></expr_stmt>
          <if pos:line="318" pos:column="11">if<condition pos:line="318" pos:column="13">(<expr><name pos:line="318" pos:column="14">result<pos:position pos:line="318" pos:column="20"/></name></expr>)<pos:position pos:line="318" pos:column="21"/></condition><then pos:line="318" pos:column="21">
            <block type="pseudo"><return pos:line="319" pos:column="13">return <expr><name pos:line="319" pos:column="20">result<pos:position pos:line="319" pos:column="26"/></name></expr>;<pos:position pos:line="319" pos:column="27"/></return></block></then></if>
        }<pos:position pos:line="320" pos:column="10"/></block></then></if>
      }<pos:position pos:line="321" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="323" pos:column="7">data<pos:position pos:line="323" pos:column="11"/></name><operator pos:line="323" pos:column="11">-&gt;<pos:position pos:line="323" pos:column="16"/></operator><name pos:line="323" pos:column="13">state<pos:position pos:line="323" pos:column="18"/></name><operator pos:line="323" pos:column="18">.<pos:position pos:line="323" pos:column="19"/></operator><name pos:line="323" pos:column="19">expect100header<pos:position pos:line="323" pos:column="34"/></name></name> <operator pos:line="323" pos:column="35">=<pos:position pos:line="323" pos:column="36"/></operator> <name pos:line="323" pos:column="37">FALSE<pos:position pos:line="323" pos:column="42"/></name></expr>;<pos:position pos:line="323" pos:column="43"/></expr_stmt> <comment type="block" pos:line="323" pos:column="44">/* RTSP posts are simple/small */</comment>
    }<pos:position pos:line="324" pos:column="6"/></block></then>
    <elseif pos:line="325" pos:column="5">else <if pos:line="325" pos:column="10">if<condition pos:line="325" pos:column="12">(<expr><name pos:line="325" pos:column="13">rtspreq<pos:position pos:line="325" pos:column="20"/></name> <operator pos:line="325" pos:column="21">==<pos:position pos:line="325" pos:column="23"/></operator> <name pos:line="325" pos:column="24">RTSPREQ_GET_PARAMETER<pos:position pos:line="325" pos:column="45"/></name></expr>)<pos:position pos:line="325" pos:column="46"/></condition><then pos:line="325" pos:column="46"> <block pos:line="325" pos:column="47">{
      <comment type="block" pos:line="326" pos:column="7">/* Check for an empty GET_PARAMETER (heartbeat) request */</comment>
      <expr_stmt><expr><name><name pos:line="327" pos:column="7">data<pos:position pos:line="327" pos:column="11"/></name><operator pos:line="327" pos:column="11">-&gt;<pos:position pos:line="327" pos:column="16"/></operator><name pos:line="327" pos:column="13">set<pos:position pos:line="327" pos:column="16"/></name><operator pos:line="327" pos:column="16">.<pos:position pos:line="327" pos:column="17"/></operator><name pos:line="327" pos:column="17">httpreq<pos:position pos:line="327" pos:column="24"/></name></name> <operator pos:line="327" pos:column="25">=<pos:position pos:line="327" pos:column="26"/></operator> <name pos:line="327" pos:column="27">HTTPREQ_HEAD<pos:position pos:line="327" pos:column="39"/></name></expr>;<pos:position pos:line="327" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="328" pos:column="7">data<pos:position pos:line="328" pos:column="11"/></name><operator pos:line="328" pos:column="11">-&gt;<pos:position pos:line="328" pos:column="16"/></operator><name pos:line="328" pos:column="13">set<pos:position pos:line="328" pos:column="16"/></name><operator pos:line="328" pos:column="16">.<pos:position pos:line="328" pos:column="17"/></operator><name pos:line="328" pos:column="17">opt_no_body<pos:position pos:line="328" pos:column="28"/></name></name> <operator pos:line="328" pos:column="29">=<pos:position pos:line="328" pos:column="30"/></operator> <name pos:line="328" pos:column="31">TRUE<pos:position pos:line="328" pos:column="35"/></name></expr>;<pos:position pos:line="328" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="329" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="330" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="332" pos:column="3">/* RTSP never allows chunked transfer */</comment>
  <expr_stmt><expr><name><name pos:line="333" pos:column="3">data<pos:position pos:line="333" pos:column="7"/></name><operator pos:line="333" pos:column="7">-&gt;<pos:position pos:line="333" pos:column="12"/></operator><name pos:line="333" pos:column="9">req<pos:position pos:line="333" pos:column="12"/></name><operator pos:line="333" pos:column="12">.<pos:position pos:line="333" pos:column="13"/></operator><name pos:line="333" pos:column="13">forbidchunk<pos:position pos:line="333" pos:column="24"/></name></name> <operator pos:line="333" pos:column="25">=<pos:position pos:line="333" pos:column="26"/></operator> <name pos:line="333" pos:column="27">TRUE<pos:position pos:line="333" pos:column="31"/></name></expr>;<pos:position pos:line="333" pos:column="32"/></expr_stmt>
  <comment type="block" pos:line="334" pos:column="3">/* Finish the request buffer */</comment>
  <expr_stmt><expr><name pos:line="335" pos:column="3">result<pos:position pos:line="335" pos:column="9"/></name> <operator pos:line="335" pos:column="10">=<pos:position pos:line="335" pos:column="11"/></operator> <call><name pos:line="335" pos:column="12">Curl_add_buffer<pos:position pos:line="335" pos:column="27"/></name><argument_list pos:line="335" pos:column="27">(<argument><expr><name pos:line="335" pos:column="28">req_buffer<pos:position pos:line="335" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="335" pos:column="40">"\r\n"<pos:position pos:line="335" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="335" pos:column="48">2<pos:position pos:line="335" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="335" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="51"/></expr_stmt>
  <if pos:line="336" pos:column="3">if<condition pos:line="336" pos:column="5">(<expr><name pos:line="336" pos:column="6">result<pos:position pos:line="336" pos:column="12"/></name></expr>)<pos:position pos:line="336" pos:column="13"/></condition><then pos:line="336" pos:column="13">
    <block type="pseudo"><return pos:line="337" pos:column="5">return <expr><name pos:line="337" pos:column="12">result<pos:position pos:line="337" pos:column="18"/></name></expr>;<pos:position pos:line="337" pos:column="19"/></return></block></then></if>

  <if pos:line="339" pos:column="3">if<condition pos:line="339" pos:column="5">(<expr><name pos:line="339" pos:column="6">postsize<pos:position pos:line="339" pos:column="14"/></name> <operator pos:line="339" pos:column="15">&gt;<pos:position pos:line="339" pos:column="19"/></operator> <literal type="number" pos:line="339" pos:column="17">0<pos:position pos:line="339" pos:column="18"/></literal></expr>)<pos:position pos:line="339" pos:column="19"/></condition><then pos:line="339" pos:column="19"> <block pos:line="339" pos:column="20">{
    <expr_stmt><expr><name pos:line="340" pos:column="5">result<pos:position pos:line="340" pos:column="11"/></name> <operator pos:line="340" pos:column="12">=<pos:position pos:line="340" pos:column="13"/></operator> <call><name pos:line="340" pos:column="14">Curl_add_buffer<pos:position pos:line="340" pos:column="29"/></name><argument_list pos:line="340" pos:column="29">(<argument><expr><name pos:line="340" pos:column="30">req_buffer<pos:position pos:line="340" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="340" pos:column="42">data<pos:position pos:line="340" pos:column="46"/></name><operator pos:line="340" pos:column="46">-&gt;<pos:position pos:line="340" pos:column="51"/></operator><name pos:line="340" pos:column="48">set<pos:position pos:line="340" pos:column="51"/></name><operator pos:line="340" pos:column="51">.<pos:position pos:line="340" pos:column="52"/></operator><name pos:line="340" pos:column="52">postfields<pos:position pos:line="340" pos:column="62"/></name></name></expr></argument>,
                             <argument><expr><operator pos:line="341" pos:column="30">(<pos:position pos:line="341" pos:column="31"/></operator><name pos:line="341" pos:column="31">size_t<pos:position pos:line="341" pos:column="37"/></name><operator pos:line="341" pos:column="37">)<pos:position pos:line="341" pos:column="38"/></operator><name pos:line="341" pos:column="38">postsize<pos:position pos:line="341" pos:column="46"/></name></expr></argument>)<pos:position pos:line="341" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="48"/></expr_stmt>
    <if pos:line="342" pos:column="5">if<condition pos:line="342" pos:column="7">(<expr><name pos:line="342" pos:column="8">result<pos:position pos:line="342" pos:column="14"/></name></expr>)<pos:position pos:line="342" pos:column="15"/></condition><then pos:line="342" pos:column="15">
      <block type="pseudo"><return pos:line="343" pos:column="7">return <expr><name pos:line="343" pos:column="14">result<pos:position pos:line="343" pos:column="20"/></name></expr>;<pos:position pos:line="343" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="344" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="346" pos:column="3">/* issue the request */</comment>
  <expr_stmt><expr><name pos:line="347" pos:column="3">result<pos:position pos:line="347" pos:column="9"/></name> <operator pos:line="347" pos:column="10">=<pos:position pos:line="347" pos:column="11"/></operator> <call><name pos:line="347" pos:column="12">Curl_add_buffer_send<pos:position pos:line="347" pos:column="32"/></name><argument_list pos:line="347" pos:column="32">(<argument><expr><name pos:line="347" pos:column="33">req_buffer<pos:position pos:line="347" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="347" pos:column="45">conn<pos:position pos:line="347" pos:column="49"/></name></expr></argument>,
                                <argument><expr><operator pos:line="348" pos:column="33">&amp;<pos:position pos:line="348" pos:column="38"/></operator><name><name pos:line="348" pos:column="34">data<pos:position pos:line="348" pos:column="38"/></name><operator pos:line="348" pos:column="38">-&gt;<pos:position pos:line="348" pos:column="43"/></operator><name pos:line="348" pos:column="40">info<pos:position pos:line="348" pos:column="44"/></name><operator pos:line="348" pos:column="44">.<pos:position pos:line="348" pos:column="45"/></operator><name pos:line="348" pos:column="45">request_size<pos:position pos:line="348" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="348" pos:column="59">0<pos:position pos:line="348" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="348" pos:column="62">FIRSTSOCKET<pos:position pos:line="348" pos:column="73"/></name></expr></argument>)<pos:position pos:line="348" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="348" pos:column="75"/></expr_stmt>
  <if pos:line="349" pos:column="3">if<condition pos:line="349" pos:column="5">(<expr><name pos:line="349" pos:column="6">result<pos:position pos:line="349" pos:column="12"/></name></expr>)<pos:position pos:line="349" pos:column="13"/></condition><then pos:line="349" pos:column="13"> <block pos:line="349" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="350" pos:column="5">failf<pos:position pos:line="350" pos:column="10"/></name><argument_list pos:line="350" pos:column="10">(<argument><expr><name pos:line="350" pos:column="11">data<pos:position pos:line="350" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="350" pos:column="17">"Failed sending RTSP request"<pos:position pos:line="350" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="350" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="48"/></expr_stmt>
    <return pos:line="351" pos:column="5">return <expr><name pos:line="351" pos:column="12">result<pos:position pos:line="351" pos:column="18"/></name></expr>;<pos:position pos:line="351" pos:column="19"/></return>
  }<pos:position pos:line="352" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="354" pos:column="3">Curl_setup_transfer<pos:position pos:line="354" pos:column="22"/></name><argument_list pos:line="354" pos:column="22">(<argument><expr><name pos:line="354" pos:column="23">conn<pos:position pos:line="354" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="354" pos:column="29">FIRSTSOCKET<pos:position pos:line="354" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="354" pos:column="42">-<pos:position pos:line="354" pos:column="43"/></operator><literal type="number" pos:line="354" pos:column="43">1<pos:position pos:line="354" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="354" pos:column="46">TRUE<pos:position pos:line="354" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="354" pos:column="52">&amp;<pos:position pos:line="354" pos:column="57"/></operator><name><name pos:line="354" pos:column="53">http<pos:position pos:line="354" pos:column="57"/></name><operator pos:line="354" pos:column="57">-&gt;<pos:position pos:line="354" pos:column="62"/></operator><name pos:line="354" pos:column="59">readbytecount<pos:position pos:line="354" pos:column="72"/></name></name></expr></argument>,
                      <argument><expr><ternary><condition><expr><name pos:line="355" pos:column="23">putsize<pos:position pos:line="355" pos:column="30"/></name></expr>?<pos:position pos:line="355" pos:column="31"/></condition><then><expr><name pos:line="355" pos:column="31">FIRSTSOCKET<pos:position pos:line="355" pos:column="42"/></name></expr></then><else pos:line="355" pos:column="42">:<expr><operator pos:line="355" pos:column="43">-<pos:position pos:line="355" pos:column="44"/></operator><literal type="number" pos:line="355" pos:column="44">1<pos:position pos:line="355" pos:column="45"/></literal></expr></else></ternary></expr></argument>,
                      <argument><expr><ternary><condition><expr><name pos:line="356" pos:column="23">putsize<pos:position pos:line="356" pos:column="30"/></name></expr>?<pos:position pos:line="356" pos:column="31"/></condition><then><expr><operator pos:line="356" pos:column="31">&amp;<pos:position pos:line="356" pos:column="36"/></operator><name><name pos:line="356" pos:column="32">http<pos:position pos:line="356" pos:column="36"/></name><operator pos:line="356" pos:column="36">-&gt;<pos:position pos:line="356" pos:column="41"/></operator><name pos:line="356" pos:column="38">writebytecount<pos:position pos:line="356" pos:column="52"/></name></name></expr></then><else pos:line="356" pos:column="52">:<expr><name pos:line="356" pos:column="53">NULL<pos:position pos:line="356" pos:column="57"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="356" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="59"/></expr_stmt>

  <comment type="block" pos:line="358" pos:column="3">/* Increment the CSeq on success */</comment>
  <expr_stmt><expr><name><name pos:line="359" pos:column="3">data<pos:position pos:line="359" pos:column="7"/></name><operator pos:line="359" pos:column="7">-&gt;<pos:position pos:line="359" pos:column="12"/></operator><name pos:line="359" pos:column="9">state<pos:position pos:line="359" pos:column="14"/></name><operator pos:line="359" pos:column="14">.<pos:position pos:line="359" pos:column="15"/></operator><name pos:line="359" pos:column="15">rtsp_next_client_CSeq<pos:position pos:line="359" pos:column="36"/></name></name><operator pos:line="359" pos:column="36">++<pos:position pos:line="359" pos:column="38"/></operator></expr>;<pos:position pos:line="359" pos:column="39"/></expr_stmt>

  <if pos:line="361" pos:column="3">if<condition pos:line="361" pos:column="5">(<expr><name><name pos:line="361" pos:column="6">http<pos:position pos:line="361" pos:column="10"/></name><operator pos:line="361" pos:column="10">-&gt;<pos:position pos:line="361" pos:column="15"/></operator><name pos:line="361" pos:column="12">writebytecount<pos:position pos:line="361" pos:column="26"/></name></name></expr>)<pos:position pos:line="361" pos:column="27"/></condition><then pos:line="361" pos:column="27"> <block pos:line="361" pos:column="28">{
    <comment type="block" pos:line="362" pos:column="5">/* if a request-body has been sent off, we make sure this progress is
       noted properly */</comment>
    <expr_stmt><expr><call><name pos:line="364" pos:column="5">Curl_pgrsSetUploadCounter<pos:position pos:line="364" pos:column="30"/></name><argument_list pos:line="364" pos:column="30">(<argument><expr><name pos:line="364" pos:column="31">data<pos:position pos:line="364" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="364" pos:column="37">http<pos:position pos:line="364" pos:column="41"/></name><operator pos:line="364" pos:column="41">-&gt;<pos:position pos:line="364" pos:column="46"/></operator><name pos:line="364" pos:column="43">writebytecount<pos:position pos:line="364" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="364" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="59"/></expr_stmt>
    <if pos:line="365" pos:column="5">if<condition pos:line="365" pos:column="7">(<expr><call><name pos:line="365" pos:column="8">Curl_pgrsUpdate<pos:position pos:line="365" pos:column="23"/></name><argument_list pos:line="365" pos:column="23">(<argument><expr><name pos:line="365" pos:column="24">conn<pos:position pos:line="365" pos:column="28"/></name></expr></argument>)<pos:position pos:line="365" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="365" pos:column="30"/></condition><then pos:line="365" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="366" pos:column="7">result<pos:position pos:line="366" pos:column="13"/></name> <operator pos:line="366" pos:column="14">=<pos:position pos:line="366" pos:column="15"/></operator> <name pos:line="366" pos:column="16">CURLE_ABORTED_BY_CALLBACK<pos:position pos:line="366" pos:column="41"/></name></expr>;<pos:position pos:line="366" pos:column="42"/></expr_stmt></block></then></if>
  }<pos:position pos:line="367" pos:column="4"/></block></then></if>

  <return pos:line="369" pos:column="3">return <expr><name pos:line="369" pos:column="10">result<pos:position pos:line="369" pos:column="16"/></name></expr>;<pos:position pos:line="369" pos:column="17"/></return>
}<pos:position pos:line="370" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2401_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">Curl_ossl_version<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">buffer<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">size_t<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">size<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">OPENSSL_IS_BORINGSSL<pos:position pos:line="3" pos:column="28"/></name></cpp:ifdef>
  <return pos:line="4" pos:column="3">return <expr><call><name pos:line="4" pos:column="10">snprintf<pos:position pos:line="4" pos:column="18"/></name><argument_list pos:line="4" pos:column="18">(<argument><expr><name pos:line="4" pos:column="19">buffer<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="27">size<pos:position pos:line="4" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="33">OSSL_PACKAGE<pos:position pos:line="4" pos:column="45"/></name></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="47"/></return>
<cpp:else pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">else<pos:position pos:line="5" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="5" pos:column="7">/* OPENSSL_IS_BORINGSSL */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">sub<pos:position pos:line="6" pos:column="11"/></name><index pos:line="6" pos:column="11">[<expr><literal type="number" pos:line="6" pos:column="12">3<pos:position pos:line="6" pos:column="13"/></literal></expr>]<pos:position pos:line="6" pos:column="14"/></index></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">unsigned<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">long<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">ssleay_value<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">sub<pos:position pos:line="8" pos:column="6"/></name><index pos:line="8" pos:column="6">[<expr><literal type="number" pos:line="8" pos:column="7">2<pos:position pos:line="8" pos:column="8"/></literal></expr>]<pos:position pos:line="8" pos:column="9"/></index></name><operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator><literal type="char" pos:line="8" pos:column="10">'\0'<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">sub<pos:position pos:line="9" pos:column="6"/></name><index pos:line="9" pos:column="6">[<expr><literal type="number" pos:line="9" pos:column="7">1<pos:position pos:line="9" pos:column="8"/></literal></expr>]<pos:position pos:line="9" pos:column="9"/></index></name><operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator><literal type="char" pos:line="9" pos:column="10">'\0'<pos:position pos:line="9" pos:column="14"/></literal></expr>;<pos:position pos:line="9" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="10" pos:column="3">ssleay_value<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <call><name pos:line="10" pos:column="18">OpenSSL_version_num<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">()<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">ssleay_value<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&lt;<pos:position pos:line="11" pos:column="23"/></operator> <literal type="number" pos:line="11" pos:column="21">0x906000<pos:position pos:line="11" pos:column="29"/></literal></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30"> <block pos:line="11" pos:column="31">{
    <expr_stmt><expr><name pos:line="12" pos:column="5">ssleay_value<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">SSLEAY_VERSION_NUMBER<pos:position pos:line="12" pos:column="41"/></name></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">sub<pos:position pos:line="13" pos:column="8"/></name><index pos:line="13" pos:column="8">[<expr><literal type="number" pos:line="13" pos:column="9">0<pos:position pos:line="13" pos:column="10"/></literal></expr>]<pos:position pos:line="13" pos:column="11"/></index></name><operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator><literal type="char" pos:line="13" pos:column="12">'\0'<pos:position pos:line="13" pos:column="16"/></literal></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then>
  <else pos:line="15" pos:column="3">else <block pos:line="15" pos:column="8">{
    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><name pos:line="16" pos:column="8">ssleay_value<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">&amp;<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="21">0xff0<pos:position pos:line="16" pos:column="26"/></literal></expr>)<pos:position pos:line="16" pos:column="27"/></condition><then pos:line="16" pos:column="27"> <block pos:line="16" pos:column="28">{
      <decl_stmt><decl><type><name pos:line="17" pos:column="7">int<pos:position pos:line="17" pos:column="10"/></name></type> <name pos:line="17" pos:column="11">minor_ver<pos:position pos:line="17" pos:column="20"/></name> <init pos:line="17" pos:column="21">= <expr><operator pos:line="17" pos:column="23">(<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">ssleay_value<pos:position pos:line="17" pos:column="36"/></name> <operator pos:line="17" pos:column="37">&gt;&gt;<pos:position pos:line="17" pos:column="42"/></operator> <literal type="number" pos:line="17" pos:column="40">4<pos:position pos:line="17" pos:column="41"/></literal><operator pos:line="17" pos:column="41">)<pos:position pos:line="17" pos:column="42"/></operator> <operator pos:line="17" pos:column="43">&amp;<pos:position pos:line="17" pos:column="48"/></operator> <literal type="number" pos:line="17" pos:column="45">0xff<pos:position pos:line="17" pos:column="49"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="50"/></decl_stmt>
      <if pos:line="18" pos:column="7">if<condition pos:line="18" pos:column="9">(<expr><name pos:line="18" pos:column="10">minor_ver<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">&gt;<pos:position pos:line="18" pos:column="24"/></operator> <literal type="number" pos:line="18" pos:column="22">26<pos:position pos:line="18" pos:column="24"/></literal></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25"> <block pos:line="18" pos:column="26">{
        <comment type="block" pos:line="19" pos:column="9">/* handle extended version introduced for 0.9.8za */</comment>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">sub<pos:position pos:line="20" pos:column="12"/></name><index pos:line="20" pos:column="12">[<expr><literal type="number" pos:line="20" pos:column="13">1<pos:position pos:line="20" pos:column="14"/></literal></expr>]<pos:position pos:line="20" pos:column="15"/></index></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <call pos:line="20" pos:column="18">(<name pos:line="20" pos:column="19">char<pos:position pos:line="20" pos:column="23"/></name>) <argument_list pos:line="20" pos:column="25">(<argument><expr><operator pos:line="20" pos:column="26">(<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="27">minor_ver<pos:position pos:line="20" pos:column="36"/></name> <operator pos:line="20" pos:column="37">-<pos:position pos:line="20" pos:column="38"/></operator> <literal type="number" pos:line="20" pos:column="39">1<pos:position pos:line="20" pos:column="40"/></literal><operator pos:line="20" pos:column="40">)<pos:position pos:line="20" pos:column="41"/></operator> <operator pos:line="20" pos:column="42">%<pos:position pos:line="20" pos:column="43"/></operator> <literal type="number" pos:line="20" pos:column="44">26<pos:position pos:line="20" pos:column="46"/></literal> <operator pos:line="20" pos:column="47">+<pos:position pos:line="20" pos:column="48"/></operator> <literal type="char" pos:line="20" pos:column="49">'a'<pos:position pos:line="20" pos:column="52"/></literal> <operator pos:line="20" pos:column="53">+<pos:position pos:line="20" pos:column="54"/></operator> <literal type="number" pos:line="20" pos:column="55">1<pos:position pos:line="20" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">sub<pos:position pos:line="21" pos:column="12"/></name><index pos:line="21" pos:column="12">[<expr><literal type="number" pos:line="21" pos:column="13">0<pos:position pos:line="21" pos:column="14"/></literal></expr>]<pos:position pos:line="21" pos:column="15"/></index></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="char" pos:line="21" pos:column="18">'z'<pos:position pos:line="21" pos:column="21"/></literal></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="22" pos:column="8"/></block></then>
      <else pos:line="23" pos:column="7">else <block pos:line="23" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">sub<pos:position pos:line="24" pos:column="12"/></name><index pos:line="24" pos:column="12">[<expr><literal type="number" pos:line="24" pos:column="13">0<pos:position pos:line="24" pos:column="14"/></literal></expr>]<pos:position pos:line="24" pos:column="15"/></index></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <call pos:line="24" pos:column="18">(<name pos:line="24" pos:column="19">char<pos:position pos:line="24" pos:column="23"/></name>) <argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">minor_ver<pos:position pos:line="24" pos:column="35"/></name> <operator pos:line="24" pos:column="36">+<pos:position pos:line="24" pos:column="37"/></operator> <literal type="char" pos:line="24" pos:column="38">'a'<pos:position pos:line="24" pos:column="41"/></literal> <operator pos:line="24" pos:column="42">-<pos:position pos:line="24" pos:column="43"/></operator> <literal type="number" pos:line="24" pos:column="44">1<pos:position pos:line="24" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
      }<pos:position pos:line="25" pos:column="8"/></block></else></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then>
    <else pos:line="27" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="7">sub<pos:position pos:line="28" pos:column="10"/></name><index pos:line="28" pos:column="10">[<expr><literal type="number" pos:line="28" pos:column="11">0<pos:position pos:line="28" pos:column="12"/></literal></expr>]<pos:position pos:line="28" pos:column="13"/></index></name><operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator><literal type="char" pos:line="28" pos:column="14">'\0'<pos:position pos:line="28" pos:column="18"/></literal></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt></block></else></if>
  }<pos:position pos:line="29" pos:column="4"/></block></else></if>

  <return pos:line="31" pos:column="3">return <expr><call><name pos:line="31" pos:column="10">snprintf<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">(<argument><expr><name pos:line="31" pos:column="19">buffer<pos:position pos:line="31" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="27">size<pos:position pos:line="31" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="33">"%s/%lx.%lx.%lx%s"<pos:position pos:line="31" pos:column="51"/></literal></expr></argument>,
                  <argument><expr><name pos:line="32" pos:column="19">OSSL_PACKAGE<pos:position pos:line="32" pos:column="31"/></name></expr></argument>,
                  <argument><expr><operator pos:line="33" pos:column="19">(<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="20">ssleay_value<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">&gt;&gt;<pos:position pos:line="33" pos:column="37"/></operator><literal type="number" pos:line="33" pos:column="34">28<pos:position pos:line="33" pos:column="36"/></literal><operator pos:line="33" pos:column="36">)<pos:position pos:line="33" pos:column="37"/></operator><operator pos:line="33" pos:column="37">&amp;<pos:position pos:line="33" pos:column="42"/></operator><literal type="number" pos:line="33" pos:column="38">0xf<pos:position pos:line="33" pos:column="41"/></literal></expr></argument>,
                  <argument><expr><operator pos:line="34" pos:column="19">(<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="20">ssleay_value<pos:position pos:line="34" pos:column="32"/></name><operator pos:line="34" pos:column="32">&gt;&gt;<pos:position pos:line="34" pos:column="37"/></operator><literal type="number" pos:line="34" pos:column="34">20<pos:position pos:line="34" pos:column="36"/></literal><operator pos:line="34" pos:column="36">)<pos:position pos:line="34" pos:column="37"/></operator><operator pos:line="34" pos:column="37">&amp;<pos:position pos:line="34" pos:column="42"/></operator><literal type="number" pos:line="34" pos:column="38">0xff<pos:position pos:line="34" pos:column="42"/></literal></expr></argument>,
                  <argument><expr><operator pos:line="35" pos:column="19">(<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="20">ssleay_value<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">&gt;&gt;<pos:position pos:line="35" pos:column="37"/></operator><literal type="number" pos:line="35" pos:column="34">12<pos:position pos:line="35" pos:column="36"/></literal><operator pos:line="35" pos:column="36">)<pos:position pos:line="35" pos:column="37"/></operator><operator pos:line="35" pos:column="37">&amp;<pos:position pos:line="35" pos:column="42"/></operator><literal type="number" pos:line="35" pos:column="38">0xff<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>,
                  <argument><expr><name pos:line="36" pos:column="19">sub<pos:position pos:line="36" pos:column="22"/></name></expr></argument>)<pos:position pos:line="36" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="24"/></return>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="37" pos:column="8">/* OPENSSL_IS_BORINGSSL */</comment>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

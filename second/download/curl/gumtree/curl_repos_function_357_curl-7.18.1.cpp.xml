<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_357_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">FindWin32CACert<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">Configurable<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">config<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                            <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">bundle_file<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* only check for cert file if "we" support SSL */</comment>
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name><name pos:line="5" pos:column="6">curlinfo<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">features<pos:position pos:line="5" pos:column="24"/></name></name> <operator pos:line="5" pos:column="25">&amp;<pos:position pos:line="5" pos:column="30"/></operator> <name pos:line="5" pos:column="27">CURL_VERSION_SSL<pos:position pos:line="5" pos:column="43"/></name></expr>)<pos:position pos:line="5" pos:column="44"/></condition><then pos:line="5" pos:column="44"> <block pos:line="5" pos:column="45">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">DWORD<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">buflen<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">ptr<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><name pos:line="7" pos:column="17">NULL<pos:position pos:line="7" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">retval<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><operator pos:line="8" pos:column="20">(<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">char<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></operator><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator> <call><name pos:line="8" pos:column="29">malloc<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><sizeof pos:line="8" pos:column="36">sizeof <argument_list pos:line="8" pos:column="43">(<argument><expr><name pos:line="8" pos:column="44">TCHAR<pos:position pos:line="8" pos:column="49"/></name></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></sizeof> <operator pos:line="8" pos:column="51">*<pos:position pos:line="8" pos:column="52"/></operator> <operator pos:line="8" pos:column="53">(<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="54">MAX_PATH<pos:position pos:line="8" pos:column="62"/></name> <operator pos:line="8" pos:column="63">+<pos:position pos:line="8" pos:column="64"/></operator> <literal type="number" pos:line="8" pos:column="65">1<pos:position pos:line="8" pos:column="66"/></literal><operator pos:line="8" pos:column="66">)<pos:position pos:line="8" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="69"/></decl_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">retval<pos:position pos:line="9" pos:column="16"/></name></expr>)<pos:position pos:line="9" pos:column="17"/></condition><then pos:line="9" pos:column="17">
      <block type="pseudo"><return pos:line="10" pos:column="7">return;<pos:position pos:line="10" pos:column="14"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">retval<pos:position pos:line="11" pos:column="11"/></name><index pos:line="11" pos:column="11">[<expr><literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>]<pos:position pos:line="11" pos:column="14"/></index></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <literal type="char" pos:line="11" pos:column="17">'\0'<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">buflen<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">SearchPathA<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">NULL<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">bundle_file<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">NULL<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="51">MAX_PATH<pos:position pos:line="12" pos:column="59"/></name><operator pos:line="12" pos:column="59">+<pos:position pos:line="12" pos:column="60"/></operator><literal type="number" pos:line="12" pos:column="60">2<pos:position pos:line="12" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="63">retval<pos:position pos:line="12" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="71">&amp;<pos:position pos:line="12" pos:column="76"/></operator><name pos:line="12" pos:column="72">ptr<pos:position pos:line="12" pos:column="75"/></name></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="77"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">buflen<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">&gt;<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20"> <block pos:line="13" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">GetStr<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><operator pos:line="14" pos:column="14">&amp;<pos:position pos:line="14" pos:column="19"/></operator><name><name pos:line="14" pos:column="15">config<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">cacert<pos:position pos:line="14" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="31">retval<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">free<pos:position pos:line="16" pos:column="9"/></name><argument_list pos:line="16" pos:column="9">(<argument><expr><name pos:line="16" pos:column="10">retval<pos:position pos:line="16" pos:column="16"/></name></expr></argument>)<pos:position pos:line="16" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

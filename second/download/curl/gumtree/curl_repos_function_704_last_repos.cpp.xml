<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_704_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">http_connect<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">curl_socket_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">infdp<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">curl_socket_t<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">rootfd<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
                         <parameter><decl><type><specifier pos:line="3" pos:column="26">const<pos:position pos:line="3" pos:column="31"/></specifier> <name pos:line="3" pos:column="32">char<pos:position pos:line="3" pos:column="36"/></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">ipaddr<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="4" pos:column="26">unsigned<pos:position pos:line="4" pos:column="34"/></name> <name pos:line="4" pos:column="35">short<pos:position pos:line="4" pos:column="40"/></name></type> <name pos:line="4" pos:column="41">ipport<pos:position pos:line="4" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="48"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">curl_socket_t<pos:position pos:line="6" pos:column="16"/></name></type> <name><name pos:line="6" pos:column="17">serverfd<pos:position pos:line="6" pos:column="25"/></name><index pos:line="6" pos:column="25">[<expr><literal type="number" pos:line="6" pos:column="26">2<pos:position pos:line="6" pos:column="27"/></literal></expr>]<pos:position pos:line="6" pos:column="28"/></index></name> <init pos:line="6" pos:column="29">= <expr><block pos:line="6" pos:column="31">{<expr><name pos:line="6" pos:column="32">CURL_SOCKET_BAD<pos:position pos:line="6" pos:column="47"/></name></expr>, <expr><name pos:line="6" pos:column="49">CURL_SOCKET_BAD<pos:position pos:line="6" pos:column="64"/></name></expr>}<pos:position pos:line="6" pos:column="65"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="66"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">curl_socket_t<pos:position pos:line="7" pos:column="16"/></name></type> <name><name pos:line="7" pos:column="17">clientfd<pos:position pos:line="7" pos:column="25"/></name><index pos:line="7" pos:column="25">[<expr><literal type="number" pos:line="7" pos:column="26">2<pos:position pos:line="7" pos:column="27"/></literal></expr>]<pos:position pos:line="7" pos:column="28"/></index></name> <init pos:line="7" pos:column="29">= <expr><block pos:line="7" pos:column="31">{<expr><name pos:line="7" pos:column="32">CURL_SOCKET_BAD<pos:position pos:line="7" pos:column="47"/></name></expr>, <expr><name pos:line="7" pos:column="49">CURL_SOCKET_BAD<pos:position pos:line="7" pos:column="64"/></name></expr>}<pos:position pos:line="7" pos:column="65"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="66"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">ssize_t<pos:position pos:line="8" pos:column="10"/></name></type> <name><name pos:line="8" pos:column="11">toc<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><literal type="number" pos:line="8" pos:column="15">2<pos:position pos:line="8" pos:column="16"/></literal></expr>]<pos:position pos:line="8" pos:column="17"/></index></name> <init pos:line="8" pos:column="18">= <expr><block pos:line="8" pos:column="20">{<expr><literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal></expr>, <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>}<pos:position pos:line="8" pos:column="26"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt> <comment type="block" pos:line="8" pos:column="28">/* number of bytes to client */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">ssize_t<pos:position pos:line="9" pos:column="10"/></name></type> <name><name pos:line="9" pos:column="11">tos<pos:position pos:line="9" pos:column="14"/></name><index pos:line="9" pos:column="14">[<expr><literal type="number" pos:line="9" pos:column="15">2<pos:position pos:line="9" pos:column="16"/></literal></expr>]<pos:position pos:line="9" pos:column="17"/></index></name> <init pos:line="9" pos:column="18">= <expr><block pos:line="9" pos:column="20">{<expr><literal type="number" pos:line="9" pos:column="21">0<pos:position pos:line="9" pos:column="22"/></literal></expr>, <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>}<pos:position pos:line="9" pos:column="26"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt> <comment type="block" pos:line="9" pos:column="28">/* number of bytes to server */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">readclient<pos:position pos:line="10" pos:column="18"/></name><index pos:line="10" pos:column="18">[<expr><literal type="number" pos:line="10" pos:column="19">2<pos:position pos:line="10" pos:column="20"/></literal></expr>]<pos:position pos:line="10" pos:column="21"/></index><index pos:line="10" pos:column="21">[<expr><literal type="number" pos:line="10" pos:column="22">256<pos:position pos:line="10" pos:column="25"/></literal></expr>]<pos:position pos:line="10" pos:column="26"/></index></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name></type> <name><name pos:line="11" pos:column="8">readserver<pos:position pos:line="11" pos:column="18"/></name><index pos:line="11" pos:column="18">[<expr><literal type="number" pos:line="11" pos:column="19">2<pos:position pos:line="11" pos:column="20"/></literal></expr>]<pos:position pos:line="11" pos:column="21"/></index><index pos:line="11" pos:column="21">[<expr><literal type="number" pos:line="11" pos:column="22">256<pos:position pos:line="11" pos:column="25"/></literal></expr>]<pos:position pos:line="11" pos:column="26"/></index></name></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">bool<pos:position pos:line="12" pos:column="7"/></name></type> <name><name pos:line="12" pos:column="8">poll_client_rd<pos:position pos:line="12" pos:column="22"/></name><index pos:line="12" pos:column="22">[<expr><literal type="number" pos:line="12" pos:column="23">2<pos:position pos:line="12" pos:column="24"/></literal></expr>]<pos:position pos:line="12" pos:column="25"/></index></name> <init pos:line="12" pos:column="26">= <expr><block pos:line="12" pos:column="28">{ <expr><name pos:line="12" pos:column="30">TRUE<pos:position pos:line="12" pos:column="34"/></name></expr>, <expr><name pos:line="12" pos:column="36">TRUE<pos:position pos:line="12" pos:column="40"/></name></expr> }<pos:position pos:line="12" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="12" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">bool<pos:position pos:line="13" pos:column="7"/></name></type> <name><name pos:line="13" pos:column="8">poll_server_rd<pos:position pos:line="13" pos:column="22"/></name><index pos:line="13" pos:column="22">[<expr><literal type="number" pos:line="13" pos:column="23">2<pos:position pos:line="13" pos:column="24"/></literal></expr>]<pos:position pos:line="13" pos:column="25"/></index></name> <init pos:line="13" pos:column="26">= <expr><block pos:line="13" pos:column="28">{ <expr><name pos:line="13" pos:column="30">TRUE<pos:position pos:line="13" pos:column="34"/></name></expr>, <expr><name pos:line="13" pos:column="36">TRUE<pos:position pos:line="13" pos:column="40"/></name></expr> }<pos:position pos:line="13" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="13" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">bool<pos:position pos:line="14" pos:column="7"/></name></type> <name><name pos:line="14" pos:column="8">poll_client_wr<pos:position pos:line="14" pos:column="22"/></name><index pos:line="14" pos:column="22">[<expr><literal type="number" pos:line="14" pos:column="23">2<pos:position pos:line="14" pos:column="24"/></literal></expr>]<pos:position pos:line="14" pos:column="25"/></index></name> <init pos:line="14" pos:column="26">= <expr><block pos:line="14" pos:column="28">{ <expr><name pos:line="14" pos:column="30">TRUE<pos:position pos:line="14" pos:column="34"/></name></expr>, <expr><name pos:line="14" pos:column="36">TRUE<pos:position pos:line="14" pos:column="40"/></name></expr> }<pos:position pos:line="14" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="14" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">bool<pos:position pos:line="15" pos:column="7"/></name></type> <name><name pos:line="15" pos:column="8">poll_server_wr<pos:position pos:line="15" pos:column="22"/></name><index pos:line="15" pos:column="22">[<expr><literal type="number" pos:line="15" pos:column="23">2<pos:position pos:line="15" pos:column="24"/></literal></expr>]<pos:position pos:line="15" pos:column="25"/></index></name> <init pos:line="15" pos:column="26">= <expr><block pos:line="15" pos:column="28">{ <expr><name pos:line="15" pos:column="30">TRUE<pos:position pos:line="15" pos:column="34"/></name></expr>, <expr><name pos:line="15" pos:column="36">TRUE<pos:position pos:line="15" pos:column="40"/></name></expr> }<pos:position pos:line="15" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="15" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">bool<pos:position pos:line="16" pos:column="7"/></name></type> <name pos:line="16" pos:column="8">primary<pos:position pos:line="16" pos:column="15"/></name> <init pos:line="16" pos:column="16">= <expr><name pos:line="16" pos:column="18">FALSE<pos:position pos:line="16" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">bool<pos:position pos:line="17" pos:column="7"/></name></type> <name pos:line="17" pos:column="8">secondary<pos:position pos:line="17" pos:column="17"/></name> <init pos:line="17" pos:column="18">= <expr><name pos:line="17" pos:column="20">FALSE<pos:position pos:line="17" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">max_tunnel_idx<pos:position pos:line="18" pos:column="21"/></name></decl>;<pos:position pos:line="18" pos:column="22"/></decl_stmt> <comment type="block" pos:line="18" pos:column="23">/* CTRL or DATA */</comment>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type> <name pos:line="19" pos:column="7">loop<pos:position pos:line="19" pos:column="11"/></name></decl>;<pos:position pos:line="19" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">int<pos:position pos:line="20" pos:column="6"/></name></type> <name pos:line="20" pos:column="7">i<pos:position pos:line="20" pos:column="8"/></name></decl>;<pos:position pos:line="20" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">int<pos:position pos:line="21" pos:column="6"/></name></type> <name pos:line="21" pos:column="7">timeout_count<pos:position pos:line="21" pos:column="20"/></name> <init pos:line="21" pos:column="21">= <expr><literal type="number" pos:line="21" pos:column="23">0<pos:position pos:line="21" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="25"/></decl_stmt>

  <comment type="block" pos:line="23" pos:column="3">/* primary tunnel client endpoint already connected */</comment>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">clientfd<pos:position pos:line="24" pos:column="11"/></name><index pos:line="24" pos:column="11">[<expr><name pos:line="24" pos:column="12">CTRL<pos:position pos:line="24" pos:column="16"/></name></expr>]<pos:position pos:line="24" pos:column="17"/></index></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <operator pos:line="24" pos:column="20">*<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">infdp<pos:position pos:line="24" pos:column="26"/></name></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>

  <comment type="block" pos:line="26" pos:column="3">/* Sleep here to make sure the client reads CONNECT response's
     'end of headers' separate from the server data that follows.
     This is done to prevent triggering libcurl known bug #39. */</comment>
  <for pos:line="29" pos:column="3">for<control pos:line="29" pos:column="6">(<init><expr><name pos:line="29" pos:column="7">loop<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <literal type="number" pos:line="29" pos:column="14">2<pos:position pos:line="29" pos:column="15"/></literal></expr>;<pos:position pos:line="29" pos:column="16"/></init> <condition><expr><operator pos:line="29" pos:column="17">(<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">loop<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">&gt;<pos:position pos:line="29" pos:column="27"/></operator> <literal type="number" pos:line="29" pos:column="25">0<pos:position pos:line="29" pos:column="26"/></literal><operator pos:line="29" pos:column="26">)<pos:position pos:line="29" pos:column="27"/></operator> <operator pos:line="29" pos:column="28">&amp;&amp;<pos:position pos:line="29" pos:column="38"/></operator> <operator pos:line="29" pos:column="31">!<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="32">got_exit_signal<pos:position pos:line="29" pos:column="47"/></name></expr>;<pos:position pos:line="29" pos:column="48"/></condition> <incr><expr><name pos:line="29" pos:column="49">loop<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">--<pos:position pos:line="29" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="56"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="5">wait_ms<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><literal type="number" pos:line="30" pos:column="13">250<pos:position pos:line="30" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="18"/></expr_stmt></block></for>
  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><name pos:line="31" pos:column="6">got_exit_signal<pos:position pos:line="31" pos:column="21"/></name></expr>)<pos:position pos:line="31" pos:column="22"/></condition><then pos:line="31" pos:column="22">
    <block type="pseudo"><goto pos:line="32" pos:column="5">goto <name pos:line="32" pos:column="10">http_connect_cleanup<pos:position pos:line="32" pos:column="30"/></name>;<pos:position pos:line="32" pos:column="31"/></goto></block></then></if>

  <expr_stmt><expr><name><name pos:line="34" pos:column="3">serverfd<pos:position pos:line="34" pos:column="11"/></name><index pos:line="34" pos:column="11">[<expr><name pos:line="34" pos:column="12">CTRL<pos:position pos:line="34" pos:column="16"/></name></expr>]<pos:position pos:line="34" pos:column="17"/></index></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <call><name pos:line="34" pos:column="20">connect_to<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">ipaddr<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">ipport<pos:position pos:line="34" pos:column="45"/></name></expr></argument>)<pos:position pos:line="34" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="47"/></expr_stmt>
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><name><name pos:line="35" pos:column="6">serverfd<pos:position pos:line="35" pos:column="14"/></name><index pos:line="35" pos:column="14">[<expr><name pos:line="35" pos:column="15">CTRL<pos:position pos:line="35" pos:column="19"/></name></expr>]<pos:position pos:line="35" pos:column="20"/></index></name> <operator pos:line="35" pos:column="21">==<pos:position pos:line="35" pos:column="23"/></operator> <name pos:line="35" pos:column="24">CURL_SOCKET_BAD<pos:position pos:line="35" pos:column="39"/></name></expr>)<pos:position pos:line="35" pos:column="40"/></condition><then pos:line="35" pos:column="40">
    <block type="pseudo"><goto pos:line="36" pos:column="5">goto <name pos:line="36" pos:column="10">http_connect_cleanup<pos:position pos:line="36" pos:column="30"/></name>;<pos:position pos:line="36" pos:column="31"/></goto></block></then></if>

  <comment type="block" pos:line="38" pos:column="3">/* Primary tunnel socket endpoints are now connected. Tunnel data back and
     forth over the primary tunnel until client or server breaks the primary
     tunnel, simultaneously allowing establishment, operation and teardown of
     a secondary tunnel that may be used for passive FTP data connection. */</comment>

  <expr_stmt><expr><name pos:line="43" pos:column="3">max_tunnel_idx<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <name pos:line="43" pos:column="20">CTRL<pos:position pos:line="43" pos:column="24"/></name></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="44" pos:column="3">primary<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <name pos:line="44" pos:column="13">TRUE<pos:position pos:line="44" pos:column="17"/></name></expr>;<pos:position pos:line="44" pos:column="18"/></expr_stmt>

  <while pos:line="46" pos:column="3">while<condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">!<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">got_exit_signal<pos:position pos:line="46" pos:column="25"/></name></expr>)<pos:position pos:line="46" pos:column="26"/></condition> <block pos:line="46" pos:column="27">{

    <decl_stmt><decl><type><name pos:line="48" pos:column="5">fd_set<pos:position pos:line="48" pos:column="11"/></name></type> <name pos:line="48" pos:column="12">input<pos:position pos:line="48" pos:column="17"/></name></decl>;<pos:position pos:line="48" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="49" pos:column="5">fd_set<pos:position pos:line="49" pos:column="11"/></name></type> <name pos:line="49" pos:column="12">output<pos:position pos:line="49" pos:column="18"/></name></decl>;<pos:position pos:line="49" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="50" pos:column="5">struct<pos:position pos:line="50" pos:column="11"/></name> <name pos:line="50" pos:column="12">timeval<pos:position pos:line="50" pos:column="19"/></name></name></type> <name pos:line="50" pos:column="20">timeout<pos:position pos:line="50" pos:column="27"/></name> <init pos:line="50" pos:column="28">= <expr><block pos:line="50" pos:column="30">{<expr><literal type="number" pos:line="50" pos:column="31">1<pos:position pos:line="50" pos:column="32"/></literal></expr>, <expr><literal type="number" pos:line="50" pos:column="34">0<pos:position pos:line="50" pos:column="35"/></literal></expr>}<pos:position pos:line="50" pos:column="36"/></block></expr></init></decl>;<pos:position pos:line="50" pos:column="37"/></decl_stmt> <comment type="block" pos:line="50" pos:column="38">/* 1000 ms */</comment>
    <decl_stmt><decl><type><name pos:line="51" pos:column="5">ssize_t<pos:position pos:line="51" pos:column="12"/></name></type> <name pos:line="51" pos:column="13">rc<pos:position pos:line="51" pos:column="15"/></name></decl>;<pos:position pos:line="51" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="52" pos:column="5">curl_socket_t<pos:position pos:line="52" pos:column="18"/></name></type> <name pos:line="52" pos:column="19">maxfd<pos:position pos:line="52" pos:column="24"/></name> <init pos:line="52" pos:column="25">= <expr><operator pos:line="52" pos:column="27">(<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="28">curl_socket_t<pos:position pos:line="52" pos:column="41"/></name><operator pos:line="52" pos:column="41">)<pos:position pos:line="52" pos:column="42"/></operator><operator pos:line="52" pos:column="42">-<pos:position pos:line="52" pos:column="43"/></operator><literal type="number" pos:line="52" pos:column="43">1<pos:position pos:line="52" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="52" pos:column="45"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="54" pos:column="5">FD_ZERO<pos:position pos:line="54" pos:column="12"/></name><argument_list pos:line="54" pos:column="12">(<argument><expr><operator pos:line="54" pos:column="13">&amp;<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="14">input<pos:position pos:line="54" pos:column="19"/></name></expr></argument>)<pos:position pos:line="54" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">FD_ZERO<pos:position pos:line="55" pos:column="12"/></name><argument_list pos:line="55" pos:column="12">(<argument><expr><operator pos:line="55" pos:column="13">&amp;<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="14">output<pos:position pos:line="55" pos:column="20"/></name></expr></argument>)<pos:position pos:line="55" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="22"/></expr_stmt>

    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">(<expr><operator pos:line="57" pos:column="8">(<pos:position pos:line="57" pos:column="9"/></operator><name><name pos:line="57" pos:column="9">clientfd<pos:position pos:line="57" pos:column="17"/></name><index pos:line="57" pos:column="17">[<expr><name pos:line="57" pos:column="18">DATA<pos:position pos:line="57" pos:column="22"/></name></expr>]<pos:position pos:line="57" pos:column="23"/></index></name> <operator pos:line="57" pos:column="24">==<pos:position pos:line="57" pos:column="26"/></operator> <name pos:line="57" pos:column="27">CURL_SOCKET_BAD<pos:position pos:line="57" pos:column="42"/></name><operator pos:line="57" pos:column="42">)<pos:position pos:line="57" pos:column="43"/></operator> <operator pos:line="57" pos:column="44">&amp;&amp;<pos:position pos:line="57" pos:column="54"/></operator>
       <operator pos:line="58" pos:column="8">(<pos:position pos:line="58" pos:column="9"/></operator><name><name pos:line="58" pos:column="9">serverfd<pos:position pos:line="58" pos:column="17"/></name><index pos:line="58" pos:column="17">[<expr><name pos:line="58" pos:column="18">DATA<pos:position pos:line="58" pos:column="22"/></name></expr>]<pos:position pos:line="58" pos:column="23"/></index></name> <operator pos:line="58" pos:column="24">==<pos:position pos:line="58" pos:column="26"/></operator> <name pos:line="58" pos:column="27">CURL_SOCKET_BAD<pos:position pos:line="58" pos:column="42"/></name><operator pos:line="58" pos:column="42">)<pos:position pos:line="58" pos:column="43"/></operator> <operator pos:line="58" pos:column="44">&amp;&amp;<pos:position pos:line="58" pos:column="54"/></operator>
       <name><name pos:line="59" pos:column="8">poll_client_rd<pos:position pos:line="59" pos:column="22"/></name><index pos:line="59" pos:column="22">[<expr><name pos:line="59" pos:column="23">CTRL<pos:position pos:line="59" pos:column="27"/></name></expr>]<pos:position pos:line="59" pos:column="28"/></index></name> <operator pos:line="59" pos:column="29">&amp;&amp;<pos:position pos:line="59" pos:column="39"/></operator> <name><name pos:line="59" pos:column="32">poll_client_wr<pos:position pos:line="59" pos:column="46"/></name><index pos:line="59" pos:column="46">[<expr><name pos:line="59" pos:column="47">CTRL<pos:position pos:line="59" pos:column="51"/></name></expr>]<pos:position pos:line="59" pos:column="52"/></index></name> <operator pos:line="59" pos:column="53">&amp;&amp;<pos:position pos:line="59" pos:column="63"/></operator>
       <name><name pos:line="60" pos:column="8">poll_server_rd<pos:position pos:line="60" pos:column="22"/></name><index pos:line="60" pos:column="22">[<expr><name pos:line="60" pos:column="23">CTRL<pos:position pos:line="60" pos:column="27"/></name></expr>]<pos:position pos:line="60" pos:column="28"/></index></name> <operator pos:line="60" pos:column="29">&amp;&amp;<pos:position pos:line="60" pos:column="39"/></operator> <name><name pos:line="60" pos:column="32">poll_server_wr<pos:position pos:line="60" pos:column="46"/></name><index pos:line="60" pos:column="46">[<expr><name pos:line="60" pos:column="47">CTRL<pos:position pos:line="60" pos:column="51"/></name></expr>]<pos:position pos:line="60" pos:column="52"/></index></name></expr>)<pos:position pos:line="60" pos:column="53"/></condition><then pos:line="60" pos:column="53"> <block pos:line="60" pos:column="54">{
      <comment type="block" pos:line="61" pos:column="7">/* listener socket is monitored to allow client to establish
         secondary tunnel only when this tunnel is not established
         and primary one is fully operational */</comment>
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">FD_SET<pos:position pos:line="64" pos:column="13"/></name><argument_list pos:line="64" pos:column="13">(<argument><expr><name pos:line="64" pos:column="14">rootfd<pos:position pos:line="64" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="22">&amp;<pos:position pos:line="64" pos:column="27"/></operator><name pos:line="64" pos:column="23">input<pos:position pos:line="64" pos:column="28"/></name></expr></argument>)<pos:position pos:line="64" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name pos:line="65" pos:column="7">maxfd<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">=<pos:position pos:line="65" pos:column="14"/></operator> <name pos:line="65" pos:column="15">rootfd<pos:position pos:line="65" pos:column="21"/></name></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="68" pos:column="5">/* set tunnel sockets to wait for */</comment>
    <for pos:line="69" pos:column="5">for<control pos:line="69" pos:column="8">(<init><expr><name pos:line="69" pos:column="9">i<pos:position pos:line="69" pos:column="10"/></name> <operator pos:line="69" pos:column="11">=<pos:position pos:line="69" pos:column="12"/></operator> <literal type="number" pos:line="69" pos:column="13">0<pos:position pos:line="69" pos:column="14"/></literal></expr>;<pos:position pos:line="69" pos:column="15"/></init> <condition><expr><name pos:line="69" pos:column="16">i<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">&lt;=<pos:position pos:line="69" pos:column="23"/></operator> <name pos:line="69" pos:column="21">max_tunnel_idx<pos:position pos:line="69" pos:column="35"/></name></expr>;<pos:position pos:line="69" pos:column="36"/></condition> <incr><expr><name pos:line="69" pos:column="37">i<pos:position pos:line="69" pos:column="38"/></name><operator pos:line="69" pos:column="38">++<pos:position pos:line="69" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="69" pos:column="41"/></control> <block pos:line="69" pos:column="42">{
      <comment type="block" pos:line="70" pos:column="7">/* client side socket monitoring */</comment>
      <if pos:line="71" pos:column="7">if<condition pos:line="71" pos:column="9">(<expr><name><name pos:line="71" pos:column="10">clientfd<pos:position pos:line="71" pos:column="18"/></name><index pos:line="71" pos:column="18">[<expr><name pos:line="71" pos:column="19">i<pos:position pos:line="71" pos:column="20"/></name></expr>]<pos:position pos:line="71" pos:column="21"/></index></name> <operator pos:line="71" pos:column="22">!=<pos:position pos:line="71" pos:column="24"/></operator> <name pos:line="71" pos:column="25">CURL_SOCKET_BAD<pos:position pos:line="71" pos:column="40"/></name></expr>)<pos:position pos:line="71" pos:column="41"/></condition><then pos:line="71" pos:column="41"> <block pos:line="71" pos:column="42">{
        <if pos:line="72" pos:column="9">if<condition pos:line="72" pos:column="11">(<expr><name><name pos:line="72" pos:column="12">poll_client_rd<pos:position pos:line="72" pos:column="26"/></name><index pos:line="72" pos:column="26">[<expr><name pos:line="72" pos:column="27">i<pos:position pos:line="72" pos:column="28"/></name></expr>]<pos:position pos:line="72" pos:column="29"/></index></name></expr>)<pos:position pos:line="72" pos:column="30"/></condition><then pos:line="72" pos:column="30"> <block pos:line="72" pos:column="31">{
          <comment type="block" pos:line="73" pos:column="11">/* unless told not to do so, monitor readability */</comment>
          <expr_stmt><expr><call><name pos:line="74" pos:column="11">FD_SET<pos:position pos:line="74" pos:column="17"/></name><argument_list pos:line="74" pos:column="17">(<argument><expr><name><name pos:line="74" pos:column="18">clientfd<pos:position pos:line="74" pos:column="26"/></name><index pos:line="74" pos:column="26">[<expr><name pos:line="74" pos:column="27">i<pos:position pos:line="74" pos:column="28"/></name></expr>]<pos:position pos:line="74" pos:column="29"/></index></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="31">&amp;<pos:position pos:line="74" pos:column="36"/></operator><name pos:line="74" pos:column="32">input<pos:position pos:line="74" pos:column="37"/></name></expr></argument>)<pos:position pos:line="74" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="39"/></expr_stmt>
          <if pos:line="75" pos:column="11">if<condition pos:line="75" pos:column="13">(<expr><name><name pos:line="75" pos:column="14">clientfd<pos:position pos:line="75" pos:column="22"/></name><index pos:line="75" pos:column="22">[<expr><name pos:line="75" pos:column="23">i<pos:position pos:line="75" pos:column="24"/></name></expr>]<pos:position pos:line="75" pos:column="25"/></index></name> <operator pos:line="75" pos:column="26">&gt;<pos:position pos:line="75" pos:column="30"/></operator> <name pos:line="75" pos:column="28">maxfd<pos:position pos:line="75" pos:column="33"/></name></expr>)<pos:position pos:line="75" pos:column="34"/></condition><then pos:line="75" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="13">maxfd<pos:position pos:line="76" pos:column="18"/></name> <operator pos:line="76" pos:column="19">=<pos:position pos:line="76" pos:column="20"/></operator> <name><name pos:line="76" pos:column="21">clientfd<pos:position pos:line="76" pos:column="29"/></name><index pos:line="76" pos:column="29">[<expr><name pos:line="76" pos:column="30">i<pos:position pos:line="76" pos:column="31"/></name></expr>]<pos:position pos:line="76" pos:column="32"/></index></name></expr>;<pos:position pos:line="76" pos:column="33"/></expr_stmt></block></then></if>
        }<pos:position pos:line="77" pos:column="10"/></block></then></if>
        <if pos:line="78" pos:column="9">if<condition pos:line="78" pos:column="11">(<expr><name><name pos:line="78" pos:column="12">poll_client_wr<pos:position pos:line="78" pos:column="26"/></name><index pos:line="78" pos:column="26">[<expr><name pos:line="78" pos:column="27">i<pos:position pos:line="78" pos:column="28"/></name></expr>]<pos:position pos:line="78" pos:column="29"/></index></name> <operator pos:line="78" pos:column="30">&amp;&amp;<pos:position pos:line="78" pos:column="40"/></operator> <name><name pos:line="78" pos:column="33">toc<pos:position pos:line="78" pos:column="36"/></name><index pos:line="78" pos:column="36">[<expr><name pos:line="78" pos:column="37">i<pos:position pos:line="78" pos:column="38"/></name></expr>]<pos:position pos:line="78" pos:column="39"/></index></name></expr>)<pos:position pos:line="78" pos:column="40"/></condition><then pos:line="78" pos:column="40"> <block pos:line="78" pos:column="41">{
          <comment type="block" pos:line="79" pos:column="11">/* unless told not to do so, monitor writability
             if there is data ready to be sent to client */</comment>
          <expr_stmt><expr><call><name pos:line="81" pos:column="11">FD_SET<pos:position pos:line="81" pos:column="17"/></name><argument_list pos:line="81" pos:column="17">(<argument><expr><name><name pos:line="81" pos:column="18">clientfd<pos:position pos:line="81" pos:column="26"/></name><index pos:line="81" pos:column="26">[<expr><name pos:line="81" pos:column="27">i<pos:position pos:line="81" pos:column="28"/></name></expr>]<pos:position pos:line="81" pos:column="29"/></index></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="31">&amp;<pos:position pos:line="81" pos:column="36"/></operator><name pos:line="81" pos:column="32">output<pos:position pos:line="81" pos:column="38"/></name></expr></argument>)<pos:position pos:line="81" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="40"/></expr_stmt>
          <if pos:line="82" pos:column="11">if<condition pos:line="82" pos:column="13">(<expr><name><name pos:line="82" pos:column="14">clientfd<pos:position pos:line="82" pos:column="22"/></name><index pos:line="82" pos:column="22">[<expr><name pos:line="82" pos:column="23">i<pos:position pos:line="82" pos:column="24"/></name></expr>]<pos:position pos:line="82" pos:column="25"/></index></name> <operator pos:line="82" pos:column="26">&gt;<pos:position pos:line="82" pos:column="30"/></operator> <name pos:line="82" pos:column="28">maxfd<pos:position pos:line="82" pos:column="33"/></name></expr>)<pos:position pos:line="82" pos:column="34"/></condition><then pos:line="82" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><name pos:line="83" pos:column="13">maxfd<pos:position pos:line="83" pos:column="18"/></name> <operator pos:line="83" pos:column="19">=<pos:position pos:line="83" pos:column="20"/></operator> <name><name pos:line="83" pos:column="21">clientfd<pos:position pos:line="83" pos:column="29"/></name><index pos:line="83" pos:column="29">[<expr><name pos:line="83" pos:column="30">i<pos:position pos:line="83" pos:column="31"/></name></expr>]<pos:position pos:line="83" pos:column="32"/></index></name></expr>;<pos:position pos:line="83" pos:column="33"/></expr_stmt></block></then></if>
        }<pos:position pos:line="84" pos:column="10"/></block></then></if>
      }<pos:position pos:line="85" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="86" pos:column="7">/* server side socket monitoring */</comment>
      <if pos:line="87" pos:column="7">if<condition pos:line="87" pos:column="9">(<expr><name><name pos:line="87" pos:column="10">serverfd<pos:position pos:line="87" pos:column="18"/></name><index pos:line="87" pos:column="18">[<expr><name pos:line="87" pos:column="19">i<pos:position pos:line="87" pos:column="20"/></name></expr>]<pos:position pos:line="87" pos:column="21"/></index></name> <operator pos:line="87" pos:column="22">!=<pos:position pos:line="87" pos:column="24"/></operator> <name pos:line="87" pos:column="25">CURL_SOCKET_BAD<pos:position pos:line="87" pos:column="40"/></name></expr>)<pos:position pos:line="87" pos:column="41"/></condition><then pos:line="87" pos:column="41"> <block pos:line="87" pos:column="42">{
        <if pos:line="88" pos:column="9">if<condition pos:line="88" pos:column="11">(<expr><name><name pos:line="88" pos:column="12">poll_server_rd<pos:position pos:line="88" pos:column="26"/></name><index pos:line="88" pos:column="26">[<expr><name pos:line="88" pos:column="27">i<pos:position pos:line="88" pos:column="28"/></name></expr>]<pos:position pos:line="88" pos:column="29"/></index></name></expr>)<pos:position pos:line="88" pos:column="30"/></condition><then pos:line="88" pos:column="30"> <block pos:line="88" pos:column="31">{
          <comment type="block" pos:line="89" pos:column="11">/* unless told not to do so, monitor readability */</comment>
          <expr_stmt><expr><call><name pos:line="90" pos:column="11">FD_SET<pos:position pos:line="90" pos:column="17"/></name><argument_list pos:line="90" pos:column="17">(<argument><expr><name><name pos:line="90" pos:column="18">serverfd<pos:position pos:line="90" pos:column="26"/></name><index pos:line="90" pos:column="26">[<expr><name pos:line="90" pos:column="27">i<pos:position pos:line="90" pos:column="28"/></name></expr>]<pos:position pos:line="90" pos:column="29"/></index></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="31">&amp;<pos:position pos:line="90" pos:column="36"/></operator><name pos:line="90" pos:column="32">input<pos:position pos:line="90" pos:column="37"/></name></expr></argument>)<pos:position pos:line="90" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="39"/></expr_stmt>
          <if pos:line="91" pos:column="11">if<condition pos:line="91" pos:column="13">(<expr><name><name pos:line="91" pos:column="14">serverfd<pos:position pos:line="91" pos:column="22"/></name><index pos:line="91" pos:column="22">[<expr><name pos:line="91" pos:column="23">i<pos:position pos:line="91" pos:column="24"/></name></expr>]<pos:position pos:line="91" pos:column="25"/></index></name> <operator pos:line="91" pos:column="26">&gt;<pos:position pos:line="91" pos:column="30"/></operator> <name pos:line="91" pos:column="28">maxfd<pos:position pos:line="91" pos:column="33"/></name></expr>)<pos:position pos:line="91" pos:column="34"/></condition><then pos:line="91" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><name pos:line="92" pos:column="13">maxfd<pos:position pos:line="92" pos:column="18"/></name> <operator pos:line="92" pos:column="19">=<pos:position pos:line="92" pos:column="20"/></operator> <name><name pos:line="92" pos:column="21">serverfd<pos:position pos:line="92" pos:column="29"/></name><index pos:line="92" pos:column="29">[<expr><name pos:line="92" pos:column="30">i<pos:position pos:line="92" pos:column="31"/></name></expr>]<pos:position pos:line="92" pos:column="32"/></index></name></expr>;<pos:position pos:line="92" pos:column="33"/></expr_stmt></block></then></if>
        }<pos:position pos:line="93" pos:column="10"/></block></then></if>
        <if pos:line="94" pos:column="9">if<condition pos:line="94" pos:column="11">(<expr><name><name pos:line="94" pos:column="12">poll_server_wr<pos:position pos:line="94" pos:column="26"/></name><index pos:line="94" pos:column="26">[<expr><name pos:line="94" pos:column="27">i<pos:position pos:line="94" pos:column="28"/></name></expr>]<pos:position pos:line="94" pos:column="29"/></index></name> <operator pos:line="94" pos:column="30">&amp;&amp;<pos:position pos:line="94" pos:column="40"/></operator> <name><name pos:line="94" pos:column="33">tos<pos:position pos:line="94" pos:column="36"/></name><index pos:line="94" pos:column="36">[<expr><name pos:line="94" pos:column="37">i<pos:position pos:line="94" pos:column="38"/></name></expr>]<pos:position pos:line="94" pos:column="39"/></index></name></expr>)<pos:position pos:line="94" pos:column="40"/></condition><then pos:line="94" pos:column="40"> <block pos:line="94" pos:column="41">{
          <comment type="block" pos:line="95" pos:column="11">/* unless told not to do so, monitor writability
             if there is data ready to be sent to server */</comment>
          <expr_stmt><expr><call><name pos:line="97" pos:column="11">FD_SET<pos:position pos:line="97" pos:column="17"/></name><argument_list pos:line="97" pos:column="17">(<argument><expr><name><name pos:line="97" pos:column="18">serverfd<pos:position pos:line="97" pos:column="26"/></name><index pos:line="97" pos:column="26">[<expr><name pos:line="97" pos:column="27">i<pos:position pos:line="97" pos:column="28"/></name></expr>]<pos:position pos:line="97" pos:column="29"/></index></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="31">&amp;<pos:position pos:line="97" pos:column="36"/></operator><name pos:line="97" pos:column="32">output<pos:position pos:line="97" pos:column="38"/></name></expr></argument>)<pos:position pos:line="97" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="40"/></expr_stmt>
          <if pos:line="98" pos:column="11">if<condition pos:line="98" pos:column="13">(<expr><name><name pos:line="98" pos:column="14">serverfd<pos:position pos:line="98" pos:column="22"/></name><index pos:line="98" pos:column="22">[<expr><name pos:line="98" pos:column="23">i<pos:position pos:line="98" pos:column="24"/></name></expr>]<pos:position pos:line="98" pos:column="25"/></index></name> <operator pos:line="98" pos:column="26">&gt;<pos:position pos:line="98" pos:column="30"/></operator> <name pos:line="98" pos:column="28">maxfd<pos:position pos:line="98" pos:column="33"/></name></expr>)<pos:position pos:line="98" pos:column="34"/></condition><then pos:line="98" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="13">maxfd<pos:position pos:line="99" pos:column="18"/></name> <operator pos:line="99" pos:column="19">=<pos:position pos:line="99" pos:column="20"/></operator> <name><name pos:line="99" pos:column="21">serverfd<pos:position pos:line="99" pos:column="29"/></name><index pos:line="99" pos:column="29">[<expr><name pos:line="99" pos:column="30">i<pos:position pos:line="99" pos:column="31"/></name></expr>]<pos:position pos:line="99" pos:column="32"/></index></name></expr>;<pos:position pos:line="99" pos:column="33"/></expr_stmt></block></then></if>
        }<pos:position pos:line="100" pos:column="10"/></block></then></if>
      }<pos:position pos:line="101" pos:column="8"/></block></then></if>
    }<pos:position pos:line="102" pos:column="6"/></block></for>
    <if pos:line="103" pos:column="5">if<condition pos:line="103" pos:column="7">(<expr><name pos:line="103" pos:column="8">got_exit_signal<pos:position pos:line="103" pos:column="23"/></name></expr>)<pos:position pos:line="103" pos:column="24"/></condition><then pos:line="103" pos:column="24">
      <block type="pseudo"><break pos:line="104" pos:column="7">break;<pos:position pos:line="104" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="106" pos:column="5">rc<pos:position pos:line="106" pos:column="7"/></name> <operator pos:line="106" pos:column="8">=<pos:position pos:line="106" pos:column="9"/></operator> <call><name pos:line="106" pos:column="10">select<pos:position pos:line="106" pos:column="16"/></name><argument_list pos:line="106" pos:column="16">(<argument><expr><operator pos:line="106" pos:column="17">(<pos:position pos:line="106" pos:column="18"/></operator><name pos:line="106" pos:column="18">int<pos:position pos:line="106" pos:column="21"/></name><operator pos:line="106" pos:column="21">)<pos:position pos:line="106" pos:column="22"/></operator><name pos:line="106" pos:column="22">maxfd<pos:position pos:line="106" pos:column="27"/></name> <operator pos:line="106" pos:column="28">+<pos:position pos:line="106" pos:column="29"/></operator> <literal type="number" pos:line="106" pos:column="30">1<pos:position pos:line="106" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="106" pos:column="33">&amp;<pos:position pos:line="106" pos:column="38"/></operator><name pos:line="106" pos:column="34">input<pos:position pos:line="106" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="41">&amp;<pos:position pos:line="106" pos:column="46"/></operator><name pos:line="106" pos:column="42">output<pos:position pos:line="106" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="50">NULL<pos:position pos:line="106" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="56">&amp;<pos:position pos:line="106" pos:column="61"/></operator><name pos:line="106" pos:column="57">timeout<pos:position pos:line="106" pos:column="64"/></name></expr></argument>)<pos:position pos:line="106" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="66"/></expr_stmt>

    <if pos:line="108" pos:column="5">if<condition pos:line="108" pos:column="7">(<expr><name pos:line="108" pos:column="8">rc<pos:position pos:line="108" pos:column="10"/></name> <operator pos:line="108" pos:column="11">&gt;<pos:position pos:line="108" pos:column="15"/></operator> <literal type="number" pos:line="108" pos:column="13">0<pos:position pos:line="108" pos:column="14"/></literal></expr>)<pos:position pos:line="108" pos:column="15"/></condition><then pos:line="108" pos:column="15"> <block pos:line="108" pos:column="16">{
      <comment type="block" pos:line="109" pos:column="7">/* socket action */</comment>
      <decl_stmt><decl><type><name pos:line="110" pos:column="7">bool<pos:position pos:line="110" pos:column="11"/></name></type> <name pos:line="110" pos:column="12">tcp_fin_wr<pos:position pos:line="110" pos:column="22"/></name></decl>;<pos:position pos:line="110" pos:column="23"/></decl_stmt>
      <expr_stmt><expr><name pos:line="111" pos:column="7">timeout_count<pos:position pos:line="111" pos:column="20"/></name> <operator pos:line="111" pos:column="21">=<pos:position pos:line="111" pos:column="22"/></operator> <literal type="number" pos:line="111" pos:column="23">0<pos:position pos:line="111" pos:column="24"/></literal></expr>;<pos:position pos:line="111" pos:column="25"/></expr_stmt>

      <if pos:line="113" pos:column="7">if<condition pos:line="113" pos:column="9">(<expr><name pos:line="113" pos:column="10">got_exit_signal<pos:position pos:line="113" pos:column="25"/></name></expr>)<pos:position pos:line="113" pos:column="26"/></condition><then pos:line="113" pos:column="26">
        <block type="pseudo"><break pos:line="114" pos:column="9">break;<pos:position pos:line="114" pos:column="15"/></break></block></then></if>

      <expr_stmt><expr><name pos:line="116" pos:column="7">tcp_fin_wr<pos:position pos:line="116" pos:column="17"/></name> <operator pos:line="116" pos:column="18">=<pos:position pos:line="116" pos:column="19"/></operator> <name pos:line="116" pos:column="20">FALSE<pos:position pos:line="116" pos:column="25"/></name></expr>;<pos:position pos:line="116" pos:column="26"/></expr_stmt>

      <comment type="block" pos:line="118" pos:column="7">/* ---------------------------------------------------------- */</comment>

      <comment type="block" pos:line="120" pos:column="7">/* passive mode FTP may establish a secondary tunnel */</comment>
      <if pos:line="121" pos:column="7">if<condition pos:line="121" pos:column="9">(<expr><operator pos:line="121" pos:column="10">(<pos:position pos:line="121" pos:column="11"/></operator><name><name pos:line="121" pos:column="11">clientfd<pos:position pos:line="121" pos:column="19"/></name><index pos:line="121" pos:column="19">[<expr><name pos:line="121" pos:column="20">DATA<pos:position pos:line="121" pos:column="24"/></name></expr>]<pos:position pos:line="121" pos:column="25"/></index></name> <operator pos:line="121" pos:column="26">==<pos:position pos:line="121" pos:column="28"/></operator> <name pos:line="121" pos:column="29">CURL_SOCKET_BAD<pos:position pos:line="121" pos:column="44"/></name><operator pos:line="121" pos:column="44">)<pos:position pos:line="121" pos:column="45"/></operator> <operator pos:line="121" pos:column="46">&amp;&amp;<pos:position pos:line="121" pos:column="56"/></operator>
         <operator pos:line="122" pos:column="10">(<pos:position pos:line="122" pos:column="11"/></operator><name><name pos:line="122" pos:column="11">serverfd<pos:position pos:line="122" pos:column="19"/></name><index pos:line="122" pos:column="19">[<expr><name pos:line="122" pos:column="20">DATA<pos:position pos:line="122" pos:column="24"/></name></expr>]<pos:position pos:line="122" pos:column="25"/></index></name> <operator pos:line="122" pos:column="26">==<pos:position pos:line="122" pos:column="28"/></operator> <name pos:line="122" pos:column="29">CURL_SOCKET_BAD<pos:position pos:line="122" pos:column="44"/></name><operator pos:line="122" pos:column="44">)<pos:position pos:line="122" pos:column="45"/></operator> <operator pos:line="122" pos:column="46">&amp;&amp;<pos:position pos:line="122" pos:column="56"/></operator> <call><name pos:line="122" pos:column="49">FD_ISSET<pos:position pos:line="122" pos:column="57"/></name><argument_list pos:line="122" pos:column="57">(<argument><expr><name pos:line="122" pos:column="58">rootfd<pos:position pos:line="122" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="66">&amp;<pos:position pos:line="122" pos:column="71"/></operator><name pos:line="122" pos:column="67">input<pos:position pos:line="122" pos:column="72"/></name></expr></argument>)<pos:position pos:line="122" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="74"/></condition><then pos:line="122" pos:column="74"> <block pos:line="122" pos:column="75">{
        <comment type="block" pos:line="123" pos:column="9">/* a new connection on listener socket (most likely from client) */</comment>
        <decl_stmt><decl><type><name pos:line="124" pos:column="9">curl_socket_t<pos:position pos:line="124" pos:column="22"/></name></type> <name pos:line="124" pos:column="23">datafd<pos:position pos:line="124" pos:column="29"/></name> <init pos:line="124" pos:column="30">= <expr><call><name pos:line="124" pos:column="32">accept<pos:position pos:line="124" pos:column="38"/></name><argument_list pos:line="124" pos:column="38">(<argument><expr><name pos:line="124" pos:column="39">rootfd<pos:position pos:line="124" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="47">NULL<pos:position pos:line="124" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="53">NULL<pos:position pos:line="124" pos:column="57"/></name></expr></argument>)<pos:position pos:line="124" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="124" pos:column="59"/></decl_stmt>
        <if pos:line="125" pos:column="9">if<condition pos:line="125" pos:column="11">(<expr><name pos:line="125" pos:column="12">datafd<pos:position pos:line="125" pos:column="18"/></name> <operator pos:line="125" pos:column="19">!=<pos:position pos:line="125" pos:column="21"/></operator> <name pos:line="125" pos:column="22">CURL_SOCKET_BAD<pos:position pos:line="125" pos:column="37"/></name></expr>)<pos:position pos:line="125" pos:column="38"/></condition><then pos:line="125" pos:column="38"> <block pos:line="125" pos:column="39">{
          <decl_stmt><decl><type><name><name pos:line="126" pos:column="11">struct<pos:position pos:line="126" pos:column="17"/></name> <name pos:line="126" pos:column="18">httprequest<pos:position pos:line="126" pos:column="29"/></name></name></type> <name pos:line="126" pos:column="30">req2<pos:position pos:line="126" pos:column="34"/></name></decl>;<pos:position pos:line="126" pos:column="35"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="127" pos:column="11">int<pos:position pos:line="127" pos:column="14"/></name></type> <name pos:line="127" pos:column="15">err<pos:position pos:line="127" pos:column="18"/></name> <init pos:line="127" pos:column="19">= <expr><literal type="number" pos:line="127" pos:column="21">0<pos:position pos:line="127" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="127" pos:column="23"/></decl_stmt>
          <expr_stmt><expr><call><name pos:line="128" pos:column="11">memset<pos:position pos:line="128" pos:column="17"/></name><argument_list pos:line="128" pos:column="17">(<argument><expr><operator pos:line="128" pos:column="18">&amp;<pos:position pos:line="128" pos:column="23"/></operator><name pos:line="128" pos:column="19">req2<pos:position pos:line="128" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="128" pos:column="25">0<pos:position pos:line="128" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="128" pos:column="28">sizeof<argument_list pos:line="128" pos:column="34">(<argument><expr><name pos:line="128" pos:column="35">req2<pos:position pos:line="128" pos:column="39"/></name></expr></argument>)<pos:position pos:line="128" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="128" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="42"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="129" pos:column="11">logmsg<pos:position pos:line="129" pos:column="17"/></name><argument_list pos:line="129" pos:column="17">(<argument><expr><literal type="string" pos:line="129" pos:column="18">"====&gt; Client connect DATA"<pos:position pos:line="129" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="47"/></expr_stmt>
<cpp:ifdef pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">ifdef<pos:position pos:line="130" pos:column="7"/></cpp:directive> <name pos:line="130" pos:column="8">TCP_NODELAY<pos:position pos:line="130" pos:column="19"/></name></cpp:ifdef>
          <if pos:line="131" pos:column="11">if<condition pos:line="131" pos:column="13">(<expr><call><name pos:line="131" pos:column="14">socket_domain_is_ip<pos:position pos:line="131" pos:column="33"/></name><argument_list pos:line="131" pos:column="33">()<pos:position pos:line="131" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="131" pos:column="36"/></condition><then pos:line="131" pos:column="36"> <block pos:line="131" pos:column="37">{
            <comment type="block" pos:line="132" pos:column="13">/* Disable the Nagle algorithm */</comment>
            <decl_stmt><decl><type><name pos:line="133" pos:column="13">curl_socklen_t<pos:position pos:line="133" pos:column="27"/></name></type> <name pos:line="133" pos:column="28">flag<pos:position pos:line="133" pos:column="32"/></name> <init pos:line="133" pos:column="33">= <expr><literal type="number" pos:line="133" pos:column="35">1<pos:position pos:line="133" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="133" pos:column="37"/></decl_stmt>
            <if pos:line="134" pos:column="13">if<condition pos:line="134" pos:column="15">(<expr><literal type="number" pos:line="134" pos:column="16">0<pos:position pos:line="134" pos:column="17"/></literal> <operator pos:line="134" pos:column="18">!=<pos:position pos:line="134" pos:column="20"/></operator> <call><name pos:line="134" pos:column="21">setsockopt<pos:position pos:line="134" pos:column="31"/></name><argument_list pos:line="134" pos:column="31">(<argument><expr><name pos:line="134" pos:column="32">datafd<pos:position pos:line="134" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="40">IPPROTO_TCP<pos:position pos:line="134" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="53">TCP_NODELAY<pos:position pos:line="134" pos:column="64"/></name></expr></argument>,
                               <argument><expr><operator pos:line="135" pos:column="32">(<pos:position pos:line="135" pos:column="33"/></operator><name pos:line="135" pos:column="33">void<pos:position pos:line="135" pos:column="37"/></name> <operator pos:line="135" pos:column="38">*<pos:position pos:line="135" pos:column="39"/></operator><operator pos:line="135" pos:column="39">)<pos:position pos:line="135" pos:column="40"/></operator><operator pos:line="135" pos:column="40">&amp;<pos:position pos:line="135" pos:column="45"/></operator><name pos:line="135" pos:column="41">flag<pos:position pos:line="135" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="135" pos:column="47">sizeof<argument_list pos:line="135" pos:column="53">(<argument><expr><name pos:line="135" pos:column="54">flag<pos:position pos:line="135" pos:column="58"/></name></expr></argument>)<pos:position pos:line="135" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="135" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="135" pos:column="61"/></condition><then pos:line="135" pos:column="61">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="136" pos:column="15">logmsg<pos:position pos:line="136" pos:column="21"/></name><argument_list pos:line="136" pos:column="21">(<argument><expr><literal type="string" pos:line="136" pos:column="22">"====&gt; TCP_NODELAY for client DATA conection failed"<pos:position pos:line="136" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="76"/></expr_stmt></block></then></if>
          }<pos:position pos:line="137" pos:column="12"/></block></then></if>
<cpp:endif pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">endif<pos:position pos:line="138" pos:column="7"/></cpp:directive></cpp:endif>
          <expr_stmt><expr><name><name pos:line="139" pos:column="11">req2<pos:position pos:line="139" pos:column="15"/></name><operator pos:line="139" pos:column="15">.<pos:position pos:line="139" pos:column="16"/></operator><name pos:line="139" pos:column="16">pipelining<pos:position pos:line="139" pos:column="26"/></name></name> <operator pos:line="139" pos:column="27">=<pos:position pos:line="139" pos:column="28"/></operator> <name pos:line="139" pos:column="29">FALSE<pos:position pos:line="139" pos:column="34"/></name></expr>;<pos:position pos:line="139" pos:column="35"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="140" pos:column="11">init_httprequest<pos:position pos:line="140" pos:column="27"/></name><argument_list pos:line="140" pos:column="27">(<argument><expr><operator pos:line="140" pos:column="28">&amp;<pos:position pos:line="140" pos:column="33"/></operator><name pos:line="140" pos:column="29">req2<pos:position pos:line="140" pos:column="33"/></name></expr></argument>)<pos:position pos:line="140" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="35"/></expr_stmt>
          <while pos:line="141" pos:column="11">while<condition pos:line="141" pos:column="16">(<expr><operator pos:line="141" pos:column="17">!<pos:position pos:line="141" pos:column="18"/></operator><name><name pos:line="141" pos:column="18">req2<pos:position pos:line="141" pos:column="22"/></name><operator pos:line="141" pos:column="22">.<pos:position pos:line="141" pos:column="23"/></operator><name pos:line="141" pos:column="23">done_processing<pos:position pos:line="141" pos:column="38"/></name></name></expr>)<pos:position pos:line="141" pos:column="39"/></condition> <block pos:line="141" pos:column="40">{
            <expr_stmt><expr><name pos:line="142" pos:column="13">err<pos:position pos:line="142" pos:column="16"/></name> <operator pos:line="142" pos:column="17">=<pos:position pos:line="142" pos:column="18"/></operator> <call><name pos:line="142" pos:column="19">get_request<pos:position pos:line="142" pos:column="30"/></name><argument_list pos:line="142" pos:column="30">(<argument><expr><name pos:line="142" pos:column="31">datafd<pos:position pos:line="142" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="39">&amp;<pos:position pos:line="142" pos:column="44"/></operator><name pos:line="142" pos:column="40">req2<pos:position pos:line="142" pos:column="44"/></name></expr></argument>)<pos:position pos:line="142" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="46"/></expr_stmt>
            <if pos:line="143" pos:column="13">if<condition pos:line="143" pos:column="15">(<expr><name pos:line="143" pos:column="16">err<pos:position pos:line="143" pos:column="19"/></name> <operator pos:line="143" pos:column="20">&lt;<pos:position pos:line="143" pos:column="24"/></operator> <literal type="number" pos:line="143" pos:column="22">0<pos:position pos:line="143" pos:column="23"/></literal></expr>)<pos:position pos:line="143" pos:column="24"/></condition><then pos:line="143" pos:column="24"> <block pos:line="143" pos:column="25">{
              <comment type="block" pos:line="144" pos:column="15">/* this socket must be closed, done or not */</comment>
              <break pos:line="145" pos:column="15">break;<pos:position pos:line="145" pos:column="21"/></break>
            }<pos:position pos:line="146" pos:column="14"/></block></then></if>
          }<pos:position pos:line="147" pos:column="12"/></block></while>

          <comment type="block" pos:line="149" pos:column="11">/* skip this and close the socket if err &lt; 0 */</comment>
          <if pos:line="150" pos:column="11">if<condition pos:line="150" pos:column="13">(<expr><name pos:line="150" pos:column="14">err<pos:position pos:line="150" pos:column="17"/></name> <operator pos:line="150" pos:column="18">&gt;=<pos:position pos:line="150" pos:column="23"/></operator> <literal type="number" pos:line="150" pos:column="21">0<pos:position pos:line="150" pos:column="22"/></literal></expr>)<pos:position pos:line="150" pos:column="23"/></condition><then pos:line="150" pos:column="23"> <block pos:line="150" pos:column="24">{
            <expr_stmt><expr><name pos:line="151" pos:column="13">err<pos:position pos:line="151" pos:column="16"/></name> <operator pos:line="151" pos:column="17">=<pos:position pos:line="151" pos:column="18"/></operator> <call><name pos:line="151" pos:column="19">send_doc<pos:position pos:line="151" pos:column="27"/></name><argument_list pos:line="151" pos:column="27">(<argument><expr><name pos:line="151" pos:column="28">datafd<pos:position pos:line="151" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="151" pos:column="36">&amp;<pos:position pos:line="151" pos:column="41"/></operator><name pos:line="151" pos:column="37">req2<pos:position pos:line="151" pos:column="41"/></name></expr></argument>)<pos:position pos:line="151" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="43"/></expr_stmt>
            <if pos:line="152" pos:column="13">if<condition pos:line="152" pos:column="15">(<expr><operator pos:line="152" pos:column="16">!<pos:position pos:line="152" pos:column="17"/></operator><name pos:line="152" pos:column="17">err<pos:position pos:line="152" pos:column="20"/></name> <operator pos:line="152" pos:column="21">&amp;&amp;<pos:position pos:line="152" pos:column="31"/></operator> <name><name pos:line="152" pos:column="24">req2<pos:position pos:line="152" pos:column="28"/></name><operator pos:line="152" pos:column="28">.<pos:position pos:line="152" pos:column="29"/></operator><name pos:line="152" pos:column="29">connect_request<pos:position pos:line="152" pos:column="44"/></name></name></expr>)<pos:position pos:line="152" pos:column="45"/></condition><then pos:line="152" pos:column="45"> <block pos:line="152" pos:column="46">{
              <comment type="block" pos:line="153" pos:column="15">/* sleep to prevent triggering libcurl known bug #39. */</comment>
              <for pos:line="154" pos:column="15">for<control pos:line="154" pos:column="18">(<init><expr><name pos:line="154" pos:column="19">loop<pos:position pos:line="154" pos:column="23"/></name> <operator pos:line="154" pos:column="24">=<pos:position pos:line="154" pos:column="25"/></operator> <literal type="number" pos:line="154" pos:column="26">2<pos:position pos:line="154" pos:column="27"/></literal></expr>;<pos:position pos:line="154" pos:column="28"/></init> <condition><expr><operator pos:line="154" pos:column="29">(<pos:position pos:line="154" pos:column="30"/></operator><name pos:line="154" pos:column="30">loop<pos:position pos:line="154" pos:column="34"/></name> <operator pos:line="154" pos:column="35">&gt;<pos:position pos:line="154" pos:column="39"/></operator> <literal type="number" pos:line="154" pos:column="37">0<pos:position pos:line="154" pos:column="38"/></literal><operator pos:line="154" pos:column="38">)<pos:position pos:line="154" pos:column="39"/></operator> <operator pos:line="154" pos:column="40">&amp;&amp;<pos:position pos:line="154" pos:column="50"/></operator> <operator pos:line="154" pos:column="43">!<pos:position pos:line="154" pos:column="44"/></operator><name pos:line="154" pos:column="44">got_exit_signal<pos:position pos:line="154" pos:column="59"/></name></expr>;<pos:position pos:line="154" pos:column="60"/></condition> <incr><expr><name pos:line="154" pos:column="61">loop<pos:position pos:line="154" pos:column="65"/></name><operator pos:line="154" pos:column="65">--<pos:position pos:line="154" pos:column="67"/></operator></expr></incr>)<pos:position pos:line="154" pos:column="68"/></control>
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="155" pos:column="17">wait_ms<pos:position pos:line="155" pos:column="24"/></name><argument_list pos:line="155" pos:column="24">(<argument><expr><literal type="number" pos:line="155" pos:column="25">250<pos:position pos:line="155" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="30"/></expr_stmt></block></for>
              <if pos:line="156" pos:column="15">if<condition pos:line="156" pos:column="17">(<expr><operator pos:line="156" pos:column="18">!<pos:position pos:line="156" pos:column="19"/></operator><name pos:line="156" pos:column="19">got_exit_signal<pos:position pos:line="156" pos:column="34"/></name></expr>)<pos:position pos:line="156" pos:column="35"/></condition><then pos:line="156" pos:column="35"> <block pos:line="156" pos:column="36">{
                <comment type="block" pos:line="157" pos:column="17">/* connect to the server */</comment>
                <expr_stmt><expr><name><name pos:line="158" pos:column="17">serverfd<pos:position pos:line="158" pos:column="25"/></name><index pos:line="158" pos:column="25">[<expr><name pos:line="158" pos:column="26">DATA<pos:position pos:line="158" pos:column="30"/></name></expr>]<pos:position pos:line="158" pos:column="31"/></index></name> <operator pos:line="158" pos:column="32">=<pos:position pos:line="158" pos:column="33"/></operator> <call><name pos:line="158" pos:column="34">connect_to<pos:position pos:line="158" pos:column="44"/></name><argument_list pos:line="158" pos:column="44">(<argument><expr><name pos:line="158" pos:column="45">ipaddr<pos:position pos:line="158" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="158" pos:column="53">req2<pos:position pos:line="158" pos:column="57"/></name><operator pos:line="158" pos:column="57">.<pos:position pos:line="158" pos:column="58"/></operator><name pos:line="158" pos:column="58">connect_port<pos:position pos:line="158" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="158" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="72"/></expr_stmt>
                <if pos:line="159" pos:column="17">if<condition pos:line="159" pos:column="19">(<expr><name><name pos:line="159" pos:column="20">serverfd<pos:position pos:line="159" pos:column="28"/></name><index pos:line="159" pos:column="28">[<expr><name pos:line="159" pos:column="29">DATA<pos:position pos:line="159" pos:column="33"/></name></expr>]<pos:position pos:line="159" pos:column="34"/></index></name> <operator pos:line="159" pos:column="35">!=<pos:position pos:line="159" pos:column="37"/></operator> <name pos:line="159" pos:column="38">CURL_SOCKET_BAD<pos:position pos:line="159" pos:column="53"/></name></expr>)<pos:position pos:line="159" pos:column="54"/></condition><then pos:line="159" pos:column="54"> <block pos:line="159" pos:column="55">{
                  <comment type="block" pos:line="160" pos:column="19">/* secondary tunnel established, now we have two
                     connections */</comment>
                  <expr_stmt><expr><name><name pos:line="162" pos:column="19">poll_client_rd<pos:position pos:line="162" pos:column="33"/></name><index pos:line="162" pos:column="33">[<expr><name pos:line="162" pos:column="34">DATA<pos:position pos:line="162" pos:column="38"/></name></expr>]<pos:position pos:line="162" pos:column="39"/></index></name> <operator pos:line="162" pos:column="40">=<pos:position pos:line="162" pos:column="41"/></operator> <name pos:line="162" pos:column="42">TRUE<pos:position pos:line="162" pos:column="46"/></name></expr>;<pos:position pos:line="162" pos:column="47"/></expr_stmt>
                  <expr_stmt><expr><name><name pos:line="163" pos:column="19">poll_client_wr<pos:position pos:line="163" pos:column="33"/></name><index pos:line="163" pos:column="33">[<expr><name pos:line="163" pos:column="34">DATA<pos:position pos:line="163" pos:column="38"/></name></expr>]<pos:position pos:line="163" pos:column="39"/></index></name> <operator pos:line="163" pos:column="40">=<pos:position pos:line="163" pos:column="41"/></operator> <name pos:line="163" pos:column="42">TRUE<pos:position pos:line="163" pos:column="46"/></name></expr>;<pos:position pos:line="163" pos:column="47"/></expr_stmt>
                  <expr_stmt><expr><name><name pos:line="164" pos:column="19">poll_server_rd<pos:position pos:line="164" pos:column="33"/></name><index pos:line="164" pos:column="33">[<expr><name pos:line="164" pos:column="34">DATA<pos:position pos:line="164" pos:column="38"/></name></expr>]<pos:position pos:line="164" pos:column="39"/></index></name> <operator pos:line="164" pos:column="40">=<pos:position pos:line="164" pos:column="41"/></operator> <name pos:line="164" pos:column="42">TRUE<pos:position pos:line="164" pos:column="46"/></name></expr>;<pos:position pos:line="164" pos:column="47"/></expr_stmt>
                  <expr_stmt><expr><name><name pos:line="165" pos:column="19">poll_server_wr<pos:position pos:line="165" pos:column="33"/></name><index pos:line="165" pos:column="33">[<expr><name pos:line="165" pos:column="34">DATA<pos:position pos:line="165" pos:column="38"/></name></expr>]<pos:position pos:line="165" pos:column="39"/></index></name> <operator pos:line="165" pos:column="40">=<pos:position pos:line="165" pos:column="41"/></operator> <name pos:line="165" pos:column="42">TRUE<pos:position pos:line="165" pos:column="46"/></name></expr>;<pos:position pos:line="165" pos:column="47"/></expr_stmt>
                  <expr_stmt><expr><name pos:line="166" pos:column="19">max_tunnel_idx<pos:position pos:line="166" pos:column="33"/></name> <operator pos:line="166" pos:column="34">=<pos:position pos:line="166" pos:column="35"/></operator> <name pos:line="166" pos:column="36">DATA<pos:position pos:line="166" pos:column="40"/></name></expr>;<pos:position pos:line="166" pos:column="41"/></expr_stmt>
                  <expr_stmt><expr><name pos:line="167" pos:column="19">secondary<pos:position pos:line="167" pos:column="28"/></name> <operator pos:line="167" pos:column="29">=<pos:position pos:line="167" pos:column="30"/></operator> <name pos:line="167" pos:column="31">TRUE<pos:position pos:line="167" pos:column="35"/></name></expr>;<pos:position pos:line="167" pos:column="36"/></expr_stmt>
                  <expr_stmt><expr><name><name pos:line="168" pos:column="19">toc<pos:position pos:line="168" pos:column="22"/></name><index pos:line="168" pos:column="22">[<expr><name pos:line="168" pos:column="23">DATA<pos:position pos:line="168" pos:column="27"/></name></expr>]<pos:position pos:line="168" pos:column="28"/></index></name> <operator pos:line="168" pos:column="29">=<pos:position pos:line="168" pos:column="30"/></operator> <literal type="number" pos:line="168" pos:column="31">0<pos:position pos:line="168" pos:column="32"/></literal></expr>;<pos:position pos:line="168" pos:column="33"/></expr_stmt>
                  <expr_stmt><expr><name><name pos:line="169" pos:column="19">tos<pos:position pos:line="169" pos:column="22"/></name><index pos:line="169" pos:column="22">[<expr><name pos:line="169" pos:column="23">DATA<pos:position pos:line="169" pos:column="27"/></name></expr>]<pos:position pos:line="169" pos:column="28"/></index></name> <operator pos:line="169" pos:column="29">=<pos:position pos:line="169" pos:column="30"/></operator> <literal type="number" pos:line="169" pos:column="31">0<pos:position pos:line="169" pos:column="32"/></literal></expr>;<pos:position pos:line="169" pos:column="33"/></expr_stmt>
                  <expr_stmt><expr><name><name pos:line="170" pos:column="19">clientfd<pos:position pos:line="170" pos:column="27"/></name><index pos:line="170" pos:column="27">[<expr><name pos:line="170" pos:column="28">DATA<pos:position pos:line="170" pos:column="32"/></name></expr>]<pos:position pos:line="170" pos:column="33"/></index></name> <operator pos:line="170" pos:column="34">=<pos:position pos:line="170" pos:column="35"/></operator> <name pos:line="170" pos:column="36">datafd<pos:position pos:line="170" pos:column="42"/></name></expr>;<pos:position pos:line="170" pos:column="43"/></expr_stmt>
                  <expr_stmt><expr><name pos:line="171" pos:column="19">datafd<pos:position pos:line="171" pos:column="25"/></name> <operator pos:line="171" pos:column="26">=<pos:position pos:line="171" pos:column="27"/></operator> <name pos:line="171" pos:column="28">CURL_SOCKET_BAD<pos:position pos:line="171" pos:column="43"/></name></expr>;<pos:position pos:line="171" pos:column="44"/></expr_stmt>
                }<pos:position pos:line="172" pos:column="18"/></block></then></if>
              }<pos:position pos:line="173" pos:column="16"/></block></then></if>
            }<pos:position pos:line="174" pos:column="14"/></block></then></if>
          }<pos:position pos:line="175" pos:column="12"/></block></then></if>
          <if pos:line="176" pos:column="11">if<condition pos:line="176" pos:column="13">(<expr><name pos:line="176" pos:column="14">datafd<pos:position pos:line="176" pos:column="20"/></name> <operator pos:line="176" pos:column="21">!=<pos:position pos:line="176" pos:column="23"/></operator> <name pos:line="176" pos:column="24">CURL_SOCKET_BAD<pos:position pos:line="176" pos:column="39"/></name></expr>)<pos:position pos:line="176" pos:column="40"/></condition><then pos:line="176" pos:column="40"> <block pos:line="176" pos:column="41">{
            <comment type="block" pos:line="177" pos:column="13">/* secondary tunnel not established */</comment>
            <expr_stmt><expr><call><name pos:line="178" pos:column="13">shutdown<pos:position pos:line="178" pos:column="21"/></name><argument_list pos:line="178" pos:column="21">(<argument><expr><name pos:line="178" pos:column="22">datafd<pos:position pos:line="178" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="30">SHUT_RDWR<pos:position pos:line="178" pos:column="39"/></name></expr></argument>)<pos:position pos:line="178" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="179" pos:column="13">sclose<pos:position pos:line="179" pos:column="19"/></name><argument_list pos:line="179" pos:column="19">(<argument><expr><name pos:line="179" pos:column="20">datafd<pos:position pos:line="179" pos:column="26"/></name></expr></argument>)<pos:position pos:line="179" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="28"/></expr_stmt>
          }<pos:position pos:line="180" pos:column="12"/></block></then></if>
        }<pos:position pos:line="181" pos:column="10"/></block></then></if>
        <if pos:line="182" pos:column="9">if<condition pos:line="182" pos:column="11">(<expr><name pos:line="182" pos:column="12">got_exit_signal<pos:position pos:line="182" pos:column="27"/></name></expr>)<pos:position pos:line="182" pos:column="28"/></condition><then pos:line="182" pos:column="28">
          <block type="pseudo"><break pos:line="183" pos:column="11">break;<pos:position pos:line="183" pos:column="17"/></break></block></then></if>
      }<pos:position pos:line="184" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="186" pos:column="7">/* ---------------------------------------------------------- */</comment>

      <comment type="block" pos:line="188" pos:column="7">/* react to tunnel endpoint readable/writable notifications */</comment>
      <for pos:line="189" pos:column="7">for<control pos:line="189" pos:column="10">(<init><expr><name pos:line="189" pos:column="11">i<pos:position pos:line="189" pos:column="12"/></name> <operator pos:line="189" pos:column="13">=<pos:position pos:line="189" pos:column="14"/></operator> <literal type="number" pos:line="189" pos:column="15">0<pos:position pos:line="189" pos:column="16"/></literal></expr>;<pos:position pos:line="189" pos:column="17"/></init> <condition><expr><name pos:line="189" pos:column="18">i<pos:position pos:line="189" pos:column="19"/></name> <operator pos:line="189" pos:column="20">&lt;=<pos:position pos:line="189" pos:column="25"/></operator> <name pos:line="189" pos:column="23">max_tunnel_idx<pos:position pos:line="189" pos:column="37"/></name></expr>;<pos:position pos:line="189" pos:column="38"/></condition> <incr><expr><name pos:line="189" pos:column="39">i<pos:position pos:line="189" pos:column="40"/></name><operator pos:line="189" pos:column="40">++<pos:position pos:line="189" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="189" pos:column="43"/></control> <block pos:line="189" pos:column="44">{
        <decl_stmt><decl><type><name pos:line="190" pos:column="9">size_t<pos:position pos:line="190" pos:column="15"/></name></type> <name pos:line="190" pos:column="16">len<pos:position pos:line="190" pos:column="19"/></name></decl>;<pos:position pos:line="190" pos:column="20"/></decl_stmt>
        <if pos:line="191" pos:column="9">if<condition pos:line="191" pos:column="11">(<expr><name><name pos:line="191" pos:column="12">clientfd<pos:position pos:line="191" pos:column="20"/></name><index pos:line="191" pos:column="20">[<expr><name pos:line="191" pos:column="21">i<pos:position pos:line="191" pos:column="22"/></name></expr>]<pos:position pos:line="191" pos:column="23"/></index></name> <operator pos:line="191" pos:column="24">!=<pos:position pos:line="191" pos:column="26"/></operator> <name pos:line="191" pos:column="27">CURL_SOCKET_BAD<pos:position pos:line="191" pos:column="42"/></name></expr>)<pos:position pos:line="191" pos:column="43"/></condition><then pos:line="191" pos:column="43"> <block pos:line="191" pos:column="44">{
          <expr_stmt><expr><name pos:line="192" pos:column="11">len<pos:position pos:line="192" pos:column="14"/></name> <operator pos:line="192" pos:column="15">=<pos:position pos:line="192" pos:column="16"/></operator> <sizeof pos:line="192" pos:column="17">sizeof<argument_list pos:line="192" pos:column="23">(<argument><expr><name><name pos:line="192" pos:column="24">readclient<pos:position pos:line="192" pos:column="34"/></name><index pos:line="192" pos:column="34">[<expr><name pos:line="192" pos:column="35">i<pos:position pos:line="192" pos:column="36"/></name></expr>]<pos:position pos:line="192" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="192" pos:column="38"/></argument_list></sizeof> <operator pos:line="192" pos:column="39">-<pos:position pos:line="192" pos:column="40"/></operator> <name><name pos:line="192" pos:column="41">tos<pos:position pos:line="192" pos:column="44"/></name><index pos:line="192" pos:column="44">[<expr><name pos:line="192" pos:column="45">i<pos:position pos:line="192" pos:column="46"/></name></expr>]<pos:position pos:line="192" pos:column="47"/></index></name></expr>;<pos:position pos:line="192" pos:column="48"/></expr_stmt>
          <if pos:line="193" pos:column="11">if<condition pos:line="193" pos:column="13">(<expr><name pos:line="193" pos:column="14">len<pos:position pos:line="193" pos:column="17"/></name> <operator pos:line="193" pos:column="18">&amp;&amp;<pos:position pos:line="193" pos:column="28"/></operator> <call><name pos:line="193" pos:column="21">FD_ISSET<pos:position pos:line="193" pos:column="29"/></name><argument_list pos:line="193" pos:column="29">(<argument><expr><name><name pos:line="193" pos:column="30">clientfd<pos:position pos:line="193" pos:column="38"/></name><index pos:line="193" pos:column="38">[<expr><name pos:line="193" pos:column="39">i<pos:position pos:line="193" pos:column="40"/></name></expr>]<pos:position pos:line="193" pos:column="41"/></index></name></expr></argument>, <argument><expr><operator pos:line="193" pos:column="43">&amp;<pos:position pos:line="193" pos:column="48"/></operator><name pos:line="193" pos:column="44">input<pos:position pos:line="193" pos:column="49"/></name></expr></argument>)<pos:position pos:line="193" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="193" pos:column="51"/></condition><then pos:line="193" pos:column="51"> <block pos:line="193" pos:column="52">{
            <comment type="block" pos:line="194" pos:column="13">/* read from client */</comment>
            <expr_stmt><expr><name pos:line="195" pos:column="13">rc<pos:position pos:line="195" pos:column="15"/></name> <operator pos:line="195" pos:column="16">=<pos:position pos:line="195" pos:column="17"/></operator> <call><name pos:line="195" pos:column="18">sread<pos:position pos:line="195" pos:column="23"/></name><argument_list pos:line="195" pos:column="23">(<argument><expr><name><name pos:line="195" pos:column="24">clientfd<pos:position pos:line="195" pos:column="32"/></name><index pos:line="195" pos:column="32">[<expr><name pos:line="195" pos:column="33">i<pos:position pos:line="195" pos:column="34"/></name></expr>]<pos:position pos:line="195" pos:column="35"/></index></name></expr></argument>, <argument><expr><operator pos:line="195" pos:column="37">&amp;<pos:position pos:line="195" pos:column="42"/></operator><name><name pos:line="195" pos:column="38">readclient<pos:position pos:line="195" pos:column="48"/></name><index pos:line="195" pos:column="48">[<expr><name pos:line="195" pos:column="49">i<pos:position pos:line="195" pos:column="50"/></name></expr>]<pos:position pos:line="195" pos:column="51"/></index><index pos:line="195" pos:column="51">[<expr><name><name pos:line="195" pos:column="52">tos<pos:position pos:line="195" pos:column="55"/></name><index pos:line="195" pos:column="55">[<expr><name pos:line="195" pos:column="56">i<pos:position pos:line="195" pos:column="57"/></name></expr>]<pos:position pos:line="195" pos:column="58"/></index></name></expr>]<pos:position pos:line="195" pos:column="59"/></index></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="61">len<pos:position pos:line="195" pos:column="64"/></name></expr></argument>)<pos:position pos:line="195" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="66"/></expr_stmt>
            <if pos:line="196" pos:column="13">if<condition pos:line="196" pos:column="15">(<expr><name pos:line="196" pos:column="16">rc<pos:position pos:line="196" pos:column="18"/></name> <operator pos:line="196" pos:column="19">&lt;=<pos:position pos:line="196" pos:column="24"/></operator> <literal type="number" pos:line="196" pos:column="22">0<pos:position pos:line="196" pos:column="23"/></literal></expr>)<pos:position pos:line="196" pos:column="24"/></condition><then pos:line="196" pos:column="24"> <block pos:line="196" pos:column="25">{
              <expr_stmt><expr><call><name pos:line="197" pos:column="15">logmsg<pos:position pos:line="197" pos:column="21"/></name><argument_list pos:line="197" pos:column="21">(<argument><expr><literal type="string" pos:line="197" pos:column="22">"[%s] got %zd, STOP READING client"<pos:position pos:line="197" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="197" pos:column="59">data_or_ctrl<pos:position pos:line="197" pos:column="71"/></name><argument_list pos:line="197" pos:column="71">(<argument><expr><name pos:line="197" pos:column="72">i<pos:position pos:line="197" pos:column="73"/></name></expr></argument>)<pos:position pos:line="197" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="197" pos:column="76">rc<pos:position pos:line="197" pos:column="78"/></name></expr></argument>)<pos:position pos:line="197" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="80"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="198" pos:column="15">shutdown<pos:position pos:line="198" pos:column="23"/></name><argument_list pos:line="198" pos:column="23">(<argument><expr><name><name pos:line="198" pos:column="24">clientfd<pos:position pos:line="198" pos:column="32"/></name><index pos:line="198" pos:column="32">[<expr><name pos:line="198" pos:column="33">i<pos:position pos:line="198" pos:column="34"/></name></expr>]<pos:position pos:line="198" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="37">SHUT_RD<pos:position pos:line="198" pos:column="44"/></name></expr></argument>)<pos:position pos:line="198" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="46"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="199" pos:column="15">poll_client_rd<pos:position pos:line="199" pos:column="29"/></name><index pos:line="199" pos:column="29">[<expr><name pos:line="199" pos:column="30">i<pos:position pos:line="199" pos:column="31"/></name></expr>]<pos:position pos:line="199" pos:column="32"/></index></name> <operator pos:line="199" pos:column="33">=<pos:position pos:line="199" pos:column="34"/></operator> <name pos:line="199" pos:column="35">FALSE<pos:position pos:line="199" pos:column="40"/></name></expr>;<pos:position pos:line="199" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="200" pos:column="14"/></block></then>
            <else pos:line="201" pos:column="13">else <block pos:line="201" pos:column="18">{
              <expr_stmt><expr><call><name pos:line="202" pos:column="15">logmsg<pos:position pos:line="202" pos:column="21"/></name><argument_list pos:line="202" pos:column="21">(<argument><expr><literal type="string" pos:line="202" pos:column="22">"[%s] READ %zd bytes from client"<pos:position pos:line="202" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="202" pos:column="57">data_or_ctrl<pos:position pos:line="202" pos:column="69"/></name><argument_list pos:line="202" pos:column="69">(<argument><expr><name pos:line="202" pos:column="70">i<pos:position pos:line="202" pos:column="71"/></name></expr></argument>)<pos:position pos:line="202" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="202" pos:column="74">rc<pos:position pos:line="202" pos:column="76"/></name></expr></argument>)<pos:position pos:line="202" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="78"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="203" pos:column="15">logmsg<pos:position pos:line="203" pos:column="21"/></name><argument_list pos:line="203" pos:column="21">(<argument><expr><literal type="string" pos:line="203" pos:column="22">"[%s] READ \"%s\""<pos:position pos:line="203" pos:column="40"/></literal></expr></argument>, <argument><expr><call><name pos:line="203" pos:column="42">data_or_ctrl<pos:position pos:line="203" pos:column="54"/></name><argument_list pos:line="203" pos:column="54">(<argument><expr><name pos:line="203" pos:column="55">i<pos:position pos:line="203" pos:column="56"/></name></expr></argument>)<pos:position pos:line="203" pos:column="57"/></argument_list></call></expr></argument>,
                     <argument><expr><call><name pos:line="204" pos:column="22">data_to_hex<pos:position pos:line="204" pos:column="33"/></name><argument_list pos:line="204" pos:column="33">(<argument><expr><operator pos:line="204" pos:column="34">&amp;<pos:position pos:line="204" pos:column="39"/></operator><name><name pos:line="204" pos:column="35">readclient<pos:position pos:line="204" pos:column="45"/></name><index pos:line="204" pos:column="45">[<expr><name pos:line="204" pos:column="46">i<pos:position pos:line="204" pos:column="47"/></name></expr>]<pos:position pos:line="204" pos:column="48"/></index><index pos:line="204" pos:column="48">[<expr><name><name pos:line="204" pos:column="49">tos<pos:position pos:line="204" pos:column="52"/></name><index pos:line="204" pos:column="52">[<expr><name pos:line="204" pos:column="53">i<pos:position pos:line="204" pos:column="54"/></name></expr>]<pos:position pos:line="204" pos:column="55"/></index></name></expr>]<pos:position pos:line="204" pos:column="56"/></index></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="58">rc<pos:position pos:line="204" pos:column="60"/></name></expr></argument>)<pos:position pos:line="204" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="204" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="63"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="205" pos:column="15">tos<pos:position pos:line="205" pos:column="18"/></name><index pos:line="205" pos:column="18">[<expr><name pos:line="205" pos:column="19">i<pos:position pos:line="205" pos:column="20"/></name></expr>]<pos:position pos:line="205" pos:column="21"/></index></name> <operator pos:line="205" pos:column="22">+=<pos:position pos:line="205" pos:column="24"/></operator> <name pos:line="205" pos:column="25">rc<pos:position pos:line="205" pos:column="27"/></name></expr>;<pos:position pos:line="205" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="206" pos:column="14"/></block></else></if>
          }<pos:position pos:line="207" pos:column="12"/></block></then></if>
        }<pos:position pos:line="208" pos:column="10"/></block></then></if>
        <if pos:line="209" pos:column="9">if<condition pos:line="209" pos:column="11">(<expr><name><name pos:line="209" pos:column="12">serverfd<pos:position pos:line="209" pos:column="20"/></name><index pos:line="209" pos:column="20">[<expr><name pos:line="209" pos:column="21">i<pos:position pos:line="209" pos:column="22"/></name></expr>]<pos:position pos:line="209" pos:column="23"/></index></name> <operator pos:line="209" pos:column="24">!=<pos:position pos:line="209" pos:column="26"/></operator> <name pos:line="209" pos:column="27">CURL_SOCKET_BAD<pos:position pos:line="209" pos:column="42"/></name></expr>)<pos:position pos:line="209" pos:column="43"/></condition><then pos:line="209" pos:column="43"> <block pos:line="209" pos:column="44">{
          <expr_stmt><expr><name pos:line="210" pos:column="11">len<pos:position pos:line="210" pos:column="14"/></name> <operator pos:line="210" pos:column="15">=<pos:position pos:line="210" pos:column="16"/></operator> <sizeof pos:line="210" pos:column="17">sizeof<argument_list pos:line="210" pos:column="23">(<argument><expr><name><name pos:line="210" pos:column="24">readserver<pos:position pos:line="210" pos:column="34"/></name><index pos:line="210" pos:column="34">[<expr><name pos:line="210" pos:column="35">i<pos:position pos:line="210" pos:column="36"/></name></expr>]<pos:position pos:line="210" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="210" pos:column="38"/></argument_list></sizeof><operator pos:line="210" pos:column="38">-<pos:position pos:line="210" pos:column="39"/></operator><name><name pos:line="210" pos:column="39">toc<pos:position pos:line="210" pos:column="42"/></name><index pos:line="210" pos:column="42">[<expr><name pos:line="210" pos:column="43">i<pos:position pos:line="210" pos:column="44"/></name></expr>]<pos:position pos:line="210" pos:column="45"/></index></name></expr>;<pos:position pos:line="210" pos:column="46"/></expr_stmt>
          <if pos:line="211" pos:column="11">if<condition pos:line="211" pos:column="13">(<expr><name pos:line="211" pos:column="14">len<pos:position pos:line="211" pos:column="17"/></name> <operator pos:line="211" pos:column="18">&amp;&amp;<pos:position pos:line="211" pos:column="28"/></operator> <call><name pos:line="211" pos:column="21">FD_ISSET<pos:position pos:line="211" pos:column="29"/></name><argument_list pos:line="211" pos:column="29">(<argument><expr><name><name pos:line="211" pos:column="30">serverfd<pos:position pos:line="211" pos:column="38"/></name><index pos:line="211" pos:column="38">[<expr><name pos:line="211" pos:column="39">i<pos:position pos:line="211" pos:column="40"/></name></expr>]<pos:position pos:line="211" pos:column="41"/></index></name></expr></argument>, <argument><expr><operator pos:line="211" pos:column="43">&amp;<pos:position pos:line="211" pos:column="48"/></operator><name pos:line="211" pos:column="44">input<pos:position pos:line="211" pos:column="49"/></name></expr></argument>)<pos:position pos:line="211" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="211" pos:column="51"/></condition><then pos:line="211" pos:column="51"> <block pos:line="211" pos:column="52">{
            <comment type="block" pos:line="212" pos:column="13">/* read from server */</comment>
            <expr_stmt><expr><name pos:line="213" pos:column="13">rc<pos:position pos:line="213" pos:column="15"/></name> <operator pos:line="213" pos:column="16">=<pos:position pos:line="213" pos:column="17"/></operator> <call><name pos:line="213" pos:column="18">sread<pos:position pos:line="213" pos:column="23"/></name><argument_list pos:line="213" pos:column="23">(<argument><expr><name><name pos:line="213" pos:column="24">serverfd<pos:position pos:line="213" pos:column="32"/></name><index pos:line="213" pos:column="32">[<expr><name pos:line="213" pos:column="33">i<pos:position pos:line="213" pos:column="34"/></name></expr>]<pos:position pos:line="213" pos:column="35"/></index></name></expr></argument>, <argument><expr><operator pos:line="213" pos:column="37">&amp;<pos:position pos:line="213" pos:column="42"/></operator><name><name pos:line="213" pos:column="38">readserver<pos:position pos:line="213" pos:column="48"/></name><index pos:line="213" pos:column="48">[<expr><name pos:line="213" pos:column="49">i<pos:position pos:line="213" pos:column="50"/></name></expr>]<pos:position pos:line="213" pos:column="51"/></index><index pos:line="213" pos:column="51">[<expr><name><name pos:line="213" pos:column="52">toc<pos:position pos:line="213" pos:column="55"/></name><index pos:line="213" pos:column="55">[<expr><name pos:line="213" pos:column="56">i<pos:position pos:line="213" pos:column="57"/></name></expr>]<pos:position pos:line="213" pos:column="58"/></index></name></expr>]<pos:position pos:line="213" pos:column="59"/></index></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="61">len<pos:position pos:line="213" pos:column="64"/></name></expr></argument>)<pos:position pos:line="213" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="66"/></expr_stmt>
            <if pos:line="214" pos:column="13">if<condition pos:line="214" pos:column="15">(<expr><name pos:line="214" pos:column="16">rc<pos:position pos:line="214" pos:column="18"/></name> <operator pos:line="214" pos:column="19">&lt;=<pos:position pos:line="214" pos:column="24"/></operator> <literal type="number" pos:line="214" pos:column="22">0<pos:position pos:line="214" pos:column="23"/></literal></expr>)<pos:position pos:line="214" pos:column="24"/></condition><then pos:line="214" pos:column="24"> <block pos:line="214" pos:column="25">{
              <expr_stmt><expr><call><name pos:line="215" pos:column="15">logmsg<pos:position pos:line="215" pos:column="21"/></name><argument_list pos:line="215" pos:column="21">(<argument><expr><literal type="string" pos:line="215" pos:column="22">"[%s] got %zd, STOP READING server"<pos:position pos:line="215" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="215" pos:column="59">data_or_ctrl<pos:position pos:line="215" pos:column="71"/></name><argument_list pos:line="215" pos:column="71">(<argument><expr><name pos:line="215" pos:column="72">i<pos:position pos:line="215" pos:column="73"/></name></expr></argument>)<pos:position pos:line="215" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="215" pos:column="76">rc<pos:position pos:line="215" pos:column="78"/></name></expr></argument>)<pos:position pos:line="215" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="80"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="216" pos:column="15">shutdown<pos:position pos:line="216" pos:column="23"/></name><argument_list pos:line="216" pos:column="23">(<argument><expr><name><name pos:line="216" pos:column="24">serverfd<pos:position pos:line="216" pos:column="32"/></name><index pos:line="216" pos:column="32">[<expr><name pos:line="216" pos:column="33">i<pos:position pos:line="216" pos:column="34"/></name></expr>]<pos:position pos:line="216" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="37">SHUT_RD<pos:position pos:line="216" pos:column="44"/></name></expr></argument>)<pos:position pos:line="216" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="46"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="217" pos:column="15">poll_server_rd<pos:position pos:line="217" pos:column="29"/></name><index pos:line="217" pos:column="29">[<expr><name pos:line="217" pos:column="30">i<pos:position pos:line="217" pos:column="31"/></name></expr>]<pos:position pos:line="217" pos:column="32"/></index></name> <operator pos:line="217" pos:column="33">=<pos:position pos:line="217" pos:column="34"/></operator> <name pos:line="217" pos:column="35">FALSE<pos:position pos:line="217" pos:column="40"/></name></expr>;<pos:position pos:line="217" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="218" pos:column="14"/></block></then>
            <else pos:line="219" pos:column="13">else <block pos:line="219" pos:column="18">{
              <expr_stmt><expr><call><name pos:line="220" pos:column="15">logmsg<pos:position pos:line="220" pos:column="21"/></name><argument_list pos:line="220" pos:column="21">(<argument><expr><literal type="string" pos:line="220" pos:column="22">"[%s] READ %zd bytes from server"<pos:position pos:line="220" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="220" pos:column="57">data_or_ctrl<pos:position pos:line="220" pos:column="69"/></name><argument_list pos:line="220" pos:column="69">(<argument><expr><name pos:line="220" pos:column="70">i<pos:position pos:line="220" pos:column="71"/></name></expr></argument>)<pos:position pos:line="220" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="220" pos:column="74">rc<pos:position pos:line="220" pos:column="76"/></name></expr></argument>)<pos:position pos:line="220" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="78"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="221" pos:column="15">logmsg<pos:position pos:line="221" pos:column="21"/></name><argument_list pos:line="221" pos:column="21">(<argument><expr><literal type="string" pos:line="221" pos:column="22">"[%s] READ \"%s\""<pos:position pos:line="221" pos:column="40"/></literal></expr></argument>, <argument><expr><call><name pos:line="221" pos:column="42">data_or_ctrl<pos:position pos:line="221" pos:column="54"/></name><argument_list pos:line="221" pos:column="54">(<argument><expr><name pos:line="221" pos:column="55">i<pos:position pos:line="221" pos:column="56"/></name></expr></argument>)<pos:position pos:line="221" pos:column="57"/></argument_list></call></expr></argument>,
                     <argument><expr><call><name pos:line="222" pos:column="22">data_to_hex<pos:position pos:line="222" pos:column="33"/></name><argument_list pos:line="222" pos:column="33">(<argument><expr><operator pos:line="222" pos:column="34">&amp;<pos:position pos:line="222" pos:column="39"/></operator><name><name pos:line="222" pos:column="35">readserver<pos:position pos:line="222" pos:column="45"/></name><index pos:line="222" pos:column="45">[<expr><name pos:line="222" pos:column="46">i<pos:position pos:line="222" pos:column="47"/></name></expr>]<pos:position pos:line="222" pos:column="48"/></index><index pos:line="222" pos:column="48">[<expr><name><name pos:line="222" pos:column="49">toc<pos:position pos:line="222" pos:column="52"/></name><index pos:line="222" pos:column="52">[<expr><name pos:line="222" pos:column="53">i<pos:position pos:line="222" pos:column="54"/></name></expr>]<pos:position pos:line="222" pos:column="55"/></index></name></expr>]<pos:position pos:line="222" pos:column="56"/></index></name></expr></argument>, <argument><expr><name pos:line="222" pos:column="58">rc<pos:position pos:line="222" pos:column="60"/></name></expr></argument>)<pos:position pos:line="222" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="222" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="63"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="223" pos:column="15">toc<pos:position pos:line="223" pos:column="18"/></name><index pos:line="223" pos:column="18">[<expr><name pos:line="223" pos:column="19">i<pos:position pos:line="223" pos:column="20"/></name></expr>]<pos:position pos:line="223" pos:column="21"/></index></name> <operator pos:line="223" pos:column="22">+=<pos:position pos:line="223" pos:column="24"/></operator> <name pos:line="223" pos:column="25">rc<pos:position pos:line="223" pos:column="27"/></name></expr>;<pos:position pos:line="223" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="224" pos:column="14"/></block></else></if>
          }<pos:position pos:line="225" pos:column="12"/></block></then></if>
        }<pos:position pos:line="226" pos:column="10"/></block></then></if>
        <if pos:line="227" pos:column="9">if<condition pos:line="227" pos:column="11">(<expr><name><name pos:line="227" pos:column="12">clientfd<pos:position pos:line="227" pos:column="20"/></name><index pos:line="227" pos:column="20">[<expr><name pos:line="227" pos:column="21">i<pos:position pos:line="227" pos:column="22"/></name></expr>]<pos:position pos:line="227" pos:column="23"/></index></name> <operator pos:line="227" pos:column="24">!=<pos:position pos:line="227" pos:column="26"/></operator> <name pos:line="227" pos:column="27">CURL_SOCKET_BAD<pos:position pos:line="227" pos:column="42"/></name></expr>)<pos:position pos:line="227" pos:column="43"/></condition><then pos:line="227" pos:column="43"> <block pos:line="227" pos:column="44">{
          <if pos:line="228" pos:column="11">if<condition pos:line="228" pos:column="13">(<expr><name><name pos:line="228" pos:column="14">toc<pos:position pos:line="228" pos:column="17"/></name><index pos:line="228" pos:column="17">[<expr><name pos:line="228" pos:column="18">i<pos:position pos:line="228" pos:column="19"/></name></expr>]<pos:position pos:line="228" pos:column="20"/></index></name> <operator pos:line="228" pos:column="21">&amp;&amp;<pos:position pos:line="228" pos:column="31"/></operator> <call><name pos:line="228" pos:column="24">FD_ISSET<pos:position pos:line="228" pos:column="32"/></name><argument_list pos:line="228" pos:column="32">(<argument><expr><name><name pos:line="228" pos:column="33">clientfd<pos:position pos:line="228" pos:column="41"/></name><index pos:line="228" pos:column="41">[<expr><name pos:line="228" pos:column="42">i<pos:position pos:line="228" pos:column="43"/></name></expr>]<pos:position pos:line="228" pos:column="44"/></index></name></expr></argument>, <argument><expr><operator pos:line="228" pos:column="46">&amp;<pos:position pos:line="228" pos:column="51"/></operator><name pos:line="228" pos:column="47">output<pos:position pos:line="228" pos:column="53"/></name></expr></argument>)<pos:position pos:line="228" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="228" pos:column="55"/></condition><then pos:line="228" pos:column="55"> <block pos:line="228" pos:column="56">{
            <comment type="block" pos:line="229" pos:column="13">/* write to client */</comment>
            <expr_stmt><expr><name pos:line="230" pos:column="13">rc<pos:position pos:line="230" pos:column="15"/></name> <operator pos:line="230" pos:column="16">=<pos:position pos:line="230" pos:column="17"/></operator> <call><name pos:line="230" pos:column="18">swrite<pos:position pos:line="230" pos:column="24"/></name><argument_list pos:line="230" pos:column="24">(<argument><expr><name><name pos:line="230" pos:column="25">clientfd<pos:position pos:line="230" pos:column="33"/></name><index pos:line="230" pos:column="33">[<expr><name pos:line="230" pos:column="34">i<pos:position pos:line="230" pos:column="35"/></name></expr>]<pos:position pos:line="230" pos:column="36"/></index></name></expr></argument>, <argument><expr><name><name pos:line="230" pos:column="38">readserver<pos:position pos:line="230" pos:column="48"/></name><index pos:line="230" pos:column="48">[<expr><name pos:line="230" pos:column="49">i<pos:position pos:line="230" pos:column="50"/></name></expr>]<pos:position pos:line="230" pos:column="51"/></index></name></expr></argument>, <argument><expr><name><name pos:line="230" pos:column="53">toc<pos:position pos:line="230" pos:column="56"/></name><index pos:line="230" pos:column="56">[<expr><name pos:line="230" pos:column="57">i<pos:position pos:line="230" pos:column="58"/></name></expr>]<pos:position pos:line="230" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="230" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="61"/></expr_stmt>
            <if pos:line="231" pos:column="13">if<condition pos:line="231" pos:column="15">(<expr><name pos:line="231" pos:column="16">rc<pos:position pos:line="231" pos:column="18"/></name> <operator pos:line="231" pos:column="19">&lt;=<pos:position pos:line="231" pos:column="24"/></operator> <literal type="number" pos:line="231" pos:column="22">0<pos:position pos:line="231" pos:column="23"/></literal></expr>)<pos:position pos:line="231" pos:column="24"/></condition><then pos:line="231" pos:column="24"> <block pos:line="231" pos:column="25">{
              <expr_stmt><expr><call><name pos:line="232" pos:column="15">logmsg<pos:position pos:line="232" pos:column="21"/></name><argument_list pos:line="232" pos:column="21">(<argument><expr><literal type="string" pos:line="232" pos:column="22">"[%s] got %zd, STOP WRITING client"<pos:position pos:line="232" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="232" pos:column="59">data_or_ctrl<pos:position pos:line="232" pos:column="71"/></name><argument_list pos:line="232" pos:column="71">(<argument><expr><name pos:line="232" pos:column="72">i<pos:position pos:line="232" pos:column="73"/></name></expr></argument>)<pos:position pos:line="232" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="232" pos:column="76">rc<pos:position pos:line="232" pos:column="78"/></name></expr></argument>)<pos:position pos:line="232" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="80"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="233" pos:column="15">shutdown<pos:position pos:line="233" pos:column="23"/></name><argument_list pos:line="233" pos:column="23">(<argument><expr><name><name pos:line="233" pos:column="24">clientfd<pos:position pos:line="233" pos:column="32"/></name><index pos:line="233" pos:column="32">[<expr><name pos:line="233" pos:column="33">i<pos:position pos:line="233" pos:column="34"/></name></expr>]<pos:position pos:line="233" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="37">SHUT_WR<pos:position pos:line="233" pos:column="44"/></name></expr></argument>)<pos:position pos:line="233" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="46"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="234" pos:column="15">poll_client_wr<pos:position pos:line="234" pos:column="29"/></name><index pos:line="234" pos:column="29">[<expr><name pos:line="234" pos:column="30">i<pos:position pos:line="234" pos:column="31"/></name></expr>]<pos:position pos:line="234" pos:column="32"/></index></name> <operator pos:line="234" pos:column="33">=<pos:position pos:line="234" pos:column="34"/></operator> <name pos:line="234" pos:column="35">FALSE<pos:position pos:line="234" pos:column="40"/></name></expr>;<pos:position pos:line="234" pos:column="41"/></expr_stmt>
              <expr_stmt><expr><name pos:line="235" pos:column="15">tcp_fin_wr<pos:position pos:line="235" pos:column="25"/></name> <operator pos:line="235" pos:column="26">=<pos:position pos:line="235" pos:column="27"/></operator> <name pos:line="235" pos:column="28">TRUE<pos:position pos:line="235" pos:column="32"/></name></expr>;<pos:position pos:line="235" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="236" pos:column="14"/></block></then>
            <else pos:line="237" pos:column="13">else <block pos:line="237" pos:column="18">{
              <expr_stmt><expr><call><name pos:line="238" pos:column="15">logmsg<pos:position pos:line="238" pos:column="21"/></name><argument_list pos:line="238" pos:column="21">(<argument><expr><literal type="string" pos:line="238" pos:column="22">"[%s] SENT %zd bytes to client"<pos:position pos:line="238" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="238" pos:column="55">data_or_ctrl<pos:position pos:line="238" pos:column="67"/></name><argument_list pos:line="238" pos:column="67">(<argument><expr><name pos:line="238" pos:column="68">i<pos:position pos:line="238" pos:column="69"/></name></expr></argument>)<pos:position pos:line="238" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="238" pos:column="72">rc<pos:position pos:line="238" pos:column="74"/></name></expr></argument>)<pos:position pos:line="238" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="76"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="239" pos:column="15">logmsg<pos:position pos:line="239" pos:column="21"/></name><argument_list pos:line="239" pos:column="21">(<argument><expr><literal type="string" pos:line="239" pos:column="22">"[%s] SENT \"%s\""<pos:position pos:line="239" pos:column="40"/></literal></expr></argument>, <argument><expr><call><name pos:line="239" pos:column="42">data_or_ctrl<pos:position pos:line="239" pos:column="54"/></name><argument_list pos:line="239" pos:column="54">(<argument><expr><name pos:line="239" pos:column="55">i<pos:position pos:line="239" pos:column="56"/></name></expr></argument>)<pos:position pos:line="239" pos:column="57"/></argument_list></call></expr></argument>,
                     <argument><expr><call><name pos:line="240" pos:column="22">data_to_hex<pos:position pos:line="240" pos:column="33"/></name><argument_list pos:line="240" pos:column="33">(<argument><expr><name><name pos:line="240" pos:column="34">readserver<pos:position pos:line="240" pos:column="44"/></name><index pos:line="240" pos:column="44">[<expr><name pos:line="240" pos:column="45">i<pos:position pos:line="240" pos:column="46"/></name></expr>]<pos:position pos:line="240" pos:column="47"/></index></name></expr></argument>, <argument><expr><name pos:line="240" pos:column="49">rc<pos:position pos:line="240" pos:column="51"/></name></expr></argument>)<pos:position pos:line="240" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="240" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="54"/></expr_stmt>
              <if pos:line="241" pos:column="15">if<condition pos:line="241" pos:column="17">(<expr><name><name pos:line="241" pos:column="18">toc<pos:position pos:line="241" pos:column="21"/></name><index pos:line="241" pos:column="21">[<expr><name pos:line="241" pos:column="22">i<pos:position pos:line="241" pos:column="23"/></name></expr>]<pos:position pos:line="241" pos:column="24"/></index></name> <operator pos:line="241" pos:column="25">-<pos:position pos:line="241" pos:column="26"/></operator> <name pos:line="241" pos:column="27">rc<pos:position pos:line="241" pos:column="29"/></name></expr>)<pos:position pos:line="241" pos:column="30"/></condition><then pos:line="241" pos:column="30">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="242" pos:column="17">memmove<pos:position pos:line="242" pos:column="24"/></name><argument_list pos:line="242" pos:column="24">(<argument><expr><operator pos:line="242" pos:column="25">&amp;<pos:position pos:line="242" pos:column="30"/></operator><name><name pos:line="242" pos:column="26">readserver<pos:position pos:line="242" pos:column="36"/></name><index pos:line="242" pos:column="36">[<expr><name pos:line="242" pos:column="37">i<pos:position pos:line="242" pos:column="38"/></name></expr>]<pos:position pos:line="242" pos:column="39"/></index><index pos:line="242" pos:column="39">[<expr><literal type="number" pos:line="242" pos:column="40">0<pos:position pos:line="242" pos:column="41"/></literal></expr>]<pos:position pos:line="242" pos:column="42"/></index></name></expr></argument>, <argument><expr><operator pos:line="242" pos:column="44">&amp;<pos:position pos:line="242" pos:column="49"/></operator><name><name pos:line="242" pos:column="45">readserver<pos:position pos:line="242" pos:column="55"/></name><index pos:line="242" pos:column="55">[<expr><name pos:line="242" pos:column="56">i<pos:position pos:line="242" pos:column="57"/></name></expr>]<pos:position pos:line="242" pos:column="58"/></index><index pos:line="242" pos:column="58">[<expr><name pos:line="242" pos:column="59">rc<pos:position pos:line="242" pos:column="61"/></name></expr>]<pos:position pos:line="242" pos:column="62"/></index></name></expr></argument>, <argument><expr><name><name pos:line="242" pos:column="64">toc<pos:position pos:line="242" pos:column="67"/></name><index pos:line="242" pos:column="67">[<expr><name pos:line="242" pos:column="68">i<pos:position pos:line="242" pos:column="69"/></name></expr>]<pos:position pos:line="242" pos:column="70"/></index></name><operator pos:line="242" pos:column="70">-<pos:position pos:line="242" pos:column="71"/></operator><name pos:line="242" pos:column="71">rc<pos:position pos:line="242" pos:column="73"/></name></expr></argument>)<pos:position pos:line="242" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="75"/></expr_stmt></block></then></if>
              <expr_stmt><expr><name><name pos:line="243" pos:column="15">toc<pos:position pos:line="243" pos:column="18"/></name><index pos:line="243" pos:column="18">[<expr><name pos:line="243" pos:column="19">i<pos:position pos:line="243" pos:column="20"/></name></expr>]<pos:position pos:line="243" pos:column="21"/></index></name> <operator pos:line="243" pos:column="22">-=<pos:position pos:line="243" pos:column="24"/></operator> <name pos:line="243" pos:column="25">rc<pos:position pos:line="243" pos:column="27"/></name></expr>;<pos:position pos:line="243" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="244" pos:column="14"/></block></else></if>
          }<pos:position pos:line="245" pos:column="12"/></block></then></if>
        }<pos:position pos:line="246" pos:column="10"/></block></then></if>
        <if pos:line="247" pos:column="9">if<condition pos:line="247" pos:column="11">(<expr><name><name pos:line="247" pos:column="12">serverfd<pos:position pos:line="247" pos:column="20"/></name><index pos:line="247" pos:column="20">[<expr><name pos:line="247" pos:column="21">i<pos:position pos:line="247" pos:column="22"/></name></expr>]<pos:position pos:line="247" pos:column="23"/></index></name> <operator pos:line="247" pos:column="24">!=<pos:position pos:line="247" pos:column="26"/></operator> <name pos:line="247" pos:column="27">CURL_SOCKET_BAD<pos:position pos:line="247" pos:column="42"/></name></expr>)<pos:position pos:line="247" pos:column="43"/></condition><then pos:line="247" pos:column="43"> <block pos:line="247" pos:column="44">{
          <if pos:line="248" pos:column="11">if<condition pos:line="248" pos:column="13">(<expr><name><name pos:line="248" pos:column="14">tos<pos:position pos:line="248" pos:column="17"/></name><index pos:line="248" pos:column="17">[<expr><name pos:line="248" pos:column="18">i<pos:position pos:line="248" pos:column="19"/></name></expr>]<pos:position pos:line="248" pos:column="20"/></index></name> <operator pos:line="248" pos:column="21">&amp;&amp;<pos:position pos:line="248" pos:column="31"/></operator> <call><name pos:line="248" pos:column="24">FD_ISSET<pos:position pos:line="248" pos:column="32"/></name><argument_list pos:line="248" pos:column="32">(<argument><expr><name><name pos:line="248" pos:column="33">serverfd<pos:position pos:line="248" pos:column="41"/></name><index pos:line="248" pos:column="41">[<expr><name pos:line="248" pos:column="42">i<pos:position pos:line="248" pos:column="43"/></name></expr>]<pos:position pos:line="248" pos:column="44"/></index></name></expr></argument>, <argument><expr><operator pos:line="248" pos:column="46">&amp;<pos:position pos:line="248" pos:column="51"/></operator><name pos:line="248" pos:column="47">output<pos:position pos:line="248" pos:column="53"/></name></expr></argument>)<pos:position pos:line="248" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="248" pos:column="55"/></condition><then pos:line="248" pos:column="55"> <block pos:line="248" pos:column="56">{
            <comment type="block" pos:line="249" pos:column="13">/* write to server */</comment>
            <expr_stmt><expr><name pos:line="250" pos:column="13">rc<pos:position pos:line="250" pos:column="15"/></name> <operator pos:line="250" pos:column="16">=<pos:position pos:line="250" pos:column="17"/></operator> <call><name pos:line="250" pos:column="18">swrite<pos:position pos:line="250" pos:column="24"/></name><argument_list pos:line="250" pos:column="24">(<argument><expr><name><name pos:line="250" pos:column="25">serverfd<pos:position pos:line="250" pos:column="33"/></name><index pos:line="250" pos:column="33">[<expr><name pos:line="250" pos:column="34">i<pos:position pos:line="250" pos:column="35"/></name></expr>]<pos:position pos:line="250" pos:column="36"/></index></name></expr></argument>, <argument><expr><name><name pos:line="250" pos:column="38">readclient<pos:position pos:line="250" pos:column="48"/></name><index pos:line="250" pos:column="48">[<expr><name pos:line="250" pos:column="49">i<pos:position pos:line="250" pos:column="50"/></name></expr>]<pos:position pos:line="250" pos:column="51"/></index></name></expr></argument>, <argument><expr><name><name pos:line="250" pos:column="53">tos<pos:position pos:line="250" pos:column="56"/></name><index pos:line="250" pos:column="56">[<expr><name pos:line="250" pos:column="57">i<pos:position pos:line="250" pos:column="58"/></name></expr>]<pos:position pos:line="250" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="250" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="61"/></expr_stmt>
            <if pos:line="251" pos:column="13">if<condition pos:line="251" pos:column="15">(<expr><name pos:line="251" pos:column="16">rc<pos:position pos:line="251" pos:column="18"/></name> <operator pos:line="251" pos:column="19">&lt;=<pos:position pos:line="251" pos:column="24"/></operator> <literal type="number" pos:line="251" pos:column="22">0<pos:position pos:line="251" pos:column="23"/></literal></expr>)<pos:position pos:line="251" pos:column="24"/></condition><then pos:line="251" pos:column="24"> <block pos:line="251" pos:column="25">{
              <expr_stmt><expr><call><name pos:line="252" pos:column="15">logmsg<pos:position pos:line="252" pos:column="21"/></name><argument_list pos:line="252" pos:column="21">(<argument><expr><literal type="string" pos:line="252" pos:column="22">"[%s] got %zd, STOP WRITING server"<pos:position pos:line="252" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="252" pos:column="59">data_or_ctrl<pos:position pos:line="252" pos:column="71"/></name><argument_list pos:line="252" pos:column="71">(<argument><expr><name pos:line="252" pos:column="72">i<pos:position pos:line="252" pos:column="73"/></name></expr></argument>)<pos:position pos:line="252" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="252" pos:column="76">rc<pos:position pos:line="252" pos:column="78"/></name></expr></argument>)<pos:position pos:line="252" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="80"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="253" pos:column="15">shutdown<pos:position pos:line="253" pos:column="23"/></name><argument_list pos:line="253" pos:column="23">(<argument><expr><name><name pos:line="253" pos:column="24">serverfd<pos:position pos:line="253" pos:column="32"/></name><index pos:line="253" pos:column="32">[<expr><name pos:line="253" pos:column="33">i<pos:position pos:line="253" pos:column="34"/></name></expr>]<pos:position pos:line="253" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="37">SHUT_WR<pos:position pos:line="253" pos:column="44"/></name></expr></argument>)<pos:position pos:line="253" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="46"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="254" pos:column="15">poll_server_wr<pos:position pos:line="254" pos:column="29"/></name><index pos:line="254" pos:column="29">[<expr><name pos:line="254" pos:column="30">i<pos:position pos:line="254" pos:column="31"/></name></expr>]<pos:position pos:line="254" pos:column="32"/></index></name> <operator pos:line="254" pos:column="33">=<pos:position pos:line="254" pos:column="34"/></operator> <name pos:line="254" pos:column="35">FALSE<pos:position pos:line="254" pos:column="40"/></name></expr>;<pos:position pos:line="254" pos:column="41"/></expr_stmt>
              <expr_stmt><expr><name pos:line="255" pos:column="15">tcp_fin_wr<pos:position pos:line="255" pos:column="25"/></name> <operator pos:line="255" pos:column="26">=<pos:position pos:line="255" pos:column="27"/></operator> <name pos:line="255" pos:column="28">TRUE<pos:position pos:line="255" pos:column="32"/></name></expr>;<pos:position pos:line="255" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="256" pos:column="14"/></block></then>
            <else pos:line="257" pos:column="13">else <block pos:line="257" pos:column="18">{
              <expr_stmt><expr><call><name pos:line="258" pos:column="15">logmsg<pos:position pos:line="258" pos:column="21"/></name><argument_list pos:line="258" pos:column="21">(<argument><expr><literal type="string" pos:line="258" pos:column="22">"[%s] SENT %zd bytes to server"<pos:position pos:line="258" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="258" pos:column="55">data_or_ctrl<pos:position pos:line="258" pos:column="67"/></name><argument_list pos:line="258" pos:column="67">(<argument><expr><name pos:line="258" pos:column="68">i<pos:position pos:line="258" pos:column="69"/></name></expr></argument>)<pos:position pos:line="258" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="258" pos:column="72">rc<pos:position pos:line="258" pos:column="74"/></name></expr></argument>)<pos:position pos:line="258" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="76"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="259" pos:column="15">logmsg<pos:position pos:line="259" pos:column="21"/></name><argument_list pos:line="259" pos:column="21">(<argument><expr><literal type="string" pos:line="259" pos:column="22">"[%s] SENT \"%s\""<pos:position pos:line="259" pos:column="40"/></literal></expr></argument>, <argument><expr><call><name pos:line="259" pos:column="42">data_or_ctrl<pos:position pos:line="259" pos:column="54"/></name><argument_list pos:line="259" pos:column="54">(<argument><expr><name pos:line="259" pos:column="55">i<pos:position pos:line="259" pos:column="56"/></name></expr></argument>)<pos:position pos:line="259" pos:column="57"/></argument_list></call></expr></argument>,
                     <argument><expr><call><name pos:line="260" pos:column="22">data_to_hex<pos:position pos:line="260" pos:column="33"/></name><argument_list pos:line="260" pos:column="33">(<argument><expr><name><name pos:line="260" pos:column="34">readclient<pos:position pos:line="260" pos:column="44"/></name><index pos:line="260" pos:column="44">[<expr><name pos:line="260" pos:column="45">i<pos:position pos:line="260" pos:column="46"/></name></expr>]<pos:position pos:line="260" pos:column="47"/></index></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="49">rc<pos:position pos:line="260" pos:column="51"/></name></expr></argument>)<pos:position pos:line="260" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="260" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="54"/></expr_stmt>
              <if pos:line="261" pos:column="15">if<condition pos:line="261" pos:column="17">(<expr><name><name pos:line="261" pos:column="18">tos<pos:position pos:line="261" pos:column="21"/></name><index pos:line="261" pos:column="21">[<expr><name pos:line="261" pos:column="22">i<pos:position pos:line="261" pos:column="23"/></name></expr>]<pos:position pos:line="261" pos:column="24"/></index></name> <operator pos:line="261" pos:column="25">-<pos:position pos:line="261" pos:column="26"/></operator> <name pos:line="261" pos:column="27">rc<pos:position pos:line="261" pos:column="29"/></name></expr>)<pos:position pos:line="261" pos:column="30"/></condition><then pos:line="261" pos:column="30">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="262" pos:column="17">memmove<pos:position pos:line="262" pos:column="24"/></name><argument_list pos:line="262" pos:column="24">(<argument><expr><operator pos:line="262" pos:column="25">&amp;<pos:position pos:line="262" pos:column="30"/></operator><name><name pos:line="262" pos:column="26">readclient<pos:position pos:line="262" pos:column="36"/></name><index pos:line="262" pos:column="36">[<expr><name pos:line="262" pos:column="37">i<pos:position pos:line="262" pos:column="38"/></name></expr>]<pos:position pos:line="262" pos:column="39"/></index><index pos:line="262" pos:column="39">[<expr><literal type="number" pos:line="262" pos:column="40">0<pos:position pos:line="262" pos:column="41"/></literal></expr>]<pos:position pos:line="262" pos:column="42"/></index></name></expr></argument>, <argument><expr><operator pos:line="262" pos:column="44">&amp;<pos:position pos:line="262" pos:column="49"/></operator><name><name pos:line="262" pos:column="45">readclient<pos:position pos:line="262" pos:column="55"/></name><index pos:line="262" pos:column="55">[<expr><name pos:line="262" pos:column="56">i<pos:position pos:line="262" pos:column="57"/></name></expr>]<pos:position pos:line="262" pos:column="58"/></index><index pos:line="262" pos:column="58">[<expr><name pos:line="262" pos:column="59">rc<pos:position pos:line="262" pos:column="61"/></name></expr>]<pos:position pos:line="262" pos:column="62"/></index></name></expr></argument>, <argument><expr><name><name pos:line="262" pos:column="64">tos<pos:position pos:line="262" pos:column="67"/></name><index pos:line="262" pos:column="67">[<expr><name pos:line="262" pos:column="68">i<pos:position pos:line="262" pos:column="69"/></name></expr>]<pos:position pos:line="262" pos:column="70"/></index></name><operator pos:line="262" pos:column="70">-<pos:position pos:line="262" pos:column="71"/></operator><name pos:line="262" pos:column="71">rc<pos:position pos:line="262" pos:column="73"/></name></expr></argument>)<pos:position pos:line="262" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="75"/></expr_stmt></block></then></if>
              <expr_stmt><expr><name><name pos:line="263" pos:column="15">tos<pos:position pos:line="263" pos:column="18"/></name><index pos:line="263" pos:column="18">[<expr><name pos:line="263" pos:column="19">i<pos:position pos:line="263" pos:column="20"/></name></expr>]<pos:position pos:line="263" pos:column="21"/></index></name> <operator pos:line="263" pos:column="22">-=<pos:position pos:line="263" pos:column="24"/></operator> <name pos:line="263" pos:column="25">rc<pos:position pos:line="263" pos:column="27"/></name></expr>;<pos:position pos:line="263" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="264" pos:column="14"/></block></else></if>
          }<pos:position pos:line="265" pos:column="12"/></block></then></if>
        }<pos:position pos:line="266" pos:column="10"/></block></then></if>
      }<pos:position pos:line="267" pos:column="8"/></block></for>
      <if pos:line="268" pos:column="7">if<condition pos:line="268" pos:column="9">(<expr><name pos:line="268" pos:column="10">got_exit_signal<pos:position pos:line="268" pos:column="25"/></name></expr>)<pos:position pos:line="268" pos:column="26"/></condition><then pos:line="268" pos:column="26">
        <block type="pseudo"><break pos:line="269" pos:column="9">break;<pos:position pos:line="269" pos:column="15"/></break></block></then></if>

      <comment type="block" pos:line="271" pos:column="7">/* ---------------------------------------------------------- */</comment>

      <comment type="block" pos:line="273" pos:column="7">/* endpoint read/write disabling, endpoint closing and tunnel teardown */</comment>
      <for pos:line="274" pos:column="7">for<control pos:line="274" pos:column="10">(<init><expr><name pos:line="274" pos:column="11">i<pos:position pos:line="274" pos:column="12"/></name> <operator pos:line="274" pos:column="13">=<pos:position pos:line="274" pos:column="14"/></operator> <literal type="number" pos:line="274" pos:column="15">0<pos:position pos:line="274" pos:column="16"/></literal></expr>;<pos:position pos:line="274" pos:column="17"/></init> <condition><expr><name pos:line="274" pos:column="18">i<pos:position pos:line="274" pos:column="19"/></name> <operator pos:line="274" pos:column="20">&lt;=<pos:position pos:line="274" pos:column="25"/></operator> <name pos:line="274" pos:column="23">max_tunnel_idx<pos:position pos:line="274" pos:column="37"/></name></expr>;<pos:position pos:line="274" pos:column="38"/></condition> <incr><expr><name pos:line="274" pos:column="39">i<pos:position pos:line="274" pos:column="40"/></name><operator pos:line="274" pos:column="40">++<pos:position pos:line="274" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="274" pos:column="43"/></control> <block pos:line="274" pos:column="44">{
        <for pos:line="275" pos:column="9">for<control pos:line="275" pos:column="12">(<init><expr><name pos:line="275" pos:column="13">loop<pos:position pos:line="275" pos:column="17"/></name> <operator pos:line="275" pos:column="18">=<pos:position pos:line="275" pos:column="19"/></operator> <literal type="number" pos:line="275" pos:column="20">2<pos:position pos:line="275" pos:column="21"/></literal></expr>;<pos:position pos:line="275" pos:column="22"/></init> <condition><expr><name pos:line="275" pos:column="23">loop<pos:position pos:line="275" pos:column="27"/></name> <operator pos:line="275" pos:column="28">&gt;<pos:position pos:line="275" pos:column="32"/></operator> <literal type="number" pos:line="275" pos:column="30">0<pos:position pos:line="275" pos:column="31"/></literal></expr>;<pos:position pos:line="275" pos:column="32"/></condition> <incr><expr><name pos:line="275" pos:column="33">loop<pos:position pos:line="275" pos:column="37"/></name><operator pos:line="275" pos:column="37">--<pos:position pos:line="275" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="275" pos:column="40"/></control> <block pos:line="275" pos:column="41">{
          <comment type="block" pos:line="276" pos:column="11">/* loop twice to satisfy condition interdependencies without
             having to await select timeout or another socket event */</comment>
          <if pos:line="278" pos:column="11">if<condition pos:line="278" pos:column="13">(<expr><name><name pos:line="278" pos:column="14">clientfd<pos:position pos:line="278" pos:column="22"/></name><index pos:line="278" pos:column="22">[<expr><name pos:line="278" pos:column="23">i<pos:position pos:line="278" pos:column="24"/></name></expr>]<pos:position pos:line="278" pos:column="25"/></index></name> <operator pos:line="278" pos:column="26">!=<pos:position pos:line="278" pos:column="28"/></operator> <name pos:line="278" pos:column="29">CURL_SOCKET_BAD<pos:position pos:line="278" pos:column="44"/></name></expr>)<pos:position pos:line="278" pos:column="45"/></condition><then pos:line="278" pos:column="45"> <block pos:line="278" pos:column="46">{
            <if pos:line="279" pos:column="13">if<condition pos:line="279" pos:column="15">(<expr><name><name pos:line="279" pos:column="16">poll_client_rd<pos:position pos:line="279" pos:column="30"/></name><index pos:line="279" pos:column="30">[<expr><name pos:line="279" pos:column="31">i<pos:position pos:line="279" pos:column="32"/></name></expr>]<pos:position pos:line="279" pos:column="33"/></index></name> <operator pos:line="279" pos:column="34">&amp;&amp;<pos:position pos:line="279" pos:column="44"/></operator> <operator pos:line="279" pos:column="37">!<pos:position pos:line="279" pos:column="38"/></operator><name><name pos:line="279" pos:column="38">poll_server_wr<pos:position pos:line="279" pos:column="52"/></name><index pos:line="279" pos:column="52">[<expr><name pos:line="279" pos:column="53">i<pos:position pos:line="279" pos:column="54"/></name></expr>]<pos:position pos:line="279" pos:column="55"/></index></name></expr>)<pos:position pos:line="279" pos:column="56"/></condition><then pos:line="279" pos:column="56"> <block pos:line="279" pos:column="57">{
              <expr_stmt><expr><call><name pos:line="280" pos:column="15">logmsg<pos:position pos:line="280" pos:column="21"/></name><argument_list pos:line="280" pos:column="21">(<argument><expr><literal type="string" pos:line="280" pos:column="22">"[%s] DISABLED READING client"<pos:position pos:line="280" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="280" pos:column="54">data_or_ctrl<pos:position pos:line="280" pos:column="66"/></name><argument_list pos:line="280" pos:column="66">(<argument><expr><name pos:line="280" pos:column="67">i<pos:position pos:line="280" pos:column="68"/></name></expr></argument>)<pos:position pos:line="280" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="280" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="71"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="281" pos:column="15">shutdown<pos:position pos:line="281" pos:column="23"/></name><argument_list pos:line="281" pos:column="23">(<argument><expr><name><name pos:line="281" pos:column="24">clientfd<pos:position pos:line="281" pos:column="32"/></name><index pos:line="281" pos:column="32">[<expr><name pos:line="281" pos:column="33">i<pos:position pos:line="281" pos:column="34"/></name></expr>]<pos:position pos:line="281" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="281" pos:column="37">SHUT_RD<pos:position pos:line="281" pos:column="44"/></name></expr></argument>)<pos:position pos:line="281" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="46"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="282" pos:column="15">poll_client_rd<pos:position pos:line="282" pos:column="29"/></name><index pos:line="282" pos:column="29">[<expr><name pos:line="282" pos:column="30">i<pos:position pos:line="282" pos:column="31"/></name></expr>]<pos:position pos:line="282" pos:column="32"/></index></name> <operator pos:line="282" pos:column="33">=<pos:position pos:line="282" pos:column="34"/></operator> <name pos:line="282" pos:column="35">FALSE<pos:position pos:line="282" pos:column="40"/></name></expr>;<pos:position pos:line="282" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="283" pos:column="14"/></block></then></if>
            <if pos:line="284" pos:column="13">if<condition pos:line="284" pos:column="15">(<expr><name><name pos:line="284" pos:column="16">poll_client_wr<pos:position pos:line="284" pos:column="30"/></name><index pos:line="284" pos:column="30">[<expr><name pos:line="284" pos:column="31">i<pos:position pos:line="284" pos:column="32"/></name></expr>]<pos:position pos:line="284" pos:column="33"/></index></name> <operator pos:line="284" pos:column="34">&amp;&amp;<pos:position pos:line="284" pos:column="44"/></operator> <operator pos:line="284" pos:column="37">!<pos:position pos:line="284" pos:column="38"/></operator><name><name pos:line="284" pos:column="38">poll_server_rd<pos:position pos:line="284" pos:column="52"/></name><index pos:line="284" pos:column="52">[<expr><name pos:line="284" pos:column="53">i<pos:position pos:line="284" pos:column="54"/></name></expr>]<pos:position pos:line="284" pos:column="55"/></index></name> <operator pos:line="284" pos:column="56">&amp;&amp;<pos:position pos:line="284" pos:column="66"/></operator> <operator pos:line="284" pos:column="59">!<pos:position pos:line="284" pos:column="60"/></operator><name><name pos:line="284" pos:column="60">toc<pos:position pos:line="284" pos:column="63"/></name><index pos:line="284" pos:column="63">[<expr><name pos:line="284" pos:column="64">i<pos:position pos:line="284" pos:column="65"/></name></expr>]<pos:position pos:line="284" pos:column="66"/></index></name></expr>)<pos:position pos:line="284" pos:column="67"/></condition><then pos:line="284" pos:column="67"> <block pos:line="284" pos:column="68">{
              <expr_stmt><expr><call><name pos:line="285" pos:column="15">logmsg<pos:position pos:line="285" pos:column="21"/></name><argument_list pos:line="285" pos:column="21">(<argument><expr><literal type="string" pos:line="285" pos:column="22">"[%s] DISABLED WRITING client"<pos:position pos:line="285" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="285" pos:column="54">data_or_ctrl<pos:position pos:line="285" pos:column="66"/></name><argument_list pos:line="285" pos:column="66">(<argument><expr><name pos:line="285" pos:column="67">i<pos:position pos:line="285" pos:column="68"/></name></expr></argument>)<pos:position pos:line="285" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="285" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="71"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="286" pos:column="15">shutdown<pos:position pos:line="286" pos:column="23"/></name><argument_list pos:line="286" pos:column="23">(<argument><expr><name><name pos:line="286" pos:column="24">clientfd<pos:position pos:line="286" pos:column="32"/></name><index pos:line="286" pos:column="32">[<expr><name pos:line="286" pos:column="33">i<pos:position pos:line="286" pos:column="34"/></name></expr>]<pos:position pos:line="286" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="286" pos:column="37">SHUT_WR<pos:position pos:line="286" pos:column="44"/></name></expr></argument>)<pos:position pos:line="286" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="46"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="287" pos:column="15">poll_client_wr<pos:position pos:line="287" pos:column="29"/></name><index pos:line="287" pos:column="29">[<expr><name pos:line="287" pos:column="30">i<pos:position pos:line="287" pos:column="31"/></name></expr>]<pos:position pos:line="287" pos:column="32"/></index></name> <operator pos:line="287" pos:column="33">=<pos:position pos:line="287" pos:column="34"/></operator> <name pos:line="287" pos:column="35">FALSE<pos:position pos:line="287" pos:column="40"/></name></expr>;<pos:position pos:line="287" pos:column="41"/></expr_stmt>
              <expr_stmt><expr><name pos:line="288" pos:column="15">tcp_fin_wr<pos:position pos:line="288" pos:column="25"/></name> <operator pos:line="288" pos:column="26">=<pos:position pos:line="288" pos:column="27"/></operator> <name pos:line="288" pos:column="28">TRUE<pos:position pos:line="288" pos:column="32"/></name></expr>;<pos:position pos:line="288" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="289" pos:column="14"/></block></then></if>
          }<pos:position pos:line="290" pos:column="12"/></block></then></if>
          <if pos:line="291" pos:column="11">if<condition pos:line="291" pos:column="13">(<expr><name><name pos:line="291" pos:column="14">serverfd<pos:position pos:line="291" pos:column="22"/></name><index pos:line="291" pos:column="22">[<expr><name pos:line="291" pos:column="23">i<pos:position pos:line="291" pos:column="24"/></name></expr>]<pos:position pos:line="291" pos:column="25"/></index></name> <operator pos:line="291" pos:column="26">!=<pos:position pos:line="291" pos:column="28"/></operator> <name pos:line="291" pos:column="29">CURL_SOCKET_BAD<pos:position pos:line="291" pos:column="44"/></name></expr>)<pos:position pos:line="291" pos:column="45"/></condition><then pos:line="291" pos:column="45"> <block pos:line="291" pos:column="46">{
            <if pos:line="292" pos:column="13">if<condition pos:line="292" pos:column="15">(<expr><name><name pos:line="292" pos:column="16">poll_server_rd<pos:position pos:line="292" pos:column="30"/></name><index pos:line="292" pos:column="30">[<expr><name pos:line="292" pos:column="31">i<pos:position pos:line="292" pos:column="32"/></name></expr>]<pos:position pos:line="292" pos:column="33"/></index></name> <operator pos:line="292" pos:column="34">&amp;&amp;<pos:position pos:line="292" pos:column="44"/></operator> <operator pos:line="292" pos:column="37">!<pos:position pos:line="292" pos:column="38"/></operator><name><name pos:line="292" pos:column="38">poll_client_wr<pos:position pos:line="292" pos:column="52"/></name><index pos:line="292" pos:column="52">[<expr><name pos:line="292" pos:column="53">i<pos:position pos:line="292" pos:column="54"/></name></expr>]<pos:position pos:line="292" pos:column="55"/></index></name></expr>)<pos:position pos:line="292" pos:column="56"/></condition><then pos:line="292" pos:column="56"> <block pos:line="292" pos:column="57">{
              <expr_stmt><expr><call><name pos:line="293" pos:column="15">logmsg<pos:position pos:line="293" pos:column="21"/></name><argument_list pos:line="293" pos:column="21">(<argument><expr><literal type="string" pos:line="293" pos:column="22">"[%s] DISABLED READING server"<pos:position pos:line="293" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="293" pos:column="54">data_or_ctrl<pos:position pos:line="293" pos:column="66"/></name><argument_list pos:line="293" pos:column="66">(<argument><expr><name pos:line="293" pos:column="67">i<pos:position pos:line="293" pos:column="68"/></name></expr></argument>)<pos:position pos:line="293" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="293" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="71"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="294" pos:column="15">shutdown<pos:position pos:line="294" pos:column="23"/></name><argument_list pos:line="294" pos:column="23">(<argument><expr><name><name pos:line="294" pos:column="24">serverfd<pos:position pos:line="294" pos:column="32"/></name><index pos:line="294" pos:column="32">[<expr><name pos:line="294" pos:column="33">i<pos:position pos:line="294" pos:column="34"/></name></expr>]<pos:position pos:line="294" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="37">SHUT_RD<pos:position pos:line="294" pos:column="44"/></name></expr></argument>)<pos:position pos:line="294" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="46"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="295" pos:column="15">poll_server_rd<pos:position pos:line="295" pos:column="29"/></name><index pos:line="295" pos:column="29">[<expr><name pos:line="295" pos:column="30">i<pos:position pos:line="295" pos:column="31"/></name></expr>]<pos:position pos:line="295" pos:column="32"/></index></name> <operator pos:line="295" pos:column="33">=<pos:position pos:line="295" pos:column="34"/></operator> <name pos:line="295" pos:column="35">FALSE<pos:position pos:line="295" pos:column="40"/></name></expr>;<pos:position pos:line="295" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="296" pos:column="14"/></block></then></if>
            <if pos:line="297" pos:column="13">if<condition pos:line="297" pos:column="15">(<expr><name><name pos:line="297" pos:column="16">poll_server_wr<pos:position pos:line="297" pos:column="30"/></name><index pos:line="297" pos:column="30">[<expr><name pos:line="297" pos:column="31">i<pos:position pos:line="297" pos:column="32"/></name></expr>]<pos:position pos:line="297" pos:column="33"/></index></name> <operator pos:line="297" pos:column="34">&amp;&amp;<pos:position pos:line="297" pos:column="44"/></operator> <operator pos:line="297" pos:column="37">!<pos:position pos:line="297" pos:column="38"/></operator><name><name pos:line="297" pos:column="38">poll_client_rd<pos:position pos:line="297" pos:column="52"/></name><index pos:line="297" pos:column="52">[<expr><name pos:line="297" pos:column="53">i<pos:position pos:line="297" pos:column="54"/></name></expr>]<pos:position pos:line="297" pos:column="55"/></index></name> <operator pos:line="297" pos:column="56">&amp;&amp;<pos:position pos:line="297" pos:column="66"/></operator> <operator pos:line="297" pos:column="59">!<pos:position pos:line="297" pos:column="60"/></operator><name><name pos:line="297" pos:column="60">tos<pos:position pos:line="297" pos:column="63"/></name><index pos:line="297" pos:column="63">[<expr><name pos:line="297" pos:column="64">i<pos:position pos:line="297" pos:column="65"/></name></expr>]<pos:position pos:line="297" pos:column="66"/></index></name></expr>)<pos:position pos:line="297" pos:column="67"/></condition><then pos:line="297" pos:column="67"> <block pos:line="297" pos:column="68">{
              <expr_stmt><expr><call><name pos:line="298" pos:column="15">logmsg<pos:position pos:line="298" pos:column="21"/></name><argument_list pos:line="298" pos:column="21">(<argument><expr><literal type="string" pos:line="298" pos:column="22">"[%s] DISABLED WRITING server"<pos:position pos:line="298" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="298" pos:column="54">data_or_ctrl<pos:position pos:line="298" pos:column="66"/></name><argument_list pos:line="298" pos:column="66">(<argument><expr><name pos:line="298" pos:column="67">i<pos:position pos:line="298" pos:column="68"/></name></expr></argument>)<pos:position pos:line="298" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="298" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="71"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="299" pos:column="15">shutdown<pos:position pos:line="299" pos:column="23"/></name><argument_list pos:line="299" pos:column="23">(<argument><expr><name><name pos:line="299" pos:column="24">serverfd<pos:position pos:line="299" pos:column="32"/></name><index pos:line="299" pos:column="32">[<expr><name pos:line="299" pos:column="33">i<pos:position pos:line="299" pos:column="34"/></name></expr>]<pos:position pos:line="299" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="299" pos:column="37">SHUT_WR<pos:position pos:line="299" pos:column="44"/></name></expr></argument>)<pos:position pos:line="299" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="46"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="300" pos:column="15">poll_server_wr<pos:position pos:line="300" pos:column="29"/></name><index pos:line="300" pos:column="29">[<expr><name pos:line="300" pos:column="30">i<pos:position pos:line="300" pos:column="31"/></name></expr>]<pos:position pos:line="300" pos:column="32"/></index></name> <operator pos:line="300" pos:column="33">=<pos:position pos:line="300" pos:column="34"/></operator> <name pos:line="300" pos:column="35">FALSE<pos:position pos:line="300" pos:column="40"/></name></expr>;<pos:position pos:line="300" pos:column="41"/></expr_stmt>
              <expr_stmt><expr><name pos:line="301" pos:column="15">tcp_fin_wr<pos:position pos:line="301" pos:column="25"/></name> <operator pos:line="301" pos:column="26">=<pos:position pos:line="301" pos:column="27"/></operator> <name pos:line="301" pos:column="28">TRUE<pos:position pos:line="301" pos:column="32"/></name></expr>;<pos:position pos:line="301" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="302" pos:column="14"/></block></then></if>
          }<pos:position pos:line="303" pos:column="12"/></block></then></if>
        }<pos:position pos:line="304" pos:column="10"/></block></for>
      }<pos:position pos:line="305" pos:column="8"/></block></for>

      <if pos:line="307" pos:column="7">if<condition pos:line="307" pos:column="9">(<expr><name pos:line="307" pos:column="10">tcp_fin_wr<pos:position pos:line="307" pos:column="20"/></name></expr>)<pos:position pos:line="307" pos:column="21"/></condition><then pos:line="307" pos:column="21">
        <comment type="block" pos:line="308" pos:column="9">/* allow kernel to place FIN bit packet on the wire */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="309" pos:column="9">wait_ms<pos:position pos:line="309" pos:column="16"/></name><argument_list pos:line="309" pos:column="16">(<argument><expr><literal type="number" pos:line="309" pos:column="17">250<pos:position pos:line="309" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="309" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="22"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="311" pos:column="7">/* socket clearing */</comment>
      <for pos:line="312" pos:column="7">for<control pos:line="312" pos:column="10">(<init><expr><name pos:line="312" pos:column="11">i<pos:position pos:line="312" pos:column="12"/></name> <operator pos:line="312" pos:column="13">=<pos:position pos:line="312" pos:column="14"/></operator> <literal type="number" pos:line="312" pos:column="15">0<pos:position pos:line="312" pos:column="16"/></literal></expr>;<pos:position pos:line="312" pos:column="17"/></init> <condition><expr><name pos:line="312" pos:column="18">i<pos:position pos:line="312" pos:column="19"/></name> <operator pos:line="312" pos:column="20">&lt;=<pos:position pos:line="312" pos:column="25"/></operator> <name pos:line="312" pos:column="23">max_tunnel_idx<pos:position pos:line="312" pos:column="37"/></name></expr>;<pos:position pos:line="312" pos:column="38"/></condition> <incr><expr><name pos:line="312" pos:column="39">i<pos:position pos:line="312" pos:column="40"/></name><operator pos:line="312" pos:column="40">++<pos:position pos:line="312" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="312" pos:column="43"/></control> <block pos:line="312" pos:column="44">{
        <for pos:line="313" pos:column="9">for<control pos:line="313" pos:column="12">(<init><expr><name pos:line="313" pos:column="13">loop<pos:position pos:line="313" pos:column="17"/></name> <operator pos:line="313" pos:column="18">=<pos:position pos:line="313" pos:column="19"/></operator> <literal type="number" pos:line="313" pos:column="20">2<pos:position pos:line="313" pos:column="21"/></literal></expr>;<pos:position pos:line="313" pos:column="22"/></init> <condition><expr><name pos:line="313" pos:column="23">loop<pos:position pos:line="313" pos:column="27"/></name> <operator pos:line="313" pos:column="28">&gt;<pos:position pos:line="313" pos:column="32"/></operator> <literal type="number" pos:line="313" pos:column="30">0<pos:position pos:line="313" pos:column="31"/></literal></expr>;<pos:position pos:line="313" pos:column="32"/></condition> <incr><expr><name pos:line="313" pos:column="33">loop<pos:position pos:line="313" pos:column="37"/></name><operator pos:line="313" pos:column="37">--<pos:position pos:line="313" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="313" pos:column="40"/></control> <block pos:line="313" pos:column="41">{
          <if pos:line="314" pos:column="11">if<condition pos:line="314" pos:column="13">(<expr><name><name pos:line="314" pos:column="14">clientfd<pos:position pos:line="314" pos:column="22"/></name><index pos:line="314" pos:column="22">[<expr><name pos:line="314" pos:column="23">i<pos:position pos:line="314" pos:column="24"/></name></expr>]<pos:position pos:line="314" pos:column="25"/></index></name> <operator pos:line="314" pos:column="26">!=<pos:position pos:line="314" pos:column="28"/></operator> <name pos:line="314" pos:column="29">CURL_SOCKET_BAD<pos:position pos:line="314" pos:column="44"/></name></expr>)<pos:position pos:line="314" pos:column="45"/></condition><then pos:line="314" pos:column="45"> <block pos:line="314" pos:column="46">{
            <if pos:line="315" pos:column="13">if<condition pos:line="315" pos:column="15">(<expr><operator pos:line="315" pos:column="16">!<pos:position pos:line="315" pos:column="17"/></operator><name><name pos:line="315" pos:column="17">poll_client_wr<pos:position pos:line="315" pos:column="31"/></name><index pos:line="315" pos:column="31">[<expr><name pos:line="315" pos:column="32">i<pos:position pos:line="315" pos:column="33"/></name></expr>]<pos:position pos:line="315" pos:column="34"/></index></name> <operator pos:line="315" pos:column="35">&amp;&amp;<pos:position pos:line="315" pos:column="45"/></operator> <operator pos:line="315" pos:column="38">!<pos:position pos:line="315" pos:column="39"/></operator><name><name pos:line="315" pos:column="39">poll_client_rd<pos:position pos:line="315" pos:column="53"/></name><index pos:line="315" pos:column="53">[<expr><name pos:line="315" pos:column="54">i<pos:position pos:line="315" pos:column="55"/></name></expr>]<pos:position pos:line="315" pos:column="56"/></index></name></expr>)<pos:position pos:line="315" pos:column="57"/></condition><then pos:line="315" pos:column="57"> <block pos:line="315" pos:column="58">{
              <expr_stmt><expr><call><name pos:line="316" pos:column="15">logmsg<pos:position pos:line="316" pos:column="21"/></name><argument_list pos:line="316" pos:column="21">(<argument><expr><literal type="string" pos:line="316" pos:column="22">"[%s] CLOSING client socket"<pos:position pos:line="316" pos:column="50"/></literal></expr></argument>, <argument><expr><call><name pos:line="316" pos:column="52">data_or_ctrl<pos:position pos:line="316" pos:column="64"/></name><argument_list pos:line="316" pos:column="64">(<argument><expr><name pos:line="316" pos:column="65">i<pos:position pos:line="316" pos:column="66"/></name></expr></argument>)<pos:position pos:line="316" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="316" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="69"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="317" pos:column="15">sclose<pos:position pos:line="317" pos:column="21"/></name><argument_list pos:line="317" pos:column="21">(<argument><expr><name><name pos:line="317" pos:column="22">clientfd<pos:position pos:line="317" pos:column="30"/></name><index pos:line="317" pos:column="30">[<expr><name pos:line="317" pos:column="31">i<pos:position pos:line="317" pos:column="32"/></name></expr>]<pos:position pos:line="317" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="317" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="35"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="318" pos:column="15">clientfd<pos:position pos:line="318" pos:column="23"/></name><index pos:line="318" pos:column="23">[<expr><name pos:line="318" pos:column="24">i<pos:position pos:line="318" pos:column="25"/></name></expr>]<pos:position pos:line="318" pos:column="26"/></index></name> <operator pos:line="318" pos:column="27">=<pos:position pos:line="318" pos:column="28"/></operator> <name pos:line="318" pos:column="29">CURL_SOCKET_BAD<pos:position pos:line="318" pos:column="44"/></name></expr>;<pos:position pos:line="318" pos:column="45"/></expr_stmt>
              <if pos:line="319" pos:column="15">if<condition pos:line="319" pos:column="17">(<expr><name><name pos:line="319" pos:column="18">serverfd<pos:position pos:line="319" pos:column="26"/></name><index pos:line="319" pos:column="26">[<expr><name pos:line="319" pos:column="27">i<pos:position pos:line="319" pos:column="28"/></name></expr>]<pos:position pos:line="319" pos:column="29"/></index></name> <operator pos:line="319" pos:column="30">==<pos:position pos:line="319" pos:column="32"/></operator> <name pos:line="319" pos:column="33">CURL_SOCKET_BAD<pos:position pos:line="319" pos:column="48"/></name></expr>)<pos:position pos:line="319" pos:column="49"/></condition><then pos:line="319" pos:column="49"> <block pos:line="319" pos:column="50">{
                <expr_stmt><expr><call><name pos:line="320" pos:column="17">logmsg<pos:position pos:line="320" pos:column="23"/></name><argument_list pos:line="320" pos:column="23">(<argument><expr><literal type="string" pos:line="320" pos:column="24">"[%s] ENDING"<pos:position pos:line="320" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="320" pos:column="39">data_or_ctrl<pos:position pos:line="320" pos:column="51"/></name><argument_list pos:line="320" pos:column="51">(<argument><expr><name pos:line="320" pos:column="52">i<pos:position pos:line="320" pos:column="53"/></name></expr></argument>)<pos:position pos:line="320" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="320" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="56"/></expr_stmt>
                <if pos:line="321" pos:column="17">if<condition pos:line="321" pos:column="19">(<expr><name pos:line="321" pos:column="20">i<pos:position pos:line="321" pos:column="21"/></name> <operator pos:line="321" pos:column="22">==<pos:position pos:line="321" pos:column="24"/></operator> <name pos:line="321" pos:column="25">DATA<pos:position pos:line="321" pos:column="29"/></name></expr>)<pos:position pos:line="321" pos:column="30"/></condition><then pos:line="321" pos:column="30">
                  <block type="pseudo"><expr_stmt><expr><name pos:line="322" pos:column="19">secondary<pos:position pos:line="322" pos:column="28"/></name> <operator pos:line="322" pos:column="29">=<pos:position pos:line="322" pos:column="30"/></operator> <name pos:line="322" pos:column="31">FALSE<pos:position pos:line="322" pos:column="36"/></name></expr>;<pos:position pos:line="322" pos:column="37"/></expr_stmt></block></then>
                <else pos:line="323" pos:column="17">else
                  <block type="pseudo"><expr_stmt><expr><name pos:line="324" pos:column="19">primary<pos:position pos:line="324" pos:column="26"/></name> <operator pos:line="324" pos:column="27">=<pos:position pos:line="324" pos:column="28"/></operator> <name pos:line="324" pos:column="29">FALSE<pos:position pos:line="324" pos:column="34"/></name></expr>;<pos:position pos:line="324" pos:column="35"/></expr_stmt></block></else></if>
              }<pos:position pos:line="325" pos:column="16"/></block></then></if>
            }<pos:position pos:line="326" pos:column="14"/></block></then></if>
          }<pos:position pos:line="327" pos:column="12"/></block></then></if>
          <if pos:line="328" pos:column="11">if<condition pos:line="328" pos:column="13">(<expr><name><name pos:line="328" pos:column="14">serverfd<pos:position pos:line="328" pos:column="22"/></name><index pos:line="328" pos:column="22">[<expr><name pos:line="328" pos:column="23">i<pos:position pos:line="328" pos:column="24"/></name></expr>]<pos:position pos:line="328" pos:column="25"/></index></name> <operator pos:line="328" pos:column="26">!=<pos:position pos:line="328" pos:column="28"/></operator> <name pos:line="328" pos:column="29">CURL_SOCKET_BAD<pos:position pos:line="328" pos:column="44"/></name></expr>)<pos:position pos:line="328" pos:column="45"/></condition><then pos:line="328" pos:column="45"> <block pos:line="328" pos:column="46">{
            <if pos:line="329" pos:column="13">if<condition pos:line="329" pos:column="15">(<expr><operator pos:line="329" pos:column="16">!<pos:position pos:line="329" pos:column="17"/></operator><name><name pos:line="329" pos:column="17">poll_server_wr<pos:position pos:line="329" pos:column="31"/></name><index pos:line="329" pos:column="31">[<expr><name pos:line="329" pos:column="32">i<pos:position pos:line="329" pos:column="33"/></name></expr>]<pos:position pos:line="329" pos:column="34"/></index></name> <operator pos:line="329" pos:column="35">&amp;&amp;<pos:position pos:line="329" pos:column="45"/></operator> <operator pos:line="329" pos:column="38">!<pos:position pos:line="329" pos:column="39"/></operator><name><name pos:line="329" pos:column="39">poll_server_rd<pos:position pos:line="329" pos:column="53"/></name><index pos:line="329" pos:column="53">[<expr><name pos:line="329" pos:column="54">i<pos:position pos:line="329" pos:column="55"/></name></expr>]<pos:position pos:line="329" pos:column="56"/></index></name></expr>)<pos:position pos:line="329" pos:column="57"/></condition><then pos:line="329" pos:column="57"> <block pos:line="329" pos:column="58">{
              <expr_stmt><expr><call><name pos:line="330" pos:column="15">logmsg<pos:position pos:line="330" pos:column="21"/></name><argument_list pos:line="330" pos:column="21">(<argument><expr><literal type="string" pos:line="330" pos:column="22">"[%s] CLOSING server socket"<pos:position pos:line="330" pos:column="50"/></literal></expr></argument>, <argument><expr><call><name pos:line="330" pos:column="52">data_or_ctrl<pos:position pos:line="330" pos:column="64"/></name><argument_list pos:line="330" pos:column="64">(<argument><expr><name pos:line="330" pos:column="65">i<pos:position pos:line="330" pos:column="66"/></name></expr></argument>)<pos:position pos:line="330" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="330" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="69"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="331" pos:column="15">sclose<pos:position pos:line="331" pos:column="21"/></name><argument_list pos:line="331" pos:column="21">(<argument><expr><name><name pos:line="331" pos:column="22">serverfd<pos:position pos:line="331" pos:column="30"/></name><index pos:line="331" pos:column="30">[<expr><name pos:line="331" pos:column="31">i<pos:position pos:line="331" pos:column="32"/></name></expr>]<pos:position pos:line="331" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="331" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="35"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="332" pos:column="15">serverfd<pos:position pos:line="332" pos:column="23"/></name><index pos:line="332" pos:column="23">[<expr><name pos:line="332" pos:column="24">i<pos:position pos:line="332" pos:column="25"/></name></expr>]<pos:position pos:line="332" pos:column="26"/></index></name> <operator pos:line="332" pos:column="27">=<pos:position pos:line="332" pos:column="28"/></operator> <name pos:line="332" pos:column="29">CURL_SOCKET_BAD<pos:position pos:line="332" pos:column="44"/></name></expr>;<pos:position pos:line="332" pos:column="45"/></expr_stmt>
              <if pos:line="333" pos:column="15">if<condition pos:line="333" pos:column="17">(<expr><name><name pos:line="333" pos:column="18">clientfd<pos:position pos:line="333" pos:column="26"/></name><index pos:line="333" pos:column="26">[<expr><name pos:line="333" pos:column="27">i<pos:position pos:line="333" pos:column="28"/></name></expr>]<pos:position pos:line="333" pos:column="29"/></index></name> <operator pos:line="333" pos:column="30">==<pos:position pos:line="333" pos:column="32"/></operator> <name pos:line="333" pos:column="33">CURL_SOCKET_BAD<pos:position pos:line="333" pos:column="48"/></name></expr>)<pos:position pos:line="333" pos:column="49"/></condition><then pos:line="333" pos:column="49"> <block pos:line="333" pos:column="50">{
                <expr_stmt><expr><call><name pos:line="334" pos:column="17">logmsg<pos:position pos:line="334" pos:column="23"/></name><argument_list pos:line="334" pos:column="23">(<argument><expr><literal type="string" pos:line="334" pos:column="24">"[%s] ENDING"<pos:position pos:line="334" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="334" pos:column="39">data_or_ctrl<pos:position pos:line="334" pos:column="51"/></name><argument_list pos:line="334" pos:column="51">(<argument><expr><name pos:line="334" pos:column="52">i<pos:position pos:line="334" pos:column="53"/></name></expr></argument>)<pos:position pos:line="334" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="334" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="56"/></expr_stmt>
                <if pos:line="335" pos:column="17">if<condition pos:line="335" pos:column="19">(<expr><name pos:line="335" pos:column="20">i<pos:position pos:line="335" pos:column="21"/></name> <operator pos:line="335" pos:column="22">==<pos:position pos:line="335" pos:column="24"/></operator> <name pos:line="335" pos:column="25">DATA<pos:position pos:line="335" pos:column="29"/></name></expr>)<pos:position pos:line="335" pos:column="30"/></condition><then pos:line="335" pos:column="30">
                  <block type="pseudo"><expr_stmt><expr><name pos:line="336" pos:column="19">secondary<pos:position pos:line="336" pos:column="28"/></name> <operator pos:line="336" pos:column="29">=<pos:position pos:line="336" pos:column="30"/></operator> <name pos:line="336" pos:column="31">FALSE<pos:position pos:line="336" pos:column="36"/></name></expr>;<pos:position pos:line="336" pos:column="37"/></expr_stmt></block></then>
                <else pos:line="337" pos:column="17">else
                  <block type="pseudo"><expr_stmt><expr><name pos:line="338" pos:column="19">primary<pos:position pos:line="338" pos:column="26"/></name> <operator pos:line="338" pos:column="27">=<pos:position pos:line="338" pos:column="28"/></operator> <name pos:line="338" pos:column="29">FALSE<pos:position pos:line="338" pos:column="34"/></name></expr>;<pos:position pos:line="338" pos:column="35"/></expr_stmt></block></else></if>
              }<pos:position pos:line="339" pos:column="16"/></block></then></if>
            }<pos:position pos:line="340" pos:column="14"/></block></then></if>
          }<pos:position pos:line="341" pos:column="12"/></block></then></if>
        }<pos:position pos:line="342" pos:column="10"/></block></for>
      }<pos:position pos:line="343" pos:column="8"/></block></for>

      <comment type="block" pos:line="345" pos:column="7">/* ---------------------------------------------------------- */</comment>

      <expr_stmt><expr><name pos:line="347" pos:column="7">max_tunnel_idx<pos:position pos:line="347" pos:column="21"/></name> <operator pos:line="347" pos:column="22">=<pos:position pos:line="347" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="347" pos:column="24">secondary<pos:position pos:line="347" pos:column="33"/></name></expr> ?<pos:position pos:line="347" pos:column="35"/></condition><then pos:line="347" pos:column="35"> <expr><name pos:line="347" pos:column="36">DATA<pos:position pos:line="347" pos:column="40"/></name></expr> <pos:position pos:line="347" pos:column="41"/></then><else pos:line="347" pos:column="41">: <expr><name pos:line="347" pos:column="43">CTRL<pos:position pos:line="347" pos:column="47"/></name></expr></else></ternary></expr>;<pos:position pos:line="347" pos:column="48"/></expr_stmt>

      <if pos:line="349" pos:column="7">if<condition pos:line="349" pos:column="9">(<expr><operator pos:line="349" pos:column="10">!<pos:position pos:line="349" pos:column="11"/></operator><name pos:line="349" pos:column="11">primary<pos:position pos:line="349" pos:column="18"/></name></expr>)<pos:position pos:line="349" pos:column="19"/></condition><then pos:line="349" pos:column="19">
        <comment type="block" pos:line="350" pos:column="9">/* exit loop upon primary tunnel teardown */</comment>
        <block type="pseudo"><break pos:line="351" pos:column="9">break;<pos:position pos:line="351" pos:column="15"/></break></block></then></if>

    }<pos:position pos:line="353" pos:column="6"/></block></then> <comment type="block" pos:line="353" pos:column="7">/* (rc &gt; 0) */</comment>
    <else pos:line="354" pos:column="5">else <block pos:line="354" pos:column="10">{
      <expr_stmt><expr><name pos:line="355" pos:column="7">timeout_count<pos:position pos:line="355" pos:column="20"/></name><operator pos:line="355" pos:column="20">++<pos:position pos:line="355" pos:column="22"/></operator></expr>;<pos:position pos:line="355" pos:column="23"/></expr_stmt>
      <if pos:line="356" pos:column="7">if<condition pos:line="356" pos:column="9">(<expr><name pos:line="356" pos:column="10">timeout_count<pos:position pos:line="356" pos:column="23"/></name> <operator pos:line="356" pos:column="24">&gt;<pos:position pos:line="356" pos:column="28"/></operator> <literal type="number" pos:line="356" pos:column="26">5<pos:position pos:line="356" pos:column="27"/></literal></expr>)<pos:position pos:line="356" pos:column="28"/></condition><then pos:line="356" pos:column="28"> <block pos:line="356" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="357" pos:column="9">logmsg<pos:position pos:line="357" pos:column="15"/></name><argument_list pos:line="357" pos:column="15">(<argument><expr><literal type="string" pos:line="357" pos:column="16">"CONNECT proxy timeout after %d idle seconds!"<pos:position pos:line="357" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="357" pos:column="64">timeout_count<pos:position pos:line="357" pos:column="77"/></name></expr></argument>)<pos:position pos:line="357" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="357" pos:column="79"/></expr_stmt>
        <break pos:line="358" pos:column="9">break;<pos:position pos:line="358" pos:column="15"/></break>
      }<pos:position pos:line="359" pos:column="8"/></block></then></if>
    }<pos:position pos:line="360" pos:column="6"/></block></else></if>
  }<pos:position pos:line="361" pos:column="4"/></block></while>

<label><name pos:line="363" pos:column="1">http_connect_cleanup<pos:position pos:line="363" pos:column="21"/></name>:<pos:position pos:line="363" pos:column="22"/></label>

  <for pos:line="365" pos:column="3">for<control pos:line="365" pos:column="6">(<init><expr><name pos:line="365" pos:column="7">i<pos:position pos:line="365" pos:column="8"/></name> <operator pos:line="365" pos:column="9">=<pos:position pos:line="365" pos:column="10"/></operator> <name pos:line="365" pos:column="11">DATA<pos:position pos:line="365" pos:column="15"/></name></expr>;<pos:position pos:line="365" pos:column="16"/></init> <condition><expr><name pos:line="365" pos:column="17">i<pos:position pos:line="365" pos:column="18"/></name> <operator pos:line="365" pos:column="19">&gt;=<pos:position pos:line="365" pos:column="24"/></operator> <name pos:line="365" pos:column="22">CTRL<pos:position pos:line="365" pos:column="26"/></name></expr>;<pos:position pos:line="365" pos:column="27"/></condition> <incr><expr><name pos:line="365" pos:column="28">i<pos:position pos:line="365" pos:column="29"/></name><operator pos:line="365" pos:column="29">--<pos:position pos:line="365" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="365" pos:column="32"/></control> <block pos:line="365" pos:column="33">{
    <if pos:line="366" pos:column="5">if<condition pos:line="366" pos:column="7">(<expr><name><name pos:line="366" pos:column="8">serverfd<pos:position pos:line="366" pos:column="16"/></name><index pos:line="366" pos:column="16">[<expr><name pos:line="366" pos:column="17">i<pos:position pos:line="366" pos:column="18"/></name></expr>]<pos:position pos:line="366" pos:column="19"/></index></name> <operator pos:line="366" pos:column="20">!=<pos:position pos:line="366" pos:column="22"/></operator> <name pos:line="366" pos:column="23">CURL_SOCKET_BAD<pos:position pos:line="366" pos:column="38"/></name></expr>)<pos:position pos:line="366" pos:column="39"/></condition><then pos:line="366" pos:column="39"> <block pos:line="366" pos:column="40">{
      <expr_stmt><expr><call><name pos:line="367" pos:column="7">logmsg<pos:position pos:line="367" pos:column="13"/></name><argument_list pos:line="367" pos:column="13">(<argument><expr><literal type="string" pos:line="367" pos:column="14">"[%s] CLOSING server socket (cleanup)"<pos:position pos:line="367" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="367" pos:column="54">data_or_ctrl<pos:position pos:line="367" pos:column="66"/></name><argument_list pos:line="367" pos:column="66">(<argument><expr><name pos:line="367" pos:column="67">i<pos:position pos:line="367" pos:column="68"/></name></expr></argument>)<pos:position pos:line="367" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="367" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="368" pos:column="7">shutdown<pos:position pos:line="368" pos:column="15"/></name><argument_list pos:line="368" pos:column="15">(<argument><expr><name><name pos:line="368" pos:column="16">serverfd<pos:position pos:line="368" pos:column="24"/></name><index pos:line="368" pos:column="24">[<expr><name pos:line="368" pos:column="25">i<pos:position pos:line="368" pos:column="26"/></name></expr>]<pos:position pos:line="368" pos:column="27"/></index></name></expr></argument>, <argument><expr><name pos:line="368" pos:column="29">SHUT_RDWR<pos:position pos:line="368" pos:column="38"/></name></expr></argument>)<pos:position pos:line="368" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="368" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="369" pos:column="7">sclose<pos:position pos:line="369" pos:column="13"/></name><argument_list pos:line="369" pos:column="13">(<argument><expr><name><name pos:line="369" pos:column="14">serverfd<pos:position pos:line="369" pos:column="22"/></name><index pos:line="369" pos:column="22">[<expr><name pos:line="369" pos:column="23">i<pos:position pos:line="369" pos:column="24"/></name></expr>]<pos:position pos:line="369" pos:column="25"/></index></name></expr></argument>)<pos:position pos:line="369" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="369" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="370" pos:column="6"/></block></then></if>
    <if pos:line="371" pos:column="5">if<condition pos:line="371" pos:column="7">(<expr><name><name pos:line="371" pos:column="8">clientfd<pos:position pos:line="371" pos:column="16"/></name><index pos:line="371" pos:column="16">[<expr><name pos:line="371" pos:column="17">i<pos:position pos:line="371" pos:column="18"/></name></expr>]<pos:position pos:line="371" pos:column="19"/></index></name> <operator pos:line="371" pos:column="20">!=<pos:position pos:line="371" pos:column="22"/></operator> <name pos:line="371" pos:column="23">CURL_SOCKET_BAD<pos:position pos:line="371" pos:column="38"/></name></expr>)<pos:position pos:line="371" pos:column="39"/></condition><then pos:line="371" pos:column="39"> <block pos:line="371" pos:column="40">{
      <expr_stmt><expr><call><name pos:line="372" pos:column="7">logmsg<pos:position pos:line="372" pos:column="13"/></name><argument_list pos:line="372" pos:column="13">(<argument><expr><literal type="string" pos:line="372" pos:column="14">"[%s] CLOSING client socket (cleanup)"<pos:position pos:line="372" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="372" pos:column="54">data_or_ctrl<pos:position pos:line="372" pos:column="66"/></name><argument_list pos:line="372" pos:column="66">(<argument><expr><name pos:line="372" pos:column="67">i<pos:position pos:line="372" pos:column="68"/></name></expr></argument>)<pos:position pos:line="372" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="372" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="373" pos:column="7">shutdown<pos:position pos:line="373" pos:column="15"/></name><argument_list pos:line="373" pos:column="15">(<argument><expr><name><name pos:line="373" pos:column="16">clientfd<pos:position pos:line="373" pos:column="24"/></name><index pos:line="373" pos:column="24">[<expr><name pos:line="373" pos:column="25">i<pos:position pos:line="373" pos:column="26"/></name></expr>]<pos:position pos:line="373" pos:column="27"/></index></name></expr></argument>, <argument><expr><name pos:line="373" pos:column="29">SHUT_RDWR<pos:position pos:line="373" pos:column="38"/></name></expr></argument>)<pos:position pos:line="373" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="374" pos:column="7">sclose<pos:position pos:line="374" pos:column="13"/></name><argument_list pos:line="374" pos:column="13">(<argument><expr><name><name pos:line="374" pos:column="14">clientfd<pos:position pos:line="374" pos:column="22"/></name><index pos:line="374" pos:column="22">[<expr><name pos:line="374" pos:column="23">i<pos:position pos:line="374" pos:column="24"/></name></expr>]<pos:position pos:line="374" pos:column="25"/></index></name></expr></argument>)<pos:position pos:line="374" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="374" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="375" pos:column="6"/></block></then></if>
    <if pos:line="376" pos:column="5">if<condition pos:line="376" pos:column="7">(<expr><operator pos:line="376" pos:column="8">(<pos:position pos:line="376" pos:column="9"/></operator><name><name pos:line="376" pos:column="9">serverfd<pos:position pos:line="376" pos:column="17"/></name><index pos:line="376" pos:column="17">[<expr><name pos:line="376" pos:column="18">i<pos:position pos:line="376" pos:column="19"/></name></expr>]<pos:position pos:line="376" pos:column="20"/></index></name> <operator pos:line="376" pos:column="21">!=<pos:position pos:line="376" pos:column="23"/></operator> <name pos:line="376" pos:column="24">CURL_SOCKET_BAD<pos:position pos:line="376" pos:column="39"/></name><operator pos:line="376" pos:column="39">)<pos:position pos:line="376" pos:column="40"/></operator> <operator pos:line="376" pos:column="41">||<pos:position pos:line="376" pos:column="43"/></operator>
       <operator pos:line="377" pos:column="8">(<pos:position pos:line="377" pos:column="9"/></operator><name><name pos:line="377" pos:column="9">clientfd<pos:position pos:line="377" pos:column="17"/></name><index pos:line="377" pos:column="17">[<expr><name pos:line="377" pos:column="18">i<pos:position pos:line="377" pos:column="19"/></name></expr>]<pos:position pos:line="377" pos:column="20"/></index></name> <operator pos:line="377" pos:column="21">!=<pos:position pos:line="377" pos:column="23"/></operator> <name pos:line="377" pos:column="24">CURL_SOCKET_BAD<pos:position pos:line="377" pos:column="39"/></name><operator pos:line="377" pos:column="39">)<pos:position pos:line="377" pos:column="40"/></operator></expr>)<pos:position pos:line="377" pos:column="41"/></condition><then pos:line="377" pos:column="41"> <block pos:line="377" pos:column="42">{
      <expr_stmt><expr><call><name pos:line="378" pos:column="7">logmsg<pos:position pos:line="378" pos:column="13"/></name><argument_list pos:line="378" pos:column="13">(<argument><expr><literal type="string" pos:line="378" pos:column="14">"[%s] ABORTING"<pos:position pos:line="378" pos:column="29"/></literal></expr></argument>, <argument><expr><call><name pos:line="378" pos:column="31">data_or_ctrl<pos:position pos:line="378" pos:column="43"/></name><argument_list pos:line="378" pos:column="43">(<argument><expr><name pos:line="378" pos:column="44">i<pos:position pos:line="378" pos:column="45"/></name></expr></argument>)<pos:position pos:line="378" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="378" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="378" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="379" pos:column="6"/></block></then></if>
  }<pos:position pos:line="380" pos:column="4"/></block></for>

  <expr_stmt><expr><operator pos:line="382" pos:column="3">*<pos:position pos:line="382" pos:column="4"/></operator><name pos:line="382" pos:column="4">infdp<pos:position pos:line="382" pos:column="9"/></name> <operator pos:line="382" pos:column="10">=<pos:position pos:line="382" pos:column="11"/></operator> <name pos:line="382" pos:column="12">CURL_SOCKET_BAD<pos:position pos:line="382" pos:column="27"/></name></expr>;<pos:position pos:line="382" pos:column="28"/></expr_stmt>
}<pos:position pos:line="383" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_889_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">checkpasswd<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">kind<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="47">/* for what purpose */</comment>
                            <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">size_t<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">i<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,   <comment type="block" pos:line="2" pos:column="47">/* operation index */</comment>
                            <parameter><decl><type><specifier pos:line="3" pos:column="29">const<pos:position pos:line="3" pos:column="34"/></specifier> <name pos:line="3" pos:column="35">bool<pos:position pos:line="3" pos:column="39"/></name></type> <name pos:line="3" pos:column="40">last<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>,  <comment type="block" pos:line="3" pos:column="47">/* TRUE if last operation */</comment>
                            <parameter><decl><type><name pos:line="4" pos:column="29">char<pos:position pos:line="4" pos:column="33"/></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier><modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier></type><name pos:line="4" pos:column="36">userpwd<pos:position pos:line="4" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="44"/></parameter_list>   <comment type="block" pos:line="4" pos:column="47">/* pointer to allocated string */</comment>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">psep<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">osep<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">!<pos:position pos:line="9" pos:column="7"/></operator><operator pos:line="9" pos:column="7">*<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">userpwd<pos:position pos:line="9" pos:column="15"/></name></expr>)<pos:position pos:line="9" pos:column="16"/></condition><then pos:line="9" pos:column="16">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">CURLE_OK<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></return></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* Attempt to find the password separator */</comment>
  <expr_stmt><expr><name pos:line="13" pos:column="3">psep<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">strchr<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><operator pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">userpwd<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="27">':'<pos:position pos:line="13" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>

  <comment type="block" pos:line="15" pos:column="3">/* Attempt to find the options separator */</comment>
  <expr_stmt><expr><name pos:line="16" pos:column="3">osep<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <call><name pos:line="16" pos:column="10">strchr<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><operator pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">userpwd<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="27">';'<pos:position pos:line="16" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><operator pos:line="18" pos:column="6">!<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">psep<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">&amp;&amp;<pos:position pos:line="18" pos:column="22"/></operator> <operator pos:line="18" pos:column="15">*<pos:position pos:line="18" pos:column="16"/></operator><operator pos:line="18" pos:column="16">*<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">userpwd<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">!=<pos:position pos:line="18" pos:column="27"/></operator> <literal type="char" pos:line="18" pos:column="28">';'<pos:position pos:line="18" pos:column="31"/></literal></expr>)<pos:position pos:line="18" pos:column="32"/></condition><then pos:line="18" pos:column="32"> <block pos:line="18" pos:column="33">{
    <comment type="block" pos:line="19" pos:column="5">/* no password present, prompt for one */</comment>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">char<pos:position pos:line="20" pos:column="9"/></name></type> <name><name pos:line="20" pos:column="10">passwd<pos:position pos:line="20" pos:column="16"/></name><index pos:line="20" pos:column="16">[<expr><literal type="number" pos:line="20" pos:column="17">256<pos:position pos:line="20" pos:column="20"/></literal></expr>]<pos:position pos:line="20" pos:column="21"/></index></name> <init pos:line="20" pos:column="22">= <expr><literal type="string" pos:line="20" pos:column="24">""<pos:position pos:line="20" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name></type> <name><name pos:line="21" pos:column="10">prompt<pos:position pos:line="21" pos:column="16"/></name><index pos:line="21" pos:column="16">[<expr><literal type="number" pos:line="21" pos:column="17">256<pos:position pos:line="21" pos:column="20"/></literal></expr>]<pos:position pos:line="21" pos:column="21"/></index></name></decl>;<pos:position pos:line="21" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">size_t<pos:position pos:line="22" pos:column="11"/></name></type> <name pos:line="22" pos:column="12">passwdlen<pos:position pos:line="22" pos:column="21"/></name></decl>;<pos:position pos:line="22" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">size_t<pos:position pos:line="23" pos:column="11"/></name></type> <name pos:line="23" pos:column="12">userlen<pos:position pos:line="23" pos:column="19"/></name> <init pos:line="23" pos:column="20">= <expr><call><name pos:line="23" pos:column="22">strlen<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><operator pos:line="23" pos:column="29">*<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">userpwd<pos:position pos:line="23" pos:column="37"/></name></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">char<pos:position pos:line="24" pos:column="9"/></name> <modifier pos:line="24" pos:column="10">*<pos:position pos:line="24" pos:column="11"/></modifier></type><name pos:line="24" pos:column="11">passptr<pos:position pos:line="24" pos:column="18"/></name></decl>;<pos:position pos:line="24" pos:column="19"/></decl_stmt>

    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name pos:line="26" pos:column="8">osep<pos:position pos:line="26" pos:column="12"/></name></expr>)<pos:position pos:line="26" pos:column="13"/></condition><then pos:line="26" pos:column="13">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="27" pos:column="7">*<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">osep<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <literal type="char" pos:line="27" pos:column="15">'\0'<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* build a nice-looking prompt */</comment>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><operator pos:line="30" pos:column="8">!<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="9">i<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">&amp;&amp;<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="14">last<pos:position pos:line="30" pos:column="18"/></name></expr>)<pos:position pos:line="30" pos:column="19"/></condition><then pos:line="30" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="7">curlx_msnprintf<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">prompt<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="31">sizeof<argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">prompt<pos:position pos:line="31" pos:column="44"/></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></sizeof></expr></argument>,
                      <argument><expr><literal type="string" pos:line="32" pos:column="23">"Enter %s password for user '%s':"<pos:position pos:line="32" pos:column="57"/></literal></expr></argument>,
                      <argument><expr><name pos:line="33" pos:column="23">kind<pos:position pos:line="33" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="29">*<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">userpwd<pos:position pos:line="33" pos:column="37"/></name></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt></block></then>
    <else pos:line="34" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="7">curlx_msnprintf<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">prompt<pos:position pos:line="35" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="31">sizeof<argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">prompt<pos:position pos:line="35" pos:column="44"/></name></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></sizeof></expr></argument>,
                      <argument><expr><literal type="string" pos:line="36" pos:column="23">"Enter %s password for user '%s' on URL #%"<pos:position pos:line="36" pos:column="66"/></literal>
                      <name pos:line="37" pos:column="23">CURL_FORMAT_CURL_OFF_TU<pos:position pos:line="37" pos:column="46"/></name> <literal type="string" pos:line="37" pos:column="47">":"<pos:position pos:line="37" pos:column="50"/></literal></expr></argument>,
                      <argument><expr><name pos:line="38" pos:column="23">kind<pos:position pos:line="38" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="29">*<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="30">userpwd<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><call pos:line="38" pos:column="39">(<name pos:line="38" pos:column="40">curl_off_t<pos:position pos:line="38" pos:column="50"/></name>) <argument_list pos:line="38" pos:column="52">(<argument><expr><name pos:line="38" pos:column="53">i<pos:position pos:line="38" pos:column="54"/></name> <operator pos:line="38" pos:column="55">+<pos:position pos:line="38" pos:column="56"/></operator> <literal type="number" pos:line="38" pos:column="57">1<pos:position pos:line="38" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="61"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="40" pos:column="5">/* get password */</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">getpass_r<pos:position pos:line="41" pos:column="14"/></name><argument_list pos:line="41" pos:column="14">(<argument><expr><name pos:line="41" pos:column="15">prompt<pos:position pos:line="41" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="23">passwd<pos:position pos:line="41" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="31">sizeof<argument_list pos:line="41" pos:column="37">(<argument><expr><name pos:line="41" pos:column="38">passwd<pos:position pos:line="41" pos:column="44"/></name></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">passwdlen<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <call><name pos:line="42" pos:column="17">strlen<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><name pos:line="42" pos:column="24">passwd<pos:position pos:line="42" pos:column="30"/></name></expr></argument>)<pos:position pos:line="42" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt>

    <if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><name pos:line="44" pos:column="8">osep<pos:position pos:line="44" pos:column="12"/></name></expr>)<pos:position pos:line="44" pos:column="13"/></condition><then pos:line="44" pos:column="13">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="45" pos:column="7">*<pos:position pos:line="45" pos:column="8"/></operator><name pos:line="45" pos:column="8">osep<pos:position pos:line="45" pos:column="12"/></name> <operator pos:line="45" pos:column="13">=<pos:position pos:line="45" pos:column="14"/></operator> <literal type="char" pos:line="45" pos:column="15">';'<pos:position pos:line="45" pos:column="18"/></literal></expr>;<pos:position pos:line="45" pos:column="19"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="47" pos:column="5">/* extend the allocated memory area to fit the password too */</comment>
    <expr_stmt><expr><name pos:line="48" pos:column="5">passptr<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <call><name pos:line="48" pos:column="15">realloc<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><operator pos:line="48" pos:column="23">*<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="24">userpwd<pos:position pos:line="48" pos:column="31"/></name></expr></argument>,
                      <argument><expr><name pos:line="49" pos:column="23">passwdlen<pos:position pos:line="49" pos:column="32"/></name> <operator pos:line="49" pos:column="33">+<pos:position pos:line="49" pos:column="34"/></operator> <literal type="number" pos:line="49" pos:column="35">1<pos:position pos:line="49" pos:column="36"/></literal> <operator pos:line="49" pos:column="37">+<pos:position pos:line="49" pos:column="38"/></operator> <comment type="block" pos:line="49" pos:column="39">/* an extra for the colon */</comment>
                      <name pos:line="50" pos:column="23">userlen<pos:position pos:line="50" pos:column="30"/></name> <operator pos:line="50" pos:column="31">+<pos:position pos:line="50" pos:column="32"/></operator> <literal type="number" pos:line="50" pos:column="33">1<pos:position pos:line="50" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="36"/></expr_stmt>   <comment type="block" pos:line="50" pos:column="39">/* an extra for the zero */</comment>
    <if pos:line="51" pos:column="5">if<condition pos:line="51" pos:column="7">(<expr><operator pos:line="51" pos:column="8">!<pos:position pos:line="51" pos:column="9"/></operator><name pos:line="51" pos:column="9">passptr<pos:position pos:line="51" pos:column="16"/></name></expr>)<pos:position pos:line="51" pos:column="17"/></condition><then pos:line="51" pos:column="17">
      <block type="pseudo"><return pos:line="52" pos:column="7">return <expr><name pos:line="52" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="52" pos:column="33"/></name></expr>;<pos:position pos:line="52" pos:column="34"/></return></block></then></if>

    <comment type="block" pos:line="54" pos:column="5">/* append the password separated with a colon */</comment>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">passptr<pos:position pos:line="55" pos:column="12"/></name><index pos:line="55" pos:column="12">[<expr><name pos:line="55" pos:column="13">userlen<pos:position pos:line="55" pos:column="20"/></name></expr>]<pos:position pos:line="55" pos:column="21"/></index></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <literal type="char" pos:line="55" pos:column="24">':'<pos:position pos:line="55" pos:column="27"/></literal></expr>;<pos:position pos:line="55" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">memcpy<pos:position pos:line="56" pos:column="11"/></name><argument_list pos:line="56" pos:column="11">(<argument><expr><operator pos:line="56" pos:column="12">&amp;<pos:position pos:line="56" pos:column="17"/></operator><name><name pos:line="56" pos:column="13">passptr<pos:position pos:line="56" pos:column="20"/></name><index pos:line="56" pos:column="20">[<expr><name pos:line="56" pos:column="21">userlen<pos:position pos:line="56" pos:column="28"/></name> <operator pos:line="56" pos:column="29">+<pos:position pos:line="56" pos:column="30"/></operator> <literal type="number" pos:line="56" pos:column="31">1<pos:position pos:line="56" pos:column="32"/></literal></expr>]<pos:position pos:line="56" pos:column="33"/></index></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="35">passwd<pos:position pos:line="56" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="43">passwdlen<pos:position pos:line="56" pos:column="52"/></name> <operator pos:line="56" pos:column="53">+<pos:position pos:line="56" pos:column="54"/></operator> <literal type="number" pos:line="56" pos:column="55">1<pos:position pos:line="56" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="57" pos:column="5">*<pos:position pos:line="57" pos:column="6"/></operator><name pos:line="57" pos:column="6">userpwd<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">=<pos:position pos:line="57" pos:column="15"/></operator> <name pos:line="57" pos:column="16">passptr<pos:position pos:line="57" pos:column="23"/></name></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>

  <return pos:line="60" pos:column="3">return <expr><name pos:line="60" pos:column="10">CURLE_OK<pos:position pos:line="60" pos:column="18"/></name></expr>;<pos:position pos:line="60" pos:column="19"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

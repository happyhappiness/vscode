<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_88_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name><name pos:line="1" pos:column="26">argv<pos:position pos:line="1" pos:column="30"/></name><index pos:line="1" pos:column="30">[]<pos:position pos:line="1" pos:column="32"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">res<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Configurable<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">config<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">memset<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><operator pos:line="5" pos:column="10">&amp;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="11">config<pos:position pos:line="5" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="22">sizeof<argument_list pos:line="5" pos:column="28">(<argument><expr pos:line="5" pos:column="29">struct <name pos:line="5" pos:column="36">Configurable<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="51"/></expr_stmt>
  
  <expr_stmt><expr><name pos:line="7" pos:column="3">res<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">operate<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><operator pos:line="7" pos:column="17">&amp;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="18">config<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="26">argc<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="32">argv<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">free_config_fields<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><operator pos:line="8" pos:column="22">&amp;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="23">config<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>

<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive>	<name pos:line="10" pos:column="9">VMS<pos:position pos:line="10" pos:column="12"/></name></cpp:ifdef>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">res<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">&gt;<pos:position pos:line="11" pos:column="15"/></operator> <literal type="number" pos:line="11" pos:column="13">52<pos:position pos:line="11" pos:column="15"/></literal></expr>)<pos:position pos:line="11" pos:column="16"/></condition><then pos:line="11" pos:column="16"> <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">res<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="23">53<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt></block></then></if>		<comment type="block" pos:line="11" pos:column="41">/* MAXMSG, porting helper */</comment>
  <return pos:line="12" pos:column="3">return <expr><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name><name pos:line="12" pos:column="11">vms_cond<pos:position pos:line="12" pos:column="19"/></name><index pos:line="12" pos:column="19">[<expr><name pos:line="12" pos:column="20">res<pos:position pos:line="12" pos:column="23"/></name></expr>]<pos:position pos:line="12" pos:column="24"/></index></name><operator pos:line="12" pos:column="24">|<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">vms_show<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">)<pos:position pos:line="12" pos:column="34"/></operator></expr>;<pos:position pos:line="12" pos:column="35"/></return>
<cpp:else pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">else<pos:position pos:line="13" pos:column="6"/></cpp:directive></cpp:else>
  <return pos:line="14" pos:column="3">return <expr><name pos:line="14" pos:column="10">res<pos:position pos:line="14" pos:column="13"/></name></expr>;<pos:position pos:line="14" pos:column="14"/></return>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

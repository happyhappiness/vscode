<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2295_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">DisposeThreadData<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">data<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if<condition pos:line="3" pos:column="5">(<expr><name pos:line="3" pos:column="6">data<pos:position pos:line="3" pos:column="10"/></name></expr>)<pos:position pos:line="3" pos:column="11"/></condition><then pos:line="3" pos:column="11"> <block pos:line="3" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">void<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">twentybytes<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator><operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">libthreaddata_t<pos:position pos:line="4" pos:column="42"/></name> <operator pos:line="4" pos:column="43">*<pos:position pos:line="4" pos:column="44"/></operator><operator pos:line="4" pos:column="44">)<pos:position pos:line="4" pos:column="45"/></operator> <name pos:line="4" pos:column="46">data<pos:position pos:line="4" pos:column="50"/></name><operator pos:line="4" pos:column="50">)<pos:position pos:line="4" pos:column="51"/></operator><operator pos:line="4" pos:column="51">-&gt;<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="53">twentybytes<pos:position pos:line="4" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="65"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">free<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><name pos:line="6" pos:column="10">twentybytes<pos:position pos:line="6" pos:column="21"/></name></expr></argument>)<pos:position pos:line="6" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">free<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name pos:line="7" pos:column="10">data<pos:position pos:line="7" pos:column="14"/></name></expr></argument>)<pos:position pos:line="7" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

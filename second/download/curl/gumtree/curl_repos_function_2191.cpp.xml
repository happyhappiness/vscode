<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2191.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">darwinssl_connect_step2<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">connectdata<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">conn<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">int<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">sockindex<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">SessionHandle<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">data<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name><name pos:line="4" pos:column="32">conn<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">data<pos:position pos:line="4" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">ssl_connect_data<pos:position pos:line="5" pos:column="26"/></name></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type><name pos:line="5" pos:column="28">connssl<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><operator pos:line="5" pos:column="38">&amp;<pos:position pos:line="5" pos:column="43"/></operator><name><name pos:line="5" pos:column="39">conn<pos:position pos:line="5" pos:column="43"/></name><operator pos:line="5" pos:column="43">-&gt;<pos:position pos:line="5" pos:column="48"/></operator><name pos:line="5" pos:column="45">ssl<pos:position pos:line="5" pos:column="48"/></name><index pos:line="5" pos:column="48">[<expr><name pos:line="5" pos:column="49">sockindex<pos:position pos:line="5" pos:column="58"/></name></expr>]<pos:position pos:line="5" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">OSStatus<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">err<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">SSLCipherSuite<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">cipher<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">SSLProtocol<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">protocol<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">DEBUGASSERT<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">ssl_connect_2<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">==<pos:position pos:line="10" pos:column="31"/></operator> <name><name pos:line="10" pos:column="32">connssl<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">connecting_state<pos:position pos:line="10" pos:column="57"/></name></name>
              <operator pos:line="11" pos:column="15">||<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">ssl_connect_2_reading<pos:position pos:line="11" pos:column="39"/></name> <operator pos:line="11" pos:column="40">==<pos:position pos:line="11" pos:column="42"/></operator> <name><name pos:line="11" pos:column="43">connssl<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">-&gt;<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="52">connecting_state<pos:position pos:line="11" pos:column="68"/></name></name>
              <operator pos:line="12" pos:column="15">||<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">ssl_connect_2_writing<pos:position pos:line="12" pos:column="39"/></name> <operator pos:line="12" pos:column="40">==<pos:position pos:line="12" pos:column="42"/></operator> <name><name pos:line="12" pos:column="43">connssl<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">-&gt;<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="52">connecting_state<pos:position pos:line="12" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="70"/></expr_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* Here goes nothing: */</comment>
  <expr_stmt><expr><name pos:line="15" pos:column="3">err<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <call><name pos:line="15" pos:column="9">SSLHandshake<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name><name pos:line="15" pos:column="22">connssl<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">ssl_ctx<pos:position pos:line="15" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name pos:line="17" pos:column="6">err<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">!=<pos:position pos:line="17" pos:column="12"/></operator> <name pos:line="17" pos:column="13">noErr<pos:position pos:line="17" pos:column="18"/></name></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19"> <block pos:line="17" pos:column="20">{
    <switch pos:line="18" pos:column="5">switch <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">err<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition> <block pos:line="18" pos:column="18">{
      <case pos:line="19" pos:column="7">case <expr><name pos:line="19" pos:column="12">errSSLWouldBlock<pos:position pos:line="19" pos:column="28"/></name></expr>:<pos:position pos:line="19" pos:column="29"/></case>  <comment type="block" pos:line="19" pos:column="31">/* they're not done with us yet */</comment>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">connssl<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">connecting_state<pos:position pos:line="20" pos:column="34"/></name></name> <operator pos:line="20" pos:column="35">=<pos:position pos:line="20" pos:column="36"/></operator> <ternary><condition><expr><name><name pos:line="20" pos:column="37">connssl<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">ssl_direction<pos:position pos:line="20" pos:column="59"/></name></name></expr> ?<pos:position pos:line="20" pos:column="61"/></condition><then pos:line="20" pos:column="61">
            <expr><name pos:line="21" pos:column="13">ssl_connect_2_writing<pos:position pos:line="21" pos:column="34"/></name></expr> <pos:position pos:line="21" pos:column="35"/></then><else pos:line="21" pos:column="35">: <expr><name pos:line="21" pos:column="37">ssl_connect_2_reading<pos:position pos:line="21" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">CURLE_OK<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></return>

      <comment type="block" pos:line="24" pos:column="7">/* The below is errSSLServerAuthCompleted; it's not defined in
        Leopard's headers */</comment>
      <case pos:line="26" pos:column="7">case <expr><operator pos:line="26" pos:column="12">-<pos:position pos:line="26" pos:column="13"/></operator><literal type="number" pos:line="26" pos:column="13">9841<pos:position pos:line="26" pos:column="17"/></literal></expr>:<pos:position pos:line="26" pos:column="18"/></case>
        <if pos:line="27" pos:column="9">if<condition pos:line="27" pos:column="11">(<expr><name><name pos:line="27" pos:column="12">data<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">set<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">.<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">str<pos:position pos:line="27" pos:column="25"/></name><index pos:line="27" pos:column="25">[<expr><name pos:line="27" pos:column="26">STRING_SSL_CAFILE<pos:position pos:line="27" pos:column="43"/></name></expr>]<pos:position pos:line="27" pos:column="44"/></index></name></expr>)<pos:position pos:line="27" pos:column="45"/></condition><then pos:line="27" pos:column="45"> <block pos:line="27" pos:column="46">{
          <decl_stmt><decl><type><name pos:line="28" pos:column="11">int<pos:position pos:line="28" pos:column="14"/></name></type> <name pos:line="28" pos:column="15">res<pos:position pos:line="28" pos:column="18"/></name> <init pos:line="28" pos:column="19">= <expr><call><name pos:line="28" pos:column="21">verify_cert<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name><name pos:line="28" pos:column="33">data<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">-&gt;<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="39">set<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">.<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="43">str<pos:position pos:line="28" pos:column="46"/></name><index pos:line="28" pos:column="46">[<expr><name pos:line="28" pos:column="47">STRING_SSL_CAFILE<pos:position pos:line="28" pos:column="64"/></name></expr>]<pos:position pos:line="28" pos:column="65"/></index></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="67">data<pos:position pos:line="28" pos:column="71"/></name></expr></argument>,
                                <argument><expr><name><name pos:line="29" pos:column="33">connssl<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">-&gt;<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="42">ssl_ctx<pos:position pos:line="29" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="51"/></decl_stmt>
          <if pos:line="30" pos:column="11">if<condition pos:line="30" pos:column="13">(<expr><name pos:line="30" pos:column="14">res<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">!=<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">CURLE_OK<pos:position pos:line="30" pos:column="29"/></name></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30">
            <block type="pseudo"><return pos:line="31" pos:column="13">return <expr><name pos:line="31" pos:column="20">res<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></return></block></then></if>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="33" pos:column="9">/* the documentation says we need to call SSLHandshake() again */</comment>
        <return pos:line="34" pos:column="9">return <expr><call><name pos:line="34" pos:column="16">darwinssl_connect_step2<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">conn<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="46">sockindex<pos:position pos:line="34" pos:column="55"/></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></return>

      <comment type="block" pos:line="36" pos:column="7">/* These are all certificate problems with the server: */</comment>
      <case pos:line="37" pos:column="7">case <expr><name pos:line="37" pos:column="12">errSSLXCertChainInvalid<pos:position pos:line="37" pos:column="35"/></name></expr>:<pos:position pos:line="37" pos:column="36"/></case>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">failf<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><name pos:line="38" pos:column="15">data<pos:position pos:line="38" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="21">"SSL certificate problem: Invalid certificate chain"<pos:position pos:line="38" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="75"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">CURLE_SSL_CACERT<pos:position pos:line="39" pos:column="32"/></name></expr>;<pos:position pos:line="39" pos:column="33"/></return>
      <case pos:line="40" pos:column="7">case <expr><name pos:line="40" pos:column="12">errSSLUnknownRootCert<pos:position pos:line="40" pos:column="33"/></name></expr>:<pos:position pos:line="40" pos:column="34"/></case>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">failf<pos:position pos:line="41" pos:column="14"/></name><argument_list pos:line="41" pos:column="14">(<argument><expr><name pos:line="41" pos:column="15">data<pos:position pos:line="41" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="21">"SSL certificate problem: Untrusted root certificate"<pos:position pos:line="41" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="76"/></expr_stmt>
        <return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">CURLE_SSL_CACERT<pos:position pos:line="42" pos:column="32"/></name></expr>;<pos:position pos:line="42" pos:column="33"/></return>
      <case pos:line="43" pos:column="7">case <expr><name pos:line="43" pos:column="12">errSSLNoRootCert<pos:position pos:line="43" pos:column="28"/></name></expr>:<pos:position pos:line="43" pos:column="29"/></case>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">failf<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><name pos:line="44" pos:column="15">data<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="21">"SSL certificate problem: No root certificate"<pos:position pos:line="44" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="69"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">CURLE_SSL_CACERT<pos:position pos:line="45" pos:column="32"/></name></expr>;<pos:position pos:line="45" pos:column="33"/></return>
      <case pos:line="46" pos:column="7">case <expr><name pos:line="46" pos:column="12">errSSLCertExpired<pos:position pos:line="46" pos:column="29"/></name></expr>:<pos:position pos:line="46" pos:column="30"/></case>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">failf<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><name pos:line="47" pos:column="15">data<pos:position pos:line="47" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="21">"SSL certificate problem: Certificate chain had an "<pos:position pos:line="47" pos:column="73"/></literal>
              <literal type="string" pos:line="48" pos:column="15">"expired certificate"<pos:position pos:line="48" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
        <return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">CURLE_SSL_CACERT<pos:position pos:line="49" pos:column="32"/></name></expr>;<pos:position pos:line="49" pos:column="33"/></return>
      <case pos:line="50" pos:column="7">case <expr><name pos:line="50" pos:column="12">errSSLBadCert<pos:position pos:line="50" pos:column="25"/></name></expr>:<pos:position pos:line="50" pos:column="26"/></case>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">failf<pos:position pos:line="51" pos:column="14"/></name><argument_list pos:line="51" pos:column="14">(<argument><expr><name pos:line="51" pos:column="15">data<pos:position pos:line="51" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="21">"SSL certificate problem: Couldn't understand the server "<pos:position pos:line="51" pos:column="79"/></literal>
              <literal type="string" pos:line="52" pos:column="15">"certificate format"<pos:position pos:line="52" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>
        <return pos:line="53" pos:column="9">return <expr><name pos:line="53" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="53" pos:column="39"/></name></expr>;<pos:position pos:line="53" pos:column="40"/></return>

      <comment type="block" pos:line="55" pos:column="7">/* These are all certificate problems with the client: */</comment>
      <case pos:line="56" pos:column="7">case <expr><name pos:line="56" pos:column="12">errSecAuthFailed<pos:position pos:line="56" pos:column="28"/></name></expr>:<pos:position pos:line="56" pos:column="29"/></case>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">failf<pos:position pos:line="57" pos:column="14"/></name><argument_list pos:line="57" pos:column="14">(<argument><expr><name pos:line="57" pos:column="15">data<pos:position pos:line="57" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="21">"SSL authentication failed"<pos:position pos:line="57" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="50"/></expr_stmt>
        <return pos:line="58" pos:column="9">return <expr><name pos:line="58" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="58" pos:column="39"/></name></expr>;<pos:position pos:line="58" pos:column="40"/></return>
      <case pos:line="59" pos:column="7">case <expr><name pos:line="59" pos:column="12">errSSLPeerHandshakeFail<pos:position pos:line="59" pos:column="35"/></name></expr>:<pos:position pos:line="59" pos:column="36"/></case>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">failf<pos:position pos:line="60" pos:column="14"/></name><argument_list pos:line="60" pos:column="14">(<argument><expr><name pos:line="60" pos:column="15">data<pos:position pos:line="60" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="21">"SSL peer handshake failed, the server most likely "<pos:position pos:line="60" pos:column="73"/></literal>
              <literal type="string" pos:line="61" pos:column="15">"requires a client certificate to connect"<pos:position pos:line="61" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="59"/></expr_stmt>
        <return pos:line="62" pos:column="9">return <expr><name pos:line="62" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="62" pos:column="39"/></name></expr>;<pos:position pos:line="62" pos:column="40"/></return>
      <case pos:line="63" pos:column="7">case <expr><name pos:line="63" pos:column="12">errSSLPeerUnknownCA<pos:position pos:line="63" pos:column="31"/></name></expr>:<pos:position pos:line="63" pos:column="32"/></case>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">failf<pos:position pos:line="64" pos:column="14"/></name><argument_list pos:line="64" pos:column="14">(<argument><expr><name pos:line="64" pos:column="15">data<pos:position pos:line="64" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="21">"SSL server rejected the client certificate due to "<pos:position pos:line="64" pos:column="73"/></literal>
              <literal type="string" pos:line="65" pos:column="15">"the certificate being signed by an unknown certificate "<pos:position pos:line="65" pos:column="72"/></literal>
              <literal type="string" pos:line="66" pos:column="15">"authority"<pos:position pos:line="66" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt>
        <return pos:line="67" pos:column="9">return <expr><name pos:line="67" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="67" pos:column="39"/></name></expr>;<pos:position pos:line="67" pos:column="40"/></return>

      <comment type="block" pos:line="69" pos:column="7">/* This error is raised if the server's cert didn't match the server's
         host name: */</comment>
      <case pos:line="71" pos:column="7">case <expr><name pos:line="71" pos:column="12">errSSLHostNameMismatch<pos:position pos:line="71" pos:column="34"/></name></expr>:<pos:position pos:line="71" pos:column="35"/></case>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">failf<pos:position pos:line="72" pos:column="14"/></name><argument_list pos:line="72" pos:column="14">(<argument><expr><name pos:line="72" pos:column="15">data<pos:position pos:line="72" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="21">"SSL certificate peer verification failed, the "<pos:position pos:line="72" pos:column="69"/></literal>
              <literal type="string" pos:line="73" pos:column="15">"certificate did not match \"%s\"\n"<pos:position pos:line="73" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="53">conn<pos:position pos:line="73" pos:column="57"/></name><operator pos:line="73" pos:column="57">-&gt;<pos:position pos:line="73" pos:column="62"/></operator><name pos:line="73" pos:column="59">host<pos:position pos:line="73" pos:column="63"/></name><operator pos:line="73" pos:column="63">.<pos:position pos:line="73" pos:column="64"/></operator><name pos:line="73" pos:column="64">dispname<pos:position pos:line="73" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="74"/></expr_stmt>
        <return pos:line="74" pos:column="9">return <expr><name pos:line="74" pos:column="16">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="74" pos:column="46"/></name></expr>;<pos:position pos:line="74" pos:column="47"/></return>

      <comment type="block" pos:line="76" pos:column="7">/* Generic handshake errors: */</comment>
      <case pos:line="77" pos:column="7">case <expr><name pos:line="77" pos:column="12">errSSLConnectionRefused<pos:position pos:line="77" pos:column="35"/></name></expr>:<pos:position pos:line="77" pos:column="36"/></case>
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">failf<pos:position pos:line="78" pos:column="14"/></name><argument_list pos:line="78" pos:column="14">(<argument><expr><name pos:line="78" pos:column="15">data<pos:position pos:line="78" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="21">"Server dropped the connection during the SSL handshake"<pos:position pos:line="78" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="79"/></expr_stmt>
        <return pos:line="79" pos:column="9">return <expr><name pos:line="79" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="79" pos:column="39"/></name></expr>;<pos:position pos:line="79" pos:column="40"/></return>
      <case pos:line="80" pos:column="7">case <expr><name pos:line="80" pos:column="12">errSSLClosedAbort<pos:position pos:line="80" pos:column="29"/></name></expr>:<pos:position pos:line="80" pos:column="30"/></case>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">failf<pos:position pos:line="81" pos:column="14"/></name><argument_list pos:line="81" pos:column="14">(<argument><expr><name pos:line="81" pos:column="15">data<pos:position pos:line="81" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="21">"Server aborted the SSL handshake"<pos:position pos:line="81" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="57"/></expr_stmt>
        <return pos:line="82" pos:column="9">return <expr><name pos:line="82" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="82" pos:column="39"/></name></expr>;<pos:position pos:line="82" pos:column="40"/></return>
      <case pos:line="83" pos:column="7">case <expr><name pos:line="83" pos:column="12">errSSLNegotiation<pos:position pos:line="83" pos:column="29"/></name></expr>:<pos:position pos:line="83" pos:column="30"/></case>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">failf<pos:position pos:line="84" pos:column="14"/></name><argument_list pos:line="84" pos:column="14">(<argument><expr><name pos:line="84" pos:column="15">data<pos:position pos:line="84" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="21">"Could not negotiate an SSL cipher suite with the server"<pos:position pos:line="84" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="80"/></expr_stmt>
        <return pos:line="85" pos:column="9">return <expr><name pos:line="85" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="85" pos:column="39"/></name></expr>;<pos:position pos:line="85" pos:column="40"/></return>
      <comment type="block" pos:line="86" pos:column="7">/* Sometimes paramErr happens with buggy ciphers: */</comment>
      <case pos:line="87" pos:column="7">case <expr><name pos:line="87" pos:column="12">paramErr<pos:position pos:line="87" pos:column="20"/></name></expr>:<pos:position pos:line="87" pos:column="21"/></case> <case pos:line="87" pos:column="22">case <expr><name pos:line="87" pos:column="27">errSSLInternal<pos:position pos:line="87" pos:column="41"/></name></expr>:<pos:position pos:line="87" pos:column="42"/></case>
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">failf<pos:position pos:line="88" pos:column="14"/></name><argument_list pos:line="88" pos:column="14">(<argument><expr><name pos:line="88" pos:column="15">data<pos:position pos:line="88" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="21">"Internal SSL engine error encountered during the "<pos:position pos:line="88" pos:column="72"/></literal>
              <literal type="string" pos:line="89" pos:column="15">"SSL handshake"<pos:position pos:line="89" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="32"/></expr_stmt>
        <return pos:line="90" pos:column="9">return <expr><name pos:line="90" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="90" pos:column="39"/></name></expr>;<pos:position pos:line="90" pos:column="40"/></return>
      <case pos:line="91" pos:column="7">case <expr><name pos:line="91" pos:column="12">errSSLFatalAlert<pos:position pos:line="91" pos:column="28"/></name></expr>:<pos:position pos:line="91" pos:column="29"/></case>
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">failf<pos:position pos:line="92" pos:column="14"/></name><argument_list pos:line="92" pos:column="14">(<argument><expr><name pos:line="92" pos:column="15">data<pos:position pos:line="92" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="21">"Fatal SSL engine error encountered during the SSL "<pos:position pos:line="92" pos:column="73"/></literal>
              <literal type="string" pos:line="93" pos:column="15">"handshake"<pos:position pos:line="93" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="28"/></expr_stmt>
        <return pos:line="94" pos:column="9">return <expr><name pos:line="94" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="94" pos:column="39"/></name></expr>;<pos:position pos:line="94" pos:column="40"/></return>
      <default pos:line="95" pos:column="7">default:<pos:position pos:line="95" pos:column="15"/></default>
        <expr_stmt><expr><call><name pos:line="96" pos:column="9">failf<pos:position pos:line="96" pos:column="14"/></name><argument_list pos:line="96" pos:column="14">(<argument><expr><name pos:line="96" pos:column="15">data<pos:position pos:line="96" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="21">"Unknown SSL protocol error in connection to %s:%d"<pos:position pos:line="96" pos:column="72"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="97" pos:column="15">conn<pos:position pos:line="97" pos:column="19"/></name><operator pos:line="97" pos:column="19">-&gt;<pos:position pos:line="97" pos:column="24"/></operator><name pos:line="97" pos:column="21">host<pos:position pos:line="97" pos:column="25"/></name><operator pos:line="97" pos:column="25">.<pos:position pos:line="97" pos:column="26"/></operator><name pos:line="97" pos:column="26">name<pos:position pos:line="97" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="32">err<pos:position pos:line="97" pos:column="35"/></name></expr></argument>)<pos:position pos:line="97" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="37"/></expr_stmt>
        <return pos:line="98" pos:column="9">return <expr><name pos:line="98" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="98" pos:column="39"/></name></expr>;<pos:position pos:line="98" pos:column="40"/></return>
    }<pos:position pos:line="99" pos:column="6"/></block></switch>
  }<pos:position pos:line="100" pos:column="4"/></block></then>
  <else pos:line="101" pos:column="3">else <block pos:line="101" pos:column="8">{
    <comment type="block" pos:line="102" pos:column="5">/* we have been connected fine, we're not waiting for anything else. */</comment>
    <expr_stmt><expr><name><name pos:line="103" pos:column="5">connssl<pos:position pos:line="103" pos:column="12"/></name><operator pos:line="103" pos:column="12">-&gt;<pos:position pos:line="103" pos:column="17"/></operator><name pos:line="103" pos:column="14">connecting_state<pos:position pos:line="103" pos:column="30"/></name></name> <operator pos:line="103" pos:column="31">=<pos:position pos:line="103" pos:column="32"/></operator> <name pos:line="103" pos:column="33">ssl_connect_3<pos:position pos:line="103" pos:column="46"/></name></expr>;<pos:position pos:line="103" pos:column="47"/></expr_stmt>

    <comment type="block" pos:line="105" pos:column="5">/* Informational message */</comment>
    <expr_stmt><expr><operator pos:line="106" pos:column="5">(<pos:position pos:line="106" pos:column="6"/></operator><name pos:line="106" pos:column="6">void<pos:position pos:line="106" pos:column="10"/></name><operator pos:line="106" pos:column="10">)<pos:position pos:line="106" pos:column="11"/></operator><call><name pos:line="106" pos:column="11">SSLGetNegotiatedCipher<pos:position pos:line="106" pos:column="33"/></name><argument_list pos:line="106" pos:column="33">(<argument><expr><name><name pos:line="106" pos:column="34">connssl<pos:position pos:line="106" pos:column="41"/></name><operator pos:line="106" pos:column="41">-&gt;<pos:position pos:line="106" pos:column="46"/></operator><name pos:line="106" pos:column="43">ssl_ctx<pos:position pos:line="106" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="52">&amp;<pos:position pos:line="106" pos:column="57"/></operator><name pos:line="106" pos:column="53">cipher<pos:position pos:line="106" pos:column="59"/></name></expr></argument>)<pos:position pos:line="106" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="107" pos:column="5">(<pos:position pos:line="107" pos:column="6"/></operator><name pos:line="107" pos:column="6">void<pos:position pos:line="107" pos:column="10"/></name><operator pos:line="107" pos:column="10">)<pos:position pos:line="107" pos:column="11"/></operator><call><name pos:line="107" pos:column="11">SSLGetNegotiatedProtocolVersion<pos:position pos:line="107" pos:column="42"/></name><argument_list pos:line="107" pos:column="42">(<argument><expr><name><name pos:line="107" pos:column="43">connssl<pos:position pos:line="107" pos:column="50"/></name><operator pos:line="107" pos:column="50">-&gt;<pos:position pos:line="107" pos:column="55"/></operator><name pos:line="107" pos:column="52">ssl_ctx<pos:position pos:line="107" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="61">&amp;<pos:position pos:line="107" pos:column="66"/></operator><name pos:line="107" pos:column="62">protocol<pos:position pos:line="107" pos:column="70"/></name></expr></argument>)<pos:position pos:line="107" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="72"/></expr_stmt>
    <switch pos:line="108" pos:column="5">switch <condition pos:line="108" pos:column="12">(<expr><name pos:line="108" pos:column="13">protocol<pos:position pos:line="108" pos:column="21"/></name></expr>)<pos:position pos:line="108" pos:column="22"/></condition> <block pos:line="108" pos:column="23">{
      <case pos:line="109" pos:column="7">case <expr><name pos:line="109" pos:column="12">kSSLProtocol2<pos:position pos:line="109" pos:column="25"/></name></expr>:<pos:position pos:line="109" pos:column="26"/></case>
        <expr_stmt><expr><call><name pos:line="110" pos:column="9">infof<pos:position pos:line="110" pos:column="14"/></name><argument_list pos:line="110" pos:column="14">(<argument><expr><name pos:line="110" pos:column="15">data<pos:position pos:line="110" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="21">"SSL 2.0 connection using %s\n"<pos:position pos:line="110" pos:column="52"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="111" pos:column="15">SSLCipherNameForNumber<pos:position pos:line="111" pos:column="37"/></name><argument_list pos:line="111" pos:column="37">(<argument><expr><name pos:line="111" pos:column="38">cipher<pos:position pos:line="111" pos:column="44"/></name></expr></argument>)<pos:position pos:line="111" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="47"/></expr_stmt>
        <break pos:line="112" pos:column="9">break;<pos:position pos:line="112" pos:column="15"/></break>
      <case pos:line="113" pos:column="7">case <expr><name pos:line="113" pos:column="12">kSSLProtocol3<pos:position pos:line="113" pos:column="25"/></name></expr>:<pos:position pos:line="113" pos:column="26"/></case>
        <expr_stmt><expr><call><name pos:line="114" pos:column="9">infof<pos:position pos:line="114" pos:column="14"/></name><argument_list pos:line="114" pos:column="14">(<argument><expr><name pos:line="114" pos:column="15">data<pos:position pos:line="114" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="21">"SSL 3.0 connection using %s\n"<pos:position pos:line="114" pos:column="52"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="115" pos:column="15">SSLCipherNameForNumber<pos:position pos:line="115" pos:column="37"/></name><argument_list pos:line="115" pos:column="37">(<argument><expr><name pos:line="115" pos:column="38">cipher<pos:position pos:line="115" pos:column="44"/></name></expr></argument>)<pos:position pos:line="115" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="115" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="47"/></expr_stmt>
        <break pos:line="116" pos:column="9">break;<pos:position pos:line="116" pos:column="15"/></break>
      <case pos:line="117" pos:column="7">case <expr><name pos:line="117" pos:column="12">kTLSProtocol1<pos:position pos:line="117" pos:column="25"/></name></expr>:<pos:position pos:line="117" pos:column="26"/></case>
        <expr_stmt><expr><call><name pos:line="118" pos:column="9">infof<pos:position pos:line="118" pos:column="14"/></name><argument_list pos:line="118" pos:column="14">(<argument><expr><name pos:line="118" pos:column="15">data<pos:position pos:line="118" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="21">"TLS 1.0 connection using %s\n"<pos:position pos:line="118" pos:column="52"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="119" pos:column="15">TLSCipherNameForNumber<pos:position pos:line="119" pos:column="37"/></name><argument_list pos:line="119" pos:column="37">(<argument><expr><name pos:line="119" pos:column="38">cipher<pos:position pos:line="119" pos:column="44"/></name></expr></argument>)<pos:position pos:line="119" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="119" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="47"/></expr_stmt>
        <break pos:line="120" pos:column="9">break;<pos:position pos:line="120" pos:column="15"/></break>
<cpp:if pos:line="121" pos:column="1">#<cpp:directive pos:line="121" pos:column="2">if<pos:position pos:line="121" pos:column="4"/></cpp:directive> <expr><name pos:line="121" pos:column="5">CURL_BUILD_MAC_10_8<pos:position pos:line="121" pos:column="24"/></name> <operator pos:line="121" pos:column="25">||<pos:position pos:line="121" pos:column="27"/></operator> <name pos:line="121" pos:column="28">CURL_BUILD_IOS<pos:position pos:line="121" pos:column="42"/></name></expr></cpp:if>
      <case pos:line="122" pos:column="7">case <expr><name pos:line="122" pos:column="12">kTLSProtocol11<pos:position pos:line="122" pos:column="26"/></name></expr>:<pos:position pos:line="122" pos:column="27"/></case>
        <expr_stmt><expr><call><name pos:line="123" pos:column="9">infof<pos:position pos:line="123" pos:column="14"/></name><argument_list pos:line="123" pos:column="14">(<argument><expr><name pos:line="123" pos:column="15">data<pos:position pos:line="123" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="21">"TLS 1.1 connection using %s\n"<pos:position pos:line="123" pos:column="52"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="124" pos:column="15">TLSCipherNameForNumber<pos:position pos:line="124" pos:column="37"/></name><argument_list pos:line="124" pos:column="37">(<argument><expr><name pos:line="124" pos:column="38">cipher<pos:position pos:line="124" pos:column="44"/></name></expr></argument>)<pos:position pos:line="124" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="124" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="47"/></expr_stmt>
        <break pos:line="125" pos:column="9">break;<pos:position pos:line="125" pos:column="15"/></break>
      <case pos:line="126" pos:column="7">case <expr><name pos:line="126" pos:column="12">kTLSProtocol12<pos:position pos:line="126" pos:column="26"/></name></expr>:<pos:position pos:line="126" pos:column="27"/></case>
        <expr_stmt><expr><call><name pos:line="127" pos:column="9">infof<pos:position pos:line="127" pos:column="14"/></name><argument_list pos:line="127" pos:column="14">(<argument><expr><name pos:line="127" pos:column="15">data<pos:position pos:line="127" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="21">"TLS 1.2 connection using %s\n"<pos:position pos:line="127" pos:column="52"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="128" pos:column="15">TLSCipherNameForNumber<pos:position pos:line="128" pos:column="37"/></name><argument_list pos:line="128" pos:column="37">(<argument><expr><name pos:line="128" pos:column="38">cipher<pos:position pos:line="128" pos:column="44"/></name></expr></argument>)<pos:position pos:line="128" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="128" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="47"/></expr_stmt>
        <break pos:line="129" pos:column="9">break;<pos:position pos:line="129" pos:column="15"/></break>
<cpp:endif pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">endif<pos:position pos:line="130" pos:column="7"/></cpp:directive></cpp:endif>
      <default pos:line="131" pos:column="7">default:<pos:position pos:line="131" pos:column="15"/></default>
        <expr_stmt><expr><call><name pos:line="132" pos:column="9">infof<pos:position pos:line="132" pos:column="14"/></name><argument_list pos:line="132" pos:column="14">(<argument><expr><name pos:line="132" pos:column="15">data<pos:position pos:line="132" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="21">"Unknown protocol connection\n"<pos:position pos:line="132" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="54"/></expr_stmt>
        <break pos:line="133" pos:column="9">break;<pos:position pos:line="133" pos:column="15"/></break>
    }<pos:position pos:line="134" pos:column="6"/></block></switch>

    <return pos:line="136" pos:column="5">return <expr><name pos:line="136" pos:column="12">CURLE_OK<pos:position pos:line="136" pos:column="20"/></name></expr>;<pos:position pos:line="136" pos:column="21"/></return>
  }<pos:position pos:line="137" pos:column="4"/></block></else></if>
}<pos:position pos:line="138" pos:column="2"/></block></function></unit>
